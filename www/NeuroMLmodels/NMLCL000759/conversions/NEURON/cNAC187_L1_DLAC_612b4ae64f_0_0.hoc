// Cell: cNAC187_L1_DLAC_612b4ae64f_0_0
/*
{
  "id" : "cNAC187_L1_DLAC_612b4ae64f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.00951, 5.08132, 0.0, 4.38636", "-6.34112, 4.62908, 0.0, 7.80444", "-5.67273, 4.17685, 0.0, 10.4664", "-5.00435, 3.72461, 0.0, 11.8372", "-4.33596, 3.27237, 0.0, 12.8115", "-3.66757, 2.82013, 0.0, 13.5463", "-2.99919, 2.36789, 0.0, 14.0993", "-2.3308, 1.91565, 0.0, 14.4262", "-1.66241, 1.46342, 0.0, 14.2857", "-0.994026, 1.01118, 0.0, 14.2244", "-0.325639, 0.55894, 0.0, 14.1556", "0.342748, 0.106702, 0.0, 13.8899", "1.01114, -0.345536, 0.0, 13.1949", "1.67952, -0.797774, 0.0, 12.4248", "2.34791, -1.25001, 0.0, 11.902", "3.0163, -1.70225, 0.0, 11.0988", "3.68468, -2.15449, 0.0, 10.0172", "4.35307, -2.60673, 0.0, 8.82625", "5.02146, -3.05897, 0.0, 7.39062", "5.68984, -3.5112, 0.0, 5.46094", "6.35823, -3.96344, 0.0, 3.2092" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "5.5102, -6.49826, -5.14, 4.99", "6.02007, -7.05082, -5.789, 4.99", "6.74191, -7.83311, -6.7078, 4.04", "7.6376, -8.8038, -7.8479, 3.01", "8.833, -10.0993, -9.36949, 3.01", "9.67609, -11.013, -10.4426, 3.16" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999818776125
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "5.4902, -5.67826, -0.700001, 2.94", "5.77928, -5.93293, -0.700001, 2.94", "6.28522, -6.37864, -0.700001, 3.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999818776125
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.5502, 7.82099, -6.11, 0.73", "1.52936, 8.45777, -6.04202, 0.73", "1.51126, 9.44122, -5.90998, 0.73", "1.51829, 10.1984, -5.80866, 0.73", "1.58655, 11.7734, -5.63235, 0.73", "1.68216, 13.3613, -5.50551, 0.95", "1.77077, 14.9123, -5.41148, 0.95", "1.84688, 15.867, -5.40021, 0.95", "2.01481, 17.4093, -5.44965, 0.66", "2.15249, 18.6289, -5.54525, 0.66", "2.26256, 19.6778, -5.67143, 0.66", "2.33683, 20.3686, -5.80046, 0.81", "2.48372, 21.7408, -6.18884, 0.81", "2.54914, 22.3569, -6.39231, 0.81", "2.63327, 23.5538, -6.86641, 1.1" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999818776125
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "3.1702, 7.34949, -2.39, 1.32", "3.20714, 7.60478, -2.22669, 1.32", "3.43322, 9.16709, -1.22725, 1.32", "3.62559, 10.4965, -0.376805, 1.47", "3.77253, 11.5119, 0.272785, 1.54", "3.87337, 12.2087, 0.718558, 1.62", "4.08992, 13.7052, 1.67588, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999818776125
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.9298, -0.276513, -5.05, 1.47", "-8.08678, -0.240996, -5.0767, 1.47", "-9.2155, -0.0155831, -5.24971, 1.25", "-10.1208, 0.0945069, -5.3702, 0.88", "-11.1686, 0.221933, -5.50966, 0.95", "-11.9466, 0.316556, -5.61322, 0.95", "-12.935, 0.436756, -5.74478, 0.95", "-13.878, 0.534947, -5.85347, 1.54", "-15.0986, 0.592004, -5.9399, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999818776125
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.5298, -2.96201, -0.280001, 0.73", "-6.87618, -3.82237, -0.0380076, 0.73", "-7.07099, -4.65554, 0.177013, 0.73", "-7.14542, -5.13865, 0.290772, 0.88", "-7.21541, -5.80886, 0.461793, 0.88", "-7.26117, -6.31795, 0.600579, 0.88", "-7.30648, -6.97862, 0.780452, 0.88", "-7.30053, -8.41488, 1.1675, 0.59", "-7.27337, -9.20413, 1.37668, 0.59", "-7.2197, -10.4609, 1.71422, 0.81", "-7.16159, -11.803, 2.06994, 1.54", "-7.13348, -12.4135, 2.23709, 1.54", "-7.10574, -13.0307, 2.40548, 1.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999818776125
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.35823, -3.96344, 0.0, 0.711861", "18.7817, -12.3693, 0.0, 0.711861", "31.2051, -20.7751, 0.0, 0.711861" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "9.67609, -11.013, -10.4426, 2.28", "10.7246, -10.473, -10.9492, 2.28", "11.2406, -10.2073, -11.1985, 2.57", "12.2779, -9.67299, -11.6996, 1.32", "13.6447, -8.96908, -12.3599, 1.47", "14.4082, -8.57589, -12.7288, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "9.67609, -11.013, -10.4426, 1.54", "9.01438, -12.0644, -10.7807, 1.54", "8.58796, -12.7708, -11.0155, 1.54", "7.9234, -13.944, -11.4681, 1.54", "7.72041, -14.3094, -11.6584, 1.54", "7.47899, -14.7752, -11.9281, 1.54", "7.19691, -15.3195, -12.2433, 1.54", "6.97181, -15.8236, -12.569, 1.54", "6.66885, -16.5226, -13.0827, 1.54", "6.22453, -17.5996, -13.9756, 1.54", "5.84974, -18.5089, -14.8022, 1.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "6.28522, -6.37864, -0.700001, 0.95", "8.82482, -6.31677, -0.122445, 0.95", "11.3667, -6.25484, 0.455633, 0.95", "13.6219, -6.19989, 0.968509, 0.81", "14.7369, -6.17273, 1.22208, 1.1", "16.8302, -6.12173, 1.69815, 1.18", "18.1406, -6.0898, 1.99615, 1.4" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.28522, -6.37864, -0.700001, 0.88", "6.73371, -8.24407, -1.19498, 0.88", "6.97832, -9.24528, -1.41415, 0.88", "7.40352, -10.9297, -1.7319, 1.18", "7.86309, -12.6854, -1.9831, 0.66", "8.218, -14.0017, -2.12137, 0.88", "8.43622, -14.7819, -2.16508, 0.95", "8.79078, -15.9067, -2.14363, 1.1", "8.97562, -16.4673, -2.11143, 1.1", "9.28137, -17.361, -1.97861, 1.1", "9.57785, -18.2948, -1.82385, 1.1", "9.91937, -19.3922, -1.51334, 1.47" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.63327, 23.5538, -6.86641, 0.66", "2.51829, 24.2542, -7.21261, 0.66", "2.45211, 24.8787, -7.49672, 0.66", "2.41548, 25.5153, -7.83162, 0.66", "2.37029, 26.1271, -8.1957, 0.81", "2.33412, 26.5128, -8.45945, 0.81", "2.29974, 26.853, -8.70066, 0.81", "2.27349, 27.2575, -9.00401, 0.95", "2.22375, 27.9986, -9.60527, 0.73", "2.19503, 28.4227, -9.958, 0.73", "2.15323, 29.0857, -10.4841, 0.88", "2.13857, 29.3907, -10.7252, 1.03", "2.13196, 29.9308, -11.118, 0.73", "2.14552, 30.2658, -11.3356, 0.73", "2.19486, 30.836, -11.6392, 0.81", "2.25892, 31.2333, -11.8218, 0.59", "2.34447, 31.6246, -11.9722, 0.59", "2.44326, 32.0006, -12.1184, 0.88", "2.51478, 32.2182, -12.1909, 1.1" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.63327, 23.5538, -6.86641, 0.29", "3.83831, 23.4185, -6.62616, 0.29", "4.99747, 23.2895, -6.38707, 0.37", "5.26151, 23.2502, -6.34052, 0.29", "5.73586, 23.1569, -6.25943, 0.29", "6.95783, 22.8784, -6.04954, 0.51", "7.83733, 22.6643, -5.89665, 0.29", "8.86393, 22.3826, -5.70671, 0.51", "10.0927, 22.0364, -5.48718, 0.29", "10.7299, 21.8915, -5.38601, 0.29", "11.0394, 21.8453, -5.37084, 0.29", "11.1891, 21.8469, -5.38681, 0.29", "11.772, 21.926, -5.48271, 0.29", "12.4203, 22.0489, -5.61308, 0.29", "13.0669, 22.1532, -5.74544, 0.73", "14.639, 22.2705, -6.03185, 0.73", "16.1124, 22.2495, -6.24736, 0.73", "17.0551, 22.1689, -6.35582, 0.73", "18.143, 22.0022, -6.43553, 0.44", "19.5961, 21.6919, -6.5279, 0.44", "20.8919, 21.3403, -6.59841, 0.59", "21.6757, 21.0738, -6.61062, 0.22", "21.8376, 21.0052, -6.61428, 0.59", "22.8486, 20.5277, -6.66221, 0.29", "23.61, 20.1645, -6.6944, 0.59", "25.2022, 19.4692, -6.78046, 0.22", "26.2175, 19.0753, -6.82508, 0.73", "27.1061, 18.7523, -6.86232, 0.66", "27.9438, 18.4517, -6.90114, 0.37", "28.5954, 18.2303, -6.93111, 0.37", "29.7491, 17.9034, -6.9708, 0.81", "30.8835, 17.6561, -6.99636, 0.37", "31.7591, 17.4948, -7.01114, 0.15", "32.9643, 17.2979, -7.03315, 0.15", "33.653, 17.1736, -7.02266, 0.59", "34.7321, 16.931, -6.97368, 0.59", "35.5668, 16.7112, -6.91369, 0.07", "36.3301, 16.5239, -6.85464, 0.07", "36.9704, 16.3884, -6.77539, 0.81", "38.6423, 16.069, -6.55658, 0.44", "39.4541, 15.9176, -6.45377, 0.07", "40.3837, 15.7497, -6.33638, 0.81", "41.4534, 15.5766, -6.23161, 0.29", "42.6343, 15.4226, -6.16663, 0.66", "43.9906, 15.2668, -6.12391, 0.22", "44.5872, 15.2114, -6.14862, 0.44", "45.4451, 15.1341, -6.22768, 0.07", "46.1172, 15.0497, -6.32146, 0.44", "47.3285, 14.8298, -6.52556, 0.07", "47.8711, 14.6923, -6.64074, 0.44", "48.6875, 14.425, -6.8022, 0.07", "49.7552, 14.0287, -7.01396, 0.81", "51.0258, 13.5201, -7.21945, 0.07", "51.7819, 13.1906, -7.29484, 0.37", "53.1923, 12.5184, -7.38501, 0.59", "54.1422, 12.0603, -7.42962, 0.59", "54.9822, 11.6421, -7.44015, 0.07", "55.9349, 11.1639, -7.43383, 1.1", "57.6229, 10.3434, -7.40046, 0.22", "58.4286, 9.97624, -7.39663, 0.22", "59.6353, 9.47823, -7.38558, 0.88" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.08992, 13.7052, 1.67588, 0.81", "5.76757, 14.1282, 1.1351, 0.81", "7.82471, 14.647, 0.472012, 0.81", "10.1467, 15.2325, -0.276465, 0.81", "11.8033, 15.6503, -0.810452, 0.81", "13.1321, 15.9853, -1.23876, 1.47" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.08992, 13.7052, 1.67588, 0.81", "2.69505, 14.3051, 2.07909, 0.81", "1.90829, 14.6219, 2.30778, 0.81", "1.26689, 14.8858, 2.49999, 0.81", "-0.483347, 15.6729, 3.02752, 0.66", "-2.23716, 16.5295, 3.55714, 0.88", "-3.01175, 16.9196, 3.78898, 0.44", "-3.58907, 17.1808, 3.9632, 0.44", "-4.1196, 17.451, 4.1101, 0.44", "-4.87822, 17.9358, 4.29368, 0.73", "-5.20039, 18.1933, 4.33392, 0.88", "-5.55758, 18.5323, 4.36624, 0.88", "-6.42778, 19.4051, 4.42103, 0.95", "-7.43103, 20.3884, 4.48444, 0.44", "-8.16479, 21.0365, 4.53908, 0.59", "-9.03663, 21.6591, 4.58274, 0.29", "-9.37664, 21.8942, 4.60062, 0.29", "-9.92347, 22.2711, 4.63296, 0.29", "-10.6236, 22.6984, 4.68913, 0.29", "-11.3675, 22.9792, 4.78445, 0.29", "-12.7579, 23.2982, 4.92959, 0.59" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-15.0986, 0.592004, -5.9399, 0.95", "-15.5021, 0.474568, -5.09484, 0.95", "-16.1074, 0.151799, -3.89755, 0.81", "-16.8128, -0.390217, -2.58336, 1.03", "-17.0576, -0.623467, -2.16518, 1.03", "-17.3014, -0.915499, -1.75896, 0.73", "-17.6896, -1.50403, -1.07244, 0.51", "-17.86, -1.98332, -0.748719, 0.51", "-17.9176, -2.50807, -0.546027, 0.88", "-17.9081, -2.94873, -0.437237, 0.88", "-17.8511, -3.5716, -0.283717, 0.88", "-17.7687, -4.22104, -0.0754986, 1.03", "-17.7126, -4.64028, 0.0760593, 1.03", "-17.5915, -5.56243, 0.436172, 0.44", "-17.5316, -6.10858, 0.655886, 0.44", "-17.4925, -6.90216, 0.961672, 1.1", "-17.593, -8.04778, 1.36645, 0.51", "-17.6935, -8.45316, 1.48676, 0.51", "-17.8564, -8.8508, 1.58386, 0.51", "-17.9832, -9.07586, 1.62489, 0.51", "-18.3976, -9.65475, 1.69716, 0.66", "-18.9773, -10.3185, 1.72253, 0.66", "-19.585, -10.9281, 1.70289, 0.73", "-20.1974, -11.5399, 1.68094, 0.95", "-20.351, -11.6955, 1.67913, 0.95", "-20.9115, -12.2978, 1.68268, 0.66", "-21.3361, -12.7777, 1.69241, 0.44", "-21.9705, -13.524, 1.71406, 0.88", "-22.3691, -14.0202, 1.73356, 0.59", "-22.6411, -14.3904, 1.74937, 0.59", "-22.9396, -14.8629, 1.75338, 0.59", "-23.1816, -15.3052, 1.72686, 0.59", "-23.5057, -15.893, 1.64836, 0.95", "-23.9174, -16.6336, 1.50358, 0.59", "-24.1267, -17.0055, 1.41479, 0.59", "-24.4885, -17.6642, 1.24086, 0.59", "-24.7617, -18.2207, 1.09353, 0.59", "-25.2207, -19.3907, 0.799756, 0.59", "-25.3182, -19.6977, 0.737605, 0.59", "-25.472, -20.2595, 0.623847, 0.88", "-25.6973, -21.1271, 0.458694, 0.95", "-25.8734, -21.8085, 0.340544, 0.66", "-26.18, -23.046, 0.103101, 0.51", "-26.3548, -23.8019, -0.0944159, 0.51", "-26.5718, -24.6552, -0.363575, 0.51", "-26.7023, -25.1288, -0.562168, 0.37", "-26.8736, -25.6815, -0.841606, 0.29", "-27.0957, -26.2395, -1.18042, 0.81", "-27.3361, -26.7224, -1.54071, 0.88", "-27.5988, -27.1756, -1.91709, 1.03", "-28.2003, -28.0765, -2.6908, 0.37", "-28.3817, -28.3148, -2.94011, 0.37", "-28.6867, -28.6434, -3.36369, 0.37", "-28.9852, -28.8844, -3.74846, 0.37", "-29.3059, -29.0714, -4.13491, 0.66", "-29.5728, -29.1627, -4.44582, 0.44", "-30.2893, -29.2238, -5.2227, 0.44", "-30.4506, -29.2208, -5.40824, 1.32", "-30.5666, -29.2084, -5.55015, 1.32" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.0986, 0.592004, -5.9399, 1.1", "-15.5099, -0.834882, -6.42294, 1.1", "-15.7734, -1.80603, -6.778, 0.95", "-16.0316, -2.82905, -7.1558, 0.88", "-16.3704, -4.24877, -7.69556, 0.88", "-16.5675, -5.10196, -8.02754, 0.88", "-16.7953, -6.0747, -8.39774, 0.95", "-16.9477, -6.83973, -8.70068, 1.1", "-17.0469, -7.43274, -8.94567, 1.1", "-17.1022, -7.87181, -9.13638, 1.1", "-17.1414, -8.46573, -9.39449, 1.18", "-17.1555, -9.70002, -9.95241, 0.81", "-17.1277, -10.3848, -10.2769, 0.81", "-17.0717, -11.047, -10.5909, 0.88", "-16.9357, -12.3553, -11.226, 1.1", "-16.7417, -13.8475, -11.9549, 0.81", "-16.5667, -14.8756, -12.4735, 0.88", "-16.4711, -15.307, -12.7033, 0.95", "-16.2435, -16.3321, -13.235, 1.32" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.10574, -13.0307, 2.40548, 0.66", "-7.84286, -14.4468, 2.01592, 0.66", "-8.63815, -15.6342, 1.69556, 0.81", "-9.51608, -16.8204, 1.42313, 0.51", "-10.1902, -17.6654, 1.2767, 0.73", "-11.0541, -18.7017, 1.13965, 0.95", "-11.7855, -19.5856, 1.04864, 1.25", "-13.0163, -20.9974, 0.939184, 0.66", "-13.6697, -21.7339, 0.885054, 0.66", "-14.4988, -22.6483, 0.864217, 0.51", "-15.2818, -23.5335, 0.900188, 0.88", "-15.883, -24.2394, 0.989867, 0.44", "-16.6413, -25.2238, 1.19171, 0.44", "-17.2876, -26.083, 1.42431, 0.44", "-17.9775, -26.8987, 1.71164, 0.44", "-18.6705, -27.6279, 2.03285, 0.81", "-19.5322, -28.3944, 2.4342, 1.18", "-20.4677, -29.1342, 2.87045, 0.44", "-21.0391, -29.5467, 3.12974, 0.44", "-22.0053, -30.1988, 3.50365, 0.37", "-22.7223, -30.6961, 3.72199, 0.37", "-24.0505, -31.6591, 4.06406, 0.37", "-24.3424, -31.8898, 4.12294, 0.73", "-25.0751, -32.5227, 4.27055, 0.95", "-26.046, -33.5025, 4.50075, 0.22", "-26.6492, -34.222, 4.68762, 0.22", "-27.0947, -34.8447, 4.89507, 0.73", "-27.5317, -35.5953, 5.17812, 0.37", "-28.1434, -36.7178, 5.61767, 0.66", "-28.4433, -37.3591, 5.88439, 0.29", "-28.8319, -38.3296, 6.31117, 0.29", "-29.1365, -39.1536, 6.71534, 0.15", "-29.4074, -39.9447, 7.13167, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.10574, -13.0307, 2.40548, 0.51", "-6.67471, -13.5595, 1.71567, 0.51", "-6.20867, -14.0191, 1.06048, 0.51", "-5.82506, -14.339, 0.551804, 0.51", "-5.13787, -14.8495, -0.323979, 0.66", "-4.74709, -15.1176, -0.815938, 0.88", "-4.2736, -15.4299, -1.41482, 0.51", "-3.66636, -15.7857, -2.19748, 0.51", "-3.2516, -15.9825, -2.72862, 0.73", "-3.13929, -16.0175, -2.87924, 0.81", "-3.02984, -16.0392, -3.049, 0.81", "-2.94957, -16.052, -3.21452, 0.81", "-2.71803, -16.128, -3.9123, 0.81", "-2.57722, -16.3037, -4.55177, 0.81", "-2.45889, -16.6143, -5.14083, 0.81", "-2.36514, -17.0355, -5.68366, 0.51", "-2.33618, -17.1794, -5.82391, 0.51", "-2.24673, -17.5592, -6.10658, 0.51", "-2.05502, -18.2829, -6.57222, 0.51", "-1.80687, -19.0421, -7.0436, 0.73", "-1.59699, -19.5725, -7.36055, 0.73", "-1.25302, -20.2925, -7.81085, 0.51", "-0.787194, -21.1689, -8.4456, 0.51", "-0.372686, -21.8812, -9.02498, 0.81", "0.304683, -22.9065, -9.99866, 0.44", "0.635742, -23.3475, -10.4974, 0.44", "1.11141, -23.9111, -11.2427, 0.73", "1.66156, -24.5347, -12.2116, 0.59", "1.75568, -24.637, -12.4062, 0.59", "1.90129, -24.8108, -12.7557, 0.59", "2.03141, -25.0155, -13.2531, 0.59", "2.05281, -25.0792, -13.4286, 0.59", "2.03592, -25.2296, -13.8786, 0.59", "2.00704, -25.2964, -14.0947, 0.59", "1.79817, -25.4383, -14.8554, 0.59", "1.68968, -25.3826, -15.0974, 0.59", "1.52695, -25.2427, -15.5195, 0.59", "1.38258, -25.0621, -15.8954, 0.59", "1.2001, -24.7323, -16.5064, 0.59", "1.11335, -24.5518, -16.862, 0.44", "0.92733, -24.1659, -17.6441, 0.59", "0.750952, -23.7907, -18.5736, 0.73", "0.649618, -23.6177, -19.0992, 0.73", "0.431741, -23.3366, -20.11, 0.73", "0.302531, -23.211, -20.6848, 0.73", "0.223415, -23.1468, -21.0777, 0.51", "-0.0468772, -23.0109, -22.2613, 0.44", "-0.251687, -22.9498, -23.0452, 1.03", "-0.317324, -22.9321, -23.2969, 1.03", "-0.568083, -22.8341, -24.2836, 0.73", "-0.823244, -22.639, -25.578, 0.73", "-0.868834, -22.5798, -25.8891, 0.73", "-0.886314, -22.5241, -26.1436, 0.73", "-0.851274, -22.2709, -27.2269, 0.59", "-0.768564, -22.0798, -28.0454, 0.88", "-0.596036, -21.8348, -29.1352, 0.88", "-0.547342, -21.7794, -29.4034, 0.88", "-0.157343, -21.4306, -31.3157, 0.66", "7.76798E-4, -21.3177, -32.006, 0.66", "0.136649, -21.2527, -32.5242, 0.51", "0.3168, -21.1772, -33.1174, 0.51", "0.455026, -21.1064, -33.5154, 0.51", "0.61328, -20.9908, -33.9203, 0.51", "0.867436, -20.7307, -34.471, 0.51", "1.14866, -20.39, -35.0823, 0.51", "1.36727, -20.1069, -35.5239, 0.51", "1.68766, -19.6953, -36.1136, 0.51", "2.00205, -19.3257, -36.6504, 0.44", "2.53818, -18.7601, -37.5614, 0.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "31.2051, -20.7751, 0.0, 0.15", "43.6286, -29.181, 0.0, 0.15", "56.052, -37.5868, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "14.4082, -8.57589, -12.7288, 1.32", "15.2892, -7.75134, -11.8532, 1.32", "16.1867, -6.73833, -10.631, 0.59", "16.8419, -5.99876, -9.73864, 0.59", "17.6009, -5.14212, -8.70504, 0.59", "18.1914, -4.47558, -7.90082, 0.59", "18.9556, -3.61305, -6.86013, 0.88", "19.7042, -2.69327, -5.47128, 1.25" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "14.4082, -8.57589, -12.7288, 1.62", "15.5915, -7.59345, -14.1215, 1.62", "16.2813, -7.02069, -14.9334, 1.76" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "5.84974, -18.5089, -14.8022, 0.81", "6.2715, -18.7294, -16.0289, 0.81", "6.66064, -19.1456, -18.2626, 0.81", "6.91734, -19.5107, -20.4434, 0.81", "6.99298, -19.6353, -21.282, 0.81", "7.07572, -19.7402, -22.1191, 0.81", "7.22092, -19.8588, -23.2345, 0.81", "7.48068, -20.0148, -25.4163, 0.81", "7.57386, -19.995, -25.9807, 0.81", "7.76481, -19.7938, -26.6564, 0.81", "8.12378, -19.4121, -27.6294, 0.81", "8.49918, -19.0404, -28.3869, 0.81", "9.02156, -18.5666, -29.1837, 0.81", "9.96173, -17.7406, -30.3136, 0.81", "11.2825, -16.5005, -31.9488, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "5.84974, -18.5089, -14.8022, 1.1", "5.85005, -18.6629, -15.4117, 1.1", "5.85056, -18.9184, -16.4229, 1.1", "5.85102, -19.1467, -17.3263, 1.1" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "18.1406, -6.0898, 1.99615, 0.81", "18.6159, -5.73024, 2.7172, 0.81", "19.3541, -5.31637, 3.71118, 0.81", "19.9369, -5.1229, 4.45621, 0.95", "20.9846, -4.90638, 5.78814, 0.66", "21.1042, -4.8929, 5.94376, 0.66", "21.4746, -4.86655, 6.42462, 0.66", "22.0679, -4.88241, 7.2702, 0.51", "22.7622, -4.95597, 8.30568, 0.51", "23.2952, -5.03309, 9.13353, 0.73", "23.9065, -5.17102, 10.0431, 0.73", "23.9956, -5.17489, 10.2162, 0.81", "23.8006, -4.78811, 10.6703, 0.81", "23.191, -3.8766, 11.2695, 0.44", "22.8242, -3.36067, 11.4739, 0.51", "22.4404, -2.8448, 11.6058, 0.73", "21.8941, -2.15014, 11.7333, 0.37", "21.5335, -1.71421, 11.8163, 0.37", "21.3239, -1.47667, 11.8643, 0.37", "21.0546, -1.18775, 11.9392, 0.59", "20.742, -0.870716, 11.9931, 0.59", "20.3676, -0.527194, 12.0304, 0.59", "20.0606, -0.320976, 12.0437, 0.59", "19.6084, -0.0948081, 12.0711, 0.59", "19.1589, 0.11236, 12.1069, 0.59", "18.4554, 0.448129, 12.1714, 0.37", "17.9816, 0.697923, 12.2178, 0.37", "17.2835, 1.10791, 12.3092, 0.29", "16.6396, 1.50356, 12.4265, 0.29", "16.1536, 1.778, 12.5336, 0.29", "15.7743, 1.96378, 12.6478, 0.59", "15.2974, 2.16644, 12.8168, 0.59", "14.8068, 2.35392, 13.0259, 0.59", "14.2268, 2.53377, 13.3311, 0.59", "13.2468, 2.70709, 13.9023, 0.59", "12.4815, 2.7305, 14.4039, 0.81", "12.2277, 2.69397, 14.5893, 1.18", "11.6219, 2.46587, 15.0783, 1.1", "11.0017, 2.10435, 15.6406, 0.29", "10.6064, 1.78549, 16.0918, 0.29", "10.1664, 1.36044, 16.6485, 0.29", "9.66786, 0.819937, 17.3016, 0.29", "8.98952, 0.0329149, 18.2365, 0.29", "8.41873, -0.679277, 19.0565, 0.29", "7.76399, -1.52339, 20.0365, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "18.1406, -6.0898, 1.99615, 0.81", "18.4729, -6.57178, 1.32564, 0.81", "18.7957, -7.03378, 0.742446, 0.81", "19.4528, -7.94494, -0.333235, 0.88", "20.1402, -8.87158, -1.36653, 1.1", "20.7475, -9.66333, -2.22733, 0.73", "21.3057, -10.385, -2.98108, 1.1", "21.8556, -11.0958, -3.66893, 0.73", "22.8814, -12.3963, -4.77861, 0.73", "23.9198, -13.6878, -5.79772, 0.73", "24.6618, -14.5609, -6.46171, 1.18", "25.0598, -15.0204, -6.79715, 1.18", "25.3393, -15.3333, -7.02307, 1.18", "26.3733, -16.4999, -7.80838, 0.59" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "9.91937, -19.3922, -1.51334, 0.81", "8.85186, -20.6132, -1.42994, 0.81", "7.89022, -21.7105, -1.39053, 0.51", "6.87925, -22.8801, -1.40653, 0.59", "6.12971, -23.7779, -1.44026, 0.73", "5.40455, -24.6727, -1.44273, 0.88", "4.52836, -25.7557, -1.39615, 0.66", "3.3259, -27.252, -1.27086, 0.51", "2.42969, -28.3969, -1.13516, 0.66", "1.2762, -29.8376, -0.93019, 0.73", "0.475666, -30.7739, -0.720699, 0.73", "-0.481666, -31.8032, -0.389964, 0.81", "-1.65538, -33.041, 0.0732856, 0.73", "-2.78085, -34.1848, 0.602942, 0.59", "-3.84669, -35.1996, 1.15489, 0.59", "-4.99228, -36.1974, 1.7406, 0.59", "-6.27189, -37.248, 2.30109, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "9.91937, -19.3922, -1.51334, 0.95", "10.1631, -19.6357, -1.31373, 0.95", "10.7047, -20.3288, -0.937189, 0.81", "11.3489, -21.2431, -0.496702, 0.88", "11.6205, -21.6511, -0.305004, 0.88", "11.8784, -22.0607, -0.11404, 0.73", "12.2286, -22.6674, 0.160686, 0.73", "12.6243, -23.4807, 0.507104, 0.51", "12.8768, -24.1273, 0.736395, 0.29", "13.0004, -24.5134, 0.852679, 0.29", "13.0878, -24.8172, 0.935527, 0.29", "13.2745, -25.5426, 1.09433, 1.03", "13.4754, -26.5815, 1.24154, 0.44", "13.5702, -27.4426, 1.24249, 0.44", "13.5955, -28.0505, 1.1285, 0.44", "13.5978, -28.683, 0.915888, 0.44", "13.5881, -29.233, 0.680066, 0.37", "13.5744, -29.9125, 0.352089, 0.37", "13.5677, -30.7476, -0.0904676, 1.1", "13.6426, -32.0512, -0.800829, 0.51", "13.7376, -32.654, -1.13655, 0.66", "13.865, -33.1245, -1.39468, 0.66", "14.1752, -33.8724, -1.77784, 0.22", "14.363, -34.2132, -1.93559, 0.29", "14.6643, -34.7013, -2.15698, 0.29", "15.0523, -35.348, -2.41176, 0.37", "15.3175, -35.8764, -2.59774, 0.37", "15.6084, -36.6247, -2.84304, 0.37", "15.82, -37.3774, -3.06838, 0.37", "16.0378, -38.4912, -3.32964, 0.66", "16.1538, -39.3568, -3.483, 0.66", "16.2337, -40.2299, -3.61241, 0.66", "16.2886, -41.0846, -3.72291, 0.66", "16.3116, -41.6815, -3.77823, 0.66", "16.3365, -42.5004, -3.80836, 0.95", "16.35, -42.9674, -3.78277, 0.95" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.51478, 32.2182, -12.1909, 0.73", "3.40993, 32.2546, -12.6141, 0.73", "4.27896, 32.2653, -13.0096, 0.73", "5.85106, 32.2156, -13.6533, 0.29", "6.74762, 32.14, -13.9823, 0.66", "7.72326, 32.0059, -14.2993, 0.51", "8.491, 31.8515, -14.5076, 0.51", "9.10902, 31.661, -14.6356, 0.51", "9.94941, 31.3233, -14.7353, 0.59", "10.8973, 30.8723, -14.7581, 0.22", "11.629, 30.5214, -14.7364, 0.81", "12.9196, 29.9401, -14.6629, 0.44", "13.7565, 29.5975, -14.598, 0.44", "14.6475, 29.282, -14.5186, 0.44", "15.1933, 29.1381, -14.4692, 0.51", "16.1792, 29.0121, -14.3701, 0.51", "16.9177, 29.0368, -14.2961, 0.51", "18.1374, 29.3375, -14.1629, 0.37", "18.3812, 29.451, -14.1395, 0.37", "18.892, 29.8068, -14.1118, 0.66", "19.6364, 30.4714, -14.1142, 0.51", "19.9667, 30.8233, -14.1389, 0.51", "20.4872, 31.4328, -14.1963, 0.81", "21.3981, 32.5343, -14.3644, 0.37", "22.2068, 33.4534, -14.5313, 0.37", "22.9179, 34.1786, -14.6933, 0.37", "23.3836, 34.6144, -14.8138, 0.88", "24.2169, 35.3578, -15.0194, 0.73", "24.8946, 35.9304, -15.1688, 0.44", "25.5037, 36.3961, -15.2514, 0.51", "26.7586, 37.2405, -15.2935, 0.44", "27.9351, 37.9221, -15.2492, 0.37", "28.642, 38.2702, -15.1523, 0.37", "29.1046, 38.4592, -15.0315, 0.66", "30.3692, 38.8484, -14.4799, 0.22", "31.0397, 38.9509, -14.0395, 0.73", "31.7727, 38.8867, -13.3181, 0.15", "32.3929, 38.664, -12.5291, 0.15", "32.7878, 38.3963, -11.9122, 0.73", "33.2098, 37.9802, -11.1144, 0.81", "33.6114, 37.4751, -10.2684, 0.81", "34.0363, 36.8907, -9.3766, 0.51", "34.2974, 36.4986, -8.82952, 0.37", "34.6297, 36.0068, -8.24644, 0.37", "35.0541, 35.4067, -7.65258, 0.22", "35.5437, 34.7599, -7.06717, 0.07", "35.804, 34.4458, -6.80709, 0.07", "36.5624, 33.6168, -6.16052, 0.37", "37.0163, 33.1593, -5.81117, 0.81", "37.4847, 32.6789, -5.49124, 0.81" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "2.51478, 32.2182, -12.1909, 0.66", "2.57539, 32.6692, -12.5878, 0.66", "2.63583, 33.1191, -12.9836, 0.44", "2.71328, 33.6954, -13.4908, 0.73", "2.8051, 34.3787, -14.0921, 0.44", "2.94447, 35.4158, -15.0047, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "13.1321, 15.9853, -1.23876, 0.88", "13.9392, 15.7041, -0.898325, 0.88", "14.8109, 15.3509, -0.514181, 0.59", "15.1071, 15.2161, -0.382436, 0.59", "15.6252, 14.9952, -0.156204, 0.59", "15.9651, 14.8698, -0.00732037, 0.59", "16.4618, 14.7052, 0.221411, 0.88", "17.2427, 14.431, 0.617959, 0.51", "17.6514, 14.2911, 0.829363, 1.03", "18.2283, 14.114, 1.12116, 0.51", "19.0256, 13.9142, 1.48423, 0.51", "19.7297, 13.7801, 1.79466, 0.95" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "13.1321, 15.9853, -1.23876, 0.73", "13.8856, 16.974, -1.7064, 0.73", "14.6849, 18.0227, -2.20243, 0.73", "15.4057, 18.9685, -2.64974, 0.81", "16.4108, 20.2872, -3.27349, 0.81", "17.2559, 21.3959, -3.79789, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-16.2435, -16.3321, -13.235, 0.88", "-16.0984, -16.1958, -14.1531, 0.88", "-15.9231, -16.0376, -15.0793, 0.44", "-15.8209, -15.903, -15.6913, 0.51", "-15.7165, -15.6716, -16.565, 0.73", "-15.6671, -15.4408, -17.3188, 0.81", "-15.6474, -15.1872, -18.0422, 0.59", "-15.65, -14.9578, -18.5319, 0.88", "-15.6561, -14.4651, -19.3783, 0.81", "-15.6318, -14.0858, -19.9187, 0.81", "-15.57, -13.7373, -20.3215, 0.66", "-15.4486, -13.2934, -20.771, 0.66", "-15.2058, -12.611, -21.4387, 0.88", "-15.0605, -12.2864, -21.7623, 0.51", "-14.7724, -11.793, -22.2928, 0.81", "-14.374, -11.2487, -22.9564, 0.81", "-13.8903, -10.6646, -23.7366, 0.81", "-13.6093, -10.3374, -24.2303, 0.59", "-13.4872, -10.1801, -24.4892, 0.44", "-13.2628, -9.80867, -25.0983, 0.44", "-13.1094, -9.44136, -25.6785, 0.44", "-13.0773, -9.33476, -25.8378, 0.73", "-12.985, -8.84503, -26.555, 0.73", "-12.9499, -8.43457, -27.1444, 0.51", "-12.959, -7.99791, -27.7476, 0.51", "-13.007, -7.52731, -28.3719, 0.51", "-13.0838, -6.97054, -29.1271, 0.51", "-13.1199, -6.50288, -29.8384, 0.51", "-13.118, -6.43231, -29.9558, 0.51", "-13.1019, -6.34942, -30.1182, 0.51", "-13.0103, -6.0864, -30.6973, 0.44", "-12.7649, -5.61862, -31.8016, 0.29", "-12.5948, -5.35798, -32.4036, 0.29", "-12.3312, -4.99752, -33.1749, 0.59", "-12.0774, -4.67254, -33.8733, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-16.2435, -16.3321, -13.235, 0.88", "-16.5718, -16.5987, -13.6718, 0.88", "-16.7733, -16.7624, -13.94, 0.88", "-16.9519, -16.9075, -14.1776, 0.88" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "19.7042, -2.69327, -5.47128, 0.88", "19.7131, -2.14593, -4.9822, 0.88", "19.7318, -1.66963, -4.506, 0.66", "19.7371, -1.3623, -4.1639, 0.66", "19.7281, -0.900927, -3.64357, 0.66", "19.7006, -0.369337, -3.00893, 0.66", "19.6558, 0.52143, -1.89259, 0.73", "19.6476, 1.09, -1.14401, 0.73", "19.624, 1.56998, -0.432035, 0.73", "19.593, 1.85701, 0.0269257, 0.73", "19.5224, 2.20339, 0.625906, 0.73", "19.4316, 2.47109, 1.11129, 0.73", "19.2935, 2.74353, 1.60377, 0.73", "18.9739, 3.25769, 2.42114, 0.73", "18.6646, 3.66336, 3.02224, 0.73", "18.264, 4.1058, 3.63286, 0.95", "17.9768, 4.40264, 3.99976, 0.51", "17.6819, 4.68714, 4.36161, 0.51", "17.2496, 5.11985, 4.94896, 0.51", "16.9436, 5.45081, 5.44775, 0.66", "16.5987, 5.85188, 6.19222, 1.1", "16.3794, 6.1673, 6.92663, 0.66", "16.2295, 6.47218, 7.82658, 0.66", "16.2056, 6.70289, 8.72163, 0.59", "16.2779, 6.81053, 9.38832, 0.59", "16.4029, 6.84057, 9.96902, 0.59", "16.5733, 6.75332, 10.5681, 0.59", "16.6366, 6.67379, 10.7972, 0.59", "16.723, 6.35087, 11.3742, 0.37", "16.6998, 5.96947, 11.8976, 0.37", "16.6143, 5.65391, 12.2865, 0.37", "16.2558, 5.06854, 13.0357, 0.37", "15.8877, 4.83143, 13.468, 0.73", "15.207, 4.7041, 14.0118, 0.44", "14.9696, 4.72656, 14.1529, 0.44", "14.3389, 4.91904, 14.4482, 0.59", "13.6143, 5.27778, 14.7615, 0.59", "12.9902, 5.70792, 15.0638, 0.37", "12.6617, 6.01666, 15.2719, 0.37", "12.3267, 6.41692, 15.5202, 0.37", "12.1852, 6.6115, 15.6407, 0.73", "11.9053, 7.00285, 15.9112, 0.44", "11.3791, 7.65336, 16.5313, 0.44", "10.9983, 8.03055, 16.9551, 0.44", "10.8152, 8.20273, 17.1671, 0.44", "10.2614, 8.64957, 17.7798, 0.44", "9.68899, 9.02832, 18.3372, 0.44", "9.01653, 9.35789, 18.8579, 0.44", "8.399, 9.58051, 19.2143, 0.66" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "19.7042, -2.69327, -5.47128, 0.81", "20.2569, -2.25572, -5.65485, 0.81", "20.9093, -1.76158, -5.8142, 0.73", "21.2099, -1.53455, -5.87807, 0.73", "21.449, -1.34976, -5.93337, 0.73", "21.6857, -1.16448, -6.01011, 0.73", "22.2105, -0.753725, -6.18023, 0.66", "22.5121, -0.524628, -6.26264, 0.66", "22.7796, -0.333889, -6.33442, 0.81", "23.1884, -0.0279746, -6.46022, 1.18", "23.7917, 0.47302, -6.70698, 0.81" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "16.2813, -7.02069, -14.9334, 0.51", "16.5599, -5.87813, -15.472, 0.51", "16.6372, -5.51404, -15.5862, 0.51", "16.7141, -4.91424, -15.7275, 0.51", "16.7071, -4.47359, -15.7948, 0.51", "16.6315, -3.99721, -15.8392, 0.29", "16.5598, -3.71005, -15.8526, 0.29", "16.4249, -3.30556, -15.8069, 0.29", "16.2598, -2.90601, -15.7535, 0.29", "15.953, -2.28358, -15.6784, 0.44", "15.6719, -1.79692, -15.6433, 0.44", "15.3867, -1.37837, -15.6342, 0.44", "15.0853, -0.994658, -15.6632, 0.44", "14.5901, -0.368297, -15.7953, 0.44", "14.2515, 0.0944183, -15.9863, 0.44", "13.9461, 0.530617, -16.2459, 0.44", "13.5766, 1.0431, -16.5995, 0.44", "13.0269, 1.76705, -17.1842, 0.44", "12.567, 2.3462, -17.7325, 0.44", "11.9897, 3.08456, -18.5538, 0.44", "11.7122, 3.48105, -19.03, 0.44" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "16.2813, -7.02069, -14.9334, 0.88", "17.0213, -7.03478, -14.8915, 0.88", "18.1325, -7.05592, -14.8285, 0.81", "18.8708, -7.06998, -14.7867, 0.81", "19.4263, -7.08054, -14.7553, 1.1", "19.7448, -7.08661, -14.7372, 1.54", "20.0034, -7.09153, -14.7226, 1.62" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "11.2825, -16.5005, -31.9488, 0.51", "11.106, -15.5152, -32.3342, 0.51", "10.9728, -14.6058, -32.7207, 0.51", "10.8633, -13.7946, -33.1028, 0.81", "10.6434, -12.0843, -33.8987, 0.22", "10.5112, -11.0769, -34.3456, 0.59", "10.4166, -10.4564, -34.6045, 0.59", "10.313, -9.78541, -34.8521, 0.73", "10.1413, -8.83515, -35.1749, 0.37", "9.93199, -7.82935, -35.474, 0.37", "9.73873, -7.133, -35.6507, 0.51", "9.49646, -6.42967, -35.8145, 0.51", "8.99594, -5.11539, -36.1734, 0.66", "8.73023, -4.36345, -36.3831, 0.37", "8.52052, -3.69245, -36.5956, 0.22", "8.25179, -2.82022, -36.9092, 0.22", "7.96888, -1.84032, -37.3011, 0.22", "7.61207, -0.443891, -37.9196, 0.81", "7.32745, 0.765468, -38.517, 0.29", "7.14032, 1.63639, -38.9751, 0.51" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "11.2825, -16.5005, -31.9488, 0.81", "12.4726, -16.9383, -32.0787, 0.81", "13.5358, -17.4768, -32.1893, 0.81", "14.2897, -17.9175, -32.315, 0.81", "14.9434, -18.3413, -32.4703, 0.59", "15.7596, -18.9262, -32.6849, 0.88", "16.148, -19.2368, -32.8105, 0.88", "17.0562, -20.182, -33.2191, 0.44", "17.886, -21.2208, -33.6934, 0.44", "18.6702, -22.3462, -34.2268, 0.81", "19.2762, -23.263, -34.7038, 0.44", "19.9005, -24.1912, -35.2358, 0.81", "20.6798, -25.2968, -35.9084, 0.37", "20.8963, -25.5956, -36.099, 0.37", "21.2836, -26.1317, -36.4579, 0.37", "22.0685, -27.1045, -37.148, 0.37", "22.9036, -28.0328, -37.8665, 1.03", "23.6617, -28.8199, -38.4836, 0.44", "24.2557, -29.4281, -38.9482, 0.66", "24.9844, -30.1855, -39.5232, 0.66", "26.0993, -31.3608, -40.4177, 0.29", "27.0155, -32.308, -41.1281, 0.29", "27.9726, -33.2354, -41.8336, 0.88", "28.8779, -34.0343, -42.4759, 0.88", "29.5729, -34.5918, -42.9343, 0.44", "30.3305, -35.1531, -43.3931, 0.37", "31.8478, -36.2229, -44.2906, 0.22", "32.2945, -36.5221, -44.528, 0.22", "33.2223, -37.1231, -45.016, 0.22", "33.7011, -37.4482, -45.2734, 0.37", "34.0973, -37.7728, -45.4771, 0.15", "34.5726, -38.2789, -45.7473, 0.15", "34.9104, -38.8354, -46.09, 0.15", "35.1336, -39.2819, -46.4054, 0.95", "35.2833, -39.6377, -46.706, 0.95", "35.495, -40.2063, -47.2611, 0.95", "35.7801, -41.1126, -48.201, 0.44", "36.1581, -42.4378, -49.5948, 0.44", "36.2628, -42.8317, -50.0065, 0.88", "36.5425, -43.9053, -51.0677, 0.95", "36.901, -45.3542, -52.4289, 0.22", "37.1094, -46.2558, -53.2291, 0.22", "37.2109, -46.6977, -53.5712, 0.22", "37.3982, -47.4835, -54.0936, 0.59", "37.6251, -48.4541, -54.6964, 0.95", "38.0232, -49.87, -55.5036, 0.29", "38.2431, -50.4752, -55.8564, 0.29", "38.6069, -51.2822, -56.3515, 0.66", "38.8449, -51.7176, -56.6499, 0.66", "39.3351, -52.4251, -57.1938, 0.22", "39.7538, -52.9255, -57.6608, 0.22", "40.4713, -53.6393, -58.4828, 0.59", "40.7912, -53.9372, -58.8739, 0.59", "41.6397, -54.6941, -59.945, 0.15", "42.4091, -55.3444, -60.9225, 0.88", "43.3616, -56.1239, -62.1152, 0.66", "44.7158, -57.2572, -63.8076, 0.15", "45.7735, -58.1513, -65.0876, 0.73", "46.1139, -58.4595, -65.5105, 1.1", "47.2488, -59.5973, -66.9653, 0.22", "47.5358, -59.9205, -67.3397, 0.59", "47.7815, -60.2174, -67.6408, 0.59", "48.0607, -60.5809, -67.9741, 0.59", "48.9047, -61.6884, -68.9641, 0.15", "49.2848, -62.1478, -69.421, 0.15", "49.511, -62.3831, -69.6698, 0.51", "49.9942, -62.7551, -70.15, 0.51", "50.8915, -63.191, -70.9712, 0.07", "51.1571, -63.2653, -71.2005, 0.51", "52.0462, -63.3929, -71.8947, 0.07", "52.7689, -63.4597, -72.4398, 0.07", "53.366, -63.5005, -72.9302, 0.37", "54.4425, -63.5723, -73.7918, 0.88", "55.2527, -63.6164, -74.3956, 0.95", "55.7241, -63.6417, -74.7301, 0.95", "56.1552, -63.68, -75.0002, 0.95", "57.9427, -63.8947, -76.0131, 0.07", "58.971, -64.08, -76.501, 0.07", "59.64, -64.2351, -76.7576, 0.73", "59.908, -64.3035, -76.8456, 1.32", "61.431, -64.74, -77.3312, 0.22", "61.9339, -64.8964, -77.4807, 0.44", "62.9944, -65.2644, -77.7859, 0.15", "63.4612, -65.4322, -77.949, 1.03", "64.0379, -65.6437, -78.1613, 1.03", "65.1386, -66.035, -78.5826, 0.15", "66.1606, -66.3557, -79.0168, 0.81", "67.2615, -66.6257, -79.5257, 0.15", "67.7702, -66.7084, -79.7719, 0.51", "68.5896, -66.7769, -80.1727, 0.22", "69.0801, -66.7516, -80.408, 0.22", "70.3306, -66.4998, -81.0239, 0.81", "72.242, -65.8255, -81.8455, 0.22", "72.9681, -65.4721, -82.0828, 0.22", "73.5162, -65.1406, -82.2194, 0.22", "75.1707, -64.0209, -82.5824, 0.51", "76.4436, -63.0693, -82.7971, 0.15", "78.1833, -61.5898, -82.9167, 0.15", "79.1487, -60.6425, -82.8708, 0.15", "80.0955, -59.6815, -82.7578, 0.51" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "5.85102, -19.1467, -17.3263, 0.73", "4.76304, -19.1716, -17.3103, 0.73", "3.91559, -19.096, -17.3436, 0.73", "2.79143, -18.8501, -17.4753, 0.81", "2.08324, -18.6062, -17.6257, 0.81", "0.937615, -18.2116, -17.869, 0.81", "0.18164, -17.9512, -18.0295, 0.81", "-1.07797, -17.3929, -18.3511, 0.81", "-2.0978, -16.7821, -18.6774, 0.51", "-2.96086, -16.0823, -19.0659, 1.03" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "5.85102, -19.1467, -17.3263, 1.1", "5.47079, -20.1865, -16.8604, 1.1", "4.98411, -21.5174, -16.264, 1.25", "4.48959, -22.8697, -15.6581, 1.25", "4.14023, -23.825, -15.23, 1.18", "4.05515, -24.0577, -15.1257, 1.18", "3.29798, -26.1283, -14.1979, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "26.3733, -16.4999, -7.80838, 0.66", "27.0284, -17.2381, -8.02987, 0.66", "27.4338, -17.7521, -8.29095, 0.66", "27.8245, -18.3792, -8.67829, 0.66", "28.2793, -19.2913, -9.36388, 0.66", "28.6181, -19.996, -9.93422, 0.88", "29.1392, -20.953, -10.7534, 0.88", "29.8577, -22.205, -11.8957, 0.66", "30.4125, -23.2175, -12.8472, 0.81", "31.0793, -24.557, -14.1409, 0.37", "31.4476, -25.3795, -14.9374, 0.44", "31.8828, -26.4834, -16.0088, 0.59", "32.181, -27.4303, -16.9972, 0.29", "32.3956, -28.4879, -18.1414, 0.73", "32.432, -29.5123, -19.2602, 0.59", "32.3223, -30.0526, -19.8545, 0.59", "31.9432, -30.8371, -20.8508, 0.59", "30.8395, -32.1696, -23.1264, 1.1", "30.2522, -32.5719, -24.2304, 0.37", "29.6024, -32.7446, -25.4377, 0.37", "29.1859, -32.729, -26.297, 0.37", "28.4777, -32.5734, -28.0235, 0.37", "27.7553, -32.3384, -30.1503, 0.37", "27.5314, -32.2732, -30.9523, 0.37", "27.2674, -32.2764, -32.0973, 0.37", "26.8155, -32.5301, -34.2305, 1.03", "26.6141, -32.8507, -35.109, 1.03", "26.3416, -33.6498, -36.1791, 0.29", "26.0285, -34.7084, -37.2392, 0.22", "25.7271, -35.8455, -38.2078, 0.22", "25.5552, -36.5305, -38.6877, 0.95", "25.2632, -37.6286, -39.3239, 0.15", "25.0203, -38.3936, -39.8197, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "26.3733, -16.4999, -7.80838, 0.44", "27.7672, -16.4147, -8.18778, 0.44", "30.0572, -16.2764, -8.94621, 0.44", "31.5334, -16.144, -9.54979, 0.44", "32.1966, -16.0561, -9.8609, 0.44", "32.9762, -15.8959, -10.2642, 0.51", "33.5284, -15.768, -10.5694, 0.51", "34.209, -15.5628, -11.0106, 0.51", "34.9986, -15.3004, -11.5669, 0.51", "35.5374, -15.1385, -11.8871, 0.29", "36.6302, -14.8392, -12.3768, 0.81", "37.64, -14.5833, -12.6721, 0.51", "38.9503, -14.2607, -12.8451, 0.37", "39.903, -14.013, -12.8564, 0.37", "41.0929, -13.6693, -12.7673, 0.37", "42.2374, -13.2783, -12.6128, 0.37", "43.3302, -12.839, -12.3679, 0.37", "44.5059, -12.2973, -12.0216, 0.44", "46.1105, -11.524, -11.5525, 0.37", "47.1657, -11.0269, -11.2745, 0.37", "48.1052, -10.6099, -11.0792, 0.37", "49.2073, -10.1438, -10.8882, 0.88", "50.405, -9.68869, -10.7573, 0.44", "51.9031, -9.18503, -10.7065, 0.37", "52.9522, -8.85007, -10.7314, 0.37", "53.9078, -8.54122, -10.7997, 0.37", "55.1859, -8.06426, -10.9321, 0.29", "55.7802, -7.78837, -11.0186, 0.29", "56.5132, -7.38331, -11.0951, 0.66", "57.0286, -7.08263, -11.1181, 0.66", "57.9084, -6.5413, -11.1567, 0.15", "58.8527, -5.94416, -11.1927, 0.88", "60.3533, -4.99185, -11.2429, 0.15", "61.2808, -4.40843, -11.2538, 0.22", "61.9598, -4.01607, -11.2467, 0.22" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-6.27189, -37.248, 2.30109, 0.44", "-6.77826, -37.4084, 2.44693, 0.44", "-7.15152, -37.5701, 2.56002, 0.44", "-7.79182, -37.9241, 2.76607, 0.88", "-8.5837, -38.3922, 3.03466, 0.22", "-9.21102, -38.7758, 3.27508, 0.44", "-9.79247, -39.1539, 3.51524, 0.44", "-10.218, -39.4711, 3.69899, 0.29", "-10.7361, -39.8938, 3.94332, 0.29", "-11.3598, -40.4252, 4.26435, 0.29", "-11.7961, -40.8049, 4.53136, 0.29", "-12.2076, -41.1827, 4.80593, 0.22", "-12.4879, -41.4357, 4.99939, 0.44", "-12.995, -41.8734, 5.35716, 0.22", "-13.3375, -42.1734, 5.6092, 0.59", "-13.8068, -42.6498, 5.97751, 0.29", "-14.0795, -42.9361, 6.18326, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-6.27189, -37.248, 2.30109, 0.51", "-6.98778, -37.9651, 2.20737, 0.51", "-7.77413, -38.7444, 2.06805, 0.73", "-8.06014, -39.0375, 1.99656, 0.73", "-8.53087, -39.5564, 1.85845, 0.88", "-9.13807, -40.2628, 1.66828, 0.59", "-9.62691, -40.8424, 1.52036, 0.59", "-10.0853, -41.4263, 1.37353, 0.66", "-10.5152, -41.9788, 1.23283, 0.51", "-11.1668, -42.7722, 1.00954, 1.18", "-11.9858, -43.7143, 0.720767, 0.44", "-12.3967, -44.1672, 0.576014, 0.59", "-12.5974, -44.3893, 0.494478, 0.81", "-13.1524, -44.9954, 0.273794, 0.22", "-13.7053, -45.6031, 0.0469163, 0.51", "-13.8192, -45.7345, -0.00995994, 1.25", "-14.5386, -46.6621, -0.45463, 0.37", "-14.9754, -47.258, -0.776037, 0.37", "-15.287, -47.6899, -1.01675, 1.03", "-15.9872, -48.6451, -1.58332, 0.37", "-16.5458, -49.3419, -2.02717, 0.37", "-17.2184, -50.0401, -2.55858, 0.81", "-17.9452, -50.6255, -3.13388, 0.07", "-18.267, -50.8191, -3.37692, 0.37", "-18.866, -51.0894, -3.84583, 0.29", "-19.4264, -51.262, -4.30038, 0.95", "-20.1839, -51.4779, -4.90686, 0.66", "-20.7085, -51.6464, -5.34188, 0.22", "-21.2686, -51.8786, -5.82298, 0.59", "-21.984, -52.2282, -6.44978, 0.59", "-22.5541, -52.5371, -6.92244, 0.95", "-23.2082, -52.8984, -7.43361, 0.95", "-24.165, -53.4409, -8.11498, 0.29", "-24.6998, -53.7468, -8.47064, 0.37", "-25.1052, -53.968, -8.72326, 0.15", "-25.8807, -54.2926, -9.04897, 0.44", "-26.5021, -54.4462, -9.20041, 0.29", "-26.8695, -54.3891, -9.2269, 0.66", "-27.3317, -53.9088, -8.925, 0.29", "-27.5495, -53.3365, -8.56205, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "16.35, -42.9674, -3.78277, 0.29", "17.1661, -43.8617, -4.11601, 0.29", "17.7847, -44.5086, -4.32709, 0.29", "18.4422, -45.1713, -4.52696, 0.59", "19.057, -45.8012, -4.7453, 0.66", "19.6393, -46.3898, -4.96157, 0.29", "20.6783, -47.4146, -5.32715, 1.03", "21.348, -48.0635, -5.56862, 0.59", "21.9009, -48.5923, -5.78647, 0.59", "23.1621, -49.7468, -6.30098, 0.22", "23.8915, -50.4008, -6.61431, 0.22", "24.6695, -51.1053, -6.95476, 1.18", "25.885, -52.2159, -7.48364, 0.15", "26.3088, -52.5942, -7.6525, 0.29", "27.2328, -53.4092, -7.98484, 0.51", "27.8321, -53.9193, -8.1734, 0.37", "28.3474, -54.3714, -8.35526, 0.51", "28.8791, -54.8453, -8.55336, 1.1", "30.1128, -55.9397, -8.9854, 0.15", "30.7929, -56.5528, -9.24125, 0.88", "31.5352, -57.255, -9.5392, 0.07", "32.3933, -58.1051, -9.88998, 0.81", "32.8791, -58.6301, -10.0789, 0.44", "33.3092, -59.1537, -10.2437, 0.66", "33.713, -59.696, -10.3818, 0.37", "34.2952, -60.4996, -10.5428, 0.37", "34.8356, -61.2184, -10.6645, 0.37", "35.6275, -62.2374, -10.8305, 0.15", "36.5133, -63.3985, -11.0155, 0.66", "37.4331, -64.6399, -11.2532, 0.22", "38.0437, -65.4826, -11.4307, 0.59", "38.9791, -66.7899, -11.7237, 0.15", "39.3545, -67.3193, -11.8492, 0.73", "40.4224, -68.9457, -12.262, 0.29", "41.1106, -70.1394, -12.5634, 0.88", "41.3267, -70.5941, -12.679, 0.73", "41.5146, -71.0843, -12.7924, 0.73", "41.7429, -71.8554, -12.9399, 0.73", "42.0726, -73.2955, -13.2082, 0.37", "42.2327, -74.1385, -13.3686, 0.22", "42.3367, -74.7516, -13.462, 0.22", "42.4612, -75.5706, -13.598, 0.22", "42.5676, -76.4579, -13.7484, 0.22", "42.6399, -77.889, -13.9532, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "16.35, -42.9674, -3.78277, 0.44", "15.716, -44.1882, -3.46688, 0.44", "14.9823, -45.4826, -3.13825, 0.81", "14.6237, -46.0354, -3.0039, 0.81", "14.0486, -46.8625, -2.78527, 0.37", "13.5968, -47.4991, -2.59922, 0.81", "13.2362, -48.0222, -2.45561, 0.81", "12.6787, -48.8383, -2.24171, 0.59", "11.6251, -50.5161, -1.82249, 0.15", "11.1395, -51.3539, -1.64975, 0.15", "10.6569, -52.3044, -1.52124, 0.37", "10.2572, -53.2418, -1.45809, 0.88", "10.0702, -53.7307, -1.46406, 0.66", "9.48915, -55.3048, -1.56613, 0.37", "8.87676, -56.9532, -1.72936, 0.37", "8.4412, -58.0656, -1.85149, 0.66", "7.81795, -59.4837, -2.01079, 0.95", "6.9386, -61.3383, -2.19344, 0.44", "6.34115, -62.5754, -2.36191, 0.22", "6.00197, -63.3311, -2.4898, 0.22", "5.75854, -64.0438, -2.61521, 0.22", "5.57622, -64.8898, -2.74647, 0.66", "5.55231, -65.5489, -2.84025, 0.81", "5.70615, -67.2681, -3.05114, 0.81", "5.85562, -68.4782, -3.16845, 0.15", "6.02257, -69.842, -3.24284, 0.51", "6.14061, -71.0593, -3.22627, 0.15", "6.21585, -72.273, -3.12436, 0.66", "6.21656, -74.3047, -2.76504, 0.29", "6.15806, -75.383, -2.47412, 0.66", "5.99137, -76.8684, -1.99167, 0.88", "5.72017, -78.6154, -1.32652, 0.22", "5.56525, -79.4383, -0.961191, 0.22", "5.30231, -80.7306, -0.332355, 0.22", "5.18167, -81.3468, -0.0272067, 0.88", "5.09034, -81.8345, 0.195607, 0.73", "4.93946, -82.6483, 0.539157, 1.1", "4.75071, -83.7354, 0.967218, 0.22", "4.57971, -84.8669, 1.36838, 0.88", "4.33851, -86.6602, 1.91633, 0.22", "4.17284, -88.0154, 2.31071, 0.37", "3.9903, -89.6642, 2.76646, 1.03" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "37.4847, 32.6789, -5.49124, 0.15", "37.9374, 31.9556, -4.62305, 0.15", "38.2376, 31.4759, -4.04726, 0.37", "38.6639, 30.7948, -3.22969, 0.22", "38.9114, 30.3992, -2.75489, 0.51" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "37.4847, 32.6789, -5.49124, 0.22", "38.5667, 33.6942, -4.69988, 0.22", "39.1681, 34.4023, -4.2456, 0.22", "39.5392, 34.8394, -3.96521, 0.22", "40.0801, 35.4763, -3.55664, 0.22", "40.4166, 35.8725, -3.30244, 0.22", "40.746, 36.2604, -3.0536, 0.22", "40.8696, 36.594, -2.93062, 0.95" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "19.7297, 13.7801, 1.79466, 0.81", "19.8834, 13.4104, 1.59747, 0.81", "20.0851, 12.7527, 1.29317, 0.44", "20.2415, 12.1979, 1.12159, 0.44", "20.318, 11.9127, 1.05617, 0.44", "20.3963, 11.6354, 1.00474, 0.44", "20.5496, 11.1131, 0.918201, 0.44", "20.6376, 10.8049, 0.880054, 0.73", "20.9008, 9.83794, 0.82064, 0.44", "21.0862, 9.18889, 0.801454, 0.51", "21.342, 8.41627, 0.77597, 0.81", "21.5445, 7.86468, 0.753239, 0.81", "21.6888, 7.51054, 0.732631, 0.81", "21.9446, 6.91336, 0.684979, 0.51", "22.106, 6.55085, 0.638532, 0.51", "22.3752, 6.00644, 0.551297, 0.37", "22.6046, 5.59478, 0.467327, 0.37", "22.9263, 5.06725, 0.32011, 0.66", "23.2212, 4.59984, 0.157404, 0.37", "23.447, 4.26924, 0.0126295, 0.37", "23.6122, 4.04212, -0.10184, 0.37", "23.8662, 3.73329, -0.279077, 0.22", "24.2457, 3.32158, -0.536128, 0.81", "24.5941, 2.94537, -0.775658, 0.95", "24.9938, 2.49174, -1.04672, 0.73", "25.2646, 2.1587, -1.20181, 0.73", "25.5219, 1.81467, -1.32476, 0.73", "25.7191, 1.54128, -1.39738, 0.95", "25.9375, 1.27326, -1.44473, 0.73", "26.2673, 0.880517, -1.47103, 0.51", "26.6202, 0.428853, -1.46491, 0.51", "26.9231, 0.0121664, -1.442, 0.29", "27.2535, -0.510215, -1.43316, 0.29", "27.7169, -1.32037, -1.47514, 0.29", "28.0334, -1.94562, -1.55607, 0.29", "28.212, -2.32469, -1.64266, 0.29", "28.3806, -2.67916, -1.74337, 0.29", "28.7603, -3.47998, -1.98306, 0.88", "28.9671, -3.93431, -2.12447, 0.88", "29.2397, -4.59666, -2.33501, 0.51", "29.635, -5.53255, -2.6387, 0.51", "29.9245, -6.19026, -2.82624, 0.51", "30.1829, -6.71835, -2.96063, 0.29", "30.3826, -7.09586, -3.03643, 0.22", "30.6188, -7.56104, -3.11345, 0.22", "30.7942, -7.95426, -3.17519, 0.22", "31.0105, -8.63905, -3.27578, 0.22", "31.226, -9.48631, -3.45075, 0.51" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "19.7297, 13.7801, 1.79466, 0.95", "20.1547, 13.6997, 1.83928, 0.95", "20.5144, 13.6254, 1.87106, 0.95", "20.8757, 13.5451, 1.89224, 0.59", "21.0684, 13.5001, 1.89789, 0.73", "21.2593, 13.4607, 1.89847, 1.1", "21.7609, 13.3814, 1.89, 0.81", "21.9593, 13.3667, 1.89238, 0.81", "22.1796, 13.3955, 1.89565, 0.81", "22.345, 13.4756, 1.92359, 0.81", "22.5643, 13.7049, 1.96665, 0.22", "22.7107, 13.9729, 2.0129, 0.22", "22.853, 14.3924, 2.12533, 0.22", "22.9759, 14.9297, 2.30845, 0.22", "23.0456, 15.4328, 2.5252, 0.22", "23.0875, 16.315, 2.97329, 0.95", "23.0659, 16.6285, 3.16297, 1.4", "22.8679, 16.8383, 3.63838, 1.4", "22.5758, 16.505, 3.96619, 0.15", "22.3431, 16.2109, 4.21401, 0.15", "22.2214, 16.0413, 4.34106, 0.15", "22.1295, 15.8983, 4.44715, 0.15", "21.9228, 15.5884, 4.59812, 0.15", "21.7661, 15.3647, 4.65825, 0.15" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "17.2559, 21.3959, -3.79789, 0.29", "17.9422, 20.7327, -4.73588, 0.29", "18.315, 20.2765, -5.3966, 0.44", "18.6729, 19.7451, -6.18171, 0.66", "18.9862, 19.2007, -6.97982, 0.59", "19.2975, 18.495, -8.06847, 0.59", "19.5186, 17.8763, -9.08799, 0.59", "19.6042, 17.3221, -10.0714, 0.59", "19.6381, 16.8575, -10.9526, 0.59", "19.6307, 16.5479, -11.5728, 0.59", "19.5893, 15.8492, -13.2279, 0.59", "19.5618, 15.6622, -13.7808, 0.59", "19.5072, 15.4939, -14.406, 0.59", "19.4531, 15.2824, -15.3581, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.2559, 21.3959, -3.79789, 0.88", "17.0914, 21.955, -3.70015, 0.88", "16.8201, 22.8058, -3.59107, 0.37", "16.6839, 23.2201, -3.549, 0.37", "16.378, 24.0446, -3.50581, 0.37", "15.9946, 24.9868, -3.48375, 0.37", "15.7055, 25.6722, -3.47919, 0.37", "15.4336, 26.2312, -3.48778, 0.44", "15.2072, 26.6666, -3.51442, 0.59", "14.865, 27.369, -3.57365, 0.59", "14.5803, 28.034, -3.64238, 0.59", "14.3663, 28.5818, -3.71409, 0.59", "14.2354, 28.9377, -3.7515, 0.88", "13.9148, 29.8092, -3.81552, 0.44", "13.6872, 30.4159, -3.84784, 0.44", "13.4675, 31.0186, -3.86416, 0.44", "13.2426, 31.6513, -3.87897, 0.44", "12.9859, 32.358, -3.88861, 0.44", "12.868, 32.6786, -3.88828, 0.59", "12.631, 33.2909, -3.88366, 0.59", "12.5086, 33.5872, -3.88595, 0.59", "12.3007, 34.1206, -3.89851, 0.66", "12.1769, 34.508, -3.9137, 0.66", "12.0975, 34.8213, -3.92235, 0.66", "11.961, 35.4808, -3.97713, 0.66", "11.8517, 36.0773, -4.04998, 0.29", "11.7231, 36.7562, -4.17237, 0.88", "11.6465, 37.1757, -4.26516, 0.51", "11.5215, 37.9836, -4.46404, 0.37", "11.4229, 38.8841, -4.69583, 0.44", "11.388, 39.3755, -4.83683, 0.66", "11.3175, 40.0984, -5.07927, 0.29", "11.2503, 40.501, -5.23322, 0.29", "11.1642, 40.8886, -5.3971, 0.29", "11.0142, 41.4801, -5.65545, 0.44", "10.8561, 42.0223, -5.86125, 0.44", "10.5621, 42.8815, -6.20907, 0.44", "10.357, 43.3798, -6.4221, 0.37", "10.1922, 43.7347, -6.59123, 0.37", "9.97978, 44.1825, -6.81222, 0.37", "9.77684, 44.643, -7.03441, 0.37", "9.57939, 45.2032, -7.2829, 0.37", "9.47118, 45.5873, -7.44112, 0.37", "9.32696, 46.1459, -7.67191, 0.37", "9.18367, 46.5924, -7.86843, 0.37", "8.97166, 47.1894, -8.14721, 0.37", "8.85655, 47.4784, -8.29632, 0.37", "8.68066, 47.8421, -8.51106, 0.37", "8.50126, 48.1383, -8.72958, 0.37", "8.12404, 48.6653, -9.21302, 0.73", "7.9001, 48.9372, -9.46207, 0.73", "7.43609, 49.4695, -9.94429, 0.66", "6.99955, 49.9998, -10.3916, 0.66", "6.5745, 50.5632, -10.8385, 0.66", "6.20094, 51.1126, -11.1951, 1.47", "5.64474, 51.9647, -11.7189, 0.22", "5.37379, 52.3696, -11.9484, 0.22", "5.16047, 52.7126, -12.0888, 0.22", "4.92815, 53.1386, -12.1896, 0.22", "4.55623, 53.888, -12.2456, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.9519, -16.9075, -14.1776, 0.95", "-16.7617, -17.4197, -14.6618, 0.95", "-16.3855, -18.3767, -15.4986, 0.73", "-16.0231, -19.4266, -16.3732, 0.73", "-15.7508, -20.4462, -17.2402, 1.1", "-15.5182, -21.5364, -18.2097, 0.37", "-15.4298, -22.115, -18.7643, 0.66", "-15.3681, -23.1919, -19.8582, 0.15", "-15.3775, -23.8761, -20.5989, 0.51", "-15.4337, -25.078, -21.9698, 0.73", "-15.4965, -25.8395, -22.8699, 1.03", "-15.6202, -26.9843, -24.2335, 0.88", "-15.7241, -27.6949, -25.0788, 1.1", "-15.9043, -28.7312, -26.2991, 0.29", "-16.0549, -29.6058, -27.3132, 1.32", "-16.3296, -30.9658, -28.8771, 0.44", "-16.626, -32.0969, -30.1939, 0.44", "-16.8722, -32.7678, -31.0674, 0.66", "-17.1964, -33.4729, -32.0773, 0.81", "-17.6475, -34.288, -33.3538, 0.66", "-18.1459, -35.0533, -34.7304, 0.66", "-18.5506, -35.6122, -35.8352, 0.95", "-19.5084, -36.8486, -38.3246, 0.29", "-19.7566, -37.1542, -38.9182, 0.51", "-20.035, -37.4826, -39.4989, 0.51", "-20.643, -38.2172, -40.5808, 0.22", "-20.9471, -38.5673, -40.986, 0.22", "-21.422, -39.1054, -41.4587, 0.73", "-22.301, -40.0969, -42.096, 0.29", "-22.8175, -40.6345, -42.4303, 1.1", "-23.3498, -41.1605, -42.7346, 1.1", "-24.5716, -42.3602, -43.3226, 0.15", "-25.1264, -42.8993, -43.604, 0.15", "-25.6035, -43.38, -43.8715, 0.15" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.9519, -16.9075, -14.1776, 0.73", "-17.6884, -16.9771, -14.5549, 0.73", "-18.3066, -17.0933, -14.8877, 0.44", "-18.8752, -17.2847, -15.1963, 0.44", "-19.4231, -17.5565, -15.4771, 0.59", "-19.6597, -17.6978, -15.5956, 0.59", "-19.8214, -17.7948, -15.6663, 0.59", "-20.2262, -18.069, -15.8093, 0.51", "-20.659, -18.3959, -15.9559, 0.29", "-21.1389, -18.7719, -16.0962, 0.29", "-21.6388, -19.1602, -16.2455, 0.22", "-22.5763, -19.8273, -16.5151, 0.22", "-22.9538, -20.0571, -16.6148, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "23.7917, 0.47302, -6.70698, 0.51", "24.1079, 2.28746, -7.18086, 0.51", "24.3814, 3.39402, -7.41457, 0.51", "24.7108, 4.35742, -7.61126, 0.51", "25.1358, 5.24307, -7.73302, 0.51", "25.7065, 6.24119, -7.80703, 0.73", "26.3328, 7.23685, -7.84392, 0.44", "26.9597, 8.12939, -7.79922, 0.44", "27.6124, 8.89448, -7.7341, 0.44", "29.0298, 10.1928, -7.63558, 0.44", "30.029, 10.915, -7.60868, 0.44", "30.4179, 11.1281, -7.61045, 0.44", "31.2259, 11.4521, -7.66423, 0.44", "31.6886, 11.6043, -7.74741, 0.44", "32.1294, 11.7687, -7.88604, 0.44", "32.765, 12.0731, -8.19737, 0.44", "33.2861, 12.4492, -8.50324, 0.44", "34.1832, 13.2877, -8.97349, 0.81", "34.9507, 14.134, -9.32352, 0.37", "35.7888, 15.0304, -9.64526, 0.73", "36.1715, 15.3982, -9.76048, 0.73", "37.0145, 16.1105, -9.92822, 0.73", "38.0686, 16.8664, -10.0812, 0.73", "39.3467, 17.6255, -10.2493, 0.59", "40.8909, 18.4104, -10.4538, 0.59", "42.0167, 18.9332, -10.6157, 0.66", "43.6036, 19.6678, -10.8226, 0.51", "45.6976, 20.673, -11.0418, 0.44", "46.9309, 21.3064, -11.1851, 0.44", "47.4232, 21.5783, -11.2328, 0.44", "47.9609, 21.9238, -11.2781, 0.44", "49.05, 22.7545, -11.4088, 0.73", "49.9473, 23.5122, -11.5335, 1.18", "51.0132, 24.4978, -11.724, 0.51", "51.7583, 25.1978, -11.9006, 0.29", "52.2274, 25.6151, -12.0814, 0.29", "53.2383, 26.5105, -12.632, 0.29", "53.9287, 27.1679, -13.114, 0.66", "54.9852, 28.249, -13.9526, 0.66", "55.8127, 29.1191, -14.6224, 0.66", "57.0418, 30.3812, -15.6058, 0.44", "57.767, 31.1196, -16.1914, 0.22", "58.2925, 31.6849, -16.6442, 0.22", "58.6668, 32.1395, -17.0264, 0.22", "59.2642, 32.8805, -17.6181, 0.22", "59.9456, 33.6762, -18.2489, 0.59", "61.5111, 35.1861, -19.5761, 0.22", "62.9543, 36.2196, -20.705, 0.22", "64.3278, 36.8909, -21.7517, 0.44", "65.2604, 37.1264, -22.4584, 0.29", "65.9236, 37.2189, -22.9717, 0.37", "67.7141, 37.0217, -24.2156, 0.22", "68.922, 36.4769, -24.8316, 0.22", "70.1335, 35.6574, -25.329, 0.37", "71.201, 34.7512, -25.7335, 0.88" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "23.7917, 0.47302, -6.70698, 0.81", "24.7387, 0.139699, -6.91202, 0.81", "26.454, -0.450428, -7.15182, 0.59", "27.3503, -0.763028, -7.22924, 0.59", "28.1072, -1.01189, -7.24799, 0.59", "28.8632, -1.22532, -7.22284, 0.59", "29.7027, -1.4378, -7.15771, 0.59", "30.5256, -1.61703, -7.06601, 0.59", "31.1467, -1.72772, -6.95584, 0.29", "31.7754, -1.82639, -6.85212, 0.29", "32.9051, -1.97092, -6.68223, 0.59", "33.8769, -2.08259, -6.49914, 0.37", "34.958, -2.21146, -6.26728, 0.37", "36.0795, -2.36396, -6.0403, 0.81", "36.9615, -2.49155, -5.87337, 0.37", "38.8172, -2.81032, -5.54225, 0.66", "40.3229, -3.07888, -5.26277, 0.73", "40.9215, -3.17713, -5.144, 1.03", "42.067, -3.35097, -4.89353, 0.66", "43.0436, -3.46381, -4.68387, 0.22", "43.8148, -3.50568, -4.53599, 0.73", "44.6199, -3.50203, -4.40755, 0.73", "45.211, -3.4648, -4.36012, 0.73", "46.0178, -3.36523, -4.29732, 0.44", "46.8441, -3.23647, -4.22247, 0.29", "47.7842, -3.09744, -4.15161, 0.22", "48.7214, -2.96287, -4.09274, 0.95", "50.1563, -2.76487, -4.01776, 0.44", "50.7589, -2.66728, -3.98841, 0.44", "51.4513, -2.56531, -3.95098, 0.44", "52.1158, -2.47213, -3.90781, 0.44", "52.376, -2.42552, -3.88876, 0.44", "53.115, -2.25481, -3.81604, 0.22", "54.3209, -1.93245, -3.65623, 1.03", "55.4763, -1.61862, -3.52792, 0.73", "56.4631, -1.36044, -3.4373, 0.37", "57.4522, -1.12453, -3.35718, 0.59", "57.9107, -1.03523, -3.31763, 0.59", "59.0478, -0.870697, -3.21183, 0.59", "59.6658, -0.802645, -3.15737, 0.59", "61.0625, -0.653447, -3.10403, 0.22", "62.0611, -0.563578, -3.03698, 0.22", "62.8878, -0.482945, -2.97128, 0.22", "63.8078, -0.362163, -2.88735, 0.22", "64.1899, -0.305171, -2.8496, 0.22", "65.8141, -0.00262265, -2.66661, 0.22", "67.6869, 0.41101, -2.46194, 0.22", "68.9117, 0.713665, -2.33488, 0.51", "69.3239, 0.827667, -2.29395, 1.47" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "20.0034, -7.09153, -14.7226, 1.1", "20.5862, -8.20703, -14.1849, 1.1", "21.0926, -9.13308, -13.7676, 0.95", "21.8237, -10.4954, -13.2239, 0.95", "22.2309, -11.2501, -12.9371, 0.95", "22.507, -11.7624, -12.7474, 1.03", "23.0083, -12.6685, -12.4172, 0.88", "23.222, -13.0278, -12.2959, 0.81", "23.9131, -14.1403, -11.9521, 0.59", "24.6035, -15.2041, -11.6643, 0.59", "25.175, -16.0667, -11.4565, 0.59", "25.4658, -16.4849, -11.3563, 0.81", "25.8227, -16.9657, -11.2347, 0.81", "26.6475, -17.9957, -10.969, 0.51", "27.7871, -19.2516, -10.6243, 0.51", "28.3515, -19.8213, -10.466, 1.03", "29.0934, -20.5135, -10.2651, 1.03", "29.9749, -21.2817, -10.0272, 0.73", "30.512, -21.7249, -9.87979, 0.95", "31.3028, -22.3094, -9.66185, 0.95", "31.7243, -22.5806, -9.54394, 0.95", "32.6306, -23.1185, -9.28466, 1.03", "33.3907, -23.5452, -9.07349, 1.03" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "20.0034, -7.09153, -14.7226, 0.66", "20.4927, -6.67105, -14.6052, 0.66", "21.1883, -5.83272, -14.617, 0.66", "21.753, -5.03938, -14.7725, 0.66", "22.4364, -3.99156, -15.0427, 0.66", "22.6376, -3.65933, -15.1364, 0.88", "23.0686, -2.86877, -15.3734, 0.29", "23.6238, -1.31507, -16.0295, 0.29", "23.7258, -0.701866, -16.3481, 0.29", "23.7057, -0.351364, -16.5532, 0.29", "23.6382, -0.14564, -16.6764, 0.29", "23.4074, 0.257087, -16.9281, 0.29", "22.8588, 0.986747, -17.4044, 0.29", "22.5795, 1.27703, -17.5706, 1.1", "21.8104, 2.00148, -17.979, 0.73", "21.127, 2.60248, -18.3465, 0.73", "20.4854, 3.15298, -18.6921, 1.03" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-2.96086, -16.0823, -19.0659, 0.59", "-4.5181, -15.5981, -19.2837, 0.59", "-5.52574, -15.2848, -19.4246, 0.59", "-6.66977, -14.9291, -19.5847, 0.59", "-7.99359, -14.5175, -19.7698, 0.81", "-8.59478, -14.3306, -19.8539, 1.1" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-2.96086, -16.0823, -19.0659, 0.59", "-2.34665, -15.0781, -19.535, 0.59", "-1.61077, -13.6777, -20.2677, 0.29", "-1.33965, -13.0698, -20.5911, 0.29", "-0.751924, -11.5011, -21.4667, 0.44", "-0.282455, -9.99766, -22.3148, 0.51", "0.0867698, -8.62268, -23.0773, 0.66", "0.393371, -7.05206, -23.9698, 0.66", "0.484064, -6.36623, -24.3452, 0.44", "0.55332, -5.59348, -24.8017, 0.22", "0.54352, -4.9957, -25.1823, 0.22", "0.492259, -4.46805, -25.5614, 0.22", "0.32379, -2.92726, -26.5563, 0.81" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "3.29798, -26.1283, -14.1979, 0.59", "3.59564, -26.2687, -13.5365, 0.59", "4.42893, -26.6753, -11.7519, 0.59", "4.87265, -26.8712, -10.8559, 0.51", "5.63258, -27.1546, -9.44836, 0.73", "6.2559, -27.3555, -8.38365, 0.37", "6.9534, -27.5423, -7.29183, 0.37", "7.69276, -27.6807, -6.33171, 0.37", "8.25456, -27.7316, -5.77962, 0.37", "8.85705, -27.7448, -5.34002, 0.37", "9.59134, -27.7154, -4.98172, 0.37", "10.208, -27.6797, -4.7701, 0.37", "10.7942, -27.6481, -4.64015, 0.37", "11.2817, -27.6505, -4.54135, 0.37", "11.6464, -27.6852, -4.40196, 0.37", "12.7294, -27.8528, -3.85017, 0.37", "13.2322, -27.9495, -3.57023, 0.59", "13.7465, -28.0758, -3.27656, 0.59", "14.4182, -28.2383, -2.94081, 0.59", "15.6086, -28.5071, -2.45603, 0.29", "16.3792, -28.6717, -2.23479, 0.29", "17.1252, -28.8218, -2.05875, 0.51", "18.5557, -29.1076, -1.74309, 0.51", "19.9343, -29.4227, -1.48183, 0.51", "21.3211, -29.778, -1.28246, 0.51", "22.5387, -30.11, -1.20317, 0.51" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "3.29798, -26.1283, -14.1979, 1.25", "2.98903, -27.178, -13.6214, 1.25", "2.47459, -28.9259, -12.6616, 1.25", "2.31893, -29.4547, -12.3712, 1.25", "2.10338, -30.1871, -11.969, 1.32" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "3.9903, -89.6642, 2.76646, 0.07", "3.35381, -90.4508, 3.18634, 0.07", "2.87615, -91.042, 3.532, 0.73", "1.84649, -92.3143, 4.33988, 0.22", "1.31447, -92.9675, 4.78888, 0.22", "1.00348, -93.355, 5.06704, 0.66", "0.808572, -93.6113, 5.25115, 0.95", "0.18249, -94.5798, 5.91892, 0.22", "-0.213501, -95.2867, 6.38221, 0.22", "-0.662129, -96.1956, 6.97261, 0.37", "-0.953384, -96.8457, 7.37949, 0.22", "-1.18279, -97.4043, 7.70791, 0.88", "-1.66727, -98.7119, 8.42983, 0.22", "-1.84023, -99.2532, 8.70564, 0.22", "-2.07486, -100.019, 9.08669, 0.81", "-2.29511, -100.7, 9.43516, 0.07", "-2.47901, -101.181, 9.70565, 0.44", "-2.76436, -101.736, 10.0803, 0.22", "-2.99394, -102.112, 10.3749, 0.59", "-3.22503, -102.437, 10.6534, 0.15", "-3.57119, -102.849, 11.0495, 0.15", "-3.82594, -103.104, 11.3324, 0.15", "-4.31209, -103.494, 11.8356, 0.73" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "3.9903, -89.6642, 2.76646, 0.07", "3.96003, -90.9229, 2.55171, 0.07", "3.90389, -91.5633, 2.40791, 0.07", "3.77891, -92.5623, 2.22371, 0.88", "3.68364, -93.0629, 2.13716, 0.88", "3.31982, -94.568, 1.93469, 0.07", "2.9683, -95.7674, 1.80254, 0.66", "2.2207, -97.8788, 1.65128, 0.29", "1.79034, -98.9978, 1.614, 0.29", "1.15255, -100.566, 1.62757, 0.66", "0.690838, -101.651, 1.68638, 0.73", "0.0846018, -103.081, 1.84991, 0.29", "-0.426754, -104.336, 2.01396, 0.81", "-0.994914, -105.913, 2.27223, 0.29", "-1.36432, -107.055, 2.43487, 0.51", "-1.63213, -108.002, 2.57648, 0.15", "-1.91567, -109.061, 2.70717, 0.59", "-2.33121, -110.628, 2.90636, 0.15", "-2.45112, -111.039, 2.95156, 0.81", "-2.80725, -112.076, 3.00731, 0.81", "-3.1292, -112.973, 3.04085, 0.81", "-3.60984, -114.314, 3.09258, 0.22", "-3.78728, -114.834, 3.11698, 0.51", "-4.31162, -116.373, 3.22002, 0.22", "-4.73684, -117.667, 3.29498, 0.66", "-4.91697, -118.288, 3.32735, 0.37", "-5.02753, -118.731, 3.33758, 0.37", "-5.23145, -119.837, 3.36769, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-25.6035, -43.38, -43.8715, 0.95", "-25.9119, -43.9209, -44.1179, 0.95", "-26.3992, -44.7613, -44.3998, 0.95", "-27.1952, -46.0307, -44.7322, 0.22", "-27.766, -46.8599, -44.8998, 0.22", "-28.6209, -48.0117, -45.0899, 0.81", "-29.2236, -48.7458, -45.1873, 0.81", "-30.0746, -49.6606, -45.2295, 0.22", "-31.0042, -50.4675, -45.1928, 0.22", "-31.7199, -50.9341, -45.1221, 0.22", "-32.1181, -51.1264, -45.0676, 0.37", "-33.1536, -51.5017, -44.9372, 0.07", "-33.9973, -51.7368, -44.9284, 0.95", "-35.1513, -52.0097, -45.0552, 0.66", "-36.0688, -52.2328, -45.232, 0.29", "-37.0687, -52.4981, -45.4928, 0.81", "-37.9123, -52.7531, -45.7787, 0.15", "-39.5143, -53.3215, -46.4554, 0.15", "-40.3163, -53.6883, -46.8452, 0.15", "-40.8105, -53.9823, -47.1086, 0.37", "-41.422, -54.423, -47.4399, 0.37", "-42.3583, -55.2136, -47.9269, 0.07", "-42.6561, -55.4977, -48.0605, 0.44", "-43.605, -56.5076, -48.4333, 0.07", "-44.123, -57.1683, -48.673, 0.81", "-44.7218, -58.0713, -48.9827, 0.81", "-45.1225, -58.8241, -49.2246, 0.81", "-45.515, -59.7077, -49.5139, 1.03", "-45.6246, -59.9917, -49.6138, 1.03", "-46.0854, -61.3843, -50.1026, 0.29", "-46.4052, -62.4593, -50.4711, 0.29", "-46.6816, -63.4727, -50.8151, 0.81", "-47.0986, -65.0131, -51.3461, 0.29", "-47.4064, -66.1382, -51.7418, 0.51", "-47.5776, -66.7522, -51.9611, 0.07", "-47.8085, -67.4963, -52.2328, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-25.6035, -43.38, -43.8715, 0.15", "-26.9435, -45.0698, -45.4103, 0.15", "-27.3835, -45.5978, -45.8573, 0.44", "-27.8131, -46.0955, -46.241, 0.15", "-28.3583, -46.698, -46.6655, 0.66", "-29.2905, -47.729, -47.336, 0.22", "-29.7354, -48.2204, -47.6288, 0.51", "-30.2237, -48.7086, -47.8225, 0.15", "-30.7454, -49.2277, -48.0192, 0.22", "-31.189, -49.6989, -48.1851, 0.37", "-31.5317, -50.0989, -48.3098, 0.15", "-31.9758, -50.7073, -48.4724, 0.73", "-32.5032, -51.5619, -48.7363, 0.88", "-33.2204, -52.8821, -49.175, 0.07", "-33.4804, -53.4529, -49.3676, 0.59", "-33.7395, -54.14, -49.6014, 0.07", "-34.0157, -54.9964, -49.8893, 0.73", "-34.356, -56.3402, -50.3135, 0.15", "-34.5565, -57.3344, -50.6058, 0.29", "-34.7054, -58.2057, -50.831, 0.29", "-34.8539, -59.0082, -51.0215, 0.88", "-35.0686, -60.0275, -51.2415, 0.22", "-35.4258, -61.5886, -51.5291, 0.15", "-35.7777, -62.9823, -51.7457, 0.15", "-35.9082, -63.5211, -51.8312, 0.88", "-36.1536, -64.573, -52.0125, 0.29", "-36.2893, -65.2405, -52.132, 0.29", "-36.4528, -66.2775, -52.3391, 0.07", "-36.5676, -67.1913, -52.5452, 0.66", "-36.6811, -68.5355, -52.8766, 0.15", "-36.7303, -69.7004, -53.1954, 0.15", "-36.7333, -70.3784, -53.389, 0.95", "-36.7079, -71.6919, -53.7801, 0.22", "-36.6946, -72.3515, -54.0222, 0.07", "-36.6699, -72.9406, -54.311, 0.37", "-36.653, -73.4256, -54.6224, 0.15", "-36.6201, -74.1088, -55.1888, 0.37", "-36.5953, -74.8829, -55.918, 0.07", "-36.5428, -75.9621, -57.0498, 0.37", "-36.4762, -77.0584, -58.2955, 0.15", "-36.4426, -77.6822, -59.0645, 0.37", "-36.4001, -78.4653, -60.1224, 0.37", "-36.3532, -79.02, -60.9716, 0.44" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "33.3907, -23.5452, -9.07349, 0.73", "34.0176, -24.1804, -9.02991, 0.73", "34.7444, -24.8645, -8.97759, 0.73", "35.5501, -25.6002, -8.9238, 0.51", "36.2909, -26.224, -8.87648, 0.51", "36.9941, -26.7894, -8.84401, 0.66", "37.4862, -27.1727, -8.82444, 0.66", "38.3363, -27.7567, -8.77646, 0.73", "39.1357, -28.2674, -8.67928, 0.73", "40.2051, -28.9202, -8.47674, 0.88", "41.0061, -29.405, -8.26464, 0.88", "41.8552, -29.9493, -7.98012, 0.81", "42.665, -30.4898, -7.64669, 0.59", "43.7227, -31.2076, -7.15132, 0.59", "44.2318, -31.5636, -6.88484, 0.59", "44.7745, -31.9636, -6.5806, 0.59", "45.2967, -32.3558, -6.27059, 0.59", "46.5455, -33.3276, -5.53296, 0.59", "47.2155, -33.8771, -5.17411, 0.59", "47.9634, -34.4994, -4.83185, 0.59", "48.3669, -34.8337, -4.65631, 1.03" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "33.3907, -23.5452, -9.07349, 0.29", "34.1541, -23.8045, -8.62421, 0.29", "34.9439, -24.1081, -8.18758, 0.29", "35.628, -24.3796, -7.84014, 0.59", "36.4336, -24.725, -7.46084, 0.59", "37.4097, -25.1736, -7.03075, 0.29", "38.3477, -25.632, -6.65268, 0.44", "39.5608, -26.2933, -6.26627, 0.66", "40.4621, -26.8267, -6.04016, 0.29", "41.2048, -27.2883, -5.89079, 0.66", "42.1981, -27.9385, -5.73774, 0.29", "42.9476, -28.4402, -5.64072, 0.29", "43.8547, -29.0509, -5.55084, 0.37", "44.2129, -29.2906, -5.52294, 0.37", "44.6256, -29.5572, -5.48527, 0.44", "45.3334, -29.9616, -5.42072, 0.73", "46.1443, -30.3425, -5.34249, 0.51", "47.0796, -30.7094, -5.22442, 0.22", "47.7386, -30.9242, -5.11776, 0.59", "48.6417, -31.1503, -4.96191, 0.29", "49.7975, -31.3302, -4.74637, 0.95", "51.0158, -31.4067, -4.50495, 0.29", "51.4981, -31.3918, -4.40791, 0.59", "52.1791, -31.2947, -4.25386, 0.15", "53.1947, -31.0374, -4.0131, 1.1", "54.1945, -30.6813, -3.74511, 0.51", "54.94, -30.3364, -3.52822, 0.44", "55.8375, -29.8301, -3.27645, 0.44", "56.6239, -29.32, -3.0923, 0.44", "57.3808, -28.7889, -2.93946, 0.66", "57.884, -28.4104, -2.85967, 0.29", "58.5253, -27.8956, -2.76841, 0.73", "59.1418, -27.3699, -2.65311, 0.51", "59.7747, -26.822, -2.48584, 0.51", "60.1943, -26.4859, -2.35167, 0.22", "61.1905, -25.7746, -1.94389, 0.51", "61.6453, -25.4688, -1.7179, 0.81", "62.5, -24.9361, -1.19156, 0.81", "63.1519, -24.5535, -0.718068, 0.81", "63.927, -24.129, -0.088237, 0.81", "64.7731, -23.7156, 0.630699, 0.29", "65.183, -23.5598, 0.993065, 0.29", "65.6526, -23.4181, 1.3948, 0.29", "66.3519, -23.2645, 2.00895, 0.29", "66.7483, -23.203, 2.37262, 0.59", "67.6162, -23.1036, 3.21234, 0.59", "68.1716, -23.0487, 3.75872, 0.59", "68.9912, -22.9803, 4.57121, 1.03", "69.7547, -22.9128, 5.34538, 0.81", "70.2566, -22.8726, 5.85983, 0.44", "70.6706, -22.8428, 6.26983, 0.44", "71.4761, -22.7961, 7.03797, 0.59", "72.2588, -22.7593, 7.72898, 0.37", "72.6869, -22.7502, 8.07327, 0.51", "73.4566, -22.7382, 8.64412, 0.73", "74.3925, -22.7338, 9.2848, 0.15", "75.0962, -22.749, 9.72643, 0.15", "75.8143, -22.7787, 10.1408, 0.22", "76.3081, -22.79, 10.418, 0.88", "76.6625, -22.7818, 10.624, 0.88", "77.4537, -22.7317, 11.089, 0.59", "77.8037, -22.6995, 11.3, 0.59", "77.9886, -22.682, 11.4076, 0.29", "78.5634, -22.6057, 11.7611, 0.29", "79.1837, -22.4795, 12.1652, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "20.4854, 3.15298, -18.6921, 0.59", "19.2746, 3.26509, -19.8762, 0.59", "18.6772, 3.3455, -20.427, 0.59", "17.7881, 3.51166, -21.2633, 0.59", "17.0206, 3.70341, -22.0407, 0.44", "16.1756, 4.00374, -23.0145, 0.44", "15.2705, 4.43268, -24.2099, 0.44", "14.5484, 4.85404, -25.1636, 0.51", "14.0282, 5.19244, -25.8812, 0.51", "13.4079, 5.62391, -26.8031, 0.51", "12.4946, 6.23966, -28.2225, 0.51", "11.544, 6.81713, -29.686, 0.51", "10.9981, 7.10083, -30.4917, 0.37", "10.1191, 7.47052, -31.7731, 0.37", "9.24147, 7.7328, -33.0442, 0.37", "8.35853, 7.89517, -34.2479, 0.37", "7.62806, 7.97136, -35.2427, 0.37", "6.92126, 8.06893, -36.2964, 0.37", "6.47127, 8.19603, -37.1314, 0.37", "5.87746, 8.49207, -38.5293, 0.37", "5.47652, 8.79662, -39.6843, 0.51", "5.19121, 9.10069, -40.6733, 0.29", "4.83487, 9.59757, -42.1205, 0.51", "4.49653, 10.2267, -43.7348, 0.51", "4.32827, 10.7226, -44.9228, 0.51", "4.30644, 10.8733, -45.264, 0.51", "4.35721, 11.065, -45.7246, 0.51", "4.40612, 11.1763, -46.0242, 0.51", "4.46894, 11.2323, -46.2626, 0.51", "5.07139, 11.4197, -47.302, 0.51", "5.6246, 11.5416, -47.869, 0.51", "6.42422, 11.7286, -48.5953, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "20.4854, 3.15298, -18.6921, 0.66", "19.5406, 3.98649, -19.1813, 0.66", "18.9795, 4.5593, -19.4955, 0.37", "18.3905, 5.22214, -19.885, 0.37", "17.7335, 5.95874, -20.3668, 0.73", "17.1823, 6.54287, -20.7675, 0.73", "16.5844, 7.12365, -21.1781, 0.73", "15.9905, 7.66029, -21.5696, 0.81", "15.0836, 8.46211, -22.1566, 0.73", "13.8215, 9.57511, -22.9524, 0.51", "12.8575, 10.423, -23.5618, 0.51", "11.6921, 11.431, -24.2964, 0.51", "10.8894, 12.1538, -24.7991, 0.51", "10.3195, 12.7286, -25.1624, 0.51", "10.0971, 13.027, -25.3147, 0.51", "9.98241, 13.4862, -25.4741, 0.51", "10.0866, 13.9995, -25.5967, 0.51", "10.4724, 14.9021, -25.7619, 0.51", "10.9865, 15.8845, -25.9044, 0.81", "11.3524, 16.5025, -25.9843, 1.03", "12.1987, 17.7189, -26.1071, 0.44", "12.8902, 18.5616, -26.1965, 0.44", "13.4779, 19.1718, -26.2834, 0.44", "14.2482, 19.8279, -26.4405, 0.66", "14.9432, 20.3096, -26.6145, 0.51", "16.1955, 21.0441, -27.0432, 0.44", "17.1856, 21.5318, -27.493, 0.44", "18.3064, 22.0266, -28.0911, 1.03", "19.6921, 22.6125, -28.9616, 0.51", "20.505, 22.9486, -29.5676, 0.51", "21.3317, 23.3023, -30.3207, 0.51", "21.9756, 23.5681, -31.0746, 0.51", "22.3458, 23.7017, -31.5805, 0.51", "22.5437, 23.7654, -31.8995, 0.37", "22.9467, 23.9192, -32.6315, 0.37", "23.3406, 24.1154, -33.3329, 0.37", "23.8515, 24.4357, -34.1897, 0.66", "24.3249, 24.7886, -35.0162, 0.81", "24.8931, 25.2663, -36.0438, 0.59", "25.0895, 25.4552, -36.4068, 0.66", "25.4884, 25.92, -37.213, 0.66", "25.9644, 26.5864, -38.2365, 0.88", "26.4381, 27.3494, -39.3053, 0.37", "26.8889, 28.0815, -40.3615, 0.37", "27.0522, 28.3291, -40.7402, 0.15" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-8.59478, -14.3306, -19.8539, 0.44", "-8.91395, -13.7032, -19.7494, 0.44", "-9.45223, -12.8347, -19.5777, 0.44", "-10.0722, -12.0176, -19.3491, 0.44", "-10.8527, -11.1602, -19.0749, 0.44", "-11.9757, -10.0684, -18.7156, 0.44", "-12.6464, -9.458, -18.5207, 0.73", "-13.4628, -8.78314, -18.3075, 0.51", "-14.4641, -8.02378, -18.0814, 0.51", "-15.2509, -7.44437, -17.93, 0.51", "-16.0639, -6.84268, -17.8199, 0.51", "-16.7957, -6.2658, -17.7744, 0.22", "-18.1648, -5.10141, -17.7219, 0.22", "-18.9436, -4.37744, -17.7162, 0.66", "-19.5603, -3.74316, -17.7419, 0.22", "-20.1153, -3.12254, -17.7616, 0.22", "-20.4676, -2.71956, -17.7735, 0.51", "-20.5806, -2.59304, -17.7775, 0.51" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-8.59478, -14.3306, -19.8539, 0.59", "-8.82764, -15.7127, -19.3843, 0.59", "-8.80199, -16.8277, -18.9397, 0.59", "-8.74623, -17.4346, -18.661, 0.59", "-8.63426, -18.2223, -18.3209, 0.59", "-8.49435, -19.0883, -17.9714, 0.59", "-8.2124, -20.897, -17.2952, 0.59", "-7.91071, -22.2667, -16.8375, 0.59", "-7.62525, -23.5232, -16.5116, 0.59", "-7.3267, -24.938, -16.2286, 0.59", "-7.21349, -25.5301, -16.1535, 0.59", "-7.09319, -26.2929, -16.1238, 0.59", "-6.89858, -27.7786, -16.1995, 0.88", "-6.64733, -29.9557, -16.3159, 0.44", "-6.58457, -30.5954, -16.3468, 0.44", "-6.49309, -31.6385, -16.3861, 0.44", "-6.42369, -32.3491, -16.4192, 0.44", "-6.31204, -33.1985, -16.477, 0.44", "-6.04511, -35.0298, -16.6365, 0.44", "-5.90365, -35.9259, -16.7321, 0.66", "-5.56498, -38.0205, -16.9391, 0.66", "-5.39834, -38.9579, -17.0288, 0.37", "-5.05048, -40.5986, -17.1998, 0.37", "-4.86664, -41.358, -17.2918, 0.37", "-4.64664, -42.1977, -17.4438, 0.37", "-4.33966, -43.3734, -17.6426, 0.07", "-4.23105, -43.8449, -17.7116, 0.44", "-4.08519, -44.6849, -17.8383, 0.07", "-3.98717, -45.6309, -17.9984, 0.22", "-3.9503, -46.7416, -18.2151, 0.29", "-3.97119, -47.4511, -18.3672, 0.59", "-4.07845, -48.9057, -18.6942, 0.15", "-4.19661, -50.0441, -18.9271, 0.73", "-4.34452, -51.1833, -19.1373, 0.29", "-4.50032, -52.4716, -19.3411, 0.59", "-4.62288, -53.6105, -19.5068, 0.22", "-4.79091, -55.1577, -19.7455, 0.22", "-4.92145, -56.4574, -19.9594, 0.73", "-4.98987, -57.3712, -20.1556, 1.1", "-5.07493, -59.0465, -20.5861, 0.15", "-5.11429, -60.1716, -20.8862, 0.29", "-5.14679, -61.1281, -21.1474, 0.07", "-5.17133, -61.9386, -21.3694, 0.88", "-5.1818, -63.7208, -21.7753, 0.07", "-5.16597, -64.322, -21.8769, 0.37", "-5.11484, -65.4451, -21.9932, 0.07", "-5.0452, -66.4257, -22.0436, 0.07", "-4.97416, -67.291, -22.0303, 0.95", "-4.83084, -68.8744, -21.926, 0.29", "-4.68021, -70.2722, -21.7504, 0.88", "-4.41776, -72.1572, -21.5142, 0.07", "-4.20906, -73.3463, -21.3818, 0.07", "-3.96155, -74.6935, -21.2067, 0.73", "-3.78965, -75.6205, -21.0846, 0.88", "-3.46837, -77.352, -20.8659, 0.22", "-3.16981, -78.9574, -20.6429, 0.22", "-2.94041, -80.1851, -20.4797, 0.95", "-2.66553, -81.6476, -20.3231, 0.07", "-2.42207, -83.0257, -20.2333, 0.15", "-2.31819, -83.8136, -20.1911, 0.88", "-2.19118, -85.1207, -20.1509, 0.07", "-2.11467, -86.3427, -20.1201, 0.51", "-2.06373, -87.3692, -20.1025, 0.22", "-2.02409, -88.0802, -20.105, 0.81", "-1.96375, -89.7005, -20.1147, 0.22", "-1.9626, -90.3289, -20.1267, 0.22", "-1.99473, -91.3125, -20.1444, 0.51", "-2.02494, -91.8831, -20.1471, 0.44", "-2.05517, -92.49, -20.1316, 0.81", "-2.08896, -93.4697, -20.0955, 0.44", "-2.10421, -94.0334, -20.0731, 0.44", "-2.16657, -95.6066, -19.9953, 0.29", "-2.23749, -97.1671, -19.9028, 0.66", "-2.26914, -98.1266, -19.843, 0.22", "-2.27887, -99.6293, -19.722, 0.59" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "0.32379, -2.92726, -26.5563, 0.22", "0.447564, -1.60886, -27.0532, 0.22", "0.507621, -0.515798, -27.4146, 0.44", "0.59927, 0.672545, -27.8911, 0.15", "0.716711, 2.08863, -28.4726, 0.15", "0.816518, 3.29204, -28.9667, 0.15", "0.948701, 4.88584, -29.6212, 0.15", "0.987159, 6.23991, -30.1816, 0.66", "1.02286, 8.10411, -30.998, 0.66", "1.06168, 9.20397, -31.4642, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "0.32379, -2.92726, -26.5563, 0.37", "1.22955, -2.3233, -27.6498, 0.37", "2.23223, -1.65472, -28.8603, 0.37", "2.83734, -1.25123, -29.5908, 0.88", "3.96941, -0.496365, -30.9575, 0.95", "5.33813, 0.416289, -32.6099, 1.25", "6.66035, 1.29795, -34.2062, 1.18" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "2.10338, -30.1871, -11.969, 0.51", "2.65694, -30.9788, -11.7374, 0.51", "3.2813, -32.0302, -11.504, 0.51", "3.7231, -32.8183, -11.3484, 0.51", "4.04622, -33.4197, -11.2349, 1.03", "4.33453, -33.9564, -11.1335, 1.25", "4.51774, -34.2974, -11.0692, 1.25", "5.08347, -35.4123, -10.8659, 0.73", "5.57853, -36.5213, -10.7049, 0.88", "5.71356, -36.8635, -10.6798, 1.03" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "2.10338, -30.1871, -11.969, 0.59", "1.47029, -31.2045, -12.1358, 0.59", "1.00911, -32.0983, -12.292, 0.59", "0.771006, -32.598, -12.3799, 0.59", "0.278823, -33.6167, -12.5541, 0.73", "-0.285093, -34.6136, -12.7189, 0.73", "-0.796714, -35.3288, -12.8307, 0.73", "-1.18599, -35.7899, -12.9203, 0.73", "-1.50834, -36.0888, -13.0098, 0.73", "-2.28286, -36.635, -13.2716, 0.88", "-3.41367, -37.2158, -13.7895, 0.88", "-5.07755, -37.927, -14.6699, 0.37", "-6.03005, -38.306, -15.2613, 0.51", "-6.99433, -38.679, -16.1839, 0.95", "-7.93255, -39.0428, -17.3153, 1.03", "-9.34, -39.6342, -19.3045, 1.03", "-9.87777, -39.9049, -20.1698, 1.03", "-10.6894, -40.3713, -21.5926, 0.81", "-13.3592, -42.1856, -26.4111, 0.44", "-13.8041, -42.5485, -27.2163, 0.88", "-14.2197, -42.9602, -27.9582, 0.88", "-14.8569, -43.6604, -29.0826, 0.51", "-15.135, -43.9798, -29.5674, 0.51", "-15.6103, -44.5985, -30.2741, 0.59", "-16.2693, -45.681, -30.6459, 0.95", "-16.7332, -46.5158, -30.8961, 0.95" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-47.8085, -67.4963, -52.2328, 0.44", "-47.9067, -68.5029, -53.0348, 0.44", "-48.1126, -69.2898, -53.5756, 0.95", "-48.2822, -69.7688, -53.8334, 0.95", "-48.9733, -71.5302, -54.6101, 0.29", "-49.2489, -72.2059, -54.8731, 0.44", "-49.6124, -73.0391, -55.1726, 0.22", "-50.3675, -74.5994, -55.6305, 1.03", "-51.1394, -76.0089, -55.9908, 0.37", "-51.9392, -77.4088, -56.2911, 0.07", "-52.4449, -78.2811, -56.4367, 0.81", "-52.9314, -79.0886, -56.5756, 0.07", "-53.3897, -79.8604, -56.7144, 1.1", "-54.4906, -81.7288, -57.071, 0.22", "-54.958, -82.5119, -57.2331, 0.88", "-55.3226, -83.1342, -57.3621, 0.88", "-56.1184, -84.5694, -57.661, 0.37", "-56.5806, -85.4809, -57.8571, 0.15", "-56.9421, -86.2176, -58.0172, 0.15", "-57.2642, -86.8953, -58.1672, 0.81", "-58.0812, -88.6249, -58.5604, 0.07", "-58.3505, -89.245, -58.7027, 0.95", "-58.6877, -90.2298, -58.9319, 0.15" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-47.8085, -67.4963, -52.2328, 0.59", "-47.5536, -68.0011, -51.5808, 0.59", "-47.1582, -68.832, -50.6384, 0.59", "-46.6092, -69.9373, -49.523, 0.59", "-46.0923, -70.9477, -48.6076, 0.44", "-45.5547, -72.0084, -47.7372, 0.73", "-44.9532, -73.2713, -46.8177, 0.29", "-44.7273, -73.7737, -46.5023, 0.29", "-44.367, -74.6764, -46.0264, 0.29", "-44.1034, -75.332, -45.7784, 0.29", "-43.8948, -75.7946, -45.6804, 0.29", "-43.4599, -76.6556, -45.639, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "48.3669, -34.8337, -4.65631, 0.81", "49.6119, -35.5688, -4.71494, 0.81", "51.3723, -36.4371, -4.84911, 0.37", "52.574, -36.9651, -4.95789, 0.37", "53.4065, -37.3091, -5.05894, 0.37", "55.7778, -38.1791, -5.40946, 0.37", "56.8444, -38.5427, -5.5809, 0.37", "58.4506, -38.9651, -5.91072, 0.51", "59.2254, -39.1321, -6.08733, 0.51", "60.0759, -39.2873, -6.27862, 0.51", "61.7325, -39.5657, -6.62158, 0.66", "62.4006, -39.6718, -6.74165, 0.44", "63.7359, -39.8906, -6.95238, 0.44", "65.3264, -40.2222, -7.13748, 0.44", "66.4646, -40.5179, -7.19013, 0.51", "67.7751, -40.9296, -7.12046, 0.51", "68.8009, -41.3164, -6.98452, 0.51", "69.919, -41.7967, -6.7672, 0.59", "71.3017, -42.5117, -6.37264, 0.37", "72.425, -43.1974, -5.98922, 0.37", "73.438, -43.9638, -5.69235, 0.66", "73.8236, -44.2891, -5.59925, 0.66", "75.0497, -45.3884, -5.38214, 0.22", "76.3455, -46.5443, -5.25697, 0.44", "77.3678, -47.4275, -5.25455, 0.66", "79.3694, -49.0979, -5.41359, 0.66", "80.1541, -49.7487, -5.49905, 0.73", "80.4647, -49.9963, -5.52435, 0.73", "81.5185, -50.7572, -5.58643, 0.44", "82.1084, -51.1287, -5.61062, 0.44", "83.3012, -51.8083, -5.61153, 0.59", "84.6259, -52.5154, -5.56971, 0.37", "85.3522, -52.9183, -5.57884, 0.37", "86.5095, -53.5676, -5.64452, 0.95", "87.7492, -54.2664, -5.79215, 0.73", "88.4688, -54.6639, -5.90398, 0.73", "89.2257, -55.083, -6.04294, 0.44", "90.1804, -55.6325, -6.22846, 0.81", "90.8195, -56.0301, -6.34014, 0.37", "91.9783, -56.7775, -6.44042, 0.81", "93.1454, -57.554, -6.41928, 0.07", "93.7509, -57.9631, -6.35223, 0.51", "94.3077, -58.355, -6.24517, 0.29", "95.2577, -59.1059, -6.02516, 0.07", "96.0312, -59.7911, -5.81434, 0.66", "96.5288, -60.2542, -5.62708, 0.95", "97.209, -60.8994, -5.34062, 0.29", "97.8208, -61.4819, -5.07375, 0.59", "98.7291, -62.3477, -4.66477, 0.22", "99.4622, -63.0455, -4.33838, 0.95", "100.812, -64.3325, -3.76713, 0.15", "101.372, -64.8685, -3.53234, 0.73", "101.766, -65.2609, -3.36219, 0.73", "102.41, -65.9195, -3.09351, 0.07", "102.938, -66.5125, -2.9313, 0.07", "103.208, -66.8473, -2.88305, 0.81", "104.257, -68.2802, -2.82133, 0.15", "104.753, -68.9753, -2.83416, 0.66", "105.804, -70.4888, -2.92789, 0.15", "106.98, -72.1596, -3.10533, 0.88", "107.391, -72.7135, -3.18391, 0.88", "108.076, -73.5419, -3.3541, 0.51", "108.806, -74.314, -3.57615, 0.07", "109.084, -74.584, -3.66984, 0.29", "109.767, -75.1539, -3.90875, 0.07", "110.294, -75.4929, -4.03765, 0.29", "111.269, -76.0242, -4.3228, 0.07", "111.638, -76.187, -4.44393, 0.88" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "48.3669, -34.8337, -4.65631, 0.51", "49.3843, -35.0215, -4.47506, 0.51", "50.571, -35.091, -4.20704, 0.37", "51.2628, -35.0213, -4.05154, 0.37", "52.0555, -34.8019, -3.87171, 0.37", "53.1742, -34.3137, -3.5093, 0.29", "53.8169, -33.9792, -3.27363, 0.29", "54.8736, -33.2585, -2.78033, 0.44", "55.8031, -32.4821, -2.2737, 0.22", "56.6577, -31.712, -1.74071, 0.81", "57.9974, -30.4961, -0.856499, 0.81", "58.3563, -30.1891, -0.615334, 0.81", "59.2348, -29.5687, -0.0285308, 0.22", "59.7777, -29.2985, 0.336582, 0.44", "60.8013, -28.9446, 1.06887, 0.22", "61.4561, -28.7866, 1.51862, 0.22", "61.9389, -28.6982, 1.81358, 0.73", "62.7285, -28.5649, 2.30499, 0.51", "64.1572, -28.349, 3.18396, 0.29", "65.616, -28.1363, 4.08429, 0.29", "66.214, -28.0278, 4.45724, 0.37", "66.9839, -27.8445, 4.97916, 0.15", "67.6923, -27.6533, 5.49612, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "6.66035, 1.29795, -34.2062, 0.59", "7.21288, 2.03899, -35.105, 0.59", "7.89941, 2.95329, -36.1176, 0.59", "8.2166, 3.40321, -36.5701, 0.59", "9.17331, 4.87295, -37.9843, 0.59", "9.94532, 6.01509, -39.138, 0.59", "10.3317, 6.524, -39.704, 0.95", "10.6967, 6.90984, -40.1768, 0.95", "11.5667, 7.66343, -41.1671, 0.44", "12.4696, 8.32424, -42.097, 0.88", "14.0635, 9.2999, -43.5554, 0.44", "15.1593, 9.83124, -44.5527, 0.22", "16.1543, 10.232, -45.478, 0.22", "17.3231, 10.6485, -46.589, 0.59", "17.7786, 10.7999, -47.0162, 0.59", "18.5005, 11.0571, -47.7129, 0.59", "20.3868, 11.8234, -49.5777, 0.59", "20.6533, 11.9475, -49.844, 0.59", "22.1775, 12.7121, -51.3621, 0.29", "23.3807, 13.3242, -52.5739, 1.25", "24.698, 14.0075, -53.8893, 0.59", "25.216, 14.2807, -54.362, 0.73", "25.9168, 14.6646, -54.9031, 0.73", "26.5859, 15.0191, -55.4016, 0.73" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "6.66035, 1.29795, -34.2062, 0.66", "6.71892, 0.30271, -35.3974, 0.66", "6.65445, -0.658144, -36.8268, 0.44", "6.65163, -1.15706, -37.679, 0.44", "6.70226, -1.63608, -38.5812, 0.44", "6.83455, -2.24048, -39.7549, 0.44", "7.01202, -2.94718, -41.0974, 0.44", "7.1778, -3.64799, -42.5647, 0.44", "7.32191, -4.32427, -44.0575, 0.44", "7.46429, -4.89684, -45.4576, 0.44", "7.63418, -5.53434, -47.3179, 0.44", "7.68007, -5.71418, -47.9107, 0.44", "7.70532, -5.88111, -48.5468, 0.44", "7.66297, -5.96864, -49.2092, 0.44", "7.28971, -5.90218, -51.136, 0.44", "7.11256, -5.7094, -52.0595, 0.44", "7.01996, -5.36368, -53.269, 0.22", "7.02176, -5.23256, -53.8048, 0.22", "7.12165, -4.95841, -55.7394, 0.22", "7.19199, -4.91907, -56.6156, 0.22", "7.27583, -4.99914, -58.0623, 0.51", "7.3176, -5.18478, -60.0651, 0.37", "7.24596, -5.37475, -61.792, 0.22", "6.99948, -5.80139, -63.9757, 0.22", "6.892, -5.96119, -64.521, 0.51", "6.21826, -6.79194, -66.8698, 0.29", "5.97145, -7.03792, -67.5175, 0.29", "5.57942, -7.35866, -68.3729, 0.29", "4.33038, -8.1547, -70.6945, 0.29", "4.14859, -8.22902, -71.012, 0.29", "3.45604, -8.37381, -72.1543, 0.29", "2.30085, -8.43245, -73.6872, 0.29", "1.22013, -8.38149, -74.8817, 0.15", "-0.20565, -8.20541, -76.1705, 0.15", "-2.3526, -7.80975, -77.7798, 0.15", "-3.83335, -7.54708, -78.8462, 0.81", "-6.21675, -7.16865, -80.4889, 0.07", "-7.52818, -7.02289, -81.3892, 0.07", "-8.4579, -6.95754, -82.1033, 0.07", "-10.3531, -6.96225, -83.758, 0.44", "-11.6603, -7.08678, -84.9537, 0.29", "-12.5584, -7.23701, -85.929, 0.29", "-13.3277, -7.41923, -87.0057, 0.81", "-14.6107, -7.79045, -89.0844, 0.22", "-14.8315, -7.85978, -89.4816, 0.22", "-15.4341, -8.0386, -90.5805, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "5.71356, -36.8635, -10.6798, 0.59", "6.13223, -37.0377, -10.6081, 0.59", "7.14501, -37.41, -10.4199, 0.51", "7.99083, -37.7043, -10.3206, 0.51", "9.05336, -38.051, -10.246, 0.29", "9.35284, -38.1423, -10.2386, 0.29", "10.3756, -38.4401, -10.2399, 0.29", "10.9174, -38.5951, -10.2312, 0.95", "11.9018, -38.8798, -10.2061, 0.88", "12.7483, -39.1405, -10.1935, 0.37", "13.4423, -39.3605, -10.1601, 0.37", "13.8143, -39.4807, -10.1288, 0.59", "15.4324, -40.0564, -9.85362, 0.07", "16.0355, -40.2974, -9.67553, 0.29", "16.7806, -40.6386, -9.34285, 0.15", "17.6792, -41.1414, -8.78051, 0.15", "18.0126, -41.3592, -8.51604, 0.66", "18.719, -41.8607, -7.88068, 0.66", "19.4114, -42.3934, -7.1995, 0.66", "20.0923, -42.9513, -6.49018, 0.51", "20.998, -43.7824, -5.47553, 0.22", "21.3833, -44.2082, -5.04104, 0.59", "21.6075, -44.5001, -4.78931, 0.66", "21.9, -44.9725, -4.46305, 0.29", "22.0296, -45.2447, -4.30059, 0.29", "22.3028, -45.9458, -3.95071, 0.29", "22.5696, -46.6925, -3.64851, 0.44", "22.8418, -47.4102, -3.38017, 0.66", "23.3527, -48.6236, -2.93204, 0.22", "23.5997, -49.135, -2.73538, 0.22", "24.0526, -49.9694, -2.41731, 0.22", "24.3938, -50.5622, -2.19827, 0.59", "24.7858, -51.2379, -1.93567, 0.59", "25.3026, -52.1549, -1.58138, 0.22", "25.6416, -52.7896, -1.35905, 0.44", "25.8894, -53.2927, -1.1916, 0.59", "26.1731, -53.8989, -1.00304, 0.59", "26.4421, -54.4797, -0.839703, 0.59", "26.6895, -54.9429, -0.726835, 0.59", "27.0966, -55.5328, -0.642755, 0.29", "27.7973, -56.2876, -0.581255, 0.73", "28.5577, -56.9249, -0.555886, 0.51", "29.1121, -57.3118, -0.539052, 0.51", "30.1479, -57.9181, -0.553841, 0.37", "31.0725, -58.3741, -0.57855, 0.37", "32.006, -58.7772, -0.604, 0.44", "32.6335, -59.0219, -0.616335, 0.37", "33.3616, -59.28, -0.611125, 0.44", "34.6667, -59.7374, -0.575122, 0.22", "35.516, -60.0559, -0.490559, 0.44", "36.1955, -60.3345, -0.315513, 0.59", "37.1589, -60.7554, 0.0124489, 0.29", "38.078, -61.1544, 0.361739, 0.15", "38.721, -61.4383, 0.63764, 0.15", "39.749, -61.9198, 1.21408, 1.1", "41.2559, -62.6721, 2.18317, 0.44", "42.1677, -63.1396, 2.87071, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "5.71356, -36.8635, -10.6798, 0.81", "6.39953, -38.2592, -11.3432, 0.81", "7.09461, -39.69, -12.0012, 0.51", "7.63821, -40.7995, -12.4829, 0.22", "8.02321, -41.5967, -12.7971, 0.59", "8.4998, -42.5845, -13.1618, 0.95", "8.86933, -43.3796, -13.4398, 0.22", "9.21915, -44.1686, -13.6915, 0.59", "9.55394, -44.9615, -13.989, 0.81", "9.94402, -45.9703, -14.4116, 0.81", "10.1909, -46.8305, -14.783, 0.29", "10.3144, -47.4328, -15.0507, 0.29", "10.4734, -48.3394, -15.5121, 0.29", "10.6309, -49.2854, -16.0196, 0.29", "10.7484, -50.0079, -16.3945, 0.81", "10.8993, -50.8125, -16.8055, 0.95", "11.1065, -51.8393, -17.2969, 0.29", "11.367, -52.9816, -17.8123, 0.66", "11.5885, -53.9279, -18.1943, 0.81", "11.8902, -55.2169, -18.6803, 0.81", "12.1435, -56.3538, -19.1158, 0.29", "12.249, -56.8497, -19.3253, 0.29", "12.3387, -57.383, -19.579, 0.29", "12.4027, -57.9927, -19.894, 0.37", "12.4465, -58.8851, -20.4032, 0.51", "12.4402, -59.5883, -20.812, 0.95", "12.3983, -60.6103, -21.3763, 0.22", "12.3765, -61.3999, -21.7898, 0.73", "12.3735, -61.891, -22.0179, 0.73", "12.3891, -62.401, -22.2255, 0.37", "12.4502, -63.1709, -22.5052, 0.73", "12.5977, -64.3639, -22.8786, 0.22", "12.6824, -64.8702, -23.0217, 0.22", "12.8473, -65.7115, -23.243, 0.51", "12.9465, -66.1712, -23.3738, 0.88", "13.1844, -67.3421, -23.742, 0.15", "13.4422, -68.7054, -24.1951, 1.25", "13.6223, -69.7341, -24.5569, 0.95", "13.7894, -70.8066, -24.9813, 0.59", "13.9508, -72.0153, -25.5137, 0.29", "14.0537, -73.0453, -25.998, 0.22", "14.0813, -73.4102, -26.1843, 0.22", "14.1017, -73.7609, -26.3911, 0.22", "14.1644, -74.3465, -26.8236, 0.22", "14.244, -74.8148, -27.231, 0.22", "14.3276, -75.1745, -27.5584, 0.22", "14.5128, -75.8401, -28.1839, 0.95", "14.6382, -76.3346, -28.6285, 0.95", "14.9686, -77.7766, -29.7715, 0.37", "15.0335, -78.0657, -29.9657, 0.37", "15.1322, -78.4711, -30.2091, 0.37", "15.3591, -79.4543, -30.729, 0.29", "15.4971, -80.2006, -31.0605, 1.1", "15.6439, -81.2379, -31.4589, 0.51", "15.7045, -82.1037, -31.7346, 0.37", "15.7582, -82.8779, -32.0012, 0.29", "15.8213, -83.5867, -32.29, 0.88", "15.9282, -84.4673, -32.6715, 0.59", "15.9979, -84.9505, -32.9033, 0.07", "16.0491, -85.3329, -33.1007, 0.07", "16.1754, -86.2325, -33.5781, 0.81", "16.4291, -87.5533, -34.3046, 0.29", "16.6356, -88.2831, -34.7264, 0.29", "16.8462, -88.9166, -35.0705, 0.29", "17.0339, -89.4129, -35.3277, 0.29", "17.3212, -90.1201, -35.6791, 1.18", "17.8856, -91.556, -36.3223, 0.15", "18.2073, -92.4199, -36.6693, 1.18", "18.6585, -93.6565, -37.1613, 0.15", "19.0979, -94.8245, -37.6036, 0.73", "19.4196, -95.6817, -37.9082, 1.18", "19.8679, -96.9633, -38.3156, 0.15", "20.2851, -98.2151, -38.6692, 0.15", "20.6993, -99.4187, -39.0057, 0.37", "20.9267, -100.016, -39.1741, 1.1", "21.3576, -101.069, -39.4407, 0.66", "21.7644, -101.956, -39.6524, 0.29", "22.1561, -102.695, -39.8355, 0.22", "22.5826, -103.467, -40.0359, 0.22", "22.9021, -104.052, -40.1823, 0.22", "23.1645, -104.541, -40.3155, 0.59", "23.3858, -104.959, -40.436, 0.22", "23.8822, -105.944, -40.7392, 1.03", "24.4634, -107.251, -41.1554, 0.22", "24.7499, -107.945, -41.401, 0.22", "25.0255, -108.66, -41.6648, 0.81", "25.0913, -108.841, -41.7335, 0.81", "25.3561, -109.623, -42.0299, 0.07", "25.5081, -110.093, -42.2065, 0.07", "25.8237, -111.177, -42.5771, 1.03", "26.1072, -112.313, -42.9327, 0.07", "26.2494, -112.998, -43.1248, 0.88", "26.315, -113.399, -43.2314, 0.88", "26.4366, -114.612, -43.5296, 0.22", "26.4445, -115.325, -43.7089, 0.22", "26.4005, -115.83, -43.8517, 0.51", "26.2961, -116.467, -44.0726, 0.15", "26.1649, -117.032, -44.2888, 0.15", "26.0099, -117.574, -44.5348, 0.81", "25.6389, -118.694, -45.1526, 0.15", "25.4897, -119.162, -45.4675, 0.15", "25.314, -119.702, -45.8679, 0.15", "25.1649, -120.311, -46.3506, 0.81", "24.9877, -121.493, -47.2898, 0.07", "24.9357, -122.307, -47.9166, 0.07", "24.9963, -123.224, -48.5704, 0.59", "25.0642, -123.686, -48.8666, 0.95", "25.3564, -124.967, -49.6193, 0.22", "25.5277, -125.544, -49.9121, 0.22", "25.7268, -126.115, -50.1588, 0.73", "26.2018, -127.531, -50.6952, 0.15", "26.4847, -128.352, -50.9754, 0.15", "26.694, -128.977, -51.1845, 0.15", "26.8575, -129.602, -51.3887, 0.44", "27.0549, -130.434, -51.6912, 0.15", "27.2218, -131.193, -51.986, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-16.7332, -46.5158, -30.8961, 0.29", "-17.1215, -47.4595, -30.7925, 0.29", "-17.727, -48.6848, -30.7435, 0.29", "-18.0585, -49.3315, -30.7367, 0.29", "-18.3126, -49.7876, -30.7244, 0.29", "-18.6991, -50.5124, -30.6954, 0.44", "-19.1396, -51.4425, -30.6147, 0.44", "-19.5485, -52.3452, -30.5151, 0.44", "-19.7301, -52.7993, -30.4646, 0.44", "-20.1746, -54.0928, -30.2857, 0.29", "-20.4416, -54.9992, -30.1314, 0.44", "-20.8529, -56.5432, -29.8334, 0.44", "-21.0692, -57.2998, -29.6739, 0.44", "-21.1874, -57.6425, -29.6049, 0.44", "-21.561, -58.4975, -29.4178, 0.44", "-22.141, -59.5686, -29.1918, 0.15", "-22.5633, -60.169, -29.0757, 0.81", "-23.5334, -61.2741, -28.8744, 0.29", "-24.1819, -61.9272, -28.7601, 0.29", "-25.288, -63.0052, -28.603, 0.59", "-25.9663, -63.6603, -28.5162, 0.73", "-26.6815, -64.3428, -28.4319, 0.59", "-27.3131, -64.943, -28.3633, 0.59", "-28.1951, -65.7553, -28.2969, 0.29", "-29.4357, -66.8821, -28.2149, 0.22", "-30.1863, -67.5545, -28.1916, 0.88", "-30.9666, -68.248, -28.1655, 0.29", "-31.381, -68.5958, -28.181, 0.29", "-32.1693, -69.2002, -28.2368, 0.29", "-33.0073, -69.7523, -28.3142, 0.29", "-33.4096, -69.9873, -28.3637, 0.88", "-34.5683, -70.6495, -28.5458, 0.66", "-36.3684, -71.6867, -28.8797, 0.29", "-37.3199, -72.255, -29.0622, 0.29", "-37.9927, -72.6658, -29.1994, 0.73", "-38.6751, -73.0774, -29.3322, 0.73", "-39.0462, -73.3056, -29.3917, 0.73", "-40.2576, -74.084, -29.5212, 1.03", "-40.7904, -74.4592, -29.5531, 0.73", "-41.3061, -74.8239, -29.5958, 0.29", "-42.6065, -75.7432, -29.609, 0.51", "-43.6668, -76.4785, -29.5716, 0.07", "-44.2659, -76.8875, -29.5348, 0.37", "-44.8456, -77.292, -29.4845, 0.37", "-45.8851, -78.0278, -29.3874, 0.81", "-47.1596, -79.0017, -29.2801, 0.29", "-47.8273, -79.5584, -29.2415, 0.29", "-48.3758, -80.0496, -29.224, 0.07", "-48.8735, -80.5342, -29.2216, 0.66", "-49.4758, -81.185, -29.2343, 0.66", "-50.3243, -82.2435, -29.3147, 0.15", "-50.6734, -82.7287, -29.3882, 0.15", "-51.2493, -83.6144, -29.5306, 0.15", "-51.6595, -84.3074, -29.6746, 0.88", "-52.3558, -85.5671, -29.9851, 0.44", "-52.7689, -86.3439, -30.2128, 0.44", "-52.9579, -86.6963, -30.3272, 0.44", "-53.3661, -87.4811, -30.5863, 0.44", "-54.0152, -88.785, -31.0125, 0.81", "-54.7657, -90.332, -31.5409, 0.22", "-55.1898, -91.2238, -31.8353, 0.22", "-55.5618, -91.99, -32.0672, 0.59", "-55.9184, -92.721, -32.288, 0.37", "-56.2221, -93.3637, -32.4776, 0.81", "-56.8844, -94.8957, -32.9262, 0.15", "-57.1649, -95.6264, -33.1474, 0.37", "-57.5522, -96.7083, -33.4672, 0.07", "-57.9021, -97.7803, -33.7725, 0.81", "-58.0337, -98.2379, -33.8941, 0.81", "-58.3563, -99.907, -34.2882, 0.22", "-58.4296, -100.644, -34.431, 0.22", "-58.4429, -101.438, -34.5688, 0.22", "-58.3714, -102.411, -34.7049, 1.03", "-58.2097, -103.236, -34.7729, 0.51", "-57.7426, -104.734, -34.8315, 0.22", "-57.6713, -104.897, -34.827, 0.59", "-57.4756, -105.278, -34.8067, 0.59", "-57.3296, -105.528, -34.7851, 0.59", "-56.6, -106.773, -34.6521, 0.29", "-56.3278, -107.244, -34.5921, 0.22", "-55.878, -108.002, -34.4531, 0.22", "-55.4651, -108.687, -34.3248, 0.51", "-55.1692, -109.172, -34.231, 0.07", "-54.9293, -109.586, -34.149, 0.66" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-16.7332, -46.5158, -30.8961, 0.22", "-16.6483, -47.2829, -31.9472, 0.22", "-16.5676, -48.3327, -33.6678, 0.29", "-16.4972, -49.201, -35.5018, 0.37", "-16.4069, -49.5838, -36.6067, 0.37", "-16.3674, -49.662, -37.0239, 0.37", "-16.2559, -49.7078, -37.9892, 0.37", "-16.0801, -49.5919, -39.0574, 0.37", "-15.946, -49.3578, -40.0121, 0.37", "-15.7955, -48.8106, -41.5331, 0.37", "-15.5826, -48.0388, -43.4376, 0.37", "-15.1841, -47.1813, -45.6833, 0.37", "-14.7182, -46.6084, -47.3676, 0.37", "-14.0759, -46.0107, -49.395, 0.37", "-13.7011, -45.7441, -50.4777, 0.37", "-13.1719, -45.4855, -51.7912, 0.37", "-12.0697, -45.2493, -53.9533, 0.37", "-10.9205, -45.1222, -55.9556, 0.37", "-9.96837, -44.9975, -57.4684, 0.37", "-9.75127, -44.9495, -57.8119, 0.37", "-9.42708, -44.8272, -58.344, 0.37", "-8.92877, -44.3291, -59.4298, 0.37", "-8.88567, -43.773, -60.0346, 0.37", "-9.33455, -42.3429, -61.3178, 0.37", "-9.91757, -41.2121, -62.3475, 0.22", "-10.319, -40.6191, -62.9268, 0.88", "-10.8359, -40.0644, -63.5096, 1.03", "-12.2106, -38.9044, -64.8397, 0.22", "-13.6039, -38.0066, -66.0372, 0.22", "-14.5343, -37.5665, -66.7343, 0.66", "-14.9307, -37.4292, -67.0154, 0.73", "-16.6363, -36.9476, -68.1676, 0.07", "-17.7464, -36.6784, -68.8116, 0.95", "-19.7247, -36.2822, -69.7452, 0.66", "-21.5667, -35.9404, -70.4207, 0.07", "-23.2921, -35.6397, -70.9588, 1.03", "-24.0768, -35.508, -71.1474, 1.03", "-26.3968, -35.1054, -71.5185, 0.07", "-27.5761, -34.8698, -71.6311, 0.07", "-28.7842, -34.5838, -71.667, 1.03", "-30.2263, -34.1843, -71.6504, 0.29", "-31.7647, -33.7266, -71.6135, 0.29", "-32.944, -33.3765, -71.6356, 0.22", "-34.2029, -32.9811, -71.7435, 0.22", "-35.4591, -32.5446, -71.9295, 0.51", "-36.877, -32.0759, -72.2563, 0.73", "-37.6051, -31.8794, -72.5325, 0.15", "-38.7017, -31.6494, -73.1031, 0.15", "-39.2587, -31.5607, -73.4332, 0.59", "-40.1007, -31.4554, -73.9769, 1.25", "-41.8907, -31.2554, -75.1967, 0.22", "-43.5684, -31.1638, -76.2847, 0.29", "-44.4447, -31.1565, -76.8038, 0.07", "-44.7966, -31.1654, -76.986, 0.66", "-45.5663, -31.2175, -77.3544, 1.03", "-47.139, -31.3674, -78.0012, 0.44", "-48.8761, -31.5589, -78.5925, 0.15", "-49.7846, -31.6706, -78.8406, 0.73", "-50.5776, -31.7907, -79.0433, 0.73", "-51.9184, -32.0445, -79.3404, 0.73", "-53.2522, -32.3519, -79.5935, 0.07", "-53.9023, -32.5242, -79.7047, 0.81", "-54.7452, -32.777, -79.8462, 0.81", "-55.2118, -32.9317, -79.9321, 0.81", "-56.5524, -33.4415, -80.2102, 0.07", "-57.3319, -33.7399, -80.3687, 0.51", "-59.0081, -34.324, -80.5989, 0.07", "-60.2145, -34.682, -80.7333, 1.1", "-60.9983, -34.8759, -80.7887, 0.95", "-62.5385, -35.1697, -80.8678, 0.07", "-63.8837, -35.3478, -80.8932, 0.07", "-66.3139, -35.4569, -80.7098, 0.22", "-67.7852, -35.361, -80.4156, 0.95", "-69.1676, -35.0768, -79.9665, 0.22", "-69.7904, -34.8551, -79.6666, 0.66", "-70.2635, -34.5519, -79.3236, 0.66", "-71.4597, -33.2655, -77.9695, 0.07", "-71.9727, -32.3188, -77.0688, 0.07", "-72.281, -31.4579, -76.2831, 0.29", "-72.4685, -30.6726, -75.6485, 0.88", "-72.7774, -29.1284, -74.4753, 0.37", "-73.0384, -27.6533, -73.4992, 0.37", "-73.1725, -26.657, -72.9583, 0.15", "-73.2605, -26.1216, -72.709, 0.15", "-73.5185, -25.1478, -72.3347, 0.15", "-74.0406, -23.8649, -71.9769, 0.15", "-74.439, -23.2146, -71.8723, 0.29", "-74.8494, -22.7244, -71.7812, 0.15", "-75.9615, -21.6189, -71.4245, 0.59", "-76.5408, -21.0685, -71.1973, 0.59", "-77.3956, -20.2866, -70.8488, 0.59", "-77.8361, -19.9193, -70.6591, 0.59", "-79.9304, -18.3333, -69.7307, 0.44", "-81.4947, -17.2093, -69.0265, 0.44", "-82.2912, -16.6234, -68.6288, 0.29", "-83.1979, -15.9192, -68.1344, 0.29", "-84.6562, -14.726, -67.3179, 0.29", "-85.2956, -14.1696, -67.0083, 0.29", "-86.4813, -13.0841, -66.5753, 0.44", "-87.714, -11.9281, -66.174, 0.29", "-88.4543, -11.1969, -65.9511, 0.29", "-88.9911, -10.622, -65.7908, 0.66", "-90.2067, -9.20119, -65.4831, 0.15", "-90.955, -8.3151, -65.2978, 0.15", "-91.838, -7.32008, -65.1484, 0.37", "-92.524, -6.60976, -65.0929, 0.07", "-93.1809, -5.97132, -65.0222, 0.59" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_30", "dend_23", "dend_14", "dend_3", "dend_0", "dend_69", "dend_46", "dend_40", "dend_31", "dend_25", "dend_24", "dend_16", "dend_15", "dend_13", "dend_4", "dend_2", "dend_1", "dend_81", "dend_70", "dend_66", "dend_47", "dend_44", "dend_41", "dend_37", "dend_32", "dend_27", "dend_26", "dend_20", "dend_17", "dend_12", "dend_5", "dend_85", "dend_82", "dend_80", "dend_71", "dend_68", "dend_67", "dend_57", "dend_48", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_33", "dend_29", "dend_28", "dend_22", "dend_21", "dend_19", "dend_18", "dend_7", "dend_6", "dend_84", "dend_83", "dend_75", "dend_72", "dend_63", "dend_58", "dend_56", "dend_49", "dend_35", "dend_34", "dend_9", "dend_8", "dend_77", "dend_76", "dend_74", "dend_73", "dend_65", "dend_64", "dend_62", "dend_59", "dend_53", "dend_50", "dend_11", "dend_10", "dend_79", "dend_78", "dend_61", "dend_60", "dend_55", "dend_54", "dend_52", "dend_51" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_30", "dend_23", "dend_14", "dend_3", "dend_0", "dend_69", "dend_46", "dend_40", "dend_31", "dend_25", "dend_24", "dend_16", "dend_15", "dend_13", "dend_4", "dend_2", "dend_1", "dend_81", "dend_70", "dend_66", "dend_47", "dend_44", "dend_41", "dend_37", "dend_32", "dend_27", "dend_26", "dend_20", "dend_17", "dend_12", "dend_5", "dend_85", "dend_82", "dend_80", "dend_71", "dend_68", "dend_67", "dend_57", "dend_48", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_33", "dend_29", "dend_28", "dend_22", "dend_21", "dend_19", "dend_18", "dend_7", "dend_6", "dend_84", "dend_83", "dend_75", "dend_72", "dend_63", "dend_58", "dend_56", "dend_49", "dend_35", "dend_34", "dend_9", "dend_8", "dend_77", "dend_76", "dend_74", "dend_73", "dend_65", "dend_64", "dend_62", "dend_59", "dend_53", "dend_50", "dend_11", "dend_10", "dend_79", "dend_78", "dend_61", "dend_60", "dend_55", "dend_54", "dend_52", "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_49", "dend_49", "dend_49", "dend_49", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_DLAC_612b4ae64f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_69, id: dend_69, parent: dend_45
create dend_69
public dend_69
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_30
create dend_40
public dend_40
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_3
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_81, id: dend_81, parent: dend_69
create dend_81
public dend_81
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_46
create dend_66
public dend_66
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_85, id: dend_85, parent: dend_81
create dend_85
public dend_85
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_80, id: dend_80, parent: dend_70
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_57, id: dend_57, parent: dend_47
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_48
create dend_56
public dend_56
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_30, dend_23, dend_14, dend_3, dend_0, dend_69, dend_46, dend_40, dend_31, dend_25, dend_24, dend_16, dend_15, dend_13, dend_4, dend_2, dend_1, dend_81, dend_70, dend_66, dend_47, dend_44, dend_41, dend_37, dend_32, dend_27, dend_26, dend_20, dend_17, dend_12, dend_5, dend_85, dend_82, dend_80, dend_71, dend_68, dend_67, dend_57, dend_48, dend_43, dend_42, dend_39, dend_38, dend_36, dend_33, dend_29, dend_28, dend_22, dend_21, dend_19, dend_18, dend_7, dend_6, dend_84, dend_83, dend_75, dend_72, dend_63, dend_58, dend_56, dend_49, dend_35, dend_34, dend_9, dend_8, dend_77, dend_76, dend_74, dend_73, dend_65, dend_64, dend_62, dend_59, dend_53, dend_50, dend_11, dend_10, dend_79, dend_78, dend_61, dend_60, dend_55, dend_54, dend_52, dend_51]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_30, dend_23, dend_14, dend_3, dend_0, dend_69, dend_46, dend_40, dend_31, dend_25, dend_24, dend_16, dend_15, dend_13, dend_4, dend_2, dend_1, dend_81, dend_70, dend_66, dend_47, dend_44, dend_41, dend_37, dend_32, dend_27, dend_26, dend_20, dend_17, dend_12, dend_5, dend_85, dend_82, dend_80, dend_71, dend_68, dend_67, dend_57, dend_48, dend_43, dend_42, dend_39, dend_38, dend_36, dend_33, dend_29, dend_28, dend_22, dend_21, dend_19, dend_18, dend_7, dend_6, dend_84, dend_83, dend_75, dend_72, dend_63, dend_58, dend_56, dend_49, dend_35, dend_34, dend_9, dend_8, dend_77, dend_76, dend_74, dend_73, dend_65, dend_64, dend_62, dend_59, dend_53, dend_50, dend_11, dend_10, dend_79, dend_78, dend_61, dend_60, dend_55, dend_54, dend_52, dend_51]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_80
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.4499999818776125)
    connect dend_30(0), soma_0(0.4499999818776125)
    connect dend_23(0), soma_0(0.4499999818776125)
    connect dend_14(0), soma_0(0.4499999818776125)
    connect dend_3(0), soma_0(0.4499999818776125)
    connect dend_0(0), soma_0(0.4499999818776125)
    connect axon_0(0), soma_0(1.0)
    connect dend_69(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_81(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_85(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_80(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_57(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.00951, 5.08132, 0.0, 4.38636 ) }
    soma_0 { pt3dadd( -6.34112, 4.62908, 0.0, 7.80444 ) }
    soma_0 { pt3dadd( -5.67273, 4.17685, 0.0, 10.4664 ) }
    soma_0 { pt3dadd( -5.00435, 3.72461, 0.0, 11.8372 ) }
    soma_0 { pt3dadd( -4.33596, 3.27237, 0.0, 12.8115 ) }
    soma_0 { pt3dadd( -3.66757, 2.82013, 0.0, 13.5463 ) }
    soma_0 { pt3dadd( -2.99919, 2.36789, 0.0, 14.0993 ) }
    soma_0 { pt3dadd( -2.3308, 1.91565, 0.0, 14.4262 ) }
    soma_0 { pt3dadd( -1.66241, 1.46342, 0.0, 14.2857 ) }
    soma_0 { pt3dadd( -0.994026, 1.01118, 0.0, 14.2244 ) }
    soma_0 { pt3dadd( -0.325639, 0.55894, 0.0, 14.1556 ) }
    soma_0 { pt3dadd( 0.342748, 0.106702, 0.0, 13.8899 ) }
    soma_0 { pt3dadd( 1.01114, -0.345536, 0.0, 13.1949 ) }
    soma_0 { pt3dadd( 1.67952, -0.797774, 0.0, 12.4248 ) }
    soma_0 { pt3dadd( 2.34791, -1.25001, 0.0, 11.902 ) }
    soma_0 { pt3dadd( 3.0163, -1.70225, 0.0, 11.0988 ) }
    soma_0 { pt3dadd( 3.68468, -2.15449, 0.0, 10.0172 ) }
    soma_0 { pt3dadd( 4.35307, -2.60673, 0.0, 8.82625 ) }
    soma_0 { pt3dadd( 5.02146, -3.05897, 0.0, 7.39062 ) }
    soma_0 { pt3dadd( 5.68984, -3.5112, 0.0, 5.46094 ) }
    soma_0 { pt3dadd( 6.35823, -3.96344, 0.0, 3.2092 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 5.5102, -6.49826, -5.14, 4.99 ) }
    dend_45 { pt3dadd( 6.02007, -7.05082, -5.789, 4.99 ) }
    dend_45 { pt3dadd( 6.74191, -7.83311, -6.7078, 4.04 ) }
    dend_45 { pt3dadd( 7.6376, -8.8038, -7.8479, 3.01 ) }
    dend_45 { pt3dadd( 8.833, -10.0993, -9.36949, 3.01 ) }
    dend_45 { pt3dadd( 9.67609, -11.013, -10.4426, 3.16 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 5.4902, -5.67826, -0.700001, 2.94 ) }
    dend_30 { pt3dadd( 5.77928, -5.93293, -0.700001, 2.94 ) }
    dend_30 { pt3dadd( 6.28522, -6.37864, -0.700001, 3.08 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 30/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.5502, 7.82099, -6.11, 0.73 ) }
    dend_23 { pt3dadd( 1.52936, 8.45777, -6.04202, 0.73 ) }
    dend_23 { pt3dadd( 1.51126, 9.44122, -5.90998, 0.73 ) }
    dend_23 { pt3dadd( 1.51829, 10.1984, -5.80866, 0.73 ) }
    dend_23 { pt3dadd( 1.58655, 11.7734, -5.63235, 0.73 ) }
    dend_23 { pt3dadd( 1.68216, 13.3613, -5.50551, 0.95 ) }
    dend_23 { pt3dadd( 1.77077, 14.9123, -5.41148, 0.95 ) }
    dend_23 { pt3dadd( 1.84688, 15.867, -5.40021, 0.95 ) }
    dend_23 { pt3dadd( 2.01481, 17.4093, -5.44965, 0.66 ) }
    dend_23 { pt3dadd( 2.15249, 18.6289, -5.54525, 0.66 ) }
    dend_23 { pt3dadd( 2.26256, 19.6778, -5.67143, 0.66 ) }
    dend_23 { pt3dadd( 2.33683, 20.3686, -5.80046, 0.81 ) }
    dend_23 { pt3dadd( 2.48372, 21.7408, -6.18884, 0.81 ) }
    dend_23 { pt3dadd( 2.54914, 22.3569, -6.39231, 0.81 ) }
    dend_23 { pt3dadd( 2.63327, 23.5538, -6.86641, 1.1 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 45/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 3.1702, 7.34949, -2.39, 1.32 ) }
    dend_14 { pt3dadd( 3.20714, 7.60478, -2.22669, 1.32 ) }
    dend_14 { pt3dadd( 3.43322, 9.16709, -1.22725, 1.32 ) }
    dend_14 { pt3dadd( 3.62559, 10.4965, -0.376805, 1.47 ) }
    dend_14 { pt3dadd( 3.77253, 11.5119, 0.272785, 1.54 ) }
    dend_14 { pt3dadd( 3.87337, 12.2087, 0.718558, 1.62 ) }
    dend_14 { pt3dadd( 4.08992, 13.7052, 1.67588, 1.84 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 52/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.9298, -0.276513, -5.05, 1.47 ) }
    dend_3 { pt3dadd( -8.08678, -0.240996, -5.0767, 1.47 ) }
    dend_3 { pt3dadd( -9.2155, -0.0155831, -5.24971, 1.25 ) }
    dend_3 { pt3dadd( -10.1208, 0.0945069, -5.3702, 0.88 ) }
    dend_3 { pt3dadd( -11.1686, 0.221933, -5.50966, 0.95 ) }
    dend_3 { pt3dadd( -11.9466, 0.316556, -5.61322, 0.95 ) }
    dend_3 { pt3dadd( -12.935, 0.436756, -5.74478, 0.95 ) }
    dend_3 { pt3dadd( -13.878, 0.534947, -5.85347, 1.54 ) }
    dend_3 { pt3dadd( -15.0986, 0.592004, -5.9399, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.5298, -2.96201, -0.280001, 0.73 ) }
    dend_0 { pt3dadd( -6.87618, -3.82237, -0.0380076, 0.73 ) }
    dend_0 { pt3dadd( -7.07099, -4.65554, 0.177013, 0.73 ) }
    dend_0 { pt3dadd( -7.14542, -5.13865, 0.290772, 0.88 ) }
    dend_0 { pt3dadd( -7.21541, -5.80886, 0.461793, 0.88 ) }
    dend_0 { pt3dadd( -7.26117, -6.31795, 0.600579, 0.88 ) }
    dend_0 { pt3dadd( -7.30648, -6.97862, 0.780452, 0.88 ) }
    dend_0 { pt3dadd( -7.30053, -8.41488, 1.1675, 0.59 ) }
    dend_0 { pt3dadd( -7.27337, -9.20413, 1.37668, 0.59 ) }
    dend_0 { pt3dadd( -7.2197, -10.4609, 1.71422, 0.81 ) }
    dend_0 { pt3dadd( -7.16159, -11.803, 2.06994, 1.54 ) }
    dend_0 { pt3dadd( -7.13348, -12.4135, 2.23709, 1.54 ) }
    dend_0 { pt3dadd( -7.10574, -13.0307, 2.40548, 1.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.35823, -3.96344, 0.0, 0.711861 ) }
    axon_0 { pt3dadd( 18.7817, -12.3693, 0.0, 0.711861 ) }
    axon_0 { pt3dadd( 31.2051, -20.7751, 0.0, 0.711861 ) }
    // Section: dend_69, id: dend_69, parent: dend_45 (entry count 77/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 9.67609, -11.013, -10.4426, 2.28 ) }
    dend_69 { pt3dadd( 10.7246, -10.473, -10.9492, 2.28 ) }
    dend_69 { pt3dadd( 11.2406, -10.2073, -11.1985, 2.57 ) }
    dend_69 { pt3dadd( 12.2779, -9.67299, -11.6996, 1.32 ) }
    dend_69 { pt3dadd( 13.6447, -8.96908, -12.3599, 1.47 ) }
    dend_69 { pt3dadd( 14.4082, -8.57589, -12.7288, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 9.67609, -11.013, -10.4426, 1.54 ) }
    dend_46 { pt3dadd( 9.01438, -12.0644, -10.7807, 1.54 ) }
    dend_46 { pt3dadd( 8.58796, -12.7708, -11.0155, 1.54 ) }
    dend_46 { pt3dadd( 7.9234, -13.944, -11.4681, 1.54 ) }
    dend_46 { pt3dadd( 7.72041, -14.3094, -11.6584, 1.54 ) }
    dend_46 { pt3dadd( 7.47899, -14.7752, -11.9281, 1.54 ) }
    dend_46 { pt3dadd( 7.19691, -15.3195, -12.2433, 1.54 ) }
    dend_46 { pt3dadd( 6.97181, -15.8236, -12.569, 1.54 ) }
    dend_46 { pt3dadd( 6.66885, -16.5226, -13.0827, 1.54 ) }
    dend_46 { pt3dadd( 6.22453, -17.5996, -13.9756, 1.54 ) }
    dend_46 { pt3dadd( 5.84974, -18.5089, -14.8022, 1.91 ) }
    // Section: dend_40, id: dend_40, parent: dend_30 (entry count 94/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 6.28522, -6.37864, -0.700001, 0.95 ) }
    dend_40 { pt3dadd( 8.82482, -6.31677, -0.122445, 0.95 ) }
    dend_40 { pt3dadd( 11.3667, -6.25484, 0.455633, 0.95 ) }
    dend_40 { pt3dadd( 13.6219, -6.19989, 0.968509, 0.81 ) }
    dend_40 { pt3dadd( 14.7369, -6.17273, 1.22208, 1.1 ) }
    dend_40 { pt3dadd( 16.8302, -6.12173, 1.69815, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_40 { pt3dadd( 18.1406, -6.0898, 1.99615, 1.4 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 1/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.28522, -6.37864, -0.700001, 0.88 ) }
    dend_31 { pt3dadd( 6.73371, -8.24407, -1.19498, 0.88 ) }
    dend_31 { pt3dadd( 6.97832, -9.24528, -1.41415, 0.88 ) }
    dend_31 { pt3dadd( 7.40352, -10.9297, -1.7319, 1.18 ) }
    dend_31 { pt3dadd( 7.86309, -12.6854, -1.9831, 0.66 ) }
    dend_31 { pt3dadd( 8.218, -14.0017, -2.12137, 0.88 ) }
    dend_31 { pt3dadd( 8.43622, -14.7819, -2.16508, 0.95 ) }
    dend_31 { pt3dadd( 8.79078, -15.9067, -2.14363, 1.1 ) }
    dend_31 { pt3dadd( 8.97562, -16.4673, -2.11143, 1.1 ) }
    dend_31 { pt3dadd( 9.28137, -17.361, -1.97861, 1.1 ) }
    dend_31 { pt3dadd( 9.57785, -18.2948, -1.82385, 1.1 ) }
    dend_31 { pt3dadd( 9.91937, -19.3922, -1.51334, 1.47 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 13/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.63327, 23.5538, -6.86641, 0.66 ) }
    dend_25 { pt3dadd( 2.51829, 24.2542, -7.21261, 0.66 ) }
    dend_25 { pt3dadd( 2.45211, 24.8787, -7.49672, 0.66 ) }
    dend_25 { pt3dadd( 2.41548, 25.5153, -7.83162, 0.66 ) }
    dend_25 { pt3dadd( 2.37029, 26.1271, -8.1957, 0.81 ) }
    dend_25 { pt3dadd( 2.33412, 26.5128, -8.45945, 0.81 ) }
    dend_25 { pt3dadd( 2.29974, 26.853, -8.70066, 0.81 ) }
    dend_25 { pt3dadd( 2.27349, 27.2575, -9.00401, 0.95 ) }
    dend_25 { pt3dadd( 2.22375, 27.9986, -9.60527, 0.73 ) }
    dend_25 { pt3dadd( 2.19503, 28.4227, -9.958, 0.73 ) }
    dend_25 { pt3dadd( 2.15323, 29.0857, -10.4841, 0.88 ) }
    dend_25 { pt3dadd( 2.13857, 29.3907, -10.7252, 1.03 ) }
    dend_25 { pt3dadd( 2.13196, 29.9308, -11.118, 0.73 ) }
    dend_25 { pt3dadd( 2.14552, 30.2658, -11.3356, 0.73 ) }
    dend_25 { pt3dadd( 2.19486, 30.836, -11.6392, 0.81 ) }
    dend_25 { pt3dadd( 2.25892, 31.2333, -11.8218, 0.59 ) }
    dend_25 { pt3dadd( 2.34447, 31.6246, -11.9722, 0.59 ) }
    dend_25 { pt3dadd( 2.44326, 32.0006, -12.1184, 0.88 ) }
    dend_25 { pt3dadd( 2.51478, 32.2182, -12.1909, 1.1 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 32/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.63327, 23.5538, -6.86641, 0.29 ) }
    dend_24 { pt3dadd( 3.83831, 23.4185, -6.62616, 0.29 ) }
    dend_24 { pt3dadd( 4.99747, 23.2895, -6.38707, 0.37 ) }
    dend_24 { pt3dadd( 5.26151, 23.2502, -6.34052, 0.29 ) }
    dend_24 { pt3dadd( 5.73586, 23.1569, -6.25943, 0.29 ) }
    dend_24 { pt3dadd( 6.95783, 22.8784, -6.04954, 0.51 ) }
    dend_24 { pt3dadd( 7.83733, 22.6643, -5.89665, 0.29 ) }
    dend_24 { pt3dadd( 8.86393, 22.3826, -5.70671, 0.51 ) }
    dend_24 { pt3dadd( 10.0927, 22.0364, -5.48718, 0.29 ) }
    dend_24 { pt3dadd( 10.7299, 21.8915, -5.38601, 0.29 ) }
    dend_24 { pt3dadd( 11.0394, 21.8453, -5.37084, 0.29 ) }
    dend_24 { pt3dadd( 11.1891, 21.8469, -5.38681, 0.29 ) }
    dend_24 { pt3dadd( 11.772, 21.926, -5.48271, 0.29 ) }
    dend_24 { pt3dadd( 12.4203, 22.0489, -5.61308, 0.29 ) }
    dend_24 { pt3dadd( 13.0669, 22.1532, -5.74544, 0.73 ) }
    dend_24 { pt3dadd( 14.639, 22.2705, -6.03185, 0.73 ) }
    dend_24 { pt3dadd( 16.1124, 22.2495, -6.24736, 0.73 ) }
    dend_24 { pt3dadd( 17.0551, 22.1689, -6.35582, 0.73 ) }
    dend_24 { pt3dadd( 18.143, 22.0022, -6.43553, 0.44 ) }
    dend_24 { pt3dadd( 19.5961, 21.6919, -6.5279, 0.44 ) }
    dend_24 { pt3dadd( 20.8919, 21.3403, -6.59841, 0.59 ) }
    dend_24 { pt3dadd( 21.6757, 21.0738, -6.61062, 0.22 ) }
    dend_24 { pt3dadd( 21.8376, 21.0052, -6.61428, 0.59 ) }
    dend_24 { pt3dadd( 22.8486, 20.5277, -6.66221, 0.29 ) }
    dend_24 { pt3dadd( 23.61, 20.1645, -6.6944, 0.59 ) }
    dend_24 { pt3dadd( 25.2022, 19.4692, -6.78046, 0.22 ) }
    dend_24 { pt3dadd( 26.2175, 19.0753, -6.82508, 0.73 ) }
    dend_24 { pt3dadd( 27.1061, 18.7523, -6.86232, 0.66 ) }
    dend_24 { pt3dadd( 27.9438, 18.4517, -6.90114, 0.37 ) }
    dend_24 { pt3dadd( 28.5954, 18.2303, -6.93111, 0.37 ) }
    dend_24 { pt3dadd( 29.7491, 17.9034, -6.9708, 0.81 ) }
    dend_24 { pt3dadd( 30.8835, 17.6561, -6.99636, 0.37 ) }
    dend_24 { pt3dadd( 31.7591, 17.4948, -7.01114, 0.15 ) }
    dend_24 { pt3dadd( 32.9643, 17.2979, -7.03315, 0.15 ) }
    dend_24 { pt3dadd( 33.653, 17.1736, -7.02266, 0.59 ) }
    dend_24 { pt3dadd( 34.7321, 16.931, -6.97368, 0.59 ) }
    dend_24 { pt3dadd( 35.5668, 16.7112, -6.91369, 0.07 ) }
    dend_24 { pt3dadd( 36.3301, 16.5239, -6.85464, 0.07 ) }
    dend_24 { pt3dadd( 36.9704, 16.3884, -6.77539, 0.81 ) }
    dend_24 { pt3dadd( 38.6423, 16.069, -6.55658, 0.44 ) }
    dend_24 { pt3dadd( 39.4541, 15.9176, -6.45377, 0.07 ) }
    dend_24 { pt3dadd( 40.3837, 15.7497, -6.33638, 0.81 ) }
    dend_24 { pt3dadd( 41.4534, 15.5766, -6.23161, 0.29 ) }
    dend_24 { pt3dadd( 42.6343, 15.4226, -6.16663, 0.66 ) }
    dend_24 { pt3dadd( 43.9906, 15.2668, -6.12391, 0.22 ) }
    dend_24 { pt3dadd( 44.5872, 15.2114, -6.14862, 0.44 ) }
    dend_24 { pt3dadd( 45.4451, 15.1341, -6.22768, 0.07 ) }
    dend_24 { pt3dadd( 46.1172, 15.0497, -6.32146, 0.44 ) }
    dend_24 { pt3dadd( 47.3285, 14.8298, -6.52556, 0.07 ) }
    dend_24 { pt3dadd( 47.8711, 14.6923, -6.64074, 0.44 ) }
    dend_24 { pt3dadd( 48.6875, 14.425, -6.8022, 0.07 ) }
    dend_24 { pt3dadd( 49.7552, 14.0287, -7.01396, 0.81 ) }
    dend_24 { pt3dadd( 51.0258, 13.5201, -7.21945, 0.07 ) }
    dend_24 { pt3dadd( 51.7819, 13.1906, -7.29484, 0.37 ) }
    dend_24 { pt3dadd( 53.1923, 12.5184, -7.38501, 0.59 ) }
    dend_24 { pt3dadd( 54.1422, 12.0603, -7.42962, 0.59 ) }
    dend_24 { pt3dadd( 54.9822, 11.6421, -7.44015, 0.07 ) }
    dend_24 { pt3dadd( 55.9349, 11.1639, -7.43383, 1.1 ) }
    dend_24 { pt3dadd( 57.6229, 10.3434, -7.40046, 0.22 ) }
    dend_24 { pt3dadd( 58.4286, 9.97624, -7.39663, 0.22 ) }
    dend_24 { pt3dadd( 59.6353, 9.47823, -7.38558, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 93/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.08992, 13.7052, 1.67588, 0.81 ) }
    dend_16 { pt3dadd( 5.76757, 14.1282, 1.1351, 0.81 ) }
    dend_16 { pt3dadd( 7.82471, 14.647, 0.472012, 0.81 ) }
    dend_16 { pt3dadd( 10.1467, 15.2325, -0.276465, 0.81 ) }
    dend_16 { pt3dadd( 11.8033, 15.6503, -0.810452, 0.81 ) }
    dend_16 { pt3dadd( 13.1321, 15.9853, -1.23876, 1.47 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.08992, 13.7052, 1.67588, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_15 { pt3dadd( 2.69505, 14.3051, 2.07909, 0.81 ) }
    dend_15 { pt3dadd( 1.90829, 14.6219, 2.30778, 0.81 ) }
    dend_15 { pt3dadd( 1.26689, 14.8858, 2.49999, 0.81 ) }
    dend_15 { pt3dadd( -0.483347, 15.6729, 3.02752, 0.66 ) }
    dend_15 { pt3dadd( -2.23716, 16.5295, 3.55714, 0.88 ) }
    dend_15 { pt3dadd( -3.01175, 16.9196, 3.78898, 0.44 ) }
    dend_15 { pt3dadd( -3.58907, 17.1808, 3.9632, 0.44 ) }
    dend_15 { pt3dadd( -4.1196, 17.451, 4.1101, 0.44 ) }
    dend_15 { pt3dadd( -4.87822, 17.9358, 4.29368, 0.73 ) }
    dend_15 { pt3dadd( -5.20039, 18.1933, 4.33392, 0.88 ) }
    dend_15 { pt3dadd( -5.55758, 18.5323, 4.36624, 0.88 ) }
    dend_15 { pt3dadd( -6.42778, 19.4051, 4.42103, 0.95 ) }
    dend_15 { pt3dadd( -7.43103, 20.3884, 4.48444, 0.44 ) }
    dend_15 { pt3dadd( -8.16479, 21.0365, 4.53908, 0.59 ) }
    dend_15 { pt3dadd( -9.03663, 21.6591, 4.58274, 0.29 ) }
    dend_15 { pt3dadd( -9.37664, 21.8942, 4.60062, 0.29 ) }
    dend_15 { pt3dadd( -9.92347, 22.2711, 4.63296, 0.29 ) }
    dend_15 { pt3dadd( -10.6236, 22.6984, 4.68913, 0.29 ) }
    dend_15 { pt3dadd( -11.3675, 22.9792, 4.78445, 0.29 ) }
    dend_15 { pt3dadd( -12.7579, 23.2982, 4.92959, 0.59 ) }
    // Section: dend_13, id: dend_13, parent: dend_3 (entry count 20/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -15.0986, 0.592004, -5.9399, 0.95 ) }
    dend_13 { pt3dadd( -15.5021, 0.474568, -5.09484, 0.95 ) }
    dend_13 { pt3dadd( -16.1074, 0.151799, -3.89755, 0.81 ) }
    dend_13 { pt3dadd( -16.8128, -0.390217, -2.58336, 1.03 ) }
    dend_13 { pt3dadd( -17.0576, -0.623467, -2.16518, 1.03 ) }
    dend_13 { pt3dadd( -17.3014, -0.915499, -1.75896, 0.73 ) }
    dend_13 { pt3dadd( -17.6896, -1.50403, -1.07244, 0.51 ) }
    dend_13 { pt3dadd( -17.86, -1.98332, -0.748719, 0.51 ) }
    dend_13 { pt3dadd( -17.9176, -2.50807, -0.546027, 0.88 ) }
    dend_13 { pt3dadd( -17.9081, -2.94873, -0.437237, 0.88 ) }
    dend_13 { pt3dadd( -17.8511, -3.5716, -0.283717, 0.88 ) }
    dend_13 { pt3dadd( -17.7687, -4.22104, -0.0754986, 1.03 ) }
    dend_13 { pt3dadd( -17.7126, -4.64028, 0.0760593, 1.03 ) }
    dend_13 { pt3dadd( -17.5915, -5.56243, 0.436172, 0.44 ) }
    dend_13 { pt3dadd( -17.5316, -6.10858, 0.655886, 0.44 ) }
    dend_13 { pt3dadd( -17.4925, -6.90216, 0.961672, 1.1 ) }
    dend_13 { pt3dadd( -17.593, -8.04778, 1.36645, 0.51 ) }
    dend_13 { pt3dadd( -17.6935, -8.45316, 1.48676, 0.51 ) }
    dend_13 { pt3dadd( -17.8564, -8.8508, 1.58386, 0.51 ) }
    dend_13 { pt3dadd( -17.9832, -9.07586, 1.62489, 0.51 ) }
    dend_13 { pt3dadd( -18.3976, -9.65475, 1.69716, 0.66 ) }
    dend_13 { pt3dadd( -18.9773, -10.3185, 1.72253, 0.66 ) }
    dend_13 { pt3dadd( -19.585, -10.9281, 1.70289, 0.73 ) }
    dend_13 { pt3dadd( -20.1974, -11.5399, 1.68094, 0.95 ) }
    dend_13 { pt3dadd( -20.351, -11.6955, 1.67913, 0.95 ) }
    dend_13 { pt3dadd( -20.9115, -12.2978, 1.68268, 0.66 ) }
    dend_13 { pt3dadd( -21.3361, -12.7777, 1.69241, 0.44 ) }
    dend_13 { pt3dadd( -21.9705, -13.524, 1.71406, 0.88 ) }
    dend_13 { pt3dadd( -22.3691, -14.0202, 1.73356, 0.59 ) }
    dend_13 { pt3dadd( -22.6411, -14.3904, 1.74937, 0.59 ) }
    dend_13 { pt3dadd( -22.9396, -14.8629, 1.75338, 0.59 ) }
    dend_13 { pt3dadd( -23.1816, -15.3052, 1.72686, 0.59 ) }
    dend_13 { pt3dadd( -23.5057, -15.893, 1.64836, 0.95 ) }
    dend_13 { pt3dadd( -23.9174, -16.6336, 1.50358, 0.59 ) }
    dend_13 { pt3dadd( -24.1267, -17.0055, 1.41479, 0.59 ) }
    dend_13 { pt3dadd( -24.4885, -17.6642, 1.24086, 0.59 ) }
    dend_13 { pt3dadd( -24.7617, -18.2207, 1.09353, 0.59 ) }
    dend_13 { pt3dadd( -25.2207, -19.3907, 0.799756, 0.59 ) }
    dend_13 { pt3dadd( -25.3182, -19.6977, 0.737605, 0.59 ) }
    dend_13 { pt3dadd( -25.472, -20.2595, 0.623847, 0.88 ) }
    dend_13 { pt3dadd( -25.6973, -21.1271, 0.458694, 0.95 ) }
    dend_13 { pt3dadd( -25.8734, -21.8085, 0.340544, 0.66 ) }
    dend_13 { pt3dadd( -26.18, -23.046, 0.103101, 0.51 ) }
    dend_13 { pt3dadd( -26.3548, -23.8019, -0.0944159, 0.51 ) }
    dend_13 { pt3dadd( -26.5718, -24.6552, -0.363575, 0.51 ) }
    dend_13 { pt3dadd( -26.7023, -25.1288, -0.562168, 0.37 ) }
    dend_13 { pt3dadd( -26.8736, -25.6815, -0.841606, 0.29 ) }
    dend_13 { pt3dadd( -27.0957, -26.2395, -1.18042, 0.81 ) }
    dend_13 { pt3dadd( -27.3361, -26.7224, -1.54071, 0.88 ) }
    dend_13 { pt3dadd( -27.5988, -27.1756, -1.91709, 1.03 ) }
    dend_13 { pt3dadd( -28.2003, -28.0765, -2.6908, 0.37 ) }
    dend_13 { pt3dadd( -28.3817, -28.3148, -2.94011, 0.37 ) }
    dend_13 { pt3dadd( -28.6867, -28.6434, -3.36369, 0.37 ) }
    dend_13 { pt3dadd( -28.9852, -28.8844, -3.74846, 0.37 ) }
    dend_13 { pt3dadd( -29.3059, -29.0714, -4.13491, 0.66 ) }
    dend_13 { pt3dadd( -29.5728, -29.1627, -4.44582, 0.44 ) }
    dend_13 { pt3dadd( -30.2893, -29.2238, -5.2227, 0.44 ) }
    dend_13 { pt3dadd( -30.4506, -29.2208, -5.40824, 1.32 ) }
    dend_13 { pt3dadd( -30.5666, -29.2084, -5.55015, 1.32 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.0986, 0.592004, -5.9399, 1.1 ) }
    dend_4 { pt3dadd( -15.5099, -0.834882, -6.42294, 1.1 ) }
    dend_4 { pt3dadd( -15.7734, -1.80603, -6.778, 0.95 ) }
    dend_4 { pt3dadd( -16.0316, -2.82905, -7.1558, 0.88 ) }
    dend_4 { pt3dadd( -16.3704, -4.24877, -7.69556, 0.88 ) }
    dend_4 { pt3dadd( -16.5675, -5.10196, -8.02754, 0.88 ) }
    dend_4 { pt3dadd( -16.7953, -6.0747, -8.39774, 0.95 ) }
    dend_4 { pt3dadd( -16.9477, -6.83973, -8.70068, 1.1 ) }
    dend_4 { pt3dadd( -17.0469, -7.43274, -8.94567, 1.1 ) }
    dend_4 { pt3dadd( -17.1022, -7.87181, -9.13638, 1.1 ) }
    dend_4 { pt3dadd( -17.1414, -8.46573, -9.39449, 1.18 ) }
    dend_4 { pt3dadd( -17.1555, -9.70002, -9.95241, 0.81 ) }
    dend_4 { pt3dadd( -17.1277, -10.3848, -10.2769, 0.81 ) }
    dend_4 { pt3dadd( -17.0717, -11.047, -10.5909, 0.88 ) }
    dend_4 { pt3dadd( -16.9357, -12.3553, -11.226, 1.1 ) }
    dend_4 { pt3dadd( -16.7417, -13.8475, -11.9549, 0.81 ) }
    dend_4 { pt3dadd( -16.5667, -14.8756, -12.4735, 0.88 ) }
    dend_4 { pt3dadd( -16.4711, -15.307, -12.7033, 0.95 ) }
    dend_4 { pt3dadd( -16.2435, -16.3321, -13.235, 1.32 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 98/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.10574, -13.0307, 2.40548, 0.66 ) }
    dend_2 { pt3dadd( -7.84286, -14.4468, 2.01592, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_2 { pt3dadd( -8.63815, -15.6342, 1.69556, 0.81 ) }
    dend_2 { pt3dadd( -9.51608, -16.8204, 1.42313, 0.51 ) }
    dend_2 { pt3dadd( -10.1902, -17.6654, 1.2767, 0.73 ) }
    dend_2 { pt3dadd( -11.0541, -18.7017, 1.13965, 0.95 ) }
    dend_2 { pt3dadd( -11.7855, -19.5856, 1.04864, 1.25 ) }
    dend_2 { pt3dadd( -13.0163, -20.9974, 0.939184, 0.66 ) }
    dend_2 { pt3dadd( -13.6697, -21.7339, 0.885054, 0.66 ) }
    dend_2 { pt3dadd( -14.4988, -22.6483, 0.864217, 0.51 ) }
    dend_2 { pt3dadd( -15.2818, -23.5335, 0.900188, 0.88 ) }
    dend_2 { pt3dadd( -15.883, -24.2394, 0.989867, 0.44 ) }
    dend_2 { pt3dadd( -16.6413, -25.2238, 1.19171, 0.44 ) }
    dend_2 { pt3dadd( -17.2876, -26.083, 1.42431, 0.44 ) }
    dend_2 { pt3dadd( -17.9775, -26.8987, 1.71164, 0.44 ) }
    dend_2 { pt3dadd( -18.6705, -27.6279, 2.03285, 0.81 ) }
    dend_2 { pt3dadd( -19.5322, -28.3944, 2.4342, 1.18 ) }
    dend_2 { pt3dadd( -20.4677, -29.1342, 2.87045, 0.44 ) }
    dend_2 { pt3dadd( -21.0391, -29.5467, 3.12974, 0.44 ) }
    dend_2 { pt3dadd( -22.0053, -30.1988, 3.50365, 0.37 ) }
    dend_2 { pt3dadd( -22.7223, -30.6961, 3.72199, 0.37 ) }
    dend_2 { pt3dadd( -24.0505, -31.6591, 4.06406, 0.37 ) }
    dend_2 { pt3dadd( -24.3424, -31.8898, 4.12294, 0.73 ) }
    dend_2 { pt3dadd( -25.0751, -32.5227, 4.27055, 0.95 ) }
    dend_2 { pt3dadd( -26.046, -33.5025, 4.50075, 0.22 ) }
    dend_2 { pt3dadd( -26.6492, -34.222, 4.68762, 0.22 ) }
    dend_2 { pt3dadd( -27.0947, -34.8447, 4.89507, 0.73 ) }
    dend_2 { pt3dadd( -27.5317, -35.5953, 5.17812, 0.37 ) }
    dend_2 { pt3dadd( -28.1434, -36.7178, 5.61767, 0.66 ) }
    dend_2 { pt3dadd( -28.4433, -37.3591, 5.88439, 0.29 ) }
    dend_2 { pt3dadd( -28.8319, -38.3296, 6.31117, 0.29 ) }
    dend_2 { pt3dadd( -29.1365, -39.1536, 6.71534, 0.15 ) }
    dend_2 { pt3dadd( -29.4074, -39.9447, 7.13167, 0.15 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 31/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.10574, -13.0307, 2.40548, 0.51 ) }
    dend_1 { pt3dadd( -6.67471, -13.5595, 1.71567, 0.51 ) }
    dend_1 { pt3dadd( -6.20867, -14.0191, 1.06048, 0.51 ) }
    dend_1 { pt3dadd( -5.82506, -14.339, 0.551804, 0.51 ) }
    dend_1 { pt3dadd( -5.13787, -14.8495, -0.323979, 0.66 ) }
    dend_1 { pt3dadd( -4.74709, -15.1176, -0.815938, 0.88 ) }
    dend_1 { pt3dadd( -4.2736, -15.4299, -1.41482, 0.51 ) }
    dend_1 { pt3dadd( -3.66636, -15.7857, -2.19748, 0.51 ) }
    dend_1 { pt3dadd( -3.2516, -15.9825, -2.72862, 0.73 ) }
    dend_1 { pt3dadd( -3.13929, -16.0175, -2.87924, 0.81 ) }
    dend_1 { pt3dadd( -3.02984, -16.0392, -3.049, 0.81 ) }
    dend_1 { pt3dadd( -2.94957, -16.052, -3.21452, 0.81 ) }
    dend_1 { pt3dadd( -2.71803, -16.128, -3.9123, 0.81 ) }
    dend_1 { pt3dadd( -2.57722, -16.3037, -4.55177, 0.81 ) }
    dend_1 { pt3dadd( -2.45889, -16.6143, -5.14083, 0.81 ) }
    dend_1 { pt3dadd( -2.36514, -17.0355, -5.68366, 0.51 ) }
    dend_1 { pt3dadd( -2.33618, -17.1794, -5.82391, 0.51 ) }
    dend_1 { pt3dadd( -2.24673, -17.5592, -6.10658, 0.51 ) }
    dend_1 { pt3dadd( -2.05502, -18.2829, -6.57222, 0.51 ) }
    dend_1 { pt3dadd( -1.80687, -19.0421, -7.0436, 0.73 ) }
    dend_1 { pt3dadd( -1.59699, -19.5725, -7.36055, 0.73 ) }
    dend_1 { pt3dadd( -1.25302, -20.2925, -7.81085, 0.51 ) }
    dend_1 { pt3dadd( -0.787194, -21.1689, -8.4456, 0.51 ) }
    dend_1 { pt3dadd( -0.372686, -21.8812, -9.02498, 0.81 ) }
    dend_1 { pt3dadd( 0.304683, -22.9065, -9.99866, 0.44 ) }
    dend_1 { pt3dadd( 0.635742, -23.3475, -10.4974, 0.44 ) }
    dend_1 { pt3dadd( 1.11141, -23.9111, -11.2427, 0.73 ) }
    dend_1 { pt3dadd( 1.66156, -24.5347, -12.2116, 0.59 ) }
    dend_1 { pt3dadd( 1.75568, -24.637, -12.4062, 0.59 ) }
    dend_1 { pt3dadd( 1.90129, -24.8108, -12.7557, 0.59 ) }
    dend_1 { pt3dadd( 2.03141, -25.0155, -13.2531, 0.59 ) }
    dend_1 { pt3dadd( 2.05281, -25.0792, -13.4286, 0.59 ) }
    dend_1 { pt3dadd( 2.03592, -25.2296, -13.8786, 0.59 ) }
    dend_1 { pt3dadd( 2.00704, -25.2964, -14.0947, 0.59 ) }
    dend_1 { pt3dadd( 1.79817, -25.4383, -14.8554, 0.59 ) }
    dend_1 { pt3dadd( 1.68968, -25.3826, -15.0974, 0.59 ) }
    dend_1 { pt3dadd( 1.52695, -25.2427, -15.5195, 0.59 ) }
    dend_1 { pt3dadd( 1.38258, -25.0621, -15.8954, 0.59 ) }
    dend_1 { pt3dadd( 1.2001, -24.7323, -16.5064, 0.59 ) }
    dend_1 { pt3dadd( 1.11335, -24.5518, -16.862, 0.44 ) }
    dend_1 { pt3dadd( 0.92733, -24.1659, -17.6441, 0.59 ) }
    dend_1 { pt3dadd( 0.750952, -23.7907, -18.5736, 0.73 ) }
    dend_1 { pt3dadd( 0.649618, -23.6177, -19.0992, 0.73 ) }
    dend_1 { pt3dadd( 0.431741, -23.3366, -20.11, 0.73 ) }
    dend_1 { pt3dadd( 0.302531, -23.211, -20.6848, 0.73 ) }
    dend_1 { pt3dadd( 0.223415, -23.1468, -21.0777, 0.51 ) }
    dend_1 { pt3dadd( -0.0468772, -23.0109, -22.2613, 0.44 ) }
    dend_1 { pt3dadd( -0.251687, -22.9498, -23.0452, 1.03 ) }
    dend_1 { pt3dadd( -0.317324, -22.9321, -23.2969, 1.03 ) }
    dend_1 { pt3dadd( -0.568083, -22.8341, -24.2836, 0.73 ) }
    dend_1 { pt3dadd( -0.823244, -22.639, -25.578, 0.73 ) }
    dend_1 { pt3dadd( -0.868834, -22.5798, -25.8891, 0.73 ) }
    dend_1 { pt3dadd( -0.886314, -22.5241, -26.1436, 0.73 ) }
    dend_1 { pt3dadd( -0.851274, -22.2709, -27.2269, 0.59 ) }
    dend_1 { pt3dadd( -0.768564, -22.0798, -28.0454, 0.88 ) }
    dend_1 { pt3dadd( -0.596036, -21.8348, -29.1352, 0.88 ) }
    dend_1 { pt3dadd( -0.547342, -21.7794, -29.4034, 0.88 ) }
    dend_1 { pt3dadd( -0.157343, -21.4306, -31.3157, 0.66 ) }
    dend_1 { pt3dadd( 7.76798E-4, -21.3177, -32.006, 0.66 ) }
    dend_1 { pt3dadd( 0.136649, -21.2527, -32.5242, 0.51 ) }
    dend_1 { pt3dadd( 0.3168, -21.1772, -33.1174, 0.51 ) }
    dend_1 { pt3dadd( 0.455026, -21.1064, -33.5154, 0.51 ) }
    dend_1 { pt3dadd( 0.61328, -20.9908, -33.9203, 0.51 ) }
    dend_1 { pt3dadd( 0.867436, -20.7307, -34.471, 0.51 ) }
    dend_1 { pt3dadd( 1.14866, -20.39, -35.0823, 0.51 ) }
    dend_1 { pt3dadd( 1.36727, -20.1069, -35.5239, 0.51 ) }
    dend_1 { pt3dadd( 1.68766, -19.6953, -36.1136, 0.51 ) }
    dend_1 { pt3dadd( 2.00205, -19.3257, -36.6504, 0.44 ) }
    dend_1 { pt3dadd( 2.53818, -18.7601, -37.5614, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 31.2051, -20.7751, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 43.6286, -29.181, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 56.052, -37.5868, 0.0, 0.15 ) }
    // Section: dend_81, id: dend_81, parent: dend_69 (entry count 3/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 14.4082, -8.57589, -12.7288, 1.32 ) }
    dend_81 { pt3dadd( 15.2892, -7.75134, -11.8532, 1.32 ) }
    dend_81 { pt3dadd( 16.1867, -6.73833, -10.631, 0.59 ) }
    dend_81 { pt3dadd( 16.8419, -5.99876, -9.73864, 0.59 ) }
    dend_81 { pt3dadd( 17.6009, -5.14212, -8.70504, 0.59 ) }
    dend_81 { pt3dadd( 18.1914, -4.47558, -7.90082, 0.59 ) }
    dend_81 { pt3dadd( 18.9556, -3.61305, -6.86013, 0.88 ) }
    dend_81 { pt3dadd( 19.7042, -2.69327, -5.47128, 1.25 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 11/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 14.4082, -8.57589, -12.7288, 1.62 ) }
    dend_70 { pt3dadd( 15.5915, -7.59345, -14.1215, 1.62 ) }
    dend_70 { pt3dadd( 16.2813, -7.02069, -14.9334, 1.76 ) }
    // Section: dend_66, id: dend_66, parent: dend_46 (entry count 14/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 5.84974, -18.5089, -14.8022, 0.81 ) }
    dend_66 { pt3dadd( 6.2715, -18.7294, -16.0289, 0.81 ) }
    dend_66 { pt3dadd( 6.66064, -19.1456, -18.2626, 0.81 ) }
    dend_66 { pt3dadd( 6.91734, -19.5107, -20.4434, 0.81 ) }
    dend_66 { pt3dadd( 6.99298, -19.6353, -21.282, 0.81 ) }
    dend_66 { pt3dadd( 7.07572, -19.7402, -22.1191, 0.81 ) }
    dend_66 { pt3dadd( 7.22092, -19.8588, -23.2345, 0.81 ) }
    dend_66 { pt3dadd( 7.48068, -20.0148, -25.4163, 0.81 ) }
    dend_66 { pt3dadd( 7.57386, -19.995, -25.9807, 0.81 ) }
    dend_66 { pt3dadd( 7.76481, -19.7938, -26.6564, 0.81 ) }
    dend_66 { pt3dadd( 8.12378, -19.4121, -27.6294, 0.81 ) }
    dend_66 { pt3dadd( 8.49918, -19.0404, -28.3869, 0.81 ) }
    dend_66 { pt3dadd( 9.02156, -18.5666, -29.1837, 0.81 ) }
    dend_66 { pt3dadd( 9.96173, -17.7406, -30.3136, 0.81 ) }
    dend_66 { pt3dadd( 11.2825, -16.5005, -31.9488, 1.03 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 29/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 5.84974, -18.5089, -14.8022, 1.1 ) }
    dend_47 { pt3dadd( 5.85005, -18.6629, -15.4117, 1.1 ) }
    dend_47 { pt3dadd( 5.85056, -18.9184, -16.4229, 1.1 ) }
    dend_47 { pt3dadd( 5.85102, -19.1467, -17.3263, 1.1 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 33/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 18.1406, -6.0898, 1.99615, 0.81 ) }
    dend_44 { pt3dadd( 18.6159, -5.73024, 2.7172, 0.81 ) }
    dend_44 { pt3dadd( 19.3541, -5.31637, 3.71118, 0.81 ) }
    dend_44 { pt3dadd( 19.9369, -5.1229, 4.45621, 0.95 ) }
    dend_44 { pt3dadd( 20.9846, -4.90638, 5.78814, 0.66 ) }
    dend_44 { pt3dadd( 21.1042, -4.8929, 5.94376, 0.66 ) }
    dend_44 { pt3dadd( 21.4746, -4.86655, 6.42462, 0.66 ) }
    dend_44 { pt3dadd( 22.0679, -4.88241, 7.2702, 0.51 ) }
    dend_44 { pt3dadd( 22.7622, -4.95597, 8.30568, 0.51 ) }
    dend_44 { pt3dadd( 23.2952, -5.03309, 9.13353, 0.73 ) }
    dend_44 { pt3dadd( 23.9065, -5.17102, 10.0431, 0.73 ) }
    dend_44 { pt3dadd( 23.9956, -5.17489, 10.2162, 0.81 ) }
    dend_44 { pt3dadd( 23.8006, -4.78811, 10.6703, 0.81 ) }
    dend_44 { pt3dadd( 23.191, -3.8766, 11.2695, 0.44 ) }
    dend_44 { pt3dadd( 22.8242, -3.36067, 11.4739, 0.51 ) }
    dend_44 { pt3dadd( 22.4404, -2.8448, 11.6058, 0.73 ) }
    dend_44 { pt3dadd( 21.8941, -2.15014, 11.7333, 0.37 ) }
    dend_44 { pt3dadd( 21.5335, -1.71421, 11.8163, 0.37 ) }
    dend_44 { pt3dadd( 21.3239, -1.47667, 11.8643, 0.37 ) }
    dend_44 { pt3dadd( 21.0546, -1.18775, 11.9392, 0.59 ) }
    dend_44 { pt3dadd( 20.742, -0.870716, 11.9931, 0.59 ) }
    dend_44 { pt3dadd( 20.3676, -0.527194, 12.0304, 0.59 ) }
    dend_44 { pt3dadd( 20.0606, -0.320976, 12.0437, 0.59 ) }
    dend_44 { pt3dadd( 19.6084, -0.0948081, 12.0711, 0.59 ) }
    dend_44 { pt3dadd( 19.1589, 0.11236, 12.1069, 0.59 ) }
    dend_44 { pt3dadd( 18.4554, 0.448129, 12.1714, 0.37 ) }
    dend_44 { pt3dadd( 17.9816, 0.697923, 12.2178, 0.37 ) }
    dend_44 { pt3dadd( 17.2835, 1.10791, 12.3092, 0.29 ) }
    dend_44 { pt3dadd( 16.6396, 1.50356, 12.4265, 0.29 ) }
    dend_44 { pt3dadd( 16.1536, 1.778, 12.5336, 0.29 ) }
    dend_44 { pt3dadd( 15.7743, 1.96378, 12.6478, 0.59 ) }
    dend_44 { pt3dadd( 15.2974, 2.16644, 12.8168, 0.59 ) }
    dend_44 { pt3dadd( 14.8068, 2.35392, 13.0259, 0.59 ) }
    dend_44 { pt3dadd( 14.2268, 2.53377, 13.3311, 0.59 ) }
    dend_44 { pt3dadd( 13.2468, 2.70709, 13.9023, 0.59 ) }
    dend_44 { pt3dadd( 12.4815, 2.7305, 14.4039, 0.81 ) }
    dend_44 { pt3dadd( 12.2277, 2.69397, 14.5893, 1.18 ) }
    dend_44 { pt3dadd( 11.6219, 2.46587, 15.0783, 1.1 ) }
    dend_44 { pt3dadd( 11.0017, 2.10435, 15.6406, 0.29 ) }
    dend_44 { pt3dadd( 10.6064, 1.78549, 16.0918, 0.29 ) }
    dend_44 { pt3dadd( 10.1664, 1.36044, 16.6485, 0.29 ) }
    dend_44 { pt3dadd( 9.66786, 0.819937, 17.3016, 0.29 ) }
    dend_44 { pt3dadd( 8.98952, 0.0329149, 18.2365, 0.29 ) }
    dend_44 { pt3dadd( 8.41873, -0.679277, 19.0565, 0.29 ) }
    dend_44 { pt3dadd( 7.76399, -1.52339, 20.0365, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 78/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 18.1406, -6.0898, 1.99615, 0.81 ) }
    dend_41 { pt3dadd( 18.4729, -6.57178, 1.32564, 0.81 ) }
    dend_41 { pt3dadd( 18.7957, -7.03378, 0.742446, 0.81 ) }
    dend_41 { pt3dadd( 19.4528, -7.94494, -0.333235, 0.88 ) }
    dend_41 { pt3dadd( 20.1402, -8.87158, -1.36653, 1.1 ) }
    dend_41 { pt3dadd( 20.7475, -9.66333, -2.22733, 0.73 ) }
    dend_41 { pt3dadd( 21.3057, -10.385, -2.98108, 1.1 ) }
    dend_41 { pt3dadd( 21.8556, -11.0958, -3.66893, 0.73 ) }
    dend_41 { pt3dadd( 22.8814, -12.3963, -4.77861, 0.73 ) }
    dend_41 { pt3dadd( 23.9198, -13.6878, -5.79772, 0.73 ) }
    dend_41 { pt3dadd( 24.6618, -14.5609, -6.46171, 1.18 ) }
    dend_41 { pt3dadd( 25.0598, -15.0204, -6.79715, 1.18 ) }
    dend_41 { pt3dadd( 25.3393, -15.3333, -7.02307, 1.18 ) }
    dend_41 { pt3dadd( 26.3733, -16.4999, -7.80838, 0.59 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 92/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 9.91937, -19.3922, -1.51334, 0.81 ) }
    dend_37 { pt3dadd( 8.85186, -20.6132, -1.42994, 0.81 ) }
    dend_37 { pt3dadd( 7.89022, -21.7105, -1.39053, 0.51 ) }
    dend_37 { pt3dadd( 6.87925, -22.8801, -1.40653, 0.59 ) }
    dend_37 { pt3dadd( 6.12971, -23.7779, -1.44026, 0.73 ) }
    dend_37 { pt3dadd( 5.40455, -24.6727, -1.44273, 0.88 ) }
    dend_37 { pt3dadd( 4.52836, -25.7557, -1.39615, 0.66 ) }
    dend_37 { pt3dadd( 3.3259, -27.252, -1.27086, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_37 { pt3dadd( 2.42969, -28.3969, -1.13516, 0.66 ) }
    dend_37 { pt3dadd( 1.2762, -29.8376, -0.93019, 0.73 ) }
    dend_37 { pt3dadd( 0.475666, -30.7739, -0.720699, 0.73 ) }
    dend_37 { pt3dadd( -0.481666, -31.8032, -0.389964, 0.81 ) }
    dend_37 { pt3dadd( -1.65538, -33.041, 0.0732856, 0.73 ) }
    dend_37 { pt3dadd( -2.78085, -34.1848, 0.602942, 0.59 ) }
    dend_37 { pt3dadd( -3.84669, -35.1996, 1.15489, 0.59 ) }
    dend_37 { pt3dadd( -4.99228, -36.1974, 1.7406, 0.59 ) }
    dend_37 { pt3dadd( -6.27189, -37.248, 2.30109, 0.88 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 9/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 9.91937, -19.3922, -1.51334, 0.95 ) }
    dend_32 { pt3dadd( 10.1631, -19.6357, -1.31373, 0.95 ) }
    dend_32 { pt3dadd( 10.7047, -20.3288, -0.937189, 0.81 ) }
    dend_32 { pt3dadd( 11.3489, -21.2431, -0.496702, 0.88 ) }
    dend_32 { pt3dadd( 11.6205, -21.6511, -0.305004, 0.88 ) }
    dend_32 { pt3dadd( 11.8784, -22.0607, -0.11404, 0.73 ) }
    dend_32 { pt3dadd( 12.2286, -22.6674, 0.160686, 0.73 ) }
    dend_32 { pt3dadd( 12.6243, -23.4807, 0.507104, 0.51 ) }
    dend_32 { pt3dadd( 12.8768, -24.1273, 0.736395, 0.29 ) }
    dend_32 { pt3dadd( 13.0004, -24.5134, 0.852679, 0.29 ) }
    dend_32 { pt3dadd( 13.0878, -24.8172, 0.935527, 0.29 ) }
    dend_32 { pt3dadd( 13.2745, -25.5426, 1.09433, 1.03 ) }
    dend_32 { pt3dadd( 13.4754, -26.5815, 1.24154, 0.44 ) }
    dend_32 { pt3dadd( 13.5702, -27.4426, 1.24249, 0.44 ) }
    dend_32 { pt3dadd( 13.5955, -28.0505, 1.1285, 0.44 ) }
    dend_32 { pt3dadd( 13.5978, -28.683, 0.915888, 0.44 ) }
    dend_32 { pt3dadd( 13.5881, -29.233, 0.680066, 0.37 ) }
    dend_32 { pt3dadd( 13.5744, -29.9125, 0.352089, 0.37 ) }
    dend_32 { pt3dadd( 13.5677, -30.7476, -0.0904676, 1.1 ) }
    dend_32 { pt3dadd( 13.6426, -32.0512, -0.800829, 0.51 ) }
    dend_32 { pt3dadd( 13.7376, -32.654, -1.13655, 0.66 ) }
    dend_32 { pt3dadd( 13.865, -33.1245, -1.39468, 0.66 ) }
    dend_32 { pt3dadd( 14.1752, -33.8724, -1.77784, 0.22 ) }
    dend_32 { pt3dadd( 14.363, -34.2132, -1.93559, 0.29 ) }
    dend_32 { pt3dadd( 14.6643, -34.7013, -2.15698, 0.29 ) }
    dend_32 { pt3dadd( 15.0523, -35.348, -2.41176, 0.37 ) }
    dend_32 { pt3dadd( 15.3175, -35.8764, -2.59774, 0.37 ) }
    dend_32 { pt3dadd( 15.6084, -36.6247, -2.84304, 0.37 ) }
    dend_32 { pt3dadd( 15.82, -37.3774, -3.06838, 0.37 ) }
    dend_32 { pt3dadd( 16.0378, -38.4912, -3.32964, 0.66 ) }
    dend_32 { pt3dadd( 16.1538, -39.3568, -3.483, 0.66 ) }
    dend_32 { pt3dadd( 16.2337, -40.2299, -3.61241, 0.66 ) }
    dend_32 { pt3dadd( 16.2886, -41.0846, -3.72291, 0.66 ) }
    dend_32 { pt3dadd( 16.3116, -41.6815, -3.77823, 0.66 ) }
    dend_32 { pt3dadd( 16.3365, -42.5004, -3.80836, 0.95 ) }
    dend_32 { pt3dadd( 16.35, -42.9674, -3.78277, 0.95 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 45/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.51478, 32.2182, -12.1909, 0.73 ) }
    dend_27 { pt3dadd( 3.40993, 32.2546, -12.6141, 0.73 ) }
    dend_27 { pt3dadd( 4.27896, 32.2653, -13.0096, 0.73 ) }
    dend_27 { pt3dadd( 5.85106, 32.2156, -13.6533, 0.29 ) }
    dend_27 { pt3dadd( 6.74762, 32.14, -13.9823, 0.66 ) }
    dend_27 { pt3dadd( 7.72326, 32.0059, -14.2993, 0.51 ) }
    dend_27 { pt3dadd( 8.491, 31.8515, -14.5076, 0.51 ) }
    dend_27 { pt3dadd( 9.10902, 31.661, -14.6356, 0.51 ) }
    dend_27 { pt3dadd( 9.94941, 31.3233, -14.7353, 0.59 ) }
    dend_27 { pt3dadd( 10.8973, 30.8723, -14.7581, 0.22 ) }
    dend_27 { pt3dadd( 11.629, 30.5214, -14.7364, 0.81 ) }
    dend_27 { pt3dadd( 12.9196, 29.9401, -14.6629, 0.44 ) }
    dend_27 { pt3dadd( 13.7565, 29.5975, -14.598, 0.44 ) }
    dend_27 { pt3dadd( 14.6475, 29.282, -14.5186, 0.44 ) }
    dend_27 { pt3dadd( 15.1933, 29.1381, -14.4692, 0.51 ) }
    dend_27 { pt3dadd( 16.1792, 29.0121, -14.3701, 0.51 ) }
    dend_27 { pt3dadd( 16.9177, 29.0368, -14.2961, 0.51 ) }
    dend_27 { pt3dadd( 18.1374, 29.3375, -14.1629, 0.37 ) }
    dend_27 { pt3dadd( 18.3812, 29.451, -14.1395, 0.37 ) }
    dend_27 { pt3dadd( 18.892, 29.8068, -14.1118, 0.66 ) }
    dend_27 { pt3dadd( 19.6364, 30.4714, -14.1142, 0.51 ) }
    dend_27 { pt3dadd( 19.9667, 30.8233, -14.1389, 0.51 ) }
    dend_27 { pt3dadd( 20.4872, 31.4328, -14.1963, 0.81 ) }
    dend_27 { pt3dadd( 21.3981, 32.5343, -14.3644, 0.37 ) }
    dend_27 { pt3dadd( 22.2068, 33.4534, -14.5313, 0.37 ) }
    dend_27 { pt3dadd( 22.9179, 34.1786, -14.6933, 0.37 ) }
    dend_27 { pt3dadd( 23.3836, 34.6144, -14.8138, 0.88 ) }
    dend_27 { pt3dadd( 24.2169, 35.3578, -15.0194, 0.73 ) }
    dend_27 { pt3dadd( 24.8946, 35.9304, -15.1688, 0.44 ) }
    dend_27 { pt3dadd( 25.5037, 36.3961, -15.2514, 0.51 ) }
    dend_27 { pt3dadd( 26.7586, 37.2405, -15.2935, 0.44 ) }
    dend_27 { pt3dadd( 27.9351, 37.9221, -15.2492, 0.37 ) }
    dend_27 { pt3dadd( 28.642, 38.2702, -15.1523, 0.37 ) }
    dend_27 { pt3dadd( 29.1046, 38.4592, -15.0315, 0.66 ) }
    dend_27 { pt3dadd( 30.3692, 38.8484, -14.4799, 0.22 ) }
    dend_27 { pt3dadd( 31.0397, 38.9509, -14.0395, 0.73 ) }
    dend_27 { pt3dadd( 31.7727, 38.8867, -13.3181, 0.15 ) }
    dend_27 { pt3dadd( 32.3929, 38.664, -12.5291, 0.15 ) }
    dend_27 { pt3dadd( 32.7878, 38.3963, -11.9122, 0.73 ) }
    dend_27 { pt3dadd( 33.2098, 37.9802, -11.1144, 0.81 ) }
    dend_27 { pt3dadd( 33.6114, 37.4751, -10.2684, 0.81 ) }
    dend_27 { pt3dadd( 34.0363, 36.8907, -9.3766, 0.51 ) }
    dend_27 { pt3dadd( 34.2974, 36.4986, -8.82952, 0.37 ) }
    dend_27 { pt3dadd( 34.6297, 36.0068, -8.24644, 0.37 ) }
    dend_27 { pt3dadd( 35.0541, 35.4067, -7.65258, 0.22 ) }
    dend_27 { pt3dadd( 35.5437, 34.7599, -7.06717, 0.07 ) }
    dend_27 { pt3dadd( 35.804, 34.4458, -6.80709, 0.07 ) }
    dend_27 { pt3dadd( 36.5624, 33.6168, -6.16052, 0.37 ) }
    dend_27 { pt3dadd( 37.0163, 33.1593, -5.81117, 0.81 ) }
    dend_27 { pt3dadd( 37.4847, 32.6789, -5.49124, 0.81 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 2.51478, 32.2182, -12.1909, 0.66 ) }
    dend_26 { pt3dadd( 2.57539, 32.6692, -12.5878, 0.66 ) }
    dend_26 { pt3dadd( 2.63583, 33.1191, -12.9836, 0.44 ) }
    dend_26 { pt3dadd( 2.71328, 33.6954, -13.4908, 0.73 ) }
    dend_26 { pt3dadd( 2.8051, 34.3787, -14.0921, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_26 { pt3dadd( 2.94447, 35.4158, -15.0047, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 1/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 13.1321, 15.9853, -1.23876, 0.88 ) }
    dend_20 { pt3dadd( 13.9392, 15.7041, -0.898325, 0.88 ) }
    dend_20 { pt3dadd( 14.8109, 15.3509, -0.514181, 0.59 ) }
    dend_20 { pt3dadd( 15.1071, 15.2161, -0.382436, 0.59 ) }
    dend_20 { pt3dadd( 15.6252, 14.9952, -0.156204, 0.59 ) }
    dend_20 { pt3dadd( 15.9651, 14.8698, -0.00732037, 0.59 ) }
    dend_20 { pt3dadd( 16.4618, 14.7052, 0.221411, 0.88 ) }
    dend_20 { pt3dadd( 17.2427, 14.431, 0.617959, 0.51 ) }
    dend_20 { pt3dadd( 17.6514, 14.2911, 0.829363, 1.03 ) }
    dend_20 { pt3dadd( 18.2283, 14.114, 1.12116, 0.51 ) }
    dend_20 { pt3dadd( 19.0256, 13.9142, 1.48423, 0.51 ) }
    dend_20 { pt3dadd( 19.7297, 13.7801, 1.79466, 0.95 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 13/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 13.1321, 15.9853, -1.23876, 0.73 ) }
    dend_17 { pt3dadd( 13.8856, 16.974, -1.7064, 0.73 ) }
    dend_17 { pt3dadd( 14.6849, 18.0227, -2.20243, 0.73 ) }
    dend_17 { pt3dadd( 15.4057, 18.9685, -2.64974, 0.81 ) }
    dend_17 { pt3dadd( 16.4108, 20.2872, -3.27349, 0.81 ) }
    dend_17 { pt3dadd( 17.2559, 21.3959, -3.79789, 0.88 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -16.2435, -16.3321, -13.235, 0.88 ) }
    dend_12 { pt3dadd( -16.0984, -16.1958, -14.1531, 0.88 ) }
    dend_12 { pt3dadd( -15.9231, -16.0376, -15.0793, 0.44 ) }
    dend_12 { pt3dadd( -15.8209, -15.903, -15.6913, 0.51 ) }
    dend_12 { pt3dadd( -15.7165, -15.6716, -16.565, 0.73 ) }
    dend_12 { pt3dadd( -15.6671, -15.4408, -17.3188, 0.81 ) }
    dend_12 { pt3dadd( -15.6474, -15.1872, -18.0422, 0.59 ) }
    dend_12 { pt3dadd( -15.65, -14.9578, -18.5319, 0.88 ) }
    dend_12 { pt3dadd( -15.6561, -14.4651, -19.3783, 0.81 ) }
    dend_12 { pt3dadd( -15.6318, -14.0858, -19.9187, 0.81 ) }
    dend_12 { pt3dadd( -15.57, -13.7373, -20.3215, 0.66 ) }
    dend_12 { pt3dadd( -15.4486, -13.2934, -20.771, 0.66 ) }
    dend_12 { pt3dadd( -15.2058, -12.611, -21.4387, 0.88 ) }
    dend_12 { pt3dadd( -15.0605, -12.2864, -21.7623, 0.51 ) }
    dend_12 { pt3dadd( -14.7724, -11.793, -22.2928, 0.81 ) }
    dend_12 { pt3dadd( -14.374, -11.2487, -22.9564, 0.81 ) }
    dend_12 { pt3dadd( -13.8903, -10.6646, -23.7366, 0.81 ) }
    dend_12 { pt3dadd( -13.6093, -10.3374, -24.2303, 0.59 ) }
    dend_12 { pt3dadd( -13.4872, -10.1801, -24.4892, 0.44 ) }
    dend_12 { pt3dadd( -13.2628, -9.80867, -25.0983, 0.44 ) }
    dend_12 { pt3dadd( -13.1094, -9.44136, -25.6785, 0.44 ) }
    dend_12 { pt3dadd( -13.0773, -9.33476, -25.8378, 0.73 ) }
    dend_12 { pt3dadd( -12.985, -8.84503, -26.555, 0.73 ) }
    dend_12 { pt3dadd( -12.9499, -8.43457, -27.1444, 0.51 ) }
    dend_12 { pt3dadd( -12.959, -7.99791, -27.7476, 0.51 ) }
    dend_12 { pt3dadd( -13.007, -7.52731, -28.3719, 0.51 ) }
    dend_12 { pt3dadd( -13.0838, -6.97054, -29.1271, 0.51 ) }
    dend_12 { pt3dadd( -13.1199, -6.50288, -29.8384, 0.51 ) }
    dend_12 { pt3dadd( -13.118, -6.43231, -29.9558, 0.51 ) }
    dend_12 { pt3dadd( -13.1019, -6.34942, -30.1182, 0.51 ) }
    dend_12 { pt3dadd( -13.0103, -6.0864, -30.6973, 0.44 ) }
    dend_12 { pt3dadd( -12.7649, -5.61862, -31.8016, 0.29 ) }
    dend_12 { pt3dadd( -12.5948, -5.35798, -32.4036, 0.29 ) }
    dend_12 { pt3dadd( -12.3312, -4.99752, -33.1749, 0.59 ) }
    dend_12 { pt3dadd( -12.0774, -4.67254, -33.8733, 0.59 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 54/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -16.2435, -16.3321, -13.235, 0.88 ) }
    dend_5 { pt3dadd( -16.5718, -16.5987, -13.6718, 0.88 ) }
    dend_5 { pt3dadd( -16.7733, -16.7624, -13.94, 0.88 ) }
    dend_5 { pt3dadd( -16.9519, -16.9075, -14.1776, 0.88 ) }
    // Section: dend_85, id: dend_85, parent: dend_81 (entry count 58/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 19.7042, -2.69327, -5.47128, 0.88 ) }
    dend_85 { pt3dadd( 19.7131, -2.14593, -4.9822, 0.88 ) }
    dend_85 { pt3dadd( 19.7318, -1.66963, -4.506, 0.66 ) }
    dend_85 { pt3dadd( 19.7371, -1.3623, -4.1639, 0.66 ) }
    dend_85 { pt3dadd( 19.7281, -0.900927, -3.64357, 0.66 ) }
    dend_85 { pt3dadd( 19.7006, -0.369337, -3.00893, 0.66 ) }
    dend_85 { pt3dadd( 19.6558, 0.52143, -1.89259, 0.73 ) }
    dend_85 { pt3dadd( 19.6476, 1.09, -1.14401, 0.73 ) }
    dend_85 { pt3dadd( 19.624, 1.56998, -0.432035, 0.73 ) }
    dend_85 { pt3dadd( 19.593, 1.85701, 0.0269257, 0.73 ) }
    dend_85 { pt3dadd( 19.5224, 2.20339, 0.625906, 0.73 ) }
    dend_85 { pt3dadd( 19.4316, 2.47109, 1.11129, 0.73 ) }
    dend_85 { pt3dadd( 19.2935, 2.74353, 1.60377, 0.73 ) }
    dend_85 { pt3dadd( 18.9739, 3.25769, 2.42114, 0.73 ) }
    dend_85 { pt3dadd( 18.6646, 3.66336, 3.02224, 0.73 ) }
    dend_85 { pt3dadd( 18.264, 4.1058, 3.63286, 0.95 ) }
    dend_85 { pt3dadd( 17.9768, 4.40264, 3.99976, 0.51 ) }
    dend_85 { pt3dadd( 17.6819, 4.68714, 4.36161, 0.51 ) }
    dend_85 { pt3dadd( 17.2496, 5.11985, 4.94896, 0.51 ) }
    dend_85 { pt3dadd( 16.9436, 5.45081, 5.44775, 0.66 ) }
    dend_85 { pt3dadd( 16.5987, 5.85188, 6.19222, 1.1 ) }
    dend_85 { pt3dadd( 16.3794, 6.1673, 6.92663, 0.66 ) }
    dend_85 { pt3dadd( 16.2295, 6.47218, 7.82658, 0.66 ) }
    dend_85 { pt3dadd( 16.2056, 6.70289, 8.72163, 0.59 ) }
    dend_85 { pt3dadd( 16.2779, 6.81053, 9.38832, 0.59 ) }
    dend_85 { pt3dadd( 16.4029, 6.84057, 9.96902, 0.59 ) }
    dend_85 { pt3dadd( 16.5733, 6.75332, 10.5681, 0.59 ) }
    dend_85 { pt3dadd( 16.6366, 6.67379, 10.7972, 0.59 ) }
    dend_85 { pt3dadd( 16.723, 6.35087, 11.3742, 0.37 ) }
    dend_85 { pt3dadd( 16.6998, 5.96947, 11.8976, 0.37 ) }
    dend_85 { pt3dadd( 16.6143, 5.65391, 12.2865, 0.37 ) }
    dend_85 { pt3dadd( 16.2558, 5.06854, 13.0357, 0.37 ) }
    dend_85 { pt3dadd( 15.8877, 4.83143, 13.468, 0.73 ) }
    dend_85 { pt3dadd( 15.207, 4.7041, 14.0118, 0.44 ) }
    dend_85 { pt3dadd( 14.9696, 4.72656, 14.1529, 0.44 ) }
    dend_85 { pt3dadd( 14.3389, 4.91904, 14.4482, 0.59 ) }
    dend_85 { pt3dadd( 13.6143, 5.27778, 14.7615, 0.59 ) }
    dend_85 { pt3dadd( 12.9902, 5.70792, 15.0638, 0.37 ) }
    dend_85 { pt3dadd( 12.6617, 6.01666, 15.2719, 0.37 ) }
    dend_85 { pt3dadd( 12.3267, 6.41692, 15.5202, 0.37 ) }
    dend_85 { pt3dadd( 12.1852, 6.6115, 15.6407, 0.73 ) }
    dend_85 { pt3dadd( 11.9053, 7.00285, 15.9112, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_85 { pt3dadd( 11.3791, 7.65336, 16.5313, 0.44 ) }
    dend_85 { pt3dadd( 10.9983, 8.03055, 16.9551, 0.44 ) }
    dend_85 { pt3dadd( 10.8152, 8.20273, 17.1671, 0.44 ) }
    dend_85 { pt3dadd( 10.2614, 8.64957, 17.7798, 0.44 ) }
    dend_85 { pt3dadd( 9.68899, 9.02832, 18.3372, 0.44 ) }
    dend_85 { pt3dadd( 9.01653, 9.35789, 18.8579, 0.44 ) }
    dend_85 { pt3dadd( 8.399, 9.58051, 19.2143, 0.66 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 7/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 19.7042, -2.69327, -5.47128, 0.81 ) }
    dend_82 { pt3dadd( 20.2569, -2.25572, -5.65485, 0.81 ) }
    dend_82 { pt3dadd( 20.9093, -1.76158, -5.8142, 0.73 ) }
    dend_82 { pt3dadd( 21.2099, -1.53455, -5.87807, 0.73 ) }
    dend_82 { pt3dadd( 21.449, -1.34976, -5.93337, 0.73 ) }
    dend_82 { pt3dadd( 21.6857, -1.16448, -6.01011, 0.73 ) }
    dend_82 { pt3dadd( 22.2105, -0.753725, -6.18023, 0.66 ) }
    dend_82 { pt3dadd( 22.5121, -0.524628, -6.26264, 0.66 ) }
    dend_82 { pt3dadd( 22.7796, -0.333889, -6.33442, 0.81 ) }
    dend_82 { pt3dadd( 23.1884, -0.0279746, -6.46022, 1.18 ) }
    dend_82 { pt3dadd( 23.7917, 0.47302, -6.70698, 0.81 ) }
    // Section: dend_80, id: dend_80, parent: dend_70 (entry count 18/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 16.2813, -7.02069, -14.9334, 0.51 ) }
    dend_80 { pt3dadd( 16.5599, -5.87813, -15.472, 0.51 ) }
    dend_80 { pt3dadd( 16.6372, -5.51404, -15.5862, 0.51 ) }
    dend_80 { pt3dadd( 16.7141, -4.91424, -15.7275, 0.51 ) }
    dend_80 { pt3dadd( 16.7071, -4.47359, -15.7948, 0.51 ) }
    dend_80 { pt3dadd( 16.6315, -3.99721, -15.8392, 0.29 ) }
    dend_80 { pt3dadd( 16.5598, -3.71005, -15.8526, 0.29 ) }
    dend_80 { pt3dadd( 16.4249, -3.30556, -15.8069, 0.29 ) }
    dend_80 { pt3dadd( 16.2598, -2.90601, -15.7535, 0.29 ) }
    dend_80 { pt3dadd( 15.953, -2.28358, -15.6784, 0.44 ) }
    dend_80 { pt3dadd( 15.6719, -1.79692, -15.6433, 0.44 ) }
    dend_80 { pt3dadd( 15.3867, -1.37837, -15.6342, 0.44 ) }
    dend_80 { pt3dadd( 15.0853, -0.994658, -15.6632, 0.44 ) }
    dend_80 { pt3dadd( 14.5901, -0.368297, -15.7953, 0.44 ) }
    dend_80 { pt3dadd( 14.2515, 0.0944183, -15.9863, 0.44 ) }
    dend_80 { pt3dadd( 13.9461, 0.530617, -16.2459, 0.44 ) }
    dend_80 { pt3dadd( 13.5766, 1.0431, -16.5995, 0.44 ) }
    dend_80 { pt3dadd( 13.0269, 1.76705, -17.1842, 0.44 ) }
    dend_80 { pt3dadd( 12.567, 2.3462, -17.7325, 0.44 ) }
    dend_80 { pt3dadd( 11.9897, 3.08456, -18.5538, 0.44 ) }
    dend_80 { pt3dadd( 11.7122, 3.48105, -19.03, 0.44 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 39/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 16.2813, -7.02069, -14.9334, 0.88 ) }
    dend_71 { pt3dadd( 17.0213, -7.03478, -14.8915, 0.88 ) }
    dend_71 { pt3dadd( 18.1325, -7.05592, -14.8285, 0.81 ) }
    dend_71 { pt3dadd( 18.8708, -7.06998, -14.7867, 0.81 ) }
    dend_71 { pt3dadd( 19.4263, -7.08054, -14.7553, 1.1 ) }
    dend_71 { pt3dadd( 19.7448, -7.08661, -14.7372, 1.54 ) }
    dend_71 { pt3dadd( 20.0034, -7.09153, -14.7226, 1.62 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 46/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 11.2825, -16.5005, -31.9488, 0.51 ) }
    dend_68 { pt3dadd( 11.106, -15.5152, -32.3342, 0.51 ) }
    dend_68 { pt3dadd( 10.9728, -14.6058, -32.7207, 0.51 ) }
    dend_68 { pt3dadd( 10.8633, -13.7946, -33.1028, 0.81 ) }
    dend_68 { pt3dadd( 10.6434, -12.0843, -33.8987, 0.22 ) }
    dend_68 { pt3dadd( 10.5112, -11.0769, -34.3456, 0.59 ) }
    dend_68 { pt3dadd( 10.4166, -10.4564, -34.6045, 0.59 ) }
    dend_68 { pt3dadd( 10.313, -9.78541, -34.8521, 0.73 ) }
    dend_68 { pt3dadd( 10.1413, -8.83515, -35.1749, 0.37 ) }
    dend_68 { pt3dadd( 9.93199, -7.82935, -35.474, 0.37 ) }
    dend_68 { pt3dadd( 9.73873, -7.133, -35.6507, 0.51 ) }
    dend_68 { pt3dadd( 9.49646, -6.42967, -35.8145, 0.51 ) }
    dend_68 { pt3dadd( 8.99594, -5.11539, -36.1734, 0.66 ) }
    dend_68 { pt3dadd( 8.73023, -4.36345, -36.3831, 0.37 ) }
    dend_68 { pt3dadd( 8.52052, -3.69245, -36.5956, 0.22 ) }
    dend_68 { pt3dadd( 8.25179, -2.82022, -36.9092, 0.22 ) }
    dend_68 { pt3dadd( 7.96888, -1.84032, -37.3011, 0.22 ) }
    dend_68 { pt3dadd( 7.61207, -0.443891, -37.9196, 0.81 ) }
    dend_68 { pt3dadd( 7.32745, 0.765468, -38.517, 0.29 ) }
    dend_68 { pt3dadd( 7.14032, 1.63639, -38.9751, 0.51 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 66/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 11.2825, -16.5005, -31.9488, 0.81 ) }
    dend_67 { pt3dadd( 12.4726, -16.9383, -32.0787, 0.81 ) }
    dend_67 { pt3dadd( 13.5358, -17.4768, -32.1893, 0.81 ) }
    dend_67 { pt3dadd( 14.2897, -17.9175, -32.315, 0.81 ) }
    dend_67 { pt3dadd( 14.9434, -18.3413, -32.4703, 0.59 ) }
    dend_67 { pt3dadd( 15.7596, -18.9262, -32.6849, 0.88 ) }
    dend_67 { pt3dadd( 16.148, -19.2368, -32.8105, 0.88 ) }
    dend_67 { pt3dadd( 17.0562, -20.182, -33.2191, 0.44 ) }
    dend_67 { pt3dadd( 17.886, -21.2208, -33.6934, 0.44 ) }
    dend_67 { pt3dadd( 18.6702, -22.3462, -34.2268, 0.81 ) }
    dend_67 { pt3dadd( 19.2762, -23.263, -34.7038, 0.44 ) }
    dend_67 { pt3dadd( 19.9005, -24.1912, -35.2358, 0.81 ) }
    dend_67 { pt3dadd( 20.6798, -25.2968, -35.9084, 0.37 ) }
    dend_67 { pt3dadd( 20.8963, -25.5956, -36.099, 0.37 ) }
    dend_67 { pt3dadd( 21.2836, -26.1317, -36.4579, 0.37 ) }
    dend_67 { pt3dadd( 22.0685, -27.1045, -37.148, 0.37 ) }
    dend_67 { pt3dadd( 22.9036, -28.0328, -37.8665, 1.03 ) }
    dend_67 { pt3dadd( 23.6617, -28.8199, -38.4836, 0.44 ) }
    dend_67 { pt3dadd( 24.2557, -29.4281, -38.9482, 0.66 ) }
    dend_67 { pt3dadd( 24.9844, -30.1855, -39.5232, 0.66 ) }
    dend_67 { pt3dadd( 26.0993, -31.3608, -40.4177, 0.29 ) }
    dend_67 { pt3dadd( 27.0155, -32.308, -41.1281, 0.29 ) }
    dend_67 { pt3dadd( 27.9726, -33.2354, -41.8336, 0.88 ) }
    dend_67 { pt3dadd( 28.8779, -34.0343, -42.4759, 0.88 ) }
    dend_67 { pt3dadd( 29.5729, -34.5918, -42.9343, 0.44 ) }
    dend_67 { pt3dadd( 30.3305, -35.1531, -43.3931, 0.37 ) }
    dend_67 { pt3dadd( 31.8478, -36.2229, -44.2906, 0.22 ) }
    dend_67 { pt3dadd( 32.2945, -36.5221, -44.528, 0.22 ) }
    dend_67 { pt3dadd( 33.2223, -37.1231, -45.016, 0.22 ) }
    dend_67 { pt3dadd( 33.7011, -37.4482, -45.2734, 0.37 ) }
    dend_67 { pt3dadd( 34.0973, -37.7728, -45.4771, 0.15 ) }
    dend_67 { pt3dadd( 34.5726, -38.2789, -45.7473, 0.15 ) }
    dend_67 { pt3dadd( 34.9104, -38.8354, -46.09, 0.15 ) }
    dend_67 { pt3dadd( 35.1336, -39.2819, -46.4054, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_67 { pt3dadd( 35.2833, -39.6377, -46.706, 0.95 ) }
    dend_67 { pt3dadd( 35.495, -40.2063, -47.2611, 0.95 ) }
    dend_67 { pt3dadd( 35.7801, -41.1126, -48.201, 0.44 ) }
    dend_67 { pt3dadd( 36.1581, -42.4378, -49.5948, 0.44 ) }
    dend_67 { pt3dadd( 36.2628, -42.8317, -50.0065, 0.88 ) }
    dend_67 { pt3dadd( 36.5425, -43.9053, -51.0677, 0.95 ) }
    dend_67 { pt3dadd( 36.901, -45.3542, -52.4289, 0.22 ) }
    dend_67 { pt3dadd( 37.1094, -46.2558, -53.2291, 0.22 ) }
    dend_67 { pt3dadd( 37.2109, -46.6977, -53.5712, 0.22 ) }
    dend_67 { pt3dadd( 37.3982, -47.4835, -54.0936, 0.59 ) }
    dend_67 { pt3dadd( 37.6251, -48.4541, -54.6964, 0.95 ) }
    dend_67 { pt3dadd( 38.0232, -49.87, -55.5036, 0.29 ) }
    dend_67 { pt3dadd( 38.2431, -50.4752, -55.8564, 0.29 ) }
    dend_67 { pt3dadd( 38.6069, -51.2822, -56.3515, 0.66 ) }
    dend_67 { pt3dadd( 38.8449, -51.7176, -56.6499, 0.66 ) }
    dend_67 { pt3dadd( 39.3351, -52.4251, -57.1938, 0.22 ) }
    dend_67 { pt3dadd( 39.7538, -52.9255, -57.6608, 0.22 ) }
    dend_67 { pt3dadd( 40.4713, -53.6393, -58.4828, 0.59 ) }
    dend_67 { pt3dadd( 40.7912, -53.9372, -58.8739, 0.59 ) }
    dend_67 { pt3dadd( 41.6397, -54.6941, -59.945, 0.15 ) }
    dend_67 { pt3dadd( 42.4091, -55.3444, -60.9225, 0.88 ) }
    dend_67 { pt3dadd( 43.3616, -56.1239, -62.1152, 0.66 ) }
    dend_67 { pt3dadd( 44.7158, -57.2572, -63.8076, 0.15 ) }
    dend_67 { pt3dadd( 45.7735, -58.1513, -65.0876, 0.73 ) }
    dend_67 { pt3dadd( 46.1139, -58.4595, -65.5105, 1.1 ) }
    dend_67 { pt3dadd( 47.2488, -59.5973, -66.9653, 0.22 ) }
    dend_67 { pt3dadd( 47.5358, -59.9205, -67.3397, 0.59 ) }
    dend_67 { pt3dadd( 47.7815, -60.2174, -67.6408, 0.59 ) }
    dend_67 { pt3dadd( 48.0607, -60.5809, -67.9741, 0.59 ) }
    dend_67 { pt3dadd( 48.9047, -61.6884, -68.9641, 0.15 ) }
    dend_67 { pt3dadd( 49.2848, -62.1478, -69.421, 0.15 ) }
    dend_67 { pt3dadd( 49.511, -62.3831, -69.6698, 0.51 ) }
    dend_67 { pt3dadd( 49.9942, -62.7551, -70.15, 0.51 ) }
    dend_67 { pt3dadd( 50.8915, -63.191, -70.9712, 0.07 ) }
    dend_67 { pt3dadd( 51.1571, -63.2653, -71.2005, 0.51 ) }
    dend_67 { pt3dadd( 52.0462, -63.3929, -71.8947, 0.07 ) }
    dend_67 { pt3dadd( 52.7689, -63.4597, -72.4398, 0.07 ) }
    dend_67 { pt3dadd( 53.366, -63.5005, -72.9302, 0.37 ) }
    dend_67 { pt3dadd( 54.4425, -63.5723, -73.7918, 0.88 ) }
    dend_67 { pt3dadd( 55.2527, -63.6164, -74.3956, 0.95 ) }
    dend_67 { pt3dadd( 55.7241, -63.6417, -74.7301, 0.95 ) }
    dend_67 { pt3dadd( 56.1552, -63.68, -75.0002, 0.95 ) }
    dend_67 { pt3dadd( 57.9427, -63.8947, -76.0131, 0.07 ) }
    dend_67 { pt3dadd( 58.971, -64.08, -76.501, 0.07 ) }
    dend_67 { pt3dadd( 59.64, -64.2351, -76.7576, 0.73 ) }
    dend_67 { pt3dadd( 59.908, -64.3035, -76.8456, 1.32 ) }
    dend_67 { pt3dadd( 61.431, -64.74, -77.3312, 0.22 ) }
    dend_67 { pt3dadd( 61.9339, -64.8964, -77.4807, 0.44 ) }
    dend_67 { pt3dadd( 62.9944, -65.2644, -77.7859, 0.15 ) }
    dend_67 { pt3dadd( 63.4612, -65.4322, -77.949, 1.03 ) }
    dend_67 { pt3dadd( 64.0379, -65.6437, -78.1613, 1.03 ) }
    dend_67 { pt3dadd( 65.1386, -66.035, -78.5826, 0.15 ) }
    dend_67 { pt3dadd( 66.1606, -66.3557, -79.0168, 0.81 ) }
    dend_67 { pt3dadd( 67.2615, -66.6257, -79.5257, 0.15 ) }
    dend_67 { pt3dadd( 67.7702, -66.7084, -79.7719, 0.51 ) }
    dend_67 { pt3dadd( 68.5896, -66.7769, -80.1727, 0.22 ) }
    dend_67 { pt3dadd( 69.0801, -66.7516, -80.408, 0.22 ) }
    dend_67 { pt3dadd( 70.3306, -66.4998, -81.0239, 0.81 ) }
    dend_67 { pt3dadd( 72.242, -65.8255, -81.8455, 0.22 ) }
    dend_67 { pt3dadd( 72.9681, -65.4721, -82.0828, 0.22 ) }
    dend_67 { pt3dadd( 73.5162, -65.1406, -82.2194, 0.22 ) }
    dend_67 { pt3dadd( 75.1707, -64.0209, -82.5824, 0.51 ) }
    dend_67 { pt3dadd( 76.4436, -63.0693, -82.7971, 0.15 ) }
    dend_67 { pt3dadd( 78.1833, -61.5898, -82.9167, 0.15 ) }
    dend_67 { pt3dadd( 79.1487, -60.6425, -82.8708, 0.15 ) }
    dend_67 { pt3dadd( 80.0955, -59.6815, -82.7578, 0.51 ) }
    // Section: dend_57, id: dend_57, parent: dend_47 (entry count 66/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 5.85102, -19.1467, -17.3263, 0.73 ) }
    dend_57 { pt3dadd( 4.76304, -19.1716, -17.3103, 0.73 ) }
    dend_57 { pt3dadd( 3.91559, -19.096, -17.3436, 0.73 ) }
    dend_57 { pt3dadd( 2.79143, -18.8501, -17.4753, 0.81 ) }
    dend_57 { pt3dadd( 2.08324, -18.6062, -17.6257, 0.81 ) }
    dend_57 { pt3dadd( 0.937615, -18.2116, -17.869, 0.81 ) }
    dend_57 { pt3dadd( 0.18164, -17.9512, -18.0295, 0.81 ) }
    dend_57 { pt3dadd( -1.07797, -17.3929, -18.3511, 0.81 ) }
    dend_57 { pt3dadd( -2.0978, -16.7821, -18.6774, 0.51 ) }
    dend_57 { pt3dadd( -2.96086, -16.0823, -19.0659, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 76/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 5.85102, -19.1467, -17.3263, 1.1 ) }
    dend_48 { pt3dadd( 5.47079, -20.1865, -16.8604, 1.1 ) }
    dend_48 { pt3dadd( 4.98411, -21.5174, -16.264, 1.25 ) }
    dend_48 { pt3dadd( 4.48959, -22.8697, -15.6581, 1.25 ) }
    dend_48 { pt3dadd( 4.14023, -23.825, -15.23, 1.18 ) }
    dend_48 { pt3dadd( 4.05515, -24.0577, -15.1257, 1.18 ) }
    dend_48 { pt3dadd( 3.29798, -26.1283, -14.1979, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 83/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 26.3733, -16.4999, -7.80838, 0.66 ) }
    dend_43 { pt3dadd( 27.0284, -17.2381, -8.02987, 0.66 ) }
    dend_43 { pt3dadd( 27.4338, -17.7521, -8.29095, 0.66 ) }
    dend_43 { pt3dadd( 27.8245, -18.3792, -8.67829, 0.66 ) }
    dend_43 { pt3dadd( 28.2793, -19.2913, -9.36388, 0.66 ) }
    dend_43 { pt3dadd( 28.6181, -19.996, -9.93422, 0.88 ) }
    dend_43 { pt3dadd( 29.1392, -20.953, -10.7534, 0.88 ) }
    dend_43 { pt3dadd( 29.8577, -22.205, -11.8957, 0.66 ) }
    dend_43 { pt3dadd( 30.4125, -23.2175, -12.8472, 0.81 ) }
    dend_43 { pt3dadd( 31.0793, -24.557, -14.1409, 0.37 ) }
    dend_43 { pt3dadd( 31.4476, -25.3795, -14.9374, 0.44 ) }
    dend_43 { pt3dadd( 31.8828, -26.4834, -16.0088, 0.59 ) }
    dend_43 { pt3dadd( 32.181, -27.4303, -16.9972, 0.29 ) }
    dend_43 { pt3dadd( 32.3956, -28.4879, -18.1414, 0.73 ) }
    dend_43 { pt3dadd( 32.432, -29.5123, -19.2602, 0.59 ) }
    dend_43 { pt3dadd( 32.3223, -30.0526, -19.8545, 0.59 ) }
    dend_43 { pt3dadd( 31.9432, -30.8371, -20.8508, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_43 { pt3dadd( 30.8395, -32.1696, -23.1264, 1.1 ) }
    dend_43 { pt3dadd( 30.2522, -32.5719, -24.2304, 0.37 ) }
    dend_43 { pt3dadd( 29.6024, -32.7446, -25.4377, 0.37 ) }
    dend_43 { pt3dadd( 29.1859, -32.729, -26.297, 0.37 ) }
    dend_43 { pt3dadd( 28.4777, -32.5734, -28.0235, 0.37 ) }
    dend_43 { pt3dadd( 27.7553, -32.3384, -30.1503, 0.37 ) }
    dend_43 { pt3dadd( 27.5314, -32.2732, -30.9523, 0.37 ) }
    dend_43 { pt3dadd( 27.2674, -32.2764, -32.0973, 0.37 ) }
    dend_43 { pt3dadd( 26.8155, -32.5301, -34.2305, 1.03 ) }
    dend_43 { pt3dadd( 26.6141, -32.8507, -35.109, 1.03 ) }
    dend_43 { pt3dadd( 26.3416, -33.6498, -36.1791, 0.29 ) }
    dend_43 { pt3dadd( 26.0285, -34.7084, -37.2392, 0.22 ) }
    dend_43 { pt3dadd( 25.7271, -35.8455, -38.2078, 0.22 ) }
    dend_43 { pt3dadd( 25.5552, -36.5305, -38.6877, 0.95 ) }
    dend_43 { pt3dadd( 25.2632, -37.6286, -39.3239, 0.15 ) }
    dend_43 { pt3dadd( 25.0203, -38.3936, -39.8197, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 16/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 26.3733, -16.4999, -7.80838, 0.44 ) }
    dend_42 { pt3dadd( 27.7672, -16.4147, -8.18778, 0.44 ) }
    dend_42 { pt3dadd( 30.0572, -16.2764, -8.94621, 0.44 ) }
    dend_42 { pt3dadd( 31.5334, -16.144, -9.54979, 0.44 ) }
    dend_42 { pt3dadd( 32.1966, -16.0561, -9.8609, 0.44 ) }
    dend_42 { pt3dadd( 32.9762, -15.8959, -10.2642, 0.51 ) }
    dend_42 { pt3dadd( 33.5284, -15.768, -10.5694, 0.51 ) }
    dend_42 { pt3dadd( 34.209, -15.5628, -11.0106, 0.51 ) }
    dend_42 { pt3dadd( 34.9986, -15.3004, -11.5669, 0.51 ) }
    dend_42 { pt3dadd( 35.5374, -15.1385, -11.8871, 0.29 ) }
    dend_42 { pt3dadd( 36.6302, -14.8392, -12.3768, 0.81 ) }
    dend_42 { pt3dadd( 37.64, -14.5833, -12.6721, 0.51 ) }
    dend_42 { pt3dadd( 38.9503, -14.2607, -12.8451, 0.37 ) }
    dend_42 { pt3dadd( 39.903, -14.013, -12.8564, 0.37 ) }
    dend_42 { pt3dadd( 41.0929, -13.6693, -12.7673, 0.37 ) }
    dend_42 { pt3dadd( 42.2374, -13.2783, -12.6128, 0.37 ) }
    dend_42 { pt3dadd( 43.3302, -12.839, -12.3679, 0.37 ) }
    dend_42 { pt3dadd( 44.5059, -12.2973, -12.0216, 0.44 ) }
    dend_42 { pt3dadd( 46.1105, -11.524, -11.5525, 0.37 ) }
    dend_42 { pt3dadd( 47.1657, -11.0269, -11.2745, 0.37 ) }
    dend_42 { pt3dadd( 48.1052, -10.6099, -11.0792, 0.37 ) }
    dend_42 { pt3dadd( 49.2073, -10.1438, -10.8882, 0.88 ) }
    dend_42 { pt3dadd( 50.405, -9.68869, -10.7573, 0.44 ) }
    dend_42 { pt3dadd( 51.9031, -9.18503, -10.7065, 0.37 ) }
    dend_42 { pt3dadd( 52.9522, -8.85007, -10.7314, 0.37 ) }
    dend_42 { pt3dadd( 53.9078, -8.54122, -10.7997, 0.37 ) }
    dend_42 { pt3dadd( 55.1859, -8.06426, -10.9321, 0.29 ) }
    dend_42 { pt3dadd( 55.7802, -7.78837, -11.0186, 0.29 ) }
    dend_42 { pt3dadd( 56.5132, -7.38331, -11.0951, 0.66 ) }
    dend_42 { pt3dadd( 57.0286, -7.08263, -11.1181, 0.66 ) }
    dend_42 { pt3dadd( 57.9084, -6.5413, -11.1567, 0.15 ) }
    dend_42 { pt3dadd( 58.8527, -5.94416, -11.1927, 0.88 ) }
    dend_42 { pt3dadd( 60.3533, -4.99185, -11.2429, 0.15 ) }
    dend_42 { pt3dadd( 61.2808, -4.40843, -11.2538, 0.22 ) }
    dend_42 { pt3dadd( 61.9598, -4.01607, -11.2467, 0.22 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 51/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -6.27189, -37.248, 2.30109, 0.44 ) }
    dend_39 { pt3dadd( -6.77826, -37.4084, 2.44693, 0.44 ) }
    dend_39 { pt3dadd( -7.15152, -37.5701, 2.56002, 0.44 ) }
    dend_39 { pt3dadd( -7.79182, -37.9241, 2.76607, 0.88 ) }
    dend_39 { pt3dadd( -8.5837, -38.3922, 3.03466, 0.22 ) }
    dend_39 { pt3dadd( -9.21102, -38.7758, 3.27508, 0.44 ) }
    dend_39 { pt3dadd( -9.79247, -39.1539, 3.51524, 0.44 ) }
    dend_39 { pt3dadd( -10.218, -39.4711, 3.69899, 0.29 ) }
    dend_39 { pt3dadd( -10.7361, -39.8938, 3.94332, 0.29 ) }
    dend_39 { pt3dadd( -11.3598, -40.4252, 4.26435, 0.29 ) }
    dend_39 { pt3dadd( -11.7961, -40.8049, 4.53136, 0.29 ) }
    dend_39 { pt3dadd( -12.2076, -41.1827, 4.80593, 0.22 ) }
    dend_39 { pt3dadd( -12.4879, -41.4357, 4.99939, 0.44 ) }
    dend_39 { pt3dadd( -12.995, -41.8734, 5.35716, 0.22 ) }
    dend_39 { pt3dadd( -13.3375, -42.1734, 5.6092, 0.59 ) }
    dend_39 { pt3dadd( -13.8068, -42.6498, 5.97751, 0.29 ) }
    dend_39 { pt3dadd( -14.0795, -42.9361, 6.18326, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 68/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -6.27189, -37.248, 2.30109, 0.51 ) }
    dend_38 { pt3dadd( -6.98778, -37.9651, 2.20737, 0.51 ) }
    dend_38 { pt3dadd( -7.77413, -38.7444, 2.06805, 0.73 ) }
    dend_38 { pt3dadd( -8.06014, -39.0375, 1.99656, 0.73 ) }
    dend_38 { pt3dadd( -8.53087, -39.5564, 1.85845, 0.88 ) }
    dend_38 { pt3dadd( -9.13807, -40.2628, 1.66828, 0.59 ) }
    dend_38 { pt3dadd( -9.62691, -40.8424, 1.52036, 0.59 ) }
    dend_38 { pt3dadd( -10.0853, -41.4263, 1.37353, 0.66 ) }
    dend_38 { pt3dadd( -10.5152, -41.9788, 1.23283, 0.51 ) }
    dend_38 { pt3dadd( -11.1668, -42.7722, 1.00954, 1.18 ) }
    dend_38 { pt3dadd( -11.9858, -43.7143, 0.720767, 0.44 ) }
    dend_38 { pt3dadd( -12.3967, -44.1672, 0.576014, 0.59 ) }
    dend_38 { pt3dadd( -12.5974, -44.3893, 0.494478, 0.81 ) }
    dend_38 { pt3dadd( -13.1524, -44.9954, 0.273794, 0.22 ) }
    dend_38 { pt3dadd( -13.7053, -45.6031, 0.0469163, 0.51 ) }
    dend_38 { pt3dadd( -13.8192, -45.7345, -0.00995994, 1.25 ) }
    dend_38 { pt3dadd( -14.5386, -46.6621, -0.45463, 0.37 ) }
    dend_38 { pt3dadd( -14.9754, -47.258, -0.776037, 0.37 ) }
    dend_38 { pt3dadd( -15.287, -47.6899, -1.01675, 1.03 ) }
    dend_38 { pt3dadd( -15.9872, -48.6451, -1.58332, 0.37 ) }
    dend_38 { pt3dadd( -16.5458, -49.3419, -2.02717, 0.37 ) }
    dend_38 { pt3dadd( -17.2184, -50.0401, -2.55858, 0.81 ) }
    dend_38 { pt3dadd( -17.9452, -50.6255, -3.13388, 0.07 ) }
    dend_38 { pt3dadd( -18.267, -50.8191, -3.37692, 0.37 ) }
    dend_38 { pt3dadd( -18.866, -51.0894, -3.84583, 0.29 ) }
    dend_38 { pt3dadd( -19.4264, -51.262, -4.30038, 0.95 ) }
    dend_38 { pt3dadd( -20.1839, -51.4779, -4.90686, 0.66 ) }
    dend_38 { pt3dadd( -20.7085, -51.6464, -5.34188, 0.22 ) }
    dend_38 { pt3dadd( -21.2686, -51.8786, -5.82298, 0.59 ) }
    dend_38 { pt3dadd( -21.984, -52.2282, -6.44978, 0.59 ) }
    dend_38 { pt3dadd( -22.5541, -52.5371, -6.92244, 0.95 ) }
    dend_38 { pt3dadd( -23.2082, -52.8984, -7.43361, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -24.165, -53.4409, -8.11498, 0.29 ) }
    dend_38 { pt3dadd( -24.6998, -53.7468, -8.47064, 0.37 ) }
    dend_38 { pt3dadd( -25.1052, -53.968, -8.72326, 0.15 ) }
    dend_38 { pt3dadd( -25.8807, -54.2926, -9.04897, 0.44 ) }
    dend_38 { pt3dadd( -26.5021, -54.4462, -9.20041, 0.29 ) }
    dend_38 { pt3dadd( -26.8695, -54.3891, -9.2269, 0.66 ) }
    dend_38 { pt3dadd( -27.3317, -53.9088, -8.925, 0.29 ) }
    dend_38 { pt3dadd( -27.5495, -53.3365, -8.56205, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 8/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 16.35, -42.9674, -3.78277, 0.29 ) }
    dend_36 { pt3dadd( 17.1661, -43.8617, -4.11601, 0.29 ) }
    dend_36 { pt3dadd( 17.7847, -44.5086, -4.32709, 0.29 ) }
    dend_36 { pt3dadd( 18.4422, -45.1713, -4.52696, 0.59 ) }
    dend_36 { pt3dadd( 19.057, -45.8012, -4.7453, 0.66 ) }
    dend_36 { pt3dadd( 19.6393, -46.3898, -4.96157, 0.29 ) }
    dend_36 { pt3dadd( 20.6783, -47.4146, -5.32715, 1.03 ) }
    dend_36 { pt3dadd( 21.348, -48.0635, -5.56862, 0.59 ) }
    dend_36 { pt3dadd( 21.9009, -48.5923, -5.78647, 0.59 ) }
    dend_36 { pt3dadd( 23.1621, -49.7468, -6.30098, 0.22 ) }
    dend_36 { pt3dadd( 23.8915, -50.4008, -6.61431, 0.22 ) }
    dend_36 { pt3dadd( 24.6695, -51.1053, -6.95476, 1.18 ) }
    dend_36 { pt3dadd( 25.885, -52.2159, -7.48364, 0.15 ) }
    dend_36 { pt3dadd( 26.3088, -52.5942, -7.6525, 0.29 ) }
    dend_36 { pt3dadd( 27.2328, -53.4092, -7.98484, 0.51 ) }
    dend_36 { pt3dadd( 27.8321, -53.9193, -8.1734, 0.37 ) }
    dend_36 { pt3dadd( 28.3474, -54.3714, -8.35526, 0.51 ) }
    dend_36 { pt3dadd( 28.8791, -54.8453, -8.55336, 1.1 ) }
    dend_36 { pt3dadd( 30.1128, -55.9397, -8.9854, 0.15 ) }
    dend_36 { pt3dadd( 30.7929, -56.5528, -9.24125, 0.88 ) }
    dend_36 { pt3dadd( 31.5352, -57.255, -9.5392, 0.07 ) }
    dend_36 { pt3dadd( 32.3933, -58.1051, -9.88998, 0.81 ) }
    dend_36 { pt3dadd( 32.8791, -58.6301, -10.0789, 0.44 ) }
    dend_36 { pt3dadd( 33.3092, -59.1537, -10.2437, 0.66 ) }
    dend_36 { pt3dadd( 33.713, -59.696, -10.3818, 0.37 ) }
    dend_36 { pt3dadd( 34.2952, -60.4996, -10.5428, 0.37 ) }
    dend_36 { pt3dadd( 34.8356, -61.2184, -10.6645, 0.37 ) }
    dend_36 { pt3dadd( 35.6275, -62.2374, -10.8305, 0.15 ) }
    dend_36 { pt3dadd( 36.5133, -63.3985, -11.0155, 0.66 ) }
    dend_36 { pt3dadd( 37.4331, -64.6399, -11.2532, 0.22 ) }
    dend_36 { pt3dadd( 38.0437, -65.4826, -11.4307, 0.59 ) }
    dend_36 { pt3dadd( 38.9791, -66.7899, -11.7237, 0.15 ) }
    dend_36 { pt3dadd( 39.3545, -67.3193, -11.8492, 0.73 ) }
    dend_36 { pt3dadd( 40.4224, -68.9457, -12.262, 0.29 ) }
    dend_36 { pt3dadd( 41.1106, -70.1394, -12.5634, 0.88 ) }
    dend_36 { pt3dadd( 41.3267, -70.5941, -12.679, 0.73 ) }
    dend_36 { pt3dadd( 41.5146, -71.0843, -12.7924, 0.73 ) }
    dend_36 { pt3dadd( 41.7429, -71.8554, -12.9399, 0.73 ) }
    dend_36 { pt3dadd( 42.0726, -73.2955, -13.2082, 0.37 ) }
    dend_36 { pt3dadd( 42.2327, -74.1385, -13.3686, 0.22 ) }
    dend_36 { pt3dadd( 42.3367, -74.7516, -13.462, 0.22 ) }
    dend_36 { pt3dadd( 42.4612, -75.5706, -13.598, 0.22 ) }
    dend_36 { pt3dadd( 42.5676, -76.4579, -13.7484, 0.22 ) }
    dend_36 { pt3dadd( 42.6399, -77.889, -13.9532, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 52/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 16.35, -42.9674, -3.78277, 0.44 ) }
    dend_33 { pt3dadd( 15.716, -44.1882, -3.46688, 0.44 ) }
    dend_33 { pt3dadd( 14.9823, -45.4826, -3.13825, 0.81 ) }
    dend_33 { pt3dadd( 14.6237, -46.0354, -3.0039, 0.81 ) }
    dend_33 { pt3dadd( 14.0486, -46.8625, -2.78527, 0.37 ) }
    dend_33 { pt3dadd( 13.5968, -47.4991, -2.59922, 0.81 ) }
    dend_33 { pt3dadd( 13.2362, -48.0222, -2.45561, 0.81 ) }
    dend_33 { pt3dadd( 12.6787, -48.8383, -2.24171, 0.59 ) }
    dend_33 { pt3dadd( 11.6251, -50.5161, -1.82249, 0.15 ) }
    dend_33 { pt3dadd( 11.1395, -51.3539, -1.64975, 0.15 ) }
    dend_33 { pt3dadd( 10.6569, -52.3044, -1.52124, 0.37 ) }
    dend_33 { pt3dadd( 10.2572, -53.2418, -1.45809, 0.88 ) }
    dend_33 { pt3dadd( 10.0702, -53.7307, -1.46406, 0.66 ) }
    dend_33 { pt3dadd( 9.48915, -55.3048, -1.56613, 0.37 ) }
    dend_33 { pt3dadd( 8.87676, -56.9532, -1.72936, 0.37 ) }
    dend_33 { pt3dadd( 8.4412, -58.0656, -1.85149, 0.66 ) }
    dend_33 { pt3dadd( 7.81795, -59.4837, -2.01079, 0.95 ) }
    dend_33 { pt3dadd( 6.9386, -61.3383, -2.19344, 0.44 ) }
    dend_33 { pt3dadd( 6.34115, -62.5754, -2.36191, 0.22 ) }
    dend_33 { pt3dadd( 6.00197, -63.3311, -2.4898, 0.22 ) }
    dend_33 { pt3dadd( 5.75854, -64.0438, -2.61521, 0.22 ) }
    dend_33 { pt3dadd( 5.57622, -64.8898, -2.74647, 0.66 ) }
    dend_33 { pt3dadd( 5.55231, -65.5489, -2.84025, 0.81 ) }
    dend_33 { pt3dadd( 5.70615, -67.2681, -3.05114, 0.81 ) }
    dend_33 { pt3dadd( 5.85562, -68.4782, -3.16845, 0.15 ) }
    dend_33 { pt3dadd( 6.02257, -69.842, -3.24284, 0.51 ) }
    dend_33 { pt3dadd( 6.14061, -71.0593, -3.22627, 0.15 ) }
    dend_33 { pt3dadd( 6.21585, -72.273, -3.12436, 0.66 ) }
    dend_33 { pt3dadd( 6.21656, -74.3047, -2.76504, 0.29 ) }
    dend_33 { pt3dadd( 6.15806, -75.383, -2.47412, 0.66 ) }
    dend_33 { pt3dadd( 5.99137, -76.8684, -1.99167, 0.88 ) }
    dend_33 { pt3dadd( 5.72017, -78.6154, -1.32652, 0.22 ) }
    dend_33 { pt3dadd( 5.56525, -79.4383, -0.961191, 0.22 ) }
    dend_33 { pt3dadd( 5.30231, -80.7306, -0.332355, 0.22 ) }
    dend_33 { pt3dadd( 5.18167, -81.3468, -0.0272067, 0.88 ) }
    dend_33 { pt3dadd( 5.09034, -81.8345, 0.195607, 0.73 ) }
    dend_33 { pt3dadd( 4.93946, -82.6483, 0.539157, 1.1 ) }
    dend_33 { pt3dadd( 4.75071, -83.7354, 0.967218, 0.22 ) }
    dend_33 { pt3dadd( 4.57971, -84.8669, 1.36838, 0.88 ) }
    dend_33 { pt3dadd( 4.33851, -86.6602, 1.91633, 0.22 ) }
    dend_33 { pt3dadd( 4.17284, -88.0154, 2.31071, 0.37 ) }
    dend_33 { pt3dadd( 3.9903, -89.6642, 2.76646, 1.03 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 94/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 37.4847, 32.6789, -5.49124, 0.15 ) }
    dend_29 { pt3dadd( 37.9374, 31.9556, -4.62305, 0.15 ) }
    dend_29 { pt3dadd( 38.2376, 31.4759, -4.04726, 0.37 ) }
    dend_29 { pt3dadd( 38.6639, 30.7948, -3.22969, 0.22 ) }
    dend_29 { pt3dadd( 38.9114, 30.3992, -2.75489, 0.51 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 37.4847, 32.6789, -5.49124, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( 38.5667, 33.6942, -4.69988, 0.22 ) }
    dend_28 { pt3dadd( 39.1681, 34.4023, -4.2456, 0.22 ) }
    dend_28 { pt3dadd( 39.5392, 34.8394, -3.96521, 0.22 ) }
    dend_28 { pt3dadd( 40.0801, 35.4763, -3.55664, 0.22 ) }
    dend_28 { pt3dadd( 40.4166, 35.8725, -3.30244, 0.22 ) }
    dend_28 { pt3dadd( 40.746, 36.2604, -3.0536, 0.22 ) }
    dend_28 { pt3dadd( 40.8696, 36.594, -2.93062, 0.95 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 7/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 19.7297, 13.7801, 1.79466, 0.81 ) }
    dend_22 { pt3dadd( 19.8834, 13.4104, 1.59747, 0.81 ) }
    dend_22 { pt3dadd( 20.0851, 12.7527, 1.29317, 0.44 ) }
    dend_22 { pt3dadd( 20.2415, 12.1979, 1.12159, 0.44 ) }
    dend_22 { pt3dadd( 20.318, 11.9127, 1.05617, 0.44 ) }
    dend_22 { pt3dadd( 20.3963, 11.6354, 1.00474, 0.44 ) }
    dend_22 { pt3dadd( 20.5496, 11.1131, 0.918201, 0.44 ) }
    dend_22 { pt3dadd( 20.6376, 10.8049, 0.880054, 0.73 ) }
    dend_22 { pt3dadd( 20.9008, 9.83794, 0.82064, 0.44 ) }
    dend_22 { pt3dadd( 21.0862, 9.18889, 0.801454, 0.51 ) }
    dend_22 { pt3dadd( 21.342, 8.41627, 0.77597, 0.81 ) }
    dend_22 { pt3dadd( 21.5445, 7.86468, 0.753239, 0.81 ) }
    dend_22 { pt3dadd( 21.6888, 7.51054, 0.732631, 0.81 ) }
    dend_22 { pt3dadd( 21.9446, 6.91336, 0.684979, 0.51 ) }
    dend_22 { pt3dadd( 22.106, 6.55085, 0.638532, 0.51 ) }
    dend_22 { pt3dadd( 22.3752, 6.00644, 0.551297, 0.37 ) }
    dend_22 { pt3dadd( 22.6046, 5.59478, 0.467327, 0.37 ) }
    dend_22 { pt3dadd( 22.9263, 5.06725, 0.32011, 0.66 ) }
    dend_22 { pt3dadd( 23.2212, 4.59984, 0.157404, 0.37 ) }
    dend_22 { pt3dadd( 23.447, 4.26924, 0.0126295, 0.37 ) }
    dend_22 { pt3dadd( 23.6122, 4.04212, -0.10184, 0.37 ) }
    dend_22 { pt3dadd( 23.8662, 3.73329, -0.279077, 0.22 ) }
    dend_22 { pt3dadd( 24.2457, 3.32158, -0.536128, 0.81 ) }
    dend_22 { pt3dadd( 24.5941, 2.94537, -0.775658, 0.95 ) }
    dend_22 { pt3dadd( 24.9938, 2.49174, -1.04672, 0.73 ) }
    dend_22 { pt3dadd( 25.2646, 2.1587, -1.20181, 0.73 ) }
    dend_22 { pt3dadd( 25.5219, 1.81467, -1.32476, 0.73 ) }
    dend_22 { pt3dadd( 25.7191, 1.54128, -1.39738, 0.95 ) }
    dend_22 { pt3dadd( 25.9375, 1.27326, -1.44473, 0.73 ) }
    dend_22 { pt3dadd( 26.2673, 0.880517, -1.47103, 0.51 ) }
    dend_22 { pt3dadd( 26.6202, 0.428853, -1.46491, 0.51 ) }
    dend_22 { pt3dadd( 26.9231, 0.0121664, -1.442, 0.29 ) }
    dend_22 { pt3dadd( 27.2535, -0.510215, -1.43316, 0.29 ) }
    dend_22 { pt3dadd( 27.7169, -1.32037, -1.47514, 0.29 ) }
    dend_22 { pt3dadd( 28.0334, -1.94562, -1.55607, 0.29 ) }
    dend_22 { pt3dadd( 28.212, -2.32469, -1.64266, 0.29 ) }
    dend_22 { pt3dadd( 28.3806, -2.67916, -1.74337, 0.29 ) }
    dend_22 { pt3dadd( 28.7603, -3.47998, -1.98306, 0.88 ) }
    dend_22 { pt3dadd( 28.9671, -3.93431, -2.12447, 0.88 ) }
    dend_22 { pt3dadd( 29.2397, -4.59666, -2.33501, 0.51 ) }
    dend_22 { pt3dadd( 29.635, -5.53255, -2.6387, 0.51 ) }
    dend_22 { pt3dadd( 29.9245, -6.19026, -2.82624, 0.51 ) }
    dend_22 { pt3dadd( 30.1829, -6.71835, -2.96063, 0.29 ) }
    dend_22 { pt3dadd( 30.3826, -7.09586, -3.03643, 0.22 ) }
    dend_22 { pt3dadd( 30.6188, -7.56104, -3.11345, 0.22 ) }
    dend_22 { pt3dadd( 30.7942, -7.95426, -3.17519, 0.22 ) }
    dend_22 { pt3dadd( 31.0105, -8.63905, -3.27578, 0.22 ) }
    dend_22 { pt3dadd( 31.226, -9.48631, -3.45075, 0.51 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 55/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 19.7297, 13.7801, 1.79466, 0.95 ) }
    dend_21 { pt3dadd( 20.1547, 13.6997, 1.83928, 0.95 ) }
    dend_21 { pt3dadd( 20.5144, 13.6254, 1.87106, 0.95 ) }
    dend_21 { pt3dadd( 20.8757, 13.5451, 1.89224, 0.59 ) }
    dend_21 { pt3dadd( 21.0684, 13.5001, 1.89789, 0.73 ) }
    dend_21 { pt3dadd( 21.2593, 13.4607, 1.89847, 1.1 ) }
    dend_21 { pt3dadd( 21.7609, 13.3814, 1.89, 0.81 ) }
    dend_21 { pt3dadd( 21.9593, 13.3667, 1.89238, 0.81 ) }
    dend_21 { pt3dadd( 22.1796, 13.3955, 1.89565, 0.81 ) }
    dend_21 { pt3dadd( 22.345, 13.4756, 1.92359, 0.81 ) }
    dend_21 { pt3dadd( 22.5643, 13.7049, 1.96665, 0.22 ) }
    dend_21 { pt3dadd( 22.7107, 13.9729, 2.0129, 0.22 ) }
    dend_21 { pt3dadd( 22.853, 14.3924, 2.12533, 0.22 ) }
    dend_21 { pt3dadd( 22.9759, 14.9297, 2.30845, 0.22 ) }
    dend_21 { pt3dadd( 23.0456, 15.4328, 2.5252, 0.22 ) }
    dend_21 { pt3dadd( 23.0875, 16.315, 2.97329, 0.95 ) }
    dend_21 { pt3dadd( 23.0659, 16.6285, 3.16297, 1.4 ) }
    dend_21 { pt3dadd( 22.8679, 16.8383, 3.63838, 1.4 ) }
    dend_21 { pt3dadd( 22.5758, 16.505, 3.96619, 0.15 ) }
    dend_21 { pt3dadd( 22.3431, 16.2109, 4.21401, 0.15 ) }
    dend_21 { pt3dadd( 22.2214, 16.0413, 4.34106, 0.15 ) }
    dend_21 { pt3dadd( 22.1295, 15.8983, 4.44715, 0.15 ) }
    dend_21 { pt3dadd( 21.9228, 15.5884, 4.59812, 0.15 ) }
    dend_21 { pt3dadd( 21.7661, 15.3647, 4.65825, 0.15 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 79/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 17.2559, 21.3959, -3.79789, 0.29 ) }
    dend_19 { pt3dadd( 17.9422, 20.7327, -4.73588, 0.29 ) }
    dend_19 { pt3dadd( 18.315, 20.2765, -5.3966, 0.44 ) }
    dend_19 { pt3dadd( 18.6729, 19.7451, -6.18171, 0.66 ) }
    dend_19 { pt3dadd( 18.9862, 19.2007, -6.97982, 0.59 ) }
    dend_19 { pt3dadd( 19.2975, 18.495, -8.06847, 0.59 ) }
    dend_19 { pt3dadd( 19.5186, 17.8763, -9.08799, 0.59 ) }
    dend_19 { pt3dadd( 19.6042, 17.3221, -10.0714, 0.59 ) }
    dend_19 { pt3dadd( 19.6381, 16.8575, -10.9526, 0.59 ) }
    dend_19 { pt3dadd( 19.6307, 16.5479, -11.5728, 0.59 ) }
    dend_19 { pt3dadd( 19.5893, 15.8492, -13.2279, 0.59 ) }
    dend_19 { pt3dadd( 19.5618, 15.6622, -13.7808, 0.59 ) }
    dend_19 { pt3dadd( 19.5072, 15.4939, -14.406, 0.59 ) }
    dend_19 { pt3dadd( 19.4531, 15.2824, -15.3581, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 93/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.2559, 21.3959, -3.79789, 0.88 ) }
    dend_18 { pt3dadd( 17.0914, 21.955, -3.70015, 0.88 ) }
    dend_18 { pt3dadd( 16.8201, 22.8058, -3.59107, 0.37 ) }
    dend_18 { pt3dadd( 16.6839, 23.2201, -3.549, 0.37 ) }
    dend_18 { pt3dadd( 16.378, 24.0446, -3.50581, 0.37 ) }
    dend_18 { pt3dadd( 15.9946, 24.9868, -3.48375, 0.37 ) }
    dend_18 { pt3dadd( 15.7055, 25.6722, -3.47919, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_18 { pt3dadd( 15.4336, 26.2312, -3.48778, 0.44 ) }
    dend_18 { pt3dadd( 15.2072, 26.6666, -3.51442, 0.59 ) }
    dend_18 { pt3dadd( 14.865, 27.369, -3.57365, 0.59 ) }
    dend_18 { pt3dadd( 14.5803, 28.034, -3.64238, 0.59 ) }
    dend_18 { pt3dadd( 14.3663, 28.5818, -3.71409, 0.59 ) }
    dend_18 { pt3dadd( 14.2354, 28.9377, -3.7515, 0.88 ) }
    dend_18 { pt3dadd( 13.9148, 29.8092, -3.81552, 0.44 ) }
    dend_18 { pt3dadd( 13.6872, 30.4159, -3.84784, 0.44 ) }
    dend_18 { pt3dadd( 13.4675, 31.0186, -3.86416, 0.44 ) }
    dend_18 { pt3dadd( 13.2426, 31.6513, -3.87897, 0.44 ) }
    dend_18 { pt3dadd( 12.9859, 32.358, -3.88861, 0.44 ) }
    dend_18 { pt3dadd( 12.868, 32.6786, -3.88828, 0.59 ) }
    dend_18 { pt3dadd( 12.631, 33.2909, -3.88366, 0.59 ) }
    dend_18 { pt3dadd( 12.5086, 33.5872, -3.88595, 0.59 ) }
    dend_18 { pt3dadd( 12.3007, 34.1206, -3.89851, 0.66 ) }
    dend_18 { pt3dadd( 12.1769, 34.508, -3.9137, 0.66 ) }
    dend_18 { pt3dadd( 12.0975, 34.8213, -3.92235, 0.66 ) }
    dend_18 { pt3dadd( 11.961, 35.4808, -3.97713, 0.66 ) }
    dend_18 { pt3dadd( 11.8517, 36.0773, -4.04998, 0.29 ) }
    dend_18 { pt3dadd( 11.7231, 36.7562, -4.17237, 0.88 ) }
    dend_18 { pt3dadd( 11.6465, 37.1757, -4.26516, 0.51 ) }
    dend_18 { pt3dadd( 11.5215, 37.9836, -4.46404, 0.37 ) }
    dend_18 { pt3dadd( 11.4229, 38.8841, -4.69583, 0.44 ) }
    dend_18 { pt3dadd( 11.388, 39.3755, -4.83683, 0.66 ) }
    dend_18 { pt3dadd( 11.3175, 40.0984, -5.07927, 0.29 ) }
    dend_18 { pt3dadd( 11.2503, 40.501, -5.23322, 0.29 ) }
    dend_18 { pt3dadd( 11.1642, 40.8886, -5.3971, 0.29 ) }
    dend_18 { pt3dadd( 11.0142, 41.4801, -5.65545, 0.44 ) }
    dend_18 { pt3dadd( 10.8561, 42.0223, -5.86125, 0.44 ) }
    dend_18 { pt3dadd( 10.5621, 42.8815, -6.20907, 0.44 ) }
    dend_18 { pt3dadd( 10.357, 43.3798, -6.4221, 0.37 ) }
    dend_18 { pt3dadd( 10.1922, 43.7347, -6.59123, 0.37 ) }
    dend_18 { pt3dadd( 9.97978, 44.1825, -6.81222, 0.37 ) }
    dend_18 { pt3dadd( 9.77684, 44.643, -7.03441, 0.37 ) }
    dend_18 { pt3dadd( 9.57939, 45.2032, -7.2829, 0.37 ) }
    dend_18 { pt3dadd( 9.47118, 45.5873, -7.44112, 0.37 ) }
    dend_18 { pt3dadd( 9.32696, 46.1459, -7.67191, 0.37 ) }
    dend_18 { pt3dadd( 9.18367, 46.5924, -7.86843, 0.37 ) }
    dend_18 { pt3dadd( 8.97166, 47.1894, -8.14721, 0.37 ) }
    dend_18 { pt3dadd( 8.85655, 47.4784, -8.29632, 0.37 ) }
    dend_18 { pt3dadd( 8.68066, 47.8421, -8.51106, 0.37 ) }
    dend_18 { pt3dadd( 8.50126, 48.1383, -8.72958, 0.37 ) }
    dend_18 { pt3dadd( 8.12404, 48.6653, -9.21302, 0.73 ) }
    dend_18 { pt3dadd( 7.9001, 48.9372, -9.46207, 0.73 ) }
    dend_18 { pt3dadd( 7.43609, 49.4695, -9.94429, 0.66 ) }
    dend_18 { pt3dadd( 6.99955, 49.9998, -10.3916, 0.66 ) }
    dend_18 { pt3dadd( 6.5745, 50.5632, -10.8385, 0.66 ) }
    dend_18 { pt3dadd( 6.20094, 51.1126, -11.1951, 1.47 ) }
    dend_18 { pt3dadd( 5.64474, 51.9647, -11.7189, 0.22 ) }
    dend_18 { pt3dadd( 5.37379, 52.3696, -11.9484, 0.22 ) }
    dend_18 { pt3dadd( 5.16047, 52.7126, -12.0888, 0.22 ) }
    dend_18 { pt3dadd( 4.92815, 53.1386, -12.1896, 0.22 ) }
    dend_18 { pt3dadd( 4.55623, 53.888, -12.2456, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.9519, -16.9075, -14.1776, 0.95 ) }
    dend_7 { pt3dadd( -16.7617, -17.4197, -14.6618, 0.95 ) }
    dend_7 { pt3dadd( -16.3855, -18.3767, -15.4986, 0.73 ) }
    dend_7 { pt3dadd( -16.0231, -19.4266, -16.3732, 0.73 ) }
    dend_7 { pt3dadd( -15.7508, -20.4462, -17.2402, 1.1 ) }
    dend_7 { pt3dadd( -15.5182, -21.5364, -18.2097, 0.37 ) }
    dend_7 { pt3dadd( -15.4298, -22.115, -18.7643, 0.66 ) }
    dend_7 { pt3dadd( -15.3681, -23.1919, -19.8582, 0.15 ) }
    dend_7 { pt3dadd( -15.3775, -23.8761, -20.5989, 0.51 ) }
    dend_7 { pt3dadd( -15.4337, -25.078, -21.9698, 0.73 ) }
    dend_7 { pt3dadd( -15.4965, -25.8395, -22.8699, 1.03 ) }
    dend_7 { pt3dadd( -15.6202, -26.9843, -24.2335, 0.88 ) }
    dend_7 { pt3dadd( -15.7241, -27.6949, -25.0788, 1.1 ) }
    dend_7 { pt3dadd( -15.9043, -28.7312, -26.2991, 0.29 ) }
    dend_7 { pt3dadd( -16.0549, -29.6058, -27.3132, 1.32 ) }
    dend_7 { pt3dadd( -16.3296, -30.9658, -28.8771, 0.44 ) }
    dend_7 { pt3dadd( -16.626, -32.0969, -30.1939, 0.44 ) }
    dend_7 { pt3dadd( -16.8722, -32.7678, -31.0674, 0.66 ) }
    dend_7 { pt3dadd( -17.1964, -33.4729, -32.0773, 0.81 ) }
    dend_7 { pt3dadd( -17.6475, -34.288, -33.3538, 0.66 ) }
    dend_7 { pt3dadd( -18.1459, -35.0533, -34.7304, 0.66 ) }
    dend_7 { pt3dadd( -18.5506, -35.6122, -35.8352, 0.95 ) }
    dend_7 { pt3dadd( -19.5084, -36.8486, -38.3246, 0.29 ) }
    dend_7 { pt3dadd( -19.7566, -37.1542, -38.9182, 0.51 ) }
    dend_7 { pt3dadd( -20.035, -37.4826, -39.4989, 0.51 ) }
    dend_7 { pt3dadd( -20.643, -38.2172, -40.5808, 0.22 ) }
    dend_7 { pt3dadd( -20.9471, -38.5673, -40.986, 0.22 ) }
    dend_7 { pt3dadd( -21.422, -39.1054, -41.4587, 0.73 ) }
    dend_7 { pt3dadd( -22.301, -40.0969, -42.096, 0.29 ) }
    dend_7 { pt3dadd( -22.8175, -40.6345, -42.4303, 1.1 ) }
    dend_7 { pt3dadd( -23.3498, -41.1605, -42.7346, 1.1 ) }
    dend_7 { pt3dadd( -24.5716, -42.3602, -43.3226, 0.15 ) }
    dend_7 { pt3dadd( -25.1264, -42.8993, -43.604, 0.15 ) }
    dend_7 { pt3dadd( -25.6035, -43.38, -43.8715, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 87/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.9519, -16.9075, -14.1776, 0.73 ) }
    dend_6 { pt3dadd( -17.6884, -16.9771, -14.5549, 0.73 ) }
    dend_6 { pt3dadd( -18.3066, -17.0933, -14.8877, 0.44 ) }
    dend_6 { pt3dadd( -18.8752, -17.2847, -15.1963, 0.44 ) }
    dend_6 { pt3dadd( -19.4231, -17.5565, -15.4771, 0.59 ) }
    dend_6 { pt3dadd( -19.6597, -17.6978, -15.5956, 0.59 ) }
    dend_6 { pt3dadd( -19.8214, -17.7948, -15.6663, 0.59 ) }
    dend_6 { pt3dadd( -20.2262, -18.069, -15.8093, 0.51 ) }
    dend_6 { pt3dadd( -20.659, -18.3959, -15.9559, 0.29 ) }
    dend_6 { pt3dadd( -21.1389, -18.7719, -16.0962, 0.29 ) }
    dend_6 { pt3dadd( -21.6388, -19.1602, -16.2455, 0.22 ) }
    dend_6 { pt3dadd( -22.5763, -19.8273, -16.5151, 0.22 ) }
    dend_6 { pt3dadd( -22.9538, -20.0571, -16.6148, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 0/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 23.7917, 0.47302, -6.70698, 0.51 ) }
    dend_84 { pt3dadd( 24.1079, 2.28746, -7.18086, 0.51 ) }
    dend_84 { pt3dadd( 24.3814, 3.39402, -7.41457, 0.51 ) }
    dend_84 { pt3dadd( 24.7108, 4.35742, -7.61126, 0.51 ) }
    dend_84 { pt3dadd( 25.1358, 5.24307, -7.73302, 0.51 ) }
    dend_84 { pt3dadd( 25.7065, 6.24119, -7.80703, 0.73 ) }
    dend_84 { pt3dadd( 26.3328, 7.23685, -7.84392, 0.44 ) }
    dend_84 { pt3dadd( 26.9597, 8.12939, -7.79922, 0.44 ) }
    dend_84 { pt3dadd( 27.6124, 8.89448, -7.7341, 0.44 ) }
    dend_84 { pt3dadd( 29.0298, 10.1928, -7.63558, 0.44 ) }
    dend_84 { pt3dadd( 30.029, 10.915, -7.60868, 0.44 ) }
    dend_84 { pt3dadd( 30.4179, 11.1281, -7.61045, 0.44 ) }
    dend_84 { pt3dadd( 31.2259, 11.4521, -7.66423, 0.44 ) }
    dend_84 { pt3dadd( 31.6886, 11.6043, -7.74741, 0.44 ) }
    dend_84 { pt3dadd( 32.1294, 11.7687, -7.88604, 0.44 ) }
    dend_84 { pt3dadd( 32.765, 12.0731, -8.19737, 0.44 ) }
    dend_84 { pt3dadd( 33.2861, 12.4492, -8.50324, 0.44 ) }
    dend_84 { pt3dadd( 34.1832, 13.2877, -8.97349, 0.81 ) }
    dend_84 { pt3dadd( 34.9507, 14.134, -9.32352, 0.37 ) }
    dend_84 { pt3dadd( 35.7888, 15.0304, -9.64526, 0.73 ) }
    dend_84 { pt3dadd( 36.1715, 15.3982, -9.76048, 0.73 ) }
    dend_84 { pt3dadd( 37.0145, 16.1105, -9.92822, 0.73 ) }
    dend_84 { pt3dadd( 38.0686, 16.8664, -10.0812, 0.73 ) }
    dend_84 { pt3dadd( 39.3467, 17.6255, -10.2493, 0.59 ) }
    dend_84 { pt3dadd( 40.8909, 18.4104, -10.4538, 0.59 ) }
    dend_84 { pt3dadd( 42.0167, 18.9332, -10.6157, 0.66 ) }
    dend_84 { pt3dadd( 43.6036, 19.6678, -10.8226, 0.51 ) }
    dend_84 { pt3dadd( 45.6976, 20.673, -11.0418, 0.44 ) }
    dend_84 { pt3dadd( 46.9309, 21.3064, -11.1851, 0.44 ) }
    dend_84 { pt3dadd( 47.4232, 21.5783, -11.2328, 0.44 ) }
    dend_84 { pt3dadd( 47.9609, 21.9238, -11.2781, 0.44 ) }
    dend_84 { pt3dadd( 49.05, 22.7545, -11.4088, 0.73 ) }
    dend_84 { pt3dadd( 49.9473, 23.5122, -11.5335, 1.18 ) }
    dend_84 { pt3dadd( 51.0132, 24.4978, -11.724, 0.51 ) }
    dend_84 { pt3dadd( 51.7583, 25.1978, -11.9006, 0.29 ) }
    dend_84 { pt3dadd( 52.2274, 25.6151, -12.0814, 0.29 ) }
    dend_84 { pt3dadd( 53.2383, 26.5105, -12.632, 0.29 ) }
    dend_84 { pt3dadd( 53.9287, 27.1679, -13.114, 0.66 ) }
    dend_84 { pt3dadd( 54.9852, 28.249, -13.9526, 0.66 ) }
    dend_84 { pt3dadd( 55.8127, 29.1191, -14.6224, 0.66 ) }
    dend_84 { pt3dadd( 57.0418, 30.3812, -15.6058, 0.44 ) }
    dend_84 { pt3dadd( 57.767, 31.1196, -16.1914, 0.22 ) }
    dend_84 { pt3dadd( 58.2925, 31.6849, -16.6442, 0.22 ) }
    dend_84 { pt3dadd( 58.6668, 32.1395, -17.0264, 0.22 ) }
    dend_84 { pt3dadd( 59.2642, 32.8805, -17.6181, 0.22 ) }
    dend_84 { pt3dadd( 59.9456, 33.6762, -18.2489, 0.59 ) }
    dend_84 { pt3dadd( 61.5111, 35.1861, -19.5761, 0.22 ) }
    dend_84 { pt3dadd( 62.9543, 36.2196, -20.705, 0.22 ) }
    dend_84 { pt3dadd( 64.3278, 36.8909, -21.7517, 0.44 ) }
    dend_84 { pt3dadd( 65.2604, 37.1264, -22.4584, 0.29 ) }
    dend_84 { pt3dadd( 65.9236, 37.2189, -22.9717, 0.37 ) }
    dend_84 { pt3dadd( 67.7141, 37.0217, -24.2156, 0.22 ) }
    dend_84 { pt3dadd( 68.922, 36.4769, -24.8316, 0.22 ) }
    dend_84 { pt3dadd( 70.1335, 35.6574, -25.329, 0.37 ) }
    dend_84 { pt3dadd( 71.201, 34.7512, -25.7335, 0.88 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 55/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 23.7917, 0.47302, -6.70698, 0.81 ) }
    dend_83 { pt3dadd( 24.7387, 0.139699, -6.91202, 0.81 ) }
    dend_83 { pt3dadd( 26.454, -0.450428, -7.15182, 0.59 ) }
    dend_83 { pt3dadd( 27.3503, -0.763028, -7.22924, 0.59 ) }
    dend_83 { pt3dadd( 28.1072, -1.01189, -7.24799, 0.59 ) }
    dend_83 { pt3dadd( 28.8632, -1.22532, -7.22284, 0.59 ) }
    dend_83 { pt3dadd( 29.7027, -1.4378, -7.15771, 0.59 ) }
    dend_83 { pt3dadd( 30.5256, -1.61703, -7.06601, 0.59 ) }
    dend_83 { pt3dadd( 31.1467, -1.72772, -6.95584, 0.29 ) }
    dend_83 { pt3dadd( 31.7754, -1.82639, -6.85212, 0.29 ) }
    dend_83 { pt3dadd( 32.9051, -1.97092, -6.68223, 0.59 ) }
    dend_83 { pt3dadd( 33.8769, -2.08259, -6.49914, 0.37 ) }
    dend_83 { pt3dadd( 34.958, -2.21146, -6.26728, 0.37 ) }
    dend_83 { pt3dadd( 36.0795, -2.36396, -6.0403, 0.81 ) }
    dend_83 { pt3dadd( 36.9615, -2.49155, -5.87337, 0.37 ) }
    dend_83 { pt3dadd( 38.8172, -2.81032, -5.54225, 0.66 ) }
    dend_83 { pt3dadd( 40.3229, -3.07888, -5.26277, 0.73 ) }
    dend_83 { pt3dadd( 40.9215, -3.17713, -5.144, 1.03 ) }
    dend_83 { pt3dadd( 42.067, -3.35097, -4.89353, 0.66 ) }
    dend_83 { pt3dadd( 43.0436, -3.46381, -4.68387, 0.22 ) }
    dend_83 { pt3dadd( 43.8148, -3.50568, -4.53599, 0.73 ) }
    dend_83 { pt3dadd( 44.6199, -3.50203, -4.40755, 0.73 ) }
    dend_83 { pt3dadd( 45.211, -3.4648, -4.36012, 0.73 ) }
    dend_83 { pt3dadd( 46.0178, -3.36523, -4.29732, 0.44 ) }
    dend_83 { pt3dadd( 46.8441, -3.23647, -4.22247, 0.29 ) }
    dend_83 { pt3dadd( 47.7842, -3.09744, -4.15161, 0.22 ) }
    dend_83 { pt3dadd( 48.7214, -2.96287, -4.09274, 0.95 ) }
    dend_83 { pt3dadd( 50.1563, -2.76487, -4.01776, 0.44 ) }
    dend_83 { pt3dadd( 50.7589, -2.66728, -3.98841, 0.44 ) }
    dend_83 { pt3dadd( 51.4513, -2.56531, -3.95098, 0.44 ) }
    dend_83 { pt3dadd( 52.1158, -2.47213, -3.90781, 0.44 ) }
    dend_83 { pt3dadd( 52.376, -2.42552, -3.88876, 0.44 ) }
    dend_83 { pt3dadd( 53.115, -2.25481, -3.81604, 0.22 ) }
    dend_83 { pt3dadd( 54.3209, -1.93245, -3.65623, 1.03 ) }
    dend_83 { pt3dadd( 55.4763, -1.61862, -3.52792, 0.73 ) }
    dend_83 { pt3dadd( 56.4631, -1.36044, -3.4373, 0.37 ) }
    dend_83 { pt3dadd( 57.4522, -1.12453, -3.35718, 0.59 ) }
    dend_83 { pt3dadd( 57.9107, -1.03523, -3.31763, 0.59 ) }
    dend_83 { pt3dadd( 59.0478, -0.870697, -3.21183, 0.59 ) }
    dend_83 { pt3dadd( 59.6658, -0.802645, -3.15737, 0.59 ) }
    dend_83 { pt3dadd( 61.0625, -0.653447, -3.10403, 0.22 ) }
    dend_83 { pt3dadd( 62.0611, -0.563578, -3.03698, 0.22 ) }
    dend_83 { pt3dadd( 62.8878, -0.482945, -2.97128, 0.22 ) }
    dend_83 { pt3dadd( 63.8078, -0.362163, -2.88735, 0.22 ) }
    dend_83 { pt3dadd( 64.1899, -0.305171, -2.8496, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_83 { pt3dadd( 65.8141, -0.00262265, -2.66661, 0.22 ) }
    dend_83 { pt3dadd( 67.6869, 0.41101, -2.46194, 0.22 ) }
    dend_83 { pt3dadd( 68.9117, 0.713665, -2.33488, 0.51 ) }
    dend_83 { pt3dadd( 69.3239, 0.827667, -2.29395, 1.47 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 4/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 20.0034, -7.09153, -14.7226, 1.1 ) }
    dend_75 { pt3dadd( 20.5862, -8.20703, -14.1849, 1.1 ) }
    dend_75 { pt3dadd( 21.0926, -9.13308, -13.7676, 0.95 ) }
    dend_75 { pt3dadd( 21.8237, -10.4954, -13.2239, 0.95 ) }
    dend_75 { pt3dadd( 22.2309, -11.2501, -12.9371, 0.95 ) }
    dend_75 { pt3dadd( 22.507, -11.7624, -12.7474, 1.03 ) }
    dend_75 { pt3dadd( 23.0083, -12.6685, -12.4172, 0.88 ) }
    dend_75 { pt3dadd( 23.222, -13.0278, -12.2959, 0.81 ) }
    dend_75 { pt3dadd( 23.9131, -14.1403, -11.9521, 0.59 ) }
    dend_75 { pt3dadd( 24.6035, -15.2041, -11.6643, 0.59 ) }
    dend_75 { pt3dadd( 25.175, -16.0667, -11.4565, 0.59 ) }
    dend_75 { pt3dadd( 25.4658, -16.4849, -11.3563, 0.81 ) }
    dend_75 { pt3dadd( 25.8227, -16.9657, -11.2347, 0.81 ) }
    dend_75 { pt3dadd( 26.6475, -17.9957, -10.969, 0.51 ) }
    dend_75 { pt3dadd( 27.7871, -19.2516, -10.6243, 0.51 ) }
    dend_75 { pt3dadd( 28.3515, -19.8213, -10.466, 1.03 ) }
    dend_75 { pt3dadd( 29.0934, -20.5135, -10.2651, 1.03 ) }
    dend_75 { pt3dadd( 29.9749, -21.2817, -10.0272, 0.73 ) }
    dend_75 { pt3dadd( 30.512, -21.7249, -9.87979, 0.95 ) }
    dend_75 { pt3dadd( 31.3028, -22.3094, -9.66185, 0.95 ) }
    dend_75 { pt3dadd( 31.7243, -22.5806, -9.54394, 0.95 ) }
    dend_75 { pt3dadd( 32.6306, -23.1185, -9.28466, 1.03 ) }
    dend_75 { pt3dadd( 33.3907, -23.5452, -9.07349, 1.03 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 27/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 20.0034, -7.09153, -14.7226, 0.66 ) }
    dend_72 { pt3dadd( 20.4927, -6.67105, -14.6052, 0.66 ) }
    dend_72 { pt3dadd( 21.1883, -5.83272, -14.617, 0.66 ) }
    dend_72 { pt3dadd( 21.753, -5.03938, -14.7725, 0.66 ) }
    dend_72 { pt3dadd( 22.4364, -3.99156, -15.0427, 0.66 ) }
    dend_72 { pt3dadd( 22.6376, -3.65933, -15.1364, 0.88 ) }
    dend_72 { pt3dadd( 23.0686, -2.86877, -15.3734, 0.29 ) }
    dend_72 { pt3dadd( 23.6238, -1.31507, -16.0295, 0.29 ) }
    dend_72 { pt3dadd( 23.7258, -0.701866, -16.3481, 0.29 ) }
    dend_72 { pt3dadd( 23.7057, -0.351364, -16.5532, 0.29 ) }
    dend_72 { pt3dadd( 23.6382, -0.14564, -16.6764, 0.29 ) }
    dend_72 { pt3dadd( 23.4074, 0.257087, -16.9281, 0.29 ) }
    dend_72 { pt3dadd( 22.8588, 0.986747, -17.4044, 0.29 ) }
    dend_72 { pt3dadd( 22.5795, 1.27703, -17.5706, 1.1 ) }
    dend_72 { pt3dadd( 21.8104, 2.00148, -17.979, 0.73 ) }
    dend_72 { pt3dadd( 21.127, 2.60248, -18.3465, 0.73 ) }
    dend_72 { pt3dadd( 20.4854, 3.15298, -18.6921, 1.03 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 44/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -2.96086, -16.0823, -19.0659, 0.59 ) }
    dend_63 { pt3dadd( -4.5181, -15.5981, -19.2837, 0.59 ) }
    dend_63 { pt3dadd( -5.52574, -15.2848, -19.4246, 0.59 ) }
    dend_63 { pt3dadd( -6.66977, -14.9291, -19.5847, 0.59 ) }
    dend_63 { pt3dadd( -7.99359, -14.5175, -19.7698, 0.81 ) }
    dend_63 { pt3dadd( -8.59478, -14.3306, -19.8539, 1.1 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 50/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -2.96086, -16.0823, -19.0659, 0.59 ) }
    dend_58 { pt3dadd( -2.34665, -15.0781, -19.535, 0.59 ) }
    dend_58 { pt3dadd( -1.61077, -13.6777, -20.2677, 0.29 ) }
    dend_58 { pt3dadd( -1.33965, -13.0698, -20.5911, 0.29 ) }
    dend_58 { pt3dadd( -0.751924, -11.5011, -21.4667, 0.44 ) }
    dend_58 { pt3dadd( -0.282455, -9.99766, -22.3148, 0.51 ) }
    dend_58 { pt3dadd( 0.0867698, -8.62268, -23.0773, 0.66 ) }
    dend_58 { pt3dadd( 0.393371, -7.05206, -23.9698, 0.66 ) }
    dend_58 { pt3dadd( 0.484064, -6.36623, -24.3452, 0.44 ) }
    dend_58 { pt3dadd( 0.55332, -5.59348, -24.8017, 0.22 ) }
    dend_58 { pt3dadd( 0.54352, -4.9957, -25.1823, 0.22 ) }
    dend_58 { pt3dadd( 0.492259, -4.46805, -25.5614, 0.22 ) }
    dend_58 { pt3dadd( 0.32379, -2.92726, -26.5563, 0.81 ) }
    // Section: dend_56, id: dend_56, parent: dend_48 (entry count 63/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 3.29798, -26.1283, -14.1979, 0.59 ) }
    dend_56 { pt3dadd( 3.59564, -26.2687, -13.5365, 0.59 ) }
    dend_56 { pt3dadd( 4.42893, -26.6753, -11.7519, 0.59 ) }
    dend_56 { pt3dadd( 4.87265, -26.8712, -10.8559, 0.51 ) }
    dend_56 { pt3dadd( 5.63258, -27.1546, -9.44836, 0.73 ) }
    dend_56 { pt3dadd( 6.2559, -27.3555, -8.38365, 0.37 ) }
    dend_56 { pt3dadd( 6.9534, -27.5423, -7.29183, 0.37 ) }
    dend_56 { pt3dadd( 7.69276, -27.6807, -6.33171, 0.37 ) }
    dend_56 { pt3dadd( 8.25456, -27.7316, -5.77962, 0.37 ) }
    dend_56 { pt3dadd( 8.85705, -27.7448, -5.34002, 0.37 ) }
    dend_56 { pt3dadd( 9.59134, -27.7154, -4.98172, 0.37 ) }
    dend_56 { pt3dadd( 10.208, -27.6797, -4.7701, 0.37 ) }
    dend_56 { pt3dadd( 10.7942, -27.6481, -4.64015, 0.37 ) }
    dend_56 { pt3dadd( 11.2817, -27.6505, -4.54135, 0.37 ) }
    dend_56 { pt3dadd( 11.6464, -27.6852, -4.40196, 0.37 ) }
    dend_56 { pt3dadd( 12.7294, -27.8528, -3.85017, 0.37 ) }
    dend_56 { pt3dadd( 13.2322, -27.9495, -3.57023, 0.59 ) }
    dend_56 { pt3dadd( 13.7465, -28.0758, -3.27656, 0.59 ) }
    dend_56 { pt3dadd( 14.4182, -28.2383, -2.94081, 0.59 ) }
    dend_56 { pt3dadd( 15.6086, -28.5071, -2.45603, 0.29 ) }
    dend_56 { pt3dadd( 16.3792, -28.6717, -2.23479, 0.29 ) }
    dend_56 { pt3dadd( 17.1252, -28.8218, -2.05875, 0.51 ) }
    dend_56 { pt3dadd( 18.5557, -29.1076, -1.74309, 0.51 ) }
    dend_56 { pt3dadd( 19.9343, -29.4227, -1.48183, 0.51 ) }
    dend_56 { pt3dadd( 21.3211, -29.778, -1.28246, 0.51 ) }
    dend_56 { pt3dadd( 22.5387, -30.11, -1.20317, 0.51 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 89/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 3.29798, -26.1283, -14.1979, 1.25 ) }
    dend_49 { pt3dadd( 2.98903, -27.178, -13.6214, 1.25 ) }
    dend_49 { pt3dadd( 2.47459, -28.9259, -12.6616, 1.25 ) }
    dend_49 { pt3dadd( 2.31893, -29.4547, -12.3712, 1.25 ) }
    dend_49 { pt3dadd( 2.10338, -30.1871, -11.969, 1.32 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 94/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 3.9903, -89.6642, 2.76646, 0.07 ) }
    dend_35 { pt3dadd( 3.35381, -90.4508, 3.18634, 0.07 ) }
    dend_35 { pt3dadd( 2.87615, -91.042, 3.532, 0.73 ) }
    dend_35 { pt3dadd( 1.84649, -92.3143, 4.33988, 0.22 ) }
    dend_35 { pt3dadd( 1.31447, -92.9675, 4.78888, 0.22 ) }
    dend_35 { pt3dadd( 1.00348, -93.355, 5.06704, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_35 { pt3dadd( 0.808572, -93.6113, 5.25115, 0.95 ) }
    dend_35 { pt3dadd( 0.18249, -94.5798, 5.91892, 0.22 ) }
    dend_35 { pt3dadd( -0.213501, -95.2867, 6.38221, 0.22 ) }
    dend_35 { pt3dadd( -0.662129, -96.1956, 6.97261, 0.37 ) }
    dend_35 { pt3dadd( -0.953384, -96.8457, 7.37949, 0.22 ) }
    dend_35 { pt3dadd( -1.18279, -97.4043, 7.70791, 0.88 ) }
    dend_35 { pt3dadd( -1.66727, -98.7119, 8.42983, 0.22 ) }
    dend_35 { pt3dadd( -1.84023, -99.2532, 8.70564, 0.22 ) }
    dend_35 { pt3dadd( -2.07486, -100.019, 9.08669, 0.81 ) }
    dend_35 { pt3dadd( -2.29511, -100.7, 9.43516, 0.07 ) }
    dend_35 { pt3dadd( -2.47901, -101.181, 9.70565, 0.44 ) }
    dend_35 { pt3dadd( -2.76436, -101.736, 10.0803, 0.22 ) }
    dend_35 { pt3dadd( -2.99394, -102.112, 10.3749, 0.59 ) }
    dend_35 { pt3dadd( -3.22503, -102.437, 10.6534, 0.15 ) }
    dend_35 { pt3dadd( -3.57119, -102.849, 11.0495, 0.15 ) }
    dend_35 { pt3dadd( -3.82594, -103.104, 11.3324, 0.15 ) }
    dend_35 { pt3dadd( -4.31209, -103.494, 11.8356, 0.73 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 17/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 3.9903, -89.6642, 2.76646, 0.07 ) }
    dend_34 { pt3dadd( 3.96003, -90.9229, 2.55171, 0.07 ) }
    dend_34 { pt3dadd( 3.90389, -91.5633, 2.40791, 0.07 ) }
    dend_34 { pt3dadd( 3.77891, -92.5623, 2.22371, 0.88 ) }
    dend_34 { pt3dadd( 3.68364, -93.0629, 2.13716, 0.88 ) }
    dend_34 { pt3dadd( 3.31982, -94.568, 1.93469, 0.07 ) }
    dend_34 { pt3dadd( 2.9683, -95.7674, 1.80254, 0.66 ) }
    dend_34 { pt3dadd( 2.2207, -97.8788, 1.65128, 0.29 ) }
    dend_34 { pt3dadd( 1.79034, -98.9978, 1.614, 0.29 ) }
    dend_34 { pt3dadd( 1.15255, -100.566, 1.62757, 0.66 ) }
    dend_34 { pt3dadd( 0.690838, -101.651, 1.68638, 0.73 ) }
    dend_34 { pt3dadd( 0.0846018, -103.081, 1.84991, 0.29 ) }
    dend_34 { pt3dadd( -0.426754, -104.336, 2.01396, 0.81 ) }
    dend_34 { pt3dadd( -0.994914, -105.913, 2.27223, 0.29 ) }
    dend_34 { pt3dadd( -1.36432, -107.055, 2.43487, 0.51 ) }
    dend_34 { pt3dadd( -1.63213, -108.002, 2.57648, 0.15 ) }
    dend_34 { pt3dadd( -1.91567, -109.061, 2.70717, 0.59 ) }
    dend_34 { pt3dadd( -2.33121, -110.628, 2.90636, 0.15 ) }
    dend_34 { pt3dadd( -2.45112, -111.039, 2.95156, 0.81 ) }
    dend_34 { pt3dadd( -2.80725, -112.076, 3.00731, 0.81 ) }
    dend_34 { pt3dadd( -3.1292, -112.973, 3.04085, 0.81 ) }
    dend_34 { pt3dadd( -3.60984, -114.314, 3.09258, 0.22 ) }
    dend_34 { pt3dadd( -3.78728, -114.834, 3.11698, 0.51 ) }
    dend_34 { pt3dadd( -4.31162, -116.373, 3.22002, 0.22 ) }
    dend_34 { pt3dadd( -4.73684, -117.667, 3.29498, 0.66 ) }
    dend_34 { pt3dadd( -4.91697, -118.288, 3.32735, 0.37 ) }
    dend_34 { pt3dadd( -5.02753, -118.731, 3.33758, 0.37 ) }
    dend_34 { pt3dadd( -5.23145, -119.837, 3.36769, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 45/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -25.6035, -43.38, -43.8715, 0.95 ) }
    dend_9 { pt3dadd( -25.9119, -43.9209, -44.1179, 0.95 ) }
    dend_9 { pt3dadd( -26.3992, -44.7613, -44.3998, 0.95 ) }
    dend_9 { pt3dadd( -27.1952, -46.0307, -44.7322, 0.22 ) }
    dend_9 { pt3dadd( -27.766, -46.8599, -44.8998, 0.22 ) }
    dend_9 { pt3dadd( -28.6209, -48.0117, -45.0899, 0.81 ) }
    dend_9 { pt3dadd( -29.2236, -48.7458, -45.1873, 0.81 ) }
    dend_9 { pt3dadd( -30.0746, -49.6606, -45.2295, 0.22 ) }
    dend_9 { pt3dadd( -31.0042, -50.4675, -45.1928, 0.22 ) }
    dend_9 { pt3dadd( -31.7199, -50.9341, -45.1221, 0.22 ) }
    dend_9 { pt3dadd( -32.1181, -51.1264, -45.0676, 0.37 ) }
    dend_9 { pt3dadd( -33.1536, -51.5017, -44.9372, 0.07 ) }
    dend_9 { pt3dadd( -33.9973, -51.7368, -44.9284, 0.95 ) }
    dend_9 { pt3dadd( -35.1513, -52.0097, -45.0552, 0.66 ) }
    dend_9 { pt3dadd( -36.0688, -52.2328, -45.232, 0.29 ) }
    dend_9 { pt3dadd( -37.0687, -52.4981, -45.4928, 0.81 ) }
    dend_9 { pt3dadd( -37.9123, -52.7531, -45.7787, 0.15 ) }
    dend_9 { pt3dadd( -39.5143, -53.3215, -46.4554, 0.15 ) }
    dend_9 { pt3dadd( -40.3163, -53.6883, -46.8452, 0.15 ) }
    dend_9 { pt3dadd( -40.8105, -53.9823, -47.1086, 0.37 ) }
    dend_9 { pt3dadd( -41.422, -54.423, -47.4399, 0.37 ) }
    dend_9 { pt3dadd( -42.3583, -55.2136, -47.9269, 0.07 ) }
    dend_9 { pt3dadd( -42.6561, -55.4977, -48.0605, 0.44 ) }
    dend_9 { pt3dadd( -43.605, -56.5076, -48.4333, 0.07 ) }
    dend_9 { pt3dadd( -44.123, -57.1683, -48.673, 0.81 ) }
    dend_9 { pt3dadd( -44.7218, -58.0713, -48.9827, 0.81 ) }
    dend_9 { pt3dadd( -45.1225, -58.8241, -49.2246, 0.81 ) }
    dend_9 { pt3dadd( -45.515, -59.7077, -49.5139, 1.03 ) }
    dend_9 { pt3dadd( -45.6246, -59.9917, -49.6138, 1.03 ) }
    dend_9 { pt3dadd( -46.0854, -61.3843, -50.1026, 0.29 ) }
    dend_9 { pt3dadd( -46.4052, -62.4593, -50.4711, 0.29 ) }
    dend_9 { pt3dadd( -46.6816, -63.4727, -50.8151, 0.81 ) }
    dend_9 { pt3dadd( -47.0986, -65.0131, -51.3461, 0.29 ) }
    dend_9 { pt3dadd( -47.4064, -66.1382, -51.7418, 0.51 ) }
    dend_9 { pt3dadd( -47.5776, -66.7522, -51.9611, 0.07 ) }
    dend_9 { pt3dadd( -47.8085, -67.4963, -52.2328, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 81/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -25.6035, -43.38, -43.8715, 0.15 ) }
    dend_8 { pt3dadd( -26.9435, -45.0698, -45.4103, 0.15 ) }
    dend_8 { pt3dadd( -27.3835, -45.5978, -45.8573, 0.44 ) }
    dend_8 { pt3dadd( -27.8131, -46.0955, -46.241, 0.15 ) }
    dend_8 { pt3dadd( -28.3583, -46.698, -46.6655, 0.66 ) }
    dend_8 { pt3dadd( -29.2905, -47.729, -47.336, 0.22 ) }
    dend_8 { pt3dadd( -29.7354, -48.2204, -47.6288, 0.51 ) }
    dend_8 { pt3dadd( -30.2237, -48.7086, -47.8225, 0.15 ) }
    dend_8 { pt3dadd( -30.7454, -49.2277, -48.0192, 0.22 ) }
    dend_8 { pt3dadd( -31.189, -49.6989, -48.1851, 0.37 ) }
    dend_8 { pt3dadd( -31.5317, -50.0989, -48.3098, 0.15 ) }
    dend_8 { pt3dadd( -31.9758, -50.7073, -48.4724, 0.73 ) }
    dend_8 { pt3dadd( -32.5032, -51.5619, -48.7363, 0.88 ) }
    dend_8 { pt3dadd( -33.2204, -52.8821, -49.175, 0.07 ) }
    dend_8 { pt3dadd( -33.4804, -53.4529, -49.3676, 0.59 ) }
    dend_8 { pt3dadd( -33.7395, -54.14, -49.6014, 0.07 ) }
    dend_8 { pt3dadd( -34.0157, -54.9964, -49.8893, 0.73 ) }
    dend_8 { pt3dadd( -34.356, -56.3402, -50.3135, 0.15 ) }
    dend_8 { pt3dadd( -34.5565, -57.3344, -50.6058, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_8 { pt3dadd( -34.7054, -58.2057, -50.831, 0.29 ) }
    dend_8 { pt3dadd( -34.8539, -59.0082, -51.0215, 0.88 ) }
    dend_8 { pt3dadd( -35.0686, -60.0275, -51.2415, 0.22 ) }
    dend_8 { pt3dadd( -35.4258, -61.5886, -51.5291, 0.15 ) }
    dend_8 { pt3dadd( -35.7777, -62.9823, -51.7457, 0.15 ) }
    dend_8 { pt3dadd( -35.9082, -63.5211, -51.8312, 0.88 ) }
    dend_8 { pt3dadd( -36.1536, -64.573, -52.0125, 0.29 ) }
    dend_8 { pt3dadd( -36.2893, -65.2405, -52.132, 0.29 ) }
    dend_8 { pt3dadd( -36.4528, -66.2775, -52.3391, 0.07 ) }
    dend_8 { pt3dadd( -36.5676, -67.1913, -52.5452, 0.66 ) }
    dend_8 { pt3dadd( -36.6811, -68.5355, -52.8766, 0.15 ) }
    dend_8 { pt3dadd( -36.7303, -69.7004, -53.1954, 0.15 ) }
    dend_8 { pt3dadd( -36.7333, -70.3784, -53.389, 0.95 ) }
    dend_8 { pt3dadd( -36.7079, -71.6919, -53.7801, 0.22 ) }
    dend_8 { pt3dadd( -36.6946, -72.3515, -54.0222, 0.07 ) }
    dend_8 { pt3dadd( -36.6699, -72.9406, -54.311, 0.37 ) }
    dend_8 { pt3dadd( -36.653, -73.4256, -54.6224, 0.15 ) }
    dend_8 { pt3dadd( -36.6201, -74.1088, -55.1888, 0.37 ) }
    dend_8 { pt3dadd( -36.5953, -74.8829, -55.918, 0.07 ) }
    dend_8 { pt3dadd( -36.5428, -75.9621, -57.0498, 0.37 ) }
    dend_8 { pt3dadd( -36.4762, -77.0584, -58.2955, 0.15 ) }
    dend_8 { pt3dadd( -36.4426, -77.6822, -59.0645, 0.37 ) }
    dend_8 { pt3dadd( -36.4001, -78.4653, -60.1224, 0.37 ) }
    dend_8 { pt3dadd( -36.3532, -79.02, -60.9716, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 24/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 33.3907, -23.5452, -9.07349, 0.73 ) }
    dend_77 { pt3dadd( 34.0176, -24.1804, -9.02991, 0.73 ) }
    dend_77 { pt3dadd( 34.7444, -24.8645, -8.97759, 0.73 ) }
    dend_77 { pt3dadd( 35.5501, -25.6002, -8.9238, 0.51 ) }
    dend_77 { pt3dadd( 36.2909, -26.224, -8.87648, 0.51 ) }
    dend_77 { pt3dadd( 36.9941, -26.7894, -8.84401, 0.66 ) }
    dend_77 { pt3dadd( 37.4862, -27.1727, -8.82444, 0.66 ) }
    dend_77 { pt3dadd( 38.3363, -27.7567, -8.77646, 0.73 ) }
    dend_77 { pt3dadd( 39.1357, -28.2674, -8.67928, 0.73 ) }
    dend_77 { pt3dadd( 40.2051, -28.9202, -8.47674, 0.88 ) }
    dend_77 { pt3dadd( 41.0061, -29.405, -8.26464, 0.88 ) }
    dend_77 { pt3dadd( 41.8552, -29.9493, -7.98012, 0.81 ) }
    dend_77 { pt3dadd( 42.665, -30.4898, -7.64669, 0.59 ) }
    dend_77 { pt3dadd( 43.7227, -31.2076, -7.15132, 0.59 ) }
    dend_77 { pt3dadd( 44.2318, -31.5636, -6.88484, 0.59 ) }
    dend_77 { pt3dadd( 44.7745, -31.9636, -6.5806, 0.59 ) }
    dend_77 { pt3dadd( 45.2967, -32.3558, -6.27059, 0.59 ) }
    dend_77 { pt3dadd( 46.5455, -33.3276, -5.53296, 0.59 ) }
    dend_77 { pt3dadd( 47.2155, -33.8771, -5.17411, 0.59 ) }
    dend_77 { pt3dadd( 47.9634, -34.4994, -4.83185, 0.59 ) }
    dend_77 { pt3dadd( 48.3669, -34.8337, -4.65631, 1.03 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 45/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 33.3907, -23.5452, -9.07349, 0.29 ) }
    dend_76 { pt3dadd( 34.1541, -23.8045, -8.62421, 0.29 ) }
    dend_76 { pt3dadd( 34.9439, -24.1081, -8.18758, 0.29 ) }
    dend_76 { pt3dadd( 35.628, -24.3796, -7.84014, 0.59 ) }
    dend_76 { pt3dadd( 36.4336, -24.725, -7.46084, 0.59 ) }
    dend_76 { pt3dadd( 37.4097, -25.1736, -7.03075, 0.29 ) }
    dend_76 { pt3dadd( 38.3477, -25.632, -6.65268, 0.44 ) }
    dend_76 { pt3dadd( 39.5608, -26.2933, -6.26627, 0.66 ) }
    dend_76 { pt3dadd( 40.4621, -26.8267, -6.04016, 0.29 ) }
    dend_76 { pt3dadd( 41.2048, -27.2883, -5.89079, 0.66 ) }
    dend_76 { pt3dadd( 42.1981, -27.9385, -5.73774, 0.29 ) }
    dend_76 { pt3dadd( 42.9476, -28.4402, -5.64072, 0.29 ) }
    dend_76 { pt3dadd( 43.8547, -29.0509, -5.55084, 0.37 ) }
    dend_76 { pt3dadd( 44.2129, -29.2906, -5.52294, 0.37 ) }
    dend_76 { pt3dadd( 44.6256, -29.5572, -5.48527, 0.44 ) }
    dend_76 { pt3dadd( 45.3334, -29.9616, -5.42072, 0.73 ) }
    dend_76 { pt3dadd( 46.1443, -30.3425, -5.34249, 0.51 ) }
    dend_76 { pt3dadd( 47.0796, -30.7094, -5.22442, 0.22 ) }
    dend_76 { pt3dadd( 47.7386, -30.9242, -5.11776, 0.59 ) }
    dend_76 { pt3dadd( 48.6417, -31.1503, -4.96191, 0.29 ) }
    dend_76 { pt3dadd( 49.7975, -31.3302, -4.74637, 0.95 ) }
    dend_76 { pt3dadd( 51.0158, -31.4067, -4.50495, 0.29 ) }
    dend_76 { pt3dadd( 51.4981, -31.3918, -4.40791, 0.59 ) }
    dend_76 { pt3dadd( 52.1791, -31.2947, -4.25386, 0.15 ) }
    dend_76 { pt3dadd( 53.1947, -31.0374, -4.0131, 1.1 ) }
    dend_76 { pt3dadd( 54.1945, -30.6813, -3.74511, 0.51 ) }
    dend_76 { pt3dadd( 54.94, -30.3364, -3.52822, 0.44 ) }
    dend_76 { pt3dadd( 55.8375, -29.8301, -3.27645, 0.44 ) }
    dend_76 { pt3dadd( 56.6239, -29.32, -3.0923, 0.44 ) }
    dend_76 { pt3dadd( 57.3808, -28.7889, -2.93946, 0.66 ) }
    dend_76 { pt3dadd( 57.884, -28.4104, -2.85967, 0.29 ) }
    dend_76 { pt3dadd( 58.5253, -27.8956, -2.76841, 0.73 ) }
    dend_76 { pt3dadd( 59.1418, -27.3699, -2.65311, 0.51 ) }
    dend_76 { pt3dadd( 59.7747, -26.822, -2.48584, 0.51 ) }
    dend_76 { pt3dadd( 60.1943, -26.4859, -2.35167, 0.22 ) }
    dend_76 { pt3dadd( 61.1905, -25.7746, -1.94389, 0.51 ) }
    dend_76 { pt3dadd( 61.6453, -25.4688, -1.7179, 0.81 ) }
    dend_76 { pt3dadd( 62.5, -24.9361, -1.19156, 0.81 ) }
    dend_76 { pt3dadd( 63.1519, -24.5535, -0.718068, 0.81 ) }
    dend_76 { pt3dadd( 63.927, -24.129, -0.088237, 0.81 ) }
    dend_76 { pt3dadd( 64.7731, -23.7156, 0.630699, 0.29 ) }
    dend_76 { pt3dadd( 65.183, -23.5598, 0.993065, 0.29 ) }
    dend_76 { pt3dadd( 65.6526, -23.4181, 1.3948, 0.29 ) }
    dend_76 { pt3dadd( 66.3519, -23.2645, 2.00895, 0.29 ) }
    dend_76 { pt3dadd( 66.7483, -23.203, 2.37262, 0.59 ) }
    dend_76 { pt3dadd( 67.6162, -23.1036, 3.21234, 0.59 ) }
    dend_76 { pt3dadd( 68.1716, -23.0487, 3.75872, 0.59 ) }
    dend_76 { pt3dadd( 68.9912, -22.9803, 4.57121, 1.03 ) }
    dend_76 { pt3dadd( 69.7547, -22.9128, 5.34538, 0.81 ) }
    dend_76 { pt3dadd( 70.2566, -22.8726, 5.85983, 0.44 ) }
    dend_76 { pt3dadd( 70.6706, -22.8428, 6.26983, 0.44 ) }
    dend_76 { pt3dadd( 71.4761, -22.7961, 7.03797, 0.59 ) }
    dend_76 { pt3dadd( 72.2588, -22.7593, 7.72898, 0.37 ) }
    dend_76 { pt3dadd( 72.6869, -22.7502, 8.07327, 0.51 ) }
    dend_76 { pt3dadd( 73.4566, -22.7382, 8.64412, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_76 { pt3dadd( 74.3925, -22.7338, 9.2848, 0.15 ) }
    dend_76 { pt3dadd( 75.0962, -22.749, 9.72643, 0.15 ) }
    dend_76 { pt3dadd( 75.8143, -22.7787, 10.1408, 0.22 ) }
    dend_76 { pt3dadd( 76.3081, -22.79, 10.418, 0.88 ) }
    dend_76 { pt3dadd( 76.6625, -22.7818, 10.624, 0.88 ) }
    dend_76 { pt3dadd( 77.4537, -22.7317, 11.089, 0.59 ) }
    dend_76 { pt3dadd( 77.8037, -22.6995, 11.3, 0.59 ) }
    dend_76 { pt3dadd( 77.9886, -22.682, 11.4076, 0.29 ) }
    dend_76 { pt3dadd( 78.5634, -22.6057, 11.7611, 0.29 ) }
    dend_76 { pt3dadd( 79.1837, -22.4795, 12.1652, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 10/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 20.4854, 3.15298, -18.6921, 0.59 ) }
    dend_74 { pt3dadd( 19.2746, 3.26509, -19.8762, 0.59 ) }
    dend_74 { pt3dadd( 18.6772, 3.3455, -20.427, 0.59 ) }
    dend_74 { pt3dadd( 17.7881, 3.51166, -21.2633, 0.59 ) }
    dend_74 { pt3dadd( 17.0206, 3.70341, -22.0407, 0.44 ) }
    dend_74 { pt3dadd( 16.1756, 4.00374, -23.0145, 0.44 ) }
    dend_74 { pt3dadd( 15.2705, 4.43268, -24.2099, 0.44 ) }
    dend_74 { pt3dadd( 14.5484, 4.85404, -25.1636, 0.51 ) }
    dend_74 { pt3dadd( 14.0282, 5.19244, -25.8812, 0.51 ) }
    dend_74 { pt3dadd( 13.4079, 5.62391, -26.8031, 0.51 ) }
    dend_74 { pt3dadd( 12.4946, 6.23966, -28.2225, 0.51 ) }
    dend_74 { pt3dadd( 11.544, 6.81713, -29.686, 0.51 ) }
    dend_74 { pt3dadd( 10.9981, 7.10083, -30.4917, 0.37 ) }
    dend_74 { pt3dadd( 10.1191, 7.47052, -31.7731, 0.37 ) }
    dend_74 { pt3dadd( 9.24147, 7.7328, -33.0442, 0.37 ) }
    dend_74 { pt3dadd( 8.35853, 7.89517, -34.2479, 0.37 ) }
    dend_74 { pt3dadd( 7.62806, 7.97136, -35.2427, 0.37 ) }
    dend_74 { pt3dadd( 6.92126, 8.06893, -36.2964, 0.37 ) }
    dend_74 { pt3dadd( 6.47127, 8.19603, -37.1314, 0.37 ) }
    dend_74 { pt3dadd( 5.87746, 8.49207, -38.5293, 0.37 ) }
    dend_74 { pt3dadd( 5.47652, 8.79662, -39.6843, 0.51 ) }
    dend_74 { pt3dadd( 5.19121, 9.10069, -40.6733, 0.29 ) }
    dend_74 { pt3dadd( 4.83487, 9.59757, -42.1205, 0.51 ) }
    dend_74 { pt3dadd( 4.49653, 10.2267, -43.7348, 0.51 ) }
    dend_74 { pt3dadd( 4.32827, 10.7226, -44.9228, 0.51 ) }
    dend_74 { pt3dadd( 4.30644, 10.8733, -45.264, 0.51 ) }
    dend_74 { pt3dadd( 4.35721, 11.065, -45.7246, 0.51 ) }
    dend_74 { pt3dadd( 4.40612, 11.1763, -46.0242, 0.51 ) }
    dend_74 { pt3dadd( 4.46894, 11.2323, -46.2626, 0.51 ) }
    dend_74 { pt3dadd( 5.07139, 11.4197, -47.302, 0.51 ) }
    dend_74 { pt3dadd( 5.6246, 11.5416, -47.869, 0.51 ) }
    dend_74 { pt3dadd( 6.42422, 11.7286, -48.5953, 0.44 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 42/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 20.4854, 3.15298, -18.6921, 0.66 ) }
    dend_73 { pt3dadd( 19.5406, 3.98649, -19.1813, 0.66 ) }
    dend_73 { pt3dadd( 18.9795, 4.5593, -19.4955, 0.37 ) }
    dend_73 { pt3dadd( 18.3905, 5.22214, -19.885, 0.37 ) }
    dend_73 { pt3dadd( 17.7335, 5.95874, -20.3668, 0.73 ) }
    dend_73 { pt3dadd( 17.1823, 6.54287, -20.7675, 0.73 ) }
    dend_73 { pt3dadd( 16.5844, 7.12365, -21.1781, 0.73 ) }
    dend_73 { pt3dadd( 15.9905, 7.66029, -21.5696, 0.81 ) }
    dend_73 { pt3dadd( 15.0836, 8.46211, -22.1566, 0.73 ) }
    dend_73 { pt3dadd( 13.8215, 9.57511, -22.9524, 0.51 ) }
    dend_73 { pt3dadd( 12.8575, 10.423, -23.5618, 0.51 ) }
    dend_73 { pt3dadd( 11.6921, 11.431, -24.2964, 0.51 ) }
    dend_73 { pt3dadd( 10.8894, 12.1538, -24.7991, 0.51 ) }
    dend_73 { pt3dadd( 10.3195, 12.7286, -25.1624, 0.51 ) }
    dend_73 { pt3dadd( 10.0971, 13.027, -25.3147, 0.51 ) }
    dend_73 { pt3dadd( 9.98241, 13.4862, -25.4741, 0.51 ) }
    dend_73 { pt3dadd( 10.0866, 13.9995, -25.5967, 0.51 ) }
    dend_73 { pt3dadd( 10.4724, 14.9021, -25.7619, 0.51 ) }
    dend_73 { pt3dadd( 10.9865, 15.8845, -25.9044, 0.81 ) }
    dend_73 { pt3dadd( 11.3524, 16.5025, -25.9843, 1.03 ) }
    dend_73 { pt3dadd( 12.1987, 17.7189, -26.1071, 0.44 ) }
    dend_73 { pt3dadd( 12.8902, 18.5616, -26.1965, 0.44 ) }
    dend_73 { pt3dadd( 13.4779, 19.1718, -26.2834, 0.44 ) }
    dend_73 { pt3dadd( 14.2482, 19.8279, -26.4405, 0.66 ) }
    dend_73 { pt3dadd( 14.9432, 20.3096, -26.6145, 0.51 ) }
    dend_73 { pt3dadd( 16.1955, 21.0441, -27.0432, 0.44 ) }
    dend_73 { pt3dadd( 17.1856, 21.5318, -27.493, 0.44 ) }
    dend_73 { pt3dadd( 18.3064, 22.0266, -28.0911, 1.03 ) }
    dend_73 { pt3dadd( 19.6921, 22.6125, -28.9616, 0.51 ) }
    dend_73 { pt3dadd( 20.505, 22.9486, -29.5676, 0.51 ) }
    dend_73 { pt3dadd( 21.3317, 23.3023, -30.3207, 0.51 ) }
    dend_73 { pt3dadd( 21.9756, 23.5681, -31.0746, 0.51 ) }
    dend_73 { pt3dadd( 22.3458, 23.7017, -31.5805, 0.51 ) }
    dend_73 { pt3dadd( 22.5437, 23.7654, -31.8995, 0.37 ) }
    dend_73 { pt3dadd( 22.9467, 23.9192, -32.6315, 0.37 ) }
    dend_73 { pt3dadd( 23.3406, 24.1154, -33.3329, 0.37 ) }
    dend_73 { pt3dadd( 23.8515, 24.4357, -34.1897, 0.66 ) }
    dend_73 { pt3dadd( 24.3249, 24.7886, -35.0162, 0.81 ) }
    dend_73 { pt3dadd( 24.8931, 25.2663, -36.0438, 0.59 ) }
    dend_73 { pt3dadd( 25.0895, 25.4552, -36.4068, 0.66 ) }
    dend_73 { pt3dadd( 25.4884, 25.92, -37.213, 0.66 ) }
    dend_73 { pt3dadd( 25.9644, 26.5864, -38.2365, 0.88 ) }
    dend_73 { pt3dadd( 26.4381, 27.3494, -39.3053, 0.37 ) }
    dend_73 { pt3dadd( 26.8889, 28.0815, -40.3615, 0.37 ) }
    dend_73 { pt3dadd( 27.0522, 28.3291, -40.7402, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 87/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -8.59478, -14.3306, -19.8539, 0.44 ) }
    dend_65 { pt3dadd( -8.91395, -13.7032, -19.7494, 0.44 ) }
    dend_65 { pt3dadd( -9.45223, -12.8347, -19.5777, 0.44 ) }
    dend_65 { pt3dadd( -10.0722, -12.0176, -19.3491, 0.44 ) }
    dend_65 { pt3dadd( -10.8527, -11.1602, -19.0749, 0.44 ) }
    dend_65 { pt3dadd( -11.9757, -10.0684, -18.7156, 0.44 ) }
    dend_65 { pt3dadd( -12.6464, -9.458, -18.5207, 0.73 ) }
    dend_65 { pt3dadd( -13.4628, -8.78314, -18.3075, 0.51 ) }
    dend_65 { pt3dadd( -14.4641, -8.02378, -18.0814, 0.51 ) }
    dend_65 { pt3dadd( -15.2509, -7.44437, -17.93, 0.51 ) }
    dend_65 { pt3dadd( -16.0639, -6.84268, -17.8199, 0.51 ) }
    dend_65 { pt3dadd( -16.7957, -6.2658, -17.7744, 0.22 ) }
    dend_65 { pt3dadd( -18.1648, -5.10141, -17.7219, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_65 { pt3dadd( -18.9436, -4.37744, -17.7162, 0.66 ) }
    dend_65 { pt3dadd( -19.5603, -3.74316, -17.7419, 0.22 ) }
    dend_65 { pt3dadd( -20.1153, -3.12254, -17.7616, 0.22 ) }
    dend_65 { pt3dadd( -20.4676, -2.71956, -17.7735, 0.51 ) }
    dend_65 { pt3dadd( -20.5806, -2.59304, -17.7775, 0.51 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 5/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -8.59478, -14.3306, -19.8539, 0.59 ) }
    dend_64 { pt3dadd( -8.82764, -15.7127, -19.3843, 0.59 ) }
    dend_64 { pt3dadd( -8.80199, -16.8277, -18.9397, 0.59 ) }
    dend_64 { pt3dadd( -8.74623, -17.4346, -18.661, 0.59 ) }
    dend_64 { pt3dadd( -8.63426, -18.2223, -18.3209, 0.59 ) }
    dend_64 { pt3dadd( -8.49435, -19.0883, -17.9714, 0.59 ) }
    dend_64 { pt3dadd( -8.2124, -20.897, -17.2952, 0.59 ) }
    dend_64 { pt3dadd( -7.91071, -22.2667, -16.8375, 0.59 ) }
    dend_64 { pt3dadd( -7.62525, -23.5232, -16.5116, 0.59 ) }
    dend_64 { pt3dadd( -7.3267, -24.938, -16.2286, 0.59 ) }
    dend_64 { pt3dadd( -7.21349, -25.5301, -16.1535, 0.59 ) }
    dend_64 { pt3dadd( -7.09319, -26.2929, -16.1238, 0.59 ) }
    dend_64 { pt3dadd( -6.89858, -27.7786, -16.1995, 0.88 ) }
    dend_64 { pt3dadd( -6.64733, -29.9557, -16.3159, 0.44 ) }
    dend_64 { pt3dadd( -6.58457, -30.5954, -16.3468, 0.44 ) }
    dend_64 { pt3dadd( -6.49309, -31.6385, -16.3861, 0.44 ) }
    dend_64 { pt3dadd( -6.42369, -32.3491, -16.4192, 0.44 ) }
    dend_64 { pt3dadd( -6.31204, -33.1985, -16.477, 0.44 ) }
    dend_64 { pt3dadd( -6.04511, -35.0298, -16.6365, 0.44 ) }
    dend_64 { pt3dadd( -5.90365, -35.9259, -16.7321, 0.66 ) }
    dend_64 { pt3dadd( -5.56498, -38.0205, -16.9391, 0.66 ) }
    dend_64 { pt3dadd( -5.39834, -38.9579, -17.0288, 0.37 ) }
    dend_64 { pt3dadd( -5.05048, -40.5986, -17.1998, 0.37 ) }
    dend_64 { pt3dadd( -4.86664, -41.358, -17.2918, 0.37 ) }
    dend_64 { pt3dadd( -4.64664, -42.1977, -17.4438, 0.37 ) }
    dend_64 { pt3dadd( -4.33966, -43.3734, -17.6426, 0.07 ) }
    dend_64 { pt3dadd( -4.23105, -43.8449, -17.7116, 0.44 ) }
    dend_64 { pt3dadd( -4.08519, -44.6849, -17.8383, 0.07 ) }
    dend_64 { pt3dadd( -3.98717, -45.6309, -17.9984, 0.22 ) }
    dend_64 { pt3dadd( -3.9503, -46.7416, -18.2151, 0.29 ) }
    dend_64 { pt3dadd( -3.97119, -47.4511, -18.3672, 0.59 ) }
    dend_64 { pt3dadd( -4.07845, -48.9057, -18.6942, 0.15 ) }
    dend_64 { pt3dadd( -4.19661, -50.0441, -18.9271, 0.73 ) }
    dend_64 { pt3dadd( -4.34452, -51.1833, -19.1373, 0.29 ) }
    dend_64 { pt3dadd( -4.50032, -52.4716, -19.3411, 0.59 ) }
    dend_64 { pt3dadd( -4.62288, -53.6105, -19.5068, 0.22 ) }
    dend_64 { pt3dadd( -4.79091, -55.1577, -19.7455, 0.22 ) }
    dend_64 { pt3dadd( -4.92145, -56.4574, -19.9594, 0.73 ) }
    dend_64 { pt3dadd( -4.98987, -57.3712, -20.1556, 1.1 ) }
    dend_64 { pt3dadd( -5.07493, -59.0465, -20.5861, 0.15 ) }
    dend_64 { pt3dadd( -5.11429, -60.1716, -20.8862, 0.29 ) }
    dend_64 { pt3dadd( -5.14679, -61.1281, -21.1474, 0.07 ) }
    dend_64 { pt3dadd( -5.17133, -61.9386, -21.3694, 0.88 ) }
    dend_64 { pt3dadd( -5.1818, -63.7208, -21.7753, 0.07 ) }
    dend_64 { pt3dadd( -5.16597, -64.322, -21.8769, 0.37 ) }
    dend_64 { pt3dadd( -5.11484, -65.4451, -21.9932, 0.07 ) }
    dend_64 { pt3dadd( -5.0452, -66.4257, -22.0436, 0.07 ) }
    dend_64 { pt3dadd( -4.97416, -67.291, -22.0303, 0.95 ) }
    dend_64 { pt3dadd( -4.83084, -68.8744, -21.926, 0.29 ) }
    dend_64 { pt3dadd( -4.68021, -70.2722, -21.7504, 0.88 ) }
    dend_64 { pt3dadd( -4.41776, -72.1572, -21.5142, 0.07 ) }
    dend_64 { pt3dadd( -4.20906, -73.3463, -21.3818, 0.07 ) }
    dend_64 { pt3dadd( -3.96155, -74.6935, -21.2067, 0.73 ) }
    dend_64 { pt3dadd( -3.78965, -75.6205, -21.0846, 0.88 ) }
    dend_64 { pt3dadd( -3.46837, -77.352, -20.8659, 0.22 ) }
    dend_64 { pt3dadd( -3.16981, -78.9574, -20.6429, 0.22 ) }
    dend_64 { pt3dadd( -2.94041, -80.1851, -20.4797, 0.95 ) }
    dend_64 { pt3dadd( -2.66553, -81.6476, -20.3231, 0.07 ) }
    dend_64 { pt3dadd( -2.42207, -83.0257, -20.2333, 0.15 ) }
    dend_64 { pt3dadd( -2.31819, -83.8136, -20.1911, 0.88 ) }
    dend_64 { pt3dadd( -2.19118, -85.1207, -20.1509, 0.07 ) }
    dend_64 { pt3dadd( -2.11467, -86.3427, -20.1201, 0.51 ) }
    dend_64 { pt3dadd( -2.06373, -87.3692, -20.1025, 0.22 ) }
    dend_64 { pt3dadd( -2.02409, -88.0802, -20.105, 0.81 ) }
    dend_64 { pt3dadd( -1.96375, -89.7005, -20.1147, 0.22 ) }
    dend_64 { pt3dadd( -1.9626, -90.3289, -20.1267, 0.22 ) }
    dend_64 { pt3dadd( -1.99473, -91.3125, -20.1444, 0.51 ) }
    dend_64 { pt3dadd( -2.02494, -91.8831, -20.1471, 0.44 ) }
    dend_64 { pt3dadd( -2.05517, -92.49, -20.1316, 0.81 ) }
    dend_64 { pt3dadd( -2.08896, -93.4697, -20.0955, 0.44 ) }
    dend_64 { pt3dadd( -2.10421, -94.0334, -20.0731, 0.44 ) }
    dend_64 { pt3dadd( -2.16657, -95.6066, -19.9953, 0.29 ) }
    dend_64 { pt3dadd( -2.23749, -97.1671, -19.9028, 0.66 ) }
    dend_64 { pt3dadd( -2.26914, -98.1266, -19.843, 0.22 ) }
    dend_64 { pt3dadd( -2.27887, -99.6293, -19.722, 0.59 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 80/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 0.32379, -2.92726, -26.5563, 0.22 ) }
    dend_62 { pt3dadd( 0.447564, -1.60886, -27.0532, 0.22 ) }
    dend_62 { pt3dadd( 0.507621, -0.515798, -27.4146, 0.44 ) }
    dend_62 { pt3dadd( 0.59927, 0.672545, -27.8911, 0.15 ) }
    dend_62 { pt3dadd( 0.716711, 2.08863, -28.4726, 0.15 ) }
    dend_62 { pt3dadd( 0.816518, 3.29204, -28.9667, 0.15 ) }
    dend_62 { pt3dadd( 0.948701, 4.88584, -29.6212, 0.15 ) }
    dend_62 { pt3dadd( 0.987159, 6.23991, -30.1816, 0.66 ) }
    dend_62 { pt3dadd( 1.02286, 8.10411, -30.998, 0.66 ) }
    dend_62 { pt3dadd( 1.06168, 9.20397, -31.4642, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 90/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 0.32379, -2.92726, -26.5563, 0.37 ) }
    dend_59 { pt3dadd( 1.22955, -2.3233, -27.6498, 0.37 ) }
    dend_59 { pt3dadd( 2.23223, -1.65472, -28.8603, 0.37 ) }
    dend_59 { pt3dadd( 2.83734, -1.25123, -29.5908, 0.88 ) }
    dend_59 { pt3dadd( 3.96941, -0.496365, -30.9575, 0.95 ) }
    dend_59 { pt3dadd( 5.33813, 0.416289, -32.6099, 1.25 ) }
    dend_59 { pt3dadd( 6.66035, 1.29795, -34.2062, 1.18 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 97/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 2.10338, -30.1871, -11.969, 0.51 ) }
    dend_53 { pt3dadd( 2.65694, -30.9788, -11.7374, 0.51 ) }
    dend_53 { pt3dadd( 3.2813, -32.0302, -11.504, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_53 { pt3dadd( 3.7231, -32.8183, -11.3484, 0.51 ) }
    dend_53 { pt3dadd( 4.04622, -33.4197, -11.2349, 1.03 ) }
    dend_53 { pt3dadd( 4.33453, -33.9564, -11.1335, 1.25 ) }
    dend_53 { pt3dadd( 4.51774, -34.2974, -11.0692, 1.25 ) }
    dend_53 { pt3dadd( 5.08347, -35.4123, -10.8659, 0.73 ) }
    dend_53 { pt3dadd( 5.57853, -36.5213, -10.7049, 0.88 ) }
    dend_53 { pt3dadd( 5.71356, -36.8635, -10.6798, 1.03 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 7/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 2.10338, -30.1871, -11.969, 0.59 ) }
    dend_50 { pt3dadd( 1.47029, -31.2045, -12.1358, 0.59 ) }
    dend_50 { pt3dadd( 1.00911, -32.0983, -12.292, 0.59 ) }
    dend_50 { pt3dadd( 0.771006, -32.598, -12.3799, 0.59 ) }
    dend_50 { pt3dadd( 0.278823, -33.6167, -12.5541, 0.73 ) }
    dend_50 { pt3dadd( -0.285093, -34.6136, -12.7189, 0.73 ) }
    dend_50 { pt3dadd( -0.796714, -35.3288, -12.8307, 0.73 ) }
    dend_50 { pt3dadd( -1.18599, -35.7899, -12.9203, 0.73 ) }
    dend_50 { pt3dadd( -1.50834, -36.0888, -13.0098, 0.73 ) }
    dend_50 { pt3dadd( -2.28286, -36.635, -13.2716, 0.88 ) }
    dend_50 { pt3dadd( -3.41367, -37.2158, -13.7895, 0.88 ) }
    dend_50 { pt3dadd( -5.07755, -37.927, -14.6699, 0.37 ) }
    dend_50 { pt3dadd( -6.03005, -38.306, -15.2613, 0.51 ) }
    dend_50 { pt3dadd( -6.99433, -38.679, -16.1839, 0.95 ) }
    dend_50 { pt3dadd( -7.93255, -39.0428, -17.3153, 1.03 ) }
    dend_50 { pt3dadd( -9.34, -39.6342, -19.3045, 1.03 ) }
    dend_50 { pt3dadd( -9.87777, -39.9049, -20.1698, 1.03 ) }
    dend_50 { pt3dadd( -10.6894, -40.3713, -21.5926, 0.81 ) }
    dend_50 { pt3dadd( -13.3592, -42.1856, -26.4111, 0.44 ) }
    dend_50 { pt3dadd( -13.8041, -42.5485, -27.2163, 0.88 ) }
    dend_50 { pt3dadd( -14.2197, -42.9602, -27.9582, 0.88 ) }
    dend_50 { pt3dadd( -14.8569, -43.6604, -29.0826, 0.51 ) }
    dend_50 { pt3dadd( -15.135, -43.9798, -29.5674, 0.51 ) }
    dend_50 { pt3dadd( -15.6103, -44.5985, -30.2741, 0.59 ) }
    dend_50 { pt3dadd( -16.2693, -45.681, -30.6459, 0.95 ) }
    dend_50 { pt3dadd( -16.7332, -46.5158, -30.8961, 0.95 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -47.8085, -67.4963, -52.2328, 0.44 ) }
    dend_11 { pt3dadd( -47.9067, -68.5029, -53.0348, 0.44 ) }
    dend_11 { pt3dadd( -48.1126, -69.2898, -53.5756, 0.95 ) }
    dend_11 { pt3dadd( -48.2822, -69.7688, -53.8334, 0.95 ) }
    dend_11 { pt3dadd( -48.9733, -71.5302, -54.6101, 0.29 ) }
    dend_11 { pt3dadd( -49.2489, -72.2059, -54.8731, 0.44 ) }
    dend_11 { pt3dadd( -49.6124, -73.0391, -55.1726, 0.22 ) }
    dend_11 { pt3dadd( -50.3675, -74.5994, -55.6305, 1.03 ) }
    dend_11 { pt3dadd( -51.1394, -76.0089, -55.9908, 0.37 ) }
    dend_11 { pt3dadd( -51.9392, -77.4088, -56.2911, 0.07 ) }
    dend_11 { pt3dadd( -52.4449, -78.2811, -56.4367, 0.81 ) }
    dend_11 { pt3dadd( -52.9314, -79.0886, -56.5756, 0.07 ) }
    dend_11 { pt3dadd( -53.3897, -79.8604, -56.7144, 1.1 ) }
    dend_11 { pt3dadd( -54.4906, -81.7288, -57.071, 0.22 ) }
    dend_11 { pt3dadd( -54.958, -82.5119, -57.2331, 0.88 ) }
    dend_11 { pt3dadd( -55.3226, -83.1342, -57.3621, 0.88 ) }
    dend_11 { pt3dadd( -56.1184, -84.5694, -57.661, 0.37 ) }
    dend_11 { pt3dadd( -56.5806, -85.4809, -57.8571, 0.15 ) }
    dend_11 { pt3dadd( -56.9421, -86.2176, -58.0172, 0.15 ) }
    dend_11 { pt3dadd( -57.2642, -86.8953, -58.1672, 0.81 ) }
    dend_11 { pt3dadd( -58.0812, -88.6249, -58.5604, 0.07 ) }
    dend_11 { pt3dadd( -58.3505, -89.245, -58.7027, 0.95 ) }
    dend_11 { pt3dadd( -58.6877, -90.2298, -58.9319, 0.15 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 56/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -47.8085, -67.4963, -52.2328, 0.59 ) }
    dend_10 { pt3dadd( -47.5536, -68.0011, -51.5808, 0.59 ) }
    dend_10 { pt3dadd( -47.1582, -68.832, -50.6384, 0.59 ) }
    dend_10 { pt3dadd( -46.6092, -69.9373, -49.523, 0.59 ) }
    dend_10 { pt3dadd( -46.0923, -70.9477, -48.6076, 0.44 ) }
    dend_10 { pt3dadd( -45.5547, -72.0084, -47.7372, 0.73 ) }
    dend_10 { pt3dadd( -44.9532, -73.2713, -46.8177, 0.29 ) }
    dend_10 { pt3dadd( -44.7273, -73.7737, -46.5023, 0.29 ) }
    dend_10 { pt3dadd( -44.367, -74.6764, -46.0264, 0.29 ) }
    dend_10 { pt3dadd( -44.1034, -75.332, -45.7784, 0.29 ) }
    dend_10 { pt3dadd( -43.8948, -75.7946, -45.6804, 0.29 ) }
    dend_10 { pt3dadd( -43.4599, -76.6556, -45.639, 0.29 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 68/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 48.3669, -34.8337, -4.65631, 0.81 ) }
    dend_79 { pt3dadd( 49.6119, -35.5688, -4.71494, 0.81 ) }
    dend_79 { pt3dadd( 51.3723, -36.4371, -4.84911, 0.37 ) }
    dend_79 { pt3dadd( 52.574, -36.9651, -4.95789, 0.37 ) }
    dend_79 { pt3dadd( 53.4065, -37.3091, -5.05894, 0.37 ) }
    dend_79 { pt3dadd( 55.7778, -38.1791, -5.40946, 0.37 ) }
    dend_79 { pt3dadd( 56.8444, -38.5427, -5.5809, 0.37 ) }
    dend_79 { pt3dadd( 58.4506, -38.9651, -5.91072, 0.51 ) }
    dend_79 { pt3dadd( 59.2254, -39.1321, -6.08733, 0.51 ) }
    dend_79 { pt3dadd( 60.0759, -39.2873, -6.27862, 0.51 ) }
    dend_79 { pt3dadd( 61.7325, -39.5657, -6.62158, 0.66 ) }
    dend_79 { pt3dadd( 62.4006, -39.6718, -6.74165, 0.44 ) }
    dend_79 { pt3dadd( 63.7359, -39.8906, -6.95238, 0.44 ) }
    dend_79 { pt3dadd( 65.3264, -40.2222, -7.13748, 0.44 ) }
    dend_79 { pt3dadd( 66.4646, -40.5179, -7.19013, 0.51 ) }
    dend_79 { pt3dadd( 67.7751, -40.9296, -7.12046, 0.51 ) }
    dend_79 { pt3dadd( 68.8009, -41.3164, -6.98452, 0.51 ) }
    dend_79 { pt3dadd( 69.919, -41.7967, -6.7672, 0.59 ) }
    dend_79 { pt3dadd( 71.3017, -42.5117, -6.37264, 0.37 ) }
    dend_79 { pt3dadd( 72.425, -43.1974, -5.98922, 0.37 ) }
    dend_79 { pt3dadd( 73.438, -43.9638, -5.69235, 0.66 ) }
    dend_79 { pt3dadd( 73.8236, -44.2891, -5.59925, 0.66 ) }
    dend_79 { pt3dadd( 75.0497, -45.3884, -5.38214, 0.22 ) }
    dend_79 { pt3dadd( 76.3455, -46.5443, -5.25697, 0.44 ) }
    dend_79 { pt3dadd( 77.3678, -47.4275, -5.25455, 0.66 ) }
    dend_79 { pt3dadd( 79.3694, -49.0979, -5.41359, 0.66 ) }
    dend_79 { pt3dadd( 80.1541, -49.7487, -5.49905, 0.73 ) }
    dend_79 { pt3dadd( 80.4647, -49.9963, -5.52435, 0.73 ) }
    dend_79 { pt3dadd( 81.5185, -50.7572, -5.58643, 0.44 ) }
    dend_79 { pt3dadd( 82.1084, -51.1287, -5.61062, 0.44 ) }
    dend_79 { pt3dadd( 83.3012, -51.8083, -5.61153, 0.59 ) }
    dend_79 { pt3dadd( 84.6259, -52.5154, -5.56971, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_79 { pt3dadd( 85.3522, -52.9183, -5.57884, 0.37 ) }
    dend_79 { pt3dadd( 86.5095, -53.5676, -5.64452, 0.95 ) }
    dend_79 { pt3dadd( 87.7492, -54.2664, -5.79215, 0.73 ) }
    dend_79 { pt3dadd( 88.4688, -54.6639, -5.90398, 0.73 ) }
    dend_79 { pt3dadd( 89.2257, -55.083, -6.04294, 0.44 ) }
    dend_79 { pt3dadd( 90.1804, -55.6325, -6.22846, 0.81 ) }
    dend_79 { pt3dadd( 90.8195, -56.0301, -6.34014, 0.37 ) }
    dend_79 { pt3dadd( 91.9783, -56.7775, -6.44042, 0.81 ) }
    dend_79 { pt3dadd( 93.1454, -57.554, -6.41928, 0.07 ) }
    dend_79 { pt3dadd( 93.7509, -57.9631, -6.35223, 0.51 ) }
    dend_79 { pt3dadd( 94.3077, -58.355, -6.24517, 0.29 ) }
    dend_79 { pt3dadd( 95.2577, -59.1059, -6.02516, 0.07 ) }
    dend_79 { pt3dadd( 96.0312, -59.7911, -5.81434, 0.66 ) }
    dend_79 { pt3dadd( 96.5288, -60.2542, -5.62708, 0.95 ) }
    dend_79 { pt3dadd( 97.209, -60.8994, -5.34062, 0.29 ) }
    dend_79 { pt3dadd( 97.8208, -61.4819, -5.07375, 0.59 ) }
    dend_79 { pt3dadd( 98.7291, -62.3477, -4.66477, 0.22 ) }
    dend_79 { pt3dadd( 99.4622, -63.0455, -4.33838, 0.95 ) }
    dend_79 { pt3dadd( 100.812, -64.3325, -3.76713, 0.15 ) }
    dend_79 { pt3dadd( 101.372, -64.8685, -3.53234, 0.73 ) }
    dend_79 { pt3dadd( 101.766, -65.2609, -3.36219, 0.73 ) }
    dend_79 { pt3dadd( 102.41, -65.9195, -3.09351, 0.07 ) }
    dend_79 { pt3dadd( 102.938, -66.5125, -2.9313, 0.07 ) }
    dend_79 { pt3dadd( 103.208, -66.8473, -2.88305, 0.81 ) }
    dend_79 { pt3dadd( 104.257, -68.2802, -2.82133, 0.15 ) }
    dend_79 { pt3dadd( 104.753, -68.9753, -2.83416, 0.66 ) }
    dend_79 { pt3dadd( 105.804, -70.4888, -2.92789, 0.15 ) }
    dend_79 { pt3dadd( 106.98, -72.1596, -3.10533, 0.88 ) }
    dend_79 { pt3dadd( 107.391, -72.7135, -3.18391, 0.88 ) }
    dend_79 { pt3dadd( 108.076, -73.5419, -3.3541, 0.51 ) }
    dend_79 { pt3dadd( 108.806, -74.314, -3.57615, 0.07 ) }
    dend_79 { pt3dadd( 109.084, -74.584, -3.66984, 0.29 ) }
    dend_79 { pt3dadd( 109.767, -75.1539, -3.90875, 0.07 ) }
    dend_79 { pt3dadd( 110.294, -75.4929, -4.03765, 0.29 ) }
    dend_79 { pt3dadd( 111.269, -76.0242, -4.3228, 0.07 ) }
    dend_79 { pt3dadd( 111.638, -76.187, -4.44393, 0.88 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 36/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 48.3669, -34.8337, -4.65631, 0.51 ) }
    dend_78 { pt3dadd( 49.3843, -35.0215, -4.47506, 0.51 ) }
    dend_78 { pt3dadd( 50.571, -35.091, -4.20704, 0.37 ) }
    dend_78 { pt3dadd( 51.2628, -35.0213, -4.05154, 0.37 ) }
    dend_78 { pt3dadd( 52.0555, -34.8019, -3.87171, 0.37 ) }
    dend_78 { pt3dadd( 53.1742, -34.3137, -3.5093, 0.29 ) }
    dend_78 { pt3dadd( 53.8169, -33.9792, -3.27363, 0.29 ) }
    dend_78 { pt3dadd( 54.8736, -33.2585, -2.78033, 0.44 ) }
    dend_78 { pt3dadd( 55.8031, -32.4821, -2.2737, 0.22 ) }
    dend_78 { pt3dadd( 56.6577, -31.712, -1.74071, 0.81 ) }
    dend_78 { pt3dadd( 57.9974, -30.4961, -0.856499, 0.81 ) }
    dend_78 { pt3dadd( 58.3563, -30.1891, -0.615334, 0.81 ) }
    dend_78 { pt3dadd( 59.2348, -29.5687, -0.0285308, 0.22 ) }
    dend_78 { pt3dadd( 59.7777, -29.2985, 0.336582, 0.44 ) }
    dend_78 { pt3dadd( 60.8013, -28.9446, 1.06887, 0.22 ) }
    dend_78 { pt3dadd( 61.4561, -28.7866, 1.51862, 0.22 ) }
    dend_78 { pt3dadd( 61.9389, -28.6982, 1.81358, 0.73 ) }
    dend_78 { pt3dadd( 62.7285, -28.5649, 2.30499, 0.51 ) }
    dend_78 { pt3dadd( 64.1572, -28.349, 3.18396, 0.29 ) }
    dend_78 { pt3dadd( 65.616, -28.1363, 4.08429, 0.29 ) }
    dend_78 { pt3dadd( 66.214, -28.0278, 4.45724, 0.37 ) }
    dend_78 { pt3dadd( 66.9839, -27.8445, 4.97916, 0.15 ) }
    dend_78 { pt3dadd( 67.6923, -27.6533, 5.49612, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 59/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 6.66035, 1.29795, -34.2062, 0.59 ) }
    dend_61 { pt3dadd( 7.21288, 2.03899, -35.105, 0.59 ) }
    dend_61 { pt3dadd( 7.89941, 2.95329, -36.1176, 0.59 ) }
    dend_61 { pt3dadd( 8.2166, 3.40321, -36.5701, 0.59 ) }
    dend_61 { pt3dadd( 9.17331, 4.87295, -37.9843, 0.59 ) }
    dend_61 { pt3dadd( 9.94532, 6.01509, -39.138, 0.59 ) }
    dend_61 { pt3dadd( 10.3317, 6.524, -39.704, 0.95 ) }
    dend_61 { pt3dadd( 10.6967, 6.90984, -40.1768, 0.95 ) }
    dend_61 { pt3dadd( 11.5667, 7.66343, -41.1671, 0.44 ) }
    dend_61 { pt3dadd( 12.4696, 8.32424, -42.097, 0.88 ) }
    dend_61 { pt3dadd( 14.0635, 9.2999, -43.5554, 0.44 ) }
    dend_61 { pt3dadd( 15.1593, 9.83124, -44.5527, 0.22 ) }
    dend_61 { pt3dadd( 16.1543, 10.232, -45.478, 0.22 ) }
    dend_61 { pt3dadd( 17.3231, 10.6485, -46.589, 0.59 ) }
    dend_61 { pt3dadd( 17.7786, 10.7999, -47.0162, 0.59 ) }
    dend_61 { pt3dadd( 18.5005, 11.0571, -47.7129, 0.59 ) }
    dend_61 { pt3dadd( 20.3868, 11.8234, -49.5777, 0.59 ) }
    dend_61 { pt3dadd( 20.6533, 11.9475, -49.844, 0.59 ) }
    dend_61 { pt3dadd( 22.1775, 12.7121, -51.3621, 0.29 ) }
    dend_61 { pt3dadd( 23.3807, 13.3242, -52.5739, 1.25 ) }
    dend_61 { pt3dadd( 24.698, 14.0075, -53.8893, 0.59 ) }
    dend_61 { pt3dadd( 25.216, 14.2807, -54.362, 0.73 ) }
    dend_61 { pt3dadd( 25.9168, 14.6646, -54.9031, 0.73 ) }
    dend_61 { pt3dadd( 26.5859, 15.0191, -55.4016, 0.73 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 83/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 6.66035, 1.29795, -34.2062, 0.66 ) }
    dend_60 { pt3dadd( 6.71892, 0.30271, -35.3974, 0.66 ) }
    dend_60 { pt3dadd( 6.65445, -0.658144, -36.8268, 0.44 ) }
    dend_60 { pt3dadd( 6.65163, -1.15706, -37.679, 0.44 ) }
    dend_60 { pt3dadd( 6.70226, -1.63608, -38.5812, 0.44 ) }
    dend_60 { pt3dadd( 6.83455, -2.24048, -39.7549, 0.44 ) }
    dend_60 { pt3dadd( 7.01202, -2.94718, -41.0974, 0.44 ) }
    dend_60 { pt3dadd( 7.1778, -3.64799, -42.5647, 0.44 ) }
    dend_60 { pt3dadd( 7.32191, -4.32427, -44.0575, 0.44 ) }
    dend_60 { pt3dadd( 7.46429, -4.89684, -45.4576, 0.44 ) }
    dend_60 { pt3dadd( 7.63418, -5.53434, -47.3179, 0.44 ) }
    dend_60 { pt3dadd( 7.68007, -5.71418, -47.9107, 0.44 ) }
    dend_60 { pt3dadd( 7.70532, -5.88111, -48.5468, 0.44 ) }
    dend_60 { pt3dadd( 7.66297, -5.96864, -49.2092, 0.44 ) }
    dend_60 { pt3dadd( 7.28971, -5.90218, -51.136, 0.44 ) }
    dend_60 { pt3dadd( 7.11256, -5.7094, -52.0595, 0.44 ) }
    dend_60 { pt3dadd( 7.01996, -5.36368, -53.269, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_60 { pt3dadd( 7.02176, -5.23256, -53.8048, 0.22 ) }
    dend_60 { pt3dadd( 7.12165, -4.95841, -55.7394, 0.22 ) }
    dend_60 { pt3dadd( 7.19199, -4.91907, -56.6156, 0.22 ) }
    dend_60 { pt3dadd( 7.27583, -4.99914, -58.0623, 0.51 ) }
    dend_60 { pt3dadd( 7.3176, -5.18478, -60.0651, 0.37 ) }
    dend_60 { pt3dadd( 7.24596, -5.37475, -61.792, 0.22 ) }
    dend_60 { pt3dadd( 6.99948, -5.80139, -63.9757, 0.22 ) }
    dend_60 { pt3dadd( 6.892, -5.96119, -64.521, 0.51 ) }
    dend_60 { pt3dadd( 6.21826, -6.79194, -66.8698, 0.29 ) }
    dend_60 { pt3dadd( 5.97145, -7.03792, -67.5175, 0.29 ) }
    dend_60 { pt3dadd( 5.57942, -7.35866, -68.3729, 0.29 ) }
    dend_60 { pt3dadd( 4.33038, -8.1547, -70.6945, 0.29 ) }
    dend_60 { pt3dadd( 4.14859, -8.22902, -71.012, 0.29 ) }
    dend_60 { pt3dadd( 3.45604, -8.37381, -72.1543, 0.29 ) }
    dend_60 { pt3dadd( 2.30085, -8.43245, -73.6872, 0.29 ) }
    dend_60 { pt3dadd( 1.22013, -8.38149, -74.8817, 0.15 ) }
    dend_60 { pt3dadd( -0.20565, -8.20541, -76.1705, 0.15 ) }
    dend_60 { pt3dadd( -2.3526, -7.80975, -77.7798, 0.15 ) }
    dend_60 { pt3dadd( -3.83335, -7.54708, -78.8462, 0.81 ) }
    dend_60 { pt3dadd( -6.21675, -7.16865, -80.4889, 0.07 ) }
    dend_60 { pt3dadd( -7.52818, -7.02289, -81.3892, 0.07 ) }
    dend_60 { pt3dadd( -8.4579, -6.95754, -82.1033, 0.07 ) }
    dend_60 { pt3dadd( -10.3531, -6.96225, -83.758, 0.44 ) }
    dend_60 { pt3dadd( -11.6603, -7.08678, -84.9537, 0.29 ) }
    dend_60 { pt3dadd( -12.5584, -7.23701, -85.929, 0.29 ) }
    dend_60 { pt3dadd( -13.3277, -7.41923, -87.0057, 0.81 ) }
    dend_60 { pt3dadd( -14.6107, -7.79045, -89.0844, 0.22 ) }
    dend_60 { pt3dadd( -14.8315, -7.85978, -89.4816, 0.22 ) }
    dend_60 { pt3dadd( -15.4341, -8.0386, -90.5805, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 29/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 5.71356, -36.8635, -10.6798, 0.59 ) }
    dend_55 { pt3dadd( 6.13223, -37.0377, -10.6081, 0.59 ) }
    dend_55 { pt3dadd( 7.14501, -37.41, -10.4199, 0.51 ) }
    dend_55 { pt3dadd( 7.99083, -37.7043, -10.3206, 0.51 ) }
    dend_55 { pt3dadd( 9.05336, -38.051, -10.246, 0.29 ) }
    dend_55 { pt3dadd( 9.35284, -38.1423, -10.2386, 0.29 ) }
    dend_55 { pt3dadd( 10.3756, -38.4401, -10.2399, 0.29 ) }
    dend_55 { pt3dadd( 10.9174, -38.5951, -10.2312, 0.95 ) }
    dend_55 { pt3dadd( 11.9018, -38.8798, -10.2061, 0.88 ) }
    dend_55 { pt3dadd( 12.7483, -39.1405, -10.1935, 0.37 ) }
    dend_55 { pt3dadd( 13.4423, -39.3605, -10.1601, 0.37 ) }
    dend_55 { pt3dadd( 13.8143, -39.4807, -10.1288, 0.59 ) }
    dend_55 { pt3dadd( 15.4324, -40.0564, -9.85362, 0.07 ) }
    dend_55 { pt3dadd( 16.0355, -40.2974, -9.67553, 0.29 ) }
    dend_55 { pt3dadd( 16.7806, -40.6386, -9.34285, 0.15 ) }
    dend_55 { pt3dadd( 17.6792, -41.1414, -8.78051, 0.15 ) }
    dend_55 { pt3dadd( 18.0126, -41.3592, -8.51604, 0.66 ) }
    dend_55 { pt3dadd( 18.719, -41.8607, -7.88068, 0.66 ) }
    dend_55 { pt3dadd( 19.4114, -42.3934, -7.1995, 0.66 ) }
    dend_55 { pt3dadd( 20.0923, -42.9513, -6.49018, 0.51 ) }
    dend_55 { pt3dadd( 20.998, -43.7824, -5.47553, 0.22 ) }
    dend_55 { pt3dadd( 21.3833, -44.2082, -5.04104, 0.59 ) }
    dend_55 { pt3dadd( 21.6075, -44.5001, -4.78931, 0.66 ) }
    dend_55 { pt3dadd( 21.9, -44.9725, -4.46305, 0.29 ) }
    dend_55 { pt3dadd( 22.0296, -45.2447, -4.30059, 0.29 ) }
    dend_55 { pt3dadd( 22.3028, -45.9458, -3.95071, 0.29 ) }
    dend_55 { pt3dadd( 22.5696, -46.6925, -3.64851, 0.44 ) }
    dend_55 { pt3dadd( 22.8418, -47.4102, -3.38017, 0.66 ) }
    dend_55 { pt3dadd( 23.3527, -48.6236, -2.93204, 0.22 ) }
    dend_55 { pt3dadd( 23.5997, -49.135, -2.73538, 0.22 ) }
    dend_55 { pt3dadd( 24.0526, -49.9694, -2.41731, 0.22 ) }
    dend_55 { pt3dadd( 24.3938, -50.5622, -2.19827, 0.59 ) }
    dend_55 { pt3dadd( 24.7858, -51.2379, -1.93567, 0.59 ) }
    dend_55 { pt3dadd( 25.3026, -52.1549, -1.58138, 0.22 ) }
    dend_55 { pt3dadd( 25.6416, -52.7896, -1.35905, 0.44 ) }
    dend_55 { pt3dadd( 25.8894, -53.2927, -1.1916, 0.59 ) }
    dend_55 { pt3dadd( 26.1731, -53.8989, -1.00304, 0.59 ) }
    dend_55 { pt3dadd( 26.4421, -54.4797, -0.839703, 0.59 ) }
    dend_55 { pt3dadd( 26.6895, -54.9429, -0.726835, 0.59 ) }
    dend_55 { pt3dadd( 27.0966, -55.5328, -0.642755, 0.29 ) }
    dend_55 { pt3dadd( 27.7973, -56.2876, -0.581255, 0.73 ) }
    dend_55 { pt3dadd( 28.5577, -56.9249, -0.555886, 0.51 ) }
    dend_55 { pt3dadd( 29.1121, -57.3118, -0.539052, 0.51 ) }
    dend_55 { pt3dadd( 30.1479, -57.9181, -0.553841, 0.37 ) }
    dend_55 { pt3dadd( 31.0725, -58.3741, -0.57855, 0.37 ) }
    dend_55 { pt3dadd( 32.006, -58.7772, -0.604, 0.44 ) }
    dend_55 { pt3dadd( 32.6335, -59.0219, -0.616335, 0.37 ) }
    dend_55 { pt3dadd( 33.3616, -59.28, -0.611125, 0.44 ) }
    dend_55 { pt3dadd( 34.6667, -59.7374, -0.575122, 0.22 ) }
    dend_55 { pt3dadd( 35.516, -60.0559, -0.490559, 0.44 ) }
    dend_55 { pt3dadd( 36.1955, -60.3345, -0.315513, 0.59 ) }
    dend_55 { pt3dadd( 37.1589, -60.7554, 0.0124489, 0.29 ) }
    dend_55 { pt3dadd( 38.078, -61.1544, 0.361739, 0.15 ) }
    dend_55 { pt3dadd( 38.721, -61.4383, 0.63764, 0.15 ) }
    dend_55 { pt3dadd( 39.749, -61.9198, 1.21408, 1.1 ) }
    dend_55 { pt3dadd( 41.2559, -62.6721, 2.18317, 0.44 ) }
    dend_55 { pt3dadd( 42.1677, -63.1396, 2.87071, 0.66 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 86/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 5.71356, -36.8635, -10.6798, 0.81 ) }
    dend_54 { pt3dadd( 6.39953, -38.2592, -11.3432, 0.81 ) }
    dend_54 { pt3dadd( 7.09461, -39.69, -12.0012, 0.51 ) }
    dend_54 { pt3dadd( 7.63821, -40.7995, -12.4829, 0.22 ) }
    dend_54 { pt3dadd( 8.02321, -41.5967, -12.7971, 0.59 ) }
    dend_54 { pt3dadd( 8.4998, -42.5845, -13.1618, 0.95 ) }
    dend_54 { pt3dadd( 8.86933, -43.3796, -13.4398, 0.22 ) }
    dend_54 { pt3dadd( 9.21915, -44.1686, -13.6915, 0.59 ) }
    dend_54 { pt3dadd( 9.55394, -44.9615, -13.989, 0.81 ) }
    dend_54 { pt3dadd( 9.94402, -45.9703, -14.4116, 0.81 ) }
    dend_54 { pt3dadd( 10.1909, -46.8305, -14.783, 0.29 ) }
    dend_54 { pt3dadd( 10.3144, -47.4328, -15.0507, 0.29 ) }
    dend_54 { pt3dadd( 10.4734, -48.3394, -15.5121, 0.29 ) }
    dend_54 { pt3dadd( 10.6309, -49.2854, -16.0196, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_54 { pt3dadd( 10.7484, -50.0079, -16.3945, 0.81 ) }
    dend_54 { pt3dadd( 10.8993, -50.8125, -16.8055, 0.95 ) }
    dend_54 { pt3dadd( 11.1065, -51.8393, -17.2969, 0.29 ) }
    dend_54 { pt3dadd( 11.367, -52.9816, -17.8123, 0.66 ) }
    dend_54 { pt3dadd( 11.5885, -53.9279, -18.1943, 0.81 ) }
    dend_54 { pt3dadd( 11.8902, -55.2169, -18.6803, 0.81 ) }
    dend_54 { pt3dadd( 12.1435, -56.3538, -19.1158, 0.29 ) }
    dend_54 { pt3dadd( 12.249, -56.8497, -19.3253, 0.29 ) }
    dend_54 { pt3dadd( 12.3387, -57.383, -19.579, 0.29 ) }
    dend_54 { pt3dadd( 12.4027, -57.9927, -19.894, 0.37 ) }
    dend_54 { pt3dadd( 12.4465, -58.8851, -20.4032, 0.51 ) }
    dend_54 { pt3dadd( 12.4402, -59.5883, -20.812, 0.95 ) }
    dend_54 { pt3dadd( 12.3983, -60.6103, -21.3763, 0.22 ) }
    dend_54 { pt3dadd( 12.3765, -61.3999, -21.7898, 0.73 ) }
    dend_54 { pt3dadd( 12.3735, -61.891, -22.0179, 0.73 ) }
    dend_54 { pt3dadd( 12.3891, -62.401, -22.2255, 0.37 ) }
    dend_54 { pt3dadd( 12.4502, -63.1709, -22.5052, 0.73 ) }
    dend_54 { pt3dadd( 12.5977, -64.3639, -22.8786, 0.22 ) }
    dend_54 { pt3dadd( 12.6824, -64.8702, -23.0217, 0.22 ) }
    dend_54 { pt3dadd( 12.8473, -65.7115, -23.243, 0.51 ) }
    dend_54 { pt3dadd( 12.9465, -66.1712, -23.3738, 0.88 ) }
    dend_54 { pt3dadd( 13.1844, -67.3421, -23.742, 0.15 ) }
    dend_54 { pt3dadd( 13.4422, -68.7054, -24.1951, 1.25 ) }
    dend_54 { pt3dadd( 13.6223, -69.7341, -24.5569, 0.95 ) }
    dend_54 { pt3dadd( 13.7894, -70.8066, -24.9813, 0.59 ) }
    dend_54 { pt3dadd( 13.9508, -72.0153, -25.5137, 0.29 ) }
    dend_54 { pt3dadd( 14.0537, -73.0453, -25.998, 0.22 ) }
    dend_54 { pt3dadd( 14.0813, -73.4102, -26.1843, 0.22 ) }
    dend_54 { pt3dadd( 14.1017, -73.7609, -26.3911, 0.22 ) }
    dend_54 { pt3dadd( 14.1644, -74.3465, -26.8236, 0.22 ) }
    dend_54 { pt3dadd( 14.244, -74.8148, -27.231, 0.22 ) }
    dend_54 { pt3dadd( 14.3276, -75.1745, -27.5584, 0.22 ) }
    dend_54 { pt3dadd( 14.5128, -75.8401, -28.1839, 0.95 ) }
    dend_54 { pt3dadd( 14.6382, -76.3346, -28.6285, 0.95 ) }
    dend_54 { pt3dadd( 14.9686, -77.7766, -29.7715, 0.37 ) }
    dend_54 { pt3dadd( 15.0335, -78.0657, -29.9657, 0.37 ) }
    dend_54 { pt3dadd( 15.1322, -78.4711, -30.2091, 0.37 ) }
    dend_54 { pt3dadd( 15.3591, -79.4543, -30.729, 0.29 ) }
    dend_54 { pt3dadd( 15.4971, -80.2006, -31.0605, 1.1 ) }
    dend_54 { pt3dadd( 15.6439, -81.2379, -31.4589, 0.51 ) }
    dend_54 { pt3dadd( 15.7045, -82.1037, -31.7346, 0.37 ) }
    dend_54 { pt3dadd( 15.7582, -82.8779, -32.0012, 0.29 ) }
    dend_54 { pt3dadd( 15.8213, -83.5867, -32.29, 0.88 ) }
    dend_54 { pt3dadd( 15.9282, -84.4673, -32.6715, 0.59 ) }
    dend_54 { pt3dadd( 15.9979, -84.9505, -32.9033, 0.07 ) }
    dend_54 { pt3dadd( 16.0491, -85.3329, -33.1007, 0.07 ) }
    dend_54 { pt3dadd( 16.1754, -86.2325, -33.5781, 0.81 ) }
    dend_54 { pt3dadd( 16.4291, -87.5533, -34.3046, 0.29 ) }
    dend_54 { pt3dadd( 16.6356, -88.2831, -34.7264, 0.29 ) }
    dend_54 { pt3dadd( 16.8462, -88.9166, -35.0705, 0.29 ) }
    dend_54 { pt3dadd( 17.0339, -89.4129, -35.3277, 0.29 ) }
    dend_54 { pt3dadd( 17.3212, -90.1201, -35.6791, 1.18 ) }
    dend_54 { pt3dadd( 17.8856, -91.556, -36.3223, 0.15 ) }
    dend_54 { pt3dadd( 18.2073, -92.4199, -36.6693, 1.18 ) }
    dend_54 { pt3dadd( 18.6585, -93.6565, -37.1613, 0.15 ) }
    dend_54 { pt3dadd( 19.0979, -94.8245, -37.6036, 0.73 ) }
    dend_54 { pt3dadd( 19.4196, -95.6817, -37.9082, 1.18 ) }
    dend_54 { pt3dadd( 19.8679, -96.9633, -38.3156, 0.15 ) }
    dend_54 { pt3dadd( 20.2851, -98.2151, -38.6692, 0.15 ) }
    dend_54 { pt3dadd( 20.6993, -99.4187, -39.0057, 0.37 ) }
    dend_54 { pt3dadd( 20.9267, -100.016, -39.1741, 1.1 ) }
    dend_54 { pt3dadd( 21.3576, -101.069, -39.4407, 0.66 ) }
    dend_54 { pt3dadd( 21.7644, -101.956, -39.6524, 0.29 ) }
    dend_54 { pt3dadd( 22.1561, -102.695, -39.8355, 0.22 ) }
    dend_54 { pt3dadd( 22.5826, -103.467, -40.0359, 0.22 ) }
    dend_54 { pt3dadd( 22.9021, -104.052, -40.1823, 0.22 ) }
    dend_54 { pt3dadd( 23.1645, -104.541, -40.3155, 0.59 ) }
    dend_54 { pt3dadd( 23.3858, -104.959, -40.436, 0.22 ) }
    dend_54 { pt3dadd( 23.8822, -105.944, -40.7392, 1.03 ) }
    dend_54 { pt3dadd( 24.4634, -107.251, -41.1554, 0.22 ) }
    dend_54 { pt3dadd( 24.7499, -107.945, -41.401, 0.22 ) }
    dend_54 { pt3dadd( 25.0255, -108.66, -41.6648, 0.81 ) }
    dend_54 { pt3dadd( 25.0913, -108.841, -41.7335, 0.81 ) }
    dend_54 { pt3dadd( 25.3561, -109.623, -42.0299, 0.07 ) }
    dend_54 { pt3dadd( 25.5081, -110.093, -42.2065, 0.07 ) }
    dend_54 { pt3dadd( 25.8237, -111.177, -42.5771, 1.03 ) }
    dend_54 { pt3dadd( 26.1072, -112.313, -42.9327, 0.07 ) }
    dend_54 { pt3dadd( 26.2494, -112.998, -43.1248, 0.88 ) }
    dend_54 { pt3dadd( 26.315, -113.399, -43.2314, 0.88 ) }
    dend_54 { pt3dadd( 26.4366, -114.612, -43.5296, 0.22 ) }
    dend_54 { pt3dadd( 26.4445, -115.325, -43.7089, 0.22 ) }
    dend_54 { pt3dadd( 26.4005, -115.83, -43.8517, 0.51 ) }
    dend_54 { pt3dadd( 26.2961, -116.467, -44.0726, 0.15 ) }
    dend_54 { pt3dadd( 26.1649, -117.032, -44.2888, 0.15 ) }
    dend_54 { pt3dadd( 26.0099, -117.574, -44.5348, 0.81 ) }
    dend_54 { pt3dadd( 25.6389, -118.694, -45.1526, 0.15 ) }
    dend_54 { pt3dadd( 25.4897, -119.162, -45.4675, 0.15 ) }
    dend_54 { pt3dadd( 25.314, -119.702, -45.8679, 0.15 ) }
    dend_54 { pt3dadd( 25.1649, -120.311, -46.3506, 0.81 ) }
    dend_54 { pt3dadd( 24.9877, -121.493, -47.2898, 0.07 ) }
    dend_54 { pt3dadd( 24.9357, -122.307, -47.9166, 0.07 ) }
    dend_54 { pt3dadd( 24.9963, -123.224, -48.5704, 0.59 ) }
    dend_54 { pt3dadd( 25.0642, -123.686, -48.8666, 0.95 ) }
    dend_54 { pt3dadd( 25.3564, -124.967, -49.6193, 0.22 ) }
    dend_54 { pt3dadd( 25.5277, -125.544, -49.9121, 0.22 ) }
    dend_54 { pt3dadd( 25.7268, -126.115, -50.1588, 0.73 ) }
    dend_54 { pt3dadd( 26.2018, -127.531, -50.6952, 0.15 ) }
    dend_54 { pt3dadd( 26.4847, -128.352, -50.9754, 0.15 ) }
    dend_54 { pt3dadd( 26.694, -128.977, -51.1845, 0.15 ) }
    dend_54 { pt3dadd( 26.8575, -129.602, -51.3887, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_54 { pt3dadd( 27.0549, -130.434, -51.6912, 0.15 ) }
    dend_54 { pt3dadd( 27.2218, -131.193, -51.986, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 2/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -16.7332, -46.5158, -30.8961, 0.29 ) }
    dend_52 { pt3dadd( -17.1215, -47.4595, -30.7925, 0.29 ) }
    dend_52 { pt3dadd( -17.727, -48.6848, -30.7435, 0.29 ) }
    dend_52 { pt3dadd( -18.0585, -49.3315, -30.7367, 0.29 ) }
    dend_52 { pt3dadd( -18.3126, -49.7876, -30.7244, 0.29 ) }
    dend_52 { pt3dadd( -18.6991, -50.5124, -30.6954, 0.44 ) }
    dend_52 { pt3dadd( -19.1396, -51.4425, -30.6147, 0.44 ) }
    dend_52 { pt3dadd( -19.5485, -52.3452, -30.5151, 0.44 ) }
    dend_52 { pt3dadd( -19.7301, -52.7993, -30.4646, 0.44 ) }
    dend_52 { pt3dadd( -20.1746, -54.0928, -30.2857, 0.29 ) }
    dend_52 { pt3dadd( -20.4416, -54.9992, -30.1314, 0.44 ) }
    dend_52 { pt3dadd( -20.8529, -56.5432, -29.8334, 0.44 ) }
    dend_52 { pt3dadd( -21.0692, -57.2998, -29.6739, 0.44 ) }
    dend_52 { pt3dadd( -21.1874, -57.6425, -29.6049, 0.44 ) }
    dend_52 { pt3dadd( -21.561, -58.4975, -29.4178, 0.44 ) }
    dend_52 { pt3dadd( -22.141, -59.5686, -29.1918, 0.15 ) }
    dend_52 { pt3dadd( -22.5633, -60.169, -29.0757, 0.81 ) }
    dend_52 { pt3dadd( -23.5334, -61.2741, -28.8744, 0.29 ) }
    dend_52 { pt3dadd( -24.1819, -61.9272, -28.7601, 0.29 ) }
    dend_52 { pt3dadd( -25.288, -63.0052, -28.603, 0.59 ) }
    dend_52 { pt3dadd( -25.9663, -63.6603, -28.5162, 0.73 ) }
    dend_52 { pt3dadd( -26.6815, -64.3428, -28.4319, 0.59 ) }
    dend_52 { pt3dadd( -27.3131, -64.943, -28.3633, 0.59 ) }
    dend_52 { pt3dadd( -28.1951, -65.7553, -28.2969, 0.29 ) }
    dend_52 { pt3dadd( -29.4357, -66.8821, -28.2149, 0.22 ) }
    dend_52 { pt3dadd( -30.1863, -67.5545, -28.1916, 0.88 ) }
    dend_52 { pt3dadd( -30.9666, -68.248, -28.1655, 0.29 ) }
    dend_52 { pt3dadd( -31.381, -68.5958, -28.181, 0.29 ) }
    dend_52 { pt3dadd( -32.1693, -69.2002, -28.2368, 0.29 ) }
    dend_52 { pt3dadd( -33.0073, -69.7523, -28.3142, 0.29 ) }
    dend_52 { pt3dadd( -33.4096, -69.9873, -28.3637, 0.88 ) }
    dend_52 { pt3dadd( -34.5683, -70.6495, -28.5458, 0.66 ) }
    dend_52 { pt3dadd( -36.3684, -71.6867, -28.8797, 0.29 ) }
    dend_52 { pt3dadd( -37.3199, -72.255, -29.0622, 0.29 ) }
    dend_52 { pt3dadd( -37.9927, -72.6658, -29.1994, 0.73 ) }
    dend_52 { pt3dadd( -38.6751, -73.0774, -29.3322, 0.73 ) }
    dend_52 { pt3dadd( -39.0462, -73.3056, -29.3917, 0.73 ) }
    dend_52 { pt3dadd( -40.2576, -74.084, -29.5212, 1.03 ) }
    dend_52 { pt3dadd( -40.7904, -74.4592, -29.5531, 0.73 ) }
    dend_52 { pt3dadd( -41.3061, -74.8239, -29.5958, 0.29 ) }
    dend_52 { pt3dadd( -42.6065, -75.7432, -29.609, 0.51 ) }
    dend_52 { pt3dadd( -43.6668, -76.4785, -29.5716, 0.07 ) }
    dend_52 { pt3dadd( -44.2659, -76.8875, -29.5348, 0.37 ) }
    dend_52 { pt3dadd( -44.8456, -77.292, -29.4845, 0.37 ) }
    dend_52 { pt3dadd( -45.8851, -78.0278, -29.3874, 0.81 ) }
    dend_52 { pt3dadd( -47.1596, -79.0017, -29.2801, 0.29 ) }
    dend_52 { pt3dadd( -47.8273, -79.5584, -29.2415, 0.29 ) }
    dend_52 { pt3dadd( -48.3758, -80.0496, -29.224, 0.07 ) }
    dend_52 { pt3dadd( -48.8735, -80.5342, -29.2216, 0.66 ) }
    dend_52 { pt3dadd( -49.4758, -81.185, -29.2343, 0.66 ) }
    dend_52 { pt3dadd( -50.3243, -82.2435, -29.3147, 0.15 ) }
    dend_52 { pt3dadd( -50.6734, -82.7287, -29.3882, 0.15 ) }
    dend_52 { pt3dadd( -51.2493, -83.6144, -29.5306, 0.15 ) }
    dend_52 { pt3dadd( -51.6595, -84.3074, -29.6746, 0.88 ) }
    dend_52 { pt3dadd( -52.3558, -85.5671, -29.9851, 0.44 ) }
    dend_52 { pt3dadd( -52.7689, -86.3439, -30.2128, 0.44 ) }
    dend_52 { pt3dadd( -52.9579, -86.6963, -30.3272, 0.44 ) }
    dend_52 { pt3dadd( -53.3661, -87.4811, -30.5863, 0.44 ) }
    dend_52 { pt3dadd( -54.0152, -88.785, -31.0125, 0.81 ) }
    dend_52 { pt3dadd( -54.7657, -90.332, -31.5409, 0.22 ) }
    dend_52 { pt3dadd( -55.1898, -91.2238, -31.8353, 0.22 ) }
    dend_52 { pt3dadd( -55.5618, -91.99, -32.0672, 0.59 ) }
    dend_52 { pt3dadd( -55.9184, -92.721, -32.288, 0.37 ) }
    dend_52 { pt3dadd( -56.2221, -93.3637, -32.4776, 0.81 ) }
    dend_52 { pt3dadd( -56.8844, -94.8957, -32.9262, 0.15 ) }
    dend_52 { pt3dadd( -57.1649, -95.6264, -33.1474, 0.37 ) }
    dend_52 { pt3dadd( -57.5522, -96.7083, -33.4672, 0.07 ) }
    dend_52 { pt3dadd( -57.9021, -97.7803, -33.7725, 0.81 ) }
    dend_52 { pt3dadd( -58.0337, -98.2379, -33.8941, 0.81 ) }
    dend_52 { pt3dadd( -58.3563, -99.907, -34.2882, 0.22 ) }
    dend_52 { pt3dadd( -58.4296, -100.644, -34.431, 0.22 ) }
    dend_52 { pt3dadd( -58.4429, -101.438, -34.5688, 0.22 ) }
    dend_52 { pt3dadd( -58.3714, -102.411, -34.7049, 1.03 ) }
    dend_52 { pt3dadd( -58.2097, -103.236, -34.7729, 0.51 ) }
    dend_52 { pt3dadd( -57.7426, -104.734, -34.8315, 0.22 ) }
    dend_52 { pt3dadd( -57.6713, -104.897, -34.827, 0.59 ) }
    dend_52 { pt3dadd( -57.4756, -105.278, -34.8067, 0.59 ) }
    dend_52 { pt3dadd( -57.3296, -105.528, -34.7851, 0.59 ) }
    dend_52 { pt3dadd( -56.6, -106.773, -34.6521, 0.29 ) }
    dend_52 { pt3dadd( -56.3278, -107.244, -34.5921, 0.22 ) }
    dend_52 { pt3dadd( -55.878, -108.002, -34.4531, 0.22 ) }
    dend_52 { pt3dadd( -55.4651, -108.687, -34.3248, 0.51 ) }
    dend_52 { pt3dadd( -55.1692, -109.172, -34.231, 0.07 ) }
    dend_52 { pt3dadd( -54.9293, -109.586, -34.149, 0.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 86/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -16.7332, -46.5158, -30.8961, 0.22 ) }
    dend_51 { pt3dadd( -16.6483, -47.2829, -31.9472, 0.22 ) }
    dend_51 { pt3dadd( -16.5676, -48.3327, -33.6678, 0.29 ) }
    dend_51 { pt3dadd( -16.4972, -49.201, -35.5018, 0.37 ) }
    dend_51 { pt3dadd( -16.4069, -49.5838, -36.6067, 0.37 ) }
    dend_51 { pt3dadd( -16.3674, -49.662, -37.0239, 0.37 ) }
    dend_51 { pt3dadd( -16.2559, -49.7078, -37.9892, 0.37 ) }
    dend_51 { pt3dadd( -16.0801, -49.5919, -39.0574, 0.37 ) }
    dend_51 { pt3dadd( -15.946, -49.3578, -40.0121, 0.37 ) }
    dend_51 { pt3dadd( -15.7955, -48.8106, -41.5331, 0.37 ) }
    dend_51 { pt3dadd( -15.5826, -48.0388, -43.4376, 0.37 ) }
    dend_51 { pt3dadd( -15.1841, -47.1813, -45.6833, 0.37 ) }
    dend_51 { pt3dadd( -14.7182, -46.6084, -47.3676, 0.37 ) }
    dend_51 { pt3dadd( -14.0759, -46.0107, -49.395, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_51 { pt3dadd( -13.7011, -45.7441, -50.4777, 0.37 ) }
    dend_51 { pt3dadd( -13.1719, -45.4855, -51.7912, 0.37 ) }
    dend_51 { pt3dadd( -12.0697, -45.2493, -53.9533, 0.37 ) }
    dend_51 { pt3dadd( -10.9205, -45.1222, -55.9556, 0.37 ) }
    dend_51 { pt3dadd( -9.96837, -44.9975, -57.4684, 0.37 ) }
    dend_51 { pt3dadd( -9.75127, -44.9495, -57.8119, 0.37 ) }
    dend_51 { pt3dadd( -9.42708, -44.8272, -58.344, 0.37 ) }
    dend_51 { pt3dadd( -8.92877, -44.3291, -59.4298, 0.37 ) }
    dend_51 { pt3dadd( -8.88567, -43.773, -60.0346, 0.37 ) }
    dend_51 { pt3dadd( -9.33455, -42.3429, -61.3178, 0.37 ) }
    dend_51 { pt3dadd( -9.91757, -41.2121, -62.3475, 0.22 ) }
    dend_51 { pt3dadd( -10.319, -40.6191, -62.9268, 0.88 ) }
    dend_51 { pt3dadd( -10.8359, -40.0644, -63.5096, 1.03 ) }
    dend_51 { pt3dadd( -12.2106, -38.9044, -64.8397, 0.22 ) }
    dend_51 { pt3dadd( -13.6039, -38.0066, -66.0372, 0.22 ) }
    dend_51 { pt3dadd( -14.5343, -37.5665, -66.7343, 0.66 ) }
    dend_51 { pt3dadd( -14.9307, -37.4292, -67.0154, 0.73 ) }
    dend_51 { pt3dadd( -16.6363, -36.9476, -68.1676, 0.07 ) }
    dend_51 { pt3dadd( -17.7464, -36.6784, -68.8116, 0.95 ) }
    dend_51 { pt3dadd( -19.7247, -36.2822, -69.7452, 0.66 ) }
    dend_51 { pt3dadd( -21.5667, -35.9404, -70.4207, 0.07 ) }
    dend_51 { pt3dadd( -23.2921, -35.6397, -70.9588, 1.03 ) }
    dend_51 { pt3dadd( -24.0768, -35.508, -71.1474, 1.03 ) }
    dend_51 { pt3dadd( -26.3968, -35.1054, -71.5185, 0.07 ) }
    dend_51 { pt3dadd( -27.5761, -34.8698, -71.6311, 0.07 ) }
    dend_51 { pt3dadd( -28.7842, -34.5838, -71.667, 1.03 ) }
    dend_51 { pt3dadd( -30.2263, -34.1843, -71.6504, 0.29 ) }
    dend_51 { pt3dadd( -31.7647, -33.7266, -71.6135, 0.29 ) }
    dend_51 { pt3dadd( -32.944, -33.3765, -71.6356, 0.22 ) }
    dend_51 { pt3dadd( -34.2029, -32.9811, -71.7435, 0.22 ) }
    dend_51 { pt3dadd( -35.4591, -32.5446, -71.9295, 0.51 ) }
    dend_51 { pt3dadd( -36.877, -32.0759, -72.2563, 0.73 ) }
    dend_51 { pt3dadd( -37.6051, -31.8794, -72.5325, 0.15 ) }
    dend_51 { pt3dadd( -38.7017, -31.6494, -73.1031, 0.15 ) }
    dend_51 { pt3dadd( -39.2587, -31.5607, -73.4332, 0.59 ) }
    dend_51 { pt3dadd( -40.1007, -31.4554, -73.9769, 1.25 ) }
    dend_51 { pt3dadd( -41.8907, -31.2554, -75.1967, 0.22 ) }
    dend_51 { pt3dadd( -43.5684, -31.1638, -76.2847, 0.29 ) }
    dend_51 { pt3dadd( -44.4447, -31.1565, -76.8038, 0.07 ) }
    dend_51 { pt3dadd( -44.7966, -31.1654, -76.986, 0.66 ) }
    dend_51 { pt3dadd( -45.5663, -31.2175, -77.3544, 1.03 ) }
    dend_51 { pt3dadd( -47.139, -31.3674, -78.0012, 0.44 ) }
    dend_51 { pt3dadd( -48.8761, -31.5589, -78.5925, 0.15 ) }
    dend_51 { pt3dadd( -49.7846, -31.6706, -78.8406, 0.73 ) }
    dend_51 { pt3dadd( -50.5776, -31.7907, -79.0433, 0.73 ) }
    dend_51 { pt3dadd( -51.9184, -32.0445, -79.3404, 0.73 ) }
    dend_51 { pt3dadd( -53.2522, -32.3519, -79.5935, 0.07 ) }
    dend_51 { pt3dadd( -53.9023, -32.5242, -79.7047, 0.81 ) }
    dend_51 { pt3dadd( -54.7452, -32.777, -79.8462, 0.81 ) }
    dend_51 { pt3dadd( -55.2118, -32.9317, -79.9321, 0.81 ) }
    dend_51 { pt3dadd( -56.5524, -33.4415, -80.2102, 0.07 ) }
    dend_51 { pt3dadd( -57.3319, -33.7399, -80.3687, 0.51 ) }
    dend_51 { pt3dadd( -59.0081, -34.324, -80.5989, 0.07 ) }
    dend_51 { pt3dadd( -60.2145, -34.682, -80.7333, 1.1 ) }
    dend_51 { pt3dadd( -60.9983, -34.8759, -80.7887, 0.95 ) }
    dend_51 { pt3dadd( -62.5385, -35.1697, -80.8678, 0.07 ) }
    dend_51 { pt3dadd( -63.8837, -35.3478, -80.8932, 0.07 ) }
    dend_51 { pt3dadd( -66.3139, -35.4569, -80.7098, 0.22 ) }
    dend_51 { pt3dadd( -67.7852, -35.361, -80.4156, 0.95 ) }
    dend_51 { pt3dadd( -69.1676, -35.0768, -79.9665, 0.22 ) }
    dend_51 { pt3dadd( -69.7904, -34.8551, -79.6666, 0.66 ) }
    dend_51 { pt3dadd( -70.2635, -34.5519, -79.3236, 0.66 ) }
    dend_51 { pt3dadd( -71.4597, -33.2655, -77.9695, 0.07 ) }
    dend_51 { pt3dadd( -71.9727, -32.3188, -77.0688, 0.07 ) }
    dend_51 { pt3dadd( -72.281, -31.4579, -76.2831, 0.29 ) }
    dend_51 { pt3dadd( -72.4685, -30.6726, -75.6485, 0.88 ) }
    dend_51 { pt3dadd( -72.7774, -29.1284, -74.4753, 0.37 ) }
    dend_51 { pt3dadd( -73.0384, -27.6533, -73.4992, 0.37 ) }
    dend_51 { pt3dadd( -73.1725, -26.657, -72.9583, 0.15 ) }
    dend_51 { pt3dadd( -73.2605, -26.1216, -72.709, 0.15 ) }
    dend_51 { pt3dadd( -73.5185, -25.1478, -72.3347, 0.15 ) }
    dend_51 { pt3dadd( -74.0406, -23.8649, -71.9769, 0.15 ) }
    dend_51 { pt3dadd( -74.439, -23.2146, -71.8723, 0.29 ) }
    dend_51 { pt3dadd( -74.8494, -22.7244, -71.7812, 0.15 ) }
    dend_51 { pt3dadd( -75.9615, -21.6189, -71.4245, 0.59 ) }
    dend_51 { pt3dadd( -76.5408, -21.0685, -71.1973, 0.59 ) }
    dend_51 { pt3dadd( -77.3956, -20.2866, -70.8488, 0.59 ) }
    dend_51 { pt3dadd( -77.8361, -19.9193, -70.6591, 0.59 ) }
    dend_51 { pt3dadd( -79.9304, -18.3333, -69.7307, 0.44 ) }
    dend_51 { pt3dadd( -81.4947, -17.2093, -69.0265, 0.44 ) }
    dend_51 { pt3dadd( -82.2912, -16.6234, -68.6288, 0.29 ) }
    dend_51 { pt3dadd( -83.1979, -15.9192, -68.1344, 0.29 ) }
    dend_51 { pt3dadd( -84.6562, -14.726, -67.3179, 0.29 ) }
    dend_51 { pt3dadd( -85.2956, -14.1696, -67.0083, 0.29 ) }
    dend_51 { pt3dadd( -86.4813, -13.0841, -66.5753, 0.44 ) }
    dend_51 { pt3dadd( -87.714, -11.9281, -66.174, 0.29 ) }
    dend_51 { pt3dadd( -88.4543, -11.1969, -65.9511, 0.29 ) }
    dend_51 { pt3dadd( -88.9911, -10.622, -65.7908, 0.66 ) }
    dend_51 { pt3dadd( -90.2067, -9.20119, -65.4831, 0.15 ) }
    dend_51 { pt3dadd( -90.955, -8.3151, -65.2978, 0.15 ) }
    dend_51 { pt3dadd( -91.838, -7.32008, -65.1484, 0.37 ) }
    dend_51 { pt3dadd( -92.524, -6.60976, -65.0929, 0.07 ) }
    dend_51 { pt3dadd( -93.1809, -5.97132, -65.0222, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_30, dend_23, dend_14, dend_3, dend_0, dend_69, dend_46, dend_40, dend_31, dend_25, dend_24, dend_16, dend_15, dend_13, dend_4, dend_2, dend_1, dend_81, dend_70, dend_66, dend_47, dend_44, dend_41, dend_37, dend_32, dend_27, dend_26, dend_20, dend_17, dend_12, dend_5, dend_85, dend_82, dend_80, dend_71, dend_68, dend_67, dend_57, dend_48, dend_43, dend_42, dend_39, dend_38, dend_36, dend_33, dend_29, dend_28, dend_22, dend_21, dend_19, dend_18, dend_7, dend_6, dend_84, dend_83, dend_75, dend_72, dend_63, dend_58, dend_56, dend_49, dend_35, dend_34, dend_9, dend_8, dend_77, dend_76, dend_74, dend_73, dend_65, dend_64, dend_62, dend_59, dend_53, dend_50, dend_11, dend_10, dend_79, dend_78, dend_61, dend_60, dend_55, dend_54, dend_52, dend_51]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_30, dend_23, dend_14, dend_3, dend_0, dend_69, dend_46, dend_40, dend_31, dend_25, dend_24, dend_16, dend_15, dend_13, dend_4, dend_2, dend_1, dend_81, dend_70, dend_66, dend_47, dend_44, dend_41, dend_37, dend_32, dend_27, dend_26, dend_20, dend_17, dend_12, dend_5, dend_85, dend_82, dend_80, dend_71, dend_68, dend_67, dend_57, dend_48, dend_43, dend_42, dend_39, dend_38, dend_36, dend_33, dend_29, dend_28, dend_22, dend_21, dend_19, dend_18, dend_7, dend_6, dend_84, dend_83, dend_75, dend_72, dend_63, dend_58, dend_56, dend_49, dend_35, dend_34, dend_9, dend_8, dend_77, dend_76, dend_74, dend_73, dend_65, dend_64, dend_62, dend_59, dend_53, dend_50, dend_11, dend_10, dend_79, dend_78, dend_61, dend_60, dend_55, dend_54, dend_52, dend_51]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_40 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_24 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_27 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_67 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_33 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_84 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_83 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_8 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_76 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_73 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_64 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_79 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_60 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_55 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_54 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_52 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_51 OneSecGrp_SectionRef_89.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_30 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_14 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_69 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_23 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_70 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_16 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_46 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_47 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_71 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_17 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_81 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_15 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_82 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_57 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_80 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_26 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_49 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_21 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_72 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_63 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_66 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_53 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_75 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_58 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_44 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_39 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_22 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_65 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_56 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_59 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_68 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_62 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_85 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_18 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_77 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_50 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_42 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_38 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_74 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_29 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_28 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_78 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_61 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_9 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_35 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_10 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_34 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_11 OneSecGrp_SectionRef_80.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_24 nseg = 3
    dend_13 nseg = 3
    dend_1 nseg = 3
    dend_27 nseg = 3
    dend_67 nseg = 5
    dend_43 nseg = 3
    dend_36 nseg = 3
    dend_33 nseg = 3
    dend_7 nseg = 3
    dend_84 nseg = 3
    dend_83 nseg = 3
    dend_8 nseg = 3
    dend_76 nseg = 3
    dend_73 nseg = 3
    dend_64 nseg = 5
    dend_79 nseg = 3
    dend_60 nseg = 3
    dend_55 nseg = 3
    dend_54 nseg = 5
    dend_52 nseg = 5
    dend_51 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_DLAC_612b4ae64f_0_0


