// Cell: Cell_480633088
/*
{
  "id" : "Cell_480633088",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "324.044, 384.362, 55.3412, 12.8128", "330.45, 384.362, 55.3412, 12.8128", "336.857, 384.362, 55.3412, 12.8128" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "330.451, 384.362, 55.3412, 1.0", "336.292, 398.178, 55.3412, 1.0", "342.133, 411.994, 55.3412, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999609771325984
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "324.938, 380.018, 59.3096, 1.8794", "324.457, 378.992, 59.6859, 0.4096", "323.996, 377.949, 59.899, 0.3568", "323.257, 377.077, 59.976, 0.3274", "322.462, 376.256, 59.9346, 0.3982", "321.805, 375.32, 59.9203, 0.379", "321.176, 374.364, 59.9329, 0.387", "320.547, 373.409, 59.9598, 0.4198", "319.917, 372.453, 60.0001, 0.6212", "319.155, 371.601, 60.0538, 0.5414", "318.359, 370.78, 60.121, 0.5354", "317.638, 369.893, 60.2501, 0.5204", "316.935, 368.994, 60.4346, 0.5122" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999609771325984
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "328.711, 378.838, 55.305, 0.2288", "328.658, 377.781, 54.6624, 0.2964", "327.945, 378.512, 54.343, 0.316", "327.481, 377.788, 53.6516, 0.3472", "327.237, 376.727, 52.8984, 0.4294", "326.736, 375.794, 51.8809, 0.4644", "326.589, 374.729, 51.0404, 0.4126", "327.416, 374.184, 50.2096, 0.4254" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999609771325984
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "335.818, 383.73, 55.3412, 0.4576", "336.929, 383.488, 55.0906, 0.427", "337.953, 382.992, 54.931, 0.4458", "338.837, 382.278, 54.6969, 0.4462", "339.623, 381.452, 54.4855, 0.3854", "340.307, 380.539, 54.3068, 0.343", "340.83, 379.523, 54.1722, 0.3798", "341.395, 378.53, 54.0302, 0.3458", "342.014, 377.573, 53.8412, 0.322", "342.837, 376.78, 53.7275, 0.316" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999609771325984
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "328.758, 390.038, 56.1856, 0.6864", "328.358, 390.572, 57.9757, 0.4696", "327.909, 391.431, 58.7409, 0.3748", "326.85, 391.776, 59.2878, 0.3556", "325.876, 392.349, 59.7134, 0.476", "324.971, 393.033, 60.0345, 0.4", "324.203, 393.862, 60.2759, 0.3382", "323.626, 394.847, 60.4758, 0.298", "323.171, 395.886, 60.7331, 0.319", "322.819, 396.96, 61.1055, 0.3514", "322.248, 397.912, 61.6014, 0.4444", "321.503, 398.739, 62.2336, 0.4562", "321.194, 399.714, 62.9185, 0.5722", "321.335, 400.818, 63.5608, 0.5592", "321.336, 401.924, 64.2149, 0.4982", "321.133, 403.011, 64.9023, 0.5636", "320.764, 404.048, 65.6379, 0.505", "320.193, 404.982, 66.3701, 0.5832", "319.467, 405.819, 67.0558, 0.5072", "318.632, 406.54, 67.7295, 0.5232", "317.741, 407.202, 68.4088, 0.708", "316.983, 408.003, 69.0558, 0.7544", "316.35, 408.921, 69.6923, 0.6772", "315.737, 409.852, 70.3122, 0.6386", "315.163, 410.816, 70.8282, 0.5182", "314.923, 411.889, 71.2345, 0.5326", "315.005, 413.018, 71.5809, 0.5492", "315.078, 414.151, 71.913, 0.6296", "315.09, 415.286, 72.2652, 0.5374", "315.05, 416.415, 72.69, 0.622", "314.98, 417.537, 73.2046, 0.4526", "314.647, 418.591, 73.7218, 0.3512", "313.789, 418.962, 74.4346, 0.2752", "313.021, 419.677, 75.2044, 0.2758", "312.779, 420.752, 75.8433, 0.2766", "312.365, 421.783, 76.4946, 0.2786", "311.882, 422.764, 77.3018, 0.2818", "311.397, 423.753, 78.069, 0.2882", "310.912, 424.749, 78.7662, 0.2996", "310.324, 425.688, 79.4632, 0.323", "309.748, 426.635, 80.1559, 0.3538", "308.934, 427.805, 80.9687, 0.3938", "308.705, 428.633, 82.6543, 0.3264", "308.921, 429.626, 83.6998, 0.2766", "309.527, 430.321, 85.1575, 0.2782", "310.125, 431.219, 86.023, 0.2814", "311.027, 431.745, 87.0237, 0.287", "312.061, 431.922, 88.1093, 0.2988", "313.022, 432.451, 89.5244, 0.3142", "313.971, 432.385, 90.8202, 0.3734", "315.0, 432.824, 91.3128, 0.3338", "315.831, 433.194, 92.6677, 0.3", "316.485, 433.526, 94.5017, 0.2746", "316.345, 434.457, 95.8992, 0.2746", "316.029, 435.404, 96.847, 0.2746", "316.3, 436.348, 97.832, 0.2746", "316.957, 437.158, 98.8246, 0.2746", "317.445, 437.979, 99.9947, 0.2746", "318.496, 438.019, 101.002, 0.2746", "319.405, 438.5, 101.363, 0.2746", "320.33, 439.007, 101.752, 0.2746", "320.845, 439.944, 101.536, 0.2746", "321.581, 439.9, 103.048, 0.2746", "322.161, 440.8, 103.627, 0.2746", "323.104, 441.392, 103.994, 0.2746", "323.579, 442.161, 104.951, 0.2746", "324.358, 442.872, 104.816, 0.2744", "324.832, 443.861, 104.868, 0.2744", "325.343, 444.781, 105.298, 0.2742", "326.024, 445.511, 105.287, 0.274", "326.85, 446.174, 105.472, 0.2736", "327.511, 446.946, 106.274, 0.2728", "327.754, 448.053, 106.482, 0.2712", "328.548, 448.574, 106.398, 0.2684", "329.559, 448.975, 105.846, 0.2626", "330.118, 449.888, 105.37, 0.2542", "330.641, 450.823, 104.884, 0.2288", "330.673, 451.959, 104.596, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999609771325984,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "326.898, 388.47, 54.5796, 0.2288", "326.355, 389.458, 54.4412, 0.4388", "325.387, 389.951, 54.3427, 0.4798", "324.263, 390.16, 54.2682, 0.45", "323.257, 390.639, 54.2142, 0.4524", "322.337, 391.318, 54.1537, 0.6332", "321.322, 391.819, 54.1218, 0.5704", "320.232, 391.733, 54.0532, 0.5556", "319.112, 391.597, 53.7625, 0.7212", "317.982, 391.588, 53.3252, 0.7782", "316.867, 391.699, 52.7733, 0.725", "315.984, 392.344, 52.2385, 0.7104", "315.115, 393.061, 51.7675, 0.7326", "314.148, 393.643, 51.3304, 0.5354", "313.176, 394.22, 50.8998, 0.411", "312.117, 394.569, 50.3409, 0.3826", "311.033, 394.794, 49.6544, 0.4912" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999609771325984
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "342.133, 411.994, 55.3412, 1.0", "347.974, 425.81, 55.3412, 1.0", "353.816, 439.626, 55.3412, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "316.935, 368.994, 60.4346, 0.5122", "316.823, 368.36, 60.5545, 0.631", "316.625, 367.235, 60.7398, 0.657", "316.339, 366.132, 60.9025, 0.7334", "315.942, 365.061, 61.0394, 0.7386", "315.434, 364.038, 61.1509, 0.724", "314.651, 363.227, 61.2464, 0.5856", "313.791, 362.476, 61.416, 0.6408", "313.335, 361.458, 61.63, 0.6034", "313.192, 360.33, 61.8022, 0.7532", "312.891, 359.231, 61.9254, 0.8828", "312.544, 358.142, 62.0091, 0.927", "312.06, 357.108, 62.0441, 0.8174", "311.549, 356.084, 62.0217, 0.629", "311.038, 355.061, 61.9595, 0.6638", "310.396, 354.116, 61.9998, 0.6956", "309.689, 353.22, 62.1933, 0.684", "309.211, 352.191, 62.4464, 0.5478", "308.762, 351.144, 62.7379, 0.394", "308.505, 350.046, 63.1686, 0.317", "308.284, 348.944, 63.6969, 0.3072" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "316.935, 368.994, 60.4346, 0.5122", "315.706, 368.536, 61.8792, 0.4576", "314.641, 368.394, 62.3728, 0.5294", "313.565, 368.746, 62.6184, 0.4938", "312.77, 369.539, 62.7508, 0.5376", "311.793, 370.101, 63.0868, 0.7718", "310.796, 370.6, 63.712, 0.921", "309.76, 370.979, 64.4532, 0.751" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "327.416, 374.184, 50.2096, 0.4254", "326.305, 373.836, 49.121, 0.378", "325.287, 373.532, 48.2112, 0.4072", "324.211, 373.289, 47.8442, 0.3492", "323.293, 372.617, 47.7865, 0.3296", "322.467, 371.826, 47.7697, 0.324", "321.347, 371.701, 47.7579, 0.392" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "327.416, 374.184, 50.2096, 0.4254", "327.789, 373.771, 51.2641, 0.2288", "327.928, 372.744, 51.9596, 0.324", "327.928, 371.604, 52.2206, 0.3916", "328.357, 370.577, 52.64, 0.3686", "328.74, 369.631, 53.4106, 0.359", "328.473, 368.536, 53.8353, 0.4104", "328.296, 367.414, 54.0742, 0.398", "327.738, 366.452, 54.1542, 0.4394", "327.073, 365.522, 54.2912, 0.4344", "326.552, 364.515, 54.6372, 0.3626" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "342.837, 376.78, 53.7275, 0.316", "343.287, 375.952, 53.7972, 0.3474", "343.857, 374.961, 53.9098, 0.4298", "344.432, 373.974, 54.0019, 0.4638", "345.331, 373.268, 54.0047, 0.4176" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "342.837, 376.78, 53.7275, 0.316", "342.63, 376.143, 52.9712, 0.6864", "342.288, 375.094, 52.3149, 0.5978", "341.951, 374.007, 52.0719, 0.6456", "341.495, 372.962, 51.9215, 0.697", "341.37, 371.85, 51.8543, 0.5166", "341.733, 370.781, 51.7194, 0.3764", "342.104, 369.71, 51.3464, 0.3168", "342.125, 368.591, 50.8026, 0.3784", "342.125, 367.466, 50.2916, 0.3434" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "311.033, 394.794, 49.6544, 0.4912", "309.507, 395.172, 48.8544, 0.5676", "308.539, 395.726, 48.5156, 0.4746", "307.65, 396.436, 48.2336, 0.4816", "306.777, 397.165, 47.9206, 0.5386", "306.132, 398.081, 47.595, 0.4312", "305.513, 399.022, 47.1162, 0.3498", "304.492, 399.455, 46.6889, 0.3146", "303.501, 400.005, 46.338, 0.3744", "302.409, 400.319, 46.0547, 0.3358", "301.311, 400.617, 45.7702, 0.3036", "300.602, 401.49, 45.418, 0.2812", "299.714, 402.199, 45.1119, 0.287", "298.661, 402.622, 44.7728, 0.2976", "297.573, 402.92, 44.3909, 0.318", "296.551, 403.364, 44.0902, 0.351", "295.431, 403.235, 43.8486, 0.4366", "294.378, 402.809, 43.6178, 0.4758", "293.26, 402.608, 43.3448, 0.4424", "292.142, 402.683, 43.0626, 0.438", "291.102, 403.145, 42.7997, 0.608", "290.072, 403.609, 42.53, 0.5166", "288.961, 403.85, 42.2422, 0.49", "287.845, 404.054, 41.8964, 0.4342", "286.988, 404.624, 41.5593, 0.362", "286.714, 405.701, 41.2026, 0.3048", "286.682, 406.83, 40.7543, 0.2836", "286.207, 407.709, 40.2209, 0.2912", "285.171, 407.86, 39.7177, 0.3064", "284.07, 407.949, 39.3078, 0.3282", "282.967, 408.211, 38.9418, 0.3996", "281.878, 408.5, 38.5014, 0.383", "280.86, 408.941, 37.8549, 0.388", "279.955, 409.587, 37.2212, 0.4528", "279.126, 410.349, 36.752, 0.532", "278.119, 410.865, 36.4703, 0.4196", "277.037, 411.207, 36.1766, 0.327", "276.054, 410.637, 35.9568, 0.2776", "275.443, 410.404, 35.4922, 0.2804", "274.544, 410.869, 35.3382, 0.2852", "273.485, 410.497, 35.4054, 0.2942", "272.368, 410.514, 35.4928, 0.312", "271.288, 410.875, 35.4094, 0.3398" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "311.033, 394.794, 49.6544, 0.4912", "310.133, 395.557, 48.2765, 0.6864", "309.975, 396.681, 47.9752, 0.549", "309.413, 397.655, 47.7408, 0.3962", "309.009, 398.714, 47.5258, 0.3212", "308.748, 399.821, 47.378, 0.3146", "308.41, 400.908, 47.129, 0.3448", "307.938, 401.943, 46.8933, 0.425", "307.672, 403.044, 46.5842, 0.4548", "307.439, 404.149, 46.1476, 0.401", "307.326, 405.265, 45.6128, 0.3732", "307.285, 406.383, 45.0271, 0.4308", "306.779, 407.367, 44.4186, 0.4652", "305.854, 408.001, 43.9102, 0.4218", "305.275, 408.965, 43.4703, 0.4054", "304.967, 410.037, 42.8949, 0.5208", "304.375, 410.977, 42.2495, 0.485", "303.688, 411.863, 41.7222, 0.4868", "303.158, 412.854, 41.1978, 0.6164", "302.697, 413.873, 40.6417, 0.702", "302.016, 414.722, 39.9224, 0.6956", "301.048, 415.245, 39.2658, 0.5694", "299.97, 415.525, 38.6316, 0.4346", "298.897, 415.796, 37.9764, 0.3892", "297.82, 415.964, 37.1568, 0.455", "296.96, 416.519, 36.2541, 0.5364", "296.298, 417.393, 35.464, 0.4274", "295.504, 418.153, 34.813, 0.3416", "294.494, 418.54, 34.1858, 0.3056", "293.414, 418.424, 33.5367, 0.3268", "292.404, 417.988, 32.8115, 0.398", "291.452, 417.453, 31.976, 0.3742", "290.423, 417.13, 31.148, 0.4002", "289.399, 416.86, 30.102, 0.3362", "288.326, 417.156, 29.5333, 0.305", "287.218, 417.377, 29.0842, 0.2796", "286.224, 417.923, 28.742, 0.305", "285.333, 418.61, 28.2352, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "308.284, 348.944, 63.6969, 0.3072", "307.702, 347.858, 64.1015, 0.3296", "307.164, 346.857, 64.4179, 0.4032" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "308.284, 348.944, 63.6969, 0.3072", "308.46, 348.239, 63.8014, 0.2288", "308.735, 347.141, 63.6042, 0.3348", "309.125, 346.086, 63.2195, 0.3828", "309.725, 345.122, 62.9994, 0.4912", "310.434, 344.23, 62.7578, 0.5994", "311.051, 343.298, 62.2712, 0.5644", "311.565, 342.294, 61.8276, 0.4972", "312.106, 341.292, 61.5835, 0.3856", "312.847, 340.428, 61.4132, 0.3434", "313.947, 340.295, 61.1537, 0.3806", "314.97, 339.806, 60.9344, 0.347", "315.944, 339.212, 60.7592, 0.3252", "316.862, 338.536, 60.5091, 0.3162", "317.767, 337.849, 60.188, 0.3774", "318.823, 337.427, 59.897, 0.3412", "319.727, 336.736, 59.6358, 0.3132", "320.232, 335.715, 59.3765, 0.3002", "320.741, 334.697, 59.1013, 0.317", "321.414, 333.779, 58.8098, 0.3788" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "309.76, 370.979, 64.4532, 0.751", "309.871, 371.497, 65.1876, 0.5438", "310.099, 372.428, 66.7106, 0.5526", "310.622, 373.301, 67.9792, 0.4906", "311.074, 374.241, 69.125, 0.5266", "311.388, 375.267, 70.0862, 0.5472", "311.71, 376.282, 71.108, 0.5812" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "309.76, 370.979, 64.4532, 0.751", "308.154, 370.831, 64.5162, 0.2288", "307.061, 370.561, 64.9986, 0.3204", "305.943, 370.341, 65.261, 0.3556", "304.827, 370.15, 65.63, 0.4446", "303.707, 370.081, 66.1385, 0.4936", "302.594, 370.15, 66.7472, 0.4612", "301.483, 370.225, 67.3487, 0.5412", "300.362, 370.158, 67.879, 0.4684", "299.272, 370.324, 68.2268, 0.4908", "298.163, 370.513, 68.458, 0.4554", "297.066, 370.773, 68.7548, 0.535", "295.992, 370.614, 69.1393, 0.663", "294.936, 370.221, 69.6242, 0.5388", "293.81, 370.061, 69.8813, 0.4604", "292.807, 369.523, 70.086, 0.494", "292.154, 368.59, 70.3139, 0.603", "291.629, 367.582, 70.5127, 0.5784", "290.728, 366.906, 70.7521, 0.4884", "289.599, 366.927, 71.1564, 0.538", "288.494, 367.119, 71.6173, 0.4932", "287.412, 366.914, 72.1459, 0.387", "286.553, 366.192, 72.6211, 0.3042", "285.926, 365.267, 73.1094, 0.2824", "285.525, 364.249, 73.8203, 0.289", "284.747, 363.52, 74.4615, 0.3024", "283.671, 363.246, 75.038, 0.321", "282.578, 363.071, 75.6627, 0.3858", "281.604, 362.573, 76.3157, 0.358", "280.737, 361.904, 77.0706, 0.3394", "279.727, 361.498, 77.8476, 0.3734", "278.642, 361.36, 78.6139, 0.3338", "277.564, 361.21, 79.3733, 0.2996", "276.51, 360.933, 80.1962, 0.274", "275.47, 360.79, 81.2902, 0.2736", "274.419, 360.789, 82.3894, 0.2728", "273.438, 360.455, 83.4075, 0.2712", "272.632, 359.806, 84.5664, 0.2684", "271.901, 359.001, 85.4179, 0.2626", "271.615, 357.934, 85.9743, 0.2542", "271.186, 356.891, 86.4354, 0.2288", "270.22, 356.323, 86.9646, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "321.347, 371.701, 47.7579, 0.392", "320.533, 372.173, 47.672, 0.3678", "319.973, 373.031, 47.7649, 0.365", "319.836, 372.014, 48.7995, 0.3844", "318.714, 371.929, 48.6727, 0.5302", "317.939, 371.447, 47.4748, 0.4962", "317.396, 371.723, 46.2633, 0.5374", "316.612, 372.411, 45.134, 0.5654", "315.602, 372.748, 44.4534, 0.6234", "314.488, 372.775, 43.8687, 0.7008", "313.365, 372.624, 43.5411, 0.7626", "312.24, 372.449, 43.2936, 0.587", "311.154, 372.681, 42.9657, 0.527", "310.029, 372.794, 42.6989, 0.4986", "308.891, 372.81, 42.4108, 0.5018", "307.972, 373.256, 41.7441, 0.4658", "307.098, 373.985, 41.4585, 0.3734", "306.067, 373.946, 41.1734, 0.326", "305.027, 373.498, 40.938, 0.3236", "303.909, 373.295, 40.8965, 0.3614", "302.915, 373.752, 40.6456, 0.4554", "302.042, 374.455, 40.3004, 0.5146", "300.977, 374.843, 40.0005, 0.495", "299.891, 375.187, 39.755, 0.6292", "298.788, 375.402, 39.2568, 0.5078", "297.702, 375.102, 38.8086, 0.4798", "296.567, 375.1, 38.458, 0.3844", "295.46, 375.1, 37.7742, 0.419" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "321.347, 371.701, 47.7579, 0.392", "322.182, 372.3, 45.7582, 0.2288", "322.712, 373.163, 44.578, 0.2814", "323.602, 373.813, 43.8343, 0.287", "323.357, 374.475, 42.8806, 0.2988", "324.264, 375.137, 42.3738, 0.3142", "325.126, 375.827, 41.9625, 0.3734", "325.926, 376.505, 41.7001, 0.3338", "325.603, 377.487, 41.372, 0.3", "324.658, 378.069, 40.9063, 0.2746", "324.74, 378.934, 40.0988, 0.2746", "325.605, 379.543, 39.2006, 0.2746", "326.635, 379.758, 38.5619, 0.2746", "327.484, 379.093, 38.1718, 0.2748", "328.197, 378.205, 37.8977, 0.2748", "329.085, 377.585, 37.4116, 0.2752", "329.921, 378.282, 37.1577, 0.2756", "330.679, 379.125, 36.8488, 0.2766", "331.474, 379.901, 36.4294, 0.2784", "332.206, 379.496, 36.1385, 0.2816", "333.031, 379.053, 36.0696, 0.2876", "334.158, 379.252, 36.1228, 0.2986", "335.302, 379.253, 36.1796, 0.3202", "336.445, 379.253, 36.2746, 0.3546", "337.292, 380.016, 36.4095, 0.4444" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "326.552, 364.515, 54.6372, 0.3626", "326.762, 363.737, 55.0785, 0.306", "327.05, 362.639, 55.4005, 0.2856", "327.322, 361.53, 55.6004, 0.2954", "327.567, 360.414, 55.6917, 0.3124", "327.792, 359.293, 55.7584, 0.3478", "327.806, 358.151, 55.818, 0.3946", "327.556, 357.035, 55.8326, 0.574", "327.424, 355.9, 55.783, 0.4576", "327.344, 354.759, 55.6875, 0.3604", "327.786, 353.708, 55.6069, 0.292", "328.24, 352.657, 55.5436, 0.3082", "328.774, 351.646, 55.5285, 0.3316", "329.316, 350.638, 55.5534, 0.4058", "329.771, 349.589, 55.6287, 0.3944", "330.217, 348.537, 55.7228, 0.4092" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "326.552, 364.515, 54.6372, 0.3626", "325.98, 363.962, 54.9539, 0.2288", "325.042, 363.344, 55.1715, 0.3746", "324.016, 362.839, 55.2196, 0.3358", "322.965, 362.393, 55.3202, 0.3036", "321.852, 362.196, 55.4991, 0.2814", "320.715, 362.095, 55.6788, 0.2874", "319.578, 361.97, 55.7556, 0.2982", "318.453, 361.765, 55.7631, 0.3182", "317.35, 361.463, 55.7687, 0.3572", "316.367, 360.899, 55.809, 0.4192", "315.453, 360.212, 55.8771, 0.5844", "314.455, 359.662, 55.8678, 0.6466", "313.404, 359.213, 55.8034, 0.5738", "312.299, 358.922, 55.7556, 0.4368", "311.185, 358.66, 55.7298, 0.4218", "310.065, 358.429, 55.7917, 0.3778", "308.945, 358.205, 55.9398, 0.3756", "307.848, 357.889, 56.0899, 0.4422", "306.757, 357.55, 56.2092, 0.4522", "305.662, 357.219, 56.2598, 0.5646", "304.566, 356.894, 56.2344, 0.545", "303.504, 356.468, 56.1803, 0.4724", "302.569, 355.816, 56.2425, 0.5138", "302.033, 354.812, 56.31, 0.4224", "301.602, 353.752, 56.3741, 0.3818", "300.857, 352.886, 56.4357, 0.3684", "300.038, 352.089, 56.4892, 0.5008", "299.023, 351.564, 56.5233, 0.441", "297.965, 351.129, 56.5393, 0.4394", "296.981, 350.546, 56.5788, 0.363", "296.066, 349.859, 56.6443, 0.3486", "295.245, 349.064, 56.7252, 0.3902", "294.47, 348.223, 56.8459, 0.366", "293.892, 347.241, 57.0738, 0.3542", "293.309, 346.261, 57.302, 0.4006", "292.706, 345.306, 57.4448, 0.3852", "292.661, 344.169, 57.7332, 0.3904", "292.632, 343.035, 58.0611, 0.4648", "292.416, 341.92, 58.3047, 0.5182", "292.036, 340.843, 58.4668, 0.5688", "291.774, 339.735, 58.5704, 0.4402", "291.702, 338.594, 58.6244, 0.3662", "291.432, 337.514, 58.6219, 0.3462", "290.658, 336.672, 58.5435, 0.4274", "289.822, 335.894, 58.4335, 0.4606", "288.973, 335.127, 58.4503, 0.4056", "288.147, 334.337, 58.5617, 0.4112", "287.317, 333.562, 58.7278, 0.358", "286.516, 332.794, 58.9305, 0.3396", "285.945, 331.823, 59.1912, 0.3734", "285.037, 331.228, 59.5678, 0.3338", "284.005, 330.807, 59.939, 0.3", "283.181, 330.044, 60.2291, 0.2746", "282.609, 329.067, 60.4024, 0.2746", "282.238, 327.989, 60.3954, 0.2748", "281.751, 326.968, 60.2252, 0.2748", "281.167, 325.986, 60.0835, 0.2752", "280.613, 324.986, 60.1065, 0.2756", "280.069, 323.984, 60.319, 0.2766", "279.512, 322.995, 60.667, 0.2784", "278.827, 322.095, 61.0249, 0.2816", "278.104, 321.218, 61.3483, 0.2874", "277.382, 320.338, 61.6258, 0.2994", "276.629, 319.483, 61.8708, 0.3152", "275.76, 318.754, 62.1491, 0.3754", "274.859, 318.062, 62.4719, 0.3376", "273.958, 317.371, 62.8286, 0.3068", "273.076, 316.656, 63.1498, 0.287", "272.202, 315.925, 63.4057, 0.2988", "271.328, 315.19, 63.5981, 0.3142", "270.427, 314.488, 63.7263, 0.3734", "269.513, 313.8, 63.8061, 0.3338", "268.599, 313.114, 63.8593, 0.3", "267.684, 312.427, 63.9078, 0.2746", "266.717, 311.818, 63.9649, 0.2746", "265.728, 311.243, 64.0394, 0.2746", "264.737, 310.674, 64.1396, 0.2746", "263.746, 310.104, 64.2701, 0.2746", "262.721, 309.606, 64.4846, 0.2746", "261.676, 309.159, 64.7987, 0.2746", "260.632, 308.719, 65.1868, 0.2748", "259.591, 308.28, 65.6205, 0.2748", "258.685, 307.609, 66.0226, 0.2752", "257.806, 306.892, 66.3827, 0.2756", "256.926, 306.171, 66.6991, 0.2766", "255.991, 305.527, 66.9973, 0.2784", "254.878, 305.451, 67.3392, 0.2818", "253.746, 305.377, 67.6956, 0.2878", "252.667, 305.016, 67.9566, 0.299", "251.693, 304.425, 68.1489, 0.3208", "251.11, 303.444, 68.2623, 0.356", "250.416, 302.534, 68.3217, 0.4464", "249.638, 301.696, 68.339, 0.4914", "248.833, 300.882, 68.339, 0.483", "248.139, 299.973, 68.339, 0.4576", "247.492, 299.03, 68.339, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "345.331, 373.268, 54.0047, 0.4176", "345.434, 372.121, 53.3417, 0.405", "345.876, 371.112, 52.7159, 0.4852", "346.518, 370.193, 52.1858, 0.5868", "347.339, 369.434, 51.7188, 0.5476", "348.168, 368.671, 51.3164, 0.4352", "349.003, 367.91, 50.8906, 0.4192", "349.908, 367.262, 50.2681, 0.3714", "350.72, 366.508, 49.6073, 0.3714", "351.603, 365.816, 49.0876, 0.3974", "352.447, 365.066, 48.6265, 0.5488", "353.291, 364.314, 48.2238, 0.5566", "354.214, 363.643, 48.0421, 0.5244", "355.356, 363.6, 47.9161, 0.4606" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "345.331, 373.268, 54.0047, 0.4176", "346.425, 372.612, 55.5226, 0.4448", "347.41, 372.06, 55.3862, 0.327", "348.537, 371.945, 55.1544, 0.2774" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "342.125, 367.466, 50.2916, 0.3434", "342.677, 366.97, 49.6572, 0.3172", "343.53, 366.244, 49.0944, 0.3078", "344.432, 365.572, 48.6164, 0.3306", "345.132, 364.729, 48.2292, 0.405", "345.354, 363.619, 47.84, 0.387", "345.697, 362.577, 47.3561, 0.4252", "346.386, 361.687, 46.8658, 0.3776", "347.082, 360.816, 46.3484, 0.4066", "347.972, 360.138, 45.7934, 0.348", "348.97, 359.672, 45.25, 0.3272", "350.086, 359.505, 44.7756, 0.3198", "351.132, 359.193, 44.2868, 0.3838", "352.007, 358.501, 43.6621, 0.3534", "352.917, 357.878, 42.9618, 0.3356", "353.81, 357.227, 42.2842, 0.3426", "354.735, 356.621, 41.6592, 0.3912", "355.791, 356.532, 41.0292, 0.5378", "356.897, 356.501, 40.4552, 0.5348", "358.016, 356.414, 39.928, 0.4896", "359.102, 356.637, 39.4114, 0.3706", "360.21, 356.658, 39.006, 0.3206", "361.337, 356.496, 38.7442, 0.314", "362.464, 356.303, 38.5638, 0.3422", "363.58, 356.076, 38.3712, 0.4264", "364.714, 355.989, 38.1248, 0.4276", "365.817, 356.221, 37.8213, 0.4948", "366.854, 356.676, 37.4788, 0.5342", "367.751, 357.357, 37.072, 0.5634", "368.727, 357.931, 36.7119, 0.6002", "369.844, 358.089, 36.4552, 0.5244", "370.98, 357.993, 36.3149, 0.3972", "372.087, 358.263, 36.2303, 0.3242", "373.216, 358.438, 36.1351, 0.3142", "374.349, 358.592, 36.0312, 0.3734", "375.488, 358.494, 36.0158, 0.3338", "376.624, 358.361, 36.0805, 0.3", "377.76, 358.239, 36.1956, 0.2746", "378.897, 358.126, 36.3462, 0.2746", "379.967, 357.728, 36.5176, 0.2746", "381.018, 357.284, 36.6834, 0.2746", "382.158, 357.183, 36.808, 0.2746", "383.293, 357.058, 36.8914, 0.2746", "384.294, 356.505, 36.9494, 0.2746", "385.275, 355.919, 36.976, 0.2746", "386.115, 355.143, 36.8757, 0.2746", "387.091, 354.575, 36.675, 0.2746", "388.221, 354.499, 36.311, 0.2748", "389.344, 354.591, 35.8576, 0.275", "390.447, 354.738, 35.3268, 0.2752", "391.548, 354.521, 34.7914, 0.2758", "392.634, 354.232, 34.3003, 0.2768", "393.695, 353.831, 33.9172, 0.2788", "394.725, 353.371, 33.5989, 0.2826", "395.666, 352.79, 33.2909, 0.289", "396.794, 352.659, 33.0389, 0.3026", "397.929, 352.659, 32.6894, 0.3214", "398.866, 353.1, 32.1238, 0.3866", "399.543, 353.997, 31.6148, 0.3594", "400.306, 354.759, 31.1948, 0.342", "401.399, 355.044, 30.9338, 0.3778", "402.533, 355.023, 30.8092, 0.3422", "403.62, 354.698, 30.7177, 0.315", "404.699, 354.332, 30.6552, 0.3036", "405.81, 354.06, 30.6331, 0.3232", "406.9, 353.72, 30.6275, 0.3902", "407.973, 353.323, 30.634, 0.3662", "409.082, 353.121, 30.6636, 0.3542", "410.227, 353.116, 30.7227, 0.4018", "411.369, 353.092, 30.8084, 0.3814", "412.5, 352.958, 30.9406, 0.4136", "413.625, 352.766, 31.1226, 0.361", "414.743, 352.837, 31.2922, 0.3508", "415.857, 353.095, 31.4129, 0.3658", "416.979, 353.313, 31.491, 0.4588", "418.094, 353.249, 31.5375, 0.543", "419.22, 353.118, 31.4992, 0.441", "420.361, 353.182, 31.4602, 0.3616", "421.477, 353.401, 31.6596, 0.3672", "422.583, 353.154, 31.8646, 0.322", "423.724, 353.117, 32.0085, 0.2796", "424.861, 353.233, 32.0407, 0.2288", "425.939, 353.574, 31.6235, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "342.125, 367.466, 50.2916, 0.3434", "341.945, 366.405, 50.6699, 0.2288", "341.78, 365.292, 50.1967, 0.289", "341.777, 364.156, 49.9492, 0.3022", "341.994, 363.045, 49.6829, 0.3206", "342.379, 361.978, 49.4365, 0.3856", "342.46, 360.863, 49.1537, 0.3564", "342.358, 359.765, 48.7878, 0.3426", "342.733, 358.703, 48.4005, 0.3494", "343.267, 357.7, 48.1107, 0.4336", "343.589, 356.625, 47.9321, 0.4718", "343.74, 355.495, 47.7193, 0.4276", "343.893, 354.365, 47.4681, 0.447", "344.059, 353.236, 47.2788, 0.4486", "344.237, 352.106, 47.1968, 0.3898", "344.391, 350.974, 47.147, 0.3512", "344.552, 349.841, 47.0884, 0.3948", "344.862, 348.748, 47.0246, 0.3744", "345.318, 347.699, 46.9571, 0.371", "345.809, 346.666, 46.9224, 0.4266", "346.289, 345.629, 46.958, 0.4578", "346.672, 344.555, 47.1125, 0.4066", "347.095, 343.505, 47.4208, 0.3832", "347.784, 342.622, 47.8044, 0.4498", "348.462, 341.72, 48.1354, 0.497", "348.875, 340.671, 48.3882, 0.4988", "348.733, 339.591, 48.5738, 0.4602", "348.283, 338.542, 48.7015, 0.363", "348.51, 337.531, 48.7914, 0.3068", "349.389, 336.855, 48.8939, 0.287", "350.236, 336.105, 49.1025, 0.2988", "351.008, 335.264, 49.2733, 0.3142", "351.634, 334.311, 49.378, 0.3734", "351.74, 333.189, 49.5398, 0.3338", "352.04, 332.09, 49.6787, 0.3", "352.66, 331.132, 49.7767, 0.2746", "353.128, 330.089, 49.8358, 0.2746", "353.728, 329.122, 50.0634, 0.2746", "354.632, 328.442, 50.3737, 0.2746", "355.65, 327.995, 50.8421, 0.2746", "356.328, 327.13, 51.3761, 0.2746", "356.919, 326.296, 51.8311, 0.2746", "357.99, 326.272, 52.2522, 0.2746", "358.823, 326.032, 52.5596, 0.2746", "359.405, 325.055, 52.8531, 0.2746", "360.178, 324.245, 53.2202, 0.2746", "361.039, 323.519, 53.6808, 0.2746", "361.897, 322.794, 54.2223, 0.2746", "362.744, 322.066, 54.8288, 0.2746", "363.513, 321.262, 55.4658, 0.2746", "364.257, 320.433, 56.1112, 0.2746", "364.999, 319.604, 56.758, 0.2746", "365.837, 318.887, 57.4554, 0.2746", "366.78, 318.323, 58.221, 0.2746", "367.741, 317.795, 59.0232, 0.2746", "368.694, 317.251, 59.8128, 0.2746", "369.589, 316.587, 60.4349, 0.2746", "370.482, 315.903, 60.933, 0.2746", "371.382, 315.216, 61.3312, 0.2746", "372.322, 314.578, 61.6616, 0.2748", "373.34, 314.076, 61.9654, 0.275", "374.373, 313.599, 62.2647, 0.2754", "375.406, 313.122, 62.5716, 0.2762", "376.426, 312.621, 62.8684, 0.2776", "377.432, 312.087, 63.1338, 0.28", "378.435, 311.546, 63.3682, 0.2848", "379.44, 311.004, 63.5762, 0.2936", "380.339, 310.303, 63.7588, 0.3094", "381.072, 309.433, 63.9106, 0.3412", "381.785, 308.539, 64.0517, 0.3884", "382.499, 307.648, 64.2012, 0.5326", "383.19, 306.74, 64.3933, 0.5254", "383.854, 305.815, 64.652, 0.4718", "384.662, 305.025, 65.0479, 0.339", "385.704, 304.6, 65.4724, 0.2542", "386.822, 304.534, 66.061, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "271.288, 410.875, 35.4094, 0.3398", "270.078, 411.282, 35.1291, 0.4156", "268.94, 411.315, 35.3091, 0.4376", "267.832, 411.537, 35.6569, 0.3684", "266.721, 411.626, 36.0483, 0.3168", "265.75, 411.144, 36.4098, 0.3068", "264.901, 410.381, 36.5422, 0.329", "263.879, 409.911, 36.659, 0.402", "262.776, 410.19, 36.8539, 0.3816", "261.721, 410.622, 36.9757, 0.414", "260.585, 410.742, 37.0345, 0.363", "259.464, 410.944, 37.1778, 0.3486", "258.387, 411.326, 37.3593, 0.3902", "257.322, 411.723, 37.5178, 0.366", "256.194, 411.918, 37.6149, 0.3542", "255.062, 411.969, 37.6606, 0.4016", "253.947, 411.715, 37.6656, 0.3808", "252.838, 411.456, 37.6454, 0.4126", "251.696, 411.382, 37.6429, 0.3592", "250.553, 411.332, 37.6914, 0.3476", "249.413, 411.289, 37.8462, 0.3586", "248.288, 411.178, 38.0411, 0.4516", "247.272, 410.695, 38.173, 0.5002", "246.339, 410.037, 38.1161, 0.5046", "245.358, 409.448, 38.0778, 0.4712", "244.322, 408.974, 37.984, 0.3832", "243.23, 408.644, 37.826, 0.345", "242.102, 408.534, 37.6846, 0.3542", "240.958, 408.534, 37.6076, 0.4418", "239.82, 408.62, 37.5777, 0.4886", "238.696, 408.822, 37.5847, 0.4522", "237.564, 408.963, 37.7084, 0.5232", "236.428, 408.991, 38.0078, 0.4412", "235.298, 408.991, 38.4381, 0.4102", "234.173, 408.991, 38.9463, 0.4528", "233.051, 408.991, 39.4979, 0.5028", "231.969, 409.243, 40.0173, 0.5084", "230.955, 409.717, 40.5608, 0.483", "229.92, 409.671, 41.3745, 0.3814", "228.999, 409.908, 42.9176, 0.4576" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "271.288, 410.875, 35.4094, 0.3398", "270.216, 411.406, 33.4642, 0.2288", "269.139, 411.761, 33.2508, 0.3182", "268.128, 412.292, 33.2668, 0.381", "266.999, 412.362, 33.2374, 0.3476", "265.962, 411.918, 33.0705, 0.3264", "265.02, 412.215, 32.7152, 0.3184", "264.518, 413.237, 32.452, 0.3814", "263.77, 414.026, 32.2364, 0.3488", "262.849, 414.687, 32.1348, 0.3276", "262.163, 415.582, 31.9973, 0.327", "261.272, 416.138, 31.7786, 0.3658", "260.148, 416.147, 31.5098, 0.4722", "259.014, 416.141, 31.1688, 0.5032", "258.102, 416.744, 30.8795, 0.6802", "257.194, 417.433, 30.6494, 0.6584", "256.233, 418.05, 30.4822, 0.4858", "255.157, 418.41, 30.3985, 0.3502", "254.056, 418.723, 30.3856, 0.3474", "252.968, 419.06, 30.639, 0.2796", "251.9, 419.068, 31.6235, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "307.164, 346.857, 64.4179, 0.4032", "306.344, 346.225, 64.6304, 0.3838", "305.461, 345.504, 64.8743, 0.4178", "304.69, 344.673, 65.1764, 0.3702", "304.1, 343.706, 65.5136, 0.3618", "303.741, 342.631, 65.8375, 0.4158", "303.388, 341.549, 66.0993, 0.4082", "302.985, 340.481, 66.2323, 0.4578", "302.428, 339.484, 66.3127, 0.47", "301.719, 338.59, 66.4213, 0.423", "300.861, 337.84, 66.6411, 0.4444", "299.912, 337.219, 67.0032, 0.414", "298.819, 336.934, 67.4237, 0.4698" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "307.164, 346.857, 64.4179, 0.4032", "307.298, 346.192, 63.2282, 0.2288", "307.466, 345.352, 61.3732, 0.2768", "307.671, 344.33, 60.2619, 0.2788", "307.777, 343.282, 59.1724, 0.2826", "307.833, 342.222, 58.1543, 0.2896", "308.228, 341.245, 57.0909, 0.3018", "308.854, 340.358, 56.2282, 0.3272", "309.636, 339.565, 55.6492, 0.3618", "310.447, 338.844, 55.2177, 0.4872", "310.767, 337.765, 54.7333, 0.422", "310.673, 336.751, 54.1436, 0.3738", "309.839, 336.04, 53.4814, 0.3896", "308.902, 335.431, 52.8923, 0.3648", "308.033, 334.729, 52.3169, 0.352", "307.274, 333.905, 51.807, 0.3976", "306.572, 333.022, 51.338, 0.3734", "305.904, 332.116, 50.8869, 0.3988", "305.608, 331.075, 50.4896, 0.334", "305.783, 329.967, 50.0545, 0.3002", "305.783, 328.882, 49.4889, 0.2748", "305.411, 327.829, 48.9157, 0.275", "305.125, 326.749, 48.4162, 0.2754", "304.895, 325.647, 47.9396, 0.276", "304.434, 324.633, 47.4295, 0.2772", "303.885, 323.662, 46.8087, 0.2796", "303.486, 322.635, 46.0888, 0.284", "303.408, 321.537, 45.4182, 0.292", "303.438, 320.425, 44.7642, 0.3066", "303.787, 319.406, 43.9516, 0.3348", "303.854, 318.342, 43.0405, 0.3828", "303.613, 317.284, 42.1725, 0.4912", "303.178, 316.286, 41.3185, 0.5992", "302.352, 315.554, 40.6258, 0.5642", "301.763, 314.634, 39.8471, 0.4966", "302.112, 313.607, 39.0286, 0.3846", "302.796, 312.748, 38.2404, 0.3416", "303.217, 311.815, 37.6228, 0.3772", "302.703, 310.836, 37.1347, 0.3408", "301.952, 310.002, 36.6033, 0.3128", "301.303, 309.089, 36.12, 0.2992", "300.8, 308.084, 35.625, 0.315", "300.331, 307.062, 35.0944, 0.3752", "299.862, 306.045, 34.5313, 0.337", "299.337, 305.058, 33.9548, 0.306", "298.757, 304.1, 33.3819, 0.2852", "298.174, 303.142, 32.8269, 0.2966", "297.329, 302.491, 32.4442, 0.305", "296.271, 302.081, 32.1773, 0.3814", "295.409, 301.363, 31.6235, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "321.414, 333.779, 58.8098, 0.3788", "321.504, 332.681, 58.0166, 0.3438", "321.824, 331.675, 57.0612, 0.3182", "322.188, 330.648, 56.261, 0.3096", "322.878, 329.81, 55.669, 0.334", "323.742, 329.084, 55.2042, 0.4112", "324.435, 328.201, 54.805, 0.3998", "325.061, 327.254, 54.4611, 0.4424", "325.675, 326.296, 54.1912, 0.44", "326.333, 325.366, 53.9364, 0.3726", "327.039, 324.473, 53.6589, 0.3258", "327.755, 323.588, 53.3683, 0.3172", "328.471, 322.705, 53.0802, 0.3792", "329.199, 321.828, 52.817, 0.3444", "329.947, 320.967, 52.6106, 0.3194", "330.699, 320.108, 52.4667, 0.3114", "331.455, 319.249, 52.3785, 0.3386", "332.254, 318.432, 52.3432, 0.4138", "333.117, 317.682, 52.3583, 0.4342", "333.993, 316.946, 52.4112, 0.362", "334.789, 316.128, 52.4871, 0.3048", "335.494, 315.229, 52.5784, 0.2836", "336.179, 314.314, 52.6876, 0.2912", "336.865, 313.399, 52.8156, 0.3064", "337.561, 312.495, 53.0048, 0.3282", "338.27, 311.605, 53.2882, 0.4008", "338.978, 310.718, 53.6449, 0.3792", "339.675, 309.826, 54.0414, 0.4096", "340.021, 308.755, 54.3659, 0.3536", "340.307, 307.652, 54.6193, 0.3374", "340.594, 306.548, 54.8125, 0.3398", "340.882, 305.442, 54.9598, 0.4158", "341.068, 304.317, 55.1149, 0.438", "341.091, 303.178, 55.3342, 0.369", "341.091, 302.039, 55.6046, 0.3176", "341.091, 300.901, 55.8905, 0.3084", "341.072, 299.759, 56.0328, 0.332", "341.053, 298.615, 56.0302, 0.4062", "341.033, 297.472, 55.9028, 0.3964", "341.012, 296.333, 55.6766, 0.4066", "340.991, 295.195, 55.3843, 0.518", "340.827, 294.071, 55.0494, 0.5038", "340.645, 292.951, 54.6991, 0.4062", "340.464, 291.831, 54.3354, 0.3408", "340.28, 290.713, 53.9591, 0.3448", "340.09, 289.597, 53.5562, 0.4312", "339.888, 288.485, 53.1154, 0.4364", "339.688, 287.375, 52.652, 0.512", "339.485, 286.265, 52.1783, 0.5608", "339.46, 285.139, 51.7082, 0.6372", "339.702, 284.035, 51.2834, 0.6184", "339.948, 282.928, 50.8925, 0.448", "340.194, 281.821, 50.5322, 0.3328", "340.469, 280.719, 50.202, 0.2884", "340.828, 279.639, 49.9145, 0.2996", "341.188, 278.558, 49.6518, 0.3232", "341.548, 277.477, 49.401, 0.3542", "341.905, 276.395, 49.1534, 0.4734", "342.145, 275.283, 48.8754, 0.3952", "342.38, 274.17, 48.5696, 0.329", "342.615, 273.059, 48.2378, 0.2814", "342.852, 271.949, 47.8862, 0.2872", "343.107, 270.844, 47.518, 0.2978", "343.372, 269.741, 47.136, 0.3184", "343.635, 268.64, 46.7446, 0.352", "343.898, 267.539, 46.3439, 0.4378", "344.1, 266.427, 45.9071, 0.481", "344.227, 265.309, 45.4191, 0.4384", "344.355, 264.19, 44.9114, 0.4976", "344.474, 263.072, 44.4116, 0.393", "344.445, 261.943, 43.986, 0.3248", "344.204, 260.83, 43.7055, 0.2736", "343.964, 259.714, 43.5383, 0.2728", "343.682, 258.621, 43.4753, 0.2712", "343.499, 257.533, 43.622, 0.2684", "343.675, 256.462, 43.0945, 0.2626", "344.517, 256.02, 41.6181, 0.2542", "345.298, 255.933, 39.6766, 0.2288", "346.246, 255.563, 38.4, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "321.414, 333.779, 58.8098, 0.3788", "321.634, 333.701, 59.4345, 0.4576", "322.65, 333.471, 60.377, 0.4628", "323.651, 332.978, 60.8549, 0.5376", "324.632, 332.425, 61.3318, 0.4926", "325.69, 332.031, 61.796, 0.3858", "326.753, 331.655, 62.2381, 0.302", "327.698, 331.042, 62.7164, 0.2782", "328.599, 330.384, 63.2162, 0.2814", "329.69, 330.107, 63.7087, 0.287", "330.776, 329.822, 64.1934, 0.2988", "331.767, 329.283, 64.6626, 0.3142", "332.751, 328.733, 65.1081, 0.3734", "333.787, 328.281, 65.5228, 0.3338", "334.676, 327.619, 65.9226, 0.3", "335.154, 326.598, 66.3723, 0.2746", "335.629, 325.625, 66.8198, 0.2746", "336.457, 324.862, 67.1294, 0.2746", "337.156, 323.962, 67.3994, 0.2746", "337.856, 323.065, 67.6514, 0.2748", "338.555, 322.165, 67.9134, 0.275", "339.242, 321.256, 68.1752, 0.2754", "339.918, 320.339, 68.441, 0.2762", "340.596, 319.43, 68.7929, 0.2776", "341.192, 318.467, 69.1653, 0.2802", "341.714, 317.457, 69.4848, 0.285", "341.902, 316.341, 69.5957, 0.2938", "342.121, 315.22, 69.505, 0.3112", "342.755, 314.279, 69.3244, 0.3382", "343.525, 313.433, 69.2205, 0.413", "344.301, 312.591, 69.2126, 0.4326", "345.083, 311.758, 69.307, 0.3592", "345.904, 310.966, 69.5195, 0.2996", "346.724, 310.176, 69.7995, 0.274", "347.543, 309.388, 70.098, 0.2736", "348.362, 308.594, 70.3175, 0.2728", "349.182, 307.799, 70.4659, 0.2712", "350.003, 307.003, 70.5558, 0.2684", "350.826, 306.207, 70.6006, 0.2626", "351.818, 305.64, 70.6157, 0.2542", "352.82, 305.086, 70.6168, 0.2288", "353.822, 304.534, 70.6168, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "311.71, 376.282, 71.108, 0.5812", "311.578, 376.806, 71.5417, 0.6642", "311.732, 377.819, 72.4564, 0.493", "311.883, 378.924, 72.9383, 0.3798", "311.733, 380.052, 73.0974, 0.323", "311.508, 381.173, 73.061, 0.3896", "311.119, 382.246, 72.9655, 0.365", "310.668, 383.297, 72.8896, 0.352", "310.026, 384.242, 72.9176, 0.3976", "309.27, 385.097, 73.103, 0.3736", "308.212, 385.505, 73.4028, 0.3992", "307.443, 385.456, 74.2403, 0.3344", "306.642, 386.228, 74.7116, 0.301", "305.871, 387.07, 74.8854, 0.2766", "305.259, 387.896, 75.3245, 0.2782", "304.802, 388.907, 75.11, 0.2814", "304.266, 389.898, 75.028, 0.287", "303.621, 390.734, 75.9433, 0.2988", "303.362, 391.543, 76.9577, 0.3142", "302.775, 392.105, 76.6662, 0.3736", "302.654, 393.215, 76.2516, 0.334", "302.059, 394.153, 76.5248, 0.3002", "301.395, 394.929, 77.0549, 0.2752", "300.807, 395.878, 77.2666, 0.2756", "300.466, 396.776, 77.3772, 0.2766", "300.162, 397.698, 77.499, 0.2782", "299.557, 398.376, 78.1374, 0.2814", "298.876, 399.194, 78.2908, 0.287", "298.022, 399.917, 78.279, 0.2988", "296.985, 400.164, 78.0968, 0.3142", "296.606, 401.226, 78.3101, 0.3734", "295.909, 401.991, 79.1868, 0.3338", "295.663, 403.069, 79.7989, 0.3", "295.064, 404.016, 79.7773, 0.2746", "294.231, 404.786, 79.861, 0.2746", "293.526, 405.494, 80.4902, 0.2746", "292.904, 406.229, 80.8962, 0.2746", "292.279, 407.122, 81.1552, 0.2746", "291.645, 408.056, 81.2087, 0.2746", "291.086, 409.025, 81.6057, 0.2746", "290.44, 409.754, 82.717, 0.2746", "290.395, 410.825, 83.6195, 0.2746", "289.478, 411.224, 84.1938, 0.2746", "288.414, 411.48, 83.7659, 0.2746", "287.652, 411.805, 83.8664, 0.2746", "287.083, 412.636, 84.4469, 0.2746", "286.111, 413.071, 84.7557, 0.2746", "286.05, 414.203, 84.8064, 0.2746", "285.763, 415.282, 84.6384, 0.2746", "285.319, 416.264, 84.4127, 0.2746", "284.661, 417.229, 84.4626, 0.2746", "284.06, 418.198, 84.5566, 0.2746", "283.236, 418.933, 84.4024, 0.2746", "282.257, 419.522, 84.3349, 0.2746", "281.215, 419.986, 84.3654, 0.2746", "280.151, 420.407, 84.4295, 0.2746", "279.072, 420.748, 84.4441, 0.2746", "278.016, 420.633, 84.2055, 0.2746", "277.628, 420.611, 84.3528, 0.2746", "276.529, 420.817, 84.5079, 0.2746", "275.393, 420.763, 84.4698, 0.2746", "274.323, 420.473, 84.8179, 0.2748", "273.354, 419.97, 85.3171, 0.275", "272.273, 419.77, 85.9141, 0.2752", "271.136, 419.668, 86.0222, 0.2758", "270.016, 419.532, 86.1423, 0.277", "268.892, 419.737, 86.2658, 0.2792", "267.766, 419.913, 86.3097, 0.2828", "266.654, 419.712, 86.4248, 0.291", "265.548, 419.654, 86.9266, 0.2994", "264.447, 419.791, 87.3891, 0.3474", "263.349, 420.091, 87.4723, 0.2796", "262.251, 419.921, 87.7254, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "311.71, 376.282, 71.108, 0.5812", "311.773, 376.106, 72.3884, 0.6864", "312.59, 375.602, 72.4844, 0.444", "313.33, 375.409, 73.9642, 0.3254", "314.275, 375.34, 75.1338, 0.2744", "315.214, 375.047, 76.4439, 0.2742", "315.368, 374.358, 78.503, 0.274", "315.57, 373.573, 80.3037, 0.2736", "315.57, 373.689, 83.0528, 0.2728", "316.003, 373.042, 84.6286, 0.2712", "316.987, 372.786, 85.6598, 0.2684", "318.004, 372.78, 86.8174, 0.2626", "318.582, 373.224, 88.7774, 0.2542", "319.481, 373.374, 90.2779, 0.2288", "320.605, 373.467, 90.5372, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "295.46, 375.1, 37.7742, 0.419", "295.264, 375.832, 36.7998, 0.3722", "294.435, 376.366, 35.665, 0.3668", "293.323, 376.525, 35.1322, 0.4188", "292.298, 376.441, 34.3946, 0.4436", "291.447, 377.12, 34.1132, 0.3794", "290.81, 378.023, 33.6582, 0.3382", "289.951, 378.669, 33.2324, 0.3412", "288.835, 378.892, 33.0974, 0.4182", "287.985, 379.624, 33.0347, 0.4426", "287.542, 380.648, 33.0198, 0.3774", "286.809, 381.466, 33.0907, 0.3346", "285.859, 382.106, 33.1397, 0.3334", "285.072, 382.898, 33.3416, 0.4088", "284.29, 383.701, 33.6918, 0.4016", "283.225, 384.098, 33.9746, 0.4158", "282.108, 384.26, 33.9598, 0.536", "280.965, 384.26, 33.8321, 0.5318", "279.823, 384.224, 33.6795, 0.4838", "278.768, 383.878, 33.3488, 0.3596", "277.704, 383.529, 32.8014, 0.3006", "276.719, 383.628, 32.4134, 0.2756", "276.301, 384.664, 32.4405, 0.2766", "275.568, 385.538, 32.6668, 0.2784", "274.763, 386.337, 32.9854, 0.2816", "273.839, 386.936, 33.3217, 0.2876", "272.807, 387.402, 33.136, 0.2988", "271.848, 388.012, 32.8306, 0.3202", "270.789, 388.382, 32.5077, 0.355", "269.656, 388.508, 32.3767, 0.4436", "268.613, 388.957, 32.3221, 0.492", "267.878, 389.819, 32.1754, 0.4584", "267.171, 390.701, 31.957, 0.5356", "266.323, 391.446, 31.8175, 0.459", "265.19, 391.587, 31.6582, 0.4678", "264.068, 391.742, 31.4824, 0.4402", "262.954, 392.004, 31.4317, 0.3732", "261.833, 392.199, 31.376, 0.3254", "260.69, 392.199, 31.3065, 0.324", "259.592, 392.105, 31.1402, 0.3556", "258.597, 391.718, 30.5908, 0.476", "257.599, 392.25, 30.5242, 0.4002", "256.934, 391.836, 30.5637, 0.338", "255.837, 391.588, 30.6813, 0.299", "254.698, 391.588, 30.9282, 0.3148" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "295.46, 375.1, 37.7742, 0.419", "295.137, 375.573, 37.3965, 0.4576", "294.337, 376.187, 38.2127, 0.4886", "293.771, 377.06, 38.1055, 0.5876", "292.751, 377.416, 37.835, 0.5748", "291.909, 377.813, 37.693, 0.5892", "290.794, 378.023, 37.8146, 0.4312", "289.732, 378.433, 38.0279, 0.3484", "288.702, 378.927, 38.213, 0.3182", "287.679, 379.432, 38.4238, 0.351", "286.708, 379.491, 38.9068, 0.4378", "285.727, 378.96, 39.4831, 0.4736", "284.623, 378.902, 39.6973, 0.4604", "283.543, 379.276, 39.7762, 0.3636", "282.492, 379.727, 39.9014, 0.3078", "281.441, 380.142, 40.2511, 0.289", "280.311, 380.21, 40.5373, 0.3024", "279.368, 380.831, 40.8489, 0.3208", "278.597, 381.637, 41.3865, 0.386", "277.591, 382.166, 41.662, 0.357", "276.592, 382.713, 41.8858, 0.3438", "275.649, 383.36, 41.9852, 0.3516", "274.72, 384.026, 42.0708, 0.4386", "273.805, 384.712, 42.1411, 0.475", "272.927, 385.442, 42.245, 0.4632", "272.089, 386.212, 42.497, 0.3688", "271.026, 386.551, 42.8792, 0.3174", "269.891, 386.551, 43.2163, 0.3078", "268.855, 387.004, 43.2774, 0.3308", "267.839, 387.528, 43.3227, 0.4054", "266.852, 388.103, 43.4311, 0.3878", "265.852, 388.657, 43.5576, 0.4266", "264.83, 389.168, 43.72, 0.3802", "263.79, 389.636, 43.8987, 0.4114", "262.728, 390.051, 44.0975, 0.3572", "261.732, 390.589, 44.3201, 0.3428", "260.811, 391.259, 44.5682, 0.3556", "259.879, 391.913, 44.8588, 0.4164", "258.943, 392.557, 45.1713, 0.5792", "258.154, 393.279, 45.768, 0.6374", "257.585, 394.269, 45.7733, 0.5554", "256.781, 395.059, 45.7442, 0.4088", "255.817, 395.623, 45.8962, 0.3396", "254.971, 396.373, 45.7968, 0.3734", "253.891, 396.692, 45.593, 0.3338", "252.806, 397.022, 45.4843, 0.3", "251.686, 396.974, 45.6128, 0.2746", "250.56, 396.773, 45.7506, 0.2746", "249.429, 396.655, 45.9486, 0.2746", "248.29, 396.626, 46.2232, 0.2746", "247.16, 396.677, 46.5811, 0.2746", "246.189, 397.145, 46.979, 0.2746", "245.232, 397.746, 47.14, 0.2746", "244.151, 398.0, 47.2917, 0.2746", "243.035, 398.141, 47.5672, 0.2746", "241.982, 398.583, 47.7212, 0.2746", "240.907, 398.957, 47.8954, 0.2746", "239.929, 399.433, 48.0847, 0.2746", "238.948, 399.815, 48.1379, 0.2748", "237.806, 399.801, 48.1348, 0.275", "236.704, 399.555, 48.1706, 0.2752", "235.566, 399.527, 48.2499, 0.2758", "234.422, 399.527, 48.3302, 0.2768", "233.283, 399.464, 48.5156, 0.2788", "232.148, 399.361, 48.7516, 0.2826", "231.036, 399.104, 48.9353, 0.2894", "229.921, 398.864, 49.1103, 0.3018", "228.795, 398.665, 49.2618, 0.327", "227.671, 398.466, 49.4133, 0.3616", "226.575, 398.159, 49.6941, 0.4858", "225.449, 398.189, 49.9195, 0.4238", "224.66, 399.002, 50.1234, 0.356", "223.961, 399.831, 50.8236, 0.4576" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "337.292, 380.016, 36.4095, 0.4444", "338.147, 380.856, 36.4448, 0.4858", "339.029, 381.519, 36.2659, 0.4832", "340.119, 381.771, 36.0198, 0.4064", "341.26, 381.771, 35.8137, 0.383", "341.173, 382.122, 35.5566, 0.4496", "341.9, 382.562, 34.6822, 0.4966", "342.771, 382.681, 33.8262, 0.498", "343.54, 381.946, 33.2396, 0.4588", "344.52, 381.516, 32.8054, 0.3604", "345.656, 381.413, 32.611, 0.302", "346.793, 381.327, 32.3946, 0.2784", "347.706, 381.931, 32.2146, 0.2816", "348.715, 382.43, 31.9586, 0.2876", "349.342, 383.203, 31.8366, 0.2984", "350.227, 383.925, 31.67, 0.321", "351.267, 384.209, 31.4969, 0.3502", "352.352, 383.937, 31.2463, 0.466", "353.378, 383.484, 30.856, 0.3814", "354.516, 383.383, 30.7681, 0.305", "355.65, 383.385, 30.4942, 0.2288", "355.865, 384.26, 29.3647, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "337.292, 380.016, 36.4095, 0.4444", "336.208, 380.305, 35.2422, 0.2288", "335.15, 380.509, 34.3059, 0.2828", "334.142, 380.65, 33.3757, 0.291", "334.095, 379.556, 32.5676, 0.2994", "333.852, 378.481, 31.8198, 0.3474", "333.455, 377.535, 30.8188, 0.2796", "332.789, 376.82, 29.3647, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "330.217, 348.537, 55.7228, 0.4092", "330.781, 347.577, 55.6598, 0.4916", "331.284, 346.552, 55.4907, 0.6058", "331.5, 345.431, 55.3132, 0.5476", "331.716, 344.31, 55.1326, 0.6052", "332.268, 343.312, 54.8895, 0.5966", "332.897, 342.366, 54.6249, 0.4546", "333.81, 341.681, 54.448, 0.3448", "334.708, 340.976, 54.3298, 0.3116", "335.423, 340.085, 54.1943, 0.3378", "336.161, 339.212, 54.1145, 0.4182", "336.951, 338.386, 54.1825, 0.4124", "337.865, 337.703, 54.3463, 0.4668", "338.837, 337.108, 54.5513, 0.4802", "339.746, 336.418, 54.7492, 0.4726", "340.669, 335.746, 54.908, 0.3872", "341.619, 335.108, 54.9884, 0.3464", "342.585, 334.496, 54.9679, 0.386", "343.557, 333.897, 54.8562, 0.3582", "344.438, 333.168, 54.7784, 0.3396", "345.259, 332.373, 54.7683, 0.3736", "346.094, 331.594, 54.7011, 0.3342", "346.727, 330.756, 54.5112, 0.3006", "346.794, 329.615, 54.3687, 0.2758", "346.935, 328.487, 54.2455, 0.277", "347.313, 327.414, 54.1363, 0.279", "347.977, 326.515, 54.0277, 0.283", "348.934, 325.896, 53.8838, 0.29", "349.967, 325.411, 53.7538, 0.3042", "351.02, 324.967, 53.6998, 0.3242", "352.039, 324.458, 53.7454, 0.3918", "352.969, 323.798, 53.9392, 0.3692", "353.865, 323.093, 54.1873, 0.36", "354.72, 322.344, 54.4037, 0.4122", "355.458, 321.479, 54.6364, 0.4016", "356.161, 320.583, 54.8724, 0.446", "356.923, 319.734, 55.0626, 0.4466", "357.77, 318.971, 55.1978, 0.3862", "358.701, 318.311, 55.2888, 0.3446", "359.701, 317.761, 55.3476, 0.3828", "360.786, 317.434, 55.4364, 0.3514", "361.735, 316.889, 55.5226, 0.3322", "362.453, 316.007, 55.4333, 0.3362", "363.242, 315.19, 55.2339, 0.3794", "364.119, 314.46, 55.0354, 0.5148", "365.119, 313.919, 54.9606, 0.4976", "366.072, 313.291, 54.8733, 0.3952", "366.645, 312.322, 54.749, 0.319", "367.001, 311.237, 54.7103, 0.311", "367.56, 310.242, 54.787, 0.3368", "368.249, 309.331, 54.8965, 0.4164", "369.041, 308.506, 54.9713, 0.4094", "369.843, 307.69, 54.9912, 0.46", "370.651, 306.881, 54.9189, 0.474", "371.609, 306.256, 54.8514, 0.43", "372.602, 305.688, 54.8307, 0.459", "373.692, 305.347, 54.9357, 0.4346", "374.805, 305.098, 55.1656, 0.5388", "375.921, 304.898, 55.4344, 0.4652", "376.826, 304.237, 55.7754, 0.4788", "377.318, 303.225, 56.2265, 0.4616", "377.66, 302.149, 56.6012, 0.4078", "378.238, 301.182, 56.8156, 0.4152", "379.082, 300.417, 57.0158, 0.365", "380.02, 299.773, 57.2799, 0.3526", "381.014, 299.229, 57.5828, 0.3976", "382.063, 298.793, 57.895, 0.3794", "383.043, 298.227, 58.1616, 0.3802", "383.868, 297.449, 58.3366, 0.4446", "384.526, 296.517, 58.459, 0.4858", "385.12, 295.539, 58.5374, 0.4844", "385.694, 294.55, 58.5754, 0.4026", "386.161, 293.516, 58.5696, 0.4056", "386.417, 292.403, 58.501, 0.3464", "386.688, 291.296, 58.4307, 0.3242", "387.109, 290.233, 58.4587, 0.3142", "387.589, 289.195, 58.5707, 0.3736", "388.069, 288.159, 58.7028, 0.3342", "388.518, 287.108, 58.8484, 0.3004", "388.915, 286.038, 59.0089, 0.2754", "389.468, 285.063, 59.1791, 0.2762", "390.382, 284.446, 59.3687, 0.2776", "391.31, 283.853, 59.6739, 0.2802", "392.036, 282.99, 60.1202, 0.285", "392.536, 281.996, 60.5797, 0.2938", "392.847, 280.91, 61.0226, 0.311", "393.035, 279.802, 61.4947, 0.3382", "393.61, 278.924, 62.02, 0.4126", "394.632, 278.541, 62.5562, 0.4322", "395.691, 278.186, 63.1011, 0.3584", "396.557, 277.494, 63.6149, 0.2982", "397.016, 276.48, 63.9988, 0.2712", "397.451, 275.431, 64.3264, 0.2684", "398.396, 274.84, 64.601, 0.2626", "399.44, 274.376, 64.6671, 0.2542", "400.569, 274.196, 64.5971, 0.2288", "401.665, 273.883, 64.3765, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "330.217, 348.537, 55.7228, 0.4092", "330.115, 347.607, 56.8968, 0.2288", "329.992, 346.52, 57.58, 0.3654", "329.895, 345.384, 57.7802, 0.494", "329.826, 344.242, 57.857, 0.4344", "329.727, 343.103, 57.8827, 0.3976", "329.51, 341.982, 57.902, 0.4288", "329.248, 340.868, 57.9317, 0.4616", "328.908, 339.778, 58.0073, 0.4152", "328.525, 338.702, 58.1496, 0.3928", "328.263, 337.593, 58.3293, 0.4988", "328.061, 336.47, 58.522, 0.4372", "327.949, 335.335, 58.7, 0.4324", "327.861, 334.196, 58.8056, 0.3488", "327.439, 333.155, 59.0142, 0.3288", "327.201, 332.051, 59.3404, 0.3226", "327.416, 330.932, 59.5804, 0.3892", "327.586, 329.804, 59.7769, 0.3628", "327.912, 328.709, 59.9438, 0.3558", "328.253, 327.619, 60.0863, 0.3672", "328.621, 326.538, 60.2059, 0.4986", "329.126, 325.513, 60.3352, 0.4368", "329.511, 324.438, 60.5438, 0.4318", "329.822, 323.345, 60.8432, 0.3476", "330.13, 322.253, 61.2116, 0.3266", "330.439, 321.165, 61.6277, 0.3186", "330.75, 320.08, 62.0746, 0.382", "331.107, 319.012, 62.5778, 0.3494", "331.473, 317.961, 63.1366, 0.33", "331.516, 316.832, 63.5807, 0.325", "331.46, 315.708, 63.936, 0.3934", "331.02, 314.662, 64.2852, 0.372", "330.516, 313.647, 64.6548, 0.3648", "329.982, 312.655, 65.037, 0.4226", "329.655, 311.564, 65.2638, 0.4146", "329.354, 310.461, 65.3769, 0.5008", "329.217, 309.363, 65.3828, 0.3988", "329.663, 308.317, 65.2568, 0.3358", "330.322, 307.387, 65.1955, 0.2938", "331.082, 306.535, 65.3265, 0.3098", "331.867, 305.712, 65.5939, 0.3418", "332.473, 304.782, 65.9212, 0.39", "332.755, 303.689, 66.2732, 0.534", "332.934, 302.569, 66.6389, 0.5344", "333.111, 301.447, 66.9928, 0.4576", "333.261, 300.322, 67.3291, 0.4626", "333.228, 299.196, 67.641, 0.4428", "333.047, 298.073, 67.9283, 0.5478", "332.865, 296.949, 68.2013, 0.5114", "332.629, 295.837, 68.4911, 0.4216", "332.33, 294.741, 68.8268, 0.3642", "332.017, 293.651, 69.1964, 0.4138", "331.706, 292.562, 69.5836, 0.4342", "331.38, 291.475, 69.9345, 0.3618", "331.036, 290.389, 70.2086, 0.3048", "330.689, 289.303, 70.4122, 0.2834", "330.343, 288.215, 70.5603, 0.2908", "330.122, 287.099, 70.6726, 0.306", "330.179, 285.967, 70.7658, 0.3272", "330.367, 284.839, 70.861, 0.399", "330.554, 283.712, 70.9758, 0.3758", "330.742, 282.585, 71.1206, 0.4034", "330.827, 281.452, 71.33, 0.3422", "330.745, 280.319, 71.6419, 0.3156", "330.606, 279.197, 72.0552, 0.3034", "330.465, 278.08, 72.55, 0.3288", "330.322, 276.968, 73.1133, 0.3706", "330.154, 275.869, 73.7601, 0.4752", "330.041, 274.773, 74.5052, 0.5374", "330.059, 273.684, 75.348, 0.6052", "330.369, 272.643, 76.1373, 0.5046", "330.875, 271.654, 76.799, 0.5", "331.606, 270.811, 77.3052, 0.5254", "331.686, 269.787, 77.8165, 0.4068", "331.591, 268.694, 78.5859, 0.305", "331.636, 267.566, 78.986, 0.2288", "332.507, 267.013, 79.0588, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "355.356, 363.6, 47.9161, 0.4606", "356.132, 362.521, 47.679, 0.364", "356.112, 361.6, 47.0708, 0.3086", "356.538, 360.632, 46.1129, 0.2904", "357.24, 359.797, 45.3004, 0.3052", "357.974, 358.963, 44.6499, 0.3262", "358.698, 358.104, 44.1311, 0.3956", "359.547, 357.368, 43.769, 0.3756", "360.484, 356.72, 43.5305, 0.3734", "361.388, 356.026, 43.3012, 0.4306", "362.332, 355.397, 43.0326, 0.4666", "363.335, 354.858, 42.7358, 0.4168", "364.297, 354.252, 42.5253, 0.4316", "365.231, 353.593, 42.427, 0.3966", "366.22, 353.025, 42.3088, 0.4066", "367.298, 352.668, 42.1924, 0.5182", "368.294, 352.136, 42.1532, 0.5038", "368.845, 351.175, 42.2024, 0.4064", "369.512, 350.255, 42.1893, 0.3412", "370.222, 349.357, 42.1834, 0.3454", "370.926, 348.457, 42.257, 0.4336", "371.792, 347.713, 42.3016, 0.4346", "372.748, 347.086, 42.2918, 0.5386", "373.853, 346.817, 42.3472, 0.465", "374.971, 346.579, 42.4721, 0.4784", "376.029, 346.149, 42.644, 0.461", "376.942, 345.469, 42.7927, 0.4064", "377.487, 344.468, 42.9251, 0.413", "378.102, 343.504, 43.0472, 0.36", "378.889, 342.676, 43.15, 0.349", "379.912, 342.168, 43.2494, 0.3624", "381.055, 342.125, 43.3544, 0.4526" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "355.356, 363.6, 47.9161, 0.4606", "356.014, 363.282, 47.0828, 0.2288", "357.022, 363.329, 45.9432, 0.5758", "357.931, 363.98, 45.3886, 0.637", "358.905, 364.161, 44.8224, 0.525", "359.73, 363.421, 44.2425, 0.4968", "360.543, 362.68, 43.7464, 0.4884", "361.546, 362.171, 43.2373, 0.4892", "362.522, 361.616, 42.7277, 0.4114", "363.451, 360.973, 42.2906, 0.4232", "364.475, 360.613, 41.9157, 0.3736", "365.589, 360.533, 41.4795, 0.3992", "366.728, 360.416, 41.424, 0.3346", "367.865, 360.295, 41.4414, 0.3014", "369.001, 360.164, 41.4686, 0.2772", "370.141, 360.06, 41.4711, 0.2796", "371.28, 360.075, 41.4361, 0.284", "372.415, 360.209, 41.349, 0.2918", "373.55, 360.245, 41.1838, 0.3076", "374.682, 360.125, 40.9097, 0.3304", "375.81, 360.115, 40.5616, 0.4048", "376.929, 360.284, 40.1705, 0.3864", "378.051, 360.397, 39.7656, 0.424", "379.184, 360.367, 39.3714, 0.3754", "380.314, 360.275, 39.0194, 0.4026", "381.445, 360.271, 38.7498, 0.3408", "382.582, 360.33, 38.6176, 0.3126", "383.624, 359.976, 38.533, 0.2988", "384.609, 359.399, 38.3928, 0.3144", "385.638, 359.471, 38.232, 0.374", "386.745, 359.613, 38.0411, 0.335", "387.885, 359.588, 37.8112, 0.302", "388.944, 359.243, 37.5018, 0.2782", "389.969, 358.761, 37.1328, 0.2812", "391.046, 358.414, 36.7581, 0.287", "392.145, 358.132, 36.3922, 0.2976", "393.267, 358.032, 36.0203, 0.318", "394.402, 358.008, 35.665, 0.3508", "395.54, 358.002, 35.399, 0.4372", "396.682, 358.002, 35.2204, 0.4724", "397.802, 357.808, 35.131, 0.4582", "398.883, 357.437, 35.1302, 0.3594", "400.005, 357.262, 35.0658, 0.3002", "401.141, 357.13, 34.9731, 0.2748", "402.203, 356.729, 34.8709, 0.2752", "403.109, 356.043, 34.7488, 0.2756", "404.128, 355.548, 34.5257, 0.2766", "405.254, 355.417, 34.2964, 0.2782", "406.395, 355.444, 34.1202, 0.2812", "407.536, 355.428, 33.9844, 0.287", "408.678, 355.36, 33.889, 0.2976", "409.801, 355.152, 33.8657, 0.3182", "410.929, 354.961, 33.8534, 0.3512", "412.007, 354.656, 33.6241, 0.4366", "412.616, 353.692, 33.425, 0.4776", "413.181, 352.707, 33.0924, 0.438", "413.404, 351.672, 32.879, 0.4672", "413.186, 350.554, 32.7586, 0.4812", "413.115, 349.414, 32.6855, 0.4742", "413.219, 348.282, 32.6393, 0.3902", "413.805, 347.422, 32.6351, 0.3522", "414.843, 346.965, 32.5601, 0.3966", "415.533, 346.092, 32.2692, 0.3788", "416.003, 345.051, 32.0958, 0.3728", "416.33, 344.0, 31.8396, 0.4604", "416.6, 342.898, 31.6868, 0.3728", "416.501, 341.812, 31.5736, 0.2796", "415.914, 340.853, 31.2472, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "348.537, 371.945, 55.1544, 0.2774", "348.79, 371.028, 55.1132, 0.2798", "349.247, 369.981, 55.1127, 0.2844", "350.066, 369.198, 55.1205, 0.2926", "351.036, 368.595, 55.1295, 0.309", "352.008, 367.992, 55.0942, 0.333", "352.924, 367.307, 55.0704, 0.4096", "353.836, 366.616, 54.9881, 0.3954", "354.703, 365.872, 54.9018, 0.4404", "355.395, 364.962, 54.9514, 0.4066", "356.203, 364.156, 55.0788, 0.4552", "357.137, 363.498, 55.2168, 0.4638" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "348.537, 371.945, 55.1544, 0.2774", "349.507, 372.311, 53.8642, 0.2288", "350.636, 372.415, 54.1598, 0.2996", "351.706, 372.669, 54.4043, 0.3232", "352.819, 372.434, 54.6062, 0.3542", "353.958, 372.38, 54.728, 0.4732", "355.094, 372.486, 54.742, 0.395", "356.208, 372.741, 54.6274, 0.3286", "357.309, 373.045, 54.4359, 0.2806", "358.384, 373.421, 54.227, 0.2858", "359.416, 373.885, 54.0165, 0.295", "360.336, 374.559, 53.7972, 0.3136", "361.137, 375.346, 53.5612, 0.3416", "361.688, 376.342, 53.2938, 0.4248", "362.116, 377.391, 53.0155, 0.4262", "362.378, 378.499, 52.752, 0.4862", "362.585, 379.615, 52.4709, 0.5466", "362.663, 380.747, 52.1192, 0.4476", "362.682, 381.875, 51.6877, 0.374", "362.521, 382.982, 51.1672, 0.3898", "362.348, 384.074, 50.6215, 0.3654", "362.622, 385.128, 50.0875, 0.353", "363.109, 386.106, 49.4522, 0.3994", "363.267, 387.182, 48.6038, 0.3766", "363.497, 388.224, 47.6678, 0.4048", "364.017, 389.156, 46.7191, 0.345", "364.744, 389.943, 45.7755, 0.3204", "365.57, 390.635, 44.8414, 0.3134", "366.46, 391.265, 43.9984, 0.3424", "367.402, 391.841, 43.2827, 0.4204", "368.373, 392.384, 42.6258, 0.4468", "369.257, 393.049, 41.9563, 0.3848", "369.484, 394.025, 41.0732, 0.3494", "369.121, 395.019, 40.0683, 0.3558", "368.328, 395.77, 39.256, 0.4762", "367.625, 396.475, 38.2614, 0.4006", "368.541, 396.851, 37.2448, 0.339", "369.554, 396.506, 36.2709, 0.2994", "370.435, 396.824, 35.4374, 0.3228", "371.1, 397.714, 34.8034, 0.3536", "371.781, 398.613, 34.3734, 0.4722", "372.53, 399.47, 34.1197, 0.3932", "373.306, 400.307, 33.964, 0.3252", "373.958, 401.233, 33.7184, 0.2742", "374.488, 402.228, 33.2744, 0.274", "374.798, 403.298, 32.6992, 0.2736", "375.34, 404.269, 32.1252, 0.2728", "376.053, 405.148, 31.7528, 0.2712", "376.763, 406.039, 31.4916, 0.2684", "377.345, 407.02, 31.3258, 0.2626", "377.991, 407.962, 31.2208, 0.2542", "378.86, 408.701, 31.1321, 0.2288", "379.681, 409.45, 30.4942, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "298.819, 336.934, 67.4237, 0.4698", "298.13, 336.106, 68.0254, 0.4858", "297.523, 335.145, 68.3528, 0.483", "297.059, 334.11, 68.6011, 0.4064", "296.661, 333.039, 68.7562, 0.383", "296.06, 332.082, 68.8545, 0.4484", "295.293, 331.235, 68.917, 0.5004", "294.552, 330.364, 68.9601, 0.4754", "293.858, 329.456, 68.9839, 0.5608", "293.102, 328.601, 69.0396, 0.5366", "292.287, 327.798, 69.1524, 0.463", "291.572, 326.912, 69.1888, 0.4666", "290.899, 325.986, 69.1589, 0.4796", "290.227, 325.062, 69.062, 0.4718", "289.561, 324.132, 68.9363, 0.3842", "288.919, 323.187, 68.8344, 0.3474", "288.29, 322.232, 68.791, 0.357", "287.662, 321.275, 68.8209, 0.4546", "287.036, 320.319, 68.9416, 0.476", "286.421, 319.361, 69.1802, 0.6038", "285.81, 318.404, 69.5372, 0.643", "285.204, 317.45, 69.9672, 0.53", "284.648, 316.469, 70.4217, 0.5358", "284.162, 315.45, 70.8574, 0.4176", "283.688, 314.422, 71.2594, 0.3656", "283.214, 313.391, 71.6195, 0.3744", "282.605, 312.447, 71.9233, 0.3358", "281.831, 311.608, 72.163, 0.3036", "281.052, 310.775, 72.3517, 0.2814", "280.279, 309.935, 72.4956, 0.2872", "279.54, 309.062, 72.5749, 0.2988", "278.837, 308.159, 72.5799, 0.3144", "278.149, 307.246, 72.5421, 0.374", "277.596, 306.256, 72.5136, 0.335", "277.176, 305.192, 72.5292, 0.302", "276.755, 304.128, 72.5836, 0.2784", "276.336, 303.064, 72.6706, 0.2816", "275.913, 302.001, 72.7667, 0.2876", "275.49, 300.94, 72.8473, 0.2984", "275.065, 299.878, 72.9092, 0.32", "274.641, 298.816, 72.9551, 0.3532", "274.134, 297.793, 72.9963, 0.448", "273.505, 296.839, 73.0433, 0.4626", "272.836, 295.912, 73.1024, 0.5852", "272.167, 294.985, 73.1769, 0.5768", "271.51, 294.049, 73.2648, 0.5618", "270.871, 293.101, 73.3636, 0.5318", "270.237, 292.15, 73.4748, 0.4874", "269.695, 291.15, 73.6305, 0.5778", "269.274, 290.091, 73.8601, 0.593", "268.874, 289.026, 74.1446, 0.4478", "268.475, 287.961, 74.4593, 0.3322", "267.848, 287.046, 74.741, 0.2874", "267.013, 286.269, 74.947, 0.2982", "266.168, 285.5, 75.0831, 0.3192", "265.322, 284.73, 75.1629, 0.3532", "264.559, 283.885, 75.206, 0.44", "263.871, 282.971, 75.2304, 0.4852", "263.185, 282.056, 75.2534, 0.446", "262.499, 281.14, 75.2853, 0.5114", "261.812, 280.225, 75.3306, 0.4198", "261.126, 279.31, 75.3945, 0.3694", "260.441, 278.395, 75.481, 0.3816", "259.755, 277.479, 75.5927, 0.349", "259.195, 276.495, 75.7758, 0.329", "258.748, 275.448, 76.0544, 0.3232", "258.309, 274.401, 76.3958, 0.39", "257.823, 273.376, 76.7606, 0.3656", "257.141, 272.483, 77.07, 0.3534", "256.348, 271.663, 77.2974, 0.4002", "255.552, 270.843, 77.4553, 0.3782", "254.757, 270.022, 77.5634, 0.4078", "253.962, 269.2, 77.6479, 0.3504", "253.167, 268.379, 77.7342, 0.3302", "252.371, 267.558, 77.8422, 0.3328", "251.616, 266.702, 77.9951, 0.3718", "251.022, 265.737, 78.2396, 0.507", "250.515, 264.722, 78.5781, 0.4522", "250.009, 263.709, 78.9782, 0.4616", "249.492, 262.702, 79.3848, 0.3974", "248.958, 261.701, 79.751, 0.4444", "248.42, 260.7, 80.0682, 0.4138", "247.881, 259.698, 80.3379, 0.4696", "247.404, 258.664, 80.5798, 0.485", "247.0, 257.598, 80.8116, 0.483", "246.615, 256.525, 81.0362, 0.3998", "246.232, 255.451, 81.2507, 0.4008", "245.753, 254.416, 81.4041, 0.3376", "245.171, 253.433, 81.4548, 0.3066", "244.562, 252.464, 81.4215, 0.287", "243.955, 251.496, 81.3406, 0.2976", "243.362, 250.517, 81.3271, 0.318", "242.777, 249.535, 81.4248, 0.3508", "242.195, 248.553, 81.6231, 0.4372", "241.691, 247.533, 81.8815, 0.4722", "241.281, 246.473, 82.154, 0.4582", "240.892, 245.402, 82.4205, 0.3594", "240.503, 244.331, 82.6678, 0.3", "240.09, 243.268, 82.9052, 0.2746", "239.626, 242.228, 83.1533, 0.2748", "239.149, 241.194, 83.4134, 0.2748", "238.672, 240.16, 83.6763, 0.2752", "238.236, 239.106, 83.9096, 0.2756", "237.856, 238.03, 84.082, 0.2766", "237.488, 236.948, 84.1968, 0.2782", "237.119, 235.865, 84.266, 0.2812", "236.74, 234.785, 84.3041, 0.287", "236.212, 233.775, 84.3254, 0.2976", "235.642, 232.783, 84.343, 0.3168", "235.071, 231.792, 84.366, 0.3548", "234.502, 230.8, 84.3982, 0.4146", "233.975, 229.784, 84.4441, 0.576", "233.464, 228.761, 84.5085, 0.6312", "232.953, 227.738, 84.5958, 0.5442", "232.443, 226.716, 84.7078, 0.3872", "232.012, 225.66, 84.8974, 0.3044", "231.629, 224.588, 85.1746, 0.283", "231.254, 223.516, 85.5112, 0.29", "230.88, 222.445, 85.8782, 0.304", "230.267, 221.494, 86.1795, 0.324", "229.586, 220.579, 86.401, 0.3916", "228.901, 219.665, 86.5508, 0.3688", "228.215, 218.751, 86.6496, 0.3594", "227.705, 217.732, 86.7224, 0.4112", "227.249, 216.683, 86.793, 0.3996", "226.796, 215.633, 86.8837, 0.4422", "226.343, 214.583, 87.0013, 0.4396", "225.866, 213.547, 87.1909, 0.372", "225.371, 212.522, 87.472, 0.3246", "224.875, 211.502, 87.8226, 0.3148", "224.38, 210.482, 88.2168, 0.3748", "223.963, 209.429, 88.5959, 0.3362", "223.566, 208.366, 88.9462, 0.3044", "223.17, 207.3, 89.266, 0.2828", "222.773, 206.234, 89.5583, 0.2896", "222.366, 205.172, 89.8453, 0.3036", "221.953, 204.111, 90.134, 0.3232", "221.539, 203.051, 90.4246, 0.39", "221.126, 201.992, 90.7116, 0.3656", "220.691, 200.937, 90.9476, 0.3536", "220.247, 199.885, 91.1338, 0.3992", "219.685, 198.892, 91.2848, 0.3838", "219.148, 197.883, 91.4178, 0.3818", "218.752, 196.813, 91.546, 0.4774", "218.486, 195.704, 91.7395, 0.4028", "218.465, 194.573, 92.1057, 0.343", "218.116, 193.501, 92.5459, 0.3084", "217.762, 192.419, 92.8057, 0.3316", "217.407, 191.335, 93.0348, 0.4072", "217.05, 190.251, 93.235, 0.3908", "216.695, 189.166, 93.4136, 0.4324", "216.311, 188.091, 93.5978, 0.3904", "215.865, 187.042, 93.8174, 0.4314", "215.388, 186.008, 94.0688, 0.389", "214.912, 184.973, 94.3368, 0.428", "214.452, 183.931, 94.596, 0.3874", "214.022, 182.875, 94.8184, 0.4018", "213.603, 181.812, 94.9934, 0.4498", "213.182, 180.75, 95.1219, 0.6654", "212.705, 179.713, 95.188, 0.6796", "212.111, 178.737, 95.1605, 0.5186", "211.465, 177.795, 95.0524, 0.442", "210.818, 176.853, 94.9052, 0.3678", "210.189, 175.899, 94.8307, 0.3574", "209.575, 174.935, 94.8984, 0.4076", "208.963, 173.971, 95.083, 0.3918", "208.378, 172.993, 95.3361, 0.4342", "207.846, 171.987, 95.5945, 0.3938", "207.337, 170.967, 95.8314, 0.4378", "206.827, 169.947, 96.0453, 0.4004", "206.317, 168.926, 96.262, 0.45", "205.809, 167.908, 96.5474, 0.4242", "205.302, 166.895, 96.9237, 0.4888", "204.797, 165.885, 97.3686, 0.5214", "204.334, 164.857, 97.8491, 0.5462", "203.923, 163.808, 98.3318, 0.5376", "203.527, 162.752, 98.7949, 0.5578", "203.13, 161.694, 99.223, 0.42", "202.717, 160.637, 99.5789, 0.328", "202.289, 159.582, 99.846, 0.2792", "201.858, 158.525, 100.04, 0.2834", "201.425, 157.468, 100.184, 0.2906", "200.939, 156.434, 100.295, 0.3056", "200.369, 155.443, 100.389, 0.3266", "199.77, 154.47, 100.486, 0.3976", "199.173, 153.496, 100.6, 0.3734", "198.624, 152.495, 100.757, 0.3988", "198.182, 151.446, 100.995, 0.334", "197.783, 150.382, 101.31, 0.3002", "197.386, 149.32, 101.679, 0.2748", "196.973, 148.265, 102.059, 0.275", "196.542, 147.214, 102.415, 0.2756", "196.102, 146.167, 102.743, 0.2764", "195.664, 145.119, 103.055, 0.278", "195.211, 144.077, 103.392, 0.2808", "194.729, 143.054, 103.815, 0.286", "194.239, 142.042, 104.327, 0.296", "193.749, 141.035, 104.901, 0.3138", "193.217, 140.05, 105.471, 0.3492", "192.656, 139.077, 106.008, 0.4046", "192.089, 138.105, 106.508, 0.5562", "191.519, 137.131, 106.97, 0.5998", "190.91, 136.182, 107.421, 0.4604", "190.283, 135.241, 107.867, 0.3568", "189.657, 134.301, 108.309, 0.3278", "189.018, 133.366, 108.721, 0.3984", "188.36, 132.443, 109.066, 0.3822", "187.694, 131.52, 109.354, 0.379", "187.027, 130.597, 109.604, 0.4722", "186.361, 129.672, 109.863, 0.3932", "185.697, 128.749, 110.177, 0.3254", "185.036, 127.828, 110.551, 0.2746", "184.376, 126.91, 110.97, 0.2746", "183.75, 125.968, 111.385, 0.2746", "183.139, 125.013, 111.778, 0.2748", "182.53, 124.058, 112.148, 0.2748", "181.925, 123.098, 112.503, 0.2752", "181.417, 122.085, 112.866, 0.2756", "180.942, 121.056, 113.251, 0.2766", "180.468, 120.029, 113.661, 0.2782", "180.005, 118.999, 114.101, 0.2814", "179.587, 117.952, 114.588, 0.2872", "179.184, 116.904, 115.116, 0.299", "178.782, 115.857, 115.669, 0.3146", "178.268, 114.865, 116.246, 0.3744", "177.553, 114.011, 116.831, 0.3356", "176.793, 113.191, 117.413, 0.3032", "176.031, 112.37, 117.984, 0.2804", "175.436, 111.423, 118.521, 0.2854", "174.904, 110.43, 119.015, 0.2944", "174.376, 109.432, 119.465, 0.3124", "173.873, 108.418, 119.859, 0.3404", "173.49, 107.347, 120.121, 0.4168", "173.13, 106.263, 120.285, 0.44", "172.768, 105.179, 120.399, 0.3726", "172.412, 104.093, 120.545, 0.3244", "172.081, 103.009, 120.902, 0.322", "171.756, 101.936, 121.46, 0.3518", "171.438, 100.876, 122.165, 0.4688", "171.205, 99.7904, 122.845, 0.387", "170.982, 98.6988, 123.48, 0.3136", "170.757, 97.6014, 124.047, 0.2542", "170.536, 96.4973, 124.536, 0.2288", "170.494, 95.3962, 125.288, 0.2288" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "298.819, 336.934, 67.4237, 0.4698", "298.124, 337.142, 66.8951, 0.2288", "297.085, 337.418, 65.9876, 0.2884", "295.993, 337.339, 65.5564, 0.3012", "294.938, 336.919, 65.3167, 0.3188", "293.879, 336.493, 65.1468, 0.3822", "292.81, 336.092, 64.9692, 0.35", "291.742, 335.692, 64.7626, 0.331", "290.646, 335.381, 64.563, 0.3268", "289.536, 335.114, 64.3616, 0.398", "288.439, 334.804, 64.1497, 0.3742", "287.353, 334.454, 63.9293, 0.4002", "286.24, 334.236, 63.6891, 0.3364", "285.111, 334.085, 63.4228, 0.3046", "284.005, 333.823, 63.1588, 0.2832", "282.911, 333.505, 62.9079, 0.2906", "281.837, 333.128, 62.6301, 0.3052", "280.783, 332.706, 62.3045, 0.326", "279.703, 332.363, 61.9368, 0.3966", "278.609, 332.075, 61.5387, 0.3716", "277.69, 331.456, 61.1727, 0.3954", "276.796, 330.754, 60.8661, 0.3276", "276.245, 329.799, 60.5198, 0.2882", "276.043, 328.687, 60.1829, 0.2542", "275.634, 327.631, 59.859, 0.2288", "275.257, 326.552, 59.859, 0.2288" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "254.698, 391.588, 30.9282, 0.3148", "254.264, 391.631, 31.339, 0.3746", "254.098, 392.64, 32.2454, 0.3362", "253.29, 393.438, 32.254, 0.3042", "252.49, 394.21, 32.349, 0.2822", "251.387, 394.336, 32.695, 0.289", "250.247, 394.336, 32.9246, 0.3008", "249.191, 394.615, 33.103, 0.3254", "248.937, 395.66, 32.4103, 0.3582", "248.974, 396.627, 33.0417, 0.4808", "248.257, 397.049, 33.661, 0.4088", "247.15, 396.778, 33.8066, 0.3554", "246.01, 396.778, 33.8808, 0.325", "244.887, 396.621, 33.5664, 0.3934", "243.745, 396.586, 33.423, 0.3716", "242.812, 396.037, 33.3172, 0.3658", "241.798, 395.548, 33.1808, 0.4168", "240.727, 395.147, 33.0747, 0.44", "239.644, 394.892, 32.8555, 0.3724", "238.625, 395.401, 32.6178, 0.3254", "237.855, 396.187, 32.6421, 0.3164", "236.823, 396.624, 32.8006, 0.3776", "236.179, 395.877, 33.598, 0.3418", "235.257, 395.303, 33.7394, 0.3144", "234.398, 395.905, 33.4849, 0.3022", "234.014, 396.914, 32.6967, 0.3206", "233.423, 397.849, 32.1824, 0.3856", "232.378, 398.27, 31.696, 0.3564", "231.322, 398.692, 31.3779, 0.3426", "230.246, 399.075, 31.3944, 0.3494", "229.167, 399.453, 31.4678, 0.4334", "228.228, 400.096, 31.6604, 0.4716", "227.298, 400.758, 31.8354, 0.4272", "226.369, 401.425, 31.9318, 0.4462", "225.562, 402.216, 32.0334, 0.4472", "224.882, 403.134, 32.1409, 0.3872", "224.28, 404.078, 32.6645, 0.3464", "223.285, 404.41, 32.9778, 0.386", "222.428, 404.87, 34.3036, 0.3574", "221.427, 404.759, 34.1317, 0.3432", "220.663, 404.637, 32.7855, 0.3564", "220.257, 405.658, 32.1678, 0.4176", "219.696, 406.638, 31.9281, 0.5814", "218.804, 407.314, 31.8584, 0.6414", "217.702, 407.313, 31.9169, 0.5628", "216.642, 407.428, 32.0625, 0.4228", "215.637, 407.957, 32.2207, 0.3648", "214.696, 408.557, 32.4047, 0.4224", "214.009, 409.472, 32.4212, 0.414", "213.299, 410.36, 32.4363, 0.4996", "212.307, 410.931, 32.4355, 0.3968", "211.314, 411.498, 32.4318, 0.3322", "210.281, 411.986, 32.3173, 0.287", "209.246, 412.464, 32.1317, 0.2988", "208.146, 412.656, 31.8858, 0.314", "207.003, 412.656, 31.8699, 0.3734", "205.886, 412.591, 32.3333, 0.3338", "204.855, 412.448, 32.6575, 0.2998", "204.954, 413.47, 33.36, 0.2742", "205.064, 413.828, 31.1718, 0.274", "204.213, 414.381, 30.063, 0.2736", "203.354, 414.946, 30.1218, 0.2728", "202.337, 415.218, 31.047, 0.2712", "201.257, 415.572, 31.0881, 0.2684", "200.63, 416.497, 30.6715, 0.2626", "199.589, 416.777, 30.1249, 0.2542", "198.503, 416.736, 30.7345, 0.2288", "198.771, 416.32, 32.753, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "254.698, 391.588, 30.9282, 0.3148", "253.485, 391.497, 29.9964, 0.2288", "252.409, 391.328, 29.484, 0.2758", "251.372, 390.888, 29.9715, 0.2766", "250.343, 390.428, 30.4324, 0.2786", "249.329, 389.921, 30.8249, 0.282", "248.683, 389.445, 32.5802, 0.288", "247.659, 389.163, 33.3519, 0.3006", "247.319, 388.204, 32.6575, 0.3176", "247.102, 387.496, 30.7031, 0.38", "246.228, 387.466, 29.0427, 0.3458", "245.097, 387.449, 28.9148, 0.3232", "244.571, 386.64, 29.8724, 0.3122", "244.602, 385.56, 30.7278, 0.37", "245.131, 384.584, 31.1542, 0.3276", "245.952, 383.866, 31.8564, 0.2882", "246.253, 383.002, 32.5293, 0.2542", "245.955, 381.914, 32.8798, 0.2288", "246.404, 381.054, 32.753, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "381.055, 342.125, 43.3544, 0.4526", "381.618, 341.988, 43.5702, 0.5316", "382.668, 341.56, 43.8623, 0.4188", "383.635, 340.96, 44.0994, 0.3258", "384.599, 340.349, 44.2915, 0.2752", "385.497, 339.648, 44.4906, 0.2756", "386.328, 338.866, 44.709, 0.2766", "387.211, 338.145, 44.8521, 0.2782", "387.934, 337.265, 44.9837, 0.2814", "388.781, 336.508, 45.2318, 0.287", "389.749, 335.92, 45.6154, 0.2988", "390.745, 335.366, 45.8536, 0.3142", "391.742, 334.81, 46.0242, 0.3734", "392.729, 334.236, 46.1936, 0.3338", "393.676, 333.616, 46.3271, 0.3", "394.24, 332.626, 46.4204, 0.2746", "394.591, 331.539, 46.5018, 0.2746", "395.103, 330.518, 46.625, 0.2746", "395.62, 329.5, 46.7984, 0.2746", "396.191, 328.51, 46.9543, 0.2746", "396.797, 327.542, 47.0856, 0.2746", "397.474, 326.62, 47.2027, 0.2746", "398.169, 325.714, 47.3452, 0.2746", "398.901, 324.843, 47.5065, 0.2748", "399.826, 324.171, 47.6157, 0.2748", "400.805, 323.585, 47.703, 0.2752", "401.83, 323.081, 47.8094, 0.2756", "402.799, 322.475, 47.9091, 0.2766", "403.707, 321.782, 47.9651, 0.2784", "404.701, 321.239, 47.9041, 0.2818", "405.79, 320.913, 47.8128, 0.2876", "406.759, 320.325, 47.7476, 0.3", "407.617, 319.571, 47.7582, 0.3162", "408.557, 318.92, 47.8038, 0.3774", "409.577, 318.447, 47.7579, 0.3414", "410.706, 318.307, 47.7327, 0.314", "411.839, 318.199, 47.7478, 0.3002", "412.927, 317.862, 47.8178, 0.323", "413.991, 317.444, 47.9055, 0.3602", "415.083, 317.112, 47.9394, 0.4534", "416.145, 316.712, 47.7716, 0.5092", "417.027, 316.005, 47.5983, 0.4928", "417.824, 315.187, 47.6392, 0.5882", "418.148, 314.126, 47.885, 0.6122", "418.611, 313.091, 48.1513, 0.483", "419.171, 312.099, 48.4033, 0.3996", "419.852, 311.187, 48.6534, 0.4028", "420.629, 310.353, 48.8634, 0.5578", "421.536, 309.663, 49.0056, 0.579", "422.413, 308.93, 49.1308, 0.5376", "423.216, 308.119, 49.2906, 0.6234", "423.797, 307.14, 49.4446, 0.6808", "424.208, 306.074, 49.5569, 0.5944", "424.52, 304.974, 49.6362, 0.6828", "424.714, 303.848, 49.6902, 0.555", "424.747, 302.705, 49.7238, 0.5914", "424.326, 301.647, 49.7431, 0.4746", "424.225, 300.51, 49.7633, 0.4676", "424.534, 299.41, 49.7913, 0.5798", "424.891, 298.322, 49.8308, 0.6384", "425.141, 297.207, 49.8842, 0.5578", "425.354, 296.083, 49.9537, 0.4118", "425.704, 294.995, 50.0637, 0.3522", "426.249, 293.992, 50.2398, 0.361", "426.973, 293.11, 50.4501, 0.486", "427.835, 292.365, 50.6649, 0.4182", "428.826, 291.8, 50.8693, 0.3738", "429.873, 291.346, 51.0566, 0.3536", "430.908, 290.863, 51.242, 0.4724", "431.914, 290.339, 51.4626, 0.3932", "432.879, 289.948, 51.9747, 0.3256", "433.928, 289.618, 52.6201, 0.2748", "434.672, 289.949, 54.0313, 0.2752", "435.522, 289.451, 55.2513, 0.2756", "436.009, 288.694, 56.5118, 0.2766", "436.979, 288.161, 57.1838, 0.2782", "438.023, 287.721, 57.4367, 0.2814", "439.042, 287.213, 57.3709, 0.287", "439.773, 286.483, 56.915, 0.2988", "439.983, 285.543, 55.7239, 0.314", "439.983, 284.435, 55.0362, 0.3734", "439.323, 283.758, 53.7303, 0.3338", "439.22, 282.712, 52.7638, 0.2998", "438.987, 281.633, 52.3065, 0.2744", "438.538, 280.583, 52.1366, 0.2742", "439.145, 279.817, 52.4796, 0.274", "439.211, 279.155, 53.2787, 0.2736", "438.817, 278.177, 54.0621, 0.2728", "438.457, 277.111, 54.4712, 0.2712", "437.478, 276.596, 54.6552, 0.2684", "436.537, 275.961, 54.4359, 0.2626", "435.58, 275.35, 54.1713, 0.2542", "434.535, 274.897, 53.9549, 0.2288", "433.725, 274.34, 53.0824, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "381.055, 342.125, 43.3544, 0.4526", "382.013, 342.125, 42.8574, 0.2288", "383.152, 342.118, 42.6199, 0.3178", "384.288, 342.039, 42.5037, 0.3802", "385.287, 341.614, 42.3394, 0.3464", "385.899, 340.657, 42.084, 0.3242", "386.499, 339.741, 41.5733, 0.3142", "387.559, 339.414, 41.0127, 0.3734", "388.667, 339.25, 40.458, 0.3338", "389.615, 338.659, 39.9302, 0.3", "390.444, 337.891, 39.5147, 0.2746", "391.523, 337.608, 39.067, 0.2746", "392.598, 337.926, 38.6632, 0.2746", "393.684, 337.594, 38.3527, 0.2746", "394.654, 337.002, 38.0772, 0.2746", "395.508, 336.255, 37.7423, 0.2746", "396.413, 335.579, 37.4413, 0.2746", "397.069, 334.665, 37.1269, 0.2746", "397.411, 333.601, 36.573, 0.2746", "397.47, 332.512, 35.882, 0.2746", "397.31, 331.416, 35.1798, 0.2746", "397.796, 330.563, 34.5593, 0.2746", "398.549, 329.736, 34.0788, 0.2746", "398.829, 328.68, 33.7327, 0.2746", "398.897, 327.544, 33.4664, 0.2746", "398.943, 326.407, 33.182, 0.2746", "399.09, 325.284, 32.8443, 0.2746", "399.285, 324.167, 32.466, 0.2746", "399.248, 323.043, 32.0908, 0.2744", "399.069, 321.922, 31.7472, 0.2744", "398.944, 320.794, 31.4174, 0.2742", "398.916, 319.659, 31.0825, 0.274", "398.932, 318.524, 30.7457, 0.2736", "399.188, 317.423, 30.4592, 0.2728", "399.66, 316.392, 30.1762, 0.2712", "400.296, 315.461, 29.7382, 0.2684", "401.208, 314.791, 29.4389, 0.2626", "402.222, 314.266, 29.3241, 0.2542", "403.201, 313.673, 29.2897, 0.2288", "403.954, 312.813, 29.3647, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "357.137, 363.498, 55.2168, 0.4638", "357.686, 363.167, 55.2499, 0.4174", "358.58, 362.464, 55.2765, 0.4046", "359.406, 361.673, 55.3806, 0.4836", "360.206, 360.86, 55.5786, 0.5898", "361.018, 360.059, 55.8068, 0.523", "361.839, 359.266, 56.016, 0.5352", "362.658, 358.472, 56.1781, 0.5852", "363.48, 357.676, 56.2808, 0.5448", "364.301, 356.881, 56.3181, 0.43", "365.145, 356.108, 56.296, 0.4094", "366.003, 355.352, 56.2327, 0.3532", "366.784, 354.521, 56.1302, 0.3368", "367.52, 353.647, 56.0064, 0.3384", "368.204, 352.731, 55.981, 0.4134", "368.82, 351.767, 56.0515, 0.4334", "369.262, 350.717, 56.1291, 0.3606", "369.701, 349.661, 56.1994, 0.3026", "370.284, 348.681, 56.2766, 0.2792", "370.815, 347.67, 56.3718, 0.2834", "371.253, 346.615, 56.4878, 0.2906", "371.786, 345.606, 56.6216, 0.3054", "372.449, 344.677, 56.7675, 0.3266", "373.098, 343.74, 56.9923, 0.3964", "373.748, 342.806, 57.2925, 0.3774", "374.707, 342.221, 57.561, 0.3762", "375.807, 341.945, 57.8026, 0.4372", "376.698, 341.262, 58.0885, 0.4722", "377.495, 340.452, 58.3878, 0.4582", "378.073, 339.474, 58.6466, 0.3594", "378.56, 338.443, 58.8633, 0.3", "378.987, 337.385, 59.078, 0.2746", "379.379, 336.315, 59.3043, 0.2746", "379.849, 335.278, 59.563, 0.2746", "380.383, 334.275, 59.8744, 0.2746", "380.586, 333.164, 60.237, 0.2746", "380.597, 332.032, 60.6259, 0.2746", "380.628, 330.902, 61.0518, 0.2746", "380.849, 329.8, 61.57, 0.2746", "381.116, 328.714, 62.1468, 0.2746", "381.543, 327.681, 62.7357, 0.2746", "381.982, 326.654, 63.3489, 0.2746", "382.429, 325.636, 64.0083, 0.2746" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "357.137, 363.498, 55.2168, 0.4638", "358.556, 363.426, 55.3465, 0.2288", "359.699, 363.368, 55.2919, 0.2988", "360.841, 363.31, 55.2339, 0.3142", "361.982, 363.253, 55.1628, 0.3734", "363.125, 363.202, 55.0782, 0.334", "364.262, 363.311, 54.9632, 0.3", "365.397, 363.437, 54.8257, 0.2746", "366.522, 363.613, 54.5454, 0.2748", "367.589, 363.233, 54.196, 0.2748", "368.638, 362.81, 54.0613, 0.275", "369.775, 362.693, 54.0198, 0.2754", "370.884, 362.436, 53.8896, 0.2762", "371.956, 362.051, 53.6183, 0.2776", "373.021, 361.648, 53.375, 0.2804", "374.076, 361.213, 53.1597, 0.2854", "375.147, 361.116, 52.964, 0.2944", "376.227, 361.483, 52.7492, 0.3122", "377.277, 361.465, 52.5179, 0.3402", "378.305, 360.966, 52.3592, 0.4166", "379.339, 360.481, 52.2788, 0.4396", "380.405, 360.068, 52.2427, 0.3718", "381.488, 359.701, 52.2225, 0.3242", "382.608, 359.539, 52.2304, 0.3142", "383.753, 359.528, 52.2634, 0.3734", "384.897, 359.534, 52.3099, 0.3338", "386.039, 359.555, 52.3827, 0.3", "387.184, 359.588, 52.449, 0.2746", "388.326, 359.63, 52.4516, 0.2746", "389.469, 359.644, 52.3916, 0.2746", "390.606, 359.547, 52.318, 0.2746", "391.695, 359.222, 52.32, 0.2746", "392.748, 358.778, 52.4213, 0.2746", "393.789, 358.305, 52.4916, 0.2746", "394.836, 357.843, 52.4972, 0.2746", "395.929, 357.519, 52.5204, 0.2746", "397.03, 357.208, 52.551, 0.2746", "398.057, 356.719, 52.4672, 0.2746", "398.965, 356.031, 52.3158, 0.2746", "399.717, 355.174, 52.2301, 0.2746", "400.678, 354.582, 52.1416, 0.2748", "401.799, 354.49, 52.0453, 0.275", "402.931, 354.338, 51.9658, 0.2752", "404.021, 353.999, 51.9114, 0.276", "405.108, 353.644, 51.8613, 0.277", "406.206, 353.324, 51.8011, 0.2792", "407.307, 353.016, 51.7325, 0.2832", "408.423, 353.169, 51.6471, 0.2906", "409.543, 353.394, 51.5332, 0.304", "410.679, 353.486, 51.3369, 0.3298", "411.816, 353.551, 51.0706, 0.374", "412.953, 353.558, 50.7688, 0.4738", "414.09, 353.538, 50.4543, 0.572", "415.219, 353.413, 50.16, 0.4894", "416.311, 353.088, 49.938, 0.4768", "417.402, 352.749, 49.7784, 0.4576", "418.504, 352.449, 49.6348, 0.4012", "419.605, 352.146, 49.4936, 0.3982", "420.677, 351.747, 49.4799, 0.356", "421.817, 351.742, 49.6941, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "382.429, 325.636, 64.0083, 0.2746", "382.491, 325.325, 64.6083, 0.2746", "382.708, 324.224, 65.1476, 0.2746", "382.925, 323.123, 65.683, 0.2746", "383.13, 322.019, 66.2141, 0.2746", "383.24, 320.898, 66.7038, 0.2746", "383.296, 319.77, 67.1544, 0.2746", "383.281, 318.645, 67.6217, 0.2746", "383.033, 317.554, 68.1971, 0.2746", "382.801, 316.461, 68.8002, 0.2746", "382.611, 315.357, 69.3683, 0.2748", "382.503, 314.243, 69.9154, 0.275", "382.53, 313.121, 70.4281, 0.2752", "382.388, 312.004, 70.8711, 0.2758", "382.06, 310.918, 71.2135, 0.2768", "381.703, 309.836, 71.4692, 0.2788", "381.311, 308.763, 71.6363, 0.2826", "380.935, 307.683, 71.673, 0.2892", "380.509, 306.624, 71.5428, 0.3026", "380.19, 305.543, 71.4487, 0.3214", "380.141, 304.404, 71.5736, 0.387", "380.139, 303.271, 71.9734, 0.3588", "380.113, 302.148, 72.4886, 0.3482", "379.926, 301.044, 72.9946, 0.3534", "379.611, 299.958, 73.4126, 0.472", "379.208, 298.896, 73.7078, 0.3926", "378.762, 297.846, 73.9085, 0.3244", "378.316, 296.796, 74.1146, 0.2728", "377.882, 295.748, 74.4638, 0.2712", "377.46, 294.709, 75.0086, 0.2684", "377.053, 293.664, 75.5639, 0.2626", "376.648, 292.616, 76.0925, 0.2542", "376.49, 291.511, 76.606, 0.2288", "376.474, 290.371, 76.8001, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "382.429, 325.636, 64.0083, 0.2746", "382.367, 325.144, 64.3622, 0.2288", "382.225, 324.012, 64.4876, 0.2746", "382.083, 322.877, 64.535, 0.2746", "381.964, 321.739, 64.5971, 0.2746", "381.845, 320.606, 64.6803, 0.2748", "380.807, 320.139, 64.806, 0.275", "379.672, 320.075, 65.0356, 0.2752", "378.679, 319.576, 65.2778, 0.2758", "378.169, 318.565, 65.5612, 0.2768", "377.811, 317.483, 65.784, 0.2788", "377.402, 316.417, 65.9182, 0.2822", "377.106, 315.318, 66.08, 0.2886", "376.915, 314.194, 66.2735, 0.3018", "376.599, 313.101, 66.4448, 0.3198", "376.152, 312.05, 66.575, 0.384", "375.685, 311.008, 66.7523, 0.3532", "375.178, 309.99, 67.0177, 0.3368", "374.607, 309.009, 67.3795, 0.3386", "374.077, 308.015, 67.8068, 0.4136", "373.641, 306.973, 68.2528, 0.4338", "373.09, 305.996, 68.6451, 0.3612", "372.418, 305.078, 68.9422, 0.3034", "371.998, 304.048, 69.2832, 0.2812", "371.878, 302.931, 69.7637, 0.2864", "371.688, 301.827, 70.2946, 0.2978", "371.428, 300.736, 70.8403, 0.3122", "371.035, 299.686, 71.3524, 0.37", "370.516, 298.689, 71.8651, 0.3276", "370.147, 297.652, 72.5469, 0.2882", "370.457, 296.609, 73.2441, 0.2542", "370.52, 295.491, 73.7825, 0.2288", "370.979, 294.493, 74.5413, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_302",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_303",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_23", "dend_6", "dend_5", "dend_0", "apic_6", "apic_1", "dend_29", "dend_24", "dend_10", "dend_7", "dend_2", "dend_1", "apic_10", "apic_7", "apic_3", "apic_2", "dend_33", "dend_30", "dend_26", "dend_25", "dend_18", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "apic_12", "apic_11", "apic_9", "apic_8", "apic_5", "apic_4", "dend_35", "dend_34", "dend_32", "dend_31", "dend_28", "dend_27", "dend_20", "dend_19", "dend_13", "dend_12", "apic_14", "apic_13", "dend_37", "dend_36", "dend_22", "dend_21", "dend_15", "dend_14", "dend_17", "dend_16" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_6", "dend_5", "dend_0", "dend_29", "dend_24", "dend_10", "dend_7", "dend_2", "dend_1", "dend_33", "dend_30", "dend_26", "dend_25", "dend_18", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_35", "dend_34", "dend_32", "dend_31", "dend_28", "dend_27", "dend_20", "dend_19", "dend_13", "dend_12", "dend_37", "dend_36", "dend_22", "dend_21", "dend_15", "dend_14", "dend_17", "dend_16" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_6", "apic_1", "apic_10", "apic_7", "apic_3", "apic_2", "apic_12", "apic_11", "apic_9", "apic_8", "apic_5", "apic_4", "apic_14", "apic_13" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12201",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "3.3757515"
  }, {
    "group" : "apic",
    "value" : "3.3757515"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "54.52297"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.0980417E-8",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.092919886",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.8138032E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.014500093",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.11935425",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.029082272",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.00707228",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "8.3836087E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "3.502087E-7",
    "erev" : "-92.01492"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "7.818234E-4",
    "erev" : "-92.01492"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.5281044E-7",
    "erev" : "-92.01492"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.330924E-4",
    "erev" : "-92.01492"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "3.0387286E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.6346548E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_480633088",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_480633088

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_6, id: apic_6, parent: apic_0
create apic_6
public apic_6
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_302, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_302
// Group: {name=ModelViewParmSubset_303, groups=[], sections=[apic_0, dend_23, dend_6, dend_5, dend_0, apic_6, apic_1, dend_29, dend_24, dend_10, dend_7, dend_2, dend_1, apic_10, apic_7, apic_3, apic_2, dend_33, dend_30, dend_26, dend_25, dend_18, dend_11, dend_9, dend_8, dend_4, dend_3, apic_12, apic_11, apic_9, apic_8, apic_5, apic_4, dend_35, dend_34, dend_32, dend_31, dend_28, dend_27, dend_20, dend_19, dend_13, dend_12, apic_14, apic_13, dend_37, dend_36, dend_22, dend_21, dend_15, dend_14, dend_17, dend_16]}
objref ModelViewParmSubset_303
// Group: {name=dend, groups=[], sections=[dend_23, dend_6, dend_5, dend_0, dend_29, dend_24, dend_10, dend_7, dend_2, dend_1, dend_33, dend_30, dend_26, dend_25, dend_18, dend_11, dend_9, dend_8, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_28, dend_27, dend_20, dend_19, dend_13, dend_12, dend_37, dend_36, dend_22, dend_21, dend_15, dend_14, dend_17, dend_16]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_6, apic_1, apic_10, apic_7, apic_3, apic_2, apic_12, apic_11, apic_9, apic_8, apic_5, apic_4, apic_14, apic_13]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_12201, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_12201
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_480633088
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.4999609771325984)
    connect apic_0(0), soma_0(0.4999609771325984)
    connect dend_23(0), soma_0(0.4999609771325984)
    connect dend_6(0), soma_0(0.4999609771325984)
    connect dend_5(0), soma_0(0.4999609771325984)
    connect dend_0(0), soma_0(0.4999609771325984)
    connect axon_1(0), axon_0(1.0)
    connect apic_6(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 324.044, 384.362, 55.3412, 12.8128 ) }
    soma_0 { pt3dadd( 330.45, 384.362, 55.3412, 12.8128 ) }
    soma_0 { pt3dadd( 336.857, 384.362, 55.3412, 12.8128 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 330.451, 384.362, 55.3412, 1.0 ) }
    axon_0 { pt3dadd( 336.292, 398.178, 55.3412, 1.0 ) }
    axon_0 { pt3dadd( 342.133, 411.994, 55.3412, 1.0 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 6/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 324.938, 380.018, 59.3096, 1.8794 ) }
    apic_0 { pt3dadd( 324.457, 378.992, 59.6859, 0.4096 ) }
    apic_0 { pt3dadd( 323.996, 377.949, 59.899, 0.3568 ) }
    apic_0 { pt3dadd( 323.257, 377.077, 59.976, 0.3274 ) }
    apic_0 { pt3dadd( 322.462, 376.256, 59.9346, 0.3982 ) }
    apic_0 { pt3dadd( 321.805, 375.32, 59.9203, 0.379 ) }
    apic_0 { pt3dadd( 321.176, 374.364, 59.9329, 0.387 ) }
    apic_0 { pt3dadd( 320.547, 373.409, 59.9598, 0.4198 ) }
    apic_0 { pt3dadd( 319.917, 372.453, 60.0001, 0.6212 ) }
    apic_0 { pt3dadd( 319.155, 371.601, 60.0538, 0.5414 ) }
    apic_0 { pt3dadd( 318.359, 370.78, 60.121, 0.5354 ) }
    apic_0 { pt3dadd( 317.638, 369.893, 60.2501, 0.5204 ) }
    apic_0 { pt3dadd( 316.935, 368.994, 60.4346, 0.5122 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 19/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 328.711, 378.838, 55.305, 0.2288 ) }
    dend_23 { pt3dadd( 328.658, 377.781, 54.6624, 0.2964 ) }
    dend_23 { pt3dadd( 327.945, 378.512, 54.343, 0.316 ) }
    dend_23 { pt3dadd( 327.481, 377.788, 53.6516, 0.3472 ) }
    dend_23 { pt3dadd( 327.237, 376.727, 52.8984, 0.4294 ) }
    dend_23 { pt3dadd( 326.736, 375.794, 51.8809, 0.4644 ) }
    dend_23 { pt3dadd( 326.589, 374.729, 51.0404, 0.4126 ) }
    dend_23 { pt3dadd( 327.416, 374.184, 50.2096, 0.4254 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 27/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 335.818, 383.73, 55.3412, 0.4576 ) }
    dend_6 { pt3dadd( 336.929, 383.488, 55.0906, 0.427 ) }
    dend_6 { pt3dadd( 337.953, 382.992, 54.931, 0.4458 ) }
    dend_6 { pt3dadd( 338.837, 382.278, 54.6969, 0.4462 ) }
    dend_6 { pt3dadd( 339.623, 381.452, 54.4855, 0.3854 ) }
    dend_6 { pt3dadd( 340.307, 380.539, 54.3068, 0.343 ) }
    dend_6 { pt3dadd( 340.83, 379.523, 54.1722, 0.3798 ) }
    dend_6 { pt3dadd( 341.395, 378.53, 54.0302, 0.3458 ) }
    dend_6 { pt3dadd( 342.014, 377.573, 53.8412, 0.322 ) }
    dend_6 { pt3dadd( 342.837, 376.78, 53.7275, 0.316 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 37/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 328.758, 390.038, 56.1856, 0.6864 ) }
    dend_5 { pt3dadd( 328.358, 390.572, 57.9757, 0.4696 ) }
    dend_5 { pt3dadd( 327.909, 391.431, 58.7409, 0.3748 ) }
    dend_5 { pt3dadd( 326.85, 391.776, 59.2878, 0.3556 ) }
    dend_5 { pt3dadd( 325.876, 392.349, 59.7134, 0.476 ) }
    dend_5 { pt3dadd( 324.971, 393.033, 60.0345, 0.4 ) }
    dend_5 { pt3dadd( 324.203, 393.862, 60.2759, 0.3382 ) }
    dend_5 { pt3dadd( 323.626, 394.847, 60.4758, 0.298 ) }
    dend_5 { pt3dadd( 323.171, 395.886, 60.7331, 0.319 ) }
    dend_5 { pt3dadd( 322.819, 396.96, 61.1055, 0.3514 ) }
    dend_5 { pt3dadd( 322.248, 397.912, 61.6014, 0.4444 ) }
    dend_5 { pt3dadd( 321.503, 398.739, 62.2336, 0.4562 ) }
    dend_5 { pt3dadd( 321.194, 399.714, 62.9185, 0.5722 ) }
    dend_5 { pt3dadd( 321.335, 400.818, 63.5608, 0.5592 ) }
    dend_5 { pt3dadd( 321.336, 401.924, 64.2149, 0.4982 ) }
    dend_5 { pt3dadd( 321.133, 403.011, 64.9023, 0.5636 ) }
    dend_5 { pt3dadd( 320.764, 404.048, 65.6379, 0.505 ) }
    dend_5 { pt3dadd( 320.193, 404.982, 66.3701, 0.5832 ) }
    dend_5 { pt3dadd( 319.467, 405.819, 67.0558, 0.5072 ) }
    dend_5 { pt3dadd( 318.632, 406.54, 67.7295, 0.5232 ) }
    dend_5 { pt3dadd( 317.741, 407.202, 68.4088, 0.708 ) }
    dend_5 { pt3dadd( 316.983, 408.003, 69.0558, 0.7544 ) }
    dend_5 { pt3dadd( 316.35, 408.921, 69.6923, 0.6772 ) }
    dend_5 { pt3dadd( 315.737, 409.852, 70.3122, 0.6386 ) }
    dend_5 { pt3dadd( 315.163, 410.816, 70.8282, 0.5182 ) }
    dend_5 { pt3dadd( 314.923, 411.889, 71.2345, 0.5326 ) }
    dend_5 { pt3dadd( 315.005, 413.018, 71.5809, 0.5492 ) }
    dend_5 { pt3dadd( 315.078, 414.151, 71.913, 0.6296 ) }
    dend_5 { pt3dadd( 315.09, 415.286, 72.2652, 0.5374 ) }
    dend_5 { pt3dadd( 315.05, 416.415, 72.69, 0.622 ) }
    dend_5 { pt3dadd( 314.98, 417.537, 73.2046, 0.4526 ) }
    dend_5 { pt3dadd( 314.647, 418.591, 73.7218, 0.3512 ) }
    dend_5 { pt3dadd( 313.789, 418.962, 74.4346, 0.2752 ) }
    dend_5 { pt3dadd( 313.021, 419.677, 75.2044, 0.2758 ) }
    dend_5 { pt3dadd( 312.779, 420.752, 75.8433, 0.2766 ) }
    dend_5 { pt3dadd( 312.365, 421.783, 76.4946, 0.2786 ) }
    dend_5 { pt3dadd( 311.882, 422.764, 77.3018, 0.2818 ) }
    dend_5 { pt3dadd( 311.397, 423.753, 78.069, 0.2882 ) }
    dend_5 { pt3dadd( 310.912, 424.749, 78.7662, 0.2996 ) }
    dend_5 { pt3dadd( 310.324, 425.688, 79.4632, 0.323 ) }
    dend_5 { pt3dadd( 309.748, 426.635, 80.1559, 0.3538 ) }
    dend_5 { pt3dadd( 308.934, 427.805, 80.9687, 0.3938 ) }
    dend_5 { pt3dadd( 308.705, 428.633, 82.6543, 0.3264 ) }
    dend_5 { pt3dadd( 308.921, 429.626, 83.6998, 0.2766 ) }
    dend_5 { pt3dadd( 309.527, 430.321, 85.1575, 0.2782 ) }
    dend_5 { pt3dadd( 310.125, 431.219, 86.023, 0.2814 ) }
    dend_5 { pt3dadd( 311.027, 431.745, 87.0237, 0.287 ) }
    dend_5 { pt3dadd( 312.061, 431.922, 88.1093, 0.2988 ) }
    dend_5 { pt3dadd( 313.022, 432.451, 89.5244, 0.3142 ) }
    dend_5 { pt3dadd( 313.971, 432.385, 90.8202, 0.3734 ) }
    dend_5 { pt3dadd( 315.0, 432.824, 91.3128, 0.3338 ) }
    dend_5 { pt3dadd( 315.831, 433.194, 92.6677, 0.3 ) }
    dend_5 { pt3dadd( 316.485, 433.526, 94.5017, 0.2746 ) }
    dend_5 { pt3dadd( 316.345, 434.457, 95.8992, 0.2746 ) }
    dend_5 { pt3dadd( 316.029, 435.404, 96.847, 0.2746 ) }
    dend_5 { pt3dadd( 316.3, 436.348, 97.832, 0.2746 ) }
    dend_5 { pt3dadd( 316.957, 437.158, 98.8246, 0.2746 ) }
    dend_5 { pt3dadd( 317.445, 437.979, 99.9947, 0.2746 ) }
    dend_5 { pt3dadd( 318.496, 438.019, 101.002, 0.2746 ) }
    dend_5 { pt3dadd( 319.405, 438.5, 101.363, 0.2746 ) }
    dend_5 { pt3dadd( 320.33, 439.007, 101.752, 0.2746 ) }
    dend_5 { pt3dadd( 320.845, 439.944, 101.536, 0.2746 ) }
    dend_5 { pt3dadd( 321.581, 439.9, 103.048, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_5 { pt3dadd( 322.161, 440.8, 103.627, 0.2746 ) }
    dend_5 { pt3dadd( 323.104, 441.392, 103.994, 0.2746 ) }
    dend_5 { pt3dadd( 323.579, 442.161, 104.951, 0.2746 ) }
    dend_5 { pt3dadd( 324.358, 442.872, 104.816, 0.2744 ) }
    dend_5 { pt3dadd( 324.832, 443.861, 104.868, 0.2744 ) }
    dend_5 { pt3dadd( 325.343, 444.781, 105.298, 0.2742 ) }
    dend_5 { pt3dadd( 326.024, 445.511, 105.287, 0.274 ) }
    dend_5 { pt3dadd( 326.85, 446.174, 105.472, 0.2736 ) }
    dend_5 { pt3dadd( 327.511, 446.946, 106.274, 0.2728 ) }
    dend_5 { pt3dadd( 327.754, 448.053, 106.482, 0.2712 ) }
    dend_5 { pt3dadd( 328.548, 448.574, 106.398, 0.2684 ) }
    dend_5 { pt3dadd( 329.559, 448.975, 105.846, 0.2626 ) }
    dend_5 { pt3dadd( 330.118, 449.888, 105.37, 0.2542 ) }
    dend_5 { pt3dadd( 330.641, 450.823, 104.884, 0.2288 ) }
    dend_5 { pt3dadd( 330.673, 451.959, 104.596, 0.2288 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 15/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 326.898, 388.47, 54.5796, 0.2288 ) }
    dend_0 { pt3dadd( 326.355, 389.458, 54.4412, 0.4388 ) }
    dend_0 { pt3dadd( 325.387, 389.951, 54.3427, 0.4798 ) }
    dend_0 { pt3dadd( 324.263, 390.16, 54.2682, 0.45 ) }
    dend_0 { pt3dadd( 323.257, 390.639, 54.2142, 0.4524 ) }
    dend_0 { pt3dadd( 322.337, 391.318, 54.1537, 0.6332 ) }
    dend_0 { pt3dadd( 321.322, 391.819, 54.1218, 0.5704 ) }
    dend_0 { pt3dadd( 320.232, 391.733, 54.0532, 0.5556 ) }
    dend_0 { pt3dadd( 319.112, 391.597, 53.7625, 0.7212 ) }
    dend_0 { pt3dadd( 317.982, 391.588, 53.3252, 0.7782 ) }
    dend_0 { pt3dadd( 316.867, 391.699, 52.7733, 0.725 ) }
    dend_0 { pt3dadd( 315.984, 392.344, 52.2385, 0.7104 ) }
    dend_0 { pt3dadd( 315.115, 393.061, 51.7675, 0.7326 ) }
    dend_0 { pt3dadd( 314.148, 393.643, 51.3304, 0.5354 ) }
    dend_0 { pt3dadd( 313.176, 394.22, 50.8998, 0.411 ) }
    dend_0 { pt3dadd( 312.117, 394.569, 50.3409, 0.3826 ) }
    dend_0 { pt3dadd( 311.033, 394.794, 49.6544, 0.4912 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 32/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 342.133, 411.994, 55.3412, 1.0 ) }
    axon_1 { pt3dadd( 347.974, 425.81, 55.3412, 1.0 ) }
    axon_1 { pt3dadd( 353.816, 439.626, 55.3412, 1.0 ) }
    // Section: apic_6, id: apic_6, parent: apic_0 (entry count 35/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 316.935, 368.994, 60.4346, 0.5122 ) }
    apic_6 { pt3dadd( 316.823, 368.36, 60.5545, 0.631 ) }
    apic_6 { pt3dadd( 316.625, 367.235, 60.7398, 0.657 ) }
    apic_6 { pt3dadd( 316.339, 366.132, 60.9025, 0.7334 ) }
    apic_6 { pt3dadd( 315.942, 365.061, 61.0394, 0.7386 ) }
    apic_6 { pt3dadd( 315.434, 364.038, 61.1509, 0.724 ) }
    apic_6 { pt3dadd( 314.651, 363.227, 61.2464, 0.5856 ) }
    apic_6 { pt3dadd( 313.791, 362.476, 61.416, 0.6408 ) }
    apic_6 { pt3dadd( 313.335, 361.458, 61.63, 0.6034 ) }
    apic_6 { pt3dadd( 313.192, 360.33, 61.8022, 0.7532 ) }
    apic_6 { pt3dadd( 312.891, 359.231, 61.9254, 0.8828 ) }
    apic_6 { pt3dadd( 312.544, 358.142, 62.0091, 0.927 ) }
    apic_6 { pt3dadd( 312.06, 357.108, 62.0441, 0.8174 ) }
    apic_6 { pt3dadd( 311.549, 356.084, 62.0217, 0.629 ) }
    apic_6 { pt3dadd( 311.038, 355.061, 61.9595, 0.6638 ) }
    apic_6 { pt3dadd( 310.396, 354.116, 61.9998, 0.6956 ) }
    apic_6 { pt3dadd( 309.689, 353.22, 62.1933, 0.684 ) }
    apic_6 { pt3dadd( 309.211, 352.191, 62.4464, 0.5478 ) }
    apic_6 { pt3dadd( 308.762, 351.144, 62.7379, 0.394 ) }
    apic_6 { pt3dadd( 308.505, 350.046, 63.1686, 0.317 ) }
    apic_6 { pt3dadd( 308.284, 348.944, 63.6969, 0.3072 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 56/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 316.935, 368.994, 60.4346, 0.5122 ) }
    apic_1 { pt3dadd( 315.706, 368.536, 61.8792, 0.4576 ) }
    apic_1 { pt3dadd( 314.641, 368.394, 62.3728, 0.5294 ) }
    apic_1 { pt3dadd( 313.565, 368.746, 62.6184, 0.4938 ) }
    apic_1 { pt3dadd( 312.77, 369.539, 62.7508, 0.5376 ) }
    apic_1 { pt3dadd( 311.793, 370.101, 63.0868, 0.7718 ) }
    apic_1 { pt3dadd( 310.796, 370.6, 63.712, 0.921 ) }
    apic_1 { pt3dadd( 309.76, 370.979, 64.4532, 0.751 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 64/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 327.416, 374.184, 50.2096, 0.4254 ) }
    dend_29 { pt3dadd( 326.305, 373.836, 49.121, 0.378 ) }
    dend_29 { pt3dadd( 325.287, 373.532, 48.2112, 0.4072 ) }
    dend_29 { pt3dadd( 324.211, 373.289, 47.8442, 0.3492 ) }
    dend_29 { pt3dadd( 323.293, 372.617, 47.7865, 0.3296 ) }
    dend_29 { pt3dadd( 322.467, 371.826, 47.7697, 0.324 ) }
    dend_29 { pt3dadd( 321.347, 371.701, 47.7579, 0.392 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 71/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 327.416, 374.184, 50.2096, 0.4254 ) }
    dend_24 { pt3dadd( 327.789, 373.771, 51.2641, 0.2288 ) }
    dend_24 { pt3dadd( 327.928, 372.744, 51.9596, 0.324 ) }
    dend_24 { pt3dadd( 327.928, 371.604, 52.2206, 0.3916 ) }
    dend_24 { pt3dadd( 328.357, 370.577, 52.64, 0.3686 ) }
    dend_24 { pt3dadd( 328.74, 369.631, 53.4106, 0.359 ) }
    dend_24 { pt3dadd( 328.473, 368.536, 53.8353, 0.4104 ) }
    dend_24 { pt3dadd( 328.296, 367.414, 54.0742, 0.398 ) }
    dend_24 { pt3dadd( 327.738, 366.452, 54.1542, 0.4394 ) }
    dend_24 { pt3dadd( 327.073, 365.522, 54.2912, 0.4344 ) }
    dend_24 { pt3dadd( 326.552, 364.515, 54.6372, 0.3626 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 82/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 342.837, 376.78, 53.7275, 0.316 ) }
    dend_10 { pt3dadd( 343.287, 375.952, 53.7972, 0.3474 ) }
    dend_10 { pt3dadd( 343.857, 374.961, 53.9098, 0.4298 ) }
    dend_10 { pt3dadd( 344.432, 373.974, 54.0019, 0.4638 ) }
    dend_10 { pt3dadd( 345.331, 373.268, 54.0047, 0.4176 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 87/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 342.837, 376.78, 53.7275, 0.316 ) }
    dend_7 { pt3dadd( 342.63, 376.143, 52.9712, 0.6864 ) }
    dend_7 { pt3dadd( 342.288, 375.094, 52.3149, 0.5978 ) }
    dend_7 { pt3dadd( 341.951, 374.007, 52.0719, 0.6456 ) }
    dend_7 { pt3dadd( 341.495, 372.962, 51.9215, 0.697 ) }
    dend_7 { pt3dadd( 341.37, 371.85, 51.8543, 0.5166 ) }
    dend_7 { pt3dadd( 341.733, 370.781, 51.7194, 0.3764 ) }
    dend_7 { pt3dadd( 342.104, 369.71, 51.3464, 0.3168 ) }
    dend_7 { pt3dadd( 342.125, 368.591, 50.8026, 0.3784 ) }
    dend_7 { pt3dadd( 342.125, 367.466, 50.2916, 0.3434 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 97/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 311.033, 394.794, 49.6544, 0.4912 ) }
    dend_2 { pt3dadd( 309.507, 395.172, 48.8544, 0.5676 ) }
    dend_2 { pt3dadd( 308.539, 395.726, 48.5156, 0.4746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 307.65, 396.436, 48.2336, 0.4816 ) }
    dend_2 { pt3dadd( 306.777, 397.165, 47.9206, 0.5386 ) }
    dend_2 { pt3dadd( 306.132, 398.081, 47.595, 0.4312 ) }
    dend_2 { pt3dadd( 305.513, 399.022, 47.1162, 0.3498 ) }
    dend_2 { pt3dadd( 304.492, 399.455, 46.6889, 0.3146 ) }
    dend_2 { pt3dadd( 303.501, 400.005, 46.338, 0.3744 ) }
    dend_2 { pt3dadd( 302.409, 400.319, 46.0547, 0.3358 ) }
    dend_2 { pt3dadd( 301.311, 400.617, 45.7702, 0.3036 ) }
    dend_2 { pt3dadd( 300.602, 401.49, 45.418, 0.2812 ) }
    dend_2 { pt3dadd( 299.714, 402.199, 45.1119, 0.287 ) }
    dend_2 { pt3dadd( 298.661, 402.622, 44.7728, 0.2976 ) }
    dend_2 { pt3dadd( 297.573, 402.92, 44.3909, 0.318 ) }
    dend_2 { pt3dadd( 296.551, 403.364, 44.0902, 0.351 ) }
    dend_2 { pt3dadd( 295.431, 403.235, 43.8486, 0.4366 ) }
    dend_2 { pt3dadd( 294.378, 402.809, 43.6178, 0.4758 ) }
    dend_2 { pt3dadd( 293.26, 402.608, 43.3448, 0.4424 ) }
    dend_2 { pt3dadd( 292.142, 402.683, 43.0626, 0.438 ) }
    dend_2 { pt3dadd( 291.102, 403.145, 42.7997, 0.608 ) }
    dend_2 { pt3dadd( 290.072, 403.609, 42.53, 0.5166 ) }
    dend_2 { pt3dadd( 288.961, 403.85, 42.2422, 0.49 ) }
    dend_2 { pt3dadd( 287.845, 404.054, 41.8964, 0.4342 ) }
    dend_2 { pt3dadd( 286.988, 404.624, 41.5593, 0.362 ) }
    dend_2 { pt3dadd( 286.714, 405.701, 41.2026, 0.3048 ) }
    dend_2 { pt3dadd( 286.682, 406.83, 40.7543, 0.2836 ) }
    dend_2 { pt3dadd( 286.207, 407.709, 40.2209, 0.2912 ) }
    dend_2 { pt3dadd( 285.171, 407.86, 39.7177, 0.3064 ) }
    dend_2 { pt3dadd( 284.07, 407.949, 39.3078, 0.3282 ) }
    dend_2 { pt3dadd( 282.967, 408.211, 38.9418, 0.3996 ) }
    dend_2 { pt3dadd( 281.878, 408.5, 38.5014, 0.383 ) }
    dend_2 { pt3dadd( 280.86, 408.941, 37.8549, 0.388 ) }
    dend_2 { pt3dadd( 279.955, 409.587, 37.2212, 0.4528 ) }
    dend_2 { pt3dadd( 279.126, 410.349, 36.752, 0.532 ) }
    dend_2 { pt3dadd( 278.119, 410.865, 36.4703, 0.4196 ) }
    dend_2 { pt3dadd( 277.037, 411.207, 36.1766, 0.327 ) }
    dend_2 { pt3dadd( 276.054, 410.637, 35.9568, 0.2776 ) }
    dend_2 { pt3dadd( 275.443, 410.404, 35.4922, 0.2804 ) }
    dend_2 { pt3dadd( 274.544, 410.869, 35.3382, 0.2852 ) }
    dend_2 { pt3dadd( 273.485, 410.497, 35.4054, 0.2942 ) }
    dend_2 { pt3dadd( 272.368, 410.514, 35.4928, 0.312 ) }
    dend_2 { pt3dadd( 271.288, 410.875, 35.4094, 0.3398 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 311.033, 394.794, 49.6544, 0.4912 ) }
    dend_1 { pt3dadd( 310.133, 395.557, 48.2765, 0.6864 ) }
    dend_1 { pt3dadd( 309.975, 396.681, 47.9752, 0.549 ) }
    dend_1 { pt3dadd( 309.413, 397.655, 47.7408, 0.3962 ) }
    dend_1 { pt3dadd( 309.009, 398.714, 47.5258, 0.3212 ) }
    dend_1 { pt3dadd( 308.748, 399.821, 47.378, 0.3146 ) }
    dend_1 { pt3dadd( 308.41, 400.908, 47.129, 0.3448 ) }
    dend_1 { pt3dadd( 307.938, 401.943, 46.8933, 0.425 ) }
    dend_1 { pt3dadd( 307.672, 403.044, 46.5842, 0.4548 ) }
    dend_1 { pt3dadd( 307.439, 404.149, 46.1476, 0.401 ) }
    dend_1 { pt3dadd( 307.326, 405.265, 45.6128, 0.3732 ) }
    dend_1 { pt3dadd( 307.285, 406.383, 45.0271, 0.4308 ) }
    dend_1 { pt3dadd( 306.779, 407.367, 44.4186, 0.4652 ) }
    dend_1 { pt3dadd( 305.854, 408.001, 43.9102, 0.4218 ) }
    dend_1 { pt3dadd( 305.275, 408.965, 43.4703, 0.4054 ) }
    dend_1 { pt3dadd( 304.967, 410.037, 42.8949, 0.5208 ) }
    dend_1 { pt3dadd( 304.375, 410.977, 42.2495, 0.485 ) }
    dend_1 { pt3dadd( 303.688, 411.863, 41.7222, 0.4868 ) }
    dend_1 { pt3dadd( 303.158, 412.854, 41.1978, 0.6164 ) }
    dend_1 { pt3dadd( 302.697, 413.873, 40.6417, 0.702 ) }
    dend_1 { pt3dadd( 302.016, 414.722, 39.9224, 0.6956 ) }
    dend_1 { pt3dadd( 301.048, 415.245, 39.2658, 0.5694 ) }
    dend_1 { pt3dadd( 299.97, 415.525, 38.6316, 0.4346 ) }
    dend_1 { pt3dadd( 298.897, 415.796, 37.9764, 0.3892 ) }
    dend_1 { pt3dadd( 297.82, 415.964, 37.1568, 0.455 ) }
    dend_1 { pt3dadd( 296.96, 416.519, 36.2541, 0.5364 ) }
    dend_1 { pt3dadd( 296.298, 417.393, 35.464, 0.4274 ) }
    dend_1 { pt3dadd( 295.504, 418.153, 34.813, 0.3416 ) }
    dend_1 { pt3dadd( 294.494, 418.54, 34.1858, 0.3056 ) }
    dend_1 { pt3dadd( 293.414, 418.424, 33.5367, 0.3268 ) }
    dend_1 { pt3dadd( 292.404, 417.988, 32.8115, 0.398 ) }
    dend_1 { pt3dadd( 291.452, 417.453, 31.976, 0.3742 ) }
    dend_1 { pt3dadd( 290.423, 417.13, 31.148, 0.4002 ) }
    dend_1 { pt3dadd( 289.399, 416.86, 30.102, 0.3362 ) }
    dend_1 { pt3dadd( 288.326, 417.156, 29.5333, 0.305 ) }
    dend_1 { pt3dadd( 287.218, 417.377, 29.0842, 0.2796 ) }
    dend_1 { pt3dadd( 286.224, 417.923, 28.742, 0.305 ) }
    dend_1 { pt3dadd( 285.333, 418.61, 28.2352, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 78/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 308.284, 348.944, 63.6969, 0.3072 ) }
    apic_10 { pt3dadd( 307.702, 347.858, 64.1015, 0.3296 ) }
    apic_10 { pt3dadd( 307.164, 346.857, 64.4179, 0.4032 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 81/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 308.284, 348.944, 63.6969, 0.3072 ) }
    apic_7 { pt3dadd( 308.46, 348.239, 63.8014, 0.2288 ) }
    apic_7 { pt3dadd( 308.735, 347.141, 63.6042, 0.3348 ) }
    apic_7 { pt3dadd( 309.125, 346.086, 63.2195, 0.3828 ) }
    apic_7 { pt3dadd( 309.725, 345.122, 62.9994, 0.4912 ) }
    apic_7 { pt3dadd( 310.434, 344.23, 62.7578, 0.5994 ) }
    apic_7 { pt3dadd( 311.051, 343.298, 62.2712, 0.5644 ) }
    apic_7 { pt3dadd( 311.565, 342.294, 61.8276, 0.4972 ) }
    apic_7 { pt3dadd( 312.106, 341.292, 61.5835, 0.3856 ) }
    apic_7 { pt3dadd( 312.847, 340.428, 61.4132, 0.3434 ) }
    apic_7 { pt3dadd( 313.947, 340.295, 61.1537, 0.3806 ) }
    apic_7 { pt3dadd( 314.97, 339.806, 60.9344, 0.347 ) }
    apic_7 { pt3dadd( 315.944, 339.212, 60.7592, 0.3252 ) }
    apic_7 { pt3dadd( 316.862, 338.536, 60.5091, 0.3162 ) }
    apic_7 { pt3dadd( 317.767, 337.849, 60.188, 0.3774 ) }
    apic_7 { pt3dadd( 318.823, 337.427, 59.897, 0.3412 ) }
    apic_7 { pt3dadd( 319.727, 336.736, 59.6358, 0.3132 ) }
    apic_7 { pt3dadd( 320.232, 335.715, 59.3765, 0.3002 ) }
    apic_7 { pt3dadd( 320.741, 334.697, 59.1013, 0.317 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_7 { pt3dadd( 321.414, 333.779, 58.8098, 0.3788 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 1/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 309.76, 370.979, 64.4532, 0.751 ) }
    apic_3 { pt3dadd( 309.871, 371.497, 65.1876, 0.5438 ) }
    apic_3 { pt3dadd( 310.099, 372.428, 66.7106, 0.5526 ) }
    apic_3 { pt3dadd( 310.622, 373.301, 67.9792, 0.4906 ) }
    apic_3 { pt3dadd( 311.074, 374.241, 69.125, 0.5266 ) }
    apic_3 { pt3dadd( 311.388, 375.267, 70.0862, 0.5472 ) }
    apic_3 { pt3dadd( 311.71, 376.282, 71.108, 0.5812 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 8/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 309.76, 370.979, 64.4532, 0.751 ) }
    apic_2 { pt3dadd( 308.154, 370.831, 64.5162, 0.2288 ) }
    apic_2 { pt3dadd( 307.061, 370.561, 64.9986, 0.3204 ) }
    apic_2 { pt3dadd( 305.943, 370.341, 65.261, 0.3556 ) }
    apic_2 { pt3dadd( 304.827, 370.15, 65.63, 0.4446 ) }
    apic_2 { pt3dadd( 303.707, 370.081, 66.1385, 0.4936 ) }
    apic_2 { pt3dadd( 302.594, 370.15, 66.7472, 0.4612 ) }
    apic_2 { pt3dadd( 301.483, 370.225, 67.3487, 0.5412 ) }
    apic_2 { pt3dadd( 300.362, 370.158, 67.879, 0.4684 ) }
    apic_2 { pt3dadd( 299.272, 370.324, 68.2268, 0.4908 ) }
    apic_2 { pt3dadd( 298.163, 370.513, 68.458, 0.4554 ) }
    apic_2 { pt3dadd( 297.066, 370.773, 68.7548, 0.535 ) }
    apic_2 { pt3dadd( 295.992, 370.614, 69.1393, 0.663 ) }
    apic_2 { pt3dadd( 294.936, 370.221, 69.6242, 0.5388 ) }
    apic_2 { pt3dadd( 293.81, 370.061, 69.8813, 0.4604 ) }
    apic_2 { pt3dadd( 292.807, 369.523, 70.086, 0.494 ) }
    apic_2 { pt3dadd( 292.154, 368.59, 70.3139, 0.603 ) }
    apic_2 { pt3dadd( 291.629, 367.582, 70.5127, 0.5784 ) }
    apic_2 { pt3dadd( 290.728, 366.906, 70.7521, 0.4884 ) }
    apic_2 { pt3dadd( 289.599, 366.927, 71.1564, 0.538 ) }
    apic_2 { pt3dadd( 288.494, 367.119, 71.6173, 0.4932 ) }
    apic_2 { pt3dadd( 287.412, 366.914, 72.1459, 0.387 ) }
    apic_2 { pt3dadd( 286.553, 366.192, 72.6211, 0.3042 ) }
    apic_2 { pt3dadd( 285.926, 365.267, 73.1094, 0.2824 ) }
    apic_2 { pt3dadd( 285.525, 364.249, 73.8203, 0.289 ) }
    apic_2 { pt3dadd( 284.747, 363.52, 74.4615, 0.3024 ) }
    apic_2 { pt3dadd( 283.671, 363.246, 75.038, 0.321 ) }
    apic_2 { pt3dadd( 282.578, 363.071, 75.6627, 0.3858 ) }
    apic_2 { pt3dadd( 281.604, 362.573, 76.3157, 0.358 ) }
    apic_2 { pt3dadd( 280.737, 361.904, 77.0706, 0.3394 ) }
    apic_2 { pt3dadd( 279.727, 361.498, 77.8476, 0.3734 ) }
    apic_2 { pt3dadd( 278.642, 361.36, 78.6139, 0.3338 ) }
    apic_2 { pt3dadd( 277.564, 361.21, 79.3733, 0.2996 ) }
    apic_2 { pt3dadd( 276.51, 360.933, 80.1962, 0.274 ) }
    apic_2 { pt3dadd( 275.47, 360.79, 81.2902, 0.2736 ) }
    apic_2 { pt3dadd( 274.419, 360.789, 82.3894, 0.2728 ) }
    apic_2 { pt3dadd( 273.438, 360.455, 83.4075, 0.2712 ) }
    apic_2 { pt3dadd( 272.632, 359.806, 84.5664, 0.2684 ) }
    apic_2 { pt3dadd( 271.901, 359.001, 85.4179, 0.2626 ) }
    apic_2 { pt3dadd( 271.615, 357.934, 85.9743, 0.2542 ) }
    apic_2 { pt3dadd( 271.186, 356.891, 86.4354, 0.2288 ) }
    apic_2 { pt3dadd( 270.22, 356.323, 86.9646, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 50/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 321.347, 371.701, 47.7579, 0.392 ) }
    dend_33 { pt3dadd( 320.533, 372.173, 47.672, 0.3678 ) }
    dend_33 { pt3dadd( 319.973, 373.031, 47.7649, 0.365 ) }
    dend_33 { pt3dadd( 319.836, 372.014, 48.7995, 0.3844 ) }
    dend_33 { pt3dadd( 318.714, 371.929, 48.6727, 0.5302 ) }
    dend_33 { pt3dadd( 317.939, 371.447, 47.4748, 0.4962 ) }
    dend_33 { pt3dadd( 317.396, 371.723, 46.2633, 0.5374 ) }
    dend_33 { pt3dadd( 316.612, 372.411, 45.134, 0.5654 ) }
    dend_33 { pt3dadd( 315.602, 372.748, 44.4534, 0.6234 ) }
    dend_33 { pt3dadd( 314.488, 372.775, 43.8687, 0.7008 ) }
    dend_33 { pt3dadd( 313.365, 372.624, 43.5411, 0.7626 ) }
    dend_33 { pt3dadd( 312.24, 372.449, 43.2936, 0.587 ) }
    dend_33 { pt3dadd( 311.154, 372.681, 42.9657, 0.527 ) }
    dend_33 { pt3dadd( 310.029, 372.794, 42.6989, 0.4986 ) }
    dend_33 { pt3dadd( 308.891, 372.81, 42.4108, 0.5018 ) }
    dend_33 { pt3dadd( 307.972, 373.256, 41.7441, 0.4658 ) }
    dend_33 { pt3dadd( 307.098, 373.985, 41.4585, 0.3734 ) }
    dend_33 { pt3dadd( 306.067, 373.946, 41.1734, 0.326 ) }
    dend_33 { pt3dadd( 305.027, 373.498, 40.938, 0.3236 ) }
    dend_33 { pt3dadd( 303.909, 373.295, 40.8965, 0.3614 ) }
    dend_33 { pt3dadd( 302.915, 373.752, 40.6456, 0.4554 ) }
    dend_33 { pt3dadd( 302.042, 374.455, 40.3004, 0.5146 ) }
    dend_33 { pt3dadd( 300.977, 374.843, 40.0005, 0.495 ) }
    dend_33 { pt3dadd( 299.891, 375.187, 39.755, 0.6292 ) }
    dend_33 { pt3dadd( 298.788, 375.402, 39.2568, 0.5078 ) }
    dend_33 { pt3dadd( 297.702, 375.102, 38.8086, 0.4798 ) }
    dend_33 { pt3dadd( 296.567, 375.1, 38.458, 0.3844 ) }
    dend_33 { pt3dadd( 295.46, 375.1, 37.7742, 0.419 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 78/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 321.347, 371.701, 47.7579, 0.392 ) }
    dend_30 { pt3dadd( 322.182, 372.3, 45.7582, 0.2288 ) }
    dend_30 { pt3dadd( 322.712, 373.163, 44.578, 0.2814 ) }
    dend_30 { pt3dadd( 323.602, 373.813, 43.8343, 0.287 ) }
    dend_30 { pt3dadd( 323.357, 374.475, 42.8806, 0.2988 ) }
    dend_30 { pt3dadd( 324.264, 375.137, 42.3738, 0.3142 ) }
    dend_30 { pt3dadd( 325.126, 375.827, 41.9625, 0.3734 ) }
    dend_30 { pt3dadd( 325.926, 376.505, 41.7001, 0.3338 ) }
    dend_30 { pt3dadd( 325.603, 377.487, 41.372, 0.3 ) }
    dend_30 { pt3dadd( 324.658, 378.069, 40.9063, 0.2746 ) }
    dend_30 { pt3dadd( 324.74, 378.934, 40.0988, 0.2746 ) }
    dend_30 { pt3dadd( 325.605, 379.543, 39.2006, 0.2746 ) }
    dend_30 { pt3dadd( 326.635, 379.758, 38.5619, 0.2746 ) }
    dend_30 { pt3dadd( 327.484, 379.093, 38.1718, 0.2748 ) }
    dend_30 { pt3dadd( 328.197, 378.205, 37.8977, 0.2748 ) }
    dend_30 { pt3dadd( 329.085, 377.585, 37.4116, 0.2752 ) }
    dend_30 { pt3dadd( 329.921, 378.282, 37.1577, 0.2756 ) }
    dend_30 { pt3dadd( 330.679, 379.125, 36.8488, 0.2766 ) }
    dend_30 { pt3dadd( 331.474, 379.901, 36.4294, 0.2784 ) }
    dend_30 { pt3dadd( 332.206, 379.496, 36.1385, 0.2816 ) }
    dend_30 { pt3dadd( 333.031, 379.053, 36.0696, 0.2876 ) }
    dend_30 { pt3dadd( 334.158, 379.252, 36.1228, 0.2986 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_30 { pt3dadd( 335.302, 379.253, 36.1796, 0.3202 ) }
    dend_30 { pt3dadd( 336.445, 379.253, 36.2746, 0.3546 ) }
    dend_30 { pt3dadd( 337.292, 380.016, 36.4095, 0.4444 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 3/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 326.552, 364.515, 54.6372, 0.3626 ) }
    dend_26 { pt3dadd( 326.762, 363.737, 55.0785, 0.306 ) }
    dend_26 { pt3dadd( 327.05, 362.639, 55.4005, 0.2856 ) }
    dend_26 { pt3dadd( 327.322, 361.53, 55.6004, 0.2954 ) }
    dend_26 { pt3dadd( 327.567, 360.414, 55.6917, 0.3124 ) }
    dend_26 { pt3dadd( 327.792, 359.293, 55.7584, 0.3478 ) }
    dend_26 { pt3dadd( 327.806, 358.151, 55.818, 0.3946 ) }
    dend_26 { pt3dadd( 327.556, 357.035, 55.8326, 0.574 ) }
    dend_26 { pt3dadd( 327.424, 355.9, 55.783, 0.4576 ) }
    dend_26 { pt3dadd( 327.344, 354.759, 55.6875, 0.3604 ) }
    dend_26 { pt3dadd( 327.786, 353.708, 55.6069, 0.292 ) }
    dend_26 { pt3dadd( 328.24, 352.657, 55.5436, 0.3082 ) }
    dend_26 { pt3dadd( 328.774, 351.646, 55.5285, 0.3316 ) }
    dend_26 { pt3dadd( 329.316, 350.638, 55.5534, 0.4058 ) }
    dend_26 { pt3dadd( 329.771, 349.589, 55.6287, 0.3944 ) }
    dend_26 { pt3dadd( 330.217, 348.537, 55.7228, 0.4092 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 19/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 326.552, 364.515, 54.6372, 0.3626 ) }
    dend_25 { pt3dadd( 325.98, 363.962, 54.9539, 0.2288 ) }
    dend_25 { pt3dadd( 325.042, 363.344, 55.1715, 0.3746 ) }
    dend_25 { pt3dadd( 324.016, 362.839, 55.2196, 0.3358 ) }
    dend_25 { pt3dadd( 322.965, 362.393, 55.3202, 0.3036 ) }
    dend_25 { pt3dadd( 321.852, 362.196, 55.4991, 0.2814 ) }
    dend_25 { pt3dadd( 320.715, 362.095, 55.6788, 0.2874 ) }
    dend_25 { pt3dadd( 319.578, 361.97, 55.7556, 0.2982 ) }
    dend_25 { pt3dadd( 318.453, 361.765, 55.7631, 0.3182 ) }
    dend_25 { pt3dadd( 317.35, 361.463, 55.7687, 0.3572 ) }
    dend_25 { pt3dadd( 316.367, 360.899, 55.809, 0.4192 ) }
    dend_25 { pt3dadd( 315.453, 360.212, 55.8771, 0.5844 ) }
    dend_25 { pt3dadd( 314.455, 359.662, 55.8678, 0.6466 ) }
    dend_25 { pt3dadd( 313.404, 359.213, 55.8034, 0.5738 ) }
    dend_25 { pt3dadd( 312.299, 358.922, 55.7556, 0.4368 ) }
    dend_25 { pt3dadd( 311.185, 358.66, 55.7298, 0.4218 ) }
    dend_25 { pt3dadd( 310.065, 358.429, 55.7917, 0.3778 ) }
    dend_25 { pt3dadd( 308.945, 358.205, 55.9398, 0.3756 ) }
    dend_25 { pt3dadd( 307.848, 357.889, 56.0899, 0.4422 ) }
    dend_25 { pt3dadd( 306.757, 357.55, 56.2092, 0.4522 ) }
    dend_25 { pt3dadd( 305.662, 357.219, 56.2598, 0.5646 ) }
    dend_25 { pt3dadd( 304.566, 356.894, 56.2344, 0.545 ) }
    dend_25 { pt3dadd( 303.504, 356.468, 56.1803, 0.4724 ) }
    dend_25 { pt3dadd( 302.569, 355.816, 56.2425, 0.5138 ) }
    dend_25 { pt3dadd( 302.033, 354.812, 56.31, 0.4224 ) }
    dend_25 { pt3dadd( 301.602, 353.752, 56.3741, 0.3818 ) }
    dend_25 { pt3dadd( 300.857, 352.886, 56.4357, 0.3684 ) }
    dend_25 { pt3dadd( 300.038, 352.089, 56.4892, 0.5008 ) }
    dend_25 { pt3dadd( 299.023, 351.564, 56.5233, 0.441 ) }
    dend_25 { pt3dadd( 297.965, 351.129, 56.5393, 0.4394 ) }
    dend_25 { pt3dadd( 296.981, 350.546, 56.5788, 0.363 ) }
    dend_25 { pt3dadd( 296.066, 349.859, 56.6443, 0.3486 ) }
    dend_25 { pt3dadd( 295.245, 349.064, 56.7252, 0.3902 ) }
    dend_25 { pt3dadd( 294.47, 348.223, 56.8459, 0.366 ) }
    dend_25 { pt3dadd( 293.892, 347.241, 57.0738, 0.3542 ) }
    dend_25 { pt3dadd( 293.309, 346.261, 57.302, 0.4006 ) }
    dend_25 { pt3dadd( 292.706, 345.306, 57.4448, 0.3852 ) }
    dend_25 { pt3dadd( 292.661, 344.169, 57.7332, 0.3904 ) }
    dend_25 { pt3dadd( 292.632, 343.035, 58.0611, 0.4648 ) }
    dend_25 { pt3dadd( 292.416, 341.92, 58.3047, 0.5182 ) }
    dend_25 { pt3dadd( 292.036, 340.843, 58.4668, 0.5688 ) }
    dend_25 { pt3dadd( 291.774, 339.735, 58.5704, 0.4402 ) }
    dend_25 { pt3dadd( 291.702, 338.594, 58.6244, 0.3662 ) }
    dend_25 { pt3dadd( 291.432, 337.514, 58.6219, 0.3462 ) }
    dend_25 { pt3dadd( 290.658, 336.672, 58.5435, 0.4274 ) }
    dend_25 { pt3dadd( 289.822, 335.894, 58.4335, 0.4606 ) }
    dend_25 { pt3dadd( 288.973, 335.127, 58.4503, 0.4056 ) }
    dend_25 { pt3dadd( 288.147, 334.337, 58.5617, 0.4112 ) }
    dend_25 { pt3dadd( 287.317, 333.562, 58.7278, 0.358 ) }
    dend_25 { pt3dadd( 286.516, 332.794, 58.9305, 0.3396 ) }
    dend_25 { pt3dadd( 285.945, 331.823, 59.1912, 0.3734 ) }
    dend_25 { pt3dadd( 285.037, 331.228, 59.5678, 0.3338 ) }
    dend_25 { pt3dadd( 284.005, 330.807, 59.939, 0.3 ) }
    dend_25 { pt3dadd( 283.181, 330.044, 60.2291, 0.2746 ) }
    dend_25 { pt3dadd( 282.609, 329.067, 60.4024, 0.2746 ) }
    dend_25 { pt3dadd( 282.238, 327.989, 60.3954, 0.2748 ) }
    dend_25 { pt3dadd( 281.751, 326.968, 60.2252, 0.2748 ) }
    dend_25 { pt3dadd( 281.167, 325.986, 60.0835, 0.2752 ) }
    dend_25 { pt3dadd( 280.613, 324.986, 60.1065, 0.2756 ) }
    dend_25 { pt3dadd( 280.069, 323.984, 60.319, 0.2766 ) }
    dend_25 { pt3dadd( 279.512, 322.995, 60.667, 0.2784 ) }
    dend_25 { pt3dadd( 278.827, 322.095, 61.0249, 0.2816 ) }
    dend_25 { pt3dadd( 278.104, 321.218, 61.3483, 0.2874 ) }
    dend_25 { pt3dadd( 277.382, 320.338, 61.6258, 0.2994 ) }
    dend_25 { pt3dadd( 276.629, 319.483, 61.8708, 0.3152 ) }
    dend_25 { pt3dadd( 275.76, 318.754, 62.1491, 0.3754 ) }
    dend_25 { pt3dadd( 274.859, 318.062, 62.4719, 0.3376 ) }
    dend_25 { pt3dadd( 273.958, 317.371, 62.8286, 0.3068 ) }
    dend_25 { pt3dadd( 273.076, 316.656, 63.1498, 0.287 ) }
    dend_25 { pt3dadd( 272.202, 315.925, 63.4057, 0.2988 ) }
    dend_25 { pt3dadd( 271.328, 315.19, 63.5981, 0.3142 ) }
    dend_25 { pt3dadd( 270.427, 314.488, 63.7263, 0.3734 ) }
    dend_25 { pt3dadd( 269.513, 313.8, 63.8061, 0.3338 ) }
    dend_25 { pt3dadd( 268.599, 313.114, 63.8593, 0.3 ) }
    dend_25 { pt3dadd( 267.684, 312.427, 63.9078, 0.2746 ) }
    dend_25 { pt3dadd( 266.717, 311.818, 63.9649, 0.2746 ) }
    dend_25 { pt3dadd( 265.728, 311.243, 64.0394, 0.2746 ) }
    dend_25 { pt3dadd( 264.737, 310.674, 64.1396, 0.2746 ) }
    dend_25 { pt3dadd( 263.746, 310.104, 64.2701, 0.2746 ) }
    dend_25 { pt3dadd( 262.721, 309.606, 64.4846, 0.2746 ) }
    dend_25 { pt3dadd( 261.676, 309.159, 64.7987, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_25 { pt3dadd( 260.632, 308.719, 65.1868, 0.2748 ) }
    dend_25 { pt3dadd( 259.591, 308.28, 65.6205, 0.2748 ) }
    dend_25 { pt3dadd( 258.685, 307.609, 66.0226, 0.2752 ) }
    dend_25 { pt3dadd( 257.806, 306.892, 66.3827, 0.2756 ) }
    dend_25 { pt3dadd( 256.926, 306.171, 66.6991, 0.2766 ) }
    dend_25 { pt3dadd( 255.991, 305.527, 66.9973, 0.2784 ) }
    dend_25 { pt3dadd( 254.878, 305.451, 67.3392, 0.2818 ) }
    dend_25 { pt3dadd( 253.746, 305.377, 67.6956, 0.2878 ) }
    dend_25 { pt3dadd( 252.667, 305.016, 67.9566, 0.299 ) }
    dend_25 { pt3dadd( 251.693, 304.425, 68.1489, 0.3208 ) }
    dend_25 { pt3dadd( 251.11, 303.444, 68.2623, 0.356 ) }
    dend_25 { pt3dadd( 250.416, 302.534, 68.3217, 0.4464 ) }
    dend_25 { pt3dadd( 249.638, 301.696, 68.339, 0.4914 ) }
    dend_25 { pt3dadd( 248.833, 300.882, 68.339, 0.483 ) }
    dend_25 { pt3dadd( 248.139, 299.973, 68.339, 0.4576 ) }
    dend_25 { pt3dadd( 247.492, 299.03, 68.339, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 16/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 345.331, 373.268, 54.0047, 0.4176 ) }
    dend_18 { pt3dadd( 345.434, 372.121, 53.3417, 0.405 ) }
    dend_18 { pt3dadd( 345.876, 371.112, 52.7159, 0.4852 ) }
    dend_18 { pt3dadd( 346.518, 370.193, 52.1858, 0.5868 ) }
    dend_18 { pt3dadd( 347.339, 369.434, 51.7188, 0.5476 ) }
    dend_18 { pt3dadd( 348.168, 368.671, 51.3164, 0.4352 ) }
    dend_18 { pt3dadd( 349.003, 367.91, 50.8906, 0.4192 ) }
    dend_18 { pt3dadd( 349.908, 367.262, 50.2681, 0.3714 ) }
    dend_18 { pt3dadd( 350.72, 366.508, 49.6073, 0.3714 ) }
    dend_18 { pt3dadd( 351.603, 365.816, 49.0876, 0.3974 ) }
    dend_18 { pt3dadd( 352.447, 365.066, 48.6265, 0.5488 ) }
    dend_18 { pt3dadd( 353.291, 364.314, 48.2238, 0.5566 ) }
    dend_18 { pt3dadd( 354.214, 363.643, 48.0421, 0.5244 ) }
    dend_18 { pt3dadd( 355.356, 363.6, 47.9161, 0.4606 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 30/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 345.331, 373.268, 54.0047, 0.4176 ) }
    dend_11 { pt3dadd( 346.425, 372.612, 55.5226, 0.4448 ) }
    dend_11 { pt3dadd( 347.41, 372.06, 55.3862, 0.327 ) }
    dend_11 { pt3dadd( 348.537, 371.945, 55.1544, 0.2774 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 34/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 342.125, 367.466, 50.2916, 0.3434 ) }
    dend_9 { pt3dadd( 342.677, 366.97, 49.6572, 0.3172 ) }
    dend_9 { pt3dadd( 343.53, 366.244, 49.0944, 0.3078 ) }
    dend_9 { pt3dadd( 344.432, 365.572, 48.6164, 0.3306 ) }
    dend_9 { pt3dadd( 345.132, 364.729, 48.2292, 0.405 ) }
    dend_9 { pt3dadd( 345.354, 363.619, 47.84, 0.387 ) }
    dend_9 { pt3dadd( 345.697, 362.577, 47.3561, 0.4252 ) }
    dend_9 { pt3dadd( 346.386, 361.687, 46.8658, 0.3776 ) }
    dend_9 { pt3dadd( 347.082, 360.816, 46.3484, 0.4066 ) }
    dend_9 { pt3dadd( 347.972, 360.138, 45.7934, 0.348 ) }
    dend_9 { pt3dadd( 348.97, 359.672, 45.25, 0.3272 ) }
    dend_9 { pt3dadd( 350.086, 359.505, 44.7756, 0.3198 ) }
    dend_9 { pt3dadd( 351.132, 359.193, 44.2868, 0.3838 ) }
    dend_9 { pt3dadd( 352.007, 358.501, 43.6621, 0.3534 ) }
    dend_9 { pt3dadd( 352.917, 357.878, 42.9618, 0.3356 ) }
    dend_9 { pt3dadd( 353.81, 357.227, 42.2842, 0.3426 ) }
    dend_9 { pt3dadd( 354.735, 356.621, 41.6592, 0.3912 ) }
    dend_9 { pt3dadd( 355.791, 356.532, 41.0292, 0.5378 ) }
    dend_9 { pt3dadd( 356.897, 356.501, 40.4552, 0.5348 ) }
    dend_9 { pt3dadd( 358.016, 356.414, 39.928, 0.4896 ) }
    dend_9 { pt3dadd( 359.102, 356.637, 39.4114, 0.3706 ) }
    dend_9 { pt3dadd( 360.21, 356.658, 39.006, 0.3206 ) }
    dend_9 { pt3dadd( 361.337, 356.496, 38.7442, 0.314 ) }
    dend_9 { pt3dadd( 362.464, 356.303, 38.5638, 0.3422 ) }
    dend_9 { pt3dadd( 363.58, 356.076, 38.3712, 0.4264 ) }
    dend_9 { pt3dadd( 364.714, 355.989, 38.1248, 0.4276 ) }
    dend_9 { pt3dadd( 365.817, 356.221, 37.8213, 0.4948 ) }
    dend_9 { pt3dadd( 366.854, 356.676, 37.4788, 0.5342 ) }
    dend_9 { pt3dadd( 367.751, 357.357, 37.072, 0.5634 ) }
    dend_9 { pt3dadd( 368.727, 357.931, 36.7119, 0.6002 ) }
    dend_9 { pt3dadd( 369.844, 358.089, 36.4552, 0.5244 ) }
    dend_9 { pt3dadd( 370.98, 357.993, 36.3149, 0.3972 ) }
    dend_9 { pt3dadd( 372.087, 358.263, 36.2303, 0.3242 ) }
    dend_9 { pt3dadd( 373.216, 358.438, 36.1351, 0.3142 ) }
    dend_9 { pt3dadd( 374.349, 358.592, 36.0312, 0.3734 ) }
    dend_9 { pt3dadd( 375.488, 358.494, 36.0158, 0.3338 ) }
    dend_9 { pt3dadd( 376.624, 358.361, 36.0805, 0.3 ) }
    dend_9 { pt3dadd( 377.76, 358.239, 36.1956, 0.2746 ) }
    dend_9 { pt3dadd( 378.897, 358.126, 36.3462, 0.2746 ) }
    dend_9 { pt3dadd( 379.967, 357.728, 36.5176, 0.2746 ) }
    dend_9 { pt3dadd( 381.018, 357.284, 36.6834, 0.2746 ) }
    dend_9 { pt3dadd( 382.158, 357.183, 36.808, 0.2746 ) }
    dend_9 { pt3dadd( 383.293, 357.058, 36.8914, 0.2746 ) }
    dend_9 { pt3dadd( 384.294, 356.505, 36.9494, 0.2746 ) }
    dend_9 { pt3dadd( 385.275, 355.919, 36.976, 0.2746 ) }
    dend_9 { pt3dadd( 386.115, 355.143, 36.8757, 0.2746 ) }
    dend_9 { pt3dadd( 387.091, 354.575, 36.675, 0.2746 ) }
    dend_9 { pt3dadd( 388.221, 354.499, 36.311, 0.2748 ) }
    dend_9 { pt3dadd( 389.344, 354.591, 35.8576, 0.275 ) }
    dend_9 { pt3dadd( 390.447, 354.738, 35.3268, 0.2752 ) }
    dend_9 { pt3dadd( 391.548, 354.521, 34.7914, 0.2758 ) }
    dend_9 { pt3dadd( 392.634, 354.232, 34.3003, 0.2768 ) }
    dend_9 { pt3dadd( 393.695, 353.831, 33.9172, 0.2788 ) }
    dend_9 { pt3dadd( 394.725, 353.371, 33.5989, 0.2826 ) }
    dend_9 { pt3dadd( 395.666, 352.79, 33.2909, 0.289 ) }
    dend_9 { pt3dadd( 396.794, 352.659, 33.0389, 0.3026 ) }
    dend_9 { pt3dadd( 397.929, 352.659, 32.6894, 0.3214 ) }
    dend_9 { pt3dadd( 398.866, 353.1, 32.1238, 0.3866 ) }
    dend_9 { pt3dadd( 399.543, 353.997, 31.6148, 0.3594 ) }
    dend_9 { pt3dadd( 400.306, 354.759, 31.1948, 0.342 ) }
    dend_9 { pt3dadd( 401.399, 355.044, 30.9338, 0.3778 ) }
    dend_9 { pt3dadd( 402.533, 355.023, 30.8092, 0.3422 ) }
    dend_9 { pt3dadd( 403.62, 354.698, 30.7177, 0.315 ) }
    dend_9 { pt3dadd( 404.699, 354.332, 30.6552, 0.3036 ) }
    dend_9 { pt3dadd( 405.81, 354.06, 30.6331, 0.3232 ) }
    dend_9 { pt3dadd( 406.9, 353.72, 30.6275, 0.3902 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_9 { pt3dadd( 407.973, 353.323, 30.634, 0.3662 ) }
    dend_9 { pt3dadd( 409.082, 353.121, 30.6636, 0.3542 ) }
    dend_9 { pt3dadd( 410.227, 353.116, 30.7227, 0.4018 ) }
    dend_9 { pt3dadd( 411.369, 353.092, 30.8084, 0.3814 ) }
    dend_9 { pt3dadd( 412.5, 352.958, 30.9406, 0.4136 ) }
    dend_9 { pt3dadd( 413.625, 352.766, 31.1226, 0.361 ) }
    dend_9 { pt3dadd( 414.743, 352.837, 31.2922, 0.3508 ) }
    dend_9 { pt3dadd( 415.857, 353.095, 31.4129, 0.3658 ) }
    dend_9 { pt3dadd( 416.979, 353.313, 31.491, 0.4588 ) }
    dend_9 { pt3dadd( 418.094, 353.249, 31.5375, 0.543 ) }
    dend_9 { pt3dadd( 419.22, 353.118, 31.4992, 0.441 ) }
    dend_9 { pt3dadd( 420.361, 353.182, 31.4602, 0.3616 ) }
    dend_9 { pt3dadd( 421.477, 353.401, 31.6596, 0.3672 ) }
    dend_9 { pt3dadd( 422.583, 353.154, 31.8646, 0.322 ) }
    dend_9 { pt3dadd( 423.724, 353.117, 32.0085, 0.2796 ) }
    dend_9 { pt3dadd( 424.861, 353.233, 32.0407, 0.2288 ) }
    dend_9 { pt3dadd( 425.939, 353.574, 31.6235, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 17/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 342.125, 367.466, 50.2916, 0.3434 ) }
    dend_8 { pt3dadd( 341.945, 366.405, 50.6699, 0.2288 ) }
    dend_8 { pt3dadd( 341.78, 365.292, 50.1967, 0.289 ) }
    dend_8 { pt3dadd( 341.777, 364.156, 49.9492, 0.3022 ) }
    dend_8 { pt3dadd( 341.994, 363.045, 49.6829, 0.3206 ) }
    dend_8 { pt3dadd( 342.379, 361.978, 49.4365, 0.3856 ) }
    dend_8 { pt3dadd( 342.46, 360.863, 49.1537, 0.3564 ) }
    dend_8 { pt3dadd( 342.358, 359.765, 48.7878, 0.3426 ) }
    dend_8 { pt3dadd( 342.733, 358.703, 48.4005, 0.3494 ) }
    dend_8 { pt3dadd( 343.267, 357.7, 48.1107, 0.4336 ) }
    dend_8 { pt3dadd( 343.589, 356.625, 47.9321, 0.4718 ) }
    dend_8 { pt3dadd( 343.74, 355.495, 47.7193, 0.4276 ) }
    dend_8 { pt3dadd( 343.893, 354.365, 47.4681, 0.447 ) }
    dend_8 { pt3dadd( 344.059, 353.236, 47.2788, 0.4486 ) }
    dend_8 { pt3dadd( 344.237, 352.106, 47.1968, 0.3898 ) }
    dend_8 { pt3dadd( 344.391, 350.974, 47.147, 0.3512 ) }
    dend_8 { pt3dadd( 344.552, 349.841, 47.0884, 0.3948 ) }
    dend_8 { pt3dadd( 344.862, 348.748, 47.0246, 0.3744 ) }
    dend_8 { pt3dadd( 345.318, 347.699, 46.9571, 0.371 ) }
    dend_8 { pt3dadd( 345.809, 346.666, 46.9224, 0.4266 ) }
    dend_8 { pt3dadd( 346.289, 345.629, 46.958, 0.4578 ) }
    dend_8 { pt3dadd( 346.672, 344.555, 47.1125, 0.4066 ) }
    dend_8 { pt3dadd( 347.095, 343.505, 47.4208, 0.3832 ) }
    dend_8 { pt3dadd( 347.784, 342.622, 47.8044, 0.4498 ) }
    dend_8 { pt3dadd( 348.462, 341.72, 48.1354, 0.497 ) }
    dend_8 { pt3dadd( 348.875, 340.671, 48.3882, 0.4988 ) }
    dend_8 { pt3dadd( 348.733, 339.591, 48.5738, 0.4602 ) }
    dend_8 { pt3dadd( 348.283, 338.542, 48.7015, 0.363 ) }
    dend_8 { pt3dadd( 348.51, 337.531, 48.7914, 0.3068 ) }
    dend_8 { pt3dadd( 349.389, 336.855, 48.8939, 0.287 ) }
    dend_8 { pt3dadd( 350.236, 336.105, 49.1025, 0.2988 ) }
    dend_8 { pt3dadd( 351.008, 335.264, 49.2733, 0.3142 ) }
    dend_8 { pt3dadd( 351.634, 334.311, 49.378, 0.3734 ) }
    dend_8 { pt3dadd( 351.74, 333.189, 49.5398, 0.3338 ) }
    dend_8 { pt3dadd( 352.04, 332.09, 49.6787, 0.3 ) }
    dend_8 { pt3dadd( 352.66, 331.132, 49.7767, 0.2746 ) }
    dend_8 { pt3dadd( 353.128, 330.089, 49.8358, 0.2746 ) }
    dend_8 { pt3dadd( 353.728, 329.122, 50.0634, 0.2746 ) }
    dend_8 { pt3dadd( 354.632, 328.442, 50.3737, 0.2746 ) }
    dend_8 { pt3dadd( 355.65, 327.995, 50.8421, 0.2746 ) }
    dend_8 { pt3dadd( 356.328, 327.13, 51.3761, 0.2746 ) }
    dend_8 { pt3dadd( 356.919, 326.296, 51.8311, 0.2746 ) }
    dend_8 { pt3dadd( 357.99, 326.272, 52.2522, 0.2746 ) }
    dend_8 { pt3dadd( 358.823, 326.032, 52.5596, 0.2746 ) }
    dend_8 { pt3dadd( 359.405, 325.055, 52.8531, 0.2746 ) }
    dend_8 { pt3dadd( 360.178, 324.245, 53.2202, 0.2746 ) }
    dend_8 { pt3dadd( 361.039, 323.519, 53.6808, 0.2746 ) }
    dend_8 { pt3dadd( 361.897, 322.794, 54.2223, 0.2746 ) }
    dend_8 { pt3dadd( 362.744, 322.066, 54.8288, 0.2746 ) }
    dend_8 { pt3dadd( 363.513, 321.262, 55.4658, 0.2746 ) }
    dend_8 { pt3dadd( 364.257, 320.433, 56.1112, 0.2746 ) }
    dend_8 { pt3dadd( 364.999, 319.604, 56.758, 0.2746 ) }
    dend_8 { pt3dadd( 365.837, 318.887, 57.4554, 0.2746 ) }
    dend_8 { pt3dadd( 366.78, 318.323, 58.221, 0.2746 ) }
    dend_8 { pt3dadd( 367.741, 317.795, 59.0232, 0.2746 ) }
    dend_8 { pt3dadd( 368.694, 317.251, 59.8128, 0.2746 ) }
    dend_8 { pt3dadd( 369.589, 316.587, 60.4349, 0.2746 ) }
    dend_8 { pt3dadd( 370.482, 315.903, 60.933, 0.2746 ) }
    dend_8 { pt3dadd( 371.382, 315.216, 61.3312, 0.2746 ) }
    dend_8 { pt3dadd( 372.322, 314.578, 61.6616, 0.2748 ) }
    dend_8 { pt3dadd( 373.34, 314.076, 61.9654, 0.275 ) }
    dend_8 { pt3dadd( 374.373, 313.599, 62.2647, 0.2754 ) }
    dend_8 { pt3dadd( 375.406, 313.122, 62.5716, 0.2762 ) }
    dend_8 { pt3dadd( 376.426, 312.621, 62.8684, 0.2776 ) }
    dend_8 { pt3dadd( 377.432, 312.087, 63.1338, 0.28 ) }
    dend_8 { pt3dadd( 378.435, 311.546, 63.3682, 0.2848 ) }
    dend_8 { pt3dadd( 379.44, 311.004, 63.5762, 0.2936 ) }
    dend_8 { pt3dadd( 380.339, 310.303, 63.7588, 0.3094 ) }
    dend_8 { pt3dadd( 381.072, 309.433, 63.9106, 0.3412 ) }
    dend_8 { pt3dadd( 381.785, 308.539, 64.0517, 0.3884 ) }
    dend_8 { pt3dadd( 382.499, 307.648, 64.2012, 0.5326 ) }
    dend_8 { pt3dadd( 383.19, 306.74, 64.3933, 0.5254 ) }
    dend_8 { pt3dadd( 383.854, 305.815, 64.652, 0.4718 ) }
    dend_8 { pt3dadd( 384.662, 305.025, 65.0479, 0.339 ) }
    dend_8 { pt3dadd( 385.704, 304.6, 65.4724, 0.2542 ) }
    dend_8 { pt3dadd( 386.822, 304.534, 66.061, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 93/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 271.288, 410.875, 35.4094, 0.3398 ) }
    dend_4 { pt3dadd( 270.078, 411.282, 35.1291, 0.4156 ) }
    dend_4 { pt3dadd( 268.94, 411.315, 35.3091, 0.4376 ) }
    dend_4 { pt3dadd( 267.832, 411.537, 35.6569, 0.3684 ) }
    dend_4 { pt3dadd( 266.721, 411.626, 36.0483, 0.3168 ) }
    dend_4 { pt3dadd( 265.75, 411.144, 36.4098, 0.3068 ) }
    dend_4 { pt3dadd( 264.901, 410.381, 36.5422, 0.329 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( 263.879, 409.911, 36.659, 0.402 ) }
    dend_4 { pt3dadd( 262.776, 410.19, 36.8539, 0.3816 ) }
    dend_4 { pt3dadd( 261.721, 410.622, 36.9757, 0.414 ) }
    dend_4 { pt3dadd( 260.585, 410.742, 37.0345, 0.363 ) }
    dend_4 { pt3dadd( 259.464, 410.944, 37.1778, 0.3486 ) }
    dend_4 { pt3dadd( 258.387, 411.326, 37.3593, 0.3902 ) }
    dend_4 { pt3dadd( 257.322, 411.723, 37.5178, 0.366 ) }
    dend_4 { pt3dadd( 256.194, 411.918, 37.6149, 0.3542 ) }
    dend_4 { pt3dadd( 255.062, 411.969, 37.6606, 0.4016 ) }
    dend_4 { pt3dadd( 253.947, 411.715, 37.6656, 0.3808 ) }
    dend_4 { pt3dadd( 252.838, 411.456, 37.6454, 0.4126 ) }
    dend_4 { pt3dadd( 251.696, 411.382, 37.6429, 0.3592 ) }
    dend_4 { pt3dadd( 250.553, 411.332, 37.6914, 0.3476 ) }
    dend_4 { pt3dadd( 249.413, 411.289, 37.8462, 0.3586 ) }
    dend_4 { pt3dadd( 248.288, 411.178, 38.0411, 0.4516 ) }
    dend_4 { pt3dadd( 247.272, 410.695, 38.173, 0.5002 ) }
    dend_4 { pt3dadd( 246.339, 410.037, 38.1161, 0.5046 ) }
    dend_4 { pt3dadd( 245.358, 409.448, 38.0778, 0.4712 ) }
    dend_4 { pt3dadd( 244.322, 408.974, 37.984, 0.3832 ) }
    dend_4 { pt3dadd( 243.23, 408.644, 37.826, 0.345 ) }
    dend_4 { pt3dadd( 242.102, 408.534, 37.6846, 0.3542 ) }
    dend_4 { pt3dadd( 240.958, 408.534, 37.6076, 0.4418 ) }
    dend_4 { pt3dadd( 239.82, 408.62, 37.5777, 0.4886 ) }
    dend_4 { pt3dadd( 238.696, 408.822, 37.5847, 0.4522 ) }
    dend_4 { pt3dadd( 237.564, 408.963, 37.7084, 0.5232 ) }
    dend_4 { pt3dadd( 236.428, 408.991, 38.0078, 0.4412 ) }
    dend_4 { pt3dadd( 235.298, 408.991, 38.4381, 0.4102 ) }
    dend_4 { pt3dadd( 234.173, 408.991, 38.9463, 0.4528 ) }
    dend_4 { pt3dadd( 233.051, 408.991, 39.4979, 0.5028 ) }
    dend_4 { pt3dadd( 231.969, 409.243, 40.0173, 0.5084 ) }
    dend_4 { pt3dadd( 230.955, 409.717, 40.5608, 0.483 ) }
    dend_4 { pt3dadd( 229.92, 409.671, 41.3745, 0.3814 ) }
    dend_4 { pt3dadd( 228.999, 409.908, 42.9176, 0.4576 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 271.288, 410.875, 35.4094, 0.3398 ) }
    dend_3 { pt3dadd( 270.216, 411.406, 33.4642, 0.2288 ) }
    dend_3 { pt3dadd( 269.139, 411.761, 33.2508, 0.3182 ) }
    dend_3 { pt3dadd( 268.128, 412.292, 33.2668, 0.381 ) }
    dend_3 { pt3dadd( 266.999, 412.362, 33.2374, 0.3476 ) }
    dend_3 { pt3dadd( 265.962, 411.918, 33.0705, 0.3264 ) }
    dend_3 { pt3dadd( 265.02, 412.215, 32.7152, 0.3184 ) }
    dend_3 { pt3dadd( 264.518, 413.237, 32.452, 0.3814 ) }
    dend_3 { pt3dadd( 263.77, 414.026, 32.2364, 0.3488 ) }
    dend_3 { pt3dadd( 262.849, 414.687, 32.1348, 0.3276 ) }
    dend_3 { pt3dadd( 262.163, 415.582, 31.9973, 0.327 ) }
    dend_3 { pt3dadd( 261.272, 416.138, 31.7786, 0.3658 ) }
    dend_3 { pt3dadd( 260.148, 416.147, 31.5098, 0.4722 ) }
    dend_3 { pt3dadd( 259.014, 416.141, 31.1688, 0.5032 ) }
    dend_3 { pt3dadd( 258.102, 416.744, 30.8795, 0.6802 ) }
    dend_3 { pt3dadd( 257.194, 417.433, 30.6494, 0.6584 ) }
    dend_3 { pt3dadd( 256.233, 418.05, 30.4822, 0.4858 ) }
    dend_3 { pt3dadd( 255.157, 418.41, 30.3985, 0.3502 ) }
    dend_3 { pt3dadd( 254.056, 418.723, 30.3856, 0.3474 ) }
    dend_3 { pt3dadd( 252.968, 419.06, 30.639, 0.2796 ) }
    dend_3 { pt3dadd( 251.9, 419.068, 31.6235, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 54/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 307.164, 346.857, 64.4179, 0.4032 ) }
    apic_12 { pt3dadd( 306.344, 346.225, 64.6304, 0.3838 ) }
    apic_12 { pt3dadd( 305.461, 345.504, 64.8743, 0.4178 ) }
    apic_12 { pt3dadd( 304.69, 344.673, 65.1764, 0.3702 ) }
    apic_12 { pt3dadd( 304.1, 343.706, 65.5136, 0.3618 ) }
    apic_12 { pt3dadd( 303.741, 342.631, 65.8375, 0.4158 ) }
    apic_12 { pt3dadd( 303.388, 341.549, 66.0993, 0.4082 ) }
    apic_12 { pt3dadd( 302.985, 340.481, 66.2323, 0.4578 ) }
    apic_12 { pt3dadd( 302.428, 339.484, 66.3127, 0.47 ) }
    apic_12 { pt3dadd( 301.719, 338.59, 66.4213, 0.423 ) }
    apic_12 { pt3dadd( 300.861, 337.84, 66.6411, 0.4444 ) }
    apic_12 { pt3dadd( 299.912, 337.219, 67.0032, 0.414 ) }
    apic_12 { pt3dadd( 298.819, 336.934, 67.4237, 0.4698 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 67/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 307.164, 346.857, 64.4179, 0.4032 ) }
    apic_11 { pt3dadd( 307.298, 346.192, 63.2282, 0.2288 ) }
    apic_11 { pt3dadd( 307.466, 345.352, 61.3732, 0.2768 ) }
    apic_11 { pt3dadd( 307.671, 344.33, 60.2619, 0.2788 ) }
    apic_11 { pt3dadd( 307.777, 343.282, 59.1724, 0.2826 ) }
    apic_11 { pt3dadd( 307.833, 342.222, 58.1543, 0.2896 ) }
    apic_11 { pt3dadd( 308.228, 341.245, 57.0909, 0.3018 ) }
    apic_11 { pt3dadd( 308.854, 340.358, 56.2282, 0.3272 ) }
    apic_11 { pt3dadd( 309.636, 339.565, 55.6492, 0.3618 ) }
    apic_11 { pt3dadd( 310.447, 338.844, 55.2177, 0.4872 ) }
    apic_11 { pt3dadd( 310.767, 337.765, 54.7333, 0.422 ) }
    apic_11 { pt3dadd( 310.673, 336.751, 54.1436, 0.3738 ) }
    apic_11 { pt3dadd( 309.839, 336.04, 53.4814, 0.3896 ) }
    apic_11 { pt3dadd( 308.902, 335.431, 52.8923, 0.3648 ) }
    apic_11 { pt3dadd( 308.033, 334.729, 52.3169, 0.352 ) }
    apic_11 { pt3dadd( 307.274, 333.905, 51.807, 0.3976 ) }
    apic_11 { pt3dadd( 306.572, 333.022, 51.338, 0.3734 ) }
    apic_11 { pt3dadd( 305.904, 332.116, 50.8869, 0.3988 ) }
    apic_11 { pt3dadd( 305.608, 331.075, 50.4896, 0.334 ) }
    apic_11 { pt3dadd( 305.783, 329.967, 50.0545, 0.3002 ) }
    apic_11 { pt3dadd( 305.783, 328.882, 49.4889, 0.2748 ) }
    apic_11 { pt3dadd( 305.411, 327.829, 48.9157, 0.275 ) }
    apic_11 { pt3dadd( 305.125, 326.749, 48.4162, 0.2754 ) }
    apic_11 { pt3dadd( 304.895, 325.647, 47.9396, 0.276 ) }
    apic_11 { pt3dadd( 304.434, 324.633, 47.4295, 0.2772 ) }
    apic_11 { pt3dadd( 303.885, 323.662, 46.8087, 0.2796 ) }
    apic_11 { pt3dadd( 303.486, 322.635, 46.0888, 0.284 ) }
    apic_11 { pt3dadd( 303.408, 321.537, 45.4182, 0.292 ) }
    apic_11 { pt3dadd( 303.438, 320.425, 44.7642, 0.3066 ) }
    apic_11 { pt3dadd( 303.787, 319.406, 43.9516, 0.3348 ) }
    apic_11 { pt3dadd( 303.854, 318.342, 43.0405, 0.3828 ) }
    apic_11 { pt3dadd( 303.613, 317.284, 42.1725, 0.4912 ) }
    apic_11 { pt3dadd( 303.178, 316.286, 41.3185, 0.5992 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_11 { pt3dadd( 302.352, 315.554, 40.6258, 0.5642 ) }
    apic_11 { pt3dadd( 301.763, 314.634, 39.8471, 0.4966 ) }
    apic_11 { pt3dadd( 302.112, 313.607, 39.0286, 0.3846 ) }
    apic_11 { pt3dadd( 302.796, 312.748, 38.2404, 0.3416 ) }
    apic_11 { pt3dadd( 303.217, 311.815, 37.6228, 0.3772 ) }
    apic_11 { pt3dadd( 302.703, 310.836, 37.1347, 0.3408 ) }
    apic_11 { pt3dadd( 301.952, 310.002, 36.6033, 0.3128 ) }
    apic_11 { pt3dadd( 301.303, 309.089, 36.12, 0.2992 ) }
    apic_11 { pt3dadd( 300.8, 308.084, 35.625, 0.315 ) }
    apic_11 { pt3dadd( 300.331, 307.062, 35.0944, 0.3752 ) }
    apic_11 { pt3dadd( 299.862, 306.045, 34.5313, 0.337 ) }
    apic_11 { pt3dadd( 299.337, 305.058, 33.9548, 0.306 ) }
    apic_11 { pt3dadd( 298.757, 304.1, 33.3819, 0.2852 ) }
    apic_11 { pt3dadd( 298.174, 303.142, 32.8269, 0.2966 ) }
    apic_11 { pt3dadd( 297.329, 302.491, 32.4442, 0.305 ) }
    apic_11 { pt3dadd( 296.271, 302.081, 32.1773, 0.3814 ) }
    apic_11 { pt3dadd( 295.409, 301.363, 31.6235, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 17/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 321.414, 333.779, 58.8098, 0.3788 ) }
    apic_9 { pt3dadd( 321.504, 332.681, 58.0166, 0.3438 ) }
    apic_9 { pt3dadd( 321.824, 331.675, 57.0612, 0.3182 ) }
    apic_9 { pt3dadd( 322.188, 330.648, 56.261, 0.3096 ) }
    apic_9 { pt3dadd( 322.878, 329.81, 55.669, 0.334 ) }
    apic_9 { pt3dadd( 323.742, 329.084, 55.2042, 0.4112 ) }
    apic_9 { pt3dadd( 324.435, 328.201, 54.805, 0.3998 ) }
    apic_9 { pt3dadd( 325.061, 327.254, 54.4611, 0.4424 ) }
    apic_9 { pt3dadd( 325.675, 326.296, 54.1912, 0.44 ) }
    apic_9 { pt3dadd( 326.333, 325.366, 53.9364, 0.3726 ) }
    apic_9 { pt3dadd( 327.039, 324.473, 53.6589, 0.3258 ) }
    apic_9 { pt3dadd( 327.755, 323.588, 53.3683, 0.3172 ) }
    apic_9 { pt3dadd( 328.471, 322.705, 53.0802, 0.3792 ) }
    apic_9 { pt3dadd( 329.199, 321.828, 52.817, 0.3444 ) }
    apic_9 { pt3dadd( 329.947, 320.967, 52.6106, 0.3194 ) }
    apic_9 { pt3dadd( 330.699, 320.108, 52.4667, 0.3114 ) }
    apic_9 { pt3dadd( 331.455, 319.249, 52.3785, 0.3386 ) }
    apic_9 { pt3dadd( 332.254, 318.432, 52.3432, 0.4138 ) }
    apic_9 { pt3dadd( 333.117, 317.682, 52.3583, 0.4342 ) }
    apic_9 { pt3dadd( 333.993, 316.946, 52.4112, 0.362 ) }
    apic_9 { pt3dadd( 334.789, 316.128, 52.4871, 0.3048 ) }
    apic_9 { pt3dadd( 335.494, 315.229, 52.5784, 0.2836 ) }
    apic_9 { pt3dadd( 336.179, 314.314, 52.6876, 0.2912 ) }
    apic_9 { pt3dadd( 336.865, 313.399, 52.8156, 0.3064 ) }
    apic_9 { pt3dadd( 337.561, 312.495, 53.0048, 0.3282 ) }
    apic_9 { pt3dadd( 338.27, 311.605, 53.2882, 0.4008 ) }
    apic_9 { pt3dadd( 338.978, 310.718, 53.6449, 0.3792 ) }
    apic_9 { pt3dadd( 339.675, 309.826, 54.0414, 0.4096 ) }
    apic_9 { pt3dadd( 340.021, 308.755, 54.3659, 0.3536 ) }
    apic_9 { pt3dadd( 340.307, 307.652, 54.6193, 0.3374 ) }
    apic_9 { pt3dadd( 340.594, 306.548, 54.8125, 0.3398 ) }
    apic_9 { pt3dadd( 340.882, 305.442, 54.9598, 0.4158 ) }
    apic_9 { pt3dadd( 341.068, 304.317, 55.1149, 0.438 ) }
    apic_9 { pt3dadd( 341.091, 303.178, 55.3342, 0.369 ) }
    apic_9 { pt3dadd( 341.091, 302.039, 55.6046, 0.3176 ) }
    apic_9 { pt3dadd( 341.091, 300.901, 55.8905, 0.3084 ) }
    apic_9 { pt3dadd( 341.072, 299.759, 56.0328, 0.332 ) }
    apic_9 { pt3dadd( 341.053, 298.615, 56.0302, 0.4062 ) }
    apic_9 { pt3dadd( 341.033, 297.472, 55.9028, 0.3964 ) }
    apic_9 { pt3dadd( 341.012, 296.333, 55.6766, 0.4066 ) }
    apic_9 { pt3dadd( 340.991, 295.195, 55.3843, 0.518 ) }
    apic_9 { pt3dadd( 340.827, 294.071, 55.0494, 0.5038 ) }
    apic_9 { pt3dadd( 340.645, 292.951, 54.6991, 0.4062 ) }
    apic_9 { pt3dadd( 340.464, 291.831, 54.3354, 0.3408 ) }
    apic_9 { pt3dadd( 340.28, 290.713, 53.9591, 0.3448 ) }
    apic_9 { pt3dadd( 340.09, 289.597, 53.5562, 0.4312 ) }
    apic_9 { pt3dadd( 339.888, 288.485, 53.1154, 0.4364 ) }
    apic_9 { pt3dadd( 339.688, 287.375, 52.652, 0.512 ) }
    apic_9 { pt3dadd( 339.485, 286.265, 52.1783, 0.5608 ) }
    apic_9 { pt3dadd( 339.46, 285.139, 51.7082, 0.6372 ) }
    apic_9 { pt3dadd( 339.702, 284.035, 51.2834, 0.6184 ) }
    apic_9 { pt3dadd( 339.948, 282.928, 50.8925, 0.448 ) }
    apic_9 { pt3dadd( 340.194, 281.821, 50.5322, 0.3328 ) }
    apic_9 { pt3dadd( 340.469, 280.719, 50.202, 0.2884 ) }
    apic_9 { pt3dadd( 340.828, 279.639, 49.9145, 0.2996 ) }
    apic_9 { pt3dadd( 341.188, 278.558, 49.6518, 0.3232 ) }
    apic_9 { pt3dadd( 341.548, 277.477, 49.401, 0.3542 ) }
    apic_9 { pt3dadd( 341.905, 276.395, 49.1534, 0.4734 ) }
    apic_9 { pt3dadd( 342.145, 275.283, 48.8754, 0.3952 ) }
    apic_9 { pt3dadd( 342.38, 274.17, 48.5696, 0.329 ) }
    apic_9 { pt3dadd( 342.615, 273.059, 48.2378, 0.2814 ) }
    apic_9 { pt3dadd( 342.852, 271.949, 47.8862, 0.2872 ) }
    apic_9 { pt3dadd( 343.107, 270.844, 47.518, 0.2978 ) }
    apic_9 { pt3dadd( 343.372, 269.741, 47.136, 0.3184 ) }
    apic_9 { pt3dadd( 343.635, 268.64, 46.7446, 0.352 ) }
    apic_9 { pt3dadd( 343.898, 267.539, 46.3439, 0.4378 ) }
    apic_9 { pt3dadd( 344.1, 266.427, 45.9071, 0.481 ) }
    apic_9 { pt3dadd( 344.227, 265.309, 45.4191, 0.4384 ) }
    apic_9 { pt3dadd( 344.355, 264.19, 44.9114, 0.4976 ) }
    apic_9 { pt3dadd( 344.474, 263.072, 44.4116, 0.393 ) }
    apic_9 { pt3dadd( 344.445, 261.943, 43.986, 0.3248 ) }
    apic_9 { pt3dadd( 344.204, 260.83, 43.7055, 0.2736 ) }
    apic_9 { pt3dadd( 343.964, 259.714, 43.5383, 0.2728 ) }
    apic_9 { pt3dadd( 343.682, 258.621, 43.4753, 0.2712 ) }
    apic_9 { pt3dadd( 343.499, 257.533, 43.622, 0.2684 ) }
    apic_9 { pt3dadd( 343.675, 256.462, 43.0945, 0.2626 ) }
    apic_9 { pt3dadd( 344.517, 256.02, 41.6181, 0.2542 ) }
    apic_9 { pt3dadd( 345.298, 255.933, 39.6766, 0.2288 ) }
    apic_9 { pt3dadd( 346.246, 255.563, 38.4, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 96/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 321.414, 333.779, 58.8098, 0.3788 ) }
    apic_8 { pt3dadd( 321.634, 333.701, 59.4345, 0.4576 ) }
    apic_8 { pt3dadd( 322.65, 333.471, 60.377, 0.4628 ) }
    apic_8 { pt3dadd( 323.651, 332.978, 60.8549, 0.5376 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_8 { pt3dadd( 324.632, 332.425, 61.3318, 0.4926 ) }
    apic_8 { pt3dadd( 325.69, 332.031, 61.796, 0.3858 ) }
    apic_8 { pt3dadd( 326.753, 331.655, 62.2381, 0.302 ) }
    apic_8 { pt3dadd( 327.698, 331.042, 62.7164, 0.2782 ) }
    apic_8 { pt3dadd( 328.599, 330.384, 63.2162, 0.2814 ) }
    apic_8 { pt3dadd( 329.69, 330.107, 63.7087, 0.287 ) }
    apic_8 { pt3dadd( 330.776, 329.822, 64.1934, 0.2988 ) }
    apic_8 { pt3dadd( 331.767, 329.283, 64.6626, 0.3142 ) }
    apic_8 { pt3dadd( 332.751, 328.733, 65.1081, 0.3734 ) }
    apic_8 { pt3dadd( 333.787, 328.281, 65.5228, 0.3338 ) }
    apic_8 { pt3dadd( 334.676, 327.619, 65.9226, 0.3 ) }
    apic_8 { pt3dadd( 335.154, 326.598, 66.3723, 0.2746 ) }
    apic_8 { pt3dadd( 335.629, 325.625, 66.8198, 0.2746 ) }
    apic_8 { pt3dadd( 336.457, 324.862, 67.1294, 0.2746 ) }
    apic_8 { pt3dadd( 337.156, 323.962, 67.3994, 0.2746 ) }
    apic_8 { pt3dadd( 337.856, 323.065, 67.6514, 0.2748 ) }
    apic_8 { pt3dadd( 338.555, 322.165, 67.9134, 0.275 ) }
    apic_8 { pt3dadd( 339.242, 321.256, 68.1752, 0.2754 ) }
    apic_8 { pt3dadd( 339.918, 320.339, 68.441, 0.2762 ) }
    apic_8 { pt3dadd( 340.596, 319.43, 68.7929, 0.2776 ) }
    apic_8 { pt3dadd( 341.192, 318.467, 69.1653, 0.2802 ) }
    apic_8 { pt3dadd( 341.714, 317.457, 69.4848, 0.285 ) }
    apic_8 { pt3dadd( 341.902, 316.341, 69.5957, 0.2938 ) }
    apic_8 { pt3dadd( 342.121, 315.22, 69.505, 0.3112 ) }
    apic_8 { pt3dadd( 342.755, 314.279, 69.3244, 0.3382 ) }
    apic_8 { pt3dadd( 343.525, 313.433, 69.2205, 0.413 ) }
    apic_8 { pt3dadd( 344.301, 312.591, 69.2126, 0.4326 ) }
    apic_8 { pt3dadd( 345.083, 311.758, 69.307, 0.3592 ) }
    apic_8 { pt3dadd( 345.904, 310.966, 69.5195, 0.2996 ) }
    apic_8 { pt3dadd( 346.724, 310.176, 69.7995, 0.274 ) }
    apic_8 { pt3dadd( 347.543, 309.388, 70.098, 0.2736 ) }
    apic_8 { pt3dadd( 348.362, 308.594, 70.3175, 0.2728 ) }
    apic_8 { pt3dadd( 349.182, 307.799, 70.4659, 0.2712 ) }
    apic_8 { pt3dadd( 350.003, 307.003, 70.5558, 0.2684 ) }
    apic_8 { pt3dadd( 350.826, 306.207, 70.6006, 0.2626 ) }
    apic_8 { pt3dadd( 351.818, 305.64, 70.6157, 0.2542 ) }
    apic_8 { pt3dadd( 352.82, 305.086, 70.6168, 0.2288 ) }
    apic_8 { pt3dadd( 353.822, 304.534, 70.6168, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 38/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 311.71, 376.282, 71.108, 0.5812 ) }
    apic_5 { pt3dadd( 311.578, 376.806, 71.5417, 0.6642 ) }
    apic_5 { pt3dadd( 311.732, 377.819, 72.4564, 0.493 ) }
    apic_5 { pt3dadd( 311.883, 378.924, 72.9383, 0.3798 ) }
    apic_5 { pt3dadd( 311.733, 380.052, 73.0974, 0.323 ) }
    apic_5 { pt3dadd( 311.508, 381.173, 73.061, 0.3896 ) }
    apic_5 { pt3dadd( 311.119, 382.246, 72.9655, 0.365 ) }
    apic_5 { pt3dadd( 310.668, 383.297, 72.8896, 0.352 ) }
    apic_5 { pt3dadd( 310.026, 384.242, 72.9176, 0.3976 ) }
    apic_5 { pt3dadd( 309.27, 385.097, 73.103, 0.3736 ) }
    apic_5 { pt3dadd( 308.212, 385.505, 73.4028, 0.3992 ) }
    apic_5 { pt3dadd( 307.443, 385.456, 74.2403, 0.3344 ) }
    apic_5 { pt3dadd( 306.642, 386.228, 74.7116, 0.301 ) }
    apic_5 { pt3dadd( 305.871, 387.07, 74.8854, 0.2766 ) }
    apic_5 { pt3dadd( 305.259, 387.896, 75.3245, 0.2782 ) }
    apic_5 { pt3dadd( 304.802, 388.907, 75.11, 0.2814 ) }
    apic_5 { pt3dadd( 304.266, 389.898, 75.028, 0.287 ) }
    apic_5 { pt3dadd( 303.621, 390.734, 75.9433, 0.2988 ) }
    apic_5 { pt3dadd( 303.362, 391.543, 76.9577, 0.3142 ) }
    apic_5 { pt3dadd( 302.775, 392.105, 76.6662, 0.3736 ) }
    apic_5 { pt3dadd( 302.654, 393.215, 76.2516, 0.334 ) }
    apic_5 { pt3dadd( 302.059, 394.153, 76.5248, 0.3002 ) }
    apic_5 { pt3dadd( 301.395, 394.929, 77.0549, 0.2752 ) }
    apic_5 { pt3dadd( 300.807, 395.878, 77.2666, 0.2756 ) }
    apic_5 { pt3dadd( 300.466, 396.776, 77.3772, 0.2766 ) }
    apic_5 { pt3dadd( 300.162, 397.698, 77.499, 0.2782 ) }
    apic_5 { pt3dadd( 299.557, 398.376, 78.1374, 0.2814 ) }
    apic_5 { pt3dadd( 298.876, 399.194, 78.2908, 0.287 ) }
    apic_5 { pt3dadd( 298.022, 399.917, 78.279, 0.2988 ) }
    apic_5 { pt3dadd( 296.985, 400.164, 78.0968, 0.3142 ) }
    apic_5 { pt3dadd( 296.606, 401.226, 78.3101, 0.3734 ) }
    apic_5 { pt3dadd( 295.909, 401.991, 79.1868, 0.3338 ) }
    apic_5 { pt3dadd( 295.663, 403.069, 79.7989, 0.3 ) }
    apic_5 { pt3dadd( 295.064, 404.016, 79.7773, 0.2746 ) }
    apic_5 { pt3dadd( 294.231, 404.786, 79.861, 0.2746 ) }
    apic_5 { pt3dadd( 293.526, 405.494, 80.4902, 0.2746 ) }
    apic_5 { pt3dadd( 292.904, 406.229, 80.8962, 0.2746 ) }
    apic_5 { pt3dadd( 292.279, 407.122, 81.1552, 0.2746 ) }
    apic_5 { pt3dadd( 291.645, 408.056, 81.2087, 0.2746 ) }
    apic_5 { pt3dadd( 291.086, 409.025, 81.6057, 0.2746 ) }
    apic_5 { pt3dadd( 290.44, 409.754, 82.717, 0.2746 ) }
    apic_5 { pt3dadd( 290.395, 410.825, 83.6195, 0.2746 ) }
    apic_5 { pt3dadd( 289.478, 411.224, 84.1938, 0.2746 ) }
    apic_5 { pt3dadd( 288.414, 411.48, 83.7659, 0.2746 ) }
    apic_5 { pt3dadd( 287.652, 411.805, 83.8664, 0.2746 ) }
    apic_5 { pt3dadd( 287.083, 412.636, 84.4469, 0.2746 ) }
    apic_5 { pt3dadd( 286.111, 413.071, 84.7557, 0.2746 ) }
    apic_5 { pt3dadd( 286.05, 414.203, 84.8064, 0.2746 ) }
    apic_5 { pt3dadd( 285.763, 415.282, 84.6384, 0.2746 ) }
    apic_5 { pt3dadd( 285.319, 416.264, 84.4127, 0.2746 ) }
    apic_5 { pt3dadd( 284.661, 417.229, 84.4626, 0.2746 ) }
    apic_5 { pt3dadd( 284.06, 418.198, 84.5566, 0.2746 ) }
    apic_5 { pt3dadd( 283.236, 418.933, 84.4024, 0.2746 ) }
    apic_5 { pt3dadd( 282.257, 419.522, 84.3349, 0.2746 ) }
    apic_5 { pt3dadd( 281.215, 419.986, 84.3654, 0.2746 ) }
    apic_5 { pt3dadd( 280.151, 420.407, 84.4295, 0.2746 ) }
    apic_5 { pt3dadd( 279.072, 420.748, 84.4441, 0.2746 ) }
    apic_5 { pt3dadd( 278.016, 420.633, 84.2055, 0.2746 ) }
    apic_5 { pt3dadd( 277.628, 420.611, 84.3528, 0.2746 ) }
    apic_5 { pt3dadd( 276.529, 420.817, 84.5079, 0.2746 ) }
    apic_5 { pt3dadd( 275.393, 420.763, 84.4698, 0.2746 ) }
    apic_5 { pt3dadd( 274.323, 420.473, 84.8179, 0.2748 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_5 { pt3dadd( 273.354, 419.97, 85.3171, 0.275 ) }
    apic_5 { pt3dadd( 272.273, 419.77, 85.9141, 0.2752 ) }
    apic_5 { pt3dadd( 271.136, 419.668, 86.0222, 0.2758 ) }
    apic_5 { pt3dadd( 270.016, 419.532, 86.1423, 0.277 ) }
    apic_5 { pt3dadd( 268.892, 419.737, 86.2658, 0.2792 ) }
    apic_5 { pt3dadd( 267.766, 419.913, 86.3097, 0.2828 ) }
    apic_5 { pt3dadd( 266.654, 419.712, 86.4248, 0.291 ) }
    apic_5 { pt3dadd( 265.548, 419.654, 86.9266, 0.2994 ) }
    apic_5 { pt3dadd( 264.447, 419.791, 87.3891, 0.3474 ) }
    apic_5 { pt3dadd( 263.349, 420.091, 87.4723, 0.2796 ) }
    apic_5 { pt3dadd( 262.251, 419.921, 87.7254, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 11/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 311.71, 376.282, 71.108, 0.5812 ) }
    apic_4 { pt3dadd( 311.773, 376.106, 72.3884, 0.6864 ) }
    apic_4 { pt3dadd( 312.59, 375.602, 72.4844, 0.444 ) }
    apic_4 { pt3dadd( 313.33, 375.409, 73.9642, 0.3254 ) }
    apic_4 { pt3dadd( 314.275, 375.34, 75.1338, 0.2744 ) }
    apic_4 { pt3dadd( 315.214, 375.047, 76.4439, 0.2742 ) }
    apic_4 { pt3dadd( 315.368, 374.358, 78.503, 0.274 ) }
    apic_4 { pt3dadd( 315.57, 373.573, 80.3037, 0.2736 ) }
    apic_4 { pt3dadd( 315.57, 373.689, 83.0528, 0.2728 ) }
    apic_4 { pt3dadd( 316.003, 373.042, 84.6286, 0.2712 ) }
    apic_4 { pt3dadd( 316.987, 372.786, 85.6598, 0.2684 ) }
    apic_4 { pt3dadd( 318.004, 372.78, 86.8174, 0.2626 ) }
    apic_4 { pt3dadd( 318.582, 373.224, 88.7774, 0.2542 ) }
    apic_4 { pt3dadd( 319.481, 373.374, 90.2779, 0.2288 ) }
    apic_4 { pt3dadd( 320.605, 373.467, 90.5372, 0.2288 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 26/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 295.46, 375.1, 37.7742, 0.419 ) }
    dend_35 { pt3dadd( 295.264, 375.832, 36.7998, 0.3722 ) }
    dend_35 { pt3dadd( 294.435, 376.366, 35.665, 0.3668 ) }
    dend_35 { pt3dadd( 293.323, 376.525, 35.1322, 0.4188 ) }
    dend_35 { pt3dadd( 292.298, 376.441, 34.3946, 0.4436 ) }
    dend_35 { pt3dadd( 291.447, 377.12, 34.1132, 0.3794 ) }
    dend_35 { pt3dadd( 290.81, 378.023, 33.6582, 0.3382 ) }
    dend_35 { pt3dadd( 289.951, 378.669, 33.2324, 0.3412 ) }
    dend_35 { pt3dadd( 288.835, 378.892, 33.0974, 0.4182 ) }
    dend_35 { pt3dadd( 287.985, 379.624, 33.0347, 0.4426 ) }
    dend_35 { pt3dadd( 287.542, 380.648, 33.0198, 0.3774 ) }
    dend_35 { pt3dadd( 286.809, 381.466, 33.0907, 0.3346 ) }
    dend_35 { pt3dadd( 285.859, 382.106, 33.1397, 0.3334 ) }
    dend_35 { pt3dadd( 285.072, 382.898, 33.3416, 0.4088 ) }
    dend_35 { pt3dadd( 284.29, 383.701, 33.6918, 0.4016 ) }
    dend_35 { pt3dadd( 283.225, 384.098, 33.9746, 0.4158 ) }
    dend_35 { pt3dadd( 282.108, 384.26, 33.9598, 0.536 ) }
    dend_35 { pt3dadd( 280.965, 384.26, 33.8321, 0.5318 ) }
    dend_35 { pt3dadd( 279.823, 384.224, 33.6795, 0.4838 ) }
    dend_35 { pt3dadd( 278.768, 383.878, 33.3488, 0.3596 ) }
    dend_35 { pt3dadd( 277.704, 383.529, 32.8014, 0.3006 ) }
    dend_35 { pt3dadd( 276.719, 383.628, 32.4134, 0.2756 ) }
    dend_35 { pt3dadd( 276.301, 384.664, 32.4405, 0.2766 ) }
    dend_35 { pt3dadd( 275.568, 385.538, 32.6668, 0.2784 ) }
    dend_35 { pt3dadd( 274.763, 386.337, 32.9854, 0.2816 ) }
    dend_35 { pt3dadd( 273.839, 386.936, 33.3217, 0.2876 ) }
    dend_35 { pt3dadd( 272.807, 387.402, 33.136, 0.2988 ) }
    dend_35 { pt3dadd( 271.848, 388.012, 32.8306, 0.3202 ) }
    dend_35 { pt3dadd( 270.789, 388.382, 32.5077, 0.355 ) }
    dend_35 { pt3dadd( 269.656, 388.508, 32.3767, 0.4436 ) }
    dend_35 { pt3dadd( 268.613, 388.957, 32.3221, 0.492 ) }
    dend_35 { pt3dadd( 267.878, 389.819, 32.1754, 0.4584 ) }
    dend_35 { pt3dadd( 267.171, 390.701, 31.957, 0.5356 ) }
    dend_35 { pt3dadd( 266.323, 391.446, 31.8175, 0.459 ) }
    dend_35 { pt3dadd( 265.19, 391.587, 31.6582, 0.4678 ) }
    dend_35 { pt3dadd( 264.068, 391.742, 31.4824, 0.4402 ) }
    dend_35 { pt3dadd( 262.954, 392.004, 31.4317, 0.3732 ) }
    dend_35 { pt3dadd( 261.833, 392.199, 31.376, 0.3254 ) }
    dend_35 { pt3dadd( 260.69, 392.199, 31.3065, 0.324 ) }
    dend_35 { pt3dadd( 259.592, 392.105, 31.1402, 0.3556 ) }
    dend_35 { pt3dadd( 258.597, 391.718, 30.5908, 0.476 ) }
    dend_35 { pt3dadd( 257.599, 392.25, 30.5242, 0.4002 ) }
    dend_35 { pt3dadd( 256.934, 391.836, 30.5637, 0.338 ) }
    dend_35 { pt3dadd( 255.837, 391.588, 30.6813, 0.299 ) }
    dend_35 { pt3dadd( 254.698, 391.588, 30.9282, 0.3148 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 71/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 295.46, 375.1, 37.7742, 0.419 ) }
    dend_34 { pt3dadd( 295.137, 375.573, 37.3965, 0.4576 ) }
    dend_34 { pt3dadd( 294.337, 376.187, 38.2127, 0.4886 ) }
    dend_34 { pt3dadd( 293.771, 377.06, 38.1055, 0.5876 ) }
    dend_34 { pt3dadd( 292.751, 377.416, 37.835, 0.5748 ) }
    dend_34 { pt3dadd( 291.909, 377.813, 37.693, 0.5892 ) }
    dend_34 { pt3dadd( 290.794, 378.023, 37.8146, 0.4312 ) }
    dend_34 { pt3dadd( 289.732, 378.433, 38.0279, 0.3484 ) }
    dend_34 { pt3dadd( 288.702, 378.927, 38.213, 0.3182 ) }
    dend_34 { pt3dadd( 287.679, 379.432, 38.4238, 0.351 ) }
    dend_34 { pt3dadd( 286.708, 379.491, 38.9068, 0.4378 ) }
    dend_34 { pt3dadd( 285.727, 378.96, 39.4831, 0.4736 ) }
    dend_34 { pt3dadd( 284.623, 378.902, 39.6973, 0.4604 ) }
    dend_34 { pt3dadd( 283.543, 379.276, 39.7762, 0.3636 ) }
    dend_34 { pt3dadd( 282.492, 379.727, 39.9014, 0.3078 ) }
    dend_34 { pt3dadd( 281.441, 380.142, 40.2511, 0.289 ) }
    dend_34 { pt3dadd( 280.311, 380.21, 40.5373, 0.3024 ) }
    dend_34 { pt3dadd( 279.368, 380.831, 40.8489, 0.3208 ) }
    dend_34 { pt3dadd( 278.597, 381.637, 41.3865, 0.386 ) }
    dend_34 { pt3dadd( 277.591, 382.166, 41.662, 0.357 ) }
    dend_34 { pt3dadd( 276.592, 382.713, 41.8858, 0.3438 ) }
    dend_34 { pt3dadd( 275.649, 383.36, 41.9852, 0.3516 ) }
    dend_34 { pt3dadd( 274.72, 384.026, 42.0708, 0.4386 ) }
    dend_34 { pt3dadd( 273.805, 384.712, 42.1411, 0.475 ) }
    dend_34 { pt3dadd( 272.927, 385.442, 42.245, 0.4632 ) }
    dend_34 { pt3dadd( 272.089, 386.212, 42.497, 0.3688 ) }
    dend_34 { pt3dadd( 271.026, 386.551, 42.8792, 0.3174 ) }
    dend_34 { pt3dadd( 269.891, 386.551, 43.2163, 0.3078 ) }
    dend_34 { pt3dadd( 268.855, 387.004, 43.2774, 0.3308 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( 267.839, 387.528, 43.3227, 0.4054 ) }
    dend_34 { pt3dadd( 266.852, 388.103, 43.4311, 0.3878 ) }
    dend_34 { pt3dadd( 265.852, 388.657, 43.5576, 0.4266 ) }
    dend_34 { pt3dadd( 264.83, 389.168, 43.72, 0.3802 ) }
    dend_34 { pt3dadd( 263.79, 389.636, 43.8987, 0.4114 ) }
    dend_34 { pt3dadd( 262.728, 390.051, 44.0975, 0.3572 ) }
    dend_34 { pt3dadd( 261.732, 390.589, 44.3201, 0.3428 ) }
    dend_34 { pt3dadd( 260.811, 391.259, 44.5682, 0.3556 ) }
    dend_34 { pt3dadd( 259.879, 391.913, 44.8588, 0.4164 ) }
    dend_34 { pt3dadd( 258.943, 392.557, 45.1713, 0.5792 ) }
    dend_34 { pt3dadd( 258.154, 393.279, 45.768, 0.6374 ) }
    dend_34 { pt3dadd( 257.585, 394.269, 45.7733, 0.5554 ) }
    dend_34 { pt3dadd( 256.781, 395.059, 45.7442, 0.4088 ) }
    dend_34 { pt3dadd( 255.817, 395.623, 45.8962, 0.3396 ) }
    dend_34 { pt3dadd( 254.971, 396.373, 45.7968, 0.3734 ) }
    dend_34 { pt3dadd( 253.891, 396.692, 45.593, 0.3338 ) }
    dend_34 { pt3dadd( 252.806, 397.022, 45.4843, 0.3 ) }
    dend_34 { pt3dadd( 251.686, 396.974, 45.6128, 0.2746 ) }
    dend_34 { pt3dadd( 250.56, 396.773, 45.7506, 0.2746 ) }
    dend_34 { pt3dadd( 249.429, 396.655, 45.9486, 0.2746 ) }
    dend_34 { pt3dadd( 248.29, 396.626, 46.2232, 0.2746 ) }
    dend_34 { pt3dadd( 247.16, 396.677, 46.5811, 0.2746 ) }
    dend_34 { pt3dadd( 246.189, 397.145, 46.979, 0.2746 ) }
    dend_34 { pt3dadd( 245.232, 397.746, 47.14, 0.2746 ) }
    dend_34 { pt3dadd( 244.151, 398.0, 47.2917, 0.2746 ) }
    dend_34 { pt3dadd( 243.035, 398.141, 47.5672, 0.2746 ) }
    dend_34 { pt3dadd( 241.982, 398.583, 47.7212, 0.2746 ) }
    dend_34 { pt3dadd( 240.907, 398.957, 47.8954, 0.2746 ) }
    dend_34 { pt3dadd( 239.929, 399.433, 48.0847, 0.2746 ) }
    dend_34 { pt3dadd( 238.948, 399.815, 48.1379, 0.2748 ) }
    dend_34 { pt3dadd( 237.806, 399.801, 48.1348, 0.275 ) }
    dend_34 { pt3dadd( 236.704, 399.555, 48.1706, 0.2752 ) }
    dend_34 { pt3dadd( 235.566, 399.527, 48.2499, 0.2758 ) }
    dend_34 { pt3dadd( 234.422, 399.527, 48.3302, 0.2768 ) }
    dend_34 { pt3dadd( 233.283, 399.464, 48.5156, 0.2788 ) }
    dend_34 { pt3dadd( 232.148, 399.361, 48.7516, 0.2826 ) }
    dend_34 { pt3dadd( 231.036, 399.104, 48.9353, 0.2894 ) }
    dend_34 { pt3dadd( 229.921, 398.864, 49.1103, 0.3018 ) }
    dend_34 { pt3dadd( 228.795, 398.665, 49.2618, 0.327 ) }
    dend_34 { pt3dadd( 227.671, 398.466, 49.4133, 0.3616 ) }
    dend_34 { pt3dadd( 226.575, 398.159, 49.6941, 0.4858 ) }
    dend_34 { pt3dadd( 225.449, 398.189, 49.9195, 0.4238 ) }
    dend_34 { pt3dadd( 224.66, 399.002, 50.1234, 0.356 ) }
    dend_34 { pt3dadd( 223.961, 399.831, 50.8236, 0.4576 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 44/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 337.292, 380.016, 36.4095, 0.4444 ) }
    dend_32 { pt3dadd( 338.147, 380.856, 36.4448, 0.4858 ) }
    dend_32 { pt3dadd( 339.029, 381.519, 36.2659, 0.4832 ) }
    dend_32 { pt3dadd( 340.119, 381.771, 36.0198, 0.4064 ) }
    dend_32 { pt3dadd( 341.26, 381.771, 35.8137, 0.383 ) }
    dend_32 { pt3dadd( 341.173, 382.122, 35.5566, 0.4496 ) }
    dend_32 { pt3dadd( 341.9, 382.562, 34.6822, 0.4966 ) }
    dend_32 { pt3dadd( 342.771, 382.681, 33.8262, 0.498 ) }
    dend_32 { pt3dadd( 343.54, 381.946, 33.2396, 0.4588 ) }
    dend_32 { pt3dadd( 344.52, 381.516, 32.8054, 0.3604 ) }
    dend_32 { pt3dadd( 345.656, 381.413, 32.611, 0.302 ) }
    dend_32 { pt3dadd( 346.793, 381.327, 32.3946, 0.2784 ) }
    dend_32 { pt3dadd( 347.706, 381.931, 32.2146, 0.2816 ) }
    dend_32 { pt3dadd( 348.715, 382.43, 31.9586, 0.2876 ) }
    dend_32 { pt3dadd( 349.342, 383.203, 31.8366, 0.2984 ) }
    dend_32 { pt3dadd( 350.227, 383.925, 31.67, 0.321 ) }
    dend_32 { pt3dadd( 351.267, 384.209, 31.4969, 0.3502 ) }
    dend_32 { pt3dadd( 352.352, 383.937, 31.2463, 0.466 ) }
    dend_32 { pt3dadd( 353.378, 383.484, 30.856, 0.3814 ) }
    dend_32 { pt3dadd( 354.516, 383.383, 30.7681, 0.305 ) }
    dend_32 { pt3dadd( 355.65, 383.385, 30.4942, 0.2288 ) }
    dend_32 { pt3dadd( 355.865, 384.26, 29.3647, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 66/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 337.292, 380.016, 36.4095, 0.4444 ) }
    dend_31 { pt3dadd( 336.208, 380.305, 35.2422, 0.2288 ) }
    dend_31 { pt3dadd( 335.15, 380.509, 34.3059, 0.2828 ) }
    dend_31 { pt3dadd( 334.142, 380.65, 33.3757, 0.291 ) }
    dend_31 { pt3dadd( 334.095, 379.556, 32.5676, 0.2994 ) }
    dend_31 { pt3dadd( 333.852, 378.481, 31.8198, 0.3474 ) }
    dend_31 { pt3dadd( 333.455, 377.535, 30.8188, 0.2796 ) }
    dend_31 { pt3dadd( 332.789, 376.82, 29.3647, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 74/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 330.217, 348.537, 55.7228, 0.4092 ) }
    dend_28 { pt3dadd( 330.781, 347.577, 55.6598, 0.4916 ) }
    dend_28 { pt3dadd( 331.284, 346.552, 55.4907, 0.6058 ) }
    dend_28 { pt3dadd( 331.5, 345.431, 55.3132, 0.5476 ) }
    dend_28 { pt3dadd( 331.716, 344.31, 55.1326, 0.6052 ) }
    dend_28 { pt3dadd( 332.268, 343.312, 54.8895, 0.5966 ) }
    dend_28 { pt3dadd( 332.897, 342.366, 54.6249, 0.4546 ) }
    dend_28 { pt3dadd( 333.81, 341.681, 54.448, 0.3448 ) }
    dend_28 { pt3dadd( 334.708, 340.976, 54.3298, 0.3116 ) }
    dend_28 { pt3dadd( 335.423, 340.085, 54.1943, 0.3378 ) }
    dend_28 { pt3dadd( 336.161, 339.212, 54.1145, 0.4182 ) }
    dend_28 { pt3dadd( 336.951, 338.386, 54.1825, 0.4124 ) }
    dend_28 { pt3dadd( 337.865, 337.703, 54.3463, 0.4668 ) }
    dend_28 { pt3dadd( 338.837, 337.108, 54.5513, 0.4802 ) }
    dend_28 { pt3dadd( 339.746, 336.418, 54.7492, 0.4726 ) }
    dend_28 { pt3dadd( 340.669, 335.746, 54.908, 0.3872 ) }
    dend_28 { pt3dadd( 341.619, 335.108, 54.9884, 0.3464 ) }
    dend_28 { pt3dadd( 342.585, 334.496, 54.9679, 0.386 ) }
    dend_28 { pt3dadd( 343.557, 333.897, 54.8562, 0.3582 ) }
    dend_28 { pt3dadd( 344.438, 333.168, 54.7784, 0.3396 ) }
    dend_28 { pt3dadd( 345.259, 332.373, 54.7683, 0.3736 ) }
    dend_28 { pt3dadd( 346.094, 331.594, 54.7011, 0.3342 ) }
    dend_28 { pt3dadd( 346.727, 330.756, 54.5112, 0.3006 ) }
    dend_28 { pt3dadd( 346.794, 329.615, 54.3687, 0.2758 ) }
    dend_28 { pt3dadd( 346.935, 328.487, 54.2455, 0.277 ) }
    dend_28 { pt3dadd( 347.313, 327.414, 54.1363, 0.279 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_28 { pt3dadd( 347.977, 326.515, 54.0277, 0.283 ) }
    dend_28 { pt3dadd( 348.934, 325.896, 53.8838, 0.29 ) }
    dend_28 { pt3dadd( 349.967, 325.411, 53.7538, 0.3042 ) }
    dend_28 { pt3dadd( 351.02, 324.967, 53.6998, 0.3242 ) }
    dend_28 { pt3dadd( 352.039, 324.458, 53.7454, 0.3918 ) }
    dend_28 { pt3dadd( 352.969, 323.798, 53.9392, 0.3692 ) }
    dend_28 { pt3dadd( 353.865, 323.093, 54.1873, 0.36 ) }
    dend_28 { pt3dadd( 354.72, 322.344, 54.4037, 0.4122 ) }
    dend_28 { pt3dadd( 355.458, 321.479, 54.6364, 0.4016 ) }
    dend_28 { pt3dadd( 356.161, 320.583, 54.8724, 0.446 ) }
    dend_28 { pt3dadd( 356.923, 319.734, 55.0626, 0.4466 ) }
    dend_28 { pt3dadd( 357.77, 318.971, 55.1978, 0.3862 ) }
    dend_28 { pt3dadd( 358.701, 318.311, 55.2888, 0.3446 ) }
    dend_28 { pt3dadd( 359.701, 317.761, 55.3476, 0.3828 ) }
    dend_28 { pt3dadd( 360.786, 317.434, 55.4364, 0.3514 ) }
    dend_28 { pt3dadd( 361.735, 316.889, 55.5226, 0.3322 ) }
    dend_28 { pt3dadd( 362.453, 316.007, 55.4333, 0.3362 ) }
    dend_28 { pt3dadd( 363.242, 315.19, 55.2339, 0.3794 ) }
    dend_28 { pt3dadd( 364.119, 314.46, 55.0354, 0.5148 ) }
    dend_28 { pt3dadd( 365.119, 313.919, 54.9606, 0.4976 ) }
    dend_28 { pt3dadd( 366.072, 313.291, 54.8733, 0.3952 ) }
    dend_28 { pt3dadd( 366.645, 312.322, 54.749, 0.319 ) }
    dend_28 { pt3dadd( 367.001, 311.237, 54.7103, 0.311 ) }
    dend_28 { pt3dadd( 367.56, 310.242, 54.787, 0.3368 ) }
    dend_28 { pt3dadd( 368.249, 309.331, 54.8965, 0.4164 ) }
    dend_28 { pt3dadd( 369.041, 308.506, 54.9713, 0.4094 ) }
    dend_28 { pt3dadd( 369.843, 307.69, 54.9912, 0.46 ) }
    dend_28 { pt3dadd( 370.651, 306.881, 54.9189, 0.474 ) }
    dend_28 { pt3dadd( 371.609, 306.256, 54.8514, 0.43 ) }
    dend_28 { pt3dadd( 372.602, 305.688, 54.8307, 0.459 ) }
    dend_28 { pt3dadd( 373.692, 305.347, 54.9357, 0.4346 ) }
    dend_28 { pt3dadd( 374.805, 305.098, 55.1656, 0.5388 ) }
    dend_28 { pt3dadd( 375.921, 304.898, 55.4344, 0.4652 ) }
    dend_28 { pt3dadd( 376.826, 304.237, 55.7754, 0.4788 ) }
    dend_28 { pt3dadd( 377.318, 303.225, 56.2265, 0.4616 ) }
    dend_28 { pt3dadd( 377.66, 302.149, 56.6012, 0.4078 ) }
    dend_28 { pt3dadd( 378.238, 301.182, 56.8156, 0.4152 ) }
    dend_28 { pt3dadd( 379.082, 300.417, 57.0158, 0.365 ) }
    dend_28 { pt3dadd( 380.02, 299.773, 57.2799, 0.3526 ) }
    dend_28 { pt3dadd( 381.014, 299.229, 57.5828, 0.3976 ) }
    dend_28 { pt3dadd( 382.063, 298.793, 57.895, 0.3794 ) }
    dend_28 { pt3dadd( 383.043, 298.227, 58.1616, 0.3802 ) }
    dend_28 { pt3dadd( 383.868, 297.449, 58.3366, 0.4446 ) }
    dend_28 { pt3dadd( 384.526, 296.517, 58.459, 0.4858 ) }
    dend_28 { pt3dadd( 385.12, 295.539, 58.5374, 0.4844 ) }
    dend_28 { pt3dadd( 385.694, 294.55, 58.5754, 0.4026 ) }
    dend_28 { pt3dadd( 386.161, 293.516, 58.5696, 0.4056 ) }
    dend_28 { pt3dadd( 386.417, 292.403, 58.501, 0.3464 ) }
    dend_28 { pt3dadd( 386.688, 291.296, 58.4307, 0.3242 ) }
    dend_28 { pt3dadd( 387.109, 290.233, 58.4587, 0.3142 ) }
    dend_28 { pt3dadd( 387.589, 289.195, 58.5707, 0.3736 ) }
    dend_28 { pt3dadd( 388.069, 288.159, 58.7028, 0.3342 ) }
    dend_28 { pt3dadd( 388.518, 287.108, 58.8484, 0.3004 ) }
    dend_28 { pt3dadd( 388.915, 286.038, 59.0089, 0.2754 ) }
    dend_28 { pt3dadd( 389.468, 285.063, 59.1791, 0.2762 ) }
    dend_28 { pt3dadd( 390.382, 284.446, 59.3687, 0.2776 ) }
    dend_28 { pt3dadd( 391.31, 283.853, 59.6739, 0.2802 ) }
    dend_28 { pt3dadd( 392.036, 282.99, 60.1202, 0.285 ) }
    dend_28 { pt3dadd( 392.536, 281.996, 60.5797, 0.2938 ) }
    dend_28 { pt3dadd( 392.847, 280.91, 61.0226, 0.311 ) }
    dend_28 { pt3dadd( 393.035, 279.802, 61.4947, 0.3382 ) }
    dend_28 { pt3dadd( 393.61, 278.924, 62.02, 0.4126 ) }
    dend_28 { pt3dadd( 394.632, 278.541, 62.5562, 0.4322 ) }
    dend_28 { pt3dadd( 395.691, 278.186, 63.1011, 0.3584 ) }
    dend_28 { pt3dadd( 396.557, 277.494, 63.6149, 0.2982 ) }
    dend_28 { pt3dadd( 397.016, 276.48, 63.9988, 0.2712 ) }
    dend_28 { pt3dadd( 397.451, 275.431, 64.3264, 0.2684 ) }
    dend_28 { pt3dadd( 398.396, 274.84, 64.601, 0.2626 ) }
    dend_28 { pt3dadd( 399.44, 274.376, 64.6671, 0.2542 ) }
    dend_28 { pt3dadd( 400.569, 274.196, 64.5971, 0.2288 ) }
    dend_28 { pt3dadd( 401.665, 273.883, 64.3765, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 71/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 330.217, 348.537, 55.7228, 0.4092 ) }
    dend_27 { pt3dadd( 330.115, 347.607, 56.8968, 0.2288 ) }
    dend_27 { pt3dadd( 329.992, 346.52, 57.58, 0.3654 ) }
    dend_27 { pt3dadd( 329.895, 345.384, 57.7802, 0.494 ) }
    dend_27 { pt3dadd( 329.826, 344.242, 57.857, 0.4344 ) }
    dend_27 { pt3dadd( 329.727, 343.103, 57.8827, 0.3976 ) }
    dend_27 { pt3dadd( 329.51, 341.982, 57.902, 0.4288 ) }
    dend_27 { pt3dadd( 329.248, 340.868, 57.9317, 0.4616 ) }
    dend_27 { pt3dadd( 328.908, 339.778, 58.0073, 0.4152 ) }
    dend_27 { pt3dadd( 328.525, 338.702, 58.1496, 0.3928 ) }
    dend_27 { pt3dadd( 328.263, 337.593, 58.3293, 0.4988 ) }
    dend_27 { pt3dadd( 328.061, 336.47, 58.522, 0.4372 ) }
    dend_27 { pt3dadd( 327.949, 335.335, 58.7, 0.4324 ) }
    dend_27 { pt3dadd( 327.861, 334.196, 58.8056, 0.3488 ) }
    dend_27 { pt3dadd( 327.439, 333.155, 59.0142, 0.3288 ) }
    dend_27 { pt3dadd( 327.201, 332.051, 59.3404, 0.3226 ) }
    dend_27 { pt3dadd( 327.416, 330.932, 59.5804, 0.3892 ) }
    dend_27 { pt3dadd( 327.586, 329.804, 59.7769, 0.3628 ) }
    dend_27 { pt3dadd( 327.912, 328.709, 59.9438, 0.3558 ) }
    dend_27 { pt3dadd( 328.253, 327.619, 60.0863, 0.3672 ) }
    dend_27 { pt3dadd( 328.621, 326.538, 60.2059, 0.4986 ) }
    dend_27 { pt3dadd( 329.126, 325.513, 60.3352, 0.4368 ) }
    dend_27 { pt3dadd( 329.511, 324.438, 60.5438, 0.4318 ) }
    dend_27 { pt3dadd( 329.822, 323.345, 60.8432, 0.3476 ) }
    dend_27 { pt3dadd( 330.13, 322.253, 61.2116, 0.3266 ) }
    dend_27 { pt3dadd( 330.439, 321.165, 61.6277, 0.3186 ) }
    dend_27 { pt3dadd( 330.75, 320.08, 62.0746, 0.382 ) }
    dend_27 { pt3dadd( 331.107, 319.012, 62.5778, 0.3494 ) }
    dend_27 { pt3dadd( 331.473, 317.961, 63.1366, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_27 { pt3dadd( 331.516, 316.832, 63.5807, 0.325 ) }
    dend_27 { pt3dadd( 331.46, 315.708, 63.936, 0.3934 ) }
    dend_27 { pt3dadd( 331.02, 314.662, 64.2852, 0.372 ) }
    dend_27 { pt3dadd( 330.516, 313.647, 64.6548, 0.3648 ) }
    dend_27 { pt3dadd( 329.982, 312.655, 65.037, 0.4226 ) }
    dend_27 { pt3dadd( 329.655, 311.564, 65.2638, 0.4146 ) }
    dend_27 { pt3dadd( 329.354, 310.461, 65.3769, 0.5008 ) }
    dend_27 { pt3dadd( 329.217, 309.363, 65.3828, 0.3988 ) }
    dend_27 { pt3dadd( 329.663, 308.317, 65.2568, 0.3358 ) }
    dend_27 { pt3dadd( 330.322, 307.387, 65.1955, 0.2938 ) }
    dend_27 { pt3dadd( 331.082, 306.535, 65.3265, 0.3098 ) }
    dend_27 { pt3dadd( 331.867, 305.712, 65.5939, 0.3418 ) }
    dend_27 { pt3dadd( 332.473, 304.782, 65.9212, 0.39 ) }
    dend_27 { pt3dadd( 332.755, 303.689, 66.2732, 0.534 ) }
    dend_27 { pt3dadd( 332.934, 302.569, 66.6389, 0.5344 ) }
    dend_27 { pt3dadd( 333.111, 301.447, 66.9928, 0.4576 ) }
    dend_27 { pt3dadd( 333.261, 300.322, 67.3291, 0.4626 ) }
    dend_27 { pt3dadd( 333.228, 299.196, 67.641, 0.4428 ) }
    dend_27 { pt3dadd( 333.047, 298.073, 67.9283, 0.5478 ) }
    dend_27 { pt3dadd( 332.865, 296.949, 68.2013, 0.5114 ) }
    dend_27 { pt3dadd( 332.629, 295.837, 68.4911, 0.4216 ) }
    dend_27 { pt3dadd( 332.33, 294.741, 68.8268, 0.3642 ) }
    dend_27 { pt3dadd( 332.017, 293.651, 69.1964, 0.4138 ) }
    dend_27 { pt3dadd( 331.706, 292.562, 69.5836, 0.4342 ) }
    dend_27 { pt3dadd( 331.38, 291.475, 69.9345, 0.3618 ) }
    dend_27 { pt3dadd( 331.036, 290.389, 70.2086, 0.3048 ) }
    dend_27 { pt3dadd( 330.689, 289.303, 70.4122, 0.2834 ) }
    dend_27 { pt3dadd( 330.343, 288.215, 70.5603, 0.2908 ) }
    dend_27 { pt3dadd( 330.122, 287.099, 70.6726, 0.306 ) }
    dend_27 { pt3dadd( 330.179, 285.967, 70.7658, 0.3272 ) }
    dend_27 { pt3dadd( 330.367, 284.839, 70.861, 0.399 ) }
    dend_27 { pt3dadd( 330.554, 283.712, 70.9758, 0.3758 ) }
    dend_27 { pt3dadd( 330.742, 282.585, 71.1206, 0.4034 ) }
    dend_27 { pt3dadd( 330.827, 281.452, 71.33, 0.3422 ) }
    dend_27 { pt3dadd( 330.745, 280.319, 71.6419, 0.3156 ) }
    dend_27 { pt3dadd( 330.606, 279.197, 72.0552, 0.3034 ) }
    dend_27 { pt3dadd( 330.465, 278.08, 72.55, 0.3288 ) }
    dend_27 { pt3dadd( 330.322, 276.968, 73.1133, 0.3706 ) }
    dend_27 { pt3dadd( 330.154, 275.869, 73.7601, 0.4752 ) }
    dend_27 { pt3dadd( 330.041, 274.773, 74.5052, 0.5374 ) }
    dend_27 { pt3dadd( 330.059, 273.684, 75.348, 0.6052 ) }
    dend_27 { pt3dadd( 330.369, 272.643, 76.1373, 0.5046 ) }
    dend_27 { pt3dadd( 330.875, 271.654, 76.799, 0.5 ) }
    dend_27 { pt3dadd( 331.606, 270.811, 77.3052, 0.5254 ) }
    dend_27 { pt3dadd( 331.686, 269.787, 77.8165, 0.4068 ) }
    dend_27 { pt3dadd( 331.591, 268.694, 78.5859, 0.305 ) }
    dend_27 { pt3dadd( 331.636, 267.566, 78.986, 0.2288 ) }
    dend_27 { pt3dadd( 332.507, 267.013, 79.0588, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 355.356, 363.6, 47.9161, 0.4606 ) }
    dend_20 { pt3dadd( 356.132, 362.521, 47.679, 0.364 ) }
    dend_20 { pt3dadd( 356.112, 361.6, 47.0708, 0.3086 ) }
    dend_20 { pt3dadd( 356.538, 360.632, 46.1129, 0.2904 ) }
    dend_20 { pt3dadd( 357.24, 359.797, 45.3004, 0.3052 ) }
    dend_20 { pt3dadd( 357.974, 358.963, 44.6499, 0.3262 ) }
    dend_20 { pt3dadd( 358.698, 358.104, 44.1311, 0.3956 ) }
    dend_20 { pt3dadd( 359.547, 357.368, 43.769, 0.3756 ) }
    dend_20 { pt3dadd( 360.484, 356.72, 43.5305, 0.3734 ) }
    dend_20 { pt3dadd( 361.388, 356.026, 43.3012, 0.4306 ) }
    dend_20 { pt3dadd( 362.332, 355.397, 43.0326, 0.4666 ) }
    dend_20 { pt3dadd( 363.335, 354.858, 42.7358, 0.4168 ) }
    dend_20 { pt3dadd( 364.297, 354.252, 42.5253, 0.4316 ) }
    dend_20 { pt3dadd( 365.231, 353.593, 42.427, 0.3966 ) }
    dend_20 { pt3dadd( 366.22, 353.025, 42.3088, 0.4066 ) }
    dend_20 { pt3dadd( 367.298, 352.668, 42.1924, 0.5182 ) }
    dend_20 { pt3dadd( 368.294, 352.136, 42.1532, 0.5038 ) }
    dend_20 { pt3dadd( 368.845, 351.175, 42.2024, 0.4064 ) }
    dend_20 { pt3dadd( 369.512, 350.255, 42.1893, 0.3412 ) }
    dend_20 { pt3dadd( 370.222, 349.357, 42.1834, 0.3454 ) }
    dend_20 { pt3dadd( 370.926, 348.457, 42.257, 0.4336 ) }
    dend_20 { pt3dadd( 371.792, 347.713, 42.3016, 0.4346 ) }
    dend_20 { pt3dadd( 372.748, 347.086, 42.2918, 0.5386 ) }
    dend_20 { pt3dadd( 373.853, 346.817, 42.3472, 0.465 ) }
    dend_20 { pt3dadd( 374.971, 346.579, 42.4721, 0.4784 ) }
    dend_20 { pt3dadd( 376.029, 346.149, 42.644, 0.461 ) }
    dend_20 { pt3dadd( 376.942, 345.469, 42.7927, 0.4064 ) }
    dend_20 { pt3dadd( 377.487, 344.468, 42.9251, 0.413 ) }
    dend_20 { pt3dadd( 378.102, 343.504, 43.0472, 0.36 ) }
    dend_20 { pt3dadd( 378.889, 342.676, 43.15, 0.349 ) }
    dend_20 { pt3dadd( 379.912, 342.168, 43.2494, 0.3624 ) }
    dend_20 { pt3dadd( 381.055, 342.125, 43.3544, 0.4526 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 80/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 355.356, 363.6, 47.9161, 0.4606 ) }
    dend_19 { pt3dadd( 356.014, 363.282, 47.0828, 0.2288 ) }
    dend_19 { pt3dadd( 357.022, 363.329, 45.9432, 0.5758 ) }
    dend_19 { pt3dadd( 357.931, 363.98, 45.3886, 0.637 ) }
    dend_19 { pt3dadd( 358.905, 364.161, 44.8224, 0.525 ) }
    dend_19 { pt3dadd( 359.73, 363.421, 44.2425, 0.4968 ) }
    dend_19 { pt3dadd( 360.543, 362.68, 43.7464, 0.4884 ) }
    dend_19 { pt3dadd( 361.546, 362.171, 43.2373, 0.4892 ) }
    dend_19 { pt3dadd( 362.522, 361.616, 42.7277, 0.4114 ) }
    dend_19 { pt3dadd( 363.451, 360.973, 42.2906, 0.4232 ) }
    dend_19 { pt3dadd( 364.475, 360.613, 41.9157, 0.3736 ) }
    dend_19 { pt3dadd( 365.589, 360.533, 41.4795, 0.3992 ) }
    dend_19 { pt3dadd( 366.728, 360.416, 41.424, 0.3346 ) }
    dend_19 { pt3dadd( 367.865, 360.295, 41.4414, 0.3014 ) }
    dend_19 { pt3dadd( 369.001, 360.164, 41.4686, 0.2772 ) }
    dend_19 { pt3dadd( 370.141, 360.06, 41.4711, 0.2796 ) }
    dend_19 { pt3dadd( 371.28, 360.075, 41.4361, 0.284 ) }
    dend_19 { pt3dadd( 372.415, 360.209, 41.349, 0.2918 ) }
    dend_19 { pt3dadd( 373.55, 360.245, 41.1838, 0.3076 ) }
    dend_19 { pt3dadd( 374.682, 360.125, 40.9097, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_19 { pt3dadd( 375.81, 360.115, 40.5616, 0.4048 ) }
    dend_19 { pt3dadd( 376.929, 360.284, 40.1705, 0.3864 ) }
    dend_19 { pt3dadd( 378.051, 360.397, 39.7656, 0.424 ) }
    dend_19 { pt3dadd( 379.184, 360.367, 39.3714, 0.3754 ) }
    dend_19 { pt3dadd( 380.314, 360.275, 39.0194, 0.4026 ) }
    dend_19 { pt3dadd( 381.445, 360.271, 38.7498, 0.3408 ) }
    dend_19 { pt3dadd( 382.582, 360.33, 38.6176, 0.3126 ) }
    dend_19 { pt3dadd( 383.624, 359.976, 38.533, 0.2988 ) }
    dend_19 { pt3dadd( 384.609, 359.399, 38.3928, 0.3144 ) }
    dend_19 { pt3dadd( 385.638, 359.471, 38.232, 0.374 ) }
    dend_19 { pt3dadd( 386.745, 359.613, 38.0411, 0.335 ) }
    dend_19 { pt3dadd( 387.885, 359.588, 37.8112, 0.302 ) }
    dend_19 { pt3dadd( 388.944, 359.243, 37.5018, 0.2782 ) }
    dend_19 { pt3dadd( 389.969, 358.761, 37.1328, 0.2812 ) }
    dend_19 { pt3dadd( 391.046, 358.414, 36.7581, 0.287 ) }
    dend_19 { pt3dadd( 392.145, 358.132, 36.3922, 0.2976 ) }
    dend_19 { pt3dadd( 393.267, 358.032, 36.0203, 0.318 ) }
    dend_19 { pt3dadd( 394.402, 358.008, 35.665, 0.3508 ) }
    dend_19 { pt3dadd( 395.54, 358.002, 35.399, 0.4372 ) }
    dend_19 { pt3dadd( 396.682, 358.002, 35.2204, 0.4724 ) }
    dend_19 { pt3dadd( 397.802, 357.808, 35.131, 0.4582 ) }
    dend_19 { pt3dadd( 398.883, 357.437, 35.1302, 0.3594 ) }
    dend_19 { pt3dadd( 400.005, 357.262, 35.0658, 0.3002 ) }
    dend_19 { pt3dadd( 401.141, 357.13, 34.9731, 0.2748 ) }
    dend_19 { pt3dadd( 402.203, 356.729, 34.8709, 0.2752 ) }
    dend_19 { pt3dadd( 403.109, 356.043, 34.7488, 0.2756 ) }
    dend_19 { pt3dadd( 404.128, 355.548, 34.5257, 0.2766 ) }
    dend_19 { pt3dadd( 405.254, 355.417, 34.2964, 0.2782 ) }
    dend_19 { pt3dadd( 406.395, 355.444, 34.1202, 0.2812 ) }
    dend_19 { pt3dadd( 407.536, 355.428, 33.9844, 0.287 ) }
    dend_19 { pt3dadd( 408.678, 355.36, 33.889, 0.2976 ) }
    dend_19 { pt3dadd( 409.801, 355.152, 33.8657, 0.3182 ) }
    dend_19 { pt3dadd( 410.929, 354.961, 33.8534, 0.3512 ) }
    dend_19 { pt3dadd( 412.007, 354.656, 33.6241, 0.4366 ) }
    dend_19 { pt3dadd( 412.616, 353.692, 33.425, 0.4776 ) }
    dend_19 { pt3dadd( 413.181, 352.707, 33.0924, 0.438 ) }
    dend_19 { pt3dadd( 413.404, 351.672, 32.879, 0.4672 ) }
    dend_19 { pt3dadd( 413.186, 350.554, 32.7586, 0.4812 ) }
    dend_19 { pt3dadd( 413.115, 349.414, 32.6855, 0.4742 ) }
    dend_19 { pt3dadd( 413.219, 348.282, 32.6393, 0.3902 ) }
    dend_19 { pt3dadd( 413.805, 347.422, 32.6351, 0.3522 ) }
    dend_19 { pt3dadd( 414.843, 346.965, 32.5601, 0.3966 ) }
    dend_19 { pt3dadd( 415.533, 346.092, 32.2692, 0.3788 ) }
    dend_19 { pt3dadd( 416.003, 345.051, 32.0958, 0.3728 ) }
    dend_19 { pt3dadd( 416.33, 344.0, 31.8396, 0.4604 ) }
    dend_19 { pt3dadd( 416.6, 342.898, 31.6868, 0.3728 ) }
    dend_19 { pt3dadd( 416.501, 341.812, 31.5736, 0.2796 ) }
    dend_19 { pt3dadd( 415.914, 340.853, 31.2472, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 348.537, 371.945, 55.1544, 0.2774 ) }
    dend_13 { pt3dadd( 348.79, 371.028, 55.1132, 0.2798 ) }
    dend_13 { pt3dadd( 349.247, 369.981, 55.1127, 0.2844 ) }
    dend_13 { pt3dadd( 350.066, 369.198, 55.1205, 0.2926 ) }
    dend_13 { pt3dadd( 351.036, 368.595, 55.1295, 0.309 ) }
    dend_13 { pt3dadd( 352.008, 367.992, 55.0942, 0.333 ) }
    dend_13 { pt3dadd( 352.924, 367.307, 55.0704, 0.4096 ) }
    dend_13 { pt3dadd( 353.836, 366.616, 54.9881, 0.3954 ) }
    dend_13 { pt3dadd( 354.703, 365.872, 54.9018, 0.4404 ) }
    dend_13 { pt3dadd( 355.395, 364.962, 54.9514, 0.4066 ) }
    dend_13 { pt3dadd( 356.203, 364.156, 55.0788, 0.4552 ) }
    dend_13 { pt3dadd( 357.137, 363.498, 55.2168, 0.4638 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 60/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 348.537, 371.945, 55.1544, 0.2774 ) }
    dend_12 { pt3dadd( 349.507, 372.311, 53.8642, 0.2288 ) }
    dend_12 { pt3dadd( 350.636, 372.415, 54.1598, 0.2996 ) }
    dend_12 { pt3dadd( 351.706, 372.669, 54.4043, 0.3232 ) }
    dend_12 { pt3dadd( 352.819, 372.434, 54.6062, 0.3542 ) }
    dend_12 { pt3dadd( 353.958, 372.38, 54.728, 0.4732 ) }
    dend_12 { pt3dadd( 355.094, 372.486, 54.742, 0.395 ) }
    dend_12 { pt3dadd( 356.208, 372.741, 54.6274, 0.3286 ) }
    dend_12 { pt3dadd( 357.309, 373.045, 54.4359, 0.2806 ) }
    dend_12 { pt3dadd( 358.384, 373.421, 54.227, 0.2858 ) }
    dend_12 { pt3dadd( 359.416, 373.885, 54.0165, 0.295 ) }
    dend_12 { pt3dadd( 360.336, 374.559, 53.7972, 0.3136 ) }
    dend_12 { pt3dadd( 361.137, 375.346, 53.5612, 0.3416 ) }
    dend_12 { pt3dadd( 361.688, 376.342, 53.2938, 0.4248 ) }
    dend_12 { pt3dadd( 362.116, 377.391, 53.0155, 0.4262 ) }
    dend_12 { pt3dadd( 362.378, 378.499, 52.752, 0.4862 ) }
    dend_12 { pt3dadd( 362.585, 379.615, 52.4709, 0.5466 ) }
    dend_12 { pt3dadd( 362.663, 380.747, 52.1192, 0.4476 ) }
    dend_12 { pt3dadd( 362.682, 381.875, 51.6877, 0.374 ) }
    dend_12 { pt3dadd( 362.521, 382.982, 51.1672, 0.3898 ) }
    dend_12 { pt3dadd( 362.348, 384.074, 50.6215, 0.3654 ) }
    dend_12 { pt3dadd( 362.622, 385.128, 50.0875, 0.353 ) }
    dend_12 { pt3dadd( 363.109, 386.106, 49.4522, 0.3994 ) }
    dend_12 { pt3dadd( 363.267, 387.182, 48.6038, 0.3766 ) }
    dend_12 { pt3dadd( 363.497, 388.224, 47.6678, 0.4048 ) }
    dend_12 { pt3dadd( 364.017, 389.156, 46.7191, 0.345 ) }
    dend_12 { pt3dadd( 364.744, 389.943, 45.7755, 0.3204 ) }
    dend_12 { pt3dadd( 365.57, 390.635, 44.8414, 0.3134 ) }
    dend_12 { pt3dadd( 366.46, 391.265, 43.9984, 0.3424 ) }
    dend_12 { pt3dadd( 367.402, 391.841, 43.2827, 0.4204 ) }
    dend_12 { pt3dadd( 368.373, 392.384, 42.6258, 0.4468 ) }
    dend_12 { pt3dadd( 369.257, 393.049, 41.9563, 0.3848 ) }
    dend_12 { pt3dadd( 369.484, 394.025, 41.0732, 0.3494 ) }
    dend_12 { pt3dadd( 369.121, 395.019, 40.0683, 0.3558 ) }
    dend_12 { pt3dadd( 368.328, 395.77, 39.256, 0.4762 ) }
    dend_12 { pt3dadd( 367.625, 396.475, 38.2614, 0.4006 ) }
    dend_12 { pt3dadd( 368.541, 396.851, 37.2448, 0.339 ) }
    dend_12 { pt3dadd( 369.554, 396.506, 36.2709, 0.2994 ) }
    dend_12 { pt3dadd( 370.435, 396.824, 35.4374, 0.3228 ) }
    dend_12 { pt3dadd( 371.1, 397.714, 34.8034, 0.3536 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_12 { pt3dadd( 371.781, 398.613, 34.3734, 0.4722 ) }
    dend_12 { pt3dadd( 372.53, 399.47, 34.1197, 0.3932 ) }
    dend_12 { pt3dadd( 373.306, 400.307, 33.964, 0.3252 ) }
    dend_12 { pt3dadd( 373.958, 401.233, 33.7184, 0.2742 ) }
    dend_12 { pt3dadd( 374.488, 402.228, 33.2744, 0.274 ) }
    dend_12 { pt3dadd( 374.798, 403.298, 32.6992, 0.2736 ) }
    dend_12 { pt3dadd( 375.34, 404.269, 32.1252, 0.2728 ) }
    dend_12 { pt3dadd( 376.053, 405.148, 31.7528, 0.2712 ) }
    dend_12 { pt3dadd( 376.763, 406.039, 31.4916, 0.2684 ) }
    dend_12 { pt3dadd( 377.345, 407.02, 31.3258, 0.2626 ) }
    dend_12 { pt3dadd( 377.991, 407.962, 31.2208, 0.2542 ) }
    dend_12 { pt3dadd( 378.86, 408.701, 31.1321, 0.2288 ) }
    dend_12 { pt3dadd( 379.681, 409.45, 30.4942, 0.2288 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 13/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 298.819, 336.934, 67.4237, 0.4698 ) }
    apic_14 { pt3dadd( 298.13, 336.106, 68.0254, 0.4858 ) }
    apic_14 { pt3dadd( 297.523, 335.145, 68.3528, 0.483 ) }
    apic_14 { pt3dadd( 297.059, 334.11, 68.6011, 0.4064 ) }
    apic_14 { pt3dadd( 296.661, 333.039, 68.7562, 0.383 ) }
    apic_14 { pt3dadd( 296.06, 332.082, 68.8545, 0.4484 ) }
    apic_14 { pt3dadd( 295.293, 331.235, 68.917, 0.5004 ) }
    apic_14 { pt3dadd( 294.552, 330.364, 68.9601, 0.4754 ) }
    apic_14 { pt3dadd( 293.858, 329.456, 68.9839, 0.5608 ) }
    apic_14 { pt3dadd( 293.102, 328.601, 69.0396, 0.5366 ) }
    apic_14 { pt3dadd( 292.287, 327.798, 69.1524, 0.463 ) }
    apic_14 { pt3dadd( 291.572, 326.912, 69.1888, 0.4666 ) }
    apic_14 { pt3dadd( 290.899, 325.986, 69.1589, 0.4796 ) }
    apic_14 { pt3dadd( 290.227, 325.062, 69.062, 0.4718 ) }
    apic_14 { pt3dadd( 289.561, 324.132, 68.9363, 0.3842 ) }
    apic_14 { pt3dadd( 288.919, 323.187, 68.8344, 0.3474 ) }
    apic_14 { pt3dadd( 288.29, 322.232, 68.791, 0.357 ) }
    apic_14 { pt3dadd( 287.662, 321.275, 68.8209, 0.4546 ) }
    apic_14 { pt3dadd( 287.036, 320.319, 68.9416, 0.476 ) }
    apic_14 { pt3dadd( 286.421, 319.361, 69.1802, 0.6038 ) }
    apic_14 { pt3dadd( 285.81, 318.404, 69.5372, 0.643 ) }
    apic_14 { pt3dadd( 285.204, 317.45, 69.9672, 0.53 ) }
    apic_14 { pt3dadd( 284.648, 316.469, 70.4217, 0.5358 ) }
    apic_14 { pt3dadd( 284.162, 315.45, 70.8574, 0.4176 ) }
    apic_14 { pt3dadd( 283.688, 314.422, 71.2594, 0.3656 ) }
    apic_14 { pt3dadd( 283.214, 313.391, 71.6195, 0.3744 ) }
    apic_14 { pt3dadd( 282.605, 312.447, 71.9233, 0.3358 ) }
    apic_14 { pt3dadd( 281.831, 311.608, 72.163, 0.3036 ) }
    apic_14 { pt3dadd( 281.052, 310.775, 72.3517, 0.2814 ) }
    apic_14 { pt3dadd( 280.279, 309.935, 72.4956, 0.2872 ) }
    apic_14 { pt3dadd( 279.54, 309.062, 72.5749, 0.2988 ) }
    apic_14 { pt3dadd( 278.837, 308.159, 72.5799, 0.3144 ) }
    apic_14 { pt3dadd( 278.149, 307.246, 72.5421, 0.374 ) }
    apic_14 { pt3dadd( 277.596, 306.256, 72.5136, 0.335 ) }
    apic_14 { pt3dadd( 277.176, 305.192, 72.5292, 0.302 ) }
    apic_14 { pt3dadd( 276.755, 304.128, 72.5836, 0.2784 ) }
    apic_14 { pt3dadd( 276.336, 303.064, 72.6706, 0.2816 ) }
    apic_14 { pt3dadd( 275.913, 302.001, 72.7667, 0.2876 ) }
    apic_14 { pt3dadd( 275.49, 300.94, 72.8473, 0.2984 ) }
    apic_14 { pt3dadd( 275.065, 299.878, 72.9092, 0.32 ) }
    apic_14 { pt3dadd( 274.641, 298.816, 72.9551, 0.3532 ) }
    apic_14 { pt3dadd( 274.134, 297.793, 72.9963, 0.448 ) }
    apic_14 { pt3dadd( 273.505, 296.839, 73.0433, 0.4626 ) }
    apic_14 { pt3dadd( 272.836, 295.912, 73.1024, 0.5852 ) }
    apic_14 { pt3dadd( 272.167, 294.985, 73.1769, 0.5768 ) }
    apic_14 { pt3dadd( 271.51, 294.049, 73.2648, 0.5618 ) }
    apic_14 { pt3dadd( 270.871, 293.101, 73.3636, 0.5318 ) }
    apic_14 { pt3dadd( 270.237, 292.15, 73.4748, 0.4874 ) }
    apic_14 { pt3dadd( 269.695, 291.15, 73.6305, 0.5778 ) }
    apic_14 { pt3dadd( 269.274, 290.091, 73.8601, 0.593 ) }
    apic_14 { pt3dadd( 268.874, 289.026, 74.1446, 0.4478 ) }
    apic_14 { pt3dadd( 268.475, 287.961, 74.4593, 0.3322 ) }
    apic_14 { pt3dadd( 267.848, 287.046, 74.741, 0.2874 ) }
    apic_14 { pt3dadd( 267.013, 286.269, 74.947, 0.2982 ) }
    apic_14 { pt3dadd( 266.168, 285.5, 75.0831, 0.3192 ) }
    apic_14 { pt3dadd( 265.322, 284.73, 75.1629, 0.3532 ) }
    apic_14 { pt3dadd( 264.559, 283.885, 75.206, 0.44 ) }
    apic_14 { pt3dadd( 263.871, 282.971, 75.2304, 0.4852 ) }
    apic_14 { pt3dadd( 263.185, 282.056, 75.2534, 0.446 ) }
    apic_14 { pt3dadd( 262.499, 281.14, 75.2853, 0.5114 ) }
    apic_14 { pt3dadd( 261.812, 280.225, 75.3306, 0.4198 ) }
    apic_14 { pt3dadd( 261.126, 279.31, 75.3945, 0.3694 ) }
    apic_14 { pt3dadd( 260.441, 278.395, 75.481, 0.3816 ) }
    apic_14 { pt3dadd( 259.755, 277.479, 75.5927, 0.349 ) }
    apic_14 { pt3dadd( 259.195, 276.495, 75.7758, 0.329 ) }
    apic_14 { pt3dadd( 258.748, 275.448, 76.0544, 0.3232 ) }
    apic_14 { pt3dadd( 258.309, 274.401, 76.3958, 0.39 ) }
    apic_14 { pt3dadd( 257.823, 273.376, 76.7606, 0.3656 ) }
    apic_14 { pt3dadd( 257.141, 272.483, 77.07, 0.3534 ) }
    apic_14 { pt3dadd( 256.348, 271.663, 77.2974, 0.4002 ) }
    apic_14 { pt3dadd( 255.552, 270.843, 77.4553, 0.3782 ) }
    apic_14 { pt3dadd( 254.757, 270.022, 77.5634, 0.4078 ) }
    apic_14 { pt3dadd( 253.962, 269.2, 77.6479, 0.3504 ) }
    apic_14 { pt3dadd( 253.167, 268.379, 77.7342, 0.3302 ) }
    apic_14 { pt3dadd( 252.371, 267.558, 77.8422, 0.3328 ) }
    apic_14 { pt3dadd( 251.616, 266.702, 77.9951, 0.3718 ) }
    apic_14 { pt3dadd( 251.022, 265.737, 78.2396, 0.507 ) }
    apic_14 { pt3dadd( 250.515, 264.722, 78.5781, 0.4522 ) }
    apic_14 { pt3dadd( 250.009, 263.709, 78.9782, 0.4616 ) }
    apic_14 { pt3dadd( 249.492, 262.702, 79.3848, 0.3974 ) }
    apic_14 { pt3dadd( 248.958, 261.701, 79.751, 0.4444 ) }
    apic_14 { pt3dadd( 248.42, 260.7, 80.0682, 0.4138 ) }
    apic_14 { pt3dadd( 247.881, 259.698, 80.3379, 0.4696 ) }
    apic_14 { pt3dadd( 247.404, 258.664, 80.5798, 0.485 ) }
    apic_14 { pt3dadd( 247.0, 257.598, 80.8116, 0.483 ) }
    apic_14 { pt3dadd( 246.615, 256.525, 81.0362, 0.3998 ) }
    apic_14 { pt3dadd( 246.232, 255.451, 81.2507, 0.4008 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_14 { pt3dadd( 245.753, 254.416, 81.4041, 0.3376 ) }
    apic_14 { pt3dadd( 245.171, 253.433, 81.4548, 0.3066 ) }
    apic_14 { pt3dadd( 244.562, 252.464, 81.4215, 0.287 ) }
    apic_14 { pt3dadd( 243.955, 251.496, 81.3406, 0.2976 ) }
    apic_14 { pt3dadd( 243.362, 250.517, 81.3271, 0.318 ) }
    apic_14 { pt3dadd( 242.777, 249.535, 81.4248, 0.3508 ) }
    apic_14 { pt3dadd( 242.195, 248.553, 81.6231, 0.4372 ) }
    apic_14 { pt3dadd( 241.691, 247.533, 81.8815, 0.4722 ) }
    apic_14 { pt3dadd( 241.281, 246.473, 82.154, 0.4582 ) }
    apic_14 { pt3dadd( 240.892, 245.402, 82.4205, 0.3594 ) }
    apic_14 { pt3dadd( 240.503, 244.331, 82.6678, 0.3 ) }
    apic_14 { pt3dadd( 240.09, 243.268, 82.9052, 0.2746 ) }
    apic_14 { pt3dadd( 239.626, 242.228, 83.1533, 0.2748 ) }
    apic_14 { pt3dadd( 239.149, 241.194, 83.4134, 0.2748 ) }
    apic_14 { pt3dadd( 238.672, 240.16, 83.6763, 0.2752 ) }
    apic_14 { pt3dadd( 238.236, 239.106, 83.9096, 0.2756 ) }
    apic_14 { pt3dadd( 237.856, 238.03, 84.082, 0.2766 ) }
    apic_14 { pt3dadd( 237.488, 236.948, 84.1968, 0.2782 ) }
    apic_14 { pt3dadd( 237.119, 235.865, 84.266, 0.2812 ) }
    apic_14 { pt3dadd( 236.74, 234.785, 84.3041, 0.287 ) }
    apic_14 { pt3dadd( 236.212, 233.775, 84.3254, 0.2976 ) }
    apic_14 { pt3dadd( 235.642, 232.783, 84.343, 0.3168 ) }
    apic_14 { pt3dadd( 235.071, 231.792, 84.366, 0.3548 ) }
    apic_14 { pt3dadd( 234.502, 230.8, 84.3982, 0.4146 ) }
    apic_14 { pt3dadd( 233.975, 229.784, 84.4441, 0.576 ) }
    apic_14 { pt3dadd( 233.464, 228.761, 84.5085, 0.6312 ) }
    apic_14 { pt3dadd( 232.953, 227.738, 84.5958, 0.5442 ) }
    apic_14 { pt3dadd( 232.443, 226.716, 84.7078, 0.3872 ) }
    apic_14 { pt3dadd( 232.012, 225.66, 84.8974, 0.3044 ) }
    apic_14 { pt3dadd( 231.629, 224.588, 85.1746, 0.283 ) }
    apic_14 { pt3dadd( 231.254, 223.516, 85.5112, 0.29 ) }
    apic_14 { pt3dadd( 230.88, 222.445, 85.8782, 0.304 ) }
    apic_14 { pt3dadd( 230.267, 221.494, 86.1795, 0.324 ) }
    apic_14 { pt3dadd( 229.586, 220.579, 86.401, 0.3916 ) }
    apic_14 { pt3dadd( 228.901, 219.665, 86.5508, 0.3688 ) }
    apic_14 { pt3dadd( 228.215, 218.751, 86.6496, 0.3594 ) }
    apic_14 { pt3dadd( 227.705, 217.732, 86.7224, 0.4112 ) }
    apic_14 { pt3dadd( 227.249, 216.683, 86.793, 0.3996 ) }
    apic_14 { pt3dadd( 226.796, 215.633, 86.8837, 0.4422 ) }
    apic_14 { pt3dadd( 226.343, 214.583, 87.0013, 0.4396 ) }
    apic_14 { pt3dadd( 225.866, 213.547, 87.1909, 0.372 ) }
    apic_14 { pt3dadd( 225.371, 212.522, 87.472, 0.3246 ) }
    apic_14 { pt3dadd( 224.875, 211.502, 87.8226, 0.3148 ) }
    apic_14 { pt3dadd( 224.38, 210.482, 88.2168, 0.3748 ) }
    apic_14 { pt3dadd( 223.963, 209.429, 88.5959, 0.3362 ) }
    apic_14 { pt3dadd( 223.566, 208.366, 88.9462, 0.3044 ) }
    apic_14 { pt3dadd( 223.17, 207.3, 89.266, 0.2828 ) }
    apic_14 { pt3dadd( 222.773, 206.234, 89.5583, 0.2896 ) }
    apic_14 { pt3dadd( 222.366, 205.172, 89.8453, 0.3036 ) }
    apic_14 { pt3dadd( 221.953, 204.111, 90.134, 0.3232 ) }
    apic_14 { pt3dadd( 221.539, 203.051, 90.4246, 0.39 ) }
    apic_14 { pt3dadd( 221.126, 201.992, 90.7116, 0.3656 ) }
    apic_14 { pt3dadd( 220.691, 200.937, 90.9476, 0.3536 ) }
    apic_14 { pt3dadd( 220.247, 199.885, 91.1338, 0.3992 ) }
    apic_14 { pt3dadd( 219.685, 198.892, 91.2848, 0.3838 ) }
    apic_14 { pt3dadd( 219.148, 197.883, 91.4178, 0.3818 ) }
    apic_14 { pt3dadd( 218.752, 196.813, 91.546, 0.4774 ) }
    apic_14 { pt3dadd( 218.486, 195.704, 91.7395, 0.4028 ) }
    apic_14 { pt3dadd( 218.465, 194.573, 92.1057, 0.343 ) }
    apic_14 { pt3dadd( 218.116, 193.501, 92.5459, 0.3084 ) }
    apic_14 { pt3dadd( 217.762, 192.419, 92.8057, 0.3316 ) }
    apic_14 { pt3dadd( 217.407, 191.335, 93.0348, 0.4072 ) }
    apic_14 { pt3dadd( 217.05, 190.251, 93.235, 0.3908 ) }
    apic_14 { pt3dadd( 216.695, 189.166, 93.4136, 0.4324 ) }
    apic_14 { pt3dadd( 216.311, 188.091, 93.5978, 0.3904 ) }
    apic_14 { pt3dadd( 215.865, 187.042, 93.8174, 0.4314 ) }
    apic_14 { pt3dadd( 215.388, 186.008, 94.0688, 0.389 ) }
    apic_14 { pt3dadd( 214.912, 184.973, 94.3368, 0.428 ) }
    apic_14 { pt3dadd( 214.452, 183.931, 94.596, 0.3874 ) }
    apic_14 { pt3dadd( 214.022, 182.875, 94.8184, 0.4018 ) }
    apic_14 { pt3dadd( 213.603, 181.812, 94.9934, 0.4498 ) }
    apic_14 { pt3dadd( 213.182, 180.75, 95.1219, 0.6654 ) }
    apic_14 { pt3dadd( 212.705, 179.713, 95.188, 0.6796 ) }
    apic_14 { pt3dadd( 212.111, 178.737, 95.1605, 0.5186 ) }
    apic_14 { pt3dadd( 211.465, 177.795, 95.0524, 0.442 ) }
    apic_14 { pt3dadd( 210.818, 176.853, 94.9052, 0.3678 ) }
    apic_14 { pt3dadd( 210.189, 175.899, 94.8307, 0.3574 ) }
    apic_14 { pt3dadd( 209.575, 174.935, 94.8984, 0.4076 ) }
    apic_14 { pt3dadd( 208.963, 173.971, 95.083, 0.3918 ) }
    apic_14 { pt3dadd( 208.378, 172.993, 95.3361, 0.4342 ) }
    apic_14 { pt3dadd( 207.846, 171.987, 95.5945, 0.3938 ) }
    apic_14 { pt3dadd( 207.337, 170.967, 95.8314, 0.4378 ) }
    apic_14 { pt3dadd( 206.827, 169.947, 96.0453, 0.4004 ) }
    apic_14 { pt3dadd( 206.317, 168.926, 96.262, 0.45 ) }
    apic_14 { pt3dadd( 205.809, 167.908, 96.5474, 0.4242 ) }
    apic_14 { pt3dadd( 205.302, 166.895, 96.9237, 0.4888 ) }
    apic_14 { pt3dadd( 204.797, 165.885, 97.3686, 0.5214 ) }
    apic_14 { pt3dadd( 204.334, 164.857, 97.8491, 0.5462 ) }
    apic_14 { pt3dadd( 203.923, 163.808, 98.3318, 0.5376 ) }
    apic_14 { pt3dadd( 203.527, 162.752, 98.7949, 0.5578 ) }
    apic_14 { pt3dadd( 203.13, 161.694, 99.223, 0.42 ) }
    apic_14 { pt3dadd( 202.717, 160.637, 99.5789, 0.328 ) }
    apic_14 { pt3dadd( 202.289, 159.582, 99.846, 0.2792 ) }
    apic_14 { pt3dadd( 201.858, 158.525, 100.04, 0.2834 ) }
    apic_14 { pt3dadd( 201.425, 157.468, 100.184, 0.2906 ) }
    apic_14 { pt3dadd( 200.939, 156.434, 100.295, 0.3056 ) }
    apic_14 { pt3dadd( 200.369, 155.443, 100.389, 0.3266 ) }
    apic_14 { pt3dadd( 199.77, 154.47, 100.486, 0.3976 ) }
    apic_14 { pt3dadd( 199.173, 153.496, 100.6, 0.3734 ) }
    apic_14 { pt3dadd( 198.624, 152.495, 100.757, 0.3988 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_14 { pt3dadd( 198.182, 151.446, 100.995, 0.334 ) }
    apic_14 { pt3dadd( 197.783, 150.382, 101.31, 0.3002 ) }
    apic_14 { pt3dadd( 197.386, 149.32, 101.679, 0.2748 ) }
    apic_14 { pt3dadd( 196.973, 148.265, 102.059, 0.275 ) }
    apic_14 { pt3dadd( 196.542, 147.214, 102.415, 0.2756 ) }
    apic_14 { pt3dadd( 196.102, 146.167, 102.743, 0.2764 ) }
    apic_14 { pt3dadd( 195.664, 145.119, 103.055, 0.278 ) }
    apic_14 { pt3dadd( 195.211, 144.077, 103.392, 0.2808 ) }
    apic_14 { pt3dadd( 194.729, 143.054, 103.815, 0.286 ) }
    apic_14 { pt3dadd( 194.239, 142.042, 104.327, 0.296 ) }
    apic_14 { pt3dadd( 193.749, 141.035, 104.901, 0.3138 ) }
    apic_14 { pt3dadd( 193.217, 140.05, 105.471, 0.3492 ) }
    apic_14 { pt3dadd( 192.656, 139.077, 106.008, 0.4046 ) }
    apic_14 { pt3dadd( 192.089, 138.105, 106.508, 0.5562 ) }
    apic_14 { pt3dadd( 191.519, 137.131, 106.97, 0.5998 ) }
    apic_14 { pt3dadd( 190.91, 136.182, 107.421, 0.4604 ) }
    apic_14 { pt3dadd( 190.283, 135.241, 107.867, 0.3568 ) }
    apic_14 { pt3dadd( 189.657, 134.301, 108.309, 0.3278 ) }
    apic_14 { pt3dadd( 189.018, 133.366, 108.721, 0.3984 ) }
    apic_14 { pt3dadd( 188.36, 132.443, 109.066, 0.3822 ) }
    apic_14 { pt3dadd( 187.694, 131.52, 109.354, 0.379 ) }
    apic_14 { pt3dadd( 187.027, 130.597, 109.604, 0.4722 ) }
    apic_14 { pt3dadd( 186.361, 129.672, 109.863, 0.3932 ) }
    apic_14 { pt3dadd( 185.697, 128.749, 110.177, 0.3254 ) }
    apic_14 { pt3dadd( 185.036, 127.828, 110.551, 0.2746 ) }
    apic_14 { pt3dadd( 184.376, 126.91, 110.97, 0.2746 ) }
    apic_14 { pt3dadd( 183.75, 125.968, 111.385, 0.2746 ) }
    apic_14 { pt3dadd( 183.139, 125.013, 111.778, 0.2748 ) }
    apic_14 { pt3dadd( 182.53, 124.058, 112.148, 0.2748 ) }
    apic_14 { pt3dadd( 181.925, 123.098, 112.503, 0.2752 ) }
    apic_14 { pt3dadd( 181.417, 122.085, 112.866, 0.2756 ) }
    apic_14 { pt3dadd( 180.942, 121.056, 113.251, 0.2766 ) }
    apic_14 { pt3dadd( 180.468, 120.029, 113.661, 0.2782 ) }
    apic_14 { pt3dadd( 180.005, 118.999, 114.101, 0.2814 ) }
    apic_14 { pt3dadd( 179.587, 117.952, 114.588, 0.2872 ) }
    apic_14 { pt3dadd( 179.184, 116.904, 115.116, 0.299 ) }
    apic_14 { pt3dadd( 178.782, 115.857, 115.669, 0.3146 ) }
    apic_14 { pt3dadd( 178.268, 114.865, 116.246, 0.3744 ) }
    apic_14 { pt3dadd( 177.553, 114.011, 116.831, 0.3356 ) }
    apic_14 { pt3dadd( 176.793, 113.191, 117.413, 0.3032 ) }
    apic_14 { pt3dadd( 176.031, 112.37, 117.984, 0.2804 ) }
    apic_14 { pt3dadd( 175.436, 111.423, 118.521, 0.2854 ) }
    apic_14 { pt3dadd( 174.904, 110.43, 119.015, 0.2944 ) }
    apic_14 { pt3dadd( 174.376, 109.432, 119.465, 0.3124 ) }
    apic_14 { pt3dadd( 173.873, 108.418, 119.859, 0.3404 ) }
    apic_14 { pt3dadd( 173.49, 107.347, 120.121, 0.4168 ) }
    apic_14 { pt3dadd( 173.13, 106.263, 120.285, 0.44 ) }
    apic_14 { pt3dadd( 172.768, 105.179, 120.399, 0.3726 ) }
    apic_14 { pt3dadd( 172.412, 104.093, 120.545, 0.3244 ) }
    apic_14 { pt3dadd( 172.081, 103.009, 120.902, 0.322 ) }
    apic_14 { pt3dadd( 171.756, 101.936, 121.46, 0.3518 ) }
    apic_14 { pt3dadd( 171.438, 100.876, 122.165, 0.4688 ) }
    apic_14 { pt3dadd( 171.205, 99.7904, 122.845, 0.387 ) }
    apic_14 { pt3dadd( 170.982, 98.6988, 123.48, 0.3136 ) }
    apic_14 { pt3dadd( 170.757, 97.6014, 124.047, 0.2542 ) }
    apic_14 { pt3dadd( 170.536, 96.4973, 124.536, 0.2288 ) }
    apic_14 { pt3dadd( 170.494, 95.3962, 125.288, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 57/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 298.819, 336.934, 67.4237, 0.4698 ) }
    apic_13 { pt3dadd( 298.124, 337.142, 66.8951, 0.2288 ) }
    apic_13 { pt3dadd( 297.085, 337.418, 65.9876, 0.2884 ) }
    apic_13 { pt3dadd( 295.993, 337.339, 65.5564, 0.3012 ) }
    apic_13 { pt3dadd( 294.938, 336.919, 65.3167, 0.3188 ) }
    apic_13 { pt3dadd( 293.879, 336.493, 65.1468, 0.3822 ) }
    apic_13 { pt3dadd( 292.81, 336.092, 64.9692, 0.35 ) }
    apic_13 { pt3dadd( 291.742, 335.692, 64.7626, 0.331 ) }
    apic_13 { pt3dadd( 290.646, 335.381, 64.563, 0.3268 ) }
    apic_13 { pt3dadd( 289.536, 335.114, 64.3616, 0.398 ) }
    apic_13 { pt3dadd( 288.439, 334.804, 64.1497, 0.3742 ) }
    apic_13 { pt3dadd( 287.353, 334.454, 63.9293, 0.4002 ) }
    apic_13 { pt3dadd( 286.24, 334.236, 63.6891, 0.3364 ) }
    apic_13 { pt3dadd( 285.111, 334.085, 63.4228, 0.3046 ) }
    apic_13 { pt3dadd( 284.005, 333.823, 63.1588, 0.2832 ) }
    apic_13 { pt3dadd( 282.911, 333.505, 62.9079, 0.2906 ) }
    apic_13 { pt3dadd( 281.837, 333.128, 62.6301, 0.3052 ) }
    apic_13 { pt3dadd( 280.783, 332.706, 62.3045, 0.326 ) }
    apic_13 { pt3dadd( 279.703, 332.363, 61.9368, 0.3966 ) }
    apic_13 { pt3dadd( 278.609, 332.075, 61.5387, 0.3716 ) }
    apic_13 { pt3dadd( 277.69, 331.456, 61.1727, 0.3954 ) }
    apic_13 { pt3dadd( 276.796, 330.754, 60.8661, 0.3276 ) }
    apic_13 { pt3dadd( 276.245, 329.799, 60.5198, 0.2882 ) }
    apic_13 { pt3dadd( 276.043, 328.687, 60.1829, 0.2542 ) }
    apic_13 { pt3dadd( 275.634, 327.631, 59.859, 0.2288 ) }
    apic_13 { pt3dadd( 275.257, 326.552, 59.859, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 83/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 254.698, 391.588, 30.9282, 0.3148 ) }
    dend_37 { pt3dadd( 254.264, 391.631, 31.339, 0.3746 ) }
    dend_37 { pt3dadd( 254.098, 392.64, 32.2454, 0.3362 ) }
    dend_37 { pt3dadd( 253.29, 393.438, 32.254, 0.3042 ) }
    dend_37 { pt3dadd( 252.49, 394.21, 32.349, 0.2822 ) }
    dend_37 { pt3dadd( 251.387, 394.336, 32.695, 0.289 ) }
    dend_37 { pt3dadd( 250.247, 394.336, 32.9246, 0.3008 ) }
    dend_37 { pt3dadd( 249.191, 394.615, 33.103, 0.3254 ) }
    dend_37 { pt3dadd( 248.937, 395.66, 32.4103, 0.3582 ) }
    dend_37 { pt3dadd( 248.974, 396.627, 33.0417, 0.4808 ) }
    dend_37 { pt3dadd( 248.257, 397.049, 33.661, 0.4088 ) }
    dend_37 { pt3dadd( 247.15, 396.778, 33.8066, 0.3554 ) }
    dend_37 { pt3dadd( 246.01, 396.778, 33.8808, 0.325 ) }
    dend_37 { pt3dadd( 244.887, 396.621, 33.5664, 0.3934 ) }
    dend_37 { pt3dadd( 243.745, 396.586, 33.423, 0.3716 ) }
    dend_37 { pt3dadd( 242.812, 396.037, 33.3172, 0.3658 ) }
    dend_37 { pt3dadd( 241.798, 395.548, 33.1808, 0.4168 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_37 { pt3dadd( 240.727, 395.147, 33.0747, 0.44 ) }
    dend_37 { pt3dadd( 239.644, 394.892, 32.8555, 0.3724 ) }
    dend_37 { pt3dadd( 238.625, 395.401, 32.6178, 0.3254 ) }
    dend_37 { pt3dadd( 237.855, 396.187, 32.6421, 0.3164 ) }
    dend_37 { pt3dadd( 236.823, 396.624, 32.8006, 0.3776 ) }
    dend_37 { pt3dadd( 236.179, 395.877, 33.598, 0.3418 ) }
    dend_37 { pt3dadd( 235.257, 395.303, 33.7394, 0.3144 ) }
    dend_37 { pt3dadd( 234.398, 395.905, 33.4849, 0.3022 ) }
    dend_37 { pt3dadd( 234.014, 396.914, 32.6967, 0.3206 ) }
    dend_37 { pt3dadd( 233.423, 397.849, 32.1824, 0.3856 ) }
    dend_37 { pt3dadd( 232.378, 398.27, 31.696, 0.3564 ) }
    dend_37 { pt3dadd( 231.322, 398.692, 31.3779, 0.3426 ) }
    dend_37 { pt3dadd( 230.246, 399.075, 31.3944, 0.3494 ) }
    dend_37 { pt3dadd( 229.167, 399.453, 31.4678, 0.4334 ) }
    dend_37 { pt3dadd( 228.228, 400.096, 31.6604, 0.4716 ) }
    dend_37 { pt3dadd( 227.298, 400.758, 31.8354, 0.4272 ) }
    dend_37 { pt3dadd( 226.369, 401.425, 31.9318, 0.4462 ) }
    dend_37 { pt3dadd( 225.562, 402.216, 32.0334, 0.4472 ) }
    dend_37 { pt3dadd( 224.882, 403.134, 32.1409, 0.3872 ) }
    dend_37 { pt3dadd( 224.28, 404.078, 32.6645, 0.3464 ) }
    dend_37 { pt3dadd( 223.285, 404.41, 32.9778, 0.386 ) }
    dend_37 { pt3dadd( 222.428, 404.87, 34.3036, 0.3574 ) }
    dend_37 { pt3dadd( 221.427, 404.759, 34.1317, 0.3432 ) }
    dend_37 { pt3dadd( 220.663, 404.637, 32.7855, 0.3564 ) }
    dend_37 { pt3dadd( 220.257, 405.658, 32.1678, 0.4176 ) }
    dend_37 { pt3dadd( 219.696, 406.638, 31.9281, 0.5814 ) }
    dend_37 { pt3dadd( 218.804, 407.314, 31.8584, 0.6414 ) }
    dend_37 { pt3dadd( 217.702, 407.313, 31.9169, 0.5628 ) }
    dend_37 { pt3dadd( 216.642, 407.428, 32.0625, 0.4228 ) }
    dend_37 { pt3dadd( 215.637, 407.957, 32.2207, 0.3648 ) }
    dend_37 { pt3dadd( 214.696, 408.557, 32.4047, 0.4224 ) }
    dend_37 { pt3dadd( 214.009, 409.472, 32.4212, 0.414 ) }
    dend_37 { pt3dadd( 213.299, 410.36, 32.4363, 0.4996 ) }
    dend_37 { pt3dadd( 212.307, 410.931, 32.4355, 0.3968 ) }
    dend_37 { pt3dadd( 211.314, 411.498, 32.4318, 0.3322 ) }
    dend_37 { pt3dadd( 210.281, 411.986, 32.3173, 0.287 ) }
    dend_37 { pt3dadd( 209.246, 412.464, 32.1317, 0.2988 ) }
    dend_37 { pt3dadd( 208.146, 412.656, 31.8858, 0.314 ) }
    dend_37 { pt3dadd( 207.003, 412.656, 31.8699, 0.3734 ) }
    dend_37 { pt3dadd( 205.886, 412.591, 32.3333, 0.3338 ) }
    dend_37 { pt3dadd( 204.855, 412.448, 32.6575, 0.2998 ) }
    dend_37 { pt3dadd( 204.954, 413.47, 33.36, 0.2742 ) }
    dend_37 { pt3dadd( 205.064, 413.828, 31.1718, 0.274 ) }
    dend_37 { pt3dadd( 204.213, 414.381, 30.063, 0.2736 ) }
    dend_37 { pt3dadd( 203.354, 414.946, 30.1218, 0.2728 ) }
    dend_37 { pt3dadd( 202.337, 415.218, 31.047, 0.2712 ) }
    dend_37 { pt3dadd( 201.257, 415.572, 31.0881, 0.2684 ) }
    dend_37 { pt3dadd( 200.63, 416.497, 30.6715, 0.2626 ) }
    dend_37 { pt3dadd( 199.589, 416.777, 30.1249, 0.2542 ) }
    dend_37 { pt3dadd( 198.503, 416.736, 30.7345, 0.2288 ) }
    dend_37 { pt3dadd( 198.771, 416.32, 32.753, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 51/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 254.698, 391.588, 30.9282, 0.3148 ) }
    dend_36 { pt3dadd( 253.485, 391.497, 29.9964, 0.2288 ) }
    dend_36 { pt3dadd( 252.409, 391.328, 29.484, 0.2758 ) }
    dend_36 { pt3dadd( 251.372, 390.888, 29.9715, 0.2766 ) }
    dend_36 { pt3dadd( 250.343, 390.428, 30.4324, 0.2786 ) }
    dend_36 { pt3dadd( 249.329, 389.921, 30.8249, 0.282 ) }
    dend_36 { pt3dadd( 248.683, 389.445, 32.5802, 0.288 ) }
    dend_36 { pt3dadd( 247.659, 389.163, 33.3519, 0.3006 ) }
    dend_36 { pt3dadd( 247.319, 388.204, 32.6575, 0.3176 ) }
    dend_36 { pt3dadd( 247.102, 387.496, 30.7031, 0.38 ) }
    dend_36 { pt3dadd( 246.228, 387.466, 29.0427, 0.3458 ) }
    dend_36 { pt3dadd( 245.097, 387.449, 28.9148, 0.3232 ) }
    dend_36 { pt3dadd( 244.571, 386.64, 29.8724, 0.3122 ) }
    dend_36 { pt3dadd( 244.602, 385.56, 30.7278, 0.37 ) }
    dend_36 { pt3dadd( 245.131, 384.584, 31.1542, 0.3276 ) }
    dend_36 { pt3dadd( 245.952, 383.866, 31.8564, 0.2882 ) }
    dend_36 { pt3dadd( 246.253, 383.002, 32.5293, 0.2542 ) }
    dend_36 { pt3dadd( 245.955, 381.914, 32.8798, 0.2288 ) }
    dend_36 { pt3dadd( 246.404, 381.054, 32.753, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 70/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 381.055, 342.125, 43.3544, 0.4526 ) }
    dend_22 { pt3dadd( 381.618, 341.988, 43.5702, 0.5316 ) }
    dend_22 { pt3dadd( 382.668, 341.56, 43.8623, 0.4188 ) }
    dend_22 { pt3dadd( 383.635, 340.96, 44.0994, 0.3258 ) }
    dend_22 { pt3dadd( 384.599, 340.349, 44.2915, 0.2752 ) }
    dend_22 { pt3dadd( 385.497, 339.648, 44.4906, 0.2756 ) }
    dend_22 { pt3dadd( 386.328, 338.866, 44.709, 0.2766 ) }
    dend_22 { pt3dadd( 387.211, 338.145, 44.8521, 0.2782 ) }
    dend_22 { pt3dadd( 387.934, 337.265, 44.9837, 0.2814 ) }
    dend_22 { pt3dadd( 388.781, 336.508, 45.2318, 0.287 ) }
    dend_22 { pt3dadd( 389.749, 335.92, 45.6154, 0.2988 ) }
    dend_22 { pt3dadd( 390.745, 335.366, 45.8536, 0.3142 ) }
    dend_22 { pt3dadd( 391.742, 334.81, 46.0242, 0.3734 ) }
    dend_22 { pt3dadd( 392.729, 334.236, 46.1936, 0.3338 ) }
    dend_22 { pt3dadd( 393.676, 333.616, 46.3271, 0.3 ) }
    dend_22 { pt3dadd( 394.24, 332.626, 46.4204, 0.2746 ) }
    dend_22 { pt3dadd( 394.591, 331.539, 46.5018, 0.2746 ) }
    dend_22 { pt3dadd( 395.103, 330.518, 46.625, 0.2746 ) }
    dend_22 { pt3dadd( 395.62, 329.5, 46.7984, 0.2746 ) }
    dend_22 { pt3dadd( 396.191, 328.51, 46.9543, 0.2746 ) }
    dend_22 { pt3dadd( 396.797, 327.542, 47.0856, 0.2746 ) }
    dend_22 { pt3dadd( 397.474, 326.62, 47.2027, 0.2746 ) }
    dend_22 { pt3dadd( 398.169, 325.714, 47.3452, 0.2746 ) }
    dend_22 { pt3dadd( 398.901, 324.843, 47.5065, 0.2748 ) }
    dend_22 { pt3dadd( 399.826, 324.171, 47.6157, 0.2748 ) }
    dend_22 { pt3dadd( 400.805, 323.585, 47.703, 0.2752 ) }
    dend_22 { pt3dadd( 401.83, 323.081, 47.8094, 0.2756 ) }
    dend_22 { pt3dadd( 402.799, 322.475, 47.9091, 0.2766 ) }
    dend_22 { pt3dadd( 403.707, 321.782, 47.9651, 0.2784 ) }
    dend_22 { pt3dadd( 404.701, 321.239, 47.9041, 0.2818 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_22 { pt3dadd( 405.79, 320.913, 47.8128, 0.2876 ) }
    dend_22 { pt3dadd( 406.759, 320.325, 47.7476, 0.3 ) }
    dend_22 { pt3dadd( 407.617, 319.571, 47.7582, 0.3162 ) }
    dend_22 { pt3dadd( 408.557, 318.92, 47.8038, 0.3774 ) }
    dend_22 { pt3dadd( 409.577, 318.447, 47.7579, 0.3414 ) }
    dend_22 { pt3dadd( 410.706, 318.307, 47.7327, 0.314 ) }
    dend_22 { pt3dadd( 411.839, 318.199, 47.7478, 0.3002 ) }
    dend_22 { pt3dadd( 412.927, 317.862, 47.8178, 0.323 ) }
    dend_22 { pt3dadd( 413.991, 317.444, 47.9055, 0.3602 ) }
    dend_22 { pt3dadd( 415.083, 317.112, 47.9394, 0.4534 ) }
    dend_22 { pt3dadd( 416.145, 316.712, 47.7716, 0.5092 ) }
    dend_22 { pt3dadd( 417.027, 316.005, 47.5983, 0.4928 ) }
    dend_22 { pt3dadd( 417.824, 315.187, 47.6392, 0.5882 ) }
    dend_22 { pt3dadd( 418.148, 314.126, 47.885, 0.6122 ) }
    dend_22 { pt3dadd( 418.611, 313.091, 48.1513, 0.483 ) }
    dend_22 { pt3dadd( 419.171, 312.099, 48.4033, 0.3996 ) }
    dend_22 { pt3dadd( 419.852, 311.187, 48.6534, 0.4028 ) }
    dend_22 { pt3dadd( 420.629, 310.353, 48.8634, 0.5578 ) }
    dend_22 { pt3dadd( 421.536, 309.663, 49.0056, 0.579 ) }
    dend_22 { pt3dadd( 422.413, 308.93, 49.1308, 0.5376 ) }
    dend_22 { pt3dadd( 423.216, 308.119, 49.2906, 0.6234 ) }
    dend_22 { pt3dadd( 423.797, 307.14, 49.4446, 0.6808 ) }
    dend_22 { pt3dadd( 424.208, 306.074, 49.5569, 0.5944 ) }
    dend_22 { pt3dadd( 424.52, 304.974, 49.6362, 0.6828 ) }
    dend_22 { pt3dadd( 424.714, 303.848, 49.6902, 0.555 ) }
    dend_22 { pt3dadd( 424.747, 302.705, 49.7238, 0.5914 ) }
    dend_22 { pt3dadd( 424.326, 301.647, 49.7431, 0.4746 ) }
    dend_22 { pt3dadd( 424.225, 300.51, 49.7633, 0.4676 ) }
    dend_22 { pt3dadd( 424.534, 299.41, 49.7913, 0.5798 ) }
    dend_22 { pt3dadd( 424.891, 298.322, 49.8308, 0.6384 ) }
    dend_22 { pt3dadd( 425.141, 297.207, 49.8842, 0.5578 ) }
    dend_22 { pt3dadd( 425.354, 296.083, 49.9537, 0.4118 ) }
    dend_22 { pt3dadd( 425.704, 294.995, 50.0637, 0.3522 ) }
    dend_22 { pt3dadd( 426.249, 293.992, 50.2398, 0.361 ) }
    dend_22 { pt3dadd( 426.973, 293.11, 50.4501, 0.486 ) }
    dend_22 { pt3dadd( 427.835, 292.365, 50.6649, 0.4182 ) }
    dend_22 { pt3dadd( 428.826, 291.8, 50.8693, 0.3738 ) }
    dend_22 { pt3dadd( 429.873, 291.346, 51.0566, 0.3536 ) }
    dend_22 { pt3dadd( 430.908, 290.863, 51.242, 0.4724 ) }
    dend_22 { pt3dadd( 431.914, 290.339, 51.4626, 0.3932 ) }
    dend_22 { pt3dadd( 432.879, 289.948, 51.9747, 0.3256 ) }
    dend_22 { pt3dadd( 433.928, 289.618, 52.6201, 0.2748 ) }
    dend_22 { pt3dadd( 434.672, 289.949, 54.0313, 0.2752 ) }
    dend_22 { pt3dadd( 435.522, 289.451, 55.2513, 0.2756 ) }
    dend_22 { pt3dadd( 436.009, 288.694, 56.5118, 0.2766 ) }
    dend_22 { pt3dadd( 436.979, 288.161, 57.1838, 0.2782 ) }
    dend_22 { pt3dadd( 438.023, 287.721, 57.4367, 0.2814 ) }
    dend_22 { pt3dadd( 439.042, 287.213, 57.3709, 0.287 ) }
    dend_22 { pt3dadd( 439.773, 286.483, 56.915, 0.2988 ) }
    dend_22 { pt3dadd( 439.983, 285.543, 55.7239, 0.314 ) }
    dend_22 { pt3dadd( 439.983, 284.435, 55.0362, 0.3734 ) }
    dend_22 { pt3dadd( 439.323, 283.758, 53.7303, 0.3338 ) }
    dend_22 { pt3dadd( 439.22, 282.712, 52.7638, 0.2998 ) }
    dend_22 { pt3dadd( 438.987, 281.633, 52.3065, 0.2744 ) }
    dend_22 { pt3dadd( 438.538, 280.583, 52.1366, 0.2742 ) }
    dend_22 { pt3dadd( 439.145, 279.817, 52.4796, 0.274 ) }
    dend_22 { pt3dadd( 439.211, 279.155, 53.2787, 0.2736 ) }
    dend_22 { pt3dadd( 438.817, 278.177, 54.0621, 0.2728 ) }
    dend_22 { pt3dadd( 438.457, 277.111, 54.4712, 0.2712 ) }
    dend_22 { pt3dadd( 437.478, 276.596, 54.6552, 0.2684 ) }
    dend_22 { pt3dadd( 436.537, 275.961, 54.4359, 0.2626 ) }
    dend_22 { pt3dadd( 435.58, 275.35, 54.1713, 0.2542 ) }
    dend_22 { pt3dadd( 434.535, 274.897, 53.9549, 0.2288 ) }
    dend_22 { pt3dadd( 433.725, 274.34, 53.0824, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 64/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 381.055, 342.125, 43.3544, 0.4526 ) }
    dend_21 { pt3dadd( 382.013, 342.125, 42.8574, 0.2288 ) }
    dend_21 { pt3dadd( 383.152, 342.118, 42.6199, 0.3178 ) }
    dend_21 { pt3dadd( 384.288, 342.039, 42.5037, 0.3802 ) }
    dend_21 { pt3dadd( 385.287, 341.614, 42.3394, 0.3464 ) }
    dend_21 { pt3dadd( 385.899, 340.657, 42.084, 0.3242 ) }
    dend_21 { pt3dadd( 386.499, 339.741, 41.5733, 0.3142 ) }
    dend_21 { pt3dadd( 387.559, 339.414, 41.0127, 0.3734 ) }
    dend_21 { pt3dadd( 388.667, 339.25, 40.458, 0.3338 ) }
    dend_21 { pt3dadd( 389.615, 338.659, 39.9302, 0.3 ) }
    dend_21 { pt3dadd( 390.444, 337.891, 39.5147, 0.2746 ) }
    dend_21 { pt3dadd( 391.523, 337.608, 39.067, 0.2746 ) }
    dend_21 { pt3dadd( 392.598, 337.926, 38.6632, 0.2746 ) }
    dend_21 { pt3dadd( 393.684, 337.594, 38.3527, 0.2746 ) }
    dend_21 { pt3dadd( 394.654, 337.002, 38.0772, 0.2746 ) }
    dend_21 { pt3dadd( 395.508, 336.255, 37.7423, 0.2746 ) }
    dend_21 { pt3dadd( 396.413, 335.579, 37.4413, 0.2746 ) }
    dend_21 { pt3dadd( 397.069, 334.665, 37.1269, 0.2746 ) }
    dend_21 { pt3dadd( 397.411, 333.601, 36.573, 0.2746 ) }
    dend_21 { pt3dadd( 397.47, 332.512, 35.882, 0.2746 ) }
    dend_21 { pt3dadd( 397.31, 331.416, 35.1798, 0.2746 ) }
    dend_21 { pt3dadd( 397.796, 330.563, 34.5593, 0.2746 ) }
    dend_21 { pt3dadd( 398.549, 329.736, 34.0788, 0.2746 ) }
    dend_21 { pt3dadd( 398.829, 328.68, 33.7327, 0.2746 ) }
    dend_21 { pt3dadd( 398.897, 327.544, 33.4664, 0.2746 ) }
    dend_21 { pt3dadd( 398.943, 326.407, 33.182, 0.2746 ) }
    dend_21 { pt3dadd( 399.09, 325.284, 32.8443, 0.2746 ) }
    dend_21 { pt3dadd( 399.285, 324.167, 32.466, 0.2746 ) }
    dend_21 { pt3dadd( 399.248, 323.043, 32.0908, 0.2744 ) }
    dend_21 { pt3dadd( 399.069, 321.922, 31.7472, 0.2744 ) }
    dend_21 { pt3dadd( 398.944, 320.794, 31.4174, 0.2742 ) }
    dend_21 { pt3dadd( 398.916, 319.659, 31.0825, 0.274 ) }
    dend_21 { pt3dadd( 398.932, 318.524, 30.7457, 0.2736 ) }
    dend_21 { pt3dadd( 399.188, 317.423, 30.4592, 0.2728 ) }
    dend_21 { pt3dadd( 399.66, 316.392, 30.1762, 0.2712 ) }
    dend_21 { pt3dadd( 400.296, 315.461, 29.7382, 0.2684 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_21 { pt3dadd( 401.208, 314.791, 29.4389, 0.2626 ) }
    dend_21 { pt3dadd( 402.222, 314.266, 29.3241, 0.2542 ) }
    dend_21 { pt3dadd( 403.201, 313.673, 29.2897, 0.2288 ) }
    dend_21 { pt3dadd( 403.954, 312.813, 29.3647, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 357.137, 363.498, 55.2168, 0.4638 ) }
    dend_15 { pt3dadd( 357.686, 363.167, 55.2499, 0.4174 ) }
    dend_15 { pt3dadd( 358.58, 362.464, 55.2765, 0.4046 ) }
    dend_15 { pt3dadd( 359.406, 361.673, 55.3806, 0.4836 ) }
    dend_15 { pt3dadd( 360.206, 360.86, 55.5786, 0.5898 ) }
    dend_15 { pt3dadd( 361.018, 360.059, 55.8068, 0.523 ) }
    dend_15 { pt3dadd( 361.839, 359.266, 56.016, 0.5352 ) }
    dend_15 { pt3dadd( 362.658, 358.472, 56.1781, 0.5852 ) }
    dend_15 { pt3dadd( 363.48, 357.676, 56.2808, 0.5448 ) }
    dend_15 { pt3dadd( 364.301, 356.881, 56.3181, 0.43 ) }
    dend_15 { pt3dadd( 365.145, 356.108, 56.296, 0.4094 ) }
    dend_15 { pt3dadd( 366.003, 355.352, 56.2327, 0.3532 ) }
    dend_15 { pt3dadd( 366.784, 354.521, 56.1302, 0.3368 ) }
    dend_15 { pt3dadd( 367.52, 353.647, 56.0064, 0.3384 ) }
    dend_15 { pt3dadd( 368.204, 352.731, 55.981, 0.4134 ) }
    dend_15 { pt3dadd( 368.82, 351.767, 56.0515, 0.4334 ) }
    dend_15 { pt3dadd( 369.262, 350.717, 56.1291, 0.3606 ) }
    dend_15 { pt3dadd( 369.701, 349.661, 56.1994, 0.3026 ) }
    dend_15 { pt3dadd( 370.284, 348.681, 56.2766, 0.2792 ) }
    dend_15 { pt3dadd( 370.815, 347.67, 56.3718, 0.2834 ) }
    dend_15 { pt3dadd( 371.253, 346.615, 56.4878, 0.2906 ) }
    dend_15 { pt3dadd( 371.786, 345.606, 56.6216, 0.3054 ) }
    dend_15 { pt3dadd( 372.449, 344.677, 56.7675, 0.3266 ) }
    dend_15 { pt3dadd( 373.098, 343.74, 56.9923, 0.3964 ) }
    dend_15 { pt3dadd( 373.748, 342.806, 57.2925, 0.3774 ) }
    dend_15 { pt3dadd( 374.707, 342.221, 57.561, 0.3762 ) }
    dend_15 { pt3dadd( 375.807, 341.945, 57.8026, 0.4372 ) }
    dend_15 { pt3dadd( 376.698, 341.262, 58.0885, 0.4722 ) }
    dend_15 { pt3dadd( 377.495, 340.452, 58.3878, 0.4582 ) }
    dend_15 { pt3dadd( 378.073, 339.474, 58.6466, 0.3594 ) }
    dend_15 { pt3dadd( 378.56, 338.443, 58.8633, 0.3 ) }
    dend_15 { pt3dadd( 378.987, 337.385, 59.078, 0.2746 ) }
    dend_15 { pt3dadd( 379.379, 336.315, 59.3043, 0.2746 ) }
    dend_15 { pt3dadd( 379.849, 335.278, 59.563, 0.2746 ) }
    dend_15 { pt3dadd( 380.383, 334.275, 59.8744, 0.2746 ) }
    dend_15 { pt3dadd( 380.586, 333.164, 60.237, 0.2746 ) }
    dend_15 { pt3dadd( 380.597, 332.032, 60.6259, 0.2746 ) }
    dend_15 { pt3dadd( 380.628, 330.902, 61.0518, 0.2746 ) }
    dend_15 { pt3dadd( 380.849, 329.8, 61.57, 0.2746 ) }
    dend_15 { pt3dadd( 381.116, 328.714, 62.1468, 0.2746 ) }
    dend_15 { pt3dadd( 381.543, 327.681, 62.7357, 0.2746 ) }
    dend_15 { pt3dadd( 381.982, 326.654, 63.3489, 0.2746 ) }
    dend_15 { pt3dadd( 382.429, 325.636, 64.0083, 0.2746 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 47/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 357.137, 363.498, 55.2168, 0.4638 ) }
    dend_14 { pt3dadd( 358.556, 363.426, 55.3465, 0.2288 ) }
    dend_14 { pt3dadd( 359.699, 363.368, 55.2919, 0.2988 ) }
    dend_14 { pt3dadd( 360.841, 363.31, 55.2339, 0.3142 ) }
    dend_14 { pt3dadd( 361.982, 363.253, 55.1628, 0.3734 ) }
    dend_14 { pt3dadd( 363.125, 363.202, 55.0782, 0.334 ) }
    dend_14 { pt3dadd( 364.262, 363.311, 54.9632, 0.3 ) }
    dend_14 { pt3dadd( 365.397, 363.437, 54.8257, 0.2746 ) }
    dend_14 { pt3dadd( 366.522, 363.613, 54.5454, 0.2748 ) }
    dend_14 { pt3dadd( 367.589, 363.233, 54.196, 0.2748 ) }
    dend_14 { pt3dadd( 368.638, 362.81, 54.0613, 0.275 ) }
    dend_14 { pt3dadd( 369.775, 362.693, 54.0198, 0.2754 ) }
    dend_14 { pt3dadd( 370.884, 362.436, 53.8896, 0.2762 ) }
    dend_14 { pt3dadd( 371.956, 362.051, 53.6183, 0.2776 ) }
    dend_14 { pt3dadd( 373.021, 361.648, 53.375, 0.2804 ) }
    dend_14 { pt3dadd( 374.076, 361.213, 53.1597, 0.2854 ) }
    dend_14 { pt3dadd( 375.147, 361.116, 52.964, 0.2944 ) }
    dend_14 { pt3dadd( 376.227, 361.483, 52.7492, 0.3122 ) }
    dend_14 { pt3dadd( 377.277, 361.465, 52.5179, 0.3402 ) }
    dend_14 { pt3dadd( 378.305, 360.966, 52.3592, 0.4166 ) }
    dend_14 { pt3dadd( 379.339, 360.481, 52.2788, 0.4396 ) }
    dend_14 { pt3dadd( 380.405, 360.068, 52.2427, 0.3718 ) }
    dend_14 { pt3dadd( 381.488, 359.701, 52.2225, 0.3242 ) }
    dend_14 { pt3dadd( 382.608, 359.539, 52.2304, 0.3142 ) }
    dend_14 { pt3dadd( 383.753, 359.528, 52.2634, 0.3734 ) }
    dend_14 { pt3dadd( 384.897, 359.534, 52.3099, 0.3338 ) }
    dend_14 { pt3dadd( 386.039, 359.555, 52.3827, 0.3 ) }
    dend_14 { pt3dadd( 387.184, 359.588, 52.449, 0.2746 ) }
    dend_14 { pt3dadd( 388.326, 359.63, 52.4516, 0.2746 ) }
    dend_14 { pt3dadd( 389.469, 359.644, 52.3916, 0.2746 ) }
    dend_14 { pt3dadd( 390.606, 359.547, 52.318, 0.2746 ) }
    dend_14 { pt3dadd( 391.695, 359.222, 52.32, 0.2746 ) }
    dend_14 { pt3dadd( 392.748, 358.778, 52.4213, 0.2746 ) }
    dend_14 { pt3dadd( 393.789, 358.305, 52.4916, 0.2746 ) }
    dend_14 { pt3dadd( 394.836, 357.843, 52.4972, 0.2746 ) }
    dend_14 { pt3dadd( 395.929, 357.519, 52.5204, 0.2746 ) }
    dend_14 { pt3dadd( 397.03, 357.208, 52.551, 0.2746 ) }
    dend_14 { pt3dadd( 398.057, 356.719, 52.4672, 0.2746 ) }
    dend_14 { pt3dadd( 398.965, 356.031, 52.3158, 0.2746 ) }
    dend_14 { pt3dadd( 399.717, 355.174, 52.2301, 0.2746 ) }
    dend_14 { pt3dadd( 400.678, 354.582, 52.1416, 0.2748 ) }
    dend_14 { pt3dadd( 401.799, 354.49, 52.0453, 0.275 ) }
    dend_14 { pt3dadd( 402.931, 354.338, 51.9658, 0.2752 ) }
    dend_14 { pt3dadd( 404.021, 353.999, 51.9114, 0.276 ) }
    dend_14 { pt3dadd( 405.108, 353.644, 51.8613, 0.277 ) }
    dend_14 { pt3dadd( 406.206, 353.324, 51.8011, 0.2792 ) }
    dend_14 { pt3dadd( 407.307, 353.016, 51.7325, 0.2832 ) }
    dend_14 { pt3dadd( 408.423, 353.169, 51.6471, 0.2906 ) }
    dend_14 { pt3dadd( 409.543, 353.394, 51.5332, 0.304 ) }
    dend_14 { pt3dadd( 410.679, 353.486, 51.3369, 0.3298 ) }
    dend_14 { pt3dadd( 411.816, 353.551, 51.0706, 0.374 ) }
    dend_14 { pt3dadd( 412.953, 353.558, 50.7688, 0.4738 ) }
    dend_14 { pt3dadd( 414.09, 353.538, 50.4543, 0.572 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_14 { pt3dadd( 415.219, 353.413, 50.16, 0.4894 ) }
    dend_14 { pt3dadd( 416.311, 353.088, 49.938, 0.4768 ) }
    dend_14 { pt3dadd( 417.402, 352.749, 49.7784, 0.4576 ) }
    dend_14 { pt3dadd( 418.504, 352.449, 49.6348, 0.4012 ) }
    dend_14 { pt3dadd( 419.605, 352.146, 49.4936, 0.3982 ) }
    dend_14 { pt3dadd( 420.677, 351.747, 49.4799, 0.356 ) }
    dend_14 { pt3dadd( 421.817, 351.742, 49.6941, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 7/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 382.429, 325.636, 64.0083, 0.2746 ) }
    dend_17 { pt3dadd( 382.491, 325.325, 64.6083, 0.2746 ) }
    dend_17 { pt3dadd( 382.708, 324.224, 65.1476, 0.2746 ) }
    dend_17 { pt3dadd( 382.925, 323.123, 65.683, 0.2746 ) }
    dend_17 { pt3dadd( 383.13, 322.019, 66.2141, 0.2746 ) }
    dend_17 { pt3dadd( 383.24, 320.898, 66.7038, 0.2746 ) }
    dend_17 { pt3dadd( 383.296, 319.77, 67.1544, 0.2746 ) }
    dend_17 { pt3dadd( 383.281, 318.645, 67.6217, 0.2746 ) }
    dend_17 { pt3dadd( 383.033, 317.554, 68.1971, 0.2746 ) }
    dend_17 { pt3dadd( 382.801, 316.461, 68.8002, 0.2746 ) }
    dend_17 { pt3dadd( 382.611, 315.357, 69.3683, 0.2748 ) }
    dend_17 { pt3dadd( 382.503, 314.243, 69.9154, 0.275 ) }
    dend_17 { pt3dadd( 382.53, 313.121, 70.4281, 0.2752 ) }
    dend_17 { pt3dadd( 382.388, 312.004, 70.8711, 0.2758 ) }
    dend_17 { pt3dadd( 382.06, 310.918, 71.2135, 0.2768 ) }
    dend_17 { pt3dadd( 381.703, 309.836, 71.4692, 0.2788 ) }
    dend_17 { pt3dadd( 381.311, 308.763, 71.6363, 0.2826 ) }
    dend_17 { pt3dadd( 380.935, 307.683, 71.673, 0.2892 ) }
    dend_17 { pt3dadd( 380.509, 306.624, 71.5428, 0.3026 ) }
    dend_17 { pt3dadd( 380.19, 305.543, 71.4487, 0.3214 ) }
    dend_17 { pt3dadd( 380.141, 304.404, 71.5736, 0.387 ) }
    dend_17 { pt3dadd( 380.139, 303.271, 71.9734, 0.3588 ) }
    dend_17 { pt3dadd( 380.113, 302.148, 72.4886, 0.3482 ) }
    dend_17 { pt3dadd( 379.926, 301.044, 72.9946, 0.3534 ) }
    dend_17 { pt3dadd( 379.611, 299.958, 73.4126, 0.472 ) }
    dend_17 { pt3dadd( 379.208, 298.896, 73.7078, 0.3926 ) }
    dend_17 { pt3dadd( 378.762, 297.846, 73.9085, 0.3244 ) }
    dend_17 { pt3dadd( 378.316, 296.796, 74.1146, 0.2728 ) }
    dend_17 { pt3dadd( 377.882, 295.748, 74.4638, 0.2712 ) }
    dend_17 { pt3dadd( 377.46, 294.709, 75.0086, 0.2684 ) }
    dend_17 { pt3dadd( 377.053, 293.664, 75.5639, 0.2626 ) }
    dend_17 { pt3dadd( 376.648, 292.616, 76.0925, 0.2542 ) }
    dend_17 { pt3dadd( 376.49, 291.511, 76.606, 0.2288 ) }
    dend_17 { pt3dadd( 376.474, 290.371, 76.8001, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 41/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 382.429, 325.636, 64.0083, 0.2746 ) }
    dend_16 { pt3dadd( 382.367, 325.144, 64.3622, 0.2288 ) }
    dend_16 { pt3dadd( 382.225, 324.012, 64.4876, 0.2746 ) }
    dend_16 { pt3dadd( 382.083, 322.877, 64.535, 0.2746 ) }
    dend_16 { pt3dadd( 381.964, 321.739, 64.5971, 0.2746 ) }
    dend_16 { pt3dadd( 381.845, 320.606, 64.6803, 0.2748 ) }
    dend_16 { pt3dadd( 380.807, 320.139, 64.806, 0.275 ) }
    dend_16 { pt3dadd( 379.672, 320.075, 65.0356, 0.2752 ) }
    dend_16 { pt3dadd( 378.679, 319.576, 65.2778, 0.2758 ) }
    dend_16 { pt3dadd( 378.169, 318.565, 65.5612, 0.2768 ) }
    dend_16 { pt3dadd( 377.811, 317.483, 65.784, 0.2788 ) }
    dend_16 { pt3dadd( 377.402, 316.417, 65.9182, 0.2822 ) }
    dend_16 { pt3dadd( 377.106, 315.318, 66.08, 0.2886 ) }
    dend_16 { pt3dadd( 376.915, 314.194, 66.2735, 0.3018 ) }
    dend_16 { pt3dadd( 376.599, 313.101, 66.4448, 0.3198 ) }
    dend_16 { pt3dadd( 376.152, 312.05, 66.575, 0.384 ) }
    dend_16 { pt3dadd( 375.685, 311.008, 66.7523, 0.3532 ) }
    dend_16 { pt3dadd( 375.178, 309.99, 67.0177, 0.3368 ) }
    dend_16 { pt3dadd( 374.607, 309.009, 67.3795, 0.3386 ) }
    dend_16 { pt3dadd( 374.077, 308.015, 67.8068, 0.4136 ) }
    dend_16 { pt3dadd( 373.641, 306.973, 68.2528, 0.4338 ) }
    dend_16 { pt3dadd( 373.09, 305.996, 68.6451, 0.3612 ) }
    dend_16 { pt3dadd( 372.418, 305.078, 68.9422, 0.3034 ) }
    dend_16 { pt3dadd( 371.998, 304.048, 69.2832, 0.2812 ) }
    dend_16 { pt3dadd( 371.878, 302.931, 69.7637, 0.2864 ) }
    dend_16 { pt3dadd( 371.688, 301.827, 70.2946, 0.2978 ) }
    dend_16 { pt3dadd( 371.428, 300.736, 70.8403, 0.3122 ) }
    dend_16 { pt3dadd( 371.035, 299.686, 71.3524, 0.37 ) }
    dend_16 { pt3dadd( 370.516, 298.689, 71.8651, 0.3276 ) }
    dend_16 { pt3dadd( 370.147, 297.652, 72.5469, 0.2882 ) }
    dend_16 { pt3dadd( 370.457, 296.609, 73.2441, 0.2542 ) }
    dend_16 { pt3dadd( 370.52, 295.491, 73.7825, 0.2288 ) }
    dend_16 { pt3dadd( 370.979, 294.493, 74.5413, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_302, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_302 = new SectionList()
    soma_0 ModelViewParmSubset_302.append()
    axon_0 ModelViewParmSubset_302.append()
    axon_1 ModelViewParmSubset_302.append()

    // Group: {name=ModelViewParmSubset_303, groups=[], sections=[apic_0, dend_23, dend_6, dend_5, dend_0, apic_6, apic_1, dend_29, dend_24, dend_10, dend_7, dend_2, dend_1, apic_10, apic_7, apic_3, apic_2, dend_33, dend_30, dend_26, dend_25, dend_18, dend_11, dend_9, dend_8, dend_4, dend_3, apic_12, apic_11, apic_9, apic_8, apic_5, apic_4, dend_35, dend_34, dend_32, dend_31, dend_28, dend_27, dend_20, dend_19, dend_13, dend_12, apic_14, apic_13, dend_37, dend_36, dend_22, dend_21, dend_15, dend_14, dend_17, dend_16]}
    ModelViewParmSubset_303 = new SectionList()
    apic_0 ModelViewParmSubset_303.append()
    dend_23 ModelViewParmSubset_303.append()
    dend_6 ModelViewParmSubset_303.append()
    dend_5 ModelViewParmSubset_303.append()
    dend_0 ModelViewParmSubset_303.append()
    apic_6 ModelViewParmSubset_303.append()
    apic_1 ModelViewParmSubset_303.append()
    dend_29 ModelViewParmSubset_303.append()
    dend_24 ModelViewParmSubset_303.append()
    dend_10 ModelViewParmSubset_303.append()
    dend_7 ModelViewParmSubset_303.append()
    dend_2 ModelViewParmSubset_303.append()
    dend_1 ModelViewParmSubset_303.append()
    apic_10 ModelViewParmSubset_303.append()
    apic_7 ModelViewParmSubset_303.append()
    apic_3 ModelViewParmSubset_303.append()
    apic_2 ModelViewParmSubset_303.append()
    dend_33 ModelViewParmSubset_303.append()
    dend_30 ModelViewParmSubset_303.append()
    dend_26 ModelViewParmSubset_303.append()
    dend_25 ModelViewParmSubset_303.append()
    dend_18 ModelViewParmSubset_303.append()
    dend_11 ModelViewParmSubset_303.append()
    dend_9 ModelViewParmSubset_303.append()
    dend_8 ModelViewParmSubset_303.append()
    dend_4 ModelViewParmSubset_303.append()
    dend_3 ModelViewParmSubset_303.append()
    apic_12 ModelViewParmSubset_303.append()
    apic_11 ModelViewParmSubset_303.append()
    apic_9 ModelViewParmSubset_303.append()
    apic_8 ModelViewParmSubset_303.append()
    apic_5 ModelViewParmSubset_303.append()
    apic_4 ModelViewParmSubset_303.append()
    dend_35 ModelViewParmSubset_303.append()
    dend_34 ModelViewParmSubset_303.append()
    dend_32 ModelViewParmSubset_303.append()
    dend_31 ModelViewParmSubset_303.append()
    dend_28 ModelViewParmSubset_303.append()
    dend_27 ModelViewParmSubset_303.append()
    dend_20 ModelViewParmSubset_303.append()
    dend_19 ModelViewParmSubset_303.append()
    dend_13 ModelViewParmSubset_303.append()
    dend_12 ModelViewParmSubset_303.append()
    apic_14 ModelViewParmSubset_303.append()
    apic_13 ModelViewParmSubset_303.append()
    dend_37 ModelViewParmSubset_303.append()
    dend_36 ModelViewParmSubset_303.append()
    dend_22 ModelViewParmSubset_303.append()
    dend_21 ModelViewParmSubset_303.append()
    dend_15 ModelViewParmSubset_303.append()
    dend_14 ModelViewParmSubset_303.append()
    dend_17 ModelViewParmSubset_303.append()
    dend_16 ModelViewParmSubset_303.append()

    // Group: {name=dend, groups=[], sections=[dend_23, dend_6, dend_5, dend_0, dend_29, dend_24, dend_10, dend_7, dend_2, dend_1, dend_33, dend_30, dend_26, dend_25, dend_18, dend_11, dend_9, dend_8, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_28, dend_27, dend_20, dend_19, dend_13, dend_12, dend_37, dend_36, dend_22, dend_21, dend_15, dend_14, dend_17, dend_16]}
    dend = new SectionList()
    dend_23 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_0 dend.append()
    dend_29 dend.append()
    dend_24 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_33 dend.append()
    dend_30 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_18 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_6, apic_1, apic_10, apic_7, apic_3, apic_2, apic_12, apic_11, apic_9, apic_8, apic_5, apic_4, apic_14, apic_13]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_6 apic.append()
    apic_1 apic.append()
    apic_10 apic.append()
    apic_7 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_3 apic.append()
    apic_2 apic.append()
    apic_12 apic.append()
    apic_11 apic.append()
    apic_9 apic.append()
    apic_8 apic.append()
    apic_5 apic.append()
    apic_4 apic.append()
    apic_14 apic.append()
    apic_13 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_12201, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_12201 = new SectionList()
    soma_0 OneSecGrp_SectionRef_12201.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 3.3757515  // units: uF/cm2
    forsec apic cm = 3.3757515  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 54.52297  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 4.0980417E-8  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.092919886  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 3.8138032E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.014500093  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.11935425  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.029082272  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.00707228  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 8.3836087E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 3.502087E-7  // units: S cm-2
        e_pas_nml2 = -92.01492  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 7.818234E-4  // units: S cm-2
        e_pas_nml2 = -92.01492  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.5281044E-7  // units: S cm-2
        e_pas_nml2 = -92.01492  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.330924E-4  // units: S cm-2
        e_pas_nml2 = -92.01492  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 3.0387286E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 1.6346548E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_480633088
    forsec soma {
        insert CaDynamics_480633088
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 3
    apic_2 nseg = 3
    dend_25 nseg = 5
    dend_9 nseg = 5
    dend_8 nseg = 5
    dend_4 nseg = 3
    apic_11 nseg = 3
    apic_9 nseg = 5
    apic_8 nseg = 3
    apic_5 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 5
    dend_28 nseg = 5
    dend_27 nseg = 5
    dend_19 nseg = 3
    dend_12 nseg = 3
    apic_14 nseg = 15
    dend_37 nseg = 5
    dend_22 nseg = 5
    dend_21 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_480633088


