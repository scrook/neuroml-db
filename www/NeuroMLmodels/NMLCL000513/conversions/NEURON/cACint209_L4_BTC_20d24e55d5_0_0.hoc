// Cell: cACint209_L4_BTC_20d24e55d5_0_0
/*
{
  "id" : "cACint209_L4_BTC_20d24e55d5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.71855, 1.8584, 2.77", "2.09925, -14.1671, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 10.5559, -3.7416, 1.38", "-5.91361, 11.931, -3.89077, 1.38", "-7.18965, 14.084, -4.12433, 1.66", "-8.27916, 15.9222, -4.32375, 1.38", "-9.15045, 17.3923, -4.48323, 1.11", "-9.83855, 18.5533, -4.60918, 1.11", "-11.4293, 21.2373, -4.90035, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.6302, 6.4384, 1.38", "6.01544, 10.262, 7.38943, 1.38", "6.13072, 12.5067, 7.97931, 1.38", "6.47244, 16.4317, 9.13616, 1.38", "6.93952, 20.618, 10.4286, 1.38", "7.29108, 23.7689, 11.4014, 1.38", "7.60478, 26.5804, 12.2695, 0.83", "7.80965, 29.3137, 13.1728, 1.38", "8.10968, 32.5572, 14.2918, 1.38", "8.7952, 36.4253, 15.6033, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.642533", "6.19422, -24.7888, -0.978947, 0.642533", "9.61231, -39.3941, -0.978947, 0.642533" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.09925, -14.1671, 1.8584, 2.22", "5.16378, -20.5147, 0.923431, 2.22", "6.75798, -23.8169, 0.437045, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.09925, -14.1671, 1.8584, 0.83", "0.302073, -15.67, 3.02135, 0.83", "-0.901858, -16.7074, 4.00238, 1.11", "-2.56289, -18.1386, 5.35589, 0.83", "-3.83871, -19.2378, 6.3955, 0.83", "-6.00188, -21.1017, 8.15818, 1.38", "-8.06946, -22.8832, 9.84297, 1.38", "-9.85185, -24.269, 11.4866, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.4293, 21.2373, -4.90035, 0.55", "-15.0328, 22.2096, -3.14001, 0.55", "-16.7205, 22.4594, -1.99248, 0.55", "-17.9111, 22.567, -1.07259, 0.55", "-19.8636, 22.6578, 0.501977, 1.11", "-23.2848, 22.6921, 3.26793, 0.83", "-26.7288, 22.5709, 6.11226, 0.83", "-30.318, 22.1459, 9.31548, 0.55", "-32.2673, 21.7877, 11.0826, 1.38", "-33.6834, 21.4342, 12.3845, 0.28", "-34.9743, 21.0208, 13.585, 0.83", "-36.5262, 20.5231, 15.0757, 0.28", "-37.5967, 20.1665, 16.1546, 0.55", "-38.9597, 19.7987, 17.4454, 0.55", "-41.1246, 19.3, 19.4769, 0.55", "-42.9958, 18.8826, 21.2157, 0.55", "-46.1755, 18.2753, 24.2126, 0.55", "-47.5236, 18.053, 25.4401, 0.55", "-50.118, 17.6624, 27.7112, 0.83", "-51.9493, 17.4313, 29.2524, 0.83", "-53.421, 17.264, 30.4026, 0.83", "-56.5644, 16.9733, 32.7823, 0.83", "-57.7384, 16.8447, 33.6272, 0.83", "-60.5556, 16.5017, 35.7676, 0.83", "-64.3958, 15.9324, 38.7621, 0.83", "-65.361, 15.8147, 39.5065, 0.83", "-67.473, 15.6057, 41.0779, 0.28", "-68.6692, 15.4454, 41.8778, 0.83", "-71.5557, 15.0247, 43.7108, 0.28", "-73.6059, 14.7013, 44.853, 0.83", "-76.0241, 14.3103, 46.0515, 0.28", "-76.5494, 14.2229, 46.3027, 0.55", "-79.5758, 13.8062, 47.5938, 0.55", "-81.7654, 13.5747, 48.4453, 0.28", "-84.2984, 13.3079, 49.1627, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-11.4293, 21.2373, -4.90035, 1.11", "-12.4681, 25.5064, -7.39189, 1.11", "-13.0804, 27.8298, -8.54612, 1.11", "-13.8189, 30.6319, -9.9382, 1.11", "-14.4398, 32.9875, -11.1085, 1.11", "-15.1708, 35.7613, -12.4864, 0.83", "-15.9194, 38.6019, -13.8976, 0.83", "-16.4814, 40.8325, -14.7011, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.7952, 36.4253, 15.6033, 0.83", "7.78846, 39.9024, 17.6331, 0.83", "7.03548, 42.503, 19.1513, 0.83", "6.45226, 44.5173, 20.3272, 0.83", "5.54212, 47.6608, 22.1622, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.7952, 36.4253, 15.6033, 0.83", "11.6841, 38.8922, 15.7442, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.642533", "13.0304, -53.9995, -0.978947, 0.642533", "16.4485, -68.6049, -0.978947, 0.642533" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "6.75798, -23.8169, 0.437045, 0.83", "6.92914, -24.9125, -1.35093, 0.83", "7.02025, -25.4196, -2.41759, 0.83", "7.12464, -25.9602, -3.76056, 0.83", "7.49178, -28.0657, -9.28524, 0.83", "7.69767, -29.2241, -12.3483, 0.83", "8.00624, -30.96, -16.9387, 0.55", "8.05751, -31.7301, -19.1788, 0.83", "8.06371, -32.5422, -21.776, 0.83", "8.06259, -33.2259, -24.2409, 1.11", "8.10136, -33.3324, -24.6687, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.75798, -23.8169, 0.437045, 1.66", "7.60518, -26.2371, 0.386254, 1.66", "8.81793, -29.1662, 0.227429, 1.11", "9.73437, -31.1131, 0.0778745, 1.11", "11.5556, -34.1309, -0.00735557, 1.11", "13.1103, -36.7073, -0.0801174, 1.11", "14.1979, -38.5094, -0.131012, 1.38", "15.493, -40.4382, -0.214654, 1.11", "16.3254, -41.5105, -0.249815, 1.11", "19.9516, -45.2242, -0.33181, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.85185, -24.269, 11.4866, 0.28", "-9.82195, -26.1795, 15.4511, 0.28", "-9.89415, -26.9552, 17.2292, 1.11", "-10.1523, -29.4729, 23.4622, 0.55", "-10.2018, -30.2546, 25.3471, 0.83", "-10.3115, -31.9851, 29.5195, 0.83", "-10.438, -33.9795, 34.3285, 0.55", "-10.5349, -35.09, 37.1631, 1.11", "-10.6661, -36.9796, 42.2769, 0.55", "-10.7709, -37.6599, 44.0703, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.85185, -24.269, 11.4866, 0.83", "-13.6166, -24.4432, 13.8961, 0.83", "-16.4502, -24.5529, 15.6573, 1.11", "-19.2712, -24.5719, 17.3171, 0.83", "-22.4669, -24.5314, 19.0836, 0.83", "-26.4079, -24.4814, 21.2621, 0.83", "-30.1699, -24.4337, 23.3416, 0.83", "-34.3144, -24.3823, 25.5564, 1.11", "-38.7183, -24.2682, 27.7326, 1.11", "-42.6465, -24.1187, 29.5685, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-84.2984, 13.3079, 49.1627, 0.28", "-83.8154, 11.5685, 50.4101, 0.28", "-83.6439, 10.9509, 50.853, 0.83", "-82.7783, 7.83369, 53.0885, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-84.2984, 13.3079, 49.1627, 0.28", "-86.8555, 13.8195, 50.1489, 0.28", "-87.7846, 13.9573, 50.196, 0.55", "-89.8731, 14.1621, 50.006, 0.28", "-91.7549, 14.2878, 49.7335, 0.83", "-93.9962, 14.4376, 49.4088, 0.28", "-96.1464, 14.5813, 49.0974, 0.28", "-99.8626, 14.6769, 47.9826, 0.28", "-100.628, 14.6813, 47.6707, 0.83", "-101.824, 14.6745, 46.9955, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-16.4814, 40.8325, -14.7011, 0.55", "-17.5507, 41.1096, -15.4177, 0.55", "-19.436, 41.598, -16.681, 0.55", "-21.2562, 42.0695, -17.9006, 0.83", "-24.5401, 42.9203, -20.1011, 0.55", "-26.5984, 43.4535, -21.4804, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-16.4814, 40.8325, -14.7011, 0.55", "-15.1191, 44.9074, -15.3641, 0.55", "-14.5399, 46.9272, -15.5714, 0.55", "-14.109, 48.6598, -15.6013, 0.83", "-13.5705, 50.9405, -15.5325, 0.55", "-13.2362, 52.4058, -15.4775, 0.83", "-12.734, 54.5887, -15.3649, 0.55", "-12.3895, 56.2487, -15.1848, 0.83", "-11.814, 58.6366, -14.9781, 0.28", "-11.4372, 59.9733, -14.8977, 0.83", "-10.731, 62.1766, -14.809, 0.55", "-10.1449, 63.906, -14.7684, 0.83", "-9.18831, 66.5584, -14.7638, 0.55", "-8.03192, 69.5291, -14.8403, 0.83", "-6.90287, 72.2853, -15.0104, 0.83", "-5.37356, 75.9542, -15.2286, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "5.54212, 47.6608, 22.1622, 0.83", "6.55576, 51.3415, 23.1949, 0.83", "7.47995, 55.3933, 24.3153, 0.83", "7.96336, 57.8978, 25.0969, 0.83", "8.56034, 61.3741, 26.2676, 0.83", "9.18778, 65.2877, 27.6043, 0.83", "9.80322, 69.625, 29.0879, 0.83", "10.2942, 73.7531, 30.5642, 0.83", "10.7239, 77.847, 32.1213, 0.83", "10.9166, 80.311, 33.0295, 0.55", "11.0562, 83.0019, 33.915, 0.55", "11.1757, 85.2629, 34.5067, 0.83", "11.3085, 87.292, 34.8744, 0.83", "11.4774, 89.1681, 35.1061, 0.55", "11.7175, 91.549, 35.1835, 0.83", "11.921, 93.4835, 35.1898, 0.55", "12.0806, 95.1457, 35.1838, 0.83", "12.288, 97.7248, 35.1846, 0.55", "12.4352, 100.319, 35.1541, 0.83", "12.51, 102.686, 34.9205, 0.55", "12.5118, 103.975, 34.7344, 0.55", "12.4641, 105.972, 34.4278, 0.83", "12.3281, 108.828, 33.9637, 0.83", "12.195, 111.194, 33.5829, 0.55", "11.7877, 116.552, 32.6931, 0.83", "11.5197, 119.66, 32.1787, 0.83", "11.2071, 123.45, 31.6062, 0.83", "11.0387, 125.749, 31.3571, 0.83", "10.879, 127.587, 31.2693, 0.83", "10.7011, 129.393, 31.3245, 0.55", "10.4694, 131.445, 31.5291, 0.55", "10.1242, 133.783, 31.7534, 0.83", "9.33882, 138.122, 32.149, 0.83", "8.70267, 141.553, 32.4341, 1.11", "8.1892, 144.161, 32.6306, 0.55", "7.55511, 147.018, 32.8466, 1.11", "6.51935, 151.025, 33.171, 0.83", "5.5885, 154.347, 33.3953, 0.83", "4.92732, 156.561, 33.4674, 0.83", "4.3021, 158.774, 33.466, 0.55", "3.47377, 161.887, 33.3933, 0.55", "3.29967, 162.623, 33.3583, 0.55", "2.75668, 165.359, 33.2425, 0.55", "2.40945, 167.363, 33.1014, 0.28", "1.94521, 170.59, 32.7328, 0.55", "1.55989, 174.281, 32.1638, 0.55", "1.40264, 176.368, 31.7872, 0.55", "1.15953, 180.008, 31.1155, 0.83", "0.938781, 183.858, 30.3908, 0.83", "0.752835, 186.597, 29.762, 0.83", "0.604294, 188.182, 29.3208, 0.55", "0.459308, 189.589, 28.8904, 0.83", "0.142539, 191.845, 28.2443, 0.83", "-0.391793, 194.693, 27.4884, 0.83", "-1.14904, 198.264, 26.7991, 0.83", "-1.66649, 200.515, 26.4414, 0.83", "-2.18858, 202.602, 26.0589, 0.83", "-2.9597, 205.554, 25.4466, 0.55", "-3.83574, 208.634, 24.7947, 0.55", "-4.46768, 210.873, 24.3565, 0.55", "-5.13421, 213.362, 23.8851, 0.83", "-6.10862, 217.16, 23.1062, 1.11", "-6.99845, 221.138, 22.3637, 0.55", "-7.3791, 223.457, 22.0274, 0.55", "-7.72465, 226.155, 21.737, 0.55", "-7.9479, 228.836, 21.5247, 0.83", "-8.01398, 232.078, 21.3623, 0.83", "-7.86676, 236.549, 21.2319, 0.83", "-7.42172, 241.907, 20.9911, 0.83", "-7.05462, 245.024, 20.7661, 0.55", "-6.62777, 248.113, 20.4638, 0.55", "-6.01359, 251.988, 20.0101, 0.83", "-5.75758, 253.805, 19.748, 0.83", "-5.51034, 256.676, 19.2968, 0.83", "-5.4538, 260.061, 18.8404, 0.83", "-5.63667, 262.85, 18.6203, 0.28", "-5.85012, 264.291, 18.5744, 0.83", "-6.69339, 268.393, 18.5638, 0.83", "-7.50111, 271.652, 18.6601, 0.83", "-8.46941, 274.808, 18.9035, 0.83", "-9.60045, 278.042, 19.2922, 0.83", "-10.4204, 280.186, 19.612, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.54212, 47.6608, 22.1622, 0.83", "5.01564, 48.1692, 23.0073, 0.83", "4.64313, 48.6342, 23.6787, 0.55", "4.04267, 49.3893, 24.7588, 0.55", "3.47991, 50.0964, 25.7663, 0.55", "2.84276, 50.8102, 26.866, 0.55", "2.36789, 51.2678, 27.6728, 0.55", "1.55751, 51.8942, 29.0621, 0.55", "0.969354, 52.2229, 30.0131, 0.55", "0.130055, 52.4833, 31.2016, 0.55", "-1.24297, 52.5137, 32.8825, 0.55", "-2.07942, 52.3538, 33.7613, 0.55", "-3.00004, 51.9591, 34.6178, 0.55", "-3.5583, 51.6006, 35.0527, 0.55", "-4.01242, 51.217, 35.3509, 0.55", "-4.86453, 50.3257, 35.7954, 0.28", "-5.2803, 49.8094, 35.9724, 0.83", "-5.83539, 49.0564, 36.1965, 0.55", "-6.19126, 48.5025, 36.3044, 0.55", "-6.62636, 47.6572, 36.3772, 0.55", "-7.01621, 46.7701, 36.3916, 0.83", "-7.34059, 45.9805, 36.3675, 0.55", "-7.6179, 45.3109, 36.3165, 0.55", "-8.26614, 43.7413, 36.1473, 0.55", "-8.92946, 42.2475, 35.9693, 0.83", "-9.47176, 41.1433, 35.8166, 0.83", "-10.0836, 40.0383, 35.586, 0.83", "-10.84, 38.8083, 35.3077, 0.55", "-11.207, 38.2489, 35.2023, 0.28", "-11.6764, 37.5852, 35.1166, 0.55", "-12.2481, 36.8702, 35.04, 0.28", "-13.4792, 35.4076, 34.9521, 0.55", "-14.2444, 34.5381, 34.9422, 0.55", "-14.9829, 33.7076, 34.9876, 0.28", "-15.6432, 32.9616, 35.0614, 0.55", "-16.7607, 31.6213, 35.2208, 0.55", "-17.1388, 31.1366, 35.2958, 0.83", "-17.7865, 30.2289, 35.4534, 0.55", "-18.6631, 28.8763, 35.6106, 0.55", "-19.2259, 27.8225, 35.6686, 0.83", "-19.7451, 26.5425, 35.695, 0.55", "-20.0245, 25.547, 35.6753, 0.55", "-20.2324, 24.5411, 35.6256, 0.55", "-20.301, 24.0047, 35.583, 0.83", "-20.403, 22.6212, 35.4313, 0.55", "-20.4585, 20.9997, 35.2245, 0.28", "-20.4989, 18.6524, 34.9155, 0.28", "-20.5226, 17.6661, 34.7532, 0.83", "-20.569, 15.7303, 34.4092, 0.28", "-20.587, 15.0513, 34.2937, 0.83", "-20.6004, 14.6276, 34.2266, 0.28", "-20.6056, 13.9626, 34.1047, 0.83", "-20.6219, 12.6364, 33.8633, 0.28", "-20.6456, 12.127, 33.7903, 0.55", "-20.7544, 10.9741, 33.6708, 0.28", "-20.833, 10.307, 33.6116, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.6841, 38.8922, 15.7442, 0.83", "12.5649, 39.9818, 13.9666, 0.83", "13.6329, 41.3838, 11.973, 0.83", "14.3032, 42.2873, 10.8424, 0.83", "18.428, 47.7662, 4.80031, 0.55", "19.6043, 49.2892, 3.38919, 0.55", "20.2647, 50.1191, 2.75296, 0.55", "21.1443, 51.1841, 2.0606, 0.55", "22.0338, 52.2556, 1.61333, 1.11", "23.054, 53.541, 1.44829, 0.55", "24.7564, 55.7508, 1.74796, 0.55", "26.203, 57.7495, 2.08153, 0.55", "27.1258, 59.0543, 2.3438, 0.55", "28.2315, 60.7089, 2.80376, 0.83", "29.4547, 62.7379, 3.46169, 0.55", "30.3013, 64.3706, 4.0184, 1.11", "31.1067, 66.0811, 4.64949, 0.55", "31.8633, 67.7664, 5.29099, 0.83", "33.1394, 70.7028, 6.36879, 0.55", "33.8046, 72.2433, 6.9027, 0.55", "34.7043, 74.3758, 7.57528, 0.55", "35.4419, 76.0454, 8.00218, 0.55", "35.9016, 77.0809, 8.21536, 0.28", "36.8445, 79.1327, 8.53489, 0.55", "37.569, 80.6744, 8.68581, 0.28", "38.2579, 82.071, 8.79681, 0.55", "39.5784, 84.6933, 8.96519, 0.55", "40.2924, 86.1738, 9.03726, 0.55", "41.2896, 88.2315, 9.10884, 0.28", "42.3211, 90.3309, 8.58342, 0.83", "43.2365, 92.1522, 7.80854, 0.28", "43.4524, 92.5483, 7.57642, 0.55", "43.9937, 93.4162, 6.85157, 0.28", "44.3515, 93.9354, 6.32147, 0.83", "48.8974, 100.041, -0.751556, 0.55", "50.7057, 102.273, -3.44646, 0.55", "51.2682, 102.949, -4.2349, 0.83", "52.6129, 104.547, -5.76575, 0.55", "53.2791, 105.345, -6.3124, 0.55", "53.9864, 106.338, -6.46113, 0.83", "54.7239, 107.639, -6.00034, 0.28", "55.0434, 108.349, -5.85382, 0.55", "55.7514, 110.379, -5.31368, 0.28", "56.1138, 111.729, -4.79356, 0.55", "56.4139, 112.899, -4.35919, 0.28", "56.6159, 114.072, -4.06707, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.6841, 38.8922, 15.7442, 0.55", "12.9646, 38.1047, 17.3505, 0.55", "14.886, 36.923, 19.7608, 0.28", "15.8941, 36.303, 21.0255, 0.55", "17.7459, 35.1641, 23.3485, 0.55", "20.1671, 33.675, 26.3858, 0.55", "21.4909, 32.8608, 28.0465, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "8.10136, -33.3324, -24.6687, 0.55", "4.75418, -31.5124, -25.6596, 0.55", "3.73017, -31.0333, -26.2634, 0.83", "1.35473, -29.97, -27.8325, 0.55", "0.376935, -29.5587, -28.4638, 0.55", "-4.08818, -28.1785, -31.9545, 0.28", "-5.01381, -27.9574, -32.7054, 0.83", "-8.74945, -27.4533, -36.2089, 0.55", "-9.14924, -27.4281, -36.5978, 0.55", "-10.2187, -27.4333, -37.6689, 0.83", "-14.9724, -27.6274, -42.3304, 0.55", "-15.891, -27.6971, -43.1975, 0.55", "-16.9251, -27.7853, -44.199, 0.83", "-19.1842, -27.9375, -46.532, 0.55", "-19.6544, -27.9326, -47.0511, 0.55", "-20.5067, -27.843, -48.0895, 0.55", "-23.9019, -27.1002, -52.3919, 0.28", "-24.8109, -26.855, -53.6241, 0.83", "-27.8469, -25.8464, -57.85, 0.55", "-28.615, -25.5202, -58.9532, 0.83", "-32.4709, -23.4933, -64.5437, 0.55", "-33.5132, -22.7772, -66.1628, 0.28", "-34.1031, -22.2767, -67.1267, 0.83", "-35.0662, -21.3058, -68.8073, 0.55", "-35.71, -20.4829, -70.0029, 0.83", "-36.9844, -18.4338, -72.7292, 0.55", "-38.354, -15.2143, -76.3287, 0.28", "-38.5317, -14.7202, -76.8716, 0.55", "-38.9492, -13.4019, -78.3016, 0.28", "-39.1034, -12.8666, -78.8827, 0.55", "-39.5886, -11.0483, -80.8165, 0.28", "-39.7304, -10.4044, -81.4757, 0.55", "-40.1882, -8.38557, -83.5201, 0.28", "-40.3779, -7.64424, -84.3154, 0.55", "-40.8624, -6.01003, -86.0695, 0.28", "-40.9931, -5.64372, -86.4615, 0.55", "-41.5283, -4.16784, -87.9264, 0.28", "-41.7169, -3.65599, -88.4258, 0.55", "-42.3503, -2.06263, -89.8925, 0.28", "-42.7505, -1.28226, -90.6987, 0.55", "-44.0578, 0.98306, -93.0221, 0.28", "-44.6523, 1.89987, -93.9864, 0.55", "-46.4885, 4.38094, -96.9418, 0.28", "-47.0688, 5.12317, -97.9101, 0.55", "-49.0266, 7.46704, -101.463, 0.28", "-49.723, 8.23416, -102.751, 0.28", "-50.5725, 9.11833, -104.337, 0.55", "-52.1104, 10.6385, -107.055, 0.28", "-52.3837, 10.928, -107.524, 0.55", "-53.6162, 12.1453, -109.703, 0.28", "-54.2127, 12.7289, -110.736, 0.83", "-55.4787, 13.9127, -112.815, 0.55", "-56.2915, 14.6817, -114.168, 0.55", "-57.6811, 16.0745, -116.502, 0.55", "-61.0947, 19.5147, -122.597, 0.83", "-62.2572, 20.6928, -124.817, 0.28", "-62.8566, 21.3102, -126.062, 0.55", "-65.0218, 23.5677, -131.063, 0.55", "-65.5321, 24.1627, -132.432, 0.55", "-67.1317, 26.0582, -137.118, 0.83", "-68.1772, 27.2507, -140.301, 0.28", "-68.9213, 27.8105, -142.42, 0.55", "-69.8275, 28.1594, -145.016, 0.28", "-70.2192, 28.1893, -146.135, 0.83", "-72.5037, 27.8429, -152.397, 0.55", "-73.4055, 27.5233, -154.781, 0.55", "-75.6005, 26.5264, -160.151, 0.55", "-79.2437, 24.9258, -167.958, 0.55", "-80.1544, 24.5393, -169.743, 0.55", "-82.5506, 23.5832, -174.182, 0.55", "-85.1763, 22.6485, -178.778, 0.55", "-87.3183, 21.992, -182.316, 0.55", "-90.7779, 21.0621, -187.531, 0.55", "-94.5006, 20.2395, -192.736, 0.55", "-95.3437, 20.0759, -193.899, 0.55", "-99.0375, 19.321, -198.996, 0.55", "-99.9326, 19.1348, -200.22, 0.28", "-100.146, 19.0841, -200.517, 0.55", "-108.393, 16.7706, -212.07, 0.28", "-109.154, 16.5479, -213.103, 0.83", "-113.651, 15.1043, -219.166, 0.28", "-113.942, 15.0085, -219.553, 0.55", "-116.079, 14.3418, -222.369, 0.28", "-116.959, 14.0644, -223.503, 0.55", "-118.789, 13.408, -225.559, 0.28", "-119.413, 13.1743, -226.272, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "8.10136, -33.3324, -24.6687, 0.55", "9.3673, -33.777, -27.4746, 0.55", "10.496, -34.1113, -29.653, 0.55", "12.948, -34.8441, -34.7045, 0.83", "13.5974, -35.0853, -36.0596, 0.83", "14.3585, -35.4001, -37.6293, 0.83", "15.0102, -35.6598, -38.9246, 0.83", "16.1842, -36.106, -41.162, 0.83", "18.139, -36.9504, -44.9104, 0.83", "19.385, -37.4116, -47.1232, 0.83", "20.7146, -37.8473, -49.6196, 0.83", "22.1986, -38.264, -52.3953, 0.83", "23.5511, -38.6016, -54.9198, 0.83", "25.7883, -39.1156, -58.9201, 0.83", "27.2106, -39.3612, -61.3112, 0.83", "29.0207, -39.5416, -64.3768, 0.83", "30.1736, -39.6057, -66.3636, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "19.9516, -45.2242, -0.33181, 0.55", "22.5629, -45.019, 0.496661, 0.55", "24.7355, -44.9621, 1.24199, 0.28", "26.1099, -45.018, 1.75138, 0.55", "28.4383, -45.1864, 2.64449, 1.11", "32.6556, -45.6404, 4.45807, 0.55", "34.269, -45.8524, 5.21331, 0.55", "36.051, -46.17, 6.15004, 0.83", "37.9366, -46.5369, 7.20587, 0.28", "40.1366, -47.0369, 8.20586, 0.83", "41.1139, -47.6237, 9.2841, 0.28", "41.9659, -47.9682, 9.86064, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "19.9516, -45.2242, -0.33181, 0.83", "21.9503, -48.5665, -1.18094, 0.83", "23.7469, -51.0579, -2.24644, 0.55", "24.9411, -52.4628, -3.16584, 0.83", "25.9155, -53.609, -3.916, 0.83", "27.266, -55.1977, -4.9557, 0.83", "28.4521, -56.593, -5.86881, 0.83", "30.9194, -58.8759, -8.05114, 0.83", "32.7361, -60.3441, -9.94712, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-42.6465, -24.1187, 29.5685, 0.55", "-43.8476, -21.5123, 28.7522, 0.55", "-45.3512, -17.9281, 27.6055, 0.83", "-47.4521, -12.9259, 25.8898, 0.55", "-48.3706, -10.5044, 25.0953, 0.55", "-49.6091, -6.97059, 23.9725, 1.11", "-50.6632, -3.82555, 23.0203, 0.83", "-51.6993, -0.514814, 22.0349, 0.55", "-52.0863, 0.83753, 21.6534, 0.55", "-53.0534, 4.15005, 20.9891, 0.55", "-53.2549, 4.82259, 20.8575, 1.11", "-53.7218, 6.47108, 20.8467, 0.55", "-54.1872, 8.13786, 21.3245, 0.83", "-54.6544, 9.68991, 22.1282, 0.55", "-55.2544, 11.4988, 23.2326, 0.55", "-55.7614, 12.7819, 24.0365, 0.83", "-58.3841, 18.936, 27.1053, 0.55", "-59.1152, 20.6574, 27.7885, 0.83", "-60.1288, 22.9026, 28.4495, 0.55", "-61.329, 25.2526, 28.9624, 0.55", "-62.5765, 27.4447, 29.1406, 1.11", "-64.9935, 31.5861, 28.9661, 0.55", "-65.7831, 32.9388, 28.7807, 0.55", "-67.7598, 36.5202, 28.232, 0.55", "-69.0002, 38.865, 27.8407, 0.55", "-70.5605, 41.8946, 27.4032, 1.11", "-72.2887, 45.2742, 27.039, 0.55", "-73.3277, 47.3348, 26.9679, 1.11", "-74.6407, 49.8934, 26.9209, 0.28", "-75.0914, 50.785, 26.9502, 0.55", "-75.8356, 52.2232, 27.0924, 0.28", "-76.8613, 54.0769, 27.4985, 0.83", "-78.5383, 56.8082, 28.3067, 0.28", "-79.1555, 57.8199, 28.6805, 0.55", "-81.6738, 61.9474, 30.4956, 0.28", "-82.608, 63.5353, 31.2251, 0.83", "-83.9169, 65.8431, 32.2725, 0.55", "-85.2251, 68.2114, 33.3278, 0.55", "-86.5522, 70.6314, 34.3414, 0.55", "-87.5372, 72.526, 35.0908, 0.83", "-88.6647, 74.8055, 35.8954, 0.28", "-89.6996, 77.0506, 36.6063, 0.55", "-90.8853, 80.0111, 37.279, 0.55", "-91.0789, 80.6157, 37.3737, 0.83", "-91.8721, 83.3672, 37.3959, 0.28", "-92.2005, 84.9332, 37.2314, 0.55", "-92.4409, 86.2236, 36.8778, 0.28", "-92.9863, 88.8204, 35.7158, 0.55", "-93.558, 91.5278, 34.1815, 0.55", "-94.4297, 95.3613, 31.8045, 0.28", "-95.0865, 97.8781, 29.7832, 0.83", "-96.0605, 101.462, 26.5158, 0.55", "-96.7594, 104.029, 23.9729, 0.55", "-97.0757, 105.102, 22.8673, 0.55", "-97.6355, 106.722, 21.0534, 0.83", "-99.3002, 111.193, 16.1663, 0.28", "-99.6992, 112.109, 15.1506, 0.83", "-100.287, 113.389, 13.871, 0.28", "-100.932, 114.715, 12.7464, 0.55", "-102.945, 117.963, 10.4556, 0.83", "-103.665, 119.028, 10.2035, 0.83", "-104.801, 120.777, 10.6571, 0.28", "-105.318, 121.62, 11.0703, 0.55", "-106.428, 123.615, 12.3784, 0.28", "-107.123, 125.162, 13.4744, 0.55", "-108.473, 129.515, 17.6201, 0.28", "-108.683, 130.392, 18.5394, 0.55", "-108.914, 131.836, 20.0449, 0.28", "-109.027, 133.004, 21.2742, 0.83", "-109.133, 134.945, 23.327, 0.83", "-109.21, 140.636, 28.9715, 0.28", "-109.198, 141.497, 29.7408, 0.55", "-109.096, 144.539, 32.327, 0.28", "-109.015, 146.286, 33.7271, 0.83", "-108.905, 148.201, 35.1467, 0.28", "-108.833, 149.799, 36.1632, 0.83", "-108.769, 153.281, 37.7358, 0.28", "-108.743, 154.877, 38.335, 0.83", "-108.729, 157.88, 39.1655, 0.28", "-108.798, 159.715, 39.3882, 0.55", "-108.933, 161.626, 39.3382, 0.28", "-109.213, 163.852, 38.8385, 0.55", "-109.687, 166.564, 37.8251, 0.28", "-109.912, 167.693, 37.2867, 0.83", "-110.519, 170.465, 35.7832, 0.28", "-111.094, 172.517, 34.3871, 0.83", "-112.17, 176.168, 31.7457, 0.28", "-112.563, 177.343, 30.7232, 0.83", "-113.314, 179.414, 28.6566, 0.28", "-113.638, 180.224, 27.6956, 0.83", "-115.571, 184.911, 21.6657, 0.28", "-116.407, 186.699, 19.0739, 0.83", "-118.35, 190.736, 12.8539, 0.28", "-119.052, 192.169, 10.452, 0.83", "-120.375, 194.728, 5.90761, 0.28", "-120.806, 195.517, 4.43896, 0.55", "-122.107, 197.899, 0.249617, 0.28", "-122.562, 198.684, -1.06807, 0.28", "-123.688, 200.699, -3.85883, 0.55", "-125.837, 203.746, -7.82866, 0.28", "-127.503, 205.855, -10.4322, 0.83", "-129.152, 207.75, -12.9982, 0.28", "-129.999, 208.684, -14.2588, 0.55", "-131.37, 210.195, -16.0687, 0.28", "-137.765, 217.386, -23.4308, 0.28", "-138.493, 218.243, -24.2148, 0.83", "-143.172, 223.934, -29.066, 0.28", "-143.683, 224.559, -29.6273, 0.83", "-149.214, 231.957, -35.5087, 0.28", "-149.624, 232.715, -35.8497, 0.55", "-150.395, 236.27, -35.0572, 0.28", "-150.67, 237.36, -34.9075, 0.55", "-151.114, 238.989, -34.5666, 0.28", "-151.707, 240.431, -35.0885, 0.55", "-152.822, 242.715, -36.6024, 0.28", "-153.355, 243.793, -37.329, 1.11", "-154.715, 246.247, -38.8229, 0.28", "-155.319, 247.24, -39.498, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-42.6465, -24.1187, 29.5685, 0.55", "-46.6103, -26.2571, 30.9763, 0.55", "-48.3738, -27.0874, 31.6216, 0.55", "-51.0791, -28.2451, 32.6979, 0.83", "-53.8378, -29.4277, 33.8388, 0.55", "-56.104, -30.5205, 34.9498, 0.55", "-57.1469, -31.0891, 35.5168, 0.83", "-58.5987, -32.0233, 36.5074, 0.55", "-60.9629, -33.7152, 38.7082, 0.55", "-62.0648, -34.641, 40.0287, 0.55", "-63.9207, -36.5041, 42.7031, 0.55", "-64.6714, -37.3877, 44.036, 0.28", "-66.244, -39.5017, 47.245, 0.83", "-67.9469, -41.9546, 51.2721, 0.55", "-68.2386, -42.3753, 52.0205, 0.55", "-69.1996, -43.6195, 54.3585, 0.83", "-70.4417, -44.9402, 56.9708, 0.55", "-71.3967, -45.8398, 58.8197, 0.83", "-74.1884, -48.2076, 63.3403, 0.55", "-75.5605, -49.2958, 65.105, 0.83", "-77.3687, -50.5819, 67.0871, 0.28", "-78.879, -51.5126, 68.4243, 0.55", "-80.6483, -52.4875, 69.5979, 0.55", "-83.3587, -53.8746, 70.9915, 0.28", "-84.5918, -54.4775, 71.4168, 0.28", "-85.6702, -54.9723, 71.7514, 0.55", "-88.5645, -56.4442, 72.6955, 0.28", "-89.6109, -57.0764, 73.1794, 0.55", "-90.1147, -57.4211, 73.439, 0.28", "-91.4131, -58.4038, 74.2747, 0.28", "-92.2744, -59.0637, 74.8392, 0.55", "-93.9747, -60.4812, 75.982, 0.28", "-95.6808, -62.0921, 77.1214, 0.55", "-97.7706, -64.0585, 78.583, 0.28", "-99.3284, -65.5853, 79.7214, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-82.7783, 7.83369, 53.0885, 0.28", "-85.2813, 10.3298, 53.3509, 0.28", "-85.9475, 11.0899, 53.4176, 0.55", "-87.3739, 12.7677, 53.5811, 0.28", "-87.6854, 13.1736, 53.6247, 0.55", "-90.5622, 17.2395, 54.099, 0.28", "-92.7693, 20.4686, 54.5887, 0.28", "-94.0268, 22.5774, 54.9471, 0.28", "-94.8959, 24.1856, 55.2474, 0.55", "-96.8137, 28.0102, 55.8578, 0.28", "-97.513, 29.4517, 56.1161, 0.55", "-98.5595, 31.7606, 56.617, 0.28", "-99.0839, 33.072, 56.9136, 0.55", "-99.8846, 35.239, 57.4232, 0.28", "-100.851, 38.2291, 58.0596, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-82.7783, 7.83369, 53.0885, 0.28", "-80.8333, 7.04655, 51.7884, 0.28", "-80.3066, 6.81991, 51.362, 0.83", "-77.7694, 5.96338, 49.4145, 0.28", "-77.5035, 5.88152, 49.2186, 0.83", "-75.1253, 5.28271, 47.6693, 0.28", "-74.4136, 5.11988, 47.2452, 0.83", "-69.7242, 4.2394, 44.6053, 0.28", "-67.0569, 3.80829, 43.2169, 0.28", "-66.4644, 3.73745, 42.9446, 1.11", "-63.3339, 3.43869, 41.6783, 0.28", "-62.4108, 3.34068, 41.3124, 0.55", "-59.0319, 2.92105, 39.9398, 0.28", "-57.4516, 2.69671, 39.3299, 0.28", "-56.4727, 2.51214, 38.9085, 0.55", "-55.0103, 2.21017, 38.2253, 0.28", "-50.7559, 1.05151, 35.9539, 0.28", "-48.5332, 0.39467, 34.7311, 0.28", "-48.0477, 0.2114, 34.4726, 0.83", "-46.9889, -0.248142, 33.9273, 0.28", "-46.9889, -0.248142, 33.9273, 0.83", "-44.6513, -1.31942, 32.8804, 0.28", "-44.0243, -1.61397, 32.7189, 0.83", "-42.1751, -2.78836, 32.172, 0.28", "-41.0593, -3.56067, 31.8218, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-26.5984, 43.4535, -21.4804, 0.28", "-27.9672, 41.631, -22.5421, 0.28", "-29.0299, 40.2075, -23.5153, 0.83", "-30.1856, 38.6499, -24.5556, 0.55", "-31.3744, 37.053, -25.8327, 1.11", "-34.5951, 32.4918, -29.8282, 0.28", "-34.8193, 32.1797, -30.1475, 0.83", "-35.8204, 30.7746, -31.8543, 0.83", "-36.432, 29.8964, -33.0177, 0.83", "-38.6653, 26.6963, -37.5534, 0.28", "-39.2442, 25.8865, -38.7001, 0.83", "-41.3695, 23.2077, -43.1266, 0.28", "-41.7502, 22.739, -43.9697, 0.55", "-42.4036, 21.9511, -45.4643, 0.55", "-43.0747, 21.1496, -47.0692, 0.55", "-43.9566, 20.1344, -49.1124, 1.11", "-47.5159, 16.1151, -58.1087, 0.55", "-48.0017, 15.537, -59.4997, 0.28", "-48.1439, 15.3847, -59.9234, 0.55", "-49.095, 14.4783, -62.7497, 0.28", "-49.4795, 14.0931, -64.0125, 0.83", "-51.667, 11.8553, -71.6329, 0.28", "-51.7669, 11.7554, -71.9585, 0.55", "-54.018, 9.54101, -79.2127, 0.28", "-54.4123, 9.11657, -80.5238, 0.55", "-55.5716, 7.8236, -84.1663, 0.28", "-55.7743, 7.58065, -84.7935, 0.83", "-56.7629, 6.32786, -87.6406, 0.28", "-57.2563, 5.69179, -89.0497, 0.83", "-59.6329, 2.3235, -95.8098, 0.28", "-60.2377, 1.50126, -97.3416, 0.83", "-62.6831, -1.67641, -102.856, 0.55", "-62.9939, -2.09277, -103.54, 0.83", "-64.6962, -4.46973, -107.195, 0.28", "-65.2291, -5.23386, -108.263, 0.55", "-67.4077, -8.47421, -112.294, 0.28", "-68.1815, -9.66789, -113.74, 0.83", "-71.989, -15.6592, -120.333, 0.28", "-72.1799, -15.9649, -120.665, 0.83", "-73.3358, -17.9084, -122.678, 0.28", "-73.6281, -18.3939, -123.214, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-26.5984, 43.4535, -21.4804, 0.55", "-27.8679, 47.1367, -22.1675, 0.55", "-28.8232, 49.9162, -22.7614, 0.55", "-29.838, 52.8242, -23.5657, 0.28", "-30.5114, 54.7426, -24.1466, 1.38", "-31.5423, 57.5316, -25.1024, 0.55", "-32.7174, 60.6408, -26.2115, 0.55", "-33.236, 61.9668, -26.6604, 0.83", "-34.17, 64.3228, -27.5425, 0.28", "-34.66, 65.6653, -28.0804, 0.55", "-35.444, 68.0301, -28.9813, 0.28", "-35.9699, 69.7534, -29.5278, 0.83", "-36.8921, 73.316, -30.3346, 0.28", "-37.3304, 75.2264, -30.7885, 0.55", "-37.7604, 77.5098, -31.3236, 0.28", "-38.041, 79.4275, -31.8917, 0.83", "-38.3666, 82.991, -33.0827, 0.28", "-38.5802, 86.118, -34.3542, 0.83", "-38.7423, 91.336, -36.7796, 0.28", "-38.7237, 93.1319, -37.6966, 0.83", "-38.6404, 97.993, -40.6317, 0.28", "-38.5628, 100.222, -42.1444, 0.83", "-38.4274, 102.943, -44.1373, 0.28", "-38.3365, 105.079, -45.7933, 0.55", "-38.243, 107.216, -47.4372, 0.83", "-38.2013, 111.952, -51.024, 0.28", "-38.265, 113.815, -52.3477, 0.83", "-38.452, 116.345, -54.0764, 0.83", "-38.7439, 118.887, -55.6863, 0.28", "-39.1892, 120.853, -56.9174, 0.83", "-39.7873, 122.842, -58.0361, 0.28", "-40.2762, 124.277, -58.7092, 0.55", "-40.7272, 125.324, -59.1813, 0.28", "-41.8216, 127.5, -59.9937, 0.55", "-43.9741, 131.589, -61.0881, 0.28", "-44.8691, 133.053, -61.4091, 0.55", "-45.9264, 134.642, -61.6753, 0.28", "-47.1397, 136.355, -61.8832, 0.83", "-48.7657, 138.565, -62.0026, 0.28", "-50.3639, 140.732, -61.9741, 0.83", "-52.7057, 143.977, -61.7053, 0.28", "-53.6359, 145.263, -61.6461, 0.83", "-54.701, 146.786, -61.6092, 0.28", "-56.0612, 148.882, -61.6343, 0.28", "-56.6598, 149.887, -61.7587, 0.55", "-57.9713, 152.424, -62.337, 0.28", "-59.0015, 154.62, -63.2417, 0.55", "-59.5728, 155.871, -63.9259, 0.55", "-60.3942, 157.726, -65.0945, 0.83", "-62.007, 161.09, -67.591, 0.28", "-63.2189, 163.517, -69.5799, 0.83", "-65.0182, 166.846, -72.71, 0.28", "-65.7303, 168.053, -73.9391, 0.28", "-66.6996, 169.725, -75.7078, 0.83", "-68.5208, 172.863, -79.1799, 0.28", "-69.1857, 174.03, -80.4219, 0.83", "-71.5002, 178.351, -84.8379, 0.28", "-72.6187, 180.459, -86.9469, 1.11", "-74.7935, 184.595, -91.1623, 0.28", "-75.6535, 186.333, -92.9771, 0.55", "-76.3551, 187.971, -94.562, 0.28", "-76.8898, 189.322, -95.7714, 0.55", "-78.0979, 192.909, -98.7429, 0.28", "-78.6279, 194.329, -100.034, 0.55", "-79.4937, 196.491, -102.073, 0.28", "-80.06, 197.881, -103.521, 0.55", "-80.7086, 199.533, -105.372, 0.28", "-81.619, 201.967, -108.179, 0.55", "-83.116, 206.486, -113.126, 0.28", "-83.7309, 208.34, -115.251, 0.55", "-84.5688, 210.979, -118.311, 0.28", "-84.9973, 212.431, -120.1, 0.83", "-85.4695, 214.402, -122.516, 0.28", "-85.7711, 215.805, -124.3, 0.83", "-86.2179, 218.225, -127.359, 0.28", "-86.461, 219.3, -128.853, 0.55", "-86.7897, 220.795, -131.032, 0.28", "-87.0468, 222.035, -132.97, 0.55", "-87.771, 225.671, -138.388, 0.28", "-88.0345, 226.946, -140.181, 0.28", "-88.7095, 229.849, -143.647, 0.55", "-89.2845, 232.317, -146.248, 0.28", "-89.623, 233.687, -147.466, 0.55", "-90.6528, 237.414, -150.143, 0.28", "-91.4048, 239.615, -151.214, 0.83", "-92.7769, 242.849, -152.342, 0.28", "-93.3432, 243.856, -152.552, 0.55", "-94.4191, 245.368, -152.754, 0.28", "-95.6089, 246.762, -152.935, 0.55", "-98.4404, 249.568, -153.223, 0.28", "-99.0977, 250.184, -153.25, 0.55", "-103.291, 254.036, -153.52, 0.28", "-104.325, 255.086, -153.636, 0.55", "-105.682, 256.699, -153.833, 0.28", "-107.01, 258.398, -154.069, 0.55", "-109.034, 261.384, -154.526, 0.28", "-110.206, 263.315, -154.797, 0.55", "-112.23, 267.87, -155.089, 0.28", "-112.916, 269.715, -155.236, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.37356, 75.9542, -15.2286, 0.55", "-3.39167, 77.8519, -15.4531, 0.55", "-0.237565, 80.9829, -17.288, 0.55", "1.09694, 82.3271, -18.4193, 0.83", "2.20508, 83.4409, -19.4591, 0.83", "5.31527, 86.6045, -22.579, 0.28", "6.46128, 87.7912, -23.7297, 0.83", "10.6236, 92.2453, -29.1793, 0.55", "11.5006, 93.243, -30.6573, 0.28", "11.8895, 93.708, -31.436, 0.28", "12.479, 94.4755, -32.8475, 0.55", "13.0934, 95.3847, -34.5365, 0.55", "14.9826, 98.5414, -40.1149, 0.28", "15.7981, 100.034, -42.5096, 0.83", "17.5324, 103.302, -47.4833, 0.83", "19.0443, 106.184, -51.7033, 0.83", "21.0035, 109.879, -56.9667, 0.28", "21.6938, 111.17, -58.724, 0.28", "22.0788, 111.882, -59.5575, 0.55", "23.9219, 115.065, -62.7953, 0.28", "24.217, 115.543, -63.2094, 0.55", "26.4008, 118.672, -65.6801, 0.28", "27.3264, 119.755, -66.7572, 0.55", "28.2875, 120.734, -67.8948, 0.28", "28.6751, 121.102, -68.3521, 0.55", "31.5046, 123.502, -71.5388, 0.28", "32.3895, 124.201, -72.4683, 0.55", "37.2906, 127.688, -77.3151, 0.28", "38.7042, 128.676, -78.6658, 0.28", "40.169, 129.701, -79.9874, 0.55", "43.2908, 131.878, -82.8249, 0.28", "44.2765, 132.56, -83.663, 0.55", "48.3055, 135.308, -86.9946, 0.28", "50.3287, 136.655, -88.5622, 0.28", "52.1286, 137.839, -89.9837, 0.83", "58.4874, 141.863, -94.7574, 0.28", "60.1565, 142.885, -95.9372, 0.28", "62.4781, 144.27, -97.4607, 0.55", "64.4698, 145.444, -98.6218, 0.28", "65.9104, 146.217, -99.4648, 0.55", "67.3004, 146.939, -100.196, 0.28", "68.0977, 147.373, -100.392, 0.55", "69.9722, 148.466, -100.864, 0.28", "72.5139, 150.239, -101.192, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.37356, 75.9542, -15.2286, 0.55", "-6.59178, 79.9537, -13.9878, 0.55", "-7.23853, 82.6314, -12.9729, 0.55", "-7.51017, 83.7685, -12.5324, 0.55", "-7.92383, 85.5869, -11.839, 0.55", "-8.25993, 87.123, -11.3229, 0.55", "-9.04507, 90.8169, -10.0856, 0.28", "-9.30487, 92.1194, -9.63435, 0.55", "-9.61473, 93.943, -8.85951, 0.55", "-9.80175, 94.82, -8.42495, 0.83", "-10.3453, 96.7972, -7.36249, 0.28", "-10.8313, 98.4583, -6.48263, 0.83", "-11.798, 101.478, -4.88629, 0.28", "-11.9116, 101.824, -4.66062, 0.83", "-12.6916, 104.461, -2.67531, 0.55", "-13.0249, 105.657, -1.67592, 0.55", "-13.4753, 107.416, -0.146249, 0.83", "-14.2301, 110.62, 2.71001, 0.55", "-14.7504, 113.081, 4.93506, 0.83", "-14.986, 114.329, 6.09402, 0.28", "-15.1461, 115.431, 7.05984, 0.83", "-15.3904, 117.07, 8.4802, 0.83", "-15.8981, 119.948, 10.8612, 0.83", "-16.3352, 122.372, 12.4712, 0.28", "-16.5127, 123.202, 12.9602, 0.83", "-17.1104, 125.706, 14.4716, 0.83", "-17.6676, 127.898, 15.8177, 0.28", "-17.968, 129.038, 16.5569, 0.55", "-18.5843, 131.303, 17.9295, 0.28", "-19.3522, 133.634, 19.41, 0.55", "-20.467, 136.672, 21.4772, 0.28", "-20.7464, 137.351, 21.9796, 0.83", "-21.3139, 138.726, 22.9744, 0.28", "-22.0083, 140.371, 24.2288, 0.55", "-22.9975, 142.763, 26.2782, 0.28", "-23.1694, 143.225, 26.6529, 0.55", "-23.5289, 144.221, 27.5038, 0.28", "-23.8716, 145.26, 28.5142, 0.83", "-24.2233, 146.629, 29.932, 0.28", "-24.5523, 148.327, 31.8163, 0.55", "-24.7604, 149.476, 33.2481, 0.28", "-24.8872, 150.192, 34.1005, 0.83", "-25.1049, 151.717, 35.8196, 0.83", "-25.2933, 153.265, 37.4358, 0.55", "-25.3559, 154.118, 38.2314, 0.83", "-25.6234, 158.928, 42.2552, 0.55", "-25.6933, 160.755, 43.5917, 0.83", "-25.7644, 166.809, 47.3004, 0.28", "-25.7526, 168.113, 47.8138, 0.55", "-25.6325, 170.729, 48.3734, 0.28", "-25.5126, 172.305, 48.5414, 0.83", "-25.1563, 175.566, 48.3138, 0.28", "-24.9424, 177.539, 47.9622, 0.55", "-24.2753, 183.074, 45.7645, 0.28", "-24.0162, 185.507, 44.6886, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.4204, 280.186, 19.612, 0.55", "-10.4135, 282.836, 19.5977, 0.55", "-10.542, 285.989, 19.6109, 0.55", "-10.6927, 289.016, 19.6348, 0.83", "-10.8067, 291.109, 19.674, 0.55", "-10.9356, 293.707, 19.7543, 1.11", "-11.0698, 297.695, 19.8942, 0.55", "-11.113, 300.521, 20.0102, 1.11", "-11.1025, 302.663, 20.034, 0.83", "-10.9697, 304.688, 19.9803, 0.55", "-10.5567, 307.354, 19.7947, 0.55", "-9.96315, 309.665, 19.4949, 0.83", "-9.03468, 312.094, 18.9212, 0.55", "-7.87051, 314.503, 18.0988, 0.83", "-6.82388, 316.335, 17.3243, 0.83", "-5.83458, 317.846, 16.5636, 0.83", "-4.96138, 319.054, 15.9042, 1.11", "-3.10829, 321.585, 14.4182, 0.83", "-2.31844, 322.682, 13.779, 0.55", "-1.03733, 324.445, 12.8168, 0.83", "0.809332, 327.168, 11.4175, 0.55", "1.98537, 328.868, 10.5463, 1.11", "3.77695, 331.449, 9.28541, 0.55", "4.40864, 332.363, 8.89143, 0.55", "5.26634, 333.647, 8.36597, 0.55", "7.18078, 336.737, 7.28272, 0.55", "7.92095, 338.024, 6.93745, 0.28", "8.37476, 338.904, 6.76545, 0.55", "9.1823, 340.597, 6.56632, 0.28", "9.81598, 342.093, 6.41196, 0.83", "10.8853, 344.914, 6.16238, 0.55", "11.2326, 345.859, 6.10376, 0.83", "11.9252, 347.891, 5.96853, 0.55", "12.3597, 349.208, 5.85688, 0.83", "13.6476, 353.215, 5.46351, 0.28", "14.4881, 355.868, 5.1492, 0.83", "15.3495, 358.611, 4.78276, 0.28", "16.0886, 361.029, 4.4435, 0.55", "16.8306, 363.582, 4.08136, 0.55", "17.3975, 365.896, 3.72329, 0.55", "17.6383, 367.179, 3.51495, 0.28", "17.8134, 368.418, 3.3145, 0.55", "18.0259, 370.812, 2.9669, 0.28", "18.0726, 372.223, 2.71786, 0.55", "18.0301, 374.792, 2.18011, 0.28", "17.9577, 376.54, 1.78997, 0.28", "17.8275, 378.982, 1.22596, 0.83", "17.6757, 381.17, 0.696399, 0.83", "17.3834, 385.348, -0.312978, 0.55", "17.2708, 387.694, -0.850126, 0.55", "17.2746, 389.215, -1.15466, 0.55", "17.3162, 390.084, -1.35205, 0.28", "17.4222, 391.309, -1.6394, 0.55", "17.5725, 392.352, -1.85887, 0.28", "17.7089, 393.33, -2.07237, 1.11", "17.9259, 396.283, -2.92841, 0.55", "17.9291, 398.432, -3.59951, 0.55", "17.8092, 400.317, -4.26098, 0.28", "17.6644, 401.383, -4.69732, 0.83", "17.1117, 404.45, -6.13988, 0.55", "16.715, 406.436, -7.14253, 0.83", "16.2259, 408.625, -8.34439, 0.83", "15.7646, 410.846, -9.67042, 0.55", "15.44, 412.6, -10.8072, 0.28", "15.1703, 414.313, -11.944, 0.55", "14.9532, 415.889, -12.9887, 0.55", "14.6743, 417.958, -14.426, 1.11", "14.3391, 420.684, -16.2822, 0.55", "14.2064, 421.864, -17.0311, 0.55", "14.033, 423.139, -17.8484, 0.55", "13.4812, 426.145, -19.773, 0.55", "13.1868, 427.663, -20.7717, 0.83", "12.5838, 430.876, -22.7437, 0.28", "12.3996, 431.837, -23.2983, 0.55", "11.9256, 434.582, -24.7992, 0.28", "11.7336, 435.924, -25.4991, 0.55", "11.5215, 438.033, -26.4899, 0.28", "11.2994, 440.138, -27.3589, 0.55", "11.1965, 441.23, -27.7564, 0.28", "11.0651, 443.024, -28.326, 0.55", "10.9955, 446.011, -29.0585, 0.55", "10.9765, 447.557, -29.4616, 0.28", "10.8867, 448.916, -29.8163, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.4204, 280.186, 19.612, 0.55", "-11.8015, 281.366, 19.509, 0.55", "-13.4132, 282.838, 19.4718, 1.11", "-15.1809, 284.369, 19.5199, 0.55", "-15.7649, 284.877, 19.5066, 0.83", "-17.1614, 286.119, 19.4514, 0.55", "-18.318, 287.105, 19.4111, 0.55", "-19.2185, 287.857, 19.3784, 0.83", "-21.8883, 290.029, 19.2851, 0.55", "-23.8617, 291.602, 19.2908, 0.55", "-24.5617, 292.154, 19.2728, 0.83", "-26.4812, 293.632, 19.2039, 0.55", "-26.7924, 293.867, 19.187, 0.83", "-27.8088, 294.666, 19.1658, 0.28", "-27.9686, 294.806, 19.1809, 0.55", "-28.9076, 295.646, 19.4275, 0.28", "-29.4836, 296.205, 19.6191, 0.55", "-30.144, 296.818, 19.824, 0.55", "-31.9518, 298.399, 20.3424, 0.55", "-33.1927, 299.481, 20.6709, 0.55", "-34.1719, 300.357, 20.8438, 0.83", "-35.5206, 301.601, 21.007, 0.83", "-37.2797, 303.311, 20.9935, 0.55", "-38.5765, 304.617, 20.8544, 0.55", "-39.9835, 306.094, 20.5714, 1.11", "-41.5294, 307.928, 20.1453, 0.55", "-41.939, 308.466, 20.0021, 0.83", "-43.1712, 310.319, 19.5551, 0.28", "-43.7899, 311.338, 19.1423, 0.55", "-44.2073, 312.03, 18.7669, 0.28", "-44.5977, 312.714, 18.3551, 0.83", "-45.3746, 314.19, 17.412, 0.28", "-46.0505, 315.535, 16.5175, 0.83", "-48.4726, 320.787, 12.986, 0.55", "-48.9126, 321.803, 12.2892, 0.55", "-49.2831, 322.729, 11.6572, 0.83", "-49.7194, 323.913, 10.8915, 0.28", "-49.8941, 324.494, 10.57, 0.55", "-50.1175, 325.363, 10.2, 0.28", "-50.32, 326.539, 10.0183, 0.55", "-50.6451, 328.195, 9.74492, 0.55", "-50.8405, 329.14, 9.59449, 0.55", "-51.0527, 330.194, 9.44472, 0.83", "-51.3722, 331.88, 9.19566, 0.28", "-51.6301, 333.296, 9.00021, 0.83", "-51.8811, 335.046, 8.78328, 0.55", "-51.9725, 335.744, 8.71636, 0.55", "-52.1059, 337.071, 8.63786, 0.83", "-52.1731, 337.767, 8.63393, 0.55", "-52.2724, 339.073, 8.74228, 0.83", "-52.4362, 340.268, 8.88345, 0.28", "-52.5448, 340.761, 8.90954, 0.28", "-52.9558, 342.084, 8.88905, 0.28", "-53.1632, 342.654, 8.83456, 0.83", "-53.7255, 343.986, 8.57637, 0.55", "-54.4653, 345.463, 8.00682, 0.83", "-55.6558, 347.47, 6.97456, 0.28", "-56.0939, 348.09, 6.5553, 0.55", "-56.6311, 348.699, 6.01557, 0.28", "-57.0737, 349.129, 5.61237, 0.83", "-58.7897, 350.7, 4.11425, 0.83", "-59.3548, 351.203, 3.65176, 0.83", "-61.1247, 352.752, 2.36364, 0.83", "-63.1791, 354.533, 0.960572, 0.55", "-64.4251, 355.582, 0.151265, 0.55", "-65.5386, 356.531, -0.542679, 0.55", "-66.7381, 357.576, -1.23994, 0.55", "-68.4574, 359.215, -2.25667, 0.55", "-69.7769, 360.578, -2.95368, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "30.1736, -39.6057, -66.3636, 0.55", "30.7962, -38.9978, -67.6468, 0.55", "31.4173, -38.3221, -68.9521, 0.83", "32.6774, -36.8903, -71.611, 0.28", "33.3214, -36.1347, -72.9353, 0.83", "34.9037, -34.2722, -76.0456, 0.28", "35.4557, -33.627, -77.0766, 0.55", "36.6578, -32.1158, -79.4504, 0.55", "37.9275, -30.4342, -81.8344, 0.55", "39.0349, -28.9776, -83.778, 0.28", "39.4964, -28.3733, -84.5447, 0.28", "39.9695, -27.7617, -85.2881, 0.55", "41.0081, -26.4916, -86.8284, 0.28", "42.4826, -24.7791, -88.7194, 0.55", "44.1783, -22.6616, -91.0628, 0.28", "44.6138, -22.1144, -91.6879, 0.55", "46.3565, -19.7813, -94.271, 0.28", "47.4736, -18.2221, -95.9777, 0.28", "48.7276, -16.4131, -98.0, 0.83", "50.6191, -13.4525, -101.361, 0.55", "51.0676, -12.7286, -102.199, 0.55", "51.937, -11.2871, -104.018, 0.55", "52.8016, -9.89887, -105.928, 0.83", "54.0925, -7.95586, -108.773, 0.28", "54.5109, -7.41321, -109.593, 0.55", "55.7429, -6.12378, -111.423, 0.28", "55.9758, -5.90277, -111.745, 0.55", "57.1248, -5.02054, -113.108, 0.55", "58.9205, -3.80084, -114.86, 0.28", "59.6029, -3.36541, -115.425, 0.55", "61.2793, -2.37306, -116.729, 0.28", "61.9785, -1.97921, -117.225, 0.55", "63.491, -1.22487, -118.273, 0.28", "64.4487, -0.861771, -118.942, 0.55", "64.9853, -0.710253, -119.288, 0.55", "66.5095, -0.261941, -120.177, 0.28", "67.5419, 0.0652603, -120.703, 0.28", "68.559, 0.46682, -121.225, 0.55", "71.0326, 1.63628, -122.47, 0.28", "72.7585, 2.6356, -123.326, 0.55", "74.3823, 3.74004, -124.077, 0.55", "75.8784, 4.94825, -124.714, 0.83", "78.0982, 7.01625, -125.557, 0.28", "78.9138, 7.90236, -125.834, 0.28", "80.3324, 9.72901, -126.217, 0.55", "81.7233, 11.7273, -126.518, 0.28", "82.3258, 12.644, -126.613, 0.55", "83.2703, 14.1424, -126.671, 0.55", "84.6597, 16.3818, -126.622, 0.28", "85.4901, 17.747, -126.582, 0.55", "86.7366, 19.8747, -126.51, 0.28", "88.1002, 22.3014, -126.456, 0.55", "89.4803, 24.8188, -126.42, 0.55", "90.0769, 25.9542, -126.408, 0.55", "91.212, 28.2521, -126.434, 0.55", "92.2351, 30.3849, -126.545, 0.55", "93.2257, 32.5916, -126.718, 0.55", "94.1398, 34.6966, -126.906, 0.28", "94.6107, 35.801, -127.051, 0.55", "96.0874, 39.2774, -127.554, 0.28", "97.0172, 41.6169, -127.963, 0.28", "97.452, 42.7987, -128.191, 0.55", "98.2151, 44.8912, -128.627, 0.28", "98.8908, 46.7778, -129.034, 0.55", "99.4001, 48.2242, -129.335, 0.55", "100.761, 52.3157, -130.118, 0.28", "101.542, 54.8677, -130.574, 0.28", "101.842, 55.9115, -130.745, 0.55", "102.415, 58.0246, -131.055, 0.55", "103.193, 60.8916, -131.37, 0.28", "103.792, 63.1121, -131.574, 0.55", "104.349, 65.1637, -131.689, 0.28", "104.77, 66.9373, -131.757, 0.55", "105.015, 68.0067, -131.771, 0.28", "105.2, 68.7318, -131.718, 0.55", "105.768, 70.8329, -131.407, 0.28", "106.086, 71.8579, -131.187, 0.55", "107.25, 75.2345, -130.336, 0.28", "108.11, 77.5459, -129.715, 0.55", "109.301, 80.5987, -128.831, 0.28", "109.975, 82.2378, -128.342, 0.55", "110.789, 84.1035, -127.757, 0.28", "111.544, 85.7659, -127.205, 0.55", "112.274, 87.3273, -126.678, 0.28", "112.818, 88.5358, -126.278, 0.55", "114.086, 91.5571, -125.344, 0.28", "114.736, 93.0966, -124.828, 0.55", "115.63, 95.3123, -124.038, 0.28", "115.96, 96.1366, -123.714, 0.55", "116.753, 98.2385, -122.845, 0.28", "117.531, 100.464, -121.92, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "30.1736, -39.6057, -66.3636, 0.28", "32.8451, -40.4781, -68.0507, 0.28", "33.6348, -40.7278, -68.6045, 0.55", "34.7206, -40.9839, -69.4223, 0.55", "36.3907, -41.3206, -70.6794, 0.28", "37.3859, -41.5213, -71.4019, 0.55", "40.8947, -42.1775, -73.8161, 0.28", "41.8601, -42.2885, -74.4208, 0.55", "44.1887, -42.4403, -75.768, 0.28", "45.2005, -42.457, -76.2983, 0.28", "46.8865, -42.4301, -77.0598, 0.55", "48.4667, -42.4127, -77.676, 0.55", "52.3419, -42.4484, -78.8379, 0.28", "53.7796, -42.5424, -79.2502, 0.55", "55.3911, -42.7691, -79.7032, 0.55", "58.309, -43.3583, -80.5664, 0.28", "60.1914, -43.8907, -81.1505, 0.55", "62.4997, -44.8285, -81.8496, 0.28", "63.7031, -45.5014, -82.2028, 0.55", "65.8674, -46.9722, -82.8259, 0.28", "66.7614, -47.7298, -83.061, 0.55", "67.7123, -48.7153, -83.2702, 0.55", "68.9067, -50.2214, -83.3998, 0.28", "69.5598, -51.2103, -83.4089, 0.28", "70.2076, -52.4787, -83.3418, 0.55", "70.9334, -54.3731, -83.1606, 0.28", "71.0195, -54.6612, -83.1257, 0.55", "71.634, -57.3895, -82.8418, 0.28", "71.6805, -57.7023, -82.8382, 0.83", "72.1504, -61.9113, -83.0802, 0.28", "72.2206, -62.7007, -83.2702, 0.55", "72.3373, -64.625, -84.0053, 0.28", "72.3881, -65.8091, -84.5786, 0.55", "72.4785, -68.4703, -86.2353, 0.28", "72.4857, -68.8046, -86.4607, 0.55", "72.5451, -72.6618, -89.38, 0.28", "72.5417, -73.1908, -89.7678, 0.55", "72.5472, -73.5148, -90.0064, 0.55", "72.5928, -74.7237, -90.7496, 0.28", "72.6481, -75.7475, -91.2656, 0.55", "72.7951, -77.5407, -92.0122, 0.28", "72.8686, -78.2817, -92.284, 0.55", "73.4285, -82.7224, -94.0455, 0.28", "73.5606, -83.6298, -94.4172, 0.55", "73.7215, -84.6585, -94.897, 0.28", "74.2822, -87.961, -96.5571, 0.28", "74.4433, -89.0313, -97.0674, 0.55", "74.8615, -92.1192, -98.4403, 0.28", "74.8828, -92.3814, -98.5356, 0.55", "75.0226, -95.7926, -99.7048, 0.28", "75.0167, -97.4798, -100.137, 0.55", "74.9471, -99.6651, -100.473, 0.28", "74.9304, -100.593, -100.515, 0.55", "74.9228, -102.517, -100.456, 0.28", "74.9406, -103.368, -100.41, 0.55", "75.0921, -106.659, -100.417, 0.28", "75.2759, -109.341, -100.596, 0.28", "75.4012, -110.495, -100.774, 0.55", "75.7833, -113.301, -101.338, 0.28", "75.9343, -114.155, -101.538, 0.55", "77.0006, -119.778, -102.949, 0.28", "77.4618, -121.891, -103.56, 0.55", "78.2567, -124.997, -104.509, 0.28", "78.4239, -125.605, -104.701, 0.55", "79.3258, -128.494, -105.622, 0.28", "79.4678, -128.886, -105.738, 0.55", "80.2049, -130.215, -105.978, 0.28", "80.748, -131.039, -106.181, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "41.9659, -47.9682, 9.86064, 0.55", "42.9481, -47.7562, 10.7645, 0.55", "44.9201, -47.257, 12.5974, 0.55", "48.5204, -46.3241, 15.8786, 0.55", "51.284, -45.6221, 18.3571, 0.55", "53.7831, -45.045, 20.5694, 0.28", "55.1672, -44.7457, 21.771, 0.83", "56.8995, -44.4066, 23.3012, 0.55", "58.2041, -44.2233, 24.4202, 0.28", "58.8449, -44.1645, 24.8813, 0.55", "60.2047, -44.0647, 25.77, 0.28", "60.6602, -44.0443, 26.0657, 0.55", "62.6213, -44.1124, 27.1751, 0.28", "63.8708, -44.3338, 27.8031, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "41.9659, -47.9682, 9.86064, 0.28", "50.1222, -54.8273, -0.0959616, 0.28", "51.3116, -55.6375, -1.36774, 0.83", "55.5363, -58.1043, -5.54738, 0.28", "56.8078, -58.6225, -6.6872, 0.83", "59.8237, -59.5148, -9.26473, 0.28", "61.1171, -59.775, -10.3263, 0.83", "65.2276, -59.4339, -12.7539, 0.28", "66.1102, -59.1388, -13.3415, 0.83", "70.5079, -56.6656, -16.5495, 0.28", "71.5688, -56.0217, -17.3553, 0.28", "73.0643, -55.0573, -18.5275, 0.55", "76.0502, -53.1698, -20.1171, 0.28", "80.8542, -50.2023, -21.8578, 0.28", "82.1362, -49.4511, -22.0391, 0.83", "91.7036, -44.1541, -21.8953, 0.28", "93.3876, -43.3118, -21.695, 0.55", "105.947, -37.4397, -18.6645, 0.28", "107.322, -36.8183, -18.1917, 0.83", "115.783, -32.8448, -14.4217, 0.28", "116.928, -32.2407, -13.829, 0.55", "120.407, -30.1981, -11.7324, 0.28", "123.665, -28.2312, -9.80985, 0.55", "127.646, -25.7565, -7.86461, 0.28", "129.231, -24.7215, -7.17782, 0.55", "134.026, -21.0631, -5.84051, 0.28", "135.773, -19.5492, -5.34162, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "32.7361, -60.3441, -9.94712, 0.55", "35.4445, -61.0848, -10.6815, 0.55", "39.7799, -62.2979, -11.882, 0.55", "42.925, -63.2083, -12.7965, 0.28", "45.1645, -63.8527, -13.4329, 0.55", "48.6512, -64.8531, -14.3442, 0.55", "50.1333, -65.3413, -14.6974, 0.28", "51.1607, -65.6838, -14.9733, 0.55", "52.3021, -66.1652, -15.2851, 0.28", "53.9801, -67.0021, -15.7767, 0.55", "56.4155, -68.3768, -16.3965, 0.55", "59.8864, -70.4108, -17.2223, 0.55", "64.6018, -72.8305, -18.7968, 1.38", "67.6122, -74.2051, -19.9721, 0.83", "70.1841, -75.2294, -21.0457, 0.55", "73.4371, -76.3548, -22.4915, 0.28", "77.4414, -77.5311, -24.354, 0.83", "85.0706, -79.1182, -28.233, 0.28", "86.063, -79.3055, -28.7883, 0.28", "88.5762, -79.7501, -30.4157, 0.55", "90.2634, -80.024, -31.5808, 0.55", "91.7959, -80.2852, -32.7422, 0.55", "96.0077, -81.3071, -35.9321, 0.55", "100.054, -82.6203, -38.9786, 0.28", "102.524, -83.508, -40.9488, 0.83", "104.035, -84.0836, -42.2029, 0.83", "108.016, -85.626, -45.4712, 0.55", "109.619, -86.2873, -46.7266, 0.83", "111.79, -87.2961, -48.1578, 0.28", "113.326, -88.0097, -48.9748, 0.55", "114.242, -88.5196, -49.3913, 0.28", "114.679, -88.8137, -49.5636, 0.55", "116.736, -90.2626, -50.1381, 0.28", "119.03, -91.8442, -50.931, 0.28", "120.791, -93.0909, -51.5389, 0.83", "122.287, -94.258, -52.1382, 0.55", "126.025, -97.3691, -53.7488, 0.28", "127.133, -98.3404, -54.3209, 0.83", "130.656, -101.615, -56.3665, 0.28", "131.967, -103.008, -57.2554, 0.83", "134.184, -105.563, -58.7757, 0.28", "134.814, -106.291, -59.2224, 0.83", "137.394, -109.437, -61.1259, 0.28", "138.944, -111.383, -62.2699, 0.28", "140.301, -113.085, -63.103, 0.55", "141.91, -114.916, -64.0787, 0.55", "144.602, -117.703, -65.5522, 0.55", "146.051, -119.125, -66.2826, 0.28", "146.835, -119.851, -66.6656, 0.55", "149.479, -122.12, -68.099, 0.28", "151.489, -123.698, -69.1407, 0.55", "153.601, -125.387, -70.2999, 0.28", "154.225, -125.905, -70.6105, 0.83", "156.93, -128.056, -72.0212, 0.28", "157.564, -128.522, -72.3428, 0.55", "159.222, -129.599, -73.1629, 0.55", "161.967, -131.447, -74.2363, 0.28", "162.077, -131.516, -74.2793, 0.55", "164.585, -132.895, -75.3384, 0.28", "165.584, -133.389, -75.7472, 0.55", "168.307, -134.685, -77.0393, 0.28", "170.118, -135.476, -77.9653, 0.55", "173.414, -136.749, -79.6904, 0.55", "176.293, -137.832, -81.278, 0.28", "178.058, -138.522, -82.297, 0.83", "181.09, -139.763, -84.0912, 0.28", "181.736, -140.014, -84.414, 0.55", "184.131, -140.845, -85.4232, 0.28", "184.916, -141.115, -85.5993, 0.55", "188.621, -142.276, -86.0082, 0.28", "189.799, -142.598, -86.0603, 0.83", "194.303, -143.685, -85.7237, 0.28", "195.136, -143.869, -85.6121, 0.55", "198.472, -144.419, -84.7883, 0.28", "201.317, -144.665, -83.9313, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "32.7361, -60.3441, -9.94712, 0.55", "33.6888, -61.2512, -12.2086, 0.55", "35.5267, -63.2296, -17.0238, 0.55", "37.1419, -64.9411, -21.0915, 0.28", "38.3561, -66.1398, -24.0484, 0.83", "40.4854, -68.012, -28.7868, 0.28", "40.9967, -68.4137, -29.923, 0.55", "41.4297, -68.7198, -30.9507, 0.55", "42.4034, -69.1866, -33.0282, 0.55", "43.9965, -69.8137, -36.1672, 0.55", "44.8942, -70.1225, -37.8833, 0.55", "47.6464, -70.8496, -42.3825, 0.83", "49.3722, -71.237, -45.1426, 0.28", "50.0517, -71.3591, -46.2855, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-73.6281, -18.3939, -123.214, 0.28", "-74.5374, -18.6422, -123.053, 0.28", "-75.7188, -18.9647, -122.843, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-73.6281, -18.3939, -123.214, 0.28", "-76.2233, -21.6406, -125.686, 0.28", "-76.982, -22.5899, -126.408, 0.55", "-79.3559, -25.5597, -128.67, 0.28", "-80.4067, -26.8742, -129.67, 0.83", "-85.005, -32.6269, -134.051, 0.28", "-85.7607, -33.5723, -134.77, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-69.7769, 360.578, -2.95368, 0.55", "-70.6915, 361.209, -3.60417, 0.55", "-71.6527, 361.963, -4.25684, 0.28", "-72.6111, 362.715, -4.9077, 0.55", "-75.3826, 364.889, -6.78965, 0.28", "-75.7012, 365.138, -7.006, 0.55", "-77.7562, 366.75, -8.40148, 0.28", "-78.8031, 367.442, -9.22208, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-69.7769, 360.578, -2.95368, 0.28", "-71.7724, 359.684, -2.84515, 0.28", "-72.8831, 359.187, -2.78474, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "117.531, 100.464, -121.92, 0.28", "114.219, 103.472, -120.098, 0.28", "113.096, 104.491, -119.481, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "117.531, 100.464, -121.92, 0.28", "117.99, 102.881, -121.551, 0.28", "118.821, 107.433, -120.792, 0.28", "119.022, 108.658, -120.528, 0.55", "119.671, 113.124, -119.32, 0.28", "120.043, 115.691, -118.626, 0.55", "120.525, 119.007, -117.729, 0.28", "120.751, 120.753, -117.154, 0.55", "121.057, 123.527, -116.027, 0.28", "121.241, 125.775, -115.067, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "50.0517, -71.3591, -46.2855, 0.55", "49.3448, -71.9919, -47.9834, 0.55", "49.0317, -72.3086, -48.7988, 0.28", "48.816, -72.5001, -49.3405, 0.83", "47.4137, -73.605, -52.5244, 0.28", "47.0163, -73.936, -53.417, 0.83", "45.2744, -75.4463, -57.2052, 0.28", "45.0304, -75.6549, -57.7269, 0.83", "43.4609, -76.8206, -60.8126, 0.28", "42.9736, -77.1504, -61.6571, 0.55", "40.7297, -78.4814, -65.086, 0.28", "40.2692, -78.7304, -65.7776, 0.28", "39.2715, -79.2137, -67.2546, 0.83", "36.3335, -80.5343, -71.625, 0.28", "35.5365, -80.8743, -72.8537, 0.55", "33.9886, -81.4933, -75.2985, 0.55", "32.8318, -81.9026, -77.096, 0.55", "30.8493, -82.6333, -80.2142, 0.28", "30.3024, -82.8762, -81.0964, 0.83", "28.4544, -83.8295, -84.0212, 0.28", "28.0944, -84.0452, -84.5747, 0.55", "26.4292, -85.1891, -86.7918, 0.28", "25.9043, -85.5347, -87.3849, 0.55", "23.8378, -86.9593, -89.4594, 0.28", "23.6507, -87.0789, -89.6414, 0.83", "22.5059, -87.7629, -90.5966, 0.28", "21.5579, -88.3107, -91.2971, 0.55", "18.6365, -89.8981, -93.3303, 0.28", "17.749, -90.3928, -93.8977, 0.83", "13.861, -92.6125, -96.1159, 0.28", "12.1844, -93.5984, -97.0419, 0.55", "9.98565, -94.9525, -98.2812, 0.55", "7.53538, -96.569, -99.6163, 0.28", "5.4695, -98.0485, -100.635, 0.55", "4.00383, -99.1324, -101.439, 0.28", "3.79129, -99.3026, -101.564, 0.55", "2.50204, -100.282, -102.396, 0.28", "1.49488, -100.968, -103.055, 0.55", "0.380152, -101.631, -103.791, 0.55", "-1.53714, -102.547, -105.143, 0.28", "-2.36722, -102.884, -105.696, 0.55", "-3.5631, -103.341, -106.476, 0.28", "-4.33337, -103.607, -106.941, 0.55", "-6.42144, -104.277, -108.197, 0.28", "-7.11808, -104.48, -108.645, 0.55", "-8.86312, -105.018, -109.776, 0.28", "-9.94724, -105.381, -110.64, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "50.0517, -71.3591, -46.2855, 0.28", "52.6196, -71.3389, -46.9873, 0.28", "52.9862, -71.3484, -47.1242, 0.83", "54.6716, -71.481, -47.7751, 0.28", "55.2587, -71.5115, -48.0061, 0.28", "55.9807, -71.582, -48.3206, 0.55", "57.2204, -71.7312, -49.0436, 0.28", "58.5082, -71.9497, -50.01, 0.55", "59.2636, -72.1323, -50.6056, 0.55", "60.1773, -72.4188, -51.4604, 0.55", "61.7335, -72.9454, -53.0916, 0.83", "63.5497, -73.6007, -55.2076, 0.28", "64.1647, -73.8353, -55.9743, 0.28", "64.4709, -73.9819, -56.4109, 0.83", "66.4759, -75.0091, -59.4323, 0.28", "67.0283, -75.345, -60.344, 0.83", "67.481, -75.6677, -61.1562, 0.83", "68.2797, -76.3244, -62.5825, 0.83", "69.6207, -77.5225, -65.049, 0.55", "70.7657, -78.7295, -67.2023, 0.55", "72.1614, -80.518, -69.8302, 0.55", "72.7911, -81.5317, -71.1307, 0.55", "73.2949, -82.5554, -72.2706, 0.28", "73.3484, -82.6955, -72.3973, 0.55", "73.9734, -84.9065, -73.9513, 0.28", "74.1503, -85.7684, -74.4334, 0.55", "74.6547, -88.3461, -75.658, 0.28", "74.9718, -89.8095, -76.2747, 0.55", "75.3643, -91.3857, -76.8831, 0.28", "75.7238, -92.5657, -77.2643, 0.55", "76.6963, -95.3151, -77.968, 0.28", "76.9675, -95.9735, -78.093, 1.11", "78.6225, -99.2562, -78.477, 0.28", "79.5658, -100.842, -78.5619, 0.55", "80.6138, -102.322, -78.3941, 0.28", "81.0073, -102.784, -78.2485, 0.55", "82.1269, -103.933, -77.6384, 0.28", "82.911, -104.663, -77.1223, 0.28", "84.4939, -105.942, -75.8846, 0.55", "86.8444, -107.849, -73.9238, 0.55", "87.7617, -108.595, -73.1407, 0.28", "87.9538, -108.736, -72.9872, 0.55", "89.3767, -109.657, -71.964, 0.28", "89.6255, -109.808, -71.8, 0.55", "90.8016, -110.397, -71.1983, 0.28", "91.3418, -110.609, -71.007, 0.55", "93.5285, -111.194, -70.1498, 0.28", "94.2273, -111.297, -69.7947, 0.55", "95.3454, -111.311, -69.2218, 0.28", "95.7101, -111.269, -68.9721, 0.55", "96.7631, -111.022, -68.1231, 0.28", "97.6715, -110.771, -67.3224, 0.55", "99.3124, -110.208, -65.5675, 0.28", "100.553, -109.717, -64.1206, 0.55", "103.155, -108.477, -60.8738, 0.28", "103.53, -108.288, -60.3788, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "axon_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "axon_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_BTC_20d24e55d5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_11, dend_0, axon_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, axon_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.71855, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.09925, -14.1671, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 10.5559, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -5.91361, 11.931, -3.89077, 1.38 ) }
    dend_11 { pt3dadd( -7.18965, 14.084, -4.12433, 1.66 ) }
    dend_11 { pt3dadd( -8.27916, 15.9222, -4.32375, 1.38 ) }
    dend_11 { pt3dadd( -9.15045, 17.3923, -4.48323, 1.11 ) }
    dend_11 { pt3dadd( -9.83855, 18.5533, -4.60918, 1.11 ) }
    dend_11 { pt3dadd( -11.4293, 21.2373, -4.90035, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.6302, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01544, 10.262, 7.38943, 1.38 ) }
    dend_0 { pt3dadd( 6.13072, 12.5067, 7.97931, 1.38 ) }
    dend_0 { pt3dadd( 6.47244, 16.4317, 9.13616, 1.38 ) }
    dend_0 { pt3dadd( 6.93952, 20.618, 10.4286, 1.38 ) }
    dend_0 { pt3dadd( 7.29108, 23.7689, 11.4014, 1.38 ) }
    dend_0 { pt3dadd( 7.60478, 26.5804, 12.2695, 0.83 ) }
    dend_0 { pt3dadd( 7.80965, 29.3137, 13.1728, 1.38 ) }
    dend_0 { pt3dadd( 8.10968, 32.5572, 14.2918, 1.38 ) }
    dend_0 { pt3dadd( 8.7952, 36.4253, 15.6033, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.642533 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.642533 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.642533 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.09925, -14.1671, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 5.16378, -20.5147, 0.923431, 2.22 ) }
    dend_32 { pt3dadd( 6.75798, -23.8169, 0.437045, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.09925, -14.1671, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( 0.302073, -15.67, 3.02135, 0.83 ) }
    dend_27 { pt3dadd( -0.901858, -16.7074, 4.00238, 1.11 ) }
    dend_27 { pt3dadd( -2.56289, -18.1386, 5.35589, 0.83 ) }
    dend_27 { pt3dadd( -3.83871, -19.2378, 6.3955, 0.83 ) }
    dend_27 { pt3dadd( -6.00188, -21.1017, 8.15818, 1.38 ) }
    dend_27 { pt3dadd( -8.06946, -22.8832, 9.84297, 1.38 ) }
    dend_27 { pt3dadd( -9.85185, -24.269, 11.4866, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.4293, 21.2373, -4.90035, 0.55 ) }
    dend_21 { pt3dadd( -15.0328, 22.2096, -3.14001, 0.55 ) }
    dend_21 { pt3dadd( -16.7205, 22.4594, -1.99248, 0.55 ) }
    dend_21 { pt3dadd( -17.9111, 22.567, -1.07259, 0.55 ) }
    dend_21 { pt3dadd( -19.8636, 22.6578, 0.501977, 1.11 ) }
    dend_21 { pt3dadd( -23.2848, 22.6921, 3.26793, 0.83 ) }
    dend_21 { pt3dadd( -26.7288, 22.5709, 6.11226, 0.83 ) }
    dend_21 { pt3dadd( -30.318, 22.1459, 9.31548, 0.55 ) }
    dend_21 { pt3dadd( -32.2673, 21.7877, 11.0826, 1.38 ) }
    dend_21 { pt3dadd( -33.6834, 21.4342, 12.3845, 0.28 ) }
    dend_21 { pt3dadd( -34.9743, 21.0208, 13.585, 0.83 ) }
    dend_21 { pt3dadd( -36.5262, 20.5231, 15.0757, 0.28 ) }
    dend_21 { pt3dadd( -37.5967, 20.1665, 16.1546, 0.55 ) }
    dend_21 { pt3dadd( -38.9597, 19.7987, 17.4454, 0.55 ) }
    dend_21 { pt3dadd( -41.1246, 19.3, 19.4769, 0.55 ) }
    dend_21 { pt3dadd( -42.9958, 18.8826, 21.2157, 0.55 ) }
    dend_21 { pt3dadd( -46.1755, 18.2753, 24.2126, 0.55 ) }
    dend_21 { pt3dadd( -47.5236, 18.053, 25.4401, 0.55 ) }
    dend_21 { pt3dadd( -50.118, 17.6624, 27.7112, 0.83 ) }
    dend_21 { pt3dadd( -51.9493, 17.4313, 29.2524, 0.83 ) }
    dend_21 { pt3dadd( -53.421, 17.264, 30.4026, 0.83 ) }
    dend_21 { pt3dadd( -56.5644, 16.9733, 32.7823, 0.83 ) }
    dend_21 { pt3dadd( -57.7384, 16.8447, 33.6272, 0.83 ) }
    dend_21 { pt3dadd( -60.5556, 16.5017, 35.7676, 0.83 ) }
    dend_21 { pt3dadd( -64.3958, 15.9324, 38.7621, 0.83 ) }
    dend_21 { pt3dadd( -65.361, 15.8147, 39.5065, 0.83 ) }
    dend_21 { pt3dadd( -67.473, 15.6057, 41.0779, 0.28 ) }
    dend_21 { pt3dadd( -68.6692, 15.4454, 41.8778, 0.83 ) }
    dend_21 { pt3dadd( -71.5557, 15.0247, 43.7108, 0.28 ) }
    dend_21 { pt3dadd( -73.6059, 14.7013, 44.853, 0.83 ) }
    dend_21 { pt3dadd( -76.0241, 14.3103, 46.0515, 0.28 ) }
    dend_21 { pt3dadd( -76.5494, 14.2229, 46.3027, 0.55 ) }
    dend_21 { pt3dadd( -79.5758, 13.8062, 47.5938, 0.55 ) }
    dend_21 { pt3dadd( -81.7654, 13.5747, 48.4453, 0.28 ) }
    dend_21 { pt3dadd( -84.2984, 13.3079, 49.1627, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -11.4293, 21.2373, -4.90035, 1.11 ) }
    dend_12 { pt3dadd( -12.4681, 25.5064, -7.39189, 1.11 ) }
    dend_12 { pt3dadd( -13.0804, 27.8298, -8.54612, 1.11 ) }
    dend_12 { pt3dadd( -13.8189, 30.6319, -9.9382, 1.11 ) }
    dend_12 { pt3dadd( -14.4398, 32.9875, -11.1085, 1.11 ) }
    dend_12 { pt3dadd( -15.1708, 35.7613, -12.4864, 0.83 ) }
    dend_12 { pt3dadd( -15.9194, 38.6019, -13.8976, 0.83 ) }
    dend_12 { pt3dadd( -16.4814, 40.8325, -14.7011, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.7952, 36.4253, 15.6033, 0.83 ) }
    dend_4 { pt3dadd( 7.78846, 39.9024, 17.6331, 0.83 ) }
    dend_4 { pt3dadd( 7.03548, 42.503, 19.1513, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 6.45226, 44.5173, 20.3272, 0.83 ) }
    dend_4 { pt3dadd( 5.54212, 47.6608, 22.1622, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.7952, 36.4253, 15.6033, 0.83 ) }
    dend_1 { pt3dadd( 11.6841, 38.8922, 15.7442, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.642533 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.642533 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.642533 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 6.75798, -23.8169, 0.437045, 0.83 ) }
    dend_42 { pt3dadd( 6.92914, -24.9125, -1.35093, 0.83 ) }
    dend_42 { pt3dadd( 7.02025, -25.4196, -2.41759, 0.83 ) }
    dend_42 { pt3dadd( 7.12464, -25.9602, -3.76056, 0.83 ) }
    dend_42 { pt3dadd( 7.49178, -28.0657, -9.28524, 0.83 ) }
    dend_42 { pt3dadd( 7.69767, -29.2241, -12.3483, 0.83 ) }
    dend_42 { pt3dadd( 8.00624, -30.96, -16.9387, 0.55 ) }
    dend_42 { pt3dadd( 8.05751, -31.7301, -19.1788, 0.83 ) }
    dend_42 { pt3dadd( 8.06371, -32.5422, -21.776, 0.83 ) }
    dend_42 { pt3dadd( 8.06259, -33.2259, -24.2409, 1.11 ) }
    dend_42 { pt3dadd( 8.10136, -33.3324, -24.6687, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.75798, -23.8169, 0.437045, 1.66 ) }
    dend_33 { pt3dadd( 7.60518, -26.2371, 0.386254, 1.66 ) }
    dend_33 { pt3dadd( 8.81793, -29.1662, 0.227429, 1.11 ) }
    dend_33 { pt3dadd( 9.73437, -31.1131, 0.0778745, 1.11 ) }
    dend_33 { pt3dadd( 11.5556, -34.1309, -0.00735557, 1.11 ) }
    dend_33 { pt3dadd( 13.1103, -36.7073, -0.0801174, 1.11 ) }
    dend_33 { pt3dadd( 14.1979, -38.5094, -0.131012, 1.38 ) }
    dend_33 { pt3dadd( 15.493, -40.4382, -0.214654, 1.11 ) }
    dend_33 { pt3dadd( 16.3254, -41.5105, -0.249815, 1.11 ) }
    dend_33 { pt3dadd( 19.9516, -45.2242, -0.33181, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.85185, -24.269, 11.4866, 0.28 ) }
    dend_31 { pt3dadd( -9.82195, -26.1795, 15.4511, 0.28 ) }
    dend_31 { pt3dadd( -9.89415, -26.9552, 17.2292, 1.11 ) }
    dend_31 { pt3dadd( -10.1523, -29.4729, 23.4622, 0.55 ) }
    dend_31 { pt3dadd( -10.2018, -30.2546, 25.3471, 0.83 ) }
    dend_31 { pt3dadd( -10.3115, -31.9851, 29.5195, 0.83 ) }
    dend_31 { pt3dadd( -10.438, -33.9795, 34.3285, 0.55 ) }
    dend_31 { pt3dadd( -10.5349, -35.09, 37.1631, 1.11 ) }
    dend_31 { pt3dadd( -10.6661, -36.9796, 42.2769, 0.55 ) }
    dend_31 { pt3dadd( -10.7709, -37.6599, 44.0703, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.85185, -24.269, 11.4866, 0.83 ) }
    dend_28 { pt3dadd( -13.6166, -24.4432, 13.8961, 0.83 ) }
    dend_28 { pt3dadd( -16.4502, -24.5529, 15.6573, 1.11 ) }
    dend_28 { pt3dadd( -19.2712, -24.5719, 17.3171, 0.83 ) }
    dend_28 { pt3dadd( -22.4669, -24.5314, 19.0836, 0.83 ) }
    dend_28 { pt3dadd( -26.4079, -24.4814, 21.2621, 0.83 ) }
    dend_28 { pt3dadd( -30.1699, -24.4337, 23.3416, 0.83 ) }
    dend_28 { pt3dadd( -34.3144, -24.3823, 25.5564, 1.11 ) }
    dend_28 { pt3dadd( -38.7183, -24.2682, 27.7326, 1.11 ) }
    dend_28 { pt3dadd( -42.6465, -24.1187, 29.5685, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -84.2984, 13.3079, 49.1627, 0.28 ) }
    dend_23 { pt3dadd( -83.8154, 11.5685, 50.4101, 0.28 ) }
    dend_23 { pt3dadd( -83.6439, 10.9509, 50.853, 0.83 ) }
    dend_23 { pt3dadd( -82.7783, 7.83369, 53.0885, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -84.2984, 13.3079, 49.1627, 0.28 ) }
    dend_22 { pt3dadd( -86.8555, 13.8195, 50.1489, 0.28 ) }
    dend_22 { pt3dadd( -87.7846, 13.9573, 50.196, 0.55 ) }
    dend_22 { pt3dadd( -89.8731, 14.1621, 50.006, 0.28 ) }
    dend_22 { pt3dadd( -91.7549, 14.2878, 49.7335, 0.83 ) }
    dend_22 { pt3dadd( -93.9962, 14.4376, 49.4088, 0.28 ) }
    dend_22 { pt3dadd( -96.1464, 14.5813, 49.0974, 0.28 ) }
    dend_22 { pt3dadd( -99.8626, 14.6769, 47.9826, 0.28 ) }
    dend_22 { pt3dadd( -100.628, 14.6813, 47.6707, 0.83 ) }
    dend_22 { pt3dadd( -101.824, 14.6745, 46.9955, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -16.4814, 40.8325, -14.7011, 0.55 ) }
    dend_16 { pt3dadd( -17.5507, 41.1096, -15.4177, 0.55 ) }
    dend_16 { pt3dadd( -19.436, 41.598, -16.681, 0.55 ) }
    dend_16 { pt3dadd( -21.2562, 42.0695, -17.9006, 0.83 ) }
    dend_16 { pt3dadd( -24.5401, 42.9203, -20.1011, 0.55 ) }
    dend_16 { pt3dadd( -26.5984, 43.4535, -21.4804, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -16.4814, 40.8325, -14.7011, 0.55 ) }
    dend_13 { pt3dadd( -15.1191, 44.9074, -15.3641, 0.55 ) }
    dend_13 { pt3dadd( -14.5399, 46.9272, -15.5714, 0.55 ) }
    dend_13 { pt3dadd( -14.109, 48.6598, -15.6013, 0.83 ) }
    dend_13 { pt3dadd( -13.5705, 50.9405, -15.5325, 0.55 ) }
    dend_13 { pt3dadd( -13.2362, 52.4058, -15.4775, 0.83 ) }
    dend_13 { pt3dadd( -12.734, 54.5887, -15.3649, 0.55 ) }
    dend_13 { pt3dadd( -12.3895, 56.2487, -15.1848, 0.83 ) }
    dend_13 { pt3dadd( -11.814, 58.6366, -14.9781, 0.28 ) }
    dend_13 { pt3dadd( -11.4372, 59.9733, -14.8977, 0.83 ) }
    dend_13 { pt3dadd( -10.731, 62.1766, -14.809, 0.55 ) }
    dend_13 { pt3dadd( -10.1449, 63.906, -14.7684, 0.83 ) }
    dend_13 { pt3dadd( -9.18831, 66.5584, -14.7638, 0.55 ) }
    dend_13 { pt3dadd( -8.03192, 69.5291, -14.8403, 0.83 ) }
    dend_13 { pt3dadd( -6.90287, 72.2853, -15.0104, 0.83 ) }
    dend_13 { pt3dadd( -5.37356, 75.9542, -15.2286, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 5.54212, 47.6608, 22.1622, 0.83 ) }
    dend_6 { pt3dadd( 6.55576, 51.3415, 23.1949, 0.83 ) }
    dend_6 { pt3dadd( 7.47995, 55.3933, 24.3153, 0.83 ) }
    dend_6 { pt3dadd( 7.96336, 57.8978, 25.0969, 0.83 ) }
    dend_6 { pt3dadd( 8.56034, 61.3741, 26.2676, 0.83 ) }
    dend_6 { pt3dadd( 9.18778, 65.2877, 27.6043, 0.83 ) }
    dend_6 { pt3dadd( 9.80322, 69.625, 29.0879, 0.83 ) }
    dend_6 { pt3dadd( 10.2942, 73.7531, 30.5642, 0.83 ) }
    dend_6 { pt3dadd( 10.7239, 77.847, 32.1213, 0.83 ) }
    dend_6 { pt3dadd( 10.9166, 80.311, 33.0295, 0.55 ) }
    dend_6 { pt3dadd( 11.0562, 83.0019, 33.915, 0.55 ) }
    dend_6 { pt3dadd( 11.1757, 85.2629, 34.5067, 0.83 ) }
    dend_6 { pt3dadd( 11.3085, 87.292, 34.8744, 0.83 ) }
    dend_6 { pt3dadd( 11.4774, 89.1681, 35.1061, 0.55 ) }
    dend_6 { pt3dadd( 11.7175, 91.549, 35.1835, 0.83 ) }
    dend_6 { pt3dadd( 11.921, 93.4835, 35.1898, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 12.0806, 95.1457, 35.1838, 0.83 ) }
    dend_6 { pt3dadd( 12.288, 97.7248, 35.1846, 0.55 ) }
    dend_6 { pt3dadd( 12.4352, 100.319, 35.1541, 0.83 ) }
    dend_6 { pt3dadd( 12.51, 102.686, 34.9205, 0.55 ) }
    dend_6 { pt3dadd( 12.5118, 103.975, 34.7344, 0.55 ) }
    dend_6 { pt3dadd( 12.4641, 105.972, 34.4278, 0.83 ) }
    dend_6 { pt3dadd( 12.3281, 108.828, 33.9637, 0.83 ) }
    dend_6 { pt3dadd( 12.195, 111.194, 33.5829, 0.55 ) }
    dend_6 { pt3dadd( 11.7877, 116.552, 32.6931, 0.83 ) }
    dend_6 { pt3dadd( 11.5197, 119.66, 32.1787, 0.83 ) }
    dend_6 { pt3dadd( 11.2071, 123.45, 31.6062, 0.83 ) }
    dend_6 { pt3dadd( 11.0387, 125.749, 31.3571, 0.83 ) }
    dend_6 { pt3dadd( 10.879, 127.587, 31.2693, 0.83 ) }
    dend_6 { pt3dadd( 10.7011, 129.393, 31.3245, 0.55 ) }
    dend_6 { pt3dadd( 10.4694, 131.445, 31.5291, 0.55 ) }
    dend_6 { pt3dadd( 10.1242, 133.783, 31.7534, 0.83 ) }
    dend_6 { pt3dadd( 9.33882, 138.122, 32.149, 0.83 ) }
    dend_6 { pt3dadd( 8.70267, 141.553, 32.4341, 1.11 ) }
    dend_6 { pt3dadd( 8.1892, 144.161, 32.6306, 0.55 ) }
    dend_6 { pt3dadd( 7.55511, 147.018, 32.8466, 1.11 ) }
    dend_6 { pt3dadd( 6.51935, 151.025, 33.171, 0.83 ) }
    dend_6 { pt3dadd( 5.5885, 154.347, 33.3953, 0.83 ) }
    dend_6 { pt3dadd( 4.92732, 156.561, 33.4674, 0.83 ) }
    dend_6 { pt3dadd( 4.3021, 158.774, 33.466, 0.55 ) }
    dend_6 { pt3dadd( 3.47377, 161.887, 33.3933, 0.55 ) }
    dend_6 { pt3dadd( 3.29967, 162.623, 33.3583, 0.55 ) }
    dend_6 { pt3dadd( 2.75668, 165.359, 33.2425, 0.55 ) }
    dend_6 { pt3dadd( 2.40945, 167.363, 33.1014, 0.28 ) }
    dend_6 { pt3dadd( 1.94521, 170.59, 32.7328, 0.55 ) }
    dend_6 { pt3dadd( 1.55989, 174.281, 32.1638, 0.55 ) }
    dend_6 { pt3dadd( 1.40264, 176.368, 31.7872, 0.55 ) }
    dend_6 { pt3dadd( 1.15953, 180.008, 31.1155, 0.83 ) }
    dend_6 { pt3dadd( 0.938781, 183.858, 30.3908, 0.83 ) }
    dend_6 { pt3dadd( 0.752835, 186.597, 29.762, 0.83 ) }
    dend_6 { pt3dadd( 0.604294, 188.182, 29.3208, 0.55 ) }
    dend_6 { pt3dadd( 0.459308, 189.589, 28.8904, 0.83 ) }
    dend_6 { pt3dadd( 0.142539, 191.845, 28.2443, 0.83 ) }
    dend_6 { pt3dadd( -0.391793, 194.693, 27.4884, 0.83 ) }
    dend_6 { pt3dadd( -1.14904, 198.264, 26.7991, 0.83 ) }
    dend_6 { pt3dadd( -1.66649, 200.515, 26.4414, 0.83 ) }
    dend_6 { pt3dadd( -2.18858, 202.602, 26.0589, 0.83 ) }
    dend_6 { pt3dadd( -2.9597, 205.554, 25.4466, 0.55 ) }
    dend_6 { pt3dadd( -3.83574, 208.634, 24.7947, 0.55 ) }
    dend_6 { pt3dadd( -4.46768, 210.873, 24.3565, 0.55 ) }
    dend_6 { pt3dadd( -5.13421, 213.362, 23.8851, 0.83 ) }
    dend_6 { pt3dadd( -6.10862, 217.16, 23.1062, 1.11 ) }
    dend_6 { pt3dadd( -6.99845, 221.138, 22.3637, 0.55 ) }
    dend_6 { pt3dadd( -7.3791, 223.457, 22.0274, 0.55 ) }
    dend_6 { pt3dadd( -7.72465, 226.155, 21.737, 0.55 ) }
    dend_6 { pt3dadd( -7.9479, 228.836, 21.5247, 0.83 ) }
    dend_6 { pt3dadd( -8.01398, 232.078, 21.3623, 0.83 ) }
    dend_6 { pt3dadd( -7.86676, 236.549, 21.2319, 0.83 ) }
    dend_6 { pt3dadd( -7.42172, 241.907, 20.9911, 0.83 ) }
    dend_6 { pt3dadd( -7.05462, 245.024, 20.7661, 0.55 ) }
    dend_6 { pt3dadd( -6.62777, 248.113, 20.4638, 0.55 ) }
    dend_6 { pt3dadd( -6.01359, 251.988, 20.0101, 0.83 ) }
    dend_6 { pt3dadd( -5.75758, 253.805, 19.748, 0.83 ) }
    dend_6 { pt3dadd( -5.51034, 256.676, 19.2968, 0.83 ) }
    dend_6 { pt3dadd( -5.4538, 260.061, 18.8404, 0.83 ) }
    dend_6 { pt3dadd( -5.63667, 262.85, 18.6203, 0.28 ) }
    dend_6 { pt3dadd( -5.85012, 264.291, 18.5744, 0.83 ) }
    dend_6 { pt3dadd( -6.69339, 268.393, 18.5638, 0.83 ) }
    dend_6 { pt3dadd( -7.50111, 271.652, 18.6601, 0.83 ) }
    dend_6 { pt3dadd( -8.46941, 274.808, 18.9035, 0.83 ) }
    dend_6 { pt3dadd( -9.60045, 278.042, 19.2922, 0.83 ) }
    dend_6 { pt3dadd( -10.4204, 280.186, 19.612, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.54212, 47.6608, 22.1622, 0.83 ) }
    dend_5 { pt3dadd( 5.01564, 48.1692, 23.0073, 0.83 ) }
    dend_5 { pt3dadd( 4.64313, 48.6342, 23.6787, 0.55 ) }
    dend_5 { pt3dadd( 4.04267, 49.3893, 24.7588, 0.55 ) }
    dend_5 { pt3dadd( 3.47991, 50.0964, 25.7663, 0.55 ) }
    dend_5 { pt3dadd( 2.84276, 50.8102, 26.866, 0.55 ) }
    dend_5 { pt3dadd( 2.36789, 51.2678, 27.6728, 0.55 ) }
    dend_5 { pt3dadd( 1.55751, 51.8942, 29.0621, 0.55 ) }
    dend_5 { pt3dadd( 0.969354, 52.2229, 30.0131, 0.55 ) }
    dend_5 { pt3dadd( 0.130055, 52.4833, 31.2016, 0.55 ) }
    dend_5 { pt3dadd( -1.24297, 52.5137, 32.8825, 0.55 ) }
    dend_5 { pt3dadd( -2.07942, 52.3538, 33.7613, 0.55 ) }
    dend_5 { pt3dadd( -3.00004, 51.9591, 34.6178, 0.55 ) }
    dend_5 { pt3dadd( -3.5583, 51.6006, 35.0527, 0.55 ) }
    dend_5 { pt3dadd( -4.01242, 51.217, 35.3509, 0.55 ) }
    dend_5 { pt3dadd( -4.86453, 50.3257, 35.7954, 0.28 ) }
    dend_5 { pt3dadd( -5.2803, 49.8094, 35.9724, 0.83 ) }
    dend_5 { pt3dadd( -5.83539, 49.0564, 36.1965, 0.55 ) }
    dend_5 { pt3dadd( -6.19126, 48.5025, 36.3044, 0.55 ) }
    dend_5 { pt3dadd( -6.62636, 47.6572, 36.3772, 0.55 ) }
    dend_5 { pt3dadd( -7.01621, 46.7701, 36.3916, 0.83 ) }
    dend_5 { pt3dadd( -7.34059, 45.9805, 36.3675, 0.55 ) }
    dend_5 { pt3dadd( -7.6179, 45.3109, 36.3165, 0.55 ) }
    dend_5 { pt3dadd( -8.26614, 43.7413, 36.1473, 0.55 ) }
    dend_5 { pt3dadd( -8.92946, 42.2475, 35.9693, 0.83 ) }
    dend_5 { pt3dadd( -9.47176, 41.1433, 35.8166, 0.83 ) }
    dend_5 { pt3dadd( -10.0836, 40.0383, 35.586, 0.83 ) }
    dend_5 { pt3dadd( -10.84, 38.8083, 35.3077, 0.55 ) }
    dend_5 { pt3dadd( -11.207, 38.2489, 35.2023, 0.28 ) }
    dend_5 { pt3dadd( -11.6764, 37.5852, 35.1166, 0.55 ) }
    dend_5 { pt3dadd( -12.2481, 36.8702, 35.04, 0.28 ) }
    dend_5 { pt3dadd( -13.4792, 35.4076, 34.9521, 0.55 ) }
    dend_5 { pt3dadd( -14.2444, 34.5381, 34.9422, 0.55 ) }
    dend_5 { pt3dadd( -14.9829, 33.7076, 34.9876, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -15.6432, 32.9616, 35.0614, 0.55 ) }
    dend_5 { pt3dadd( -16.7607, 31.6213, 35.2208, 0.55 ) }
    dend_5 { pt3dadd( -17.1388, 31.1366, 35.2958, 0.83 ) }
    dend_5 { pt3dadd( -17.7865, 30.2289, 35.4534, 0.55 ) }
    dend_5 { pt3dadd( -18.6631, 28.8763, 35.6106, 0.55 ) }
    dend_5 { pt3dadd( -19.2259, 27.8225, 35.6686, 0.83 ) }
    dend_5 { pt3dadd( -19.7451, 26.5425, 35.695, 0.55 ) }
    dend_5 { pt3dadd( -20.0245, 25.547, 35.6753, 0.55 ) }
    dend_5 { pt3dadd( -20.2324, 24.5411, 35.6256, 0.55 ) }
    dend_5 { pt3dadd( -20.301, 24.0047, 35.583, 0.83 ) }
    dend_5 { pt3dadd( -20.403, 22.6212, 35.4313, 0.55 ) }
    dend_5 { pt3dadd( -20.4585, 20.9997, 35.2245, 0.28 ) }
    dend_5 { pt3dadd( -20.4989, 18.6524, 34.9155, 0.28 ) }
    dend_5 { pt3dadd( -20.5226, 17.6661, 34.7532, 0.83 ) }
    dend_5 { pt3dadd( -20.569, 15.7303, 34.4092, 0.28 ) }
    dend_5 { pt3dadd( -20.587, 15.0513, 34.2937, 0.83 ) }
    dend_5 { pt3dadd( -20.6004, 14.6276, 34.2266, 0.28 ) }
    dend_5 { pt3dadd( -20.6056, 13.9626, 34.1047, 0.83 ) }
    dend_5 { pt3dadd( -20.6219, 12.6364, 33.8633, 0.28 ) }
    dend_5 { pt3dadd( -20.6456, 12.127, 33.7903, 0.55 ) }
    dend_5 { pt3dadd( -20.7544, 10.9741, 33.6708, 0.28 ) }
    dend_5 { pt3dadd( -20.833, 10.307, 33.6116, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.6841, 38.8922, 15.7442, 0.83 ) }
    dend_3 { pt3dadd( 12.5649, 39.9818, 13.9666, 0.83 ) }
    dend_3 { pt3dadd( 13.6329, 41.3838, 11.973, 0.83 ) }
    dend_3 { pt3dadd( 14.3032, 42.2873, 10.8424, 0.83 ) }
    dend_3 { pt3dadd( 18.428, 47.7662, 4.80031, 0.55 ) }
    dend_3 { pt3dadd( 19.6043, 49.2892, 3.38919, 0.55 ) }
    dend_3 { pt3dadd( 20.2647, 50.1191, 2.75296, 0.55 ) }
    dend_3 { pt3dadd( 21.1443, 51.1841, 2.0606, 0.55 ) }
    dend_3 { pt3dadd( 22.0338, 52.2556, 1.61333, 1.11 ) }
    dend_3 { pt3dadd( 23.054, 53.541, 1.44829, 0.55 ) }
    dend_3 { pt3dadd( 24.7564, 55.7508, 1.74796, 0.55 ) }
    dend_3 { pt3dadd( 26.203, 57.7495, 2.08153, 0.55 ) }
    dend_3 { pt3dadd( 27.1258, 59.0543, 2.3438, 0.55 ) }
    dend_3 { pt3dadd( 28.2315, 60.7089, 2.80376, 0.83 ) }
    dend_3 { pt3dadd( 29.4547, 62.7379, 3.46169, 0.55 ) }
    dend_3 { pt3dadd( 30.3013, 64.3706, 4.0184, 1.11 ) }
    dend_3 { pt3dadd( 31.1067, 66.0811, 4.64949, 0.55 ) }
    dend_3 { pt3dadd( 31.8633, 67.7664, 5.29099, 0.83 ) }
    dend_3 { pt3dadd( 33.1394, 70.7028, 6.36879, 0.55 ) }
    dend_3 { pt3dadd( 33.8046, 72.2433, 6.9027, 0.55 ) }
    dend_3 { pt3dadd( 34.7043, 74.3758, 7.57528, 0.55 ) }
    dend_3 { pt3dadd( 35.4419, 76.0454, 8.00218, 0.55 ) }
    dend_3 { pt3dadd( 35.9016, 77.0809, 8.21536, 0.28 ) }
    dend_3 { pt3dadd( 36.8445, 79.1327, 8.53489, 0.55 ) }
    dend_3 { pt3dadd( 37.569, 80.6744, 8.68581, 0.28 ) }
    dend_3 { pt3dadd( 38.2579, 82.071, 8.79681, 0.55 ) }
    dend_3 { pt3dadd( 39.5784, 84.6933, 8.96519, 0.55 ) }
    dend_3 { pt3dadd( 40.2924, 86.1738, 9.03726, 0.55 ) }
    dend_3 { pt3dadd( 41.2896, 88.2315, 9.10884, 0.28 ) }
    dend_3 { pt3dadd( 42.3211, 90.3309, 8.58342, 0.83 ) }
    dend_3 { pt3dadd( 43.2365, 92.1522, 7.80854, 0.28 ) }
    dend_3 { pt3dadd( 43.4524, 92.5483, 7.57642, 0.55 ) }
    dend_3 { pt3dadd( 43.9937, 93.4162, 6.85157, 0.28 ) }
    dend_3 { pt3dadd( 44.3515, 93.9354, 6.32147, 0.83 ) }
    dend_3 { pt3dadd( 48.8974, 100.041, -0.751556, 0.55 ) }
    dend_3 { pt3dadd( 50.7057, 102.273, -3.44646, 0.55 ) }
    dend_3 { pt3dadd( 51.2682, 102.949, -4.2349, 0.83 ) }
    dend_3 { pt3dadd( 52.6129, 104.547, -5.76575, 0.55 ) }
    dend_3 { pt3dadd( 53.2791, 105.345, -6.3124, 0.55 ) }
    dend_3 { pt3dadd( 53.9864, 106.338, -6.46113, 0.83 ) }
    dend_3 { pt3dadd( 54.7239, 107.639, -6.00034, 0.28 ) }
    dend_3 { pt3dadd( 55.0434, 108.349, -5.85382, 0.55 ) }
    dend_3 { pt3dadd( 55.7514, 110.379, -5.31368, 0.28 ) }
    dend_3 { pt3dadd( 56.1138, 111.729, -4.79356, 0.55 ) }
    dend_3 { pt3dadd( 56.4139, 112.899, -4.35919, 0.28 ) }
    dend_3 { pt3dadd( 56.6159, 114.072, -4.06707, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.6841, 38.8922, 15.7442, 0.55 ) }
    dend_2 { pt3dadd( 12.9646, 38.1047, 17.3505, 0.55 ) }
    dend_2 { pt3dadd( 14.886, 36.923, 19.7608, 0.28 ) }
    dend_2 { pt3dadd( 15.8941, 36.303, 21.0255, 0.55 ) }
    dend_2 { pt3dadd( 17.7459, 35.1641, 23.3485, 0.55 ) }
    dend_2 { pt3dadd( 20.1671, 33.675, 26.3858, 0.55 ) }
    dend_2 { pt3dadd( 21.4909, 32.8608, 28.0465, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 8.10136, -33.3324, -24.6687, 0.55 ) }
    dend_48 { pt3dadd( 4.75418, -31.5124, -25.6596, 0.55 ) }
    dend_48 { pt3dadd( 3.73017, -31.0333, -26.2634, 0.83 ) }
    dend_48 { pt3dadd( 1.35473, -29.97, -27.8325, 0.55 ) }
    dend_48 { pt3dadd( 0.376935, -29.5587, -28.4638, 0.55 ) }
    dend_48 { pt3dadd( -4.08818, -28.1785, -31.9545, 0.28 ) }
    dend_48 { pt3dadd( -5.01381, -27.9574, -32.7054, 0.83 ) }
    dend_48 { pt3dadd( -8.74945, -27.4533, -36.2089, 0.55 ) }
    dend_48 { pt3dadd( -9.14924, -27.4281, -36.5978, 0.55 ) }
    dend_48 { pt3dadd( -10.2187, -27.4333, -37.6689, 0.83 ) }
    dend_48 { pt3dadd( -14.9724, -27.6274, -42.3304, 0.55 ) }
    dend_48 { pt3dadd( -15.891, -27.6971, -43.1975, 0.55 ) }
    dend_48 { pt3dadd( -16.9251, -27.7853, -44.199, 0.83 ) }
    dend_48 { pt3dadd( -19.1842, -27.9375, -46.532, 0.55 ) }
    dend_48 { pt3dadd( -19.6544, -27.9326, -47.0511, 0.55 ) }
    dend_48 { pt3dadd( -20.5067, -27.843, -48.0895, 0.55 ) }
    dend_48 { pt3dadd( -23.9019, -27.1002, -52.3919, 0.28 ) }
    dend_48 { pt3dadd( -24.8109, -26.855, -53.6241, 0.83 ) }
    dend_48 { pt3dadd( -27.8469, -25.8464, -57.85, 0.55 ) }
    dend_48 { pt3dadd( -28.615, -25.5202, -58.9532, 0.83 ) }
    dend_48 { pt3dadd( -32.4709, -23.4933, -64.5437, 0.55 ) }
    dend_48 { pt3dadd( -33.5132, -22.7772, -66.1628, 0.28 ) }
    dend_48 { pt3dadd( -34.1031, -22.2767, -67.1267, 0.83 ) }
    dend_48 { pt3dadd( -35.0662, -21.3058, -68.8073, 0.55 ) }
    dend_48 { pt3dadd( -35.71, -20.4829, -70.0029, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -36.9844, -18.4338, -72.7292, 0.55 ) }
    dend_48 { pt3dadd( -38.354, -15.2143, -76.3287, 0.28 ) }
    dend_48 { pt3dadd( -38.5317, -14.7202, -76.8716, 0.55 ) }
    dend_48 { pt3dadd( -38.9492, -13.4019, -78.3016, 0.28 ) }
    dend_48 { pt3dadd( -39.1034, -12.8666, -78.8827, 0.55 ) }
    dend_48 { pt3dadd( -39.5886, -11.0483, -80.8165, 0.28 ) }
    dend_48 { pt3dadd( -39.7304, -10.4044, -81.4757, 0.55 ) }
    dend_48 { pt3dadd( -40.1882, -8.38557, -83.5201, 0.28 ) }
    dend_48 { pt3dadd( -40.3779, -7.64424, -84.3154, 0.55 ) }
    dend_48 { pt3dadd( -40.8624, -6.01003, -86.0695, 0.28 ) }
    dend_48 { pt3dadd( -40.9931, -5.64372, -86.4615, 0.55 ) }
    dend_48 { pt3dadd( -41.5283, -4.16784, -87.9264, 0.28 ) }
    dend_48 { pt3dadd( -41.7169, -3.65599, -88.4258, 0.55 ) }
    dend_48 { pt3dadd( -42.3503, -2.06263, -89.8925, 0.28 ) }
    dend_48 { pt3dadd( -42.7505, -1.28226, -90.6987, 0.55 ) }
    dend_48 { pt3dadd( -44.0578, 0.98306, -93.0221, 0.28 ) }
    dend_48 { pt3dadd( -44.6523, 1.89987, -93.9864, 0.55 ) }
    dend_48 { pt3dadd( -46.4885, 4.38094, -96.9418, 0.28 ) }
    dend_48 { pt3dadd( -47.0688, 5.12317, -97.9101, 0.55 ) }
    dend_48 { pt3dadd( -49.0266, 7.46704, -101.463, 0.28 ) }
    dend_48 { pt3dadd( -49.723, 8.23416, -102.751, 0.28 ) }
    dend_48 { pt3dadd( -50.5725, 9.11833, -104.337, 0.55 ) }
    dend_48 { pt3dadd( -52.1104, 10.6385, -107.055, 0.28 ) }
    dend_48 { pt3dadd( -52.3837, 10.928, -107.524, 0.55 ) }
    dend_48 { pt3dadd( -53.6162, 12.1453, -109.703, 0.28 ) }
    dend_48 { pt3dadd( -54.2127, 12.7289, -110.736, 0.83 ) }
    dend_48 { pt3dadd( -55.4787, 13.9127, -112.815, 0.55 ) }
    dend_48 { pt3dadd( -56.2915, 14.6817, -114.168, 0.55 ) }
    dend_48 { pt3dadd( -57.6811, 16.0745, -116.502, 0.55 ) }
    dend_48 { pt3dadd( -61.0947, 19.5147, -122.597, 0.83 ) }
    dend_48 { pt3dadd( -62.2572, 20.6928, -124.817, 0.28 ) }
    dend_48 { pt3dadd( -62.8566, 21.3102, -126.062, 0.55 ) }
    dend_48 { pt3dadd( -65.0218, 23.5677, -131.063, 0.55 ) }
    dend_48 { pt3dadd( -65.5321, 24.1627, -132.432, 0.55 ) }
    dend_48 { pt3dadd( -67.1317, 26.0582, -137.118, 0.83 ) }
    dend_48 { pt3dadd( -68.1772, 27.2507, -140.301, 0.28 ) }
    dend_48 { pt3dadd( -68.9213, 27.8105, -142.42, 0.55 ) }
    dend_48 { pt3dadd( -69.8275, 28.1594, -145.016, 0.28 ) }
    dend_48 { pt3dadd( -70.2192, 28.1893, -146.135, 0.83 ) }
    dend_48 { pt3dadd( -72.5037, 27.8429, -152.397, 0.55 ) }
    dend_48 { pt3dadd( -73.4055, 27.5233, -154.781, 0.55 ) }
    dend_48 { pt3dadd( -75.6005, 26.5264, -160.151, 0.55 ) }
    dend_48 { pt3dadd( -79.2437, 24.9258, -167.958, 0.55 ) }
    dend_48 { pt3dadd( -80.1544, 24.5393, -169.743, 0.55 ) }
    dend_48 { pt3dadd( -82.5506, 23.5832, -174.182, 0.55 ) }
    dend_48 { pt3dadd( -85.1763, 22.6485, -178.778, 0.55 ) }
    dend_48 { pt3dadd( -87.3183, 21.992, -182.316, 0.55 ) }
    dend_48 { pt3dadd( -90.7779, 21.0621, -187.531, 0.55 ) }
    dend_48 { pt3dadd( -94.5006, 20.2395, -192.736, 0.55 ) }
    dend_48 { pt3dadd( -95.3437, 20.0759, -193.899, 0.55 ) }
    dend_48 { pt3dadd( -99.0375, 19.321, -198.996, 0.55 ) }
    dend_48 { pt3dadd( -99.9326, 19.1348, -200.22, 0.28 ) }
    dend_48 { pt3dadd( -100.146, 19.0841, -200.517, 0.55 ) }
    dend_48 { pt3dadd( -108.393, 16.7706, -212.07, 0.28 ) }
    dend_48 { pt3dadd( -109.154, 16.5479, -213.103, 0.83 ) }
    dend_48 { pt3dadd( -113.651, 15.1043, -219.166, 0.28 ) }
    dend_48 { pt3dadd( -113.942, 15.0085, -219.553, 0.55 ) }
    dend_48 { pt3dadd( -116.079, 14.3418, -222.369, 0.28 ) }
    dend_48 { pt3dadd( -116.959, 14.0644, -223.503, 0.55 ) }
    dend_48 { pt3dadd( -118.789, 13.408, -225.559, 0.28 ) }
    dend_48 { pt3dadd( -119.413, 13.1743, -226.272, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 8.10136, -33.3324, -24.6687, 0.55 ) }
    dend_43 { pt3dadd( 9.3673, -33.777, -27.4746, 0.55 ) }
    dend_43 { pt3dadd( 10.496, -34.1113, -29.653, 0.55 ) }
    dend_43 { pt3dadd( 12.948, -34.8441, -34.7045, 0.83 ) }
    dend_43 { pt3dadd( 13.5974, -35.0853, -36.0596, 0.83 ) }
    dend_43 { pt3dadd( 14.3585, -35.4001, -37.6293, 0.83 ) }
    dend_43 { pt3dadd( 15.0102, -35.6598, -38.9246, 0.83 ) }
    dend_43 { pt3dadd( 16.1842, -36.106, -41.162, 0.83 ) }
    dend_43 { pt3dadd( 18.139, -36.9504, -44.9104, 0.83 ) }
    dend_43 { pt3dadd( 19.385, -37.4116, -47.1232, 0.83 ) }
    dend_43 { pt3dadd( 20.7146, -37.8473, -49.6196, 0.83 ) }
    dend_43 { pt3dadd( 22.1986, -38.264, -52.3953, 0.83 ) }
    dend_43 { pt3dadd( 23.5511, -38.6016, -54.9198, 0.83 ) }
    dend_43 { pt3dadd( 25.7883, -39.1156, -58.9201, 0.83 ) }
    dend_43 { pt3dadd( 27.2106, -39.3612, -61.3112, 0.83 ) }
    dend_43 { pt3dadd( 29.0207, -39.5416, -64.3768, 0.83 ) }
    dend_43 { pt3dadd( 30.1736, -39.6057, -66.3636, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 19.9516, -45.2242, -0.33181, 0.55 ) }
    dend_39 { pt3dadd( 22.5629, -45.019, 0.496661, 0.55 ) }
    dend_39 { pt3dadd( 24.7355, -44.9621, 1.24199, 0.28 ) }
    dend_39 { pt3dadd( 26.1099, -45.018, 1.75138, 0.55 ) }
    dend_39 { pt3dadd( 28.4383, -45.1864, 2.64449, 1.11 ) }
    dend_39 { pt3dadd( 32.6556, -45.6404, 4.45807, 0.55 ) }
    dend_39 { pt3dadd( 34.269, -45.8524, 5.21331, 0.55 ) }
    dend_39 { pt3dadd( 36.051, -46.17, 6.15004, 0.83 ) }
    dend_39 { pt3dadd( 37.9366, -46.5369, 7.20587, 0.28 ) }
    dend_39 { pt3dadd( 40.1366, -47.0369, 8.20586, 0.83 ) }
    dend_39 { pt3dadd( 41.1139, -47.6237, 9.2841, 0.28 ) }
    dend_39 { pt3dadd( 41.9659, -47.9682, 9.86064, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 19.9516, -45.2242, -0.33181, 0.83 ) }
    dend_34 { pt3dadd( 21.9503, -48.5665, -1.18094, 0.83 ) }
    dend_34 { pt3dadd( 23.7469, -51.0579, -2.24644, 0.55 ) }
    dend_34 { pt3dadd( 24.9411, -52.4628, -3.16584, 0.83 ) }
    dend_34 { pt3dadd( 25.9155, -53.609, -3.916, 0.83 ) }
    dend_34 { pt3dadd( 27.266, -55.1977, -4.9557, 0.83 ) }
    dend_34 { pt3dadd( 28.4521, -56.593, -5.86881, 0.83 ) }
    dend_34 { pt3dadd( 30.9194, -58.8759, -8.05114, 0.83 ) }
    dend_34 { pt3dadd( 32.7361, -60.3441, -9.94712, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -42.6465, -24.1187, 29.5685, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -43.8476, -21.5123, 28.7522, 0.55 ) }
    dend_30 { pt3dadd( -45.3512, -17.9281, 27.6055, 0.83 ) }
    dend_30 { pt3dadd( -47.4521, -12.9259, 25.8898, 0.55 ) }
    dend_30 { pt3dadd( -48.3706, -10.5044, 25.0953, 0.55 ) }
    dend_30 { pt3dadd( -49.6091, -6.97059, 23.9725, 1.11 ) }
    dend_30 { pt3dadd( -50.6632, -3.82555, 23.0203, 0.83 ) }
    dend_30 { pt3dadd( -51.6993, -0.514814, 22.0349, 0.55 ) }
    dend_30 { pt3dadd( -52.0863, 0.83753, 21.6534, 0.55 ) }
    dend_30 { pt3dadd( -53.0534, 4.15005, 20.9891, 0.55 ) }
    dend_30 { pt3dadd( -53.2549, 4.82259, 20.8575, 1.11 ) }
    dend_30 { pt3dadd( -53.7218, 6.47108, 20.8467, 0.55 ) }
    dend_30 { pt3dadd( -54.1872, 8.13786, 21.3245, 0.83 ) }
    dend_30 { pt3dadd( -54.6544, 9.68991, 22.1282, 0.55 ) }
    dend_30 { pt3dadd( -55.2544, 11.4988, 23.2326, 0.55 ) }
    dend_30 { pt3dadd( -55.7614, 12.7819, 24.0365, 0.83 ) }
    dend_30 { pt3dadd( -58.3841, 18.936, 27.1053, 0.55 ) }
    dend_30 { pt3dadd( -59.1152, 20.6574, 27.7885, 0.83 ) }
    dend_30 { pt3dadd( -60.1288, 22.9026, 28.4495, 0.55 ) }
    dend_30 { pt3dadd( -61.329, 25.2526, 28.9624, 0.55 ) }
    dend_30 { pt3dadd( -62.5765, 27.4447, 29.1406, 1.11 ) }
    dend_30 { pt3dadd( -64.9935, 31.5861, 28.9661, 0.55 ) }
    dend_30 { pt3dadd( -65.7831, 32.9388, 28.7807, 0.55 ) }
    dend_30 { pt3dadd( -67.7598, 36.5202, 28.232, 0.55 ) }
    dend_30 { pt3dadd( -69.0002, 38.865, 27.8407, 0.55 ) }
    dend_30 { pt3dadd( -70.5605, 41.8946, 27.4032, 1.11 ) }
    dend_30 { pt3dadd( -72.2887, 45.2742, 27.039, 0.55 ) }
    dend_30 { pt3dadd( -73.3277, 47.3348, 26.9679, 1.11 ) }
    dend_30 { pt3dadd( -74.6407, 49.8934, 26.9209, 0.28 ) }
    dend_30 { pt3dadd( -75.0914, 50.785, 26.9502, 0.55 ) }
    dend_30 { pt3dadd( -75.8356, 52.2232, 27.0924, 0.28 ) }
    dend_30 { pt3dadd( -76.8613, 54.0769, 27.4985, 0.83 ) }
    dend_30 { pt3dadd( -78.5383, 56.8082, 28.3067, 0.28 ) }
    dend_30 { pt3dadd( -79.1555, 57.8199, 28.6805, 0.55 ) }
    dend_30 { pt3dadd( -81.6738, 61.9474, 30.4956, 0.28 ) }
    dend_30 { pt3dadd( -82.608, 63.5353, 31.2251, 0.83 ) }
    dend_30 { pt3dadd( -83.9169, 65.8431, 32.2725, 0.55 ) }
    dend_30 { pt3dadd( -85.2251, 68.2114, 33.3278, 0.55 ) }
    dend_30 { pt3dadd( -86.5522, 70.6314, 34.3414, 0.55 ) }
    dend_30 { pt3dadd( -87.5372, 72.526, 35.0908, 0.83 ) }
    dend_30 { pt3dadd( -88.6647, 74.8055, 35.8954, 0.28 ) }
    dend_30 { pt3dadd( -89.6996, 77.0506, 36.6063, 0.55 ) }
    dend_30 { pt3dadd( -90.8853, 80.0111, 37.279, 0.55 ) }
    dend_30 { pt3dadd( -91.0789, 80.6157, 37.3737, 0.83 ) }
    dend_30 { pt3dadd( -91.8721, 83.3672, 37.3959, 0.28 ) }
    dend_30 { pt3dadd( -92.2005, 84.9332, 37.2314, 0.55 ) }
    dend_30 { pt3dadd( -92.4409, 86.2236, 36.8778, 0.28 ) }
    dend_30 { pt3dadd( -92.9863, 88.8204, 35.7158, 0.55 ) }
    dend_30 { pt3dadd( -93.558, 91.5278, 34.1815, 0.55 ) }
    dend_30 { pt3dadd( -94.4297, 95.3613, 31.8045, 0.28 ) }
    dend_30 { pt3dadd( -95.0865, 97.8781, 29.7832, 0.83 ) }
    dend_30 { pt3dadd( -96.0605, 101.462, 26.5158, 0.55 ) }
    dend_30 { pt3dadd( -96.7594, 104.029, 23.9729, 0.55 ) }
    dend_30 { pt3dadd( -97.0757, 105.102, 22.8673, 0.55 ) }
    dend_30 { pt3dadd( -97.6355, 106.722, 21.0534, 0.83 ) }
    dend_30 { pt3dadd( -99.3002, 111.193, 16.1663, 0.28 ) }
    dend_30 { pt3dadd( -99.6992, 112.109, 15.1506, 0.83 ) }
    dend_30 { pt3dadd( -100.287, 113.389, 13.871, 0.28 ) }
    dend_30 { pt3dadd( -100.932, 114.715, 12.7464, 0.55 ) }
    dend_30 { pt3dadd( -102.945, 117.963, 10.4556, 0.83 ) }
    dend_30 { pt3dadd( -103.665, 119.028, 10.2035, 0.83 ) }
    dend_30 { pt3dadd( -104.801, 120.777, 10.6571, 0.28 ) }
    dend_30 { pt3dadd( -105.318, 121.62, 11.0703, 0.55 ) }
    dend_30 { pt3dadd( -106.428, 123.615, 12.3784, 0.28 ) }
    dend_30 { pt3dadd( -107.123, 125.162, 13.4744, 0.55 ) }
    dend_30 { pt3dadd( -108.473, 129.515, 17.6201, 0.28 ) }
    dend_30 { pt3dadd( -108.683, 130.392, 18.5394, 0.55 ) }
    dend_30 { pt3dadd( -108.914, 131.836, 20.0449, 0.28 ) }
    dend_30 { pt3dadd( -109.027, 133.004, 21.2742, 0.83 ) }
    dend_30 { pt3dadd( -109.133, 134.945, 23.327, 0.83 ) }
    dend_30 { pt3dadd( -109.21, 140.636, 28.9715, 0.28 ) }
    dend_30 { pt3dadd( -109.198, 141.497, 29.7408, 0.55 ) }
    dend_30 { pt3dadd( -109.096, 144.539, 32.327, 0.28 ) }
    dend_30 { pt3dadd( -109.015, 146.286, 33.7271, 0.83 ) }
    dend_30 { pt3dadd( -108.905, 148.201, 35.1467, 0.28 ) }
    dend_30 { pt3dadd( -108.833, 149.799, 36.1632, 0.83 ) }
    dend_30 { pt3dadd( -108.769, 153.281, 37.7358, 0.28 ) }
    dend_30 { pt3dadd( -108.743, 154.877, 38.335, 0.83 ) }
    dend_30 { pt3dadd( -108.729, 157.88, 39.1655, 0.28 ) }
    dend_30 { pt3dadd( -108.798, 159.715, 39.3882, 0.55 ) }
    dend_30 { pt3dadd( -108.933, 161.626, 39.3382, 0.28 ) }
    dend_30 { pt3dadd( -109.213, 163.852, 38.8385, 0.55 ) }
    dend_30 { pt3dadd( -109.687, 166.564, 37.8251, 0.28 ) }
    dend_30 { pt3dadd( -109.912, 167.693, 37.2867, 0.83 ) }
    dend_30 { pt3dadd( -110.519, 170.465, 35.7832, 0.28 ) }
    dend_30 { pt3dadd( -111.094, 172.517, 34.3871, 0.83 ) }
    dend_30 { pt3dadd( -112.17, 176.168, 31.7457, 0.28 ) }
    dend_30 { pt3dadd( -112.563, 177.343, 30.7232, 0.83 ) }
    dend_30 { pt3dadd( -113.314, 179.414, 28.6566, 0.28 ) }
    dend_30 { pt3dadd( -113.638, 180.224, 27.6956, 0.83 ) }
    dend_30 { pt3dadd( -115.571, 184.911, 21.6657, 0.28 ) }
    dend_30 { pt3dadd( -116.407, 186.699, 19.0739, 0.83 ) }
    dend_30 { pt3dadd( -118.35, 190.736, 12.8539, 0.28 ) }
    dend_30 { pt3dadd( -119.052, 192.169, 10.452, 0.83 ) }
    dend_30 { pt3dadd( -120.375, 194.728, 5.90761, 0.28 ) }
    dend_30 { pt3dadd( -120.806, 195.517, 4.43896, 0.55 ) }
    dend_30 { pt3dadd( -122.107, 197.899, 0.249617, 0.28 ) }
    dend_30 { pt3dadd( -122.562, 198.684, -1.06807, 0.28 ) }
    dend_30 { pt3dadd( -123.688, 200.699, -3.85883, 0.55 ) }
    dend_30 { pt3dadd( -125.837, 203.746, -7.82866, 0.28 ) }
    dend_30 { pt3dadd( -127.503, 205.855, -10.4322, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -129.152, 207.75, -12.9982, 0.28 ) }
    dend_30 { pt3dadd( -129.999, 208.684, -14.2588, 0.55 ) }
    dend_30 { pt3dadd( -131.37, 210.195, -16.0687, 0.28 ) }
    dend_30 { pt3dadd( -137.765, 217.386, -23.4308, 0.28 ) }
    dend_30 { pt3dadd( -138.493, 218.243, -24.2148, 0.83 ) }
    dend_30 { pt3dadd( -143.172, 223.934, -29.066, 0.28 ) }
    dend_30 { pt3dadd( -143.683, 224.559, -29.6273, 0.83 ) }
    dend_30 { pt3dadd( -149.214, 231.957, -35.5087, 0.28 ) }
    dend_30 { pt3dadd( -149.624, 232.715, -35.8497, 0.55 ) }
    dend_30 { pt3dadd( -150.395, 236.27, -35.0572, 0.28 ) }
    dend_30 { pt3dadd( -150.67, 237.36, -34.9075, 0.55 ) }
    dend_30 { pt3dadd( -151.114, 238.989, -34.5666, 0.28 ) }
    dend_30 { pt3dadd( -151.707, 240.431, -35.0885, 0.55 ) }
    dend_30 { pt3dadd( -152.822, 242.715, -36.6024, 0.28 ) }
    dend_30 { pt3dadd( -153.355, 243.793, -37.329, 1.11 ) }
    dend_30 { pt3dadd( -154.715, 246.247, -38.8229, 0.28 ) }
    dend_30 { pt3dadd( -155.319, 247.24, -39.498, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -42.6465, -24.1187, 29.5685, 0.55 ) }
    dend_29 { pt3dadd( -46.6103, -26.2571, 30.9763, 0.55 ) }
    dend_29 { pt3dadd( -48.3738, -27.0874, 31.6216, 0.55 ) }
    dend_29 { pt3dadd( -51.0791, -28.2451, 32.6979, 0.83 ) }
    dend_29 { pt3dadd( -53.8378, -29.4277, 33.8388, 0.55 ) }
    dend_29 { pt3dadd( -56.104, -30.5205, 34.9498, 0.55 ) }
    dend_29 { pt3dadd( -57.1469, -31.0891, 35.5168, 0.83 ) }
    dend_29 { pt3dadd( -58.5987, -32.0233, 36.5074, 0.55 ) }
    dend_29 { pt3dadd( -60.9629, -33.7152, 38.7082, 0.55 ) }
    dend_29 { pt3dadd( -62.0648, -34.641, 40.0287, 0.55 ) }
    dend_29 { pt3dadd( -63.9207, -36.5041, 42.7031, 0.55 ) }
    dend_29 { pt3dadd( -64.6714, -37.3877, 44.036, 0.28 ) }
    dend_29 { pt3dadd( -66.244, -39.5017, 47.245, 0.83 ) }
    dend_29 { pt3dadd( -67.9469, -41.9546, 51.2721, 0.55 ) }
    dend_29 { pt3dadd( -68.2386, -42.3753, 52.0205, 0.55 ) }
    dend_29 { pt3dadd( -69.1996, -43.6195, 54.3585, 0.83 ) }
    dend_29 { pt3dadd( -70.4417, -44.9402, 56.9708, 0.55 ) }
    dend_29 { pt3dadd( -71.3967, -45.8398, 58.8197, 0.83 ) }
    dend_29 { pt3dadd( -74.1884, -48.2076, 63.3403, 0.55 ) }
    dend_29 { pt3dadd( -75.5605, -49.2958, 65.105, 0.83 ) }
    dend_29 { pt3dadd( -77.3687, -50.5819, 67.0871, 0.28 ) }
    dend_29 { pt3dadd( -78.879, -51.5126, 68.4243, 0.55 ) }
    dend_29 { pt3dadd( -80.6483, -52.4875, 69.5979, 0.55 ) }
    dend_29 { pt3dadd( -83.3587, -53.8746, 70.9915, 0.28 ) }
    dend_29 { pt3dadd( -84.5918, -54.4775, 71.4168, 0.28 ) }
    dend_29 { pt3dadd( -85.6702, -54.9723, 71.7514, 0.55 ) }
    dend_29 { pt3dadd( -88.5645, -56.4442, 72.6955, 0.28 ) }
    dend_29 { pt3dadd( -89.6109, -57.0764, 73.1794, 0.55 ) }
    dend_29 { pt3dadd( -90.1147, -57.4211, 73.439, 0.28 ) }
    dend_29 { pt3dadd( -91.4131, -58.4038, 74.2747, 0.28 ) }
    dend_29 { pt3dadd( -92.2744, -59.0637, 74.8392, 0.55 ) }
    dend_29 { pt3dadd( -93.9747, -60.4812, 75.982, 0.28 ) }
    dend_29 { pt3dadd( -95.6808, -62.0921, 77.1214, 0.55 ) }
    dend_29 { pt3dadd( -97.7706, -64.0585, 78.583, 0.28 ) }
    dend_29 { pt3dadd( -99.3284, -65.5853, 79.7214, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -82.7783, 7.83369, 53.0885, 0.28 ) }
    dend_25 { pt3dadd( -85.2813, 10.3298, 53.3509, 0.28 ) }
    dend_25 { pt3dadd( -85.9475, 11.0899, 53.4176, 0.55 ) }
    dend_25 { pt3dadd( -87.3739, 12.7677, 53.5811, 0.28 ) }
    dend_25 { pt3dadd( -87.6854, 13.1736, 53.6247, 0.55 ) }
    dend_25 { pt3dadd( -90.5622, 17.2395, 54.099, 0.28 ) }
    dend_25 { pt3dadd( -92.7693, 20.4686, 54.5887, 0.28 ) }
    dend_25 { pt3dadd( -94.0268, 22.5774, 54.9471, 0.28 ) }
    dend_25 { pt3dadd( -94.8959, 24.1856, 55.2474, 0.55 ) }
    dend_25 { pt3dadd( -96.8137, 28.0102, 55.8578, 0.28 ) }
    dend_25 { pt3dadd( -97.513, 29.4517, 56.1161, 0.55 ) }
    dend_25 { pt3dadd( -98.5595, 31.7606, 56.617, 0.28 ) }
    dend_25 { pt3dadd( -99.0839, 33.072, 56.9136, 0.55 ) }
    dend_25 { pt3dadd( -99.8846, 35.239, 57.4232, 0.28 ) }
    dend_25 { pt3dadd( -100.851, 38.2291, 58.0596, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -82.7783, 7.83369, 53.0885, 0.28 ) }
    dend_24 { pt3dadd( -80.8333, 7.04655, 51.7884, 0.28 ) }
    dend_24 { pt3dadd( -80.3066, 6.81991, 51.362, 0.83 ) }
    dend_24 { pt3dadd( -77.7694, 5.96338, 49.4145, 0.28 ) }
    dend_24 { pt3dadd( -77.5035, 5.88152, 49.2186, 0.83 ) }
    dend_24 { pt3dadd( -75.1253, 5.28271, 47.6693, 0.28 ) }
    dend_24 { pt3dadd( -74.4136, 5.11988, 47.2452, 0.83 ) }
    dend_24 { pt3dadd( -69.7242, 4.2394, 44.6053, 0.28 ) }
    dend_24 { pt3dadd( -67.0569, 3.80829, 43.2169, 0.28 ) }
    dend_24 { pt3dadd( -66.4644, 3.73745, 42.9446, 1.11 ) }
    dend_24 { pt3dadd( -63.3339, 3.43869, 41.6783, 0.28 ) }
    dend_24 { pt3dadd( -62.4108, 3.34068, 41.3124, 0.55 ) }
    dend_24 { pt3dadd( -59.0319, 2.92105, 39.9398, 0.28 ) }
    dend_24 { pt3dadd( -57.4516, 2.69671, 39.3299, 0.28 ) }
    dend_24 { pt3dadd( -56.4727, 2.51214, 38.9085, 0.55 ) }
    dend_24 { pt3dadd( -55.0103, 2.21017, 38.2253, 0.28 ) }
    dend_24 { pt3dadd( -50.7559, 1.05151, 35.9539, 0.28 ) }
    dend_24 { pt3dadd( -48.5332, 0.39467, 34.7311, 0.28 ) }
    dend_24 { pt3dadd( -48.0477, 0.2114, 34.4726, 0.83 ) }
    dend_24 { pt3dadd( -46.9889, -0.248142, 33.9273, 0.28 ) }
    dend_24 { pt3dadd( -46.9889, -0.248142, 33.9273, 0.83 ) }
    dend_24 { pt3dadd( -44.6513, -1.31942, 32.8804, 0.28 ) }
    dend_24 { pt3dadd( -44.0243, -1.61397, 32.7189, 0.83 ) }
    dend_24 { pt3dadd( -42.1751, -2.78836, 32.172, 0.28 ) }
    dend_24 { pt3dadd( -41.0593, -3.56067, 31.8218, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -26.5984, 43.4535, -21.4804, 0.28 ) }
    dend_18 { pt3dadd( -27.9672, 41.631, -22.5421, 0.28 ) }
    dend_18 { pt3dadd( -29.0299, 40.2075, -23.5153, 0.83 ) }
    dend_18 { pt3dadd( -30.1856, 38.6499, -24.5556, 0.55 ) }
    dend_18 { pt3dadd( -31.3744, 37.053, -25.8327, 1.11 ) }
    dend_18 { pt3dadd( -34.5951, 32.4918, -29.8282, 0.28 ) }
    dend_18 { pt3dadd( -34.8193, 32.1797, -30.1475, 0.83 ) }
    dend_18 { pt3dadd( -35.8204, 30.7746, -31.8543, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -36.432, 29.8964, -33.0177, 0.83 ) }
    dend_18 { pt3dadd( -38.6653, 26.6963, -37.5534, 0.28 ) }
    dend_18 { pt3dadd( -39.2442, 25.8865, -38.7001, 0.83 ) }
    dend_18 { pt3dadd( -41.3695, 23.2077, -43.1266, 0.28 ) }
    dend_18 { pt3dadd( -41.7502, 22.739, -43.9697, 0.55 ) }
    dend_18 { pt3dadd( -42.4036, 21.9511, -45.4643, 0.55 ) }
    dend_18 { pt3dadd( -43.0747, 21.1496, -47.0692, 0.55 ) }
    dend_18 { pt3dadd( -43.9566, 20.1344, -49.1124, 1.11 ) }
    dend_18 { pt3dadd( -47.5159, 16.1151, -58.1087, 0.55 ) }
    dend_18 { pt3dadd( -48.0017, 15.537, -59.4997, 0.28 ) }
    dend_18 { pt3dadd( -48.1439, 15.3847, -59.9234, 0.55 ) }
    dend_18 { pt3dadd( -49.095, 14.4783, -62.7497, 0.28 ) }
    dend_18 { pt3dadd( -49.4795, 14.0931, -64.0125, 0.83 ) }
    dend_18 { pt3dadd( -51.667, 11.8553, -71.6329, 0.28 ) }
    dend_18 { pt3dadd( -51.7669, 11.7554, -71.9585, 0.55 ) }
    dend_18 { pt3dadd( -54.018, 9.54101, -79.2127, 0.28 ) }
    dend_18 { pt3dadd( -54.4123, 9.11657, -80.5238, 0.55 ) }
    dend_18 { pt3dadd( -55.5716, 7.8236, -84.1663, 0.28 ) }
    dend_18 { pt3dadd( -55.7743, 7.58065, -84.7935, 0.83 ) }
    dend_18 { pt3dadd( -56.7629, 6.32786, -87.6406, 0.28 ) }
    dend_18 { pt3dadd( -57.2563, 5.69179, -89.0497, 0.83 ) }
    dend_18 { pt3dadd( -59.6329, 2.3235, -95.8098, 0.28 ) }
    dend_18 { pt3dadd( -60.2377, 1.50126, -97.3416, 0.83 ) }
    dend_18 { pt3dadd( -62.6831, -1.67641, -102.856, 0.55 ) }
    dend_18 { pt3dadd( -62.9939, -2.09277, -103.54, 0.83 ) }
    dend_18 { pt3dadd( -64.6962, -4.46973, -107.195, 0.28 ) }
    dend_18 { pt3dadd( -65.2291, -5.23386, -108.263, 0.55 ) }
    dend_18 { pt3dadd( -67.4077, -8.47421, -112.294, 0.28 ) }
    dend_18 { pt3dadd( -68.1815, -9.66789, -113.74, 0.83 ) }
    dend_18 { pt3dadd( -71.989, -15.6592, -120.333, 0.28 ) }
    dend_18 { pt3dadd( -72.1799, -15.9649, -120.665, 0.83 ) }
    dend_18 { pt3dadd( -73.3358, -17.9084, -122.678, 0.28 ) }
    dend_18 { pt3dadd( -73.6281, -18.3939, -123.214, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -26.5984, 43.4535, -21.4804, 0.55 ) }
    dend_17 { pt3dadd( -27.8679, 47.1367, -22.1675, 0.55 ) }
    dend_17 { pt3dadd( -28.8232, 49.9162, -22.7614, 0.55 ) }
    dend_17 { pt3dadd( -29.838, 52.8242, -23.5657, 0.28 ) }
    dend_17 { pt3dadd( -30.5114, 54.7426, -24.1466, 1.38 ) }
    dend_17 { pt3dadd( -31.5423, 57.5316, -25.1024, 0.55 ) }
    dend_17 { pt3dadd( -32.7174, 60.6408, -26.2115, 0.55 ) }
    dend_17 { pt3dadd( -33.236, 61.9668, -26.6604, 0.83 ) }
    dend_17 { pt3dadd( -34.17, 64.3228, -27.5425, 0.28 ) }
    dend_17 { pt3dadd( -34.66, 65.6653, -28.0804, 0.55 ) }
    dend_17 { pt3dadd( -35.444, 68.0301, -28.9813, 0.28 ) }
    dend_17 { pt3dadd( -35.9699, 69.7534, -29.5278, 0.83 ) }
    dend_17 { pt3dadd( -36.8921, 73.316, -30.3346, 0.28 ) }
    dend_17 { pt3dadd( -37.3304, 75.2264, -30.7885, 0.55 ) }
    dend_17 { pt3dadd( -37.7604, 77.5098, -31.3236, 0.28 ) }
    dend_17 { pt3dadd( -38.041, 79.4275, -31.8917, 0.83 ) }
    dend_17 { pt3dadd( -38.3666, 82.991, -33.0827, 0.28 ) }
    dend_17 { pt3dadd( -38.5802, 86.118, -34.3542, 0.83 ) }
    dend_17 { pt3dadd( -38.7423, 91.336, -36.7796, 0.28 ) }
    dend_17 { pt3dadd( -38.7237, 93.1319, -37.6966, 0.83 ) }
    dend_17 { pt3dadd( -38.6404, 97.993, -40.6317, 0.28 ) }
    dend_17 { pt3dadd( -38.5628, 100.222, -42.1444, 0.83 ) }
    dend_17 { pt3dadd( -38.4274, 102.943, -44.1373, 0.28 ) }
    dend_17 { pt3dadd( -38.3365, 105.079, -45.7933, 0.55 ) }
    dend_17 { pt3dadd( -38.243, 107.216, -47.4372, 0.83 ) }
    dend_17 { pt3dadd( -38.2013, 111.952, -51.024, 0.28 ) }
    dend_17 { pt3dadd( -38.265, 113.815, -52.3477, 0.83 ) }
    dend_17 { pt3dadd( -38.452, 116.345, -54.0764, 0.83 ) }
    dend_17 { pt3dadd( -38.7439, 118.887, -55.6863, 0.28 ) }
    dend_17 { pt3dadd( -39.1892, 120.853, -56.9174, 0.83 ) }
    dend_17 { pt3dadd( -39.7873, 122.842, -58.0361, 0.28 ) }
    dend_17 { pt3dadd( -40.2762, 124.277, -58.7092, 0.55 ) }
    dend_17 { pt3dadd( -40.7272, 125.324, -59.1813, 0.28 ) }
    dend_17 { pt3dadd( -41.8216, 127.5, -59.9937, 0.55 ) }
    dend_17 { pt3dadd( -43.9741, 131.589, -61.0881, 0.28 ) }
    dend_17 { pt3dadd( -44.8691, 133.053, -61.4091, 0.55 ) }
    dend_17 { pt3dadd( -45.9264, 134.642, -61.6753, 0.28 ) }
    dend_17 { pt3dadd( -47.1397, 136.355, -61.8832, 0.83 ) }
    dend_17 { pt3dadd( -48.7657, 138.565, -62.0026, 0.28 ) }
    dend_17 { pt3dadd( -50.3639, 140.732, -61.9741, 0.83 ) }
    dend_17 { pt3dadd( -52.7057, 143.977, -61.7053, 0.28 ) }
    dend_17 { pt3dadd( -53.6359, 145.263, -61.6461, 0.83 ) }
    dend_17 { pt3dadd( -54.701, 146.786, -61.6092, 0.28 ) }
    dend_17 { pt3dadd( -56.0612, 148.882, -61.6343, 0.28 ) }
    dend_17 { pt3dadd( -56.6598, 149.887, -61.7587, 0.55 ) }
    dend_17 { pt3dadd( -57.9713, 152.424, -62.337, 0.28 ) }
    dend_17 { pt3dadd( -59.0015, 154.62, -63.2417, 0.55 ) }
    dend_17 { pt3dadd( -59.5728, 155.871, -63.9259, 0.55 ) }
    dend_17 { pt3dadd( -60.3942, 157.726, -65.0945, 0.83 ) }
    dend_17 { pt3dadd( -62.007, 161.09, -67.591, 0.28 ) }
    dend_17 { pt3dadd( -63.2189, 163.517, -69.5799, 0.83 ) }
    dend_17 { pt3dadd( -65.0182, 166.846, -72.71, 0.28 ) }
    dend_17 { pt3dadd( -65.7303, 168.053, -73.9391, 0.28 ) }
    dend_17 { pt3dadd( -66.6996, 169.725, -75.7078, 0.83 ) }
    dend_17 { pt3dadd( -68.5208, 172.863, -79.1799, 0.28 ) }
    dend_17 { pt3dadd( -69.1857, 174.03, -80.4219, 0.83 ) }
    dend_17 { pt3dadd( -71.5002, 178.351, -84.8379, 0.28 ) }
    dend_17 { pt3dadd( -72.6187, 180.459, -86.9469, 1.11 ) }
    dend_17 { pt3dadd( -74.7935, 184.595, -91.1623, 0.28 ) }
    dend_17 { pt3dadd( -75.6535, 186.333, -92.9771, 0.55 ) }
    dend_17 { pt3dadd( -76.3551, 187.971, -94.562, 0.28 ) }
    dend_17 { pt3dadd( -76.8898, 189.322, -95.7714, 0.55 ) }
    dend_17 { pt3dadd( -78.0979, 192.909, -98.7429, 0.28 ) }
    dend_17 { pt3dadd( -78.6279, 194.329, -100.034, 0.55 ) }
    dend_17 { pt3dadd( -79.4937, 196.491, -102.073, 0.28 ) }
    dend_17 { pt3dadd( -80.06, 197.881, -103.521, 0.55 ) }
    dend_17 { pt3dadd( -80.7086, 199.533, -105.372, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -81.619, 201.967, -108.179, 0.55 ) }
    dend_17 { pt3dadd( -83.116, 206.486, -113.126, 0.28 ) }
    dend_17 { pt3dadd( -83.7309, 208.34, -115.251, 0.55 ) }
    dend_17 { pt3dadd( -84.5688, 210.979, -118.311, 0.28 ) }
    dend_17 { pt3dadd( -84.9973, 212.431, -120.1, 0.83 ) }
    dend_17 { pt3dadd( -85.4695, 214.402, -122.516, 0.28 ) }
    dend_17 { pt3dadd( -85.7711, 215.805, -124.3, 0.83 ) }
    dend_17 { pt3dadd( -86.2179, 218.225, -127.359, 0.28 ) }
    dend_17 { pt3dadd( -86.461, 219.3, -128.853, 0.55 ) }
    dend_17 { pt3dadd( -86.7897, 220.795, -131.032, 0.28 ) }
    dend_17 { pt3dadd( -87.0468, 222.035, -132.97, 0.55 ) }
    dend_17 { pt3dadd( -87.771, 225.671, -138.388, 0.28 ) }
    dend_17 { pt3dadd( -88.0345, 226.946, -140.181, 0.28 ) }
    dend_17 { pt3dadd( -88.7095, 229.849, -143.647, 0.55 ) }
    dend_17 { pt3dadd( -89.2845, 232.317, -146.248, 0.28 ) }
    dend_17 { pt3dadd( -89.623, 233.687, -147.466, 0.55 ) }
    dend_17 { pt3dadd( -90.6528, 237.414, -150.143, 0.28 ) }
    dend_17 { pt3dadd( -91.4048, 239.615, -151.214, 0.83 ) }
    dend_17 { pt3dadd( -92.7769, 242.849, -152.342, 0.28 ) }
    dend_17 { pt3dadd( -93.3432, 243.856, -152.552, 0.55 ) }
    dend_17 { pt3dadd( -94.4191, 245.368, -152.754, 0.28 ) }
    dend_17 { pt3dadd( -95.6089, 246.762, -152.935, 0.55 ) }
    dend_17 { pt3dadd( -98.4404, 249.568, -153.223, 0.28 ) }
    dend_17 { pt3dadd( -99.0977, 250.184, -153.25, 0.55 ) }
    dend_17 { pt3dadd( -103.291, 254.036, -153.52, 0.28 ) }
    dend_17 { pt3dadd( -104.325, 255.086, -153.636, 0.55 ) }
    dend_17 { pt3dadd( -105.682, 256.699, -153.833, 0.28 ) }
    dend_17 { pt3dadd( -107.01, 258.398, -154.069, 0.55 ) }
    dend_17 { pt3dadd( -109.034, 261.384, -154.526, 0.28 ) }
    dend_17 { pt3dadd( -110.206, 263.315, -154.797, 0.55 ) }
    dend_17 { pt3dadd( -112.23, 267.87, -155.089, 0.28 ) }
    dend_17 { pt3dadd( -112.916, 269.715, -155.236, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.37356, 75.9542, -15.2286, 0.55 ) }
    dend_15 { pt3dadd( -3.39167, 77.8519, -15.4531, 0.55 ) }
    dend_15 { pt3dadd( -0.237565, 80.9829, -17.288, 0.55 ) }
    dend_15 { pt3dadd( 1.09694, 82.3271, -18.4193, 0.83 ) }
    dend_15 { pt3dadd( 2.20508, 83.4409, -19.4591, 0.83 ) }
    dend_15 { pt3dadd( 5.31527, 86.6045, -22.579, 0.28 ) }
    dend_15 { pt3dadd( 6.46128, 87.7912, -23.7297, 0.83 ) }
    dend_15 { pt3dadd( 10.6236, 92.2453, -29.1793, 0.55 ) }
    dend_15 { pt3dadd( 11.5006, 93.243, -30.6573, 0.28 ) }
    dend_15 { pt3dadd( 11.8895, 93.708, -31.436, 0.28 ) }
    dend_15 { pt3dadd( 12.479, 94.4755, -32.8475, 0.55 ) }
    dend_15 { pt3dadd( 13.0934, 95.3847, -34.5365, 0.55 ) }
    dend_15 { pt3dadd( 14.9826, 98.5414, -40.1149, 0.28 ) }
    dend_15 { pt3dadd( 15.7981, 100.034, -42.5096, 0.83 ) }
    dend_15 { pt3dadd( 17.5324, 103.302, -47.4833, 0.83 ) }
    dend_15 { pt3dadd( 19.0443, 106.184, -51.7033, 0.83 ) }
    dend_15 { pt3dadd( 21.0035, 109.879, -56.9667, 0.28 ) }
    dend_15 { pt3dadd( 21.6938, 111.17, -58.724, 0.28 ) }
    dend_15 { pt3dadd( 22.0788, 111.882, -59.5575, 0.55 ) }
    dend_15 { pt3dadd( 23.9219, 115.065, -62.7953, 0.28 ) }
    dend_15 { pt3dadd( 24.217, 115.543, -63.2094, 0.55 ) }
    dend_15 { pt3dadd( 26.4008, 118.672, -65.6801, 0.28 ) }
    dend_15 { pt3dadd( 27.3264, 119.755, -66.7572, 0.55 ) }
    dend_15 { pt3dadd( 28.2875, 120.734, -67.8948, 0.28 ) }
    dend_15 { pt3dadd( 28.6751, 121.102, -68.3521, 0.55 ) }
    dend_15 { pt3dadd( 31.5046, 123.502, -71.5388, 0.28 ) }
    dend_15 { pt3dadd( 32.3895, 124.201, -72.4683, 0.55 ) }
    dend_15 { pt3dadd( 37.2906, 127.688, -77.3151, 0.28 ) }
    dend_15 { pt3dadd( 38.7042, 128.676, -78.6658, 0.28 ) }
    dend_15 { pt3dadd( 40.169, 129.701, -79.9874, 0.55 ) }
    dend_15 { pt3dadd( 43.2908, 131.878, -82.8249, 0.28 ) }
    dend_15 { pt3dadd( 44.2765, 132.56, -83.663, 0.55 ) }
    dend_15 { pt3dadd( 48.3055, 135.308, -86.9946, 0.28 ) }
    dend_15 { pt3dadd( 50.3287, 136.655, -88.5622, 0.28 ) }
    dend_15 { pt3dadd( 52.1286, 137.839, -89.9837, 0.83 ) }
    dend_15 { pt3dadd( 58.4874, 141.863, -94.7574, 0.28 ) }
    dend_15 { pt3dadd( 60.1565, 142.885, -95.9372, 0.28 ) }
    dend_15 { pt3dadd( 62.4781, 144.27, -97.4607, 0.55 ) }
    dend_15 { pt3dadd( 64.4698, 145.444, -98.6218, 0.28 ) }
    dend_15 { pt3dadd( 65.9104, 146.217, -99.4648, 0.55 ) }
    dend_15 { pt3dadd( 67.3004, 146.939, -100.196, 0.28 ) }
    dend_15 { pt3dadd( 68.0977, 147.373, -100.392, 0.55 ) }
    dend_15 { pt3dadd( 69.9722, 148.466, -100.864, 0.28 ) }
    dend_15 { pt3dadd( 72.5139, 150.239, -101.192, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.37356, 75.9542, -15.2286, 0.55 ) }
    dend_14 { pt3dadd( -6.59178, 79.9537, -13.9878, 0.55 ) }
    dend_14 { pt3dadd( -7.23853, 82.6314, -12.9729, 0.55 ) }
    dend_14 { pt3dadd( -7.51017, 83.7685, -12.5324, 0.55 ) }
    dend_14 { pt3dadd( -7.92383, 85.5869, -11.839, 0.55 ) }
    dend_14 { pt3dadd( -8.25993, 87.123, -11.3229, 0.55 ) }
    dend_14 { pt3dadd( -9.04507, 90.8169, -10.0856, 0.28 ) }
    dend_14 { pt3dadd( -9.30487, 92.1194, -9.63435, 0.55 ) }
    dend_14 { pt3dadd( -9.61473, 93.943, -8.85951, 0.55 ) }
    dend_14 { pt3dadd( -9.80175, 94.82, -8.42495, 0.83 ) }
    dend_14 { pt3dadd( -10.3453, 96.7972, -7.36249, 0.28 ) }
    dend_14 { pt3dadd( -10.8313, 98.4583, -6.48263, 0.83 ) }
    dend_14 { pt3dadd( -11.798, 101.478, -4.88629, 0.28 ) }
    dend_14 { pt3dadd( -11.9116, 101.824, -4.66062, 0.83 ) }
    dend_14 { pt3dadd( -12.6916, 104.461, -2.67531, 0.55 ) }
    dend_14 { pt3dadd( -13.0249, 105.657, -1.67592, 0.55 ) }
    dend_14 { pt3dadd( -13.4753, 107.416, -0.146249, 0.83 ) }
    dend_14 { pt3dadd( -14.2301, 110.62, 2.71001, 0.55 ) }
    dend_14 { pt3dadd( -14.7504, 113.081, 4.93506, 0.83 ) }
    dend_14 { pt3dadd( -14.986, 114.329, 6.09402, 0.28 ) }
    dend_14 { pt3dadd( -15.1461, 115.431, 7.05984, 0.83 ) }
    dend_14 { pt3dadd( -15.3904, 117.07, 8.4802, 0.83 ) }
    dend_14 { pt3dadd( -15.8981, 119.948, 10.8612, 0.83 ) }
    dend_14 { pt3dadd( -16.3352, 122.372, 12.4712, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -16.5127, 123.202, 12.9602, 0.83 ) }
    dend_14 { pt3dadd( -17.1104, 125.706, 14.4716, 0.83 ) }
    dend_14 { pt3dadd( -17.6676, 127.898, 15.8177, 0.28 ) }
    dend_14 { pt3dadd( -17.968, 129.038, 16.5569, 0.55 ) }
    dend_14 { pt3dadd( -18.5843, 131.303, 17.9295, 0.28 ) }
    dend_14 { pt3dadd( -19.3522, 133.634, 19.41, 0.55 ) }
    dend_14 { pt3dadd( -20.467, 136.672, 21.4772, 0.28 ) }
    dend_14 { pt3dadd( -20.7464, 137.351, 21.9796, 0.83 ) }
    dend_14 { pt3dadd( -21.3139, 138.726, 22.9744, 0.28 ) }
    dend_14 { pt3dadd( -22.0083, 140.371, 24.2288, 0.55 ) }
    dend_14 { pt3dadd( -22.9975, 142.763, 26.2782, 0.28 ) }
    dend_14 { pt3dadd( -23.1694, 143.225, 26.6529, 0.55 ) }
    dend_14 { pt3dadd( -23.5289, 144.221, 27.5038, 0.28 ) }
    dend_14 { pt3dadd( -23.8716, 145.26, 28.5142, 0.83 ) }
    dend_14 { pt3dadd( -24.2233, 146.629, 29.932, 0.28 ) }
    dend_14 { pt3dadd( -24.5523, 148.327, 31.8163, 0.55 ) }
    dend_14 { pt3dadd( -24.7604, 149.476, 33.2481, 0.28 ) }
    dend_14 { pt3dadd( -24.8872, 150.192, 34.1005, 0.83 ) }
    dend_14 { pt3dadd( -25.1049, 151.717, 35.8196, 0.83 ) }
    dend_14 { pt3dadd( -25.2933, 153.265, 37.4358, 0.55 ) }
    dend_14 { pt3dadd( -25.3559, 154.118, 38.2314, 0.83 ) }
    dend_14 { pt3dadd( -25.6234, 158.928, 42.2552, 0.55 ) }
    dend_14 { pt3dadd( -25.6933, 160.755, 43.5917, 0.83 ) }
    dend_14 { pt3dadd( -25.7644, 166.809, 47.3004, 0.28 ) }
    dend_14 { pt3dadd( -25.7526, 168.113, 47.8138, 0.55 ) }
    dend_14 { pt3dadd( -25.6325, 170.729, 48.3734, 0.28 ) }
    dend_14 { pt3dadd( -25.5126, 172.305, 48.5414, 0.83 ) }
    dend_14 { pt3dadd( -25.1563, 175.566, 48.3138, 0.28 ) }
    dend_14 { pt3dadd( -24.9424, 177.539, 47.9622, 0.55 ) }
    dend_14 { pt3dadd( -24.2753, 183.074, 45.7645, 0.28 ) }
    dend_14 { pt3dadd( -24.0162, 185.507, 44.6886, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.4204, 280.186, 19.612, 0.55 ) }
    dend_10 { pt3dadd( -10.4135, 282.836, 19.5977, 0.55 ) }
    dend_10 { pt3dadd( -10.542, 285.989, 19.6109, 0.55 ) }
    dend_10 { pt3dadd( -10.6927, 289.016, 19.6348, 0.83 ) }
    dend_10 { pt3dadd( -10.8067, 291.109, 19.674, 0.55 ) }
    dend_10 { pt3dadd( -10.9356, 293.707, 19.7543, 1.11 ) }
    dend_10 { pt3dadd( -11.0698, 297.695, 19.8942, 0.55 ) }
    dend_10 { pt3dadd( -11.113, 300.521, 20.0102, 1.11 ) }
    dend_10 { pt3dadd( -11.1025, 302.663, 20.034, 0.83 ) }
    dend_10 { pt3dadd( -10.9697, 304.688, 19.9803, 0.55 ) }
    dend_10 { pt3dadd( -10.5567, 307.354, 19.7947, 0.55 ) }
    dend_10 { pt3dadd( -9.96315, 309.665, 19.4949, 0.83 ) }
    dend_10 { pt3dadd( -9.03468, 312.094, 18.9212, 0.55 ) }
    dend_10 { pt3dadd( -7.87051, 314.503, 18.0988, 0.83 ) }
    dend_10 { pt3dadd( -6.82388, 316.335, 17.3243, 0.83 ) }
    dend_10 { pt3dadd( -5.83458, 317.846, 16.5636, 0.83 ) }
    dend_10 { pt3dadd( -4.96138, 319.054, 15.9042, 1.11 ) }
    dend_10 { pt3dadd( -3.10829, 321.585, 14.4182, 0.83 ) }
    dend_10 { pt3dadd( -2.31844, 322.682, 13.779, 0.55 ) }
    dend_10 { pt3dadd( -1.03733, 324.445, 12.8168, 0.83 ) }
    dend_10 { pt3dadd( 0.809332, 327.168, 11.4175, 0.55 ) }
    dend_10 { pt3dadd( 1.98537, 328.868, 10.5463, 1.11 ) }
    dend_10 { pt3dadd( 3.77695, 331.449, 9.28541, 0.55 ) }
    dend_10 { pt3dadd( 4.40864, 332.363, 8.89143, 0.55 ) }
    dend_10 { pt3dadd( 5.26634, 333.647, 8.36597, 0.55 ) }
    dend_10 { pt3dadd( 7.18078, 336.737, 7.28272, 0.55 ) }
    dend_10 { pt3dadd( 7.92095, 338.024, 6.93745, 0.28 ) }
    dend_10 { pt3dadd( 8.37476, 338.904, 6.76545, 0.55 ) }
    dend_10 { pt3dadd( 9.1823, 340.597, 6.56632, 0.28 ) }
    dend_10 { pt3dadd( 9.81598, 342.093, 6.41196, 0.83 ) }
    dend_10 { pt3dadd( 10.8853, 344.914, 6.16238, 0.55 ) }
    dend_10 { pt3dadd( 11.2326, 345.859, 6.10376, 0.83 ) }
    dend_10 { pt3dadd( 11.9252, 347.891, 5.96853, 0.55 ) }
    dend_10 { pt3dadd( 12.3597, 349.208, 5.85688, 0.83 ) }
    dend_10 { pt3dadd( 13.6476, 353.215, 5.46351, 0.28 ) }
    dend_10 { pt3dadd( 14.4881, 355.868, 5.1492, 0.83 ) }
    dend_10 { pt3dadd( 15.3495, 358.611, 4.78276, 0.28 ) }
    dend_10 { pt3dadd( 16.0886, 361.029, 4.4435, 0.55 ) }
    dend_10 { pt3dadd( 16.8306, 363.582, 4.08136, 0.55 ) }
    dend_10 { pt3dadd( 17.3975, 365.896, 3.72329, 0.55 ) }
    dend_10 { pt3dadd( 17.6383, 367.179, 3.51495, 0.28 ) }
    dend_10 { pt3dadd( 17.8134, 368.418, 3.3145, 0.55 ) }
    dend_10 { pt3dadd( 18.0259, 370.812, 2.9669, 0.28 ) }
    dend_10 { pt3dadd( 18.0726, 372.223, 2.71786, 0.55 ) }
    dend_10 { pt3dadd( 18.0301, 374.792, 2.18011, 0.28 ) }
    dend_10 { pt3dadd( 17.9577, 376.54, 1.78997, 0.28 ) }
    dend_10 { pt3dadd( 17.8275, 378.982, 1.22596, 0.83 ) }
    dend_10 { pt3dadd( 17.6757, 381.17, 0.696399, 0.83 ) }
    dend_10 { pt3dadd( 17.3834, 385.348, -0.312978, 0.55 ) }
    dend_10 { pt3dadd( 17.2708, 387.694, -0.850126, 0.55 ) }
    dend_10 { pt3dadd( 17.2746, 389.215, -1.15466, 0.55 ) }
    dend_10 { pt3dadd( 17.3162, 390.084, -1.35205, 0.28 ) }
    dend_10 { pt3dadd( 17.4222, 391.309, -1.6394, 0.55 ) }
    dend_10 { pt3dadd( 17.5725, 392.352, -1.85887, 0.28 ) }
    dend_10 { pt3dadd( 17.7089, 393.33, -2.07237, 1.11 ) }
    dend_10 { pt3dadd( 17.9259, 396.283, -2.92841, 0.55 ) }
    dend_10 { pt3dadd( 17.9291, 398.432, -3.59951, 0.55 ) }
    dend_10 { pt3dadd( 17.8092, 400.317, -4.26098, 0.28 ) }
    dend_10 { pt3dadd( 17.6644, 401.383, -4.69732, 0.83 ) }
    dend_10 { pt3dadd( 17.1117, 404.45, -6.13988, 0.55 ) }
    dend_10 { pt3dadd( 16.715, 406.436, -7.14253, 0.83 ) }
    dend_10 { pt3dadd( 16.2259, 408.625, -8.34439, 0.83 ) }
    dend_10 { pt3dadd( 15.7646, 410.846, -9.67042, 0.55 ) }
    dend_10 { pt3dadd( 15.44, 412.6, -10.8072, 0.28 ) }
    dend_10 { pt3dadd( 15.1703, 414.313, -11.944, 0.55 ) }
    dend_10 { pt3dadd( 14.9532, 415.889, -12.9887, 0.55 ) }
    dend_10 { pt3dadd( 14.6743, 417.958, -14.426, 1.11 ) }
    dend_10 { pt3dadd( 14.3391, 420.684, -16.2822, 0.55 ) }
    dend_10 { pt3dadd( 14.2064, 421.864, -17.0311, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 14.033, 423.139, -17.8484, 0.55 ) }
    dend_10 { pt3dadd( 13.4812, 426.145, -19.773, 0.55 ) }
    dend_10 { pt3dadd( 13.1868, 427.663, -20.7717, 0.83 ) }
    dend_10 { pt3dadd( 12.5838, 430.876, -22.7437, 0.28 ) }
    dend_10 { pt3dadd( 12.3996, 431.837, -23.2983, 0.55 ) }
    dend_10 { pt3dadd( 11.9256, 434.582, -24.7992, 0.28 ) }
    dend_10 { pt3dadd( 11.7336, 435.924, -25.4991, 0.55 ) }
    dend_10 { pt3dadd( 11.5215, 438.033, -26.4899, 0.28 ) }
    dend_10 { pt3dadd( 11.2994, 440.138, -27.3589, 0.55 ) }
    dend_10 { pt3dadd( 11.1965, 441.23, -27.7564, 0.28 ) }
    dend_10 { pt3dadd( 11.0651, 443.024, -28.326, 0.55 ) }
    dend_10 { pt3dadd( 10.9955, 446.011, -29.0585, 0.55 ) }
    dend_10 { pt3dadd( 10.9765, 447.557, -29.4616, 0.28 ) }
    dend_10 { pt3dadd( 10.8867, 448.916, -29.8163, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.4204, 280.186, 19.612, 0.55 ) }
    dend_7 { pt3dadd( -11.8015, 281.366, 19.509, 0.55 ) }
    dend_7 { pt3dadd( -13.4132, 282.838, 19.4718, 1.11 ) }
    dend_7 { pt3dadd( -15.1809, 284.369, 19.5199, 0.55 ) }
    dend_7 { pt3dadd( -15.7649, 284.877, 19.5066, 0.83 ) }
    dend_7 { pt3dadd( -17.1614, 286.119, 19.4514, 0.55 ) }
    dend_7 { pt3dadd( -18.318, 287.105, 19.4111, 0.55 ) }
    dend_7 { pt3dadd( -19.2185, 287.857, 19.3784, 0.83 ) }
    dend_7 { pt3dadd( -21.8883, 290.029, 19.2851, 0.55 ) }
    dend_7 { pt3dadd( -23.8617, 291.602, 19.2908, 0.55 ) }
    dend_7 { pt3dadd( -24.5617, 292.154, 19.2728, 0.83 ) }
    dend_7 { pt3dadd( -26.4812, 293.632, 19.2039, 0.55 ) }
    dend_7 { pt3dadd( -26.7924, 293.867, 19.187, 0.83 ) }
    dend_7 { pt3dadd( -27.8088, 294.666, 19.1658, 0.28 ) }
    dend_7 { pt3dadd( -27.9686, 294.806, 19.1809, 0.55 ) }
    dend_7 { pt3dadd( -28.9076, 295.646, 19.4275, 0.28 ) }
    dend_7 { pt3dadd( -29.4836, 296.205, 19.6191, 0.55 ) }
    dend_7 { pt3dadd( -30.144, 296.818, 19.824, 0.55 ) }
    dend_7 { pt3dadd( -31.9518, 298.399, 20.3424, 0.55 ) }
    dend_7 { pt3dadd( -33.1927, 299.481, 20.6709, 0.55 ) }
    dend_7 { pt3dadd( -34.1719, 300.357, 20.8438, 0.83 ) }
    dend_7 { pt3dadd( -35.5206, 301.601, 21.007, 0.83 ) }
    dend_7 { pt3dadd( -37.2797, 303.311, 20.9935, 0.55 ) }
    dend_7 { pt3dadd( -38.5765, 304.617, 20.8544, 0.55 ) }
    dend_7 { pt3dadd( -39.9835, 306.094, 20.5714, 1.11 ) }
    dend_7 { pt3dadd( -41.5294, 307.928, 20.1453, 0.55 ) }
    dend_7 { pt3dadd( -41.939, 308.466, 20.0021, 0.83 ) }
    dend_7 { pt3dadd( -43.1712, 310.319, 19.5551, 0.28 ) }
    dend_7 { pt3dadd( -43.7899, 311.338, 19.1423, 0.55 ) }
    dend_7 { pt3dadd( -44.2073, 312.03, 18.7669, 0.28 ) }
    dend_7 { pt3dadd( -44.5977, 312.714, 18.3551, 0.83 ) }
    dend_7 { pt3dadd( -45.3746, 314.19, 17.412, 0.28 ) }
    dend_7 { pt3dadd( -46.0505, 315.535, 16.5175, 0.83 ) }
    dend_7 { pt3dadd( -48.4726, 320.787, 12.986, 0.55 ) }
    dend_7 { pt3dadd( -48.9126, 321.803, 12.2892, 0.55 ) }
    dend_7 { pt3dadd( -49.2831, 322.729, 11.6572, 0.83 ) }
    dend_7 { pt3dadd( -49.7194, 323.913, 10.8915, 0.28 ) }
    dend_7 { pt3dadd( -49.8941, 324.494, 10.57, 0.55 ) }
    dend_7 { pt3dadd( -50.1175, 325.363, 10.2, 0.28 ) }
    dend_7 { pt3dadd( -50.32, 326.539, 10.0183, 0.55 ) }
    dend_7 { pt3dadd( -50.6451, 328.195, 9.74492, 0.55 ) }
    dend_7 { pt3dadd( -50.8405, 329.14, 9.59449, 0.55 ) }
    dend_7 { pt3dadd( -51.0527, 330.194, 9.44472, 0.83 ) }
    dend_7 { pt3dadd( -51.3722, 331.88, 9.19566, 0.28 ) }
    dend_7 { pt3dadd( -51.6301, 333.296, 9.00021, 0.83 ) }
    dend_7 { pt3dadd( -51.8811, 335.046, 8.78328, 0.55 ) }
    dend_7 { pt3dadd( -51.9725, 335.744, 8.71636, 0.55 ) }
    dend_7 { pt3dadd( -52.1059, 337.071, 8.63786, 0.83 ) }
    dend_7 { pt3dadd( -52.1731, 337.767, 8.63393, 0.55 ) }
    dend_7 { pt3dadd( -52.2724, 339.073, 8.74228, 0.83 ) }
    dend_7 { pt3dadd( -52.4362, 340.268, 8.88345, 0.28 ) }
    dend_7 { pt3dadd( -52.5448, 340.761, 8.90954, 0.28 ) }
    dend_7 { pt3dadd( -52.9558, 342.084, 8.88905, 0.28 ) }
    dend_7 { pt3dadd( -53.1632, 342.654, 8.83456, 0.83 ) }
    dend_7 { pt3dadd( -53.7255, 343.986, 8.57637, 0.55 ) }
    dend_7 { pt3dadd( -54.4653, 345.463, 8.00682, 0.83 ) }
    dend_7 { pt3dadd( -55.6558, 347.47, 6.97456, 0.28 ) }
    dend_7 { pt3dadd( -56.0939, 348.09, 6.5553, 0.55 ) }
    dend_7 { pt3dadd( -56.6311, 348.699, 6.01557, 0.28 ) }
    dend_7 { pt3dadd( -57.0737, 349.129, 5.61237, 0.83 ) }
    dend_7 { pt3dadd( -58.7897, 350.7, 4.11425, 0.83 ) }
    dend_7 { pt3dadd( -59.3548, 351.203, 3.65176, 0.83 ) }
    dend_7 { pt3dadd( -61.1247, 352.752, 2.36364, 0.83 ) }
    dend_7 { pt3dadd( -63.1791, 354.533, 0.960572, 0.55 ) }
    dend_7 { pt3dadd( -64.4251, 355.582, 0.151265, 0.55 ) }
    dend_7 { pt3dadd( -65.5386, 356.531, -0.542679, 0.55 ) }
    dend_7 { pt3dadd( -66.7381, 357.576, -1.23994, 0.55 ) }
    dend_7 { pt3dadd( -68.4574, 359.215, -2.25667, 0.55 ) }
    dend_7 { pt3dadd( -69.7769, 360.578, -2.95368, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 30.1736, -39.6057, -66.3636, 0.55 ) }
    dend_45 { pt3dadd( 30.7962, -38.9978, -67.6468, 0.55 ) }
    dend_45 { pt3dadd( 31.4173, -38.3221, -68.9521, 0.83 ) }
    dend_45 { pt3dadd( 32.6774, -36.8903, -71.611, 0.28 ) }
    dend_45 { pt3dadd( 33.3214, -36.1347, -72.9353, 0.83 ) }
    dend_45 { pt3dadd( 34.9037, -34.2722, -76.0456, 0.28 ) }
    dend_45 { pt3dadd( 35.4557, -33.627, -77.0766, 0.55 ) }
    dend_45 { pt3dadd( 36.6578, -32.1158, -79.4504, 0.55 ) }
    dend_45 { pt3dadd( 37.9275, -30.4342, -81.8344, 0.55 ) }
    dend_45 { pt3dadd( 39.0349, -28.9776, -83.778, 0.28 ) }
    dend_45 { pt3dadd( 39.4964, -28.3733, -84.5447, 0.28 ) }
    dend_45 { pt3dadd( 39.9695, -27.7617, -85.2881, 0.55 ) }
    dend_45 { pt3dadd( 41.0081, -26.4916, -86.8284, 0.28 ) }
    dend_45 { pt3dadd( 42.4826, -24.7791, -88.7194, 0.55 ) }
    dend_45 { pt3dadd( 44.1783, -22.6616, -91.0628, 0.28 ) }
    dend_45 { pt3dadd( 44.6138, -22.1144, -91.6879, 0.55 ) }
    dend_45 { pt3dadd( 46.3565, -19.7813, -94.271, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 47.4736, -18.2221, -95.9777, 0.28 ) }
    dend_45 { pt3dadd( 48.7276, -16.4131, -98.0, 0.83 ) }
    dend_45 { pt3dadd( 50.6191, -13.4525, -101.361, 0.55 ) }
    dend_45 { pt3dadd( 51.0676, -12.7286, -102.199, 0.55 ) }
    dend_45 { pt3dadd( 51.937, -11.2871, -104.018, 0.55 ) }
    dend_45 { pt3dadd( 52.8016, -9.89887, -105.928, 0.83 ) }
    dend_45 { pt3dadd( 54.0925, -7.95586, -108.773, 0.28 ) }
    dend_45 { pt3dadd( 54.5109, -7.41321, -109.593, 0.55 ) }
    dend_45 { pt3dadd( 55.7429, -6.12378, -111.423, 0.28 ) }
    dend_45 { pt3dadd( 55.9758, -5.90277, -111.745, 0.55 ) }
    dend_45 { pt3dadd( 57.1248, -5.02054, -113.108, 0.55 ) }
    dend_45 { pt3dadd( 58.9205, -3.80084, -114.86, 0.28 ) }
    dend_45 { pt3dadd( 59.6029, -3.36541, -115.425, 0.55 ) }
    dend_45 { pt3dadd( 61.2793, -2.37306, -116.729, 0.28 ) }
    dend_45 { pt3dadd( 61.9785, -1.97921, -117.225, 0.55 ) }
    dend_45 { pt3dadd( 63.491, -1.22487, -118.273, 0.28 ) }
    dend_45 { pt3dadd( 64.4487, -0.861771, -118.942, 0.55 ) }
    dend_45 { pt3dadd( 64.9853, -0.710253, -119.288, 0.55 ) }
    dend_45 { pt3dadd( 66.5095, -0.261941, -120.177, 0.28 ) }
    dend_45 { pt3dadd( 67.5419, 0.0652603, -120.703, 0.28 ) }
    dend_45 { pt3dadd( 68.559, 0.46682, -121.225, 0.55 ) }
    dend_45 { pt3dadd( 71.0326, 1.63628, -122.47, 0.28 ) }
    dend_45 { pt3dadd( 72.7585, 2.6356, -123.326, 0.55 ) }
    dend_45 { pt3dadd( 74.3823, 3.74004, -124.077, 0.55 ) }
    dend_45 { pt3dadd( 75.8784, 4.94825, -124.714, 0.83 ) }
    dend_45 { pt3dadd( 78.0982, 7.01625, -125.557, 0.28 ) }
    dend_45 { pt3dadd( 78.9138, 7.90236, -125.834, 0.28 ) }
    dend_45 { pt3dadd( 80.3324, 9.72901, -126.217, 0.55 ) }
    dend_45 { pt3dadd( 81.7233, 11.7273, -126.518, 0.28 ) }
    dend_45 { pt3dadd( 82.3258, 12.644, -126.613, 0.55 ) }
    dend_45 { pt3dadd( 83.2703, 14.1424, -126.671, 0.55 ) }
    dend_45 { pt3dadd( 84.6597, 16.3818, -126.622, 0.28 ) }
    dend_45 { pt3dadd( 85.4901, 17.747, -126.582, 0.55 ) }
    dend_45 { pt3dadd( 86.7366, 19.8747, -126.51, 0.28 ) }
    dend_45 { pt3dadd( 88.1002, 22.3014, -126.456, 0.55 ) }
    dend_45 { pt3dadd( 89.4803, 24.8188, -126.42, 0.55 ) }
    dend_45 { pt3dadd( 90.0769, 25.9542, -126.408, 0.55 ) }
    dend_45 { pt3dadd( 91.212, 28.2521, -126.434, 0.55 ) }
    dend_45 { pt3dadd( 92.2351, 30.3849, -126.545, 0.55 ) }
    dend_45 { pt3dadd( 93.2257, 32.5916, -126.718, 0.55 ) }
    dend_45 { pt3dadd( 94.1398, 34.6966, -126.906, 0.28 ) }
    dend_45 { pt3dadd( 94.6107, 35.801, -127.051, 0.55 ) }
    dend_45 { pt3dadd( 96.0874, 39.2774, -127.554, 0.28 ) }
    dend_45 { pt3dadd( 97.0172, 41.6169, -127.963, 0.28 ) }
    dend_45 { pt3dadd( 97.452, 42.7987, -128.191, 0.55 ) }
    dend_45 { pt3dadd( 98.2151, 44.8912, -128.627, 0.28 ) }
    dend_45 { pt3dadd( 98.8908, 46.7778, -129.034, 0.55 ) }
    dend_45 { pt3dadd( 99.4001, 48.2242, -129.335, 0.55 ) }
    dend_45 { pt3dadd( 100.761, 52.3157, -130.118, 0.28 ) }
    dend_45 { pt3dadd( 101.542, 54.8677, -130.574, 0.28 ) }
    dend_45 { pt3dadd( 101.842, 55.9115, -130.745, 0.55 ) }
    dend_45 { pt3dadd( 102.415, 58.0246, -131.055, 0.55 ) }
    dend_45 { pt3dadd( 103.193, 60.8916, -131.37, 0.28 ) }
    dend_45 { pt3dadd( 103.792, 63.1121, -131.574, 0.55 ) }
    dend_45 { pt3dadd( 104.349, 65.1637, -131.689, 0.28 ) }
    dend_45 { pt3dadd( 104.77, 66.9373, -131.757, 0.55 ) }
    dend_45 { pt3dadd( 105.015, 68.0067, -131.771, 0.28 ) }
    dend_45 { pt3dadd( 105.2, 68.7318, -131.718, 0.55 ) }
    dend_45 { pt3dadd( 105.768, 70.8329, -131.407, 0.28 ) }
    dend_45 { pt3dadd( 106.086, 71.8579, -131.187, 0.55 ) }
    dend_45 { pt3dadd( 107.25, 75.2345, -130.336, 0.28 ) }
    dend_45 { pt3dadd( 108.11, 77.5459, -129.715, 0.55 ) }
    dend_45 { pt3dadd( 109.301, 80.5987, -128.831, 0.28 ) }
    dend_45 { pt3dadd( 109.975, 82.2378, -128.342, 0.55 ) }
    dend_45 { pt3dadd( 110.789, 84.1035, -127.757, 0.28 ) }
    dend_45 { pt3dadd( 111.544, 85.7659, -127.205, 0.55 ) }
    dend_45 { pt3dadd( 112.274, 87.3273, -126.678, 0.28 ) }
    dend_45 { pt3dadd( 112.818, 88.5358, -126.278, 0.55 ) }
    dend_45 { pt3dadd( 114.086, 91.5571, -125.344, 0.28 ) }
    dend_45 { pt3dadd( 114.736, 93.0966, -124.828, 0.55 ) }
    dend_45 { pt3dadd( 115.63, 95.3123, -124.038, 0.28 ) }
    dend_45 { pt3dadd( 115.96, 96.1366, -123.714, 0.55 ) }
    dend_45 { pt3dadd( 116.753, 98.2385, -122.845, 0.28 ) }
    dend_45 { pt3dadd( 117.531, 100.464, -121.92, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 30.1736, -39.6057, -66.3636, 0.28 ) }
    dend_44 { pt3dadd( 32.8451, -40.4781, -68.0507, 0.28 ) }
    dend_44 { pt3dadd( 33.6348, -40.7278, -68.6045, 0.55 ) }
    dend_44 { pt3dadd( 34.7206, -40.9839, -69.4223, 0.55 ) }
    dend_44 { pt3dadd( 36.3907, -41.3206, -70.6794, 0.28 ) }
    dend_44 { pt3dadd( 37.3859, -41.5213, -71.4019, 0.55 ) }
    dend_44 { pt3dadd( 40.8947, -42.1775, -73.8161, 0.28 ) }
    dend_44 { pt3dadd( 41.8601, -42.2885, -74.4208, 0.55 ) }
    dend_44 { pt3dadd( 44.1887, -42.4403, -75.768, 0.28 ) }
    dend_44 { pt3dadd( 45.2005, -42.457, -76.2983, 0.28 ) }
    dend_44 { pt3dadd( 46.8865, -42.4301, -77.0598, 0.55 ) }
    dend_44 { pt3dadd( 48.4667, -42.4127, -77.676, 0.55 ) }
    dend_44 { pt3dadd( 52.3419, -42.4484, -78.8379, 0.28 ) }
    dend_44 { pt3dadd( 53.7796, -42.5424, -79.2502, 0.55 ) }
    dend_44 { pt3dadd( 55.3911, -42.7691, -79.7032, 0.55 ) }
    dend_44 { pt3dadd( 58.309, -43.3583, -80.5664, 0.28 ) }
    dend_44 { pt3dadd( 60.1914, -43.8907, -81.1505, 0.55 ) }
    dend_44 { pt3dadd( 62.4997, -44.8285, -81.8496, 0.28 ) }
    dend_44 { pt3dadd( 63.7031, -45.5014, -82.2028, 0.55 ) }
    dend_44 { pt3dadd( 65.8674, -46.9722, -82.8259, 0.28 ) }
    dend_44 { pt3dadd( 66.7614, -47.7298, -83.061, 0.55 ) }
    dend_44 { pt3dadd( 67.7123, -48.7153, -83.2702, 0.55 ) }
    dend_44 { pt3dadd( 68.9067, -50.2214, -83.3998, 0.28 ) }
    dend_44 { pt3dadd( 69.5598, -51.2103, -83.4089, 0.28 ) }
    dend_44 { pt3dadd( 70.2076, -52.4787, -83.3418, 0.55 ) }
    dend_44 { pt3dadd( 70.9334, -54.3731, -83.1606, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 71.0195, -54.6612, -83.1257, 0.55 ) }
    dend_44 { pt3dadd( 71.634, -57.3895, -82.8418, 0.28 ) }
    dend_44 { pt3dadd( 71.6805, -57.7023, -82.8382, 0.83 ) }
    dend_44 { pt3dadd( 72.1504, -61.9113, -83.0802, 0.28 ) }
    dend_44 { pt3dadd( 72.2206, -62.7007, -83.2702, 0.55 ) }
    dend_44 { pt3dadd( 72.3373, -64.625, -84.0053, 0.28 ) }
    dend_44 { pt3dadd( 72.3881, -65.8091, -84.5786, 0.55 ) }
    dend_44 { pt3dadd( 72.4785, -68.4703, -86.2353, 0.28 ) }
    dend_44 { pt3dadd( 72.4857, -68.8046, -86.4607, 0.55 ) }
    dend_44 { pt3dadd( 72.5451, -72.6618, -89.38, 0.28 ) }
    dend_44 { pt3dadd( 72.5417, -73.1908, -89.7678, 0.55 ) }
    dend_44 { pt3dadd( 72.5472, -73.5148, -90.0064, 0.55 ) }
    dend_44 { pt3dadd( 72.5928, -74.7237, -90.7496, 0.28 ) }
    dend_44 { pt3dadd( 72.6481, -75.7475, -91.2656, 0.55 ) }
    dend_44 { pt3dadd( 72.7951, -77.5407, -92.0122, 0.28 ) }
    dend_44 { pt3dadd( 72.8686, -78.2817, -92.284, 0.55 ) }
    dend_44 { pt3dadd( 73.4285, -82.7224, -94.0455, 0.28 ) }
    dend_44 { pt3dadd( 73.5606, -83.6298, -94.4172, 0.55 ) }
    dend_44 { pt3dadd( 73.7215, -84.6585, -94.897, 0.28 ) }
    dend_44 { pt3dadd( 74.2822, -87.961, -96.5571, 0.28 ) }
    dend_44 { pt3dadd( 74.4433, -89.0313, -97.0674, 0.55 ) }
    dend_44 { pt3dadd( 74.8615, -92.1192, -98.4403, 0.28 ) }
    dend_44 { pt3dadd( 74.8828, -92.3814, -98.5356, 0.55 ) }
    dend_44 { pt3dadd( 75.0226, -95.7926, -99.7048, 0.28 ) }
    dend_44 { pt3dadd( 75.0167, -97.4798, -100.137, 0.55 ) }
    dend_44 { pt3dadd( 74.9471, -99.6651, -100.473, 0.28 ) }
    dend_44 { pt3dadd( 74.9304, -100.593, -100.515, 0.55 ) }
    dend_44 { pt3dadd( 74.9228, -102.517, -100.456, 0.28 ) }
    dend_44 { pt3dadd( 74.9406, -103.368, -100.41, 0.55 ) }
    dend_44 { pt3dadd( 75.0921, -106.659, -100.417, 0.28 ) }
    dend_44 { pt3dadd( 75.2759, -109.341, -100.596, 0.28 ) }
    dend_44 { pt3dadd( 75.4012, -110.495, -100.774, 0.55 ) }
    dend_44 { pt3dadd( 75.7833, -113.301, -101.338, 0.28 ) }
    dend_44 { pt3dadd( 75.9343, -114.155, -101.538, 0.55 ) }
    dend_44 { pt3dadd( 77.0006, -119.778, -102.949, 0.28 ) }
    dend_44 { pt3dadd( 77.4618, -121.891, -103.56, 0.55 ) }
    dend_44 { pt3dadd( 78.2567, -124.997, -104.509, 0.28 ) }
    dend_44 { pt3dadd( 78.4239, -125.605, -104.701, 0.55 ) }
    dend_44 { pt3dadd( 79.3258, -128.494, -105.622, 0.28 ) }
    dend_44 { pt3dadd( 79.4678, -128.886, -105.738, 0.55 ) }
    dend_44 { pt3dadd( 80.2049, -130.215, -105.978, 0.28 ) }
    dend_44 { pt3dadd( 80.748, -131.039, -106.181, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 41.9659, -47.9682, 9.86064, 0.55 ) }
    dend_41 { pt3dadd( 42.9481, -47.7562, 10.7645, 0.55 ) }
    dend_41 { pt3dadd( 44.9201, -47.257, 12.5974, 0.55 ) }
    dend_41 { pt3dadd( 48.5204, -46.3241, 15.8786, 0.55 ) }
    dend_41 { pt3dadd( 51.284, -45.6221, 18.3571, 0.55 ) }
    dend_41 { pt3dadd( 53.7831, -45.045, 20.5694, 0.28 ) }
    dend_41 { pt3dadd( 55.1672, -44.7457, 21.771, 0.83 ) }
    dend_41 { pt3dadd( 56.8995, -44.4066, 23.3012, 0.55 ) }
    dend_41 { pt3dadd( 58.2041, -44.2233, 24.4202, 0.28 ) }
    dend_41 { pt3dadd( 58.8449, -44.1645, 24.8813, 0.55 ) }
    dend_41 { pt3dadd( 60.2047, -44.0647, 25.77, 0.28 ) }
    dend_41 { pt3dadd( 60.6602, -44.0443, 26.0657, 0.55 ) }
    dend_41 { pt3dadd( 62.6213, -44.1124, 27.1751, 0.28 ) }
    dend_41 { pt3dadd( 63.8708, -44.3338, 27.8031, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 41.9659, -47.9682, 9.86064, 0.28 ) }
    dend_40 { pt3dadd( 50.1222, -54.8273, -0.0959616, 0.28 ) }
    dend_40 { pt3dadd( 51.3116, -55.6375, -1.36774, 0.83 ) }
    dend_40 { pt3dadd( 55.5363, -58.1043, -5.54738, 0.28 ) }
    dend_40 { pt3dadd( 56.8078, -58.6225, -6.6872, 0.83 ) }
    dend_40 { pt3dadd( 59.8237, -59.5148, -9.26473, 0.28 ) }
    dend_40 { pt3dadd( 61.1171, -59.775, -10.3263, 0.83 ) }
    dend_40 { pt3dadd( 65.2276, -59.4339, -12.7539, 0.28 ) }
    dend_40 { pt3dadd( 66.1102, -59.1388, -13.3415, 0.83 ) }
    dend_40 { pt3dadd( 70.5079, -56.6656, -16.5495, 0.28 ) }
    dend_40 { pt3dadd( 71.5688, -56.0217, -17.3553, 0.28 ) }
    dend_40 { pt3dadd( 73.0643, -55.0573, -18.5275, 0.55 ) }
    dend_40 { pt3dadd( 76.0502, -53.1698, -20.1171, 0.28 ) }
    dend_40 { pt3dadd( 80.8542, -50.2023, -21.8578, 0.28 ) }
    dend_40 { pt3dadd( 82.1362, -49.4511, -22.0391, 0.83 ) }
    dend_40 { pt3dadd( 91.7036, -44.1541, -21.8953, 0.28 ) }
    dend_40 { pt3dadd( 93.3876, -43.3118, -21.695, 0.55 ) }
    dend_40 { pt3dadd( 105.947, -37.4397, -18.6645, 0.28 ) }
    dend_40 { pt3dadd( 107.322, -36.8183, -18.1917, 0.83 ) }
    dend_40 { pt3dadd( 115.783, -32.8448, -14.4217, 0.28 ) }
    dend_40 { pt3dadd( 116.928, -32.2407, -13.829, 0.55 ) }
    dend_40 { pt3dadd( 120.407, -30.1981, -11.7324, 0.28 ) }
    dend_40 { pt3dadd( 123.665, -28.2312, -9.80985, 0.55 ) }
    dend_40 { pt3dadd( 127.646, -25.7565, -7.86461, 0.28 ) }
    dend_40 { pt3dadd( 129.231, -24.7215, -7.17782, 0.55 ) }
    dend_40 { pt3dadd( 134.026, -21.0631, -5.84051, 0.28 ) }
    dend_40 { pt3dadd( 135.773, -19.5492, -5.34162, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 32.7361, -60.3441, -9.94712, 0.55 ) }
    dend_38 { pt3dadd( 35.4445, -61.0848, -10.6815, 0.55 ) }
    dend_38 { pt3dadd( 39.7799, -62.2979, -11.882, 0.55 ) }
    dend_38 { pt3dadd( 42.925, -63.2083, -12.7965, 0.28 ) }
    dend_38 { pt3dadd( 45.1645, -63.8527, -13.4329, 0.55 ) }
    dend_38 { pt3dadd( 48.6512, -64.8531, -14.3442, 0.55 ) }
    dend_38 { pt3dadd( 50.1333, -65.3413, -14.6974, 0.28 ) }
    dend_38 { pt3dadd( 51.1607, -65.6838, -14.9733, 0.55 ) }
    dend_38 { pt3dadd( 52.3021, -66.1652, -15.2851, 0.28 ) }
    dend_38 { pt3dadd( 53.9801, -67.0021, -15.7767, 0.55 ) }
    dend_38 { pt3dadd( 56.4155, -68.3768, -16.3965, 0.55 ) }
    dend_38 { pt3dadd( 59.8864, -70.4108, -17.2223, 0.55 ) }
    dend_38 { pt3dadd( 64.6018, -72.8305, -18.7968, 1.38 ) }
    dend_38 { pt3dadd( 67.6122, -74.2051, -19.9721, 0.83 ) }
    dend_38 { pt3dadd( 70.1841, -75.2294, -21.0457, 0.55 ) }
    dend_38 { pt3dadd( 73.4371, -76.3548, -22.4915, 0.28 ) }
    dend_38 { pt3dadd( 77.4414, -77.5311, -24.354, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 85.0706, -79.1182, -28.233, 0.28 ) }
    dend_38 { pt3dadd( 86.063, -79.3055, -28.7883, 0.28 ) }
    dend_38 { pt3dadd( 88.5762, -79.7501, -30.4157, 0.55 ) }
    dend_38 { pt3dadd( 90.2634, -80.024, -31.5808, 0.55 ) }
    dend_38 { pt3dadd( 91.7959, -80.2852, -32.7422, 0.55 ) }
    dend_38 { pt3dadd( 96.0077, -81.3071, -35.9321, 0.55 ) }
    dend_38 { pt3dadd( 100.054, -82.6203, -38.9786, 0.28 ) }
    dend_38 { pt3dadd( 102.524, -83.508, -40.9488, 0.83 ) }
    dend_38 { pt3dadd( 104.035, -84.0836, -42.2029, 0.83 ) }
    dend_38 { pt3dadd( 108.016, -85.626, -45.4712, 0.55 ) }
    dend_38 { pt3dadd( 109.619, -86.2873, -46.7266, 0.83 ) }
    dend_38 { pt3dadd( 111.79, -87.2961, -48.1578, 0.28 ) }
    dend_38 { pt3dadd( 113.326, -88.0097, -48.9748, 0.55 ) }
    dend_38 { pt3dadd( 114.242, -88.5196, -49.3913, 0.28 ) }
    dend_38 { pt3dadd( 114.679, -88.8137, -49.5636, 0.55 ) }
    dend_38 { pt3dadd( 116.736, -90.2626, -50.1381, 0.28 ) }
    dend_38 { pt3dadd( 119.03, -91.8442, -50.931, 0.28 ) }
    dend_38 { pt3dadd( 120.791, -93.0909, -51.5389, 0.83 ) }
    dend_38 { pt3dadd( 122.287, -94.258, -52.1382, 0.55 ) }
    dend_38 { pt3dadd( 126.025, -97.3691, -53.7488, 0.28 ) }
    dend_38 { pt3dadd( 127.133, -98.3404, -54.3209, 0.83 ) }
    dend_38 { pt3dadd( 130.656, -101.615, -56.3665, 0.28 ) }
    dend_38 { pt3dadd( 131.967, -103.008, -57.2554, 0.83 ) }
    dend_38 { pt3dadd( 134.184, -105.563, -58.7757, 0.28 ) }
    dend_38 { pt3dadd( 134.814, -106.291, -59.2224, 0.83 ) }
    dend_38 { pt3dadd( 137.394, -109.437, -61.1259, 0.28 ) }
    dend_38 { pt3dadd( 138.944, -111.383, -62.2699, 0.28 ) }
    dend_38 { pt3dadd( 140.301, -113.085, -63.103, 0.55 ) }
    dend_38 { pt3dadd( 141.91, -114.916, -64.0787, 0.55 ) }
    dend_38 { pt3dadd( 144.602, -117.703, -65.5522, 0.55 ) }
    dend_38 { pt3dadd( 146.051, -119.125, -66.2826, 0.28 ) }
    dend_38 { pt3dadd( 146.835, -119.851, -66.6656, 0.55 ) }
    dend_38 { pt3dadd( 149.479, -122.12, -68.099, 0.28 ) }
    dend_38 { pt3dadd( 151.489, -123.698, -69.1407, 0.55 ) }
    dend_38 { pt3dadd( 153.601, -125.387, -70.2999, 0.28 ) }
    dend_38 { pt3dadd( 154.225, -125.905, -70.6105, 0.83 ) }
    dend_38 { pt3dadd( 156.93, -128.056, -72.0212, 0.28 ) }
    dend_38 { pt3dadd( 157.564, -128.522, -72.3428, 0.55 ) }
    dend_38 { pt3dadd( 159.222, -129.599, -73.1629, 0.55 ) }
    dend_38 { pt3dadd( 161.967, -131.447, -74.2363, 0.28 ) }
    dend_38 { pt3dadd( 162.077, -131.516, -74.2793, 0.55 ) }
    dend_38 { pt3dadd( 164.585, -132.895, -75.3384, 0.28 ) }
    dend_38 { pt3dadd( 165.584, -133.389, -75.7472, 0.55 ) }
    dend_38 { pt3dadd( 168.307, -134.685, -77.0393, 0.28 ) }
    dend_38 { pt3dadd( 170.118, -135.476, -77.9653, 0.55 ) }
    dend_38 { pt3dadd( 173.414, -136.749, -79.6904, 0.55 ) }
    dend_38 { pt3dadd( 176.293, -137.832, -81.278, 0.28 ) }
    dend_38 { pt3dadd( 178.058, -138.522, -82.297, 0.83 ) }
    dend_38 { pt3dadd( 181.09, -139.763, -84.0912, 0.28 ) }
    dend_38 { pt3dadd( 181.736, -140.014, -84.414, 0.55 ) }
    dend_38 { pt3dadd( 184.131, -140.845, -85.4232, 0.28 ) }
    dend_38 { pt3dadd( 184.916, -141.115, -85.5993, 0.55 ) }
    dend_38 { pt3dadd( 188.621, -142.276, -86.0082, 0.28 ) }
    dend_38 { pt3dadd( 189.799, -142.598, -86.0603, 0.83 ) }
    dend_38 { pt3dadd( 194.303, -143.685, -85.7237, 0.28 ) }
    dend_38 { pt3dadd( 195.136, -143.869, -85.6121, 0.55 ) }
    dend_38 { pt3dadd( 198.472, -144.419, -84.7883, 0.28 ) }
    dend_38 { pt3dadd( 201.317, -144.665, -83.9313, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 32.7361, -60.3441, -9.94712, 0.55 ) }
    dend_35 { pt3dadd( 33.6888, -61.2512, -12.2086, 0.55 ) }
    dend_35 { pt3dadd( 35.5267, -63.2296, -17.0238, 0.55 ) }
    dend_35 { pt3dadd( 37.1419, -64.9411, -21.0915, 0.28 ) }
    dend_35 { pt3dadd( 38.3561, -66.1398, -24.0484, 0.83 ) }
    dend_35 { pt3dadd( 40.4854, -68.012, -28.7868, 0.28 ) }
    dend_35 { pt3dadd( 40.9967, -68.4137, -29.923, 0.55 ) }
    dend_35 { pt3dadd( 41.4297, -68.7198, -30.9507, 0.55 ) }
    dend_35 { pt3dadd( 42.4034, -69.1866, -33.0282, 0.55 ) }
    dend_35 { pt3dadd( 43.9965, -69.8137, -36.1672, 0.55 ) }
    dend_35 { pt3dadd( 44.8942, -70.1225, -37.8833, 0.55 ) }
    dend_35 { pt3dadd( 47.6464, -70.8496, -42.3825, 0.83 ) }
    dend_35 { pt3dadd( 49.3722, -71.237, -45.1426, 0.28 ) }
    dend_35 { pt3dadd( 50.0517, -71.3591, -46.2855, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -73.6281, -18.3939, -123.214, 0.28 ) }
    dend_20 { pt3dadd( -74.5374, -18.6422, -123.053, 0.28 ) }
    dend_20 { pt3dadd( -75.7188, -18.9647, -122.843, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -73.6281, -18.3939, -123.214, 0.28 ) }
    dend_19 { pt3dadd( -76.2233, -21.6406, -125.686, 0.28 ) }
    dend_19 { pt3dadd( -76.982, -22.5899, -126.408, 0.55 ) }
    dend_19 { pt3dadd( -79.3559, -25.5597, -128.67, 0.28 ) }
    dend_19 { pt3dadd( -80.4067, -26.8742, -129.67, 0.83 ) }
    dend_19 { pt3dadd( -85.005, -32.6269, -134.051, 0.28 ) }
    dend_19 { pt3dadd( -85.7607, -33.5723, -134.77, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -69.7769, 360.578, -2.95368, 0.55 ) }
    dend_9 { pt3dadd( -70.6915, 361.209, -3.60417, 0.55 ) }
    dend_9 { pt3dadd( -71.6527, 361.963, -4.25684, 0.28 ) }
    dend_9 { pt3dadd( -72.6111, 362.715, -4.9077, 0.55 ) }
    dend_9 { pt3dadd( -75.3826, 364.889, -6.78965, 0.28 ) }
    dend_9 { pt3dadd( -75.7012, 365.138, -7.006, 0.55 ) }
    dend_9 { pt3dadd( -77.7562, 366.75, -8.40148, 0.28 ) }
    dend_9 { pt3dadd( -78.8031, 367.442, -9.22208, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -69.7769, 360.578, -2.95368, 0.28 ) }
    dend_8 { pt3dadd( -71.7724, 359.684, -2.84515, 0.28 ) }
    dend_8 { pt3dadd( -72.8831, 359.187, -2.78474, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 117.531, 100.464, -121.92, 0.28 ) }
    dend_47 { pt3dadd( 114.219, 103.472, -120.098, 0.28 ) }
    dend_47 { pt3dadd( 113.096, 104.491, -119.481, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 117.531, 100.464, -121.92, 0.28 ) }
    dend_46 { pt3dadd( 117.99, 102.881, -121.551, 0.28 ) }
    dend_46 { pt3dadd( 118.821, 107.433, -120.792, 0.28 ) }
    dend_46 { pt3dadd( 119.022, 108.658, -120.528, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 119.671, 113.124, -119.32, 0.28 ) }
    dend_46 { pt3dadd( 120.043, 115.691, -118.626, 0.55 ) }
    dend_46 { pt3dadd( 120.525, 119.007, -117.729, 0.28 ) }
    dend_46 { pt3dadd( 120.751, 120.753, -117.154, 0.55 ) }
    dend_46 { pt3dadd( 121.057, 123.527, -116.027, 0.28 ) }
    dend_46 { pt3dadd( 121.241, 125.775, -115.067, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 50.0517, -71.3591, -46.2855, 0.55 ) }
    dend_37 { pt3dadd( 49.3448, -71.9919, -47.9834, 0.55 ) }
    dend_37 { pt3dadd( 49.0317, -72.3086, -48.7988, 0.28 ) }
    dend_37 { pt3dadd( 48.816, -72.5001, -49.3405, 0.83 ) }
    dend_37 { pt3dadd( 47.4137, -73.605, -52.5244, 0.28 ) }
    dend_37 { pt3dadd( 47.0163, -73.936, -53.417, 0.83 ) }
    dend_37 { pt3dadd( 45.2744, -75.4463, -57.2052, 0.28 ) }
    dend_37 { pt3dadd( 45.0304, -75.6549, -57.7269, 0.83 ) }
    dend_37 { pt3dadd( 43.4609, -76.8206, -60.8126, 0.28 ) }
    dend_37 { pt3dadd( 42.9736, -77.1504, -61.6571, 0.55 ) }
    dend_37 { pt3dadd( 40.7297, -78.4814, -65.086, 0.28 ) }
    dend_37 { pt3dadd( 40.2692, -78.7304, -65.7776, 0.28 ) }
    dend_37 { pt3dadd( 39.2715, -79.2137, -67.2546, 0.83 ) }
    dend_37 { pt3dadd( 36.3335, -80.5343, -71.625, 0.28 ) }
    dend_37 { pt3dadd( 35.5365, -80.8743, -72.8537, 0.55 ) }
    dend_37 { pt3dadd( 33.9886, -81.4933, -75.2985, 0.55 ) }
    dend_37 { pt3dadd( 32.8318, -81.9026, -77.096, 0.55 ) }
    dend_37 { pt3dadd( 30.8493, -82.6333, -80.2142, 0.28 ) }
    dend_37 { pt3dadd( 30.3024, -82.8762, -81.0964, 0.83 ) }
    dend_37 { pt3dadd( 28.4544, -83.8295, -84.0212, 0.28 ) }
    dend_37 { pt3dadd( 28.0944, -84.0452, -84.5747, 0.55 ) }
    dend_37 { pt3dadd( 26.4292, -85.1891, -86.7918, 0.28 ) }
    dend_37 { pt3dadd( 25.9043, -85.5347, -87.3849, 0.55 ) }
    dend_37 { pt3dadd( 23.8378, -86.9593, -89.4594, 0.28 ) }
    dend_37 { pt3dadd( 23.6507, -87.0789, -89.6414, 0.83 ) }
    dend_37 { pt3dadd( 22.5059, -87.7629, -90.5966, 0.28 ) }
    dend_37 { pt3dadd( 21.5579, -88.3107, -91.2971, 0.55 ) }
    dend_37 { pt3dadd( 18.6365, -89.8981, -93.3303, 0.28 ) }
    dend_37 { pt3dadd( 17.749, -90.3928, -93.8977, 0.83 ) }
    dend_37 { pt3dadd( 13.861, -92.6125, -96.1159, 0.28 ) }
    dend_37 { pt3dadd( 12.1844, -93.5984, -97.0419, 0.55 ) }
    dend_37 { pt3dadd( 9.98565, -94.9525, -98.2812, 0.55 ) }
    dend_37 { pt3dadd( 7.53538, -96.569, -99.6163, 0.28 ) }
    dend_37 { pt3dadd( 5.4695, -98.0485, -100.635, 0.55 ) }
    dend_37 { pt3dadd( 4.00383, -99.1324, -101.439, 0.28 ) }
    dend_37 { pt3dadd( 3.79129, -99.3026, -101.564, 0.55 ) }
    dend_37 { pt3dadd( 2.50204, -100.282, -102.396, 0.28 ) }
    dend_37 { pt3dadd( 1.49488, -100.968, -103.055, 0.55 ) }
    dend_37 { pt3dadd( 0.380152, -101.631, -103.791, 0.55 ) }
    dend_37 { pt3dadd( -1.53714, -102.547, -105.143, 0.28 ) }
    dend_37 { pt3dadd( -2.36722, -102.884, -105.696, 0.55 ) }
    dend_37 { pt3dadd( -3.5631, -103.341, -106.476, 0.28 ) }
    dend_37 { pt3dadd( -4.33337, -103.607, -106.941, 0.55 ) }
    dend_37 { pt3dadd( -6.42144, -104.277, -108.197, 0.28 ) }
    dend_37 { pt3dadd( -7.11808, -104.48, -108.645, 0.55 ) }
    dend_37 { pt3dadd( -8.86312, -105.018, -109.776, 0.28 ) }
    dend_37 { pt3dadd( -9.94724, -105.381, -110.64, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 50.0517, -71.3591, -46.2855, 0.28 ) }
    dend_36 { pt3dadd( 52.6196, -71.3389, -46.9873, 0.28 ) }
    dend_36 { pt3dadd( 52.9862, -71.3484, -47.1242, 0.83 ) }
    dend_36 { pt3dadd( 54.6716, -71.481, -47.7751, 0.28 ) }
    dend_36 { pt3dadd( 55.2587, -71.5115, -48.0061, 0.28 ) }
    dend_36 { pt3dadd( 55.9807, -71.582, -48.3206, 0.55 ) }
    dend_36 { pt3dadd( 57.2204, -71.7312, -49.0436, 0.28 ) }
    dend_36 { pt3dadd( 58.5082, -71.9497, -50.01, 0.55 ) }
    dend_36 { pt3dadd( 59.2636, -72.1323, -50.6056, 0.55 ) }
    dend_36 { pt3dadd( 60.1773, -72.4188, -51.4604, 0.55 ) }
    dend_36 { pt3dadd( 61.7335, -72.9454, -53.0916, 0.83 ) }
    dend_36 { pt3dadd( 63.5497, -73.6007, -55.2076, 0.28 ) }
    dend_36 { pt3dadd( 64.1647, -73.8353, -55.9743, 0.28 ) }
    dend_36 { pt3dadd( 64.4709, -73.9819, -56.4109, 0.83 ) }
    dend_36 { pt3dadd( 66.4759, -75.0091, -59.4323, 0.28 ) }
    dend_36 { pt3dadd( 67.0283, -75.345, -60.344, 0.83 ) }
    dend_36 { pt3dadd( 67.481, -75.6677, -61.1562, 0.83 ) }
    dend_36 { pt3dadd( 68.2797, -76.3244, -62.5825, 0.83 ) }
    dend_36 { pt3dadd( 69.6207, -77.5225, -65.049, 0.55 ) }
    dend_36 { pt3dadd( 70.7657, -78.7295, -67.2023, 0.55 ) }
    dend_36 { pt3dadd( 72.1614, -80.518, -69.8302, 0.55 ) }
    dend_36 { pt3dadd( 72.7911, -81.5317, -71.1307, 0.55 ) }
    dend_36 { pt3dadd( 73.2949, -82.5554, -72.2706, 0.28 ) }
    dend_36 { pt3dadd( 73.3484, -82.6955, -72.3973, 0.55 ) }
    dend_36 { pt3dadd( 73.9734, -84.9065, -73.9513, 0.28 ) }
    dend_36 { pt3dadd( 74.1503, -85.7684, -74.4334, 0.55 ) }
    dend_36 { pt3dadd( 74.6547, -88.3461, -75.658, 0.28 ) }
    dend_36 { pt3dadd( 74.9718, -89.8095, -76.2747, 0.55 ) }
    dend_36 { pt3dadd( 75.3643, -91.3857, -76.8831, 0.28 ) }
    dend_36 { pt3dadd( 75.7238, -92.5657, -77.2643, 0.55 ) }
    dend_36 { pt3dadd( 76.6963, -95.3151, -77.968, 0.28 ) }
    dend_36 { pt3dadd( 76.9675, -95.9735, -78.093, 1.11 ) }
    dend_36 { pt3dadd( 78.6225, -99.2562, -78.477, 0.28 ) }
    dend_36 { pt3dadd( 79.5658, -100.842, -78.5619, 0.55 ) }
    dend_36 { pt3dadd( 80.6138, -102.322, -78.3941, 0.28 ) }
    dend_36 { pt3dadd( 81.0073, -102.784, -78.2485, 0.55 ) }
    dend_36 { pt3dadd( 82.1269, -103.933, -77.6384, 0.28 ) }
    dend_36 { pt3dadd( 82.911, -104.663, -77.1223, 0.28 ) }
    dend_36 { pt3dadd( 84.4939, -105.942, -75.8846, 0.55 ) }
    dend_36 { pt3dadd( 86.8444, -107.849, -73.9238, 0.55 ) }
    dend_36 { pt3dadd( 87.7617, -108.595, -73.1407, 0.28 ) }
    dend_36 { pt3dadd( 87.9538, -108.736, -72.9872, 0.55 ) }
    dend_36 { pt3dadd( 89.3767, -109.657, -71.964, 0.28 ) }
    dend_36 { pt3dadd( 89.6255, -109.808, -71.8, 0.55 ) }
    dend_36 { pt3dadd( 90.8016, -110.397, -71.1983, 0.28 ) }
    dend_36 { pt3dadd( 91.3418, -110.609, -71.007, 0.55 ) }
    dend_36 { pt3dadd( 93.5285, -111.194, -70.1498, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 94.2273, -111.297, -69.7947, 0.55 ) }
    dend_36 { pt3dadd( 95.3454, -111.311, -69.2218, 0.28 ) }
    dend_36 { pt3dadd( 95.7101, -111.269, -68.9721, 0.55 ) }
    dend_36 { pt3dadd( 96.7631, -111.022, -68.1231, 0.28 ) }
    dend_36 { pt3dadd( 97.6715, -110.771, -67.3224, 0.55 ) }
    dend_36 { pt3dadd( 99.3124, -110.208, -65.5675, 0.28 ) }
    dend_36 { pt3dadd( 100.553, -109.717, -64.1206, 0.55 ) }
    dend_36 { pt3dadd( 103.155, -108.477, -60.8738, 0.28 ) }
    dend_36 { pt3dadd( 103.53, -108.288, -60.3788, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_11, dend_0, axon_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, axon_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_5 = new SectionList()
    dend_26 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 5
    dend_6 nseg = 11
    dend_5 nseg = 3
    dend_3 nseg = 5
    dend_48 nseg = 13
    dend_43 nseg = 3
    dend_30 nseg = 17
    dend_29 nseg = 5
    dend_24 nseg = 3
    dend_18 nseg = 7
    dend_17 nseg = 15
    dend_15 nseg = 7
    dend_14 nseg = 7
    dend_10 nseg = 9
    dend_7 nseg = 5
    dend_45 nseg = 9
    dend_44 nseg = 7
    dend_40 nseg = 7
    dend_38 nseg = 11
    dend_35 nseg = 3
    dend_37 nseg = 5
    dend_36 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_BTC_20d24e55d5_0_0


