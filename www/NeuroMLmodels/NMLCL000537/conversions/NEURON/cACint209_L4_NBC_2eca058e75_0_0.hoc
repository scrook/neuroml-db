// Cell: cACint209_L4_NBC_2eca058e75_0_0
/*
{
  "id" : "cACint209_L4_NBC_2eca058e75_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.09764, -8.67532, 0.645002, 2.68797", "-4.60344, -7.96551, 0.570575, 4.73408", "-4.10924, -7.25569, 0.496148, 7.4359", "-3.61503, -6.54587, 0.421721, 8.59973", "-3.12083, -5.83605, 0.347294, 9.0848", "-2.62663, -5.12623, 0.272868, 9.56987", "-2.13243, -4.41641, 0.198441, 10.0549", "-1.63822, -3.70659, 0.124014, 10.54", "-1.14402, -2.99677, 0.049587, 11.0283", "-0.649817, -2.28695, -0.0248399, 11.5469", "-0.155615, -1.57714, -0.0992667, 12.0729", "0.338588, -0.867317, -0.173694, 12.4151", "0.832791, -0.157498, -0.24812, 12.7013", "1.32699, 0.552321, -0.322547, 12.6038", "1.8212, 1.26214, -0.396974, 12.4311", "2.3154, 1.97196, -0.471401, 12.1547", "2.8096, 2.68178, -0.545828, 11.8066", "3.3038, 3.3916, -0.620255, 10.9507", "3.79801, 4.10142, -0.694681, 9.34672", "4.29221, 4.81123, -0.769108, 7.74278", "4.78641, 5.52105, -0.843535, 4.17384" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.6438, 0.497661, -7.80437, 1.94", "5.55026, 1.04442, -10.5814, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.8862, -6.85533, -7.80437, 2.49", "-11.0887, -6.77223, -9.58311, 2.49", "-16.0369, -6.67439, -11.6775, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.2562, -9.57234, 2.88563, 1.66", "-1.74944, -11.263, 3.11737, 1.66", "-3.1918, -16.2068, 3.79504, 1.11", "-4.6182, -21.0959, 4.46522, 1.11", "-6.28871, -26.8217, 5.25009, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.4238, 0.374161, 2.48563, 2.22", "10.4492, -0.426352, 2.48563, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.1838, 5.16217, 7.68563, 0.83", "4.84889, 5.88891, 8.22784, 0.83", "5.65337, 7.14217, 9.9, 1.39", "6.48974, 8.73536, 11.9579, 0.83", "6.85337, 9.64443, 13.0452, 0.83", "7.66706, 11.9313, 15.6059, 0.83", "8.78566, 14.8817, 18.769, 0.83", "9.30517, 16.5115, 20.8192, 0.83", "9.4271, 17.0582, 21.5461, 0.83", "9.54417, 17.8327, 22.662, 0.55", "9.58233, 18.2763, 23.2801, 0.55", "9.57591, 19.2114, 24.2651, 0.55", "9.48533, 21.6863, 26.2576, 0.55", "9.48535, 23.0799, 27.5144, 0.83", "9.51956, 24.8983, 29.2274, 0.55", "9.52826, 25.4017, 29.7057, 0.83", "9.46753, 26.9993, 31.2158, 0.28", "9.27905, 29.0475, 33.0735, 0.83", "9.16435, 31.0615, 34.7121, 0.83", "9.22637, 32.1493, 35.7535, 0.28", "9.25611, 32.3136, 35.9135, 0.55", "10.0356, 36.6408, 40.0919, 0.55", "11.5618, 40.9989, 44.0173, 0.55", "13.6371, 45.52, 47.4522, 0.55", "14.8077, 49.79, 51.6026, 0.55", "15.4911, 53.3659, 56.52, 0.55", "16.512, 57.3885, 60.9736, 0.55", "18.152, 60.7629, 65.8192, 0.55", "20.13, 63.9011, 70.7132, 0.55", "21.1854, 67.3819, 75.6393, 0.55", "23.1119, 70.993, 80.1798, 0.55", "24.539, 75.2954, 84.2097, 0.55", "25.4121, 79.5785, 88.4194, 0.55", "26.0111, 83.0332, 93.4428, 0.55", "25.6892, 86.2606, 98.6577, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999976551736225,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.78641, 5.52105, -0.843535, 0.83", "13.3572, 17.8312, -0.843535, 0.83", "21.9281, 30.1414, -0.843535, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.55026, 1.04442, -10.5814, 0.83", "5.07464, 3.47227, -13.1961, 0.83", "4.44994, 6.18053, -17.0487, 0.83", "4.07452, 7.42418, -18.916, 1.66", "2.93176, 10.4746, -23.5132, 1.11", "2.31929, 11.9061, -25.7371, 1.11", "0.585582, 15.3671, -31.7718, 1.11", "-1.48514, 18.2359, -38.9036, 0.83", "-2.25475, 18.8297, -41.5626, 0.83", "-2.82857, 18.9886, -43.6274, 0.55", "-3.26704, 18.9516, -45.1697, 0.55", "-4.50843, 18.5358, -49.7584, 1.39", "-6.80375, 16.7815, -59.9938, 0.83", "-7.12152, 16.4453, -61.3424, 0.83", "-8.31618, 14.6744, -67.6984, 0.83", "-8.91101, 13.5942, -71.4962, 2.49" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.55026, 1.04442, -10.5814, 1.11", "4.60956, 1.19551, -12.9645, 1.11", "2.24841, 1.08769, -20.5079, 1.11", "1.19057, 0.733455, -24.664, 1.11", "0.86268, 0.534365, -26.2704, 1.11", "-0.790273, -1.2005, -38.9302, 1.11", "-1.14529, -1.68046, -43.4423, 1.11", "-1.69225, -2.24199, -49.2034, 0.83", "-2.01127, -2.49804, -52.1456, 0.83", "-2.27755, -2.66979, -54.2297, 0.83", "-3.20893, -3.29188, -62.5898, 2.22", "-3.21187, -3.96983, -69.9374, 2.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-16.0369, -6.67439, -11.6775, 0.83", "-17.3279, -2.45541, -13.8499, 0.83", "-18.0629, -0.240856, -14.689, 0.83", "-19.241, 3.2239, -15.7592, 0.83", "-19.7457, 4.89598, -16.3036, 0.55", "-20.4517, 7.15601, -17.1259, 0.83", "-21.0546, 8.90186, -17.7923, 0.28", "-22.4738, 12.4086, -19.1832, 0.83", "-23.4591, 14.3785, -20.1717, 0.55", "-25.8114, 17.3401, -22.0809, 0.28", "-28.0825, 18.8591, -23.6948, 0.28", "-29.3889, 19.1433, -24.542, 0.28", "-32.0442, 18.9746, -26.2488, 0.28", "-33.7537, 18.7259, -27.2433, 0.28", "-37.6292, 18.0224, -29.2715, 0.55", "-42.4053, 17.1085, -31.515, 0.55", "-45.0955, 16.6692, -32.7208, 0.55", "-47.7115, 16.466, -33.9187, 0.55", "-52.5038, 16.6265, -35.9908, 0.55", "-53.335, 16.7555, -36.3898, 0.55", "-54.5633, 17.0715, -37.0245, 0.28", "-55.5245, 17.3645, -37.4787, 0.83", "-57.9471, 18.1407, -38.6305, 0.55", "-59.7893, 18.6673, -39.5735, 0.55", "-62.8963, 19.1646, -41.3929, 1.11", "-65.9156, 19.4796, -43.1239, 0.55", "-67.027, 19.5659, -43.7952, 0.28", "-68.2717, 19.6713, -44.5741, 0.55", "-70.0776, 19.8779, -45.8042, 0.28", "-72.0416, 20.1728, -47.2883, 1.39", "-73.6745, 20.4817, -48.6024, 0.28", "-75.0626, 20.8876, -49.8894, 0.83", "-75.8679, 21.2035, -50.6812, 0.83", "-78.2521, 22.2904, -52.9345, 0.28", "-78.8297, 22.5884, -53.4443, 0.55", "-80.4258, 23.4809, -54.7143, 0.28", "-82.1157, 24.4042, -55.9593, 1.94", "-85.6899, 26.2534, -58.2979, 0.28", "-87.8684, 27.3672, -59.6327, 0.55", "-89.6676, 28.2778, -60.6276, 0.28", "-91.6558, 29.2881, -61.6445, 1.66", "-95.7506, 31.2971, -63.4688, 0.28", "-96.6804, 31.7156, -63.8137, 0.55", "-97.4457, 32.0253, -64.0466, 0.28", "-100.162, 33.0607, -64.9951, 1.66", "-102.465, 33.9367, -65.8349, 0.28", "-103.789, 34.4381, -66.373, 1.11", "-106.437, 35.4341, -67.514, 0.28", "-107.567, 35.8648, -68.0667, 0.83", "-111.922, 37.4478, -70.2988, 0.28", "-112.627, 37.6849, -70.6688, 0.28", "-114.438, 38.1929, -71.6411, 1.66", "-117.054, 38.8622, -73.0184, 0.28", "-118.588, 39.1848, -73.7616, 0.55", "-120.309, 39.4507, -74.5261, 0.28", "-122.067, 39.637, -75.2246, 0.55", "-125.086, 39.839, -76.4806, 0.28", "-125.945, 39.8619, -76.8688, 0.83", "-127.614, 39.8525, -77.6641, 0.28", "-130.162, 39.819, -79.0779, 0.83", "-132.138, 39.797, -80.2761, 0.28", "-133.42, 39.8346, -81.1758, 0.55", "-136.988, 40.0411, -83.7356, 0.28", "-137.949, 40.0954, -84.4143, 1.11", "-140.479, 40.3157, -86.2573, 0.28", "-141.628, 40.4377, -87.0587, 0.55", "-144.371, 40.7609, -89.0434, 0.28", "-146.869, 41.11, -90.9283, 0.28", "-147.9, 41.2737, -91.6984, 1.11", "-151.36, 41.841, -94.2172, 0.28", "-151.945, 41.9461, -94.6445, 0.83", "-155.026, 42.541, -96.9587, 0.28", "-155.849, 42.7171, -97.5815, 0.55", "-157.081, 43.0683, -98.6191, 0.28", "-157.627, 43.2467, -99.0871, 1.39", "-160.325, 44.178, -101.12, 0.28", "-160.987, 44.4184, -101.672, 0.55", "-163.046, 45.1942, -103.392, 0.28", "-163.258, 45.2736, -103.538, 0.83", "-164.713, 45.77, -104.34, 0.28", "-167.274, 46.6214, -105.414, 1.11", "-174.618, 48.9517, -107.417, 0.28", "-175.914, 49.3173, -107.787, 1.66", "-180.093, 50.36, -108.772, 0.28", "-181.068, 50.604, -109.053, 0.55", "-182.364, 50.8996, -109.468, 0.28", "-183.311, 51.1557, -109.854, 0.83", "-187.247, 52.4107, -110.834, 0.28", "-188.648, 52.884, -111.364, 1.11", "-191.124, 53.7617, -112.746, 0.28", "-192.006, 54.0965, -113.268, 0.55", "-195.172, 55.3114, -115.202, 0.28", "-198.569, 56.9546, -117.148, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-16.0369, -6.67439, -11.6775, 1.66", "-18.5958, -7.90061, -13.749, 1.66", "-21.3721, -9.23096, -15.9964, 1.66" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-6.28871, -26.8217, 5.25009, 0.55", "-8.29129, -29.6213, 7.98332, 0.55", "-9.91361, -31.7263, 10.3135, 0.28", "-10.2235, -32.1113, 10.6399, 0.55", "-11.2768, -33.4998, 11.194, 0.28", "-12.7612, -35.6821, 9.80857, 0.55", "-15.1919, -39.3232, 5.19816, 0.28", "-15.3872, -39.5897, 4.64529, 0.83", "-16.6976, -41.35, 0.651723, 0.83", "-18.7687, -44.125, -6.38945, 0.28", "-19.1374, -44.6354, -7.94553, 1.11", "-19.8002, -45.7627, -12.074, 0.28", "-20.0817, -46.2959, -14.2886, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-6.28871, -26.8217, 5.25009, 1.11", "-6.24284, -30.9867, 2.83125, 1.11", "-6.21745, -33.2917, 1.4926, 1.11", "-6.20579, -34.3505, 0.87768, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "10.4492, -0.426352, 2.48563, 0.83", "10.7404, -2.66241, 1.52861, 0.83", "10.9416, -4.34459, 0.813916, 0.83", "11.304, -7.22849, -0.360816, 0.83", "11.7408, -10.2368, -1.50148, 0.83", "12.3253, -14.2624, -3.02783, 0.83", "13.2874, -20.8881, -5.54005, 0.83", "13.5971, -22.9454, -6.30573, 0.83", "13.7827, -24.0711, -6.74715, 0.83", "14.0713, -25.8266, -7.40573, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "10.4492, -0.426352, 2.48563, 1.11", "13.9496, -1.20508, 6.8419, 1.11", "16.1379, -1.48545, 9.50849, 1.11", "19.8045, -1.78853, 13.7265, 1.11", "25.1124, -2.20911, 19.0488, 1.11", "30.5551, -2.7196, 23.7763, 1.11", "34.9334, -3.26788, 27.2621, 0.83", "38.2596, -3.79144, 30.0736, 0.83", "39.9166, -4.10893, 31.3348, 0.83", "44.1738, -5.14901, 33.6467, 1.39", "46.9567, -5.95596, 34.4471, 0.83", "49.2116, -6.57237, 34.7983, 0.83", "52.7936, -7.78328, 35.3327, 0.83", "55.9446, -9.18522, 36.075, 0.83", "58.514, -10.3657, 36.8894, 0.83", "60.7427, -11.3972, 37.7733, 1.11", "62.7968, -12.3639, 38.7312, 0.83", "68.5409, -15.0918, 41.5157, 0.83", "71.3657, -16.5542, 42.996, 0.83", "75.2948, -18.7841, 45.2737, 1.11", "76.3631, -19.4794, 45.9631, 0.83", "78.2586, -20.7728, 47.1869, 0.83", "79.5811, -21.5931, 47.9986, 0.83", "81.8395, -22.747, 49.0352, 1.11", "83.462, -23.4249, 49.4941, 0.55", "84.7377, -23.9252, 49.6165, 0.55", "87.0421, -24.5255, 49.6933, 0.83", "90.2281, -25.047, 49.6538, 0.83", "93.0738, -25.4363, 49.5829, 0.83", "95.8555, -25.7724, 49.468, 0.83", "99.6138, -26.1784, 49.2716, 1.11", "102.665, -26.4396, 49.1483, 0.83", "104.12, -26.5924, 49.1537, 0.83", "106.411, -26.8475, 49.2793, 0.83", "108.274, -27.1917, 49.5685, 0.83", "110.49, -27.9042, 50.0494, 0.83", "112.904, -28.8743, 50.4841, 1.11", "114.469, -29.619, 50.6862, 1.11", "116.65, -30.751, 50.9942, 0.83", "119.045, -32.1529, 51.1138, 0.55", "121.043, -33.4545, 51.0947, 1.11", "123.59, -35.2428, 50.9373, 0.83", "125.364, -36.5305, 50.7365, 0.28", "129.66, -39.8338, 49.6372, 0.83", "133.397, -42.8663, 48.2136, 0.83", "134.584, -43.8353, 47.5852, 0.28", "135.5, -44.6122, 47.0408, 0.28", "136.777, -45.6954, 46.2734, 0.83", "140.489, -48.7435, 43.9704, 0.28", "141.415, -49.5152, 43.3927, 0.83", "143.545, -51.321, 42.5204, 1.11", "145.21, -52.838, 41.8211, 0.28", "146.477, -53.9682, 41.3524, 0.28", "147.46, -54.8142, 41.0314, 0.28", "148.022, -55.2669, 40.9337, 0.55", "149.001, -56.1101, 40.7827, 0.28", "153.029, -59.794, 40.2743, 0.55", "154.422, -61.0448, 40.0792, 0.28", "154.952, -61.5384, 40.035, 0.55", "156.454, -62.95, 40.0226, 0.28", "157.315, -63.7465, 40.09, 0.83", "158.707, -64.9942, 40.3622, 0.28", "160.647, -66.5632, 41.0236, 0.28", "162.195, -67.7195, 41.3557, 0.28", "163.292, -68.4975, 41.5226, 0.83", "164.388, -69.2329, 41.6404, 0.55", "166.243, -70.3903, 41.7821, 1.94", "170.24, -72.7816, 41.7664, 1.11", "173.861, -74.8308, 41.448, 0.55", "174.796, -75.2924, 41.3113, 0.55", "176.329, -76.0611, 40.9037, 0.28", "177.429, -76.6532, 40.507, 0.83", "180.305, -78.3308, 39.277, 0.28", "181.228, -78.9282, 38.8566, 0.83", "184.11, -80.8586, 37.6952, 0.28", "187.404, -83.6513, 36.309, 0.83", "188.078, -84.3629, 36.029, 0.83", "189.866, -86.6859, 35.428, 0.28", "191.093, -88.4693, 35.2589, 0.28", "191.28, -88.7686, 35.2638, 0.83", "193.996, -93.4073, 36.0783, 0.28", "194.358, -93.966, 36.2985, 0.55", "195.347, -95.4612, 37.0146, 0.28", "196.481, -97.1648, 38.088, 1.11", "197.374, -98.3591, 39.0872, 0.28", "198.456, -99.6883, 40.3672, 0.55", "199.147, -100.414, 41.2189, 0.28", "199.399, -100.68, 41.4897, 0.55", "201.116, -102.548, 43.1084, 0.28", "202.036, -103.668, 43.8955, 0.83", "203.668, -105.747, 45.1863, 0.28", "204.254, -106.467, 45.574, 0.55", "205.254, -107.56, 46.1735, 0.28", "205.876, -108.146, 46.499, 0.83", "207.108, -109.18, 46.8372, 0.83", "209.042, -110.684, 47.0395, 0.28", "210.093, -111.444, 46.8185, 0.55", "211.333, -112.296, 46.3587, 0.28", "212.637, -113.111, 45.7178, 0.83", "216.825, -115.646, 43.3854, 0.28", "217.612, -116.102, 42.8859, 1.11", "221.883, -118.546, 39.7989, 0.55", "223.33, -119.427, 38.6452, 0.28", "224.854, -120.393, 37.2911, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.9281, 30.1414, -0.843535, 0.635045", "30.4989, 42.4516, -0.843535, 0.635045", "39.0697, 54.7618, -0.843535, 0.635045" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.91101, 13.5942, -71.4962, 0.55", "-15.3376, 10.7801, -79.519, 0.55", "-16.8935, 10.1222, -81.2409, 0.83", "-19.0189, 9.30099, -83.5136, 0.55", "-19.929, 8.94005, -84.3694, 0.28", "-21.3593, 8.35853, -86.1595, 0.83", "-22.1506, 8.03051, -87.1745, 0.28", "-22.6385, 7.856, -87.8088, 0.83", "-25.6445, 7.04015, -92.1927, 0.28", "-27.0791, 6.86257, -94.8155, 0.83", "-32.5443, 6.46735, -105.515, 0.28", "-33.746, 6.39724, -107.907, 0.83", "-35.3429, 6.33018, -111.022, 0.28", "-37.172, 6.3011, -114.471, 1.94", "-42.5652, 6.46241, -124.191, 1.94", "-44.5756, 6.55661, -127.56, 0.28", "-45.8878, 6.55981, -129.299, 0.83", "-48.3926, 6.3961, -132.431, 0.28", "-49.2709, 6.25345, -133.421, 0.28", "-50.8508, 5.88567, -134.999, 0.55", "-52.7827, 5.36904, -136.727, 0.55", "-56.2217, 4.453, -140.074, 0.28", "-59.1163, 3.75108, -142.948, 1.11", "-62.2616, 2.96292, -146.016, 0.28", "-63.0016, 2.77491, -146.807, 0.83", "-65.4444, 2.2158, -149.446, 0.28", "-66.4366, 2.03642, -150.541, 1.66", "-67.7393, 1.85759, -151.855, 0.83", "-68.7233, 1.73574, -152.715, 0.83", "-74.7299, 0.874655, -157.126, 0.28", "-76.384, 0.589865, -158.25, 0.28", "-78.3207, 0.212173, -159.364, 0.83", "-80.2753, -0.21762, -160.395, 0.28", "-81.1939, -0.446101, -160.894, 1.11", "-83.6358, -1.00513, -162.096, 0.28", "-84.3643, -1.1309, -162.442, 0.83", "-86.6622, -1.32348, -163.707, 0.28", "-87.6328, -1.31445, -164.229, 1.11", "-92.8629, -0.848838, -166.981, 0.28", "-94.3435, -0.594738, -167.716, 1.39", "-98.8982, 0.499976, -170.26, 0.28", "-101.241, 1.15036, -171.71, 0.55", "-103.41, 1.8046, -172.965, 0.28", "-105.023, 2.23663, -173.918, 0.55", "-106.443, 2.55504, -174.694, 0.28", "-111.374, 3.24549, -177.645, 1.11", "-115.09, 3.49088, -179.927, 0.28", "-118.771, 3.52854, -182.482, 1.11", "-124.045, 3.39977, -186.35, 0.28", "-125.375, 3.34664, -187.351, 0.83", "-129.388, 3.21754, -190.361, 0.28", "-130.245, 3.20359, -191.001, 0.83", "-132.559, 3.2275, -192.921, 0.28", "-133.145, 3.26366, -193.491, 0.55", "-134.932, 3.47847, -195.222, 0.28", "-136.767, 3.66829, -197.078, 1.39", "-139.446, 3.89034, -199.825, 0.28", "-140.007, 3.90677, -200.372, 0.28", "-141.794, 3.90992, -201.877, 0.55", "-142.943, 3.82143, -202.695, 0.55", "-145.335, 3.36749, -204.068, 0.28", "-145.65, 3.29177, -204.211, 0.55", "-146.383, 3.15404, -204.541, 0.28", "-147.837, 2.95421, -205.254, 0.55", "-149.213, 2.81688, -205.948, 0.55", "-152.785, 2.65664, -207.995, 0.28", "-153.943, 2.6976, -208.775, 0.55", "-156.71, 2.88032, -210.686, 0.28", "-157.425, 2.97441, -211.196, 0.55", "-158.101, 3.11091, -211.667, 0.28", "-158.881, 3.31798, -212.145, 0.83", "-161.452, 4.03065, -213.321, 0.28", "-162.519, 4.20575, -213.596, 0.55", "-163.599, 4.1692, -213.434, 0.28", "-164.847, 3.94887, -212.907, 0.55", "-166.321, 3.58061, -212.553, 0.28", "-166.873, 3.41128, -212.478, 0.83", "-170.831, 2.09494, -211.936, 0.28", "-171.571, 1.91625, -212.032, 0.28", "-173.001, 1.63837, -212.419, 1.11", "-177.878, 1.03125, -214.165, 0.28", "-179.184, 0.969895, -214.629, 0.55", "-182.345, 0.889715, -215.652, 0.28", "-186.476, 0.900055, -217.342, 0.55", "-187.773, 0.945495, -217.843, 0.55", "-189.216, 1.04795, -218.312, 0.28", "-191.565, 1.29402, -218.495, 0.83", "-193.924, 1.47065, -218.607, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.91101, 13.5942, -71.4962, 0.55", "-11.1972, 15.7354, -76.1894, 0.55", "-11.5652, 16.0355, -76.8437, 0.55", "-13.3857, 17.4671, -80.0173, 0.28", "-14.6929, 18.4336, -82.1978, 1.11", "-17.0638, 20.1708, -86.0033, 0.28", "-19.418, 21.9444, -89.6343, 0.83", "-21.5538, 23.35, -92.7932, 1.94", "-23.9533, 24.9572, -96.0423, 0.28", "-24.628, 25.4179, -96.8347, 0.28", "-26.2066, 26.4404, -98.4962, 0.55", "-27.4619, 27.154, -99.6426, 0.28", "-28.1905, 27.5017, -100.216, 0.55", "-30.9802, 28.5006, -102.269, 0.55", "-32.378, 28.8007, -103.202, 0.55", "-34.7022, 28.9906, -105.08, 0.55", "-36.4949, 28.7875, -107.199, 0.28", "-37.387, 28.6321, -108.724, 0.55", "-37.839, 28.5544, -109.706, 0.28", "-38.2967, 28.4977, -110.91, 0.83", "-39.6999, 28.4715, -114.886, 0.28", "-41.7665, 28.622, -120.73, 2.49", "-44.363, 28.9452, -128.07, 1.39", "-46.9149, 29.3126, -135.225, 0.28", "-49.1436, 29.7809, -141.424, 1.66", "-50.2985, 30.0845, -144.403, 1.66", "-52.5718, 30.8343, -149.861, 0.55", "-54.3155, 31.5325, -153.636, 0.28", "-55.7883, 32.2501, -156.59, 1.66", "-57.9141, 33.5724, -160.59, 0.55", "-59.2909, 34.6134, -163.127, 0.55", "-60.5843, 35.8144, -165.842, 0.55", "-60.9572, 36.2401, -166.784, 0.55", "-61.9343, 37.4917, -169.565, 1.94", "-62.8194, 38.6953, -172.373, 0.55", "-63.267, 39.223, -174.146, 1.39", "-64.9262, 41.2765, -181.957, 0.55", "-65.8015, 42.1314, -186.079, 0.28", "-65.9233, 42.2314, -186.645, 0.28", "-66.7595, 42.7582, -190.154, 1.11", "-69.8825, 44.1881, -202.548, 0.55", "-71.0736, 44.6104, -206.965, 1.66", "-72.6365, 45.0991, -212.212, 0.28", "-72.8022, 45.1442, -212.704, 0.83", "-73.6611, 45.3472, -214.976, 0.28", "-76.0992, 45.6281, -220.593, 0.28", "-76.4613, 45.6324, -221.254, 0.83", "-77.8876, 45.5854, -223.85, 0.28", "-78.9135, 45.6238, -225.737, 0.28", "-81.1704, 45.7892, -230.096, 0.55", "-83.5143, 46.0355, -234.78, 0.28", "-84.0416, 46.0736, -235.73, 0.28", "-86.1252, 46.0997, -239.378, 0.28", "-86.5124, 46.0706, -240.041, 0.55", "-88.8566, 45.7956, -243.556, 0.28", "-90.4568, 45.4262, -245.391, 0.55", "-92.6917, 44.7598, -247.325, 0.28", "-93.479, 44.3984, -247.876, 0.55", "-94.6338, 43.5445, -248.369, 0.28", "-96.8532, 41.6164, -248.903, 0.55", "-98.9197, 39.5219, -248.952, 0.28", "-99.7314, 38.6132, -248.857, 0.28", "-100.429, 37.7768, -248.709, 0.55", "-101.831, 36.0394, -248.399, 0.28", "-102.638, 35.1047, -248.217, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.21187, -3.96983, -69.9374, 0.55", "-1.6601, -4.40368, -83.0757, 0.55", "-0.9255, -4.72535, -87.1374, 0.55", "0.0303318, -5.17863, -91.8138, 0.83", "0.291019, -5.28732, -92.9512, 0.28", "0.573736, -5.40931, -94.0512, 1.11", "2.59684, -6.15423, -101.04, 1.11", "5.24445, -7.27838, -108.307, 0.28", "5.35884, -7.31344, -108.669, 2.22", "6.84454, -7.63941, -113.874, 0.55", "7.22367, -7.68568, -115.378, 0.83", "7.99588, -7.66072, -119.006, 0.28", "9.37561, -6.47636, -129.122, 0.28", "9.9967, -7.83318, -123.797, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.21187, -3.96983, -69.9374, 0.55", "-0.528348, -2.18417, -75.7984, 0.55", "0.0700658, -1.75646, -77.0405, 1.94", "0.68562, -1.28667, -78.302, 1.39", "1.76258, -0.327873, -80.6192, 0.55", "2.39771, 0.196127, -82.104, 0.55", "3.70864, 1.1451, -84.929, 0.55", "5.07643, 1.95079, -87.419, 0.55", "6.08262, 2.55321, -89.3415, 1.39", "6.80641, 3.00097, -90.7074, 1.39", "8.77394, 4.10337, -94.1923, 0.55", "10.1273, 4.65806, -96.4792, 0.55", "10.7186, 4.83923, -97.4246, 0.28", "11.5282, 5.03761, -98.665, 0.55", "12.9229, 5.30936, -100.83, 2.22", "14.5853, 5.5753, -103.521, 0.55", "15.7194, 5.75731, -105.536, 0.28", "16.7875, 5.83696, -107.737, 1.66", "18.2996, 5.78783, -111.344, 0.55", "18.9024, 5.62947, -113.066, 0.55", "19.178, 5.40346, -114.336, 0.83", "19.547, 4.86633, -116.706, 0.28", "19.6706, 4.68296, -117.531, 0.28", "20.187, 3.95842, -121.224, 0.83", "20.6811, 3.45926, -124.705, 3.05", "21.9653, 2.73062, -132.462, 0.28", "22.1337, 2.68495, -133.358, 1.39", "22.9062, 2.64654, -137.441, 0.28", "23.4837, 2.76936, -140.372, 1.39", "24.5433, 3.33679, -145.335, 0.28", "24.7368, 3.52735, -146.151, 0.28", "24.8407, 3.68551, -146.583, 0.55", "25.0205, 4.03089, -147.535, 0.28", "25.0983, 4.25056, -148.139, 0.55", "25.1803, 4.44467, -148.755, 0.28", "25.2614, 4.56521, -149.193, 1.39", "26.3061, 5.67775, -153.956, 0.28", "26.4541, 5.79618, -154.549, 0.28", "26.8403, 5.99882, -155.797, 1.39", "28.2489, 6.50763, -159.886, 0.55", "29.2235, 6.74209, -162.516, 1.39", "30.3334, 6.9547, -165.346, 0.55", "32.4634, 7.35874, -170.547, 0.28", "33.2861, 7.48617, -172.57, 0.28", "34.2866, 7.59313, -175.005, 1.66", "35.9906, 7.72881, -178.882, 0.28", "36.1711, 7.75027, -179.296, 1.11", "37.716, 8.15197, -183.213, 0.28", "37.8122, 8.21124, -183.496, 0.83", "37.9109, 8.34784, -183.932, 0.28", "37.9567, 8.50708, -184.356, 0.28", "37.966, 8.65069, -184.717, 0.83", "37.9895, 10.4544, -189.356, 0.28", "37.9621, 11.0138, -190.817, 0.28", "37.8957, 12.0847, -193.732, 1.11", "37.7663, 13.9278, -198.993, 0.28", "37.747, 14.0957, -199.495, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-21.3721, -9.23096, -15.9964, 0.83", "-21.0772, -11.4896, -15.7378, 0.83", "-19.592, -18.7076, -15.7432, 0.83", "-18.9044, -21.2254, -15.9732, 0.83", "-17.4827, -25.4709, -16.6664, 0.83", "-16.2813, -29.0779, -17.3819, 0.83", "-14.7496, -34.5396, -18.5764, 0.83", "-14.1542, -36.8061, -19.2968, 0.83", "-13.1184, -40.8725, -21.0745, 0.83", "-11.979, -45.7636, -23.3929, 0.83", "-11.4496, -48.5593, -24.8901, 0.83", "-10.7822, -53.5991, -27.6044, 0.83", "-10.6022, -56.4241, -29.2323, 0.83", "-10.6385, -58.4693, -30.4751, 0.83", "-10.8702, -60.3382, -31.7513, 0.83", "-11.7107, -63.8911, -34.6537, 1.39" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-21.3721, -9.23096, -15.9964, 1.11", "-25.3798, -12.958, -9.10453, 1.11", "-27.8024, -15.2109, -4.93849, 1.11", "-28.8999, -16.2315, -3.05113, 1.11", "-29.7939, -17.0629, -1.5137, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-6.20579, -34.3505, 0.87768, 0.83", "-7.92239, -37.2019, 0.471538, 0.83", "-8.67731, -38.5226, 0.344185, 0.83", "-9.59792, -40.4638, 0.271215, 0.83", "-10.8212, -43.5029, 0.385381, 0.83", "-11.5064, -45.2482, 0.614814, 0.83", "-12.4789, -47.7968, 1.1426, 0.83", "-13.3575, -50.5443, 2.09398, 0.83", "-13.93, -53.0605, 3.20262, 0.83", "-14.2874, -55.1438, 4.24832, 0.83", "-14.713, -58.4275, 5.98466, 0.83", "-14.81, -60.1262, 6.87456, 0.83", "-14.7816, -62.2762, 7.96936, 0.83", "-14.6456, -65.1606, 9.37457, 0.83", "-14.5093, -67.8822, 10.5239, 0.55", "-14.2595, -70.5749, 11.5023, 0.55", "-14.001, -72.4798, 12.086, 0.55", "-13.9183, -73.6231, 12.3848, 0.83", "-13.9326, -75.3278, 12.9442, 0.55", "-14.0071, -76.0198, 13.2322, 0.55", "-14.3959, -78.8523, 14.6558, 0.55", "-14.6756, -80.2426, 15.412, 0.55", "-15.3544, -82.4954, 16.7337, 0.55", "-16.5236, -85.7858, 18.5954, 0.55", "-17.2027, -87.6624, 19.7097, 0.55", "-17.877, -89.4187, 20.7877, 0.55", "-18.0539, -89.8287, 21.0435, 0.55", "-18.77, -91.3909, 22.0622, 0.55", "-19.567, -93.0513, 23.13, 0.83", "-21.2706, -96.1571, 24.7608, 0.28", "-22.0075, -97.3509, 25.4312, 0.28", "-22.1913, -97.6138, 25.5901, 0.55", "-22.8364, -98.5613, 26.1394, 0.28", "-23.1238, -99.0087, 26.3616, 0.55", "-23.9007, -99.9183, 26.8717, 0.28", "-24.3668, -100.278, 26.873, 0.28", "-24.8442, -106.433, 28.5273, 0.28", "-25.1542, -112.517, 30.4812, 0.28", "-25.4318, -118.082, 33.7303, 0.28", "-25.1438, -123.727, 36.8187, 0.28", "-25.4337, -129.225, 40.1897, 0.28", "-25.9938, -135.265, 42.2426, 0.28", "-27.1913, -140.927, 45.0711, 0.28", "-28.9794, -146.369, 48.0617, 0.28", "-29.4239, -151.846, 51.4555, 0.28", "-29.1283, -156.968, 55.4268, 0.28", "-29.1907, -161.264, 60.3759, 0.28", "-27.9585, -166.022, 64.657, 0.28", "-26.0578, -170.361, 69.1787, 0.28", "-25.4093, -175.476, 73.118, 0.28", "-23.4633, -179.551, 77.8862, 0.28", "-22.0673, -183.809, 82.6698, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-6.20579, -34.3505, 0.87768, 0.55", "-5.32554, -36.2767, -0.232114, 0.55", "-4.91336, -37.2516, -0.78985, 0.55", "-4.11888, -39.1208, -2.04481, 0.83", "-3.21154, -41.5675, -3.51894, 0.83", "-2.65412, -43.4076, -4.57824, 0.83", "-2.18746, -45.2032, -5.57001, 0.83", "-1.99259, -46.2125, -6.09021, 0.83", "-1.47648, -49.1461, -7.53445, 0.55", "-0.917216, -51.8981, -8.9443, 0.83", "-0.380626, -54.4307, -10.0507, 1.11", "-0.0755212, -55.7494, -10.529, 0.55", "0.255884, -56.9346, -10.8886, 0.55", "0.75721, -58.4356, -11.2992, 0.83", "1.93537, -61.4113, -11.9497, 0.55", "2.41508, -62.4157, -12.1947, 0.28", "3.56043, -64.4343, -12.6521, 0.55", "4.15273, -65.411, -12.8786, 0.28", "4.5241, -66.0257, -13.0277, 0.55", "4.93166, -66.6263, -13.1748, 0.28", "5.31012, -67.1619, -13.2073, 0.55", "7.03196, -69.4213, -13.2977, 0.28", "7.54637, -70.0736, -13.3389, 0.83", "8.50906, -71.2577, -13.1228, 0.83", "9.21059, -72.1849, -12.7874, 0.83", "10.6213, -74.2231, -12.0763, 0.28", "10.7752, -74.4956, -11.9629, 0.83", "11.3727, -75.8272, -11.3544, 0.28", "12.4178, -78.4927, -10.3192, 0.55", "12.6445, -79.2392, -10.0335, 0.55", "13.1254, -81.687, -9.23794, 0.83", "13.4777, -83.8178, -8.88805, 0.55", "13.5693, -84.5347, -8.81187, 0.55", "13.6816, -86.0003, -8.73266, 0.55", "13.7412, -87.4282, -8.77279, 0.28", "13.8324, -88.7154, -8.80542, 0.55", "14.167, -91.9638, -8.94126, 0.28", "14.3493, -93.0771, -9.06229, 0.83", "14.5602, -94.0832, -9.18637, 0.28", "14.7824, -94.8618, -9.28973, 0.55", "15.4394, -96.4271, -9.42788, 0.28", "15.84, -97.1121, -9.40318, 0.55", "16.3365, -97.7746, -9.26648, 0.28", "16.69, -98.1527, -9.17481, 1.11", "17.5832, -99.0297, -8.83835, 0.55", "19.0308, -100.364, -8.17123, 0.28", "19.9114, -101.153, -7.70835, 0.28", "20.7599, -101.952, -7.21556, 0.55", "22.4276, -103.611, -6.07522, 0.28", "23.8115, -105.087, -5.02631, 0.55", "24.5613, -105.949, -4.39838, 0.55", "25.302, -106.857, -3.73323, 0.28", "25.8973, -107.678, -3.15357, 0.28", "27.0187, -109.252, -2.02615, 0.83", "27.7043, -110.229, -1.34998, 0.28", "27.9227, -110.502, -1.21928, 0.55", "28.6154, -111.317, -0.932326, 0.28", "29.3476, -112.078, -0.902406, 0.28", "29.9393, -112.641, -1.03657, 0.55", "30.6724, -113.359, -1.34512, 0.28", "32.2093, -114.97, -2.07439, 0.83", "32.6142, -115.44, -2.31783, 0.83", "33.9077, -117.074, -3.18394, 0.28", "34.7619, -118.161, -3.74842, 0.28", "35.2017, -118.762, -4.08637, 0.28", "35.6417, -119.408, -4.42273, 0.83", "37.1881, -121.863, -5.59044, 0.28", "37.6885, -122.645, -5.9839, 0.83", "38.2359, -123.501, -6.42321, 0.83", "39.3162, -125.164, -7.41877, 0.28", "40.132, -126.364, -8.20675, 0.55", "41.6092, -128.486, -9.70523, 0.28", "41.7305, -128.663, -9.82453, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "14.0713, -25.8266, -7.40573, 0.83", "14.6876, -27.9017, -8.34623, 0.83", "15.4272, -30.0025, -9.34052, 0.28", "15.4985, -30.1664, -9.41754, 0.83", "15.8935, -30.9953, -9.85232, 0.28", "17.1433, -33.6187, -11.37, 0.83", "17.829, -35.107, -12.2257, 0.55", "18.1438, -35.753, -12.6104, 0.55", "18.6031, -36.6579, -13.1631, 0.83", "19.6582, -38.5458, -14.1845, 0.83", "21.3229, -41.2961, -15.4293, 0.55", "22.0526, -42.4791, -15.7881, 0.55", "22.4849, -43.2219, -15.9513, 0.55", "23.1812, -44.3979, -16.1327, 0.28", "24.3382, -46.2963, -16.2443, 0.55", "25.1013, -47.436, -16.1525, 0.28", "26.0646, -48.8853, -15.9529, 0.83", "26.6302, -49.7518, -15.7985, 0.28", "26.9132, -50.2259, -15.7006, 0.55", "27.4399, -51.1996, -15.5111, 0.28", "27.5306, -51.366, -15.4813, 0.83", "28.9543, -53.6608, -15.22, 0.28", "30.09, -55.3588, -14.975, 1.11", "30.7433, -56.3251, -14.8028, 1.66", "31.7557, -57.7834, -14.5055, 0.28", "32.2045, -58.4142, -14.3627, 0.55", "33.0302, -59.5328, -14.0833, 0.28", "34.3668, -61.2035, -13.6294, 0.83", "35.7727, -62.9344, -13.0612, 0.28", "36.1251, -63.3226, -12.9106, 0.83", "36.5088, -63.741, -12.7273, 0.83", "37.3042, -64.6147, -12.3461, 0.28", "37.7124, -65.0702, -12.1883, 0.83", "39.7241, -67.2681, -11.5876, 0.83", "41.427, -69.0874, -11.0816, 0.28", "42.7422, -70.5054, -10.7078, 0.28", "43.0404, -70.8264, -10.6311, 0.83", "44.5545, -72.5295, -10.3102, 0.28", "45.4465, -73.6689, -10.196, 1.11" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "14.0713, -25.8266, -7.40573, 0.83", "18.2073, -26.9511, -3.7769, 0.83", "20.3788, -27.5628, -2.45446, 0.55", "21.5617, -27.7544, -2.06276, 0.55", "22.9907, -27.9633, -1.75123, 0.55", "23.7358, -28.077, -1.623, 0.55", "25.6759, -28.3732, -1.33297, 0.28", "29.0915, -28.8017, -1.08477, 0.83", "33.7061, -29.2847, -0.636311, 0.83", "35.4494, -29.4364, -0.408215, 0.55", "36.678, -29.5557, -0.174004, 0.28", "37.4313, -29.6212, 0.00336532, 0.83", "40.3243, -29.7515, 0.839986, 0.55", "40.9829, -29.7504, 1.08545, 0.55", "43.2985, -29.64, 2.16552, 0.55", "44.931, -29.417, 2.88594, 0.55", "46.0247, -29.2255, 3.41463, 0.55", "47.8339, -28.8856, 4.39601, 0.55", "49.2908, -28.5973, 4.96678, 0.28", "50.3105, -28.4059, 5.23492, 0.55", "51.0656, -28.3082, 5.44629, 0.55", "54.2241, -28.0537, 6.1401, 0.55", "56.3992, -28.0036, 6.36681, 0.55", "60.4847, -28.2713, 6.57377, 0.55", "64.3804, -28.7617, 6.596, 0.55", "68.2221, -29.3901, 6.46735, 0.55", "71.9629, -30.135, 6.30943, 0.83", "75.9683, -31.1373, 6.03651, 0.55", "78.2543, -31.8683, 5.98047, 0.55", "79.7623, -32.4928, 6.13217, 0.28", "80.5619, -32.8978, 6.24819, 0.83", "82.9497, -34.1091, 6.62237, 0.28", "84.0388, -34.6648, 7.00908, 0.55", "85.7832, -35.4031, 7.66798, 0.55", "86.6531, -35.6642, 7.8699, 0.55", "88.3666, -36.0206, 8.08816, 0.28", "90.1852, -36.2343, 8.1199, 0.55", "91.0927, -36.2274, 8.05335, 0.55", "93.7204, -35.9534, 7.83594, 0.28", "94.2595, -35.8324, 7.78358, 0.55", "95.7778, -35.3129, 7.64081, 0.28", "97.4302, -34.5833, 7.51058, 0.55", "99.1278, -33.6394, 7.43353, 0.28", "100.056, -33.0221, 7.45961, 0.55", "101.662, -31.8621, 7.66508, 0.28", "102.226, -31.4463, 7.7704, 0.55", "102.87, -31.0185, 7.89471, 0.28", "103.831, -30.4906, 8.08461, 0.55", "105.06, -29.9213, 8.35183, 0.28", "106.443, -29.3769, 8.67173, 0.83", "108.432, -28.7827, 9.16025, 0.28", "110.453, -28.2639, 9.65826, 0.83", "112.423, -27.8419, 10.1298, 0.28" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "9.9967, -7.83318, -123.797, 0.28", "8.18533, -6.50767, -130.781, 0.28", "8.02791, -6.29195, -132.522, 0.83", "8.88035, -7.01173, -136.919, 0.28", "9.05022, -7.48914, -138.221, 0.83", "9.24386, -8.17015, -139.628, 0.28", "9.30835, -8.50441, -140.385, 0.55", "9.48026, -10.3404, -144.361, 0.28", "9.56813, -11.9409, -148.033, 1.39", "9.58905, -14.173, -153.298, 0.28", "9.53676, -14.8761, -155.098, 1.39", "9.13816, -18.1267, -164.005, 0.28", "9.11995, -18.2265, -164.29, 0.55", "8.83635, -19.3659, -167.534, 0.28", "8.75281, -19.7353, -168.612, 1.39", "8.25977, -22.635, -177.377, 0.28", "8.24991, -22.7194, -177.626, 0.55", "8.22161, -23.9708, -180.717, 0.28", "8.23084, -24.2026, -181.241, 0.28", "8.53796, -26.9851, -186.788, 0.28", "8.82853, -28.6647, -189.753, 2.22", "9.6108, -31.5999, -193.825, 0.55", "10.0708, -33.1599, -195.737, 0.28", "10.2727, -33.7661, -196.302, 0.55", "10.7279, -35.0138, -197.219, 0.28", "10.9995, -35.699, -197.529, 0.28", "11.5232, -37.0335, -197.943, 0.28", "11.9708, -38.261, -198.376, 1.11", "13.8743, -43.8527, -200.875, 0.28", "14.0396, -44.3761, -201.146, 0.55", "14.8751, -47.166, -202.755, 0.28", "15.1617, -48.031, -203.179, 1.11", "16.9791, -53.1989, -205.32, 0.28", "17.0986, -53.4895, -205.421, 0.55", "18.0763, -55.4996, -205.844, 0.28", "18.3471, -56.0203, -205.927, 0.83", "21.9349, -62.0538, -206.179, 0.28", "22.404, -62.7536, -206.112, 0.28", "24.4315, -65.3991, -205.147, 0.28", "25.0094, -66.1279, -204.851, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.9967, -7.83318, -123.797, 0.28", "11.5194, -8.2669, -122.025, 0.28", "12.0648, -8.42227, -121.391, 1.11", "14.239, -9.04157, -118.861, 0.28", "14.5228, -9.12243, -118.531, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.7107, -63.8911, -34.6537, 0.55", "-12.4556, -63.9447, -35.5099, 0.55", "-13.7993, -64.0544, -37.1073, 0.55", "-15.8421, -64.3011, -39.5364, 1.11", "-17.8469, -64.4219, -42.3153, 0.55", "-18.347, -64.4509, -43.0652, 0.55", "-20.58, -64.5743, -46.6023, 0.28", "-20.9822, -64.5946, -47.2996, 0.55", "-21.3775, -64.5916, -48.0876, 0.55", "-24.2103, -64.4686, -53.8975, 0.55", "-24.4915, -64.4557, -54.5629, 0.28", "-24.6413, -64.4392, -54.9602, 0.83", "-25.157, -64.3493, -56.2719, 0.55", "-26.5622, -64.0494, -59.7418, 0.83", "-28.1277, -63.7123, -63.5157, 0.55", "-28.776, -63.5664, -65.0745, 0.55", "-29.2293, -63.441, -66.2207, 1.11", "-30.6113, -63.0183, -69.937, 1.11", "-30.9485, -62.9042, -70.8752, 0.55", "-31.4297, -62.7589, -72.2092, 0.83", "-32.7025, -62.3721, -76.0766, 0.55", "-33.6488, -62.0798, -78.7536, 0.55", "-34.507, -61.7843, -81.3288, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-11.7107, -63.8911, -34.6537, 0.55", "-10.8885, -66.283, -35.7114, 0.55", "-10.1598, -68.1082, -36.8177, 0.55", "-9.3056, -70.2299, -38.1838, 0.83", "-8.9984, -70.9731, -38.6812, 0.28", "-7.93825, -73.3341, -40.2164, 0.83", "-7.29693, -74.6025, -40.9759, 0.83", "-5.46467, -77.4591, -42.6503, 0.83", "-5.04198, -78.0298, -42.9473, 0.28", "-4.47991, -78.7638, -43.2137, 0.83", "-3.44037, -80.1216, -43.3435, 0.28", "-2.12575, -81.9252, -42.6455, 0.83", "-1.37969, -83.0369, -41.8303, 0.55", "-1.26569, -83.2072, -41.6538, 0.55", "-0.60109, -84.3238, -40.5403, 0.55", "-0.0228237, -85.6841, -39.328, 0.28", "0.116276, -86.2475, -38.9386, 0.28", "0.333754, -86.9909, -38.5468, 0.28", "1.22894, -89.1043, -37.6751, 0.55", "1.70176, -90.0608, -37.3428, 0.28", "2.30078, -91.084, -37.0255, 0.55", "2.65546, -91.6574, -36.8571, 0.55", "4.19747, -94.2974, -36.1175, 0.28", "4.45563, -94.7936, -35.9901, 0.55", "5.55171, -97.0487, -35.5405, 0.55", "6.82073, -99.5466, -34.9863, 0.28", "7.36331, -100.603, -34.7413, 0.55", "7.96241, -101.918, -34.4453, 0.28", "8.22867, -102.815, -34.2849, 0.55", "8.47042, -103.75, -34.1483, 0.55", "12.4307, -109.352, -33.8518, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-29.7939, -17.0629, -1.5137, 0.55", "-34.052, -16.4944, -2.72804, 0.55", "-37.2649, -15.9647, -3.58971, 0.55", "-42.9484, -15.2358, -5.06615, 0.55", "-48.8465, -14.5077, -6.7042, 0.55", "-51.8848, -14.0669, -7.5277, 0.55", "-55.9541, -13.3764, -8.5821, 0.83", "-60.4406, -12.5394, -9.76662, 0.55", "-66.7073, -11.1586, -11.5799, 0.83", "-71.4311, -9.81992, -12.9308, 0.55", "-74.0765, -8.96666, -13.5007, 0.55", "-75.8105, -8.31852, -13.7834, 0.55", "-79.1837, -6.93529, -14.0874, 0.55", "-82.2542, -5.29184, -14.2489, 0.55", "-83.9515, -4.09619, -14.1588, 0.55", "-85.9361, -2.67497, -13.8247, 0.55", "-87.6742, -1.57671, -13.5329, 0.55", "-90.0784, -0.145337, -12.9747, 1.66", "-91.8077, 0.928836, -12.2259, 2.49" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-29.7939, -17.0629, -1.5137, 0.83", "-32.1274, -16.58, -1.37116, 0.83", "-35.6771, -15.8454, -1.15434, 0.83", "-39.1057, -15.1359, -0.944894, 0.55", "-41.5631, -14.6274, -0.794785, 0.55", "-48.6978, -13.1509, -0.358966, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "45.4465, -73.6689, -10.196, 0.28", "45.0876, -75.8872, -11.3949, 0.28", "44.9101, -76.831, -11.8694, 0.55", "44.5516, -78.8204, -12.7193, 0.28", "44.3313, -79.9948, -13.1655, 0.83", "42.3349, -90.5822, -17.498, 0.28", "42.0271, -92.1521, -18.1604, 1.39", "41.7149, -93.4461, -18.8482, 1.11", "41.1099, -95.575, -20.1436, 0.28", "40.8427, -96.2114, -20.5416, 0.83", "38.0547, -100.791, -23.3247, 0.28", "37.6716, -101.106, -23.4788, 0.55", "34.3159, -103.025, -24.6413, 0.28", "33.9704, -103.141, -24.7344, 0.83", "27.934, -104.13, -25.8926, 0.28", "27.0025, -104.14, -25.9695, 0.55", "24.6059, -103.748, -25.8708, 0.28", "23.1284, -103.332, -25.856, 1.11", "20.736, -102.3, -25.8694, 0.28", "20.5067, -102.168, -25.8953, 0.55", "19.5157, -101.385, -26.1367, 0.28", "18.2569, -100.363, -26.442, 1.39", "15.8261, -98.5117, -27.2263, 0.28", "15.1901, -98.1011, -27.483, 1.11", "14.0465, -97.4817, -27.9601, 0.28", "12.8859, -96.878, -28.446, 1.66", "10.3265, -95.6477, -29.5096, 0.28", "7.82893, -94.517, -30.5552, 0.55", "2.54661, -92.275, -32.6694, 0.28", "0.61983, -91.5292, -33.5054, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "45.4465, -73.6689, -10.196, 0.28", "46.834, -75.0087, -10.1005, 0.28", "49.4687, -77.5449, -9.89787, 0.28", "50.3991, -78.4205, -9.82402, 1.11", "51.2871, -79.3273, -9.75022, 1.11", "52.8208, -80.9588, -9.62025, 0.28", "53.153, -81.3236, -9.58946, 0.55", "55.0327, -83.5664, -9.36398, 0.28", "55.3665, -84.01, -9.2469, 0.55", "57.4112, -87.2622, -8.04111, 0.28", "57.5218, -87.4629, -7.95301, 0.55", "58.2074, -88.8215, -7.23409, 0.28", "58.5453, -89.5405, -6.79431, 1.11", "60.883, -94.8981, -3.15148, 0.28", "61.6261, -96.6181, -1.90328, 0.55", "61.9309, -97.2957, -1.37142, 0.28", "62.6358, -98.7288, -0.236702, 0.83", "64.1863, -101.449, 2.18243, 0.28", "64.891, -102.491, 3.1935, 0.28", "65.211, -102.81, 3.53041, 0.55", "66.0285, -103.451, 4.27691, 0.28", "66.9206, -104.146, 4.96216, 0.55", "69.6805, -106.05, 6.92598, 0.28", "69.874, -106.175, 7.05649, 0.55", "72.2686, -107.698, 8.39944, 0.28", "72.8748, -108.143, 8.67497, 0.83", "75.9797, -110.521, 10.0842, 0.28", "79.6533, -113.303, 11.5524, 0.83", "81.8413, -114.842, 12.25, 0.55", "84.3461, -116.574, 13.1172, 0.28", "86.8388, -118.264, 14.1217, 0.28", "89.2329, -119.768, 15.179, 0.55", "91.2025, -120.813, 16.1364, 0.28", "92.3745, -121.465, 16.4477, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-91.8077, 0.928836, -12.2259, 0.55", "-93.2689, 4.2324, -14.8454, 0.55", "-93.6089, 4.95827, -15.4747, 0.55", "-95.1379, 8.02343, -18.2546, 1.94", "-97.8002, 13.0116, -22.9827, 0.55", "-97.9892, 13.3347, -23.3171, 0.83", "-98.7691, 14.5663, -24.6633, 0.28", "-100.682, 17.2875, -27.9781, 1.66", "-102.658, 20.0733, -31.4694, 0.55", "-103.056, 20.6696, -32.2317, 0.83", "-104.503, 23.0982, -35.3204, 0.28", "-105.045, 24.212, -36.618, 1.11", "-107.535, 30.3241, -43.2115, 0.28", "-107.86, 31.2633, -44.1172, 0.83", "-108.598, 33.7249, -46.3071, 0.55", "-109.433, 36.3487, -48.5375, 1.66", "-110.745, 40.116, -51.6524, 0.28", "-110.811, 40.2719, -51.7915, 0.55", "-112.293, 43.1321, -54.5573, 0.28", "-114.053, 45.9867, -57.7061, 1.94", "-116.639, 49.5654, -62.0152, 0.28", "-118.219, 51.4289, -64.4858, 0.83", "-121.867, 55.1723, -70.0006, 0.28", "-122.482, 55.746, -70.8969, 0.83", "-125.293, 58.0981, -74.8855, 0.28", "-125.661, 58.3729, -75.37, 0.55", "-126.923, 59.2406, -76.9003, 0.28", "-127.246, 59.4448, -77.2369, 0.83", "-130.541, 61.336, -80.0167, 0.28", "-132.883, 62.5825, -81.7258, 0.83", "-134.293, 63.2558, -82.6057, 0.28", "-134.552, 63.3817, -82.7738, 0.55", "-137.247, 64.7313, -84.6011, 0.28", "-138.134, 65.144, -85.1621, 0.55", "-141.676, 66.329, -86.993, 0.28", "-142.507, 66.5357, -87.3763, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-91.8077, 0.928836, -12.2259, 0.28", "-95.0338, 1.22054, -11.3609, 0.28", "-98.7178, 1.67503, -10.6438, 0.55", "-102.865, 2.19979, -9.99777, 0.55", "-104.587, 2.33922, -9.6476, 0.55", "-106.306, 2.41727, -9.15475, 0.28", "-108.321, 2.5296, -8.56584, 0.55", "-111.553, 2.7518, -7.74429, 0.28", "-113.651, 3.01918, -7.49564, 0.55", "-117.729, 3.83333, -8.39601, 0.28", "-120.539, 4.68085, -9.61212, 0.28", "-124.034, 6.04082, -11.6597, 0.55", "-126.4, 7.11572, -13.393, 0.55", "-129.51, 8.71655, -16.1803, 1.94", "-132.695, 10.5719, -19.5044, 0.28", "-133.76, 11.2407, -20.7379, 0.28", "-134.283, 11.5644, -21.3906, 1.39" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-134.283, 11.5644, -21.3906, 0.28", "-136.588, 11.9986, -23.3007, 0.28", "-137.192, 12.0968, -23.7648, 0.83", "-138.253, 12.2422, -24.5356, 0.28", "-140.931, 12.5691, -26.4014, 0.83", "-148.256, 13.0796, -30.8201, 0.28", "-149.992, 13.1033, -31.7153, 1.39", "-152.211, 13.1987, -32.9173, 0.28", "-153.154, 13.2412, -33.4149, 0.55", "-153.589, 13.2472, -33.6267, 0.55", "-159.747, 12.0807, -34.7571, 0.28", "-160.742, 11.2942, -33.926, 1.39" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-134.283, 11.5644, -21.3906, 0.28", "-139.928, 13.9884, -25.4913, 0.28", "-141.017, 14.3711, -26.43, 0.83", "-145.029, 15.5478, -30.1773, 0.28", "-145.618, 15.6557, -30.8073, 0.83", "-149.339, 15.9395, -34.8792, 0.28", "-150.909, 15.9347, -36.616, 0.55", "-154.094, 15.2327, -40.6779, 0.28", "-154.575, 15.0634, -41.3389, 0.55", "-157.36, 13.4287, -45.5267, 0.28", "-158.772, 12.5391, -47.5991, 0.83", "-159.357, 12.1324, -48.3999, 0.83", "-160.512, 11.58, -49.7623, 0.83", "-164.631, 10.1564, -53.8324, 0.28", "-166.139, 9.93043, -55.2003, 0.28", "-170.842, 10.1337, -59.37, 0.28", "-172.26, 10.3993, -60.6645, 1.11", "-177.17, 11.7168, -65.0149, 0.28", "-178.064, 12.0076, -65.7767, 0.83", "-182.343, 13.7396, -69.3025, 0.28", "-185.459, 15.2755, -71.9167, 0.83", "-188.688, 17.3207, -74.8794, 0.28", "-189.448, 17.8625, -75.6455, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_13", "dend_8", "dend_1", "dend_0", "dend_32", "dend_27", "dend_25", "dend_14", "dend_12", "dend_9", "dend_3", "dend_2", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_15", "dend_11", "dend_10", "dend_5", "dend_4", "dend_31", "dend_30", "dend_24", "dend_23", "dend_17", "dend_16", "dend_7", "dend_6", "dend_21", "dend_18", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_13", "dend_8", "dend_1", "dend_0", "dend_32", "dend_27", "dend_25", "dend_14", "dend_12", "dend_9", "dend_3", "dend_2", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_15", "dend_11", "dend_10", "dend_5", "dend_4", "dend_31", "dend_30", "dend_24", "dend_23", "dend_17", "dend_16", "dend_7", "dend_6", "dend_21", "dend_18", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_13", "dend_8", "dend_1", "dend_0", "axon_0", "dend_32", "dend_27", "dend_25", "dend_14", "dend_12", "dend_9", "dend_3", "dend_2", "axon_1", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_15", "dend_11", "dend_10", "dend_5", "dend_4", "dend_31", "dend_30", "dend_24", "dend_23", "dend_17", "dend_16", "dend_7", "dend_6", "dend_21", "dend_18", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_NBC_2eca058e75_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_13
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_14
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_13, dend_8, dend_1, dend_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_13, dend_8, dend_1, dend_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_13, dend_8, dend_1, dend_0, axon_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, axon_1, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999976551736225)
    connect dend_13(0), soma_0(0.49999976551736225)
    connect dend_8(0), soma_0(0.49999976551736225)
    connect dend_1(0), soma_0(0.49999976551736225)
    connect dend_0(0), soma_0(0.49999976551736225)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.09764, -8.67532, 0.645002, 2.68797 ) }
    soma_0 { pt3dadd( -4.60344, -7.96551, 0.570575, 4.73408 ) }
    soma_0 { pt3dadd( -4.10924, -7.25569, 0.496148, 7.4359 ) }
    soma_0 { pt3dadd( -3.61503, -6.54587, 0.421721, 8.59973 ) }
    soma_0 { pt3dadd( -3.12083, -5.83605, 0.347294, 9.0848 ) }
    soma_0 { pt3dadd( -2.62663, -5.12623, 0.272868, 9.56987 ) }
    soma_0 { pt3dadd( -2.13243, -4.41641, 0.198441, 10.0549 ) }
    soma_0 { pt3dadd( -1.63822, -3.70659, 0.124014, 10.54 ) }
    soma_0 { pt3dadd( -1.14402, -2.99677, 0.049587, 11.0283 ) }
    soma_0 { pt3dadd( -0.649817, -2.28695, -0.0248399, 11.5469 ) }
    soma_0 { pt3dadd( -0.155615, -1.57714, -0.0992667, 12.0729 ) }
    soma_0 { pt3dadd( 0.338588, -0.867317, -0.173694, 12.4151 ) }
    soma_0 { pt3dadd( 0.832791, -0.157498, -0.24812, 12.7013 ) }
    soma_0 { pt3dadd( 1.32699, 0.552321, -0.322547, 12.6038 ) }
    soma_0 { pt3dadd( 1.8212, 1.26214, -0.396974, 12.4311 ) }
    soma_0 { pt3dadd( 2.3154, 1.97196, -0.471401, 12.1547 ) }
    soma_0 { pt3dadd( 2.8096, 2.68178, -0.545828, 11.8066 ) }
    soma_0 { pt3dadd( 3.3038, 3.3916, -0.620255, 10.9507 ) }
    soma_0 { pt3dadd( 3.79801, 4.10142, -0.694681, 9.34672 ) }
    soma_0 { pt3dadd( 4.29221, 4.81123, -0.769108, 7.74278 ) }
    soma_0 { pt3dadd( 4.78641, 5.52105, -0.843535, 4.17384 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.6438, 0.497661, -7.80437, 1.94 ) }
    dend_26 { pt3dadd( 5.55026, 1.04442, -10.5814, 1.94 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 23/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.8862, -6.85533, -7.80437, 2.49 ) }
    dend_13 { pt3dadd( -11.0887, -6.77223, -9.58311, 2.49 ) }
    dend_13 { pt3dadd( -16.0369, -6.67439, -11.6775, 2.49 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 26/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.2562, -9.57234, 2.88563, 1.66 ) }
    dend_8 { pt3dadd( -1.74944, -11.263, 3.11737, 1.66 ) }
    dend_8 { pt3dadd( -3.1918, -16.2068, 3.79504, 1.11 ) }
    dend_8 { pt3dadd( -4.6182, -21.0959, 4.46522, 1.11 ) }
    dend_8 { pt3dadd( -6.28871, -26.8217, 5.25009, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 31/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.4238, 0.374161, 2.48563, 2.22 ) }
    dend_1 { pt3dadd( 10.4492, -0.426352, 2.48563, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 33/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.1838, 5.16217, 7.68563, 0.83 ) }
    dend_0 { pt3dadd( 4.84889, 5.88891, 8.22784, 0.83 ) }
    dend_0 { pt3dadd( 5.65337, 7.14217, 9.9, 1.39 ) }
    dend_0 { pt3dadd( 6.48974, 8.73536, 11.9579, 0.83 ) }
    dend_0 { pt3dadd( 6.85337, 9.64443, 13.0452, 0.83 ) }
    dend_0 { pt3dadd( 7.66706, 11.9313, 15.6059, 0.83 ) }
    dend_0 { pt3dadd( 8.78566, 14.8817, 18.769, 0.83 ) }
    dend_0 { pt3dadd( 9.30517, 16.5115, 20.8192, 0.83 ) }
    dend_0 { pt3dadd( 9.4271, 17.0582, 21.5461, 0.83 ) }
    dend_0 { pt3dadd( 9.54417, 17.8327, 22.662, 0.55 ) }
    dend_0 { pt3dadd( 9.58233, 18.2763, 23.2801, 0.55 ) }
    dend_0 { pt3dadd( 9.57591, 19.2114, 24.2651, 0.55 ) }
    dend_0 { pt3dadd( 9.48533, 21.6863, 26.2576, 0.55 ) }
    dend_0 { pt3dadd( 9.48535, 23.0799, 27.5144, 0.83 ) }
    dend_0 { pt3dadd( 9.51956, 24.8983, 29.2274, 0.55 ) }
    dend_0 { pt3dadd( 9.52826, 25.4017, 29.7057, 0.83 ) }
    dend_0 { pt3dadd( 9.46753, 26.9993, 31.2158, 0.28 ) }
    dend_0 { pt3dadd( 9.27905, 29.0475, 33.0735, 0.83 ) }
    dend_0 { pt3dadd( 9.16435, 31.0615, 34.7121, 0.83 ) }
    dend_0 { pt3dadd( 9.22637, 32.1493, 35.7535, 0.28 ) }
    dend_0 { pt3dadd( 9.25611, 32.3136, 35.9135, 0.55 ) }
    dend_0 { pt3dadd( 10.0356, 36.6408, 40.0919, 0.55 ) }
    dend_0 { pt3dadd( 11.5618, 40.9989, 44.0173, 0.55 ) }
    dend_0 { pt3dadd( 13.6371, 45.52, 47.4522, 0.55 ) }
    dend_0 { pt3dadd( 14.8077, 49.79, 51.6026, 0.55 ) }
    dend_0 { pt3dadd( 15.4911, 53.3659, 56.52, 0.55 ) }
    dend_0 { pt3dadd( 16.512, 57.3885, 60.9736, 0.55 ) }
    dend_0 { pt3dadd( 18.152, 60.7629, 65.8192, 0.55 ) }
    dend_0 { pt3dadd( 20.13, 63.9011, 70.7132, 0.55 ) }
    dend_0 { pt3dadd( 21.1854, 67.3819, 75.6393, 0.55 ) }
    dend_0 { pt3dadd( 23.1119, 70.993, 80.1798, 0.55 ) }
    dend_0 { pt3dadd( 24.539, 75.2954, 84.2097, 0.55 ) }
    dend_0 { pt3dadd( 25.4121, 79.5785, 88.4194, 0.55 ) }
    dend_0 { pt3dadd( 26.0111, 83.0332, 93.4428, 0.55 ) }
    dend_0 { pt3dadd( 25.6892, 86.2606, 98.6577, 0.55 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 68/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.78641, 5.52105, -0.843535, 0.83 ) }
    axon_0 { pt3dadd( 13.3572, 17.8312, -0.843535, 0.83 ) }
    axon_0 { pt3dadd( 21.9281, 30.1414, -0.843535, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 71/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.55026, 1.04442, -10.5814, 0.83 ) }
    dend_32 { pt3dadd( 5.07464, 3.47227, -13.1961, 0.83 ) }
    dend_32 { pt3dadd( 4.44994, 6.18053, -17.0487, 0.83 ) }
    dend_32 { pt3dadd( 4.07452, 7.42418, -18.916, 1.66 ) }
    dend_32 { pt3dadd( 2.93176, 10.4746, -23.5132, 1.11 ) }
    dend_32 { pt3dadd( 2.31929, 11.9061, -25.7371, 1.11 ) }
    dend_32 { pt3dadd( 0.585582, 15.3671, -31.7718, 1.11 ) }
    dend_32 { pt3dadd( -1.48514, 18.2359, -38.9036, 0.83 ) }
    dend_32 { pt3dadd( -2.25475, 18.8297, -41.5626, 0.83 ) }
    dend_32 { pt3dadd( -2.82857, 18.9886, -43.6274, 0.55 ) }
    dend_32 { pt3dadd( -3.26704, 18.9516, -45.1697, 0.55 ) }
    dend_32 { pt3dadd( -4.50843, 18.5358, -49.7584, 1.39 ) }
    dend_32 { pt3dadd( -6.80375, 16.7815, -59.9938, 0.83 ) }
    dend_32 { pt3dadd( -7.12152, 16.4453, -61.3424, 0.83 ) }
    dend_32 { pt3dadd( -8.31618, 14.6744, -67.6984, 0.83 ) }
    dend_32 { pt3dadd( -8.91101, 13.5942, -71.4962, 2.49 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 87/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.55026, 1.04442, -10.5814, 1.11 ) }
    dend_27 { pt3dadd( 4.60956, 1.19551, -12.9645, 1.11 ) }
    dend_27 { pt3dadd( 2.24841, 1.08769, -20.5079, 1.11 ) }
    dend_27 { pt3dadd( 1.19057, 0.733455, -24.664, 1.11 ) }
    dend_27 { pt3dadd( 0.86268, 0.534365, -26.2704, 1.11 ) }
    dend_27 { pt3dadd( -0.790273, -1.2005, -38.9302, 1.11 ) }
    dend_27 { pt3dadd( -1.14529, -1.68046, -43.4423, 1.11 ) }
    dend_27 { pt3dadd( -1.69225, -2.24199, -49.2034, 0.83 ) }
    dend_27 { pt3dadd( -2.01127, -2.49804, -52.1456, 0.83 ) }
    dend_27 { pt3dadd( -2.27755, -2.66979, -54.2297, 0.83 ) }
    dend_27 { pt3dadd( -3.20893, -3.29188, -62.5898, 2.22 ) }
    dend_27 { pt3dadd( -3.21187, -3.96983, -69.9374, 2.22 ) }
    // Section: dend_25, id: dend_25, parent: dend_13 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -16.0369, -6.67439, -11.6775, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( -17.3279, -2.45541, -13.8499, 0.83 ) }
    dend_25 { pt3dadd( -18.0629, -0.240856, -14.689, 0.83 ) }
    dend_25 { pt3dadd( -19.241, 3.2239, -15.7592, 0.83 ) }
    dend_25 { pt3dadd( -19.7457, 4.89598, -16.3036, 0.55 ) }
    dend_25 { pt3dadd( -20.4517, 7.15601, -17.1259, 0.83 ) }
    dend_25 { pt3dadd( -21.0546, 8.90186, -17.7923, 0.28 ) }
    dend_25 { pt3dadd( -22.4738, 12.4086, -19.1832, 0.83 ) }
    dend_25 { pt3dadd( -23.4591, 14.3785, -20.1717, 0.55 ) }
    dend_25 { pt3dadd( -25.8114, 17.3401, -22.0809, 0.28 ) }
    dend_25 { pt3dadd( -28.0825, 18.8591, -23.6948, 0.28 ) }
    dend_25 { pt3dadd( -29.3889, 19.1433, -24.542, 0.28 ) }
    dend_25 { pt3dadd( -32.0442, 18.9746, -26.2488, 0.28 ) }
    dend_25 { pt3dadd( -33.7537, 18.7259, -27.2433, 0.28 ) }
    dend_25 { pt3dadd( -37.6292, 18.0224, -29.2715, 0.55 ) }
    dend_25 { pt3dadd( -42.4053, 17.1085, -31.515, 0.55 ) }
    dend_25 { pt3dadd( -45.0955, 16.6692, -32.7208, 0.55 ) }
    dend_25 { pt3dadd( -47.7115, 16.466, -33.9187, 0.55 ) }
    dend_25 { pt3dadd( -52.5038, 16.6265, -35.9908, 0.55 ) }
    dend_25 { pt3dadd( -53.335, 16.7555, -36.3898, 0.55 ) }
    dend_25 { pt3dadd( -54.5633, 17.0715, -37.0245, 0.28 ) }
    dend_25 { pt3dadd( -55.5245, 17.3645, -37.4787, 0.83 ) }
    dend_25 { pt3dadd( -57.9471, 18.1407, -38.6305, 0.55 ) }
    dend_25 { pt3dadd( -59.7893, 18.6673, -39.5735, 0.55 ) }
    dend_25 { pt3dadd( -62.8963, 19.1646, -41.3929, 1.11 ) }
    dend_25 { pt3dadd( -65.9156, 19.4796, -43.1239, 0.55 ) }
    dend_25 { pt3dadd( -67.027, 19.5659, -43.7952, 0.28 ) }
    dend_25 { pt3dadd( -68.2717, 19.6713, -44.5741, 0.55 ) }
    dend_25 { pt3dadd( -70.0776, 19.8779, -45.8042, 0.28 ) }
    dend_25 { pt3dadd( -72.0416, 20.1728, -47.2883, 1.39 ) }
    dend_25 { pt3dadd( -73.6745, 20.4817, -48.6024, 0.28 ) }
    dend_25 { pt3dadd( -75.0626, 20.8876, -49.8894, 0.83 ) }
    dend_25 { pt3dadd( -75.8679, 21.2035, -50.6812, 0.83 ) }
    dend_25 { pt3dadd( -78.2521, 22.2904, -52.9345, 0.28 ) }
    dend_25 { pt3dadd( -78.8297, 22.5884, -53.4443, 0.55 ) }
    dend_25 { pt3dadd( -80.4258, 23.4809, -54.7143, 0.28 ) }
    dend_25 { pt3dadd( -82.1157, 24.4042, -55.9593, 1.94 ) }
    dend_25 { pt3dadd( -85.6899, 26.2534, -58.2979, 0.28 ) }
    dend_25 { pt3dadd( -87.8684, 27.3672, -59.6327, 0.55 ) }
    dend_25 { pt3dadd( -89.6676, 28.2778, -60.6276, 0.28 ) }
    dend_25 { pt3dadd( -91.6558, 29.2881, -61.6445, 1.66 ) }
    dend_25 { pt3dadd( -95.7506, 31.2971, -63.4688, 0.28 ) }
    dend_25 { pt3dadd( -96.6804, 31.7156, -63.8137, 0.55 ) }
    dend_25 { pt3dadd( -97.4457, 32.0253, -64.0466, 0.28 ) }
    dend_25 { pt3dadd( -100.162, 33.0607, -64.9951, 1.66 ) }
    dend_25 { pt3dadd( -102.465, 33.9367, -65.8349, 0.28 ) }
    dend_25 { pt3dadd( -103.789, 34.4381, -66.373, 1.11 ) }
    dend_25 { pt3dadd( -106.437, 35.4341, -67.514, 0.28 ) }
    dend_25 { pt3dadd( -107.567, 35.8648, -68.0667, 0.83 ) }
    dend_25 { pt3dadd( -111.922, 37.4478, -70.2988, 0.28 ) }
    dend_25 { pt3dadd( -112.627, 37.6849, -70.6688, 0.28 ) }
    dend_25 { pt3dadd( -114.438, 38.1929, -71.6411, 1.66 ) }
    dend_25 { pt3dadd( -117.054, 38.8622, -73.0184, 0.28 ) }
    dend_25 { pt3dadd( -118.588, 39.1848, -73.7616, 0.55 ) }
    dend_25 { pt3dadd( -120.309, 39.4507, -74.5261, 0.28 ) }
    dend_25 { pt3dadd( -122.067, 39.637, -75.2246, 0.55 ) }
    dend_25 { pt3dadd( -125.086, 39.839, -76.4806, 0.28 ) }
    dend_25 { pt3dadd( -125.945, 39.8619, -76.8688, 0.83 ) }
    dend_25 { pt3dadd( -127.614, 39.8525, -77.6641, 0.28 ) }
    dend_25 { pt3dadd( -130.162, 39.819, -79.0779, 0.83 ) }
    dend_25 { pt3dadd( -132.138, 39.797, -80.2761, 0.28 ) }
    dend_25 { pt3dadd( -133.42, 39.8346, -81.1758, 0.55 ) }
    dend_25 { pt3dadd( -136.988, 40.0411, -83.7356, 0.28 ) }
    dend_25 { pt3dadd( -137.949, 40.0954, -84.4143, 1.11 ) }
    dend_25 { pt3dadd( -140.479, 40.3157, -86.2573, 0.28 ) }
    dend_25 { pt3dadd( -141.628, 40.4377, -87.0587, 0.55 ) }
    dend_25 { pt3dadd( -144.371, 40.7609, -89.0434, 0.28 ) }
    dend_25 { pt3dadd( -146.869, 41.11, -90.9283, 0.28 ) }
    dend_25 { pt3dadd( -147.9, 41.2737, -91.6984, 1.11 ) }
    dend_25 { pt3dadd( -151.36, 41.841, -94.2172, 0.28 ) }
    dend_25 { pt3dadd( -151.945, 41.9461, -94.6445, 0.83 ) }
    dend_25 { pt3dadd( -155.026, 42.541, -96.9587, 0.28 ) }
    dend_25 { pt3dadd( -155.849, 42.7171, -97.5815, 0.55 ) }
    dend_25 { pt3dadd( -157.081, 43.0683, -98.6191, 0.28 ) }
    dend_25 { pt3dadd( -157.627, 43.2467, -99.0871, 1.39 ) }
    dend_25 { pt3dadd( -160.325, 44.178, -101.12, 0.28 ) }
    dend_25 { pt3dadd( -160.987, 44.4184, -101.672, 0.55 ) }
    dend_25 { pt3dadd( -163.046, 45.1942, -103.392, 0.28 ) }
    dend_25 { pt3dadd( -163.258, 45.2736, -103.538, 0.83 ) }
    dend_25 { pt3dadd( -164.713, 45.77, -104.34, 0.28 ) }
    dend_25 { pt3dadd( -167.274, 46.6214, -105.414, 1.11 ) }
    dend_25 { pt3dadd( -174.618, 48.9517, -107.417, 0.28 ) }
    dend_25 { pt3dadd( -175.914, 49.3173, -107.787, 1.66 ) }
    dend_25 { pt3dadd( -180.093, 50.36, -108.772, 0.28 ) }
    dend_25 { pt3dadd( -181.068, 50.604, -109.053, 0.55 ) }
    dend_25 { pt3dadd( -182.364, 50.8996, -109.468, 0.28 ) }
    dend_25 { pt3dadd( -183.311, 51.1557, -109.854, 0.83 ) }
    dend_25 { pt3dadd( -187.247, 52.4107, -110.834, 0.28 ) }
    dend_25 { pt3dadd( -188.648, 52.884, -111.364, 1.11 ) }
    dend_25 { pt3dadd( -191.124, 53.7617, -112.746, 0.28 ) }
    dend_25 { pt3dadd( -192.006, 54.0965, -113.268, 0.55 ) }
    dend_25 { pt3dadd( -195.172, 55.3114, -115.202, 0.28 ) }
    dend_25 { pt3dadd( -198.569, 56.9546, -117.148, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 92/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -16.0369, -6.67439, -11.6775, 1.66 ) }
    dend_14 { pt3dadd( -18.5958, -7.90061, -13.749, 1.66 ) }
    dend_14 { pt3dadd( -21.3721, -9.23096, -15.9964, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 95/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -6.28871, -26.8217, 5.25009, 0.55 ) }
    dend_12 { pt3dadd( -8.29129, -29.6213, 7.98332, 0.55 ) }
    dend_12 { pt3dadd( -9.91361, -31.7263, 10.3135, 0.28 ) }
    dend_12 { pt3dadd( -10.2235, -32.1113, 10.6399, 0.55 ) }
    dend_12 { pt3dadd( -11.2768, -33.4998, 11.194, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -12.7612, -35.6821, 9.80857, 0.55 ) }
    dend_12 { pt3dadd( -15.1919, -39.3232, 5.19816, 0.28 ) }
    dend_12 { pt3dadd( -15.3872, -39.5897, 4.64529, 0.83 ) }
    dend_12 { pt3dadd( -16.6976, -41.35, 0.651723, 0.83 ) }
    dend_12 { pt3dadd( -18.7687, -44.125, -6.38945, 0.28 ) }
    dend_12 { pt3dadd( -19.1374, -44.6354, -7.94553, 1.11 ) }
    dend_12 { pt3dadd( -19.8002, -45.7627, -12.074, 0.28 ) }
    dend_12 { pt3dadd( -20.0817, -46.2959, -14.2886, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 8/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -6.28871, -26.8217, 5.25009, 1.11 ) }
    dend_9 { pt3dadd( -6.24284, -30.9867, 2.83125, 1.11 ) }
    dend_9 { pt3dadd( -6.21745, -33.2917, 1.4926, 1.11 ) }
    dend_9 { pt3dadd( -6.20579, -34.3505, 0.87768, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 12/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 10.4492, -0.426352, 2.48563, 0.83 ) }
    dend_3 { pt3dadd( 10.7404, -2.66241, 1.52861, 0.83 ) }
    dend_3 { pt3dadd( 10.9416, -4.34459, 0.813916, 0.83 ) }
    dend_3 { pt3dadd( 11.304, -7.22849, -0.360816, 0.83 ) }
    dend_3 { pt3dadd( 11.7408, -10.2368, -1.50148, 0.83 ) }
    dend_3 { pt3dadd( 12.3253, -14.2624, -3.02783, 0.83 ) }
    dend_3 { pt3dadd( 13.2874, -20.8881, -5.54005, 0.83 ) }
    dend_3 { pt3dadd( 13.5971, -22.9454, -6.30573, 0.83 ) }
    dend_3 { pt3dadd( 13.7827, -24.0711, -6.74715, 0.83 ) }
    dend_3 { pt3dadd( 14.0713, -25.8266, -7.40573, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 22/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 10.4492, -0.426352, 2.48563, 1.11 ) }
    dend_2 { pt3dadd( 13.9496, -1.20508, 6.8419, 1.11 ) }
    dend_2 { pt3dadd( 16.1379, -1.48545, 9.50849, 1.11 ) }
    dend_2 { pt3dadd( 19.8045, -1.78853, 13.7265, 1.11 ) }
    dend_2 { pt3dadd( 25.1124, -2.20911, 19.0488, 1.11 ) }
    dend_2 { pt3dadd( 30.5551, -2.7196, 23.7763, 1.11 ) }
    dend_2 { pt3dadd( 34.9334, -3.26788, 27.2621, 0.83 ) }
    dend_2 { pt3dadd( 38.2596, -3.79144, 30.0736, 0.83 ) }
    dend_2 { pt3dadd( 39.9166, -4.10893, 31.3348, 0.83 ) }
    dend_2 { pt3dadd( 44.1738, -5.14901, 33.6467, 1.39 ) }
    dend_2 { pt3dadd( 46.9567, -5.95596, 34.4471, 0.83 ) }
    dend_2 { pt3dadd( 49.2116, -6.57237, 34.7983, 0.83 ) }
    dend_2 { pt3dadd( 52.7936, -7.78328, 35.3327, 0.83 ) }
    dend_2 { pt3dadd( 55.9446, -9.18522, 36.075, 0.83 ) }
    dend_2 { pt3dadd( 58.514, -10.3657, 36.8894, 0.83 ) }
    dend_2 { pt3dadd( 60.7427, -11.3972, 37.7733, 1.11 ) }
    dend_2 { pt3dadd( 62.7968, -12.3639, 38.7312, 0.83 ) }
    dend_2 { pt3dadd( 68.5409, -15.0918, 41.5157, 0.83 ) }
    dend_2 { pt3dadd( 71.3657, -16.5542, 42.996, 0.83 ) }
    dend_2 { pt3dadd( 75.2948, -18.7841, 45.2737, 1.11 ) }
    dend_2 { pt3dadd( 76.3631, -19.4794, 45.9631, 0.83 ) }
    dend_2 { pt3dadd( 78.2586, -20.7728, 47.1869, 0.83 ) }
    dend_2 { pt3dadd( 79.5811, -21.5931, 47.9986, 0.83 ) }
    dend_2 { pt3dadd( 81.8395, -22.747, 49.0352, 1.11 ) }
    dend_2 { pt3dadd( 83.462, -23.4249, 49.4941, 0.55 ) }
    dend_2 { pt3dadd( 84.7377, -23.9252, 49.6165, 0.55 ) }
    dend_2 { pt3dadd( 87.0421, -24.5255, 49.6933, 0.83 ) }
    dend_2 { pt3dadd( 90.2281, -25.047, 49.6538, 0.83 ) }
    dend_2 { pt3dadd( 93.0738, -25.4363, 49.5829, 0.83 ) }
    dend_2 { pt3dadd( 95.8555, -25.7724, 49.468, 0.83 ) }
    dend_2 { pt3dadd( 99.6138, -26.1784, 49.2716, 1.11 ) }
    dend_2 { pt3dadd( 102.665, -26.4396, 49.1483, 0.83 ) }
    dend_2 { pt3dadd( 104.12, -26.5924, 49.1537, 0.83 ) }
    dend_2 { pt3dadd( 106.411, -26.8475, 49.2793, 0.83 ) }
    dend_2 { pt3dadd( 108.274, -27.1917, 49.5685, 0.83 ) }
    dend_2 { pt3dadd( 110.49, -27.9042, 50.0494, 0.83 ) }
    dend_2 { pt3dadd( 112.904, -28.8743, 50.4841, 1.11 ) }
    dend_2 { pt3dadd( 114.469, -29.619, 50.6862, 1.11 ) }
    dend_2 { pt3dadd( 116.65, -30.751, 50.9942, 0.83 ) }
    dend_2 { pt3dadd( 119.045, -32.1529, 51.1138, 0.55 ) }
    dend_2 { pt3dadd( 121.043, -33.4545, 51.0947, 1.11 ) }
    dend_2 { pt3dadd( 123.59, -35.2428, 50.9373, 0.83 ) }
    dend_2 { pt3dadd( 125.364, -36.5305, 50.7365, 0.28 ) }
    dend_2 { pt3dadd( 129.66, -39.8338, 49.6372, 0.83 ) }
    dend_2 { pt3dadd( 133.397, -42.8663, 48.2136, 0.83 ) }
    dend_2 { pt3dadd( 134.584, -43.8353, 47.5852, 0.28 ) }
    dend_2 { pt3dadd( 135.5, -44.6122, 47.0408, 0.28 ) }
    dend_2 { pt3dadd( 136.777, -45.6954, 46.2734, 0.83 ) }
    dend_2 { pt3dadd( 140.489, -48.7435, 43.9704, 0.28 ) }
    dend_2 { pt3dadd( 141.415, -49.5152, 43.3927, 0.83 ) }
    dend_2 { pt3dadd( 143.545, -51.321, 42.5204, 1.11 ) }
    dend_2 { pt3dadd( 145.21, -52.838, 41.8211, 0.28 ) }
    dend_2 { pt3dadd( 146.477, -53.9682, 41.3524, 0.28 ) }
    dend_2 { pt3dadd( 147.46, -54.8142, 41.0314, 0.28 ) }
    dend_2 { pt3dadd( 148.022, -55.2669, 40.9337, 0.55 ) }
    dend_2 { pt3dadd( 149.001, -56.1101, 40.7827, 0.28 ) }
    dend_2 { pt3dadd( 153.029, -59.794, 40.2743, 0.55 ) }
    dend_2 { pt3dadd( 154.422, -61.0448, 40.0792, 0.28 ) }
    dend_2 { pt3dadd( 154.952, -61.5384, 40.035, 0.55 ) }
    dend_2 { pt3dadd( 156.454, -62.95, 40.0226, 0.28 ) }
    dend_2 { pt3dadd( 157.315, -63.7465, 40.09, 0.83 ) }
    dend_2 { pt3dadd( 158.707, -64.9942, 40.3622, 0.28 ) }
    dend_2 { pt3dadd( 160.647, -66.5632, 41.0236, 0.28 ) }
    dend_2 { pt3dadd( 162.195, -67.7195, 41.3557, 0.28 ) }
    dend_2 { pt3dadd( 163.292, -68.4975, 41.5226, 0.83 ) }
    dend_2 { pt3dadd( 164.388, -69.2329, 41.6404, 0.55 ) }
    dend_2 { pt3dadd( 166.243, -70.3903, 41.7821, 1.94 ) }
    dend_2 { pt3dadd( 170.24, -72.7816, 41.7664, 1.11 ) }
    dend_2 { pt3dadd( 173.861, -74.8308, 41.448, 0.55 ) }
    dend_2 { pt3dadd( 174.796, -75.2924, 41.3113, 0.55 ) }
    dend_2 { pt3dadd( 176.329, -76.0611, 40.9037, 0.28 ) }
    dend_2 { pt3dadd( 177.429, -76.6532, 40.507, 0.83 ) }
    dend_2 { pt3dadd( 180.305, -78.3308, 39.277, 0.28 ) }
    dend_2 { pt3dadd( 181.228, -78.9282, 38.8566, 0.83 ) }
    dend_2 { pt3dadd( 184.11, -80.8586, 37.6952, 0.28 ) }
    dend_2 { pt3dadd( 187.404, -83.6513, 36.309, 0.83 ) }
    dend_2 { pt3dadd( 188.078, -84.3629, 36.029, 0.83 ) }
    dend_2 { pt3dadd( 189.866, -86.6859, 35.428, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_2 { pt3dadd( 191.093, -88.4693, 35.2589, 0.28 ) }
    dend_2 { pt3dadd( 191.28, -88.7686, 35.2638, 0.83 ) }
    dend_2 { pt3dadd( 193.996, -93.4073, 36.0783, 0.28 ) }
    dend_2 { pt3dadd( 194.358, -93.966, 36.2985, 0.55 ) }
    dend_2 { pt3dadd( 195.347, -95.4612, 37.0146, 0.28 ) }
    dend_2 { pt3dadd( 196.481, -97.1648, 38.088, 1.11 ) }
    dend_2 { pt3dadd( 197.374, -98.3591, 39.0872, 0.28 ) }
    dend_2 { pt3dadd( 198.456, -99.6883, 40.3672, 0.55 ) }
    dend_2 { pt3dadd( 199.147, -100.414, 41.2189, 0.28 ) }
    dend_2 { pt3dadd( 199.399, -100.68, 41.4897, 0.55 ) }
    dend_2 { pt3dadd( 201.116, -102.548, 43.1084, 0.28 ) }
    dend_2 { pt3dadd( 202.036, -103.668, 43.8955, 0.83 ) }
    dend_2 { pt3dadd( 203.668, -105.747, 45.1863, 0.28 ) }
    dend_2 { pt3dadd( 204.254, -106.467, 45.574, 0.55 ) }
    dend_2 { pt3dadd( 205.254, -107.56, 46.1735, 0.28 ) }
    dend_2 { pt3dadd( 205.876, -108.146, 46.499, 0.83 ) }
    dend_2 { pt3dadd( 207.108, -109.18, 46.8372, 0.83 ) }
    dend_2 { pt3dadd( 209.042, -110.684, 47.0395, 0.28 ) }
    dend_2 { pt3dadd( 210.093, -111.444, 46.8185, 0.55 ) }
    dend_2 { pt3dadd( 211.333, -112.296, 46.3587, 0.28 ) }
    dend_2 { pt3dadd( 212.637, -113.111, 45.7178, 0.83 ) }
    dend_2 { pt3dadd( 216.825, -115.646, 43.3854, 0.28 ) }
    dend_2 { pt3dadd( 217.612, -116.102, 42.8859, 1.11 ) }
    dend_2 { pt3dadd( 221.883, -118.546, 39.7989, 0.55 ) }
    dend_2 { pt3dadd( 223.33, -119.427, 38.6452, 0.28 ) }
    dend_2 { pt3dadd( 224.854, -120.393, 37.2911, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 26/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.9281, 30.1414, -0.843535, 0.635045 ) }
    axon_1 { pt3dadd( 30.4989, 42.4516, -0.843535, 0.635045 ) }
    axon_1 { pt3dadd( 39.0697, 54.7618, -0.843535, 0.635045 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 29/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.91101, 13.5942, -71.4962, 0.55 ) }
    dend_34 { pt3dadd( -15.3376, 10.7801, -79.519, 0.55 ) }
    dend_34 { pt3dadd( -16.8935, 10.1222, -81.2409, 0.83 ) }
    dend_34 { pt3dadd( -19.0189, 9.30099, -83.5136, 0.55 ) }
    dend_34 { pt3dadd( -19.929, 8.94005, -84.3694, 0.28 ) }
    dend_34 { pt3dadd( -21.3593, 8.35853, -86.1595, 0.83 ) }
    dend_34 { pt3dadd( -22.1506, 8.03051, -87.1745, 0.28 ) }
    dend_34 { pt3dadd( -22.6385, 7.856, -87.8088, 0.83 ) }
    dend_34 { pt3dadd( -25.6445, 7.04015, -92.1927, 0.28 ) }
    dend_34 { pt3dadd( -27.0791, 6.86257, -94.8155, 0.83 ) }
    dend_34 { pt3dadd( -32.5443, 6.46735, -105.515, 0.28 ) }
    dend_34 { pt3dadd( -33.746, 6.39724, -107.907, 0.83 ) }
    dend_34 { pt3dadd( -35.3429, 6.33018, -111.022, 0.28 ) }
    dend_34 { pt3dadd( -37.172, 6.3011, -114.471, 1.94 ) }
    dend_34 { pt3dadd( -42.5652, 6.46241, -124.191, 1.94 ) }
    dend_34 { pt3dadd( -44.5756, 6.55661, -127.56, 0.28 ) }
    dend_34 { pt3dadd( -45.8878, 6.55981, -129.299, 0.83 ) }
    dend_34 { pt3dadd( -48.3926, 6.3961, -132.431, 0.28 ) }
    dend_34 { pt3dadd( -49.2709, 6.25345, -133.421, 0.28 ) }
    dend_34 { pt3dadd( -50.8508, 5.88567, -134.999, 0.55 ) }
    dend_34 { pt3dadd( -52.7827, 5.36904, -136.727, 0.55 ) }
    dend_34 { pt3dadd( -56.2217, 4.453, -140.074, 0.28 ) }
    dend_34 { pt3dadd( -59.1163, 3.75108, -142.948, 1.11 ) }
    dend_34 { pt3dadd( -62.2616, 2.96292, -146.016, 0.28 ) }
    dend_34 { pt3dadd( -63.0016, 2.77491, -146.807, 0.83 ) }
    dend_34 { pt3dadd( -65.4444, 2.2158, -149.446, 0.28 ) }
    dend_34 { pt3dadd( -66.4366, 2.03642, -150.541, 1.66 ) }
    dend_34 { pt3dadd( -67.7393, 1.85759, -151.855, 0.83 ) }
    dend_34 { pt3dadd( -68.7233, 1.73574, -152.715, 0.83 ) }
    dend_34 { pt3dadd( -74.7299, 0.874655, -157.126, 0.28 ) }
    dend_34 { pt3dadd( -76.384, 0.589865, -158.25, 0.28 ) }
    dend_34 { pt3dadd( -78.3207, 0.212173, -159.364, 0.83 ) }
    dend_34 { pt3dadd( -80.2753, -0.21762, -160.395, 0.28 ) }
    dend_34 { pt3dadd( -81.1939, -0.446101, -160.894, 1.11 ) }
    dend_34 { pt3dadd( -83.6358, -1.00513, -162.096, 0.28 ) }
    dend_34 { pt3dadd( -84.3643, -1.1309, -162.442, 0.83 ) }
    dend_34 { pt3dadd( -86.6622, -1.32348, -163.707, 0.28 ) }
    dend_34 { pt3dadd( -87.6328, -1.31445, -164.229, 1.11 ) }
    dend_34 { pt3dadd( -92.8629, -0.848838, -166.981, 0.28 ) }
    dend_34 { pt3dadd( -94.3435, -0.594738, -167.716, 1.39 ) }
    dend_34 { pt3dadd( -98.8982, 0.499976, -170.26, 0.28 ) }
    dend_34 { pt3dadd( -101.241, 1.15036, -171.71, 0.55 ) }
    dend_34 { pt3dadd( -103.41, 1.8046, -172.965, 0.28 ) }
    dend_34 { pt3dadd( -105.023, 2.23663, -173.918, 0.55 ) }
    dend_34 { pt3dadd( -106.443, 2.55504, -174.694, 0.28 ) }
    dend_34 { pt3dadd( -111.374, 3.24549, -177.645, 1.11 ) }
    dend_34 { pt3dadd( -115.09, 3.49088, -179.927, 0.28 ) }
    dend_34 { pt3dadd( -118.771, 3.52854, -182.482, 1.11 ) }
    dend_34 { pt3dadd( -124.045, 3.39977, -186.35, 0.28 ) }
    dend_34 { pt3dadd( -125.375, 3.34664, -187.351, 0.83 ) }
    dend_34 { pt3dadd( -129.388, 3.21754, -190.361, 0.28 ) }
    dend_34 { pt3dadd( -130.245, 3.20359, -191.001, 0.83 ) }
    dend_34 { pt3dadd( -132.559, 3.2275, -192.921, 0.28 ) }
    dend_34 { pt3dadd( -133.145, 3.26366, -193.491, 0.55 ) }
    dend_34 { pt3dadd( -134.932, 3.47847, -195.222, 0.28 ) }
    dend_34 { pt3dadd( -136.767, 3.66829, -197.078, 1.39 ) }
    dend_34 { pt3dadd( -139.446, 3.89034, -199.825, 0.28 ) }
    dend_34 { pt3dadd( -140.007, 3.90677, -200.372, 0.28 ) }
    dend_34 { pt3dadd( -141.794, 3.90992, -201.877, 0.55 ) }
    dend_34 { pt3dadd( -142.943, 3.82143, -202.695, 0.55 ) }
    dend_34 { pt3dadd( -145.335, 3.36749, -204.068, 0.28 ) }
    dend_34 { pt3dadd( -145.65, 3.29177, -204.211, 0.55 ) }
    dend_34 { pt3dadd( -146.383, 3.15404, -204.541, 0.28 ) }
    dend_34 { pt3dadd( -147.837, 2.95421, -205.254, 0.55 ) }
    dend_34 { pt3dadd( -149.213, 2.81688, -205.948, 0.55 ) }
    dend_34 { pt3dadd( -152.785, 2.65664, -207.995, 0.28 ) }
    dend_34 { pt3dadd( -153.943, 2.6976, -208.775, 0.55 ) }
    dend_34 { pt3dadd( -156.71, 2.88032, -210.686, 0.28 ) }
    dend_34 { pt3dadd( -157.425, 2.97441, -211.196, 0.55 ) }
    dend_34 { pt3dadd( -158.101, 3.11091, -211.667, 0.28 ) }
    dend_34 { pt3dadd( -158.881, 3.31798, -212.145, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( -161.452, 4.03065, -213.321, 0.28 ) }
    dend_34 { pt3dadd( -162.519, 4.20575, -213.596, 0.55 ) }
    dend_34 { pt3dadd( -163.599, 4.1692, -213.434, 0.28 ) }
    dend_34 { pt3dadd( -164.847, 3.94887, -212.907, 0.55 ) }
    dend_34 { pt3dadd( -166.321, 3.58061, -212.553, 0.28 ) }
    dend_34 { pt3dadd( -166.873, 3.41128, -212.478, 0.83 ) }
    dend_34 { pt3dadd( -170.831, 2.09494, -211.936, 0.28 ) }
    dend_34 { pt3dadd( -171.571, 1.91625, -212.032, 0.28 ) }
    dend_34 { pt3dadd( -173.001, 1.63837, -212.419, 1.11 ) }
    dend_34 { pt3dadd( -177.878, 1.03125, -214.165, 0.28 ) }
    dend_34 { pt3dadd( -179.184, 0.969895, -214.629, 0.55 ) }
    dend_34 { pt3dadd( -182.345, 0.889715, -215.652, 0.28 ) }
    dend_34 { pt3dadd( -186.476, 0.900055, -217.342, 0.55 ) }
    dend_34 { pt3dadd( -187.773, 0.945495, -217.843, 0.55 ) }
    dend_34 { pt3dadd( -189.216, 1.04795, -218.312, 0.28 ) }
    dend_34 { pt3dadd( -191.565, 1.29402, -218.495, 0.83 ) }
    dend_34 { pt3dadd( -193.924, 1.47065, -218.607, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.91101, 13.5942, -71.4962, 0.55 ) }
    dend_33 { pt3dadd( -11.1972, 15.7354, -76.1894, 0.55 ) }
    dend_33 { pt3dadd( -11.5652, 16.0355, -76.8437, 0.55 ) }
    dend_33 { pt3dadd( -13.3857, 17.4671, -80.0173, 0.28 ) }
    dend_33 { pt3dadd( -14.6929, 18.4336, -82.1978, 1.11 ) }
    dend_33 { pt3dadd( -17.0638, 20.1708, -86.0033, 0.28 ) }
    dend_33 { pt3dadd( -19.418, 21.9444, -89.6343, 0.83 ) }
    dend_33 { pt3dadd( -21.5538, 23.35, -92.7932, 1.94 ) }
    dend_33 { pt3dadd( -23.9533, 24.9572, -96.0423, 0.28 ) }
    dend_33 { pt3dadd( -24.628, 25.4179, -96.8347, 0.28 ) }
    dend_33 { pt3dadd( -26.2066, 26.4404, -98.4962, 0.55 ) }
    dend_33 { pt3dadd( -27.4619, 27.154, -99.6426, 0.28 ) }
    dend_33 { pt3dadd( -28.1905, 27.5017, -100.216, 0.55 ) }
    dend_33 { pt3dadd( -30.9802, 28.5006, -102.269, 0.55 ) }
    dend_33 { pt3dadd( -32.378, 28.8007, -103.202, 0.55 ) }
    dend_33 { pt3dadd( -34.7022, 28.9906, -105.08, 0.55 ) }
    dend_33 { pt3dadd( -36.4949, 28.7875, -107.199, 0.28 ) }
    dend_33 { pt3dadd( -37.387, 28.6321, -108.724, 0.55 ) }
    dend_33 { pt3dadd( -37.839, 28.5544, -109.706, 0.28 ) }
    dend_33 { pt3dadd( -38.2967, 28.4977, -110.91, 0.83 ) }
    dend_33 { pt3dadd( -39.6999, 28.4715, -114.886, 0.28 ) }
    dend_33 { pt3dadd( -41.7665, 28.622, -120.73, 2.49 ) }
    dend_33 { pt3dadd( -44.363, 28.9452, -128.07, 1.39 ) }
    dend_33 { pt3dadd( -46.9149, 29.3126, -135.225, 0.28 ) }
    dend_33 { pt3dadd( -49.1436, 29.7809, -141.424, 1.66 ) }
    dend_33 { pt3dadd( -50.2985, 30.0845, -144.403, 1.66 ) }
    dend_33 { pt3dadd( -52.5718, 30.8343, -149.861, 0.55 ) }
    dend_33 { pt3dadd( -54.3155, 31.5325, -153.636, 0.28 ) }
    dend_33 { pt3dadd( -55.7883, 32.2501, -156.59, 1.66 ) }
    dend_33 { pt3dadd( -57.9141, 33.5724, -160.59, 0.55 ) }
    dend_33 { pt3dadd( -59.2909, 34.6134, -163.127, 0.55 ) }
    dend_33 { pt3dadd( -60.5843, 35.8144, -165.842, 0.55 ) }
    dend_33 { pt3dadd( -60.9572, 36.2401, -166.784, 0.55 ) }
    dend_33 { pt3dadd( -61.9343, 37.4917, -169.565, 1.94 ) }
    dend_33 { pt3dadd( -62.8194, 38.6953, -172.373, 0.55 ) }
    dend_33 { pt3dadd( -63.267, 39.223, -174.146, 1.39 ) }
    dend_33 { pt3dadd( -64.9262, 41.2765, -181.957, 0.55 ) }
    dend_33 { pt3dadd( -65.8015, 42.1314, -186.079, 0.28 ) }
    dend_33 { pt3dadd( -65.9233, 42.2314, -186.645, 0.28 ) }
    dend_33 { pt3dadd( -66.7595, 42.7582, -190.154, 1.11 ) }
    dend_33 { pt3dadd( -69.8825, 44.1881, -202.548, 0.55 ) }
    dend_33 { pt3dadd( -71.0736, 44.6104, -206.965, 1.66 ) }
    dend_33 { pt3dadd( -72.6365, 45.0991, -212.212, 0.28 ) }
    dend_33 { pt3dadd( -72.8022, 45.1442, -212.704, 0.83 ) }
    dend_33 { pt3dadd( -73.6611, 45.3472, -214.976, 0.28 ) }
    dend_33 { pt3dadd( -76.0992, 45.6281, -220.593, 0.28 ) }
    dend_33 { pt3dadd( -76.4613, 45.6324, -221.254, 0.83 ) }
    dend_33 { pt3dadd( -77.8876, 45.5854, -223.85, 0.28 ) }
    dend_33 { pt3dadd( -78.9135, 45.6238, -225.737, 0.28 ) }
    dend_33 { pt3dadd( -81.1704, 45.7892, -230.096, 0.55 ) }
    dend_33 { pt3dadd( -83.5143, 46.0355, -234.78, 0.28 ) }
    dend_33 { pt3dadd( -84.0416, 46.0736, -235.73, 0.28 ) }
    dend_33 { pt3dadd( -86.1252, 46.0997, -239.378, 0.28 ) }
    dend_33 { pt3dadd( -86.5124, 46.0706, -240.041, 0.55 ) }
    dend_33 { pt3dadd( -88.8566, 45.7956, -243.556, 0.28 ) }
    dend_33 { pt3dadd( -90.4568, 45.4262, -245.391, 0.55 ) }
    dend_33 { pt3dadd( -92.6917, 44.7598, -247.325, 0.28 ) }
    dend_33 { pt3dadd( -93.479, 44.3984, -247.876, 0.55 ) }
    dend_33 { pt3dadd( -94.6338, 43.5445, -248.369, 0.28 ) }
    dend_33 { pt3dadd( -96.8532, 41.6164, -248.903, 0.55 ) }
    dend_33 { pt3dadd( -98.9197, 39.5219, -248.952, 0.28 ) }
    dend_33 { pt3dadd( -99.7314, 38.6132, -248.857, 0.28 ) }
    dend_33 { pt3dadd( -100.429, 37.7768, -248.709, 0.55 ) }
    dend_33 { pt3dadd( -101.831, 36.0394, -248.399, 0.28 ) }
    dend_33 { pt3dadd( -102.638, 35.1047, -248.217, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 82/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.21187, -3.96983, -69.9374, 0.55 ) }
    dend_29 { pt3dadd( -1.6601, -4.40368, -83.0757, 0.55 ) }
    dend_29 { pt3dadd( -0.9255, -4.72535, -87.1374, 0.55 ) }
    dend_29 { pt3dadd( 0.0303318, -5.17863, -91.8138, 0.83 ) }
    dend_29 { pt3dadd( 0.291019, -5.28732, -92.9512, 0.28 ) }
    dend_29 { pt3dadd( 0.573736, -5.40931, -94.0512, 1.11 ) }
    dend_29 { pt3dadd( 2.59684, -6.15423, -101.04, 1.11 ) }
    dend_29 { pt3dadd( 5.24445, -7.27838, -108.307, 0.28 ) }
    dend_29 { pt3dadd( 5.35884, -7.31344, -108.669, 2.22 ) }
    dend_29 { pt3dadd( 6.84454, -7.63941, -113.874, 0.55 ) }
    dend_29 { pt3dadd( 7.22367, -7.68568, -115.378, 0.83 ) }
    dend_29 { pt3dadd( 7.99588, -7.66072, -119.006, 0.28 ) }
    dend_29 { pt3dadd( 9.37561, -6.47636, -129.122, 0.28 ) }
    dend_29 { pt3dadd( 9.9967, -7.83318, -123.797, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 96/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.21187, -3.96983, -69.9374, 0.55 ) }
    dend_28 { pt3dadd( -0.528348, -2.18417, -75.7984, 0.55 ) }
    dend_28 { pt3dadd( 0.0700658, -1.75646, -77.0405, 1.94 ) }
    dend_28 { pt3dadd( 0.68562, -1.28667, -78.302, 1.39 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( 1.76258, -0.327873, -80.6192, 0.55 ) }
    dend_28 { pt3dadd( 2.39771, 0.196127, -82.104, 0.55 ) }
    dend_28 { pt3dadd( 3.70864, 1.1451, -84.929, 0.55 ) }
    dend_28 { pt3dadd( 5.07643, 1.95079, -87.419, 0.55 ) }
    dend_28 { pt3dadd( 6.08262, 2.55321, -89.3415, 1.39 ) }
    dend_28 { pt3dadd( 6.80641, 3.00097, -90.7074, 1.39 ) }
    dend_28 { pt3dadd( 8.77394, 4.10337, -94.1923, 0.55 ) }
    dend_28 { pt3dadd( 10.1273, 4.65806, -96.4792, 0.55 ) }
    dend_28 { pt3dadd( 10.7186, 4.83923, -97.4246, 0.28 ) }
    dend_28 { pt3dadd( 11.5282, 5.03761, -98.665, 0.55 ) }
    dend_28 { pt3dadd( 12.9229, 5.30936, -100.83, 2.22 ) }
    dend_28 { pt3dadd( 14.5853, 5.5753, -103.521, 0.55 ) }
    dend_28 { pt3dadd( 15.7194, 5.75731, -105.536, 0.28 ) }
    dend_28 { pt3dadd( 16.7875, 5.83696, -107.737, 1.66 ) }
    dend_28 { pt3dadd( 18.2996, 5.78783, -111.344, 0.55 ) }
    dend_28 { pt3dadd( 18.9024, 5.62947, -113.066, 0.55 ) }
    dend_28 { pt3dadd( 19.178, 5.40346, -114.336, 0.83 ) }
    dend_28 { pt3dadd( 19.547, 4.86633, -116.706, 0.28 ) }
    dend_28 { pt3dadd( 19.6706, 4.68296, -117.531, 0.28 ) }
    dend_28 { pt3dadd( 20.187, 3.95842, -121.224, 0.83 ) }
    dend_28 { pt3dadd( 20.6811, 3.45926, -124.705, 3.05 ) }
    dend_28 { pt3dadd( 21.9653, 2.73062, -132.462, 0.28 ) }
    dend_28 { pt3dadd( 22.1337, 2.68495, -133.358, 1.39 ) }
    dend_28 { pt3dadd( 22.9062, 2.64654, -137.441, 0.28 ) }
    dend_28 { pt3dadd( 23.4837, 2.76936, -140.372, 1.39 ) }
    dend_28 { pt3dadd( 24.5433, 3.33679, -145.335, 0.28 ) }
    dend_28 { pt3dadd( 24.7368, 3.52735, -146.151, 0.28 ) }
    dend_28 { pt3dadd( 24.8407, 3.68551, -146.583, 0.55 ) }
    dend_28 { pt3dadd( 25.0205, 4.03089, -147.535, 0.28 ) }
    dend_28 { pt3dadd( 25.0983, 4.25056, -148.139, 0.55 ) }
    dend_28 { pt3dadd( 25.1803, 4.44467, -148.755, 0.28 ) }
    dend_28 { pt3dadd( 25.2614, 4.56521, -149.193, 1.39 ) }
    dend_28 { pt3dadd( 26.3061, 5.67775, -153.956, 0.28 ) }
    dend_28 { pt3dadd( 26.4541, 5.79618, -154.549, 0.28 ) }
    dend_28 { pt3dadd( 26.8403, 5.99882, -155.797, 1.39 ) }
    dend_28 { pt3dadd( 28.2489, 6.50763, -159.886, 0.55 ) }
    dend_28 { pt3dadd( 29.2235, 6.74209, -162.516, 1.39 ) }
    dend_28 { pt3dadd( 30.3334, 6.9547, -165.346, 0.55 ) }
    dend_28 { pt3dadd( 32.4634, 7.35874, -170.547, 0.28 ) }
    dend_28 { pt3dadd( 33.2861, 7.48617, -172.57, 0.28 ) }
    dend_28 { pt3dadd( 34.2866, 7.59313, -175.005, 1.66 ) }
    dend_28 { pt3dadd( 35.9906, 7.72881, -178.882, 0.28 ) }
    dend_28 { pt3dadd( 36.1711, 7.75027, -179.296, 1.11 ) }
    dend_28 { pt3dadd( 37.716, 8.15197, -183.213, 0.28 ) }
    dend_28 { pt3dadd( 37.8122, 8.21124, -183.496, 0.83 ) }
    dend_28 { pt3dadd( 37.9109, 8.34784, -183.932, 0.28 ) }
    dend_28 { pt3dadd( 37.9567, 8.50708, -184.356, 0.28 ) }
    dend_28 { pt3dadd( 37.966, 8.65069, -184.717, 0.83 ) }
    dend_28 { pt3dadd( 37.9895, 10.4544, -189.356, 0.28 ) }
    dend_28 { pt3dadd( 37.9621, 11.0138, -190.817, 0.28 ) }
    dend_28 { pt3dadd( 37.8957, 12.0847, -193.732, 1.11 ) }
    dend_28 { pt3dadd( 37.7663, 13.9278, -198.993, 0.28 ) }
    dend_28 { pt3dadd( 37.747, 14.0957, -199.495, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_14 (entry count 53/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -21.3721, -9.23096, -15.9964, 0.83 ) }
    dend_22 { pt3dadd( -21.0772, -11.4896, -15.7378, 0.83 ) }
    dend_22 { pt3dadd( -19.592, -18.7076, -15.7432, 0.83 ) }
    dend_22 { pt3dadd( -18.9044, -21.2254, -15.9732, 0.83 ) }
    dend_22 { pt3dadd( -17.4827, -25.4709, -16.6664, 0.83 ) }
    dend_22 { pt3dadd( -16.2813, -29.0779, -17.3819, 0.83 ) }
    dend_22 { pt3dadd( -14.7496, -34.5396, -18.5764, 0.83 ) }
    dend_22 { pt3dadd( -14.1542, -36.8061, -19.2968, 0.83 ) }
    dend_22 { pt3dadd( -13.1184, -40.8725, -21.0745, 0.83 ) }
    dend_22 { pt3dadd( -11.979, -45.7636, -23.3929, 0.83 ) }
    dend_22 { pt3dadd( -11.4496, -48.5593, -24.8901, 0.83 ) }
    dend_22 { pt3dadd( -10.7822, -53.5991, -27.6044, 0.83 ) }
    dend_22 { pt3dadd( -10.6022, -56.4241, -29.2323, 0.83 ) }
    dend_22 { pt3dadd( -10.6385, -58.4693, -30.4751, 0.83 ) }
    dend_22 { pt3dadd( -10.8702, -60.3382, -31.7513, 0.83 ) }
    dend_22 { pt3dadd( -11.7107, -63.8911, -34.6537, 1.39 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 69/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -21.3721, -9.23096, -15.9964, 1.11 ) }
    dend_15 { pt3dadd( -25.3798, -12.958, -9.10453, 1.11 ) }
    dend_15 { pt3dadd( -27.8024, -15.2109, -4.93849, 1.11 ) }
    dend_15 { pt3dadd( -28.8999, -16.2315, -3.05113, 1.11 ) }
    dend_15 { pt3dadd( -29.7939, -17.0629, -1.5137, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 74/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -6.20579, -34.3505, 0.87768, 0.83 ) }
    dend_11 { pt3dadd( -7.92239, -37.2019, 0.471538, 0.83 ) }
    dend_11 { pt3dadd( -8.67731, -38.5226, 0.344185, 0.83 ) }
    dend_11 { pt3dadd( -9.59792, -40.4638, 0.271215, 0.83 ) }
    dend_11 { pt3dadd( -10.8212, -43.5029, 0.385381, 0.83 ) }
    dend_11 { pt3dadd( -11.5064, -45.2482, 0.614814, 0.83 ) }
    dend_11 { pt3dadd( -12.4789, -47.7968, 1.1426, 0.83 ) }
    dend_11 { pt3dadd( -13.3575, -50.5443, 2.09398, 0.83 ) }
    dend_11 { pt3dadd( -13.93, -53.0605, 3.20262, 0.83 ) }
    dend_11 { pt3dadd( -14.2874, -55.1438, 4.24832, 0.83 ) }
    dend_11 { pt3dadd( -14.713, -58.4275, 5.98466, 0.83 ) }
    dend_11 { pt3dadd( -14.81, -60.1262, 6.87456, 0.83 ) }
    dend_11 { pt3dadd( -14.7816, -62.2762, 7.96936, 0.83 ) }
    dend_11 { pt3dadd( -14.6456, -65.1606, 9.37457, 0.83 ) }
    dend_11 { pt3dadd( -14.5093, -67.8822, 10.5239, 0.55 ) }
    dend_11 { pt3dadd( -14.2595, -70.5749, 11.5023, 0.55 ) }
    dend_11 { pt3dadd( -14.001, -72.4798, 12.086, 0.55 ) }
    dend_11 { pt3dadd( -13.9183, -73.6231, 12.3848, 0.83 ) }
    dend_11 { pt3dadd( -13.9326, -75.3278, 12.9442, 0.55 ) }
    dend_11 { pt3dadd( -14.0071, -76.0198, 13.2322, 0.55 ) }
    dend_11 { pt3dadd( -14.3959, -78.8523, 14.6558, 0.55 ) }
    dend_11 { pt3dadd( -14.6756, -80.2426, 15.412, 0.55 ) }
    dend_11 { pt3dadd( -15.3544, -82.4954, 16.7337, 0.55 ) }
    dend_11 { pt3dadd( -16.5236, -85.7858, 18.5954, 0.55 ) }
    dend_11 { pt3dadd( -17.2027, -87.6624, 19.7097, 0.55 ) }
    dend_11 { pt3dadd( -17.877, -89.4187, 20.7877, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_11 { pt3dadd( -18.0539, -89.8287, 21.0435, 0.55 ) }
    dend_11 { pt3dadd( -18.77, -91.3909, 22.0622, 0.55 ) }
    dend_11 { pt3dadd( -19.567, -93.0513, 23.13, 0.83 ) }
    dend_11 { pt3dadd( -21.2706, -96.1571, 24.7608, 0.28 ) }
    dend_11 { pt3dadd( -22.0075, -97.3509, 25.4312, 0.28 ) }
    dend_11 { pt3dadd( -22.1913, -97.6138, 25.5901, 0.55 ) }
    dend_11 { pt3dadd( -22.8364, -98.5613, 26.1394, 0.28 ) }
    dend_11 { pt3dadd( -23.1238, -99.0087, 26.3616, 0.55 ) }
    dend_11 { pt3dadd( -23.9007, -99.9183, 26.8717, 0.28 ) }
    dend_11 { pt3dadd( -24.3668, -100.278, 26.873, 0.28 ) }
    dend_11 { pt3dadd( -24.8442, -106.433, 28.5273, 0.28 ) }
    dend_11 { pt3dadd( -25.1542, -112.517, 30.4812, 0.28 ) }
    dend_11 { pt3dadd( -25.4318, -118.082, 33.7303, 0.28 ) }
    dend_11 { pt3dadd( -25.1438, -123.727, 36.8187, 0.28 ) }
    dend_11 { pt3dadd( -25.4337, -129.225, 40.1897, 0.28 ) }
    dend_11 { pt3dadd( -25.9938, -135.265, 42.2426, 0.28 ) }
    dend_11 { pt3dadd( -27.1913, -140.927, 45.0711, 0.28 ) }
    dend_11 { pt3dadd( -28.9794, -146.369, 48.0617, 0.28 ) }
    dend_11 { pt3dadd( -29.4239, -151.846, 51.4555, 0.28 ) }
    dend_11 { pt3dadd( -29.1283, -156.968, 55.4268, 0.28 ) }
    dend_11 { pt3dadd( -29.1907, -161.264, 60.3759, 0.28 ) }
    dend_11 { pt3dadd( -27.9585, -166.022, 64.657, 0.28 ) }
    dend_11 { pt3dadd( -26.0578, -170.361, 69.1787, 0.28 ) }
    dend_11 { pt3dadd( -25.4093, -175.476, 73.118, 0.28 ) }
    dend_11 { pt3dadd( -23.4633, -179.551, 77.8862, 0.28 ) }
    dend_11 { pt3dadd( -22.0673, -183.809, 82.6698, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 26/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -6.20579, -34.3505, 0.87768, 0.55 ) }
    dend_10 { pt3dadd( -5.32554, -36.2767, -0.232114, 0.55 ) }
    dend_10 { pt3dadd( -4.91336, -37.2516, -0.78985, 0.55 ) }
    dend_10 { pt3dadd( -4.11888, -39.1208, -2.04481, 0.83 ) }
    dend_10 { pt3dadd( -3.21154, -41.5675, -3.51894, 0.83 ) }
    dend_10 { pt3dadd( -2.65412, -43.4076, -4.57824, 0.83 ) }
    dend_10 { pt3dadd( -2.18746, -45.2032, -5.57001, 0.83 ) }
    dend_10 { pt3dadd( -1.99259, -46.2125, -6.09021, 0.83 ) }
    dend_10 { pt3dadd( -1.47648, -49.1461, -7.53445, 0.55 ) }
    dend_10 { pt3dadd( -0.917216, -51.8981, -8.9443, 0.83 ) }
    dend_10 { pt3dadd( -0.380626, -54.4307, -10.0507, 1.11 ) }
    dend_10 { pt3dadd( -0.0755212, -55.7494, -10.529, 0.55 ) }
    dend_10 { pt3dadd( 0.255884, -56.9346, -10.8886, 0.55 ) }
    dend_10 { pt3dadd( 0.75721, -58.4356, -11.2992, 0.83 ) }
    dend_10 { pt3dadd( 1.93537, -61.4113, -11.9497, 0.55 ) }
    dend_10 { pt3dadd( 2.41508, -62.4157, -12.1947, 0.28 ) }
    dend_10 { pt3dadd( 3.56043, -64.4343, -12.6521, 0.55 ) }
    dend_10 { pt3dadd( 4.15273, -65.411, -12.8786, 0.28 ) }
    dend_10 { pt3dadd( 4.5241, -66.0257, -13.0277, 0.55 ) }
    dend_10 { pt3dadd( 4.93166, -66.6263, -13.1748, 0.28 ) }
    dend_10 { pt3dadd( 5.31012, -67.1619, -13.2073, 0.55 ) }
    dend_10 { pt3dadd( 7.03196, -69.4213, -13.2977, 0.28 ) }
    dend_10 { pt3dadd( 7.54637, -70.0736, -13.3389, 0.83 ) }
    dend_10 { pt3dadd( 8.50906, -71.2577, -13.1228, 0.83 ) }
    dend_10 { pt3dadd( 9.21059, -72.1849, -12.7874, 0.83 ) }
    dend_10 { pt3dadd( 10.6213, -74.2231, -12.0763, 0.28 ) }
    dend_10 { pt3dadd( 10.7752, -74.4956, -11.9629, 0.83 ) }
    dend_10 { pt3dadd( 11.3727, -75.8272, -11.3544, 0.28 ) }
    dend_10 { pt3dadd( 12.4178, -78.4927, -10.3192, 0.55 ) }
    dend_10 { pt3dadd( 12.6445, -79.2392, -10.0335, 0.55 ) }
    dend_10 { pt3dadd( 13.1254, -81.687, -9.23794, 0.83 ) }
    dend_10 { pt3dadd( 13.4777, -83.8178, -8.88805, 0.55 ) }
    dend_10 { pt3dadd( 13.5693, -84.5347, -8.81187, 0.55 ) }
    dend_10 { pt3dadd( 13.6816, -86.0003, -8.73266, 0.55 ) }
    dend_10 { pt3dadd( 13.7412, -87.4282, -8.77279, 0.28 ) }
    dend_10 { pt3dadd( 13.8324, -88.7154, -8.80542, 0.55 ) }
    dend_10 { pt3dadd( 14.167, -91.9638, -8.94126, 0.28 ) }
    dend_10 { pt3dadd( 14.3493, -93.0771, -9.06229, 0.83 ) }
    dend_10 { pt3dadd( 14.5602, -94.0832, -9.18637, 0.28 ) }
    dend_10 { pt3dadd( 14.7824, -94.8618, -9.28973, 0.55 ) }
    dend_10 { pt3dadd( 15.4394, -96.4271, -9.42788, 0.28 ) }
    dend_10 { pt3dadd( 15.84, -97.1121, -9.40318, 0.55 ) }
    dend_10 { pt3dadd( 16.3365, -97.7746, -9.26648, 0.28 ) }
    dend_10 { pt3dadd( 16.69, -98.1527, -9.17481, 1.11 ) }
    dend_10 { pt3dadd( 17.5832, -99.0297, -8.83835, 0.55 ) }
    dend_10 { pt3dadd( 19.0308, -100.364, -8.17123, 0.28 ) }
    dend_10 { pt3dadd( 19.9114, -101.153, -7.70835, 0.28 ) }
    dend_10 { pt3dadd( 20.7599, -101.952, -7.21556, 0.55 ) }
    dend_10 { pt3dadd( 22.4276, -103.611, -6.07522, 0.28 ) }
    dend_10 { pt3dadd( 23.8115, -105.087, -5.02631, 0.55 ) }
    dend_10 { pt3dadd( 24.5613, -105.949, -4.39838, 0.55 ) }
    dend_10 { pt3dadd( 25.302, -106.857, -3.73323, 0.28 ) }
    dend_10 { pt3dadd( 25.8973, -107.678, -3.15357, 0.28 ) }
    dend_10 { pt3dadd( 27.0187, -109.252, -2.02615, 0.83 ) }
    dend_10 { pt3dadd( 27.7043, -110.229, -1.34998, 0.28 ) }
    dend_10 { pt3dadd( 27.9227, -110.502, -1.21928, 0.55 ) }
    dend_10 { pt3dadd( 28.6154, -111.317, -0.932326, 0.28 ) }
    dend_10 { pt3dadd( 29.3476, -112.078, -0.902406, 0.28 ) }
    dend_10 { pt3dadd( 29.9393, -112.641, -1.03657, 0.55 ) }
    dend_10 { pt3dadd( 30.6724, -113.359, -1.34512, 0.28 ) }
    dend_10 { pt3dadd( 32.2093, -114.97, -2.07439, 0.83 ) }
    dend_10 { pt3dadd( 32.6142, -115.44, -2.31783, 0.83 ) }
    dend_10 { pt3dadd( 33.9077, -117.074, -3.18394, 0.28 ) }
    dend_10 { pt3dadd( 34.7619, -118.161, -3.74842, 0.28 ) }
    dend_10 { pt3dadd( 35.2017, -118.762, -4.08637, 0.28 ) }
    dend_10 { pt3dadd( 35.6417, -119.408, -4.42273, 0.83 ) }
    dend_10 { pt3dadd( 37.1881, -121.863, -5.59044, 0.28 ) }
    dend_10 { pt3dadd( 37.6885, -122.645, -5.9839, 0.83 ) }
    dend_10 { pt3dadd( 38.2359, -123.501, -6.42321, 0.83 ) }
    dend_10 { pt3dadd( 39.3162, -125.164, -7.41877, 0.28 ) }
    dend_10 { pt3dadd( 40.132, -126.364, -8.20675, 0.55 ) }
    dend_10 { pt3dadd( 41.6092, -128.486, -9.70523, 0.28 ) }
    dend_10 { pt3dadd( 41.7305, -128.663, -9.82453, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 99/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 14.0713, -25.8266, -7.40573, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 14.6876, -27.9017, -8.34623, 0.83 ) }
    dend_5 { pt3dadd( 15.4272, -30.0025, -9.34052, 0.28 ) }
    dend_5 { pt3dadd( 15.4985, -30.1664, -9.41754, 0.83 ) }
    dend_5 { pt3dadd( 15.8935, -30.9953, -9.85232, 0.28 ) }
    dend_5 { pt3dadd( 17.1433, -33.6187, -11.37, 0.83 ) }
    dend_5 { pt3dadd( 17.829, -35.107, -12.2257, 0.55 ) }
    dend_5 { pt3dadd( 18.1438, -35.753, -12.6104, 0.55 ) }
    dend_5 { pt3dadd( 18.6031, -36.6579, -13.1631, 0.83 ) }
    dend_5 { pt3dadd( 19.6582, -38.5458, -14.1845, 0.83 ) }
    dend_5 { pt3dadd( 21.3229, -41.2961, -15.4293, 0.55 ) }
    dend_5 { pt3dadd( 22.0526, -42.4791, -15.7881, 0.55 ) }
    dend_5 { pt3dadd( 22.4849, -43.2219, -15.9513, 0.55 ) }
    dend_5 { pt3dadd( 23.1812, -44.3979, -16.1327, 0.28 ) }
    dend_5 { pt3dadd( 24.3382, -46.2963, -16.2443, 0.55 ) }
    dend_5 { pt3dadd( 25.1013, -47.436, -16.1525, 0.28 ) }
    dend_5 { pt3dadd( 26.0646, -48.8853, -15.9529, 0.83 ) }
    dend_5 { pt3dadd( 26.6302, -49.7518, -15.7985, 0.28 ) }
    dend_5 { pt3dadd( 26.9132, -50.2259, -15.7006, 0.55 ) }
    dend_5 { pt3dadd( 27.4399, -51.1996, -15.5111, 0.28 ) }
    dend_5 { pt3dadd( 27.5306, -51.366, -15.4813, 0.83 ) }
    dend_5 { pt3dadd( 28.9543, -53.6608, -15.22, 0.28 ) }
    dend_5 { pt3dadd( 30.09, -55.3588, -14.975, 1.11 ) }
    dend_5 { pt3dadd( 30.7433, -56.3251, -14.8028, 1.66 ) }
    dend_5 { pt3dadd( 31.7557, -57.7834, -14.5055, 0.28 ) }
    dend_5 { pt3dadd( 32.2045, -58.4142, -14.3627, 0.55 ) }
    dend_5 { pt3dadd( 33.0302, -59.5328, -14.0833, 0.28 ) }
    dend_5 { pt3dadd( 34.3668, -61.2035, -13.6294, 0.83 ) }
    dend_5 { pt3dadd( 35.7727, -62.9344, -13.0612, 0.28 ) }
    dend_5 { pt3dadd( 36.1251, -63.3226, -12.9106, 0.83 ) }
    dend_5 { pt3dadd( 36.5088, -63.741, -12.7273, 0.83 ) }
    dend_5 { pt3dadd( 37.3042, -64.6147, -12.3461, 0.28 ) }
    dend_5 { pt3dadd( 37.7124, -65.0702, -12.1883, 0.83 ) }
    dend_5 { pt3dadd( 39.7241, -67.2681, -11.5876, 0.83 ) }
    dend_5 { pt3dadd( 41.427, -69.0874, -11.0816, 0.28 ) }
    dend_5 { pt3dadd( 42.7422, -70.5054, -10.7078, 0.28 ) }
    dend_5 { pt3dadd( 43.0404, -70.8264, -10.6311, 0.83 ) }
    dend_5 { pt3dadd( 44.5545, -72.5295, -10.3102, 0.28 ) }
    dend_5 { pt3dadd( 45.4465, -73.6689, -10.196, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 14.0713, -25.8266, -7.40573, 0.83 ) }
    dend_4 { pt3dadd( 18.2073, -26.9511, -3.7769, 0.83 ) }
    dend_4 { pt3dadd( 20.3788, -27.5628, -2.45446, 0.55 ) }
    dend_4 { pt3dadd( 21.5617, -27.7544, -2.06276, 0.55 ) }
    dend_4 { pt3dadd( 22.9907, -27.9633, -1.75123, 0.55 ) }
    dend_4 { pt3dadd( 23.7358, -28.077, -1.623, 0.55 ) }
    dend_4 { pt3dadd( 25.6759, -28.3732, -1.33297, 0.28 ) }
    dend_4 { pt3dadd( 29.0915, -28.8017, -1.08477, 0.83 ) }
    dend_4 { pt3dadd( 33.7061, -29.2847, -0.636311, 0.83 ) }
    dend_4 { pt3dadd( 35.4494, -29.4364, -0.408215, 0.55 ) }
    dend_4 { pt3dadd( 36.678, -29.5557, -0.174004, 0.28 ) }
    dend_4 { pt3dadd( 37.4313, -29.6212, 0.00336532, 0.83 ) }
    dend_4 { pt3dadd( 40.3243, -29.7515, 0.839986, 0.55 ) }
    dend_4 { pt3dadd( 40.9829, -29.7504, 1.08545, 0.55 ) }
    dend_4 { pt3dadd( 43.2985, -29.64, 2.16552, 0.55 ) }
    dend_4 { pt3dadd( 44.931, -29.417, 2.88594, 0.55 ) }
    dend_4 { pt3dadd( 46.0247, -29.2255, 3.41463, 0.55 ) }
    dend_4 { pt3dadd( 47.8339, -28.8856, 4.39601, 0.55 ) }
    dend_4 { pt3dadd( 49.2908, -28.5973, 4.96678, 0.28 ) }
    dend_4 { pt3dadd( 50.3105, -28.4059, 5.23492, 0.55 ) }
    dend_4 { pt3dadd( 51.0656, -28.3082, 5.44629, 0.55 ) }
    dend_4 { pt3dadd( 54.2241, -28.0537, 6.1401, 0.55 ) }
    dend_4 { pt3dadd( 56.3992, -28.0036, 6.36681, 0.55 ) }
    dend_4 { pt3dadd( 60.4847, -28.2713, 6.57377, 0.55 ) }
    dend_4 { pt3dadd( 64.3804, -28.7617, 6.596, 0.55 ) }
    dend_4 { pt3dadd( 68.2221, -29.3901, 6.46735, 0.55 ) }
    dend_4 { pt3dadd( 71.9629, -30.135, 6.30943, 0.83 ) }
    dend_4 { pt3dadd( 75.9683, -31.1373, 6.03651, 0.55 ) }
    dend_4 { pt3dadd( 78.2543, -31.8683, 5.98047, 0.55 ) }
    dend_4 { pt3dadd( 79.7623, -32.4928, 6.13217, 0.28 ) }
    dend_4 { pt3dadd( 80.5619, -32.8978, 6.24819, 0.83 ) }
    dend_4 { pt3dadd( 82.9497, -34.1091, 6.62237, 0.28 ) }
    dend_4 { pt3dadd( 84.0388, -34.6648, 7.00908, 0.55 ) }
    dend_4 { pt3dadd( 85.7832, -35.4031, 7.66798, 0.55 ) }
    dend_4 { pt3dadd( 86.6531, -35.6642, 7.8699, 0.55 ) }
    dend_4 { pt3dadd( 88.3666, -36.0206, 8.08816, 0.28 ) }
    dend_4 { pt3dadd( 90.1852, -36.2343, 8.1199, 0.55 ) }
    dend_4 { pt3dadd( 91.0927, -36.2274, 8.05335, 0.55 ) }
    dend_4 { pt3dadd( 93.7204, -35.9534, 7.83594, 0.28 ) }
    dend_4 { pt3dadd( 94.2595, -35.8324, 7.78358, 0.55 ) }
    dend_4 { pt3dadd( 95.7778, -35.3129, 7.64081, 0.28 ) }
    dend_4 { pt3dadd( 97.4302, -34.5833, 7.51058, 0.55 ) }
    dend_4 { pt3dadd( 99.1278, -33.6394, 7.43353, 0.28 ) }
    dend_4 { pt3dadd( 100.056, -33.0221, 7.45961, 0.55 ) }
    dend_4 { pt3dadd( 101.662, -31.8621, 7.66508, 0.28 ) }
    dend_4 { pt3dadd( 102.226, -31.4463, 7.7704, 0.55 ) }
    dend_4 { pt3dadd( 102.87, -31.0185, 7.89471, 0.28 ) }
    dend_4 { pt3dadd( 103.831, -30.4906, 8.08461, 0.55 ) }
    dend_4 { pt3dadd( 105.06, -29.9213, 8.35183, 0.28 ) }
    dend_4 { pt3dadd( 106.443, -29.3769, 8.67173, 0.83 ) }
    dend_4 { pt3dadd( 108.432, -28.7827, 9.16025, 0.28 ) }
    dend_4 { pt3dadd( 110.453, -28.2639, 9.65826, 0.83 ) }
    dend_4 { pt3dadd( 112.423, -27.8419, 10.1298, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 9.9967, -7.83318, -123.797, 0.28 ) }
    dend_31 { pt3dadd( 8.18533, -6.50767, -130.781, 0.28 ) }
    dend_31 { pt3dadd( 8.02791, -6.29195, -132.522, 0.83 ) }
    dend_31 { pt3dadd( 8.88035, -7.01173, -136.919, 0.28 ) }
    dend_31 { pt3dadd( 9.05022, -7.48914, -138.221, 0.83 ) }
    dend_31 { pt3dadd( 9.24386, -8.17015, -139.628, 0.28 ) }
    dend_31 { pt3dadd( 9.30835, -8.50441, -140.385, 0.55 ) }
    dend_31 { pt3dadd( 9.48026, -10.3404, -144.361, 0.28 ) }
    dend_31 { pt3dadd( 9.56813, -11.9409, -148.033, 1.39 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( 9.58905, -14.173, -153.298, 0.28 ) }
    dend_31 { pt3dadd( 9.53676, -14.8761, -155.098, 1.39 ) }
    dend_31 { pt3dadd( 9.13816, -18.1267, -164.005, 0.28 ) }
    dend_31 { pt3dadd( 9.11995, -18.2265, -164.29, 0.55 ) }
    dend_31 { pt3dadd( 8.83635, -19.3659, -167.534, 0.28 ) }
    dend_31 { pt3dadd( 8.75281, -19.7353, -168.612, 1.39 ) }
    dend_31 { pt3dadd( 8.25977, -22.635, -177.377, 0.28 ) }
    dend_31 { pt3dadd( 8.24991, -22.7194, -177.626, 0.55 ) }
    dend_31 { pt3dadd( 8.22161, -23.9708, -180.717, 0.28 ) }
    dend_31 { pt3dadd( 8.23084, -24.2026, -181.241, 0.28 ) }
    dend_31 { pt3dadd( 8.53796, -26.9851, -186.788, 0.28 ) }
    dend_31 { pt3dadd( 8.82853, -28.6647, -189.753, 2.22 ) }
    dend_31 { pt3dadd( 9.6108, -31.5999, -193.825, 0.55 ) }
    dend_31 { pt3dadd( 10.0708, -33.1599, -195.737, 0.28 ) }
    dend_31 { pt3dadd( 10.2727, -33.7661, -196.302, 0.55 ) }
    dend_31 { pt3dadd( 10.7279, -35.0138, -197.219, 0.28 ) }
    dend_31 { pt3dadd( 10.9995, -35.699, -197.529, 0.28 ) }
    dend_31 { pt3dadd( 11.5232, -37.0335, -197.943, 0.28 ) }
    dend_31 { pt3dadd( 11.9708, -38.261, -198.376, 1.11 ) }
    dend_31 { pt3dadd( 13.8743, -43.8527, -200.875, 0.28 ) }
    dend_31 { pt3dadd( 14.0396, -44.3761, -201.146, 0.55 ) }
    dend_31 { pt3dadd( 14.8751, -47.166, -202.755, 0.28 ) }
    dend_31 { pt3dadd( 15.1617, -48.031, -203.179, 1.11 ) }
    dend_31 { pt3dadd( 16.9791, -53.1989, -205.32, 0.28 ) }
    dend_31 { pt3dadd( 17.0986, -53.4895, -205.421, 0.55 ) }
    dend_31 { pt3dadd( 18.0763, -55.4996, -205.844, 0.28 ) }
    dend_31 { pt3dadd( 18.3471, -56.0203, -205.927, 0.83 ) }
    dend_31 { pt3dadd( 21.9349, -62.0538, -206.179, 0.28 ) }
    dend_31 { pt3dadd( 22.404, -62.7536, -206.112, 0.28 ) }
    dend_31 { pt3dadd( 24.4315, -65.3991, -205.147, 0.28 ) }
    dend_31 { pt3dadd( 25.0094, -66.1279, -204.851, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.9967, -7.83318, -123.797, 0.28 ) }
    dend_30 { pt3dadd( 11.5194, -8.2669, -122.025, 0.28 ) }
    dend_30 { pt3dadd( 12.0648, -8.42227, -121.391, 1.11 ) }
    dend_30 { pt3dadd( 14.239, -9.04157, -118.861, 0.28 ) }
    dend_30 { pt3dadd( 14.5228, -9.12243, -118.531, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 36/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.7107, -63.8911, -34.6537, 0.55 ) }
    dend_24 { pt3dadd( -12.4556, -63.9447, -35.5099, 0.55 ) }
    dend_24 { pt3dadd( -13.7993, -64.0544, -37.1073, 0.55 ) }
    dend_24 { pt3dadd( -15.8421, -64.3011, -39.5364, 1.11 ) }
    dend_24 { pt3dadd( -17.8469, -64.4219, -42.3153, 0.55 ) }
    dend_24 { pt3dadd( -18.347, -64.4509, -43.0652, 0.55 ) }
    dend_24 { pt3dadd( -20.58, -64.5743, -46.6023, 0.28 ) }
    dend_24 { pt3dadd( -20.9822, -64.5946, -47.2996, 0.55 ) }
    dend_24 { pt3dadd( -21.3775, -64.5916, -48.0876, 0.55 ) }
    dend_24 { pt3dadd( -24.2103, -64.4686, -53.8975, 0.55 ) }
    dend_24 { pt3dadd( -24.4915, -64.4557, -54.5629, 0.28 ) }
    dend_24 { pt3dadd( -24.6413, -64.4392, -54.9602, 0.83 ) }
    dend_24 { pt3dadd( -25.157, -64.3493, -56.2719, 0.55 ) }
    dend_24 { pt3dadd( -26.5622, -64.0494, -59.7418, 0.83 ) }
    dend_24 { pt3dadd( -28.1277, -63.7123, -63.5157, 0.55 ) }
    dend_24 { pt3dadd( -28.776, -63.5664, -65.0745, 0.55 ) }
    dend_24 { pt3dadd( -29.2293, -63.441, -66.2207, 1.11 ) }
    dend_24 { pt3dadd( -30.6113, -63.0183, -69.937, 1.11 ) }
    dend_24 { pt3dadd( -30.9485, -62.9042, -70.8752, 0.55 ) }
    dend_24 { pt3dadd( -31.4297, -62.7589, -72.2092, 0.83 ) }
    dend_24 { pt3dadd( -32.7025, -62.3721, -76.0766, 0.55 ) }
    dend_24 { pt3dadd( -33.6488, -62.0798, -78.7536, 0.55 ) }
    dend_24 { pt3dadd( -34.507, -61.7843, -81.3288, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 59/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -11.7107, -63.8911, -34.6537, 0.55 ) }
    dend_23 { pt3dadd( -10.8885, -66.283, -35.7114, 0.55 ) }
    dend_23 { pt3dadd( -10.1598, -68.1082, -36.8177, 0.55 ) }
    dend_23 { pt3dadd( -9.3056, -70.2299, -38.1838, 0.83 ) }
    dend_23 { pt3dadd( -8.9984, -70.9731, -38.6812, 0.28 ) }
    dend_23 { pt3dadd( -7.93825, -73.3341, -40.2164, 0.83 ) }
    dend_23 { pt3dadd( -7.29693, -74.6025, -40.9759, 0.83 ) }
    dend_23 { pt3dadd( -5.46467, -77.4591, -42.6503, 0.83 ) }
    dend_23 { pt3dadd( -5.04198, -78.0298, -42.9473, 0.28 ) }
    dend_23 { pt3dadd( -4.47991, -78.7638, -43.2137, 0.83 ) }
    dend_23 { pt3dadd( -3.44037, -80.1216, -43.3435, 0.28 ) }
    dend_23 { pt3dadd( -2.12575, -81.9252, -42.6455, 0.83 ) }
    dend_23 { pt3dadd( -1.37969, -83.0369, -41.8303, 0.55 ) }
    dend_23 { pt3dadd( -1.26569, -83.2072, -41.6538, 0.55 ) }
    dend_23 { pt3dadd( -0.60109, -84.3238, -40.5403, 0.55 ) }
    dend_23 { pt3dadd( -0.0228237, -85.6841, -39.328, 0.28 ) }
    dend_23 { pt3dadd( 0.116276, -86.2475, -38.9386, 0.28 ) }
    dend_23 { pt3dadd( 0.333754, -86.9909, -38.5468, 0.28 ) }
    dend_23 { pt3dadd( 1.22894, -89.1043, -37.6751, 0.55 ) }
    dend_23 { pt3dadd( 1.70176, -90.0608, -37.3428, 0.28 ) }
    dend_23 { pt3dadd( 2.30078, -91.084, -37.0255, 0.55 ) }
    dend_23 { pt3dadd( 2.65546, -91.6574, -36.8571, 0.55 ) }
    dend_23 { pt3dadd( 4.19747, -94.2974, -36.1175, 0.28 ) }
    dend_23 { pt3dadd( 4.45563, -94.7936, -35.9901, 0.55 ) }
    dend_23 { pt3dadd( 5.55171, -97.0487, -35.5405, 0.55 ) }
    dend_23 { pt3dadd( 6.82073, -99.5466, -34.9863, 0.28 ) }
    dend_23 { pt3dadd( 7.36331, -100.603, -34.7413, 0.55 ) }
    dend_23 { pt3dadd( 7.96241, -101.918, -34.4453, 0.28 ) }
    dend_23 { pt3dadd( 8.22867, -102.815, -34.2849, 0.55 ) }
    dend_23 { pt3dadd( 8.47042, -103.75, -34.1483, 0.55 ) }
    dend_23 { pt3dadd( 12.4307, -109.352, -33.8518, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 90/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -29.7939, -17.0629, -1.5137, 0.55 ) }
    dend_17 { pt3dadd( -34.052, -16.4944, -2.72804, 0.55 ) }
    dend_17 { pt3dadd( -37.2649, -15.9647, -3.58971, 0.55 ) }
    dend_17 { pt3dadd( -42.9484, -15.2358, -5.06615, 0.55 ) }
    dend_17 { pt3dadd( -48.8465, -14.5077, -6.7042, 0.55 ) }
    dend_17 { pt3dadd( -51.8848, -14.0669, -7.5277, 0.55 ) }
    dend_17 { pt3dadd( -55.9541, -13.3764, -8.5821, 0.83 ) }
    dend_17 { pt3dadd( -60.4406, -12.5394, -9.76662, 0.55 ) }
    dend_17 { pt3dadd( -66.7073, -11.1586, -11.5799, 0.83 ) }
    dend_17 { pt3dadd( -71.4311, -9.81992, -12.9308, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_17 { pt3dadd( -74.0765, -8.96666, -13.5007, 0.55 ) }
    dend_17 { pt3dadd( -75.8105, -8.31852, -13.7834, 0.55 ) }
    dend_17 { pt3dadd( -79.1837, -6.93529, -14.0874, 0.55 ) }
    dend_17 { pt3dadd( -82.2542, -5.29184, -14.2489, 0.55 ) }
    dend_17 { pt3dadd( -83.9515, -4.09619, -14.1588, 0.55 ) }
    dend_17 { pt3dadd( -85.9361, -2.67497, -13.8247, 0.55 ) }
    dend_17 { pt3dadd( -87.6742, -1.57671, -13.5329, 0.55 ) }
    dend_17 { pt3dadd( -90.0784, -0.145337, -12.9747, 1.66 ) }
    dend_17 { pt3dadd( -91.8077, 0.928836, -12.2259, 2.49 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -29.7939, -17.0629, -1.5137, 0.83 ) }
    dend_16 { pt3dadd( -32.1274, -16.58, -1.37116, 0.83 ) }
    dend_16 { pt3dadd( -35.6771, -15.8454, -1.15434, 0.83 ) }
    dend_16 { pt3dadd( -39.1057, -15.1359, -0.944894, 0.55 ) }
    dend_16 { pt3dadd( -41.5631, -14.6274, -0.794785, 0.55 ) }
    dend_16 { pt3dadd( -48.6978, -13.1509, -0.358966, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 45.4465, -73.6689, -10.196, 0.28 ) }
    dend_7 { pt3dadd( 45.0876, -75.8872, -11.3949, 0.28 ) }
    dend_7 { pt3dadd( 44.9101, -76.831, -11.8694, 0.55 ) }
    dend_7 { pt3dadd( 44.5516, -78.8204, -12.7193, 0.28 ) }
    dend_7 { pt3dadd( 44.3313, -79.9948, -13.1655, 0.83 ) }
    dend_7 { pt3dadd( 42.3349, -90.5822, -17.498, 0.28 ) }
    dend_7 { pt3dadd( 42.0271, -92.1521, -18.1604, 1.39 ) }
    dend_7 { pt3dadd( 41.7149, -93.4461, -18.8482, 1.11 ) }
    dend_7 { pt3dadd( 41.1099, -95.575, -20.1436, 0.28 ) }
    dend_7 { pt3dadd( 40.8427, -96.2114, -20.5416, 0.83 ) }
    dend_7 { pt3dadd( 38.0547, -100.791, -23.3247, 0.28 ) }
    dend_7 { pt3dadd( 37.6716, -101.106, -23.4788, 0.55 ) }
    dend_7 { pt3dadd( 34.3159, -103.025, -24.6413, 0.28 ) }
    dend_7 { pt3dadd( 33.9704, -103.141, -24.7344, 0.83 ) }
    dend_7 { pt3dadd( 27.934, -104.13, -25.8926, 0.28 ) }
    dend_7 { pt3dadd( 27.0025, -104.14, -25.9695, 0.55 ) }
    dend_7 { pt3dadd( 24.6059, -103.748, -25.8708, 0.28 ) }
    dend_7 { pt3dadd( 23.1284, -103.332, -25.856, 1.11 ) }
    dend_7 { pt3dadd( 20.736, -102.3, -25.8694, 0.28 ) }
    dend_7 { pt3dadd( 20.5067, -102.168, -25.8953, 0.55 ) }
    dend_7 { pt3dadd( 19.5157, -101.385, -26.1367, 0.28 ) }
    dend_7 { pt3dadd( 18.2569, -100.363, -26.442, 1.39 ) }
    dend_7 { pt3dadd( 15.8261, -98.5117, -27.2263, 0.28 ) }
    dend_7 { pt3dadd( 15.1901, -98.1011, -27.483, 1.11 ) }
    dend_7 { pt3dadd( 14.0465, -97.4817, -27.9601, 0.28 ) }
    dend_7 { pt3dadd( 12.8859, -96.878, -28.446, 1.66 ) }
    dend_7 { pt3dadd( 10.3265, -95.6477, -29.5096, 0.28 ) }
    dend_7 { pt3dadd( 7.82893, -94.517, -30.5552, 0.55 ) }
    dend_7 { pt3dadd( 2.54661, -92.275, -32.6694, 0.28 ) }
    dend_7 { pt3dadd( 0.61983, -91.5292, -33.5054, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 45.4465, -73.6689, -10.196, 0.28 ) }
    dend_6 { pt3dadd( 46.834, -75.0087, -10.1005, 0.28 ) }
    dend_6 { pt3dadd( 49.4687, -77.5449, -9.89787, 0.28 ) }
    dend_6 { pt3dadd( 50.3991, -78.4205, -9.82402, 1.11 ) }
    dend_6 { pt3dadd( 51.2871, -79.3273, -9.75022, 1.11 ) }
    dend_6 { pt3dadd( 52.8208, -80.9588, -9.62025, 0.28 ) }
    dend_6 { pt3dadd( 53.153, -81.3236, -9.58946, 0.55 ) }
    dend_6 { pt3dadd( 55.0327, -83.5664, -9.36398, 0.28 ) }
    dend_6 { pt3dadd( 55.3665, -84.01, -9.2469, 0.55 ) }
    dend_6 { pt3dadd( 57.4112, -87.2622, -8.04111, 0.28 ) }
    dend_6 { pt3dadd( 57.5218, -87.4629, -7.95301, 0.55 ) }
    dend_6 { pt3dadd( 58.2074, -88.8215, -7.23409, 0.28 ) }
    dend_6 { pt3dadd( 58.5453, -89.5405, -6.79431, 1.11 ) }
    dend_6 { pt3dadd( 60.883, -94.8981, -3.15148, 0.28 ) }
    dend_6 { pt3dadd( 61.6261, -96.6181, -1.90328, 0.55 ) }
    dend_6 { pt3dadd( 61.9309, -97.2957, -1.37142, 0.28 ) }
    dend_6 { pt3dadd( 62.6358, -98.7288, -0.236702, 0.83 ) }
    dend_6 { pt3dadd( 64.1863, -101.449, 2.18243, 0.28 ) }
    dend_6 { pt3dadd( 64.891, -102.491, 3.1935, 0.28 ) }
    dend_6 { pt3dadd( 65.211, -102.81, 3.53041, 0.55 ) }
    dend_6 { pt3dadd( 66.0285, -103.451, 4.27691, 0.28 ) }
    dend_6 { pt3dadd( 66.9206, -104.146, 4.96216, 0.55 ) }
    dend_6 { pt3dadd( 69.6805, -106.05, 6.92598, 0.28 ) }
    dend_6 { pt3dadd( 69.874, -106.175, 7.05649, 0.55 ) }
    dend_6 { pt3dadd( 72.2686, -107.698, 8.39944, 0.28 ) }
    dend_6 { pt3dadd( 72.8748, -108.143, 8.67497, 0.83 ) }
    dend_6 { pt3dadd( 75.9797, -110.521, 10.0842, 0.28 ) }
    dend_6 { pt3dadd( 79.6533, -113.303, 11.5524, 0.83 ) }
    dend_6 { pt3dadd( 81.8413, -114.842, 12.25, 0.55 ) }
    dend_6 { pt3dadd( 84.3461, -116.574, 13.1172, 0.28 ) }
    dend_6 { pt3dadd( 86.8388, -118.264, 14.1217, 0.28 ) }
    dend_6 { pt3dadd( 89.2329, -119.768, 15.179, 0.55 ) }
    dend_6 { pt3dadd( 91.2025, -120.813, 16.1364, 0.28 ) }
    dend_6 { pt3dadd( 92.3745, -121.465, 16.4477, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 79/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -91.8077, 0.928836, -12.2259, 0.55 ) }
    dend_21 { pt3dadd( -93.2689, 4.2324, -14.8454, 0.55 ) }
    dend_21 { pt3dadd( -93.6089, 4.95827, -15.4747, 0.55 ) }
    dend_21 { pt3dadd( -95.1379, 8.02343, -18.2546, 1.94 ) }
    dend_21 { pt3dadd( -97.8002, 13.0116, -22.9827, 0.55 ) }
    dend_21 { pt3dadd( -97.9892, 13.3347, -23.3171, 0.83 ) }
    dend_21 { pt3dadd( -98.7691, 14.5663, -24.6633, 0.28 ) }
    dend_21 { pt3dadd( -100.682, 17.2875, -27.9781, 1.66 ) }
    dend_21 { pt3dadd( -102.658, 20.0733, -31.4694, 0.55 ) }
    dend_21 { pt3dadd( -103.056, 20.6696, -32.2317, 0.83 ) }
    dend_21 { pt3dadd( -104.503, 23.0982, -35.3204, 0.28 ) }
    dend_21 { pt3dadd( -105.045, 24.212, -36.618, 1.11 ) }
    dend_21 { pt3dadd( -107.535, 30.3241, -43.2115, 0.28 ) }
    dend_21 { pt3dadd( -107.86, 31.2633, -44.1172, 0.83 ) }
    dend_21 { pt3dadd( -108.598, 33.7249, -46.3071, 0.55 ) }
    dend_21 { pt3dadd( -109.433, 36.3487, -48.5375, 1.66 ) }
    dend_21 { pt3dadd( -110.745, 40.116, -51.6524, 0.28 ) }
    dend_21 { pt3dadd( -110.811, 40.2719, -51.7915, 0.55 ) }
    dend_21 { pt3dadd( -112.293, 43.1321, -54.5573, 0.28 ) }
    dend_21 { pt3dadd( -114.053, 45.9867, -57.7061, 1.94 ) }
    dend_21 { pt3dadd( -116.639, 49.5654, -62.0152, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( -118.219, 51.4289, -64.4858, 0.83 ) }
    dend_21 { pt3dadd( -121.867, 55.1723, -70.0006, 0.28 ) }
    dend_21 { pt3dadd( -122.482, 55.746, -70.8969, 0.83 ) }
    dend_21 { pt3dadd( -125.293, 58.0981, -74.8855, 0.28 ) }
    dend_21 { pt3dadd( -125.661, 58.3729, -75.37, 0.55 ) }
    dend_21 { pt3dadd( -126.923, 59.2406, -76.9003, 0.28 ) }
    dend_21 { pt3dadd( -127.246, 59.4448, -77.2369, 0.83 ) }
    dend_21 { pt3dadd( -130.541, 61.336, -80.0167, 0.28 ) }
    dend_21 { pt3dadd( -132.883, 62.5825, -81.7258, 0.83 ) }
    dend_21 { pt3dadd( -134.293, 63.2558, -82.6057, 0.28 ) }
    dend_21 { pt3dadd( -134.552, 63.3817, -82.7738, 0.55 ) }
    dend_21 { pt3dadd( -137.247, 64.7313, -84.6011, 0.28 ) }
    dend_21 { pt3dadd( -138.134, 65.144, -85.1621, 0.55 ) }
    dend_21 { pt3dadd( -141.676, 66.329, -86.993, 0.28 ) }
    dend_21 { pt3dadd( -142.507, 66.5357, -87.3763, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -91.8077, 0.928836, -12.2259, 0.28 ) }
    dend_18 { pt3dadd( -95.0338, 1.22054, -11.3609, 0.28 ) }
    dend_18 { pt3dadd( -98.7178, 1.67503, -10.6438, 0.55 ) }
    dend_18 { pt3dadd( -102.865, 2.19979, -9.99777, 0.55 ) }
    dend_18 { pt3dadd( -104.587, 2.33922, -9.6476, 0.55 ) }
    dend_18 { pt3dadd( -106.306, 2.41727, -9.15475, 0.28 ) }
    dend_18 { pt3dadd( -108.321, 2.5296, -8.56584, 0.55 ) }
    dend_18 { pt3dadd( -111.553, 2.7518, -7.74429, 0.28 ) }
    dend_18 { pt3dadd( -113.651, 3.01918, -7.49564, 0.55 ) }
    dend_18 { pt3dadd( -117.729, 3.83333, -8.39601, 0.28 ) }
    dend_18 { pt3dadd( -120.539, 4.68085, -9.61212, 0.28 ) }
    dend_18 { pt3dadd( -124.034, 6.04082, -11.6597, 0.55 ) }
    dend_18 { pt3dadd( -126.4, 7.11572, -13.393, 0.55 ) }
    dend_18 { pt3dadd( -129.51, 8.71655, -16.1803, 1.94 ) }
    dend_18 { pt3dadd( -132.695, 10.5719, -19.5044, 0.28 ) }
    dend_18 { pt3dadd( -133.76, 11.2407, -20.7379, 0.28 ) }
    dend_18 { pt3dadd( -134.283, 11.5644, -21.3906, 1.39 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 32/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -134.283, 11.5644, -21.3906, 0.28 ) }
    dend_20 { pt3dadd( -136.588, 11.9986, -23.3007, 0.28 ) }
    dend_20 { pt3dadd( -137.192, 12.0968, -23.7648, 0.83 ) }
    dend_20 { pt3dadd( -138.253, 12.2422, -24.5356, 0.28 ) }
    dend_20 { pt3dadd( -140.931, 12.5691, -26.4014, 0.83 ) }
    dend_20 { pt3dadd( -148.256, 13.0796, -30.8201, 0.28 ) }
    dend_20 { pt3dadd( -149.992, 13.1033, -31.7153, 1.39 ) }
    dend_20 { pt3dadd( -152.211, 13.1987, -32.9173, 0.28 ) }
    dend_20 { pt3dadd( -153.154, 13.2412, -33.4149, 0.55 ) }
    dend_20 { pt3dadd( -153.589, 13.2472, -33.6267, 0.55 ) }
    dend_20 { pt3dadd( -159.747, 12.0807, -34.7571, 0.28 ) }
    dend_20 { pt3dadd( -160.742, 11.2942, -33.926, 1.39 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 44/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -134.283, 11.5644, -21.3906, 0.28 ) }
    dend_19 { pt3dadd( -139.928, 13.9884, -25.4913, 0.28 ) }
    dend_19 { pt3dadd( -141.017, 14.3711, -26.43, 0.83 ) }
    dend_19 { pt3dadd( -145.029, 15.5478, -30.1773, 0.28 ) }
    dend_19 { pt3dadd( -145.618, 15.6557, -30.8073, 0.83 ) }
    dend_19 { pt3dadd( -149.339, 15.9395, -34.8792, 0.28 ) }
    dend_19 { pt3dadd( -150.909, 15.9347, -36.616, 0.55 ) }
    dend_19 { pt3dadd( -154.094, 15.2327, -40.6779, 0.28 ) }
    dend_19 { pt3dadd( -154.575, 15.0634, -41.3389, 0.55 ) }
    dend_19 { pt3dadd( -157.36, 13.4287, -45.5267, 0.28 ) }
    dend_19 { pt3dadd( -158.772, 12.5391, -47.5991, 0.83 ) }
    dend_19 { pt3dadd( -159.357, 12.1324, -48.3999, 0.83 ) }
    dend_19 { pt3dadd( -160.512, 11.58, -49.7623, 0.83 ) }
    dend_19 { pt3dadd( -164.631, 10.1564, -53.8324, 0.28 ) }
    dend_19 { pt3dadd( -166.139, 9.93043, -55.2003, 0.28 ) }
    dend_19 { pt3dadd( -170.842, 10.1337, -59.37, 0.28 ) }
    dend_19 { pt3dadd( -172.26, 10.3993, -60.6645, 1.11 ) }
    dend_19 { pt3dadd( -177.17, 11.7168, -65.0149, 0.28 ) }
    dend_19 { pt3dadd( -178.064, 12.0076, -65.7767, 0.83 ) }
    dend_19 { pt3dadd( -182.343, 13.7396, -69.3025, 0.28 ) }
    dend_19 { pt3dadd( -185.459, 15.2755, -71.9167, 0.83 ) }
    dend_19 { pt3dadd( -188.688, 17.3207, -74.8794, 0.28 ) }
    dend_19 { pt3dadd( -189.448, 17.8625, -75.6455, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_13, dend_8, dend_1, dend_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_13, dend_8, dend_1, dend_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_13, dend_8, dend_1, dend_0, axon_0, dend_32, dend_27, dend_25, dend_14, dend_12, dend_9, dend_3, dend_2, axon_1, dend_34, dend_33, dend_29, dend_28, dend_22, dend_15, dend_11, dend_10, dend_5, dend_4, dend_31, dend_30, dend_24, dend_23, dend_17, dend_16, dend_7, dend_6, dend_21, dend_18, dend_20, dend_19]}
    ModelViewParmSubset_5 = new SectionList()
    dend_26 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_4 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_27 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_25 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_12 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_34 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_33 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_29 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_22 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_11 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_4 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_31 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_24 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_23 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_17 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_18 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_19 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_13 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_8 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_9 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_30 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_32 nseg = 3
    dend_27 nseg = 3
    dend_25 nseg = 11
    dend_12 nseg = 3
    dend_2 nseg = 13
    dend_34 nseg = 13
    dend_33 nseg = 11
    dend_29 nseg = 3
    dend_28 nseg = 7
    dend_22 nseg = 3
    dend_11 nseg = 9
    dend_10 nseg = 5
    dend_5 nseg = 3
    dend_4 nseg = 5
    dend_31 nseg = 5
    dend_24 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_21 nseg = 5
    dend_18 nseg = 3
    dend_19 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_NBC_2eca058e75_0_0


