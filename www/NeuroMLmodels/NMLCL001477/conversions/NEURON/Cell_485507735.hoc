// Cell: Cell_485507735
/*
{
  "id" : "Cell_485507735",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "401.039, 453.71, 27.44, 8.103", "405.09, 453.71, 27.44, 8.103", "409.142, 453.71, 27.44, 8.103" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "405.091, 453.71, 27.44, 1.0", "410.932, 467.526, 27.44, 1.0", "416.773, 481.342, 27.44, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49993829445884036
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "401.567, 453.922, 23.8204, 0.4576", "400.504, 453.55, 23.0263, 0.6282", "399.553, 452.942, 22.7133, 0.5766", "398.847, 452.121, 22.2191, 0.491", "397.951, 451.764, 21.5198, 0.5132", "396.879, 451.73, 20.7222, 0.592" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49993829445884036
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "401.291, 453.098, 27.6842, 3.4082", "400.979, 452.071, 27.7278, 1.5904", "400.92, 450.973, 27.6537, 0.9082", "400.623, 449.901, 27.522, 0.969", "399.827, 449.101, 27.5097, 0.9194", "398.973, 448.395, 27.6422, 0.7012", "398.324, 447.502, 27.8842, 0.6804", "397.567, 446.648, 28.1557, 0.8368", "396.754, 445.845, 28.3996, 0.868", "395.922, 445.058, 28.6009, 1.0368", "395.001, 444.38, 28.7512, 1.0408", "394.117, 443.655, 28.8722, 0.9466", "393.305, 442.854, 29.0069, 1.0364" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49993829445884036
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "407.495, 451.642, 24.1137, 0.2288", "408.026, 450.741, 23.0063, 0.4166", "407.637, 449.978, 22.4265, 0.5854", "407.89, 448.9, 21.8864, 0.6202", "408.908, 448.398, 21.5046, 0.6628", "409.776, 447.726, 21.3527, 0.6188", "410.75, 447.128, 21.2825, 0.4486" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49993829445884036
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "408.602, 453.265, 28.8137, 1.144", "409.364, 453.206, 30.9826, 0.7386", "410.122, 452.899, 31.971, 0.618", "411.202, 452.573, 32.9109, 0.6752", "412.236, 452.926, 33.8503, 0.5626" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49993829445884036
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "404.462, 457.428, 27.9444, 0.9152", "404.971, 458.436, 27.4981, 0.8026", "404.994, 459.571, 27.3426, 0.5996", "404.517, 460.574, 27.131, 0.6196", "404.343, 461.612, 26.8253, 0.5634", "404.995, 462.532, 26.6705, 0.6824", "405.777, 463.309, 26.7096, 0.736" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49993829445884036
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "408.142, 451.991, 25.7367, 0.2288", "409.106, 451.406, 25.7243, 0.5644", "409.902, 450.616, 25.682, 0.555", "410.63, 449.84, 25.8139, 0.6684", "411.376, 449.045, 26.0763, 0.7028", "411.904, 448.246, 26.1364, 0.7034", "412.18, 447.194, 26.2849, 0.5538", "412.665, 446.32, 26.6423, 0.5516", "413.183, 445.302, 26.9742, 0.5842", "413.7, 444.327, 27.2919, 0.694", "414.262, 443.477, 27.6683, 0.6596", "414.793, 442.48, 27.9294, 0.8346", "415.315, 441.605, 28.2097, 0.9162", "415.953, 440.764, 28.4936, 0.8738", "416.903, 440.19, 28.6751, 0.8202", "417.858, 439.601, 28.8408, 0.5984", "418.727, 438.867, 28.9811, 0.554", "419.562, 438.111, 29.1488, 0.5198", "420.168, 437.191, 29.1967, 0.681", "420.969, 436.409, 29.1542, 0.8048", "421.764, 435.592, 29.1368, 0.74", "422.571, 434.8, 29.1939, 0.6762", "423.478, 434.126, 29.3098, 0.7418", "424.414, 433.471, 29.4193, 0.657", "425.251, 432.717, 29.4669, 0.5862", "425.714, 431.688, 29.4896, 0.4942", "425.786, 430.575, 29.6198, 0.5904", "425.856, 429.462, 29.8301, 0.6174", "425.866, 428.322, 30.0412, 0.4878", "425.866, 427.179, 30.2408, 0.4318", "425.906, 426.038, 30.4254, 0.348", "426.115, 424.922, 30.5967, 0.326", "426.324, 423.806, 30.7353, 0.324" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49993829445884036
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "416.773, 481.342, 27.44, 1.0", "422.614, 495.158, 27.44, 1.0", "428.456, 508.974, 27.44, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "396.879, 451.73, 20.7222, 0.592", "396.885, 450.767, 20.3299, 0.2288", "396.921, 449.741, 19.6801, 0.349", "397.086, 448.668, 19.3708, 0.4328", "396.566, 447.878, 19.0367, 0.469", "395.776, 447.281, 18.9131, 0.4288", "394.794, 446.748, 18.7756, 0.4178", "394.21, 445.813, 18.5871, 0.5464", "394.034, 444.707, 18.2943, 0.5198", "393.849, 443.632, 17.8467, 0.613", "393.592, 442.555, 17.28, 0.5514", "393.313, 441.488, 16.616, 0.659", "392.864, 440.494, 15.8838, 0.6978", "392.461, 439.483, 15.1188, 0.6344", "392.236, 438.462, 14.3164, 0.7156", "392.034, 437.474, 13.4804, 0.8174", "391.53, 436.51, 12.7087, 0.7854", "390.91, 435.559, 12.0758, 0.6532", "390.284, 434.621, 11.5464, 0.5336", "389.64, 433.705, 11.0613, 0.6162", "389.112, 432.704, 10.6694, 0.6662", "388.745, 431.652, 10.4217, 0.5738", "388.057, 430.986, 10.1156, 0.6128", "387.915, 430.214, 9.5709, 0.5804", "387.359, 429.272, 9.0313, 0.5706", "386.633, 428.411, 8.5105, 0.5366", "385.998, 427.473, 8.0296, 0.5508", "385.491, 426.465, 7.5885, 0.4322", "384.748, 425.642, 6.734, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "396.879, 451.73, 20.7222, 0.592", "396.879, 452.042, 19.8587, 0.5556", "397.16, 452.221, 18.7827, 0.4574", "397.648, 452.793, 17.7593, 0.4252", "398.002, 453.834, 17.0813, 0.5534", "397.454, 454.31, 16.6871, 0.565", "396.685, 454.532, 16.5445, 0.5402", "396.15, 454.974, 16.7663, 0.4898", "395.758, 456.006, 17.0309, 0.4186", "395.471, 457.079, 17.1131, 0.4066", "395.091, 458.127, 17.0157, 0.4882", "394.651, 459.18, 16.8036, 0.5926", "394.245, 460.212, 16.4391, 0.5566", "393.724, 461.173, 15.9476, 0.4606", "393.089, 462.095, 15.4436, 0.4248", "392.447, 463.007, 14.9505, 0.5826", "391.789, 463.878, 14.4463, 0.4734", "391.315, 464.871, 14.0403, 0.3906", "391.19, 465.995, 13.7901, 0.3428", "391.16, 467.113, 13.573, 0.4286", "391.337, 468.22, 13.3826, 0.4256", "391.37, 469.349, 13.2689, 0.5214", "391.177, 470.397, 13.3154, 0.4366", "390.961, 471.489, 13.3621, 0.408", "390.858, 472.615, 13.2983, 0.4182", "390.612, 473.707, 13.1249, 0.5872", "390.25, 474.761, 12.8439, 0.6284", "390.224, 475.84, 12.4604, 0.6546", "390.297, 476.973, 12.097, 0.7178", "390.263, 478.115, 11.7975, 0.764", "390.407, 479.225, 11.5079, 0.7356", "390.4, 480.361, 11.299, 0.7806", "390.179, 481.468, 11.2023, 0.8466", "389.921, 482.565, 11.0732, 0.8238", "389.933, 483.697, 10.967, 0.5728", "390.344, 484.744, 10.8137, 0.4332", "390.375, 485.849, 10.5831, 0.4234", "389.932, 486.867, 10.2904, 0.5686", "389.564, 487.935, 9.9842, 0.7328", "389.371, 489.06, 9.7393, 0.8596", "388.962, 490.126, 9.5453, 0.813", "388.513, 491.177, 9.4013, 0.7224", "388.197, 492.272, 9.306, 0.573", "387.945, 493.388, 9.2189, 0.435", "387.52, 494.387, 8.9947, 0.4208", "387.141, 495.392, 8.6503, 0.3644", "386.654, 496.417, 8.3272, 0.4068", "385.893, 497.269, 7.8562, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "393.305, 442.854, 29.0069, 1.0364", "392.621, 442.242, 29.2348, 1.0638", "391.665, 441.618, 29.4546, 0.8732", "390.668, 441.059, 29.6402, 0.7766", "389.689, 440.467, 29.7993, 0.7248", "388.627, 440.053, 29.9634, 0.697", "387.509, 439.96, 30.1664, 0.5422", "386.394, 439.834, 30.2383, 0.5286", "385.38, 439.338, 30.3646, 0.548", "384.499, 438.625, 30.52, 0.5962" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "393.305, 442.854, 29.0069, 1.0364", "393.198, 441.537, 29.4137, 0.6864", "393.191, 440.398, 29.5221, 0.5812", "393.185, 439.254, 29.5596, 0.6276", "393.346, 438.121, 29.5831, 0.602", "394.043, 437.216, 29.5935, 0.6402", "394.636, 436.238, 29.5848, 0.5222", "395.232, 435.261, 29.5492, 0.5336", "396.05, 434.463, 29.4843, 0.5826", "397.0, 433.876, 29.4647, 0.5386", "397.953, 433.268, 29.433, 0.425" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "410.75, 447.128, 21.2825, 0.4486", "411.171, 447.382, 21.84, 0.2288", "412.127, 448.01, 21.6045, 0.5746", "413.238, 448.152, 21.5126, 0.574", "414.174, 447.537, 21.3885, 0.7034", "414.571, 446.483, 21.2064, 0.7684", "414.383, 445.383, 20.9107, 0.8226", "414.664, 444.286, 20.5652, 0.7868", "415.409, 443.43, 20.1999, 0.9244", "416.058, 442.675, 19.6981, 0.8762", "416.263, 442.27, 18.969, 0.6582" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "410.75, 447.128, 21.2825, 0.4486", "410.481, 446.058, 21.0309, 0.3338", "409.458, 445.675, 20.9895, 0.2898", "408.423, 445.228, 20.996, 0.3038", "407.724, 444.482, 20.9428, 0.3236", "407.705, 443.357, 20.7943, 0.3912", "407.462, 442.333, 20.6808, 0.3662", "406.851, 441.488, 20.6585, 0.3622", "406.479, 440.53, 20.4487, 0.3794", "406.217, 439.483, 20.1874, 0.5198", "405.801, 438.581, 19.8166, 0.483", "405.716, 437.508, 19.4286, 0.483", "405.539, 436.392, 19.0406, 0.6096", "405.317, 435.284, 18.6618, 0.688", "405.038, 434.178, 18.3693, 0.6762", "404.708, 433.084, 18.1403, 0.5026", "404.278, 432.051, 17.9141, 0.459", "403.976, 430.966, 17.7078, 0.4002", "403.916, 429.831, 17.5703, 0.4134", "403.901, 428.686, 17.4963, 0.5308", "404.372, 427.726, 17.5792, 0.5272", "404.826, 426.746, 17.7953, 0.4504", "405.051, 425.666, 18.0365, 0.4186", "405.11, 424.535, 18.1585, 0.5106", "405.195, 423.436, 18.1228, 0.6338", "405.345, 422.362, 17.9425, 0.635", "405.28, 421.3, 17.7667, 0.5948", "405.091, 420.221, 17.7463, 0.728", "405.091, 419.102, 17.851, 0.8818", "405.097, 417.973, 18.0202, 0.9324", "405.137, 416.83, 18.1754, 0.7914", "405.272, 415.696, 18.2969, 0.7552", "405.458, 414.567, 18.3633, 0.7394", "405.542, 413.429, 18.3714, 0.6892", "405.523, 412.286, 18.3367, 0.6974", "405.376, 411.16, 18.2745, 0.6778", "405.135, 410.046, 18.2189, 0.583", "405.067, 408.911, 18.171, 0.461", "405.069, 407.771, 18.1026, 0.432", "405.019, 406.635, 18.064, 0.5648", "404.947, 405.5, 18.0529, 0.592", "404.825, 404.364, 18.0116, 0.5614", "404.731, 403.233, 17.9019, 0.6698", "404.907, 402.131, 17.7128, 0.7546", "405.419, 401.123, 17.5002, 0.7902", "405.927, 400.117, 17.2406, 0.7598", "406.165, 399.019, 16.9411, 0.7144", "406.044, 397.9, 16.6198, 0.5768", "405.734, 396.853, 16.1953, 0.581", "405.999, 395.852, 15.6974, 0.7034", "406.438, 394.91, 15.2864, 0.6018", "406.408, 393.922, 14.7256, 0.6348", "406.365, 392.897, 14.1655, 0.5374", "406.631, 392.011, 13.4627, 0.6688", "406.78, 390.935, 12.794, 0.5426", "406.953, 389.808, 12.2531, 0.5014", "407.141, 388.689, 11.8014, 0.6326", "407.115, 387.58, 11.4759, 0.5562", "406.875, 386.471, 11.246, 0.5936", "406.486, 385.414, 11.0014, 0.479", "406.67, 384.414, 10.809, 0.4746", "407.087, 383.622, 10.3452, 0.5986", "407.489, 382.633, 9.7816, 0.6444", "407.909, 381.612, 9.1947, 0.7088", "407.711, 380.507, 8.7289, 0.6994", "407.035, 379.649, 8.336, 0.6192", "406.862, 378.627, 7.9138, 0.5476", "406.838, 377.561, 7.642, 0.4984", "406.606, 376.479, 7.5179, 0.4594", "406.504, 375.389, 7.3584, 0.3616", "406.543, 374.294, 7.2343, 0.3042", "406.672, 373.269, 7.3353, 0.2824", "406.385, 372.334, 7.604, 0.289", "405.925, 371.333, 7.7563, 0.3014", "405.687, 370.238, 7.7653, 0.3238", "405.592, 369.104, 7.7033, 0.3674", "405.604, 367.963, 7.5672, 0.4396", "405.939, 366.928, 7.2966, 0.6154", "406.464, 365.946, 6.9784, 0.7364", "407.266, 365.204, 6.8327, 0.5848", "407.843, 364.245, 6.7039, 0.5254", "408.031, 363.13, 6.5859, 0.483", "407.954, 361.99, 6.5246, 0.5338", "408.094, 360.88, 6.734, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "412.236, 452.926, 33.8503, 0.5626", "413.216, 452.803, 35.0193, 0.4576", "414.347, 452.682, 35.5547, 0.4716", "415.378, 452.187, 35.7459, 0.523", "416.359, 451.61, 35.9976, 0.6168", "417.266, 451.339, 36.4804, 0.5682" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "412.236, 452.926, 33.8503, 0.5626", "412.534, 453.552, 34.6984, 0.4996", "413.111, 454.391, 35.5664, 0.5908", "413.333, 455.33, 36.4434, 0.6646", "413.136, 456.369, 37.2781, 0.577", "413.209, 457.5, 37.9893, 0.5898", "414.084, 458.216, 38.5851, 0.6772", "414.89, 459.028, 39.0519, 0.76", "415.616, 459.882, 39.4386, 0.6122", "416.138, 460.664, 39.9678, 0.4282", "416.694, 461.598, 40.4785, 0.3346", "417.229, 462.443, 40.9993, 0.3336", "417.593, 463.491, 41.3916, 0.4092", "417.966, 464.542, 41.7967, 0.4024", "418.684, 465.383, 42.1529, 0.4164", "419.45, 466.225, 42.4424, 0.5418", "419.83, 467.199, 42.9008, 0.5202", "420.137, 468.28, 43.4364, 0.57", "420.371, 469.376, 44.0546, 0.683", "420.608, 470.432, 44.7731, 0.5648", "420.948, 471.405, 45.5882, 0.5628", "421.662, 471.766, 46.5682, 0.4194", "421.827, 472.821, 47.4874, 0.376", "421.848, 473.957, 48.2614, 0.3578", "421.945, 475.076, 48.9362, 0.48", "421.986, 476.169, 49.546, 0.4074", "421.51, 477.103, 50.0623, 0.3518", "420.519, 477.672, 50.451, 0.324", "419.546, 478.225, 50.8276, 0.363", "418.622, 478.807, 51.2744, 0.4538", "417.688, 479.413, 51.704, 0.5338", "416.812, 480.146, 52.0405, 0.4228", "416.159, 480.82, 52.4664, 0.3332", "415.626, 481.487, 53.0642, 0.2888", "415.267, 482.409, 53.433, 0.301", "415.629, 483.426, 53.629, 0.3242", "415.864, 484.531, 53.769, 0.3636", "415.947, 485.658, 53.7751, 0.4546", "416.083, 486.758, 53.6343, 0.5354", "416.255, 487.723, 53.3179, 0.4258", "417.066, 488.463, 53.0774, 0.3386", "418.14, 488.594, 53.0933, 0.2992", "418.387, 489.338, 53.4895, 0.32", "419.397, 489.754, 54.0112, 0.3604", "419.95, 490.286, 54.5255, 0.4264", "419.189, 490.957, 55.0967, 0.5916", "418.251, 491.442, 55.729, 0.691", "417.386, 492.096, 56.3405, 0.5056", "416.573, 492.875, 56.8422, 0.3548", "415.948, 493.804, 57.2855, 0.282", "415.389, 494.774, 57.7058, 0.2882", "415.059, 495.849, 57.9961, 0.301", "414.561, 496.867, 58.1778, 0.3182", "414.101, 497.891, 58.3702, 0.381", "413.439, 498.798, 58.5715, 0.348", "412.933, 499.817, 58.728, 0.326", "412.835, 500.952, 58.8454, 0.3236", "412.461, 502.03, 58.9414, 0.3624", "412.15, 503.114, 58.9548, 0.4524", "411.672, 504.14, 59.0178, 0.5314", "410.83, 504.727, 59.1996, 0.4184", "410.202, 505.623, 59.3491, 0.3248", "409.945, 506.733, 59.4672, 0.2736", "409.42, 507.727, 59.5554, 0.2728", "408.877, 508.731, 59.6156, 0.2712", "408.448, 509.79, 59.6397, 0.2684", "408.096, 510.879, 59.64, 0.2626", "407.221, 511.597, 59.64, 0.2542", "406.542, 512.515, 59.64, 0.2288", "406.464, 513.656, 59.64, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "405.777, 463.309, 26.7096, 0.736", "406.485, 463.895, 26.3585, 0.6864", "406.888, 464.961, 26.1557, 0.7226", "406.952, 466.094, 26.0447, 0.7602", "407.141, 467.218, 25.9836, 0.7906", "407.376, 468.317, 25.8519, 0.8094", "407.418, 469.45, 25.6936, 0.797", "407.645, 470.568, 25.6011, 0.7746", "407.806, 471.66, 25.6378, 0.7308", "407.623, 472.788, 25.6357, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "405.777, 463.309, 26.7096, 0.736", "405.891, 463.822, 26.8849, 0.7298", "405.597, 464.91, 27.0997, 0.7736", "405.022, 465.892, 27.2324, 0.8162", "404.348, 466.816, 27.3253, 0.853", "403.594, 467.676, 27.3537, 0.8974", "403.01, 468.66, 27.3242, 0.8664", "402.603, 469.729, 27.2546, 0.6724", "401.957, 470.672, 27.1706, 0.5186", "401.185, 471.495, 27.126, 0.377" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "426.324, 423.806, 30.7353, 0.324", "426.219, 423.123, 30.7622, 0.3604", "426.066, 422.006, 30.6916, 0.4624", "426.206, 420.883, 30.5558, 0.483", "426.425, 419.774, 30.3878, 0.6542", "426.588, 418.645, 30.2876, 0.5534", "426.746, 417.526, 30.2789, 0.566", "427.125, 416.462, 30.3436, 0.537", "427.672, 415.473, 30.4377, 0.7372", "428.27, 414.504, 30.4349, 0.7908", "428.897, 413.569, 30.3229, 0.602", "429.722, 412.81, 30.1, 0.507", "430.475, 411.985, 29.8096, 0.4656", "431.037, 411.013, 29.5033, 0.4208", "431.694, 410.085, 29.2471, 0.4108", "432.403, 409.192, 29.0917, 0.496", "433.016, 408.239, 29.0942, 0.6078", "433.63, 407.287, 29.2166, 0.5814", "434.244, 406.334, 29.4196, 0.5234", "434.875, 405.387, 29.6475, 0.4588", "435.527, 404.448, 29.853, 0.3604", "436.185, 403.51, 30.0247, 0.302", "436.842, 402.575, 30.1711, 0.2782", "437.611, 401.734, 30.3187, 0.2814", "438.516, 401.038, 30.4951, 0.287", "439.458, 400.391, 30.7236, 0.2988", "440.387, 399.725, 31.0243, 0.314", "441.145, 398.912, 31.463, 0.3734", "441.861, 398.272, 32.1507, 0.3338", "442.594, 398.001, 33.1134, 0.2998", "443.488, 397.617, 34.0365, 0.2744", "442.981, 396.738, 34.9152, 0.2742", "442.014, 397.077, 35.8072, 0.274", "441.283, 397.363, 36.78, 0.2736", "440.555, 396.992, 37.6855, 0.2728", "439.661, 396.28, 38.3219, 0.2712", "438.882, 395.444, 38.761, 0.2684", "438.611, 394.337, 39.0309, 0.2626", "438.611, 393.193, 39.1628, 0.2542", "438.611, 392.049, 39.2, 0.2288", "438.611, 390.905, 39.2, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "426.324, 423.806, 30.7353, 0.324", "426.34, 423.619, 31.626, 0.2288", "426.789, 422.639, 31.9164, 0.2826", "427.736, 422.017, 32.0152, 0.2894", "428.471, 421.149, 32.0902, 0.3018", "429.13, 420.223, 32.1423, 0.3258", "430.008, 419.503, 32.1734, 0.3666", "430.926, 418.841, 32.1852, 0.4602", "431.674, 417.976, 32.1793, 0.5458", "432.082, 416.973, 32.1709, 0.4446", "432.09, 415.829, 32.1591, 0.3758", "432.09, 414.685, 32.1429, 0.3574", "432.153, 413.546, 32.1205, 0.4792", "432.582, 412.541, 32.0894, 0.4056", "433.485, 411.875, 32.0429, 0.3496", "434.514, 411.374, 31.978, 0.3142", "435.444, 410.728, 31.8945, 0.3734", "436.27, 409.936, 31.7954, 0.3338", "437.175, 409.312, 31.621, 0.3", "437.946, 408.783, 31.2514, 0.2746", "438.854, 408.091, 30.9834, 0.2746", "439.536, 407.172, 30.8165, 0.2744", "440.344, 406.39, 30.746, 0.2744", "441.455, 406.172, 30.7636, 0.2742", "442.186, 405.578, 30.9434, 0.274", "442.633, 405.06, 31.3443, 0.2736", "443.285, 404.136, 31.6616, 0.2728", "444.017, 403.294, 31.8998, 0.2712", "444.753, 402.438, 32.0645, 0.2684", "445.276, 401.423, 32.1619, 0.2626", "446.171, 400.826, 32.2, 0.2542", "447.236, 400.409, 32.2, 0.2288", "448.22, 399.828, 32.2, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "384.499, 438.625, 30.52, 0.5962", "383.91, 439.567, 31.9519, 0.2288", "383.351, 440.461, 33.3855, 0.3138", "382.822, 441.369, 34.004, 0.343", "382.822, 442.429, 34.7152, 0.4216", "382.82, 443.491, 35.4687, 0.4488", "382.548, 444.578, 36.1533, 0.3892", "382.238, 445.658, 36.7472, 0.3552", "381.422, 446.454, 37.182, 0.3784", "381.017, 447.516, 37.4923, 0.4598", "381.175, 448.647, 37.7314, 0.653", "381.356, 449.735, 38.015, 0.8062", "381.019, 450.805, 38.3303, 0.7118", "380.923, 451.941, 38.6036, 0.774", "380.63, 453.026, 38.8508, 0.8804", "380.418, 454.08, 39.2218, 0.8938", "380.111, 455.163, 39.6192, 0.895", "379.818, 456.236, 40.0523, 0.783", "379.796, 457.356, 40.4933, 0.6722", "379.699, 458.464, 40.9209, 0.4534", "379.581, 459.524, 41.3896, 0.3428", "379.611, 460.617, 41.8636, 0.3064", "379.533, 461.733, 42.2083, 0.336", "379.478, 462.862, 42.4768, 0.3778", "379.426, 463.979, 42.7983, 0.5168", "379.281, 465.091, 43.1662, 0.4776", "379.213, 466.226, 43.5238, 0.4736", "379.378, 467.338, 43.9135, 0.5898", "380.001, 468.2, 44.3892, 0.6628", "380.531, 469.046, 44.9994, 0.5736", "380.863, 470.106, 45.5003, 0.5828", "381.049, 471.231, 45.9491, 0.669", "381.138, 472.329, 46.4506, 0.721", "381.597, 473.34, 46.9641, 0.6542", "382.288, 474.234, 47.4564, 0.637", "382.898, 475.119, 48.0169, 0.5454", "383.441, 476.103, 48.5831, 0.437", "384.101, 477.026, 49.1193, 0.3938", "384.982, 477.742, 49.6084, 0.4634", "385.859, 478.477, 50.0259, 0.5518", "386.502, 479.007, 50.654, 0.4558", "387.024, 479.74, 51.3738, 0.3952", "387.863, 480.427, 51.8977, 0.4", "388.892, 480.799, 52.2043, 0.5256", "389.794, 481.457, 52.453, 0.6512", "390.502, 482.303, 52.7372, 0.7168", "391.179, 483.076, 53.0858, 0.5064", "392.061, 483.565, 53.4461, 0.3566", "392.902, 484.182, 53.6502, 0.2852", "393.774, 484.818, 53.8126, 0.294", "394.362, 485.304, 54.2315, 0.3118", "395.113, 485.636, 54.8369, 0.338", "396.066, 485.938, 55.5677, 0.42", "397.039, 485.844, 56.4032, 0.4096", "398.099, 485.499, 57.1816, 0.4914", "399.224, 485.347, 57.7884, 0.3814", "400.29, 485.124, 58.315, 0.305", "400.878, 484.372, 58.8672, 0.2288", "401.915, 484.454, 59.4826, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "384.499, 438.625, 30.52, 0.5962", "383.581, 437.818, 30.6337, 0.6262", "382.642, 437.17, 30.7107, 0.7416", "381.627, 436.645, 30.7588, 0.6644", "380.596, 436.149, 30.7916, 0.563", "379.621, 435.556, 30.8008, 0.6308", "378.698, 434.891, 30.821, 0.657", "377.751, 434.258, 30.8409, 0.7318", "376.752, 433.748, 30.767, 0.743", "375.724, 433.284, 30.6149, 0.6958", "374.756, 432.687, 30.4522, 0.71", "373.981, 431.867, 30.2722, 0.7006", "373.343, 430.929, 30.0678, 0.6278", "372.646, 430.029, 29.8911, 0.5322", "371.853, 429.206, 29.766, 0.6214", "370.981, 428.467, 29.6783, 0.6382", "370.035, 427.826, 29.6111, 0.7036", "369.09, 427.181, 29.5546, 0.659", "368.215, 426.448, 29.4983, 0.6948", "367.353, 425.695, 29.4297, 0.6432", "366.523, 424.91, 29.3356, 0.6634", "365.789, 424.053, 29.174, 0.5962", "365.047, 423.203, 28.9548, 0.5208", "364.134, 422.535, 28.7445, 0.6002", "363.128, 421.992, 28.567, 0.5984", "362.171, 421.37, 28.415, 0.6324", "361.42, 420.539, 28.2442, 0.5134", "360.848, 419.568, 28.0717, 0.4912", "360.042, 418.777, 27.9543, 0.6294", "359.057, 418.202, 27.9067, 0.7026", "358.092, 417.589, 27.9309, 0.812", "357.17, 416.914, 28.0417, 0.912", "356.24, 416.273, 28.2738, 0.9116", "355.318, 415.614, 28.5919, 0.897", "354.326, 415.057, 28.9484, 0.9378", "353.257, 414.71, 29.3636, 0.9124", "352.204, 414.404, 29.864, 0.8982", "351.188, 413.969, 30.4052, 0.9414", "350.314, 413.284, 30.9523, 0.9126", "349.578, 412.435, 31.4776, 0.9298", "348.832, 411.572, 31.9388, 0.8484", "348.189, 410.633, 32.3492, 0.7888", "347.857, 409.582, 32.7765, 0.6932", "347.547, 408.491, 33.1663, 0.6726", "347.087, 407.486, 33.5667, 0.7888", "346.38, 406.663, 33.9884, 0.7118", "345.497, 405.949, 34.3297, 0.846", "344.551, 405.32, 34.4954, 0.8938", "343.676, 404.617, 34.4887, 0.814", "342.933, 403.751, 34.4084, 0.7978", "342.161, 402.906, 34.3087, 0.8144", "341.353, 402.098, 34.2093, 0.848", "340.546, 401.287, 34.1326, 0.895", "339.742, 400.473, 34.0858, 0.8294", "338.954, 399.644, 34.0533, 0.7618", "338.253, 398.75, 33.9917, 0.6036", "337.742, 397.741, 33.9016, 0.6984", "337.303, 396.693, 33.8934, 0.5908", "336.57, 395.835, 33.9755, 0.6242", "335.653, 395.154, 34.0866, 0.6998", "334.785, 394.409, 34.2224, 0.772", "333.908, 393.674, 34.3703, 0.7788", "333.005, 392.973, 34.5299, 0.7214", "332.164, 392.204, 34.7138, 0.7272", "331.394, 391.391, 34.9804, 0.8798", "330.695, 390.496, 35.2842, 0.9312", "329.995, 389.598, 35.595, 1.0058", "329.197, 388.814, 35.9584, 1.0166", "328.297, 388.138, 36.3353, 0.9686", "327.527, 387.315, 36.7111, 0.9812", "326.867, 386.4, 37.0723, 0.9688", "326.214, 385.463, 37.3736, 0.8904", "325.49, 384.577, 37.6124, 0.785", "324.796, 383.671, 37.8148, 0.8544", "324.14, 382.766, 38.0439, 0.8414", "323.245, 382.075, 38.2771, 0.8184", "322.321, 381.404, 38.4675, 0.7708", "321.473, 380.635, 38.621, 0.7064", "320.624, 379.871, 38.7439, 0.6994", "319.694, 379.205, 38.845, 0.8278", "318.712, 378.64, 38.953, 0.8378", "317.646, 378.291, 39.1224, 0.8176", "316.6, 377.853, 39.2773, 0.7396", "315.692, 377.209, 39.3476, 0.793", "315.12, 376.232, 39.4229, 0.8456", "314.734, 375.178, 39.5497, 0.9384", "314.165, 374.186, 39.6533, 0.906", "313.496, 373.26, 39.7331, 0.9236", "312.715, 372.43, 39.8065, 0.8072", "311.812, 371.728, 39.8812, 0.8568", "310.948, 370.98, 39.9526, 0.8042", "310.175, 370.139, 40.0305, 0.7232", "309.475, 369.234, 40.1338, 0.721", "308.785, 368.327, 40.2844, 0.6848", "308.062, 367.466, 40.5174, 0.7734", "307.254, 366.682, 40.8036, 0.6402", "306.464, 365.879, 41.0987, 0.6926", "305.801, 364.982, 41.4201, 0.7086", "305.029, 364.14, 41.6774, 0.6764", "304.277, 363.28, 41.8594, 0.6866", "303.557, 362.399, 41.9807, 0.5966", "302.684, 361.658, 42.0622, 0.7288", "301.875, 360.863, 42.1086, 0.6656", "301.264, 359.909, 42.1308, 0.6726", "300.63, 358.993, 42.2436, 0.5414", "299.743, 358.313, 42.4393, 0.5392", "298.787, 357.712, 42.6636, 0.7388", "297.805, 357.127, 42.8375, 0.806", "296.811, 356.572, 42.9444, 0.7988", "295.775, 356.132, 42.9985, 0.7396", "294.716, 355.755, 43.1085, 0.623", "293.729, 355.189, 43.2202, 0.6698", "292.821, 354.498, 43.3387, 0.8516", "291.815, 353.965, 43.4935, 0.9558", "290.808, 353.462, 43.7136, 0.9072", "289.863, 352.844, 43.9636, 0.847", "288.856, 352.314, 44.1745, 0.8198", "287.8, 351.901, 44.3576, 0.8164", "286.841, 351.281, 44.5253, 0.8104", "285.829, 350.758, 44.7045, 0.798", "284.802, 350.294, 44.9324, 0.7814", "283.832, 349.719, 45.1917, 0.7198", "282.896, 349.062, 45.4322, 0.7552", "281.942, 348.446, 45.6761, 0.7814", "280.953, 347.91, 45.9463, 0.7916", "280.003, 347.292, 46.1961, 0.7682", "279.13, 346.552, 46.3837, 0.7016", "278.257, 345.815, 46.5301, 0.6904", "277.31, 345.174, 46.6547, 0.8108", "276.362, 344.541, 46.7684, 0.8068", "275.516, 343.773, 46.8916, 0.758", "274.76, 342.923, 47.0624, 0.64", "274.059, 342.039, 47.3088, 0.5558", "273.33, 341.174, 47.5986, 0.6598", "272.549, 340.348, 47.9007, 0.7352", "271.815, 339.492, 48.2339, 0.758", "271.1, 338.617, 48.5598, 0.6814", "270.268, 337.839, 48.8362, 0.6584", "269.377, 337.142, 49.1061, 0.726", "268.547, 336.386, 49.3797, 0.7732", "267.738, 335.58, 49.5967, 0.7826", "266.924, 334.776, 49.7524, 0.7218", "266.092, 333.991, 49.8652, 0.7588", "265.212, 333.262, 49.9495, 0.7878", "264.286, 332.592, 50.0184, 0.8044", "263.373, 331.91, 50.1066, 0.7882", "262.472, 331.217, 50.2323, 0.757", "261.571, 330.525, 50.3283, 0.7038", "260.709, 329.796, 50.3706, 0.584", "259.845, 329.061, 50.4532, 0.4628", "258.921, 328.417, 50.6164, 0.4362", "258.055, 327.694, 50.8273, 0.5678", "257.22, 326.914, 51.0303, 0.6214", "256.384, 326.141, 51.2481, 0.5012", "255.543, 325.387, 51.4996, 0.4272", "254.748, 324.582, 51.7432, 0.4844", "253.944, 323.774, 51.9294, 0.5606", "253.056, 323.053, 52.071, 0.6194", "252.18, 322.32, 52.1861, 0.67", "251.325, 321.559, 52.283, 0.8198", "250.461, 320.81, 52.3757, 0.8248", "249.666, 319.999, 52.5, 0.7866", "248.893, 319.183, 52.6924, 0.7158", "247.984, 318.518, 52.9166, 0.5842", "247.015, 317.912, 53.1188, 0.5708", "246.088, 317.243, 53.2983, 0.7994", "245.153, 316.591, 53.4534, 0.9084", "244.165, 316.023, 53.5954, 1.0366", "243.203, 315.44, 53.804, 0.9472", "242.316, 314.813, 54.1495, 0.7682", "241.489, 314.542, 54.6795, 0.4998", "241.399, 315.285, 55.3263, 0.3814", "240.966, 314.791, 55.76, 0.3792", "240.571, 313.771, 55.9336, 0.4656", "240.026, 312.794, 55.9566, 0.6424", "239.28, 311.933, 55.9196, 0.89", "238.469, 311.127, 55.8723, 1.0526", "237.637, 310.342, 55.8648, 0.9628", "236.732, 309.664, 55.9656, 0.8654", "235.739, 309.133, 56.1688, 0.8066", "234.756, 308.566, 56.3954, 0.7924", "233.866, 307.854, 56.6006, 0.7648", "233.045, 307.066, 56.807, 0.718", "232.238, 306.274, 57.0321, 0.6114", "231.394, 305.51, 57.2272, 0.5084", "230.457, 304.875, 57.3364, 0.5452", "229.463, 304.32, 57.4232, 0.653", "228.485, 303.746, 57.5518, 0.6594", "227.524, 303.131, 57.6862, 0.6956", "226.643, 302.406, 57.8116, 0.6446", "225.878, 301.56, 57.9449, 0.6658", "225.122, 300.707, 58.1151, 0.6006", "224.291, 299.945, 58.3397, 0.529", "223.484, 299.149, 58.583, 0.6154", "222.631, 298.389, 58.8084, 0.6272", "221.692, 297.75, 59.0346, 0.682", "220.801, 297.062, 59.2833, 0.6246", "219.977, 296.281, 59.5109, 0.6042", "219.168, 295.475, 59.68, 0.6054", "218.357, 294.667, 59.7954, 0.6478", "217.537, 293.873, 59.855, 0.7594", "216.631, 293.181, 59.8774, 0.8072", "215.623, 292.656, 59.927, 0.9802", "214.622, 292.107, 60.0116, 1.1214", "213.694, 291.441, 60.116, 1.1104", "212.786, 290.746, 60.247, 1.0408", "211.967, 289.975, 60.447, 0.923", "211.174, 289.172, 60.6914, 0.8772", "210.293, 288.448, 60.9073, 0.8706", "209.371, 287.771, 61.087, 0.9362", "208.431, 287.121, 61.2427, 0.9092", "207.461, 286.525, 61.4088, 0.8924", "206.545, 285.874, 61.6098, 0.9306", "205.637, 285.189, 61.8044, 0.8918", "204.706, 284.525, 61.9601, 0.895", "203.733, 283.925, 62.0743, 0.7656", "202.741, 283.356, 62.153, 0.7244", "201.741, 282.799, 62.2042, 0.8268", "200.668, 282.41, 62.239, 0.8362", "199.586, 282.043, 62.2633, 0.8136", "198.549, 281.562, 62.2798, 0.7384", "197.554, 281.044, 62.3767, 0.7608", "196.61, 280.455, 62.5554, 0.9304", "195.681, 279.794, 62.6984, 1.0812", "194.748, 279.168, 62.7385, 1.0118", "193.807, 278.538, 62.7228, 0.9756", "192.827, 277.948, 62.727, 0.917", "191.783, 277.483, 62.7712, 0.7678", "190.794, 276.951, 62.9202, 0.687", "189.938, 276.221, 63.1582, 0.7316", "189.18, 275.389, 63.4606, 0.7844", "188.399, 274.576, 63.7879, 0.7984", "187.541, 273.822, 64.0654, 0.7746", "186.571, 273.219, 64.2687, 0.7434", "185.559, 272.714, 64.3588, 0.6236", "184.565, 272.148, 64.4291, 0.7008", "183.722, 271.454, 64.6131, 0.765", "182.905, 270.699, 64.8598, 0.8092", "182.042, 269.948, 65.0793, 0.7972", "181.245, 269.129, 65.2523, 0.7724", "180.588, 268.199, 65.3531, 0.739", "179.953, 267.275, 65.3593, 0.6156", "179.195, 266.42, 65.3898, 0.6858", "178.271, 265.793, 65.5494, 0.7376", "177.311, 265.188, 65.7852, 0.7562", "176.43, 264.493, 66.106, 0.7096", "175.541, 263.963, 66.5778, 0.5592", "174.556, 263.397, 67.0113, 0.5908", "173.617, 262.769, 67.2904, 0.515", "172.738, 262.04, 67.5007, 0.5684", "171.969, 261.222, 67.7463, 0.6418", "171.262, 260.332, 67.9773, 0.6736", "170.384, 259.633, 68.2396, 0.552", "169.408, 259.061, 68.5264, 0.5168", "168.463, 258.416, 68.78, 0.6728", "167.515, 257.776, 68.985, 0.802", "166.57, 257.148, 69.1634, 0.9036", "165.508, 256.803, 69.3874, 0.847", "164.473, 256.337, 69.589, 0.7866", "163.56, 255.653, 69.7264, 0.6874", "162.704, 254.934, 69.7659, 0.6696", "161.717, 254.37, 69.813, 0.7464", "160.71, 253.907, 69.974, 0.812", "159.862, 253.149, 70.1646, 0.8504", "159.165, 252.244, 70.3828, 0.8664", "158.35, 251.449, 70.6546, 0.9358", "157.459, 250.77, 71.0248, 0.8724", "156.599, 250.053, 71.4504, 0.9994", "155.819, 249.279, 71.9396, 0.9636", "155.055, 248.495, 72.4805, 0.8418", "154.285, 247.669, 72.9896, 0.656", "153.411, 246.977, 73.4068, 0.5744", "152.275, 246.86, 73.7629, 0.519", "151.155, 246.778, 74.1294, 0.6388", "150.084, 246.459, 74.5142, 0.6962", "149.052, 245.99, 74.8762, 0.6852", "148.072, 245.542, 75.3082, 0.55", "147.314, 244.8, 75.7753, 0.398", "146.575, 244.027, 76.1188, 0.3246", "145.495, 243.742, 76.4565, 0.3198", "144.905, 243.826, 76.5797, 0.3602", "144.205, 243.849, 76.5332, 0.425", "143.586, 243.089, 76.7435, 0.5948", "143.014, 242.132, 77.0672, 0.667", "142.382, 241.187, 77.4581, 0.6066", "141.652, 240.307, 77.8677, 0.5232" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "397.953, 433.268, 29.433, 0.425", "398.119, 432.529, 29.1108, 0.3688", "398.347, 431.571, 28.5684, 0.43", "398.768, 430.564, 27.9722, 0.4282", "399.401, 429.621, 27.4387, 0.5256", "399.964, 428.636, 26.9537, 0.446", "400.338, 427.576, 26.5068, 0.4188", "400.773, 426.542, 26.1124, 0.469", "401.265, 425.538, 25.7404, 0.5322", "401.734, 424.508, 25.4114, 0.5658", "402.167, 423.449, 25.1588, 0.5752", "402.592, 422.388, 24.9821, 0.6218", "403.017, 421.325, 24.8644, 0.5654", "403.39, 420.244, 24.7841, 0.468", "403.689, 419.14, 24.7203, 0.4818", "404.572, 418.487, 24.6536, 0.4792", "405.62, 418.031, 24.5678, 0.6102", "406.648, 417.605, 24.3849, 0.6522", "407.656, 417.081, 24.1831, 0.5606", "408.661, 416.54, 23.9828, 0.5274", "409.627, 415.93, 23.804, 0.717", "410.467, 415.155, 23.6612, 0.7646", "411.151, 414.241, 23.5623, 0.7272", "411.758, 413.279, 23.4514, 0.5804", "412.296, 412.301, 23.2749, 0.4564", "413.009, 411.417, 23.1578, 0.4232", "413.785, 410.607, 23.1287, 0.5498", "414.491, 409.71, 23.0873, 0.5584", "415.19, 408.805, 23.0178, 0.5278", "415.622, 407.787, 22.8147, 0.467", "416.036, 406.762, 22.5006, 0.3758", "416.45, 405.736, 22.0996, 0.33", "416.84, 404.695, 21.6657, 0.3324", "417.129, 403.6, 21.2892, 0.371", "417.316, 402.472, 21.0256, 0.5056", "417.504, 401.343, 20.8674, 0.4496", "417.693, 400.215, 20.788, 0.4566", "417.881, 399.087, 20.7628, 0.3884", "418.071, 397.959, 20.7714, 0.4266", "418.262, 396.831, 20.7953, 0.386", "418.453, 395.703, 20.8228, 0.3936", "418.646, 394.575, 20.8504, 0.463", "418.876, 393.457, 20.873, 0.551", "419.213, 392.363, 20.8836, 0.4556", "419.584, 391.281, 20.8806, 0.3888", "419.958, 390.2, 20.8626, 0.4172", "420.343, 389.124, 20.8225, 0.4182", "420.736, 388.051, 20.7591, 0.4406", "421.119, 386.973, 20.6887, 0.6112", "421.39, 385.874, 20.6209, 0.5292", "421.376, 384.732, 20.5597, 0.4818", "421.191, 383.622, 20.4748, 0.5716", "420.767, 382.605, 20.2981, 0.5624", "420.182, 381.675, 20.1396, 0.7126", "419.521, 380.809, 20.1286, 0.6354", "419.053, 379.885, 20.2347, 0.617", "418.933, 378.849, 20.3143, 0.4356", "419.124, 378.658, 19.9364, 0.3566", "419.134, 377.742, 19.5716, 0.333", "419.516, 376.779, 19.1794, 0.38", "420.211, 375.964, 18.6472, 0.4848", "420.358, 374.905, 18.0444, 0.5936", "420.664, 373.834, 17.6312, 0.5226", "420.365, 372.762, 17.2266, 0.5704", "420.225, 371.642, 16.8304, 0.4754", "420.344, 370.531, 16.4641, 0.505", "420.893, 369.927, 16.0171, 0.475", "421.923, 369.829, 15.6151, 0.6032", "422.516, 368.986, 15.2424, 0.6348", "423.084, 368.013, 15.0045, 0.5508", "424.043, 367.412, 14.8353, 0.3994", "424.236, 366.318, 14.7446, 0.327", "424.371, 365.355, 14.5785, 0.3252", "424.887, 365.031, 14.0911, 0.3654", "425.88, 364.499, 13.6318, 0.458", "426.826, 363.945, 13.2227, 0.5418", "427.709, 363.37, 12.7646, 0.4376", "428.765, 363.007, 12.3657, 0.3606", "429.656, 362.375, 12.1432, 0.3404", "430.175, 361.372, 12.084, 0.3932", "430.953, 360.654, 12.0968, 0.5118", "431.92, 360.053, 12.1724, 0.631", "432.793, 359.4, 12.3965, 0.6538", "433.727, 358.809, 12.6978, 0.5142", "434.548, 358.038, 12.9394, 0.452", "435.443, 357.35, 13.1735, 0.5264", "436.352, 356.728, 13.4702, 0.6588", "437.358, 356.237, 13.6664, 0.7024", "438.332, 355.641, 13.7939, 0.6186", "438.975, 354.699, 13.8975, 0.5762", "439.143, 353.583, 14.0516, 0.4068", "439.064, 352.48, 14.2775, 0.305", "438.718, 351.391, 14.4464, 0.2288", "438.688, 350.247, 14.7118, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "397.953, 433.268, 29.433, 0.425", "398.189, 433.238, 30.8291, 0.4576", "399.321, 433.149, 32.2059, 0.4832", "400.398, 433.219, 32.7883, 0.5752", "401.35, 433.514, 33.605, 0.563", "401.956, 434.179, 34.6072, 0.514", "401.951, 435.083, 35.7633, 0.5504", "401.667, 435.991, 36.9751, 0.6862", "401.314, 436.943, 38.1422, 0.6078", "400.79, 437.762, 39.2398, 0.4622", "400.073, 438.487, 40.2265, 0.4232", "399.595, 439.388, 40.9937, 0.3736", "399.862, 440.407, 41.3888, 0.3992", "400.727, 441.115, 41.5862, 0.3346", "401.721, 441.669, 41.771, 0.3012", "402.617, 442.272, 42.0798, 0.2768", "403.434, 443.064, 42.4015, 0.2786", "403.914, 444.099, 42.8025, 0.282", "404.392, 445.12, 43.3188, 0.2884", "404.801, 446.081, 44.0216, 0.2998", "405.24, 447.052, 44.812, 0.3234", "405.121, 448.008, 45.7621, 0.3546", "404.935, 449.009, 46.7656, 0.474", "405.025, 449.922, 47.6622, 0.3964", "405.062, 450.606, 48.7407, 0.3314", "405.237, 451.327, 49.8537, 0.2858", "405.972, 452.203, 50.7139, 0.2954", "406.524, 453.184, 51.3792, 0.3124", "406.907, 454.262, 51.9229, 0.3482", "406.702, 455.377, 52.3995, 0.3952", "406.936, 456.044, 52.869, 0.575", "407.554, 456.66, 53.6085, 0.4594", "407.996, 457.435, 54.5532, 0.3638", "408.062, 458.37, 55.6167, 0.2984", "407.918, 459.4, 56.6625, 0.3198", "407.64, 460.486, 57.5753, 0.3538", "407.28, 461.559, 58.2792, 0.443", "407.26, 462.59, 58.8582, 0.483", "407.595, 463.608, 59.4594, 0.479", "407.71, 464.688, 60.048, 0.3926", "407.676, 465.802, 60.6144, 0.387", "407.763, 466.852, 61.2144, 0.3136", "407.858, 467.951, 61.7582, 0.2542", "407.829, 469.093, 62.5369, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "416.263, 442.27, 18.969, 0.6582", "416.596, 442.27, 18.4023, 0.4198", "417.647, 442.273, 18.2772, 0.3178", "418.575, 442.285, 18.6003, 0.3074", "419.625, 442.369, 19.1892, 0.3362" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "416.263, 442.27, 18.969, 0.6582", "416.098, 441.996, 15.9748, 0.2288", "415.823, 441.188, 16.0317, 0.3354", "416.332, 440.387, 16.18, 0.4142", "417.079, 439.655, 16.4282, 0.4042", "417.473, 438.692, 16.683, 0.4552", "417.822, 437.643, 16.7346, 0.4414", "418.395, 436.704, 16.5469, 0.4856", "419.048, 435.809, 16.1673, 0.6848", "419.742, 434.99, 15.5789, 0.7138", "420.315, 434.108, 14.8508, 0.5904", "420.623, 433.051, 14.1123, 0.5358", "421.081, 432.06, 13.3994, 0.7312", "421.868, 431.278, 12.7278, 0.7978", "422.701, 430.54, 12.0792, 0.755", "423.464, 429.747, 11.439, 0.7964", "424.076, 428.979, 10.7311, 0.7446", "424.596, 428.091, 10.022, 0.5876", "425.076, 427.073, 9.4722, 0.5906", "425.46, 426.016, 9.0334, 0.5434", "425.744, 424.922, 8.7424, 0.4814", "426.17, 424.03, 8.7179, 0.4714", "426.864, 423.222, 8.7375, 0.63", "427.533, 422.446, 8.562, 0.7514", "428.261, 421.625, 8.3048, 0.6694", "429.099, 420.864, 8.1108, 0.4068", "429.837, 420.15, 7.2951, 0.2288" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "417.266, 451.339, 36.4804, 0.5682", "418.007, 450.92, 37.3257, 0.2288", "418.405, 449.931, 37.5208, 0.3602", "418.714, 448.835, 37.5796, 0.4598", "418.77, 447.754, 37.8381, 0.4902", "418.436, 446.681, 38.1856, 0.609", "417.958, 445.647, 38.6154, 0.754", "417.543, 444.681, 39.2269, 0.93", "417.108, 443.736, 39.9812, 0.7936", "416.972, 442.747, 40.8293, 0.7272", "416.822, 441.694, 41.6612, 0.6134", "416.331, 440.734, 42.4421, 0.5852", "415.941, 439.688, 43.1116, 0.5624", "415.545, 438.633, 43.5341, 0.6046", "415.252, 437.536, 43.7828, 0.5024", "415.606, 436.478, 44.0373, 0.5022", "415.957, 435.405, 44.3237, 0.4986", "416.128, 434.278, 44.625, 0.5076", "416.203, 433.141, 44.9708, 0.4478", "416.062, 432.017, 45.39, 0.479", "415.938, 430.895, 45.8752, 0.5336", "415.887, 429.787, 46.4391, 0.4222", "415.886, 428.684, 47.0764, 0.332", "416.345, 427.737, 47.8209, 0.2868", "416.805, 426.76, 48.6119, 0.2982", "417.238, 425.732, 49.3777, 0.3132", "417.505, 424.663, 50.1301, 0.3716", "417.577, 423.581, 50.8875, 0.3304", "417.707, 422.494, 51.6166, 0.2938", "417.934, 421.408, 52.2833, 0.2626", "418.074, 420.303, 52.8828, 0.2542", "418.053, 419.181, 53.4024, 0.2288", "418.031, 418.058, 54.32, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "417.266, 451.339, 36.4804, 0.5682", "418.165, 451.563, 36.8435, 0.643", "419.274, 451.799, 37.1302, 0.6682", "420.392, 451.887, 37.4511, 0.579", "421.476, 451.982, 37.8865, 0.6164", "422.489, 452.215, 38.4451, 0.6168", "423.486, 452.586, 39.0606, 0.4942", "424.489, 453.043, 39.6936, 0.4078", "425.527, 453.49, 40.2455, 0.4782", "426.588, 453.915, 40.6689, 0.4042", "427.697, 454.141, 40.9833, 0.346", "428.826, 454.313, 41.2236, 0.3124", "429.743, 454.877, 41.4907, 0.3468", "430.447, 455.637, 41.8928, 0.3986", "430.871, 456.638, 42.3088, 0.5516", "431.304, 457.694, 42.6675, 0.5602", "431.827, 458.711, 42.9587, 0.5388", "432.389, 459.706, 43.19, 0.451", "433.085, 460.61, 43.386, 0.5208", "433.942, 461.355, 43.5817, 0.437", "434.874, 461.994, 43.822, 0.4024", "435.85, 462.549, 44.1199, 0.4386", "436.869, 463.016, 44.4567, 0.4752", "437.84, 463.595, 44.7852, 0.4634", "438.569, 464.456, 45.0475, 0.3692", "439.408, 465.227, 45.2438, 0.3182", "440.486, 465.545, 45.3911, 0.3084", "441.626, 465.616, 45.5092, 0.3366", "442.769, 465.656, 45.6184, 0.3926", "443.875, 465.928, 45.7506, 0.4792", "444.882, 466.333, 46.0186, 0.7234", "445.425, 467.297, 46.3, 0.7702", "445.799, 468.376, 46.5752, 0.7684", "446.186, 469.451, 46.8516, 0.5078", "446.643, 470.487, 47.1537, 0.359", "447.168, 471.472, 47.4967, 0.2898", "447.862, 472.357, 47.8439, 0.303", "448.64, 473.176, 48.1877, 0.3268", "449.456, 473.976, 48.4725, 0.3742", "450.277, 474.771, 48.6962, 0.4456", "450.92, 475.715, 48.8734, 0.6578", "451.523, 476.688, 49.0241, 0.664", "451.819, 477.781, 49.2111, 0.4962", "452.033, 478.897, 49.4502, 0.3696", "452.196, 480.02, 49.742, 0.3822", "452.331, 481.148, 50.0772, 0.35", "452.319, 482.283, 50.447, 0.331", "452.045, 483.382, 50.8365, 0.3264", "451.717, 484.452, 51.2588, 0.3974", "451.518, 485.443, 51.7933, 0.3728", "451.725, 486.533, 52.2922, 0.3978", "452.123, 487.555, 52.7635, 0.332", "452.553, 488.541, 52.9418, 0.2966", "453.02, 489.579, 53.0188, 0.2684", "454.035, 490.078, 53.0284, 0.2626", "454.856, 490.871, 52.9936, 0.2542", "455.813, 491.498, 52.9525, 0.2288", "456.915, 491.806, 52.92, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "407.623, 472.788, 25.6357, 0.66", "407.775, 473.245, 25.5957, 0.479", "407.966, 474.303, 25.4392, 0.385", "407.962, 475.41, 25.2459, 0.4104", "408.216, 476.491, 25.1375, 0.4034", "408.78, 477.475, 25.0746, 0.4252", "409.17, 478.538, 25.0582, 0.5238", "409.47, 479.633, 25.1021, 0.6544", "409.854, 480.705, 25.1305, 0.6916", "410.295, 481.759, 25.1099, 0.611", "410.689, 482.832, 25.0514, 0.5016", "410.706, 483.96, 24.9679, 0.5628", "410.605, 485.099, 24.8557, 0.5386", "410.548, 486.226, 24.6704, 0.4742", "410.342, 487.334, 24.4329, 0.4512", "409.775, 488.311, 24.2003, 0.6262", "409.023, 489.171, 23.9895, 0.5802", "408.298, 490.055, 23.7938, 0.4644", "407.911, 491.119, 23.5981, 0.396", "407.767, 492.235, 23.3438, 0.474", "407.414, 493.298, 23.0301, 0.5412", "406.789, 494.241, 22.6879, 0.5826", "406.238, 495.214, 22.2942, 0.6056", "405.807, 496.267, 21.9139, 0.6806", "405.282, 497.281, 21.5706, 0.6634", "404.611, 498.175, 21.1992, 0.703", "403.997, 499.125, 20.828, 0.659", "403.404, 500.101, 20.4841, 0.6888", "402.703, 500.969, 20.1027, 0.6618", "402.021, 501.874, 19.722, 0.5538", "401.48, 502.878, 19.3813, 0.405", "401.027, 503.894, 19.0168, 0.3374", "400.589, 504.814, 18.5506, 0.3446", "399.84, 505.656, 18.2218, 0.4012", "399.053, 506.47, 18.0468, 0.525", "398.551, 507.494, 17.9335, 0.6624", "398.298, 508.609, 17.8608, 0.6782", "397.448, 509.353, 17.7891, 0.724", "396.51, 509.898, 17.6143, 0.7292", "395.713, 510.702, 17.5225, 0.6678", "394.957, 511.551, 17.4922, 0.6692", "394.413, 512.542, 17.4197, 0.5698", "393.844, 513.529, 17.3554, 0.6534", "393.245, 514.504, 17.3421, 0.6512", "392.574, 515.429, 17.3906, 0.7228", "391.814, 516.277, 17.4949, 0.719" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "407.623, 472.788, 25.6357, 0.66", "407.447, 472.914, 25.8388, 0.4576", "406.524, 473.495, 24.2762, 0.5424", "405.571, 474.013, 23.6358, 0.6758", "404.761, 474.579, 22.7887, 0.7958", "404.071, 475.284, 21.7908, 0.7202", "403.341, 476.094, 20.7864, 0.6536", "402.557, 476.892, 19.8301, 0.6318", "401.758, 477.276, 18.8128, 0.7834", "400.871, 477.169, 17.7157, 0.5898", "399.834, 477.205, 16.6848, 0.4768", "398.946, 477.566, 15.6717, 0.4458", "397.999, 477.963, 14.7427, 0.6658", "398.313, 478.08, 14.0581, 0.6428", "398.974, 477.664, 13.3858, 0.631", "399.829, 477.849, 12.6742, 0.461", "399.853, 478.245, 12.243, 0.4058", "400.208, 479.305, 11.8985, 0.4152", "400.527, 480.176, 11.7987, 0.5756", "400.982, 481.004, 11.8888, 0.6368", "401.281, 482.074, 11.9935, 0.5248", "401.474, 483.199, 12.0821, 0.4952", "401.853, 484.273, 12.0584, 0.4918", "401.854, 485.366, 11.8574, 0.4654", "401.325, 486.361, 11.5573, 0.5128", "400.797, 487.374, 11.2094, 0.5912", "400.551, 488.453, 10.7695, 0.5542", "400.473, 489.527, 10.2303, 0.4548", "400.253, 490.57, 9.6272, 0.4202", "399.991, 491.676, 9.1541, 0.5442", "399.52, 492.617, 8.6231, 0.548", "398.976, 493.62, 8.2078, 0.5084", "398.427, 494.609, 7.8608, 0.4322", "397.637, 495.433, 7.5982, 0.305", "396.855, 496.267, 7.28, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "401.185, 471.495, 27.126, 0.377", "401.061, 471.749, 26.9461, 0.3328", "400.918, 472.777, 26.5708, 0.3362", "400.585, 473.814, 26.0995, 0.3844", "400.395, 474.937, 25.7213, 0.5008", "399.779, 475.896, 25.3666, 0.5842", "398.874, 476.57, 25.005, 0.695", "397.986, 477.212, 24.616, 0.6558", "397.263, 478.097, 24.3153, 0.8562" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "401.185, 471.495, 27.126, 0.377", "400.476, 471.67, 28.7974, 0.4576", "399.719, 472.163, 31.2158, 0.5992", "399.676, 472.593, 32.3378, 0.6684", "399.565, 473.427, 33.6162, 0.6414", "399.254, 474.499, 34.7936, 0.6598" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "141.652, 240.307, 77.8677, 0.5232", "141.531, 240.065, 77.6499, 0.6864", "141.065, 239.183, 78.5154, 0.5484", "140.794, 238.151, 78.8931, 0.3948", "140.326, 237.133, 79.1795, 0.3188", "139.802, 236.122, 79.3727, 0.3092", "139.476, 235.033, 79.5133, 0.3394", "139.186, 233.932, 79.658, 0.3916", "138.73, 232.908, 79.847, 0.5076", "138.165, 231.925, 80.0738, 0.629", "137.788, 230.856, 80.313, 0.6214", "137.143, 229.941, 80.5266, 0.5936", "136.353, 229.119, 80.7663, 0.609", "135.927, 228.094, 81.0718, 0.5418", "135.817, 227.098, 81.5536, 0.4244", "135.218, 226.145, 82.042, 0.399" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "141.652, 240.307, 77.8677, 0.5232", "141.207, 240.203, 78.3745, 0.4582", "140.278, 239.983, 79.0546, 0.3594", "139.32, 239.836, 79.7605, 0.3", "138.176, 239.809, 80.3233, 0.2746", "137.086, 239.574, 80.7598, 0.2746", "136.113, 239.029, 81.146, 0.2746", "135.099, 238.617, 81.5074, 0.2746", "134.022, 238.259, 81.7701, 0.2746", "133.029, 237.705, 81.9851, 0.2746", "132.132, 237.009, 82.2002, 0.2746", "131.236, 236.305, 82.3819, 0.2746", "130.306, 235.639, 82.5112, 0.2746", "129.419, 234.918, 82.6008, 0.2746", "128.566, 234.199, 82.7302, 0.2746", "127.578, 233.751, 82.9007, 0.2746", "126.5, 233.432, 82.9867, 0.2746", "125.793, 232.668, 82.959, 0.2748", "124.969, 231.941, 82.9097, 0.2748", "123.929, 231.47, 82.8775, 0.2752", "122.829, 231.166, 82.8629, 0.2756", "121.908, 230.633, 83.006, 0.2766", "120.893, 230.112, 83.1463, 0.2782", "119.798, 229.78, 83.2703, 0.2814", "118.691, 229.496, 83.3641, 0.2872", "117.547, 229.486, 83.4263, 0.2982", "116.403, 229.486, 83.4593, 0.318", "115.26, 229.445, 83.4672, 0.357", "114.154, 229.157, 83.4761, 0.419", "113.01, 229.148, 83.4912, 0.5826", "111.887, 229.323, 83.5394, 0.6508", "110.847, 229.719, 83.5383, 0.5444", "109.794, 230.129, 83.54, 0.5636", "108.728, 230.533, 83.5926, 0.464", "107.658, 230.511, 83.7654, 0.477", "106.55, 230.442, 84.0218, 0.457", "105.413, 230.432, 84.257, 0.4054", "104.315, 230.267, 84.3996, 0.3796", "103.205, 230.101, 84.5709, 0.4498", "102.068, 230.02, 84.751, 0.4658", "101.344, 230.238, 85.1987, 0.591", "100.295, 230.439, 85.6797, 0.5888", "99.6502, 231.341, 86.0614, 0.5788", "98.8522, 232.148, 86.3548, 0.5882", "97.9309, 232.787, 86.541, 0.471", "96.8988, 233.194, 86.7597, 0.4492", "95.7725, 233.299, 86.9624, 0.3746", "94.7483, 233.707, 87.269, 0.4012", "93.8414, 234.273, 87.6982, 0.3382", "92.9305, 234.946, 88.081, 0.308", "92.0822, 235.419, 88.5676, 0.2892", "91.0882, 235.755, 89.1002, 0.3018", "90.0825, 236.273, 89.5423, 0.3256", "89.0735, 236.613, 90.0052, 0.3662", "88.2674, 237.339, 90.398, 0.4594", "87.4387, 237.806, 90.5299, 0.544", "86.3637, 237.997, 90.7222, 0.4428", "85.257, 238.248, 90.8718, 0.365", "84.2964, 238.839, 91.0179, 0.3734", "83.4618, 239.568, 91.175, 0.3338", "82.3658, 239.896, 91.369, 0.3", "81.4395, 240.454, 91.6376, 0.2744", "80.6812, 240.923, 92.0752, 0.2744", "80.0125, 241.431, 92.7097, 0.2742", "79.2002, 242.18, 93.2817, 0.274", "78.431, 243.025, 93.7182, 0.2736", "77.7359, 243.932, 94.0148, 0.2728", "77.017, 244.822, 94.1772, 0.2712", "76.179, 245.598, 94.2259, 0.2684", "75.2314, 246.237, 94.2043, 0.2626", "74.6121, 247.186, 94.1634, 0.2542", "74.2598, 248.262, 94.0657, 0.2288", "73.4453, 249.049, 93.8, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "419.625, 442.369, 19.1892, 0.3362", "420.405, 442.594, 19.4908, 0.4576", "421.522, 442.718, 19.0217, 1.023", "422.659, 442.776, 18.8706, 1.0994", "423.755, 443.016, 18.6499, 1.1042", "424.867, 443.259, 18.4005, 1.091", "425.915, 443.655, 18.0885, 0.9446", "426.934, 444.128, 17.8567, 0.8072", "427.79, 444.873, 17.6376, 0.8174", "428.554, 445.72, 17.3514, 0.923", "429.17, 446.638, 16.9368, 0.9272", "429.658, 447.613, 16.3902, 0.95", "429.896, 448.656, 15.7291, 0.918", "430.444, 449.414, 14.9044, 0.7622", "431.461, 449.48, 14.0563, 0.7134", "432.545, 449.141, 13.366, 0.6006", "433.623, 448.789, 12.792, 0.729", "434.513, 448.086, 12.4051, 0.7026", "435.373, 447.34, 12.0666, 0.5634", "436.24, 446.642, 11.6993, 0.514", "436.96, 445.759, 11.3488, 0.5536", "437.214, 444.705, 10.9124, 0.4492", "437.793, 443.842, 10.3875, 0.4322", "438.541, 442.977, 9.5214, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "419.625, 442.369, 19.1892, 0.3362", "419.53, 442.324, 19.8562, 0.3844", "419.422, 441.885, 20.7742, 0.4994", "420.215, 441.181, 21.564, 0.5894", "421.25, 440.807, 22.1968, 0.6672", "422.337, 440.911, 22.7782, 0.7854", "423.36, 441.284, 23.3567, 0.9036", "424.456, 441.597, 23.8215, 0.9258", "425.45, 442.089, 24.2778, 0.7782", "426.438, 442.592, 24.7612, 0.7358", "427.515, 442.968, 25.1448, 0.6788", "428.614, 443.276, 25.4897, 0.6952", "429.715, 443.499, 25.8702, 0.8208", "430.805, 443.753, 26.297, 0.8202", "431.874, 444.064, 26.7575, 0.8088", "432.975, 444.251, 27.2349, 0.608", "434.099, 444.256, 27.7088, 0.421", "435.212, 444.112, 28.159, 0.3198", "436.289, 443.807, 28.5754, 0.3124", "437.393, 443.522, 28.9052, 0.3394", "438.505, 443.264, 29.1133, 0.4198", "439.62, 443.044, 29.2298, 0.4232", "440.734, 442.837, 29.2936, 0.4492", "441.845, 442.596, 29.4445, 0.6302", "442.938, 442.348, 29.7175, 0.5514", "443.951, 441.863, 30.0958, 0.585", "444.764, 441.439, 30.7188, 0.4626", "445.761, 440.931, 31.3177, 0.4448", "446.902, 440.941, 31.8492, 0.5418", "448.027, 441.146, 32.3268, 0.547", "449.126, 441.459, 32.7866, 0.4896", "450.202, 441.757, 33.3194, 0.4806", "451.174, 442.011, 34.0564, 0.6766", "452.092, 442.323, 34.9975, 0.6938", "452.849, 442.964, 36.0634, 0.5758", "453.318, 443.863, 37.1672, 0.3984", "453.432, 444.735, 38.3653, 0.3264", "453.693, 445.785, 39.4758, 0.3182", "454.04, 446.837, 40.446, 0.3808", "454.632, 447.728, 41.3042, 0.3478", "455.405, 448.152, 42.2094, 0.3252", "456.051, 447.876, 43.1273, 0.3236", "456.308, 446.794, 43.8141, 0.355", "456.471, 445.665, 44.282, 0.4748", "456.828, 444.584, 44.5808, 0.398", "457.425, 443.619, 44.742, 0.3342", "458.062, 442.672, 44.7978, 0.2906", "458.941, 441.967, 44.8014, 0.3056", "459.847, 441.269, 44.8, 0.3266", "460.936, 440.977, 44.8, 0.3976", "462.067, 440.806, 44.8, 0.3734", "463.21, 440.783, 44.8, 0.3988", "464.348, 440.883, 44.8, 0.3338", "465.491, 440.944, 44.8, 0.2998", "466.553, 441.348, 44.8, 0.2742", "467.681, 441.507, 44.8, 0.274", "468.823, 441.577, 44.8, 0.2736", "469.967, 441.584, 44.8, 0.2728", "471.035, 441.202, 44.8, 0.2712", "471.78, 440.346, 44.8, 0.2684", "472.481, 439.442, 44.8, 0.2626", "473.322, 438.668, 44.8, 0.2542", "473.617, 437.574, 44.8, 0.2288", "473.731, 436.436, 44.8, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "391.814, 516.277, 17.4949, 0.719", "392.05, 516.292, 17.755, 0.6864", "391.859, 517.164, 17.8934, 0.5226", "392.412, 518.147, 17.9891, 0.4914", "392.51, 519.16, 18.2499, 0.4836", "392.798, 520.258, 18.4698, 0.4554", "393.155, 521.25, 18.7486, 0.4694", "392.987, 522.289, 18.9544, 0.6312", "393.013, 523.307, 19.1027, 0.7304", "393.251, 524.372, 19.1648, 0.7432", "393.881, 525.277, 19.1633, 0.684", "394.333, 526.306, 19.1765, 0.5182", "394.412, 527.362, 19.2359, 0.4832", "394.951, 527.128, 19.2802, 0.4682", "395.354, 527.55, 19.1249, 0.4272", "395.372, 528.639, 19.0499, 0.4162", "395.989, 529.504, 19.025, 0.5366", "396.502, 530.501, 18.9618, 0.5338", "396.502, 531.593, 18.8654, 0.483", "396.064, 532.613, 18.7214, 0.3814", "395.939, 533.676, 18.76, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "391.814, 516.277, 17.4949, 0.719", "391.493, 516.826, 17.3588, 0.2288", "390.849, 517.771, 16.9927, 0.5016", "389.897, 518.377, 16.8517, 0.7572", "388.831, 518.773, 16.6394, 0.8706", "387.822, 519.255, 16.3261, 0.7712", "386.902, 519.912, 15.963, 0.7172", "386.225, 520.782, 15.5208, 0.6716", "385.683, 521.728, 15.0062, 0.5496", "385.045, 522.664, 14.5974, 0.5062", "384.252, 523.486, 14.2433, 0.683", "383.558, 524.364, 13.8362, 0.677", "382.801, 525.211, 13.39, 0.6836", "382.059, 526.049, 12.8766, 0.6102", "381.164, 526.737, 12.3392, 0.4322", "380.119, 527.153, 11.7746, 0.305", "379.477, 527.558, 10.9925, 0.2288", "379.166, 528.567, 9.2543, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "397.263, 478.097, 24.3153, 0.8562", "396.818, 478.559, 23.7093, 1.3728", "396.218, 479.519, 23.4015, 0.9026", "395.103, 479.631, 23.2377, 0.6414", "394.226, 478.952, 23.143, 0.7082", "393.132, 478.875, 22.9723, 0.6738", "392.149, 479.457, 22.8084, 0.6914", "391.195, 480.069, 22.6659, 0.558", "390.216, 480.646, 22.4459, 0.6598", "389.212, 481.173, 22.1502, 0.5248", "388.262, 481.645, 21.6894, 0.4752", "387.22, 481.862, 21.1647, 0.5516", "386.243, 482.167, 20.525, 0.5618", "385.375, 482.849, 19.9147, 0.5342", "384.369, 483.3, 19.3279, 0.4786", "383.548, 484.039, 18.7888, 0.3984", "382.882, 484.82, 18.2837, 0.3672", "382.422, 485.821, 17.9381, 0.4242", "382.112, 486.915, 17.6749, 0.43", "381.24, 487.444, 17.4529, 0.4694", "380.112, 487.496, 17.3307, 0.6308", "379.033, 487.648, 17.1446, 0.73", "377.981, 487.744, 16.9083, 0.7424", "377.077, 487.958, 16.8884, 0.6814", "376.436, 488.831, 16.8411, 0.5196", "375.846, 489.8, 16.8204, 0.4556", "375.108, 490.617, 16.7259, 0.564", "374.234, 491.33, 16.6763, 0.5784", "373.304, 491.96, 16.7406, 0.5958", "372.467, 492.706, 16.7719, 0.4444", "371.798, 493.591, 16.8957, 0.368", "371.207, 494.519, 17.1248, 0.3792", "370.608, 495.462, 17.3876, 0.3446", "369.788, 496.235, 17.5875, 0.3198", "368.845, 496.877, 17.6501, 0.311", "367.821, 497.371, 17.5705, 0.3442", "366.799, 497.871, 17.355, 0.3928", "365.938, 498.577, 16.9919, 0.547", "365.034, 499.227, 16.5222, 0.521", "364.326, 500.041, 15.9563, 0.6152", "363.537, 500.828, 15.3781, 0.5552", "362.735, 501.605, 14.8122, 0.6682", "361.904, 502.356, 14.2778, 0.7038", "361.058, 503.096, 13.7918, 0.6994", "360.18, 503.815, 13.3736, 0.576", "359.257, 504.479, 13.0557, 0.4482", "358.304, 505.09, 12.8236, 0.4072", "357.413, 505.782, 12.5614, 0.5242", "356.662, 506.62, 12.2818, 0.4912", "356.493, 507.617, 11.9907, 0.498", "356.859, 508.662, 11.6187, 0.6382", "356.487, 509.639, 11.2411, 0.737", "355.994, 510.624, 10.8132, 0.7864", "356.14, 511.691, 10.4009, 0.6136", "356.285, 512.82, 10.0393, 0.4312", "356.436, 513.936, 9.6722, 0.34", "356.643, 515.04, 9.302, 0.3446", "357.174, 516.008, 8.9231, 0.4238", "357.557, 517.063, 8.6643, 0.4576", "357.596, 518.2, 8.4784, 0.3814", "356.721, 518.732, 7.9218, 0.4576" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "397.263, 478.097, 24.3153, 0.8562", "396.501, 479.255, 24.0759, 0.8168", "396.014, 480.279, 23.8619, 0.68", "395.796, 481.395, 23.666, 0.7346", "395.602, 482.514, 23.4697, 0.713", "395.144, 483.549, 23.2333, 0.5828", "394.522, 484.398, 22.845, 0.5502", "393.816, 485.155, 22.3222, 0.6202", "393.094, 486.019, 21.7954, 0.5748", "392.503, 486.969, 21.2742, 0.6554", "392.008, 487.97, 20.7721, 0.6898", "391.604, 489.014, 20.3239, 0.625", "391.403, 490.127, 19.9814, 0.6732", "391.062, 491.176, 19.7461, 0.8592", "390.307, 492.021, 19.5809, 0.9638", "389.528, 492.847, 19.4645, 0.9528", "388.821, 493.745, 19.3731, 0.7818", "388.073, 494.609, 19.2769, 0.7378", "387.482, 495.552, 19.1201, 0.705", "387.248, 496.637, 18.9212, 0.6356", "387.188, 497.769, 18.7765, 0.548", "386.988, 498.839, 18.5964, 0.644", "386.872, 499.918, 18.3585, 0.7124", "387.198, 500.984, 18.1546, 0.6848", "387.874, 501.896, 17.9535, 0.6958", "388.659, 502.691, 17.683, 0.6436", "389.483, 503.413, 17.3178, 0.6714", "390.254, 504.21, 16.9316, 0.5748", "390.799, 505.196, 16.592, 0.6564", "391.236, 506.253, 16.3167, 0.6882", "391.747, 507.276, 16.1005, 0.6392", "392.367, 508.232, 15.9258, 0.6154", "392.983, 509.176, 15.7345, 0.4742", "393.499, 510.179, 15.5153, 0.4552", "393.884, 511.249, 15.3049, 0.386", "394.003, 512.366, 15.0927, 0.422", "393.853, 513.488, 14.9024, 0.3778", "393.702, 514.618, 14.7798, 0.3772", "393.726, 515.754, 14.689, 0.4376", "393.935, 516.87, 14.6393, 0.4798", "394.135, 517.979, 14.6755, 0.4408", "393.902, 519.057, 14.7464, 0.4784", "393.47, 520.115, 14.7963, 0.473", "393.407, 521.232, 14.8067, 0.5986", "393.574, 522.356, 14.7494, 0.6308", "393.642, 523.49, 14.6411, 0.5202", "393.629, 524.633, 14.5315, 0.4568", "393.478, 525.757, 14.3968, 0.565", "393.286, 526.87, 14.2345, 0.5862", "393.221, 528.006, 14.1211, 0.5816", "393.303, 529.143, 14.0881, 0.5562", "393.663, 530.22, 14.0918, 0.5918", "394.007, 531.309, 14.1087, 0.4838", "394.016, 532.388, 14.262, 0.443", "393.753, 533.475, 14.3938, 0.5084", "393.639, 534.604, 14.4789, 0.6322", "393.545, 535.733, 14.6124, 0.6198", "393.373, 536.86, 14.7467, 0.6266", "393.535, 537.977, 14.9148, 0.4962", "393.639, 539.1, 15.1471, 0.4894", "393.655, 540.24, 15.404, 0.4798", "393.674, 541.37, 15.7095, 0.4484", "393.785, 542.456, 16.0974, 0.4568", "394.109, 543.542, 16.4496, 0.6068", "394.51, 544.589, 16.8045, 0.689", "395.001, 545.616, 17.0983, 0.6482", "395.498, 546.644, 17.3317, 0.5962", "395.962, 547.676, 17.5423, 0.6136", "396.291, 548.765, 17.6997, 0.55", "396.253, 549.886, 17.7204, 0.4398", "396.022, 551.002, 17.705, 0.4274", "395.928, 552.117, 17.7254, 0.3876", "395.921, 553.256, 17.652, 0.3966", "396.064, 554.38, 17.4607, 0.4682", "396.479, 555.426, 17.1748, 0.5622", "396.992, 556.437, 16.8474, 0.4688", "397.512, 557.396, 16.4252, 0.4492", "397.868, 558.444, 15.9721, 0.356", "398.253, 559.513, 15.1514, 0.4576" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "399.254, 474.499, 34.7936, 0.6598", "399.09, 475.508, 35.8744, 0.59", "398.726, 476.483, 36.9015, 0.508", "398.198, 477.42, 37.8151, 0.5818", "398.042, 478.415, 38.6868, 0.539", "398.622, 479.381, 39.3887, 0.6448", "399.088, 480.425, 39.9546, 0.6284", "399.154, 481.533, 40.4894, 0.7152", "399.218, 482.592, 41.0488, 0.5356", "399.546, 483.682, 41.5111, 0.4828", "399.941, 484.742, 41.7992, 0.3972", "400.415, 485.615, 42.2276, 0.407" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "399.254, 474.499, 34.7936, 0.6598", "399.305, 474.114, 35.8176, 0.9152", "399.371, 473.027, 36.178, 0.6954", "399.06, 471.944, 36.3048, 0.526", "398.342, 471.28, 36.4176, 0.5616", "398.227, 470.154, 36.5215, 0.532", "397.884, 469.083, 36.6246, 0.4842", "397.443, 468.121, 36.7385, 0.3604", "396.955, 467.094, 36.876, 0.302", "396.667, 465.987, 37.0594, 0.2782", "396.253, 464.942, 37.2949, 0.2814", "395.593, 464.209, 37.7014, 0.287", "394.867, 463.423, 38.2844, 0.2988", "394.125, 462.642, 38.9836, 0.3142", "393.264, 461.888, 39.6376, 0.3736", "392.486, 461.227, 40.3449, 0.334", "391.882, 460.762, 41.2784, 0.3004", "391.279, 460.298, 42.3419, 0.2752", "390.518, 459.571, 43.2393, 0.2756", "389.729, 458.744, 43.9177, 0.2766", "388.929, 457.933, 44.4329, 0.2784", "388.047, 457.221, 44.8431, 0.2818", "387.587, 456.411, 45.1926, 0.2876", "386.998, 455.432, 45.4381, 0.3", "386.461, 454.422, 45.6422, 0.3164", "385.929, 453.469, 45.92, 0.3776", "385.229, 452.617, 46.2017, 0.3418", "384.347, 451.923, 46.4145, 0.3136", "383.273, 451.534, 46.5802, 0.305", "382.219, 451.1, 46.741, 0.305", "381.166, 450.665, 47.049, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "135.218, 226.145, 82.042, 0.399", "134.502, 225.131, 82.3385, 0.2288", "134.149, 224.278, 80.7937, 0.277", "134.047, 223.514, 80.0402, 0.279", "133.332, 222.697, 79.2932, 0.2828", "132.812, 221.791, 78.7562, 0.2898", "132.537, 220.901, 78.3289, 0.3026", "132.41, 219.908, 77.7815, 0.3274", "131.886, 218.996, 77.275, 0.3678", "131.2, 218.102, 76.823, 0.47", "130.528, 217.22, 76.3619, 0.5278", "130.159, 216.238, 75.8486, 0.5878", "129.529, 215.301, 75.4684, 0.4702", "129.203, 214.405, 75.3502, 0.4468", "128.758, 213.786, 75.448, 0.3748", "128.844, 212.991, 75.3572, 0.3794", "129.49, 212.341, 75.0019, 0.4056", "129.434, 211.274, 74.6035, 0.5954", "128.841, 210.319, 74.1499, 0.492", "127.963, 209.636, 73.6361, 0.4496", "127.272, 208.795, 73.0747, 0.3338", "126.727, 207.875, 72.5292, 0.3", "126.151, 206.924, 72.0888, 0.2744", "125.298, 206.187, 71.776, 0.2744", "124.3, 205.629, 71.5728, 0.2742", "123.408, 204.936, 71.4585, 0.274", "122.857, 203.962, 71.4106, 0.2736", "122.654, 202.845, 71.4, 0.2728", "122.083, 201.929, 71.4, 0.2712", "121.033, 201.609, 71.4, 0.2684", "120.246, 200.877, 71.4, 0.2626", "120.235, 199.737, 71.4, 0.2542", "120.235, 198.593, 71.4, 0.2288", "120.121, 197.454, 71.4, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "135.218, 226.145, 82.042, 0.399", "134.397, 224.922, 82.4765, 0.3342", "134.124, 223.826, 82.8948, 0.3006", "134.038, 222.702, 83.2591, 0.2758", "133.498, 221.707, 83.5887, 0.2766", "133.004, 220.738, 83.9737, 0.2786", "132.768, 219.629, 84.352, 0.282", "132.18, 218.895, 84.7507, 0.288", "131.576, 218.558, 85.3516, 0.3006", "131.558, 217.441, 85.8354, 0.3174", "131.434, 216.31, 86.1683, 0.3796", "131.373, 215.19, 86.4674, 0.3456", "131.177, 214.164, 86.6919, 0.3214", "131.061, 213.133, 86.7412, 0.315", "131.095, 212.019, 86.7588, 0.3454", "131.102, 211.078, 86.9509, 0.4264", "130.831, 210.056, 87.2889, 0.4574", "130.64, 208.939, 87.6271, 0.4062", "130.485, 207.892, 87.7985, 0.3812", "129.994, 206.895, 88.0684, 0.4524", "129.884, 205.834, 88.4215, 0.471", "130.005, 204.731, 88.7541, 0.6006", "129.811, 203.684, 89.1764, 0.6062", "129.41, 202.642, 89.5437, 0.612", "129.194, 201.534, 89.9049, 0.6452", "128.969, 200.571, 90.4238, 0.5972", "128.548, 199.562, 90.9863, 0.5836", "128.172, 198.515, 91.5597, 0.4206", "127.784, 197.458, 92.1116, 0.329", "127.396, 196.401, 92.6478, 0.2814", "127.007, 195.344, 93.1566, 0.287", "126.768, 194.235, 93.599, 0.2988", "126.682, 193.096, 93.9904, 0.3142", "126.805, 191.963, 94.3608, 0.3734", "127.216, 190.907, 94.7638, 0.3338", "127.644, 190.05, 95.3817, 0.3", "128.058, 189.242, 96.2077, 0.2746", "128.666, 188.337, 96.9956, 0.2746", "129.073, 187.359, 97.7995, 0.2746", "129.302, 186.33, 98.6059, 0.2746", "129.53, 185.253, 99.3297, 0.2746", "129.878, 184.179, 99.918, 0.2748", "130.403, 183.165, 100.34, 0.275", "130.986, 182.18, 100.651, 0.2752", "131.601, 181.215, 100.876, 0.2758", "131.701, 180.138, 101.166, 0.2768", "131.71, 179.034, 101.493, 0.2796", "131.605, 177.895, 101.739, 0.2796", "131.737, 176.758, 101.921, 0.305", "132.126, 175.683, 102.117, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "400.415, 485.615, 42.2276, 0.407", "401.002, 485.742, 40.3315, 0.2288", "401.701, 486.616, 40.8055, 0.326", "402.132, 487.646, 41.0315, 0.3956", "402.767, 488.565, 41.2714, 0.3746", "403.297, 489.471, 41.5436, 0.3776", "403.44, 490.506, 41.7018, 0.4088", "403.934, 491.298, 41.8102, 0.5698", "404.549, 492.159, 41.848, 0.5966", "405.57, 492.561, 41.8916, 0.5936", "406.579, 493.09, 41.9381, 0.614", "407.614, 493.574, 41.9675, 0.5258", "408.571, 494.199, 41.9908, 0.5166", "409.476, 494.898, 41.9978, 0.6662", "410.309, 495.681, 41.9882, 0.8198", "411.15, 496.456, 41.9516, 0.7912", "411.952, 497.272, 41.9202, 0.6578", "412.631, 498.179, 41.8449, 0.5716", "413.149, 499.161, 41.7032, 0.5438", "414.088, 499.76, 41.697, 0.5382", "414.973, 500.483, 41.7315, 0.534", "415.782, 501.292, 41.8065, 0.4966", "416.432, 502.233, 41.9199, 0.571", "417.314, 502.93, 42.1428, 0.6968", "418.075, 503.776, 42.3704, 0.7598", "418.565, 504.704, 42.7417, 0.789", "419.095, 505.712, 43.0909, 0.5824", "419.492, 506.777, 43.4168, 0.5486", "420.007, 507.644, 43.7626, 0.3932", "420.927, 508.118, 44.1048, 0.3254", "421.955, 508.563, 44.3125, 0.2746", "422.99, 509.002, 44.3971, 0.2746", "423.621, 509.353, 44.2061, 0.2746", "424.297, 510.261, 43.9653, 0.2746", "424.896, 511.228, 43.7497, 0.2746", "425.594, 512.124, 43.5778, 0.2748", "426.06, 513.165, 43.4664, 0.2748", "426.52, 514.187, 43.4092, 0.275", "427.324, 514.996, 43.4, 0.2756", "428.286, 515.599, 43.4, 0.2764", "429.359, 515.987, 43.4, 0.278", "430.448, 516.335, 43.4, 0.2808", "431.471, 516.833, 43.4, 0.286", "432.368, 517.536, 43.4, 0.297", "433.149, 518.369, 43.4, 0.3108", "434.007, 519.121, 43.4, 0.3672", "434.745, 519.989, 43.4, 0.322", "435.72, 520.561, 43.4, 0.2796", "436.651, 521.224, 43.4, 0.2288", "437.352, 522.122, 43.4, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "400.415, 485.615, 42.2276, 0.407", "400.495, 486.202, 42.5729, 0.5238", "400.817, 487.247, 42.9201, 0.4906", "400.803, 488.38, 43.0973, 0.4968", "400.61, 489.473, 43.1063, 0.6362", "400.425, 490.594, 43.0469, 0.7324", "400.232, 491.721, 42.9783, 0.7838", "400.182, 492.859, 42.9643, 0.5794", "400.418, 493.974, 42.992, 0.5118", "400.925, 494.999, 43.0833, 0.4758", "401.399, 496.023, 43.2634, 0.4334", "401.717, 497.037, 43.5968, 0.465", "401.855, 498.156, 43.9457, 0.4458", "402.251, 499.223, 44.235, 0.5592", "402.711, 500.237, 44.4329, 0.504", "402.858, 501.36, 44.6676, 0.5468", "403.102, 502.429, 45.0106, 0.6078", "403.335, 503.516, 45.411, 0.5812", "403.707, 504.566, 45.8668, 0.5232", "403.976, 505.655, 46.3117, 0.4582", "404.053, 506.553, 46.7023, 0.3594", "404.197, 507.375, 47.2349, 0.3", "404.453, 508.483, 47.6196, 0.2746", "404.962, 509.506, 47.8887, 0.2746", "405.511, 510.501, 48.069, 0.2746", "405.779, 511.6, 48.1869, 0.2746", "405.909, 512.718, 48.2591, 0.2746", "406.322, 513.783, 48.2983, 0.2746", "406.764, 514.825, 48.3529, 0.2746", "407.369, 515.795, 48.4305, 0.2746", "407.803, 516.841, 48.5405, 0.2746", "407.948, 517.97, 48.692, 0.2746", "407.951, 519.114, 48.8897, 0.2746", "408.101, 520.213, 49.1767, 0.2746", "408.587, 521.134, 49.6409, 0.2746", "409.175, 521.95, 50.2631, 0.2746", "409.724, 522.837, 50.9466, 0.2746", "410.111, 523.874, 51.5393, 0.2746", "410.178, 524.999, 51.9742, 0.2746", "409.957, 526.118, 52.2665, 0.2746", "409.99, 527.226, 52.4406, 0.2746", "410.403, 528.287, 52.5398, 0.2746", "410.899, 529.317, 52.6148, 0.2746", "411.27, 530.395, 52.7052, 0.2746", "411.501, 531.514, 52.827, 0.2746", "411.68, 532.644, 52.9802, 0.2748", "411.924, 533.749, 53.2064, 0.2748", "412.343, 534.619, 53.6396, 0.2752", "412.747, 535.608, 54.1377, 0.2758", "412.929, 536.728, 54.5544, 0.2766", "412.667, 537.83, 54.8764, 0.2786", "412.302, 538.913, 55.116, 0.2818", "411.953, 540.002, 55.2908, 0.2882", "411.839, 541.137, 55.428, 0.2994", "411.793, 542.28, 55.5747, 0.3228", "411.753, 543.424, 55.7556, 0.3536", "411.665, 544.555, 56.0162, 0.4722", "411.393, 545.463, 56.5076, 0.393", "410.922, 546.346, 57.1287, 0.3248", "409.981, 546.985, 57.6282, 0.2736", "409.182, 547.802, 58.007, 0.2728", "408.566, 548.764, 58.2932, 0.2712", "408.06, 549.781, 58.5203, 0.2684", "407.512, 550.784, 58.6502, 0.2626", "406.956, 551.784, 58.7202, 0.2542", "406.574, 552.863, 58.7686, 0.2288", "406.311, 553.976, 58.8109, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_428",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_429",
    "groups" : [ ],
    "sections" : [ "dend_30", "apic_0", "dend_23", "dend_18", "dend_3", "dend_0", "dend_32", "dend_31", "apic_4", "apic_1", "dend_25", "dend_24", "dend_20", "dend_19", "dend_13", "dend_4", "dend_2", "dend_1", "apic_10", "apic_5", "apic_3", "apic_2", "dend_27", "dend_26", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_5", "apic_7", "apic_6", "dend_29", "dend_28", "dend_17", "dend_16", "dend_12", "dend_11", "dend_7", "dend_6", "apic_9", "apic_8", "dend_9", "dend_8" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_4", "apic_1", "apic_10", "apic_5", "apic_3", "apic_2", "apic_7", "apic_6", "apic_9", "apic_8" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_23", "dend_18", "dend_3", "dend_0", "dend_32", "dend_31", "dend_25", "dend_24", "dend_20", "dend_19", "dend_13", "dend_4", "dend_2", "dend_1", "dend_27", "dend_26", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_5", "dend_29", "dend_28", "dend_17", "dend_16", "dend_12", "dend_11", "dend_7", "dend_6", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18225",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.7500718"
  }, {
    "group" : "apic",
    "value" : "2.7500718"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "324.00787"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0012083319",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.3895742E-7",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.37190843",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0039571775",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.16775882",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.004925574",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.002101315",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.14828965",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.39894E-4",
    "erev" : "-95.39225"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "1.6046138E-4",
    "erev" : "-95.39225"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.1576881E-4",
    "erev" : "-95.39225"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "9.742825E-5",
    "erev" : "-95.39225"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "4.2916703E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "8.2631165E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_485507735",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_485507735

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_3
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_10, id: apic_10, parent: apic_4
create apic_10
public apic_10
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_428, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_428
// Group: {name=ModelViewParmSubset_429, groups=[], sections=[dend_30, apic_0, dend_23, dend_18, dend_3, dend_0, dend_32, dend_31, apic_4, apic_1, dend_25, dend_24, dend_20, dend_19, dend_13, dend_4, dend_2, dend_1, apic_10, apic_5, apic_3, apic_2, dend_27, dend_26, dend_22, dend_21, dend_15, dend_14, dend_10, dend_5, apic_7, apic_6, dend_29, dend_28, dend_17, dend_16, dend_12, dend_11, dend_7, dend_6, apic_9, apic_8, dend_9, dend_8]}
objref ModelViewParmSubset_429
// Group: {name=apic, groups=[], sections=[apic_0, apic_4, apic_1, apic_10, apic_5, apic_3, apic_2, apic_7, apic_6, apic_9, apic_8]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=dend, groups=[], sections=[dend_30, dend_23, dend_18, dend_3, dend_0, dend_32, dend_31, dend_25, dend_24, dend_20, dend_19, dend_13, dend_4, dend_2, dend_1, dend_27, dend_26, dend_22, dend_21, dend_15, dend_14, dend_10, dend_5, dend_29, dend_28, dend_17, dend_16, dend_12, dend_11, dend_7, dend_6, dend_9, dend_8]}
objref dend
// Group: {name=OneSecGrp_SectionRef_18225, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_18225
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_30, dend_30, dend_30, dend_30, dend_30, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_485507735
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49993829445884036)
    connect dend_30(0), soma_0(0.49993829445884036)
    connect apic_0(0), soma_0(0.49993829445884036)
    connect dend_23(0), soma_0(0.49993829445884036)
    connect dend_18(0), soma_0(0.49993829445884036)
    connect dend_3(0), soma_0(0.49993829445884036)
    connect dend_0(0), soma_0(0.49993829445884036)
    connect axon_1(0), axon_0(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_10(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 401.039, 453.71, 27.44, 8.103 ) }
    soma_0 { pt3dadd( 405.09, 453.71, 27.44, 8.103 ) }
    soma_0 { pt3dadd( 409.142, 453.71, 27.44, 8.103 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 405.091, 453.71, 27.44, 1.0 ) }
    axon_0 { pt3dadd( 410.932, 467.526, 27.44, 1.0 ) }
    axon_0 { pt3dadd( 416.773, 481.342, 27.44, 1.0 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 6/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 401.567, 453.922, 23.8204, 0.4576 ) }
    dend_30 { pt3dadd( 400.504, 453.55, 23.0263, 0.6282 ) }
    dend_30 { pt3dadd( 399.553, 452.942, 22.7133, 0.5766 ) }
    dend_30 { pt3dadd( 398.847, 452.121, 22.2191, 0.491 ) }
    dend_30 { pt3dadd( 397.951, 451.764, 21.5198, 0.5132 ) }
    dend_30 { pt3dadd( 396.879, 451.73, 20.7222, 0.592 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 12/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 401.291, 453.098, 27.6842, 3.4082 ) }
    apic_0 { pt3dadd( 400.979, 452.071, 27.7278, 1.5904 ) }
    apic_0 { pt3dadd( 400.92, 450.973, 27.6537, 0.9082 ) }
    apic_0 { pt3dadd( 400.623, 449.901, 27.522, 0.969 ) }
    apic_0 { pt3dadd( 399.827, 449.101, 27.5097, 0.9194 ) }
    apic_0 { pt3dadd( 398.973, 448.395, 27.6422, 0.7012 ) }
    apic_0 { pt3dadd( 398.324, 447.502, 27.8842, 0.6804 ) }
    apic_0 { pt3dadd( 397.567, 446.648, 28.1557, 0.8368 ) }
    apic_0 { pt3dadd( 396.754, 445.845, 28.3996, 0.868 ) }
    apic_0 { pt3dadd( 395.922, 445.058, 28.6009, 1.0368 ) }
    apic_0 { pt3dadd( 395.001, 444.38, 28.7512, 1.0408 ) }
    apic_0 { pt3dadd( 394.117, 443.655, 28.8722, 0.9466 ) }
    apic_0 { pt3dadd( 393.305, 442.854, 29.0069, 1.0364 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 407.495, 451.642, 24.1137, 0.2288 ) }
    dend_23 { pt3dadd( 408.026, 450.741, 23.0063, 0.4166 ) }
    dend_23 { pt3dadd( 407.637, 449.978, 22.4265, 0.5854 ) }
    dend_23 { pt3dadd( 407.89, 448.9, 21.8864, 0.6202 ) }
    dend_23 { pt3dadd( 408.908, 448.398, 21.5046, 0.6628 ) }
    dend_23 { pt3dadd( 409.776, 447.726, 21.3527, 0.6188 ) }
    dend_23 { pt3dadd( 410.75, 447.128, 21.2825, 0.4486 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 32/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 408.602, 453.265, 28.8137, 1.144 ) }
    dend_18 { pt3dadd( 409.364, 453.206, 30.9826, 0.7386 ) }
    dend_18 { pt3dadd( 410.122, 452.899, 31.971, 0.618 ) }
    dend_18 { pt3dadd( 411.202, 452.573, 32.9109, 0.6752 ) }
    dend_18 { pt3dadd( 412.236, 452.926, 33.8503, 0.5626 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 404.462, 457.428, 27.9444, 0.9152 ) }
    dend_3 { pt3dadd( 404.971, 458.436, 27.4981, 0.8026 ) }
    dend_3 { pt3dadd( 404.994, 459.571, 27.3426, 0.5996 ) }
    dend_3 { pt3dadd( 404.517, 460.574, 27.131, 0.6196 ) }
    dend_3 { pt3dadd( 404.343, 461.612, 26.8253, 0.5634 ) }
    dend_3 { pt3dadd( 404.995, 462.532, 26.6705, 0.6824 ) }
    dend_3 { pt3dadd( 405.777, 463.309, 26.7096, 0.736 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 44/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 408.142, 451.991, 25.7367, 0.2288 ) }
    dend_0 { pt3dadd( 409.106, 451.406, 25.7243, 0.5644 ) }
    dend_0 { pt3dadd( 409.902, 450.616, 25.682, 0.555 ) }
    dend_0 { pt3dadd( 410.63, 449.84, 25.8139, 0.6684 ) }
    dend_0 { pt3dadd( 411.376, 449.045, 26.0763, 0.7028 ) }
    dend_0 { pt3dadd( 411.904, 448.246, 26.1364, 0.7034 ) }
    dend_0 { pt3dadd( 412.18, 447.194, 26.2849, 0.5538 ) }
    dend_0 { pt3dadd( 412.665, 446.32, 26.6423, 0.5516 ) }
    dend_0 { pt3dadd( 413.183, 445.302, 26.9742, 0.5842 ) }
    dend_0 { pt3dadd( 413.7, 444.327, 27.2919, 0.694 ) }
    dend_0 { pt3dadd( 414.262, 443.477, 27.6683, 0.6596 ) }
    dend_0 { pt3dadd( 414.793, 442.48, 27.9294, 0.8346 ) }
    dend_0 { pt3dadd( 415.315, 441.605, 28.2097, 0.9162 ) }
    dend_0 { pt3dadd( 415.953, 440.764, 28.4936, 0.8738 ) }
    dend_0 { pt3dadd( 416.903, 440.19, 28.6751, 0.8202 ) }
    dend_0 { pt3dadd( 417.858, 439.601, 28.8408, 0.5984 ) }
    dend_0 { pt3dadd( 418.727, 438.867, 28.9811, 0.554 ) }
    dend_0 { pt3dadd( 419.562, 438.111, 29.1488, 0.5198 ) }
    dend_0 { pt3dadd( 420.168, 437.191, 29.1967, 0.681 ) }
    dend_0 { pt3dadd( 420.969, 436.409, 29.1542, 0.8048 ) }
    dend_0 { pt3dadd( 421.764, 435.592, 29.1368, 0.74 ) }
    dend_0 { pt3dadd( 422.571, 434.8, 29.1939, 0.6762 ) }
    dend_0 { pt3dadd( 423.478, 434.126, 29.3098, 0.7418 ) }
    dend_0 { pt3dadd( 424.414, 433.471, 29.4193, 0.657 ) }
    dend_0 { pt3dadd( 425.251, 432.717, 29.4669, 0.5862 ) }
    dend_0 { pt3dadd( 425.714, 431.688, 29.4896, 0.4942 ) }
    dend_0 { pt3dadd( 425.786, 430.575, 29.6198, 0.5904 ) }
    dend_0 { pt3dadd( 425.856, 429.462, 29.8301, 0.6174 ) }
    dend_0 { pt3dadd( 425.866, 428.322, 30.0412, 0.4878 ) }
    dend_0 { pt3dadd( 425.866, 427.179, 30.2408, 0.4318 ) }
    dend_0 { pt3dadd( 425.906, 426.038, 30.4254, 0.348 ) }
    dend_0 { pt3dadd( 426.115, 424.922, 30.5967, 0.326 ) }
    dend_0 { pt3dadd( 426.324, 423.806, 30.7353, 0.324 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 77/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 416.773, 481.342, 27.44, 1.0 ) }
    axon_1 { pt3dadd( 422.614, 495.158, 27.44, 1.0 ) }
    axon_1 { pt3dadd( 428.456, 508.974, 27.44, 1.0 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 80/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 396.879, 451.73, 20.7222, 0.592 ) }
    dend_32 { pt3dadd( 396.885, 450.767, 20.3299, 0.2288 ) }
    dend_32 { pt3dadd( 396.921, 449.741, 19.6801, 0.349 ) }
    dend_32 { pt3dadd( 397.086, 448.668, 19.3708, 0.4328 ) }
    dend_32 { pt3dadd( 396.566, 447.878, 19.0367, 0.469 ) }
    dend_32 { pt3dadd( 395.776, 447.281, 18.9131, 0.4288 ) }
    dend_32 { pt3dadd( 394.794, 446.748, 18.7756, 0.4178 ) }
    dend_32 { pt3dadd( 394.21, 445.813, 18.5871, 0.5464 ) }
    dend_32 { pt3dadd( 394.034, 444.707, 18.2943, 0.5198 ) }
    dend_32 { pt3dadd( 393.849, 443.632, 17.8467, 0.613 ) }
    dend_32 { pt3dadd( 393.592, 442.555, 17.28, 0.5514 ) }
    dend_32 { pt3dadd( 393.313, 441.488, 16.616, 0.659 ) }
    dend_32 { pt3dadd( 392.864, 440.494, 15.8838, 0.6978 ) }
    dend_32 { pt3dadd( 392.461, 439.483, 15.1188, 0.6344 ) }
    dend_32 { pt3dadd( 392.236, 438.462, 14.3164, 0.7156 ) }
    dend_32 { pt3dadd( 392.034, 437.474, 13.4804, 0.8174 ) }
    dend_32 { pt3dadd( 391.53, 436.51, 12.7087, 0.7854 ) }
    dend_32 { pt3dadd( 390.91, 435.559, 12.0758, 0.6532 ) }
    dend_32 { pt3dadd( 390.284, 434.621, 11.5464, 0.5336 ) }
    dend_32 { pt3dadd( 389.64, 433.705, 11.0613, 0.6162 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_32 { pt3dadd( 389.112, 432.704, 10.6694, 0.6662 ) }
    dend_32 { pt3dadd( 388.745, 431.652, 10.4217, 0.5738 ) }
    dend_32 { pt3dadd( 388.057, 430.986, 10.1156, 0.6128 ) }
    dend_32 { pt3dadd( 387.915, 430.214, 9.5709, 0.5804 ) }
    dend_32 { pt3dadd( 387.359, 429.272, 9.0313, 0.5706 ) }
    dend_32 { pt3dadd( 386.633, 428.411, 8.5105, 0.5366 ) }
    dend_32 { pt3dadd( 385.998, 427.473, 8.0296, 0.5508 ) }
    dend_32 { pt3dadd( 385.491, 426.465, 7.5885, 0.4322 ) }
    dend_32 { pt3dadd( 384.748, 425.642, 6.734, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 9/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 396.879, 451.73, 20.7222, 0.592 ) }
    dend_31 { pt3dadd( 396.879, 452.042, 19.8587, 0.5556 ) }
    dend_31 { pt3dadd( 397.16, 452.221, 18.7827, 0.4574 ) }
    dend_31 { pt3dadd( 397.648, 452.793, 17.7593, 0.4252 ) }
    dend_31 { pt3dadd( 398.002, 453.834, 17.0813, 0.5534 ) }
    dend_31 { pt3dadd( 397.454, 454.31, 16.6871, 0.565 ) }
    dend_31 { pt3dadd( 396.685, 454.532, 16.5445, 0.5402 ) }
    dend_31 { pt3dadd( 396.15, 454.974, 16.7663, 0.4898 ) }
    dend_31 { pt3dadd( 395.758, 456.006, 17.0309, 0.4186 ) }
    dend_31 { pt3dadd( 395.471, 457.079, 17.1131, 0.4066 ) }
    dend_31 { pt3dadd( 395.091, 458.127, 17.0157, 0.4882 ) }
    dend_31 { pt3dadd( 394.651, 459.18, 16.8036, 0.5926 ) }
    dend_31 { pt3dadd( 394.245, 460.212, 16.4391, 0.5566 ) }
    dend_31 { pt3dadd( 393.724, 461.173, 15.9476, 0.4606 ) }
    dend_31 { pt3dadd( 393.089, 462.095, 15.4436, 0.4248 ) }
    dend_31 { pt3dadd( 392.447, 463.007, 14.9505, 0.5826 ) }
    dend_31 { pt3dadd( 391.789, 463.878, 14.4463, 0.4734 ) }
    dend_31 { pt3dadd( 391.315, 464.871, 14.0403, 0.3906 ) }
    dend_31 { pt3dadd( 391.19, 465.995, 13.7901, 0.3428 ) }
    dend_31 { pt3dadd( 391.16, 467.113, 13.573, 0.4286 ) }
    dend_31 { pt3dadd( 391.337, 468.22, 13.3826, 0.4256 ) }
    dend_31 { pt3dadd( 391.37, 469.349, 13.2689, 0.5214 ) }
    dend_31 { pt3dadd( 391.177, 470.397, 13.3154, 0.4366 ) }
    dend_31 { pt3dadd( 390.961, 471.489, 13.3621, 0.408 ) }
    dend_31 { pt3dadd( 390.858, 472.615, 13.2983, 0.4182 ) }
    dend_31 { pt3dadd( 390.612, 473.707, 13.1249, 0.5872 ) }
    dend_31 { pt3dadd( 390.25, 474.761, 12.8439, 0.6284 ) }
    dend_31 { pt3dadd( 390.224, 475.84, 12.4604, 0.6546 ) }
    dend_31 { pt3dadd( 390.297, 476.973, 12.097, 0.7178 ) }
    dend_31 { pt3dadd( 390.263, 478.115, 11.7975, 0.764 ) }
    dend_31 { pt3dadd( 390.407, 479.225, 11.5079, 0.7356 ) }
    dend_31 { pt3dadd( 390.4, 480.361, 11.299, 0.7806 ) }
    dend_31 { pt3dadd( 390.179, 481.468, 11.2023, 0.8466 ) }
    dend_31 { pt3dadd( 389.921, 482.565, 11.0732, 0.8238 ) }
    dend_31 { pt3dadd( 389.933, 483.697, 10.967, 0.5728 ) }
    dend_31 { pt3dadd( 390.344, 484.744, 10.8137, 0.4332 ) }
    dend_31 { pt3dadd( 390.375, 485.849, 10.5831, 0.4234 ) }
    dend_31 { pt3dadd( 389.932, 486.867, 10.2904, 0.5686 ) }
    dend_31 { pt3dadd( 389.564, 487.935, 9.9842, 0.7328 ) }
    dend_31 { pt3dadd( 389.371, 489.06, 9.7393, 0.8596 ) }
    dend_31 { pt3dadd( 388.962, 490.126, 9.5453, 0.813 ) }
    dend_31 { pt3dadd( 388.513, 491.177, 9.4013, 0.7224 ) }
    dend_31 { pt3dadd( 388.197, 492.272, 9.306, 0.573 ) }
    dend_31 { pt3dadd( 387.945, 493.388, 9.2189, 0.435 ) }
    dend_31 { pt3dadd( 387.52, 494.387, 8.9947, 0.4208 ) }
    dend_31 { pt3dadd( 387.141, 495.392, 8.6503, 0.3644 ) }
    dend_31 { pt3dadd( 386.654, 496.417, 8.3272, 0.4068 ) }
    dend_31 { pt3dadd( 385.893, 497.269, 7.8562, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 57/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 393.305, 442.854, 29.0069, 1.0364 ) }
    apic_4 { pt3dadd( 392.621, 442.242, 29.2348, 1.0638 ) }
    apic_4 { pt3dadd( 391.665, 441.618, 29.4546, 0.8732 ) }
    apic_4 { pt3dadd( 390.668, 441.059, 29.6402, 0.7766 ) }
    apic_4 { pt3dadd( 389.689, 440.467, 29.7993, 0.7248 ) }
    apic_4 { pt3dadd( 388.627, 440.053, 29.9634, 0.697 ) }
    apic_4 { pt3dadd( 387.509, 439.96, 30.1664, 0.5422 ) }
    apic_4 { pt3dadd( 386.394, 439.834, 30.2383, 0.5286 ) }
    apic_4 { pt3dadd( 385.38, 439.338, 30.3646, 0.548 ) }
    apic_4 { pt3dadd( 384.499, 438.625, 30.52, 0.5962 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 67/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 393.305, 442.854, 29.0069, 1.0364 ) }
    apic_1 { pt3dadd( 393.198, 441.537, 29.4137, 0.6864 ) }
    apic_1 { pt3dadd( 393.191, 440.398, 29.5221, 0.5812 ) }
    apic_1 { pt3dadd( 393.185, 439.254, 29.5596, 0.6276 ) }
    apic_1 { pt3dadd( 393.346, 438.121, 29.5831, 0.602 ) }
    apic_1 { pt3dadd( 394.043, 437.216, 29.5935, 0.6402 ) }
    apic_1 { pt3dadd( 394.636, 436.238, 29.5848, 0.5222 ) }
    apic_1 { pt3dadd( 395.232, 435.261, 29.5492, 0.5336 ) }
    apic_1 { pt3dadd( 396.05, 434.463, 29.4843, 0.5826 ) }
    apic_1 { pt3dadd( 397.0, 433.876, 29.4647, 0.5386 ) }
    apic_1 { pt3dadd( 397.953, 433.268, 29.433, 0.425 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 78/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 410.75, 447.128, 21.2825, 0.4486 ) }
    dend_25 { pt3dadd( 411.171, 447.382, 21.84, 0.2288 ) }
    dend_25 { pt3dadd( 412.127, 448.01, 21.6045, 0.5746 ) }
    dend_25 { pt3dadd( 413.238, 448.152, 21.5126, 0.574 ) }
    dend_25 { pt3dadd( 414.174, 447.537, 21.3885, 0.7034 ) }
    dend_25 { pt3dadd( 414.571, 446.483, 21.2064, 0.7684 ) }
    dend_25 { pt3dadd( 414.383, 445.383, 20.9107, 0.8226 ) }
    dend_25 { pt3dadd( 414.664, 444.286, 20.5652, 0.7868 ) }
    dend_25 { pt3dadd( 415.409, 443.43, 20.1999, 0.9244 ) }
    dend_25 { pt3dadd( 416.058, 442.675, 19.6981, 0.8762 ) }
    dend_25 { pt3dadd( 416.263, 442.27, 18.969, 0.6582 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 89/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 410.75, 447.128, 21.2825, 0.4486 ) }
    dend_24 { pt3dadd( 410.481, 446.058, 21.0309, 0.3338 ) }
    dend_24 { pt3dadd( 409.458, 445.675, 20.9895, 0.2898 ) }
    dend_24 { pt3dadd( 408.423, 445.228, 20.996, 0.3038 ) }
    dend_24 { pt3dadd( 407.724, 444.482, 20.9428, 0.3236 ) }
    dend_24 { pt3dadd( 407.705, 443.357, 20.7943, 0.3912 ) }
    dend_24 { pt3dadd( 407.462, 442.333, 20.6808, 0.3662 ) }
    dend_24 { pt3dadd( 406.851, 441.488, 20.6585, 0.3622 ) }
    dend_24 { pt3dadd( 406.479, 440.53, 20.4487, 0.3794 ) }
    dend_24 { pt3dadd( 406.217, 439.483, 20.1874, 0.5198 ) }
    dend_24 { pt3dadd( 405.801, 438.581, 19.8166, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_24 { pt3dadd( 405.716, 437.508, 19.4286, 0.483 ) }
    dend_24 { pt3dadd( 405.539, 436.392, 19.0406, 0.6096 ) }
    dend_24 { pt3dadd( 405.317, 435.284, 18.6618, 0.688 ) }
    dend_24 { pt3dadd( 405.038, 434.178, 18.3693, 0.6762 ) }
    dend_24 { pt3dadd( 404.708, 433.084, 18.1403, 0.5026 ) }
    dend_24 { pt3dadd( 404.278, 432.051, 17.9141, 0.459 ) }
    dend_24 { pt3dadd( 403.976, 430.966, 17.7078, 0.4002 ) }
    dend_24 { pt3dadd( 403.916, 429.831, 17.5703, 0.4134 ) }
    dend_24 { pt3dadd( 403.901, 428.686, 17.4963, 0.5308 ) }
    dend_24 { pt3dadd( 404.372, 427.726, 17.5792, 0.5272 ) }
    dend_24 { pt3dadd( 404.826, 426.746, 17.7953, 0.4504 ) }
    dend_24 { pt3dadd( 405.051, 425.666, 18.0365, 0.4186 ) }
    dend_24 { pt3dadd( 405.11, 424.535, 18.1585, 0.5106 ) }
    dend_24 { pt3dadd( 405.195, 423.436, 18.1228, 0.6338 ) }
    dend_24 { pt3dadd( 405.345, 422.362, 17.9425, 0.635 ) }
    dend_24 { pt3dadd( 405.28, 421.3, 17.7667, 0.5948 ) }
    dend_24 { pt3dadd( 405.091, 420.221, 17.7463, 0.728 ) }
    dend_24 { pt3dadd( 405.091, 419.102, 17.851, 0.8818 ) }
    dend_24 { pt3dadd( 405.097, 417.973, 18.0202, 0.9324 ) }
    dend_24 { pt3dadd( 405.137, 416.83, 18.1754, 0.7914 ) }
    dend_24 { pt3dadd( 405.272, 415.696, 18.2969, 0.7552 ) }
    dend_24 { pt3dadd( 405.458, 414.567, 18.3633, 0.7394 ) }
    dend_24 { pt3dadd( 405.542, 413.429, 18.3714, 0.6892 ) }
    dend_24 { pt3dadd( 405.523, 412.286, 18.3367, 0.6974 ) }
    dend_24 { pt3dadd( 405.376, 411.16, 18.2745, 0.6778 ) }
    dend_24 { pt3dadd( 405.135, 410.046, 18.2189, 0.583 ) }
    dend_24 { pt3dadd( 405.067, 408.911, 18.171, 0.461 ) }
    dend_24 { pt3dadd( 405.069, 407.771, 18.1026, 0.432 ) }
    dend_24 { pt3dadd( 405.019, 406.635, 18.064, 0.5648 ) }
    dend_24 { pt3dadd( 404.947, 405.5, 18.0529, 0.592 ) }
    dend_24 { pt3dadd( 404.825, 404.364, 18.0116, 0.5614 ) }
    dend_24 { pt3dadd( 404.731, 403.233, 17.9019, 0.6698 ) }
    dend_24 { pt3dadd( 404.907, 402.131, 17.7128, 0.7546 ) }
    dend_24 { pt3dadd( 405.419, 401.123, 17.5002, 0.7902 ) }
    dend_24 { pt3dadd( 405.927, 400.117, 17.2406, 0.7598 ) }
    dend_24 { pt3dadd( 406.165, 399.019, 16.9411, 0.7144 ) }
    dend_24 { pt3dadd( 406.044, 397.9, 16.6198, 0.5768 ) }
    dend_24 { pt3dadd( 405.734, 396.853, 16.1953, 0.581 ) }
    dend_24 { pt3dadd( 405.999, 395.852, 15.6974, 0.7034 ) }
    dend_24 { pt3dadd( 406.438, 394.91, 15.2864, 0.6018 ) }
    dend_24 { pt3dadd( 406.408, 393.922, 14.7256, 0.6348 ) }
    dend_24 { pt3dadd( 406.365, 392.897, 14.1655, 0.5374 ) }
    dend_24 { pt3dadd( 406.631, 392.011, 13.4627, 0.6688 ) }
    dend_24 { pt3dadd( 406.78, 390.935, 12.794, 0.5426 ) }
    dend_24 { pt3dadd( 406.953, 389.808, 12.2531, 0.5014 ) }
    dend_24 { pt3dadd( 407.141, 388.689, 11.8014, 0.6326 ) }
    dend_24 { pt3dadd( 407.115, 387.58, 11.4759, 0.5562 ) }
    dend_24 { pt3dadd( 406.875, 386.471, 11.246, 0.5936 ) }
    dend_24 { pt3dadd( 406.486, 385.414, 11.0014, 0.479 ) }
    dend_24 { pt3dadd( 406.67, 384.414, 10.809, 0.4746 ) }
    dend_24 { pt3dadd( 407.087, 383.622, 10.3452, 0.5986 ) }
    dend_24 { pt3dadd( 407.489, 382.633, 9.7816, 0.6444 ) }
    dend_24 { pt3dadd( 407.909, 381.612, 9.1947, 0.7088 ) }
    dend_24 { pt3dadd( 407.711, 380.507, 8.7289, 0.6994 ) }
    dend_24 { pt3dadd( 407.035, 379.649, 8.336, 0.6192 ) }
    dend_24 { pt3dadd( 406.862, 378.627, 7.9138, 0.5476 ) }
    dend_24 { pt3dadd( 406.838, 377.561, 7.642, 0.4984 ) }
    dend_24 { pt3dadd( 406.606, 376.479, 7.5179, 0.4594 ) }
    dend_24 { pt3dadd( 406.504, 375.389, 7.3584, 0.3616 ) }
    dend_24 { pt3dadd( 406.543, 374.294, 7.2343, 0.3042 ) }
    dend_24 { pt3dadd( 406.672, 373.269, 7.3353, 0.2824 ) }
    dend_24 { pt3dadd( 406.385, 372.334, 7.604, 0.289 ) }
    dend_24 { pt3dadd( 405.925, 371.333, 7.7563, 0.3014 ) }
    dend_24 { pt3dadd( 405.687, 370.238, 7.7653, 0.3238 ) }
    dend_24 { pt3dadd( 405.592, 369.104, 7.7033, 0.3674 ) }
    dend_24 { pt3dadd( 405.604, 367.963, 7.5672, 0.4396 ) }
    dend_24 { pt3dadd( 405.939, 366.928, 7.2966, 0.6154 ) }
    dend_24 { pt3dadd( 406.464, 365.946, 6.9784, 0.7364 ) }
    dend_24 { pt3dadd( 407.266, 365.204, 6.8327, 0.5848 ) }
    dend_24 { pt3dadd( 407.843, 364.245, 6.7039, 0.5254 ) }
    dend_24 { pt3dadd( 408.031, 363.13, 6.5859, 0.483 ) }
    dend_24 { pt3dadd( 407.954, 361.99, 6.5246, 0.5338 ) }
    dend_24 { pt3dadd( 408.094, 360.88, 6.734, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 73/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 412.236, 452.926, 33.8503, 0.5626 ) }
    dend_20 { pt3dadd( 413.216, 452.803, 35.0193, 0.4576 ) }
    dend_20 { pt3dadd( 414.347, 452.682, 35.5547, 0.4716 ) }
    dend_20 { pt3dadd( 415.378, 452.187, 35.7459, 0.523 ) }
    dend_20 { pt3dadd( 416.359, 451.61, 35.9976, 0.6168 ) }
    dend_20 { pt3dadd( 417.266, 451.339, 36.4804, 0.5682 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 79/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 412.236, 452.926, 33.8503, 0.5626 ) }
    dend_19 { pt3dadd( 412.534, 453.552, 34.6984, 0.4996 ) }
    dend_19 { pt3dadd( 413.111, 454.391, 35.5664, 0.5908 ) }
    dend_19 { pt3dadd( 413.333, 455.33, 36.4434, 0.6646 ) }
    dend_19 { pt3dadd( 413.136, 456.369, 37.2781, 0.577 ) }
    dend_19 { pt3dadd( 413.209, 457.5, 37.9893, 0.5898 ) }
    dend_19 { pt3dadd( 414.084, 458.216, 38.5851, 0.6772 ) }
    dend_19 { pt3dadd( 414.89, 459.028, 39.0519, 0.76 ) }
    dend_19 { pt3dadd( 415.616, 459.882, 39.4386, 0.6122 ) }
    dend_19 { pt3dadd( 416.138, 460.664, 39.9678, 0.4282 ) }
    dend_19 { pt3dadd( 416.694, 461.598, 40.4785, 0.3346 ) }
    dend_19 { pt3dadd( 417.229, 462.443, 40.9993, 0.3336 ) }
    dend_19 { pt3dadd( 417.593, 463.491, 41.3916, 0.4092 ) }
    dend_19 { pt3dadd( 417.966, 464.542, 41.7967, 0.4024 ) }
    dend_19 { pt3dadd( 418.684, 465.383, 42.1529, 0.4164 ) }
    dend_19 { pt3dadd( 419.45, 466.225, 42.4424, 0.5418 ) }
    dend_19 { pt3dadd( 419.83, 467.199, 42.9008, 0.5202 ) }
    dend_19 { pt3dadd( 420.137, 468.28, 43.4364, 0.57 ) }
    dend_19 { pt3dadd( 420.371, 469.376, 44.0546, 0.683 ) }
    dend_19 { pt3dadd( 420.608, 470.432, 44.7731, 0.5648 ) }
    dend_19 { pt3dadd( 420.948, 471.405, 45.5882, 0.5628 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 421.662, 471.766, 46.5682, 0.4194 ) }
    dend_19 { pt3dadd( 421.827, 472.821, 47.4874, 0.376 ) }
    dend_19 { pt3dadd( 421.848, 473.957, 48.2614, 0.3578 ) }
    dend_19 { pt3dadd( 421.945, 475.076, 48.9362, 0.48 ) }
    dend_19 { pt3dadd( 421.986, 476.169, 49.546, 0.4074 ) }
    dend_19 { pt3dadd( 421.51, 477.103, 50.0623, 0.3518 ) }
    dend_19 { pt3dadd( 420.519, 477.672, 50.451, 0.324 ) }
    dend_19 { pt3dadd( 419.546, 478.225, 50.8276, 0.363 ) }
    dend_19 { pt3dadd( 418.622, 478.807, 51.2744, 0.4538 ) }
    dend_19 { pt3dadd( 417.688, 479.413, 51.704, 0.5338 ) }
    dend_19 { pt3dadd( 416.812, 480.146, 52.0405, 0.4228 ) }
    dend_19 { pt3dadd( 416.159, 480.82, 52.4664, 0.3332 ) }
    dend_19 { pt3dadd( 415.626, 481.487, 53.0642, 0.2888 ) }
    dend_19 { pt3dadd( 415.267, 482.409, 53.433, 0.301 ) }
    dend_19 { pt3dadd( 415.629, 483.426, 53.629, 0.3242 ) }
    dend_19 { pt3dadd( 415.864, 484.531, 53.769, 0.3636 ) }
    dend_19 { pt3dadd( 415.947, 485.658, 53.7751, 0.4546 ) }
    dend_19 { pt3dadd( 416.083, 486.758, 53.6343, 0.5354 ) }
    dend_19 { pt3dadd( 416.255, 487.723, 53.3179, 0.4258 ) }
    dend_19 { pt3dadd( 417.066, 488.463, 53.0774, 0.3386 ) }
    dend_19 { pt3dadd( 418.14, 488.594, 53.0933, 0.2992 ) }
    dend_19 { pt3dadd( 418.387, 489.338, 53.4895, 0.32 ) }
    dend_19 { pt3dadd( 419.397, 489.754, 54.0112, 0.3604 ) }
    dend_19 { pt3dadd( 419.95, 490.286, 54.5255, 0.4264 ) }
    dend_19 { pt3dadd( 419.189, 490.957, 55.0967, 0.5916 ) }
    dend_19 { pt3dadd( 418.251, 491.442, 55.729, 0.691 ) }
    dend_19 { pt3dadd( 417.386, 492.096, 56.3405, 0.5056 ) }
    dend_19 { pt3dadd( 416.573, 492.875, 56.8422, 0.3548 ) }
    dend_19 { pt3dadd( 415.948, 493.804, 57.2855, 0.282 ) }
    dend_19 { pt3dadd( 415.389, 494.774, 57.7058, 0.2882 ) }
    dend_19 { pt3dadd( 415.059, 495.849, 57.9961, 0.301 ) }
    dend_19 { pt3dadd( 414.561, 496.867, 58.1778, 0.3182 ) }
    dend_19 { pt3dadd( 414.101, 497.891, 58.3702, 0.381 ) }
    dend_19 { pt3dadd( 413.439, 498.798, 58.5715, 0.348 ) }
    dend_19 { pt3dadd( 412.933, 499.817, 58.728, 0.326 ) }
    dend_19 { pt3dadd( 412.835, 500.952, 58.8454, 0.3236 ) }
    dend_19 { pt3dadd( 412.461, 502.03, 58.9414, 0.3624 ) }
    dend_19 { pt3dadd( 412.15, 503.114, 58.9548, 0.4524 ) }
    dend_19 { pt3dadd( 411.672, 504.14, 59.0178, 0.5314 ) }
    dend_19 { pt3dadd( 410.83, 504.727, 59.1996, 0.4184 ) }
    dend_19 { pt3dadd( 410.202, 505.623, 59.3491, 0.3248 ) }
    dend_19 { pt3dadd( 409.945, 506.733, 59.4672, 0.2736 ) }
    dend_19 { pt3dadd( 409.42, 507.727, 59.5554, 0.2728 ) }
    dend_19 { pt3dadd( 408.877, 508.731, 59.6156, 0.2712 ) }
    dend_19 { pt3dadd( 408.448, 509.79, 59.6397, 0.2684 ) }
    dend_19 { pt3dadd( 408.096, 510.879, 59.64, 0.2626 ) }
    dend_19 { pt3dadd( 407.221, 511.597, 59.64, 0.2542 ) }
    dend_19 { pt3dadd( 406.542, 512.515, 59.64, 0.2288 ) }
    dend_19 { pt3dadd( 406.464, 513.656, 59.64, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_3 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 405.777, 463.309, 26.7096, 0.736 ) }
    dend_13 { pt3dadd( 406.485, 463.895, 26.3585, 0.6864 ) }
    dend_13 { pt3dadd( 406.888, 464.961, 26.1557, 0.7226 ) }
    dend_13 { pt3dadd( 406.952, 466.094, 26.0447, 0.7602 ) }
    dend_13 { pt3dadd( 407.141, 467.218, 25.9836, 0.7906 ) }
    dend_13 { pt3dadd( 407.376, 468.317, 25.8519, 0.8094 ) }
    dend_13 { pt3dadd( 407.418, 469.45, 25.6936, 0.797 ) }
    dend_13 { pt3dadd( 407.645, 470.568, 25.6011, 0.7746 ) }
    dend_13 { pt3dadd( 407.806, 471.66, 25.6378, 0.7308 ) }
    dend_13 { pt3dadd( 407.623, 472.788, 25.6357, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 59/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 405.777, 463.309, 26.7096, 0.736 ) }
    dend_4 { pt3dadd( 405.891, 463.822, 26.8849, 0.7298 ) }
    dend_4 { pt3dadd( 405.597, 464.91, 27.0997, 0.7736 ) }
    dend_4 { pt3dadd( 405.022, 465.892, 27.2324, 0.8162 ) }
    dend_4 { pt3dadd( 404.348, 466.816, 27.3253, 0.853 ) }
    dend_4 { pt3dadd( 403.594, 467.676, 27.3537, 0.8974 ) }
    dend_4 { pt3dadd( 403.01, 468.66, 27.3242, 0.8664 ) }
    dend_4 { pt3dadd( 402.603, 469.729, 27.2546, 0.6724 ) }
    dend_4 { pt3dadd( 401.957, 470.672, 27.1706, 0.5186 ) }
    dend_4 { pt3dadd( 401.185, 471.495, 27.126, 0.377 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 426.324, 423.806, 30.7353, 0.324 ) }
    dend_2 { pt3dadd( 426.219, 423.123, 30.7622, 0.3604 ) }
    dend_2 { pt3dadd( 426.066, 422.006, 30.6916, 0.4624 ) }
    dend_2 { pt3dadd( 426.206, 420.883, 30.5558, 0.483 ) }
    dend_2 { pt3dadd( 426.425, 419.774, 30.3878, 0.6542 ) }
    dend_2 { pt3dadd( 426.588, 418.645, 30.2876, 0.5534 ) }
    dend_2 { pt3dadd( 426.746, 417.526, 30.2789, 0.566 ) }
    dend_2 { pt3dadd( 427.125, 416.462, 30.3436, 0.537 ) }
    dend_2 { pt3dadd( 427.672, 415.473, 30.4377, 0.7372 ) }
    dend_2 { pt3dadd( 428.27, 414.504, 30.4349, 0.7908 ) }
    dend_2 { pt3dadd( 428.897, 413.569, 30.3229, 0.602 ) }
    dend_2 { pt3dadd( 429.722, 412.81, 30.1, 0.507 ) }
    dend_2 { pt3dadd( 430.475, 411.985, 29.8096, 0.4656 ) }
    dend_2 { pt3dadd( 431.037, 411.013, 29.5033, 0.4208 ) }
    dend_2 { pt3dadd( 431.694, 410.085, 29.2471, 0.4108 ) }
    dend_2 { pt3dadd( 432.403, 409.192, 29.0917, 0.496 ) }
    dend_2 { pt3dadd( 433.016, 408.239, 29.0942, 0.6078 ) }
    dend_2 { pt3dadd( 433.63, 407.287, 29.2166, 0.5814 ) }
    dend_2 { pt3dadd( 434.244, 406.334, 29.4196, 0.5234 ) }
    dend_2 { pt3dadd( 434.875, 405.387, 29.6475, 0.4588 ) }
    dend_2 { pt3dadd( 435.527, 404.448, 29.853, 0.3604 ) }
    dend_2 { pt3dadd( 436.185, 403.51, 30.0247, 0.302 ) }
    dend_2 { pt3dadd( 436.842, 402.575, 30.1711, 0.2782 ) }
    dend_2 { pt3dadd( 437.611, 401.734, 30.3187, 0.2814 ) }
    dend_2 { pt3dadd( 438.516, 401.038, 30.4951, 0.287 ) }
    dend_2 { pt3dadd( 439.458, 400.391, 30.7236, 0.2988 ) }
    dend_2 { pt3dadd( 440.387, 399.725, 31.0243, 0.314 ) }
    dend_2 { pt3dadd( 441.145, 398.912, 31.463, 0.3734 ) }
    dend_2 { pt3dadd( 441.861, 398.272, 32.1507, 0.3338 ) }
    dend_2 { pt3dadd( 442.594, 398.001, 33.1134, 0.2998 ) }
    dend_2 { pt3dadd( 443.488, 397.617, 34.0365, 0.2744 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( 442.981, 396.738, 34.9152, 0.2742 ) }
    dend_2 { pt3dadd( 442.014, 397.077, 35.8072, 0.274 ) }
    dend_2 { pt3dadd( 441.283, 397.363, 36.78, 0.2736 ) }
    dend_2 { pt3dadd( 440.555, 396.992, 37.6855, 0.2728 ) }
    dend_2 { pt3dadd( 439.661, 396.28, 38.3219, 0.2712 ) }
    dend_2 { pt3dadd( 438.882, 395.444, 38.761, 0.2684 ) }
    dend_2 { pt3dadd( 438.611, 394.337, 39.0309, 0.2626 ) }
    dend_2 { pt3dadd( 438.611, 393.193, 39.1628, 0.2542 ) }
    dend_2 { pt3dadd( 438.611, 392.049, 39.2, 0.2288 ) }
    dend_2 { pt3dadd( 438.611, 390.905, 39.2, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 426.324, 423.806, 30.7353, 0.324 ) }
    dend_1 { pt3dadd( 426.34, 423.619, 31.626, 0.2288 ) }
    dend_1 { pt3dadd( 426.789, 422.639, 31.9164, 0.2826 ) }
    dend_1 { pt3dadd( 427.736, 422.017, 32.0152, 0.2894 ) }
    dend_1 { pt3dadd( 428.471, 421.149, 32.0902, 0.3018 ) }
    dend_1 { pt3dadd( 429.13, 420.223, 32.1423, 0.3258 ) }
    dend_1 { pt3dadd( 430.008, 419.503, 32.1734, 0.3666 ) }
    dend_1 { pt3dadd( 430.926, 418.841, 32.1852, 0.4602 ) }
    dend_1 { pt3dadd( 431.674, 417.976, 32.1793, 0.5458 ) }
    dend_1 { pt3dadd( 432.082, 416.973, 32.1709, 0.4446 ) }
    dend_1 { pt3dadd( 432.09, 415.829, 32.1591, 0.3758 ) }
    dend_1 { pt3dadd( 432.09, 414.685, 32.1429, 0.3574 ) }
    dend_1 { pt3dadd( 432.153, 413.546, 32.1205, 0.4792 ) }
    dend_1 { pt3dadd( 432.582, 412.541, 32.0894, 0.4056 ) }
    dend_1 { pt3dadd( 433.485, 411.875, 32.0429, 0.3496 ) }
    dend_1 { pt3dadd( 434.514, 411.374, 31.978, 0.3142 ) }
    dend_1 { pt3dadd( 435.444, 410.728, 31.8945, 0.3734 ) }
    dend_1 { pt3dadd( 436.27, 409.936, 31.7954, 0.3338 ) }
    dend_1 { pt3dadd( 437.175, 409.312, 31.621, 0.3 ) }
    dend_1 { pt3dadd( 437.946, 408.783, 31.2514, 0.2746 ) }
    dend_1 { pt3dadd( 438.854, 408.091, 30.9834, 0.2746 ) }
    dend_1 { pt3dadd( 439.536, 407.172, 30.8165, 0.2744 ) }
    dend_1 { pt3dadd( 440.344, 406.39, 30.746, 0.2744 ) }
    dend_1 { pt3dadd( 441.455, 406.172, 30.7636, 0.2742 ) }
    dend_1 { pt3dadd( 442.186, 405.578, 30.9434, 0.274 ) }
    dend_1 { pt3dadd( 442.633, 405.06, 31.3443, 0.2736 ) }
    dend_1 { pt3dadd( 443.285, 404.136, 31.6616, 0.2728 ) }
    dend_1 { pt3dadd( 444.017, 403.294, 31.8998, 0.2712 ) }
    dend_1 { pt3dadd( 444.753, 402.438, 32.0645, 0.2684 ) }
    dend_1 { pt3dadd( 445.276, 401.423, 32.1619, 0.2626 ) }
    dend_1 { pt3dadd( 446.171, 400.826, 32.2, 0.2542 ) }
    dend_1 { pt3dadd( 447.236, 400.409, 32.2, 0.2288 ) }
    dend_1 { pt3dadd( 448.22, 399.828, 32.2, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_4 (entry count 43/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 384.499, 438.625, 30.52, 0.5962 ) }
    apic_10 { pt3dadd( 383.91, 439.567, 31.9519, 0.2288 ) }
    apic_10 { pt3dadd( 383.351, 440.461, 33.3855, 0.3138 ) }
    apic_10 { pt3dadd( 382.822, 441.369, 34.004, 0.343 ) }
    apic_10 { pt3dadd( 382.822, 442.429, 34.7152, 0.4216 ) }
    apic_10 { pt3dadd( 382.82, 443.491, 35.4687, 0.4488 ) }
    apic_10 { pt3dadd( 382.548, 444.578, 36.1533, 0.3892 ) }
    apic_10 { pt3dadd( 382.238, 445.658, 36.7472, 0.3552 ) }
    apic_10 { pt3dadd( 381.422, 446.454, 37.182, 0.3784 ) }
    apic_10 { pt3dadd( 381.017, 447.516, 37.4923, 0.4598 ) }
    apic_10 { pt3dadd( 381.175, 448.647, 37.7314, 0.653 ) }
    apic_10 { pt3dadd( 381.356, 449.735, 38.015, 0.8062 ) }
    apic_10 { pt3dadd( 381.019, 450.805, 38.3303, 0.7118 ) }
    apic_10 { pt3dadd( 380.923, 451.941, 38.6036, 0.774 ) }
    apic_10 { pt3dadd( 380.63, 453.026, 38.8508, 0.8804 ) }
    apic_10 { pt3dadd( 380.418, 454.08, 39.2218, 0.8938 ) }
    apic_10 { pt3dadd( 380.111, 455.163, 39.6192, 0.895 ) }
    apic_10 { pt3dadd( 379.818, 456.236, 40.0523, 0.783 ) }
    apic_10 { pt3dadd( 379.796, 457.356, 40.4933, 0.6722 ) }
    apic_10 { pt3dadd( 379.699, 458.464, 40.9209, 0.4534 ) }
    apic_10 { pt3dadd( 379.581, 459.524, 41.3896, 0.3428 ) }
    apic_10 { pt3dadd( 379.611, 460.617, 41.8636, 0.3064 ) }
    apic_10 { pt3dadd( 379.533, 461.733, 42.2083, 0.336 ) }
    apic_10 { pt3dadd( 379.478, 462.862, 42.4768, 0.3778 ) }
    apic_10 { pt3dadd( 379.426, 463.979, 42.7983, 0.5168 ) }
    apic_10 { pt3dadd( 379.281, 465.091, 43.1662, 0.4776 ) }
    apic_10 { pt3dadd( 379.213, 466.226, 43.5238, 0.4736 ) }
    apic_10 { pt3dadd( 379.378, 467.338, 43.9135, 0.5898 ) }
    apic_10 { pt3dadd( 380.001, 468.2, 44.3892, 0.6628 ) }
    apic_10 { pt3dadd( 380.531, 469.046, 44.9994, 0.5736 ) }
    apic_10 { pt3dadd( 380.863, 470.106, 45.5003, 0.5828 ) }
    apic_10 { pt3dadd( 381.049, 471.231, 45.9491, 0.669 ) }
    apic_10 { pt3dadd( 381.138, 472.329, 46.4506, 0.721 ) }
    apic_10 { pt3dadd( 381.597, 473.34, 46.9641, 0.6542 ) }
    apic_10 { pt3dadd( 382.288, 474.234, 47.4564, 0.637 ) }
    apic_10 { pt3dadd( 382.898, 475.119, 48.0169, 0.5454 ) }
    apic_10 { pt3dadd( 383.441, 476.103, 48.5831, 0.437 ) }
    apic_10 { pt3dadd( 384.101, 477.026, 49.1193, 0.3938 ) }
    apic_10 { pt3dadd( 384.982, 477.742, 49.6084, 0.4634 ) }
    apic_10 { pt3dadd( 385.859, 478.477, 50.0259, 0.5518 ) }
    apic_10 { pt3dadd( 386.502, 479.007, 50.654, 0.4558 ) }
    apic_10 { pt3dadd( 387.024, 479.74, 51.3738, 0.3952 ) }
    apic_10 { pt3dadd( 387.863, 480.427, 51.8977, 0.4 ) }
    apic_10 { pt3dadd( 388.892, 480.799, 52.2043, 0.5256 ) }
    apic_10 { pt3dadd( 389.794, 481.457, 52.453, 0.6512 ) }
    apic_10 { pt3dadd( 390.502, 482.303, 52.7372, 0.7168 ) }
    apic_10 { pt3dadd( 391.179, 483.076, 53.0858, 0.5064 ) }
    apic_10 { pt3dadd( 392.061, 483.565, 53.4461, 0.3566 ) }
    apic_10 { pt3dadd( 392.902, 484.182, 53.6502, 0.2852 ) }
    apic_10 { pt3dadd( 393.774, 484.818, 53.8126, 0.294 ) }
    apic_10 { pt3dadd( 394.362, 485.304, 54.2315, 0.3118 ) }
    apic_10 { pt3dadd( 395.113, 485.636, 54.8369, 0.338 ) }
    apic_10 { pt3dadd( 396.066, 485.938, 55.5677, 0.42 ) }
    apic_10 { pt3dadd( 397.039, 485.844, 56.4032, 0.4096 ) }
    apic_10 { pt3dadd( 398.099, 485.499, 57.1816, 0.4914 ) }
    apic_10 { pt3dadd( 399.224, 485.347, 57.7884, 0.3814 ) }
    apic_10 { pt3dadd( 400.29, 485.124, 58.315, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_10 { pt3dadd( 400.878, 484.372, 58.8672, 0.2288 ) }
    apic_10 { pt3dadd( 401.915, 484.454, 59.4826, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 2/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 384.499, 438.625, 30.52, 0.5962 ) }
    apic_5 { pt3dadd( 383.581, 437.818, 30.6337, 0.6262 ) }
    apic_5 { pt3dadd( 382.642, 437.17, 30.7107, 0.7416 ) }
    apic_5 { pt3dadd( 381.627, 436.645, 30.7588, 0.6644 ) }
    apic_5 { pt3dadd( 380.596, 436.149, 30.7916, 0.563 ) }
    apic_5 { pt3dadd( 379.621, 435.556, 30.8008, 0.6308 ) }
    apic_5 { pt3dadd( 378.698, 434.891, 30.821, 0.657 ) }
    apic_5 { pt3dadd( 377.751, 434.258, 30.8409, 0.7318 ) }
    apic_5 { pt3dadd( 376.752, 433.748, 30.767, 0.743 ) }
    apic_5 { pt3dadd( 375.724, 433.284, 30.6149, 0.6958 ) }
    apic_5 { pt3dadd( 374.756, 432.687, 30.4522, 0.71 ) }
    apic_5 { pt3dadd( 373.981, 431.867, 30.2722, 0.7006 ) }
    apic_5 { pt3dadd( 373.343, 430.929, 30.0678, 0.6278 ) }
    apic_5 { pt3dadd( 372.646, 430.029, 29.8911, 0.5322 ) }
    apic_5 { pt3dadd( 371.853, 429.206, 29.766, 0.6214 ) }
    apic_5 { pt3dadd( 370.981, 428.467, 29.6783, 0.6382 ) }
    apic_5 { pt3dadd( 370.035, 427.826, 29.6111, 0.7036 ) }
    apic_5 { pt3dadd( 369.09, 427.181, 29.5546, 0.659 ) }
    apic_5 { pt3dadd( 368.215, 426.448, 29.4983, 0.6948 ) }
    apic_5 { pt3dadd( 367.353, 425.695, 29.4297, 0.6432 ) }
    apic_5 { pt3dadd( 366.523, 424.91, 29.3356, 0.6634 ) }
    apic_5 { pt3dadd( 365.789, 424.053, 29.174, 0.5962 ) }
    apic_5 { pt3dadd( 365.047, 423.203, 28.9548, 0.5208 ) }
    apic_5 { pt3dadd( 364.134, 422.535, 28.7445, 0.6002 ) }
    apic_5 { pt3dadd( 363.128, 421.992, 28.567, 0.5984 ) }
    apic_5 { pt3dadd( 362.171, 421.37, 28.415, 0.6324 ) }
    apic_5 { pt3dadd( 361.42, 420.539, 28.2442, 0.5134 ) }
    apic_5 { pt3dadd( 360.848, 419.568, 28.0717, 0.4912 ) }
    apic_5 { pt3dadd( 360.042, 418.777, 27.9543, 0.6294 ) }
    apic_5 { pt3dadd( 359.057, 418.202, 27.9067, 0.7026 ) }
    apic_5 { pt3dadd( 358.092, 417.589, 27.9309, 0.812 ) }
    apic_5 { pt3dadd( 357.17, 416.914, 28.0417, 0.912 ) }
    apic_5 { pt3dadd( 356.24, 416.273, 28.2738, 0.9116 ) }
    apic_5 { pt3dadd( 355.318, 415.614, 28.5919, 0.897 ) }
    apic_5 { pt3dadd( 354.326, 415.057, 28.9484, 0.9378 ) }
    apic_5 { pt3dadd( 353.257, 414.71, 29.3636, 0.9124 ) }
    apic_5 { pt3dadd( 352.204, 414.404, 29.864, 0.8982 ) }
    apic_5 { pt3dadd( 351.188, 413.969, 30.4052, 0.9414 ) }
    apic_5 { pt3dadd( 350.314, 413.284, 30.9523, 0.9126 ) }
    apic_5 { pt3dadd( 349.578, 412.435, 31.4776, 0.9298 ) }
    apic_5 { pt3dadd( 348.832, 411.572, 31.9388, 0.8484 ) }
    apic_5 { pt3dadd( 348.189, 410.633, 32.3492, 0.7888 ) }
    apic_5 { pt3dadd( 347.857, 409.582, 32.7765, 0.6932 ) }
    apic_5 { pt3dadd( 347.547, 408.491, 33.1663, 0.6726 ) }
    apic_5 { pt3dadd( 347.087, 407.486, 33.5667, 0.7888 ) }
    apic_5 { pt3dadd( 346.38, 406.663, 33.9884, 0.7118 ) }
    apic_5 { pt3dadd( 345.497, 405.949, 34.3297, 0.846 ) }
    apic_5 { pt3dadd( 344.551, 405.32, 34.4954, 0.8938 ) }
    apic_5 { pt3dadd( 343.676, 404.617, 34.4887, 0.814 ) }
    apic_5 { pt3dadd( 342.933, 403.751, 34.4084, 0.7978 ) }
    apic_5 { pt3dadd( 342.161, 402.906, 34.3087, 0.8144 ) }
    apic_5 { pt3dadd( 341.353, 402.098, 34.2093, 0.848 ) }
    apic_5 { pt3dadd( 340.546, 401.287, 34.1326, 0.895 ) }
    apic_5 { pt3dadd( 339.742, 400.473, 34.0858, 0.8294 ) }
    apic_5 { pt3dadd( 338.954, 399.644, 34.0533, 0.7618 ) }
    apic_5 { pt3dadd( 338.253, 398.75, 33.9917, 0.6036 ) }
    apic_5 { pt3dadd( 337.742, 397.741, 33.9016, 0.6984 ) }
    apic_5 { pt3dadd( 337.303, 396.693, 33.8934, 0.5908 ) }
    apic_5 { pt3dadd( 336.57, 395.835, 33.9755, 0.6242 ) }
    apic_5 { pt3dadd( 335.653, 395.154, 34.0866, 0.6998 ) }
    apic_5 { pt3dadd( 334.785, 394.409, 34.2224, 0.772 ) }
    apic_5 { pt3dadd( 333.908, 393.674, 34.3703, 0.7788 ) }
    apic_5 { pt3dadd( 333.005, 392.973, 34.5299, 0.7214 ) }
    apic_5 { pt3dadd( 332.164, 392.204, 34.7138, 0.7272 ) }
    apic_5 { pt3dadd( 331.394, 391.391, 34.9804, 0.8798 ) }
    apic_5 { pt3dadd( 330.695, 390.496, 35.2842, 0.9312 ) }
    apic_5 { pt3dadd( 329.995, 389.598, 35.595, 1.0058 ) }
    apic_5 { pt3dadd( 329.197, 388.814, 35.9584, 1.0166 ) }
    apic_5 { pt3dadd( 328.297, 388.138, 36.3353, 0.9686 ) }
    apic_5 { pt3dadd( 327.527, 387.315, 36.7111, 0.9812 ) }
    apic_5 { pt3dadd( 326.867, 386.4, 37.0723, 0.9688 ) }
    apic_5 { pt3dadd( 326.214, 385.463, 37.3736, 0.8904 ) }
    apic_5 { pt3dadd( 325.49, 384.577, 37.6124, 0.785 ) }
    apic_5 { pt3dadd( 324.796, 383.671, 37.8148, 0.8544 ) }
    apic_5 { pt3dadd( 324.14, 382.766, 38.0439, 0.8414 ) }
    apic_5 { pt3dadd( 323.245, 382.075, 38.2771, 0.8184 ) }
    apic_5 { pt3dadd( 322.321, 381.404, 38.4675, 0.7708 ) }
    apic_5 { pt3dadd( 321.473, 380.635, 38.621, 0.7064 ) }
    apic_5 { pt3dadd( 320.624, 379.871, 38.7439, 0.6994 ) }
    apic_5 { pt3dadd( 319.694, 379.205, 38.845, 0.8278 ) }
    apic_5 { pt3dadd( 318.712, 378.64, 38.953, 0.8378 ) }
    apic_5 { pt3dadd( 317.646, 378.291, 39.1224, 0.8176 ) }
    apic_5 { pt3dadd( 316.6, 377.853, 39.2773, 0.7396 ) }
    apic_5 { pt3dadd( 315.692, 377.209, 39.3476, 0.793 ) }
    apic_5 { pt3dadd( 315.12, 376.232, 39.4229, 0.8456 ) }
    apic_5 { pt3dadd( 314.734, 375.178, 39.5497, 0.9384 ) }
    apic_5 { pt3dadd( 314.165, 374.186, 39.6533, 0.906 ) }
    apic_5 { pt3dadd( 313.496, 373.26, 39.7331, 0.9236 ) }
    apic_5 { pt3dadd( 312.715, 372.43, 39.8065, 0.8072 ) }
    apic_5 { pt3dadd( 311.812, 371.728, 39.8812, 0.8568 ) }
    apic_5 { pt3dadd( 310.948, 370.98, 39.9526, 0.8042 ) }
    apic_5 { pt3dadd( 310.175, 370.139, 40.0305, 0.7232 ) }
    apic_5 { pt3dadd( 309.475, 369.234, 40.1338, 0.721 ) }
    apic_5 { pt3dadd( 308.785, 368.327, 40.2844, 0.6848 ) }
    apic_5 { pt3dadd( 308.062, 367.466, 40.5174, 0.7734 ) }
    apic_5 { pt3dadd( 307.254, 366.682, 40.8036, 0.6402 ) }
    apic_5 { pt3dadd( 306.464, 365.879, 41.0987, 0.6926 ) }
    apic_5 { pt3dadd( 305.801, 364.982, 41.4201, 0.7086 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_5 { pt3dadd( 305.029, 364.14, 41.6774, 0.6764 ) }
    apic_5 { pt3dadd( 304.277, 363.28, 41.8594, 0.6866 ) }
    apic_5 { pt3dadd( 303.557, 362.399, 41.9807, 0.5966 ) }
    apic_5 { pt3dadd( 302.684, 361.658, 42.0622, 0.7288 ) }
    apic_5 { pt3dadd( 301.875, 360.863, 42.1086, 0.6656 ) }
    apic_5 { pt3dadd( 301.264, 359.909, 42.1308, 0.6726 ) }
    apic_5 { pt3dadd( 300.63, 358.993, 42.2436, 0.5414 ) }
    apic_5 { pt3dadd( 299.743, 358.313, 42.4393, 0.5392 ) }
    apic_5 { pt3dadd( 298.787, 357.712, 42.6636, 0.7388 ) }
    apic_5 { pt3dadd( 297.805, 357.127, 42.8375, 0.806 ) }
    apic_5 { pt3dadd( 296.811, 356.572, 42.9444, 0.7988 ) }
    apic_5 { pt3dadd( 295.775, 356.132, 42.9985, 0.7396 ) }
    apic_5 { pt3dadd( 294.716, 355.755, 43.1085, 0.623 ) }
    apic_5 { pt3dadd( 293.729, 355.189, 43.2202, 0.6698 ) }
    apic_5 { pt3dadd( 292.821, 354.498, 43.3387, 0.8516 ) }
    apic_5 { pt3dadd( 291.815, 353.965, 43.4935, 0.9558 ) }
    apic_5 { pt3dadd( 290.808, 353.462, 43.7136, 0.9072 ) }
    apic_5 { pt3dadd( 289.863, 352.844, 43.9636, 0.847 ) }
    apic_5 { pt3dadd( 288.856, 352.314, 44.1745, 0.8198 ) }
    apic_5 { pt3dadd( 287.8, 351.901, 44.3576, 0.8164 ) }
    apic_5 { pt3dadd( 286.841, 351.281, 44.5253, 0.8104 ) }
    apic_5 { pt3dadd( 285.829, 350.758, 44.7045, 0.798 ) }
    apic_5 { pt3dadd( 284.802, 350.294, 44.9324, 0.7814 ) }
    apic_5 { pt3dadd( 283.832, 349.719, 45.1917, 0.7198 ) }
    apic_5 { pt3dadd( 282.896, 349.062, 45.4322, 0.7552 ) }
    apic_5 { pt3dadd( 281.942, 348.446, 45.6761, 0.7814 ) }
    apic_5 { pt3dadd( 280.953, 347.91, 45.9463, 0.7916 ) }
    apic_5 { pt3dadd( 280.003, 347.292, 46.1961, 0.7682 ) }
    apic_5 { pt3dadd( 279.13, 346.552, 46.3837, 0.7016 ) }
    apic_5 { pt3dadd( 278.257, 345.815, 46.5301, 0.6904 ) }
    apic_5 { pt3dadd( 277.31, 345.174, 46.6547, 0.8108 ) }
    apic_5 { pt3dadd( 276.362, 344.541, 46.7684, 0.8068 ) }
    apic_5 { pt3dadd( 275.516, 343.773, 46.8916, 0.758 ) }
    apic_5 { pt3dadd( 274.76, 342.923, 47.0624, 0.64 ) }
    apic_5 { pt3dadd( 274.059, 342.039, 47.3088, 0.5558 ) }
    apic_5 { pt3dadd( 273.33, 341.174, 47.5986, 0.6598 ) }
    apic_5 { pt3dadd( 272.549, 340.348, 47.9007, 0.7352 ) }
    apic_5 { pt3dadd( 271.815, 339.492, 48.2339, 0.758 ) }
    apic_5 { pt3dadd( 271.1, 338.617, 48.5598, 0.6814 ) }
    apic_5 { pt3dadd( 270.268, 337.839, 48.8362, 0.6584 ) }
    apic_5 { pt3dadd( 269.377, 337.142, 49.1061, 0.726 ) }
    apic_5 { pt3dadd( 268.547, 336.386, 49.3797, 0.7732 ) }
    apic_5 { pt3dadd( 267.738, 335.58, 49.5967, 0.7826 ) }
    apic_5 { pt3dadd( 266.924, 334.776, 49.7524, 0.7218 ) }
    apic_5 { pt3dadd( 266.092, 333.991, 49.8652, 0.7588 ) }
    apic_5 { pt3dadd( 265.212, 333.262, 49.9495, 0.7878 ) }
    apic_5 { pt3dadd( 264.286, 332.592, 50.0184, 0.8044 ) }
    apic_5 { pt3dadd( 263.373, 331.91, 50.1066, 0.7882 ) }
    apic_5 { pt3dadd( 262.472, 331.217, 50.2323, 0.757 ) }
    apic_5 { pt3dadd( 261.571, 330.525, 50.3283, 0.7038 ) }
    apic_5 { pt3dadd( 260.709, 329.796, 50.3706, 0.584 ) }
    apic_5 { pt3dadd( 259.845, 329.061, 50.4532, 0.4628 ) }
    apic_5 { pt3dadd( 258.921, 328.417, 50.6164, 0.4362 ) }
    apic_5 { pt3dadd( 258.055, 327.694, 50.8273, 0.5678 ) }
    apic_5 { pt3dadd( 257.22, 326.914, 51.0303, 0.6214 ) }
    apic_5 { pt3dadd( 256.384, 326.141, 51.2481, 0.5012 ) }
    apic_5 { pt3dadd( 255.543, 325.387, 51.4996, 0.4272 ) }
    apic_5 { pt3dadd( 254.748, 324.582, 51.7432, 0.4844 ) }
    apic_5 { pt3dadd( 253.944, 323.774, 51.9294, 0.5606 ) }
    apic_5 { pt3dadd( 253.056, 323.053, 52.071, 0.6194 ) }
    apic_5 { pt3dadd( 252.18, 322.32, 52.1861, 0.67 ) }
    apic_5 { pt3dadd( 251.325, 321.559, 52.283, 0.8198 ) }
    apic_5 { pt3dadd( 250.461, 320.81, 52.3757, 0.8248 ) }
    apic_5 { pt3dadd( 249.666, 319.999, 52.5, 0.7866 ) }
    apic_5 { pt3dadd( 248.893, 319.183, 52.6924, 0.7158 ) }
    apic_5 { pt3dadd( 247.984, 318.518, 52.9166, 0.5842 ) }
    apic_5 { pt3dadd( 247.015, 317.912, 53.1188, 0.5708 ) }
    apic_5 { pt3dadd( 246.088, 317.243, 53.2983, 0.7994 ) }
    apic_5 { pt3dadd( 245.153, 316.591, 53.4534, 0.9084 ) }
    apic_5 { pt3dadd( 244.165, 316.023, 53.5954, 1.0366 ) }
    apic_5 { pt3dadd( 243.203, 315.44, 53.804, 0.9472 ) }
    apic_5 { pt3dadd( 242.316, 314.813, 54.1495, 0.7682 ) }
    apic_5 { pt3dadd( 241.489, 314.542, 54.6795, 0.4998 ) }
    apic_5 { pt3dadd( 241.399, 315.285, 55.3263, 0.3814 ) }
    apic_5 { pt3dadd( 240.966, 314.791, 55.76, 0.3792 ) }
    apic_5 { pt3dadd( 240.571, 313.771, 55.9336, 0.4656 ) }
    apic_5 { pt3dadd( 240.026, 312.794, 55.9566, 0.6424 ) }
    apic_5 { pt3dadd( 239.28, 311.933, 55.9196, 0.89 ) }
    apic_5 { pt3dadd( 238.469, 311.127, 55.8723, 1.0526 ) }
    apic_5 { pt3dadd( 237.637, 310.342, 55.8648, 0.9628 ) }
    apic_5 { pt3dadd( 236.732, 309.664, 55.9656, 0.8654 ) }
    apic_5 { pt3dadd( 235.739, 309.133, 56.1688, 0.8066 ) }
    apic_5 { pt3dadd( 234.756, 308.566, 56.3954, 0.7924 ) }
    apic_5 { pt3dadd( 233.866, 307.854, 56.6006, 0.7648 ) }
    apic_5 { pt3dadd( 233.045, 307.066, 56.807, 0.718 ) }
    apic_5 { pt3dadd( 232.238, 306.274, 57.0321, 0.6114 ) }
    apic_5 { pt3dadd( 231.394, 305.51, 57.2272, 0.5084 ) }
    apic_5 { pt3dadd( 230.457, 304.875, 57.3364, 0.5452 ) }
    apic_5 { pt3dadd( 229.463, 304.32, 57.4232, 0.653 ) }
    apic_5 { pt3dadd( 228.485, 303.746, 57.5518, 0.6594 ) }
    apic_5 { pt3dadd( 227.524, 303.131, 57.6862, 0.6956 ) }
    apic_5 { pt3dadd( 226.643, 302.406, 57.8116, 0.6446 ) }
    apic_5 { pt3dadd( 225.878, 301.56, 57.9449, 0.6658 ) }
    apic_5 { pt3dadd( 225.122, 300.707, 58.1151, 0.6006 ) }
    apic_5 { pt3dadd( 224.291, 299.945, 58.3397, 0.529 ) }
    apic_5 { pt3dadd( 223.484, 299.149, 58.583, 0.6154 ) }
    apic_5 { pt3dadd( 222.631, 298.389, 58.8084, 0.6272 ) }
    apic_5 { pt3dadd( 221.692, 297.75, 59.0346, 0.682 ) }
    apic_5 { pt3dadd( 220.801, 297.062, 59.2833, 0.6246 ) }
    apic_5 { pt3dadd( 219.977, 296.281, 59.5109, 0.6042 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_5 { pt3dadd( 219.168, 295.475, 59.68, 0.6054 ) }
    apic_5 { pt3dadd( 218.357, 294.667, 59.7954, 0.6478 ) }
    apic_5 { pt3dadd( 217.537, 293.873, 59.855, 0.7594 ) }
    apic_5 { pt3dadd( 216.631, 293.181, 59.8774, 0.8072 ) }
    apic_5 { pt3dadd( 215.623, 292.656, 59.927, 0.9802 ) }
    apic_5 { pt3dadd( 214.622, 292.107, 60.0116, 1.1214 ) }
    apic_5 { pt3dadd( 213.694, 291.441, 60.116, 1.1104 ) }
    apic_5 { pt3dadd( 212.786, 290.746, 60.247, 1.0408 ) }
    apic_5 { pt3dadd( 211.967, 289.975, 60.447, 0.923 ) }
    apic_5 { pt3dadd( 211.174, 289.172, 60.6914, 0.8772 ) }
    apic_5 { pt3dadd( 210.293, 288.448, 60.9073, 0.8706 ) }
    apic_5 { pt3dadd( 209.371, 287.771, 61.087, 0.9362 ) }
    apic_5 { pt3dadd( 208.431, 287.121, 61.2427, 0.9092 ) }
    apic_5 { pt3dadd( 207.461, 286.525, 61.4088, 0.8924 ) }
    apic_5 { pt3dadd( 206.545, 285.874, 61.6098, 0.9306 ) }
    apic_5 { pt3dadd( 205.637, 285.189, 61.8044, 0.8918 ) }
    apic_5 { pt3dadd( 204.706, 284.525, 61.9601, 0.895 ) }
    apic_5 { pt3dadd( 203.733, 283.925, 62.0743, 0.7656 ) }
    apic_5 { pt3dadd( 202.741, 283.356, 62.153, 0.7244 ) }
    apic_5 { pt3dadd( 201.741, 282.799, 62.2042, 0.8268 ) }
    apic_5 { pt3dadd( 200.668, 282.41, 62.239, 0.8362 ) }
    apic_5 { pt3dadd( 199.586, 282.043, 62.2633, 0.8136 ) }
    apic_5 { pt3dadd( 198.549, 281.562, 62.2798, 0.7384 ) }
    apic_5 { pt3dadd( 197.554, 281.044, 62.3767, 0.7608 ) }
    apic_5 { pt3dadd( 196.61, 280.455, 62.5554, 0.9304 ) }
    apic_5 { pt3dadd( 195.681, 279.794, 62.6984, 1.0812 ) }
    apic_5 { pt3dadd( 194.748, 279.168, 62.7385, 1.0118 ) }
    apic_5 { pt3dadd( 193.807, 278.538, 62.7228, 0.9756 ) }
    apic_5 { pt3dadd( 192.827, 277.948, 62.727, 0.917 ) }
    apic_5 { pt3dadd( 191.783, 277.483, 62.7712, 0.7678 ) }
    apic_5 { pt3dadd( 190.794, 276.951, 62.9202, 0.687 ) }
    apic_5 { pt3dadd( 189.938, 276.221, 63.1582, 0.7316 ) }
    apic_5 { pt3dadd( 189.18, 275.389, 63.4606, 0.7844 ) }
    apic_5 { pt3dadd( 188.399, 274.576, 63.7879, 0.7984 ) }
    apic_5 { pt3dadd( 187.541, 273.822, 64.0654, 0.7746 ) }
    apic_5 { pt3dadd( 186.571, 273.219, 64.2687, 0.7434 ) }
    apic_5 { pt3dadd( 185.559, 272.714, 64.3588, 0.6236 ) }
    apic_5 { pt3dadd( 184.565, 272.148, 64.4291, 0.7008 ) }
    apic_5 { pt3dadd( 183.722, 271.454, 64.6131, 0.765 ) }
    apic_5 { pt3dadd( 182.905, 270.699, 64.8598, 0.8092 ) }
    apic_5 { pt3dadd( 182.042, 269.948, 65.0793, 0.7972 ) }
    apic_5 { pt3dadd( 181.245, 269.129, 65.2523, 0.7724 ) }
    apic_5 { pt3dadd( 180.588, 268.199, 65.3531, 0.739 ) }
    apic_5 { pt3dadd( 179.953, 267.275, 65.3593, 0.6156 ) }
    apic_5 { pt3dadd( 179.195, 266.42, 65.3898, 0.6858 ) }
    apic_5 { pt3dadd( 178.271, 265.793, 65.5494, 0.7376 ) }
    apic_5 { pt3dadd( 177.311, 265.188, 65.7852, 0.7562 ) }
    apic_5 { pt3dadd( 176.43, 264.493, 66.106, 0.7096 ) }
    apic_5 { pt3dadd( 175.541, 263.963, 66.5778, 0.5592 ) }
    apic_5 { pt3dadd( 174.556, 263.397, 67.0113, 0.5908 ) }
    apic_5 { pt3dadd( 173.617, 262.769, 67.2904, 0.515 ) }
    apic_5 { pt3dadd( 172.738, 262.04, 67.5007, 0.5684 ) }
    apic_5 { pt3dadd( 171.969, 261.222, 67.7463, 0.6418 ) }
    apic_5 { pt3dadd( 171.262, 260.332, 67.9773, 0.6736 ) }
    apic_5 { pt3dadd( 170.384, 259.633, 68.2396, 0.552 ) }
    apic_5 { pt3dadd( 169.408, 259.061, 68.5264, 0.5168 ) }
    apic_5 { pt3dadd( 168.463, 258.416, 68.78, 0.6728 ) }
    apic_5 { pt3dadd( 167.515, 257.776, 68.985, 0.802 ) }
    apic_5 { pt3dadd( 166.57, 257.148, 69.1634, 0.9036 ) }
    apic_5 { pt3dadd( 165.508, 256.803, 69.3874, 0.847 ) }
    apic_5 { pt3dadd( 164.473, 256.337, 69.589, 0.7866 ) }
    apic_5 { pt3dadd( 163.56, 255.653, 69.7264, 0.6874 ) }
    apic_5 { pt3dadd( 162.704, 254.934, 69.7659, 0.6696 ) }
    apic_5 { pt3dadd( 161.717, 254.37, 69.813, 0.7464 ) }
    apic_5 { pt3dadd( 160.71, 253.907, 69.974, 0.812 ) }
    apic_5 { pt3dadd( 159.862, 253.149, 70.1646, 0.8504 ) }
    apic_5 { pt3dadd( 159.165, 252.244, 70.3828, 0.8664 ) }
    apic_5 { pt3dadd( 158.35, 251.449, 70.6546, 0.9358 ) }
    apic_5 { pt3dadd( 157.459, 250.77, 71.0248, 0.8724 ) }
    apic_5 { pt3dadd( 156.599, 250.053, 71.4504, 0.9994 ) }
    apic_5 { pt3dadd( 155.819, 249.279, 71.9396, 0.9636 ) }
    apic_5 { pt3dadd( 155.055, 248.495, 72.4805, 0.8418 ) }
    apic_5 { pt3dadd( 154.285, 247.669, 72.9896, 0.656 ) }
    apic_5 { pt3dadd( 153.411, 246.977, 73.4068, 0.5744 ) }
    apic_5 { pt3dadd( 152.275, 246.86, 73.7629, 0.519 ) }
    apic_5 { pt3dadd( 151.155, 246.778, 74.1294, 0.6388 ) }
    apic_5 { pt3dadd( 150.084, 246.459, 74.5142, 0.6962 ) }
    apic_5 { pt3dadd( 149.052, 245.99, 74.8762, 0.6852 ) }
    apic_5 { pt3dadd( 148.072, 245.542, 75.3082, 0.55 ) }
    apic_5 { pt3dadd( 147.314, 244.8, 75.7753, 0.398 ) }
    apic_5 { pt3dadd( 146.575, 244.027, 76.1188, 0.3246 ) }
    apic_5 { pt3dadd( 145.495, 243.742, 76.4565, 0.3198 ) }
    apic_5 { pt3dadd( 144.905, 243.826, 76.5797, 0.3602 ) }
    apic_5 { pt3dadd( 144.205, 243.849, 76.5332, 0.425 ) }
    apic_5 { pt3dadd( 143.586, 243.089, 76.7435, 0.5948 ) }
    apic_5 { pt3dadd( 143.014, 242.132, 77.0672, 0.667 ) }
    apic_5 { pt3dadd( 142.382, 241.187, 77.4581, 0.6066 ) }
    apic_5 { pt3dadd( 141.652, 240.307, 77.8677, 0.5232 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 88/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 397.953, 433.268, 29.433, 0.425 ) }
    apic_3 { pt3dadd( 398.119, 432.529, 29.1108, 0.3688 ) }
    apic_3 { pt3dadd( 398.347, 431.571, 28.5684, 0.43 ) }
    apic_3 { pt3dadd( 398.768, 430.564, 27.9722, 0.4282 ) }
    apic_3 { pt3dadd( 399.401, 429.621, 27.4387, 0.5256 ) }
    apic_3 { pt3dadd( 399.964, 428.636, 26.9537, 0.446 ) }
    apic_3 { pt3dadd( 400.338, 427.576, 26.5068, 0.4188 ) }
    apic_3 { pt3dadd( 400.773, 426.542, 26.1124, 0.469 ) }
    apic_3 { pt3dadd( 401.265, 425.538, 25.7404, 0.5322 ) }
    apic_3 { pt3dadd( 401.734, 424.508, 25.4114, 0.5658 ) }
    apic_3 { pt3dadd( 402.167, 423.449, 25.1588, 0.5752 ) }
    apic_3 { pt3dadd( 402.592, 422.388, 24.9821, 0.6218 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_3 { pt3dadd( 403.017, 421.325, 24.8644, 0.5654 ) }
    apic_3 { pt3dadd( 403.39, 420.244, 24.7841, 0.468 ) }
    apic_3 { pt3dadd( 403.689, 419.14, 24.7203, 0.4818 ) }
    apic_3 { pt3dadd( 404.572, 418.487, 24.6536, 0.4792 ) }
    apic_3 { pt3dadd( 405.62, 418.031, 24.5678, 0.6102 ) }
    apic_3 { pt3dadd( 406.648, 417.605, 24.3849, 0.6522 ) }
    apic_3 { pt3dadd( 407.656, 417.081, 24.1831, 0.5606 ) }
    apic_3 { pt3dadd( 408.661, 416.54, 23.9828, 0.5274 ) }
    apic_3 { pt3dadd( 409.627, 415.93, 23.804, 0.717 ) }
    apic_3 { pt3dadd( 410.467, 415.155, 23.6612, 0.7646 ) }
    apic_3 { pt3dadd( 411.151, 414.241, 23.5623, 0.7272 ) }
    apic_3 { pt3dadd( 411.758, 413.279, 23.4514, 0.5804 ) }
    apic_3 { pt3dadd( 412.296, 412.301, 23.2749, 0.4564 ) }
    apic_3 { pt3dadd( 413.009, 411.417, 23.1578, 0.4232 ) }
    apic_3 { pt3dadd( 413.785, 410.607, 23.1287, 0.5498 ) }
    apic_3 { pt3dadd( 414.491, 409.71, 23.0873, 0.5584 ) }
    apic_3 { pt3dadd( 415.19, 408.805, 23.0178, 0.5278 ) }
    apic_3 { pt3dadd( 415.622, 407.787, 22.8147, 0.467 ) }
    apic_3 { pt3dadd( 416.036, 406.762, 22.5006, 0.3758 ) }
    apic_3 { pt3dadd( 416.45, 405.736, 22.0996, 0.33 ) }
    apic_3 { pt3dadd( 416.84, 404.695, 21.6657, 0.3324 ) }
    apic_3 { pt3dadd( 417.129, 403.6, 21.2892, 0.371 ) }
    apic_3 { pt3dadd( 417.316, 402.472, 21.0256, 0.5056 ) }
    apic_3 { pt3dadd( 417.504, 401.343, 20.8674, 0.4496 ) }
    apic_3 { pt3dadd( 417.693, 400.215, 20.788, 0.4566 ) }
    apic_3 { pt3dadd( 417.881, 399.087, 20.7628, 0.3884 ) }
    apic_3 { pt3dadd( 418.071, 397.959, 20.7714, 0.4266 ) }
    apic_3 { pt3dadd( 418.262, 396.831, 20.7953, 0.386 ) }
    apic_3 { pt3dadd( 418.453, 395.703, 20.8228, 0.3936 ) }
    apic_3 { pt3dadd( 418.646, 394.575, 20.8504, 0.463 ) }
    apic_3 { pt3dadd( 418.876, 393.457, 20.873, 0.551 ) }
    apic_3 { pt3dadd( 419.213, 392.363, 20.8836, 0.4556 ) }
    apic_3 { pt3dadd( 419.584, 391.281, 20.8806, 0.3888 ) }
    apic_3 { pt3dadd( 419.958, 390.2, 20.8626, 0.4172 ) }
    apic_3 { pt3dadd( 420.343, 389.124, 20.8225, 0.4182 ) }
    apic_3 { pt3dadd( 420.736, 388.051, 20.7591, 0.4406 ) }
    apic_3 { pt3dadd( 421.119, 386.973, 20.6887, 0.6112 ) }
    apic_3 { pt3dadd( 421.39, 385.874, 20.6209, 0.5292 ) }
    apic_3 { pt3dadd( 421.376, 384.732, 20.5597, 0.4818 ) }
    apic_3 { pt3dadd( 421.191, 383.622, 20.4748, 0.5716 ) }
    apic_3 { pt3dadd( 420.767, 382.605, 20.2981, 0.5624 ) }
    apic_3 { pt3dadd( 420.182, 381.675, 20.1396, 0.7126 ) }
    apic_3 { pt3dadd( 419.521, 380.809, 20.1286, 0.6354 ) }
    apic_3 { pt3dadd( 419.053, 379.885, 20.2347, 0.617 ) }
    apic_3 { pt3dadd( 418.933, 378.849, 20.3143, 0.4356 ) }
    apic_3 { pt3dadd( 419.124, 378.658, 19.9364, 0.3566 ) }
    apic_3 { pt3dadd( 419.134, 377.742, 19.5716, 0.333 ) }
    apic_3 { pt3dadd( 419.516, 376.779, 19.1794, 0.38 ) }
    apic_3 { pt3dadd( 420.211, 375.964, 18.6472, 0.4848 ) }
    apic_3 { pt3dadd( 420.358, 374.905, 18.0444, 0.5936 ) }
    apic_3 { pt3dadd( 420.664, 373.834, 17.6312, 0.5226 ) }
    apic_3 { pt3dadd( 420.365, 372.762, 17.2266, 0.5704 ) }
    apic_3 { pt3dadd( 420.225, 371.642, 16.8304, 0.4754 ) }
    apic_3 { pt3dadd( 420.344, 370.531, 16.4641, 0.505 ) }
    apic_3 { pt3dadd( 420.893, 369.927, 16.0171, 0.475 ) }
    apic_3 { pt3dadd( 421.923, 369.829, 15.6151, 0.6032 ) }
    apic_3 { pt3dadd( 422.516, 368.986, 15.2424, 0.6348 ) }
    apic_3 { pt3dadd( 423.084, 368.013, 15.0045, 0.5508 ) }
    apic_3 { pt3dadd( 424.043, 367.412, 14.8353, 0.3994 ) }
    apic_3 { pt3dadd( 424.236, 366.318, 14.7446, 0.327 ) }
    apic_3 { pt3dadd( 424.371, 365.355, 14.5785, 0.3252 ) }
    apic_3 { pt3dadd( 424.887, 365.031, 14.0911, 0.3654 ) }
    apic_3 { pt3dadd( 425.88, 364.499, 13.6318, 0.458 ) }
    apic_3 { pt3dadd( 426.826, 363.945, 13.2227, 0.5418 ) }
    apic_3 { pt3dadd( 427.709, 363.37, 12.7646, 0.4376 ) }
    apic_3 { pt3dadd( 428.765, 363.007, 12.3657, 0.3606 ) }
    apic_3 { pt3dadd( 429.656, 362.375, 12.1432, 0.3404 ) }
    apic_3 { pt3dadd( 430.175, 361.372, 12.084, 0.3932 ) }
    apic_3 { pt3dadd( 430.953, 360.654, 12.0968, 0.5118 ) }
    apic_3 { pt3dadd( 431.92, 360.053, 12.1724, 0.631 ) }
    apic_3 { pt3dadd( 432.793, 359.4, 12.3965, 0.6538 ) }
    apic_3 { pt3dadd( 433.727, 358.809, 12.6978, 0.5142 ) }
    apic_3 { pt3dadd( 434.548, 358.038, 12.9394, 0.452 ) }
    apic_3 { pt3dadd( 435.443, 357.35, 13.1735, 0.5264 ) }
    apic_3 { pt3dadd( 436.352, 356.728, 13.4702, 0.6588 ) }
    apic_3 { pt3dadd( 437.358, 356.237, 13.6664, 0.7024 ) }
    apic_3 { pt3dadd( 438.332, 355.641, 13.7939, 0.6186 ) }
    apic_3 { pt3dadd( 438.975, 354.699, 13.8975, 0.5762 ) }
    apic_3 { pt3dadd( 439.143, 353.583, 14.0516, 0.4068 ) }
    apic_3 { pt3dadd( 439.064, 352.48, 14.2775, 0.305 ) }
    apic_3 { pt3dadd( 438.718, 351.391, 14.4464, 0.2288 ) }
    apic_3 { pt3dadd( 438.688, 350.247, 14.7118, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 82/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 397.953, 433.268, 29.433, 0.425 ) }
    apic_2 { pt3dadd( 398.189, 433.238, 30.8291, 0.4576 ) }
    apic_2 { pt3dadd( 399.321, 433.149, 32.2059, 0.4832 ) }
    apic_2 { pt3dadd( 400.398, 433.219, 32.7883, 0.5752 ) }
    apic_2 { pt3dadd( 401.35, 433.514, 33.605, 0.563 ) }
    apic_2 { pt3dadd( 401.956, 434.179, 34.6072, 0.514 ) }
    apic_2 { pt3dadd( 401.951, 435.083, 35.7633, 0.5504 ) }
    apic_2 { pt3dadd( 401.667, 435.991, 36.9751, 0.6862 ) }
    apic_2 { pt3dadd( 401.314, 436.943, 38.1422, 0.6078 ) }
    apic_2 { pt3dadd( 400.79, 437.762, 39.2398, 0.4622 ) }
    apic_2 { pt3dadd( 400.073, 438.487, 40.2265, 0.4232 ) }
    apic_2 { pt3dadd( 399.595, 439.388, 40.9937, 0.3736 ) }
    apic_2 { pt3dadd( 399.862, 440.407, 41.3888, 0.3992 ) }
    apic_2 { pt3dadd( 400.727, 441.115, 41.5862, 0.3346 ) }
    apic_2 { pt3dadd( 401.721, 441.669, 41.771, 0.3012 ) }
    apic_2 { pt3dadd( 402.617, 442.272, 42.0798, 0.2768 ) }
    apic_2 { pt3dadd( 403.434, 443.064, 42.4015, 0.2786 ) }
    apic_2 { pt3dadd( 403.914, 444.099, 42.8025, 0.282 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_2 { pt3dadd( 404.392, 445.12, 43.3188, 0.2884 ) }
    apic_2 { pt3dadd( 404.801, 446.081, 44.0216, 0.2998 ) }
    apic_2 { pt3dadd( 405.24, 447.052, 44.812, 0.3234 ) }
    apic_2 { pt3dadd( 405.121, 448.008, 45.7621, 0.3546 ) }
    apic_2 { pt3dadd( 404.935, 449.009, 46.7656, 0.474 ) }
    apic_2 { pt3dadd( 405.025, 449.922, 47.6622, 0.3964 ) }
    apic_2 { pt3dadd( 405.062, 450.606, 48.7407, 0.3314 ) }
    apic_2 { pt3dadd( 405.237, 451.327, 49.8537, 0.2858 ) }
    apic_2 { pt3dadd( 405.972, 452.203, 50.7139, 0.2954 ) }
    apic_2 { pt3dadd( 406.524, 453.184, 51.3792, 0.3124 ) }
    apic_2 { pt3dadd( 406.907, 454.262, 51.9229, 0.3482 ) }
    apic_2 { pt3dadd( 406.702, 455.377, 52.3995, 0.3952 ) }
    apic_2 { pt3dadd( 406.936, 456.044, 52.869, 0.575 ) }
    apic_2 { pt3dadd( 407.554, 456.66, 53.6085, 0.4594 ) }
    apic_2 { pt3dadd( 407.996, 457.435, 54.5532, 0.3638 ) }
    apic_2 { pt3dadd( 408.062, 458.37, 55.6167, 0.2984 ) }
    apic_2 { pt3dadd( 407.918, 459.4, 56.6625, 0.3198 ) }
    apic_2 { pt3dadd( 407.64, 460.486, 57.5753, 0.3538 ) }
    apic_2 { pt3dadd( 407.28, 461.559, 58.2792, 0.443 ) }
    apic_2 { pt3dadd( 407.26, 462.59, 58.8582, 0.483 ) }
    apic_2 { pt3dadd( 407.595, 463.608, 59.4594, 0.479 ) }
    apic_2 { pt3dadd( 407.71, 464.688, 60.048, 0.3926 ) }
    apic_2 { pt3dadd( 407.676, 465.802, 60.6144, 0.387 ) }
    apic_2 { pt3dadd( 407.763, 466.852, 61.2144, 0.3136 ) }
    apic_2 { pt3dadd( 407.858, 467.951, 61.7582, 0.2542 ) }
    apic_2 { pt3dadd( 407.829, 469.093, 62.5369, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 26/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 416.263, 442.27, 18.969, 0.6582 ) }
    dend_27 { pt3dadd( 416.596, 442.27, 18.4023, 0.4198 ) }
    dend_27 { pt3dadd( 417.647, 442.273, 18.2772, 0.3178 ) }
    dend_27 { pt3dadd( 418.575, 442.285, 18.6003, 0.3074 ) }
    dend_27 { pt3dadd( 419.625, 442.369, 19.1892, 0.3362 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 31/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 416.263, 442.27, 18.969, 0.6582 ) }
    dend_26 { pt3dadd( 416.098, 441.996, 15.9748, 0.2288 ) }
    dend_26 { pt3dadd( 415.823, 441.188, 16.0317, 0.3354 ) }
    dend_26 { pt3dadd( 416.332, 440.387, 16.18, 0.4142 ) }
    dend_26 { pt3dadd( 417.079, 439.655, 16.4282, 0.4042 ) }
    dend_26 { pt3dadd( 417.473, 438.692, 16.683, 0.4552 ) }
    dend_26 { pt3dadd( 417.822, 437.643, 16.7346, 0.4414 ) }
    dend_26 { pt3dadd( 418.395, 436.704, 16.5469, 0.4856 ) }
    dend_26 { pt3dadd( 419.048, 435.809, 16.1673, 0.6848 ) }
    dend_26 { pt3dadd( 419.742, 434.99, 15.5789, 0.7138 ) }
    dend_26 { pt3dadd( 420.315, 434.108, 14.8508, 0.5904 ) }
    dend_26 { pt3dadd( 420.623, 433.051, 14.1123, 0.5358 ) }
    dend_26 { pt3dadd( 421.081, 432.06, 13.3994, 0.7312 ) }
    dend_26 { pt3dadd( 421.868, 431.278, 12.7278, 0.7978 ) }
    dend_26 { pt3dadd( 422.701, 430.54, 12.0792, 0.755 ) }
    dend_26 { pt3dadd( 423.464, 429.747, 11.439, 0.7964 ) }
    dend_26 { pt3dadd( 424.076, 428.979, 10.7311, 0.7446 ) }
    dend_26 { pt3dadd( 424.596, 428.091, 10.022, 0.5876 ) }
    dend_26 { pt3dadd( 425.076, 427.073, 9.4722, 0.5906 ) }
    dend_26 { pt3dadd( 425.46, 426.016, 9.0334, 0.5434 ) }
    dend_26 { pt3dadd( 425.744, 424.922, 8.7424, 0.4814 ) }
    dend_26 { pt3dadd( 426.17, 424.03, 8.7179, 0.4714 ) }
    dend_26 { pt3dadd( 426.864, 423.222, 8.7375, 0.63 ) }
    dend_26 { pt3dadd( 427.533, 422.446, 8.562, 0.7514 ) }
    dend_26 { pt3dadd( 428.261, 421.625, 8.3048, 0.6694 ) }
    dend_26 { pt3dadd( 429.099, 420.864, 8.1108, 0.4068 ) }
    dend_26 { pt3dadd( 429.837, 420.15, 7.2951, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 58/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 417.266, 451.339, 36.4804, 0.5682 ) }
    dend_22 { pt3dadd( 418.007, 450.92, 37.3257, 0.2288 ) }
    dend_22 { pt3dadd( 418.405, 449.931, 37.5208, 0.3602 ) }
    dend_22 { pt3dadd( 418.714, 448.835, 37.5796, 0.4598 ) }
    dend_22 { pt3dadd( 418.77, 447.754, 37.8381, 0.4902 ) }
    dend_22 { pt3dadd( 418.436, 446.681, 38.1856, 0.609 ) }
    dend_22 { pt3dadd( 417.958, 445.647, 38.6154, 0.754 ) }
    dend_22 { pt3dadd( 417.543, 444.681, 39.2269, 0.93 ) }
    dend_22 { pt3dadd( 417.108, 443.736, 39.9812, 0.7936 ) }
    dend_22 { pt3dadd( 416.972, 442.747, 40.8293, 0.7272 ) }
    dend_22 { pt3dadd( 416.822, 441.694, 41.6612, 0.6134 ) }
    dend_22 { pt3dadd( 416.331, 440.734, 42.4421, 0.5852 ) }
    dend_22 { pt3dadd( 415.941, 439.688, 43.1116, 0.5624 ) }
    dend_22 { pt3dadd( 415.545, 438.633, 43.5341, 0.6046 ) }
    dend_22 { pt3dadd( 415.252, 437.536, 43.7828, 0.5024 ) }
    dend_22 { pt3dadd( 415.606, 436.478, 44.0373, 0.5022 ) }
    dend_22 { pt3dadd( 415.957, 435.405, 44.3237, 0.4986 ) }
    dend_22 { pt3dadd( 416.128, 434.278, 44.625, 0.5076 ) }
    dend_22 { pt3dadd( 416.203, 433.141, 44.9708, 0.4478 ) }
    dend_22 { pt3dadd( 416.062, 432.017, 45.39, 0.479 ) }
    dend_22 { pt3dadd( 415.938, 430.895, 45.8752, 0.5336 ) }
    dend_22 { pt3dadd( 415.887, 429.787, 46.4391, 0.4222 ) }
    dend_22 { pt3dadd( 415.886, 428.684, 47.0764, 0.332 ) }
    dend_22 { pt3dadd( 416.345, 427.737, 47.8209, 0.2868 ) }
    dend_22 { pt3dadd( 416.805, 426.76, 48.6119, 0.2982 ) }
    dend_22 { pt3dadd( 417.238, 425.732, 49.3777, 0.3132 ) }
    dend_22 { pt3dadd( 417.505, 424.663, 50.1301, 0.3716 ) }
    dend_22 { pt3dadd( 417.577, 423.581, 50.8875, 0.3304 ) }
    dend_22 { pt3dadd( 417.707, 422.494, 51.6166, 0.2938 ) }
    dend_22 { pt3dadd( 417.934, 421.408, 52.2833, 0.2626 ) }
    dend_22 { pt3dadd( 418.074, 420.303, 52.8828, 0.2542 ) }
    dend_22 { pt3dadd( 418.053, 419.181, 53.4024, 0.2288 ) }
    dend_22 { pt3dadd( 418.031, 418.058, 54.32, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 91/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 417.266, 451.339, 36.4804, 0.5682 ) }
    dend_21 { pt3dadd( 418.165, 451.563, 36.8435, 0.643 ) }
    dend_21 { pt3dadd( 419.274, 451.799, 37.1302, 0.6682 ) }
    dend_21 { pt3dadd( 420.392, 451.887, 37.4511, 0.579 ) }
    dend_21 { pt3dadd( 421.476, 451.982, 37.8865, 0.6164 ) }
    dend_21 { pt3dadd( 422.489, 452.215, 38.4451, 0.6168 ) }
    dend_21 { pt3dadd( 423.486, 452.586, 39.0606, 0.4942 ) }
    dend_21 { pt3dadd( 424.489, 453.043, 39.6936, 0.4078 ) }
    dend_21 { pt3dadd( 425.527, 453.49, 40.2455, 0.4782 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 426.588, 453.915, 40.6689, 0.4042 ) }
    dend_21 { pt3dadd( 427.697, 454.141, 40.9833, 0.346 ) }
    dend_21 { pt3dadd( 428.826, 454.313, 41.2236, 0.3124 ) }
    dend_21 { pt3dadd( 429.743, 454.877, 41.4907, 0.3468 ) }
    dend_21 { pt3dadd( 430.447, 455.637, 41.8928, 0.3986 ) }
    dend_21 { pt3dadd( 430.871, 456.638, 42.3088, 0.5516 ) }
    dend_21 { pt3dadd( 431.304, 457.694, 42.6675, 0.5602 ) }
    dend_21 { pt3dadd( 431.827, 458.711, 42.9587, 0.5388 ) }
    dend_21 { pt3dadd( 432.389, 459.706, 43.19, 0.451 ) }
    dend_21 { pt3dadd( 433.085, 460.61, 43.386, 0.5208 ) }
    dend_21 { pt3dadd( 433.942, 461.355, 43.5817, 0.437 ) }
    dend_21 { pt3dadd( 434.874, 461.994, 43.822, 0.4024 ) }
    dend_21 { pt3dadd( 435.85, 462.549, 44.1199, 0.4386 ) }
    dend_21 { pt3dadd( 436.869, 463.016, 44.4567, 0.4752 ) }
    dend_21 { pt3dadd( 437.84, 463.595, 44.7852, 0.4634 ) }
    dend_21 { pt3dadd( 438.569, 464.456, 45.0475, 0.3692 ) }
    dend_21 { pt3dadd( 439.408, 465.227, 45.2438, 0.3182 ) }
    dend_21 { pt3dadd( 440.486, 465.545, 45.3911, 0.3084 ) }
    dend_21 { pt3dadd( 441.626, 465.616, 45.5092, 0.3366 ) }
    dend_21 { pt3dadd( 442.769, 465.656, 45.6184, 0.3926 ) }
    dend_21 { pt3dadd( 443.875, 465.928, 45.7506, 0.4792 ) }
    dend_21 { pt3dadd( 444.882, 466.333, 46.0186, 0.7234 ) }
    dend_21 { pt3dadd( 445.425, 467.297, 46.3, 0.7702 ) }
    dend_21 { pt3dadd( 445.799, 468.376, 46.5752, 0.7684 ) }
    dend_21 { pt3dadd( 446.186, 469.451, 46.8516, 0.5078 ) }
    dend_21 { pt3dadd( 446.643, 470.487, 47.1537, 0.359 ) }
    dend_21 { pt3dadd( 447.168, 471.472, 47.4967, 0.2898 ) }
    dend_21 { pt3dadd( 447.862, 472.357, 47.8439, 0.303 ) }
    dend_21 { pt3dadd( 448.64, 473.176, 48.1877, 0.3268 ) }
    dend_21 { pt3dadd( 449.456, 473.976, 48.4725, 0.3742 ) }
    dend_21 { pt3dadd( 450.277, 474.771, 48.6962, 0.4456 ) }
    dend_21 { pt3dadd( 450.92, 475.715, 48.8734, 0.6578 ) }
    dend_21 { pt3dadd( 451.523, 476.688, 49.0241, 0.664 ) }
    dend_21 { pt3dadd( 451.819, 477.781, 49.2111, 0.4962 ) }
    dend_21 { pt3dadd( 452.033, 478.897, 49.4502, 0.3696 ) }
    dend_21 { pt3dadd( 452.196, 480.02, 49.742, 0.3822 ) }
    dend_21 { pt3dadd( 452.331, 481.148, 50.0772, 0.35 ) }
    dend_21 { pt3dadd( 452.319, 482.283, 50.447, 0.331 ) }
    dend_21 { pt3dadd( 452.045, 483.382, 50.8365, 0.3264 ) }
    dend_21 { pt3dadd( 451.717, 484.452, 51.2588, 0.3974 ) }
    dend_21 { pt3dadd( 451.518, 485.443, 51.7933, 0.3728 ) }
    dend_21 { pt3dadd( 451.725, 486.533, 52.2922, 0.3978 ) }
    dend_21 { pt3dadd( 452.123, 487.555, 52.7635, 0.332 ) }
    dend_21 { pt3dadd( 452.553, 488.541, 52.9418, 0.2966 ) }
    dend_21 { pt3dadd( 453.02, 489.579, 53.0188, 0.2684 ) }
    dend_21 { pt3dadd( 454.035, 490.078, 53.0284, 0.2626 ) }
    dend_21 { pt3dadd( 454.856, 490.871, 52.9936, 0.2542 ) }
    dend_21 { pt3dadd( 455.813, 491.498, 52.9525, 0.2288 ) }
    dend_21 { pt3dadd( 456.915, 491.806, 52.92, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 49/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 407.623, 472.788, 25.6357, 0.66 ) }
    dend_15 { pt3dadd( 407.775, 473.245, 25.5957, 0.479 ) }
    dend_15 { pt3dadd( 407.966, 474.303, 25.4392, 0.385 ) }
    dend_15 { pt3dadd( 407.962, 475.41, 25.2459, 0.4104 ) }
    dend_15 { pt3dadd( 408.216, 476.491, 25.1375, 0.4034 ) }
    dend_15 { pt3dadd( 408.78, 477.475, 25.0746, 0.4252 ) }
    dend_15 { pt3dadd( 409.17, 478.538, 25.0582, 0.5238 ) }
    dend_15 { pt3dadd( 409.47, 479.633, 25.1021, 0.6544 ) }
    dend_15 { pt3dadd( 409.854, 480.705, 25.1305, 0.6916 ) }
    dend_15 { pt3dadd( 410.295, 481.759, 25.1099, 0.611 ) }
    dend_15 { pt3dadd( 410.689, 482.832, 25.0514, 0.5016 ) }
    dend_15 { pt3dadd( 410.706, 483.96, 24.9679, 0.5628 ) }
    dend_15 { pt3dadd( 410.605, 485.099, 24.8557, 0.5386 ) }
    dend_15 { pt3dadd( 410.548, 486.226, 24.6704, 0.4742 ) }
    dend_15 { pt3dadd( 410.342, 487.334, 24.4329, 0.4512 ) }
    dend_15 { pt3dadd( 409.775, 488.311, 24.2003, 0.6262 ) }
    dend_15 { pt3dadd( 409.023, 489.171, 23.9895, 0.5802 ) }
    dend_15 { pt3dadd( 408.298, 490.055, 23.7938, 0.4644 ) }
    dend_15 { pt3dadd( 407.911, 491.119, 23.5981, 0.396 ) }
    dend_15 { pt3dadd( 407.767, 492.235, 23.3438, 0.474 ) }
    dend_15 { pt3dadd( 407.414, 493.298, 23.0301, 0.5412 ) }
    dend_15 { pt3dadd( 406.789, 494.241, 22.6879, 0.5826 ) }
    dend_15 { pt3dadd( 406.238, 495.214, 22.2942, 0.6056 ) }
    dend_15 { pt3dadd( 405.807, 496.267, 21.9139, 0.6806 ) }
    dend_15 { pt3dadd( 405.282, 497.281, 21.5706, 0.6634 ) }
    dend_15 { pt3dadd( 404.611, 498.175, 21.1992, 0.703 ) }
    dend_15 { pt3dadd( 403.997, 499.125, 20.828, 0.659 ) }
    dend_15 { pt3dadd( 403.404, 500.101, 20.4841, 0.6888 ) }
    dend_15 { pt3dadd( 402.703, 500.969, 20.1027, 0.6618 ) }
    dend_15 { pt3dadd( 402.021, 501.874, 19.722, 0.5538 ) }
    dend_15 { pt3dadd( 401.48, 502.878, 19.3813, 0.405 ) }
    dend_15 { pt3dadd( 401.027, 503.894, 19.0168, 0.3374 ) }
    dend_15 { pt3dadd( 400.589, 504.814, 18.5506, 0.3446 ) }
    dend_15 { pt3dadd( 399.84, 505.656, 18.2218, 0.4012 ) }
    dend_15 { pt3dadd( 399.053, 506.47, 18.0468, 0.525 ) }
    dend_15 { pt3dadd( 398.551, 507.494, 17.9335, 0.6624 ) }
    dend_15 { pt3dadd( 398.298, 508.609, 17.8608, 0.6782 ) }
    dend_15 { pt3dadd( 397.448, 509.353, 17.7891, 0.724 ) }
    dend_15 { pt3dadd( 396.51, 509.898, 17.6143, 0.7292 ) }
    dend_15 { pt3dadd( 395.713, 510.702, 17.5225, 0.6678 ) }
    dend_15 { pt3dadd( 394.957, 511.551, 17.4922, 0.6692 ) }
    dend_15 { pt3dadd( 394.413, 512.542, 17.4197, 0.5698 ) }
    dend_15 { pt3dadd( 393.844, 513.529, 17.3554, 0.6534 ) }
    dend_15 { pt3dadd( 393.245, 514.504, 17.3421, 0.6512 ) }
    dend_15 { pt3dadd( 392.574, 515.429, 17.3906, 0.7228 ) }
    dend_15 { pt3dadd( 391.814, 516.277, 17.4949, 0.719 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 95/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 407.623, 472.788, 25.6357, 0.66 ) }
    dend_14 { pt3dadd( 407.447, 472.914, 25.8388, 0.4576 ) }
    dend_14 { pt3dadd( 406.524, 473.495, 24.2762, 0.5424 ) }
    dend_14 { pt3dadd( 405.571, 474.013, 23.6358, 0.6758 ) }
    dend_14 { pt3dadd( 404.761, 474.579, 22.7887, 0.7958 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_14 { pt3dadd( 404.071, 475.284, 21.7908, 0.7202 ) }
    dend_14 { pt3dadd( 403.341, 476.094, 20.7864, 0.6536 ) }
    dend_14 { pt3dadd( 402.557, 476.892, 19.8301, 0.6318 ) }
    dend_14 { pt3dadd( 401.758, 477.276, 18.8128, 0.7834 ) }
    dend_14 { pt3dadd( 400.871, 477.169, 17.7157, 0.5898 ) }
    dend_14 { pt3dadd( 399.834, 477.205, 16.6848, 0.4768 ) }
    dend_14 { pt3dadd( 398.946, 477.566, 15.6717, 0.4458 ) }
    dend_14 { pt3dadd( 397.999, 477.963, 14.7427, 0.6658 ) }
    dend_14 { pt3dadd( 398.313, 478.08, 14.0581, 0.6428 ) }
    dend_14 { pt3dadd( 398.974, 477.664, 13.3858, 0.631 ) }
    dend_14 { pt3dadd( 399.829, 477.849, 12.6742, 0.461 ) }
    dend_14 { pt3dadd( 399.853, 478.245, 12.243, 0.4058 ) }
    dend_14 { pt3dadd( 400.208, 479.305, 11.8985, 0.4152 ) }
    dend_14 { pt3dadd( 400.527, 480.176, 11.7987, 0.5756 ) }
    dend_14 { pt3dadd( 400.982, 481.004, 11.8888, 0.6368 ) }
    dend_14 { pt3dadd( 401.281, 482.074, 11.9935, 0.5248 ) }
    dend_14 { pt3dadd( 401.474, 483.199, 12.0821, 0.4952 ) }
    dend_14 { pt3dadd( 401.853, 484.273, 12.0584, 0.4918 ) }
    dend_14 { pt3dadd( 401.854, 485.366, 11.8574, 0.4654 ) }
    dend_14 { pt3dadd( 401.325, 486.361, 11.5573, 0.5128 ) }
    dend_14 { pt3dadd( 400.797, 487.374, 11.2094, 0.5912 ) }
    dend_14 { pt3dadd( 400.551, 488.453, 10.7695, 0.5542 ) }
    dend_14 { pt3dadd( 400.473, 489.527, 10.2303, 0.4548 ) }
    dend_14 { pt3dadd( 400.253, 490.57, 9.6272, 0.4202 ) }
    dend_14 { pt3dadd( 399.991, 491.676, 9.1541, 0.5442 ) }
    dend_14 { pt3dadd( 399.52, 492.617, 8.6231, 0.548 ) }
    dend_14 { pt3dadd( 398.976, 493.62, 8.2078, 0.5084 ) }
    dend_14 { pt3dadd( 398.427, 494.609, 7.8608, 0.4322 ) }
    dend_14 { pt3dadd( 397.637, 495.433, 7.5982, 0.305 ) }
    dend_14 { pt3dadd( 396.855, 496.267, 7.28, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 401.185, 471.495, 27.126, 0.377 ) }
    dend_10 { pt3dadd( 401.061, 471.749, 26.9461, 0.3328 ) }
    dend_10 { pt3dadd( 400.918, 472.777, 26.5708, 0.3362 ) }
    dend_10 { pt3dadd( 400.585, 473.814, 26.0995, 0.3844 ) }
    dend_10 { pt3dadd( 400.395, 474.937, 25.7213, 0.5008 ) }
    dend_10 { pt3dadd( 399.779, 475.896, 25.3666, 0.5842 ) }
    dend_10 { pt3dadd( 398.874, 476.57, 25.005, 0.695 ) }
    dend_10 { pt3dadd( 397.986, 477.212, 24.616, 0.6558 ) }
    dend_10 { pt3dadd( 397.263, 478.097, 24.3153, 0.8562 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 39/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 401.185, 471.495, 27.126, 0.377 ) }
    dend_5 { pt3dadd( 400.476, 471.67, 28.7974, 0.4576 ) }
    dend_5 { pt3dadd( 399.719, 472.163, 31.2158, 0.5992 ) }
    dend_5 { pt3dadd( 399.676, 472.593, 32.3378, 0.6684 ) }
    dend_5 { pt3dadd( 399.565, 473.427, 33.6162, 0.6414 ) }
    dend_5 { pt3dadd( 399.254, 474.499, 34.7936, 0.6598 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 45/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 141.652, 240.307, 77.8677, 0.5232 ) }
    apic_7 { pt3dadd( 141.531, 240.065, 77.6499, 0.6864 ) }
    apic_7 { pt3dadd( 141.065, 239.183, 78.5154, 0.5484 ) }
    apic_7 { pt3dadd( 140.794, 238.151, 78.8931, 0.3948 ) }
    apic_7 { pt3dadd( 140.326, 237.133, 79.1795, 0.3188 ) }
    apic_7 { pt3dadd( 139.802, 236.122, 79.3727, 0.3092 ) }
    apic_7 { pt3dadd( 139.476, 235.033, 79.5133, 0.3394 ) }
    apic_7 { pt3dadd( 139.186, 233.932, 79.658, 0.3916 ) }
    apic_7 { pt3dadd( 138.73, 232.908, 79.847, 0.5076 ) }
    apic_7 { pt3dadd( 138.165, 231.925, 80.0738, 0.629 ) }
    apic_7 { pt3dadd( 137.788, 230.856, 80.313, 0.6214 ) }
    apic_7 { pt3dadd( 137.143, 229.941, 80.5266, 0.5936 ) }
    apic_7 { pt3dadd( 136.353, 229.119, 80.7663, 0.609 ) }
    apic_7 { pt3dadd( 135.927, 228.094, 81.0718, 0.5418 ) }
    apic_7 { pt3dadd( 135.817, 227.098, 81.5536, 0.4244 ) }
    apic_7 { pt3dadd( 135.218, 226.145, 82.042, 0.399 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 61/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 141.652, 240.307, 77.8677, 0.5232 ) }
    apic_6 { pt3dadd( 141.207, 240.203, 78.3745, 0.4582 ) }
    apic_6 { pt3dadd( 140.278, 239.983, 79.0546, 0.3594 ) }
    apic_6 { pt3dadd( 139.32, 239.836, 79.7605, 0.3 ) }
    apic_6 { pt3dadd( 138.176, 239.809, 80.3233, 0.2746 ) }
    apic_6 { pt3dadd( 137.086, 239.574, 80.7598, 0.2746 ) }
    apic_6 { pt3dadd( 136.113, 239.029, 81.146, 0.2746 ) }
    apic_6 { pt3dadd( 135.099, 238.617, 81.5074, 0.2746 ) }
    apic_6 { pt3dadd( 134.022, 238.259, 81.7701, 0.2746 ) }
    apic_6 { pt3dadd( 133.029, 237.705, 81.9851, 0.2746 ) }
    apic_6 { pt3dadd( 132.132, 237.009, 82.2002, 0.2746 ) }
    apic_6 { pt3dadd( 131.236, 236.305, 82.3819, 0.2746 ) }
    apic_6 { pt3dadd( 130.306, 235.639, 82.5112, 0.2746 ) }
    apic_6 { pt3dadd( 129.419, 234.918, 82.6008, 0.2746 ) }
    apic_6 { pt3dadd( 128.566, 234.199, 82.7302, 0.2746 ) }
    apic_6 { pt3dadd( 127.578, 233.751, 82.9007, 0.2746 ) }
    apic_6 { pt3dadd( 126.5, 233.432, 82.9867, 0.2746 ) }
    apic_6 { pt3dadd( 125.793, 232.668, 82.959, 0.2748 ) }
    apic_6 { pt3dadd( 124.969, 231.941, 82.9097, 0.2748 ) }
    apic_6 { pt3dadd( 123.929, 231.47, 82.8775, 0.2752 ) }
    apic_6 { pt3dadd( 122.829, 231.166, 82.8629, 0.2756 ) }
    apic_6 { pt3dadd( 121.908, 230.633, 83.006, 0.2766 ) }
    apic_6 { pt3dadd( 120.893, 230.112, 83.1463, 0.2782 ) }
    apic_6 { pt3dadd( 119.798, 229.78, 83.2703, 0.2814 ) }
    apic_6 { pt3dadd( 118.691, 229.496, 83.3641, 0.2872 ) }
    apic_6 { pt3dadd( 117.547, 229.486, 83.4263, 0.2982 ) }
    apic_6 { pt3dadd( 116.403, 229.486, 83.4593, 0.318 ) }
    apic_6 { pt3dadd( 115.26, 229.445, 83.4672, 0.357 ) }
    apic_6 { pt3dadd( 114.154, 229.157, 83.4761, 0.419 ) }
    apic_6 { pt3dadd( 113.01, 229.148, 83.4912, 0.5826 ) }
    apic_6 { pt3dadd( 111.887, 229.323, 83.5394, 0.6508 ) }
    apic_6 { pt3dadd( 110.847, 229.719, 83.5383, 0.5444 ) }
    apic_6 { pt3dadd( 109.794, 230.129, 83.54, 0.5636 ) }
    apic_6 { pt3dadd( 108.728, 230.533, 83.5926, 0.464 ) }
    apic_6 { pt3dadd( 107.658, 230.511, 83.7654, 0.477 ) }
    apic_6 { pt3dadd( 106.55, 230.442, 84.0218, 0.457 ) }
    apic_6 { pt3dadd( 105.413, 230.432, 84.257, 0.4054 ) }
    apic_6 { pt3dadd( 104.315, 230.267, 84.3996, 0.3796 ) }
    apic_6 { pt3dadd( 103.205, 230.101, 84.5709, 0.4498 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_6 { pt3dadd( 102.068, 230.02, 84.751, 0.4658 ) }
    apic_6 { pt3dadd( 101.344, 230.238, 85.1987, 0.591 ) }
    apic_6 { pt3dadd( 100.295, 230.439, 85.6797, 0.5888 ) }
    apic_6 { pt3dadd( 99.6502, 231.341, 86.0614, 0.5788 ) }
    apic_6 { pt3dadd( 98.8522, 232.148, 86.3548, 0.5882 ) }
    apic_6 { pt3dadd( 97.9309, 232.787, 86.541, 0.471 ) }
    apic_6 { pt3dadd( 96.8988, 233.194, 86.7597, 0.4492 ) }
    apic_6 { pt3dadd( 95.7725, 233.299, 86.9624, 0.3746 ) }
    apic_6 { pt3dadd( 94.7483, 233.707, 87.269, 0.4012 ) }
    apic_6 { pt3dadd( 93.8414, 234.273, 87.6982, 0.3382 ) }
    apic_6 { pt3dadd( 92.9305, 234.946, 88.081, 0.308 ) }
    apic_6 { pt3dadd( 92.0822, 235.419, 88.5676, 0.2892 ) }
    apic_6 { pt3dadd( 91.0882, 235.755, 89.1002, 0.3018 ) }
    apic_6 { pt3dadd( 90.0825, 236.273, 89.5423, 0.3256 ) }
    apic_6 { pt3dadd( 89.0735, 236.613, 90.0052, 0.3662 ) }
    apic_6 { pt3dadd( 88.2674, 237.339, 90.398, 0.4594 ) }
    apic_6 { pt3dadd( 87.4387, 237.806, 90.5299, 0.544 ) }
    apic_6 { pt3dadd( 86.3637, 237.997, 90.7222, 0.4428 ) }
    apic_6 { pt3dadd( 85.257, 238.248, 90.8718, 0.365 ) }
    apic_6 { pt3dadd( 84.2964, 238.839, 91.0179, 0.3734 ) }
    apic_6 { pt3dadd( 83.4618, 239.568, 91.175, 0.3338 ) }
    apic_6 { pt3dadd( 82.3658, 239.896, 91.369, 0.3 ) }
    apic_6 { pt3dadd( 81.4395, 240.454, 91.6376, 0.2744 ) }
    apic_6 { pt3dadd( 80.6812, 240.923, 92.0752, 0.2744 ) }
    apic_6 { pt3dadd( 80.0125, 241.431, 92.7097, 0.2742 ) }
    apic_6 { pt3dadd( 79.2002, 242.18, 93.2817, 0.274 ) }
    apic_6 { pt3dadd( 78.431, 243.025, 93.7182, 0.2736 ) }
    apic_6 { pt3dadd( 77.7359, 243.932, 94.0148, 0.2728 ) }
    apic_6 { pt3dadd( 77.017, 244.822, 94.1772, 0.2712 ) }
    apic_6 { pt3dadd( 76.179, 245.598, 94.2259, 0.2684 ) }
    apic_6 { pt3dadd( 75.2314, 246.237, 94.2043, 0.2626 ) }
    apic_6 { pt3dadd( 74.6121, 247.186, 94.1634, 0.2542 ) }
    apic_6 { pt3dadd( 74.2598, 248.262, 94.0657, 0.2288 ) }
    apic_6 { pt3dadd( 73.4453, 249.049, 93.8, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 34/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 419.625, 442.369, 19.1892, 0.3362 ) }
    dend_29 { pt3dadd( 420.405, 442.594, 19.4908, 0.4576 ) }
    dend_29 { pt3dadd( 421.522, 442.718, 19.0217, 1.023 ) }
    dend_29 { pt3dadd( 422.659, 442.776, 18.8706, 1.0994 ) }
    dend_29 { pt3dadd( 423.755, 443.016, 18.6499, 1.1042 ) }
    dend_29 { pt3dadd( 424.867, 443.259, 18.4005, 1.091 ) }
    dend_29 { pt3dadd( 425.915, 443.655, 18.0885, 0.9446 ) }
    dend_29 { pt3dadd( 426.934, 444.128, 17.8567, 0.8072 ) }
    dend_29 { pt3dadd( 427.79, 444.873, 17.6376, 0.8174 ) }
    dend_29 { pt3dadd( 428.554, 445.72, 17.3514, 0.923 ) }
    dend_29 { pt3dadd( 429.17, 446.638, 16.9368, 0.9272 ) }
    dend_29 { pt3dadd( 429.658, 447.613, 16.3902, 0.95 ) }
    dend_29 { pt3dadd( 429.896, 448.656, 15.7291, 0.918 ) }
    dend_29 { pt3dadd( 430.444, 449.414, 14.9044, 0.7622 ) }
    dend_29 { pt3dadd( 431.461, 449.48, 14.0563, 0.7134 ) }
    dend_29 { pt3dadd( 432.545, 449.141, 13.366, 0.6006 ) }
    dend_29 { pt3dadd( 433.623, 448.789, 12.792, 0.729 ) }
    dend_29 { pt3dadd( 434.513, 448.086, 12.4051, 0.7026 ) }
    dend_29 { pt3dadd( 435.373, 447.34, 12.0666, 0.5634 ) }
    dend_29 { pt3dadd( 436.24, 446.642, 11.6993, 0.514 ) }
    dend_29 { pt3dadd( 436.96, 445.759, 11.3488, 0.5536 ) }
    dend_29 { pt3dadd( 437.214, 444.705, 10.9124, 0.4492 ) }
    dend_29 { pt3dadd( 437.793, 443.842, 10.3875, 0.4322 ) }
    dend_29 { pt3dadd( 438.541, 442.977, 9.5214, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 58/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 419.625, 442.369, 19.1892, 0.3362 ) }
    dend_28 { pt3dadd( 419.53, 442.324, 19.8562, 0.3844 ) }
    dend_28 { pt3dadd( 419.422, 441.885, 20.7742, 0.4994 ) }
    dend_28 { pt3dadd( 420.215, 441.181, 21.564, 0.5894 ) }
    dend_28 { pt3dadd( 421.25, 440.807, 22.1968, 0.6672 ) }
    dend_28 { pt3dadd( 422.337, 440.911, 22.7782, 0.7854 ) }
    dend_28 { pt3dadd( 423.36, 441.284, 23.3567, 0.9036 ) }
    dend_28 { pt3dadd( 424.456, 441.597, 23.8215, 0.9258 ) }
    dend_28 { pt3dadd( 425.45, 442.089, 24.2778, 0.7782 ) }
    dend_28 { pt3dadd( 426.438, 442.592, 24.7612, 0.7358 ) }
    dend_28 { pt3dadd( 427.515, 442.968, 25.1448, 0.6788 ) }
    dend_28 { pt3dadd( 428.614, 443.276, 25.4897, 0.6952 ) }
    dend_28 { pt3dadd( 429.715, 443.499, 25.8702, 0.8208 ) }
    dend_28 { pt3dadd( 430.805, 443.753, 26.297, 0.8202 ) }
    dend_28 { pt3dadd( 431.874, 444.064, 26.7575, 0.8088 ) }
    dend_28 { pt3dadd( 432.975, 444.251, 27.2349, 0.608 ) }
    dend_28 { pt3dadd( 434.099, 444.256, 27.7088, 0.421 ) }
    dend_28 { pt3dadd( 435.212, 444.112, 28.159, 0.3198 ) }
    dend_28 { pt3dadd( 436.289, 443.807, 28.5754, 0.3124 ) }
    dend_28 { pt3dadd( 437.393, 443.522, 28.9052, 0.3394 ) }
    dend_28 { pt3dadd( 438.505, 443.264, 29.1133, 0.4198 ) }
    dend_28 { pt3dadd( 439.62, 443.044, 29.2298, 0.4232 ) }
    dend_28 { pt3dadd( 440.734, 442.837, 29.2936, 0.4492 ) }
    dend_28 { pt3dadd( 441.845, 442.596, 29.4445, 0.6302 ) }
    dend_28 { pt3dadd( 442.938, 442.348, 29.7175, 0.5514 ) }
    dend_28 { pt3dadd( 443.951, 441.863, 30.0958, 0.585 ) }
    dend_28 { pt3dadd( 444.764, 441.439, 30.7188, 0.4626 ) }
    dend_28 { pt3dadd( 445.761, 440.931, 31.3177, 0.4448 ) }
    dend_28 { pt3dadd( 446.902, 440.941, 31.8492, 0.5418 ) }
    dend_28 { pt3dadd( 448.027, 441.146, 32.3268, 0.547 ) }
    dend_28 { pt3dadd( 449.126, 441.459, 32.7866, 0.4896 ) }
    dend_28 { pt3dadd( 450.202, 441.757, 33.3194, 0.4806 ) }
    dend_28 { pt3dadd( 451.174, 442.011, 34.0564, 0.6766 ) }
    dend_28 { pt3dadd( 452.092, 442.323, 34.9975, 0.6938 ) }
    dend_28 { pt3dadd( 452.849, 442.964, 36.0634, 0.5758 ) }
    dend_28 { pt3dadd( 453.318, 443.863, 37.1672, 0.3984 ) }
    dend_28 { pt3dadd( 453.432, 444.735, 38.3653, 0.3264 ) }
    dend_28 { pt3dadd( 453.693, 445.785, 39.4758, 0.3182 ) }
    dend_28 { pt3dadd( 454.04, 446.837, 40.446, 0.3808 ) }
    dend_28 { pt3dadd( 454.632, 447.728, 41.3042, 0.3478 ) }
    dend_28 { pt3dadd( 455.405, 448.152, 42.2094, 0.3252 ) }
    dend_28 { pt3dadd( 456.051, 447.876, 43.1273, 0.3236 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_28 { pt3dadd( 456.308, 446.794, 43.8141, 0.355 ) }
    dend_28 { pt3dadd( 456.471, 445.665, 44.282, 0.4748 ) }
    dend_28 { pt3dadd( 456.828, 444.584, 44.5808, 0.398 ) }
    dend_28 { pt3dadd( 457.425, 443.619, 44.742, 0.3342 ) }
    dend_28 { pt3dadd( 458.062, 442.672, 44.7978, 0.2906 ) }
    dend_28 { pt3dadd( 458.941, 441.967, 44.8014, 0.3056 ) }
    dend_28 { pt3dadd( 459.847, 441.269, 44.8, 0.3266 ) }
    dend_28 { pt3dadd( 460.936, 440.977, 44.8, 0.3976 ) }
    dend_28 { pt3dadd( 462.067, 440.806, 44.8, 0.3734 ) }
    dend_28 { pt3dadd( 463.21, 440.783, 44.8, 0.3988 ) }
    dend_28 { pt3dadd( 464.348, 440.883, 44.8, 0.3338 ) }
    dend_28 { pt3dadd( 465.491, 440.944, 44.8, 0.2998 ) }
    dend_28 { pt3dadd( 466.553, 441.348, 44.8, 0.2742 ) }
    dend_28 { pt3dadd( 467.681, 441.507, 44.8, 0.274 ) }
    dend_28 { pt3dadd( 468.823, 441.577, 44.8, 0.2736 ) }
    dend_28 { pt3dadd( 469.967, 441.584, 44.8, 0.2728 ) }
    dend_28 { pt3dadd( 471.035, 441.202, 44.8, 0.2712 ) }
    dend_28 { pt3dadd( 471.78, 440.346, 44.8, 0.2684 ) }
    dend_28 { pt3dadd( 472.481, 439.442, 44.8, 0.2626 ) }
    dend_28 { pt3dadd( 473.322, 438.668, 44.8, 0.2542 ) }
    dend_28 { pt3dadd( 473.617, 437.574, 44.8, 0.2288 ) }
    dend_28 { pt3dadd( 473.731, 436.436, 44.8, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 22/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 391.814, 516.277, 17.4949, 0.719 ) }
    dend_17 { pt3dadd( 392.05, 516.292, 17.755, 0.6864 ) }
    dend_17 { pt3dadd( 391.859, 517.164, 17.8934, 0.5226 ) }
    dend_17 { pt3dadd( 392.412, 518.147, 17.9891, 0.4914 ) }
    dend_17 { pt3dadd( 392.51, 519.16, 18.2499, 0.4836 ) }
    dend_17 { pt3dadd( 392.798, 520.258, 18.4698, 0.4554 ) }
    dend_17 { pt3dadd( 393.155, 521.25, 18.7486, 0.4694 ) }
    dend_17 { pt3dadd( 392.987, 522.289, 18.9544, 0.6312 ) }
    dend_17 { pt3dadd( 393.013, 523.307, 19.1027, 0.7304 ) }
    dend_17 { pt3dadd( 393.251, 524.372, 19.1648, 0.7432 ) }
    dend_17 { pt3dadd( 393.881, 525.277, 19.1633, 0.684 ) }
    dend_17 { pt3dadd( 394.333, 526.306, 19.1765, 0.5182 ) }
    dend_17 { pt3dadd( 394.412, 527.362, 19.2359, 0.4832 ) }
    dend_17 { pt3dadd( 394.951, 527.128, 19.2802, 0.4682 ) }
    dend_17 { pt3dadd( 395.354, 527.55, 19.1249, 0.4272 ) }
    dend_17 { pt3dadd( 395.372, 528.639, 19.0499, 0.4162 ) }
    dend_17 { pt3dadd( 395.989, 529.504, 19.025, 0.5366 ) }
    dend_17 { pt3dadd( 396.502, 530.501, 18.9618, 0.5338 ) }
    dend_17 { pt3dadd( 396.502, 531.593, 18.8654, 0.483 ) }
    dend_17 { pt3dadd( 396.064, 532.613, 18.7214, 0.3814 ) }
    dend_17 { pt3dadd( 395.939, 533.676, 18.76, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 43/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 391.814, 516.277, 17.4949, 0.719 ) }
    dend_16 { pt3dadd( 391.493, 516.826, 17.3588, 0.2288 ) }
    dend_16 { pt3dadd( 390.849, 517.771, 16.9927, 0.5016 ) }
    dend_16 { pt3dadd( 389.897, 518.377, 16.8517, 0.7572 ) }
    dend_16 { pt3dadd( 388.831, 518.773, 16.6394, 0.8706 ) }
    dend_16 { pt3dadd( 387.822, 519.255, 16.3261, 0.7712 ) }
    dend_16 { pt3dadd( 386.902, 519.912, 15.963, 0.7172 ) }
    dend_16 { pt3dadd( 386.225, 520.782, 15.5208, 0.6716 ) }
    dend_16 { pt3dadd( 385.683, 521.728, 15.0062, 0.5496 ) }
    dend_16 { pt3dadd( 385.045, 522.664, 14.5974, 0.5062 ) }
    dend_16 { pt3dadd( 384.252, 523.486, 14.2433, 0.683 ) }
    dend_16 { pt3dadd( 383.558, 524.364, 13.8362, 0.677 ) }
    dend_16 { pt3dadd( 382.801, 525.211, 13.39, 0.6836 ) }
    dend_16 { pt3dadd( 382.059, 526.049, 12.8766, 0.6102 ) }
    dend_16 { pt3dadd( 381.164, 526.737, 12.3392, 0.4322 ) }
    dend_16 { pt3dadd( 380.119, 527.153, 11.7746, 0.305 ) }
    dend_16 { pt3dadd( 379.477, 527.558, 10.9925, 0.2288 ) }
    dend_16 { pt3dadd( 379.166, 528.567, 9.2543, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 397.263, 478.097, 24.3153, 0.8562 ) }
    dend_12 { pt3dadd( 396.818, 478.559, 23.7093, 1.3728 ) }
    dend_12 { pt3dadd( 396.218, 479.519, 23.4015, 0.9026 ) }
    dend_12 { pt3dadd( 395.103, 479.631, 23.2377, 0.6414 ) }
    dend_12 { pt3dadd( 394.226, 478.952, 23.143, 0.7082 ) }
    dend_12 { pt3dadd( 393.132, 478.875, 22.9723, 0.6738 ) }
    dend_12 { pt3dadd( 392.149, 479.457, 22.8084, 0.6914 ) }
    dend_12 { pt3dadd( 391.195, 480.069, 22.6659, 0.558 ) }
    dend_12 { pt3dadd( 390.216, 480.646, 22.4459, 0.6598 ) }
    dend_12 { pt3dadd( 389.212, 481.173, 22.1502, 0.5248 ) }
    dend_12 { pt3dadd( 388.262, 481.645, 21.6894, 0.4752 ) }
    dend_12 { pt3dadd( 387.22, 481.862, 21.1647, 0.5516 ) }
    dend_12 { pt3dadd( 386.243, 482.167, 20.525, 0.5618 ) }
    dend_12 { pt3dadd( 385.375, 482.849, 19.9147, 0.5342 ) }
    dend_12 { pt3dadd( 384.369, 483.3, 19.3279, 0.4786 ) }
    dend_12 { pt3dadd( 383.548, 484.039, 18.7888, 0.3984 ) }
    dend_12 { pt3dadd( 382.882, 484.82, 18.2837, 0.3672 ) }
    dend_12 { pt3dadd( 382.422, 485.821, 17.9381, 0.4242 ) }
    dend_12 { pt3dadd( 382.112, 486.915, 17.6749, 0.43 ) }
    dend_12 { pt3dadd( 381.24, 487.444, 17.4529, 0.4694 ) }
    dend_12 { pt3dadd( 380.112, 487.496, 17.3307, 0.6308 ) }
    dend_12 { pt3dadd( 379.033, 487.648, 17.1446, 0.73 ) }
    dend_12 { pt3dadd( 377.981, 487.744, 16.9083, 0.7424 ) }
    dend_12 { pt3dadd( 377.077, 487.958, 16.8884, 0.6814 ) }
    dend_12 { pt3dadd( 376.436, 488.831, 16.8411, 0.5196 ) }
    dend_12 { pt3dadd( 375.846, 489.8, 16.8204, 0.4556 ) }
    dend_12 { pt3dadd( 375.108, 490.617, 16.7259, 0.564 ) }
    dend_12 { pt3dadd( 374.234, 491.33, 16.6763, 0.5784 ) }
    dend_12 { pt3dadd( 373.304, 491.96, 16.7406, 0.5958 ) }
    dend_12 { pt3dadd( 372.467, 492.706, 16.7719, 0.4444 ) }
    dend_12 { pt3dadd( 371.798, 493.591, 16.8957, 0.368 ) }
    dend_12 { pt3dadd( 371.207, 494.519, 17.1248, 0.3792 ) }
    dend_12 { pt3dadd( 370.608, 495.462, 17.3876, 0.3446 ) }
    dend_12 { pt3dadd( 369.788, 496.235, 17.5875, 0.3198 ) }
    dend_12 { pt3dadd( 368.845, 496.877, 17.6501, 0.311 ) }
    dend_12 { pt3dadd( 367.821, 497.371, 17.5705, 0.3442 ) }
    dend_12 { pt3dadd( 366.799, 497.871, 17.355, 0.3928 ) }
    dend_12 { pt3dadd( 365.938, 498.577, 16.9919, 0.547 ) }
    dend_12 { pt3dadd( 365.034, 499.227, 16.5222, 0.521 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_12 { pt3dadd( 364.326, 500.041, 15.9563, 0.6152 ) }
    dend_12 { pt3dadd( 363.537, 500.828, 15.3781, 0.5552 ) }
    dend_12 { pt3dadd( 362.735, 501.605, 14.8122, 0.6682 ) }
    dend_12 { pt3dadd( 361.904, 502.356, 14.2778, 0.7038 ) }
    dend_12 { pt3dadd( 361.058, 503.096, 13.7918, 0.6994 ) }
    dend_12 { pt3dadd( 360.18, 503.815, 13.3736, 0.576 ) }
    dend_12 { pt3dadd( 359.257, 504.479, 13.0557, 0.4482 ) }
    dend_12 { pt3dadd( 358.304, 505.09, 12.8236, 0.4072 ) }
    dend_12 { pt3dadd( 357.413, 505.782, 12.5614, 0.5242 ) }
    dend_12 { pt3dadd( 356.662, 506.62, 12.2818, 0.4912 ) }
    dend_12 { pt3dadd( 356.493, 507.617, 11.9907, 0.498 ) }
    dend_12 { pt3dadd( 356.859, 508.662, 11.6187, 0.6382 ) }
    dend_12 { pt3dadd( 356.487, 509.639, 11.2411, 0.737 ) }
    dend_12 { pt3dadd( 355.994, 510.624, 10.8132, 0.7864 ) }
    dend_12 { pt3dadd( 356.14, 511.691, 10.4009, 0.6136 ) }
    dend_12 { pt3dadd( 356.285, 512.82, 10.0393, 0.4312 ) }
    dend_12 { pt3dadd( 356.436, 513.936, 9.6722, 0.34 ) }
    dend_12 { pt3dadd( 356.643, 515.04, 9.302, 0.3446 ) }
    dend_12 { pt3dadd( 357.174, 516.008, 8.9231, 0.4238 ) }
    dend_12 { pt3dadd( 357.557, 517.063, 8.6643, 0.4576 ) }
    dend_12 { pt3dadd( 357.596, 518.2, 8.4784, 0.3814 ) }
    dend_12 { pt3dadd( 356.721, 518.732, 7.9218, 0.4576 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 22/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 397.263, 478.097, 24.3153, 0.8562 ) }
    dend_11 { pt3dadd( 396.501, 479.255, 24.0759, 0.8168 ) }
    dend_11 { pt3dadd( 396.014, 480.279, 23.8619, 0.68 ) }
    dend_11 { pt3dadd( 395.796, 481.395, 23.666, 0.7346 ) }
    dend_11 { pt3dadd( 395.602, 482.514, 23.4697, 0.713 ) }
    dend_11 { pt3dadd( 395.144, 483.549, 23.2333, 0.5828 ) }
    dend_11 { pt3dadd( 394.522, 484.398, 22.845, 0.5502 ) }
    dend_11 { pt3dadd( 393.816, 485.155, 22.3222, 0.6202 ) }
    dend_11 { pt3dadd( 393.094, 486.019, 21.7954, 0.5748 ) }
    dend_11 { pt3dadd( 392.503, 486.969, 21.2742, 0.6554 ) }
    dend_11 { pt3dadd( 392.008, 487.97, 20.7721, 0.6898 ) }
    dend_11 { pt3dadd( 391.604, 489.014, 20.3239, 0.625 ) }
    dend_11 { pt3dadd( 391.403, 490.127, 19.9814, 0.6732 ) }
    dend_11 { pt3dadd( 391.062, 491.176, 19.7461, 0.8592 ) }
    dend_11 { pt3dadd( 390.307, 492.021, 19.5809, 0.9638 ) }
    dend_11 { pt3dadd( 389.528, 492.847, 19.4645, 0.9528 ) }
    dend_11 { pt3dadd( 388.821, 493.745, 19.3731, 0.7818 ) }
    dend_11 { pt3dadd( 388.073, 494.609, 19.2769, 0.7378 ) }
    dend_11 { pt3dadd( 387.482, 495.552, 19.1201, 0.705 ) }
    dend_11 { pt3dadd( 387.248, 496.637, 18.9212, 0.6356 ) }
    dend_11 { pt3dadd( 387.188, 497.769, 18.7765, 0.548 ) }
    dend_11 { pt3dadd( 386.988, 498.839, 18.5964, 0.644 ) }
    dend_11 { pt3dadd( 386.872, 499.918, 18.3585, 0.7124 ) }
    dend_11 { pt3dadd( 387.198, 500.984, 18.1546, 0.6848 ) }
    dend_11 { pt3dadd( 387.874, 501.896, 17.9535, 0.6958 ) }
    dend_11 { pt3dadd( 388.659, 502.691, 17.683, 0.6436 ) }
    dend_11 { pt3dadd( 389.483, 503.413, 17.3178, 0.6714 ) }
    dend_11 { pt3dadd( 390.254, 504.21, 16.9316, 0.5748 ) }
    dend_11 { pt3dadd( 390.799, 505.196, 16.592, 0.6564 ) }
    dend_11 { pt3dadd( 391.236, 506.253, 16.3167, 0.6882 ) }
    dend_11 { pt3dadd( 391.747, 507.276, 16.1005, 0.6392 ) }
    dend_11 { pt3dadd( 392.367, 508.232, 15.9258, 0.6154 ) }
    dend_11 { pt3dadd( 392.983, 509.176, 15.7345, 0.4742 ) }
    dend_11 { pt3dadd( 393.499, 510.179, 15.5153, 0.4552 ) }
    dend_11 { pt3dadd( 393.884, 511.249, 15.3049, 0.386 ) }
    dend_11 { pt3dadd( 394.003, 512.366, 15.0927, 0.422 ) }
    dend_11 { pt3dadd( 393.853, 513.488, 14.9024, 0.3778 ) }
    dend_11 { pt3dadd( 393.702, 514.618, 14.7798, 0.3772 ) }
    dend_11 { pt3dadd( 393.726, 515.754, 14.689, 0.4376 ) }
    dend_11 { pt3dadd( 393.935, 516.87, 14.6393, 0.4798 ) }
    dend_11 { pt3dadd( 394.135, 517.979, 14.6755, 0.4408 ) }
    dend_11 { pt3dadd( 393.902, 519.057, 14.7464, 0.4784 ) }
    dend_11 { pt3dadd( 393.47, 520.115, 14.7963, 0.473 ) }
    dend_11 { pt3dadd( 393.407, 521.232, 14.8067, 0.5986 ) }
    dend_11 { pt3dadd( 393.574, 522.356, 14.7494, 0.6308 ) }
    dend_11 { pt3dadd( 393.642, 523.49, 14.6411, 0.5202 ) }
    dend_11 { pt3dadd( 393.629, 524.633, 14.5315, 0.4568 ) }
    dend_11 { pt3dadd( 393.478, 525.757, 14.3968, 0.565 ) }
    dend_11 { pt3dadd( 393.286, 526.87, 14.2345, 0.5862 ) }
    dend_11 { pt3dadd( 393.221, 528.006, 14.1211, 0.5816 ) }
    dend_11 { pt3dadd( 393.303, 529.143, 14.0881, 0.5562 ) }
    dend_11 { pt3dadd( 393.663, 530.22, 14.0918, 0.5918 ) }
    dend_11 { pt3dadd( 394.007, 531.309, 14.1087, 0.4838 ) }
    dend_11 { pt3dadd( 394.016, 532.388, 14.262, 0.443 ) }
    dend_11 { pt3dadd( 393.753, 533.475, 14.3938, 0.5084 ) }
    dend_11 { pt3dadd( 393.639, 534.604, 14.4789, 0.6322 ) }
    dend_11 { pt3dadd( 393.545, 535.733, 14.6124, 0.6198 ) }
    dend_11 { pt3dadd( 393.373, 536.86, 14.7467, 0.6266 ) }
    dend_11 { pt3dadd( 393.535, 537.977, 14.9148, 0.4962 ) }
    dend_11 { pt3dadd( 393.639, 539.1, 15.1471, 0.4894 ) }
    dend_11 { pt3dadd( 393.655, 540.24, 15.404, 0.4798 ) }
    dend_11 { pt3dadd( 393.674, 541.37, 15.7095, 0.4484 ) }
    dend_11 { pt3dadd( 393.785, 542.456, 16.0974, 0.4568 ) }
    dend_11 { pt3dadd( 394.109, 543.542, 16.4496, 0.6068 ) }
    dend_11 { pt3dadd( 394.51, 544.589, 16.8045, 0.689 ) }
    dend_11 { pt3dadd( 395.001, 545.616, 17.0983, 0.6482 ) }
    dend_11 { pt3dadd( 395.498, 546.644, 17.3317, 0.5962 ) }
    dend_11 { pt3dadd( 395.962, 547.676, 17.5423, 0.6136 ) }
    dend_11 { pt3dadd( 396.291, 548.765, 17.6997, 0.55 ) }
    dend_11 { pt3dadd( 396.253, 549.886, 17.7204, 0.4398 ) }
    dend_11 { pt3dadd( 396.022, 551.002, 17.705, 0.4274 ) }
    dend_11 { pt3dadd( 395.928, 552.117, 17.7254, 0.3876 ) }
    dend_11 { pt3dadd( 395.921, 553.256, 17.652, 0.3966 ) }
    dend_11 { pt3dadd( 396.064, 554.38, 17.4607, 0.4682 ) }
    dend_11 { pt3dadd( 396.479, 555.426, 17.1748, 0.5622 ) }
    dend_11 { pt3dadd( 396.992, 556.437, 16.8474, 0.4688 ) }
    dend_11 { pt3dadd( 397.512, 557.396, 16.4252, 0.4492 ) }
    dend_11 { pt3dadd( 397.868, 558.444, 15.9721, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_11 { pt3dadd( 398.253, 559.513, 15.1514, 0.4576 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 1/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 399.254, 474.499, 34.7936, 0.6598 ) }
    dend_7 { pt3dadd( 399.09, 475.508, 35.8744, 0.59 ) }
    dend_7 { pt3dadd( 398.726, 476.483, 36.9015, 0.508 ) }
    dend_7 { pt3dadd( 398.198, 477.42, 37.8151, 0.5818 ) }
    dend_7 { pt3dadd( 398.042, 478.415, 38.6868, 0.539 ) }
    dend_7 { pt3dadd( 398.622, 479.381, 39.3887, 0.6448 ) }
    dend_7 { pt3dadd( 399.088, 480.425, 39.9546, 0.6284 ) }
    dend_7 { pt3dadd( 399.154, 481.533, 40.4894, 0.7152 ) }
    dend_7 { pt3dadd( 399.218, 482.592, 41.0488, 0.5356 ) }
    dend_7 { pt3dadd( 399.546, 483.682, 41.5111, 0.4828 ) }
    dend_7 { pt3dadd( 399.941, 484.742, 41.7992, 0.3972 ) }
    dend_7 { pt3dadd( 400.415, 485.615, 42.2276, 0.407 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 13/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 399.254, 474.499, 34.7936, 0.6598 ) }
    dend_6 { pt3dadd( 399.305, 474.114, 35.8176, 0.9152 ) }
    dend_6 { pt3dadd( 399.371, 473.027, 36.178, 0.6954 ) }
    dend_6 { pt3dadd( 399.06, 471.944, 36.3048, 0.526 ) }
    dend_6 { pt3dadd( 398.342, 471.28, 36.4176, 0.5616 ) }
    dend_6 { pt3dadd( 398.227, 470.154, 36.5215, 0.532 ) }
    dend_6 { pt3dadd( 397.884, 469.083, 36.6246, 0.4842 ) }
    dend_6 { pt3dadd( 397.443, 468.121, 36.7385, 0.3604 ) }
    dend_6 { pt3dadd( 396.955, 467.094, 36.876, 0.302 ) }
    dend_6 { pt3dadd( 396.667, 465.987, 37.0594, 0.2782 ) }
    dend_6 { pt3dadd( 396.253, 464.942, 37.2949, 0.2814 ) }
    dend_6 { pt3dadd( 395.593, 464.209, 37.7014, 0.287 ) }
    dend_6 { pt3dadd( 394.867, 463.423, 38.2844, 0.2988 ) }
    dend_6 { pt3dadd( 394.125, 462.642, 38.9836, 0.3142 ) }
    dend_6 { pt3dadd( 393.264, 461.888, 39.6376, 0.3736 ) }
    dend_6 { pt3dadd( 392.486, 461.227, 40.3449, 0.334 ) }
    dend_6 { pt3dadd( 391.882, 460.762, 41.2784, 0.3004 ) }
    dend_6 { pt3dadd( 391.279, 460.298, 42.3419, 0.2752 ) }
    dend_6 { pt3dadd( 390.518, 459.571, 43.2393, 0.2756 ) }
    dend_6 { pt3dadd( 389.729, 458.744, 43.9177, 0.2766 ) }
    dend_6 { pt3dadd( 388.929, 457.933, 44.4329, 0.2784 ) }
    dend_6 { pt3dadd( 388.047, 457.221, 44.8431, 0.2818 ) }
    dend_6 { pt3dadd( 387.587, 456.411, 45.1926, 0.2876 ) }
    dend_6 { pt3dadd( 386.998, 455.432, 45.4381, 0.3 ) }
    dend_6 { pt3dadd( 386.461, 454.422, 45.6422, 0.3164 ) }
    dend_6 { pt3dadd( 385.929, 453.469, 45.92, 0.3776 ) }
    dend_6 { pt3dadd( 385.229, 452.617, 46.2017, 0.3418 ) }
    dend_6 { pt3dadd( 384.347, 451.923, 46.4145, 0.3136 ) }
    dend_6 { pt3dadd( 383.273, 451.534, 46.5802, 0.305 ) }
    dend_6 { pt3dadd( 382.219, 451.1, 46.741, 0.305 ) }
    dend_6 { pt3dadd( 381.166, 450.665, 47.049, 0.4576 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 44/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 135.218, 226.145, 82.042, 0.399 ) }
    apic_9 { pt3dadd( 134.502, 225.131, 82.3385, 0.2288 ) }
    apic_9 { pt3dadd( 134.149, 224.278, 80.7937, 0.277 ) }
    apic_9 { pt3dadd( 134.047, 223.514, 80.0402, 0.279 ) }
    apic_9 { pt3dadd( 133.332, 222.697, 79.2932, 0.2828 ) }
    apic_9 { pt3dadd( 132.812, 221.791, 78.7562, 0.2898 ) }
    apic_9 { pt3dadd( 132.537, 220.901, 78.3289, 0.3026 ) }
    apic_9 { pt3dadd( 132.41, 219.908, 77.7815, 0.3274 ) }
    apic_9 { pt3dadd( 131.886, 218.996, 77.275, 0.3678 ) }
    apic_9 { pt3dadd( 131.2, 218.102, 76.823, 0.47 ) }
    apic_9 { pt3dadd( 130.528, 217.22, 76.3619, 0.5278 ) }
    apic_9 { pt3dadd( 130.159, 216.238, 75.8486, 0.5878 ) }
    apic_9 { pt3dadd( 129.529, 215.301, 75.4684, 0.4702 ) }
    apic_9 { pt3dadd( 129.203, 214.405, 75.3502, 0.4468 ) }
    apic_9 { pt3dadd( 128.758, 213.786, 75.448, 0.3748 ) }
    apic_9 { pt3dadd( 128.844, 212.991, 75.3572, 0.3794 ) }
    apic_9 { pt3dadd( 129.49, 212.341, 75.0019, 0.4056 ) }
    apic_9 { pt3dadd( 129.434, 211.274, 74.6035, 0.5954 ) }
    apic_9 { pt3dadd( 128.841, 210.319, 74.1499, 0.492 ) }
    apic_9 { pt3dadd( 127.963, 209.636, 73.6361, 0.4496 ) }
    apic_9 { pt3dadd( 127.272, 208.795, 73.0747, 0.3338 ) }
    apic_9 { pt3dadd( 126.727, 207.875, 72.5292, 0.3 ) }
    apic_9 { pt3dadd( 126.151, 206.924, 72.0888, 0.2744 ) }
    apic_9 { pt3dadd( 125.298, 206.187, 71.776, 0.2744 ) }
    apic_9 { pt3dadd( 124.3, 205.629, 71.5728, 0.2742 ) }
    apic_9 { pt3dadd( 123.408, 204.936, 71.4585, 0.274 ) }
    apic_9 { pt3dadd( 122.857, 203.962, 71.4106, 0.2736 ) }
    apic_9 { pt3dadd( 122.654, 202.845, 71.4, 0.2728 ) }
    apic_9 { pt3dadd( 122.083, 201.929, 71.4, 0.2712 ) }
    apic_9 { pt3dadd( 121.033, 201.609, 71.4, 0.2684 ) }
    apic_9 { pt3dadd( 120.246, 200.877, 71.4, 0.2626 ) }
    apic_9 { pt3dadd( 120.235, 199.737, 71.4, 0.2542 ) }
    apic_9 { pt3dadd( 120.235, 198.593, 71.4, 0.2288 ) }
    apic_9 { pt3dadd( 120.121, 197.454, 71.4, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 78/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 135.218, 226.145, 82.042, 0.399 ) }
    apic_8 { pt3dadd( 134.397, 224.922, 82.4765, 0.3342 ) }
    apic_8 { pt3dadd( 134.124, 223.826, 82.8948, 0.3006 ) }
    apic_8 { pt3dadd( 134.038, 222.702, 83.2591, 0.2758 ) }
    apic_8 { pt3dadd( 133.498, 221.707, 83.5887, 0.2766 ) }
    apic_8 { pt3dadd( 133.004, 220.738, 83.9737, 0.2786 ) }
    apic_8 { pt3dadd( 132.768, 219.629, 84.352, 0.282 ) }
    apic_8 { pt3dadd( 132.18, 218.895, 84.7507, 0.288 ) }
    apic_8 { pt3dadd( 131.576, 218.558, 85.3516, 0.3006 ) }
    apic_8 { pt3dadd( 131.558, 217.441, 85.8354, 0.3174 ) }
    apic_8 { pt3dadd( 131.434, 216.31, 86.1683, 0.3796 ) }
    apic_8 { pt3dadd( 131.373, 215.19, 86.4674, 0.3456 ) }
    apic_8 { pt3dadd( 131.177, 214.164, 86.6919, 0.3214 ) }
    apic_8 { pt3dadd( 131.061, 213.133, 86.7412, 0.315 ) }
    apic_8 { pt3dadd( 131.095, 212.019, 86.7588, 0.3454 ) }
    apic_8 { pt3dadd( 131.102, 211.078, 86.9509, 0.4264 ) }
    apic_8 { pt3dadd( 130.831, 210.056, 87.2889, 0.4574 ) }
    apic_8 { pt3dadd( 130.64, 208.939, 87.6271, 0.4062 ) }
    apic_8 { pt3dadd( 130.485, 207.892, 87.7985, 0.3812 ) }
    apic_8 { pt3dadd( 129.994, 206.895, 88.0684, 0.4524 ) }
    apic_8 { pt3dadd( 129.884, 205.834, 88.4215, 0.471 ) }
    apic_8 { pt3dadd( 130.005, 204.731, 88.7541, 0.6006 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_8 { pt3dadd( 129.811, 203.684, 89.1764, 0.6062 ) }
    apic_8 { pt3dadd( 129.41, 202.642, 89.5437, 0.612 ) }
    apic_8 { pt3dadd( 129.194, 201.534, 89.9049, 0.6452 ) }
    apic_8 { pt3dadd( 128.969, 200.571, 90.4238, 0.5972 ) }
    apic_8 { pt3dadd( 128.548, 199.562, 90.9863, 0.5836 ) }
    apic_8 { pt3dadd( 128.172, 198.515, 91.5597, 0.4206 ) }
    apic_8 { pt3dadd( 127.784, 197.458, 92.1116, 0.329 ) }
    apic_8 { pt3dadd( 127.396, 196.401, 92.6478, 0.2814 ) }
    apic_8 { pt3dadd( 127.007, 195.344, 93.1566, 0.287 ) }
    apic_8 { pt3dadd( 126.768, 194.235, 93.599, 0.2988 ) }
    apic_8 { pt3dadd( 126.682, 193.096, 93.9904, 0.3142 ) }
    apic_8 { pt3dadd( 126.805, 191.963, 94.3608, 0.3734 ) }
    apic_8 { pt3dadd( 127.216, 190.907, 94.7638, 0.3338 ) }
    apic_8 { pt3dadd( 127.644, 190.05, 95.3817, 0.3 ) }
    apic_8 { pt3dadd( 128.058, 189.242, 96.2077, 0.2746 ) }
    apic_8 { pt3dadd( 128.666, 188.337, 96.9956, 0.2746 ) }
    apic_8 { pt3dadd( 129.073, 187.359, 97.7995, 0.2746 ) }
    apic_8 { pt3dadd( 129.302, 186.33, 98.6059, 0.2746 ) }
    apic_8 { pt3dadd( 129.53, 185.253, 99.3297, 0.2746 ) }
    apic_8 { pt3dadd( 129.878, 184.179, 99.918, 0.2748 ) }
    apic_8 { pt3dadd( 130.403, 183.165, 100.34, 0.275 ) }
    apic_8 { pt3dadd( 130.986, 182.18, 100.651, 0.2752 ) }
    apic_8 { pt3dadd( 131.601, 181.215, 100.876, 0.2758 ) }
    apic_8 { pt3dadd( 131.701, 180.138, 101.166, 0.2768 ) }
    apic_8 { pt3dadd( 131.71, 179.034, 101.493, 0.2796 ) }
    apic_8 { pt3dadd( 131.605, 177.895, 101.739, 0.2796 ) }
    apic_8 { pt3dadd( 131.737, 176.758, 101.921, 0.305 ) }
    apic_8 { pt3dadd( 132.126, 175.683, 102.117, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 28/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 400.415, 485.615, 42.2276, 0.407 ) }
    dend_9 { pt3dadd( 401.002, 485.742, 40.3315, 0.2288 ) }
    dend_9 { pt3dadd( 401.701, 486.616, 40.8055, 0.326 ) }
    dend_9 { pt3dadd( 402.132, 487.646, 41.0315, 0.3956 ) }
    dend_9 { pt3dadd( 402.767, 488.565, 41.2714, 0.3746 ) }
    dend_9 { pt3dadd( 403.297, 489.471, 41.5436, 0.3776 ) }
    dend_9 { pt3dadd( 403.44, 490.506, 41.7018, 0.4088 ) }
    dend_9 { pt3dadd( 403.934, 491.298, 41.8102, 0.5698 ) }
    dend_9 { pt3dadd( 404.549, 492.159, 41.848, 0.5966 ) }
    dend_9 { pt3dadd( 405.57, 492.561, 41.8916, 0.5936 ) }
    dend_9 { pt3dadd( 406.579, 493.09, 41.9381, 0.614 ) }
    dend_9 { pt3dadd( 407.614, 493.574, 41.9675, 0.5258 ) }
    dend_9 { pt3dadd( 408.571, 494.199, 41.9908, 0.5166 ) }
    dend_9 { pt3dadd( 409.476, 494.898, 41.9978, 0.6662 ) }
    dend_9 { pt3dadd( 410.309, 495.681, 41.9882, 0.8198 ) }
    dend_9 { pt3dadd( 411.15, 496.456, 41.9516, 0.7912 ) }
    dend_9 { pt3dadd( 411.952, 497.272, 41.9202, 0.6578 ) }
    dend_9 { pt3dadd( 412.631, 498.179, 41.8449, 0.5716 ) }
    dend_9 { pt3dadd( 413.149, 499.161, 41.7032, 0.5438 ) }
    dend_9 { pt3dadd( 414.088, 499.76, 41.697, 0.5382 ) }
    dend_9 { pt3dadd( 414.973, 500.483, 41.7315, 0.534 ) }
    dend_9 { pt3dadd( 415.782, 501.292, 41.8065, 0.4966 ) }
    dend_9 { pt3dadd( 416.432, 502.233, 41.9199, 0.571 ) }
    dend_9 { pt3dadd( 417.314, 502.93, 42.1428, 0.6968 ) }
    dend_9 { pt3dadd( 418.075, 503.776, 42.3704, 0.7598 ) }
    dend_9 { pt3dadd( 418.565, 504.704, 42.7417, 0.789 ) }
    dend_9 { pt3dadd( 419.095, 505.712, 43.0909, 0.5824 ) }
    dend_9 { pt3dadd( 419.492, 506.777, 43.4168, 0.5486 ) }
    dend_9 { pt3dadd( 420.007, 507.644, 43.7626, 0.3932 ) }
    dend_9 { pt3dadd( 420.927, 508.118, 44.1048, 0.3254 ) }
    dend_9 { pt3dadd( 421.955, 508.563, 44.3125, 0.2746 ) }
    dend_9 { pt3dadd( 422.99, 509.002, 44.3971, 0.2746 ) }
    dend_9 { pt3dadd( 423.621, 509.353, 44.2061, 0.2746 ) }
    dend_9 { pt3dadd( 424.297, 510.261, 43.9653, 0.2746 ) }
    dend_9 { pt3dadd( 424.896, 511.228, 43.7497, 0.2746 ) }
    dend_9 { pt3dadd( 425.594, 512.124, 43.5778, 0.2748 ) }
    dend_9 { pt3dadd( 426.06, 513.165, 43.4664, 0.2748 ) }
    dend_9 { pt3dadd( 426.52, 514.187, 43.4092, 0.275 ) }
    dend_9 { pt3dadd( 427.324, 514.996, 43.4, 0.2756 ) }
    dend_9 { pt3dadd( 428.286, 515.599, 43.4, 0.2764 ) }
    dend_9 { pt3dadd( 429.359, 515.987, 43.4, 0.278 ) }
    dend_9 { pt3dadd( 430.448, 516.335, 43.4, 0.2808 ) }
    dend_9 { pt3dadd( 431.471, 516.833, 43.4, 0.286 ) }
    dend_9 { pt3dadd( 432.368, 517.536, 43.4, 0.297 ) }
    dend_9 { pt3dadd( 433.149, 518.369, 43.4, 0.3108 ) }
    dend_9 { pt3dadd( 434.007, 519.121, 43.4, 0.3672 ) }
    dend_9 { pt3dadd( 434.745, 519.989, 43.4, 0.322 ) }
    dend_9 { pt3dadd( 435.72, 520.561, 43.4, 0.2796 ) }
    dend_9 { pt3dadd( 436.651, 521.224, 43.4, 0.2288 ) }
    dend_9 { pt3dadd( 437.352, 522.122, 43.4, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 78/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 400.415, 485.615, 42.2276, 0.407 ) }
    dend_8 { pt3dadd( 400.495, 486.202, 42.5729, 0.5238 ) }
    dend_8 { pt3dadd( 400.817, 487.247, 42.9201, 0.4906 ) }
    dend_8 { pt3dadd( 400.803, 488.38, 43.0973, 0.4968 ) }
    dend_8 { pt3dadd( 400.61, 489.473, 43.1063, 0.6362 ) }
    dend_8 { pt3dadd( 400.425, 490.594, 43.0469, 0.7324 ) }
    dend_8 { pt3dadd( 400.232, 491.721, 42.9783, 0.7838 ) }
    dend_8 { pt3dadd( 400.182, 492.859, 42.9643, 0.5794 ) }
    dend_8 { pt3dadd( 400.418, 493.974, 42.992, 0.5118 ) }
    dend_8 { pt3dadd( 400.925, 494.999, 43.0833, 0.4758 ) }
    dend_8 { pt3dadd( 401.399, 496.023, 43.2634, 0.4334 ) }
    dend_8 { pt3dadd( 401.717, 497.037, 43.5968, 0.465 ) }
    dend_8 { pt3dadd( 401.855, 498.156, 43.9457, 0.4458 ) }
    dend_8 { pt3dadd( 402.251, 499.223, 44.235, 0.5592 ) }
    dend_8 { pt3dadd( 402.711, 500.237, 44.4329, 0.504 ) }
    dend_8 { pt3dadd( 402.858, 501.36, 44.6676, 0.5468 ) }
    dend_8 { pt3dadd( 403.102, 502.429, 45.0106, 0.6078 ) }
    dend_8 { pt3dadd( 403.335, 503.516, 45.411, 0.5812 ) }
    dend_8 { pt3dadd( 403.707, 504.566, 45.8668, 0.5232 ) }
    dend_8 { pt3dadd( 403.976, 505.655, 46.3117, 0.4582 ) }
    dend_8 { pt3dadd( 404.053, 506.553, 46.7023, 0.3594 ) }
    dend_8 { pt3dadd( 404.197, 507.375, 47.2349, 0.3 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_8 { pt3dadd( 404.453, 508.483, 47.6196, 0.2746 ) }
    dend_8 { pt3dadd( 404.962, 509.506, 47.8887, 0.2746 ) }
    dend_8 { pt3dadd( 405.511, 510.501, 48.069, 0.2746 ) }
    dend_8 { pt3dadd( 405.779, 511.6, 48.1869, 0.2746 ) }
    dend_8 { pt3dadd( 405.909, 512.718, 48.2591, 0.2746 ) }
    dend_8 { pt3dadd( 406.322, 513.783, 48.2983, 0.2746 ) }
    dend_8 { pt3dadd( 406.764, 514.825, 48.3529, 0.2746 ) }
    dend_8 { pt3dadd( 407.369, 515.795, 48.4305, 0.2746 ) }
    dend_8 { pt3dadd( 407.803, 516.841, 48.5405, 0.2746 ) }
    dend_8 { pt3dadd( 407.948, 517.97, 48.692, 0.2746 ) }
    dend_8 { pt3dadd( 407.951, 519.114, 48.8897, 0.2746 ) }
    dend_8 { pt3dadd( 408.101, 520.213, 49.1767, 0.2746 ) }
    dend_8 { pt3dadd( 408.587, 521.134, 49.6409, 0.2746 ) }
    dend_8 { pt3dadd( 409.175, 521.95, 50.2631, 0.2746 ) }
    dend_8 { pt3dadd( 409.724, 522.837, 50.9466, 0.2746 ) }
    dend_8 { pt3dadd( 410.111, 523.874, 51.5393, 0.2746 ) }
    dend_8 { pt3dadd( 410.178, 524.999, 51.9742, 0.2746 ) }
    dend_8 { pt3dadd( 409.957, 526.118, 52.2665, 0.2746 ) }
    dend_8 { pt3dadd( 409.99, 527.226, 52.4406, 0.2746 ) }
    dend_8 { pt3dadd( 410.403, 528.287, 52.5398, 0.2746 ) }
    dend_8 { pt3dadd( 410.899, 529.317, 52.6148, 0.2746 ) }
    dend_8 { pt3dadd( 411.27, 530.395, 52.7052, 0.2746 ) }
    dend_8 { pt3dadd( 411.501, 531.514, 52.827, 0.2746 ) }
    dend_8 { pt3dadd( 411.68, 532.644, 52.9802, 0.2748 ) }
    dend_8 { pt3dadd( 411.924, 533.749, 53.2064, 0.2748 ) }
    dend_8 { pt3dadd( 412.343, 534.619, 53.6396, 0.2752 ) }
    dend_8 { pt3dadd( 412.747, 535.608, 54.1377, 0.2758 ) }
    dend_8 { pt3dadd( 412.929, 536.728, 54.5544, 0.2766 ) }
    dend_8 { pt3dadd( 412.667, 537.83, 54.8764, 0.2786 ) }
    dend_8 { pt3dadd( 412.302, 538.913, 55.116, 0.2818 ) }
    dend_8 { pt3dadd( 411.953, 540.002, 55.2908, 0.2882 ) }
    dend_8 { pt3dadd( 411.839, 541.137, 55.428, 0.2994 ) }
    dend_8 { pt3dadd( 411.793, 542.28, 55.5747, 0.3228 ) }
    dend_8 { pt3dadd( 411.753, 543.424, 55.7556, 0.3536 ) }
    dend_8 { pt3dadd( 411.665, 544.555, 56.0162, 0.4722 ) }
    dend_8 { pt3dadd( 411.393, 545.463, 56.5076, 0.393 ) }
    dend_8 { pt3dadd( 410.922, 546.346, 57.1287, 0.3248 ) }
    dend_8 { pt3dadd( 409.981, 546.985, 57.6282, 0.2736 ) }
    dend_8 { pt3dadd( 409.182, 547.802, 58.007, 0.2728 ) }
    dend_8 { pt3dadd( 408.566, 548.764, 58.2932, 0.2712 ) }
    dend_8 { pt3dadd( 408.06, 549.781, 58.5203, 0.2684 ) }
    dend_8 { pt3dadd( 407.512, 550.784, 58.6502, 0.2626 ) }
    dend_8 { pt3dadd( 406.956, 551.784, 58.7202, 0.2542 ) }
    dend_8 { pt3dadd( 406.574, 552.863, 58.7686, 0.2288 ) }
    dend_8 { pt3dadd( 406.311, 553.976, 58.8109, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_428, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_428 = new SectionList()
    soma_0 ModelViewParmSubset_428.append()
    axon_0 ModelViewParmSubset_428.append()
    axon_1 ModelViewParmSubset_428.append()

    // Group: {name=ModelViewParmSubset_429, groups=[], sections=[dend_30, apic_0, dend_23, dend_18, dend_3, dend_0, dend_32, dend_31, apic_4, apic_1, dend_25, dend_24, dend_20, dend_19, dend_13, dend_4, dend_2, dend_1, apic_10, apic_5, apic_3, apic_2, dend_27, dend_26, dend_22, dend_21, dend_15, dend_14, dend_10, dend_5, apic_7, apic_6, dend_29, dend_28, dend_17, dend_16, dend_12, dend_11, dend_7, dend_6, apic_9, apic_8, dend_9, dend_8]}
    ModelViewParmSubset_429 = new SectionList()
    dend_30 ModelViewParmSubset_429.append()
    apic_0 ModelViewParmSubset_429.append()
    dend_23 ModelViewParmSubset_429.append()
    dend_18 ModelViewParmSubset_429.append()
    dend_3 ModelViewParmSubset_429.append()
    dend_0 ModelViewParmSubset_429.append()
    dend_32 ModelViewParmSubset_429.append()
    dend_31 ModelViewParmSubset_429.append()
    apic_4 ModelViewParmSubset_429.append()
    apic_1 ModelViewParmSubset_429.append()
    dend_25 ModelViewParmSubset_429.append()
    dend_24 ModelViewParmSubset_429.append()
    dend_20 ModelViewParmSubset_429.append()
    dend_19 ModelViewParmSubset_429.append()
    dend_13 ModelViewParmSubset_429.append()
    dend_4 ModelViewParmSubset_429.append()
    dend_2 ModelViewParmSubset_429.append()
    dend_1 ModelViewParmSubset_429.append()
    apic_10 ModelViewParmSubset_429.append()
    apic_5 ModelViewParmSubset_429.append()
    apic_3 ModelViewParmSubset_429.append()
    apic_2 ModelViewParmSubset_429.append()
    dend_27 ModelViewParmSubset_429.append()
    dend_26 ModelViewParmSubset_429.append()
    dend_22 ModelViewParmSubset_429.append()
    dend_21 ModelViewParmSubset_429.append()
    dend_15 ModelViewParmSubset_429.append()
    dend_14 ModelViewParmSubset_429.append()
    dend_10 ModelViewParmSubset_429.append()
    dend_5 ModelViewParmSubset_429.append()
    apic_7 ModelViewParmSubset_429.append()
    apic_6 ModelViewParmSubset_429.append()
    dend_29 ModelViewParmSubset_429.append()
    dend_28 ModelViewParmSubset_429.append()
    dend_17 ModelViewParmSubset_429.append()
    dend_16 ModelViewParmSubset_429.append()
    dend_12 ModelViewParmSubset_429.append()
    dend_11 ModelViewParmSubset_429.append()
    dend_7 ModelViewParmSubset_429.append()
    dend_6 ModelViewParmSubset_429.append()
    apic_9 ModelViewParmSubset_429.append()
    apic_8 ModelViewParmSubset_429.append()
    dend_9 ModelViewParmSubset_429.append()
    dend_8 ModelViewParmSubset_429.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_4, apic_1, apic_10, apic_5, apic_3, apic_2, apic_7, apic_6, apic_9, apic_8]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_4 apic.append()
    apic_1 apic.append()
    apic_10 apic.append()
    apic_5 apic.append()
    apic_3 apic.append()
    apic_2 apic.append()
    apic_7 apic.append()
    apic_6 apic.append()
    apic_9 apic.append()
    apic_8 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=dend, groups=[], sections=[dend_30, dend_23, dend_18, dend_3, dend_0, dend_32, dend_31, dend_25, dend_24, dend_20, dend_19, dend_13, dend_4, dend_2, dend_1, dend_27, dend_26, dend_22, dend_21, dend_15, dend_14, dend_10, dend_5, dend_29, dend_28, dend_17, dend_16, dend_12, dend_11, dend_7, dend_6, dend_9, dend_8]}
    dend = new SectionList()
    dend_30 dend.append()
    dend_23 dend.append()
    dend_18 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_13 dend.append()
    dend_4 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_27 dend.append()
    dend_26 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_10 dend.append()
    dend_5 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()

    // Group: {name=OneSecGrp_SectionRef_18225, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_18225 = new SectionList()
    soma_0 OneSecGrp_SectionRef_18225.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_30, dend_30, dend_30, dend_30, dend_30, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.7500718  // units: uF/cm2
    forsec apic cm = 2.7500718  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 324.00787  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0012083319  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 3.3895742E-7  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.37190843  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.0039571775  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.16775882  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.004925574  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.002101315  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.14828965  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.39894E-4  // units: S cm-2
        e_pas_nml2 = -95.39225  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 1.6046138E-4  // units: S cm-2
        e_pas_nml2 = -95.39225  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.1576881E-4  // units: S cm-2
        e_pas_nml2 = -95.39225  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 9.742825E-5  // units: S cm-2
        e_pas_nml2 = -95.39225  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 4.2916703E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 8.2631165E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_485507735
    forsec soma {
        insert CaDynamics_485507735
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_31 nseg = 3
    dend_24 nseg = 5
    dend_19 nseg = 5
    dend_2 nseg = 3
    apic_10 nseg = 3
    apic_5 nseg = 17
    apic_3 nseg = 5
    apic_2 nseg = 3
    dend_21 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    apic_6 nseg = 5
    dend_28 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 5
    apic_8 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_485507735


