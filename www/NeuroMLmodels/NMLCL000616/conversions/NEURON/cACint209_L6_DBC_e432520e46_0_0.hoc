// Cell: cACint209_L6_DBC_e432520e46_0_0
/*
{
  "id" : "cACint209_L6_DBC_e432520e46_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.20498, -9.63696, 0.0, 2.93949", "1.97921, -8.62937, 0.0, 5.10114", "1.75343, -7.62179, 0.0, 6.34149", "1.52766, -6.61421, 0.0, 7.24948", "1.30189, -5.60662, 0.0, 8.32859", "1.07612, -4.59904, 0.0, 9.63098", "0.850343, -3.59146, 0.0, 10.5761", "0.624571, -2.58388, 0.0, 11.2008", "0.398798, -1.57629, 0.0, 11.5851", "0.173026, -0.56871, 0.0, 11.8715", "-0.0527468, 0.438873, 0.0, 11.942", "-0.278519, 1.44646, 0.0, 11.923", "-0.504292, 2.45404, 0.0, 11.4797", "-0.730064, 3.46162, 0.0, 10.9001", "-0.955837, 4.4692, 0.0, 10.1322", "-1.18161, 5.47679, 0.0, 9.32117", "-1.40738, 6.48437, 0.0, 8.43955", "-1.63315, 7.49195, 0.0, 7.43264", "-1.85893, 8.49954, 0.0, 6.41765", "-2.0847, 9.50712, 0.0, 5.2256", "-2.31047, 10.5147, 0.0, 2.87927" ]
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.67666, -9.70218, 7.1, 4.35", "1.67666, -9.70218, 7.1, 4.35", "2.01893, -10.4436, 7.59132, 3.32", "2.6391, -11.5993, 8.56353, 2.36", "3.30156, -12.8337, 9.60203, 2.88", "3.36442, -12.9509, 9.70058, 2.65", "3.84315, -13.8429, 10.4511, 1.62", "4.49446, -14.9669, 11.511, 1.84", "5.14618, -15.9081, 12.6513, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.96334, 10.2878, 0.0, 4.28", "-1.96334, 10.2878, 0.0, 4.28", "-2.91703, 12.1182, -0.188219, 3.32", "-3.59335, 13.4102, -0.411851, 2.88", "-4.08334, 14.3489, -0.595626, 2.88", "-4.81513, 15.7508, -0.87009, 3.47", "-5.77182, 17.5835, -1.22891, 2.51", "-6.90929, 19.7281, -1.69344, 2.8", "-7.91746, 21.5653, -2.1756, 4.13", "-8.39324, 22.4172, -2.43627, 4.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.31047, 10.5147, 0.0, 0.592811", "-5.59024, 25.1517, 0.0, 0.592811", "-8.87001, 39.7888, 0.0, 0.592811" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "5.14618, -15.9081, 12.6513, 1.4", "6.0482, -16.8874, 11.5716, 1.4", "7.25002, -18.2251, 10.1824, 1.4", "8.07096, -19.1315, 9.29371, 1.4", "9.10855, -20.2816, 8.28216, 1.4", "10.0188, -21.2954, 7.44113, 1.18", "11.1857, -22.5739, 6.44208, 1.4", "11.7177, -23.1723, 6.02531, 1.55", "12.2473, -23.7638, 5.67335, 1.7", "13.4125, -25.0411, 4.97514, 1.18", "14.3379, -26.0129, 4.5101, 1.18", "15.1782, -26.8694, 4.14857, 1.84", "15.6747, -27.3691, 3.98862, 1.84" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.14618, -15.9081, 12.6513, 1.18", "5.00112, -16.3463, 13.4627, 1.18", "4.67711, -17.435, 15.3973, 1.03", "4.51724, -18.2468, 16.8031, 1.03", "4.48662, -18.7114, 17.6204, 0.96", "4.53493, -19.1043, 18.3408, 0.96", "4.66186, -19.6044, 19.3253, 1.11", "4.87045, -20.0855, 20.3779, 1.03", "5.15378, -20.6118, 21.6374, 1.18", "5.52917, -21.2517, 23.3289, 1.84", "5.96562, -21.9699, 25.4536, 1.18", "6.23896, -22.5006, 27.1599, 1.18", "6.33241, -22.8626, 28.4719, 1.18", "6.20153, -23.2109, 29.9359, 1.33", "5.82792, -23.4551, 31.1848, 1.33", "5.47626, -23.5665, 31.8889, 1.33", "4.81924, -23.7, 32.9827, 1.4", "4.1892, -23.8048, 34.106, 1.47", "3.39601, -23.9345, 35.8836, 1.33", "2.89469, -24.0387, 37.544, 1.33", "2.60029, -24.1392, 38.9636, 1.4", "2.32518, -24.2977, 41.2242, 1.4", "2.18748, -24.4704, 43.5951, 1.4", "2.13782, -24.6604, 45.5096, 1.4", "2.0829, -24.9516, 47.7597, 1.4", "2.00285, -25.1264, 48.7181, 1.11", "1.61382, -25.6446, 50.9029, 1.11", "1.01592, -26.2206, 52.9259, 1.25", "0.621776, -26.5465, 53.9371, 1.55", "-0.156196, -27.1111, 55.5378, 1.55", "-1.14592, -27.7808, 57.2815, 1.25", "-2.29731, -28.5169, 59.1722, 1.25", "-3.73482, -29.431, 61.1995, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.39324, 22.4172, -2.43627, 2.88", "-9.99269, 24.3911, -4.3035, 2.88", "-11.1512, 25.8208, -5.65593, 2.88", "-12.3136, 27.2553, -7.01292, 3.47" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.39324, 22.4172, -2.43627, 2.06", "-7.30988, 25.5295, -0.858282, 2.06", "-6.34624, 28.3596, 0.333592, 0.96", "-5.90193, 29.6284, 0.798159, 0.96", "-5.26344, 31.4487, 1.36012, 0.81", "-4.73927, 32.8999, 1.73411, 0.81", "-4.02493, 34.8287, 2.16002, 1.03", "-3.5767, 36.0616, 2.26937, 1.11", "-3.06743, 37.4303, 2.2669, 1.55", "-2.42206, 39.2275, 2.2079, 1.18", "-1.85248, 40.946, 2.11483, 0.88", "-1.56496, 41.9396, 2.05478, 0.74", "-1.16715, 43.6387, 1.94115, 1.18", "-0.788267, 45.5428, 1.86145, 0.81", "-0.385745, 47.8187, 1.80443, 0.96", "-0.0412924, 49.8172, 1.74652, 1.25", "0.262942, 51.5651, 1.68852, 1.25", "0.597341, 53.1954, 1.62013, 0.66", "1.04663, 54.8881, 1.52901, 0.88", "1.5983, 56.3917, 1.36568, 0.52", "2.24054, 57.7977, 1.1328, 0.96", "2.69414, 58.681, 0.944164, 0.96", "3.63359, 60.3478, 0.566608, 0.74", "4.43055, 61.6607, 0.253883, 0.88", "5.42677, 63.266, -0.139717, 0.88", "6.54938, 65.1137, -0.46927, 0.96", "6.89774, 65.6918, -0.53139, 0.96", "7.84064, 67.2914, -0.58168, 0.96", "8.26676, 68.0286, -0.52934, 1.11", "8.79351, 68.9593, -0.392225, 0.96", "9.79569, 70.6075, 0.00212151, 0.81", "10.6854, 71.9829, 0.423411, 0.66", "11.856, 73.7838, 1.01165, 0.59", "12.871, 75.3239, 1.62986, 0.88", "13.8401, 76.7835, 2.25732, 1.4", "15.2865, 78.8993, 3.24277, 0.88", "16.5292, 80.631, 4.11956, 0.74", "17.2198, 81.5833, 4.64519, 0.74", "18.9697, 83.84, 5.9397, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.87001, 39.7888, 0.0, 0.158847", "-12.1498, 54.4258, 0.0, 0.158847", "-15.4296, 69.0629, 0.0, 0.158847" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "15.6747, -27.3691, 3.98862, 1.7", "17.6683, -27.3356, 5.93707, 1.7", "19.3501, -27.4389, 7.67475, 1.25", "20.6387, -27.6105, 9.0659, 1.25", "21.9156, -27.8721, 10.4528, 1.55", "23.5067, -28.2936, 12.1686, 1.4", "24.9904, -28.7461, 13.7455, 1.62", "26.4245, -29.3062, 15.2132, 1.55", "28.0785, -30.026, 16.8732, 1.4", "29.4724, -30.6674, 18.2164, 1.47", "31.468, -31.624, 20.0504, 1.18", "33.3484, -32.5195, 21.6516, 1.18", "35.3981, -33.4734, 23.2495, 1.03", "37.1074, -34.2317, 24.4495, 1.03", "37.8296, -34.526, 24.8998, 1.25", "39.6487, -35.1901, 25.9343, 1.11", "41.241, -35.6858, 26.8583, 1.33", "42.2501, -35.9586, 27.4409, 1.62", "44.5711, -36.5437, 28.774, 1.33", "46.863, -37.0689, 30.0972, 1.25", "48.8403, -37.4547, 31.2667, 1.18", "52.2448, -37.9821, 33.3258, 1.47", "53.2258, -38.108, 33.954, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "15.6747, -27.3691, 3.98862, 0.88", "15.8213, -28.271, 4.72896, 0.88", "15.9319, -29.581, 5.93011, 0.74", "15.9826, -30.9033, 7.26104, 0.74", "15.9815, -31.933, 8.29667, 0.74", "15.9364, -33.0371, 9.38519, 0.96", "15.8518, -34.14, 10.4398, 1.7", "15.6054, -35.776, 12.0299, 0.66", "15.3333, -36.9161, 13.073, 0.74", "15.0582, -37.7974, 13.7284, 0.88", "14.748, -38.631, 14.1815, 1.11", "14.3299, -39.6734, 14.5489, 1.33", "13.7482, -41.1214, 14.8485, 0.74", "13.2313, -42.5058, 14.979, 0.74", "12.8891, -43.4974, 14.9887, 0.59", "12.3404, -45.2557, 14.9502, 0.88", "11.917, -46.7928, 14.8923, 0.59", "11.7101, -47.6081, 14.8482, 0.59", "11.3782, -49.0976, 14.7658, 0.81", "11.0061, -50.9983, 14.7178, 0.74", "10.8309, -51.9536, 14.6934, 0.59", "10.6414, -53.196, 14.6956, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.73482, -29.431, 61.1995, 0.52", "-4.05928, -28.6986, 64.5552, 0.52", "-4.15718, -28.3138, 66.2069, 0.52", "-4.21349, -27.9964, 67.5035, 0.52", "-4.2441, -27.7441, 68.5676, 0.52", "-4.3034, -27.3415, 70.1737, 0.52", "-4.35762, -27.0441, 71.3107, 0.52", "-4.42973, -26.7278, 72.3494, 0.52", "-4.5668, -26.216, 73.9294, 0.52", "-4.80393, -25.5242, 75.8831, 0.52", "-5.02577, -25.0129, 77.2059, 0.81", "-5.28872, -24.4807, 78.3942, 0.81", "-5.51909, -23.9963, 79.3223, 0.59", "-5.99283, -22.8965, 81.2096, 0.59", "-6.30302, -21.9858, 82.5959, 0.52", "-6.53841, -21.1156, 83.7568, 0.37", "-6.77131, -19.8715, 85.3259, 0.44", "-6.92906, -18.569, 86.8283, 0.29", "-6.98909, -17.4611, 88.0576, 0.29", "-7.01435, -16.0589, 89.4534, 0.29", "-7.00632, -14.9125, 90.5549, 0.29", "-6.97274, -13.2021, 92.1412, 0.29", "-6.94753, -12.3055, 92.9655, 0.29", "-6.90432, -10.4032, 94.7097, 0.29", "-6.88289, -9.1539, 95.8344, 0.22", "-6.86635, -7.13091, 97.6764, 0.22", "-6.85683, -6.22135, 98.53, 0.22", "-6.86979, -4.65536, 99.9857, 0.22", "-6.90499, -2.8696, 101.739, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-3.73482, -29.431, 61.1995, 1.03", "-3.85559, -30.3378, 61.2749, 1.03", "-4.01671, -31.5971, 61.5315, 0.74", "-4.18111, -33.0797, 61.9014, 0.74", "-4.29579, -34.2632, 62.211, 0.88", "-4.4286, -35.8644, 62.5711, 0.96", "-4.48557, -36.6882, 62.7336, 0.96", "-4.58606, -38.9284, 63.1366, 1.03", "-4.6276, -40.4295, 63.3827, 0.66", "-4.63301, -41.6351, 63.5704, 0.52", "-4.58478, -43.1746, 63.7834, 0.66", "-4.48791, -44.4685, 63.9272, 0.96", "-4.38548, -45.8442, 64.0353, 1.11", "-4.34129, -46.3798, 64.0537, 1.11", "-4.19836, -47.7587, 64.1307, 0.66", "-4.10157, -48.5922, 64.1959, 0.66", "-3.95605, -49.7637, 64.313, 0.66", "-3.7801, -51.1661, 64.5131, 0.88", "-3.59202, -52.7158, 64.8128, 0.81", "-3.39222, -54.4801, 65.277, 0.74", "-3.23662, -56.072, 65.7813, 0.66", "-3.11087, -57.5834, 66.3472, 0.52", "-2.96348, -59.5826, 67.1755, 0.52", "-2.88027, -60.7338, 67.7163, 0.52", "-2.82555, -62.3001, 68.4996, 0.52", "-2.81545, -63.3352, 69.0228, 0.66", "-2.81179, -64.4766, 69.5792, 0.96", "-2.80021, -66.1045, 70.3113, 1.03", "-2.77036, -67.8355, 70.9415, 0.74", "-2.72224, -69.4535, 71.4291, 0.44", "-2.67539, -70.489, 71.6874, 0.22", "-2.6467, -70.9568, 71.7941, 0.22", "-2.54779, -72.129, 72.0203, 0.52", "-2.38492, -73.5578, 72.1861, 0.52", "-2.12143, -75.2963, 72.2458, 0.22", "-1.94823, -76.202, 72.2879, 0.22", "-1.6971, -77.4123, 72.3994, 0.66", "-1.31295, -79.1164, 72.6104, 0.66", "-0.899018, -80.7703, 72.8533, 0.37", "-0.544349, -82.0307, 73.1234, 0.22", "0.0514511, -84.096, 73.6805, 0.29", "0.410464, -85.456, 73.9572, 0.29", "0.577703, -86.1492, 74.0579, 0.66", "0.827571, -87.2494, 74.1469, 0.96", "1.20493, -89.0271, 74.1899, 0.96", "1.5257, -90.5955, 74.0832, 0.37", "2.13681, -93.7929, 73.6323, 0.44", "2.29399, -94.7273, 73.4907, 0.44", "2.56254, -96.5472, 73.286, 0.52", "2.79181, -98.2897, 73.1564, 0.44", "2.94373, -99.5364, 73.1218, 0.44", "3.16198, -101.358, 73.2117, 0.44", "3.40518, -103.375, 73.5448, 0.44", "3.57903, -104.993, 73.8705, 0.44", "3.68229, -106.179, 74.1468, 0.44", "3.77421, -107.307, 74.4289, 0.44", "3.83117, -108.522, 74.7564, 0.52", "3.84493, -110.006, 75.1668, 0.52", "3.82693, -110.898, 75.4035, 0.52", "3.71672, -112.9, 75.8708, 0.22", "3.6168, -114.54, 76.2066, 0.22", "3.52252, -116.017, 76.4663, 0.22", "3.42049, -117.559, 76.6923, 0.29", "3.34586, -119.003, 76.8165, 0.29", "3.31076, -120.679, 77.0387, 0.29", "3.33676, -122.794, 77.4008, 0.22", "3.37306, -123.627, 77.5668, 0.29", "3.49633, -125.19, 77.904, 0.37", "3.67999, -127.024, 78.3333, 0.37", "3.99269, -130.079, 79.0006, 0.22", "4.09827, -131.05, 79.1946, 0.22", "4.21002, -132.177, 79.3921, 0.37", "4.32468, -133.452, 79.5708, 0.37", "4.51167, -135.644, 79.8344, 0.29", "4.6184, -137.111, 79.9801, 0.22", "4.69348, -138.294, 80.0322, 0.22", "4.76983, -139.579, 80.1701, 0.29", "4.85004, -141.244, 80.4515, 0.29", "4.89969, -142.646, 80.8515, 0.29", "4.91855, -143.676, 81.21, 0.29", "4.94938, -145.58, 81.9999, 0.15", "4.96173, -147.424, 82.8525, 0.15", "4.96929, -148.273, 83.2944, 0.37", "5.01327, -150.514, 84.6199, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-12.3136, 27.2553, -7.01292, 2.8", "-13.9188, 27.4935, -7.77388, 2.8" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.3136, 27.2553, -7.01292, 1.77", "-11.9852, 29.013, -8.45321, 1.77", "-11.622, 31.4027, -10.5192, 1.4", "-11.3803, 33.2727, -12.1543, 1.4", "-11.2412, 34.4725, -13.2327, 1.7", "-11.0893, 36.042, -14.6925, 1.84", "-10.9337, 37.8816, -16.4208, 1.84", "-10.8441, 39.5817, -18.1002, 1.4", "-10.7735, 41.3845, -19.8473, 1.84", "-10.7152, 43.5085, -21.7768, 1.62", "-10.6795, 46.07, -23.9271, 1.77", "-10.7133, 47.5038, -24.9806, 1.77", "-10.8685, 49.7899, -26.4874, 1.62", "-11.032, 51.2315, -27.3425, 1.62", "-11.415, 53.5894, -28.6332, 1.47", "-11.7485, 55.1874, -29.4312, 1.47", "-12.4397, 58.1309, -30.8431, 1.4", "-12.9807, 60.3758, -31.945, 1.47", "-13.4468, 62.459, -33.0287, 1.55", "-13.6579, 63.6788, -33.738, 1.55", "-13.8762, 65.8989, -35.1264, 1.25", "-13.8967, 68.0867, -36.5238, 1.25", "-13.7379, 69.8585, -37.6233, 1.4", "-13.4368, 71.7288, -38.6935, 1.25", "-12.9722, 73.9412, -39.794, 1.25", "-12.6406, 75.5186, -40.4329, 1.25", "-12.2558, 77.3981, -41.1261, 1.47", "-12.0916, 78.4847, -41.4761, 1.62", "-12.0075, 79.8505, -41.8535, 1.33", "-12.1245, 82.8036, -42.5296, 1.11", "-12.3757, 84.5911, -42.9514, 1.11", "-12.772, 86.6992, -43.4966, 1.25", "-13.05, 87.8786, -43.8415, 1.47", "-13.5564, 89.72, -44.4299, 1.4", "-14.11, 91.4146, -45.0222, 1.25", "-15.1079, 93.7118, -45.8741, 1.47" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "18.9697, 83.84, 5.9397, 0.15", "19.2253, 84.1314, 9.75248, 0.15", "19.3582, 84.3314, 11.5515, 0.15", "19.4469, 84.5198, 12.6492, 0.29", "19.7327, 85.213, 15.4905, 0.22", "20.0176, 85.9259, 17.8496, 0.22", "20.2766, 86.6343, 19.7571, 0.37", "20.3394, 86.7949, 20.1187, 0.81", "20.5443, 87.4295, 21.1072, 0.15", "20.8438, 88.4477, 22.2847, 0.22", "20.9695, 88.8758, 22.6834, 0.59", "21.2169, 89.6723, 23.4264, 1.03", "21.6246, 91.1009, 24.9083, 0.15", "21.7623, 91.6129, 25.5734, 0.29", "22.0322, 92.6563, 27.3637, 0.22", "22.2559, 93.6875, 29.5285, 0.37", "22.3595, 94.2294, 30.8972, 0.37", "22.4363, 94.5907, 32.0822, 0.44", "22.5347, 95.1052, 34.2317, 0.37", "22.6173, 95.5763, 36.4423, 0.37", "22.6346, 95.8475, 37.8651, 0.37", "22.6264, 96.1656, 39.6869, 0.37", "22.6542, 96.6398, 42.4929, 0.37", "22.7884, 97.1619, 45.5397, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "18.9697, 83.84, 5.9397, 0.96", "20.4202, 85.5085, 5.05274, 0.96", "20.9114, 86.0838, 4.80435, 0.88", "21.793, 87.1115, 4.43027, 0.74", "22.7796, 88.2793, 4.07878, 0.96", "23.6747, 89.3506, 3.74811, 0.81", "24.4678, 90.3169, 3.44098, 0.44", "25.2159, 91.3154, 3.17624, 0.44", "25.7591, 92.0964, 2.93212, 0.66", "26.6136, 93.419, 2.4744, 0.52", "27.2885, 94.532, 2.04645, 0.74", "27.8446, 95.4838, 1.62081, 1.11", "28.3422, 96.4144, 1.18442, 0.66", "29.0423, 97.8007, 0.541422, 0.66", "29.5003, 98.731, 0.129266, 0.66", "30.0947, 99.9242, -0.331434, 0.81", "30.5351, 100.781, -0.583186, 0.59", "31.2302, 102.064, -0.927986, 0.52", "31.7426, 103.001, -1.16492, 0.52", "32.0575, 103.571, -1.29044, 0.52", "32.6665, 104.708, -1.49423, 0.66", "33.1908, 105.685, -1.6152, 0.88", "33.8898, 106.907, -1.73394, 1.03", "34.6537, 108.147, -1.8192, 0.52", "35.3053, 109.191, -1.86058, 0.29", "35.9282, 110.159, -1.86648, 0.29", "36.6462, 111.297, -1.76678, 0.52", "37.3823, 112.461, -1.54843, 0.22", "37.7721, 113.086, -1.37675, 0.15", "38.2328, 113.861, -1.15128, 0.66", "38.7402, 114.895, -0.842447, 0.29", "39.2403, 116.273, -0.390364, 0.52", "39.4282, 116.978, -0.132078, 1.03", "39.6735, 118.05, 0.292051, 0.37", "39.9102, 118.979, 0.620198, 0.44", "40.3897, 120.575, 1.04963, 0.59", "40.9088, 122.17, 1.30114, 0.88", "41.235, 123.098, 1.33491, 0.88", "41.5345, 123.923, 1.30727, 0.66", "42.2528, 125.683, 1.04747, 0.29", "42.8478, 126.968, 0.694423, 0.66", "43.3463, 127.949, 0.3031, 0.44", "43.6685, 128.598, 0.00879109, 0.44", "44.1391, 129.661, -0.441941, 0.22", "44.575, 130.774, -0.840025, 0.22", "44.8736, 131.627, -1.00352, 0.66", "45.1137, 132.317, -1.05458, 0.88", "45.5345, 133.496, -1.04068, 0.52", "45.867, 134.444, -0.906965, 0.52", "46.2879, 135.725, -0.549246, 0.52", "46.8507, 137.552, 0.148935, 0.52", "47.1392, 138.482, 0.571616, 0.96", "47.5354, 139.671, 1.18216, 0.66", "48.0738, 141.086, 1.9673, 0.22", "48.3765, 141.81, 2.3734, 0.22", "48.7322, 142.593, 2.77282, 0.29", "49.2649, 143.644, 3.19108, 0.37", "49.9999, 144.885, 3.54782, 0.52", "50.6075, 145.735, 3.6921, 0.81", "51.1696, 146.409, 3.68542, 0.81", "52.2215, 147.557, 3.50919, 0.22", "52.952, 148.327, 3.38392, 0.59", "54.0268, 149.441, 3.17794, 0.59", "54.9119, 150.361, 3.01125, 0.22", "56.0264, 151.584, 2.84652, 0.15", "56.8107, 152.548, 2.76943, 0.15", "58.0561, 154.376, 2.90634, 0.59", "58.4518, 155.079, 3.05635, 0.59", "58.9036, 156.045, 3.35145, 0.59", "59.2774, 156.946, 3.65286, 0.29", "59.6873, 157.976, 4.01969, 0.22", "60.4852, 159.857, 4.60745, 0.22", "60.7464, 160.41, 4.71429, 0.22", "61.2379, 161.369, 4.86157, 0.52", "61.8318, 162.459, 4.97706, 0.59", "62.2142, 163.129, 5.00807, 0.59", "62.9477, 164.365, 5.0386, 0.29", "63.447, 165.229, 5.02287, 0.29", "64.0526, 166.404, 5.02888, 0.37", "64.3957, 167.187, 5.05114, 0.29", "64.7129, 168.143, 5.1623, 0.44", "65.1397, 169.745, 5.43456, 0.44", "65.4085, 170.89, 5.65736, 0.66", "65.6563, 171.957, 5.883, 0.88", "65.9836, 173.367, 6.16947, 0.66", "66.6957, 175.991, 6.6693, 0.37", "67.1142, 177.288, 6.93729, 0.22", "67.5441, 178.453, 7.13417, 0.52", "67.8766, 179.203, 7.24007, 0.59", "68.418, 180.226, 7.31335, 0.29", "69.0053, 181.228, 7.36376, 0.22", "70.0933, 183.024, 7.41784, 0.15", "70.9055, 184.452, 7.54506, 0.37", "71.3816, 185.372, 7.66849, 0.37", "71.8616, 186.411, 7.81876, 0.37", "72.8352, 188.635, 8.1433, 0.81", "73.3175, 189.808, 8.31878, 0.96", "73.6886, 190.736, 8.44485, 0.52", "74.1038, 191.853, 8.65604, 0.22", "74.5927, 193.302, 8.93381, 0.29", "75.0763, 194.773, 9.17886, 0.22", "75.4804, 195.972, 9.31238, 0.74", "76.0708, 197.723, 9.50677, 0.29", "76.7088, 199.651, 9.78692, 0.52", "77.0548, 200.69, 9.97267, 0.59", "77.446, 201.895, 10.2148, 0.29", "77.7057, 202.774, 10.3626, 0.29", "77.9996, 203.854, 10.5527, 0.29", "78.2803, 204.936, 10.8154, 0.66", "78.495, 205.726, 11.0481, 0.96", "78.7305, 206.63, 11.4324, 0.37", "79.0482, 207.97, 12.1096, 0.29", "79.3558, 209.613, 12.9709, 0.37", "79.5731, 211.115, 13.7603, 0.66", "79.6844, 212.011, 14.212, 0.44", "79.8877, 213.653, 15.0037, 0.88", "80.0194, 214.662, 15.459, 1.11", "80.2569, 216.561, 16.2311, 0.22", "80.3721, 217.486, 16.4784, 0.22", "80.4797, 218.421, 16.6383, 0.15", "80.5685, 219.494, 16.7493, 0.15", "80.6199, 220.275, 16.7826, 0.15", "80.6836, 221.529, 16.8465, 0.37", "80.7604, 222.788, 16.9192, 0.37", "80.8025, 223.563, 16.9752, 0.22", "80.8691, 224.709, 17.0657, 0.44", "80.912, 225.328, 17.1112, 0.44", "80.9982, 226.207, 17.1647, 0.44", "81.1148, 226.974, 17.1749, 0.66", "81.2972, 227.821, 17.2045, 0.37", "81.5708, 228.778, 17.2472, 0.37", "81.9493, 229.795, 17.2975, 0.22", "82.1357, 230.236, 17.3139, 0.22", "82.6341, 231.372, 17.3431, 0.22", "83.304, 232.845, 17.3108, 0.52", "83.6967, 233.7, 17.2581, 0.96", "83.9776, 234.329, 17.1962, 0.96", "84.516, 235.58, 17.0329, 0.22", "84.9135, 236.588, 16.8611, 0.29", "85.3582, 237.845, 16.5624, 0.29", "85.5917, 238.58, 16.3297, 0.81", "85.7849, 239.226, 16.1118, 0.52", "86.0785, 240.276, 15.7234, 0.37", "86.2703, 240.996, 15.368, 0.37", "86.4979, 241.913, 14.8578, 0.74", "86.6606, 242.608, 14.4639, 0.74", "86.8689, 243.468, 13.9425, 0.29", "87.0713, 244.315, 13.4199, 0.37", "87.512, 246.196, 12.2929, 0.37", "87.7362, 247.107, 11.7498, 0.52", "87.9338, 247.818, 11.3598, 0.52", "88.1469, 248.374, 11.0604, 0.52", "88.5397, 249.174, 10.7313, 0.59", "88.9918, 249.967, 10.5094, 0.22", "89.8094, 251.258, 10.3629, 0.44", "90.5614, 252.303, 10.3225, 0.52", "91.8445, 253.936, 10.4563, 0.29", "93.0766, 255.357, 10.8361, 0.44", "93.8269, 256.169, 11.2525, 0.44", "94.7692, 257.198, 12.0874, 0.44", "95.37, 257.9, 12.7991, 0.44", "96.02, 258.77, 13.7964, 0.44", "96.7039, 259.833, 15.0926, 0.22", "97.2609, 260.806, 16.2708, 0.74", "97.8143, 261.965, 17.6038, 0.74", "98.1183, 262.808, 18.4475, 0.59", "98.4354, 264.026, 19.5115, 0.22", "98.5379, 264.54, 19.8804, 0.15", "98.6702, 265.544, 20.4368, 0.29", "98.7759, 266.724, 20.9326, 0.29", "98.8371, 267.898, 21.3025, 0.29", "98.848, 268.582, 21.5008, 0.52", "98.8474, 269.346, 21.6766, 0.88", "98.8137, 270.665, 21.939, 0.52", "98.7855, 271.55, 21.9965, 0.52", "98.7427, 272.484, 21.9414, 0.22", "98.6603, 273.514, 21.8389, 0.22", "98.5959, 274.201, 21.7624, 0.52", "98.5405, 274.747, 21.6924, 0.81", "98.319, 276.919, 21.3674, 0.22", "98.188, 277.98, 21.1956, 0.22", "97.9201, 279.88, 20.8774, 0.22", "97.8669, 280.257, 20.794, 0.37", "97.7757, 280.966, 20.6388, 0.96", "97.7457, 281.248, 20.5835, 0.96", "97.6486, 282.427, 20.4015, 0.22", "97.6364, 282.746, 20.3463, 0.22", "97.6444, 283.933, 20.1112, 0.37", "97.6704, 284.696, 20.0293, 0.88", "97.7764, 286.256, 19.9692, 0.22", "97.8543, 286.959, 19.9813, 0.37", "98.0671, 288.434, 20.1044, 0.66", "98.2318, 289.586, 20.3024, 0.22", "98.4131, 290.899, 20.637, 0.66", "98.5038, 291.592, 20.8548, 0.66", "98.6305, 292.647, 21.2911, 0.44", "98.6746, 293.189, 21.5728, 0.59", "98.7369, 294.407, 22.3248, 0.15", "98.7399, 294.907, 22.7092, 0.37", "98.7288, 295.345, 23.0855, 0.37", "98.67, 296.3, 23.9755, 0.15", "98.6122, 297.016, 24.6698, 0.15", "98.6048, 297.41, 25.008, 0.29", "98.6497, 298.226, 25.6395, 0.29", "98.7656, 299.357, 26.3911, 0.22", "98.8905, 300.327, 26.8913, 0.66", "98.9193, 300.554, 26.9807, 0.66", "99.0114, 301.98, 27.5256, 0.15", "99.0037, 303.085, 27.943, 0.15", "98.9126, 303.947, 28.2972, 0.37", "98.8103, 304.526, 28.6025, 0.37", "98.6072, 305.484, 29.1119, 0.22", "98.2445, 307.0, 29.8862, 0.22", "98.0622, 307.764, 30.2534, 0.37", "97.6253, 309.807, 31.0801, 0.15", "97.2752, 311.689, 31.6672, 0.15", "96.9461, 313.991, 32.1811, 0.15", "96.8293, 315.256, 32.3479, 0.15", "96.7851, 317.084, 32.4381, 0.15", "96.9149, 318.56, 32.4341, 0.15", "97.436, 320.712, 32.2722, 0.15", "97.8799, 321.764, 32.1196, 0.15", "98.4019, 322.571, 31.9889, 0.15", "99.1445, 323.402, 31.8469, 0.37", "101.029, 324.972, 31.5737, 0.15", "102.143, 325.699, 31.4713, 0.15", "103.485, 326.422, 31.4595, 0.15", "103.981, 326.672, 31.4712, 0.59", "104.971, 327.161, 31.5685, 0.29", "105.729, 327.559, 31.7261, 0.15", "106.122, 327.813, 31.8684, 0.29", "107.038, 328.545, 32.3175, 0.88", "107.58, 329.113, 32.7282, 0.22", "108.273, 330.142, 33.5191, 0.22", "108.514, 330.69, 33.9996, 0.22", "108.844, 331.724, 35.0036, 0.29", "109.009, 332.447, 35.7542, 0.15", "109.237, 333.917, 37.3413, 0.66", "109.366, 335.326, 38.8965, 0.37", "109.404, 336.9, 40.6787, 0.15", "109.37, 337.951, 41.8292, 0.15", "109.28, 338.868, 42.7619, 0.15", "109.222, 339.277, 43.1031, 0.15", "109.092, 340.097, 43.569, 0.52", "108.918, 341.297, 43.9156, 0.52", "108.644, 343.435, 44.0723, 0.15", "108.45, 345.22, 44.0045, 0.15", "108.358, 346.783, 43.8194, 0.15", "108.32, 349.026, 43.4484, 0.15", "108.399, 351.854, 42.8687, 0.15", "108.562, 353.813, 42.3942, 0.15", "108.7, 354.782, 42.1368, 0.22", "109.063, 356.693, 41.5946, 0.07", "109.201, 357.315, 41.4113, 0.07", "109.502, 358.554, 41.0177, 0.22", "109.957, 360.388, 40.4873, 0.07", "110.131, 361.038, 40.2606, 0.07", "110.267, 361.523, 40.0619, 0.22", "110.473, 362.183, 39.7549, 0.59", "111.107, 363.822, 38.8555, 0.07", "111.621, 364.887, 38.1972, 0.07", "111.864, 365.313, 37.9183, 0.29", "112.18, 365.823, 37.5773, 0.29", "112.85, 366.901, 36.8742, 0.07", "113.571, 368.157, 36.148, 0.07", "113.856, 368.75, 35.8634, 0.07", "114.005, 369.17, 35.6614, 0.29", "114.128, 369.736, 35.4323, 0.29", "114.359, 371.325, 34.8499, 0.15", "114.417, 372.771, 34.3658, 0.15", "114.366, 373.783, 34.0741, 0.29", "114.195, 375.512, 33.5672, 0.22", "113.956, 377.332, 33.0497, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "53.2258, -38.108, 33.954, 0.88", "53.6865, -36.9344, 33.5777, 0.88", "53.9782, -36.1062, 33.3936, 0.74", "54.363, -34.9057, 33.1761, 0.81", "54.763, -33.5603, 32.9589, 0.88", "55.1152, -32.3103, 32.7688, 1.4", "55.4412, -31.0889, 32.6356, 0.96", "55.7589, -29.5351, 32.5614, 0.88", "55.909, -28.6221, 32.555, 0.81", "55.9619, -28.0534, 32.5192, 0.81", "55.9588, -27.2124, 32.4004, 0.81", "55.8135, -25.6783, 32.0539, 1.18", "55.6228, -24.5036, 31.7299, 1.18", "55.3647, -23.1687, 31.3058, 1.18", "54.8501, -20.1449, 30.4188, 0.96", "54.5742, -18.0185, 29.8345, 0.59", "54.4788, -16.5755, 29.5027, 0.59", "54.4966, -15.3394, 29.2976, 0.74", "54.6343, -14.0538, 29.2123, 1.11", "55.0356, -11.9908, 29.3573, 1.4", "55.4992, -10.3417, 29.6515, 1.4", "56.1049, -8.4426, 30.0464, 1.18", "56.5402, -7.04143, 30.3114, 1.47", "56.8092, -6.00539, 30.4275, 1.11", "57.1073, -4.14302, 30.3842, 0.74", "57.1619, -3.00979, 30.1539, 1.03", "57.116, -2.02165, 29.7959, 1.11", "56.9033, -0.58046, 29.0249, 0.88", "56.5746, 0.796073, 28.1015, 0.88", "56.1826, 1.99681, 27.2028, 0.74", "55.8646, 2.77962, 26.5479, 0.66", "55.4492, 3.72304, 25.7692, 0.59", "54.998, 4.79399, 24.9001, 0.81", "54.5734, 5.92141, 24.0986, 0.88", "54.1064, 7.42854, 23.1782, 0.81", "53.7838, 8.70973, 22.4766, 0.81", "53.5515, 10.0683, 21.7815, 0.81", "53.4467, 11.5669, 21.0627, 0.66", "53.4824, 12.8919, 20.4783, 0.88", "53.5922, 14.0587, 19.9676, 1.18", "53.6972, 14.8187, 19.6348, 1.18", "53.9543, 16.3507, 18.9728, 0.81", "54.2781, 17.9842, 18.2508, 0.96", "54.5356, 19.3152, 17.6281, 0.96", "54.754, 20.4578, 17.0217, 1.11", "54.9389, 21.3722, 16.5195, 1.11", "55.1491, 22.3433, 15.9912, 0.88", "55.4611, 23.6224, 15.3695, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "53.2258, -38.108, 33.954, 0.88", "55.1103, -40.4408, 36.8546, 0.88", "55.7733, -41.2157, 37.6931, 0.66", "56.8074, -42.4744, 39.0352, 0.74", "57.1787, -42.9941, 39.5797, 1.03", "57.4993, -43.5394, 40.1009, 0.74", "57.9136, -44.3878, 40.8681, 0.96", "58.4722, -46.0109, 42.0566, 1.03", "58.932, -47.8396, 43.4275, 0.74", "59.2584, -49.5219, 44.6847, 1.03", "59.4825, -50.9276, 45.7901, 0.88", "59.6777, -52.3446, 46.977, 0.81", "59.7844, -53.431, 47.9019, 0.66", "59.8807, -54.8152, 49.044, 0.66", "60.0171, -56.4597, 50.3075, 0.88", "60.2404, -58.2341, 51.6595, 1.11", "60.5704, -60.1051, 53.1013, 0.96", "60.9595, -61.9161, 54.4279, 0.96", "61.2724, -63.1499, 55.2657, 0.96", "61.8203, -65.0661, 56.4787, 1.03", "62.3703, -66.943, 57.5899, 0.81", "62.7357, -68.0816, 58.2072, 0.81", "63.0942, -69.0624, 58.683, 0.66", "63.6681, -70.2718, 59.2756, 0.88", "64.5839, -71.8885, 60.1244, 0.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "10.6414, -53.196, 14.6956, 0.29", "10.4698, -54.0422, 15.3338, 0.29", "10.3048, -55.0383, 16.0322, 0.29", "10.2292, -55.6987, 16.4986, 0.81", "10.1441, -56.7772, 17.2405, 0.59", "10.1074, -57.8981, 18.0375, 0.44", "10.1292, -58.8251, 18.7279, 0.22", "10.2064, -59.5153, 19.2441, 0.22", "10.3855, -60.3921, 19.9127, 0.22", "10.525, -60.9275, 20.3667, 0.74", "10.8025, -61.8963, 21.2552, 0.74", "11.0636, -62.7723, 22.0972, 0.96", "11.1925, -63.2749, 22.5675, 1.11", "11.4268, -64.4176, 23.595, 0.37", "11.5865, -65.4344, 24.3966, 0.22", "11.664, -66.0723, 24.8194, 0.66", "11.7151, -66.8262, 25.1939, 0.66", "11.7431, -67.5439, 25.464, 0.66", "11.7706, -68.2847, 25.6984, 0.29", "11.8227, -69.2284, 25.9292, 0.22", "11.9429, -70.3563, 26.1923, 0.66", "12.1154, -71.4728, 26.5323, 0.88", "12.2577, -72.2719, 26.8387, 0.37", "12.4563, -73.3773, 27.3362, 0.22", "12.5715, -74.0358, 27.6927, 0.59", "12.7032, -74.8484, 28.1939, 0.74", "12.9334, -76.2754, 29.1478, 0.15", "13.0166, -76.8152, 29.516, 0.15", "13.1041, -77.5278, 29.9743, 0.37", "13.223, -78.8668, 30.7313, 0.22", "13.2568, -79.2987, 30.9409, 0.66", "13.3011, -79.8279, 31.1603, 1.11", "13.3776, -80.6187, 31.433, 0.37", "13.5268, -81.7411, 31.7936, 0.15", "13.6533, -82.4644, 32.044, 0.44", "13.9208, -83.7509, 32.5393, 0.15", "14.1601, -84.8009, 32.9979, 0.15", "14.3083, -85.4147, 33.3078, 0.81", "14.428, -85.9093, 33.5745, 1.18", "14.7886, -87.5179, 34.5244, 0.15", "14.9608, -88.4187, 35.0771, 0.15", "15.0245, -88.8825, 35.3787, 0.81", "15.109, -89.6112, 35.9243, 0.81", "15.1847, -90.3152, 36.5105, 0.22", "15.2916, -91.3043, 37.4196, 0.15", "15.3246, -91.643, 37.7396, 0.22", "15.4205, -92.5041, 38.5837, 0.15", "15.6144, -93.7479, 39.9365, 0.15", "15.6871, -94.1465, 40.3903, 0.59", "15.8837, -95.1464, 41.5669, 0.15", "15.9706, -95.6103, 42.0872, 0.15", "16.0743, -96.222, 42.7148, 0.81", "16.2841, -97.6382, 43.9241, 0.15", "16.3684, -98.334, 44.4081, 0.15", "16.4181, -98.8118, 44.6996, 0.52", "16.4732, -99.4943, 45.0397, 0.66", "16.5112, -100.34, 45.4001, 0.29", "16.4979, -101.371, 45.7393, 0.15", "16.4582, -101.882, 45.8632, 0.15", "16.397, -102.424, 45.9958, 0.59", "16.2863, -103.103, 46.133, 0.88", "16.1033, -103.942, 46.2752, 0.29", "15.9022, -104.661, 46.3771, 0.22", "15.593, -105.667, 46.4947, 0.07", "15.3939, -106.337, 46.528, 0.07", "15.0675, -107.507, 46.5366, 0.07", "15.0029, -107.78, 46.5295, 0.29", "14.8721, -108.556, 46.5075, 0.66", "14.7538, -109.543, 46.4917, 0.15", "14.6501, -110.668, 46.5145, 0.15", "14.5816, -111.442, 46.5365, 0.29", "14.4981, -112.366, 46.5945, 0.15", "14.4103, -113.171, 46.6437, 0.37", "14.3327, -113.722, 46.6622, 0.37", "14.1465, -114.764, 46.6871, 0.22", "13.9677, -115.641, 46.7173, 0.44", "13.7532, -116.535, 46.6799, 0.96", "13.5919, -117.142, 46.6077, 0.22", "13.2504, -118.399, 46.3853, 0.15", "13.184, -118.66, 46.3348, 0.15", "12.9364, -119.718, 46.0827, 0.29", "12.6637, -120.934, 45.7442, 0.15", "12.5253, -121.582, 45.5285, 0.15", "12.4679, -121.852, 45.436, 0.37", "12.3193, -122.567, 45.2085, 0.88", "12.034, -124.073, 44.7716, 0.15", "11.8964, -124.848, 44.5843, 0.15", "11.771, -125.607, 44.4705, 0.15", "11.6476, -126.298, 44.4174, 0.66", "11.5064, -127.061, 44.4199, 0.22", "11.3672, -127.787, 44.481, 0.22", "11.2396, -128.43, 44.5985, 0.15", "11.1442, -128.895, 44.7008, 0.15", "10.9512, -129.77, 44.8951, 0.66", "10.6137, -131.165, 45.2127, 0.15", "10.4875, -131.653, 45.3265, 0.15", "10.3777, -132.067, 45.4242, 0.22", "10.2298, -132.66, 45.5615, 0.15", "10.0854, -133.263, 45.7004, 0.96", "9.86105, -134.2, 45.9192, 0.44", "9.6255, -135.193, 46.1557, 0.15", "9.48535, -135.792, 46.2756, 0.15", "9.34908, -136.329, 46.3366, 0.15", "9.17911, -136.941, 46.3649, 0.15", "8.95996, -137.653, 46.3677, 0.44", "8.66899, -138.513, 46.3531, 0.44", "8.26782, -139.645, 46.3826, 0.15", "7.769, -141.087, 46.482, 0.15", "7.54226, -141.769, 46.5515, 0.44", "7.23827, -142.744, 46.6836, 0.22", "6.97183, -143.792, 46.9102, 0.22", "6.64544, -145.335, 47.373, 0.07", "6.47592, -146.361, 47.778, 0.07", "6.42776, -146.736, 47.9497, 0.29", "6.35058, -147.424, 48.274, 0.96", "6.1872, -149.266, 49.205, 0.15", "6.12557, -149.952, 49.5691, 0.15", "6.03553, -150.567, 49.864, 0.15", "5.88517, -151.403, 50.2818, 0.37", "5.7896, -151.869, 50.522, 0.37", "5.5231, -152.949, 51.0799, 0.15", "5.33932, -153.556, 51.4058, 0.74", "4.92684, -154.884, 52.3166, 0.15", "4.62592, -155.743, 53.0325, 0.15", "4.45112, -156.186, 53.5201, 0.59", "4.27064, -156.599, 54.0926, 0.22", "3.94261, -157.255, 55.158, 0.15", "3.55272, -157.956, 56.5248, 0.15", "3.35815, -158.258, 57.233, 0.52", "2.90761, -158.791, 58.6514, 0.15", "2.61278, -159.074, 59.6258, 0.15", "2.49411, -159.175, 60.0413, 0.44", "2.27045, -159.34, 60.8049, 0.81", "2.05669, -159.504, 61.4866, 0.81", "1.57063, -159.941, 63.142, 0.15", "1.07498, -160.446, 64.7994, 0.15", "0.928045, -160.638, 65.3166, 0.15", "0.823526, -160.828, 65.7698, 0.66", "0.626296, -161.345, 66.7624, 0.22", "0.465995, -162.084, 68.0585, 0.15", "0.451474, -162.298, 68.4412, 0.22", "0.450577, -162.899, 69.5745, 0.15", "0.465316, -163.38, 70.5603, 0.44", "0.48525, -163.749, 71.3431, 0.88", "0.489675, -164.853, 73.8267, 0.15", "0.387365, -165.704, 75.8084, 0.15", "0.285242, -166.155, 76.8865, 0.15", "0.162644, -166.482, 77.6786, 0.37", "0.0175336, -166.756, 78.3317, 0.37", "-0.403757, -167.382, 79.8626, 0.07", "-0.798237, -167.845, 80.8424, 0.07", "-1.03116, -168.101, 81.3259, 0.15", "-1.56678, -168.668, 82.3965, 0.07", "-1.86844, -168.982, 83.0023, 0.29", "-2.27923, -169.411, 83.8363, 0.29", "-2.76275, -169.985, 84.8681, 0.15", "-2.98832, -170.282, 85.3791, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "10.6414, -53.196, 14.6956, 0.22", "11.9018, -54.8313, 9.63236, 0.22", "12.2723, -55.3086, 8.36411, 0.22", "12.5896, -55.759, 7.28611, 0.52", "12.8426, -56.1632, 6.38383, 0.88", "13.221, -56.8753, 4.90494, 0.96", "13.5561, -57.6697, 3.3594, 0.74", "13.8038, -58.7458, 1.67049, 0.29", "13.8748, -59.5533, 0.531837, 0.37", "13.8686, -60.193, -0.272116, 0.37", "13.8225, -60.7855, -0.97403, 0.74", "13.7423, -61.5733, -1.89808, 0.44", "13.6422, -62.9549, -3.62712, 0.44", "13.6728, -63.4361, -4.34037, 0.44", "13.8356, -64.0355, -5.34365, 0.22", "14.1706, -64.8276, -6.72625, 0.22", "14.4827, -65.4713, -7.86458, 0.44", "14.7627, -66.1039, -8.9324, 0.59", "15.1202, -67.3491, -10.8986, 0.29", "15.1759, -67.9941, -11.8833, 0.22", "15.0839, -68.6125, -12.7382, 0.29", "14.8279, -69.4064, -13.6895, 0.44", "14.3539, -70.4469, -14.8259, 0.74", "13.6775, -71.6304, -16.0238, 0.96", "13.3427, -72.1413, -16.517, 0.96", "12.6493, -73.1692, -17.5273, 0.37", "11.9733, -74.229, -18.6372, 0.44", "11.5754, -74.9835, -19.4847, 0.37", "11.3687, -75.5525, -20.1526, 0.22", "11.2868, -76.152, -20.9073, 0.22", "11.3382, -76.5158, -21.463, 0.29", "11.5764, -77.007, -22.4431, 0.44", "11.8947, -77.4339, -23.5091, 0.44", "12.1465, -77.735, -24.3288, 0.66", "12.5794, -78.2771, -25.8267, 0.81", "13.0365, -78.9803, -27.6884, 0.96", "13.345, -79.6621, -29.327, 0.96", "13.5327, -80.2279, -30.5706, 0.96", "13.6286, -80.5758, -31.3242, 0.66", "13.7751, -81.1356, -32.5178, 0.74", "13.9309, -81.7028, -33.6513, 0.74", "14.3052, -82.8039, -35.7636, 0.59", "14.748, -83.9036, -37.8846, 0.29", "15.0911, -84.6798, -39.509, 0.29", "15.3593, -85.2017, -40.6672, 0.29", "15.6214, -85.6522, -41.7278, 0.37", "16.0496, -86.3161, -43.3903, 0.52", "16.4347, -86.8973, -44.8971, 0.44", "17.0029, -87.8955, -47.3731, 0.44", "19.6425, -94.2939, -55.9477, 0.44", "21.6926, -101.879, -63.6733, 0.44", "24.1089, -108.396, -72.2246, 0.44", "26.1659, -114.851, -80.9159, 0.44", "26.1794, -120.044, -90.635, 0.44", "27.7734, -123.251, -101.056, 0.44", "29.3895, -126.762, -111.376, 0.44", "32.4042, -131.31, -120.95, 0.44", "35.3884, -134.427, -131.089, 0.44", "37.2067, -135.641, -141.89, 0.44", "40.1471, -135.715, -152.51, 0.44", "41.8532, -137.179, -163.297, 0.44", "43.6524, -139.848, -173.837, 0.44", "46.5523, -144.08, -183.589, 0.44", "49.9829, -148.133, -193.245, 0.44", "53.4074, -153.573, -202.195, 0.44", "56.1393, -159.367, -211.162, 0.44", "58.4488, -165.397, -220.091, 0.44", "61.9845, -170.178, -229.369, 0.44", "63.3574, -174.676, -239.334, 0.44", "65.9222, -180.375, -248.411, 0.44", "67.7938, -187.99, -256.152, 0.44", "71.1283, -195.709, -263.275, 0.44", "75.5531, -204.153, -268.802, 0.44", "79.258, -212.716, -274.665, 0.44", "81.6652, -222.246, -279.647, 0.44", "85.6964, -229.826, -286.555, 0.44", "89.4386, -238.146, -292.737, 0.44", "93.8517, -246.893, -297.781, 0.44", "98.7602, -255.732, -302.164, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "5.01327, -150.514, 84.6199, 0.15", "5.16668, -151.955, 85.3896, 0.15", "5.26718, -152.987, 86.0329, 0.22", "5.33238, -153.725, 86.5109, 0.22", "5.43059, -154.839, 87.2529, 0.37", "5.61797, -156.286, 88.3524, 0.15", "6.04349, -158.663, 90.3021, 0.15", "6.22042, -159.365, 91.032, 0.15", "6.4209, -160.028, 91.8213, 0.29", "7.16027, -162.105, 94.5821, 0.15", "7.77563, -163.464, 96.6833, 0.15", "8.12494, -164.051, 97.737, 0.15", "9.25508, -165.502, 100.664, 0.15", "9.77939, -166.007, 101.986, 0.15", "10.4013, -166.485, 103.561, 0.22", "11.2882, -167.067, 105.796, 0.44", "11.8693, -167.441, 107.249, 0.44", "12.9588, -168.154, 109.894, 0.15", "15.2767, -169.62, 115.126, 0.22", "16.7139, -170.505, 118.245, 0.22", "17.1931, -170.809, 119.21, 0.22", "18.0368, -171.395, 120.764, 0.22", "18.8786, -172.018, 122.076, 0.22", "20.1165, -172.982, 123.569, 0.22", "20.9647, -173.686, 124.335, 0.22", "22.1246, -174.739, 125.276, 0.07", "23.8574, -176.38, 126.752, 0.07", "25.8768, -178.346, 128.458, 0.07", "27.43, -179.875, 129.796, 0.07", "29.6235, -182.178, 131.712, 0.07", "31.4741, -184.211, 133.461, 0.07", "33.1773, -186.202, 135.444, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "5.01327, -150.514, 84.6199, 0.22", "4.87476, -152.535, 83.7993, 0.22", "4.74475, -154.236, 83.547, 0.15", "4.63966, -155.514, 83.5945, 0.15", "4.53269, -156.739, 83.7643, 0.15", "4.41594, -157.941, 83.9851, 0.15", "4.17777, -160.596, 84.5098, 0.15", "4.0826, -161.803, 84.8868, 0.15", "4.01646, -162.567, 85.1659, 0.37", "3.90967, -163.582, 85.4827, 0.59", "3.71425, -165.315, 85.8968, 0.22", "3.53021, -166.776, 86.1226, 0.22", "3.3655, -167.948, 86.1419, 0.15", "3.1932, -168.977, 86.1033, 0.15", "2.86768, -170.58, 86.021, 0.15", "2.69728, -171.304, 85.939, 0.15", "2.50574, -172.011, 85.7821, 0.29", "2.3349, -172.584, 85.6154, 0.29", "2.05095, -173.599, 85.2701, 0.44", "1.84932, -174.415, 85.0641, 0.44", "1.5149, -175.964, 84.8837, 0.22", "1.24599, -177.404, 84.8468, 0.29", "1.02831, -178.88, 84.9384, 0.07", "0.899148, -180.067, 85.1129, 0.07", "0.744844, -182.567, 85.5778, 0.22", "0.708351, -183.682, 85.9197, 0.22", "0.698992, -184.388, 86.2395, 0.22", "0.712167, -184.933, 86.5546, 0.44", "0.739562, -185.512, 86.9171, 0.66", "0.817558, -186.996, 87.8547, 0.22", "0.930321, -188.695, 88.8363, 0.22", "0.990942, -189.508, 89.3025, 0.07", "1.10011, -190.546, 89.8359, 0.07", "1.22864, -191.423, 90.2293, 0.15", "1.36175, -192.116, 90.4925, 0.15", "1.61595, -193.202, 90.8252, 0.37", "1.93357, -194.339, 90.9875, 0.66", "2.44538, -196.022, 91.079, 0.15", "2.81432, -197.194, 91.0596, 0.22", "3.16354, -198.286, 91.0031, 0.22", "3.46107, -199.247, 90.9197, 0.15", "3.65485, -199.926, 90.8444, 0.15", "3.80464, -200.592, 90.7897, 0.59", "3.90087, -201.336, 90.7687, 0.59", "3.94899, -202.823, 90.7617, 0.22", "3.93016, -203.272, 90.7498, 0.22", "3.87145, -204.011, 90.7247, 0.44", "3.81052, -205.066, 90.6979, 0.66", "3.78212, -206.235, 90.6622, 0.29", "3.80024, -207.187, 90.6334, 0.66", "3.90346, -208.386, 90.5999, 0.52", "4.14887, -210.101, 90.5443, 0.29", "4.45172, -211.624, 90.4288, 0.22", "4.73324, -212.733, 90.2923, 0.29", "5.05024, -213.778, 90.1282, 0.37", "5.46573, -215.005, 89.952, 0.22", "5.68789, -215.635, 89.8792, 0.22", "6.24123, -217.205, 89.6891, 0.29", "6.57842, -218.261, 89.57, 0.52", "6.76529, -218.906, 89.5151, 0.81", "7.10817, -220.221, 89.4548, 0.29", "7.37131, -221.302, 89.5449, 0.22", "7.47782, -221.734, 89.6399, 0.22", "7.60149, -222.248, 89.8207, 0.44", "7.76343, -222.992, 90.1114, 0.74", "7.94029, -223.773, 90.393, 0.29", "8.32756, -225.281, 90.8618, 0.15", "8.43196, -225.647, 90.9685, 0.15", "8.63753, -226.28, 91.1313, 0.15", "8.97366, -227.194, 91.3358, 0.44", "9.52245, -228.585, 91.6508, 0.22", "9.89116, -229.536, 91.8515, 0.22", "10.3557, -230.761, 92.0682, 0.52", "10.8824, -232.175, 92.2683, 0.15", "11.2291, -233.171, 92.3398, 0.29", "11.6032, -234.388, 92.3003, 0.59", "11.8505, -235.412, 92.1317, 0.74", "11.9229, -235.802, 92.0231, 0.74", "12.0973, -237.336, 91.4501, 0.22", "12.1326, -238.951, 90.7325, 0.15", "12.0911, -240.091, 90.1429, 0.15", "12.0141, -241.075, 89.6015, 0.29", "11.926, -241.854, 89.189, 0.74", "11.8236, -242.683, 88.8095, 0.66", "11.6485, -244.21, 88.2485, 0.15", "11.524, -245.59, 87.7698, 0.15", "11.4724, -246.597, 87.4383, 0.22", "11.466, -247.748, 87.0516, 0.52", "11.5438, -249.128, 86.5741, 0.29", "11.7588, -250.714, 86.0664, 0.15", "12.0361, -251.938, 85.6936, 0.15", "12.158, -252.346, 85.5705, 0.15", "12.3773, -252.98, 85.3626, 0.81", "12.648, -253.824, 85.0887, 0.29", "13.0311, -255.296, 84.6082, 0.15", "13.2415, -256.409, 84.2308, 0.59", "13.3331, -257.211, 83.9599, 0.59", "13.3578, -257.9, 83.6754, 0.59", "13.3015, -259.107, 83.0454, 1.18", "13.1795, -260.072, 82.3522, 0.74", "12.9265, -261.519, 81.0872, 0.22", "12.8473, -261.959, 80.6479, 0.29", "12.699, -262.894, 79.5786, 0.37", "12.5836, -263.833, 78.2931, 0.37", "12.4746, -265.023, 76.3227, 0.37", "12.4296, -265.395, 75.6195, 0.37", "12.3761, -265.841, 74.6956, 0.37", "12.3721, -265.975, 74.4068, 0.37", "12.4009, -266.219, 73.8713, 0.37", "12.4849, -266.547, 73.2238, 0.37", "12.6164, -267.034, 72.3999, 0.44", "12.7116, -267.52, 71.6642, 0.52", "12.8412, -268.463, 70.5317, 0.52", "12.9229, -269.333, 69.6187, 0.37", "12.9644, -269.775, 69.2184, 0.22", "13.0067, -270.266, 68.8302, 0.22", "13.0333, -270.968, 68.3649, 0.29", "12.9895, -271.971, 67.8689, 0.81", "12.8536, -273.433, 67.4099, 0.15", "12.7674, -274.104, 67.2711, 0.15", "12.6924, -274.713, 67.1517, 0.22", "12.6184, -275.508, 67.0145, 0.29", "12.5761, -276.085, 66.9198, 0.81", "12.4715, -277.473, 66.6486, 0.22", "12.391, -278.579, 66.3943, 0.22", "12.3292, -279.523, 66.076, 0.22", "12.3126, -280.306, 65.7056, 0.52", "12.3206, -280.526, 65.5651, 0.52", "12.4152, -281.665, 64.6218, 0.22", "12.4946, -282.405, 63.8882, 0.37", "12.591, -283.072, 63.1452, 0.66", "12.7333, -283.921, 62.1565, 0.22", "12.8765, -284.723, 61.1923, 0.22", "13.0272, -285.451, 60.3546, 0.22", "13.119, -285.81, 59.9703, 0.37", "13.4123, -286.85, 58.9617, 1.11", "13.747, -288.007, 57.9831, 0.44", "14.0615, -289.05, 57.1791, 0.66", "14.3095, -289.769, 56.6586, 0.59", "14.5408, -290.333, 56.2412, 0.52", "14.8284, -290.928, 55.7607, 0.29", "15.3213, -291.857, 54.9303, 0.15", "15.8608, -292.87, 53.9836, 0.15", "16.0783, -293.31, 53.5523, 0.52", "16.4757, -294.318, 52.5614, 0.74", "16.6428, -294.845, 52.064, 0.74", "16.9964, -296.152, 50.9162, 0.37", "17.2316, -297.298, 50.0741, 0.37", "17.399, -298.415, 49.4384, 0.59", "17.5106, -299.551, 48.9442, 0.88", "17.5479, -300.146, 48.7648, 0.88", "17.6048, -301.367, 48.4938, 0.37", "17.6774, -302.603, 48.3178, 0.66", "17.8035, -303.709, 48.1492, 0.66", "18.009, -304.902, 47.9765, 1.18", "18.2224, -305.801, 47.8406, 0.81", "18.7036, -307.477, 47.5695, 0.44", "19.1614, -308.815, 47.35, 0.37", "19.9443, -310.647, 47.0064, 0.29", "20.1015, -310.958, 46.9321, 0.52", "20.4271, -311.513, 46.7788, 0.96", "20.9953, -312.395, 46.4625, 0.29", "21.3453, -312.888, 46.2654, 0.29", "21.7317, -313.425, 46.0301, 0.59", "22.3998, -314.403, 45.7345, 0.59", "22.7657, -314.951, 45.606, 0.59", "23.7766, -316.508, 45.3357, 0.29", "24.4334, -317.548, 45.2397, 0.22", "24.7661, -318.119, 45.2565, 0.88", "25.6873, -319.915, 45.6207, 0.37", "25.9302, -320.472, 45.8236, 0.66", "26.0861, -320.9, 46.0604, 0.66", "26.4036, -321.906, 46.8176, 0.44", "26.589, -322.586, 47.4673, 0.44", "26.7849, -323.352, 48.4297, 0.44", "26.9254, -323.935, 49.3049, 0.81", "27.2342, -324.951, 51.0319, 0.22", "27.4093, -325.406, 51.8938, 0.37", "27.7764, -326.146, 53.4402, 0.37", "28.2859, -326.939, 55.151, 0.37", "28.5566, -327.265, 55.8556, 0.66", "29.055, -327.747, 56.988, 0.22", "29.373, -328.0, 57.5958, 0.22", "29.6618, -328.189, 58.161, 0.74", "29.9626, -328.335, 58.7553, 0.74", "30.5807, -328.504, 60.2196, 0.22", "31.0874, -328.524, 61.7792, 0.22", "31.3027, -328.488, 62.697, 0.37", "31.7745, -328.34, 65.2829, 0.37", "31.8771, -328.283, 66.1376, 0.74", "32.0272, -328.104, 68.3358, 0.74", "32.0776, -327.954, 70.0707, 0.52", "32.0932, -327.825, 72.0956, 0.52", "32.0885, -327.804, 72.8062, 0.52", "32.0629, -327.78, 74.9186, 0.52", "32.0434, -327.789, 76.0144, 0.52", "32.0133, -327.834, 77.9385, 0.52", "32.0022, -327.851, 78.5705, 0.52", "31.9676, -327.918, 83.1902, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-13.9188, 27.4935, -7.77388, 0.96", "-16.3598, 29.3882, -7.24132, 0.96", "-17.5209, 30.3397, -6.96639, 0.96", "-18.8093, 31.5337, -6.59603, 0.88", "-19.9802, 32.7261, -6.21628, 0.88", "-21.0964, 33.9851, -5.76492, 0.81", "-22.188, 35.3766, -5.20272, 0.66", "-22.8356, 36.4423, -4.64551, 1.03", "-23.4816, 37.7545, -3.7984, 1.18", "-23.6786, 38.2325, -3.41687, 1.33", "-24.1725, 39.522, -2.23025, 1.03", "-24.7349, 40.8885, -0.904035, 0.96", "-25.3655, 42.1639, 0.487259, 0.96", "-26.3368, 43.6382, 2.33407, 1.33", "-27.2142, 44.6387, 3.79742, 1.03", "-27.6655, 45.037, 4.52664, 1.03", "-28.8854, 45.8233, 6.45823, 0.74", "-29.5881, 46.1711, 7.61812, 0.96", "-30.1237, 46.4096, 8.5529, 1.55", "-30.9931, 46.8443, 10.2827, 1.25", "-31.81, 47.398, 12.4315, 1.03", "-32.2446, 47.8355, 14.0995, 0.74", "-32.4558, 48.1699, 15.2596, 0.74", "-32.6418, 48.5598, 16.5522, 1.11", "-32.8129, 48.9651, 17.8688, 1.11", "-33.1913, 49.8014, 20.4974, 0.96", "-33.5887, 50.6489, 22.9224, 1.18", "-33.8959, 51.3124, 24.6071, 1.55", "-34.1406, 51.8207, 25.7313, 1.55", "-34.4546, 52.42, 26.8326, 1.18", "-34.8379, 53.0756, 27.7099, 0.88", "-35.4182, 54.0934, 28.6913, 0.66", "-36.0191, 55.2671, 29.6868, 0.96", "-36.4044, 56.1754, 30.4471, 1.18", "-36.7477, 57.2458, 31.329, 1.18", "-37.0411, 58.6846, 32.5311, 1.11", "-37.2829, 60.6073, 34.176, 1.18", "-37.4174, 62.4421, 35.7772, 1.03", "-37.4635, 63.8633, 37.1056, 1.03", "-37.4396, 65.3329, 38.5945, 0.88", "-37.3462, 66.8525, 40.1703, 1.03", "-37.2251, 68.1209, 41.4982, 0.74", "-37.0839, 69.4293, 42.8202, 0.66", "-36.887, 71.0297, 44.3926, 0.59", "-36.6565, 72.8364, 46.2432, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-13.9188, 27.4935, -7.77388, 1.03", "-15.6759, 27.969, -10.6898, 1.03", "-17.541, 28.4189, -13.447, 1.03", "-19.2189, 28.7805, -15.6784, 1.18", "-21.2229, 29.163, -18.16, 1.18", "-22.6186, 29.4182, -19.8099, 1.18", "-24.1991, 29.7102, -21.6634, 1.03", "-25.6932, 29.9976, -23.2437, 0.96", "-26.7653, 30.2269, -24.2965, 1.18", "-27.958, 30.5035, -25.4401, 1.03", "-29.0693, 30.7717, -26.4953, 1.03", "-30.4903, 31.1374, -27.8285, 1.03", "-31.593, 31.4342, -28.8327, 1.18", "-33.3215, 31.9284, -30.247, 1.18", "-34.5265, 32.3057, -31.1372, 1.18", "-35.9457, 32.7845, -32.1265, 1.11", "-37.4357, 33.3015, -33.0771, 1.18", "-38.3585, 33.6481, -33.5987, 0.96", "-39.6727, 34.2285, -34.2743, 0.81", "-41.3031, 35.1101, -35.0575, 1.03", "-43.6875, 36.6196, -36.1389, 1.25", "-44.4405, 37.1511, -36.4707, 1.25", "-45.5705, 37.9806, -36.9363, 0.88", "-47.141, 39.1064, -37.5444, 0.88", "-48.933, 40.2974, -38.174, 1.11", "-50.4345, 41.1901, -38.5953, 1.11", "-52.3191, 42.2084, -39.0211, 0.96", "-53.891, 42.9802, -39.3704, 1.03", "-55.4078, 43.658, -39.7165, 1.03", "-56.9835, 44.2848, -40.0741, 0.96", "-58.446, 44.8287, -40.3772, 0.96", "-60.0176, 45.3865, -40.7273, 0.96", "-61.9906, 46.0445, -41.1459, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-15.1079, 93.7118, -45.8741, 1.18", "-16.0145, 96.433, -45.6391, 1.18", "-16.5184, 98.3145, -45.4645, 0.96", "-16.7539, 99.5852, -45.3846, 0.96", "-16.901, 100.759, -45.3701, 0.96", "-17.1071, 102.925, -45.4508, 0.96", "-17.3165, 105.05, -45.6355, 1.03", "-17.4118, 106.617, -45.8644, 1.11", "-17.4646, 108.509, -46.2775, 0.88", "-17.5399, 109.962, -46.6981, 0.88", "-17.7136, 111.434, -47.1841, 0.88", "-18.0177, 113.239, -47.82, 1.03", "-18.2723, 114.447, -48.2421, 1.03", "-18.9002, 116.877, -48.9976, 1.18", "-19.5977, 119.389, -49.6615, 0.88", "-20.4513, 122.467, -50.3358, 0.81", "-20.7487, 123.601, -50.5323, 0.96", "-21.038, 124.766, -50.7099, 0.96", "-21.6274, 127.094, -51.0705, 0.88", "-22.0557, 128.741, -51.3095, 0.88", "-22.5114, 130.572, -51.6214, 1.11", "-23.1952, 133.404, -52.1985, 1.25", "-23.643, 135.215, -52.6086, 1.03", "-24.1252, 137.191, -53.099, 1.03", "-24.4878, 138.732, -53.5039, 1.18", "-25.0826, 141.45, -54.3082, 0.96", "-25.4964, 143.655, -55.005, 1.11", "-25.7531, 145.523, -55.5858, 1.11", "-25.9208, 147.606, -56.1377, 1.18", "-25.946, 149.63, -56.5685, 0.74", "-25.8317, 151.646, -56.8896, 0.88", "-25.645, 153.096, -57.0104, 1.25", "-25.238, 155.085, -57.024, 1.33", "-24.686, 157.145, -56.8387, 0.96", "-24.129, 158.874, -56.5004, 0.74", "-23.5921, 160.377, -56.0773, 0.81", "-23.1449, 161.611, -55.5785, 0.81", "-22.6007, 163.155, -54.8464, 0.74", "-22.2072, 164.462, -54.1417, 1.25", "-21.7586, 166.22, -53.098, 1.4", "-21.5247, 167.583, -52.235, 1.4", "-21.2317, 170.329, -50.4537, 0.88", "-21.1999, 170.96, -50.0335, 0.88", "-21.1922, 172.625, -48.9239, 0.88", "-21.2173, 173.818, -48.1764, 0.88", "-21.295, 175.837, -47.0779, 0.96", "-21.3476, 177.09, -46.5322, 0.96", "-21.4264, 178.976, -45.926, 1.55", "-21.4655, 179.611, -45.7441, 1.55", "-21.587, 182.159, -45.1825, 1.18", "-21.715, 184.765, -44.7896, 1.25", "-21.8322, 186.862, -44.6713, 1.62", "-21.9136, 187.947, -44.7175, 1.62", "-22.193, 190.91, -45.0948, 0.96", "-22.4383, 193.208, -45.5744, 0.96", "-22.6159, 194.723, -46.027, 1.33", "-22.8774, 196.946, -46.8992, 1.11", "-23.0662, 199.106, -47.9618, 1.33", "-23.1538, 200.66, -48.8379, 1.33", "-23.186, 202.618, -50.1267, 1.47", "-23.1966, 203.832, -50.9525, 1.62", "-23.1725, 206.072, -52.5061, 1.03", "-23.1308, 207.992, -53.8122, 0.96", "-23.0852, 209.29, -54.6458, 0.88", "-22.9552, 211.348, -55.9396, 0.81", "-22.9114, 212.354, -56.5069, 1.18", "-22.8873, 215.282, -57.9788, 0.96", "-23.0058, 217.955, -59.1577, 0.96", "-23.262, 220.151, -59.929, 0.74", "-23.6631, 222.449, -60.5614, 0.59", "-24.3448, 225.393, -61.1309, 0.59", "-24.9464, 227.607, -61.4772, 0.52", "-25.4051, 229.042, -61.6295, 0.74", "-26.4403, 231.823, -61.8784, 1.03", "-27.0406, 233.217, -61.9818, 1.11", "-27.7878, 234.851, -62.0697, 0.74", "-28.8169, 237.15, -62.2119, 0.66", "-29.3535, 238.382, -62.307, 0.52", "-29.9256, 239.809, -62.466, 0.22", "-30.7748, 242.125, -62.9158, 0.15", "-31.0521, 242.862, -63.0635, 0.22", "-34.1626, 255.451, -66.5969, 0.22", "-34.588, 267.817, -71.8459, 0.22", "-35.9073, 280.589, -75.8188, 0.22", "-39.1932, 292.913, -80.0594, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-15.1079, 93.7118, -45.8741, 0.66", "-13.6014, 94.7721, -47.6538, 0.66", "-12.5846, 95.4877, -48.8549, 0.59", "-11.5631, 96.2067, -50.0616, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "55.4611, 23.6224, 15.3695, 0.88", "56.5857, 24.4539, 14.1396, 0.88", "57.5238, 25.1856, 12.9907, 0.59", "58.6133, 26.0133, 11.6553, 0.59", "59.4184, 26.5448, 10.7422, 0.59", "60.139, 26.9506, 9.93346, 0.59", "60.9001, 27.318, 9.05797, 0.81", "61.7263, 27.6078, 8.03479, 0.81", "62.3652, 27.7276, 7.26038, 0.81", "63.3594, 27.7713, 6.13959, 0.52", "64.55, 27.6936, 4.82454, 0.52", "65.4517, 27.556, 3.81758, 0.52", "66.2795, 27.4004, 2.90657, 0.52", "66.8742, 27.3116, 2.26871, 0.52", "67.7583, 27.2087, 1.25654, 0.44", "68.8536, 27.1193, -0.0645648, 0.59", "69.7962, 27.0491, -1.13361, 0.44", "70.3661, 26.9864, -1.78675, 0.66", "71.1891, 26.8558, -2.71267, 0.37", "72.2415, 26.5988, -3.90911, 0.37", "73.2629, 26.2381, -4.99465, 0.59", "74.0214, 25.898, -5.77767, 1.11", "75.3304, 25.2499, -7.19743, 1.11", "76.3373, 24.7461, -8.33357, 0.66", "77.4369, 24.2617, -9.59665, 0.52", "78.2377, 23.9988, -10.5628, 0.29", "79.0952, 23.8654, -11.7182, 0.29", "79.8742, 23.9226, -13.0524, 0.59", "80.2661, 24.075, -13.8757, 0.59", "80.8325, 24.472, -15.2849, 0.37", "81.3403, 24.9352, -16.6755, 0.37", "81.6782, 25.2621, -17.6548, 0.59", "82.4041, 25.8952, -19.6679, 1.03", "82.9331, 26.2687, -21.0299, 0.88", "83.4057, 26.5422, -22.1478, 0.44", "84.1328, 26.8755, -23.8372, 0.44", "84.5362, 27.0226, -24.6725, 0.44", "84.9001, 27.102, -25.3614, 0.66", "85.2354, 27.1302, -25.8967, 0.66", "85.7773, 27.1039, -26.7441, 0.44", "87.1092, 26.9059, -28.7486, 0.44", "87.4966, 26.8156, -29.2934, 0.81", "88.0972, 26.6118, -30.1785, 1.03", "88.8601, 26.2113, -31.5188, 0.66", "89.3679, 25.8137, -32.6718, 0.66", "89.8385, 25.2134, -34.3128, 0.52", "90.084, 24.5773, -35.9875, 0.37", "90.1206, 23.9341, -37.6662, 0.44", "89.9342, 22.9231, -40.2771, 0.52", "89.6731, 22.1281, -42.2724, 0.52", "89.3172, 21.1037, -44.7432, 0.52", "89.0164, 20.2395, -46.8124, 0.81", "88.8231, 19.5669, -48.4792, 1.03", "88.7729, 18.9883, -50.0376, 1.03", "88.9142, 18.614, -51.1924, 0.81", "89.3894, 18.1716, -52.8336, 0.59", "89.9517, 17.9297, -54.0493, 0.59", "90.429, 17.8345, -54.8725, 0.44", "91.4545, 17.7132, -56.4756, 0.44", "92.232, 17.6347, -57.5984, 0.37", "92.8208, 17.5671, -58.3789, 0.37", "93.521, 17.4599, -59.1933, 0.96", "94.8923, 17.1761, -60.5715, 0.66", "95.8076, 16.9572, -61.4276, 0.66", "96.7373, 16.7138, -62.3113, 0.88", "97.8828, 16.3969, -63.6124, 0.74", "98.8049, 16.1457, -64.9831, 0.74", "99.7284, 15.9532, -66.7676, 0.74", "100.314, 15.932, -68.2454, 0.59", "101.054, 16.1081, -70.6326, 0.81", "101.629, 16.4782, -73.0999, 0.96", "102.029, 16.9945, -75.4378, 0.96", "102.209, 17.3719, -76.6298, 0.66", "102.42, 17.8624, -77.8082, 0.59", "102.617, 18.2285, -78.6139, 0.44", "103.042, 18.8798, -79.8418, 0.88", "103.27, 19.1586, -80.4319, 0.88", "103.714, 19.5237, -81.8547, 0.29", "104.099, 19.5468, -84.0973, 0.29", "104.295, 19.1437, -86.8565, 0.29", "104.314, 18.9645, -87.6984, 0.88", "104.287, 18.428, -89.8975, 0.88", "104.219, 18.0145, -91.6833, 0.88", "104.102, 17.7265, -93.1534, 0.88", "103.884, 17.5675, -95.0372, 0.88", "103.798, 17.6572, -95.7121, 0.88", "103.719, 17.9872, -96.4725, 0.88", "103.572, 18.9237, -97.4327, 0.52", "103.383, 19.8174, -98.1469, 0.52", "103.163, 20.6065, -98.7663, 1.03", "102.931, 21.3681, -99.4194, 1.03", "102.678, 22.1796, -100.227, 0.81", "102.333, 23.3538, -101.586, 0.44", "102.112, 24.3119, -102.866, 0.52", "101.979, 25.0954, -104.05, 0.52", "101.837, 25.905, -105.461, 0.66", "101.718, 26.2596, -106.235, 0.52", "101.462, 26.7358, -107.441, 0.66", "101.118, 27.2535, -108.772, 0.88", "100.493, 28.0837, -110.744, 0.59", "100.013, 28.687, -112.069, 0.59", "99.0028, 29.8635, -114.686, 0.52", "98.6163, 30.3193, -115.72, 0.52", "98.3697, 30.6938, -116.562, 0.52", "98.2139, 31.2896, -117.753, 0.52", "98.4506, 31.9586, -118.73, 0.44", "98.9707, 32.7427, -119.563, 0.74", "99.3231, 33.1994, -119.943, 0.81", "100.367, 34.4401, -120.957, 0.59", "101.077, 35.2262, -121.674, 0.66", "101.989, 36.2349, -122.598, 0.59", "102.907, 37.3301, -123.542, 0.59", "103.573, 38.2074, -124.222, 0.66", "104.275, 39.2158, -124.966, 0.52", "105.283, 40.7736, -126.025, 0.81", "109.818, 41.7574, -136.388, 0.81", "113.069, 42.4374, -147.245, 0.81", "115.067, 42.5472, -158.422, 0.81", "115.392, 44.0542, -169.671, 0.81", "116.611, 47.6116, -180.385, 0.81" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "55.4611, 23.6224, 15.3695, 0.81", "55.2806, 24.2082, 15.196, 0.81", "55.0817, 24.9316, 15.0063, 0.74", "54.9161, 25.6216, 14.8936, 0.59", "54.6971, 26.6601, 14.7661, 0.37", "54.5657, 27.4731, 14.7052, 0.44", "54.4699, 28.2576, 14.6629, 0.44", "54.4106, 29.0642, 14.6452, 0.74", "54.3725, 30.3516, 14.652, 0.44", "54.3949, 30.9664, 14.6616, 0.52", "54.4987, 31.9093, 14.6783, 0.66", "54.5819, 32.4219, 14.6672, 0.44", "54.707, 33.0858, 14.6183, 0.44", "54.8385, 33.706, 14.5385, 0.37", "55.0377, 34.5497, 14.3619, 0.37", "55.2042, 35.2274, 14.1966, 0.44", "55.3341, 35.7303, 14.0559, 0.22", "55.4622, 36.1814, 13.9304, 0.22", "55.6346, 36.7579, 13.7719, 0.29", "55.8175, 37.3773, 13.5868, 0.74", "55.9858, 37.9733, 13.396, 0.59", "56.1403, 38.5376, 13.2042, 0.44", "56.2827, 39.0375, 12.9784, 0.22", "56.4083, 39.4231, 12.7651, 0.22", "56.5896, 39.9172, 12.4842, 0.22", "56.7727, 40.3713, 12.2249, 0.37", "56.8985, 40.663, 12.0416, 0.37", "57.3529, 41.6984, 11.3649, 0.74", "57.6471, 42.3764, 10.9035, 0.22", "57.9632, 43.1289, 10.3974, 0.22", "58.1807, 43.6963, 10.0198, 0.44", "58.3861, 44.3889, 9.51646, 0.29", "58.4697, 44.7912, 9.169, 0.66", "58.5239, 45.2419, 8.74536, 0.66", "58.5338, 45.6806, 8.30689, 0.88", "58.5202, 46.1828, 7.8061, 0.88", "58.5151, 47.1488, 6.90473, 0.59", "58.5841, 48.0848, 6.11032, 0.44", "58.6615, 48.6421, 5.64977, 0.44", "58.8155, 49.4604, 5.02496, 0.52", "58.9477, 50.0642, 4.56797, 0.59", "59.1522, 50.8966, 3.94138, 0.44", "59.3627, 51.6625, 3.38315, 0.22", "59.5286, 52.2696, 2.92016, 0.44", "59.6712, 52.8165, 2.46352, 0.74", "59.8824, 53.6626, 1.73032, 1.11", "60.0497, 54.478, 1.03498, 0.96", "60.1235, 54.9516, 0.652273, 0.96", "60.2595, 56.0143, -0.14521, 0.59", "60.3429, 56.6982, -0.594515, 0.37", "60.4549, 57.5057, -1.02388, 0.22", "60.5271, 58.0432, -1.2234, 0.66", "60.5855, 58.526, -1.37314, 0.74", "60.6497, 59.0624, -1.53747, 0.52", "60.7373, 59.8192, -1.78636, 0.59", "60.8548, 60.8157, -2.176, 0.66", "60.9627, 61.6749, -2.55119, 0.29", "61.0894, 62.6801, -3.01454, 0.29", "61.1809, 63.3979, -3.38348, 0.37", "61.3163, 64.3518, -3.91632, 0.44", "61.4282, 65.0876, -4.38125, 0.52", "61.5255, 65.7973, -4.8796, 0.66", "61.6218, 66.4478, -5.33472, 0.66", "61.7097, 67.1103, -5.78933, 0.66", "61.7799, 67.7209, -6.21517, 0.96", "61.9189, 68.8374, -7.02953, 0.44", "62.0059, 69.4766, -7.53986, 0.44", "62.1021, 70.0475, -8.04258, 0.59", "62.2769, 70.8673, -8.83217, 0.22", "62.3709, 71.2421, -9.20255, 0.22", "62.456, 71.5466, -9.51346, 0.22", "62.5232, 71.7409, -9.711, 0.22", "62.6563, 72.0887, -10.0541, 0.22", "62.7585, 72.3666, -10.3267, 0.22", "62.8855, 72.7359, -10.6781, 0.66", "63.046, 73.2658, -11.1791, 0.66", "63.192, 73.8521, -11.6973, 0.66", "63.2757, 74.2478, -12.021, 0.37", "63.3854, 74.8959, -12.5257, 0.22", "63.5069, 75.6195, -12.9989, 0.44", "63.6011, 76.1444, -13.2667, 0.44", "63.745, 76.7701, -13.4719, 0.44", "63.9896, 77.6231, -13.5183, 0.22", "64.2447, 78.4463, -13.4808, 0.29", "64.6931, 79.8948, -13.3755, 0.44", "64.9753, 80.8451, -13.3404, 0.66", "65.2333, 81.7636, -13.4165, 0.66", "65.6061, 83.1738, -13.7993, 0.29", "65.8788, 84.3415, -14.4373, 0.37", "66.0266, 85.2428, -15.205, 0.52", "66.058, 85.959, -16.0392, 0.74", "66.0272, 86.696, -17.059, 0.74", "65.9881, 87.1684, -17.7771, 0.74", "65.9191, 87.88, -18.9292, 0.52", "65.8823, 88.5148, -19.8676, 0.59", "65.8403, 89.5526, -21.263, 0.22", "65.8279, 89.9917, -21.8177, 0.22", "65.8153, 90.5139, -22.4358, 0.59", "65.7838, 91.2714, -23.3354, 0.96", "65.7651, 92.0634, -24.2134, 0.37", "65.7816, 92.6574, -24.8408, 0.44", "65.8408, 93.4495, -25.6581, 0.44", "65.9076, 94.1208, -26.3516, 0.44", "65.9792, 94.6493, -26.9136, 0.44", "66.138, 95.4305, -27.7616, 0.22", "66.35, 96.2604, -28.6949, 0.22", "66.437, 96.5308, -28.9975, 0.22", "66.6137, 97.0118, -29.5011, 0.59", "66.9616, 97.8844, -30.3474, 0.29", "67.1915, 98.5036, -30.904, 0.29", "67.3995, 99.1967, -31.4888, 0.52", "67.5424, 99.8439, -31.9769, 0.88", "67.6205, 100.335, -32.3276, 0.88", "67.7105, 101.018, -32.7807, 0.59", "67.8482, 101.913, -33.3271, 0.22", "67.9442, 102.369, -33.6146, 0.29", "68.0531, 102.747, -33.8746, 0.29", "68.2128, 103.178, -34.1859, 0.81", "68.4714, 103.744, -34.614, 0.88", "68.7441, 104.241, -34.9913, 0.59", "69.1269, 104.875, -35.4817, 0.59", "69.5723, 105.618, -36.0535, 0.29", "70.124, 106.597, -36.8086, 0.52", "70.4292, 107.209, -37.3126, 0.59", "70.6833, 107.855, -37.8704, 0.59", "70.8272, 108.337, -38.3062, 0.74", "70.8995, 108.676, -38.6449, 0.74", "70.9818, 109.3, -39.3392, 0.66", "71.0142, 109.873, -40.0325, 0.66", "71.0277, 110.403, -40.6675, 0.74", "71.0689, 111.145, -41.4466, 0.52", "71.1431, 111.684, -41.8784, 0.59", "71.2931, 112.306, -42.2033, 0.44", "71.4883, 112.952, -42.4487, 0.59", "71.6538, 113.464, -42.6217, 0.37", "71.9737, 114.641, -43.062, 0.74", "72.0706, 115.403, -43.4284, 1.03", "72.0448, 116.25, -43.9952, 0.44", "71.7616, 117.444, -45.2161, 0.59", "71.5594, 118.021, -45.9676, 1.18", "71.2642, 118.715, -46.9913, 0.37", "70.9189, 119.365, -48.0569, 0.37", "70.6106, 119.852, -48.9145, 0.81", "70.1074, 120.639, -50.3039, 0.81", "69.8267, 121.156, -51.1234, 0.66", "69.5904, 121.74, -51.9784, 0.37", "69.4266, 122.437, -52.906, 0.37", "69.3297, 123.318, -53.9331, 0.37", "69.3278, 123.848, -54.4476, 0.52", "69.3653, 124.463, -54.9187, 0.44", "69.4152, 125.129, -55.4154, 0.66", "69.4873, 125.721, -55.888, 0.81", "69.5512, 126.123, -56.2103, 0.81", "69.6206, 126.565, -56.5698, 0.74", "69.7355, 127.552, -57.3867, 0.66", "69.8331, 128.599, -58.2622, 0.44", "69.8943, 129.464, -58.9676, 0.44", "69.9438, 130.149, -59.5034, 1.03", "69.9965, 130.672, -59.8366, 0.66", "70.0892, 131.387, -60.1441, 0.52", "70.1554, 131.779, -60.2604, 0.74", "70.2334, 132.317, -60.4127, 0.96", "70.2734, 132.618, -60.5177, 0.96", "70.4051, 133.908, -61.1782, 0.66", "70.4627, 134.955, -61.9186, 0.66", "70.4456, 135.852, -62.7268, 0.44", "70.3241, 136.86, -63.818, 0.96", "70.158, 137.497, -64.6329, 0.52", "69.872, 138.102, -65.538, 0.52", "69.544, 138.634, -66.4912, 0.52", "69.2321, 139.009, -67.2467, 0.44", "68.8671, 139.357, -67.9423, 0.44", "68.4836, 139.636, -68.5119, 0.96", "67.6774, 140.054, -69.4462, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "64.5839, -71.8885, 60.1244, 0.37", "64.8925, -72.6387, 61.3093, 0.37", "65.2924, -73.5184, 62.4387, 0.37", "65.5182, -73.9696, 62.9944, 0.59", "65.8893, -74.6965, 63.8451, 0.44", "66.0956, -75.0475, 64.2994, 0.66", "66.4008, -75.4894, 64.9755, 0.44", "66.8586, -76.1011, 65.9242, 0.44", "67.2255, -76.5524, 66.6248, 0.44", "67.4826, -76.8426, 67.0826, 0.81", "68.3045, -77.7482, 68.4759, 0.81", "69.0753, -78.5999, 69.7745, 0.81", "69.3241, -78.8819, 70.1895, 0.81", "69.6691, -79.3019, 70.7303, 0.44", "69.9827, -79.7361, 71.1877, 0.44", "70.4752, -80.5187, 71.9082, 0.44", "70.7074, -80.9592, 72.2522, 0.66", "70.8688, -81.3079, 72.516, 0.66", "71.2314, -82.1232, 73.2374, 0.52", "71.5408, -82.8988, 74.0153, 0.66", "71.8865, -83.9336, 75.0927, 0.29", "72.0046, -84.357, 75.5499, 0.29", "72.1617, -85.0378, 76.2885, 0.22", "72.3486, -86.0922, 77.4003, 0.22", "72.4466, -86.8113, 78.1442, 0.22", "72.5127, -87.4662, 78.7994, 0.37", "72.5838, -88.4214, 79.7074, 0.74", "72.6179, -88.9742, 80.1874, 0.88", "72.6498, -89.5914, 80.6769, 0.22", "72.6529, -90.6685, 81.389, 0.22", "72.6468, -91.089, 81.6411, 0.22", "72.6145, -91.7531, 81.9512, 0.22", "72.5341, -92.8264, 82.3002, 0.15", "72.481, -93.6421, 82.4955, 0.15", "72.41, -95.1683, 82.8095, 0.22", "72.3724, -96.2236, 82.9992, 0.22", "72.3233, -98.1148, 83.3888, 0.15", "72.2585, -99.6939, 83.7508, 0.15", "72.1769, -101.193, 84.1703, 0.22", "72.1029, -102.496, 84.6133, 0.22", "72.0469, -103.566, 85.0471, 0.22", "71.9738, -104.804, 85.6176, 0.22", "71.8966, -106.401, 86.4957, 0.22", "71.8239, -108.019, 87.427, 0.22", "71.7861, -108.996, 88.003, 0.22", "71.7677, -109.682, 88.3834, 0.52", "71.7701, -110.525, 88.8294, 0.59", "71.8247, -111.529, 89.3223, 0.22", "71.8975, -112.217, 89.64, 0.15", "72.005, -113.1, 90.0691, 0.15", "72.0382, -114.048, 90.4626, 0.22", "71.9825, -114.722, 90.7314, 0.37", "71.8576, -115.654, 91.1014, 0.37", "71.6547, -116.649, 91.4689, 0.15", "71.2473, -118.196, 92.0326, 0.15", "70.4604, -120.581, 92.7957, 0.15", "70.01, -121.673, 93.1343, 0.15" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "64.5839, -71.8885, 60.1244, 0.29", "64.738, -72.6375, 59.4996, 0.29", "65.0239, -73.8572, 58.4075, 0.37", "65.2038, -74.587, 57.7507, 0.37", "65.4711, -75.5372, 56.9071, 0.22", "65.8117, -76.5623, 55.9958, 0.22", "66.0219, -77.1277, 55.5103, 0.52", "66.4501, -78.3204, 54.5342, 0.29", "66.6544, -78.8791, 54.1055, 0.44", "66.853, -79.4572, 53.6829, 0.66", "67.0991, -80.2819, 53.1159, 0.37", "67.2765, -81.1056, 52.6216, 0.29", "67.39, -82.1032, 52.0608, 0.29", "67.4292, -83.008, 51.5926, 0.29", "67.4526, -84.0058, 51.0973, 0.66", "67.4443, -85.0148, 50.6196, 0.66", "67.4171, -86.021, 50.1747, 0.52", "67.3882, -87.501, 49.5488, 0.37", "67.4197, -88.5223, 49.1406, 0.66", "67.5103, -89.5824, 48.7055, 0.22", "67.6088, -90.2398, 48.3914, 0.22", "67.7507, -90.8953, 48.0336, 0.59", "67.9632, -91.6276, 47.5939, 0.81", "68.3332, -92.6321, 46.9322, 0.52", "68.8312, -93.8136, 46.0898, 0.66", "69.325, -94.8969, 45.2901, 0.44", "69.8806, -96.0362, 44.4904, 0.37", "70.1469, -96.5969, 44.114, 0.37", "70.4326, -97.2248, 43.7222, 0.37", "70.921, -98.3614, 43.1028, 0.66", "71.2211, -99.0783, 42.7747, 1.11", "71.6461, -100.17, 42.3028, 0.66", "72.045, -101.301, 41.7636, 0.44", "72.3374, -102.29, 41.2052, 0.44", "72.5708, -103.158, 40.6572, 0.59", "72.7634, -103.879, 40.1548, 0.52", "73.0682, -104.971, 39.2933, 0.29", "73.3534, -105.928, 38.4308, 0.81", "73.6957, -106.967, 37.4093, 0.22", "73.8191, -107.32, 37.0365, 0.22", "73.9194, -107.576, 36.7527, 0.29", "74.2751, -108.227, 36.0107, 0.52", "74.7408, -108.828, 35.3357, 0.22", "75.2749, -109.354, 34.7736, 0.52", "75.6915, -109.684, 34.4302, 0.52", "76.1828, -110.017, 34.1209, 0.29", "77.3291, -110.661, 33.615, 0.22", "78.0592, -111.005, 33.421, 0.29", "78.6736, -111.276, 33.326, 0.52", "79.2905, -111.551, 33.2803, 0.66", "80.5913, -112.134, 33.2366, 0.44", "81.5957, -112.612, 33.2414, 0.44", "82.5311, -113.092, 33.2581, 0.44", "83.3817, -113.541, 33.2551, 0.52", "84.1214, -113.949, 33.194, 0.66", "84.7592, -114.315, 33.0816, 0.66", "85.6043, -114.793, 32.8251, 0.37", "86.2294, -115.118, 32.6039, 0.37", "86.7481, -115.362, 32.3681, 0.74", "87.4107, -115.643, 32.0264, 1.03", "88.1911, -115.967, 31.597, 0.29", "89.0455, -116.321, 31.1144, 0.22", "89.9544, -116.679, 30.6098, 0.22", "90.9537, -117.085, 30.0826, 0.22", "91.7761, -117.43, 29.7178, 0.29", "92.4531, -117.733, 29.4893, 0.44", "93.1128, -118.039, 29.3312, 0.44", "93.7781, -118.366, 29.2586, 0.81", "94.1611, -118.562, 29.2667, 0.88", "95.2588, -119.157, 29.4299, 0.22", "95.9443, -119.568, 29.6435, 0.15", "96.6979, -120.036, 29.9912, 0.15", "97.5454, -120.576, 30.457, 0.15", "97.9738, -120.863, 30.7085, 0.37", "98.5342, -121.259, 31.0317, 0.81", "99.8109, -122.254, 31.739, 0.52", "100.614, -123.001, 32.1967, 0.66", "100.995, -123.443, 32.4052, 0.52", "101.422, -124.052, 32.5982, 0.22", "101.921, -124.884, 32.8343, 0.22", "102.248, -125.519, 32.9862, 0.44", "102.783, -126.741, 33.2548, 0.44", "103.14, -127.735, 33.5015, 0.44", "103.42, -128.657, 33.7771, 0.44", "103.825, -129.968, 34.312, 0.29", "103.976, -130.413, 34.5276, 0.66", "104.349, -131.365, 35.0432, 0.66", "104.787, -132.338, 35.6113, 0.66", "105.112, -132.995, 36.0066, 1.03", "105.882, -134.411, 36.8217, 0.29", "106.365, -135.24, 37.2435, 0.15", "106.557, -135.53, 37.4008, 0.15", "106.861, -135.912, 37.6424, 0.15", "107.269, -136.304, 37.9698, 0.59", "107.527, -136.515, 38.1791, 0.81", "108.404, -137.193, 38.8817, 0.29", "109.248, -137.817, 39.5967, 0.44", "110.352, -138.632, 40.5317, 0.22", "111.388, -139.39, 41.388, 0.22", "112.175, -139.99, 42.0692, 0.22", "112.968, -140.638, 42.7639, 0.29", "113.647, -141.233, 43.3371, 0.59", "114.109, -141.704, 43.7362, 1.03", "114.371, -142.033, 43.9714, 1.03", "115.491, -143.643, 45.0817, 0.15", "115.936, -144.325, 45.5427, 0.15", "116.269, -144.861, 45.8877, 0.22", "116.896, -145.89, 46.4686, 0.74", "117.338, -146.593, 46.824, 0.96", "118.149, -147.842, 47.3147, 0.22", "118.651, -148.594, 47.4685, 0.22", "119.32, -149.558, 47.5567, 0.37", "120.003, -150.484, 47.5247, 0.15", "120.473, -151.103, 47.3949, 0.29", "121.065, -151.891, 47.1427, 0.15", "121.676, -152.75, 46.7829, 0.66", "122.361, -153.693, 46.3507, 0.22", "122.951, -154.484, 45.9761, 0.22", "123.583, -155.36, 45.6253, 0.29", "123.967, -155.919, 45.4598, 0.15", "124.29, -156.397, 45.3744, 0.52", "124.647, -156.924, 45.3859, 0.59", "125.306, -157.892, 45.6394, 0.22", "125.905, -158.705, 46.0496, 0.88", "126.367, -159.222, 46.4701, 0.88", "126.786, -159.62, 46.9178, 0.59", "127.797, -160.464, 48.1152, 0.15", "128.604, -161.051, 49.1788, 0.22", "129.096, -161.343, 49.8749, 0.22", "129.94, -161.732, 51.1339, 0.15", "130.511, -161.953, 52.0063, 0.15", "130.856, -162.063, 52.5415, 0.44", "131.634, -162.261, 53.7249, 0.74", "132.287, -162.422, 54.7225, 0.74", "133.046, -162.633, 55.986, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-36.6565, 72.8364, 46.2432, 1.18", "-38.4609, 75.2209, 47.5617, 1.18", "-39.5345, 76.4493, 48.209, 1.03", "-40.5271, 77.4326, 48.6728, 1.4", "-41.8167, 78.6643, 49.2948, 1.03", "-42.6453, 79.4509, 49.7428, 0.88", "-43.9349, 80.6666, 50.4916, 0.59", "-45.2961, 81.8309, 51.2151, 0.29", "-46.4777, 82.7788, 51.9141, 0.37", "-47.7702, 83.7843, 52.7722, 0.74", "-48.9232, 84.6831, 53.6366, 1.4", "-50.3982, 85.8828, 54.864, 0.88", "-51.2069, 86.6188, 55.6799, 0.88", "-51.7159, 87.1566, 56.2851, 0.88", "-52.3423, 87.8736, 57.1171, 0.59", "-53.0988, 88.7371, 58.1518, 0.44", "-53.6956, 89.4271, 59.0705, 0.29", "-54.678, 90.6335, 60.841, 0.52", "-55.2888, 91.4287, 62.086, 0.74", "-55.8525, 92.1883, 63.3769, 1.03", "-56.5333, 93.0676, 64.9909, 0.59", "-57.2075, 93.8951, 66.5808, 0.22", "-57.8076, 94.5634, 67.937, 0.22", "-58.5172, 95.3092, 69.528, 0.22", "-59.1462, 96.0289, 71.0921, 0.37", "-59.4507, 96.3902, 71.8723, 0.52", "-60.0637, 97.1051, 73.3509, 1.33", "-60.8242, 97.9679, 75.0487, 0.29", "-61.8214, 98.9749, 77.0127, 0.37", "-62.7783, 99.8332, 78.6541, 0.37", "-63.4001, 100.317, 79.5789, 0.37", "-64.2147, 100.84, 80.6364, 0.66", "-64.7223, 101.106, 81.2049, 0.66", "-65.7748, 101.59, 82.1971, 0.44", "-66.4248, 101.88, 82.7646, 0.44", "-67.261, 102.286, 83.5997, 0.22", "-67.9167, 102.691, 84.4745, 0.22", "-68.6115, 103.22, 85.7378, 0.22", "-69.1541, 103.703, 86.9346, 0.15", "-69.7803, 104.36, 88.6827, 0.66", "-70.3711, 104.99, 90.3962, 0.29", "-71.0039, 105.617, 92.1839, 0.66", "-71.6774, 106.166, 93.8542, 1.03", "-72.2829, 106.527, 95.0938, 1.25", "-73.8484, 107.179, 97.7925, 0.22", "-74.8215, 107.444, 99.1492, 0.22", "-75.603, 107.575, 100.015, 0.29", "-76.8713, 107.686, 101.103, 0.29", "-77.8359, 107.721, 101.697, 0.22", "-78.9513, 107.709, 102.185, 0.29", "-79.7521, 107.679, 102.404, 0.44", "-80.7341, 107.63, 102.572, 0.66", "-81.7955, 107.597, 102.676, 0.66", "-83.3349, 107.606, 102.748, 0.22", "-84.5088, 107.667, 102.79, 0.22", "-86.0156, 107.823, 102.955, 0.29", "-88.0573, 108.126, 103.366, 0.29", "-88.9153, 108.286, 103.631, 0.59", "-90.2312, 108.572, 104.25, 0.59", "-91.767, 108.945, 105.203, 0.22", "-93.7401, 109.467, 106.649, 0.44", "-94.5212, 109.679, 107.315, 0.44", "-95.3787, 109.912, 108.118, 0.22", "-96.6703, 110.238, 109.287, 0.37", "-97.241, 110.375, 109.731, 0.59", "-97.9154, 110.544, 110.142, 0.96", "-99.0516, 110.838, 110.665, 0.29", "-100.864, 111.346, 111.388, 0.22", "-101.936, 111.712, 111.889, 0.22", "-103.745, 112.413, 112.804, 0.22", "-105.274, 113.086, 113.684, 0.29", "-106.071, 113.479, 114.191, 0.29", "-107.061, 114.03, 114.886, 0.59", "-109.507, 115.692, 117.084, 0.07", "-109.982, 116.088, 117.636, 0.15", "-110.471, 116.631, 118.437, 0.29", "-111.256, 117.74, 120.069, 0.15", "-111.482, 118.14, 120.672, 0.22", "-112.14, 119.549, 122.908, 0.44", "-112.4, 120.136, 123.865, 0.81", "-112.881, 121.295, 125.876, 0.22", "-113.137, 121.887, 126.946, 0.29", "-113.613, 122.921, 128.91, 0.22", "-114.098, 123.684, 130.335, 0.22", "-114.488, 124.083, 131.02, 0.66", "-114.837, 124.337, 131.4, 0.66", "-116.019, 124.967, 132.101, 0.22", "-117.388, 125.566, 132.494, 0.29", "-118.976, 126.219, 132.606, 0.74", "-121.384, 127.176, 132.438, 0.22", "-122.853, 127.718, 132.248, 0.15", "-123.631, 127.98, 132.113, 0.29", "-124.654, 128.294, 131.901, 0.74", "-126.008, 128.685, 131.618, 0.22", "-127.648, 129.128, 131.415, 0.22", "-128.374, 129.34, 131.435, 0.52", "-128.844, 129.472, 131.47, 0.88", "-129.737, 129.726, 131.573, 0.29", "-130.81, 130.111, 132.006, 0.22", "-132.052, 130.718, 132.906, 0.22", "-132.699, 131.128, 133.564, 0.22", "-133.602, 131.801, 134.646, 0.22", "-134.489, 132.538, 135.898, 0.15", "-136.792, 134.857, 140.45, 0.15", "-137.309, 135.465, 141.863, 0.15", "-137.587, 135.856, 142.877, 0.15", "-137.784, 136.203, 143.896, 0.15", "-138.002, 136.653, 145.327, 0.37", "-138.471, 137.731, 149.062, 0.15", "-138.817, 138.379, 151.551, 0.15", "-139.016, 138.811, 153.465, 0.15", "-139.199, 139.394, 156.211, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-36.6565, 72.8364, 46.2432, 0.29", "-35.403, 73.8576, 47.4765, 0.29", "-33.3458, 75.4685, 49.5525, 0.29", "-31.613, 76.838, 51.3858, 0.29", "-29.9079, 78.2418, 53.2785, 0.29", "-28.6272, 79.3946, 54.7976, 0.29", "-28.3225, 79.6951, 55.1895, 0.29", "-27.6549, 80.4389, 56.1642, 0.29", "-27.3572, 80.8407, 56.7167, 0.37", "-26.8692, 81.7527, 58.0994, 0.37", "-26.6595, 82.4171, 59.2501, 0.22", "-26.511, 83.1671, 60.6393, 0.22", "-26.4455, 83.4479, 61.1853, 0.22", "-26.3488, 83.6842, 61.6783, 0.22", "-26.072, 84.0996, 62.6065, 0.22", "-25.8042, 84.4081, 63.3649, 0.22", "-25.6409, 84.5564, 63.7717, 0.22", "-25.3968, 84.7602, 64.3139, 0.29", "-24.7506, 85.2514, 65.6958, 0.29", "-24.0402, 85.7781, 67.2709, 0.29", "-23.541, 86.1367, 68.4503, 0.29", "-23.2178, 86.366, 69.218, 0.15", "-22.0086, 87.1761, 72.0475, 0.15", "-20.7201, 87.9548, 75.0217, 0.15", "-19.5801, 88.5499, 77.6696, 0.15", "-18.9438, 88.8381, 79.1459, 0.52" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-61.9906, 46.0445, -41.1459, 1.18", "-63.5823, 46.6742, -40.2678, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-61.9906, 46.0445, -41.1459, 0.29", "-62.3044, 47.2775, -41.3412, 0.29", "-62.6545, 48.3159, -41.6167, 0.29", "-62.9964, 49.1884, -41.9005, 0.88", "-63.4254, 50.1989, -42.2598, 0.44", "-63.8752, 51.1565, -42.6377, 0.44", "-64.1676, 51.7379, -42.8743, 0.29", "-64.8461, 52.8341, -43.4344, 0.29", "-65.2007, 53.3438, -43.7116, 0.74", "-65.4861, 53.712, -43.8956, 0.96", "-66.0529, 54.4481, -44.183, 0.96", "-66.7265, 55.3822, -44.4246, 0.66", "-67.6127, 56.7811, -44.5795, 0.37", "-68.0447, 57.6285, -44.5663, 0.22", "-68.5616, 58.8522, -44.4564, 0.29", "-69.0366, 60.302, -44.2166, 0.29", "-69.2306, 61.1436, -44.0062, 0.81", "-69.4493, 62.58, -43.5538, 1.03", "-69.5632, 63.8939, -43.1015, 0.22", "-69.6012, 64.7149, -42.8452, 0.29", "-69.6076, 65.535, -42.6454, 0.44", "-69.6188, 66.2472, -42.549, 0.44", "-69.6004, 67.1999, -42.4911, 0.44", "-69.5745, 68.2379, -42.5755, 0.52", "-69.5958, 68.9345, -42.7471, 0.52", "-69.666, 69.8422, -43.1026, 0.29", "-69.7281, 70.4196, -43.3893, 0.37", "-69.8384, 71.2026, -43.813, 0.37", "-70.1283, 72.5954, -44.5975, 0.81", "-70.4076, 73.5848, -45.1726, 1.03", "-70.6915, 74.4167, -45.6558, 0.74", "-71.0661, 75.3878, -46.2108, 0.66", "-71.4402, 76.3259, -46.7407, 0.37", "-71.9258, 77.5355, -47.4182, 0.29", "-72.2031, 78.3166, -47.8123, 0.29", "-72.3588, 78.7525, -48.067, 0.66", "-72.5247, 79.2396, -48.3873, 1.18", "-72.6442, 79.6571, -48.6919, 1.18", "-72.8052, 80.3404, -49.2002, 0.74", "-72.9423, 80.9903, -49.6441, 0.44", "-73.1697, 81.949, -50.271, 0.29", "-73.2928, 82.4294, -50.579, 0.29", "-73.4245, 82.9335, -50.8942, 0.29", "-73.6786, 83.803, -51.4558, 0.29", "-73.9135, 84.5497, -51.9338, 0.22", "-74.216, 85.4476, -52.4916, 0.37", "-74.4894, 86.28, -52.9727, 0.22", "-74.6107, 86.6533, -53.1924, 0.22", "-74.8358, 87.4094, -53.6433, 0.44", "-74.9795, 87.9693, -53.9759, 0.96", "-75.1, 88.4612, -54.2435, 1.18", "-75.3222, 89.3401, -54.6496, 1.18", "-75.5018, 89.9254, -54.914, 1.25", "-75.7463, 90.5862, -55.2301, 0.37", "-75.9776, 91.1554, -55.5085, 0.22", "-76.2801, 91.811, -55.8697, 0.29", "-76.4833, 92.2372, -56.1484, 0.29", "-76.862, 92.9984, -56.7565, 0.22", "-77.1818, 93.6616, -57.3745, 0.22", "-77.2886, 93.8925, -57.6039, 0.44", "-77.5773, 94.5009, -58.2621, 0.81", "-78.0155, 95.3901, -59.3111, 0.29", "-78.371, 96.0356, -60.1293, 0.52", "-78.6868, 96.539, -60.7749, 1.03", "-79.0282, 96.9988, -61.3684, 1.03", "-79.6851, 97.7564, -62.336, 0.66", "-80.3431, 98.4272, -63.1856, 0.59", "-81.057, 99.105, -64.0209, 0.88", "-81.9016, 99.9256, -64.9845, 0.22", "-82.5562, 100.591, -65.7304, 0.59", "-83.3216, 101.413, -66.6324, 0.22", "-83.696, 101.863, -67.1017, 0.44", "-84.1145, 102.419, -67.7104, 0.74", "-84.3888, 102.827, -68.2205, 0.88", "-84.7021, 103.327, -68.9471, 0.37", "-84.9874, 103.761, -69.6602, 0.37", "-85.3253, 104.263, -70.5232, 0.37", "-85.7531, 104.895, -71.5589, 0.29", "-86.1175, 105.404, -72.4195, 0.52", "-86.2946, 105.631, -72.8234, 0.52", "-86.7331, 106.19, -73.8227, 0.52", "-87.094, 106.678, -74.5867, 0.37", "-87.3358, 107.011, -74.9907, 0.37", "-89.0136, 114.716, -78.697, 0.37", "-88.5638, 122.851, -81.7821, 0.37", "-87.2695, 130.822, -85.0546, 0.37", "-86.0201, 138.692, -88.5767, 0.37", "-84.244, 145.655, -93.5036, 0.37", "-81.0804, 152.733, -97.4791, 0.37", "-77.7982, 159.274, -102.207, 0.37", "-74.1923, 165.862, -106.624, 0.37", "-71.6722, 172.856, -111.168, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-11.5631, 96.2067, -50.0616, 0.52", "-11.9203, 96.0454, -51.7521, 0.52", "-12.1979, 95.8059, -53.423, 0.52", "-12.2234, 95.631, -54.5506, 0.66", "-12.0848, 95.4423, -55.5602, 0.44", "-11.8328, 95.2672, -56.5202, 0.37", "-11.2801, 95.0043, -58.2188, 0.37", "-11.1081, 94.9468, -58.6498, 0.37", "-10.2253, 94.7032, -60.4991, 0.37", "-9.46301, 94.493, -61.9742, 0.52", "-8.92425, 94.3338, -63.0392, 0.52", "-8.68343, 94.2403, -63.5773, 0.52", "-8.38124, 93.9718, -64.6361, 0.52", "-8.34378, 93.6057, -65.6795, 0.66", "-8.71669, 93.1238, -66.3254, 0.52", "-9.34174, 92.4662, -67.0548, 0.44", "-9.84236, 91.9547, -67.5262, 0.44", "-10.2548, 91.519, -67.8599, 0.81", "-10.993, 90.7523, -68.2967, 0.96", "-12.1244, 89.6671, -68.7967, 0.22", "-13.362, 84.8277, -76.5851, 0.22", "-16.8093, 79.3124, -83.166, 0.22", "-19.2935, 73.028, -89.4862, 0.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-11.5631, 96.2067, -50.0616, 0.59", "-11.6626, 97.4272, -49.411, 0.59", "-11.8183, 98.8322, -48.7727, 0.59", "-11.9301, 100.008, -48.4164, 0.66", "-12.0299, 100.918, -48.2493, 0.81", "-12.1918, 102.262, -48.1707, 0.52", "-12.4062, 103.904, -48.2645, 0.52", "-12.5354, 104.944, -48.5579, 0.66", "-12.6502, 106.558, -49.3913, 1.03", "-12.6395, 108.143, -50.5838, 0.37", "-12.4914, 109.345, -51.7701, 0.37", "-12.2615, 110.265, -52.8736, 0.59", "-11.8238, 111.498, -54.5072, 0.74", "-11.3327, 112.543, -55.9602, 0.74", "-10.6553, 113.702, -57.6093, 0.37", "-10.0597, 114.54, -58.8109, 0.37", "-9.64602, 115.061, -59.4933, 0.37", "-9.2001, 115.551, -60.1227, 0.44", "-8.46417, 116.364, -61.076, 0.44", "-8.04717, 116.836, -61.5917, 0.74", "-7.28852, 117.718, -62.523, 0.74", "-6.36146, 118.749, -63.6211, 0.15", "-5.42338, 119.661, -64.7182, 0.15", "-3.44066, 128.966, -68.2304, 0.15", "-2.12275, 138.538, -71.3076, 0.15", "-1.468, 147.137, -76.6428, 0.15", "-1.02527, 155.067, -82.9468, 0.15", "-1.19509, 163.694, -88.2739, 0.15", "-0.908565, 172.664, -92.995, 0.15", "0.679747, 181.862, -96.9596, 0.15", "2.28289, 191.447, -99.8563, 0.15", "2.8073, 201.203, -102.571, 0.15", "4.99176, 211.08, -103.289, 0.15", "7.33032, 220.947, -103.343, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "67.6774, 140.054, -69.4462, 0.29", "67.263, 140.449, -71.2441, 0.29", "66.6581, 140.784, -73.6552, 0.29", "66.2039, 140.949, -75.1976, 0.29", "65.7967, 141.088, -76.3905, 0.29", "65.5071, 141.192, -77.1951, 0.59", "64.7155, 141.534, -79.4391, 0.22", "64.2173, 141.845, -80.9747, 0.22", "63.9908, 142.058, -81.7751, 0.22", "63.7721, 142.364, -82.791, 0.15", "63.9517, 142.71, -83.4417, 0.15", "64.499, 143.21, -83.9617, 0.66", "65.597, 144.078, -84.601, 0.22", "66.1671, 144.507, -84.8857, 0.22", "66.714, 144.853, -85.1279, 0.44", "68.2873, 145.632, -85.714, 0.29", "70.595, 149.315, -96.4738, 0.29", "71.7776, 153.388, -107.276, 0.29", "71.9649, 157.797, -118.009, 0.29", "71.8577, 163.678, -128.012, 0.29", "72.1724, 169.055, -138.292, 0.29", "69.9943, 173.064, -148.962, 0.29", "66.3982, 176.066, -159.579, 0.29", "62.1846, 180.252, -169.548, 0.29", "59.578, 184.203, -180.144, 0.29", "57.0296, 189.447, -190.178, 0.29", "55.8187, 195.419, -200.054, 0.29", "56.1606, 200.056, -210.686, 0.29", "59.0277, 203.632, -221.348, 0.29", "61.5183, 205.003, -232.599, 0.29", "64.7463, 204.867, -243.745, 0.29", "67.2081, 202.666, -254.87, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "67.6774, 140.054, -69.4462, 0.74", "67.4748, 140.784, -69.1789, 0.74", "66.3737, 144.053, -68.052, 0.29", "65.9379, 145.142, -67.6813, 0.29", "65.1811, 146.79, -67.1284, 0.52", "64.615, 147.88, -66.7802, 0.29", "63.8131, 149.248, -66.4323, 0.37", "63.0516, 150.352, -66.2488, 0.59", "62.4289, 151.142, -66.1579, 0.44", "61.7437, 152.062, -66.0287, 0.88", "60.5657, 153.909, -65.6933, 0.37", "59.5311, 155.925, -65.2277, 0.66", "59.0233, 157.239, -64.8947, 0.29", "58.5789, 158.875, -64.4847, 0.22", "58.2269, 160.855, -64.0089, 0.74", "58.0094, 163.099, -63.4885, 0.29", "57.9824, 164.465, -63.1916, 0.22", "58.008, 165.578, -62.9689, 0.88", "58.0384, 166.982, -62.8033, 0.88", "58.0413, 168.09, -62.7963, 0.22", "58.0213, 169.21, -62.898, 0.22", "58.0027, 170.498, -63.0994, 0.15", "58.0172, 171.268, -63.2303, 0.66", "58.0635, 172.074, -63.3799, 0.22", "58.1602, 173.269, -63.6175, 0.15", "58.2362, 173.88, -63.7618, 0.15", "58.3906, 174.825, -64.0795, 0.44", "58.6388, 176.065, -64.6537, 0.44", "58.8814, 177.387, -65.4979, 0.22", "58.9812, 178.079, -66.0985, 0.22", "59.0582, 178.925, -67.0561, 0.52", "59.0782, 179.909, -68.4475, 0.52", "59.0549, 180.496, -69.4662, 0.22", "59.0002, 181.491, -71.3996, 0.22", "58.9441, 182.237, -72.943, 0.22", "58.881, 182.804, -74.1513, 0.22", "58.7789, 183.473, -75.5564, 0.22", "58.6516, 184.477, -77.5608, 0.22", "58.5865, 185.21, -79.0479, 0.66", "58.611, 185.671, -79.9679, 0.37", "57.9806, 197.227, -84.4346, 0.37", "58.8596, 208.857, -88.663, 0.37", "58.3977, 221.17, -90.1072, 0.37", "59.2035, 233.532, -90.7527, 0.37", "58.8875, 245.753, -92.864, 0.37", "60.1102, 257.574, -96.4245, 0.37", "63.496, 269.004, -99.8584, 0.37", "67.8106, 280.483, -101.736, 0.37", "74.3921, 290.951, -102.735, 0.37", "82.0214, 300.289, -105.649, 0.37", "89.5095, 308.84, -110.621, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-63.5823, 46.6742, -40.2678, 0.52", "-65.1067, 47.4691, -40.361, 0.52", "-65.721, 47.7905, -40.4168, 0.66", "-66.694, 48.29, -40.5005, 0.88", "-68.1548, 49.0193, -40.61, 0.74", "-69.4604, 49.6385, -40.671, 0.52", "-70.5555, 50.1343, -40.6988, 0.52", "-72.2168, 50.8255, -40.7557, 0.74", "-73.1473, 51.1875, -40.7685, 0.74", "-74.4628, 51.6569, -40.7252, 0.66", "-75.92, 52.0988, -40.6136, 0.37", "-76.5793, 52.2624, -40.5482, 0.37", "-77.2574, 52.3892, -40.4906, 0.88", "-78.343, 52.5317, -40.4369, 0.88", "-79.2068, 52.6238, -40.4416, 0.59", "-80.0909, 52.6884, -40.4918, 0.59", "-81.027, 52.7329, -40.627, 0.59", "-81.8465, 52.7331, -40.8405, 0.59", "-82.7516, 52.7084, -41.136, 0.59", "-83.4187, 52.6741, -41.3633, 0.81", "-84.2755, 52.6217, -41.6371, 1.03", "-85.8023, 52.4811, -42.0429, 0.52", "-87.8247, 52.2445, -42.446, 0.59", "-89.1282, 52.026, -42.6267, 0.59", "-90.2078, 51.7775, -42.6894, 0.59", "-91.6656, 51.3229, -42.6524, 0.59", "-92.6553, 50.9124, -42.5031, 0.59", "-93.7769, 50.3153, -42.1417, 0.52", "-94.5016, 49.8493, -41.8025, 0.59", "-95.2884, 49.2567, -41.3953, 0.52", "-96.0266, 48.6651, -41.013, 0.37", "-97.0168, 47.8607, -40.534, 0.66", "-97.6577, 47.3764, -40.2554, 0.66", "-98.3014, 46.9572, -40.0257, 0.88", "-99.1131, 46.5212, -39.7851, 0.88", "-100.591, 45.8254, -39.4653, 0.52", "-101.472, 45.4546, -39.3697, 0.52", "-102.08, 45.2343, -39.3807, 0.66", "-103.655, 44.7516, -39.6022, 0.44", "-104.42, 44.572, -39.8001, 0.59", "-105.462, 44.4125, -40.1657, 0.66", "-107.193, 44.3145, -40.9166, 0.66", "-108.359, 44.3297, -41.4911, 0.88", "-109.265, 44.399, -41.9707, 0.88", "-110.18, 44.5131, -42.4673, 0.81", "-111.011, 44.6531, -42.879, 1.11", "-112.149, 44.8965, -43.3219, 0.52", "-113.613, 45.2544, -43.7721, 0.52", "-115.213, 45.6792, -44.1576, 0.29", "-115.711, 45.8173, -44.2494, 0.29", "-116.811, 46.1016, -44.4339, 0.59", "-118.276, 46.3943, -44.7507, 0.29", "-120.247, 46.6775, -45.3582, 0.37", "-121.541, 46.8001, -45.8327, 0.37", "-122.533, 46.855, -46.2453, 0.37", "-124.271, 46.9078, -47.0559, 0.44", "-126.507, 46.8849, -48.26, 0.96", "-128.647, 46.7497, -49.5944, 0.44", "-129.529, 46.6418, -50.2128, 0.52", "-130.595, 46.4765, -51.0798, 0.52", "-140.576, 45.6994, -53.4036, 0.52", "-150.685, 45.6641, -55.2518, 0.52", "-160.91, 44.7448, -55.7061, 0.52", "-170.836, 42.9953, -53.6993, 0.52", "-180.199, 40.555, -50.2358, 0.52", "-190.102, 39.6638, -47.6356, 0.52", "-199.769, 36.7533, -45.714, 0.52", "-209.801, 34.7149, -44.8074, 0.52", "-219.956, 33.2384, -45.3607, 0.52", "-229.927, 32.0401, -47.5407, 0.52", "-239.829, 30.2112, -49.5961, 0.52", "-249.486, 28.4874, -52.6576, 0.52", "-259.295, 26.7764, -55.2012, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-63.5823, 46.6742, -40.2678, 0.29", "-64.8149, 46.8011, -41.1721, 0.29", "-66.2551, 46.9072, -42.1619, 0.44", "-66.8556, 46.9488, -42.5312, 0.44", "-67.8164, 47.0259, -43.0522, 0.29", "-68.8124, 47.1229, -43.5304, 0.29", "-69.8087, 47.2339, -43.9591, 0.59", "-70.5122, 47.3459, -44.147, 0.81", "-71.3963, 47.4888, -44.3014, 0.59", "-72.2409, 47.6065, -44.4556, 0.44", "-72.9436, 47.6874, -44.6135, 0.74", "-73.4798, 47.7541, -44.7671, 1.03", "-74.5384, 47.8924, -45.1659, 0.29", "-75.7169, 48.0029, -45.746, 0.29", "-76.9445, 48.0104, -46.4968, 0.96", "-78.1919, 47.8721, -47.3935, 0.66", "-79.0767, 47.6511, -48.1077, 0.74", "-79.8969, 47.4017, -48.8279, 0.81", "-80.6467, 47.1146, -49.5563, 0.52", "-81.5974, 46.6464, -50.5106, 0.52", "-82.3498, 46.1258, -51.3021, 0.44", "-82.9334, 45.5536, -51.9196, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-259.295, 26.7764, -55.2012, 0.66", "-268.396, 22.7369, -50.9854, 0.66", "-276.656, 17.5676, -46.2988, 0.66", "-284.739, 12.2103, -41.5162, 0.66", "-293.022, 8.25478, -35.8026, 0.66", "-300.46, 3.78886, -29.3498, 0.66", "-307.974, -1.45522, -23.609, 0.66", "-315.474, -7.7074, -18.9649, 0.66", "-322.451, -14.3539, -14.0599, 0.66", "-329.142, -20.9295, -8.68372, 0.66", "-335.139, -27.7015, -2.76037, 0.66", "-340.082, -34.1775, 4.34818, 0.66", "-344.616, -40.9696, 11.4348, 0.66", "-351.233, -46.6103, 17.8623, 0.66", "-357.574, -52.7454, 24.1119, 0.66", "-364.88, -59.3673, 28.5485, 0.66", "-372.502, -65.6993, 32.8762, 0.66", "-381.155, -71.8913, 34.7985, 0.66", "-389.558, -78.6562, 35.5251, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-259.295, 26.7764, -55.2012, 0.15", "-268.312, 30.6659, -59.3447, 0.66", "-276.341, 36.1726, -63.683, 0.66", "-284.476, 41.733, -67.7451, 0.66", "-291.691, 48.3457, -71.9661, 0.66", "-299.191, 54.4073, -76.5064, 0.66", "-305.78, 59.9516, -82.7873, 0.66", "-312.815, 64.8749, -89.1015, 0.66", "-319.107, 70.4312, -95.6696, 0.66", "-326.877, 74.7564, -101.546, 0.66", "-334.565, 77.7221, -108.306, 0.66", "-340.968, 80.3674, -116.405, 0.66", "-348.839, 82.1323, -123.373, 0.66", "-355.381, 84.1211, -131.549, 0.66", "-360.654, 87.1103, -140.316, 0.66", "-364.452, 90.173, -149.792, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-82.9334, 45.5536, -51.9196, 0.66", "-83.1643, 44.3926, -52.7627, 0.66", "-83.3592, 43.517, -53.5641, 0.59", "-83.5626, 42.9214, -54.2352, 0.29", "-83.9748, 42.0996, -55.257, 0.29", "-84.1806, 41.7862, -55.7175, 0.44", "-84.8147, 41.0552, -57.0531, 0.59", "-85.3421, 40.5877, -58.0712, 0.59", "-85.9695, 40.1584, -59.2644, 0.59", "-86.4495, 39.8991, -60.1689, 0.66", "-87.2344, 39.5633, -61.6034, 0.66", "-88.2474, 39.2442, -63.4079, 0.22", "-91.6639, 35.5255, -72.2628, 0.22", "-95.3121, 31.7803, -81.0134, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-82.9334, 45.5536, -51.9196, 0.15", "-83.4952, 45.6656, -51.8039, 0.15", "-84.0551, 45.7306, -51.6875, 0.22", "-84.6422, 45.7162, -51.5767, 0.37", "-85.2098, 45.6489, -51.4871, 0.52", "-85.9768, 45.4859, -51.365, 0.22", "-86.4273, 45.3668, -51.2871, 0.22", "-86.7585, 45.2575, -51.2024, 0.22", "-87.4819, 44.9645, -50.9745, 0.29", "-87.8957, 44.7733, -50.8294, 0.22", "-88.5144, 44.5, -50.6521, 0.29", "-89.1555, 44.262, -50.5171, 0.15", "-89.9735, 44.0266, -50.3753, 0.15", "-90.2958, 43.962, -50.3333, 0.44", "-90.7018, 43.9114, -50.3011, 0.44", "-91.8547, 43.8279, -50.2755, 0.22", "-92.41, 43.817, -50.2713, 0.22", "-92.8385, 43.8289, -50.2634, 0.52", "-93.3508, 43.8738, -50.2672, 0.52", "-93.9478, 43.9453, -50.249, 0.22", "-94.4023, 44.0202, -50.2002, 0.44", "-95.231, 44.1913, -49.9817, 0.44", "-95.7978, 44.3534, -49.8029, 0.74", "-96.4386, 44.595, -49.552, 0.88", "-102.393, 43.8278, -47.839, 0.88", "-108.234, 42.4317, -46.1298, 0.88", "-114.409, 41.7904, -45.4687, 0.88", "-120.638, 41.8836, -45.8886, 0.88", "-126.776, 42.0291, -47.0233, 0.88", "-132.916, 42.7869, -47.8654, 0.88", "-138.724, 44.2549, -49.6243, 0.88", "-144.279, 44.7637, -52.4292, 0.88", "-149.862, 46.029, -54.9224, 0.88", "-156.012, 46.1094, -55.9963, 0.88", "-162.19, 45.2128, -56.1132, 0.88", "-167.984, 43.377, -57.5427, 0.88", "-173.475, 41.6244, -59.9419, 0.88", "-179.471, 40.8261, -61.4884, 0.88", "-185.456, 40.2285, -63.1634, 0.88", "-191.621, 39.6686, -63.9801, 0.88", "-197.844, 39.1644, -64.0451, 0.88", "-203.841, 37.4857, -63.5993, 0.88", "-209.823, 36.402, -62.1796, 0.88", "-215.455, 36.1562, -59.4943, 0.88", "-220.692, 35.0729, -56.2721, 0.88", "-225.223, 32.9515, -52.5369, 0.88", "-229.21, 30.2783, -48.5441, 0.88", "-233.661, 26.9323, -45.7206, 0.88", "-237.558, 23.0904, -42.7147, 0.88", "-240.406, 18.5782, -39.472, 0.88", "-242.529, 13.4806, -36.5586, 0.88", "-243.622, 7.96187, -33.8508, 0.88", "-243.871, 1.92961, -32.2594, 0.88", "-244.499, -3.8149, -29.8953, 0.88", "-245.875, -9.38235, -27.4267, 0.88", "-247.123, -14.8768, -24.7368, 0.88", "-247.904, -20.7127, -22.6592, 0.88", "-248.234, -26.3993, -20.1025, 0.88", "-248.814, -32.115, -17.6577, 0.88", "-249.154, -37.877, -15.2772, 0.88", "-250.406, -43.1146, -12.1174, 0.88", "-251.184, -48.5459, -9.13797, 0.88", "-252.695, -53.354, -5.45241, 0.88", "-254.862, -58.4945, -2.64785, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-95.3121, 31.7803, -81.0134, 0.22", "-98.233, 28.5274, -89.9524, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-95.3121, 31.7803, -81.0134, 0.22", "-97.7475, 28.8843, -90.3938, 0.22", "-101.791, 24.8242, -98.7288, 0.22", "-104.774, 22.0013, -107.973, 0.22", "-107.185, 18.2839, -117.065, 0.22", "-108.123, 16.3538, -126.95, 0.22", "-108.848, 12.9541, -136.448, 0.22", "-108.046, 9.57961, -145.95, 0.22", "-108.501, 4.51301, -154.692, 0.22", "-109.369, 0.494827, -163.934, 0.22", "-111.83, -3.4351, -172.923, 0.22", "-114.15, -8.11757, -181.584, 0.22", "-117.238, -13.5057, -189.567, 0.22", "-121.106, -18.7561, -197.299, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_0", "axon_0", "dend_31", "dend_26", "dend_4", "dend_1", "axon_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_DBC_e432520e46_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_10
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_25, dend_0, axon_0, dend_31, dend_26, dend_4, dend_1, axon_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_25(0), soma_0(0.45000015763654744)
    connect dend_0(0), soma_0(0.45000015763654744)
    connect axon_0(0), soma_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.20498, -9.63696, 0.0, 2.93949 ) }
    soma_0 { pt3dadd( 1.97921, -8.62937, 0.0, 5.10114 ) }
    soma_0 { pt3dadd( 1.75343, -7.62179, 0.0, 6.34149 ) }
    soma_0 { pt3dadd( 1.52766, -6.61421, 0.0, 7.24948 ) }
    soma_0 { pt3dadd( 1.30189, -5.60662, 0.0, 8.32859 ) }
    soma_0 { pt3dadd( 1.07612, -4.59904, 0.0, 9.63098 ) }
    soma_0 { pt3dadd( 0.850343, -3.59146, 0.0, 10.5761 ) }
    soma_0 { pt3dadd( 0.624571, -2.58388, 0.0, 11.2008 ) }
    soma_0 { pt3dadd( 0.398798, -1.57629, 0.0, 11.5851 ) }
    soma_0 { pt3dadd( 0.173026, -0.56871, 0.0, 11.8715 ) }
    soma_0 { pt3dadd( -0.0527468, 0.438873, 0.0, 11.942 ) }
    soma_0 { pt3dadd( -0.278519, 1.44646, 0.0, 11.923 ) }
    soma_0 { pt3dadd( -0.504292, 2.45404, 0.0, 11.4797 ) }
    soma_0 { pt3dadd( -0.730064, 3.46162, 0.0, 10.9001 ) }
    soma_0 { pt3dadd( -0.955837, 4.4692, 0.0, 10.1322 ) }
    soma_0 { pt3dadd( -1.18161, 5.47679, 0.0, 9.32117 ) }
    soma_0 { pt3dadd( -1.40738, 6.48437, 0.0, 8.43955 ) }
    soma_0 { pt3dadd( -1.63315, 7.49195, 0.0, 7.43264 ) }
    soma_0 { pt3dadd( -1.85893, 8.49954, 0.0, 6.41765 ) }
    soma_0 { pt3dadd( -2.0847, 9.50712, 0.0, 5.2256 ) }
    soma_0 { pt3dadd( -2.31047, 10.5147, 0.0, 2.87927 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 21/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.67666, -9.70218, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 1.67666, -9.70218, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 2.01893, -10.4436, 7.59132, 3.32 ) }
    dend_25 { pt3dadd( 2.6391, -11.5993, 8.56353, 2.36 ) }
    dend_25 { pt3dadd( 3.30156, -12.8337, 9.60203, 2.88 ) }
    dend_25 { pt3dadd( 3.36442, -12.9509, 9.70058, 2.65 ) }
    dend_25 { pt3dadd( 3.84315, -13.8429, 10.4511, 1.62 ) }
    dend_25 { pt3dadd( 4.49446, -14.9669, 11.511, 1.84 ) }
    dend_25 { pt3dadd( 5.14618, -15.9081, 12.6513, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.96334, 10.2878, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -1.96334, 10.2878, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -2.91703, 12.1182, -0.188219, 3.32 ) }
    dend_0 { pt3dadd( -3.59335, 13.4102, -0.411851, 2.88 ) }
    dend_0 { pt3dadd( -4.08334, 14.3489, -0.595626, 2.88 ) }
    dend_0 { pt3dadd( -4.81513, 15.7508, -0.87009, 3.47 ) }
    dend_0 { pt3dadd( -5.77182, 17.5835, -1.22891, 2.51 ) }
    dend_0 { pt3dadd( -6.90929, 19.7281, -1.69344, 2.8 ) }
    dend_0 { pt3dadd( -7.91746, 21.5653, -2.1756, 4.13 ) }
    dend_0 { pt3dadd( -8.39324, 22.4172, -2.43627, 4.13 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.31047, 10.5147, 0.0, 0.592811 ) }
    axon_0 { pt3dadd( -5.59024, 25.1517, 0.0, 0.592811 ) }
    axon_0 { pt3dadd( -8.87001, 39.7888, 0.0, 0.592811 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 5.14618, -15.9081, 12.6513, 1.4 ) }
    dend_31 { pt3dadd( 6.0482, -16.8874, 11.5716, 1.4 ) }
    dend_31 { pt3dadd( 7.25002, -18.2251, 10.1824, 1.4 ) }
    dend_31 { pt3dadd( 8.07096, -19.1315, 9.29371, 1.4 ) }
    dend_31 { pt3dadd( 9.10855, -20.2816, 8.28216, 1.4 ) }
    dend_31 { pt3dadd( 10.0188, -21.2954, 7.44113, 1.18 ) }
    dend_31 { pt3dadd( 11.1857, -22.5739, 6.44208, 1.4 ) }
    dend_31 { pt3dadd( 11.7177, -23.1723, 6.02531, 1.55 ) }
    dend_31 { pt3dadd( 12.2473, -23.7638, 5.67335, 1.7 ) }
    dend_31 { pt3dadd( 13.4125, -25.0411, 4.97514, 1.18 ) }
    dend_31 { pt3dadd( 14.3379, -26.0129, 4.5101, 1.18 ) }
    dend_31 { pt3dadd( 15.1782, -26.8694, 4.14857, 1.84 ) }
    dend_31 { pt3dadd( 15.6747, -27.3691, 3.98862, 1.84 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.14618, -15.9081, 12.6513, 1.18 ) }
    dend_26 { pt3dadd( 5.00112, -16.3463, 13.4627, 1.18 ) }
    dend_26 { pt3dadd( 4.67711, -17.435, 15.3973, 1.03 ) }
    dend_26 { pt3dadd( 4.51724, -18.2468, 16.8031, 1.03 ) }
    dend_26 { pt3dadd( 4.48662, -18.7114, 17.6204, 0.96 ) }
    dend_26 { pt3dadd( 4.53493, -19.1043, 18.3408, 0.96 ) }
    dend_26 { pt3dadd( 4.66186, -19.6044, 19.3253, 1.11 ) }
    dend_26 { pt3dadd( 4.87045, -20.0855, 20.3779, 1.03 ) }
    dend_26 { pt3dadd( 5.15378, -20.6118, 21.6374, 1.18 ) }
    dend_26 { pt3dadd( 5.52917, -21.2517, 23.3289, 1.84 ) }
    dend_26 { pt3dadd( 5.96562, -21.9699, 25.4536, 1.18 ) }
    dend_26 { pt3dadd( 6.23896, -22.5006, 27.1599, 1.18 ) }
    dend_26 { pt3dadd( 6.33241, -22.8626, 28.4719, 1.18 ) }
    dend_26 { pt3dadd( 6.20153, -23.2109, 29.9359, 1.33 ) }
    dend_26 { pt3dadd( 5.82792, -23.4551, 31.1848, 1.33 ) }
    dend_26 { pt3dadd( 5.47626, -23.5665, 31.8889, 1.33 ) }
    dend_26 { pt3dadd( 4.81924, -23.7, 32.9827, 1.4 ) }
    dend_26 { pt3dadd( 4.1892, -23.8048, 34.106, 1.47 ) }
    dend_26 { pt3dadd( 3.39601, -23.9345, 35.8836, 1.33 ) }
    dend_26 { pt3dadd( 2.89469, -24.0387, 37.544, 1.33 ) }
    dend_26 { pt3dadd( 2.60029, -24.1392, 38.9636, 1.4 ) }
    dend_26 { pt3dadd( 2.32518, -24.2977, 41.2242, 1.4 ) }
    dend_26 { pt3dadd( 2.18748, -24.4704, 43.5951, 1.4 ) }
    dend_26 { pt3dadd( 2.13782, -24.6604, 45.5096, 1.4 ) }
    dend_26 { pt3dadd( 2.0829, -24.9516, 47.7597, 1.4 ) }
    dend_26 { pt3dadd( 2.00285, -25.1264, 48.7181, 1.11 ) }
    dend_26 { pt3dadd( 1.61382, -25.6446, 50.9029, 1.11 ) }
    dend_26 { pt3dadd( 1.01592, -26.2206, 52.9259, 1.25 ) }
    dend_26 { pt3dadd( 0.621776, -26.5465, 53.9371, 1.55 ) }
    dend_26 { pt3dadd( -0.156196, -27.1111, 55.5378, 1.55 ) }
    dend_26 { pt3dadd( -1.14592, -27.7808, 57.2815, 1.25 ) }
    dend_26 { pt3dadd( -2.29731, -28.5169, 59.1722, 1.25 ) }
    dend_26 { pt3dadd( -3.73482, -29.431, 61.1995, 1.62 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.39324, 22.4172, -2.43627, 2.88 ) }
    dend_4 { pt3dadd( -9.99269, 24.3911, -4.3035, 2.88 ) }
    dend_4 { pt3dadd( -11.1512, 25.8208, -5.65593, 2.88 ) }
    dend_4 { pt3dadd( -12.3136, 27.2553, -7.01292, 3.47 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.39324, 22.4172, -2.43627, 2.06 ) }
    dend_1 { pt3dadd( -7.30988, 25.5295, -0.858282, 2.06 ) }
    dend_1 { pt3dadd( -6.34624, 28.3596, 0.333592, 0.96 ) }
    dend_1 { pt3dadd( -5.90193, 29.6284, 0.798159, 0.96 ) }
    dend_1 { pt3dadd( -5.26344, 31.4487, 1.36012, 0.81 ) }
    dend_1 { pt3dadd( -4.73927, 32.8999, 1.73411, 0.81 ) }
    dend_1 { pt3dadd( -4.02493, 34.8287, 2.16002, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( -3.5767, 36.0616, 2.26937, 1.11 ) }
    dend_1 { pt3dadd( -3.06743, 37.4303, 2.2669, 1.55 ) }
    dend_1 { pt3dadd( -2.42206, 39.2275, 2.2079, 1.18 ) }
    dend_1 { pt3dadd( -1.85248, 40.946, 2.11483, 0.88 ) }
    dend_1 { pt3dadd( -1.56496, 41.9396, 2.05478, 0.74 ) }
    dend_1 { pt3dadd( -1.16715, 43.6387, 1.94115, 1.18 ) }
    dend_1 { pt3dadd( -0.788267, 45.5428, 1.86145, 0.81 ) }
    dend_1 { pt3dadd( -0.385745, 47.8187, 1.80443, 0.96 ) }
    dend_1 { pt3dadd( -0.0412924, 49.8172, 1.74652, 1.25 ) }
    dend_1 { pt3dadd( 0.262942, 51.5651, 1.68852, 1.25 ) }
    dend_1 { pt3dadd( 0.597341, 53.1954, 1.62013, 0.66 ) }
    dend_1 { pt3dadd( 1.04663, 54.8881, 1.52901, 0.88 ) }
    dend_1 { pt3dadd( 1.5983, 56.3917, 1.36568, 0.52 ) }
    dend_1 { pt3dadd( 2.24054, 57.7977, 1.1328, 0.96 ) }
    dend_1 { pt3dadd( 2.69414, 58.681, 0.944164, 0.96 ) }
    dend_1 { pt3dadd( 3.63359, 60.3478, 0.566608, 0.74 ) }
    dend_1 { pt3dadd( 4.43055, 61.6607, 0.253883, 0.88 ) }
    dend_1 { pt3dadd( 5.42677, 63.266, -0.139717, 0.88 ) }
    dend_1 { pt3dadd( 6.54938, 65.1137, -0.46927, 0.96 ) }
    dend_1 { pt3dadd( 6.89774, 65.6918, -0.53139, 0.96 ) }
    dend_1 { pt3dadd( 7.84064, 67.2914, -0.58168, 0.96 ) }
    dend_1 { pt3dadd( 8.26676, 68.0286, -0.52934, 1.11 ) }
    dend_1 { pt3dadd( 8.79351, 68.9593, -0.392225, 0.96 ) }
    dend_1 { pt3dadd( 9.79569, 70.6075, 0.00212151, 0.81 ) }
    dend_1 { pt3dadd( 10.6854, 71.9829, 0.423411, 0.66 ) }
    dend_1 { pt3dadd( 11.856, 73.7838, 1.01165, 0.59 ) }
    dend_1 { pt3dadd( 12.871, 75.3239, 1.62986, 0.88 ) }
    dend_1 { pt3dadd( 13.8401, 76.7835, 2.25732, 1.4 ) }
    dend_1 { pt3dadd( 15.2865, 78.8993, 3.24277, 0.88 ) }
    dend_1 { pt3dadd( 16.5292, 80.631, 4.11956, 0.74 ) }
    dend_1 { pt3dadd( 17.2198, 81.5833, 4.64519, 0.74 ) }
    dend_1 { pt3dadd( 18.9697, 83.84, 5.9397, 0.74 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 32/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.87001, 39.7888, 0.0, 0.158847 ) }
    axon_1 { pt3dadd( -12.1498, 54.4258, 0.0, 0.158847 ) }
    axon_1 { pt3dadd( -15.4296, 69.0629, 0.0, 0.158847 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 35/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 15.6747, -27.3691, 3.98862, 1.7 ) }
    dend_35 { pt3dadd( 17.6683, -27.3356, 5.93707, 1.7 ) }
    dend_35 { pt3dadd( 19.3501, -27.4389, 7.67475, 1.25 ) }
    dend_35 { pt3dadd( 20.6387, -27.6105, 9.0659, 1.25 ) }
    dend_35 { pt3dadd( 21.9156, -27.8721, 10.4528, 1.55 ) }
    dend_35 { pt3dadd( 23.5067, -28.2936, 12.1686, 1.4 ) }
    dend_35 { pt3dadd( 24.9904, -28.7461, 13.7455, 1.62 ) }
    dend_35 { pt3dadd( 26.4245, -29.3062, 15.2132, 1.55 ) }
    dend_35 { pt3dadd( 28.0785, -30.026, 16.8732, 1.4 ) }
    dend_35 { pt3dadd( 29.4724, -30.6674, 18.2164, 1.47 ) }
    dend_35 { pt3dadd( 31.468, -31.624, 20.0504, 1.18 ) }
    dend_35 { pt3dadd( 33.3484, -32.5195, 21.6516, 1.18 ) }
    dend_35 { pt3dadd( 35.3981, -33.4734, 23.2495, 1.03 ) }
    dend_35 { pt3dadd( 37.1074, -34.2317, 24.4495, 1.03 ) }
    dend_35 { pt3dadd( 37.8296, -34.526, 24.8998, 1.25 ) }
    dend_35 { pt3dadd( 39.6487, -35.1901, 25.9343, 1.11 ) }
    dend_35 { pt3dadd( 41.241, -35.6858, 26.8583, 1.33 ) }
    dend_35 { pt3dadd( 42.2501, -35.9586, 27.4409, 1.62 ) }
    dend_35 { pt3dadd( 44.5711, -36.5437, 28.774, 1.33 ) }
    dend_35 { pt3dadd( 46.863, -37.0689, 30.0972, 1.25 ) }
    dend_35 { pt3dadd( 48.8403, -37.4547, 31.2667, 1.18 ) }
    dend_35 { pt3dadd( 52.2448, -37.9821, 33.3258, 1.47 ) }
    dend_35 { pt3dadd( 53.2258, -38.108, 33.954, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 15.6747, -27.3691, 3.98862, 0.88 ) }
    dend_32 { pt3dadd( 15.8213, -28.271, 4.72896, 0.88 ) }
    dend_32 { pt3dadd( 15.9319, -29.581, 5.93011, 0.74 ) }
    dend_32 { pt3dadd( 15.9826, -30.9033, 7.26104, 0.74 ) }
    dend_32 { pt3dadd( 15.9815, -31.933, 8.29667, 0.74 ) }
    dend_32 { pt3dadd( 15.9364, -33.0371, 9.38519, 0.96 ) }
    dend_32 { pt3dadd( 15.8518, -34.14, 10.4398, 1.7 ) }
    dend_32 { pt3dadd( 15.6054, -35.776, 12.0299, 0.66 ) }
    dend_32 { pt3dadd( 15.3333, -36.9161, 13.073, 0.74 ) }
    dend_32 { pt3dadd( 15.0582, -37.7974, 13.7284, 0.88 ) }
    dend_32 { pt3dadd( 14.748, -38.631, 14.1815, 1.11 ) }
    dend_32 { pt3dadd( 14.3299, -39.6734, 14.5489, 1.33 ) }
    dend_32 { pt3dadd( 13.7482, -41.1214, 14.8485, 0.74 ) }
    dend_32 { pt3dadd( 13.2313, -42.5058, 14.979, 0.74 ) }
    dend_32 { pt3dadd( 12.8891, -43.4974, 14.9887, 0.59 ) }
    dend_32 { pt3dadd( 12.3404, -45.2557, 14.9502, 0.88 ) }
    dend_32 { pt3dadd( 11.917, -46.7928, 14.8923, 0.59 ) }
    dend_32 { pt3dadd( 11.7101, -47.6081, 14.8482, 0.59 ) }
    dend_32 { pt3dadd( 11.3782, -49.0976, 14.7658, 0.81 ) }
    dend_32 { pt3dadd( 11.0061, -50.9983, 14.7178, 0.74 ) }
    dend_32 { pt3dadd( 10.8309, -51.9536, 14.6934, 0.59 ) }
    dend_32 { pt3dadd( 10.6414, -53.196, 14.6956, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.73482, -29.431, 61.1995, 0.52 ) }
    dend_30 { pt3dadd( -4.05928, -28.6986, 64.5552, 0.52 ) }
    dend_30 { pt3dadd( -4.15718, -28.3138, 66.2069, 0.52 ) }
    dend_30 { pt3dadd( -4.21349, -27.9964, 67.5035, 0.52 ) }
    dend_30 { pt3dadd( -4.2441, -27.7441, 68.5676, 0.52 ) }
    dend_30 { pt3dadd( -4.3034, -27.3415, 70.1737, 0.52 ) }
    dend_30 { pt3dadd( -4.35762, -27.0441, 71.3107, 0.52 ) }
    dend_30 { pt3dadd( -4.42973, -26.7278, 72.3494, 0.52 ) }
    dend_30 { pt3dadd( -4.5668, -26.216, 73.9294, 0.52 ) }
    dend_30 { pt3dadd( -4.80393, -25.5242, 75.8831, 0.52 ) }
    dend_30 { pt3dadd( -5.02577, -25.0129, 77.2059, 0.81 ) }
    dend_30 { pt3dadd( -5.28872, -24.4807, 78.3942, 0.81 ) }
    dend_30 { pt3dadd( -5.51909, -23.9963, 79.3223, 0.59 ) }
    dend_30 { pt3dadd( -5.99283, -22.8965, 81.2096, 0.59 ) }
    dend_30 { pt3dadd( -6.30302, -21.9858, 82.5959, 0.52 ) }
    dend_30 { pt3dadd( -6.53841, -21.1156, 83.7568, 0.37 ) }
    dend_30 { pt3dadd( -6.77131, -19.8715, 85.3259, 0.44 ) }
    dend_30 { pt3dadd( -6.92906, -18.569, 86.8283, 0.29 ) }
    dend_30 { pt3dadd( -6.98909, -17.4611, 88.0576, 0.29 ) }
    dend_30 { pt3dadd( -7.01435, -16.0589, 89.4534, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -7.00632, -14.9125, 90.5549, 0.29 ) }
    dend_30 { pt3dadd( -6.97274, -13.2021, 92.1412, 0.29 ) }
    dend_30 { pt3dadd( -6.94753, -12.3055, 92.9655, 0.29 ) }
    dend_30 { pt3dadd( -6.90432, -10.4032, 94.7097, 0.29 ) }
    dend_30 { pt3dadd( -6.88289, -9.1539, 95.8344, 0.22 ) }
    dend_30 { pt3dadd( -6.86635, -7.13091, 97.6764, 0.22 ) }
    dend_30 { pt3dadd( -6.85683, -6.22135, 98.53, 0.22 ) }
    dend_30 { pt3dadd( -6.86979, -4.65536, 99.9857, 0.22 ) }
    dend_30 { pt3dadd( -6.90499, -2.8696, 101.739, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 9/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -3.73482, -29.431, 61.1995, 1.03 ) }
    dend_27 { pt3dadd( -3.85559, -30.3378, 61.2749, 1.03 ) }
    dend_27 { pt3dadd( -4.01671, -31.5971, 61.5315, 0.74 ) }
    dend_27 { pt3dadd( -4.18111, -33.0797, 61.9014, 0.74 ) }
    dend_27 { pt3dadd( -4.29579, -34.2632, 62.211, 0.88 ) }
    dend_27 { pt3dadd( -4.4286, -35.8644, 62.5711, 0.96 ) }
    dend_27 { pt3dadd( -4.48557, -36.6882, 62.7336, 0.96 ) }
    dend_27 { pt3dadd( -4.58606, -38.9284, 63.1366, 1.03 ) }
    dend_27 { pt3dadd( -4.6276, -40.4295, 63.3827, 0.66 ) }
    dend_27 { pt3dadd( -4.63301, -41.6351, 63.5704, 0.52 ) }
    dend_27 { pt3dadd( -4.58478, -43.1746, 63.7834, 0.66 ) }
    dend_27 { pt3dadd( -4.48791, -44.4685, 63.9272, 0.96 ) }
    dend_27 { pt3dadd( -4.38548, -45.8442, 64.0353, 1.11 ) }
    dend_27 { pt3dadd( -4.34129, -46.3798, 64.0537, 1.11 ) }
    dend_27 { pt3dadd( -4.19836, -47.7587, 64.1307, 0.66 ) }
    dend_27 { pt3dadd( -4.10157, -48.5922, 64.1959, 0.66 ) }
    dend_27 { pt3dadd( -3.95605, -49.7637, 64.313, 0.66 ) }
    dend_27 { pt3dadd( -3.7801, -51.1661, 64.5131, 0.88 ) }
    dend_27 { pt3dadd( -3.59202, -52.7158, 64.8128, 0.81 ) }
    dend_27 { pt3dadd( -3.39222, -54.4801, 65.277, 0.74 ) }
    dend_27 { pt3dadd( -3.23662, -56.072, 65.7813, 0.66 ) }
    dend_27 { pt3dadd( -3.11087, -57.5834, 66.3472, 0.52 ) }
    dend_27 { pt3dadd( -2.96348, -59.5826, 67.1755, 0.52 ) }
    dend_27 { pt3dadd( -2.88027, -60.7338, 67.7163, 0.52 ) }
    dend_27 { pt3dadd( -2.82555, -62.3001, 68.4996, 0.52 ) }
    dend_27 { pt3dadd( -2.81545, -63.3352, 69.0228, 0.66 ) }
    dend_27 { pt3dadd( -2.81179, -64.4766, 69.5792, 0.96 ) }
    dend_27 { pt3dadd( -2.80021, -66.1045, 70.3113, 1.03 ) }
    dend_27 { pt3dadd( -2.77036, -67.8355, 70.9415, 0.74 ) }
    dend_27 { pt3dadd( -2.72224, -69.4535, 71.4291, 0.44 ) }
    dend_27 { pt3dadd( -2.67539, -70.489, 71.6874, 0.22 ) }
    dend_27 { pt3dadd( -2.6467, -70.9568, 71.7941, 0.22 ) }
    dend_27 { pt3dadd( -2.54779, -72.129, 72.0203, 0.52 ) }
    dend_27 { pt3dadd( -2.38492, -73.5578, 72.1861, 0.52 ) }
    dend_27 { pt3dadd( -2.12143, -75.2963, 72.2458, 0.22 ) }
    dend_27 { pt3dadd( -1.94823, -76.202, 72.2879, 0.22 ) }
    dend_27 { pt3dadd( -1.6971, -77.4123, 72.3994, 0.66 ) }
    dend_27 { pt3dadd( -1.31295, -79.1164, 72.6104, 0.66 ) }
    dend_27 { pt3dadd( -0.899018, -80.7703, 72.8533, 0.37 ) }
    dend_27 { pt3dadd( -0.544349, -82.0307, 73.1234, 0.22 ) }
    dend_27 { pt3dadd( 0.0514511, -84.096, 73.6805, 0.29 ) }
    dend_27 { pt3dadd( 0.410464, -85.456, 73.9572, 0.29 ) }
    dend_27 { pt3dadd( 0.577703, -86.1492, 74.0579, 0.66 ) }
    dend_27 { pt3dadd( 0.827571, -87.2494, 74.1469, 0.96 ) }
    dend_27 { pt3dadd( 1.20493, -89.0271, 74.1899, 0.96 ) }
    dend_27 { pt3dadd( 1.5257, -90.5955, 74.0832, 0.37 ) }
    dend_27 { pt3dadd( 2.13681, -93.7929, 73.6323, 0.44 ) }
    dend_27 { pt3dadd( 2.29399, -94.7273, 73.4907, 0.44 ) }
    dend_27 { pt3dadd( 2.56254, -96.5472, 73.286, 0.52 ) }
    dend_27 { pt3dadd( 2.79181, -98.2897, 73.1564, 0.44 ) }
    dend_27 { pt3dadd( 2.94373, -99.5364, 73.1218, 0.44 ) }
    dend_27 { pt3dadd( 3.16198, -101.358, 73.2117, 0.44 ) }
    dend_27 { pt3dadd( 3.40518, -103.375, 73.5448, 0.44 ) }
    dend_27 { pt3dadd( 3.57903, -104.993, 73.8705, 0.44 ) }
    dend_27 { pt3dadd( 3.68229, -106.179, 74.1468, 0.44 ) }
    dend_27 { pt3dadd( 3.77421, -107.307, 74.4289, 0.44 ) }
    dend_27 { pt3dadd( 3.83117, -108.522, 74.7564, 0.52 ) }
    dend_27 { pt3dadd( 3.84493, -110.006, 75.1668, 0.52 ) }
    dend_27 { pt3dadd( 3.82693, -110.898, 75.4035, 0.52 ) }
    dend_27 { pt3dadd( 3.71672, -112.9, 75.8708, 0.22 ) }
    dend_27 { pt3dadd( 3.6168, -114.54, 76.2066, 0.22 ) }
    dend_27 { pt3dadd( 3.52252, -116.017, 76.4663, 0.22 ) }
    dend_27 { pt3dadd( 3.42049, -117.559, 76.6923, 0.29 ) }
    dend_27 { pt3dadd( 3.34586, -119.003, 76.8165, 0.29 ) }
    dend_27 { pt3dadd( 3.31076, -120.679, 77.0387, 0.29 ) }
    dend_27 { pt3dadd( 3.33676, -122.794, 77.4008, 0.22 ) }
    dend_27 { pt3dadd( 3.37306, -123.627, 77.5668, 0.29 ) }
    dend_27 { pt3dadd( 3.49633, -125.19, 77.904, 0.37 ) }
    dend_27 { pt3dadd( 3.67999, -127.024, 78.3333, 0.37 ) }
    dend_27 { pt3dadd( 3.99269, -130.079, 79.0006, 0.22 ) }
    dend_27 { pt3dadd( 4.09827, -131.05, 79.1946, 0.22 ) }
    dend_27 { pt3dadd( 4.21002, -132.177, 79.3921, 0.37 ) }
    dend_27 { pt3dadd( 4.32468, -133.452, 79.5708, 0.37 ) }
    dend_27 { pt3dadd( 4.51167, -135.644, 79.8344, 0.29 ) }
    dend_27 { pt3dadd( 4.6184, -137.111, 79.9801, 0.22 ) }
    dend_27 { pt3dadd( 4.69348, -138.294, 80.0322, 0.22 ) }
    dend_27 { pt3dadd( 4.76983, -139.579, 80.1701, 0.29 ) }
    dend_27 { pt3dadd( 4.85004, -141.244, 80.4515, 0.29 ) }
    dend_27 { pt3dadd( 4.89969, -142.646, 80.8515, 0.29 ) }
    dend_27 { pt3dadd( 4.91855, -143.676, 81.21, 0.29 ) }
    dend_27 { pt3dadd( 4.94938, -145.58, 81.9999, 0.15 ) }
    dend_27 { pt3dadd( 4.96173, -147.424, 82.8525, 0.15 ) }
    dend_27 { pt3dadd( 4.96929, -148.273, 83.2944, 0.37 ) }
    dend_27 { pt3dadd( 5.01327, -150.514, 84.6199, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -12.3136, 27.2553, -7.01292, 2.8 ) }
    dend_10 { pt3dadd( -13.9188, 27.4935, -7.77388, 2.8 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.3136, 27.2553, -7.01292, 1.77 ) }
    dend_5 { pt3dadd( -11.9852, 29.013, -8.45321, 1.77 ) }
    dend_5 { pt3dadd( -11.622, 31.4027, -10.5192, 1.4 ) }
    dend_5 { pt3dadd( -11.3803, 33.2727, -12.1543, 1.4 ) }
    dend_5 { pt3dadd( -11.2412, 34.4725, -13.2327, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -11.0893, 36.042, -14.6925, 1.84 ) }
    dend_5 { pt3dadd( -10.9337, 37.8816, -16.4208, 1.84 ) }
    dend_5 { pt3dadd( -10.8441, 39.5817, -18.1002, 1.4 ) }
    dend_5 { pt3dadd( -10.7735, 41.3845, -19.8473, 1.84 ) }
    dend_5 { pt3dadd( -10.7152, 43.5085, -21.7768, 1.62 ) }
    dend_5 { pt3dadd( -10.6795, 46.07, -23.9271, 1.77 ) }
    dend_5 { pt3dadd( -10.7133, 47.5038, -24.9806, 1.77 ) }
    dend_5 { pt3dadd( -10.8685, 49.7899, -26.4874, 1.62 ) }
    dend_5 { pt3dadd( -11.032, 51.2315, -27.3425, 1.62 ) }
    dend_5 { pt3dadd( -11.415, 53.5894, -28.6332, 1.47 ) }
    dend_5 { pt3dadd( -11.7485, 55.1874, -29.4312, 1.47 ) }
    dend_5 { pt3dadd( -12.4397, 58.1309, -30.8431, 1.4 ) }
    dend_5 { pt3dadd( -12.9807, 60.3758, -31.945, 1.47 ) }
    dend_5 { pt3dadd( -13.4468, 62.459, -33.0287, 1.55 ) }
    dend_5 { pt3dadd( -13.6579, 63.6788, -33.738, 1.55 ) }
    dend_5 { pt3dadd( -13.8762, 65.8989, -35.1264, 1.25 ) }
    dend_5 { pt3dadd( -13.8967, 68.0867, -36.5238, 1.25 ) }
    dend_5 { pt3dadd( -13.7379, 69.8585, -37.6233, 1.4 ) }
    dend_5 { pt3dadd( -13.4368, 71.7288, -38.6935, 1.25 ) }
    dend_5 { pt3dadd( -12.9722, 73.9412, -39.794, 1.25 ) }
    dend_5 { pt3dadd( -12.6406, 75.5186, -40.4329, 1.25 ) }
    dend_5 { pt3dadd( -12.2558, 77.3981, -41.1261, 1.47 ) }
    dend_5 { pt3dadd( -12.0916, 78.4847, -41.4761, 1.62 ) }
    dend_5 { pt3dadd( -12.0075, 79.8505, -41.8535, 1.33 ) }
    dend_5 { pt3dadd( -12.1245, 82.8036, -42.5296, 1.11 ) }
    dend_5 { pt3dadd( -12.3757, 84.5911, -42.9514, 1.11 ) }
    dend_5 { pt3dadd( -12.772, 86.6992, -43.4966, 1.25 ) }
    dend_5 { pt3dadd( -13.05, 87.8786, -43.8415, 1.47 ) }
    dend_5 { pt3dadd( -13.5564, 89.72, -44.4299, 1.4 ) }
    dend_5 { pt3dadd( -14.11, 91.4146, -45.0222, 1.25 ) }
    dend_5 { pt3dadd( -15.1079, 93.7118, -45.8741, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 18.9697, 83.84, 5.9397, 0.15 ) }
    dend_3 { pt3dadd( 19.2253, 84.1314, 9.75248, 0.15 ) }
    dend_3 { pt3dadd( 19.3582, 84.3314, 11.5515, 0.15 ) }
    dend_3 { pt3dadd( 19.4469, 84.5198, 12.6492, 0.29 ) }
    dend_3 { pt3dadd( 19.7327, 85.213, 15.4905, 0.22 ) }
    dend_3 { pt3dadd( 20.0176, 85.9259, 17.8496, 0.22 ) }
    dend_3 { pt3dadd( 20.2766, 86.6343, 19.7571, 0.37 ) }
    dend_3 { pt3dadd( 20.3394, 86.7949, 20.1187, 0.81 ) }
    dend_3 { pt3dadd( 20.5443, 87.4295, 21.1072, 0.15 ) }
    dend_3 { pt3dadd( 20.8438, 88.4477, 22.2847, 0.22 ) }
    dend_3 { pt3dadd( 20.9695, 88.8758, 22.6834, 0.59 ) }
    dend_3 { pt3dadd( 21.2169, 89.6723, 23.4264, 1.03 ) }
    dend_3 { pt3dadd( 21.6246, 91.1009, 24.9083, 0.15 ) }
    dend_3 { pt3dadd( 21.7623, 91.6129, 25.5734, 0.29 ) }
    dend_3 { pt3dadd( 22.0322, 92.6563, 27.3637, 0.22 ) }
    dend_3 { pt3dadd( 22.2559, 93.6875, 29.5285, 0.37 ) }
    dend_3 { pt3dadd( 22.3595, 94.2294, 30.8972, 0.37 ) }
    dend_3 { pt3dadd( 22.4363, 94.5907, 32.0822, 0.44 ) }
    dend_3 { pt3dadd( 22.5347, 95.1052, 34.2317, 0.37 ) }
    dend_3 { pt3dadd( 22.6173, 95.5763, 36.4423, 0.37 ) }
    dend_3 { pt3dadd( 22.6346, 95.8475, 37.8651, 0.37 ) }
    dend_3 { pt3dadd( 22.6264, 96.1656, 39.6869, 0.37 ) }
    dend_3 { pt3dadd( 22.6542, 96.6398, 42.4929, 0.37 ) }
    dend_3 { pt3dadd( 22.7884, 97.1619, 45.5397, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 55/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 18.9697, 83.84, 5.9397, 0.96 ) }
    dend_2 { pt3dadd( 20.4202, 85.5085, 5.05274, 0.96 ) }
    dend_2 { pt3dadd( 20.9114, 86.0838, 4.80435, 0.88 ) }
    dend_2 { pt3dadd( 21.793, 87.1115, 4.43027, 0.74 ) }
    dend_2 { pt3dadd( 22.7796, 88.2793, 4.07878, 0.96 ) }
    dend_2 { pt3dadd( 23.6747, 89.3506, 3.74811, 0.81 ) }
    dend_2 { pt3dadd( 24.4678, 90.3169, 3.44098, 0.44 ) }
    dend_2 { pt3dadd( 25.2159, 91.3154, 3.17624, 0.44 ) }
    dend_2 { pt3dadd( 25.7591, 92.0964, 2.93212, 0.66 ) }
    dend_2 { pt3dadd( 26.6136, 93.419, 2.4744, 0.52 ) }
    dend_2 { pt3dadd( 27.2885, 94.532, 2.04645, 0.74 ) }
    dend_2 { pt3dadd( 27.8446, 95.4838, 1.62081, 1.11 ) }
    dend_2 { pt3dadd( 28.3422, 96.4144, 1.18442, 0.66 ) }
    dend_2 { pt3dadd( 29.0423, 97.8007, 0.541422, 0.66 ) }
    dend_2 { pt3dadd( 29.5003, 98.731, 0.129266, 0.66 ) }
    dend_2 { pt3dadd( 30.0947, 99.9242, -0.331434, 0.81 ) }
    dend_2 { pt3dadd( 30.5351, 100.781, -0.583186, 0.59 ) }
    dend_2 { pt3dadd( 31.2302, 102.064, -0.927986, 0.52 ) }
    dend_2 { pt3dadd( 31.7426, 103.001, -1.16492, 0.52 ) }
    dend_2 { pt3dadd( 32.0575, 103.571, -1.29044, 0.52 ) }
    dend_2 { pt3dadd( 32.6665, 104.708, -1.49423, 0.66 ) }
    dend_2 { pt3dadd( 33.1908, 105.685, -1.6152, 0.88 ) }
    dend_2 { pt3dadd( 33.8898, 106.907, -1.73394, 1.03 ) }
    dend_2 { pt3dadd( 34.6537, 108.147, -1.8192, 0.52 ) }
    dend_2 { pt3dadd( 35.3053, 109.191, -1.86058, 0.29 ) }
    dend_2 { pt3dadd( 35.9282, 110.159, -1.86648, 0.29 ) }
    dend_2 { pt3dadd( 36.6462, 111.297, -1.76678, 0.52 ) }
    dend_2 { pt3dadd( 37.3823, 112.461, -1.54843, 0.22 ) }
    dend_2 { pt3dadd( 37.7721, 113.086, -1.37675, 0.15 ) }
    dend_2 { pt3dadd( 38.2328, 113.861, -1.15128, 0.66 ) }
    dend_2 { pt3dadd( 38.7402, 114.895, -0.842447, 0.29 ) }
    dend_2 { pt3dadd( 39.2403, 116.273, -0.390364, 0.52 ) }
    dend_2 { pt3dadd( 39.4282, 116.978, -0.132078, 1.03 ) }
    dend_2 { pt3dadd( 39.6735, 118.05, 0.292051, 0.37 ) }
    dend_2 { pt3dadd( 39.9102, 118.979, 0.620198, 0.44 ) }
    dend_2 { pt3dadd( 40.3897, 120.575, 1.04963, 0.59 ) }
    dend_2 { pt3dadd( 40.9088, 122.17, 1.30114, 0.88 ) }
    dend_2 { pt3dadd( 41.235, 123.098, 1.33491, 0.88 ) }
    dend_2 { pt3dadd( 41.5345, 123.923, 1.30727, 0.66 ) }
    dend_2 { pt3dadd( 42.2528, 125.683, 1.04747, 0.29 ) }
    dend_2 { pt3dadd( 42.8478, 126.968, 0.694423, 0.66 ) }
    dend_2 { pt3dadd( 43.3463, 127.949, 0.3031, 0.44 ) }
    dend_2 { pt3dadd( 43.6685, 128.598, 0.00879109, 0.44 ) }
    dend_2 { pt3dadd( 44.1391, 129.661, -0.441941, 0.22 ) }
    dend_2 { pt3dadd( 44.575, 130.774, -0.840025, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( 44.8736, 131.627, -1.00352, 0.66 ) }
    dend_2 { pt3dadd( 45.1137, 132.317, -1.05458, 0.88 ) }
    dend_2 { pt3dadd( 45.5345, 133.496, -1.04068, 0.52 ) }
    dend_2 { pt3dadd( 45.867, 134.444, -0.906965, 0.52 ) }
    dend_2 { pt3dadd( 46.2879, 135.725, -0.549246, 0.52 ) }
    dend_2 { pt3dadd( 46.8507, 137.552, 0.148935, 0.52 ) }
    dend_2 { pt3dadd( 47.1392, 138.482, 0.571616, 0.96 ) }
    dend_2 { pt3dadd( 47.5354, 139.671, 1.18216, 0.66 ) }
    dend_2 { pt3dadd( 48.0738, 141.086, 1.9673, 0.22 ) }
    dend_2 { pt3dadd( 48.3765, 141.81, 2.3734, 0.22 ) }
    dend_2 { pt3dadd( 48.7322, 142.593, 2.77282, 0.29 ) }
    dend_2 { pt3dadd( 49.2649, 143.644, 3.19108, 0.37 ) }
    dend_2 { pt3dadd( 49.9999, 144.885, 3.54782, 0.52 ) }
    dend_2 { pt3dadd( 50.6075, 145.735, 3.6921, 0.81 ) }
    dend_2 { pt3dadd( 51.1696, 146.409, 3.68542, 0.81 ) }
    dend_2 { pt3dadd( 52.2215, 147.557, 3.50919, 0.22 ) }
    dend_2 { pt3dadd( 52.952, 148.327, 3.38392, 0.59 ) }
    dend_2 { pt3dadd( 54.0268, 149.441, 3.17794, 0.59 ) }
    dend_2 { pt3dadd( 54.9119, 150.361, 3.01125, 0.22 ) }
    dend_2 { pt3dadd( 56.0264, 151.584, 2.84652, 0.15 ) }
    dend_2 { pt3dadd( 56.8107, 152.548, 2.76943, 0.15 ) }
    dend_2 { pt3dadd( 58.0561, 154.376, 2.90634, 0.59 ) }
    dend_2 { pt3dadd( 58.4518, 155.079, 3.05635, 0.59 ) }
    dend_2 { pt3dadd( 58.9036, 156.045, 3.35145, 0.59 ) }
    dend_2 { pt3dadd( 59.2774, 156.946, 3.65286, 0.29 ) }
    dend_2 { pt3dadd( 59.6873, 157.976, 4.01969, 0.22 ) }
    dend_2 { pt3dadd( 60.4852, 159.857, 4.60745, 0.22 ) }
    dend_2 { pt3dadd( 60.7464, 160.41, 4.71429, 0.22 ) }
    dend_2 { pt3dadd( 61.2379, 161.369, 4.86157, 0.52 ) }
    dend_2 { pt3dadd( 61.8318, 162.459, 4.97706, 0.59 ) }
    dend_2 { pt3dadd( 62.2142, 163.129, 5.00807, 0.59 ) }
    dend_2 { pt3dadd( 62.9477, 164.365, 5.0386, 0.29 ) }
    dend_2 { pt3dadd( 63.447, 165.229, 5.02287, 0.29 ) }
    dend_2 { pt3dadd( 64.0526, 166.404, 5.02888, 0.37 ) }
    dend_2 { pt3dadd( 64.3957, 167.187, 5.05114, 0.29 ) }
    dend_2 { pt3dadd( 64.7129, 168.143, 5.1623, 0.44 ) }
    dend_2 { pt3dadd( 65.1397, 169.745, 5.43456, 0.44 ) }
    dend_2 { pt3dadd( 65.4085, 170.89, 5.65736, 0.66 ) }
    dend_2 { pt3dadd( 65.6563, 171.957, 5.883, 0.88 ) }
    dend_2 { pt3dadd( 65.9836, 173.367, 6.16947, 0.66 ) }
    dend_2 { pt3dadd( 66.6957, 175.991, 6.6693, 0.37 ) }
    dend_2 { pt3dadd( 67.1142, 177.288, 6.93729, 0.22 ) }
    dend_2 { pt3dadd( 67.5441, 178.453, 7.13417, 0.52 ) }
    dend_2 { pt3dadd( 67.8766, 179.203, 7.24007, 0.59 ) }
    dend_2 { pt3dadd( 68.418, 180.226, 7.31335, 0.29 ) }
    dend_2 { pt3dadd( 69.0053, 181.228, 7.36376, 0.22 ) }
    dend_2 { pt3dadd( 70.0933, 183.024, 7.41784, 0.15 ) }
    dend_2 { pt3dadd( 70.9055, 184.452, 7.54506, 0.37 ) }
    dend_2 { pt3dadd( 71.3816, 185.372, 7.66849, 0.37 ) }
    dend_2 { pt3dadd( 71.8616, 186.411, 7.81876, 0.37 ) }
    dend_2 { pt3dadd( 72.8352, 188.635, 8.1433, 0.81 ) }
    dend_2 { pt3dadd( 73.3175, 189.808, 8.31878, 0.96 ) }
    dend_2 { pt3dadd( 73.6886, 190.736, 8.44485, 0.52 ) }
    dend_2 { pt3dadd( 74.1038, 191.853, 8.65604, 0.22 ) }
    dend_2 { pt3dadd( 74.5927, 193.302, 8.93381, 0.29 ) }
    dend_2 { pt3dadd( 75.0763, 194.773, 9.17886, 0.22 ) }
    dend_2 { pt3dadd( 75.4804, 195.972, 9.31238, 0.74 ) }
    dend_2 { pt3dadd( 76.0708, 197.723, 9.50677, 0.29 ) }
    dend_2 { pt3dadd( 76.7088, 199.651, 9.78692, 0.52 ) }
    dend_2 { pt3dadd( 77.0548, 200.69, 9.97267, 0.59 ) }
    dend_2 { pt3dadd( 77.446, 201.895, 10.2148, 0.29 ) }
    dend_2 { pt3dadd( 77.7057, 202.774, 10.3626, 0.29 ) }
    dend_2 { pt3dadd( 77.9996, 203.854, 10.5527, 0.29 ) }
    dend_2 { pt3dadd( 78.2803, 204.936, 10.8154, 0.66 ) }
    dend_2 { pt3dadd( 78.495, 205.726, 11.0481, 0.96 ) }
    dend_2 { pt3dadd( 78.7305, 206.63, 11.4324, 0.37 ) }
    dend_2 { pt3dadd( 79.0482, 207.97, 12.1096, 0.29 ) }
    dend_2 { pt3dadd( 79.3558, 209.613, 12.9709, 0.37 ) }
    dend_2 { pt3dadd( 79.5731, 211.115, 13.7603, 0.66 ) }
    dend_2 { pt3dadd( 79.6844, 212.011, 14.212, 0.44 ) }
    dend_2 { pt3dadd( 79.8877, 213.653, 15.0037, 0.88 ) }
    dend_2 { pt3dadd( 80.0194, 214.662, 15.459, 1.11 ) }
    dend_2 { pt3dadd( 80.2569, 216.561, 16.2311, 0.22 ) }
    dend_2 { pt3dadd( 80.3721, 217.486, 16.4784, 0.22 ) }
    dend_2 { pt3dadd( 80.4797, 218.421, 16.6383, 0.15 ) }
    dend_2 { pt3dadd( 80.5685, 219.494, 16.7493, 0.15 ) }
    dend_2 { pt3dadd( 80.6199, 220.275, 16.7826, 0.15 ) }
    dend_2 { pt3dadd( 80.6836, 221.529, 16.8465, 0.37 ) }
    dend_2 { pt3dadd( 80.7604, 222.788, 16.9192, 0.37 ) }
    dend_2 { pt3dadd( 80.8025, 223.563, 16.9752, 0.22 ) }
    dend_2 { pt3dadd( 80.8691, 224.709, 17.0657, 0.44 ) }
    dend_2 { pt3dadd( 80.912, 225.328, 17.1112, 0.44 ) }
    dend_2 { pt3dadd( 80.9982, 226.207, 17.1647, 0.44 ) }
    dend_2 { pt3dadd( 81.1148, 226.974, 17.1749, 0.66 ) }
    dend_2 { pt3dadd( 81.2972, 227.821, 17.2045, 0.37 ) }
    dend_2 { pt3dadd( 81.5708, 228.778, 17.2472, 0.37 ) }
    dend_2 { pt3dadd( 81.9493, 229.795, 17.2975, 0.22 ) }
    dend_2 { pt3dadd( 82.1357, 230.236, 17.3139, 0.22 ) }
    dend_2 { pt3dadd( 82.6341, 231.372, 17.3431, 0.22 ) }
    dend_2 { pt3dadd( 83.304, 232.845, 17.3108, 0.52 ) }
    dend_2 { pt3dadd( 83.6967, 233.7, 17.2581, 0.96 ) }
    dend_2 { pt3dadd( 83.9776, 234.329, 17.1962, 0.96 ) }
    dend_2 { pt3dadd( 84.516, 235.58, 17.0329, 0.22 ) }
    dend_2 { pt3dadd( 84.9135, 236.588, 16.8611, 0.29 ) }
    dend_2 { pt3dadd( 85.3582, 237.845, 16.5624, 0.29 ) }
    dend_2 { pt3dadd( 85.5917, 238.58, 16.3297, 0.81 ) }
    dend_2 { pt3dadd( 85.7849, 239.226, 16.1118, 0.52 ) }
    dend_2 { pt3dadd( 86.0785, 240.276, 15.7234, 0.37 ) }
    dend_2 { pt3dadd( 86.2703, 240.996, 15.368, 0.37 ) }
    dend_2 { pt3dadd( 86.4979, 241.913, 14.8578, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 86.6606, 242.608, 14.4639, 0.74 ) }
    dend_2 { pt3dadd( 86.8689, 243.468, 13.9425, 0.29 ) }
    dend_2 { pt3dadd( 87.0713, 244.315, 13.4199, 0.37 ) }
    dend_2 { pt3dadd( 87.512, 246.196, 12.2929, 0.37 ) }
    dend_2 { pt3dadd( 87.7362, 247.107, 11.7498, 0.52 ) }
    dend_2 { pt3dadd( 87.9338, 247.818, 11.3598, 0.52 ) }
    dend_2 { pt3dadd( 88.1469, 248.374, 11.0604, 0.52 ) }
    dend_2 { pt3dadd( 88.5397, 249.174, 10.7313, 0.59 ) }
    dend_2 { pt3dadd( 88.9918, 249.967, 10.5094, 0.22 ) }
    dend_2 { pt3dadd( 89.8094, 251.258, 10.3629, 0.44 ) }
    dend_2 { pt3dadd( 90.5614, 252.303, 10.3225, 0.52 ) }
    dend_2 { pt3dadd( 91.8445, 253.936, 10.4563, 0.29 ) }
    dend_2 { pt3dadd( 93.0766, 255.357, 10.8361, 0.44 ) }
    dend_2 { pt3dadd( 93.8269, 256.169, 11.2525, 0.44 ) }
    dend_2 { pt3dadd( 94.7692, 257.198, 12.0874, 0.44 ) }
    dend_2 { pt3dadd( 95.37, 257.9, 12.7991, 0.44 ) }
    dend_2 { pt3dadd( 96.02, 258.77, 13.7964, 0.44 ) }
    dend_2 { pt3dadd( 96.7039, 259.833, 15.0926, 0.22 ) }
    dend_2 { pt3dadd( 97.2609, 260.806, 16.2708, 0.74 ) }
    dend_2 { pt3dadd( 97.8143, 261.965, 17.6038, 0.74 ) }
    dend_2 { pt3dadd( 98.1183, 262.808, 18.4475, 0.59 ) }
    dend_2 { pt3dadd( 98.4354, 264.026, 19.5115, 0.22 ) }
    dend_2 { pt3dadd( 98.5379, 264.54, 19.8804, 0.15 ) }
    dend_2 { pt3dadd( 98.6702, 265.544, 20.4368, 0.29 ) }
    dend_2 { pt3dadd( 98.7759, 266.724, 20.9326, 0.29 ) }
    dend_2 { pt3dadd( 98.8371, 267.898, 21.3025, 0.29 ) }
    dend_2 { pt3dadd( 98.848, 268.582, 21.5008, 0.52 ) }
    dend_2 { pt3dadd( 98.8474, 269.346, 21.6766, 0.88 ) }
    dend_2 { pt3dadd( 98.8137, 270.665, 21.939, 0.52 ) }
    dend_2 { pt3dadd( 98.7855, 271.55, 21.9965, 0.52 ) }
    dend_2 { pt3dadd( 98.7427, 272.484, 21.9414, 0.22 ) }
    dend_2 { pt3dadd( 98.6603, 273.514, 21.8389, 0.22 ) }
    dend_2 { pt3dadd( 98.5959, 274.201, 21.7624, 0.52 ) }
    dend_2 { pt3dadd( 98.5405, 274.747, 21.6924, 0.81 ) }
    dend_2 { pt3dadd( 98.319, 276.919, 21.3674, 0.22 ) }
    dend_2 { pt3dadd( 98.188, 277.98, 21.1956, 0.22 ) }
    dend_2 { pt3dadd( 97.9201, 279.88, 20.8774, 0.22 ) }
    dend_2 { pt3dadd( 97.8669, 280.257, 20.794, 0.37 ) }
    dend_2 { pt3dadd( 97.7757, 280.966, 20.6388, 0.96 ) }
    dend_2 { pt3dadd( 97.7457, 281.248, 20.5835, 0.96 ) }
    dend_2 { pt3dadd( 97.6486, 282.427, 20.4015, 0.22 ) }
    dend_2 { pt3dadd( 97.6364, 282.746, 20.3463, 0.22 ) }
    dend_2 { pt3dadd( 97.6444, 283.933, 20.1112, 0.37 ) }
    dend_2 { pt3dadd( 97.6704, 284.696, 20.0293, 0.88 ) }
    dend_2 { pt3dadd( 97.7764, 286.256, 19.9692, 0.22 ) }
    dend_2 { pt3dadd( 97.8543, 286.959, 19.9813, 0.37 ) }
    dend_2 { pt3dadd( 98.0671, 288.434, 20.1044, 0.66 ) }
    dend_2 { pt3dadd( 98.2318, 289.586, 20.3024, 0.22 ) }
    dend_2 { pt3dadd( 98.4131, 290.899, 20.637, 0.66 ) }
    dend_2 { pt3dadd( 98.5038, 291.592, 20.8548, 0.66 ) }
    dend_2 { pt3dadd( 98.6305, 292.647, 21.2911, 0.44 ) }
    dend_2 { pt3dadd( 98.6746, 293.189, 21.5728, 0.59 ) }
    dend_2 { pt3dadd( 98.7369, 294.407, 22.3248, 0.15 ) }
    dend_2 { pt3dadd( 98.7399, 294.907, 22.7092, 0.37 ) }
    dend_2 { pt3dadd( 98.7288, 295.345, 23.0855, 0.37 ) }
    dend_2 { pt3dadd( 98.67, 296.3, 23.9755, 0.15 ) }
    dend_2 { pt3dadd( 98.6122, 297.016, 24.6698, 0.15 ) }
    dend_2 { pt3dadd( 98.6048, 297.41, 25.008, 0.29 ) }
    dend_2 { pt3dadd( 98.6497, 298.226, 25.6395, 0.29 ) }
    dend_2 { pt3dadd( 98.7656, 299.357, 26.3911, 0.22 ) }
    dend_2 { pt3dadd( 98.8905, 300.327, 26.8913, 0.66 ) }
    dend_2 { pt3dadd( 98.9193, 300.554, 26.9807, 0.66 ) }
    dend_2 { pt3dadd( 99.0114, 301.98, 27.5256, 0.15 ) }
    dend_2 { pt3dadd( 99.0037, 303.085, 27.943, 0.15 ) }
    dend_2 { pt3dadd( 98.9126, 303.947, 28.2972, 0.37 ) }
    dend_2 { pt3dadd( 98.8103, 304.526, 28.6025, 0.37 ) }
    dend_2 { pt3dadd( 98.6072, 305.484, 29.1119, 0.22 ) }
    dend_2 { pt3dadd( 98.2445, 307.0, 29.8862, 0.22 ) }
    dend_2 { pt3dadd( 98.0622, 307.764, 30.2534, 0.37 ) }
    dend_2 { pt3dadd( 97.6253, 309.807, 31.0801, 0.15 ) }
    dend_2 { pt3dadd( 97.2752, 311.689, 31.6672, 0.15 ) }
    dend_2 { pt3dadd( 96.9461, 313.991, 32.1811, 0.15 ) }
    dend_2 { pt3dadd( 96.8293, 315.256, 32.3479, 0.15 ) }
    dend_2 { pt3dadd( 96.7851, 317.084, 32.4381, 0.15 ) }
    dend_2 { pt3dadd( 96.9149, 318.56, 32.4341, 0.15 ) }
    dend_2 { pt3dadd( 97.436, 320.712, 32.2722, 0.15 ) }
    dend_2 { pt3dadd( 97.8799, 321.764, 32.1196, 0.15 ) }
    dend_2 { pt3dadd( 98.4019, 322.571, 31.9889, 0.15 ) }
    dend_2 { pt3dadd( 99.1445, 323.402, 31.8469, 0.37 ) }
    dend_2 { pt3dadd( 101.029, 324.972, 31.5737, 0.15 ) }
    dend_2 { pt3dadd( 102.143, 325.699, 31.4713, 0.15 ) }
    dend_2 { pt3dadd( 103.485, 326.422, 31.4595, 0.15 ) }
    dend_2 { pt3dadd( 103.981, 326.672, 31.4712, 0.59 ) }
    dend_2 { pt3dadd( 104.971, 327.161, 31.5685, 0.29 ) }
    dend_2 { pt3dadd( 105.729, 327.559, 31.7261, 0.15 ) }
    dend_2 { pt3dadd( 106.122, 327.813, 31.8684, 0.29 ) }
    dend_2 { pt3dadd( 107.038, 328.545, 32.3175, 0.88 ) }
    dend_2 { pt3dadd( 107.58, 329.113, 32.7282, 0.22 ) }
    dend_2 { pt3dadd( 108.273, 330.142, 33.5191, 0.22 ) }
    dend_2 { pt3dadd( 108.514, 330.69, 33.9996, 0.22 ) }
    dend_2 { pt3dadd( 108.844, 331.724, 35.0036, 0.29 ) }
    dend_2 { pt3dadd( 109.009, 332.447, 35.7542, 0.15 ) }
    dend_2 { pt3dadd( 109.237, 333.917, 37.3413, 0.66 ) }
    dend_2 { pt3dadd( 109.366, 335.326, 38.8965, 0.37 ) }
    dend_2 { pt3dadd( 109.404, 336.9, 40.6787, 0.15 ) }
    dend_2 { pt3dadd( 109.37, 337.951, 41.8292, 0.15 ) }
    dend_2 { pt3dadd( 109.28, 338.868, 42.7619, 0.15 ) }
    dend_2 { pt3dadd( 109.222, 339.277, 43.1031, 0.15 ) }
    dend_2 { pt3dadd( 109.092, 340.097, 43.569, 0.52 ) }
    dend_2 { pt3dadd( 108.918, 341.297, 43.9156, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 108.644, 343.435, 44.0723, 0.15 ) }
    dend_2 { pt3dadd( 108.45, 345.22, 44.0045, 0.15 ) }
    dend_2 { pt3dadd( 108.358, 346.783, 43.8194, 0.15 ) }
    dend_2 { pt3dadd( 108.32, 349.026, 43.4484, 0.15 ) }
    dend_2 { pt3dadd( 108.399, 351.854, 42.8687, 0.15 ) }
    dend_2 { pt3dadd( 108.562, 353.813, 42.3942, 0.15 ) }
    dend_2 { pt3dadd( 108.7, 354.782, 42.1368, 0.22 ) }
    dend_2 { pt3dadd( 109.063, 356.693, 41.5946, 0.07 ) }
    dend_2 { pt3dadd( 109.201, 357.315, 41.4113, 0.07 ) }
    dend_2 { pt3dadd( 109.502, 358.554, 41.0177, 0.22 ) }
    dend_2 { pt3dadd( 109.957, 360.388, 40.4873, 0.07 ) }
    dend_2 { pt3dadd( 110.131, 361.038, 40.2606, 0.07 ) }
    dend_2 { pt3dadd( 110.267, 361.523, 40.0619, 0.22 ) }
    dend_2 { pt3dadd( 110.473, 362.183, 39.7549, 0.59 ) }
    dend_2 { pt3dadd( 111.107, 363.822, 38.8555, 0.07 ) }
    dend_2 { pt3dadd( 111.621, 364.887, 38.1972, 0.07 ) }
    dend_2 { pt3dadd( 111.864, 365.313, 37.9183, 0.29 ) }
    dend_2 { pt3dadd( 112.18, 365.823, 37.5773, 0.29 ) }
    dend_2 { pt3dadd( 112.85, 366.901, 36.8742, 0.07 ) }
    dend_2 { pt3dadd( 113.571, 368.157, 36.148, 0.07 ) }
    dend_2 { pt3dadd( 113.856, 368.75, 35.8634, 0.07 ) }
    dend_2 { pt3dadd( 114.005, 369.17, 35.6614, 0.29 ) }
    dend_2 { pt3dadd( 114.128, 369.736, 35.4323, 0.29 ) }
    dend_2 { pt3dadd( 114.359, 371.325, 34.8499, 0.15 ) }
    dend_2 { pt3dadd( 114.417, 372.771, 34.3658, 0.15 ) }
    dend_2 { pt3dadd( 114.366, 373.783, 34.0741, 0.29 ) }
    dend_2 { pt3dadd( 114.195, 375.512, 33.5672, 0.22 ) }
    dend_2 { pt3dadd( 113.956, 377.332, 33.0497, 0.74 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 53.2258, -38.108, 33.954, 0.88 ) }
    dend_39 { pt3dadd( 53.6865, -36.9344, 33.5777, 0.88 ) }
    dend_39 { pt3dadd( 53.9782, -36.1062, 33.3936, 0.74 ) }
    dend_39 { pt3dadd( 54.363, -34.9057, 33.1761, 0.81 ) }
    dend_39 { pt3dadd( 54.763, -33.5603, 32.9589, 0.88 ) }
    dend_39 { pt3dadd( 55.1152, -32.3103, 32.7688, 1.4 ) }
    dend_39 { pt3dadd( 55.4412, -31.0889, 32.6356, 0.96 ) }
    dend_39 { pt3dadd( 55.7589, -29.5351, 32.5614, 0.88 ) }
    dend_39 { pt3dadd( 55.909, -28.6221, 32.555, 0.81 ) }
    dend_39 { pt3dadd( 55.9619, -28.0534, 32.5192, 0.81 ) }
    dend_39 { pt3dadd( 55.9588, -27.2124, 32.4004, 0.81 ) }
    dend_39 { pt3dadd( 55.8135, -25.6783, 32.0539, 1.18 ) }
    dend_39 { pt3dadd( 55.6228, -24.5036, 31.7299, 1.18 ) }
    dend_39 { pt3dadd( 55.3647, -23.1687, 31.3058, 1.18 ) }
    dend_39 { pt3dadd( 54.8501, -20.1449, 30.4188, 0.96 ) }
    dend_39 { pt3dadd( 54.5742, -18.0185, 29.8345, 0.59 ) }
    dend_39 { pt3dadd( 54.4788, -16.5755, 29.5027, 0.59 ) }
    dend_39 { pt3dadd( 54.4966, -15.3394, 29.2976, 0.74 ) }
    dend_39 { pt3dadd( 54.6343, -14.0538, 29.2123, 1.11 ) }
    dend_39 { pt3dadd( 55.0356, -11.9908, 29.3573, 1.4 ) }
    dend_39 { pt3dadd( 55.4992, -10.3417, 29.6515, 1.4 ) }
    dend_39 { pt3dadd( 56.1049, -8.4426, 30.0464, 1.18 ) }
    dend_39 { pt3dadd( 56.5402, -7.04143, 30.3114, 1.47 ) }
    dend_39 { pt3dadd( 56.8092, -6.00539, 30.4275, 1.11 ) }
    dend_39 { pt3dadd( 57.1073, -4.14302, 30.3842, 0.74 ) }
    dend_39 { pt3dadd( 57.1619, -3.00979, 30.1539, 1.03 ) }
    dend_39 { pt3dadd( 57.116, -2.02165, 29.7959, 1.11 ) }
    dend_39 { pt3dadd( 56.9033, -0.58046, 29.0249, 0.88 ) }
    dend_39 { pt3dadd( 56.5746, 0.796073, 28.1015, 0.88 ) }
    dend_39 { pt3dadd( 56.1826, 1.99681, 27.2028, 0.74 ) }
    dend_39 { pt3dadd( 55.8646, 2.77962, 26.5479, 0.66 ) }
    dend_39 { pt3dadd( 55.4492, 3.72304, 25.7692, 0.59 ) }
    dend_39 { pt3dadd( 54.998, 4.79399, 24.9001, 0.81 ) }
    dend_39 { pt3dadd( 54.5734, 5.92141, 24.0986, 0.88 ) }
    dend_39 { pt3dadd( 54.1064, 7.42854, 23.1782, 0.81 ) }
    dend_39 { pt3dadd( 53.7838, 8.70973, 22.4766, 0.81 ) }
    dend_39 { pt3dadd( 53.5515, 10.0683, 21.7815, 0.81 ) }
    dend_39 { pt3dadd( 53.4467, 11.5669, 21.0627, 0.66 ) }
    dend_39 { pt3dadd( 53.4824, 12.8919, 20.4783, 0.88 ) }
    dend_39 { pt3dadd( 53.5922, 14.0587, 19.9676, 1.18 ) }
    dend_39 { pt3dadd( 53.6972, 14.8187, 19.6348, 1.18 ) }
    dend_39 { pt3dadd( 53.9543, 16.3507, 18.9728, 0.81 ) }
    dend_39 { pt3dadd( 54.2781, 17.9842, 18.2508, 0.96 ) }
    dend_39 { pt3dadd( 54.5356, 19.3152, 17.6281, 0.96 ) }
    dend_39 { pt3dadd( 54.754, 20.4578, 17.0217, 1.11 ) }
    dend_39 { pt3dadd( 54.9389, 21.3722, 16.5195, 1.11 ) }
    dend_39 { pt3dadd( 55.1491, 22.3433, 15.9912, 0.88 ) }
    dend_39 { pt3dadd( 55.4611, 23.6224, 15.3695, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 53.2258, -38.108, 33.954, 0.88 ) }
    dend_36 { pt3dadd( 55.1103, -40.4408, 36.8546, 0.88 ) }
    dend_36 { pt3dadd( 55.7733, -41.2157, 37.6931, 0.66 ) }
    dend_36 { pt3dadd( 56.8074, -42.4744, 39.0352, 0.74 ) }
    dend_36 { pt3dadd( 57.1787, -42.9941, 39.5797, 1.03 ) }
    dend_36 { pt3dadd( 57.4993, -43.5394, 40.1009, 0.74 ) }
    dend_36 { pt3dadd( 57.9136, -44.3878, 40.8681, 0.96 ) }
    dend_36 { pt3dadd( 58.4722, -46.0109, 42.0566, 1.03 ) }
    dend_36 { pt3dadd( 58.932, -47.8396, 43.4275, 0.74 ) }
    dend_36 { pt3dadd( 59.2584, -49.5219, 44.6847, 1.03 ) }
    dend_36 { pt3dadd( 59.4825, -50.9276, 45.7901, 0.88 ) }
    dend_36 { pt3dadd( 59.6777, -52.3446, 46.977, 0.81 ) }
    dend_36 { pt3dadd( 59.7844, -53.431, 47.9019, 0.66 ) }
    dend_36 { pt3dadd( 59.8807, -54.8152, 49.044, 0.66 ) }
    dend_36 { pt3dadd( 60.0171, -56.4597, 50.3075, 0.88 ) }
    dend_36 { pt3dadd( 60.2404, -58.2341, 51.6595, 1.11 ) }
    dend_36 { pt3dadd( 60.5704, -60.1051, 53.1013, 0.96 ) }
    dend_36 { pt3dadd( 60.9595, -61.9161, 54.4279, 0.96 ) }
    dend_36 { pt3dadd( 61.2724, -63.1499, 55.2657, 0.96 ) }
    dend_36 { pt3dadd( 61.8203, -65.0661, 56.4787, 1.03 ) }
    dend_36 { pt3dadd( 62.3703, -66.943, 57.5899, 0.81 ) }
    dend_36 { pt3dadd( 62.7357, -68.0816, 58.2072, 0.81 ) }
    dend_36 { pt3dadd( 63.0942, -69.0624, 58.683, 0.66 ) }
    dend_36 { pt3dadd( 63.6681, -70.2718, 59.2756, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 64.5839, -71.8885, 60.1244, 0.81 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 1/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 10.6414, -53.196, 14.6956, 0.29 ) }
    dend_34 { pt3dadd( 10.4698, -54.0422, 15.3338, 0.29 ) }
    dend_34 { pt3dadd( 10.3048, -55.0383, 16.0322, 0.29 ) }
    dend_34 { pt3dadd( 10.2292, -55.6987, 16.4986, 0.81 ) }
    dend_34 { pt3dadd( 10.1441, -56.7772, 17.2405, 0.59 ) }
    dend_34 { pt3dadd( 10.1074, -57.8981, 18.0375, 0.44 ) }
    dend_34 { pt3dadd( 10.1292, -58.8251, 18.7279, 0.22 ) }
    dend_34 { pt3dadd( 10.2064, -59.5153, 19.2441, 0.22 ) }
    dend_34 { pt3dadd( 10.3855, -60.3921, 19.9127, 0.22 ) }
    dend_34 { pt3dadd( 10.525, -60.9275, 20.3667, 0.74 ) }
    dend_34 { pt3dadd( 10.8025, -61.8963, 21.2552, 0.74 ) }
    dend_34 { pt3dadd( 11.0636, -62.7723, 22.0972, 0.96 ) }
    dend_34 { pt3dadd( 11.1925, -63.2749, 22.5675, 1.11 ) }
    dend_34 { pt3dadd( 11.4268, -64.4176, 23.595, 0.37 ) }
    dend_34 { pt3dadd( 11.5865, -65.4344, 24.3966, 0.22 ) }
    dend_34 { pt3dadd( 11.664, -66.0723, 24.8194, 0.66 ) }
    dend_34 { pt3dadd( 11.7151, -66.8262, 25.1939, 0.66 ) }
    dend_34 { pt3dadd( 11.7431, -67.5439, 25.464, 0.66 ) }
    dend_34 { pt3dadd( 11.7706, -68.2847, 25.6984, 0.29 ) }
    dend_34 { pt3dadd( 11.8227, -69.2284, 25.9292, 0.22 ) }
    dend_34 { pt3dadd( 11.9429, -70.3563, 26.1923, 0.66 ) }
    dend_34 { pt3dadd( 12.1154, -71.4728, 26.5323, 0.88 ) }
    dend_34 { pt3dadd( 12.2577, -72.2719, 26.8387, 0.37 ) }
    dend_34 { pt3dadd( 12.4563, -73.3773, 27.3362, 0.22 ) }
    dend_34 { pt3dadd( 12.5715, -74.0358, 27.6927, 0.59 ) }
    dend_34 { pt3dadd( 12.7032, -74.8484, 28.1939, 0.74 ) }
    dend_34 { pt3dadd( 12.9334, -76.2754, 29.1478, 0.15 ) }
    dend_34 { pt3dadd( 13.0166, -76.8152, 29.516, 0.15 ) }
    dend_34 { pt3dadd( 13.1041, -77.5278, 29.9743, 0.37 ) }
    dend_34 { pt3dadd( 13.223, -78.8668, 30.7313, 0.22 ) }
    dend_34 { pt3dadd( 13.2568, -79.2987, 30.9409, 0.66 ) }
    dend_34 { pt3dadd( 13.3011, -79.8279, 31.1603, 1.11 ) }
    dend_34 { pt3dadd( 13.3776, -80.6187, 31.433, 0.37 ) }
    dend_34 { pt3dadd( 13.5268, -81.7411, 31.7936, 0.15 ) }
    dend_34 { pt3dadd( 13.6533, -82.4644, 32.044, 0.44 ) }
    dend_34 { pt3dadd( 13.9208, -83.7509, 32.5393, 0.15 ) }
    dend_34 { pt3dadd( 14.1601, -84.8009, 32.9979, 0.15 ) }
    dend_34 { pt3dadd( 14.3083, -85.4147, 33.3078, 0.81 ) }
    dend_34 { pt3dadd( 14.428, -85.9093, 33.5745, 1.18 ) }
    dend_34 { pt3dadd( 14.7886, -87.5179, 34.5244, 0.15 ) }
    dend_34 { pt3dadd( 14.9608, -88.4187, 35.0771, 0.15 ) }
    dend_34 { pt3dadd( 15.0245, -88.8825, 35.3787, 0.81 ) }
    dend_34 { pt3dadd( 15.109, -89.6112, 35.9243, 0.81 ) }
    dend_34 { pt3dadd( 15.1847, -90.3152, 36.5105, 0.22 ) }
    dend_34 { pt3dadd( 15.2916, -91.3043, 37.4196, 0.15 ) }
    dend_34 { pt3dadd( 15.3246, -91.643, 37.7396, 0.22 ) }
    dend_34 { pt3dadd( 15.4205, -92.5041, 38.5837, 0.15 ) }
    dend_34 { pt3dadd( 15.6144, -93.7479, 39.9365, 0.15 ) }
    dend_34 { pt3dadd( 15.6871, -94.1465, 40.3903, 0.59 ) }
    dend_34 { pt3dadd( 15.8837, -95.1464, 41.5669, 0.15 ) }
    dend_34 { pt3dadd( 15.9706, -95.6103, 42.0872, 0.15 ) }
    dend_34 { pt3dadd( 16.0743, -96.222, 42.7148, 0.81 ) }
    dend_34 { pt3dadd( 16.2841, -97.6382, 43.9241, 0.15 ) }
    dend_34 { pt3dadd( 16.3684, -98.334, 44.4081, 0.15 ) }
    dend_34 { pt3dadd( 16.4181, -98.8118, 44.6996, 0.52 ) }
    dend_34 { pt3dadd( 16.4732, -99.4943, 45.0397, 0.66 ) }
    dend_34 { pt3dadd( 16.5112, -100.34, 45.4001, 0.29 ) }
    dend_34 { pt3dadd( 16.4979, -101.371, 45.7393, 0.15 ) }
    dend_34 { pt3dadd( 16.4582, -101.882, 45.8632, 0.15 ) }
    dend_34 { pt3dadd( 16.397, -102.424, 45.9958, 0.59 ) }
    dend_34 { pt3dadd( 16.2863, -103.103, 46.133, 0.88 ) }
    dend_34 { pt3dadd( 16.1033, -103.942, 46.2752, 0.29 ) }
    dend_34 { pt3dadd( 15.9022, -104.661, 46.3771, 0.22 ) }
    dend_34 { pt3dadd( 15.593, -105.667, 46.4947, 0.07 ) }
    dend_34 { pt3dadd( 15.3939, -106.337, 46.528, 0.07 ) }
    dend_34 { pt3dadd( 15.0675, -107.507, 46.5366, 0.07 ) }
    dend_34 { pt3dadd( 15.0029, -107.78, 46.5295, 0.29 ) }
    dend_34 { pt3dadd( 14.8721, -108.556, 46.5075, 0.66 ) }
    dend_34 { pt3dadd( 14.7538, -109.543, 46.4917, 0.15 ) }
    dend_34 { pt3dadd( 14.6501, -110.668, 46.5145, 0.15 ) }
    dend_34 { pt3dadd( 14.5816, -111.442, 46.5365, 0.29 ) }
    dend_34 { pt3dadd( 14.4981, -112.366, 46.5945, 0.15 ) }
    dend_34 { pt3dadd( 14.4103, -113.171, 46.6437, 0.37 ) }
    dend_34 { pt3dadd( 14.3327, -113.722, 46.6622, 0.37 ) }
    dend_34 { pt3dadd( 14.1465, -114.764, 46.6871, 0.22 ) }
    dend_34 { pt3dadd( 13.9677, -115.641, 46.7173, 0.44 ) }
    dend_34 { pt3dadd( 13.7532, -116.535, 46.6799, 0.96 ) }
    dend_34 { pt3dadd( 13.5919, -117.142, 46.6077, 0.22 ) }
    dend_34 { pt3dadd( 13.2504, -118.399, 46.3853, 0.15 ) }
    dend_34 { pt3dadd( 13.184, -118.66, 46.3348, 0.15 ) }
    dend_34 { pt3dadd( 12.9364, -119.718, 46.0827, 0.29 ) }
    dend_34 { pt3dadd( 12.6637, -120.934, 45.7442, 0.15 ) }
    dend_34 { pt3dadd( 12.5253, -121.582, 45.5285, 0.15 ) }
    dend_34 { pt3dadd( 12.4679, -121.852, 45.436, 0.37 ) }
    dend_34 { pt3dadd( 12.3193, -122.567, 45.2085, 0.88 ) }
    dend_34 { pt3dadd( 12.034, -124.073, 44.7716, 0.15 ) }
    dend_34 { pt3dadd( 11.8964, -124.848, 44.5843, 0.15 ) }
    dend_34 { pt3dadd( 11.771, -125.607, 44.4705, 0.15 ) }
    dend_34 { pt3dadd( 11.6476, -126.298, 44.4174, 0.66 ) }
    dend_34 { pt3dadd( 11.5064, -127.061, 44.4199, 0.22 ) }
    dend_34 { pt3dadd( 11.3672, -127.787, 44.481, 0.22 ) }
    dend_34 { pt3dadd( 11.2396, -128.43, 44.5985, 0.15 ) }
    dend_34 { pt3dadd( 11.1442, -128.895, 44.7008, 0.15 ) }
    dend_34 { pt3dadd( 10.9512, -129.77, 44.8951, 0.66 ) }
    dend_34 { pt3dadd( 10.6137, -131.165, 45.2127, 0.15 ) }
    dend_34 { pt3dadd( 10.4875, -131.653, 45.3265, 0.15 ) }
    dend_34 { pt3dadd( 10.3777, -132.067, 45.4242, 0.22 ) }
    dend_34 { pt3dadd( 10.2298, -132.66, 45.5615, 0.15 ) }
    dend_34 { pt3dadd( 10.0854, -133.263, 45.7004, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( 9.86105, -134.2, 45.9192, 0.44 ) }
    dend_34 { pt3dadd( 9.6255, -135.193, 46.1557, 0.15 ) }
    dend_34 { pt3dadd( 9.48535, -135.792, 46.2756, 0.15 ) }
    dend_34 { pt3dadd( 9.34908, -136.329, 46.3366, 0.15 ) }
    dend_34 { pt3dadd( 9.17911, -136.941, 46.3649, 0.15 ) }
    dend_34 { pt3dadd( 8.95996, -137.653, 46.3677, 0.44 ) }
    dend_34 { pt3dadd( 8.66899, -138.513, 46.3531, 0.44 ) }
    dend_34 { pt3dadd( 8.26782, -139.645, 46.3826, 0.15 ) }
    dend_34 { pt3dadd( 7.769, -141.087, 46.482, 0.15 ) }
    dend_34 { pt3dadd( 7.54226, -141.769, 46.5515, 0.44 ) }
    dend_34 { pt3dadd( 7.23827, -142.744, 46.6836, 0.22 ) }
    dend_34 { pt3dadd( 6.97183, -143.792, 46.9102, 0.22 ) }
    dend_34 { pt3dadd( 6.64544, -145.335, 47.373, 0.07 ) }
    dend_34 { pt3dadd( 6.47592, -146.361, 47.778, 0.07 ) }
    dend_34 { pt3dadd( 6.42776, -146.736, 47.9497, 0.29 ) }
    dend_34 { pt3dadd( 6.35058, -147.424, 48.274, 0.96 ) }
    dend_34 { pt3dadd( 6.1872, -149.266, 49.205, 0.15 ) }
    dend_34 { pt3dadd( 6.12557, -149.952, 49.5691, 0.15 ) }
    dend_34 { pt3dadd( 6.03553, -150.567, 49.864, 0.15 ) }
    dend_34 { pt3dadd( 5.88517, -151.403, 50.2818, 0.37 ) }
    dend_34 { pt3dadd( 5.7896, -151.869, 50.522, 0.37 ) }
    dend_34 { pt3dadd( 5.5231, -152.949, 51.0799, 0.15 ) }
    dend_34 { pt3dadd( 5.33932, -153.556, 51.4058, 0.74 ) }
    dend_34 { pt3dadd( 4.92684, -154.884, 52.3166, 0.15 ) }
    dend_34 { pt3dadd( 4.62592, -155.743, 53.0325, 0.15 ) }
    dend_34 { pt3dadd( 4.45112, -156.186, 53.5201, 0.59 ) }
    dend_34 { pt3dadd( 4.27064, -156.599, 54.0926, 0.22 ) }
    dend_34 { pt3dadd( 3.94261, -157.255, 55.158, 0.15 ) }
    dend_34 { pt3dadd( 3.55272, -157.956, 56.5248, 0.15 ) }
    dend_34 { pt3dadd( 3.35815, -158.258, 57.233, 0.52 ) }
    dend_34 { pt3dadd( 2.90761, -158.791, 58.6514, 0.15 ) }
    dend_34 { pt3dadd( 2.61278, -159.074, 59.6258, 0.15 ) }
    dend_34 { pt3dadd( 2.49411, -159.175, 60.0413, 0.44 ) }
    dend_34 { pt3dadd( 2.27045, -159.34, 60.8049, 0.81 ) }
    dend_34 { pt3dadd( 2.05669, -159.504, 61.4866, 0.81 ) }
    dend_34 { pt3dadd( 1.57063, -159.941, 63.142, 0.15 ) }
    dend_34 { pt3dadd( 1.07498, -160.446, 64.7994, 0.15 ) }
    dend_34 { pt3dadd( 0.928045, -160.638, 65.3166, 0.15 ) }
    dend_34 { pt3dadd( 0.823526, -160.828, 65.7698, 0.66 ) }
    dend_34 { pt3dadd( 0.626296, -161.345, 66.7624, 0.22 ) }
    dend_34 { pt3dadd( 0.465995, -162.084, 68.0585, 0.15 ) }
    dend_34 { pt3dadd( 0.451474, -162.298, 68.4412, 0.22 ) }
    dend_34 { pt3dadd( 0.450577, -162.899, 69.5745, 0.15 ) }
    dend_34 { pt3dadd( 0.465316, -163.38, 70.5603, 0.44 ) }
    dend_34 { pt3dadd( 0.48525, -163.749, 71.3431, 0.88 ) }
    dend_34 { pt3dadd( 0.489675, -164.853, 73.8267, 0.15 ) }
    dend_34 { pt3dadd( 0.387365, -165.704, 75.8084, 0.15 ) }
    dend_34 { pt3dadd( 0.285242, -166.155, 76.8865, 0.15 ) }
    dend_34 { pt3dadd( 0.162644, -166.482, 77.6786, 0.37 ) }
    dend_34 { pt3dadd( 0.0175336, -166.756, 78.3317, 0.37 ) }
    dend_34 { pt3dadd( -0.403757, -167.382, 79.8626, 0.07 ) }
    dend_34 { pt3dadd( -0.798237, -167.845, 80.8424, 0.07 ) }
    dend_34 { pt3dadd( -1.03116, -168.101, 81.3259, 0.15 ) }
    dend_34 { pt3dadd( -1.56678, -168.668, 82.3965, 0.07 ) }
    dend_34 { pt3dadd( -1.86844, -168.982, 83.0023, 0.29 ) }
    dend_34 { pt3dadd( -2.27923, -169.411, 83.8363, 0.29 ) }
    dend_34 { pt3dadd( -2.76275, -169.985, 84.8681, 0.15 ) }
    dend_34 { pt3dadd( -2.98832, -170.282, 85.3791, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 10.6414, -53.196, 14.6956, 0.22 ) }
    dend_33 { pt3dadd( 11.9018, -54.8313, 9.63236, 0.22 ) }
    dend_33 { pt3dadd( 12.2723, -55.3086, 8.36411, 0.22 ) }
    dend_33 { pt3dadd( 12.5896, -55.759, 7.28611, 0.52 ) }
    dend_33 { pt3dadd( 12.8426, -56.1632, 6.38383, 0.88 ) }
    dend_33 { pt3dadd( 13.221, -56.8753, 4.90494, 0.96 ) }
    dend_33 { pt3dadd( 13.5561, -57.6697, 3.3594, 0.74 ) }
    dend_33 { pt3dadd( 13.8038, -58.7458, 1.67049, 0.29 ) }
    dend_33 { pt3dadd( 13.8748, -59.5533, 0.531837, 0.37 ) }
    dend_33 { pt3dadd( 13.8686, -60.193, -0.272116, 0.37 ) }
    dend_33 { pt3dadd( 13.8225, -60.7855, -0.97403, 0.74 ) }
    dend_33 { pt3dadd( 13.7423, -61.5733, -1.89808, 0.44 ) }
    dend_33 { pt3dadd( 13.6422, -62.9549, -3.62712, 0.44 ) }
    dend_33 { pt3dadd( 13.6728, -63.4361, -4.34037, 0.44 ) }
    dend_33 { pt3dadd( 13.8356, -64.0355, -5.34365, 0.22 ) }
    dend_33 { pt3dadd( 14.1706, -64.8276, -6.72625, 0.22 ) }
    dend_33 { pt3dadd( 14.4827, -65.4713, -7.86458, 0.44 ) }
    dend_33 { pt3dadd( 14.7627, -66.1039, -8.9324, 0.59 ) }
    dend_33 { pt3dadd( 15.1202, -67.3491, -10.8986, 0.29 ) }
    dend_33 { pt3dadd( 15.1759, -67.9941, -11.8833, 0.22 ) }
    dend_33 { pt3dadd( 15.0839, -68.6125, -12.7382, 0.29 ) }
    dend_33 { pt3dadd( 14.8279, -69.4064, -13.6895, 0.44 ) }
    dend_33 { pt3dadd( 14.3539, -70.4469, -14.8259, 0.74 ) }
    dend_33 { pt3dadd( 13.6775, -71.6304, -16.0238, 0.96 ) }
    dend_33 { pt3dadd( 13.3427, -72.1413, -16.517, 0.96 ) }
    dend_33 { pt3dadd( 12.6493, -73.1692, -17.5273, 0.37 ) }
    dend_33 { pt3dadd( 11.9733, -74.229, -18.6372, 0.44 ) }
    dend_33 { pt3dadd( 11.5754, -74.9835, -19.4847, 0.37 ) }
    dend_33 { pt3dadd( 11.3687, -75.5525, -20.1526, 0.22 ) }
    dend_33 { pt3dadd( 11.2868, -76.152, -20.9073, 0.22 ) }
    dend_33 { pt3dadd( 11.3382, -76.5158, -21.463, 0.29 ) }
    dend_33 { pt3dadd( 11.5764, -77.007, -22.4431, 0.44 ) }
    dend_33 { pt3dadd( 11.8947, -77.4339, -23.5091, 0.44 ) }
    dend_33 { pt3dadd( 12.1465, -77.735, -24.3288, 0.66 ) }
    dend_33 { pt3dadd( 12.5794, -78.2771, -25.8267, 0.81 ) }
    dend_33 { pt3dadd( 13.0365, -78.9803, -27.6884, 0.96 ) }
    dend_33 { pt3dadd( 13.345, -79.6621, -29.327, 0.96 ) }
    dend_33 { pt3dadd( 13.5327, -80.2279, -30.5706, 0.96 ) }
    dend_33 { pt3dadd( 13.6286, -80.5758, -31.3242, 0.66 ) }
    dend_33 { pt3dadd( 13.7751, -81.1356, -32.5178, 0.74 ) }
    dend_33 { pt3dadd( 13.9309, -81.7028, -33.6513, 0.74 ) }
    dend_33 { pt3dadd( 14.3052, -82.8039, -35.7636, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_33 { pt3dadd( 14.748, -83.9036, -37.8846, 0.29 ) }
    dend_33 { pt3dadd( 15.0911, -84.6798, -39.509, 0.29 ) }
    dend_33 { pt3dadd( 15.3593, -85.2017, -40.6672, 0.29 ) }
    dend_33 { pt3dadd( 15.6214, -85.6522, -41.7278, 0.37 ) }
    dend_33 { pt3dadd( 16.0496, -86.3161, -43.3903, 0.52 ) }
    dend_33 { pt3dadd( 16.4347, -86.8973, -44.8971, 0.44 ) }
    dend_33 { pt3dadd( 17.0029, -87.8955, -47.3731, 0.44 ) }
    dend_33 { pt3dadd( 19.6425, -94.2939, -55.9477, 0.44 ) }
    dend_33 { pt3dadd( 21.6926, -101.879, -63.6733, 0.44 ) }
    dend_33 { pt3dadd( 24.1089, -108.396, -72.2246, 0.44 ) }
    dend_33 { pt3dadd( 26.1659, -114.851, -80.9159, 0.44 ) }
    dend_33 { pt3dadd( 26.1794, -120.044, -90.635, 0.44 ) }
    dend_33 { pt3dadd( 27.7734, -123.251, -101.056, 0.44 ) }
    dend_33 { pt3dadd( 29.3895, -126.762, -111.376, 0.44 ) }
    dend_33 { pt3dadd( 32.4042, -131.31, -120.95, 0.44 ) }
    dend_33 { pt3dadd( 35.3884, -134.427, -131.089, 0.44 ) }
    dend_33 { pt3dadd( 37.2067, -135.641, -141.89, 0.44 ) }
    dend_33 { pt3dadd( 40.1471, -135.715, -152.51, 0.44 ) }
    dend_33 { pt3dadd( 41.8532, -137.179, -163.297, 0.44 ) }
    dend_33 { pt3dadd( 43.6524, -139.848, -173.837, 0.44 ) }
    dend_33 { pt3dadd( 46.5523, -144.08, -183.589, 0.44 ) }
    dend_33 { pt3dadd( 49.9829, -148.133, -193.245, 0.44 ) }
    dend_33 { pt3dadd( 53.4074, -153.573, -202.195, 0.44 ) }
    dend_33 { pt3dadd( 56.1393, -159.367, -211.162, 0.44 ) }
    dend_33 { pt3dadd( 58.4488, -165.397, -220.091, 0.44 ) }
    dend_33 { pt3dadd( 61.9845, -170.178, -229.369, 0.44 ) }
    dend_33 { pt3dadd( 63.3574, -174.676, -239.334, 0.44 ) }
    dend_33 { pt3dadd( 65.9222, -180.375, -248.411, 0.44 ) }
    dend_33 { pt3dadd( 67.7938, -187.99, -256.152, 0.44 ) }
    dend_33 { pt3dadd( 71.1283, -195.709, -263.275, 0.44 ) }
    dend_33 { pt3dadd( 75.5531, -204.153, -268.802, 0.44 ) }
    dend_33 { pt3dadd( 79.258, -212.716, -274.665, 0.44 ) }
    dend_33 { pt3dadd( 81.6652, -222.246, -279.647, 0.44 ) }
    dend_33 { pt3dadd( 85.6964, -229.826, -286.555, 0.44 ) }
    dend_33 { pt3dadd( 89.4386, -238.146, -292.737, 0.44 ) }
    dend_33 { pt3dadd( 93.8517, -246.893, -297.781, 0.44 ) }
    dend_33 { pt3dadd( 98.7602, -255.732, -302.164, 0.44 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 37/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 5.01327, -150.514, 84.6199, 0.15 ) }
    dend_29 { pt3dadd( 5.16668, -151.955, 85.3896, 0.15 ) }
    dend_29 { pt3dadd( 5.26718, -152.987, 86.0329, 0.22 ) }
    dend_29 { pt3dadd( 5.33238, -153.725, 86.5109, 0.22 ) }
    dend_29 { pt3dadd( 5.43059, -154.839, 87.2529, 0.37 ) }
    dend_29 { pt3dadd( 5.61797, -156.286, 88.3524, 0.15 ) }
    dend_29 { pt3dadd( 6.04349, -158.663, 90.3021, 0.15 ) }
    dend_29 { pt3dadd( 6.22042, -159.365, 91.032, 0.15 ) }
    dend_29 { pt3dadd( 6.4209, -160.028, 91.8213, 0.29 ) }
    dend_29 { pt3dadd( 7.16027, -162.105, 94.5821, 0.15 ) }
    dend_29 { pt3dadd( 7.77563, -163.464, 96.6833, 0.15 ) }
    dend_29 { pt3dadd( 8.12494, -164.051, 97.737, 0.15 ) }
    dend_29 { pt3dadd( 9.25508, -165.502, 100.664, 0.15 ) }
    dend_29 { pt3dadd( 9.77939, -166.007, 101.986, 0.15 ) }
    dend_29 { pt3dadd( 10.4013, -166.485, 103.561, 0.22 ) }
    dend_29 { pt3dadd( 11.2882, -167.067, 105.796, 0.44 ) }
    dend_29 { pt3dadd( 11.8693, -167.441, 107.249, 0.44 ) }
    dend_29 { pt3dadd( 12.9588, -168.154, 109.894, 0.15 ) }
    dend_29 { pt3dadd( 15.2767, -169.62, 115.126, 0.22 ) }
    dend_29 { pt3dadd( 16.7139, -170.505, 118.245, 0.22 ) }
    dend_29 { pt3dadd( 17.1931, -170.809, 119.21, 0.22 ) }
    dend_29 { pt3dadd( 18.0368, -171.395, 120.764, 0.22 ) }
    dend_29 { pt3dadd( 18.8786, -172.018, 122.076, 0.22 ) }
    dend_29 { pt3dadd( 20.1165, -172.982, 123.569, 0.22 ) }
    dend_29 { pt3dadd( 20.9647, -173.686, 124.335, 0.22 ) }
    dend_29 { pt3dadd( 22.1246, -174.739, 125.276, 0.07 ) }
    dend_29 { pt3dadd( 23.8574, -176.38, 126.752, 0.07 ) }
    dend_29 { pt3dadd( 25.8768, -178.346, 128.458, 0.07 ) }
    dend_29 { pt3dadd( 27.43, -179.875, 129.796, 0.07 ) }
    dend_29 { pt3dadd( 29.6235, -182.178, 131.712, 0.07 ) }
    dend_29 { pt3dadd( 31.4741, -184.211, 133.461, 0.07 ) }
    dend_29 { pt3dadd( 33.1773, -186.202, 135.444, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 69/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 5.01327, -150.514, 84.6199, 0.22 ) }
    dend_28 { pt3dadd( 4.87476, -152.535, 83.7993, 0.22 ) }
    dend_28 { pt3dadd( 4.74475, -154.236, 83.547, 0.15 ) }
    dend_28 { pt3dadd( 4.63966, -155.514, 83.5945, 0.15 ) }
    dend_28 { pt3dadd( 4.53269, -156.739, 83.7643, 0.15 ) }
    dend_28 { pt3dadd( 4.41594, -157.941, 83.9851, 0.15 ) }
    dend_28 { pt3dadd( 4.17777, -160.596, 84.5098, 0.15 ) }
    dend_28 { pt3dadd( 4.0826, -161.803, 84.8868, 0.15 ) }
    dend_28 { pt3dadd( 4.01646, -162.567, 85.1659, 0.37 ) }
    dend_28 { pt3dadd( 3.90967, -163.582, 85.4827, 0.59 ) }
    dend_28 { pt3dadd( 3.71425, -165.315, 85.8968, 0.22 ) }
    dend_28 { pt3dadd( 3.53021, -166.776, 86.1226, 0.22 ) }
    dend_28 { pt3dadd( 3.3655, -167.948, 86.1419, 0.15 ) }
    dend_28 { pt3dadd( 3.1932, -168.977, 86.1033, 0.15 ) }
    dend_28 { pt3dadd( 2.86768, -170.58, 86.021, 0.15 ) }
    dend_28 { pt3dadd( 2.69728, -171.304, 85.939, 0.15 ) }
    dend_28 { pt3dadd( 2.50574, -172.011, 85.7821, 0.29 ) }
    dend_28 { pt3dadd( 2.3349, -172.584, 85.6154, 0.29 ) }
    dend_28 { pt3dadd( 2.05095, -173.599, 85.2701, 0.44 ) }
    dend_28 { pt3dadd( 1.84932, -174.415, 85.0641, 0.44 ) }
    dend_28 { pt3dadd( 1.5149, -175.964, 84.8837, 0.22 ) }
    dend_28 { pt3dadd( 1.24599, -177.404, 84.8468, 0.29 ) }
    dend_28 { pt3dadd( 1.02831, -178.88, 84.9384, 0.07 ) }
    dend_28 { pt3dadd( 0.899148, -180.067, 85.1129, 0.07 ) }
    dend_28 { pt3dadd( 0.744844, -182.567, 85.5778, 0.22 ) }
    dend_28 { pt3dadd( 0.708351, -183.682, 85.9197, 0.22 ) }
    dend_28 { pt3dadd( 0.698992, -184.388, 86.2395, 0.22 ) }
    dend_28 { pt3dadd( 0.712167, -184.933, 86.5546, 0.44 ) }
    dend_28 { pt3dadd( 0.739562, -185.512, 86.9171, 0.66 ) }
    dend_28 { pt3dadd( 0.817558, -186.996, 87.8547, 0.22 ) }
    dend_28 { pt3dadd( 0.930321, -188.695, 88.8363, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( 0.990942, -189.508, 89.3025, 0.07 ) }
    dend_28 { pt3dadd( 1.10011, -190.546, 89.8359, 0.07 ) }
    dend_28 { pt3dadd( 1.22864, -191.423, 90.2293, 0.15 ) }
    dend_28 { pt3dadd( 1.36175, -192.116, 90.4925, 0.15 ) }
    dend_28 { pt3dadd( 1.61595, -193.202, 90.8252, 0.37 ) }
    dend_28 { pt3dadd( 1.93357, -194.339, 90.9875, 0.66 ) }
    dend_28 { pt3dadd( 2.44538, -196.022, 91.079, 0.15 ) }
    dend_28 { pt3dadd( 2.81432, -197.194, 91.0596, 0.22 ) }
    dend_28 { pt3dadd( 3.16354, -198.286, 91.0031, 0.22 ) }
    dend_28 { pt3dadd( 3.46107, -199.247, 90.9197, 0.15 ) }
    dend_28 { pt3dadd( 3.65485, -199.926, 90.8444, 0.15 ) }
    dend_28 { pt3dadd( 3.80464, -200.592, 90.7897, 0.59 ) }
    dend_28 { pt3dadd( 3.90087, -201.336, 90.7687, 0.59 ) }
    dend_28 { pt3dadd( 3.94899, -202.823, 90.7617, 0.22 ) }
    dend_28 { pt3dadd( 3.93016, -203.272, 90.7498, 0.22 ) }
    dend_28 { pt3dadd( 3.87145, -204.011, 90.7247, 0.44 ) }
    dend_28 { pt3dadd( 3.81052, -205.066, 90.6979, 0.66 ) }
    dend_28 { pt3dadd( 3.78212, -206.235, 90.6622, 0.29 ) }
    dend_28 { pt3dadd( 3.80024, -207.187, 90.6334, 0.66 ) }
    dend_28 { pt3dadd( 3.90346, -208.386, 90.5999, 0.52 ) }
    dend_28 { pt3dadd( 4.14887, -210.101, 90.5443, 0.29 ) }
    dend_28 { pt3dadd( 4.45172, -211.624, 90.4288, 0.22 ) }
    dend_28 { pt3dadd( 4.73324, -212.733, 90.2923, 0.29 ) }
    dend_28 { pt3dadd( 5.05024, -213.778, 90.1282, 0.37 ) }
    dend_28 { pt3dadd( 5.46573, -215.005, 89.952, 0.22 ) }
    dend_28 { pt3dadd( 5.68789, -215.635, 89.8792, 0.22 ) }
    dend_28 { pt3dadd( 6.24123, -217.205, 89.6891, 0.29 ) }
    dend_28 { pt3dadd( 6.57842, -218.261, 89.57, 0.52 ) }
    dend_28 { pt3dadd( 6.76529, -218.906, 89.5151, 0.81 ) }
    dend_28 { pt3dadd( 7.10817, -220.221, 89.4548, 0.29 ) }
    dend_28 { pt3dadd( 7.37131, -221.302, 89.5449, 0.22 ) }
    dend_28 { pt3dadd( 7.47782, -221.734, 89.6399, 0.22 ) }
    dend_28 { pt3dadd( 7.60149, -222.248, 89.8207, 0.44 ) }
    dend_28 { pt3dadd( 7.76343, -222.992, 90.1114, 0.74 ) }
    dend_28 { pt3dadd( 7.94029, -223.773, 90.393, 0.29 ) }
    dend_28 { pt3dadd( 8.32756, -225.281, 90.8618, 0.15 ) }
    dend_28 { pt3dadd( 8.43196, -225.647, 90.9685, 0.15 ) }
    dend_28 { pt3dadd( 8.63753, -226.28, 91.1313, 0.15 ) }
    dend_28 { pt3dadd( 8.97366, -227.194, 91.3358, 0.44 ) }
    dend_28 { pt3dadd( 9.52245, -228.585, 91.6508, 0.22 ) }
    dend_28 { pt3dadd( 9.89116, -229.536, 91.8515, 0.22 ) }
    dend_28 { pt3dadd( 10.3557, -230.761, 92.0682, 0.52 ) }
    dend_28 { pt3dadd( 10.8824, -232.175, 92.2683, 0.15 ) }
    dend_28 { pt3dadd( 11.2291, -233.171, 92.3398, 0.29 ) }
    dend_28 { pt3dadd( 11.6032, -234.388, 92.3003, 0.59 ) }
    dend_28 { pt3dadd( 11.8505, -235.412, 92.1317, 0.74 ) }
    dend_28 { pt3dadd( 11.9229, -235.802, 92.0231, 0.74 ) }
    dend_28 { pt3dadd( 12.0973, -237.336, 91.4501, 0.22 ) }
    dend_28 { pt3dadd( 12.1326, -238.951, 90.7325, 0.15 ) }
    dend_28 { pt3dadd( 12.0911, -240.091, 90.1429, 0.15 ) }
    dend_28 { pt3dadd( 12.0141, -241.075, 89.6015, 0.29 ) }
    dend_28 { pt3dadd( 11.926, -241.854, 89.189, 0.74 ) }
    dend_28 { pt3dadd( 11.8236, -242.683, 88.8095, 0.66 ) }
    dend_28 { pt3dadd( 11.6485, -244.21, 88.2485, 0.15 ) }
    dend_28 { pt3dadd( 11.524, -245.59, 87.7698, 0.15 ) }
    dend_28 { pt3dadd( 11.4724, -246.597, 87.4383, 0.22 ) }
    dend_28 { pt3dadd( 11.466, -247.748, 87.0516, 0.52 ) }
    dend_28 { pt3dadd( 11.5438, -249.128, 86.5741, 0.29 ) }
    dend_28 { pt3dadd( 11.7588, -250.714, 86.0664, 0.15 ) }
    dend_28 { pt3dadd( 12.0361, -251.938, 85.6936, 0.15 ) }
    dend_28 { pt3dadd( 12.158, -252.346, 85.5705, 0.15 ) }
    dend_28 { pt3dadd( 12.3773, -252.98, 85.3626, 0.81 ) }
    dend_28 { pt3dadd( 12.648, -253.824, 85.0887, 0.29 ) }
    dend_28 { pt3dadd( 13.0311, -255.296, 84.6082, 0.15 ) }
    dend_28 { pt3dadd( 13.2415, -256.409, 84.2308, 0.59 ) }
    dend_28 { pt3dadd( 13.3331, -257.211, 83.9599, 0.59 ) }
    dend_28 { pt3dadd( 13.3578, -257.9, 83.6754, 0.59 ) }
    dend_28 { pt3dadd( 13.3015, -259.107, 83.0454, 1.18 ) }
    dend_28 { pt3dadd( 13.1795, -260.072, 82.3522, 0.74 ) }
    dend_28 { pt3dadd( 12.9265, -261.519, 81.0872, 0.22 ) }
    dend_28 { pt3dadd( 12.8473, -261.959, 80.6479, 0.29 ) }
    dend_28 { pt3dadd( 12.699, -262.894, 79.5786, 0.37 ) }
    dend_28 { pt3dadd( 12.5836, -263.833, 78.2931, 0.37 ) }
    dend_28 { pt3dadd( 12.4746, -265.023, 76.3227, 0.37 ) }
    dend_28 { pt3dadd( 12.4296, -265.395, 75.6195, 0.37 ) }
    dend_28 { pt3dadd( 12.3761, -265.841, 74.6956, 0.37 ) }
    dend_28 { pt3dadd( 12.3721, -265.975, 74.4068, 0.37 ) }
    dend_28 { pt3dadd( 12.4009, -266.219, 73.8713, 0.37 ) }
    dend_28 { pt3dadd( 12.4849, -266.547, 73.2238, 0.37 ) }
    dend_28 { pt3dadd( 12.6164, -267.034, 72.3999, 0.44 ) }
    dend_28 { pt3dadd( 12.7116, -267.52, 71.6642, 0.52 ) }
    dend_28 { pt3dadd( 12.8412, -268.463, 70.5317, 0.52 ) }
    dend_28 { pt3dadd( 12.9229, -269.333, 69.6187, 0.37 ) }
    dend_28 { pt3dadd( 12.9644, -269.775, 69.2184, 0.22 ) }
    dend_28 { pt3dadd( 13.0067, -270.266, 68.8302, 0.22 ) }
    dend_28 { pt3dadd( 13.0333, -270.968, 68.3649, 0.29 ) }
    dend_28 { pt3dadd( 12.9895, -271.971, 67.8689, 0.81 ) }
    dend_28 { pt3dadd( 12.8536, -273.433, 67.4099, 0.15 ) }
    dend_28 { pt3dadd( 12.7674, -274.104, 67.2711, 0.15 ) }
    dend_28 { pt3dadd( 12.6924, -274.713, 67.1517, 0.22 ) }
    dend_28 { pt3dadd( 12.6184, -275.508, 67.0145, 0.29 ) }
    dend_28 { pt3dadd( 12.5761, -276.085, 66.9198, 0.81 ) }
    dend_28 { pt3dadd( 12.4715, -277.473, 66.6486, 0.22 ) }
    dend_28 { pt3dadd( 12.391, -278.579, 66.3943, 0.22 ) }
    dend_28 { pt3dadd( 12.3292, -279.523, 66.076, 0.22 ) }
    dend_28 { pt3dadd( 12.3126, -280.306, 65.7056, 0.52 ) }
    dend_28 { pt3dadd( 12.3206, -280.526, 65.5651, 0.52 ) }
    dend_28 { pt3dadd( 12.4152, -281.665, 64.6218, 0.22 ) }
    dend_28 { pt3dadd( 12.4946, -282.405, 63.8882, 0.37 ) }
    dend_28 { pt3dadd( 12.591, -283.072, 63.1452, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( 12.7333, -283.921, 62.1565, 0.22 ) }
    dend_28 { pt3dadd( 12.8765, -284.723, 61.1923, 0.22 ) }
    dend_28 { pt3dadd( 13.0272, -285.451, 60.3546, 0.22 ) }
    dend_28 { pt3dadd( 13.119, -285.81, 59.9703, 0.37 ) }
    dend_28 { pt3dadd( 13.4123, -286.85, 58.9617, 1.11 ) }
    dend_28 { pt3dadd( 13.747, -288.007, 57.9831, 0.44 ) }
    dend_28 { pt3dadd( 14.0615, -289.05, 57.1791, 0.66 ) }
    dend_28 { pt3dadd( 14.3095, -289.769, 56.6586, 0.59 ) }
    dend_28 { pt3dadd( 14.5408, -290.333, 56.2412, 0.52 ) }
    dend_28 { pt3dadd( 14.8284, -290.928, 55.7607, 0.29 ) }
    dend_28 { pt3dadd( 15.3213, -291.857, 54.9303, 0.15 ) }
    dend_28 { pt3dadd( 15.8608, -292.87, 53.9836, 0.15 ) }
    dend_28 { pt3dadd( 16.0783, -293.31, 53.5523, 0.52 ) }
    dend_28 { pt3dadd( 16.4757, -294.318, 52.5614, 0.74 ) }
    dend_28 { pt3dadd( 16.6428, -294.845, 52.064, 0.74 ) }
    dend_28 { pt3dadd( 16.9964, -296.152, 50.9162, 0.37 ) }
    dend_28 { pt3dadd( 17.2316, -297.298, 50.0741, 0.37 ) }
    dend_28 { pt3dadd( 17.399, -298.415, 49.4384, 0.59 ) }
    dend_28 { pt3dadd( 17.5106, -299.551, 48.9442, 0.88 ) }
    dend_28 { pt3dadd( 17.5479, -300.146, 48.7648, 0.88 ) }
    dend_28 { pt3dadd( 17.6048, -301.367, 48.4938, 0.37 ) }
    dend_28 { pt3dadd( 17.6774, -302.603, 48.3178, 0.66 ) }
    dend_28 { pt3dadd( 17.8035, -303.709, 48.1492, 0.66 ) }
    dend_28 { pt3dadd( 18.009, -304.902, 47.9765, 1.18 ) }
    dend_28 { pt3dadd( 18.2224, -305.801, 47.8406, 0.81 ) }
    dend_28 { pt3dadd( 18.7036, -307.477, 47.5695, 0.44 ) }
    dend_28 { pt3dadd( 19.1614, -308.815, 47.35, 0.37 ) }
    dend_28 { pt3dadd( 19.9443, -310.647, 47.0064, 0.29 ) }
    dend_28 { pt3dadd( 20.1015, -310.958, 46.9321, 0.52 ) }
    dend_28 { pt3dadd( 20.4271, -311.513, 46.7788, 0.96 ) }
    dend_28 { pt3dadd( 20.9953, -312.395, 46.4625, 0.29 ) }
    dend_28 { pt3dadd( 21.3453, -312.888, 46.2654, 0.29 ) }
    dend_28 { pt3dadd( 21.7317, -313.425, 46.0301, 0.59 ) }
    dend_28 { pt3dadd( 22.3998, -314.403, 45.7345, 0.59 ) }
    dend_28 { pt3dadd( 22.7657, -314.951, 45.606, 0.59 ) }
    dend_28 { pt3dadd( 23.7766, -316.508, 45.3357, 0.29 ) }
    dend_28 { pt3dadd( 24.4334, -317.548, 45.2397, 0.22 ) }
    dend_28 { pt3dadd( 24.7661, -318.119, 45.2565, 0.88 ) }
    dend_28 { pt3dadd( 25.6873, -319.915, 45.6207, 0.37 ) }
    dend_28 { pt3dadd( 25.9302, -320.472, 45.8236, 0.66 ) }
    dend_28 { pt3dadd( 26.0861, -320.9, 46.0604, 0.66 ) }
    dend_28 { pt3dadd( 26.4036, -321.906, 46.8176, 0.44 ) }
    dend_28 { pt3dadd( 26.589, -322.586, 47.4673, 0.44 ) }
    dend_28 { pt3dadd( 26.7849, -323.352, 48.4297, 0.44 ) }
    dend_28 { pt3dadd( 26.9254, -323.935, 49.3049, 0.81 ) }
    dend_28 { pt3dadd( 27.2342, -324.951, 51.0319, 0.22 ) }
    dend_28 { pt3dadd( 27.4093, -325.406, 51.8938, 0.37 ) }
    dend_28 { pt3dadd( 27.7764, -326.146, 53.4402, 0.37 ) }
    dend_28 { pt3dadd( 28.2859, -326.939, 55.151, 0.37 ) }
    dend_28 { pt3dadd( 28.5566, -327.265, 55.8556, 0.66 ) }
    dend_28 { pt3dadd( 29.055, -327.747, 56.988, 0.22 ) }
    dend_28 { pt3dadd( 29.373, -328.0, 57.5958, 0.22 ) }
    dend_28 { pt3dadd( 29.6618, -328.189, 58.161, 0.74 ) }
    dend_28 { pt3dadd( 29.9626, -328.335, 58.7553, 0.74 ) }
    dend_28 { pt3dadd( 30.5807, -328.504, 60.2196, 0.22 ) }
    dend_28 { pt3dadd( 31.0874, -328.524, 61.7792, 0.22 ) }
    dend_28 { pt3dadd( 31.3027, -328.488, 62.697, 0.37 ) }
    dend_28 { pt3dadd( 31.7745, -328.34, 65.2829, 0.37 ) }
    dend_28 { pt3dadd( 31.8771, -328.283, 66.1376, 0.74 ) }
    dend_28 { pt3dadd( 32.0272, -328.104, 68.3358, 0.74 ) }
    dend_28 { pt3dadd( 32.0776, -327.954, 70.0707, 0.52 ) }
    dend_28 { pt3dadd( 32.0932, -327.825, 72.0956, 0.52 ) }
    dend_28 { pt3dadd( 32.0885, -327.804, 72.8062, 0.52 ) }
    dend_28 { pt3dadd( 32.0629, -327.78, 74.9186, 0.52 ) }
    dend_28 { pt3dadd( 32.0434, -327.789, 76.0144, 0.52 ) }
    dend_28 { pt3dadd( 32.0133, -327.834, 77.9385, 0.52 ) }
    dend_28 { pt3dadd( 32.0022, -327.851, 78.5705, 0.52 ) }
    dend_28 { pt3dadd( 31.9676, -327.918, 83.1902, 0.52 ) }
    // Section: dend_22, id: dend_22, parent: dend_10 (entry count 68/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -13.9188, 27.4935, -7.77388, 0.96 ) }
    dend_22 { pt3dadd( -16.3598, 29.3882, -7.24132, 0.96 ) }
    dend_22 { pt3dadd( -17.5209, 30.3397, -6.96639, 0.96 ) }
    dend_22 { pt3dadd( -18.8093, 31.5337, -6.59603, 0.88 ) }
    dend_22 { pt3dadd( -19.9802, 32.7261, -6.21628, 0.88 ) }
    dend_22 { pt3dadd( -21.0964, 33.9851, -5.76492, 0.81 ) }
    dend_22 { pt3dadd( -22.188, 35.3766, -5.20272, 0.66 ) }
    dend_22 { pt3dadd( -22.8356, 36.4423, -4.64551, 1.03 ) }
    dend_22 { pt3dadd( -23.4816, 37.7545, -3.7984, 1.18 ) }
    dend_22 { pt3dadd( -23.6786, 38.2325, -3.41687, 1.33 ) }
    dend_22 { pt3dadd( -24.1725, 39.522, -2.23025, 1.03 ) }
    dend_22 { pt3dadd( -24.7349, 40.8885, -0.904035, 0.96 ) }
    dend_22 { pt3dadd( -25.3655, 42.1639, 0.487259, 0.96 ) }
    dend_22 { pt3dadd( -26.3368, 43.6382, 2.33407, 1.33 ) }
    dend_22 { pt3dadd( -27.2142, 44.6387, 3.79742, 1.03 ) }
    dend_22 { pt3dadd( -27.6655, 45.037, 4.52664, 1.03 ) }
    dend_22 { pt3dadd( -28.8854, 45.8233, 6.45823, 0.74 ) }
    dend_22 { pt3dadd( -29.5881, 46.1711, 7.61812, 0.96 ) }
    dend_22 { pt3dadd( -30.1237, 46.4096, 8.5529, 1.55 ) }
    dend_22 { pt3dadd( -30.9931, 46.8443, 10.2827, 1.25 ) }
    dend_22 { pt3dadd( -31.81, 47.398, 12.4315, 1.03 ) }
    dend_22 { pt3dadd( -32.2446, 47.8355, 14.0995, 0.74 ) }
    dend_22 { pt3dadd( -32.4558, 48.1699, 15.2596, 0.74 ) }
    dend_22 { pt3dadd( -32.6418, 48.5598, 16.5522, 1.11 ) }
    dend_22 { pt3dadd( -32.8129, 48.9651, 17.8688, 1.11 ) }
    dend_22 { pt3dadd( -33.1913, 49.8014, 20.4974, 0.96 ) }
    dend_22 { pt3dadd( -33.5887, 50.6489, 22.9224, 1.18 ) }
    dend_22 { pt3dadd( -33.8959, 51.3124, 24.6071, 1.55 ) }
    dend_22 { pt3dadd( -34.1406, 51.8207, 25.7313, 1.55 ) }
    dend_22 { pt3dadd( -34.4546, 52.42, 26.8326, 1.18 ) }
    dend_22 { pt3dadd( -34.8379, 53.0756, 27.7099, 0.88 ) }
    dend_22 { pt3dadd( -35.4182, 54.0934, 28.6913, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( -36.0191, 55.2671, 29.6868, 0.96 ) }
    dend_22 { pt3dadd( -36.4044, 56.1754, 30.4471, 1.18 ) }
    dend_22 { pt3dadd( -36.7477, 57.2458, 31.329, 1.18 ) }
    dend_22 { pt3dadd( -37.0411, 58.6846, 32.5311, 1.11 ) }
    dend_22 { pt3dadd( -37.2829, 60.6073, 34.176, 1.18 ) }
    dend_22 { pt3dadd( -37.4174, 62.4421, 35.7772, 1.03 ) }
    dend_22 { pt3dadd( -37.4635, 63.8633, 37.1056, 1.03 ) }
    dend_22 { pt3dadd( -37.4396, 65.3329, 38.5945, 0.88 ) }
    dend_22 { pt3dadd( -37.3462, 66.8525, 40.1703, 1.03 ) }
    dend_22 { pt3dadd( -37.2251, 68.1209, 41.4982, 0.74 ) }
    dend_22 { pt3dadd( -37.0839, 69.4293, 42.8202, 0.66 ) }
    dend_22 { pt3dadd( -36.887, 71.0297, 44.3926, 0.59 ) }
    dend_22 { pt3dadd( -36.6565, 72.8364, 46.2432, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -13.9188, 27.4935, -7.77388, 1.03 ) }
    dend_11 { pt3dadd( -15.6759, 27.969, -10.6898, 1.03 ) }
    dend_11 { pt3dadd( -17.541, 28.4189, -13.447, 1.03 ) }
    dend_11 { pt3dadd( -19.2189, 28.7805, -15.6784, 1.18 ) }
    dend_11 { pt3dadd( -21.2229, 29.163, -18.16, 1.18 ) }
    dend_11 { pt3dadd( -22.6186, 29.4182, -19.8099, 1.18 ) }
    dend_11 { pt3dadd( -24.1991, 29.7102, -21.6634, 1.03 ) }
    dend_11 { pt3dadd( -25.6932, 29.9976, -23.2437, 0.96 ) }
    dend_11 { pt3dadd( -26.7653, 30.2269, -24.2965, 1.18 ) }
    dend_11 { pt3dadd( -27.958, 30.5035, -25.4401, 1.03 ) }
    dend_11 { pt3dadd( -29.0693, 30.7717, -26.4953, 1.03 ) }
    dend_11 { pt3dadd( -30.4903, 31.1374, -27.8285, 1.03 ) }
    dend_11 { pt3dadd( -31.593, 31.4342, -28.8327, 1.18 ) }
    dend_11 { pt3dadd( -33.3215, 31.9284, -30.247, 1.18 ) }
    dend_11 { pt3dadd( -34.5265, 32.3057, -31.1372, 1.18 ) }
    dend_11 { pt3dadd( -35.9457, 32.7845, -32.1265, 1.11 ) }
    dend_11 { pt3dadd( -37.4357, 33.3015, -33.0771, 1.18 ) }
    dend_11 { pt3dadd( -38.3585, 33.6481, -33.5987, 0.96 ) }
    dend_11 { pt3dadd( -39.6727, 34.2285, -34.2743, 0.81 ) }
    dend_11 { pt3dadd( -41.3031, 35.1101, -35.0575, 1.03 ) }
    dend_11 { pt3dadd( -43.6875, 36.6196, -36.1389, 1.25 ) }
    dend_11 { pt3dadd( -44.4405, 37.1511, -36.4707, 1.25 ) }
    dend_11 { pt3dadd( -45.5705, 37.9806, -36.9363, 0.88 ) }
    dend_11 { pt3dadd( -47.141, 39.1064, -37.5444, 0.88 ) }
    dend_11 { pt3dadd( -48.933, 40.2974, -38.174, 1.11 ) }
    dend_11 { pt3dadd( -50.4345, 41.1901, -38.5953, 1.11 ) }
    dend_11 { pt3dadd( -52.3191, 42.2084, -39.0211, 0.96 ) }
    dend_11 { pt3dadd( -53.891, 42.9802, -39.3704, 1.03 ) }
    dend_11 { pt3dadd( -55.4078, 43.658, -39.7165, 1.03 ) }
    dend_11 { pt3dadd( -56.9835, 44.2848, -40.0741, 0.96 ) }
    dend_11 { pt3dadd( -58.446, 44.8287, -40.3772, 0.96 ) }
    dend_11 { pt3dadd( -60.0176, 45.3865, -40.7273, 0.96 ) }
    dend_11 { pt3dadd( -61.9906, 46.0445, -41.1459, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 46/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -15.1079, 93.7118, -45.8741, 1.18 ) }
    dend_9 { pt3dadd( -16.0145, 96.433, -45.6391, 1.18 ) }
    dend_9 { pt3dadd( -16.5184, 98.3145, -45.4645, 0.96 ) }
    dend_9 { pt3dadd( -16.7539, 99.5852, -45.3846, 0.96 ) }
    dend_9 { pt3dadd( -16.901, 100.759, -45.3701, 0.96 ) }
    dend_9 { pt3dadd( -17.1071, 102.925, -45.4508, 0.96 ) }
    dend_9 { pt3dadd( -17.3165, 105.05, -45.6355, 1.03 ) }
    dend_9 { pt3dadd( -17.4118, 106.617, -45.8644, 1.11 ) }
    dend_9 { pt3dadd( -17.4646, 108.509, -46.2775, 0.88 ) }
    dend_9 { pt3dadd( -17.5399, 109.962, -46.6981, 0.88 ) }
    dend_9 { pt3dadd( -17.7136, 111.434, -47.1841, 0.88 ) }
    dend_9 { pt3dadd( -18.0177, 113.239, -47.82, 1.03 ) }
    dend_9 { pt3dadd( -18.2723, 114.447, -48.2421, 1.03 ) }
    dend_9 { pt3dadd( -18.9002, 116.877, -48.9976, 1.18 ) }
    dend_9 { pt3dadd( -19.5977, 119.389, -49.6615, 0.88 ) }
    dend_9 { pt3dadd( -20.4513, 122.467, -50.3358, 0.81 ) }
    dend_9 { pt3dadd( -20.7487, 123.601, -50.5323, 0.96 ) }
    dend_9 { pt3dadd( -21.038, 124.766, -50.7099, 0.96 ) }
    dend_9 { pt3dadd( -21.6274, 127.094, -51.0705, 0.88 ) }
    dend_9 { pt3dadd( -22.0557, 128.741, -51.3095, 0.88 ) }
    dend_9 { pt3dadd( -22.5114, 130.572, -51.6214, 1.11 ) }
    dend_9 { pt3dadd( -23.1952, 133.404, -52.1985, 1.25 ) }
    dend_9 { pt3dadd( -23.643, 135.215, -52.6086, 1.03 ) }
    dend_9 { pt3dadd( -24.1252, 137.191, -53.099, 1.03 ) }
    dend_9 { pt3dadd( -24.4878, 138.732, -53.5039, 1.18 ) }
    dend_9 { pt3dadd( -25.0826, 141.45, -54.3082, 0.96 ) }
    dend_9 { pt3dadd( -25.4964, 143.655, -55.005, 1.11 ) }
    dend_9 { pt3dadd( -25.7531, 145.523, -55.5858, 1.11 ) }
    dend_9 { pt3dadd( -25.9208, 147.606, -56.1377, 1.18 ) }
    dend_9 { pt3dadd( -25.946, 149.63, -56.5685, 0.74 ) }
    dend_9 { pt3dadd( -25.8317, 151.646, -56.8896, 0.88 ) }
    dend_9 { pt3dadd( -25.645, 153.096, -57.0104, 1.25 ) }
    dend_9 { pt3dadd( -25.238, 155.085, -57.024, 1.33 ) }
    dend_9 { pt3dadd( -24.686, 157.145, -56.8387, 0.96 ) }
    dend_9 { pt3dadd( -24.129, 158.874, -56.5004, 0.74 ) }
    dend_9 { pt3dadd( -23.5921, 160.377, -56.0773, 0.81 ) }
    dend_9 { pt3dadd( -23.1449, 161.611, -55.5785, 0.81 ) }
    dend_9 { pt3dadd( -22.6007, 163.155, -54.8464, 0.74 ) }
    dend_9 { pt3dadd( -22.2072, 164.462, -54.1417, 1.25 ) }
    dend_9 { pt3dadd( -21.7586, 166.22, -53.098, 1.4 ) }
    dend_9 { pt3dadd( -21.5247, 167.583, -52.235, 1.4 ) }
    dend_9 { pt3dadd( -21.2317, 170.329, -50.4537, 0.88 ) }
    dend_9 { pt3dadd( -21.1999, 170.96, -50.0335, 0.88 ) }
    dend_9 { pt3dadd( -21.1922, 172.625, -48.9239, 0.88 ) }
    dend_9 { pt3dadd( -21.2173, 173.818, -48.1764, 0.88 ) }
    dend_9 { pt3dadd( -21.295, 175.837, -47.0779, 0.96 ) }
    dend_9 { pt3dadd( -21.3476, 177.09, -46.5322, 0.96 ) }
    dend_9 { pt3dadd( -21.4264, 178.976, -45.926, 1.55 ) }
    dend_9 { pt3dadd( -21.4655, 179.611, -45.7441, 1.55 ) }
    dend_9 { pt3dadd( -21.587, 182.159, -45.1825, 1.18 ) }
    dend_9 { pt3dadd( -21.715, 184.765, -44.7896, 1.25 ) }
    dend_9 { pt3dadd( -21.8322, 186.862, -44.6713, 1.62 ) }
    dend_9 { pt3dadd( -21.9136, 187.947, -44.7175, 1.62 ) }
    dend_9 { pt3dadd( -22.193, 190.91, -45.0948, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( -22.4383, 193.208, -45.5744, 0.96 ) }
    dend_9 { pt3dadd( -22.6159, 194.723, -46.027, 1.33 ) }
    dend_9 { pt3dadd( -22.8774, 196.946, -46.8992, 1.11 ) }
    dend_9 { pt3dadd( -23.0662, 199.106, -47.9618, 1.33 ) }
    dend_9 { pt3dadd( -23.1538, 200.66, -48.8379, 1.33 ) }
    dend_9 { pt3dadd( -23.186, 202.618, -50.1267, 1.47 ) }
    dend_9 { pt3dadd( -23.1966, 203.832, -50.9525, 1.62 ) }
    dend_9 { pt3dadd( -23.1725, 206.072, -52.5061, 1.03 ) }
    dend_9 { pt3dadd( -23.1308, 207.992, -53.8122, 0.96 ) }
    dend_9 { pt3dadd( -23.0852, 209.29, -54.6458, 0.88 ) }
    dend_9 { pt3dadd( -22.9552, 211.348, -55.9396, 0.81 ) }
    dend_9 { pt3dadd( -22.9114, 212.354, -56.5069, 1.18 ) }
    dend_9 { pt3dadd( -22.8873, 215.282, -57.9788, 0.96 ) }
    dend_9 { pt3dadd( -23.0058, 217.955, -59.1577, 0.96 ) }
    dend_9 { pt3dadd( -23.262, 220.151, -59.929, 0.74 ) }
    dend_9 { pt3dadd( -23.6631, 222.449, -60.5614, 0.59 ) }
    dend_9 { pt3dadd( -24.3448, 225.393, -61.1309, 0.59 ) }
    dend_9 { pt3dadd( -24.9464, 227.607, -61.4772, 0.52 ) }
    dend_9 { pt3dadd( -25.4051, 229.042, -61.6295, 0.74 ) }
    dend_9 { pt3dadd( -26.4403, 231.823, -61.8784, 1.03 ) }
    dend_9 { pt3dadd( -27.0406, 233.217, -61.9818, 1.11 ) }
    dend_9 { pt3dadd( -27.7878, 234.851, -62.0697, 0.74 ) }
    dend_9 { pt3dadd( -28.8169, 237.15, -62.2119, 0.66 ) }
    dend_9 { pt3dadd( -29.3535, 238.382, -62.307, 0.52 ) }
    dend_9 { pt3dadd( -29.9256, 239.809, -62.466, 0.22 ) }
    dend_9 { pt3dadd( -30.7748, 242.125, -62.9158, 0.15 ) }
    dend_9 { pt3dadd( -31.0521, 242.862, -63.0635, 0.22 ) }
    dend_9 { pt3dadd( -34.1626, 255.451, -66.5969, 0.22 ) }
    dend_9 { pt3dadd( -34.588, 267.817, -71.8459, 0.22 ) }
    dend_9 { pt3dadd( -35.9073, 280.589, -75.8188, 0.22 ) }
    dend_9 { pt3dadd( -39.1932, 292.913, -80.0594, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 31/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -15.1079, 93.7118, -45.8741, 0.66 ) }
    dend_6 { pt3dadd( -13.6014, 94.7721, -47.6538, 0.66 ) }
    dend_6 { pt3dadd( -12.5846, 95.4877, -48.8549, 0.59 ) }
    dend_6 { pt3dadd( -11.5631, 96.2067, -50.0616, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 35/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 55.4611, 23.6224, 15.3695, 0.88 ) }
    dend_43 { pt3dadd( 56.5857, 24.4539, 14.1396, 0.88 ) }
    dend_43 { pt3dadd( 57.5238, 25.1856, 12.9907, 0.59 ) }
    dend_43 { pt3dadd( 58.6133, 26.0133, 11.6553, 0.59 ) }
    dend_43 { pt3dadd( 59.4184, 26.5448, 10.7422, 0.59 ) }
    dend_43 { pt3dadd( 60.139, 26.9506, 9.93346, 0.59 ) }
    dend_43 { pt3dadd( 60.9001, 27.318, 9.05797, 0.81 ) }
    dend_43 { pt3dadd( 61.7263, 27.6078, 8.03479, 0.81 ) }
    dend_43 { pt3dadd( 62.3652, 27.7276, 7.26038, 0.81 ) }
    dend_43 { pt3dadd( 63.3594, 27.7713, 6.13959, 0.52 ) }
    dend_43 { pt3dadd( 64.55, 27.6936, 4.82454, 0.52 ) }
    dend_43 { pt3dadd( 65.4517, 27.556, 3.81758, 0.52 ) }
    dend_43 { pt3dadd( 66.2795, 27.4004, 2.90657, 0.52 ) }
    dend_43 { pt3dadd( 66.8742, 27.3116, 2.26871, 0.52 ) }
    dend_43 { pt3dadd( 67.7583, 27.2087, 1.25654, 0.44 ) }
    dend_43 { pt3dadd( 68.8536, 27.1193, -0.0645648, 0.59 ) }
    dend_43 { pt3dadd( 69.7962, 27.0491, -1.13361, 0.44 ) }
    dend_43 { pt3dadd( 70.3661, 26.9864, -1.78675, 0.66 ) }
    dend_43 { pt3dadd( 71.1891, 26.8558, -2.71267, 0.37 ) }
    dend_43 { pt3dadd( 72.2415, 26.5988, -3.90911, 0.37 ) }
    dend_43 { pt3dadd( 73.2629, 26.2381, -4.99465, 0.59 ) }
    dend_43 { pt3dadd( 74.0214, 25.898, -5.77767, 1.11 ) }
    dend_43 { pt3dadd( 75.3304, 25.2499, -7.19743, 1.11 ) }
    dend_43 { pt3dadd( 76.3373, 24.7461, -8.33357, 0.66 ) }
    dend_43 { pt3dadd( 77.4369, 24.2617, -9.59665, 0.52 ) }
    dend_43 { pt3dadd( 78.2377, 23.9988, -10.5628, 0.29 ) }
    dend_43 { pt3dadd( 79.0952, 23.8654, -11.7182, 0.29 ) }
    dend_43 { pt3dadd( 79.8742, 23.9226, -13.0524, 0.59 ) }
    dend_43 { pt3dadd( 80.2661, 24.075, -13.8757, 0.59 ) }
    dend_43 { pt3dadd( 80.8325, 24.472, -15.2849, 0.37 ) }
    dend_43 { pt3dadd( 81.3403, 24.9352, -16.6755, 0.37 ) }
    dend_43 { pt3dadd( 81.6782, 25.2621, -17.6548, 0.59 ) }
    dend_43 { pt3dadd( 82.4041, 25.8952, -19.6679, 1.03 ) }
    dend_43 { pt3dadd( 82.9331, 26.2687, -21.0299, 0.88 ) }
    dend_43 { pt3dadd( 83.4057, 26.5422, -22.1478, 0.44 ) }
    dend_43 { pt3dadd( 84.1328, 26.8755, -23.8372, 0.44 ) }
    dend_43 { pt3dadd( 84.5362, 27.0226, -24.6725, 0.44 ) }
    dend_43 { pt3dadd( 84.9001, 27.102, -25.3614, 0.66 ) }
    dend_43 { pt3dadd( 85.2354, 27.1302, -25.8967, 0.66 ) }
    dend_43 { pt3dadd( 85.7773, 27.1039, -26.7441, 0.44 ) }
    dend_43 { pt3dadd( 87.1092, 26.9059, -28.7486, 0.44 ) }
    dend_43 { pt3dadd( 87.4966, 26.8156, -29.2934, 0.81 ) }
    dend_43 { pt3dadd( 88.0972, 26.6118, -30.1785, 1.03 ) }
    dend_43 { pt3dadd( 88.8601, 26.2113, -31.5188, 0.66 ) }
    dend_43 { pt3dadd( 89.3679, 25.8137, -32.6718, 0.66 ) }
    dend_43 { pt3dadd( 89.8385, 25.2134, -34.3128, 0.52 ) }
    dend_43 { pt3dadd( 90.084, 24.5773, -35.9875, 0.37 ) }
    dend_43 { pt3dadd( 90.1206, 23.9341, -37.6662, 0.44 ) }
    dend_43 { pt3dadd( 89.9342, 22.9231, -40.2771, 0.52 ) }
    dend_43 { pt3dadd( 89.6731, 22.1281, -42.2724, 0.52 ) }
    dend_43 { pt3dadd( 89.3172, 21.1037, -44.7432, 0.52 ) }
    dend_43 { pt3dadd( 89.0164, 20.2395, -46.8124, 0.81 ) }
    dend_43 { pt3dadd( 88.8231, 19.5669, -48.4792, 1.03 ) }
    dend_43 { pt3dadd( 88.7729, 18.9883, -50.0376, 1.03 ) }
    dend_43 { pt3dadd( 88.9142, 18.614, -51.1924, 0.81 ) }
    dend_43 { pt3dadd( 89.3894, 18.1716, -52.8336, 0.59 ) }
    dend_43 { pt3dadd( 89.9517, 17.9297, -54.0493, 0.59 ) }
    dend_43 { pt3dadd( 90.429, 17.8345, -54.8725, 0.44 ) }
    dend_43 { pt3dadd( 91.4545, 17.7132, -56.4756, 0.44 ) }
    dend_43 { pt3dadd( 92.232, 17.6347, -57.5984, 0.37 ) }
    dend_43 { pt3dadd( 92.8208, 17.5671, -58.3789, 0.37 ) }
    dend_43 { pt3dadd( 93.521, 17.4599, -59.1933, 0.96 ) }
    dend_43 { pt3dadd( 94.8923, 17.1761, -60.5715, 0.66 ) }
    dend_43 { pt3dadd( 95.8076, 16.9572, -61.4276, 0.66 ) }
    dend_43 { pt3dadd( 96.7373, 16.7138, -62.3113, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_43 { pt3dadd( 97.8828, 16.3969, -63.6124, 0.74 ) }
    dend_43 { pt3dadd( 98.8049, 16.1457, -64.9831, 0.74 ) }
    dend_43 { pt3dadd( 99.7284, 15.9532, -66.7676, 0.74 ) }
    dend_43 { pt3dadd( 100.314, 15.932, -68.2454, 0.59 ) }
    dend_43 { pt3dadd( 101.054, 16.1081, -70.6326, 0.81 ) }
    dend_43 { pt3dadd( 101.629, 16.4782, -73.0999, 0.96 ) }
    dend_43 { pt3dadd( 102.029, 16.9945, -75.4378, 0.96 ) }
    dend_43 { pt3dadd( 102.209, 17.3719, -76.6298, 0.66 ) }
    dend_43 { pt3dadd( 102.42, 17.8624, -77.8082, 0.59 ) }
    dend_43 { pt3dadd( 102.617, 18.2285, -78.6139, 0.44 ) }
    dend_43 { pt3dadd( 103.042, 18.8798, -79.8418, 0.88 ) }
    dend_43 { pt3dadd( 103.27, 19.1586, -80.4319, 0.88 ) }
    dend_43 { pt3dadd( 103.714, 19.5237, -81.8547, 0.29 ) }
    dend_43 { pt3dadd( 104.099, 19.5468, -84.0973, 0.29 ) }
    dend_43 { pt3dadd( 104.295, 19.1437, -86.8565, 0.29 ) }
    dend_43 { pt3dadd( 104.314, 18.9645, -87.6984, 0.88 ) }
    dend_43 { pt3dadd( 104.287, 18.428, -89.8975, 0.88 ) }
    dend_43 { pt3dadd( 104.219, 18.0145, -91.6833, 0.88 ) }
    dend_43 { pt3dadd( 104.102, 17.7265, -93.1534, 0.88 ) }
    dend_43 { pt3dadd( 103.884, 17.5675, -95.0372, 0.88 ) }
    dend_43 { pt3dadd( 103.798, 17.6572, -95.7121, 0.88 ) }
    dend_43 { pt3dadd( 103.719, 17.9872, -96.4725, 0.88 ) }
    dend_43 { pt3dadd( 103.572, 18.9237, -97.4327, 0.52 ) }
    dend_43 { pt3dadd( 103.383, 19.8174, -98.1469, 0.52 ) }
    dend_43 { pt3dadd( 103.163, 20.6065, -98.7663, 1.03 ) }
    dend_43 { pt3dadd( 102.931, 21.3681, -99.4194, 1.03 ) }
    dend_43 { pt3dadd( 102.678, 22.1796, -100.227, 0.81 ) }
    dend_43 { pt3dadd( 102.333, 23.3538, -101.586, 0.44 ) }
    dend_43 { pt3dadd( 102.112, 24.3119, -102.866, 0.52 ) }
    dend_43 { pt3dadd( 101.979, 25.0954, -104.05, 0.52 ) }
    dend_43 { pt3dadd( 101.837, 25.905, -105.461, 0.66 ) }
    dend_43 { pt3dadd( 101.718, 26.2596, -106.235, 0.52 ) }
    dend_43 { pt3dadd( 101.462, 26.7358, -107.441, 0.66 ) }
    dend_43 { pt3dadd( 101.118, 27.2535, -108.772, 0.88 ) }
    dend_43 { pt3dadd( 100.493, 28.0837, -110.744, 0.59 ) }
    dend_43 { pt3dadd( 100.013, 28.687, -112.069, 0.59 ) }
    dend_43 { pt3dadd( 99.0028, 29.8635, -114.686, 0.52 ) }
    dend_43 { pt3dadd( 98.6163, 30.3193, -115.72, 0.52 ) }
    dend_43 { pt3dadd( 98.3697, 30.6938, -116.562, 0.52 ) }
    dend_43 { pt3dadd( 98.2139, 31.2896, -117.753, 0.52 ) }
    dend_43 { pt3dadd( 98.4506, 31.9586, -118.73, 0.44 ) }
    dend_43 { pt3dadd( 98.9707, 32.7427, -119.563, 0.74 ) }
    dend_43 { pt3dadd( 99.3231, 33.1994, -119.943, 0.81 ) }
    dend_43 { pt3dadd( 100.367, 34.4401, -120.957, 0.59 ) }
    dend_43 { pt3dadd( 101.077, 35.2262, -121.674, 0.66 ) }
    dend_43 { pt3dadd( 101.989, 36.2349, -122.598, 0.59 ) }
    dend_43 { pt3dadd( 102.907, 37.3301, -123.542, 0.59 ) }
    dend_43 { pt3dadd( 103.573, 38.2074, -124.222, 0.66 ) }
    dend_43 { pt3dadd( 104.275, 39.2158, -124.966, 0.52 ) }
    dend_43 { pt3dadd( 105.283, 40.7736, -126.025, 0.81 ) }
    dend_43 { pt3dadd( 109.818, 41.7574, -136.388, 0.81 ) }
    dend_43 { pt3dadd( 113.069, 42.4374, -147.245, 0.81 ) }
    dend_43 { pt3dadd( 115.067, 42.5472, -158.422, 0.81 ) }
    dend_43 { pt3dadd( 115.392, 44.0542, -169.671, 0.81 ) }
    dend_43 { pt3dadd( 116.611, 47.6116, -180.385, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 55.4611, 23.6224, 15.3695, 0.81 ) }
    dend_40 { pt3dadd( 55.2806, 24.2082, 15.196, 0.81 ) }
    dend_40 { pt3dadd( 55.0817, 24.9316, 15.0063, 0.74 ) }
    dend_40 { pt3dadd( 54.9161, 25.6216, 14.8936, 0.59 ) }
    dend_40 { pt3dadd( 54.6971, 26.6601, 14.7661, 0.37 ) }
    dend_40 { pt3dadd( 54.5657, 27.4731, 14.7052, 0.44 ) }
    dend_40 { pt3dadd( 54.4699, 28.2576, 14.6629, 0.44 ) }
    dend_40 { pt3dadd( 54.4106, 29.0642, 14.6452, 0.74 ) }
    dend_40 { pt3dadd( 54.3725, 30.3516, 14.652, 0.44 ) }
    dend_40 { pt3dadd( 54.3949, 30.9664, 14.6616, 0.52 ) }
    dend_40 { pt3dadd( 54.4987, 31.9093, 14.6783, 0.66 ) }
    dend_40 { pt3dadd( 54.5819, 32.4219, 14.6672, 0.44 ) }
    dend_40 { pt3dadd( 54.707, 33.0858, 14.6183, 0.44 ) }
    dend_40 { pt3dadd( 54.8385, 33.706, 14.5385, 0.37 ) }
    dend_40 { pt3dadd( 55.0377, 34.5497, 14.3619, 0.37 ) }
    dend_40 { pt3dadd( 55.2042, 35.2274, 14.1966, 0.44 ) }
    dend_40 { pt3dadd( 55.3341, 35.7303, 14.0559, 0.22 ) }
    dend_40 { pt3dadd( 55.4622, 36.1814, 13.9304, 0.22 ) }
    dend_40 { pt3dadd( 55.6346, 36.7579, 13.7719, 0.29 ) }
    dend_40 { pt3dadd( 55.8175, 37.3773, 13.5868, 0.74 ) }
    dend_40 { pt3dadd( 55.9858, 37.9733, 13.396, 0.59 ) }
    dend_40 { pt3dadd( 56.1403, 38.5376, 13.2042, 0.44 ) }
    dend_40 { pt3dadd( 56.2827, 39.0375, 12.9784, 0.22 ) }
    dend_40 { pt3dadd( 56.4083, 39.4231, 12.7651, 0.22 ) }
    dend_40 { pt3dadd( 56.5896, 39.9172, 12.4842, 0.22 ) }
    dend_40 { pt3dadd( 56.7727, 40.3713, 12.2249, 0.37 ) }
    dend_40 { pt3dadd( 56.8985, 40.663, 12.0416, 0.37 ) }
    dend_40 { pt3dadd( 57.3529, 41.6984, 11.3649, 0.74 ) }
    dend_40 { pt3dadd( 57.6471, 42.3764, 10.9035, 0.22 ) }
    dend_40 { pt3dadd( 57.9632, 43.1289, 10.3974, 0.22 ) }
    dend_40 { pt3dadd( 58.1807, 43.6963, 10.0198, 0.44 ) }
    dend_40 { pt3dadd( 58.3861, 44.3889, 9.51646, 0.29 ) }
    dend_40 { pt3dadd( 58.4697, 44.7912, 9.169, 0.66 ) }
    dend_40 { pt3dadd( 58.5239, 45.2419, 8.74536, 0.66 ) }
    dend_40 { pt3dadd( 58.5338, 45.6806, 8.30689, 0.88 ) }
    dend_40 { pt3dadd( 58.5202, 46.1828, 7.8061, 0.88 ) }
    dend_40 { pt3dadd( 58.5151, 47.1488, 6.90473, 0.59 ) }
    dend_40 { pt3dadd( 58.5841, 48.0848, 6.11032, 0.44 ) }
    dend_40 { pt3dadd( 58.6615, 48.6421, 5.64977, 0.44 ) }
    dend_40 { pt3dadd( 58.8155, 49.4604, 5.02496, 0.52 ) }
    dend_40 { pt3dadd( 58.9477, 50.0642, 4.56797, 0.59 ) }
    dend_40 { pt3dadd( 59.1522, 50.8966, 3.94138, 0.44 ) }
    dend_40 { pt3dadd( 59.3627, 51.6625, 3.38315, 0.22 ) }
    dend_40 { pt3dadd( 59.5286, 52.2696, 2.92016, 0.44 ) }
    dend_40 { pt3dadd( 59.6712, 52.8165, 2.46352, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_40 { pt3dadd( 59.8824, 53.6626, 1.73032, 1.11 ) }
    dend_40 { pt3dadd( 60.0497, 54.478, 1.03498, 0.96 ) }
    dend_40 { pt3dadd( 60.1235, 54.9516, 0.652273, 0.96 ) }
    dend_40 { pt3dadd( 60.2595, 56.0143, -0.14521, 0.59 ) }
    dend_40 { pt3dadd( 60.3429, 56.6982, -0.594515, 0.37 ) }
    dend_40 { pt3dadd( 60.4549, 57.5057, -1.02388, 0.22 ) }
    dend_40 { pt3dadd( 60.5271, 58.0432, -1.2234, 0.66 ) }
    dend_40 { pt3dadd( 60.5855, 58.526, -1.37314, 0.74 ) }
    dend_40 { pt3dadd( 60.6497, 59.0624, -1.53747, 0.52 ) }
    dend_40 { pt3dadd( 60.7373, 59.8192, -1.78636, 0.59 ) }
    dend_40 { pt3dadd( 60.8548, 60.8157, -2.176, 0.66 ) }
    dend_40 { pt3dadd( 60.9627, 61.6749, -2.55119, 0.29 ) }
    dend_40 { pt3dadd( 61.0894, 62.6801, -3.01454, 0.29 ) }
    dend_40 { pt3dadd( 61.1809, 63.3979, -3.38348, 0.37 ) }
    dend_40 { pt3dadd( 61.3163, 64.3518, -3.91632, 0.44 ) }
    dend_40 { pt3dadd( 61.4282, 65.0876, -4.38125, 0.52 ) }
    dend_40 { pt3dadd( 61.5255, 65.7973, -4.8796, 0.66 ) }
    dend_40 { pt3dadd( 61.6218, 66.4478, -5.33472, 0.66 ) }
    dend_40 { pt3dadd( 61.7097, 67.1103, -5.78933, 0.66 ) }
    dend_40 { pt3dadd( 61.7799, 67.7209, -6.21517, 0.96 ) }
    dend_40 { pt3dadd( 61.9189, 68.8374, -7.02953, 0.44 ) }
    dend_40 { pt3dadd( 62.0059, 69.4766, -7.53986, 0.44 ) }
    dend_40 { pt3dadd( 62.1021, 70.0475, -8.04258, 0.59 ) }
    dend_40 { pt3dadd( 62.2769, 70.8673, -8.83217, 0.22 ) }
    dend_40 { pt3dadd( 62.3709, 71.2421, -9.20255, 0.22 ) }
    dend_40 { pt3dadd( 62.456, 71.5466, -9.51346, 0.22 ) }
    dend_40 { pt3dadd( 62.5232, 71.7409, -9.711, 0.22 ) }
    dend_40 { pt3dadd( 62.6563, 72.0887, -10.0541, 0.22 ) }
    dend_40 { pt3dadd( 62.7585, 72.3666, -10.3267, 0.22 ) }
    dend_40 { pt3dadd( 62.8855, 72.7359, -10.6781, 0.66 ) }
    dend_40 { pt3dadd( 63.046, 73.2658, -11.1791, 0.66 ) }
    dend_40 { pt3dadd( 63.192, 73.8521, -11.6973, 0.66 ) }
    dend_40 { pt3dadd( 63.2757, 74.2478, -12.021, 0.37 ) }
    dend_40 { pt3dadd( 63.3854, 74.8959, -12.5257, 0.22 ) }
    dend_40 { pt3dadd( 63.5069, 75.6195, -12.9989, 0.44 ) }
    dend_40 { pt3dadd( 63.6011, 76.1444, -13.2667, 0.44 ) }
    dend_40 { pt3dadd( 63.745, 76.7701, -13.4719, 0.44 ) }
    dend_40 { pt3dadd( 63.9896, 77.6231, -13.5183, 0.22 ) }
    dend_40 { pt3dadd( 64.2447, 78.4463, -13.4808, 0.29 ) }
    dend_40 { pt3dadd( 64.6931, 79.8948, -13.3755, 0.44 ) }
    dend_40 { pt3dadd( 64.9753, 80.8451, -13.3404, 0.66 ) }
    dend_40 { pt3dadd( 65.2333, 81.7636, -13.4165, 0.66 ) }
    dend_40 { pt3dadd( 65.6061, 83.1738, -13.7993, 0.29 ) }
    dend_40 { pt3dadd( 65.8788, 84.3415, -14.4373, 0.37 ) }
    dend_40 { pt3dadd( 66.0266, 85.2428, -15.205, 0.52 ) }
    dend_40 { pt3dadd( 66.058, 85.959, -16.0392, 0.74 ) }
    dend_40 { pt3dadd( 66.0272, 86.696, -17.059, 0.74 ) }
    dend_40 { pt3dadd( 65.9881, 87.1684, -17.7771, 0.74 ) }
    dend_40 { pt3dadd( 65.9191, 87.88, -18.9292, 0.52 ) }
    dend_40 { pt3dadd( 65.8823, 88.5148, -19.8676, 0.59 ) }
    dend_40 { pt3dadd( 65.8403, 89.5526, -21.263, 0.22 ) }
    dend_40 { pt3dadd( 65.8279, 89.9917, -21.8177, 0.22 ) }
    dend_40 { pt3dadd( 65.8153, 90.5139, -22.4358, 0.59 ) }
    dend_40 { pt3dadd( 65.7838, 91.2714, -23.3354, 0.96 ) }
    dend_40 { pt3dadd( 65.7651, 92.0634, -24.2134, 0.37 ) }
    dend_40 { pt3dadd( 65.7816, 92.6574, -24.8408, 0.44 ) }
    dend_40 { pt3dadd( 65.8408, 93.4495, -25.6581, 0.44 ) }
    dend_40 { pt3dadd( 65.9076, 94.1208, -26.3516, 0.44 ) }
    dend_40 { pt3dadd( 65.9792, 94.6493, -26.9136, 0.44 ) }
    dend_40 { pt3dadd( 66.138, 95.4305, -27.7616, 0.22 ) }
    dend_40 { pt3dadd( 66.35, 96.2604, -28.6949, 0.22 ) }
    dend_40 { pt3dadd( 66.437, 96.5308, -28.9975, 0.22 ) }
    dend_40 { pt3dadd( 66.6137, 97.0118, -29.5011, 0.59 ) }
    dend_40 { pt3dadd( 66.9616, 97.8844, -30.3474, 0.29 ) }
    dend_40 { pt3dadd( 67.1915, 98.5036, -30.904, 0.29 ) }
    dend_40 { pt3dadd( 67.3995, 99.1967, -31.4888, 0.52 ) }
    dend_40 { pt3dadd( 67.5424, 99.8439, -31.9769, 0.88 ) }
    dend_40 { pt3dadd( 67.6205, 100.335, -32.3276, 0.88 ) }
    dend_40 { pt3dadd( 67.7105, 101.018, -32.7807, 0.59 ) }
    dend_40 { pt3dadd( 67.8482, 101.913, -33.3271, 0.22 ) }
    dend_40 { pt3dadd( 67.9442, 102.369, -33.6146, 0.29 ) }
    dend_40 { pt3dadd( 68.0531, 102.747, -33.8746, 0.29 ) }
    dend_40 { pt3dadd( 68.2128, 103.178, -34.1859, 0.81 ) }
    dend_40 { pt3dadd( 68.4714, 103.744, -34.614, 0.88 ) }
    dend_40 { pt3dadd( 68.7441, 104.241, -34.9913, 0.59 ) }
    dend_40 { pt3dadd( 69.1269, 104.875, -35.4817, 0.59 ) }
    dend_40 { pt3dadd( 69.5723, 105.618, -36.0535, 0.29 ) }
    dend_40 { pt3dadd( 70.124, 106.597, -36.8086, 0.52 ) }
    dend_40 { pt3dadd( 70.4292, 107.209, -37.3126, 0.59 ) }
    dend_40 { pt3dadd( 70.6833, 107.855, -37.8704, 0.59 ) }
    dend_40 { pt3dadd( 70.8272, 108.337, -38.3062, 0.74 ) }
    dend_40 { pt3dadd( 70.8995, 108.676, -38.6449, 0.74 ) }
    dend_40 { pt3dadd( 70.9818, 109.3, -39.3392, 0.66 ) }
    dend_40 { pt3dadd( 71.0142, 109.873, -40.0325, 0.66 ) }
    dend_40 { pt3dadd( 71.0277, 110.403, -40.6675, 0.74 ) }
    dend_40 { pt3dadd( 71.0689, 111.145, -41.4466, 0.52 ) }
    dend_40 { pt3dadd( 71.1431, 111.684, -41.8784, 0.59 ) }
    dend_40 { pt3dadd( 71.2931, 112.306, -42.2033, 0.44 ) }
    dend_40 { pt3dadd( 71.4883, 112.952, -42.4487, 0.59 ) }
    dend_40 { pt3dadd( 71.6538, 113.464, -42.6217, 0.37 ) }
    dend_40 { pt3dadd( 71.9737, 114.641, -43.062, 0.74 ) }
    dend_40 { pt3dadd( 72.0706, 115.403, -43.4284, 1.03 ) }
    dend_40 { pt3dadd( 72.0448, 116.25, -43.9952, 0.44 ) }
    dend_40 { pt3dadd( 71.7616, 117.444, -45.2161, 0.59 ) }
    dend_40 { pt3dadd( 71.5594, 118.021, -45.9676, 1.18 ) }
    dend_40 { pt3dadd( 71.2642, 118.715, -46.9913, 0.37 ) }
    dend_40 { pt3dadd( 70.9189, 119.365, -48.0569, 0.37 ) }
    dend_40 { pt3dadd( 70.6106, 119.852, -48.9145, 0.81 ) }
    dend_40 { pt3dadd( 70.1074, 120.639, -50.3039, 0.81 ) }
    dend_40 { pt3dadd( 69.8267, 121.156, -51.1234, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 69.5904, 121.74, -51.9784, 0.37 ) }
    dend_40 { pt3dadd( 69.4266, 122.437, -52.906, 0.37 ) }
    dend_40 { pt3dadd( 69.3297, 123.318, -53.9331, 0.37 ) }
    dend_40 { pt3dadd( 69.3278, 123.848, -54.4476, 0.52 ) }
    dend_40 { pt3dadd( 69.3653, 124.463, -54.9187, 0.44 ) }
    dend_40 { pt3dadd( 69.4152, 125.129, -55.4154, 0.66 ) }
    dend_40 { pt3dadd( 69.4873, 125.721, -55.888, 0.81 ) }
    dend_40 { pt3dadd( 69.5512, 126.123, -56.2103, 0.81 ) }
    dend_40 { pt3dadd( 69.6206, 126.565, -56.5698, 0.74 ) }
    dend_40 { pt3dadd( 69.7355, 127.552, -57.3867, 0.66 ) }
    dend_40 { pt3dadd( 69.8331, 128.599, -58.2622, 0.44 ) }
    dend_40 { pt3dadd( 69.8943, 129.464, -58.9676, 0.44 ) }
    dend_40 { pt3dadd( 69.9438, 130.149, -59.5034, 1.03 ) }
    dend_40 { pt3dadd( 69.9965, 130.672, -59.8366, 0.66 ) }
    dend_40 { pt3dadd( 70.0892, 131.387, -60.1441, 0.52 ) }
    dend_40 { pt3dadd( 70.1554, 131.779, -60.2604, 0.74 ) }
    dend_40 { pt3dadd( 70.2334, 132.317, -60.4127, 0.96 ) }
    dend_40 { pt3dadd( 70.2734, 132.618, -60.5177, 0.96 ) }
    dend_40 { pt3dadd( 70.4051, 133.908, -61.1782, 0.66 ) }
    dend_40 { pt3dadd( 70.4627, 134.955, -61.9186, 0.66 ) }
    dend_40 { pt3dadd( 70.4456, 135.852, -62.7268, 0.44 ) }
    dend_40 { pt3dadd( 70.3241, 136.86, -63.818, 0.96 ) }
    dend_40 { pt3dadd( 70.158, 137.497, -64.6329, 0.52 ) }
    dend_40 { pt3dadd( 69.872, 138.102, -65.538, 0.52 ) }
    dend_40 { pt3dadd( 69.544, 138.634, -66.4912, 0.52 ) }
    dend_40 { pt3dadd( 69.2321, 139.009, -67.2467, 0.44 ) }
    dend_40 { pt3dadd( 68.8671, 139.357, -67.9423, 0.44 ) }
    dend_40 { pt3dadd( 68.4836, 139.636, -68.5119, 0.96 ) }
    dend_40 { pt3dadd( 67.6774, 140.054, -69.4462, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 29/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 64.5839, -71.8885, 60.1244, 0.37 ) }
    dend_38 { pt3dadd( 64.8925, -72.6387, 61.3093, 0.37 ) }
    dend_38 { pt3dadd( 65.2924, -73.5184, 62.4387, 0.37 ) }
    dend_38 { pt3dadd( 65.5182, -73.9696, 62.9944, 0.59 ) }
    dend_38 { pt3dadd( 65.8893, -74.6965, 63.8451, 0.44 ) }
    dend_38 { pt3dadd( 66.0956, -75.0475, 64.2994, 0.66 ) }
    dend_38 { pt3dadd( 66.4008, -75.4894, 64.9755, 0.44 ) }
    dend_38 { pt3dadd( 66.8586, -76.1011, 65.9242, 0.44 ) }
    dend_38 { pt3dadd( 67.2255, -76.5524, 66.6248, 0.44 ) }
    dend_38 { pt3dadd( 67.4826, -76.8426, 67.0826, 0.81 ) }
    dend_38 { pt3dadd( 68.3045, -77.7482, 68.4759, 0.81 ) }
    dend_38 { pt3dadd( 69.0753, -78.5999, 69.7745, 0.81 ) }
    dend_38 { pt3dadd( 69.3241, -78.8819, 70.1895, 0.81 ) }
    dend_38 { pt3dadd( 69.6691, -79.3019, 70.7303, 0.44 ) }
    dend_38 { pt3dadd( 69.9827, -79.7361, 71.1877, 0.44 ) }
    dend_38 { pt3dadd( 70.4752, -80.5187, 71.9082, 0.44 ) }
    dend_38 { pt3dadd( 70.7074, -80.9592, 72.2522, 0.66 ) }
    dend_38 { pt3dadd( 70.8688, -81.3079, 72.516, 0.66 ) }
    dend_38 { pt3dadd( 71.2314, -82.1232, 73.2374, 0.52 ) }
    dend_38 { pt3dadd( 71.5408, -82.8988, 74.0153, 0.66 ) }
    dend_38 { pt3dadd( 71.8865, -83.9336, 75.0927, 0.29 ) }
    dend_38 { pt3dadd( 72.0046, -84.357, 75.5499, 0.29 ) }
    dend_38 { pt3dadd( 72.1617, -85.0378, 76.2885, 0.22 ) }
    dend_38 { pt3dadd( 72.3486, -86.0922, 77.4003, 0.22 ) }
    dend_38 { pt3dadd( 72.4466, -86.8113, 78.1442, 0.22 ) }
    dend_38 { pt3dadd( 72.5127, -87.4662, 78.7994, 0.37 ) }
    dend_38 { pt3dadd( 72.5838, -88.4214, 79.7074, 0.74 ) }
    dend_38 { pt3dadd( 72.6179, -88.9742, 80.1874, 0.88 ) }
    dend_38 { pt3dadd( 72.6498, -89.5914, 80.6769, 0.22 ) }
    dend_38 { pt3dadd( 72.6529, -90.6685, 81.389, 0.22 ) }
    dend_38 { pt3dadd( 72.6468, -91.089, 81.6411, 0.22 ) }
    dend_38 { pt3dadd( 72.6145, -91.7531, 81.9512, 0.22 ) }
    dend_38 { pt3dadd( 72.5341, -92.8264, 82.3002, 0.15 ) }
    dend_38 { pt3dadd( 72.481, -93.6421, 82.4955, 0.15 ) }
    dend_38 { pt3dadd( 72.41, -95.1683, 82.8095, 0.22 ) }
    dend_38 { pt3dadd( 72.3724, -96.2236, 82.9992, 0.22 ) }
    dend_38 { pt3dadd( 72.3233, -98.1148, 83.3888, 0.15 ) }
    dend_38 { pt3dadd( 72.2585, -99.6939, 83.7508, 0.15 ) }
    dend_38 { pt3dadd( 72.1769, -101.193, 84.1703, 0.22 ) }
    dend_38 { pt3dadd( 72.1029, -102.496, 84.6133, 0.22 ) }
    dend_38 { pt3dadd( 72.0469, -103.566, 85.0471, 0.22 ) }
    dend_38 { pt3dadd( 71.9738, -104.804, 85.6176, 0.22 ) }
    dend_38 { pt3dadd( 71.8966, -106.401, 86.4957, 0.22 ) }
    dend_38 { pt3dadd( 71.8239, -108.019, 87.427, 0.22 ) }
    dend_38 { pt3dadd( 71.7861, -108.996, 88.003, 0.22 ) }
    dend_38 { pt3dadd( 71.7677, -109.682, 88.3834, 0.52 ) }
    dend_38 { pt3dadd( 71.7701, -110.525, 88.8294, 0.59 ) }
    dend_38 { pt3dadd( 71.8247, -111.529, 89.3223, 0.22 ) }
    dend_38 { pt3dadd( 71.8975, -112.217, 89.64, 0.15 ) }
    dend_38 { pt3dadd( 72.005, -113.1, 90.0691, 0.15 ) }
    dend_38 { pt3dadd( 72.0382, -114.048, 90.4626, 0.22 ) }
    dend_38 { pt3dadd( 71.9825, -114.722, 90.7314, 0.37 ) }
    dend_38 { pt3dadd( 71.8576, -115.654, 91.1014, 0.37 ) }
    dend_38 { pt3dadd( 71.6547, -116.649, 91.4689, 0.15 ) }
    dend_38 { pt3dadd( 71.2473, -118.196, 92.0326, 0.15 ) }
    dend_38 { pt3dadd( 70.4604, -120.581, 92.7957, 0.15 ) }
    dend_38 { pt3dadd( 70.01, -121.673, 93.1343, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 64.5839, -71.8885, 60.1244, 0.29 ) }
    dend_37 { pt3dadd( 64.738, -72.6375, 59.4996, 0.29 ) }
    dend_37 { pt3dadd( 65.0239, -73.8572, 58.4075, 0.37 ) }
    dend_37 { pt3dadd( 65.2038, -74.587, 57.7507, 0.37 ) }
    dend_37 { pt3dadd( 65.4711, -75.5372, 56.9071, 0.22 ) }
    dend_37 { pt3dadd( 65.8117, -76.5623, 55.9958, 0.22 ) }
    dend_37 { pt3dadd( 66.0219, -77.1277, 55.5103, 0.52 ) }
    dend_37 { pt3dadd( 66.4501, -78.3204, 54.5342, 0.29 ) }
    dend_37 { pt3dadd( 66.6544, -78.8791, 54.1055, 0.44 ) }
    dend_37 { pt3dadd( 66.853, -79.4572, 53.6829, 0.66 ) }
    dend_37 { pt3dadd( 67.0991, -80.2819, 53.1159, 0.37 ) }
    dend_37 { pt3dadd( 67.2765, -81.1056, 52.6216, 0.29 ) }
    dend_37 { pt3dadd( 67.39, -82.1032, 52.0608, 0.29 ) }
    dend_37 { pt3dadd( 67.4292, -83.008, 51.5926, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( 67.4526, -84.0058, 51.0973, 0.66 ) }
    dend_37 { pt3dadd( 67.4443, -85.0148, 50.6196, 0.66 ) }
    dend_37 { pt3dadd( 67.4171, -86.021, 50.1747, 0.52 ) }
    dend_37 { pt3dadd( 67.3882, -87.501, 49.5488, 0.37 ) }
    dend_37 { pt3dadd( 67.4197, -88.5223, 49.1406, 0.66 ) }
    dend_37 { pt3dadd( 67.5103, -89.5824, 48.7055, 0.22 ) }
    dend_37 { pt3dadd( 67.6088, -90.2398, 48.3914, 0.22 ) }
    dend_37 { pt3dadd( 67.7507, -90.8953, 48.0336, 0.59 ) }
    dend_37 { pt3dadd( 67.9632, -91.6276, 47.5939, 0.81 ) }
    dend_37 { pt3dadd( 68.3332, -92.6321, 46.9322, 0.52 ) }
    dend_37 { pt3dadd( 68.8312, -93.8136, 46.0898, 0.66 ) }
    dend_37 { pt3dadd( 69.325, -94.8969, 45.2901, 0.44 ) }
    dend_37 { pt3dadd( 69.8806, -96.0362, 44.4904, 0.37 ) }
    dend_37 { pt3dadd( 70.1469, -96.5969, 44.114, 0.37 ) }
    dend_37 { pt3dadd( 70.4326, -97.2248, 43.7222, 0.37 ) }
    dend_37 { pt3dadd( 70.921, -98.3614, 43.1028, 0.66 ) }
    dend_37 { pt3dadd( 71.2211, -99.0783, 42.7747, 1.11 ) }
    dend_37 { pt3dadd( 71.6461, -100.17, 42.3028, 0.66 ) }
    dend_37 { pt3dadd( 72.045, -101.301, 41.7636, 0.44 ) }
    dend_37 { pt3dadd( 72.3374, -102.29, 41.2052, 0.44 ) }
    dend_37 { pt3dadd( 72.5708, -103.158, 40.6572, 0.59 ) }
    dend_37 { pt3dadd( 72.7634, -103.879, 40.1548, 0.52 ) }
    dend_37 { pt3dadd( 73.0682, -104.971, 39.2933, 0.29 ) }
    dend_37 { pt3dadd( 73.3534, -105.928, 38.4308, 0.81 ) }
    dend_37 { pt3dadd( 73.6957, -106.967, 37.4093, 0.22 ) }
    dend_37 { pt3dadd( 73.8191, -107.32, 37.0365, 0.22 ) }
    dend_37 { pt3dadd( 73.9194, -107.576, 36.7527, 0.29 ) }
    dend_37 { pt3dadd( 74.2751, -108.227, 36.0107, 0.52 ) }
    dend_37 { pt3dadd( 74.7408, -108.828, 35.3357, 0.22 ) }
    dend_37 { pt3dadd( 75.2749, -109.354, 34.7736, 0.52 ) }
    dend_37 { pt3dadd( 75.6915, -109.684, 34.4302, 0.52 ) }
    dend_37 { pt3dadd( 76.1828, -110.017, 34.1209, 0.29 ) }
    dend_37 { pt3dadd( 77.3291, -110.661, 33.615, 0.22 ) }
    dend_37 { pt3dadd( 78.0592, -111.005, 33.421, 0.29 ) }
    dend_37 { pt3dadd( 78.6736, -111.276, 33.326, 0.52 ) }
    dend_37 { pt3dadd( 79.2905, -111.551, 33.2803, 0.66 ) }
    dend_37 { pt3dadd( 80.5913, -112.134, 33.2366, 0.44 ) }
    dend_37 { pt3dadd( 81.5957, -112.612, 33.2414, 0.44 ) }
    dend_37 { pt3dadd( 82.5311, -113.092, 33.2581, 0.44 ) }
    dend_37 { pt3dadd( 83.3817, -113.541, 33.2551, 0.52 ) }
    dend_37 { pt3dadd( 84.1214, -113.949, 33.194, 0.66 ) }
    dend_37 { pt3dadd( 84.7592, -114.315, 33.0816, 0.66 ) }
    dend_37 { pt3dadd( 85.6043, -114.793, 32.8251, 0.37 ) }
    dend_37 { pt3dadd( 86.2294, -115.118, 32.6039, 0.37 ) }
    dend_37 { pt3dadd( 86.7481, -115.362, 32.3681, 0.74 ) }
    dend_37 { pt3dadd( 87.4107, -115.643, 32.0264, 1.03 ) }
    dend_37 { pt3dadd( 88.1911, -115.967, 31.597, 0.29 ) }
    dend_37 { pt3dadd( 89.0455, -116.321, 31.1144, 0.22 ) }
    dend_37 { pt3dadd( 89.9544, -116.679, 30.6098, 0.22 ) }
    dend_37 { pt3dadd( 90.9537, -117.085, 30.0826, 0.22 ) }
    dend_37 { pt3dadd( 91.7761, -117.43, 29.7178, 0.29 ) }
    dend_37 { pt3dadd( 92.4531, -117.733, 29.4893, 0.44 ) }
    dend_37 { pt3dadd( 93.1128, -118.039, 29.3312, 0.44 ) }
    dend_37 { pt3dadd( 93.7781, -118.366, 29.2586, 0.81 ) }
    dend_37 { pt3dadd( 94.1611, -118.562, 29.2667, 0.88 ) }
    dend_37 { pt3dadd( 95.2588, -119.157, 29.4299, 0.22 ) }
    dend_37 { pt3dadd( 95.9443, -119.568, 29.6435, 0.15 ) }
    dend_37 { pt3dadd( 96.6979, -120.036, 29.9912, 0.15 ) }
    dend_37 { pt3dadd( 97.5454, -120.576, 30.457, 0.15 ) }
    dend_37 { pt3dadd( 97.9738, -120.863, 30.7085, 0.37 ) }
    dend_37 { pt3dadd( 98.5342, -121.259, 31.0317, 0.81 ) }
    dend_37 { pt3dadd( 99.8109, -122.254, 31.739, 0.52 ) }
    dend_37 { pt3dadd( 100.614, -123.001, 32.1967, 0.66 ) }
    dend_37 { pt3dadd( 100.995, -123.443, 32.4052, 0.52 ) }
    dend_37 { pt3dadd( 101.422, -124.052, 32.5982, 0.22 ) }
    dend_37 { pt3dadd( 101.921, -124.884, 32.8343, 0.22 ) }
    dend_37 { pt3dadd( 102.248, -125.519, 32.9862, 0.44 ) }
    dend_37 { pt3dadd( 102.783, -126.741, 33.2548, 0.44 ) }
    dend_37 { pt3dadd( 103.14, -127.735, 33.5015, 0.44 ) }
    dend_37 { pt3dadd( 103.42, -128.657, 33.7771, 0.44 ) }
    dend_37 { pt3dadd( 103.825, -129.968, 34.312, 0.29 ) }
    dend_37 { pt3dadd( 103.976, -130.413, 34.5276, 0.66 ) }
    dend_37 { pt3dadd( 104.349, -131.365, 35.0432, 0.66 ) }
    dend_37 { pt3dadd( 104.787, -132.338, 35.6113, 0.66 ) }
    dend_37 { pt3dadd( 105.112, -132.995, 36.0066, 1.03 ) }
    dend_37 { pt3dadd( 105.882, -134.411, 36.8217, 0.29 ) }
    dend_37 { pt3dadd( 106.365, -135.24, 37.2435, 0.15 ) }
    dend_37 { pt3dadd( 106.557, -135.53, 37.4008, 0.15 ) }
    dend_37 { pt3dadd( 106.861, -135.912, 37.6424, 0.15 ) }
    dend_37 { pt3dadd( 107.269, -136.304, 37.9698, 0.59 ) }
    dend_37 { pt3dadd( 107.527, -136.515, 38.1791, 0.81 ) }
    dend_37 { pt3dadd( 108.404, -137.193, 38.8817, 0.29 ) }
    dend_37 { pt3dadd( 109.248, -137.817, 39.5967, 0.44 ) }
    dend_37 { pt3dadd( 110.352, -138.632, 40.5317, 0.22 ) }
    dend_37 { pt3dadd( 111.388, -139.39, 41.388, 0.22 ) }
    dend_37 { pt3dadd( 112.175, -139.99, 42.0692, 0.22 ) }
    dend_37 { pt3dadd( 112.968, -140.638, 42.7639, 0.29 ) }
    dend_37 { pt3dadd( 113.647, -141.233, 43.3371, 0.59 ) }
    dend_37 { pt3dadd( 114.109, -141.704, 43.7362, 1.03 ) }
    dend_37 { pt3dadd( 114.371, -142.033, 43.9714, 1.03 ) }
    dend_37 { pt3dadd( 115.491, -143.643, 45.0817, 0.15 ) }
    dend_37 { pt3dadd( 115.936, -144.325, 45.5427, 0.15 ) }
    dend_37 { pt3dadd( 116.269, -144.861, 45.8877, 0.22 ) }
    dend_37 { pt3dadd( 116.896, -145.89, 46.4686, 0.74 ) }
    dend_37 { pt3dadd( 117.338, -146.593, 46.824, 0.96 ) }
    dend_37 { pt3dadd( 118.149, -147.842, 47.3147, 0.22 ) }
    dend_37 { pt3dadd( 118.651, -148.594, 47.4685, 0.22 ) }
    dend_37 { pt3dadd( 119.32, -149.558, 47.5567, 0.37 ) }
    dend_37 { pt3dadd( 120.003, -150.484, 47.5247, 0.15 ) }
    dend_37 { pt3dadd( 120.473, -151.103, 47.3949, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_37 { pt3dadd( 121.065, -151.891, 47.1427, 0.15 ) }
    dend_37 { pt3dadd( 121.676, -152.75, 46.7829, 0.66 ) }
    dend_37 { pt3dadd( 122.361, -153.693, 46.3507, 0.22 ) }
    dend_37 { pt3dadd( 122.951, -154.484, 45.9761, 0.22 ) }
    dend_37 { pt3dadd( 123.583, -155.36, 45.6253, 0.29 ) }
    dend_37 { pt3dadd( 123.967, -155.919, 45.4598, 0.15 ) }
    dend_37 { pt3dadd( 124.29, -156.397, 45.3744, 0.52 ) }
    dend_37 { pt3dadd( 124.647, -156.924, 45.3859, 0.59 ) }
    dend_37 { pt3dadd( 125.306, -157.892, 45.6394, 0.22 ) }
    dend_37 { pt3dadd( 125.905, -158.705, 46.0496, 0.88 ) }
    dend_37 { pt3dadd( 126.367, -159.222, 46.4701, 0.88 ) }
    dend_37 { pt3dadd( 126.786, -159.62, 46.9178, 0.59 ) }
    dend_37 { pt3dadd( 127.797, -160.464, 48.1152, 0.15 ) }
    dend_37 { pt3dadd( 128.604, -161.051, 49.1788, 0.22 ) }
    dend_37 { pt3dadd( 129.096, -161.343, 49.8749, 0.22 ) }
    dend_37 { pt3dadd( 129.94, -161.732, 51.1339, 0.15 ) }
    dend_37 { pt3dadd( 130.511, -161.953, 52.0063, 0.15 ) }
    dend_37 { pt3dadd( 130.856, -162.063, 52.5415, 0.44 ) }
    dend_37 { pt3dadd( 131.634, -162.261, 53.7249, 0.74 ) }
    dend_37 { pt3dadd( 132.287, -162.422, 54.7225, 0.74 ) }
    dend_37 { pt3dadd( 133.046, -162.633, 55.986, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -36.6565, 72.8364, 46.2432, 1.18 ) }
    dend_24 { pt3dadd( -38.4609, 75.2209, 47.5617, 1.18 ) }
    dend_24 { pt3dadd( -39.5345, 76.4493, 48.209, 1.03 ) }
    dend_24 { pt3dadd( -40.5271, 77.4326, 48.6728, 1.4 ) }
    dend_24 { pt3dadd( -41.8167, 78.6643, 49.2948, 1.03 ) }
    dend_24 { pt3dadd( -42.6453, 79.4509, 49.7428, 0.88 ) }
    dend_24 { pt3dadd( -43.9349, 80.6666, 50.4916, 0.59 ) }
    dend_24 { pt3dadd( -45.2961, 81.8309, 51.2151, 0.29 ) }
    dend_24 { pt3dadd( -46.4777, 82.7788, 51.9141, 0.37 ) }
    dend_24 { pt3dadd( -47.7702, 83.7843, 52.7722, 0.74 ) }
    dend_24 { pt3dadd( -48.9232, 84.6831, 53.6366, 1.4 ) }
    dend_24 { pt3dadd( -50.3982, 85.8828, 54.864, 0.88 ) }
    dend_24 { pt3dadd( -51.2069, 86.6188, 55.6799, 0.88 ) }
    dend_24 { pt3dadd( -51.7159, 87.1566, 56.2851, 0.88 ) }
    dend_24 { pt3dadd( -52.3423, 87.8736, 57.1171, 0.59 ) }
    dend_24 { pt3dadd( -53.0988, 88.7371, 58.1518, 0.44 ) }
    dend_24 { pt3dadd( -53.6956, 89.4271, 59.0705, 0.29 ) }
    dend_24 { pt3dadd( -54.678, 90.6335, 60.841, 0.52 ) }
    dend_24 { pt3dadd( -55.2888, 91.4287, 62.086, 0.74 ) }
    dend_24 { pt3dadd( -55.8525, 92.1883, 63.3769, 1.03 ) }
    dend_24 { pt3dadd( -56.5333, 93.0676, 64.9909, 0.59 ) }
    dend_24 { pt3dadd( -57.2075, 93.8951, 66.5808, 0.22 ) }
    dend_24 { pt3dadd( -57.8076, 94.5634, 67.937, 0.22 ) }
    dend_24 { pt3dadd( -58.5172, 95.3092, 69.528, 0.22 ) }
    dend_24 { pt3dadd( -59.1462, 96.0289, 71.0921, 0.37 ) }
    dend_24 { pt3dadd( -59.4507, 96.3902, 71.8723, 0.52 ) }
    dend_24 { pt3dadd( -60.0637, 97.1051, 73.3509, 1.33 ) }
    dend_24 { pt3dadd( -60.8242, 97.9679, 75.0487, 0.29 ) }
    dend_24 { pt3dadd( -61.8214, 98.9749, 77.0127, 0.37 ) }
    dend_24 { pt3dadd( -62.7783, 99.8332, 78.6541, 0.37 ) }
    dend_24 { pt3dadd( -63.4001, 100.317, 79.5789, 0.37 ) }
    dend_24 { pt3dadd( -64.2147, 100.84, 80.6364, 0.66 ) }
    dend_24 { pt3dadd( -64.7223, 101.106, 81.2049, 0.66 ) }
    dend_24 { pt3dadd( -65.7748, 101.59, 82.1971, 0.44 ) }
    dend_24 { pt3dadd( -66.4248, 101.88, 82.7646, 0.44 ) }
    dend_24 { pt3dadd( -67.261, 102.286, 83.5997, 0.22 ) }
    dend_24 { pt3dadd( -67.9167, 102.691, 84.4745, 0.22 ) }
    dend_24 { pt3dadd( -68.6115, 103.22, 85.7378, 0.22 ) }
    dend_24 { pt3dadd( -69.1541, 103.703, 86.9346, 0.15 ) }
    dend_24 { pt3dadd( -69.7803, 104.36, 88.6827, 0.66 ) }
    dend_24 { pt3dadd( -70.3711, 104.99, 90.3962, 0.29 ) }
    dend_24 { pt3dadd( -71.0039, 105.617, 92.1839, 0.66 ) }
    dend_24 { pt3dadd( -71.6774, 106.166, 93.8542, 1.03 ) }
    dend_24 { pt3dadd( -72.2829, 106.527, 95.0938, 1.25 ) }
    dend_24 { pt3dadd( -73.8484, 107.179, 97.7925, 0.22 ) }
    dend_24 { pt3dadd( -74.8215, 107.444, 99.1492, 0.22 ) }
    dend_24 { pt3dadd( -75.603, 107.575, 100.015, 0.29 ) }
    dend_24 { pt3dadd( -76.8713, 107.686, 101.103, 0.29 ) }
    dend_24 { pt3dadd( -77.8359, 107.721, 101.697, 0.22 ) }
    dend_24 { pt3dadd( -78.9513, 107.709, 102.185, 0.29 ) }
    dend_24 { pt3dadd( -79.7521, 107.679, 102.404, 0.44 ) }
    dend_24 { pt3dadd( -80.7341, 107.63, 102.572, 0.66 ) }
    dend_24 { pt3dadd( -81.7955, 107.597, 102.676, 0.66 ) }
    dend_24 { pt3dadd( -83.3349, 107.606, 102.748, 0.22 ) }
    dend_24 { pt3dadd( -84.5088, 107.667, 102.79, 0.22 ) }
    dend_24 { pt3dadd( -86.0156, 107.823, 102.955, 0.29 ) }
    dend_24 { pt3dadd( -88.0573, 108.126, 103.366, 0.29 ) }
    dend_24 { pt3dadd( -88.9153, 108.286, 103.631, 0.59 ) }
    dend_24 { pt3dadd( -90.2312, 108.572, 104.25, 0.59 ) }
    dend_24 { pt3dadd( -91.767, 108.945, 105.203, 0.22 ) }
    dend_24 { pt3dadd( -93.7401, 109.467, 106.649, 0.44 ) }
    dend_24 { pt3dadd( -94.5212, 109.679, 107.315, 0.44 ) }
    dend_24 { pt3dadd( -95.3787, 109.912, 108.118, 0.22 ) }
    dend_24 { pt3dadd( -96.6703, 110.238, 109.287, 0.37 ) }
    dend_24 { pt3dadd( -97.241, 110.375, 109.731, 0.59 ) }
    dend_24 { pt3dadd( -97.9154, 110.544, 110.142, 0.96 ) }
    dend_24 { pt3dadd( -99.0516, 110.838, 110.665, 0.29 ) }
    dend_24 { pt3dadd( -100.864, 111.346, 111.388, 0.22 ) }
    dend_24 { pt3dadd( -101.936, 111.712, 111.889, 0.22 ) }
    dend_24 { pt3dadd( -103.745, 112.413, 112.804, 0.22 ) }
    dend_24 { pt3dadd( -105.274, 113.086, 113.684, 0.29 ) }
    dend_24 { pt3dadd( -106.071, 113.479, 114.191, 0.29 ) }
    dend_24 { pt3dadd( -107.061, 114.03, 114.886, 0.59 ) }
    dend_24 { pt3dadd( -109.507, 115.692, 117.084, 0.07 ) }
    dend_24 { pt3dadd( -109.982, 116.088, 117.636, 0.15 ) }
    dend_24 { pt3dadd( -110.471, 116.631, 118.437, 0.29 ) }
    dend_24 { pt3dadd( -111.256, 117.74, 120.069, 0.15 ) }
    dend_24 { pt3dadd( -111.482, 118.14, 120.672, 0.22 ) }
    dend_24 { pt3dadd( -112.14, 119.549, 122.908, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( -112.4, 120.136, 123.865, 0.81 ) }
    dend_24 { pt3dadd( -112.881, 121.295, 125.876, 0.22 ) }
    dend_24 { pt3dadd( -113.137, 121.887, 126.946, 0.29 ) }
    dend_24 { pt3dadd( -113.613, 122.921, 128.91, 0.22 ) }
    dend_24 { pt3dadd( -114.098, 123.684, 130.335, 0.22 ) }
    dend_24 { pt3dadd( -114.488, 124.083, 131.02, 0.66 ) }
    dend_24 { pt3dadd( -114.837, 124.337, 131.4, 0.66 ) }
    dend_24 { pt3dadd( -116.019, 124.967, 132.101, 0.22 ) }
    dend_24 { pt3dadd( -117.388, 125.566, 132.494, 0.29 ) }
    dend_24 { pt3dadd( -118.976, 126.219, 132.606, 0.74 ) }
    dend_24 { pt3dadd( -121.384, 127.176, 132.438, 0.22 ) }
    dend_24 { pt3dadd( -122.853, 127.718, 132.248, 0.15 ) }
    dend_24 { pt3dadd( -123.631, 127.98, 132.113, 0.29 ) }
    dend_24 { pt3dadd( -124.654, 128.294, 131.901, 0.74 ) }
    dend_24 { pt3dadd( -126.008, 128.685, 131.618, 0.22 ) }
    dend_24 { pt3dadd( -127.648, 129.128, 131.415, 0.22 ) }
    dend_24 { pt3dadd( -128.374, 129.34, 131.435, 0.52 ) }
    dend_24 { pt3dadd( -128.844, 129.472, 131.47, 0.88 ) }
    dend_24 { pt3dadd( -129.737, 129.726, 131.573, 0.29 ) }
    dend_24 { pt3dadd( -130.81, 130.111, 132.006, 0.22 ) }
    dend_24 { pt3dadd( -132.052, 130.718, 132.906, 0.22 ) }
    dend_24 { pt3dadd( -132.699, 131.128, 133.564, 0.22 ) }
    dend_24 { pt3dadd( -133.602, 131.801, 134.646, 0.22 ) }
    dend_24 { pt3dadd( -134.489, 132.538, 135.898, 0.15 ) }
    dend_24 { pt3dadd( -136.792, 134.857, 140.45, 0.15 ) }
    dend_24 { pt3dadd( -137.309, 135.465, 141.863, 0.15 ) }
    dend_24 { pt3dadd( -137.587, 135.856, 142.877, 0.15 ) }
    dend_24 { pt3dadd( -137.784, 136.203, 143.896, 0.15 ) }
    dend_24 { pt3dadd( -138.002, 136.653, 145.327, 0.37 ) }
    dend_24 { pt3dadd( -138.471, 137.731, 149.062, 0.15 ) }
    dend_24 { pt3dadd( -138.817, 138.379, 151.551, 0.15 ) }
    dend_24 { pt3dadd( -139.016, 138.811, 153.465, 0.15 ) }
    dend_24 { pt3dadd( -139.199, 139.394, 156.211, 0.15 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 33/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -36.6565, 72.8364, 46.2432, 0.29 ) }
    dend_23 { pt3dadd( -35.403, 73.8576, 47.4765, 0.29 ) }
    dend_23 { pt3dadd( -33.3458, 75.4685, 49.5525, 0.29 ) }
    dend_23 { pt3dadd( -31.613, 76.838, 51.3858, 0.29 ) }
    dend_23 { pt3dadd( -29.9079, 78.2418, 53.2785, 0.29 ) }
    dend_23 { pt3dadd( -28.6272, 79.3946, 54.7976, 0.29 ) }
    dend_23 { pt3dadd( -28.3225, 79.6951, 55.1895, 0.29 ) }
    dend_23 { pt3dadd( -27.6549, 80.4389, 56.1642, 0.29 ) }
    dend_23 { pt3dadd( -27.3572, 80.8407, 56.7167, 0.37 ) }
    dend_23 { pt3dadd( -26.8692, 81.7527, 58.0994, 0.37 ) }
    dend_23 { pt3dadd( -26.6595, 82.4171, 59.2501, 0.22 ) }
    dend_23 { pt3dadd( -26.511, 83.1671, 60.6393, 0.22 ) }
    dend_23 { pt3dadd( -26.4455, 83.4479, 61.1853, 0.22 ) }
    dend_23 { pt3dadd( -26.3488, 83.6842, 61.6783, 0.22 ) }
    dend_23 { pt3dadd( -26.072, 84.0996, 62.6065, 0.22 ) }
    dend_23 { pt3dadd( -25.8042, 84.4081, 63.3649, 0.22 ) }
    dend_23 { pt3dadd( -25.6409, 84.5564, 63.7717, 0.22 ) }
    dend_23 { pt3dadd( -25.3968, 84.7602, 64.3139, 0.29 ) }
    dend_23 { pt3dadd( -24.7506, 85.2514, 65.6958, 0.29 ) }
    dend_23 { pt3dadd( -24.0402, 85.7781, 67.2709, 0.29 ) }
    dend_23 { pt3dadd( -23.541, 86.1367, 68.4503, 0.29 ) }
    dend_23 { pt3dadd( -23.2178, 86.366, 69.218, 0.15 ) }
    dend_23 { pt3dadd( -22.0086, 87.1761, 72.0475, 0.15 ) }
    dend_23 { pt3dadd( -20.7201, 87.9548, 75.0217, 0.15 ) }
    dend_23 { pt3dadd( -19.5801, 88.5499, 77.6696, 0.15 ) }
    dend_23 { pt3dadd( -18.9438, 88.8381, 79.1459, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -61.9906, 46.0445, -41.1459, 1.18 ) }
    dend_13 { pt3dadd( -63.5823, 46.6742, -40.2678, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -61.9906, 46.0445, -41.1459, 0.29 ) }
    dend_12 { pt3dadd( -62.3044, 47.2775, -41.3412, 0.29 ) }
    dend_12 { pt3dadd( -62.6545, 48.3159, -41.6167, 0.29 ) }
    dend_12 { pt3dadd( -62.9964, 49.1884, -41.9005, 0.88 ) }
    dend_12 { pt3dadd( -63.4254, 50.1989, -42.2598, 0.44 ) }
    dend_12 { pt3dadd( -63.8752, 51.1565, -42.6377, 0.44 ) }
    dend_12 { pt3dadd( -64.1676, 51.7379, -42.8743, 0.29 ) }
    dend_12 { pt3dadd( -64.8461, 52.8341, -43.4344, 0.29 ) }
    dend_12 { pt3dadd( -65.2007, 53.3438, -43.7116, 0.74 ) }
    dend_12 { pt3dadd( -65.4861, 53.712, -43.8956, 0.96 ) }
    dend_12 { pt3dadd( -66.0529, 54.4481, -44.183, 0.96 ) }
    dend_12 { pt3dadd( -66.7265, 55.3822, -44.4246, 0.66 ) }
    dend_12 { pt3dadd( -67.6127, 56.7811, -44.5795, 0.37 ) }
    dend_12 { pt3dadd( -68.0447, 57.6285, -44.5663, 0.22 ) }
    dend_12 { pt3dadd( -68.5616, 58.8522, -44.4564, 0.29 ) }
    dend_12 { pt3dadd( -69.0366, 60.302, -44.2166, 0.29 ) }
    dend_12 { pt3dadd( -69.2306, 61.1436, -44.0062, 0.81 ) }
    dend_12 { pt3dadd( -69.4493, 62.58, -43.5538, 1.03 ) }
    dend_12 { pt3dadd( -69.5632, 63.8939, -43.1015, 0.22 ) }
    dend_12 { pt3dadd( -69.6012, 64.7149, -42.8452, 0.29 ) }
    dend_12 { pt3dadd( -69.6076, 65.535, -42.6454, 0.44 ) }
    dend_12 { pt3dadd( -69.6188, 66.2472, -42.549, 0.44 ) }
    dend_12 { pt3dadd( -69.6004, 67.1999, -42.4911, 0.44 ) }
    dend_12 { pt3dadd( -69.5745, 68.2379, -42.5755, 0.52 ) }
    dend_12 { pt3dadd( -69.5958, 68.9345, -42.7471, 0.52 ) }
    dend_12 { pt3dadd( -69.666, 69.8422, -43.1026, 0.29 ) }
    dend_12 { pt3dadd( -69.7281, 70.4196, -43.3893, 0.37 ) }
    dend_12 { pt3dadd( -69.8384, 71.2026, -43.813, 0.37 ) }
    dend_12 { pt3dadd( -70.1283, 72.5954, -44.5975, 0.81 ) }
    dend_12 { pt3dadd( -70.4076, 73.5848, -45.1726, 1.03 ) }
    dend_12 { pt3dadd( -70.6915, 74.4167, -45.6558, 0.74 ) }
    dend_12 { pt3dadd( -71.0661, 75.3878, -46.2108, 0.66 ) }
    dend_12 { pt3dadd( -71.4402, 76.3259, -46.7407, 0.37 ) }
    dend_12 { pt3dadd( -71.9258, 77.5355, -47.4182, 0.29 ) }
    dend_12 { pt3dadd( -72.2031, 78.3166, -47.8123, 0.29 ) }
    dend_12 { pt3dadd( -72.3588, 78.7525, -48.067, 0.66 ) }
    dend_12 { pt3dadd( -72.5247, 79.2396, -48.3873, 1.18 ) }
    dend_12 { pt3dadd( -72.6442, 79.6571, -48.6919, 1.18 ) }
    dend_12 { pt3dadd( -72.8052, 80.3404, -49.2002, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -72.9423, 80.9903, -49.6441, 0.44 ) }
    dend_12 { pt3dadd( -73.1697, 81.949, -50.271, 0.29 ) }
    dend_12 { pt3dadd( -73.2928, 82.4294, -50.579, 0.29 ) }
    dend_12 { pt3dadd( -73.4245, 82.9335, -50.8942, 0.29 ) }
    dend_12 { pt3dadd( -73.6786, 83.803, -51.4558, 0.29 ) }
    dend_12 { pt3dadd( -73.9135, 84.5497, -51.9338, 0.22 ) }
    dend_12 { pt3dadd( -74.216, 85.4476, -52.4916, 0.37 ) }
    dend_12 { pt3dadd( -74.4894, 86.28, -52.9727, 0.22 ) }
    dend_12 { pt3dadd( -74.6107, 86.6533, -53.1924, 0.22 ) }
    dend_12 { pt3dadd( -74.8358, 87.4094, -53.6433, 0.44 ) }
    dend_12 { pt3dadd( -74.9795, 87.9693, -53.9759, 0.96 ) }
    dend_12 { pt3dadd( -75.1, 88.4612, -54.2435, 1.18 ) }
    dend_12 { pt3dadd( -75.3222, 89.3401, -54.6496, 1.18 ) }
    dend_12 { pt3dadd( -75.5018, 89.9254, -54.914, 1.25 ) }
    dend_12 { pt3dadd( -75.7463, 90.5862, -55.2301, 0.37 ) }
    dend_12 { pt3dadd( -75.9776, 91.1554, -55.5085, 0.22 ) }
    dend_12 { pt3dadd( -76.2801, 91.811, -55.8697, 0.29 ) }
    dend_12 { pt3dadd( -76.4833, 92.2372, -56.1484, 0.29 ) }
    dend_12 { pt3dadd( -76.862, 92.9984, -56.7565, 0.22 ) }
    dend_12 { pt3dadd( -77.1818, 93.6616, -57.3745, 0.22 ) }
    dend_12 { pt3dadd( -77.2886, 93.8925, -57.6039, 0.44 ) }
    dend_12 { pt3dadd( -77.5773, 94.5009, -58.2621, 0.81 ) }
    dend_12 { pt3dadd( -78.0155, 95.3901, -59.3111, 0.29 ) }
    dend_12 { pt3dadd( -78.371, 96.0356, -60.1293, 0.52 ) }
    dend_12 { pt3dadd( -78.6868, 96.539, -60.7749, 1.03 ) }
    dend_12 { pt3dadd( -79.0282, 96.9988, -61.3684, 1.03 ) }
    dend_12 { pt3dadd( -79.6851, 97.7564, -62.336, 0.66 ) }
    dend_12 { pt3dadd( -80.3431, 98.4272, -63.1856, 0.59 ) }
    dend_12 { pt3dadd( -81.057, 99.105, -64.0209, 0.88 ) }
    dend_12 { pt3dadd( -81.9016, 99.9256, -64.9845, 0.22 ) }
    dend_12 { pt3dadd( -82.5562, 100.591, -65.7304, 0.59 ) }
    dend_12 { pt3dadd( -83.3216, 101.413, -66.6324, 0.22 ) }
    dend_12 { pt3dadd( -83.696, 101.863, -67.1017, 0.44 ) }
    dend_12 { pt3dadd( -84.1145, 102.419, -67.7104, 0.74 ) }
    dend_12 { pt3dadd( -84.3888, 102.827, -68.2205, 0.88 ) }
    dend_12 { pt3dadd( -84.7021, 103.327, -68.9471, 0.37 ) }
    dend_12 { pt3dadd( -84.9874, 103.761, -69.6602, 0.37 ) }
    dend_12 { pt3dadd( -85.3253, 104.263, -70.5232, 0.37 ) }
    dend_12 { pt3dadd( -85.7531, 104.895, -71.5589, 0.29 ) }
    dend_12 { pt3dadd( -86.1175, 105.404, -72.4195, 0.52 ) }
    dend_12 { pt3dadd( -86.2946, 105.631, -72.8234, 0.52 ) }
    dend_12 { pt3dadd( -86.7331, 106.19, -73.8227, 0.52 ) }
    dend_12 { pt3dadd( -87.094, 106.678, -74.5867, 0.37 ) }
    dend_12 { pt3dadd( -87.3358, 107.011, -74.9907, 0.37 ) }
    dend_12 { pt3dadd( -89.0136, 114.716, -78.697, 0.37 ) }
    dend_12 { pt3dadd( -88.5638, 122.851, -81.7821, 0.37 ) }
    dend_12 { pt3dadd( -87.2695, 130.822, -85.0546, 0.37 ) }
    dend_12 { pt3dadd( -86.0201, 138.692, -88.5767, 0.37 ) }
    dend_12 { pt3dadd( -84.244, 145.655, -93.5036, 0.37 ) }
    dend_12 { pt3dadd( -81.0804, 152.733, -97.4791, 0.37 ) }
    dend_12 { pt3dadd( -77.7982, 159.274, -102.207, 0.37 ) }
    dend_12 { pt3dadd( -74.1923, 165.862, -106.624, 0.37 ) }
    dend_12 { pt3dadd( -71.6722, 172.856, -111.168, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -11.5631, 96.2067, -50.0616, 0.52 ) }
    dend_8 { pt3dadd( -11.9203, 96.0454, -51.7521, 0.52 ) }
    dend_8 { pt3dadd( -12.1979, 95.8059, -53.423, 0.52 ) }
    dend_8 { pt3dadd( -12.2234, 95.631, -54.5506, 0.66 ) }
    dend_8 { pt3dadd( -12.0848, 95.4423, -55.5602, 0.44 ) }
    dend_8 { pt3dadd( -11.8328, 95.2672, -56.5202, 0.37 ) }
    dend_8 { pt3dadd( -11.2801, 95.0043, -58.2188, 0.37 ) }
    dend_8 { pt3dadd( -11.1081, 94.9468, -58.6498, 0.37 ) }
    dend_8 { pt3dadd( -10.2253, 94.7032, -60.4991, 0.37 ) }
    dend_8 { pt3dadd( -9.46301, 94.493, -61.9742, 0.52 ) }
    dend_8 { pt3dadd( -8.92425, 94.3338, -63.0392, 0.52 ) }
    dend_8 { pt3dadd( -8.68343, 94.2403, -63.5773, 0.52 ) }
    dend_8 { pt3dadd( -8.38124, 93.9718, -64.6361, 0.52 ) }
    dend_8 { pt3dadd( -8.34378, 93.6057, -65.6795, 0.66 ) }
    dend_8 { pt3dadd( -8.71669, 93.1238, -66.3254, 0.52 ) }
    dend_8 { pt3dadd( -9.34174, 92.4662, -67.0548, 0.44 ) }
    dend_8 { pt3dadd( -9.84236, 91.9547, -67.5262, 0.44 ) }
    dend_8 { pt3dadd( -10.2548, 91.519, -67.8599, 0.81 ) }
    dend_8 { pt3dadd( -10.993, 90.7523, -68.2967, 0.96 ) }
    dend_8 { pt3dadd( -12.1244, 89.6671, -68.7967, 0.22 ) }
    dend_8 { pt3dadd( -13.362, 84.8277, -76.5851, 0.22 ) }
    dend_8 { pt3dadd( -16.8093, 79.3124, -83.166, 0.22 ) }
    dend_8 { pt3dadd( -19.2935, 73.028, -89.4862, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -11.5631, 96.2067, -50.0616, 0.59 ) }
    dend_7 { pt3dadd( -11.6626, 97.4272, -49.411, 0.59 ) }
    dend_7 { pt3dadd( -11.8183, 98.8322, -48.7727, 0.59 ) }
    dend_7 { pt3dadd( -11.9301, 100.008, -48.4164, 0.66 ) }
    dend_7 { pt3dadd( -12.0299, 100.918, -48.2493, 0.81 ) }
    dend_7 { pt3dadd( -12.1918, 102.262, -48.1707, 0.52 ) }
    dend_7 { pt3dadd( -12.4062, 103.904, -48.2645, 0.52 ) }
    dend_7 { pt3dadd( -12.5354, 104.944, -48.5579, 0.66 ) }
    dend_7 { pt3dadd( -12.6502, 106.558, -49.3913, 1.03 ) }
    dend_7 { pt3dadd( -12.6395, 108.143, -50.5838, 0.37 ) }
    dend_7 { pt3dadd( -12.4914, 109.345, -51.7701, 0.37 ) }
    dend_7 { pt3dadd( -12.2615, 110.265, -52.8736, 0.59 ) }
    dend_7 { pt3dadd( -11.8238, 111.498, -54.5072, 0.74 ) }
    dend_7 { pt3dadd( -11.3327, 112.543, -55.9602, 0.74 ) }
    dend_7 { pt3dadd( -10.6553, 113.702, -57.6093, 0.37 ) }
    dend_7 { pt3dadd( -10.0597, 114.54, -58.8109, 0.37 ) }
    dend_7 { pt3dadd( -9.64602, 115.061, -59.4933, 0.37 ) }
    dend_7 { pt3dadd( -9.2001, 115.551, -60.1227, 0.44 ) }
    dend_7 { pt3dadd( -8.46417, 116.364, -61.076, 0.44 ) }
    dend_7 { pt3dadd( -8.04717, 116.836, -61.5917, 0.74 ) }
    dend_7 { pt3dadd( -7.28852, 117.718, -62.523, 0.74 ) }
    dend_7 { pt3dadd( -6.36146, 118.749, -63.6211, 0.15 ) }
    dend_7 { pt3dadd( -5.42338, 119.661, -64.7182, 0.15 ) }
    dend_7 { pt3dadd( -3.44066, 128.966, -68.2304, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( -2.12275, 138.538, -71.3076, 0.15 ) }
    dend_7 { pt3dadd( -1.468, 147.137, -76.6428, 0.15 ) }
    dend_7 { pt3dadd( -1.02527, 155.067, -82.9468, 0.15 ) }
    dend_7 { pt3dadd( -1.19509, 163.694, -88.2739, 0.15 ) }
    dend_7 { pt3dadd( -0.908565, 172.664, -92.995, 0.15 ) }
    dend_7 { pt3dadd( 0.679747, 181.862, -96.9596, 0.15 ) }
    dend_7 { pt3dadd( 2.28289, 191.447, -99.8563, 0.15 ) }
    dend_7 { pt3dadd( 2.8073, 201.203, -102.571, 0.15 ) }
    dend_7 { pt3dadd( 4.99176, 211.08, -103.289, 0.15 ) }
    dend_7 { pt3dadd( 7.33032, 220.947, -103.343, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 10/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 67.6774, 140.054, -69.4462, 0.29 ) }
    dend_42 { pt3dadd( 67.263, 140.449, -71.2441, 0.29 ) }
    dend_42 { pt3dadd( 66.6581, 140.784, -73.6552, 0.29 ) }
    dend_42 { pt3dadd( 66.2039, 140.949, -75.1976, 0.29 ) }
    dend_42 { pt3dadd( 65.7967, 141.088, -76.3905, 0.29 ) }
    dend_42 { pt3dadd( 65.5071, 141.192, -77.1951, 0.59 ) }
    dend_42 { pt3dadd( 64.7155, 141.534, -79.4391, 0.22 ) }
    dend_42 { pt3dadd( 64.2173, 141.845, -80.9747, 0.22 ) }
    dend_42 { pt3dadd( 63.9908, 142.058, -81.7751, 0.22 ) }
    dend_42 { pt3dadd( 63.7721, 142.364, -82.791, 0.15 ) }
    dend_42 { pt3dadd( 63.9517, 142.71, -83.4417, 0.15 ) }
    dend_42 { pt3dadd( 64.499, 143.21, -83.9617, 0.66 ) }
    dend_42 { pt3dadd( 65.597, 144.078, -84.601, 0.22 ) }
    dend_42 { pt3dadd( 66.1671, 144.507, -84.8857, 0.22 ) }
    dend_42 { pt3dadd( 66.714, 144.853, -85.1279, 0.44 ) }
    dend_42 { pt3dadd( 68.2873, 145.632, -85.714, 0.29 ) }
    dend_42 { pt3dadd( 70.595, 149.315, -96.4738, 0.29 ) }
    dend_42 { pt3dadd( 71.7776, 153.388, -107.276, 0.29 ) }
    dend_42 { pt3dadd( 71.9649, 157.797, -118.009, 0.29 ) }
    dend_42 { pt3dadd( 71.8577, 163.678, -128.012, 0.29 ) }
    dend_42 { pt3dadd( 72.1724, 169.055, -138.292, 0.29 ) }
    dend_42 { pt3dadd( 69.9943, 173.064, -148.962, 0.29 ) }
    dend_42 { pt3dadd( 66.3982, 176.066, -159.579, 0.29 ) }
    dend_42 { pt3dadd( 62.1846, 180.252, -169.548, 0.29 ) }
    dend_42 { pt3dadd( 59.578, 184.203, -180.144, 0.29 ) }
    dend_42 { pt3dadd( 57.0296, 189.447, -190.178, 0.29 ) }
    dend_42 { pt3dadd( 55.8187, 195.419, -200.054, 0.29 ) }
    dend_42 { pt3dadd( 56.1606, 200.056, -210.686, 0.29 ) }
    dend_42 { pt3dadd( 59.0277, 203.632, -221.348, 0.29 ) }
    dend_42 { pt3dadd( 61.5183, 205.003, -232.599, 0.29 ) }
    dend_42 { pt3dadd( 64.7463, 204.867, -243.745, 0.29 ) }
    dend_42 { pt3dadd( 67.2081, 202.666, -254.87, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 67.6774, 140.054, -69.4462, 0.74 ) }
    dend_41 { pt3dadd( 67.4748, 140.784, -69.1789, 0.74 ) }
    dend_41 { pt3dadd( 66.3737, 144.053, -68.052, 0.29 ) }
    dend_41 { pt3dadd( 65.9379, 145.142, -67.6813, 0.29 ) }
    dend_41 { pt3dadd( 65.1811, 146.79, -67.1284, 0.52 ) }
    dend_41 { pt3dadd( 64.615, 147.88, -66.7802, 0.29 ) }
    dend_41 { pt3dadd( 63.8131, 149.248, -66.4323, 0.37 ) }
    dend_41 { pt3dadd( 63.0516, 150.352, -66.2488, 0.59 ) }
    dend_41 { pt3dadd( 62.4289, 151.142, -66.1579, 0.44 ) }
    dend_41 { pt3dadd( 61.7437, 152.062, -66.0287, 0.88 ) }
    dend_41 { pt3dadd( 60.5657, 153.909, -65.6933, 0.37 ) }
    dend_41 { pt3dadd( 59.5311, 155.925, -65.2277, 0.66 ) }
    dend_41 { pt3dadd( 59.0233, 157.239, -64.8947, 0.29 ) }
    dend_41 { pt3dadd( 58.5789, 158.875, -64.4847, 0.22 ) }
    dend_41 { pt3dadd( 58.2269, 160.855, -64.0089, 0.74 ) }
    dend_41 { pt3dadd( 58.0094, 163.099, -63.4885, 0.29 ) }
    dend_41 { pt3dadd( 57.9824, 164.465, -63.1916, 0.22 ) }
    dend_41 { pt3dadd( 58.008, 165.578, -62.9689, 0.88 ) }
    dend_41 { pt3dadd( 58.0384, 166.982, -62.8033, 0.88 ) }
    dend_41 { pt3dadd( 58.0413, 168.09, -62.7963, 0.22 ) }
    dend_41 { pt3dadd( 58.0213, 169.21, -62.898, 0.22 ) }
    dend_41 { pt3dadd( 58.0027, 170.498, -63.0994, 0.15 ) }
    dend_41 { pt3dadd( 58.0172, 171.268, -63.2303, 0.66 ) }
    dend_41 { pt3dadd( 58.0635, 172.074, -63.3799, 0.22 ) }
    dend_41 { pt3dadd( 58.1602, 173.269, -63.6175, 0.15 ) }
    dend_41 { pt3dadd( 58.2362, 173.88, -63.7618, 0.15 ) }
    dend_41 { pt3dadd( 58.3906, 174.825, -64.0795, 0.44 ) }
    dend_41 { pt3dadd( 58.6388, 176.065, -64.6537, 0.44 ) }
    dend_41 { pt3dadd( 58.8814, 177.387, -65.4979, 0.22 ) }
    dend_41 { pt3dadd( 58.9812, 178.079, -66.0985, 0.22 ) }
    dend_41 { pt3dadd( 59.0582, 178.925, -67.0561, 0.52 ) }
    dend_41 { pt3dadd( 59.0782, 179.909, -68.4475, 0.52 ) }
    dend_41 { pt3dadd( 59.0549, 180.496, -69.4662, 0.22 ) }
    dend_41 { pt3dadd( 59.0002, 181.491, -71.3996, 0.22 ) }
    dend_41 { pt3dadd( 58.9441, 182.237, -72.943, 0.22 ) }
    dend_41 { pt3dadd( 58.881, 182.804, -74.1513, 0.22 ) }
    dend_41 { pt3dadd( 58.7789, 183.473, -75.5564, 0.22 ) }
    dend_41 { pt3dadd( 58.6516, 184.477, -77.5608, 0.22 ) }
    dend_41 { pt3dadd( 58.5865, 185.21, -79.0479, 0.66 ) }
    dend_41 { pt3dadd( 58.611, 185.671, -79.9679, 0.37 ) }
    dend_41 { pt3dadd( 57.9806, 197.227, -84.4346, 0.37 ) }
    dend_41 { pt3dadd( 58.8596, 208.857, -88.663, 0.37 ) }
    dend_41 { pt3dadd( 58.3977, 221.17, -90.1072, 0.37 ) }
    dend_41 { pt3dadd( 59.2035, 233.532, -90.7527, 0.37 ) }
    dend_41 { pt3dadd( 58.8875, 245.753, -92.864, 0.37 ) }
    dend_41 { pt3dadd( 60.1102, 257.574, -96.4245, 0.37 ) }
    dend_41 { pt3dadd( 63.496, 269.004, -99.8584, 0.37 ) }
    dend_41 { pt3dadd( 67.8106, 280.483, -101.736, 0.37 ) }
    dend_41 { pt3dadd( 74.3921, 290.951, -102.735, 0.37 ) }
    dend_41 { pt3dadd( 82.0214, 300.289, -105.649, 0.37 ) }
    dend_41 { pt3dadd( 89.5095, 308.84, -110.621, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 93/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -63.5823, 46.6742, -40.2678, 0.52 ) }
    dend_19 { pt3dadd( -65.1067, 47.4691, -40.361, 0.52 ) }
    dend_19 { pt3dadd( -65.721, 47.7905, -40.4168, 0.66 ) }
    dend_19 { pt3dadd( -66.694, 48.29, -40.5005, 0.88 ) }
    dend_19 { pt3dadd( -68.1548, 49.0193, -40.61, 0.74 ) }
    dend_19 { pt3dadd( -69.4604, 49.6385, -40.671, 0.52 ) }
    dend_19 { pt3dadd( -70.5555, 50.1343, -40.6988, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -72.2168, 50.8255, -40.7557, 0.74 ) }
    dend_19 { pt3dadd( -73.1473, 51.1875, -40.7685, 0.74 ) }
    dend_19 { pt3dadd( -74.4628, 51.6569, -40.7252, 0.66 ) }
    dend_19 { pt3dadd( -75.92, 52.0988, -40.6136, 0.37 ) }
    dend_19 { pt3dadd( -76.5793, 52.2624, -40.5482, 0.37 ) }
    dend_19 { pt3dadd( -77.2574, 52.3892, -40.4906, 0.88 ) }
    dend_19 { pt3dadd( -78.343, 52.5317, -40.4369, 0.88 ) }
    dend_19 { pt3dadd( -79.2068, 52.6238, -40.4416, 0.59 ) }
    dend_19 { pt3dadd( -80.0909, 52.6884, -40.4918, 0.59 ) }
    dend_19 { pt3dadd( -81.027, 52.7329, -40.627, 0.59 ) }
    dend_19 { pt3dadd( -81.8465, 52.7331, -40.8405, 0.59 ) }
    dend_19 { pt3dadd( -82.7516, 52.7084, -41.136, 0.59 ) }
    dend_19 { pt3dadd( -83.4187, 52.6741, -41.3633, 0.81 ) }
    dend_19 { pt3dadd( -84.2755, 52.6217, -41.6371, 1.03 ) }
    dend_19 { pt3dadd( -85.8023, 52.4811, -42.0429, 0.52 ) }
    dend_19 { pt3dadd( -87.8247, 52.2445, -42.446, 0.59 ) }
    dend_19 { pt3dadd( -89.1282, 52.026, -42.6267, 0.59 ) }
    dend_19 { pt3dadd( -90.2078, 51.7775, -42.6894, 0.59 ) }
    dend_19 { pt3dadd( -91.6656, 51.3229, -42.6524, 0.59 ) }
    dend_19 { pt3dadd( -92.6553, 50.9124, -42.5031, 0.59 ) }
    dend_19 { pt3dadd( -93.7769, 50.3153, -42.1417, 0.52 ) }
    dend_19 { pt3dadd( -94.5016, 49.8493, -41.8025, 0.59 ) }
    dend_19 { pt3dadd( -95.2884, 49.2567, -41.3953, 0.52 ) }
    dend_19 { pt3dadd( -96.0266, 48.6651, -41.013, 0.37 ) }
    dend_19 { pt3dadd( -97.0168, 47.8607, -40.534, 0.66 ) }
    dend_19 { pt3dadd( -97.6577, 47.3764, -40.2554, 0.66 ) }
    dend_19 { pt3dadd( -98.3014, 46.9572, -40.0257, 0.88 ) }
    dend_19 { pt3dadd( -99.1131, 46.5212, -39.7851, 0.88 ) }
    dend_19 { pt3dadd( -100.591, 45.8254, -39.4653, 0.52 ) }
    dend_19 { pt3dadd( -101.472, 45.4546, -39.3697, 0.52 ) }
    dend_19 { pt3dadd( -102.08, 45.2343, -39.3807, 0.66 ) }
    dend_19 { pt3dadd( -103.655, 44.7516, -39.6022, 0.44 ) }
    dend_19 { pt3dadd( -104.42, 44.572, -39.8001, 0.59 ) }
    dend_19 { pt3dadd( -105.462, 44.4125, -40.1657, 0.66 ) }
    dend_19 { pt3dadd( -107.193, 44.3145, -40.9166, 0.66 ) }
    dend_19 { pt3dadd( -108.359, 44.3297, -41.4911, 0.88 ) }
    dend_19 { pt3dadd( -109.265, 44.399, -41.9707, 0.88 ) }
    dend_19 { pt3dadd( -110.18, 44.5131, -42.4673, 0.81 ) }
    dend_19 { pt3dadd( -111.011, 44.6531, -42.879, 1.11 ) }
    dend_19 { pt3dadd( -112.149, 44.8965, -43.3219, 0.52 ) }
    dend_19 { pt3dadd( -113.613, 45.2544, -43.7721, 0.52 ) }
    dend_19 { pt3dadd( -115.213, 45.6792, -44.1576, 0.29 ) }
    dend_19 { pt3dadd( -115.711, 45.8173, -44.2494, 0.29 ) }
    dend_19 { pt3dadd( -116.811, 46.1016, -44.4339, 0.59 ) }
    dend_19 { pt3dadd( -118.276, 46.3943, -44.7507, 0.29 ) }
    dend_19 { pt3dadd( -120.247, 46.6775, -45.3582, 0.37 ) }
    dend_19 { pt3dadd( -121.541, 46.8001, -45.8327, 0.37 ) }
    dend_19 { pt3dadd( -122.533, 46.855, -46.2453, 0.37 ) }
    dend_19 { pt3dadd( -124.271, 46.9078, -47.0559, 0.44 ) }
    dend_19 { pt3dadd( -126.507, 46.8849, -48.26, 0.96 ) }
    dend_19 { pt3dadd( -128.647, 46.7497, -49.5944, 0.44 ) }
    dend_19 { pt3dadd( -129.529, 46.6418, -50.2128, 0.52 ) }
    dend_19 { pt3dadd( -130.595, 46.4765, -51.0798, 0.52 ) }
    dend_19 { pt3dadd( -140.576, 45.6994, -53.4036, 0.52 ) }
    dend_19 { pt3dadd( -150.685, 45.6641, -55.2518, 0.52 ) }
    dend_19 { pt3dadd( -160.91, 44.7448, -55.7061, 0.52 ) }
    dend_19 { pt3dadd( -170.836, 42.9953, -53.6993, 0.52 ) }
    dend_19 { pt3dadd( -180.199, 40.555, -50.2358, 0.52 ) }
    dend_19 { pt3dadd( -190.102, 39.6638, -47.6356, 0.52 ) }
    dend_19 { pt3dadd( -199.769, 36.7533, -45.714, 0.52 ) }
    dend_19 { pt3dadd( -209.801, 34.7149, -44.8074, 0.52 ) }
    dend_19 { pt3dadd( -219.956, 33.2384, -45.3607, 0.52 ) }
    dend_19 { pt3dadd( -229.927, 32.0401, -47.5407, 0.52 ) }
    dend_19 { pt3dadd( -239.829, 30.2112, -49.5961, 0.52 ) }
    dend_19 { pt3dadd( -249.486, 28.4874, -52.6576, 0.52 ) }
    dend_19 { pt3dadd( -259.295, 26.7764, -55.2012, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -63.5823, 46.6742, -40.2678, 0.29 ) }
    dend_14 { pt3dadd( -64.8149, 46.8011, -41.1721, 0.29 ) }
    dend_14 { pt3dadd( -66.2551, 46.9072, -42.1619, 0.44 ) }
    dend_14 { pt3dadd( -66.8556, 46.9488, -42.5312, 0.44 ) }
    dend_14 { pt3dadd( -67.8164, 47.0259, -43.0522, 0.29 ) }
    dend_14 { pt3dadd( -68.8124, 47.1229, -43.5304, 0.29 ) }
    dend_14 { pt3dadd( -69.8087, 47.2339, -43.9591, 0.59 ) }
    dend_14 { pt3dadd( -70.5122, 47.3459, -44.147, 0.81 ) }
    dend_14 { pt3dadd( -71.3963, 47.4888, -44.3014, 0.59 ) }
    dend_14 { pt3dadd( -72.2409, 47.6065, -44.4556, 0.44 ) }
    dend_14 { pt3dadd( -72.9436, 47.6874, -44.6135, 0.74 ) }
    dend_14 { pt3dadd( -73.4798, 47.7541, -44.7671, 1.03 ) }
    dend_14 { pt3dadd( -74.5384, 47.8924, -45.1659, 0.29 ) }
    dend_14 { pt3dadd( -75.7169, 48.0029, -45.746, 0.29 ) }
    dend_14 { pt3dadd( -76.9445, 48.0104, -46.4968, 0.96 ) }
    dend_14 { pt3dadd( -78.1919, 47.8721, -47.3935, 0.66 ) }
    dend_14 { pt3dadd( -79.0767, 47.6511, -48.1077, 0.74 ) }
    dend_14 { pt3dadd( -79.8969, 47.4017, -48.8279, 0.81 ) }
    dend_14 { pt3dadd( -80.6467, 47.1146, -49.5563, 0.52 ) }
    dend_14 { pt3dadd( -81.5974, 46.6464, -50.5106, 0.52 ) }
    dend_14 { pt3dadd( -82.3498, 46.1258, -51.3021, 0.44 ) }
    dend_14 { pt3dadd( -82.9334, 45.5536, -51.9196, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 88/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -259.295, 26.7764, -55.2012, 0.66 ) }
    dend_21 { pt3dadd( -268.396, 22.7369, -50.9854, 0.66 ) }
    dend_21 { pt3dadd( -276.656, 17.5676, -46.2988, 0.66 ) }
    dend_21 { pt3dadd( -284.739, 12.2103, -41.5162, 0.66 ) }
    dend_21 { pt3dadd( -293.022, 8.25478, -35.8026, 0.66 ) }
    dend_21 { pt3dadd( -300.46, 3.78886, -29.3498, 0.66 ) }
    dend_21 { pt3dadd( -307.974, -1.45522, -23.609, 0.66 ) }
    dend_21 { pt3dadd( -315.474, -7.7074, -18.9649, 0.66 ) }
    dend_21 { pt3dadd( -322.451, -14.3539, -14.0599, 0.66 ) }
    dend_21 { pt3dadd( -329.142, -20.9295, -8.68372, 0.66 ) }
    dend_21 { pt3dadd( -335.139, -27.7015, -2.76037, 0.66 ) }
    dend_21 { pt3dadd( -340.082, -34.1775, 4.34818, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -344.616, -40.9696, 11.4348, 0.66 ) }
    dend_21 { pt3dadd( -351.233, -46.6103, 17.8623, 0.66 ) }
    dend_21 { pt3dadd( -357.574, -52.7454, 24.1119, 0.66 ) }
    dend_21 { pt3dadd( -364.88, -59.3673, 28.5485, 0.66 ) }
    dend_21 { pt3dadd( -372.502, -65.6993, 32.8762, 0.66 ) }
    dend_21 { pt3dadd( -381.155, -71.8913, 34.7985, 0.66 ) }
    dend_21 { pt3dadd( -389.558, -78.6562, 35.5251, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 7/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -259.295, 26.7764, -55.2012, 0.15 ) }
    dend_20 { pt3dadd( -268.312, 30.6659, -59.3447, 0.66 ) }
    dend_20 { pt3dadd( -276.341, 36.1726, -63.683, 0.66 ) }
    dend_20 { pt3dadd( -284.476, 41.733, -67.7451, 0.66 ) }
    dend_20 { pt3dadd( -291.691, 48.3457, -71.9661, 0.66 ) }
    dend_20 { pt3dadd( -299.191, 54.4073, -76.5064, 0.66 ) }
    dend_20 { pt3dadd( -305.78, 59.9516, -82.7873, 0.66 ) }
    dend_20 { pt3dadd( -312.815, 64.8749, -89.1015, 0.66 ) }
    dend_20 { pt3dadd( -319.107, 70.4312, -95.6696, 0.66 ) }
    dend_20 { pt3dadd( -326.877, 74.7564, -101.546, 0.66 ) }
    dend_20 { pt3dadd( -334.565, 77.7221, -108.306, 0.66 ) }
    dend_20 { pt3dadd( -340.968, 80.3674, -116.405, 0.66 ) }
    dend_20 { pt3dadd( -348.839, 82.1323, -123.373, 0.66 ) }
    dend_20 { pt3dadd( -355.381, 84.1211, -131.549, 0.66 ) }
    dend_20 { pt3dadd( -360.654, 87.1103, -140.316, 0.66 ) }
    dend_20 { pt3dadd( -364.452, 90.173, -149.792, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -82.9334, 45.5536, -51.9196, 0.66 ) }
    dend_16 { pt3dadd( -83.1643, 44.3926, -52.7627, 0.66 ) }
    dend_16 { pt3dadd( -83.3592, 43.517, -53.5641, 0.59 ) }
    dend_16 { pt3dadd( -83.5626, 42.9214, -54.2352, 0.29 ) }
    dend_16 { pt3dadd( -83.9748, 42.0996, -55.257, 0.29 ) }
    dend_16 { pt3dadd( -84.1806, 41.7862, -55.7175, 0.44 ) }
    dend_16 { pt3dadd( -84.8147, 41.0552, -57.0531, 0.59 ) }
    dend_16 { pt3dadd( -85.3421, 40.5877, -58.0712, 0.59 ) }
    dend_16 { pt3dadd( -85.9695, 40.1584, -59.2644, 0.59 ) }
    dend_16 { pt3dadd( -86.4495, 39.8991, -60.1689, 0.66 ) }
    dend_16 { pt3dadd( -87.2344, 39.5633, -61.6034, 0.66 ) }
    dend_16 { pt3dadd( -88.2474, 39.2442, -63.4079, 0.22 ) }
    dend_16 { pt3dadd( -91.6639, 35.5255, -72.2628, 0.22 ) }
    dend_16 { pt3dadd( -95.3121, 31.7803, -81.0134, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -82.9334, 45.5536, -51.9196, 0.15 ) }
    dend_15 { pt3dadd( -83.4952, 45.6656, -51.8039, 0.15 ) }
    dend_15 { pt3dadd( -84.0551, 45.7306, -51.6875, 0.22 ) }
    dend_15 { pt3dadd( -84.6422, 45.7162, -51.5767, 0.37 ) }
    dend_15 { pt3dadd( -85.2098, 45.6489, -51.4871, 0.52 ) }
    dend_15 { pt3dadd( -85.9768, 45.4859, -51.365, 0.22 ) }
    dend_15 { pt3dadd( -86.4273, 45.3668, -51.2871, 0.22 ) }
    dend_15 { pt3dadd( -86.7585, 45.2575, -51.2024, 0.22 ) }
    dend_15 { pt3dadd( -87.4819, 44.9645, -50.9745, 0.29 ) }
    dend_15 { pt3dadd( -87.8957, 44.7733, -50.8294, 0.22 ) }
    dend_15 { pt3dadd( -88.5144, 44.5, -50.6521, 0.29 ) }
    dend_15 { pt3dadd( -89.1555, 44.262, -50.5171, 0.15 ) }
    dend_15 { pt3dadd( -89.9735, 44.0266, -50.3753, 0.15 ) }
    dend_15 { pt3dadd( -90.2958, 43.962, -50.3333, 0.44 ) }
    dend_15 { pt3dadd( -90.7018, 43.9114, -50.3011, 0.44 ) }
    dend_15 { pt3dadd( -91.8547, 43.8279, -50.2755, 0.22 ) }
    dend_15 { pt3dadd( -92.41, 43.817, -50.2713, 0.22 ) }
    dend_15 { pt3dadd( -92.8385, 43.8289, -50.2634, 0.52 ) }
    dend_15 { pt3dadd( -93.3508, 43.8738, -50.2672, 0.52 ) }
    dend_15 { pt3dadd( -93.9478, 43.9453, -50.249, 0.22 ) }
    dend_15 { pt3dadd( -94.4023, 44.0202, -50.2002, 0.44 ) }
    dend_15 { pt3dadd( -95.231, 44.1913, -49.9817, 0.44 ) }
    dend_15 { pt3dadd( -95.7978, 44.3534, -49.8029, 0.74 ) }
    dend_15 { pt3dadd( -96.4386, 44.595, -49.552, 0.88 ) }
    dend_15 { pt3dadd( -102.393, 43.8278, -47.839, 0.88 ) }
    dend_15 { pt3dadd( -108.234, 42.4317, -46.1298, 0.88 ) }
    dend_15 { pt3dadd( -114.409, 41.7904, -45.4687, 0.88 ) }
    dend_15 { pt3dadd( -120.638, 41.8836, -45.8886, 0.88 ) }
    dend_15 { pt3dadd( -126.776, 42.0291, -47.0233, 0.88 ) }
    dend_15 { pt3dadd( -132.916, 42.7869, -47.8654, 0.88 ) }
    dend_15 { pt3dadd( -138.724, 44.2549, -49.6243, 0.88 ) }
    dend_15 { pt3dadd( -144.279, 44.7637, -52.4292, 0.88 ) }
    dend_15 { pt3dadd( -149.862, 46.029, -54.9224, 0.88 ) }
    dend_15 { pt3dadd( -156.012, 46.1094, -55.9963, 0.88 ) }
    dend_15 { pt3dadd( -162.19, 45.2128, -56.1132, 0.88 ) }
    dend_15 { pt3dadd( -167.984, 43.377, -57.5427, 0.88 ) }
    dend_15 { pt3dadd( -173.475, 41.6244, -59.9419, 0.88 ) }
    dend_15 { pt3dadd( -179.471, 40.8261, -61.4884, 0.88 ) }
    dend_15 { pt3dadd( -185.456, 40.2285, -63.1634, 0.88 ) }
    dend_15 { pt3dadd( -191.621, 39.6686, -63.9801, 0.88 ) }
    dend_15 { pt3dadd( -197.844, 39.1644, -64.0451, 0.88 ) }
    dend_15 { pt3dadd( -203.841, 37.4857, -63.5993, 0.88 ) }
    dend_15 { pt3dadd( -209.823, 36.402, -62.1796, 0.88 ) }
    dend_15 { pt3dadd( -215.455, 36.1562, -59.4943, 0.88 ) }
    dend_15 { pt3dadd( -220.692, 35.0729, -56.2721, 0.88 ) }
    dend_15 { pt3dadd( -225.223, 32.9515, -52.5369, 0.88 ) }
    dend_15 { pt3dadd( -229.21, 30.2783, -48.5441, 0.88 ) }
    dend_15 { pt3dadd( -233.661, 26.9323, -45.7206, 0.88 ) }
    dend_15 { pt3dadd( -237.558, 23.0904, -42.7147, 0.88 ) }
    dend_15 { pt3dadd( -240.406, 18.5782, -39.472, 0.88 ) }
    dend_15 { pt3dadd( -242.529, 13.4806, -36.5586, 0.88 ) }
    dend_15 { pt3dadd( -243.622, 7.96187, -33.8508, 0.88 ) }
    dend_15 { pt3dadd( -243.871, 1.92961, -32.2594, 0.88 ) }
    dend_15 { pt3dadd( -244.499, -3.8149, -29.8953, 0.88 ) }
    dend_15 { pt3dadd( -245.875, -9.38235, -27.4267, 0.88 ) }
    dend_15 { pt3dadd( -247.123, -14.8768, -24.7368, 0.88 ) }
    dend_15 { pt3dadd( -247.904, -20.7127, -22.6592, 0.88 ) }
    dend_15 { pt3dadd( -248.234, -26.3993, -20.1025, 0.88 ) }
    dend_15 { pt3dadd( -248.814, -32.115, -17.6577, 0.88 ) }
    dend_15 { pt3dadd( -249.154, -37.877, -15.2772, 0.88 ) }
    dend_15 { pt3dadd( -250.406, -43.1146, -12.1174, 0.88 ) }
    dend_15 { pt3dadd( -251.184, -48.5459, -9.13797, 0.88 ) }
    dend_15 { pt3dadd( -252.695, -53.354, -5.45241, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -254.862, -58.4945, -2.64785, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -95.3121, 31.7803, -81.0134, 0.22 ) }
    dend_18 { pt3dadd( -98.233, 28.5274, -89.9524, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 3/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -95.3121, 31.7803, -81.0134, 0.22 ) }
    dend_17 { pt3dadd( -97.7475, 28.8843, -90.3938, 0.22 ) }
    dend_17 { pt3dadd( -101.791, 24.8242, -98.7288, 0.22 ) }
    dend_17 { pt3dadd( -104.774, 22.0013, -107.973, 0.22 ) }
    dend_17 { pt3dadd( -107.185, 18.2839, -117.065, 0.22 ) }
    dend_17 { pt3dadd( -108.123, 16.3538, -126.95, 0.22 ) }
    dend_17 { pt3dadd( -108.848, 12.9541, -136.448, 0.22 ) }
    dend_17 { pt3dadd( -108.046, 9.57961, -145.95, 0.22 ) }
    dend_17 { pt3dadd( -108.501, 4.51301, -154.692, 0.22 ) }
    dend_17 { pt3dadd( -109.369, 0.494827, -163.934, 0.22 ) }
    dend_17 { pt3dadd( -111.83, -3.4351, -172.923, 0.22 ) }
    dend_17 { pt3dadd( -114.15, -8.11757, -181.584, 0.22 ) }
    dend_17 { pt3dadd( -117.238, -13.5057, -189.567, 0.22 ) }
    dend_17 { pt3dadd( -121.106, -18.7561, -197.299, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_25, dend_0, axon_0, dend_31, dend_26, dend_4, dend_1, axon_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_5 = new SectionList()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_27 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_5 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_29 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_38 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_7 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_25 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_4 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_10 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 3
    dend_1 nseg = 3
    dend_35 nseg = 3
    dend_30 nseg = 3
    dend_27 nseg = 7
    dend_5 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 17
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_34 nseg = 7
    dend_33 nseg = 21
    dend_29 nseg = 3
    dend_28 nseg = 11
    dend_22 nseg = 5
    dend_11 nseg = 3
    dend_9 nseg = 11
    dend_43 nseg = 11
    dend_40 nseg = 7
    dend_38 nseg = 3
    dend_37 nseg = 7
    dend_24 nseg = 9
    dend_23 nseg = 3
    dend_12 nseg = 7
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_42 nseg = 11
    dend_41 nseg = 9
    dend_19 nseg = 11
    dend_21 nseg = 9
    dend_20 nseg = 7
    dend_15 nseg = 13
    dend_17 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_DBC_e432520e46_0_0


