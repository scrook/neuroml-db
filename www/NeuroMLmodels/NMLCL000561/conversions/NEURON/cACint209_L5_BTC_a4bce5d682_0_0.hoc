// Cell: cACint209_L5_BTC_a4bce5d682_0_0
/*
{
  "id" : "cACint209_L5_BTC_a4bce5d682_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.00557, 13.9448, -0.281532, 2.94779", "-0.903474, 12.664, -0.255809, 4.6084", "-0.801382, 11.3832, -0.230087, 6.06545", "-0.699289, 10.1025, -0.204364, 7.51206", "-0.597197, 8.82172, -0.178642, 8.73615", "-0.495104, 7.54095, -0.15292, 9.82275", "-0.393011, 6.26019, -0.127197, 10.7174", "-0.290919, 4.97943, -0.101475, 11.6395", "-0.188826, 3.69867, -0.0757524, 12.4724", "-0.0867336, 2.41791, -0.05003, 12.6766", "0.015359, 1.13715, -0.0243075, 12.8528", "0.117452, -0.143613, 0.00141486, 12.7165", "0.219544, -1.42437, 0.0271373, 12.4031", "0.321637, -2.70514, 0.0528597, 12.3753", "0.423729, -3.9859, 0.0785821, 12.071", "0.525822, -5.26666, 0.104304, 10.4042", "0.627914, -6.54742, 0.130027, 7.86989", "0.730007, -7.82818, 0.155749, 5.70594", "0.8321, -9.10894, 0.181472, 4.59143", "0.934192, -10.3897, 0.207194, 3.60784", "1.03628, -11.6705, 0.232917, 2.27826" ]
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "0.462584, -8.38364, 1.90039, 2.8", "0.553688, -8.92111, 1.86232, 2.8", "0.6629, -9.48912, 1.82626, 2.28", "0.7866, -10.0602, 1.81404, 1.77", "0.864339, -10.3586, 1.8142, 1.4", "1.14737, -11.3121, 1.82628, 1.33", "1.33821, -11.8716, 1.86078, 1.18", "1.52285, -12.3211, 1.91066, 1.11", "1.7957, -12.9123, 2.02568, 1.25", "2.02275, -13.3904, 2.1536, 1.33", "2.18747, -13.7475, 2.27267, 1.4", "2.49508, -14.4728, 2.56411, 1.33", "2.62305, -14.8008, 2.71223, 1.03", "2.79756, -15.3857, 2.99473, 0.59", "2.83696, -15.6852, 3.14179, 0.52", "2.80991, -15.8662, 3.23229, 0.52", "2.75824, -15.951, 3.27046, 0.52", "2.545, -16.1017, 3.31388, 0.52", "2.17761, -16.274, 3.39332, 0.52", "2.03381, -16.3471, 3.4403, 0.52", "1.81855, -16.4842, 3.53945, 0.52", "1.61261, -16.6526, 3.65673, 0.52", "1.58632, -16.6919, 3.4247, 0.52", "1.49752, -16.8552, 2.68283, 0.52", "1.37563, -17.1131, 1.7054, 1.55", "1.33787, -17.2091, 1.37437, 1.84", "1.31097, -17.2937, 1.09557, 2.14", "0.765926, -19.618, -6.44963, 1.25", "0.7441, -19.761, -6.93354, 1.11", "0.706467, -20.0073, -7.94571, 0.81", "0.692249, -20.0573, -8.24271, 0.59", "0.58658, -20.1381, -9.39239, 0.88", "0.52444, -20.1033, -9.77546, 0.88", "0.694553, -20.363, -9.05667, 0.44", "1.06704, -21.1184, -6.95867, 0.81", "1.08492, -21.1767, -6.8096, 0.81", "1.09913, -21.4214, -6.29563, 1.03", "1.0735, -21.6371, -5.95292, 0.96", "0.881396, -22.4474, -4.93365, 0.96", "0.716393, -22.9643, -4.48698, 0.96", "0.611582, -23.2944, -4.3045, 0.96", "0.416322, -24.0076, -3.93617, 0.66", "0.27884, -24.6822, -3.61837, 0.44", "0.245809, -24.922, -3.51683, 0.44", "0.228666, -25.1352, -3.44859, 0.44", "0.196822, -25.8469, -3.21098, 0.81", "0.195155, -25.8887, -3.19659, 0.81", "0.139861, -26.5686, -2.96924, 1.11", "0.0982508, -26.9648, -2.83188, 1.55", "0.0783866, -27.124, -2.7903, 1.69", "0.0379094, -27.3951, -2.7303, 1.77", "-0.0854955, -28.0723, -2.62193, 1.77", "-0.161472, -28.4131, -2.56923, 1.77", "-0.273605, -28.787, -2.51857, 1.77", "-0.507883, -29.3141, -2.43278, 1.03", "-0.712358, -29.6586, -2.36624, 1.03", "-0.844028, -29.8126, -2.30427, 0.96", "-1.05722, -29.991, -2.18361, 0.66", "-1.3404, -30.1971, -2.00126, 0.52", "-1.5694, -30.377, -1.74259, 0.59", "-1.59009, -30.3991, -1.70843, 0.59", "-1.93375, -30.9297, -0.91302, 0.96", "-2.00354, -31.0686, -0.686046, 0.96", "-2.0431, -31.1562, -0.537922, 0.96", "-2.3086, -31.8472, 0.85851, 0.59", "-2.38371, -32.0879, 1.347, 1.18", "-2.4054, -32.1607, 1.49552, 1.18", "-2.55627, -32.7377, 2.68505, 1.55", "-2.59385, -32.8709, 2.9827, 1.55", "-2.87525, -33.6846, 4.9511, 1.03", "-3.01316, -33.9429, 5.65233, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "0.932584, -10.5579, -0.789611, 2.95", "0.932584, -10.5579, -0.789611, 2.95", "1.07046, -11.3522, -0.789611, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-1.33741, 13.3199, 3.03039, 2.06", "-1.33741, 13.3199, 3.03039, 2.06", "-0.988769, 13.9458, 4.20007, 1.47", "-0.419414, 15.1076, 6.32574, 1.55", "-0.402613, 15.1475, 6.39678, 1.55", "-0.19736, 15.6988, 7.34906, 1.77", "0.391805, 17.4984, 10.3546, 1.77", "0.64865, 18.386, 11.8152, 1.84", "0.74897, 18.8831, 12.6965, 1.99", "0.804323, 19.3386, 13.4689, 2.14", "0.820395, 19.5923, 13.8963, 2.28", "0.80558, 19.7922, 14.23, 2.73", "0.703851, 20.1729, 14.7314, 2.8", "0.153911, 21.9576, 17.1132, 2.8", "0.0804848, 22.1928, 17.5187, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.47741, -4.50314, -5.90961, 1.25", "-4.79618, -4.87705, -5.79809, 1.25", "-5.36896, -5.56597, -5.74432, 1.03", "-5.71264, -6.00428, -5.7586, 1.03", "-6.4661, -6.98019, -5.83461, 0.66", "-7.13504, -7.82834, -6.05539, 0.74", "-7.74667, -8.55917, -6.30469, 0.74", "-8.68508, -9.61634, -6.76667, 1.18", "-9.27183, -10.2253, -7.08744, 1.47", "-10.1367, -11.0484, -7.58554, 1.77", "-11.9391, -12.5091, -8.70586, 0.52", "-12.6506, -12.9867, -9.1287, 0.52", "-12.9684, -13.152, -9.34228, 0.74", "-13.5122, -13.3474, -9.66069, 1.18", "-14.188, -13.5017, -10.1947, 1.47", "-14.9198, -13.6217, -10.8662, 1.92", "-15.2631, -13.679, -11.1998, 1.69", "-17.2411, -14.129, -13.4026, 0.88", "-18.568, -14.5369, -14.996, 0.74", "-20.8801, -15.4694, -17.9726, 0.74", "-21.2091, -15.6522, -18.4546, 0.52", "-21.6824, -16.0079, -19.2178, 0.52", "-22.1893, -16.4837, -20.0908, 0.96", "-22.5116, -16.8596, -20.621, 0.96", "-22.7959, -17.2435, -21.0801, 1.33", "-23.9975, -18.7889, -22.7109, 1.33", "-25.1089, -19.9861, -24.1944, 0.44", "-25.3961, -20.2726, -24.5759, 0.88", "-26.114, -20.932, -25.4775, 0.29", "-26.6679, -21.3995, -26.1747, 1.33", "-28.2254, -22.561, -28.0028, 1.84", "-29.0638, -23.1095, -28.7142, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.82741, 13.4369, -3.03961, 1.99", "-2.82741, 13.4369, -3.03961, 1.99", "-3.39111, 15.7227, -3.57533, 2.06", "-3.8645, 17.6424, -4.02522, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.03628, -11.6705, 0.232917, 0.52", "2.22818, -26.6231, 0.232917, 0.52", "3.42008, -41.5756, 0.232917, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "-3.01316, -33.9429, 5.65233, 0.52", "-2.45094, -34.4454, 5.80171, 0.52", "-2.16693, -34.8546, 6.00639, 0.74", "-2.11345, -35.0899, 6.1258, 0.74", "-2.12524, -35.503, 6.28041, 0.74", "-2.13477, -35.5593, 6.29719, 0.74", "-2.20482, -35.8144, 6.35968, 0.74", "-2.59915, -36.6793, 6.52204, 0.66", "-2.9621, -37.336, 6.63549, 0.66", "-3.30822, -37.9164, 6.73042, 1.25", "-3.45082, -38.1624, 6.7647, 1.18", "-3.62414, -38.4798, 6.79893, 1.33", "-3.79079, -38.7899, 6.81743, 1.11", "-3.81869, -38.8426, 6.81621, 1.11", "-4.0468, -39.2405, 6.8992, 0.66", "-4.33365, -39.6849, 7.26596, 0.59", "-4.35698, -39.7219, 7.30815, 0.59", "-4.52192, -40.011, 7.67386, 0.44", "-4.6612, -40.2639, 8.02015, 0.44", "-5.01981, -40.8903, 8.95677, 0.96", "-5.54304, -41.7444, 10.4387, 1.11", "-5.63384, -41.8881, 10.7256, 0.88", "-5.75261, -42.1008, 11.1721, 0.88", "-5.75849, -42.1148, 11.2044, 0.88" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "-3.01316, -33.9429, 5.65233, 0.37", "-2.65457, -34.6326, 5.40716, 0.37", "-2.2843, -35.4143, 5.20414, 0.37", "-1.75994, -36.5502, 5.26013, 0.59", "-1.59133, -36.9241, 5.35778, 0.74", "-1.29345, -37.6058, 5.64664, 0.74", "-1.01755, -38.2215, 5.93948, 0.37", "-0.583393, -39.2043, 6.49395, 0.37", "0.291381, -41.2258, 7.79408, 0.29", "0.706542, -42.2156, 8.50901, 0.81", "1.23053, -43.4376, 9.46082, 0.37", "1.56446, -44.2181, 10.1299, 0.29", "1.69719, -44.53, 10.4234, 0.37" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "1.07046, -11.3522, -0.789611, 1.47", "2.47043, -12.3844, -1.38175, 1.47", "2.94846, -12.8069, -1.56958, 1.33", "3.0889, -12.9485, -1.68874, 1.33", "3.30861, -13.2083, -1.94186, 1.03", "3.46088, -13.4228, -2.15627, 0.81", "3.64491, -13.7406, -2.4724, 1.11", "3.73384, -14.1004, -2.88388, 1.18", "3.79869, -15.1493, -4.54964, 0.88", "3.78225, -15.3246, -4.8656, 1.33", "3.74619, -15.5001, -5.21374, 1.92", "3.70001, -15.6901, -5.6097, 1.99", "3.60078, -16.1426, -6.58581, 1.92", "3.52244, -16.8422, -8.08244, 1.11", "3.53897, -17.0851, -8.54875, 1.18", "3.63921, -17.4525, -9.25451, 1.18", "3.72917, -17.6333, -9.5918, 1.18", "3.97355, -17.9638, -10.1507, 1.18", "4.3243, -18.3371, -10.6418, 1.4", "4.65976, -18.6134, -10.913, 2.06", "4.6924, -18.6345, -10.9347, 2.06", "4.92878, -18.7595, -11.0581, 1.84", "4.95406, -18.7722, -11.0721, 1.84" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "1.07046, -11.3522, -0.789611, 1.03", "0.685408, -13.349, -1.84376, 1.03", "0.48962, -14.4493, -2.39651, 0.96", "0.322372, -15.3892, -2.86869, 1.33", "0.135766, -16.4379, -3.39552, 1.55", "0.0160692, -17.1106, -3.73345, 1.55", "-0.085077, -17.679, -4.01901, 1.55", "-0.18249, -18.5016, -4.33901, 1.69" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "0.0804848, 22.1928, 17.5187, 1.03", "0.0541272, 22.7198, 17.4083, 1.03", "0.0520958, 23.0196, 17.4108, 1.03", "0.0444361, 23.2536, 17.4411, 0.88", "0.0189378, 23.5301, 17.4947, 0.88", "-0.023598, 23.7894, 17.5341, 0.88", "-0.0715005, 24.0039, 17.5635, 1.03", "-0.250079, 24.5667, 17.6829, 1.03", "-0.36621, 24.8509, 17.7427, 0.96", "-0.499613, 25.1208, 17.7959, 0.96", "-0.74517, 25.5361, 17.8656, 0.66", "-0.858385, 25.7038, 17.8853, 0.59", "-0.945396, 25.8194, 17.8883, 0.52", "-1.03057, 25.9258, 17.8811, 0.59", "-1.11793, 26.0379, 17.8712, 0.74", "-1.28635, 26.2657, 17.8529, 1.03", "-1.42407, 26.4595, 17.8444, 0.96", "-1.63071, 26.7654, 17.8264, 1.25", "-1.78464, 26.9851, 17.7822, 1.62", "-2.0012, 27.2769, 17.697, 1.62", "-2.13536, 27.4385, 17.6416, 1.47", "-2.29566, 27.6044, 17.5792, 1.25", "-2.52076, 27.7985, 17.5024, 1.11", "-3.1635, 28.253, 17.3235, 0.81", "-3.47711, 28.4331, 17.2564, 0.74", "-3.80247, 28.5826, 17.2083, 0.74", "-4.11686, 28.6958, 17.1772, 0.74", "-4.33048, 28.7489, 17.1728, 0.74", "-4.4974, 28.776, 17.1861, 0.74", "-4.69615, 28.798, 17.2312, 0.74", "-4.90826, 28.8101, 17.3231, 0.66", "-5.06882, 28.8277, 17.4353, 0.52", "-5.26964, 28.8715, 17.6356, 0.59", "-5.3677, 28.9168, 17.7568, 0.59", "-5.39091, 28.9354, 17.7906, 0.59", "-5.82059, 29.4469, 18.531, 0.74", "-5.8744, 29.5904, 18.7459, 1.03", "-5.88789, 29.6777, 18.8661, 1.77", "-5.89738, 29.9327, 19.1823, 1.77", "-5.89147, 30.1505, 19.4273, 1.77", "-5.88958, 30.1801, 19.4586, 1.77", "-5.75378, 31.1311, 20.326, 1.77", "-5.71451, 31.3149, 20.5214, 1.77", "-5.68093, 31.4321, 20.6675, 1.84", "-5.62814, 31.5553, 20.8613, 1.69" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "0.0804848, 22.1928, 17.5187, 0.88", "-1.97664, 23.5626, 19.6527, 0.88", "-2.37505, 23.8638, 20.0425, 0.88", "-3.0018, 24.4119, 20.6128, 0.81", "-3.31597, 24.7305, 20.8831, 0.52", "-3.56553, 25.023, 21.0949, 0.52", "-3.6032, 25.0767, 21.1286, 0.52", "-3.61331, 25.37, 21.4438, 0.66", "-3.51007, 25.5447, 21.8701, 0.59", "-3.41037, 25.6437, 22.1971, 0.59", "-3.30605, 25.734, 22.5054, 0.74", "-3.11188, 25.8902, 23.0414, 0.96", "-1.74918, 26.975, 26.7994, 1.11", "-1.47929, 27.1604, 27.5376, 1.18", "-1.41087, 27.1999, 27.7281, 1.18", "-1.26427, 27.2745, 28.1749, 1.11", "-1.17794, 27.3055, 28.4487, 1.03", "-1.02955, 27.3031, 28.7889, 0.81", "-2.38255, 27.6262, 28.2064, 1.03", "-2.72659, 27.6827, 28.1123, 1.03", "-3.8877, 27.8385, 27.9041, 1.03", "-4.51829, 27.9162, 27.834, 0.74", "-4.69091, 27.9427, 27.8533, 0.74", "-5.2286, 28.0647, 28.0112, 0.88", "-5.9332, 28.3184, 28.3532, 0.74", "-6.39794, 28.6106, 28.6273, 0.74", "-6.48474, 28.7365, 28.7328, 0.74", "-6.91075, 30.0224, 29.7464, 0.74", "-6.98187, 30.567, 30.1059, 1.25", "-6.94657, 31.0601, 30.3727, 1.25", "-6.82773, 31.6828, 30.6586, 1.25", "-6.47225, 33.0446, 31.3556, 1.03", "-6.29518, 33.6396, 31.7273, 0.96", "-6.03656, 34.3711, 32.1417, 0.81", "-5.76429, 35.0772, 32.5889, 0.74", "-5.67111, 35.3016, 32.7312, 0.74", "-5.3688, 36.3141, 33.8343, 0.74", "-5.29677, 37.1003, 34.8578, 0.81", "-5.4463, 37.7382, 36.0494, 0.74", "-5.52979, 37.9369, 36.4752, 0.74", "-5.63973, 38.1457, 36.9527, 0.74", "-6.57456, 39.7008, 40.587, 0.81", "-6.79566, 40.0191, 41.3315, 1.03", "-7.7265, 41.1566, 44.2359, 1.25", "-7.75183, 41.1841, 44.314, 1.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-29.0638, -23.1095, -28.7142, 0.74", "-31.0039, -22.3574, -32.9981, 0.74", "-31.5873, -22.1332, -34.1753, 0.37", "-31.8331, -22.04, -34.6443, 0.37", "-32.1842, -21.911, -35.2729, 0.37", "-32.321, -21.8704, -35.5083, 0.37", "-32.538, -21.809, -35.8592, 0.74", "-32.7135, -21.7647, -36.0565, 1.03", "-33.4075, -21.6329, -36.8601, 1.33", "-33.5819, -21.6076, -37.0673, 1.25", "-34.7553, -21.4168, -39.1834, 0.22", "-34.9852, -21.3612, -39.6451, 0.22", "-35.072, -21.3342, -39.8318, 0.59", "-35.1974, -21.2877, -40.1056, 1.03", "-35.3124, -21.2377, -40.3676, 1.03", "-36.9373, -20.4892, -44.6494, 0.22", "-37.159, -20.3804, -45.2988, 0.66", "-37.2026, -20.3591, -45.4333, 1.47", "-37.303, -20.3052, -45.7976, 1.84", "-37.6203, -20.1302, -47.051, 1.33", "-38.3502, -19.6969, -50.0539, 0.88", "-38.3654, -19.688, -50.1196, 0.88", "-38.4283, -19.6545, -50.3956, 0.96", "-39.6868, -18.9694, -55.5812, 1.47", "-39.704, -18.9603, -55.6465, 1.47", "-39.8198, -18.8994, -56.0438, 1.47", "-41.1477, -18.1605, -60.2292, 0.29", "-41.318, -18.0661, -60.7462, 0.29", "-41.6209, -17.908, -61.5785, 0.29", "-41.823, -17.8016, -62.0311, 0.52", "-41.823, -17.8016, -62.0311, 0.96", "-42.1697, -17.629, -63.4846, 1.47", "-42.844, -17.2851, -66.5757, 0.44", "-42.9393, -17.2389, -67.0314, 1.11", "-43.0373, -17.1953, -67.5177, 1.11", "-45.1501, -16.2439, -78.3687, 0.52", "-45.1627, -16.2381, -78.4334, 0.52", "-45.2497, -16.2022, -78.8917, 0.81", "-45.313, -16.1776, -79.2313, 0.81", "-45.3247, -16.173, -79.2956, 0.81", "-45.9501, -15.9271, -82.5426, 0.81", "-46.0465, -15.8823, -82.9404, 0.81", "-47.2456, -15.347, -87.7356, 0.37", "-47.3212, -15.3172, -88.0178, 1.47", "-47.3212, -15.3172, -88.0178, 1.47", "-48.4011, -14.977, -91.2474, 0.22", "-48.6339, -14.92, -91.8048, 0.22", "-48.7569, -14.891, -92.0597, 0.22", "-49.2297, -14.7552, -92.7112, 0.22", "-49.3731, -14.7165, -92.9946, 0.74", "-49.5305, -14.6819, -93.3604, 1.11", "-49.554, -14.676, -93.422, 1.11", "-49.9648, -14.5652, -94.6356, 1.11", "-50.0338, -14.5324, -94.8387, 1.11", "-51.516, -13.6384, -98.9352, 0.74", "-51.6164, -13.5745, -99.1915, 1.69", "-51.8722, -13.3873, -99.8318, 1.69", "-51.9675, -13.3024, -100.064, 1.69", "-53.107, -12.0615, -102.684, 0.44", "-53.4137, -11.6432, -103.312, 0.44", "-53.439, -11.6002, -103.353, 0.44", "-53.9318, -10.6365, -104.211, 0.81", "-54.0935, -10.2808, -104.506, 1.11", "-54.1987, -10.0184, -104.688, 1.11", "-54.5925, -8.6738, -105.302, 0.29", "-54.6085, -8.61438, -105.328, 0.29", "-54.7517, -8.16353, -105.57, 0.29", "-54.8477, -7.91436, -105.71, 0.88", "-54.9799, -7.57897, -105.933, 1.11", "-55.0964, -7.31615, -106.218, 1.11", "-55.2608, -6.98956, -106.65, 1.11", "-56.009, -5.6585, -108.507, 0.22", "-56.2595, -5.3069, -109.037, 1.33", "-56.3255, -5.22766, -109.157, 1.33", "-57.9092, -3.55526, -111.685, 0.29", "-58.0767, -3.39762, -111.962, 0.66", "-58.2358, -3.25308, -112.22, 0.88", "-58.7789, -2.83872, -113.005, 0.52", "-59.2528, -2.48864, -113.665, 0.52", "-59.4089, -2.37111, -113.872, 0.81", "-61.4055, -0.752008, -116.297, 0.52", "-61.6628, -0.490206, -116.79, 0.52", "-62.0388, -0.0404644, -117.716, 0.29", "-62.1708, 0.124425, -118.078, 0.81", "-62.1913, 0.14853, -118.136, 0.81", "-62.3435, 0.309911, -118.536, 0.81", "-64.0424, 1.88068, -122.462, 0.29", "-64.1351, 1.96443, -122.687, 0.29", "-64.472, 2.27078, -123.539, 0.29", "-64.4966, 2.2912, -123.597, 0.29", "-64.624, 2.38574, -123.853, 0.74", "-64.7247, 2.44995, -124.011, 0.74", "-66.3368, 3.40723, -125.433, 0.29", "-66.5169, 3.52432, -125.597, 0.29", "-66.5655, 3.55905, -125.646, 0.29", "-66.9039, 3.84053, -126.021, 0.29", "-67.0967, 4.01594, -126.247, 0.52", "-67.1339, 4.05001, -126.289, 0.52", "-67.374, 4.30636, -126.547, 0.52", "-67.585, 4.5629, -126.8, 0.52", "-68.536, 5.65496, -128.091, 0.29", "-68.6216, 5.73782, -128.187, 0.59", "-68.7145, 5.81315, -128.273, 0.59", "-69.0598, 6.05992, -128.534, 1.03", "-69.4299, 6.29013, -128.753, 1.03", "-70.4052, 6.80814, -129.493, 0.66", "-71.362, 7.18605, -130.278, 0.22", "-71.6034, 7.30002, -130.523, 0.66", "-71.7616, 7.38723, -130.709, 0.96", "-72.0702, 7.57158, -131.111, 0.96", "-73.6556, 8.67222, -133.403, 0.44", "-73.6933, 8.70214, -133.463, 0.44", "-74.2104, 9.1391, -134.405, 0.29", "-74.3211, 9.21982, -134.643, 0.29", "-74.5338, 9.32688, -135.035, 0.29", "-74.8529, 9.43707, -135.511, 0.96", "-75.1057, 9.50792, -135.784, 1.4", "-75.2495, 9.54133, -135.93, 1.4", "-77.9232, 10.0214, -138.475, 0.44", "-78.8868, 10.186, -139.377, 0.29", "-79.3703, 10.2718, -139.865, 0.29", "-79.976, 10.3836, -140.503, 0.29", "-80.0217, 10.3937, -140.55, 0.29", "-80.3114, 10.4632, -140.82, 0.29", "-80.8752, 10.6177, -141.217, 0.88", "-81.8825, 10.9393, -142.267, 0.74", "-81.9234, 10.9454, -142.318, 0.74", "-82.1918, 10.9449, -142.666, 0.74", "-82.2478, 10.9406, -142.734, 0.74", "-82.7081, 10.8783, -143.338, 0.52", "-82.7554, 10.8707, -143.398, 0.52", "-83.6059, 10.6923, -144.392, 0.22", "-83.8257, 10.6421, -144.652, 0.44", "-84.0041, 10.6024, -144.871, 0.59", "-85.2567, 10.3258, -146.35, 0.22", "-85.3525, 10.3082, -146.453, 0.22", "-85.6157, 10.2694, -146.723, 0.66", "-85.7108, 10.2604, -146.814, 0.66", "-86.9394, 10.1322, -147.87, 0.22", "-87.2684, 10.0955, -148.09, 0.22", "-87.8587, 10.0354, -148.329, 0.66", "-88.0924, 10.0191, -148.407, 1.25", "-88.2829, 10.0158, -148.468, 1.25", "-88.7727, 10.021, -148.601, 1.55", "-89.4136, 10.0472, -148.699, 1.33", "-89.7997, 10.0699, -148.797, 1.33", "-90.2014, 10.0906, -148.923, 1.33", "-90.9458, 10.1293, -149.163, 0.81", "-91.1426, 10.1378, -149.229, 0.81", "-92.1209, 10.1941, -149.601, 0.44", "-93.2306, 10.2902, -150.041, 0.44", "-93.2912, 10.2948, -150.067, 0.44", "-93.9945, 10.3475, -150.378, 0.44", "-94.0562, 10.3501, -150.4, 0.44", "-95.2435, 10.3674, -150.755, 0.44", "-95.6328, 10.3481, -150.844, 0.44", "-96.2301, 10.2616, -150.923, 0.44", "-96.3829, 10.2304, -150.938, 0.44", "-97.6127, 9.94525, -151.011, 0.29", "-98.1467, 9.80723, -151.019, 0.96", "-99.3962, 9.53109, -151.376, 0.22", "-99.937, 9.44879, -151.58, 1.25", "-100.05, 9.4404, -151.629, 1.25", "-100.622, 9.43316, -151.92, 1.25", "-100.75, 9.43952, -151.988, 1.25", "-103.954, 9.77633, -153.56, 0.44", "-105.196, 9.98625, -154.073, 0.29", "-105.617, 10.065, -154.185, 0.29", "-105.679, 10.0765, -154.207, 0.29", "-107.439, 10.2518, -154.931, 0.96", "-107.501, 10.2558, -154.954, 0.96", "-107.836, 10.2651, -155.062, 1.33", "-108.341, 10.2821, -155.282, 1.33", "-110.646, 10.4496, -156.407, 0.37", "-111.848, 10.5781, -157.032, 0.22", "-112.516, 10.6637, -157.41, 0.22", "-112.761, 10.7015, -157.543, 0.74", "-113.231, 10.7906, -157.776, 1.18", "-115.025, 11.1943, -158.531, 0.29", "-115.392, 11.2993, -158.617, 0.29", "-115.452, 11.3223, -158.629, 0.29", "-115.625, 11.3904, -158.661, 0.96", "-116.262, 11.6625, -158.749, 0.96", "-116.33, 11.6934, -158.753, 0.96", "-117.435, 12.2352, -158.722, 0.37", "-117.746, 12.386, -158.715, 0.66", "-118.12, 12.5749, -158.726, 0.81", "-118.828, 12.9412, -158.832, 0.66", "-119.32, 13.2197, -158.971, 0.37", "-119.541, 13.3269, -159.017, 0.74", "-120.187, 13.5966, -159.113, 1.11", "-120.867, 13.8605, -159.168, 1.11", "-121.848, 14.2313, -159.184, 1.11", "-122.377, 14.4201, -159.224, 0.81", "-124.512, 15.1997, -159.455, 0.29", "-124.963, 15.3615, -159.505, 0.44", "-125.383, 15.5171, -159.545, 0.74", "-125.973, 15.7341, -159.58, 0.74", "-127.326, 16.2856, -159.668, 0.29", "-127.855, 16.5379, -159.746, 0.29", "-127.984, 16.6143, -159.778, 0.29", "-128.356, 16.8225, -159.825, 0.66", "-128.815, 17.0789, -159.824, 0.96", "-129.28, 17.3484, -159.766, 0.74", "-129.963, 17.7572, -159.604, 0.29", "-130.956, 18.378, -159.371, 0.29", "-131.253, 18.5781, -159.303, 0.66", "-131.755, 18.9242, -159.211, 0.96", "-132.145, 19.2074, -159.159, 0.29", "-132.499, 19.4668, -159.141, 0.29", "-132.664, 19.5898, -159.153, 0.29", "-133.046, 19.8608, -159.203, 0.29", "-133.443, 20.0722, -159.266, 0.29", "-133.752, 20.1451, -159.247, 0.44", "-133.806, 20.1493, -159.231, 0.44", "-134.055, 20.1656, -159.123, 0.44", "-134.903, 20.2141, -158.695, 0.37", "-134.954, 20.2219, -158.672, 0.37", "-136.106, 20.5017, -158.188, 0.88", "-136.464, 20.6037, -158.05, 1.33", "-136.949, 20.7724, -157.897, 1.25", "-137.011, 20.7959, -157.882, 1.25", "-138.561, 21.3935, -157.651, 0.44", "-138.925, 21.5091, -157.634, 0.81", "-139.127, 21.5541, -157.657, 0.81", "-139.724, 21.6332, -157.752, 0.22", "-140.298, 21.5579, -157.999, 0.22", "-140.63, 21.4225, -158.236, 0.22", "-140.89, 21.2414, -158.492, 0.22", "-141.387, 20.8489, -159.068, 0.81", "-141.558, 20.7102, -159.273, 1.18", "-142.976, 19.4014, -161.067, 0.37", "-143.137, 19.2423, -161.278, 0.44", "-143.29, 19.0868, -161.472, 0.44", "-144.232, 18.0784, -162.576, 0.37", "-144.537, 17.7413, -162.893, 0.37", "-144.891, 17.4293, -163.173, 0.81", "-145.291, 17.1345, -163.405, 1.03", "-145.656, 16.8562, -163.609, 1.18", "-146.134, 16.4814, -163.917, 1.18", "-146.18, 16.4455, -163.947, 1.18", "-148.274, 14.8702, -165.434, 0.29", "-148.602, 14.6329, -165.676, 1.18", "-149.009, 14.3421, -165.991, 1.47", "-150.352, 13.3962, -166.939, 0.52", "-150.761, 13.1141, -167.193, 0.37", "-150.979, 12.9583, -167.3, 0.81", "-151.207, 12.7815, -167.391, 0.96", "-151.306, 12.7054, -167.429, 0.96", "-152.46, 11.7971, -167.831, 0.37", "-152.664, 11.6137, -167.886, 0.74", "-152.901, 11.3803, -167.983, 0.74", "-153.904, 10.1953, -168.531, 0.44", "-154.617, 9.1704, -169.011, 0.29", "-154.767, 8.92349, -169.128, 0.66", "-154.972, 8.51502, -169.328, 1.03", "-155.244, 7.9289, -169.593, 0.29", "-155.594, 7.05005, -169.923, 0.29", "-155.878, 6.22736, -170.135, 0.29", "-156.024, 5.71436, -170.282, 0.29", "-156.109, 5.40227, -170.372, 0.66", "-156.32, 4.66323, -170.581, 0.29", "-156.503, 4.03421, -170.724, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-29.0638, -23.1095, -28.7142, 1.84", "-29.9447, -23.7327, -28.7162, 1.84", "-31.1744, -24.705, -28.7163, 0.29", "-31.8862, -25.3519, -28.7141, 0.29", "-32.5523, -25.9623, -28.7118, 0.81", "-33.1458, -26.5507, -28.7057, 0.29", "-33.7572, -27.1687, -28.697, 0.22", "-33.9754, -27.3925, -28.6929, 0.81", "-34.4374, -27.9719, -28.6788, 0.81", "-34.8182, -28.4729, -28.6653, 0.81", "-35.3384, -29.153, -28.6464, 0.81", "-35.8685, -29.8681, -28.6263, 0.52", "-36.3334, -30.5213, -28.6089, 0.52", "-36.7167, -31.1091, -28.6088, 1.11", "-37.0869, -31.7467, -28.6219, 1.33", "-37.33, -32.2611, -28.6397, 1.33", "-37.4366, -32.5147, -28.652, 1.11", "-37.7671, -33.5076, -28.7026, 1.03", "-37.9393, -34.0463, -28.7317, 0.29", "-38.093, -34.4748, -28.7558, 0.29", "-38.3239, -35.1871, -28.7879, 0.22", "-38.5913, -35.8851, -28.8146, 0.22", "-38.8346, -36.4347, -28.8295, 0.88", "-39.0429, -36.849, -28.8345, 1.11", "-39.2777, -37.2889, -28.833, 1.11", "-40.5347, -39.2735, -28.8305, 0.22", "-41.1796, -40.1145, -28.8974, 0.96", "-41.8488, -40.9325, -29.0107, 1.33", "-42.9039, -42.1557, -29.2395, 0.37", "-44.0817, -43.4261, -29.5308, 0.59", "-45.22, -44.4734, -29.7644, 0.37", "-46.8116, -45.667, -30.0354, 1.25", "-47.5716, -46.2322, -30.139, 1.92", "-48.2698, -46.6999, -30.2083, 1.25", "-49.0236, -47.1548, -30.2455, 1.03", "-50.5443, -48.0659, -29.9831, 0.29", "-50.974, -48.363, -29.7977, 0.52", "-51.7224, -48.8597, -29.2892, 0.29", "-51.8006, -48.9058, -29.2312, 0.29", "-52.1123, -49.0957, -29.0326, 0.29", "-54.0266, -50.3669, -28.0267, 0.88", "-54.0943, -50.4144, -28.0011, 0.88", "-54.5493, -50.7266, -27.8532, 1.4", "-55.0844, -51.073, -27.7105, 1.11", "-57.2615, -52.4888, -27.3212, 0.44", "-57.5912, -52.706, -27.3117, 1.18", "-57.9229, -52.9243, -27.3757, 1.18", "-58.3885, -53.2321, -27.4692, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.8645, 17.6424, -4.02522, 1.03", "-4.66244, 18.1849, -4.18808, 1.03", "-6.40118, 19.3204, -4.49483, 0.74", "-6.89178, 19.6168, -4.56304, 0.81", "-8.1436, 20.3291, -4.57205, 0.96", "-9.28526, 20.9013, -4.63809, 0.96", "-10.4525, 21.4543, -4.73583, 1.47", "-11.0728, 21.7141, -4.83956, 1.47", "-11.9099, 22.0292, -4.99761, 1.47", "-13.7596, 22.6772, -5.40218, 0.88", "-16.5222, 23.5621, -6.088, 0.81", "-17.1052, 23.7529, -6.22742, 0.59", "-18.2077, 24.1233, -6.56261, 0.96", "-19.0858, 24.4421, -6.88151, 0.96", "-19.6063, 24.6488, -7.16558, 0.81", "-20.1249, 24.8894, -7.50163, 0.81", "-20.6288, 25.1608, -7.77822, 0.96", "-20.9567, 25.3439, -7.97298, 0.96", "-21.7581, 25.806, -8.4814, 1.25", "-23.3999, 26.7286, -9.71816, 1.84", "-24.1565, 27.1783, -10.3824, 1.84", "-24.3404, 27.2947, -10.5678, 1.84", "-24.6231, 27.4805, -10.8813, 1.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.8645, 17.6424, -4.02522, 2.06", "-3.89827, 18.4161, -3.99853, 2.06", "-3.95451, 19.7048, -3.95408, 1.55", "-4.0174, 21.1459, -3.90436, 1.4", "-4.06336, 22.1988, -3.86804, 1.84", "-4.11619, 23.4094, -3.82628, 1.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.42008, -41.5756, 0.232917, 0.52", "4.61198, -56.5282, 0.232917, 0.52", "5.80388, -71.4808, 0.232917, 0.52" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_132",
    "id" : "dend_132",
    "points3d" : [ "-5.75849, -42.1148, 11.2044, 0.88", "-6.49133, -41.949, 11.927, 0.88", "-7.00379, -41.833, 12.4324, 0.96", "-7.39225, -41.7451, 12.8154, 0.96", "-7.65582, -41.6855, 13.0753, 0.96" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "-5.75849, -42.1148, 11.2044, 0.88", "-6.08896, -42.7792, 11.411, 0.88", "-6.35222, -43.2168, 11.5781, 0.59", "-6.69424, -43.7112, 11.7731, 0.59", "-7.53185, -44.9563, 12.2345, 0.37", "-8.00169, -45.6684, 12.4888, 0.37", "-8.54343, -46.589, 12.8056, 0.37", "-9.13424, -47.7552, 13.3643, 0.52", "-9.44757, -48.5497, 13.8336, 0.52", "-9.62146, -49.2904, 14.4545, 0.66", "-9.62943, -49.3517, 14.5137, 0.66", "-9.59155, -50.3884, 15.7147, 0.59", "-9.16648, -52.0314, 17.9568, 0.88", "-9.006, -52.3622, 18.485, 1.03", "-8.40693, -53.3423, 20.3403, 1.03" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "1.69719, -44.53, 10.4234, 0.81", "2.67172, -45.4451, 10.3483, 0.81", "3.82098, -46.4789, 10.2126, 0.81", "4.47323, -47.0375, 10.1224, 0.74", "5.51514, -47.9217, 9.96934, 0.59", "6.00287, -48.3356, 9.89765, 1.03", "6.92717, -49.12, 9.7618, 1.11", "7.63509, -49.6992, 9.5805, 1.11", "8.26834, -50.2134, 9.40575, 0.96", "8.41864, -50.332, 9.36376, 0.96" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "1.69719, -44.53, 10.4234, 0.29", "1.07209, -44.4038, 10.1971, 0.29", "0.839475, -44.3538, 10.0954, 0.29", "0.2145, -44.2196, 9.82216, 0.22", "-0.257648, -44.1182, 9.61574, 0.22", "-0.599308, -44.0448, 9.46637, 0.22", "-1.09154, -43.9391, 9.25116, 0.74", "-1.18475, -43.9089, 9.19441, 0.74", "-7.58006, -41.0026, 5.38252, 0.74", "-14.2691, -37.3222, 3.08422, 0.74", "-20.6926, -33.04, 1.15951, 0.74", "-27.9502, -29.8762, 0.117951, 0.74" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "4.95406, -18.7722, -11.0721, 0.59", "5.49727, -19.7369, -13.2106, 0.59", "5.52026, -19.7744, -13.2865, 0.59", "5.78757, -20.2203, -14.2205, 0.59", "6.86692, -22.1328, -18.0716, 0.96", "7.18961, -22.6413, -19.1009, 0.59", "7.44965, -22.9847, -19.7959, 0.44", "7.77938, -23.3437, -20.5473, 1.03", "9.09134, -24.4805, -23.0801, 1.25", "9.38704, -24.683, -23.5369, 1.25", "10.7141, -25.4963, -25.066, 0.52", "11.4682, -25.9625, -25.9571, 0.52", "11.5174, -25.9917, -26.0119, 0.52", "12.6481, -26.6025, -27.0565, 0.52", "13.5403, -27.0868, -27.7246, 0.52", "14.4056, -27.5889, -28.3487, 0.88", "15.3168, -28.1886, -28.986, 1.55", "16.144, -28.7901, -29.5775, 2.14", "16.8268, -29.3126, -30.0353, 1.69", "17.8238, -30.1202, -30.6538, 1.18", "18.4956, -30.6549, -31.07, 1.03", "18.6172, -30.7482, -31.1321, 1.03", "18.9819, -31.0214, -31.2648, 0.74", "19.2877, -31.2391, -31.3697, 0.74", "19.9617, -31.7106, -31.6943, 0.74" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "4.95406, -18.7722, -11.0721, 0.29", "7.06516, -20.0397, -11.3709, 0.29", "7.47046, -20.3469, -11.2684, 0.29", "7.87892, -20.7086, -11.0897, 0.29", "8.31362, -21.1398, -10.8027, 0.29", "8.83224, -21.6933, -10.3864, 0.74", "9.26796, -22.1909, -9.9504, 0.88", "9.78667, -22.894, -9.16293, 0.66", "10.076, -23.2735, -8.71923, 0.66", "10.5097, -23.7987, -7.99816, 0.66", "10.7322, -24.025, -7.64357, 0.66", "11.2954, -24.5156, -6.79661, 0.66", "11.7363, -24.8424, -6.20026, 0.52", "12.3812, -25.2852, -5.46106, 0.29", "13.225, -25.8481, -4.58875, 0.29", "13.7136, -26.1806, -4.17377, 0.37", "13.7648, -26.216, -4.13669, 0.37", "14.4268, -26.6939, -3.74564, 0.37", "14.8786, -27.0632, -3.48185, 0.44", "15.8994, -28.0569, -2.87272, 0.44", "16.4795, -28.6531, -2.56214, 1.03", "16.6942, -28.8794, -2.43032, 1.4", "17.0872, -29.2966, -2.17345, 1.62", "17.8229, -30.1218, -1.54058, 0.44", "18.2057, -30.59, -1.13967, 0.59", "18.4965, -31.0457, -0.738741, 0.22", "18.8878, -31.7892, -0.0691609, 0.07", "19.0227, -32.0851, 0.203104, 0.07", "19.4968, -33.2832, 1.30859, 0.96", "19.5368, -33.4573, 1.50701, 1.25", "19.6292, -34.3041, 2.54497, 0.22", "19.6453, -34.7129, 3.05906, 0.22", "19.6507, -35.1016, 3.52369, 0.74", "19.6619, -35.3393, 3.78545, 0.88", "19.898, -38.1417, 6.57529, 0.29", "19.9639, -38.6193, 7.03143, 0.29", "20.2725, -40.1539, 8.43963, 1.0", "20.4472, -40.7938, 9.01158, 1.5", "20.9028, -42.079, 10.0718, 0.29", "21.1628, -42.588, 10.4901, 0.29", "21.6056, -43.1677, 10.9056, 0.29", "21.9067, -43.4941, 11.1715, 0.29", "22.7216, -44.2366, 11.8294, 0.52", "22.8402, -44.3339, 11.9315, 1.03", "24.0793, -45.2953, 12.981, 1.18", "24.4927, -45.6365, 13.323, 1.03", "24.9619, -46.0815, 13.6774, 0.96", "25.2996, -46.4434, 13.8824, 0.96", "25.4541, -46.6277, 13.979, 0.88", "26.2119, -47.5297, 14.4549, 0.52", "26.2627, -47.5905, 14.4849, 0.52", "26.7665, -48.161, 14.8199, 1.33", "27.1281, -48.5465, 15.125, 1.33", "28.5055, -49.9571, 16.4196, 0.29", "29.2699, -50.7148, 17.1992, 0.29", "29.3277, -50.768, 17.2602, 0.29", "29.4911, -50.9051, 17.4252, 0.59", "30.6673, -51.7808, 18.5422, 0.22", "31.1595, -52.0991, 18.9483, 0.22", "31.3031, -52.1802, 19.0316, 0.22", "31.9565, -52.5271, 19.4059, 0.22", "32.0285, -52.5644, 19.4398, 0.22", "32.4205, -52.7518, 19.5679, 0.22", "32.5956, -52.8049, 19.5977, 0.22", "33.0683, -52.9072, 19.7035, 0.88", "33.1617, -52.9252, 19.7269, 0.88", "33.6432, -53.004, 19.8586, 1.18", "33.82, -53.0306, 19.9093, 1.18", "35.4517, -53.2326, 20.4087, 0.22", "35.9461, -53.2892, 20.5685, 0.22", "36.2533, -53.3153, 20.6747, 0.44", "40.8594, -61.1367, 28.5461, 0.44", "46.7989, -69.0053, 35.4015, 0.44" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-0.18249, -18.5016, -4.33901, 0.22", "0.0390844, -18.4549, -5.15783, 0.22", "0.26396, -18.3663, -5.98235, 0.22", "0.368236, -18.3534, -6.50379, 0.22", "0.425625, -18.3812, -6.83454, 0.22", "0.675077, -18.6542, -8.62976, 0.66", "0.68493, -18.7136, -8.99949, 0.66", "0.663793, -18.7512, -9.26289, 0.66", "0.3065, -18.9953, -11.0312, 0.37", "0.121838, -19.1375, -11.7705, 0.37", "0.0348577, -19.2114, -12.0894, 0.37", "-0.566463, -19.8329, -14.2509, 0.81", "-0.623382, -19.9005, -14.4606, 1.03", "-1.05184, -20.4211, -16.0311, 0.52", "-1.34704, -20.969, -17.5706, 0.29", "-1.34704, -20.969, -17.5706, 0.66", "-1.287, -21.1746, -18.0007, 1.11", "-1.08328, -21.4918, -18.463, 1.11", "-1.01017, -21.5793, -18.5725, 1.11", "0.230656, -22.8312, -19.9947, 0.29", "0.840463, -23.4146, -20.6399, 0.29", "1.13107, -23.7318, -20.9982, 0.96", "1.39913, -24.0769, -21.387, 1.25", "1.67661, -24.5092, -21.8649, 1.55", "2.0663, -25.448, -22.8904, 0.81", "2.08182, -25.8062, -23.252, 0.74", "1.83696, -26.6541, -24.0828, 0.22", "1.66213, -27.0126, -24.4355, 0.22", "1.56535, -27.1711, -24.5805, 0.22", "1.00391, -28.0324, -25.2675, 0.66", "0.658458, -28.6268, -25.7342, 0.66", "0.345554, -29.3249, -26.3077, 0.66", "0.188002, -29.8793, -26.8034, 1.4", "0.0768432, -30.4173, -27.2992, 1.69", "0.0202785, -30.7708, -27.6131, 1.69", "-0.11542, -32.177, -28.8219, 0.66", "-0.130446, -32.6389, -29.2368, 0.66", "-0.133032, -33.3927, -29.9231, 0.59", "-0.137015, -33.7255, -30.2182, 0.52", "-0.142661, -34.1234, -30.5677, 0.52", "-0.150065, -34.6841, -31.0183, 0.66", "-0.147926, -35.0112, -31.2293, 0.66", "-0.150097, -35.3453, -31.4292, 0.66", "-0.146229, -36.0286, -31.7684, 0.52", "-0.149367, -36.2972, -31.8927, 0.29", "-0.177968, -36.704, -32.0567, 0.29", "-0.388271, -37.4566, -32.4071, 0.96", "-0.610511, -37.987, -32.669, 1.4", "-0.793384, -38.3403, -32.8362, 1.92", "-1.01773, -38.7151, -33.0242, 2.36", "-1.23256, -39.0399, -33.2001, 2.36", "-2.46379, -40.745, -34.1779, 0.29", "-2.7999, -41.1832, -34.4387, 0.29", "-3.21142, -41.709, -34.7649, 0.29", "-3.74974, -42.3995, -35.2281, 0.29", "-4.03689, -42.7629, -35.4807, 0.59", "-4.11734, -42.8632, -35.5485, 1.11", "-4.15404, -42.9055, -35.5723, 1.11", "-4.53375, -43.2837, -35.8314, 0.88", "-5.52287, -44.2343, -36.4931, 0.37", "-5.75082, -44.4547, -36.6632, 0.37", "-5.95508, -44.635, -36.8206, 0.59", "-6.37723, -45.0136, -37.1844, 0.59", "-6.99579, -45.5887, -37.7559, 0.59", "-7.37875, -45.9776, -38.1952, 0.29", "-8.00869, -46.7492, -39.0177, 0.66", "-8.31749, -47.2426, -39.5105, 1.47", "-8.67231, -47.9833, -40.1815, 2.28", "-8.7748, -48.2729, -40.4133, 2.06", "-9.10251, -49.5892, -41.2695, 0.59", "-9.25394, -50.3955, -41.7019, 0.52", "-9.32915, -51.0482, -41.9486, 0.52", "-9.37758, -51.6447, -42.125, 0.52", "-9.42108, -52.2023, -42.2208, 0.59", "-9.47369, -52.9239, -42.2763, 0.81", "-9.50772, -53.5213, -42.2479, 0.37", "-9.55095, -54.2004, -42.2048, 0.22", "-9.58574, -54.6248, -42.1924, 0.22", "-9.61377, -55.0094, -42.1941, 0.81", "-9.65654, -55.6896, -42.2146, 1.03", "-9.72884, -56.7959, -42.3051, 0.96", "-9.74313, -57.0081, -42.3327, 0.96", "-9.82248, -58.0687, -42.5419, 0.29", "-9.8718, -58.8143, -42.723, 0.29", "-9.89409, -59.0886, -42.7985, 0.29", "-9.96113, -59.8235, -43.0185, 1.4", "-10.0265, -60.5729, -43.2466, 1.69", "-10.0889, -61.3415, -43.4589, 1.25", "-10.1434, -61.9186, -43.5887, 0.96", "-10.1977, -62.4621, -43.7102, 0.59", "-10.2378, -62.883, -43.7976, 0.22", "-10.272, -63.5284, -43.9361, 0.22", "-10.2744, -64.082, -44.0569, 0.22", "-10.2632, -64.8083, -44.2069, 0.22", "-10.243, -65.5668, -44.3973, 0.74", "-10.2335, -65.7874, -44.4577, 1.03", "-10.1753, -66.9316, -44.7786, 0.22", "-10.1511, -67.6747, -45.0911, 0.22", "-10.1205, -68.3109, -45.3842, 0.22", "-10.0793, -68.9912, -45.7261, 0.88", "-10.0543, -69.5357, -46.0119, 1.33", "-10.0547, -69.7379, -46.1283, 1.4", "-10.2384, -71.3892, -47.3032, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-0.18249, -18.5016, -4.33901, 0.59", "-1.53056, -19.0247, -4.38908, 0.59", "-2.74773, -19.5239, -4.4134, 0.52", "-3.42962, -19.8323, -4.44318, 0.59", "-4.51324, -20.4036, -4.50577, 0.74", "-5.39593, -20.9362, -4.55583, 0.37", "-5.99561, -21.3519, -4.56224, 0.37", "-6.41771, -21.7297, -4.47966, 0.74", "-6.89532, -22.3516, -4.2702, 1.25", "-7.29829, -23.0537, -3.97105, 1.18", "-7.50642, -23.5384, -3.73458, 0.88", "-7.87208, -24.6212, -3.12521, 0.37", "-8.32258, -26.1316, -2.18787, 0.96", "-8.51162, -26.8376, -1.7146, 0.96", "-8.64759, -27.3721, -1.32263, 0.81", "-8.74335, -27.7401, -1.04735, 0.81", "-8.92213, -28.3756, -0.609947, 0.44", "-9.01243, -28.6643, -0.451298, 0.66", "-9.13075, -28.9258, -0.356491, 0.59", "-9.1671, -28.9827, -0.326916, 0.59", "-9.42381, -29.2827, -0.176907, 0.59", "-9.92227, -29.773, 0.0705305, 0.22", "-10.1434, -29.9685, 0.163757, 0.22", "-10.4281, -30.2074, 0.290209, 0.22", "-11.3438, -30.9137, 0.707314, 1.11", "-12.0344, -31.4276, 1.04477, 1.47", "-12.0876, -31.4655, 1.07542, 1.47" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-5.62814, 31.5553, 20.8613, 1.03", "-7.45707, 33.231, 9.1156, 1.03", "-7.56179, 33.3665, 8.33163, 0.66", "-7.63237, 33.4923, 7.69649, 0.66", "-7.66544, 33.5774, 7.31234, 0.74", "-7.69983, 33.7173, 6.74317, 0.74", "-7.71457, 33.8317, 6.31869, 0.96", "-7.13382, 34.5376, 6.07178, 0.96", "-6.92656, 34.7936, 5.9991, 0.66", "-6.6618, 35.1434, 5.93075, 0.88", "-6.44471, 35.4631, 5.89629, 1.18", "-6.30507, 35.7056, 5.89304, 1.33", "-5.9044, 36.5387, 5.94855, 1.33", "-5.69908, 37.1489, 6.03796, 1.33", "-5.60844, 37.5701, 6.10016, 1.03", "-5.58111, 37.8281, 6.13448, 0.88", "-5.5679, 38.2469, 6.17991, 0.88", "-5.57155, 38.343, 6.18603, 0.88", "-5.63728, 38.935, 6.1821, 0.81", "-5.68442, 39.2458, 6.18363, 0.81", "-5.78434, 39.7779, 6.19174, 0.74", "-5.80164, 39.8578, 6.19361, 0.74", "-5.91164, 40.2754, 6.20897, 0.66", "-6.00504, 40.6057, 6.22295, 0.66", "-6.12489, 41.0163, 6.24138, 0.66", "-6.19875, 41.3377, 6.28087, 0.66", "-6.28461, 42.0113, 6.38841, 0.66", "-6.28516, 42.2017, 6.41846, 0.66", "-6.20632, 42.8524, 6.50864, 0.66", "-6.14211, 43.1529, 6.54551, 0.74", "-5.80457, 44.232, 6.67855, 0.74", "-5.58435, 44.8031, 6.74441, 0.88", "-5.27039, 45.5383, 6.82266, 0.66", "-4.97776, 46.2109, 6.93405, 0.81", "-4.94161, 46.2844, 6.94929, 0.81", "-4.59272, 46.9453, 7.09694, 1.03", "-4.38424, 47.3388, 7.14872, 1.25", "-4.19018, 47.708, 7.18577, 1.33", "-3.67603, 48.6642, 7.24489, 1.4", "-3.30769, 49.3772, 7.24191, 1.4", "-3.10344, 49.759, 7.27044, 1.4", "-2.53884, 50.781, 7.3814, 0.52", "-2.3228, 51.1539, 7.43637, 0.52", "-2.27995, 51.2238, 7.44715, 0.52", "-2.00449, 51.6961, 7.49971, 0.52", "-1.29781, 53.0611, 7.8672, 0.96", "-1.13569, 53.3456, 8.01082, 1.33", "-1.13569, 53.3456, 8.01082, 1.69", "-1.01895, 53.5132, 8.1808, 1.69" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-5.62814, 31.5553, 20.8613, 0.88", "-5.65634, 32.2388, 23.1632, 0.88", "-5.66348, 32.3037, 23.3611, 1.03", "-5.82942, 33.1154, 25.7162, 0.66", "-5.88326, 33.3013, 26.2176, 0.44", "-5.9317, 33.4227, 26.5312, 0.66", "-5.99284, 33.5281, 26.799, 0.81", "-6.1143, 33.5925, 26.9091, 0.88", "-6.44734, 33.6817, 27.0043, 0.88", "-6.7829, 33.742, 27.0182, 0.88", "-7.76865, 33.8907, 27.0711, 0.44", "-8.44275, 33.9851, 27.1169, 0.37", "-9.16644, 34.1934, 27.6422, 0.37", "-9.27528, 34.2814, 27.9101, 0.52", "-9.40171, 34.5147, 28.5342, 0.59", "-9.44511, 34.6923, 28.9785, 0.74", "-9.44664, 34.7723, 29.1546, 0.88", "-9.17116, 37.004, 33.3921, 0.66", "-9.12396, 37.2549, 33.8205, 0.66", "-9.04381, 37.6269, 34.4127, 0.81", "-9.02909, 37.6956, 34.5129, 0.81", "-8.98287, 38.1465, 35.0641, 0.52", "-9.05943, 38.6744, 35.4979, 0.44", "-9.35371, 39.2545, 35.6472, 0.44", "-10.0946, 40.494, 35.9481, 0.88", "-10.3835, 40.9215, 36.0607, 1.11", "-11.3603, 42.2645, 36.4161, 0.44", "-11.7909, 42.7991, 36.5551, 0.44", "-12.1115, 43.1803, 36.6369, 0.44", "-12.3954, 43.5333, 36.6766, 0.44", "-12.8126, 44.0835, 36.6891, 0.96", "-12.9398, 44.2998, 36.7241, 1.25", "-12.9703, 44.3707, 36.7456, 1.25", "-13.0998, 44.6842, 36.8815, 1.47", "-13.4531, 45.5319, 37.3435, 0.59", "-13.6503, 46.0113, 37.6432, 0.59", "-13.8471, 46.529, 37.9924, 0.59", "-13.9964, 46.9182, 38.3086, 0.74", "-14.3152, 47.5962, 39.0101, 0.74", "-14.3409, 47.6409, 39.0759, 0.88", "-14.3727, 47.678, 39.1732, 1.03", "-14.4637, 47.7296, 39.4203, 1.03", "-14.6357, 47.7521, 39.7674, 0.81", "-14.9833, 47.6987, 40.3732, 0.44", "-15.1864, 47.6888, 40.5147, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-7.75183, 41.1841, 44.314, 0.88", "-8.1186, 41.7487, 43.8829, 0.88", "-8.50599, 42.3587, 43.6021, 0.52", "-8.95389, 43.1177, 43.4473, 0.37", "-9.2304, 43.6151, 43.4202, 0.37", "-9.41556, 43.9797, 43.4367, 0.37", "-9.54101, 44.248, 43.4642, 0.44", "-9.98557, 45.5414, 43.858, 0.29", "-10.05, 45.8034, 43.9809, 0.29", "-10.061, 45.8634, 44.0225, 0.29", "-10.1207, 46.0909, 44.237, 0.29", "-10.1789, 46.2456, 44.4105, 0.29", "-10.3541, 46.6274, 44.8639, 0.29", "-10.4573, 46.8207, 45.0822, 0.29", "-10.8897, 47.5129, 45.8668, 0.37", "-11.3812, 48.2276, 46.6497, 0.22", "-11.5002, 48.3806, 46.8183, 0.37", "-11.6208, 48.5243, 46.9689, 0.37", "-11.8439, 48.7578, 47.19, 0.29", "-12.1126, 49.0432, 47.3514, 0.29", "-12.3025, 49.2631, 47.3535, 0.37", "-12.3471, 49.32, 47.3394, 0.59", "-12.5559, 49.5706, 47.2642, 0.59", "-13.1503, 50.2303, 47.0558, 0.81", "-13.6013, 50.6988, 46.905, 0.29", "-13.8232, 50.9046, 46.834, 0.44", "-14.0772, 51.1178, 46.7539, 0.44", "-18.2386, 60.5655, 48.3951, 0.44", "-23.3385, 69.3765, 50.8917, 0.44", "-26.8232, 79.0156, 52.8539, 0.44", "-30.6621, 88.7126, 53.4272, 0.44", "-35.4362, 98.0029, 54.15, 0.44" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-7.75183, 41.1841, 44.314, 0.52", "-8.07416, 40.5263, 44.8303, 0.52", "-8.32839, 40.1106, 45.2021, 0.52", "-8.49183, 39.9098, 45.3898, 0.52", "-8.75275, 39.6499, 45.6415, 0.52", "-9.78661, 38.8291, 46.4437, 0.74", "-10.0333, 38.6656, 46.6034, 0.66", "-10.4341, 38.503, 46.8165, 0.52", "-11.0705, 38.3696, 47.0589, 0.52", "-11.3177, 38.3561, 47.0977, 0.44", "-11.8514, 38.3859, 47.0605, 0.37", "-12.0623, 38.4092, 47.0006, 0.37", "-12.1308, 38.4201, 46.9782, 0.37", "-12.4923, 38.475, 46.8524, 0.37", "-13.151, 38.5995, 46.604, 0.29", "-13.5692, 38.6821, 46.4404, 0.29", "-14.0626, 38.7929, 46.2386, 0.29", "-14.5918, 38.9194, 46.0199, 0.29", "-24.1556, 35.5013, 47.3802, 0.29", "-34.0418, 33.0563, 48.6926, 0.29", "-43.5086, 30.6027, 51.8338, 0.29", "-53.5856, 28.8225, 52.8205, 0.29", "-63.4813, 26.9471, 54.8805, 0.29", "-73.3733, 24.6366, 56.4006, 0.29" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-58.3885, -53.2321, -27.4692, 0.44", "-60.0179, -53.6148, -28.3132, 0.44", "-60.8499, -53.8925, -28.7533, 0.74", "-60.9838, -53.9424, -28.8239, 0.74", "-61.7399, -54.2649, -29.1542, 0.37", "-62.0295, -54.4034, -29.2747, 1.4", "-62.2127, -54.5041, -29.339, 1.4", "-63.5033, -55.4087, -29.5673, 0.52", "-63.5432, -55.4414, -29.5716, 0.52", "-64.2929, -56.1113, -29.6388, 0.29", "-64.7744, -56.5835, -29.6338, 0.74", "-65.4401, -57.2196, -29.5627, 0.22", "-65.5851, -57.3548, -29.5489, 0.81", "-65.7087, -57.4636, -29.535, 0.81", "-66.4349, -58.0522, -29.4545, 0.22", "-67.1126, -58.5135, -29.3934, 0.74", "-67.4077, -58.6861, -29.3517, 0.74", "-68.434, -59.2201, -29.3927, 0.59", "-68.8247, -59.4151, -29.437, 0.59", "-69.8069, -59.8842, -29.5938, 0.59", "-70.7048, -60.3664, -29.8752, 0.29", "-70.9801, -60.5266, -29.9893, 1.11", "-72.3729, -61.36, -30.5776, 0.29", "-72.8713, -61.6598, -30.7869, 0.29", "-73.0822, -61.7908, -30.8991, 0.66", "-74.5227, -62.7412, -31.8949, 0.44", "-74.6833, -62.8596, -32.0277, 0.81" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-58.3885, -53.2321, -27.4692, 0.59", "-59.1436, -54.5151, -27.4001, 0.59", "-59.1838, -54.5779, -27.3982, 0.59", "-59.4966, -55.0452, -27.3873, 0.52", "-59.5651, -55.1436, -27.3771, 0.74", "-60.2544, -56.1318, -27.2352, 0.37", "-61.2259, -57.4686, -27.0138, 0.59", "-62.0828, -58.5192, -26.8135, 0.29", "-62.3677, -58.8512, -26.7425, 0.88", "-63.1462, -59.7237, -26.6387, 0.74", "-63.3016, -59.891, -26.6274, 0.74", "-64.313, -60.913, -26.5827, 0.22", "-64.5554, -61.1446, -26.5883, 0.88", "-64.6909, -61.2653, -26.6091, 0.88", "-66.6074, -62.9789, -27.2284, 1.47", "-67.4764, -63.7596, -27.7155, 1.47" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-24.6231, 27.4805, -10.8813, 1.18", "-24.7694, 27.9511, -11.4479, 1.18", "-24.8323, 28.1408, -11.7328, 1.4", "-24.9337, 28.4732, -12.2926, 1.4", "-24.9743, 28.6492, -12.5921, 1.33", "-25.1353, 29.3932, -13.8657, 0.29", "-25.1575, 29.4616, -14.0029, 0.29", "-25.3097, 29.8553, -14.8721, 0.29", "-25.4704, 30.2262, -15.7389, 1.03", "-25.5303, 30.3588, -16.0459, 1.92", "-25.5591, 30.4209, -16.1835, 1.92", "-26.1004, 31.5434, -18.3393, 0.22", "-26.1926, 31.7211, -18.6484, 0.22", "-26.2487, 31.8186, -18.7938, 0.22", "-26.3814, 32.0201, -19.0665, 1.11", "-26.4863, 32.1623, -19.2432, 1.11", "-26.8977, 32.6964, -19.7627, 0.29", "-27.0115, 32.8176, -19.8137, 0.29", "-27.1309, 32.9146, -19.853, 0.29", "-27.2261, 32.9756, -19.874, 0.29", "-27.6258, 33.1816, -20.0118, 0.96", "-28.063, 33.3806, -20.1857, 1.47", "-28.45, 33.5424, -20.3516, 1.77", "-28.723, 33.6622, -20.4844, 1.84", "-28.9815, 33.7891, -20.6241, 1.55", "-30.2154, 34.4685, -21.3472, 0.66", "-30.2998, 34.5215, -21.4011, 0.59", "-30.6859, 34.7948, -21.6731, 0.22", "-30.855, 34.9361, -21.7986, 0.22", "-31.0487, 35.1256, -21.9293, 0.22", "-31.2113, 35.3137, -22.0259, 0.22", "-31.3462, 35.4915, -22.0751, 0.22", "-31.4933, 35.6879, -22.135, 0.22", "-31.7768, 36.0701, -22.2567, 1.03", "-31.9988, 36.3411, -22.3569, 1.62", "-32.4257, 36.8219, -22.5664, 1.84", "-32.4559, 36.8554, -22.5835, 1.84", "-32.6248, 37.0425, -22.6939, 1.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-24.6231, 27.4805, -10.8813, 1.4", "-24.8946, 27.4131, -10.6925, 1.4", "-26.7087, 26.9931, -9.39941, 0.59", "-27.3727, 26.8584, -8.93309, 0.88", "-28.2703, 26.7598, -8.33575, 1.11", "-29.281, 26.7301, -7.70804, 0.81", "-30.0608, 26.7411, -7.29524, 0.59", "-31.2862, 26.8573, -6.79402, 0.59", "-31.7559, 26.9429, -6.67398, 0.59", "-33.0647, 27.3307, -6.41036, 0.59", "-33.9611, 27.6692, -6.26719, 0.66", "-35.1522, 28.2203, -6.15864, 0.88", "-35.5704, 28.4368, -6.16312, 1.11", "-35.922, 28.6302, -6.21991, 1.25", "-36.7189, 29.0486, -6.38977, 1.25" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.11619, 23.4094, -3.82628, 2.21", "-4.31971, 23.6651, -4.04426, 2.21", "-5.37766, 24.8836, -5.06766, 1.03", "-5.92911, 25.5493, -5.5759, 0.81", "-6.6707, 26.4466, -6.2193, 0.81", "-7.44246, 27.3837, -6.83025, 1.11", "-7.77404, 27.7845, -7.0665, 1.11", "-8.25747, 28.3818, -7.3752, 1.33", "-8.80825, 29.0739, -7.67756, 1.55", "-9.22285, 29.6066, -7.79792, 1.4", "-9.83327, 30.4214, -7.8075, 0.96", "-10.2398, 30.99, -7.7348, 0.96", "-10.4953, 31.3493, -7.6863, 1.03", "-10.7232, 31.6892, -7.64016, 0.52", "-11.4382, 32.6505, -7.5426, 0.59", "-11.7228, 33.0649, -7.52563, 0.44", "-11.8767, 33.2895, -7.54121, 0.37", "-12.421, 34.0555, -7.74621, 0.37", "-12.6739, 34.3828, -7.90873, 0.74", "-13.053, 34.8583, -8.22395, 1.11", "-13.2933, 35.1477, -8.47872, 1.4", "-13.597, 35.512, -8.81512, 1.4", "-14.162, 36.1559, -9.44548, 1.25", "-14.805, 36.8628, -10.1389, 1.11", "-15.2125, 37.2906, -10.556, 0.96", "-16.1575, 38.2739, -11.46, 0.44", "-16.4442, 38.5695, -11.7116, 0.44", "-17.1207, 39.2763, -12.2697, 0.88", "-17.3617, 39.5516, -12.4545, 0.96", "-17.8122, 40.1125, -12.7578, 0.66", "-18.1737, 40.6004, -12.9759, 0.52", "-18.6846, 41.3782, -13.2116, 0.29", "-19.3078, 42.3826, -13.4582, 1.4", "-19.6843, 43.0622, -13.6037, 1.84", "-19.882, 43.4398, -13.6963, 1.84", "-19.9594, 43.5984, -13.742, 1.84", "-20.2937, 44.2931, -13.9149, 0.44", "-20.6206, 45.0158, -13.9298, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.11619, 23.4094, -3.82628, 2.06", "-3.96256, 23.8702, -4.06516, 2.06", "-3.49906, 25.2197, -4.85731, 1.33", "-3.26976, 25.8448, -5.15308, 1.33", "-2.87958, 26.8387, -5.57006, 1.1", "-2.34592, 28.2234, -6.08188, 1.25", "-2.11579, 28.8879, -6.26817, 1.2", "-1.87587, 29.6225, -6.44356, 1.35", "-1.4449, 31.2236, -6.73571, 1.2", "-1.24324, 32.0146, -6.811, 1.4", "-0.986885, 32.9956, -6.80968, 1.33", "-0.592818, 34.5879, -6.64217, 0.74", "-0.553509, 34.7664, -6.61363, 0.96", "-0.477719, 35.2556, -6.52725, 1.25", "-0.462977, 35.5079, -6.49769, 1.84" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_134",
    "id" : "dend_134",
    "points3d" : [ "-7.65582, -41.6855, 13.0753, 0.37", "-6.75815, -41.146, 12.6612, 0.37", "-6.51685, -41.001, 12.5499, 0.37", "-5.78554, -40.5615, 12.2126, 0.37", "-5.57217, -40.4332, 12.1142, 0.52", "-5.4413, -40.3546, 12.0538, 0.52", "-5.36762, -40.3103, 12.0198, 0.52", "4.62507, -35.3276, 9.35926, 0.52", "14.8653, -31.2372, 6.10404, 0.52", "25.0333, -26.1143, 4.67384, 0.52", "36.0561, -22.8489, 4.08979, 0.52", "46.5577, -18.4209, 5.54902, 0.52" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_133",
    "id" : "dend_133",
    "points3d" : [ "-7.65582, -41.6855, 13.0753, 0.44", "-8.22657, -41.901, 13.0706, 0.44", "-8.62244, -42.0504, 13.0673, 0.44", "-8.93521, -42.1685, 13.0646, 0.44", "-9.18357, -42.2622, 13.0626, 0.44", "-9.58073, -42.4122, 13.0592, 0.37", "-9.84185, -42.5108, 13.0571, 0.37", "-16.9839, -44.6774, 12.513, 0.37", "-24.1863, -46.7141, 12.4625, 0.37", "-31.3271, -48.5195, 11.1135, 0.37", "-38.1785, -50.0575, 8.50488, 0.37", "-45.2056, -51.3164, 6.22791, 0.37", "-52.2713, -53.2582, 4.69483, 0.37" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "-8.40693, -53.3423, 20.3403, 0.96", "-8.25731, -54.3012, 20.4101, 0.96", "-8.1412, -55.0454, 20.4643, 0.96", "-8.04033, -55.6919, 20.5114, 0.88", "-7.95237, -56.2557, 20.5525, 0.88" ],
    "parent" : "dend_119",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "-8.40693, -53.3423, 20.3403, 0.44", "-9.04056, -53.5781, 20.6008, 0.44", "-9.26857, -53.6504, 20.6826, 0.44", "-9.55694, -53.7336, 20.7788, 0.44", "-10.0663, -53.8562, 20.9368, 0.44", "-10.3791, -53.9185, 21.0286, 0.44", "-10.5041, -53.9401, 21.0637, 0.66", "-10.8392, -53.988, 21.1173, 0.81", "-10.8899, -53.9939, 21.1254, 0.81", "-11.1721, -54.0089, 21.1713, 0.74", "-11.3217, -53.9918, 21.1964, 0.74", "-11.4321, -53.9663, 21.2153, 0.74", "-19.1811, -54.8468, 24.8648, 0.74", "-26.4562, -54.3751, 29.4556, 0.74", "-33.1781, -55.0228, 34.8014, 0.74" ],
    "parent" : "dend_119",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "8.41864, -50.332, 9.36376, 0.66", "8.88132, -51.4376, 9.20487, 0.66", "9.26077, -52.3442, 9.07457, 0.66", "9.56311, -53.0667, 8.97075, 1.11", "9.84994, -53.752, 8.87226, 1.11", "10.0083, -54.1303, 8.81789, 1.11", "10.0321, -54.1873, 8.80969, 1.11" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "8.41864, -50.332, 9.36376, 0.29", "8.78811, -49.1612, 9.15999, 0.29", "8.80495, -49.0721, 9.1441, 0.29", "8.84021, -48.0046, 8.92664, 0.29", "8.83552, -47.9025, 8.90571, 0.29", "8.6971, -46.2538, 8.59084, 0.29", "8.59684, -45.2618, 8.41146, 0.52", "8.45939, -44.4532, 8.26837, 0.66", "8.1806, -43.0725, 8.0318, 0.37", "8.02034, -42.443, 7.92374, 0.37", "7.69677, -41.2981, 7.73845, 0.44", "7.67126, -41.227, 7.72908, 0.44", "7.62428, -41.088, 7.71056, 0.44", "7.60578, -41.0008, 7.70305, 0.44", "4.24744, -28.8206, 6.80813, 0.44", "-0.356792, -17.0039, 6.49731, 0.44" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "19.9617, -31.7106, -31.6943, 0.44", "21.9887, -31.5835, -31.2715, 0.44", "23.4799, -31.5053, -30.9831, 0.44", "25.3916, -31.4137, -30.6332, 0.29", "26.7627, -31.356, -30.3976, 0.29", "27.7512, -31.3476, -30.2866, 0.29", "27.8138, -31.3493, -30.2825, 0.29", "28.0292, -31.3774, -30.3008, 0.59", "28.1117, -31.3948, -30.3178, 0.59", "28.3153, -31.4533, -30.3954, 1.03", "29.8557, -31.9235, -31.0501, 0.22", "30.3944, -32.0827, -31.2806, 0.22", "30.4614, -32.0998, -31.306, 0.22", "31.1001, -32.2281, -31.5231, 0.96", "31.1705, -32.2384, -31.5431, 0.96", "31.9166, -32.2719, -31.7017, 1.62", "32.0056, -32.2647, -31.7142, 1.62", "32.8766, -32.1625, -31.8404, 1.62", "33.3292, -32.1027, -31.9068, 1.18", "33.8783, -32.0375, -32.0199, 0.66", "34.8742, -31.9693, -32.2678, 0.22", "35.458, -31.9718, -32.4365, 0.22", "36.213, -32.0547, -32.6978, 0.22", "36.4806, -32.1219, -32.8066, 0.22", "37.3579, -32.4875, -33.2318, 0.22", "37.8919, -32.8019, -33.5641, 0.96", "38.314, -33.1072, -33.8555, 0.96", "38.8595, -33.5305, -34.2452, 0.37", "39.2387, -33.8108, -34.5139, 0.37", "39.8308, -34.1785, -34.8765, 0.96", "40.755, -34.6666, -35.3342, 1.62", "41.3848, -34.9752, -35.6199, 1.92", "41.4456, -35.0056, -35.6476, 1.92", "42.3184, -35.4676, -36.0217, 0.66", "43.3252, -36.0413, -36.4193, 0.29", "44.2559, -36.5998, -36.7393, 0.29", "44.7133, -36.894, -36.8716, 0.29", "45.5521, -37.4533, -37.0969, 0.74", "45.9972, -37.7591, -37.2009, 1.18", "46.6796, -38.2451, -37.3368, 1.62", "46.7406, -38.2876, -37.348, 1.62", "47.8544, -38.973, -37.5198, 0.29", "48.8256, -39.5186, -37.7473, 0.29", "49.6035, -39.923, -37.9626, 0.29", "49.6652, -39.9544, -37.9845, 0.29", "50.0728, -40.1602, -38.1549, 0.66", "50.7006, -40.483, -38.46, 0.96", "52.2741, -41.3172, -39.3188, 1.33", "52.4656, -41.4277, -39.4268, 1.33", "53.2126, -41.8617, -39.8289, 1.69", "53.5945, -42.083, -40.0125, 1.33", "54.2984, -42.4798, -40.3028, 0.81", "55.2003, -42.9894, -40.6103, 0.22", "55.6017, -43.2052, -40.6857, 0.22", "56.046, -43.4362, -40.7711, 0.74", "56.5704, -43.6955, -40.8738, 1.25", "57.0279, -43.9104, -40.9525, 1.25" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "19.9617, -31.7106, -31.6943, 0.37", "19.845, -32.6917, -31.972, 0.37", "19.7822, -33.2293, -32.1298, 0.37", "19.7226, -33.835, -32.3972, 0.88", "19.6867, -34.1433, -32.5519, 0.96", "19.5231, -35.1097, -32.9157, 0.52", "19.4527, -35.4493, -33.0447, 0.52", "19.4359, -35.5098, -33.0659, 0.52", "19.1369, -36.4434, -33.3769, 0.96", "18.9951, -36.8545, -33.5585, 1.18", "18.5289, -38.0508, -34.1184, 0.44", "18.033, -39.183, -34.7063, 0.44", "17.6975, -39.8823, -35.1037, 0.44", "17.2164, -40.8036, -35.6496, 0.44", "16.4075, -42.141, -36.4577, 1.25", "16.115, -42.5758, -36.7561, 1.18", "15.5995, -43.2576, -37.2898, 0.59", "15.2929, -43.6158, -37.5578, 0.52", "14.9952, -43.9424, -37.8129, 0.52", "14.4301, -44.5526, -38.2287, 0.52", "13.8564, -45.2601, -38.5637, 1.33", "13.7067, -45.4903, -38.6658, 1.84", "13.4998, -45.8682, -38.8108, 1.25", "13.0844, -46.7612, -39.1573, 0.44", "12.6742, -47.7302, -39.5204, 0.22", "12.4123, -48.3716, -39.7138, 0.22", "12.0313, -49.2571, -39.9085, 0.22", "11.7537, -49.863, -40.0395, 0.22", "11.733, -49.9073, -40.047, 0.22", "11.3806, -50.6352, -40.1272, 0.22", "10.9526, -51.4962, -40.2224, 1.47", "10.9279, -51.5484, -40.2298, 1.47", "10.4613, -52.7361, -40.4026, 1.47", "9.96204, -54.2264, -40.7309, 0.44", "9.84262, -54.6225, -40.8809, 0.81", "9.75725, -54.9511, -41.0407, 1.11", "9.51676, -55.9397, -41.5953, 0.29", "9.25241, -57.009, -42.2209, 0.29", "9.06485, -57.8204, -42.7103, 0.88", "8.63727, -59.608, -43.8628, 0.29", "8.55414, -59.9156, -44.0625, 0.29", "8.45154, -60.2678, -44.2921, 0.74", "8.33679, -60.6211, -44.5147, 1.25", "7.88428, -61.9644, -45.3069, 0.29", "7.41025, -63.3369, -45.9986, 0.29", "7.08106, -64.2332, -46.4003, 0.88", "7.04571, -64.3248, -46.4433, 0.88", "6.84351, -64.8276, -46.7169, 1.33", "6.55242, -65.469, -47.1051, 0.88", "5.87705, -66.7128, -47.9212, 0.22", "5.85128, -66.7568, -47.9501, 0.88", "5.82074, -66.808, -47.9836, 0.88", "5.15381, -67.8751, -48.676, 0.29", "4.80121, -68.4265, -49.0477, 0.29", "4.54668, -68.8014, -49.2953, 0.96", "4.27949, -69.2115, -49.5474, 0.96", "3.82339, -69.9956, -49.9704, 0.44", "3.56678, -70.4945, -50.2047, 0.44", "3.28616, -71.1851, -50.4632, 1.03", "3.15914, -71.5594, -50.6384, 1.4", "2.88755, -72.4199, -51.0767, 0.44", "2.65007, -73.2362, -51.4934, 0.44", "2.3951, -74.1899, -51.9951, 0.29", "2.19688, -75.0264, -52.4472, 0.29", "1.77845, -76.8401, -53.4381, 0.29", "1.64758, -77.4247, -53.7729, 0.29", "1.49435, -78.1143, -54.1879, 0.29", "1.35492, -78.7254, -54.6044, 1.03", "1.25065, -79.1912, -54.9457, 1.03" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "46.7989, -69.0053, 35.4015, 1.33", "49.793, -73.7362, 39.4214, 1.33" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "46.7989, -69.0053, 35.4015, 0.44", "50.7759, -74.8853, 40.8096, 1.33" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-10.2384, -71.3892, -47.3032, 0.22", "-10.4109, -71.5788, -47.4838, 0.22", "-10.5945, -71.8193, -47.6611, 0.22", "-10.7787, -72.0784, -47.9606, 0.22", "-11.169, -72.6872, -48.6817, 0.96", "-11.2581, -72.8398, -48.8551, 0.96", "-11.4697, -73.2307, -49.2524, 0.22", "-11.6759, -73.6676, -49.6659, 0.22", "-12.2323, -75.0367, -50.9344, 0.59", "-12.3919, -75.5146, -51.3373, 0.22", "-12.47, -75.8055, -51.5405, 0.22", "-12.5886, -76.3496, -51.8849, 0.88", "-12.6268, -76.5526, -51.995, 1.03", "-12.8064, -77.634, -52.4361, 0.22", "-12.8961, -78.2493, -52.5648, 0.22", "-12.9777, -78.7893, -52.6887, 0.22", "-13.0232, -79.0144, -52.7428, 0.22", "-13.0917, -79.2807, -52.8371, 0.66", "-13.1981, -79.6139, -52.9667, 0.44", "-13.243, -79.7297, -53.026, 0.37", "-13.4196, -80.1444, -53.3091, 0.22", "-13.6513, -80.637, -53.7652, 0.22", "-13.9845, -81.3213, -54.469, 0.59", "-14.0975, -81.5623, -54.739, 0.74", "-14.4, -82.2126, -55.5364, 0.74", "-14.4791, -82.3851, -55.7595, 0.96", "-15.0148, -83.5056, -57.2661, 0.15", "-15.0485, -83.5712, -57.3589, 0.37", "-15.3279, -84.0261, -57.9889, 0.15", "-15.527, -84.2958, -58.3849, 0.66", "-15.5537, -84.3242, -58.4274, 0.66", "-15.7878, -84.5223, -58.7264, 0.66", "-16.3679, -84.8647, -59.2248, 0.22", "-16.6892, -85.0286, -59.4589, 0.22", "-16.7296, -85.0472, -59.4852, 0.52", "-16.9257, -85.1443, -59.6029, 0.37", "-17.2437, -85.313, -59.7879, 0.22", "-17.9148, -85.6977, -60.2394, 0.88", "-18.0519, -85.7802, -60.3348, 0.88", "-18.4372, -86.0285, -60.6384, 0.74", "-18.9003, -86.33, -61.013, 0.22", "-19.2116, -86.5415, -61.2684, 0.22", "-19.7946, -86.9418, -61.7326, 0.81", "-19.9453, -87.0503, -61.8493, 0.81", "-20.3784, -87.37, -62.1998, 0.15", "-20.5403, -87.5036, -62.3318, 0.15", "-20.7128, -87.6756, -62.4976, 0.44", "-20.8121, -87.7951, -62.5983, 0.74", "-21.2049, -88.3436, -62.9484, 0.22", "-21.2223, -88.3786, -62.9772, 0.22", "-21.3363, -88.7842, -63.3317, 0.15", "-21.3806, -89.027, -63.5544, 0.66", "-21.3872, -89.0877, -63.6113, 1.03", "-21.3971, -89.2368, -63.744, 1.03", "-21.4696, -90.1822, -64.6294, 0.29", "-21.5159, -90.4969, -64.9324, 0.22", "-21.5416, -90.6515, -65.0779, 0.22", "-21.6116, -91.098, -65.4558, 0.81", "-21.6419, -91.3126, -65.6142, 0.81", "-21.7351, -92.0901, -66.1224, 0.22", "-21.7988, -92.4906, -66.3322, 0.22", "-21.872, -92.8992, -66.6011, 0.29", "-21.9292, -93.1451, -66.7766, 0.29", "-22.008, -93.433, -66.983, 0.29", "-22.1502, -93.9108, -67.3617, 0.96", "-22.2313, -94.1703, -67.5739, 1.25", "-22.5301, -95.0993, -68.3814, 0.22", "-22.6594, -95.4347, -68.6971, 0.22", "-22.7668, -95.6825, -68.9424, 0.22", "-23.0994, -96.3948, -69.672, 0.88", "-23.1369, -96.478, -69.754, 1.25", "-23.2405, -96.7635, -70.0301, 1.25" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-10.2384, -71.3892, -47.3032, 0.29", "-9.64116, -73.4885, -45.2788, 0.29", "-9.48352, -74.024, -44.8258, 0.29", "-9.31227, -74.6744, -44.4091, 0.29", "-9.17241, -75.3218, -44.1676, 0.96", "-9.04913, -76.4422, -43.9643, 1.33", "-9.07121, -77.4975, -43.9975, 0.29", "-9.14748, -78.0265, -44.1836, 0.29", "-9.62461, -80.2827, -45.1759, 0.66", "-9.78116, -80.9799, -45.517, 1.03", "-9.99103, -81.9829, -46.055, 1.4", "-10.2171, -83.2651, -46.7659, 0.29", "-10.3015, -83.8653, -47.0503, 0.29", "-10.3092, -83.9501, -47.0761, 0.29", "-10.2971, -85.0697, -47.157, 0.29", "-10.2711, -85.4624, -47.1892, 0.81", "-10.1846, -86.0458, -47.235, 0.81", "-10.098, -86.6759, -47.267, 0.22", "-10.072, -87.2757, -47.4054, 0.22", "-10.0884, -87.8332, -47.5943, 0.22", "-10.2012, -88.7604, -47.9661, 0.81", "-10.28, -89.3419, -48.2102, 1.25", "-10.38, -90.1518, -48.5555, 1.62", "-10.5443, -92.0601, -49.4113, 0.29", "-10.5724, -92.6978, -49.7009, 0.29", "-10.5651, -93.6649, -50.1132, 0.29", "-10.5261, -94.3327, -50.3521, 0.29", "-10.4718, -94.9846, -50.5609, 0.29", "-10.3404, -95.9318, -50.8666, 0.29", "-10.2375, -96.4679, -51.0402, 0.74", "-10.0495, -97.2264, -51.3374, 1.33", "-9.79358, -98.2081, -51.7564, 1.33", "-9.67218, -98.7541, -51.9679, 1.33", "-9.41155, -100.14, -52.4267, 0.52", "-9.29019, -100.934, -52.6285, 0.37", "-9.19769, -102.011, -52.9418, 0.37", "-9.1629, -102.821, -53.1907, 0.37", "-9.15801, -103.841, -53.5293, 0.81", "-9.17597, -104.515, -53.7497, 1.11", "-9.22257, -105.151, -53.9648, 0.74", "-9.41035, -107.304, -54.8162, 0.22", "-9.43439, -107.53, -54.9256, 0.66", "-9.45951, -107.841, -55.0963, 1.11", "-9.46399, -107.907, -55.1357, 1.11", "-9.53756, -109.027, -55.7863, 0.29", "-9.58676, -109.819, -56.3018, 0.29", "-9.60883, -110.314, -56.5996, 0.52", "-9.62467, -110.594, -56.7764, 1.03", "-9.64262, -110.849, -56.9401, 1.03", "-9.64871, -110.938, -57.0054, 1.03", "-9.84541, -112.787, -58.4917, 0.29", "-9.91152, -113.322, -58.9682, 0.29", "-9.93762, -113.611, -59.2482, 0.29", "-9.94025, -113.668, -59.3003, 0.29", "-9.92977, -114.546, -60.0166, 0.74", "-9.92082, -115.043, -60.3931, 1.25", "-9.91789, -115.318, -60.5744, 1.25", "-9.93795, -116.525, -61.41, 0.44", "-9.9555, -117.306, -61.9457, 0.37", "-9.9963, -117.931, -62.3297, 0.37", "-10.066, -119.088, -62.9278, 0.29", "-10.0689, -119.384, -63.0659, 0.29", "-10.0542, -119.962, -63.2919, 0.66", "-10.0388, -120.207, -63.3818, 1.03", "-9.90604, -121.355, -63.8829, 0.29", "-9.76169, -122.187, -64.2456, 0.29", "-9.58866, -122.876, -64.5116, 0.29", "-9.44511, -123.357, -64.7079, 0.29", "-9.03721, -124.526, -65.2135, 1.18", "-8.91064, -124.837, -65.3768, 0.07", "-8.67505, -125.231, -65.6823, 1.18" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-12.0876, -31.4655, 1.07542, 1.18", "-12.5578, -32.0684, 1.58001, 1.18", "-12.9467, -32.431, 1.90344, 1.18", "-13.3194, -32.7001, 2.16075, 0.59", "-13.9178, -33.0648, 2.51309, 0.52", "-14.2767, -33.2668, 2.69949, 0.22", "-14.6122, -33.4579, 2.85954, 0.22", "-15.1377, -33.7128, 3.03516, 0.22", "-15.4105, -33.8469, 3.10539, 0.22", "-15.7197, -34.033, 3.17914, 0.22", "-15.9876, -34.2373, 3.23145, 0.37", "-16.243, -34.4718, 3.32518, 0.44", "-16.5713, -34.7897, 3.48451, 0.44", "-16.9622, -35.1622, 3.69833, 0.37", "-17.4988, -35.6063, 3.98021, 0.81", "-17.7213, -35.7539, 4.08958, 1.25", "-18.4822, -36.1436, 4.43015, 0.81", "-19.0973, -36.3773, 4.67595, 0.29", "-19.5207, -36.4881, 4.83848, 0.29", "-20.0162, -36.569, 5.00924, 0.66", "-20.3651, -36.6065, 5.10182, 1.11", "-20.6401, -36.6455, 5.16177, 0.59", "-20.8255, -36.6954, 5.21603, 0.44", "-21.1228, -36.8623, 5.39579, 0.74", "-21.339, -37.0998, 5.74138, 0.37", "-21.5184, -37.3741, 6.16263, 0.22", "-21.6472, -37.6213, 6.57095, 0.22", "-21.9245, -38.2272, 7.5991, 0.66", "-21.9715, -38.3351, 7.7812, 0.81", "-22.309, -39.1211, 9.07612, 0.44", "-22.3694, -39.2705, 9.32595, 0.15", "-22.484, -39.5346, 9.77184, 0.22", "-22.5461, -39.6543, 9.96644, 0.22", "-22.6461, -39.84, 10.1952, 0.44", "-22.7436, -40.0105, 10.3578, 1.18", "-22.8922, -40.2636, 10.5073, 1.18", "-23.0336, -40.4949, 10.6289, 0.88", "-23.5193, -41.1835, 11.0229, 0.52", "-23.7008, -41.4105, 11.1941, 0.37", "-24.0586, -41.8134, 11.5441, 0.29", "-24.3181, -42.0764, 11.7896, 0.29", "-24.6145, -42.3458, 12.0452, 0.44", "-25.2834, -42.9173, 12.6679, 0.37", "-25.7994, -43.3357, 13.152, 0.37", "-25.9921, -43.4865, 13.346, 0.37", "-26.2238, -43.667, 13.6014, 0.66", "-26.5402, -43.9151, 13.9732, 0.37", "-27.3791, -44.6352, 15.0371, 0.29", "-27.4577, -44.7096, 15.1363, 1.03", "-27.574, -44.8263, 15.2888, 1.25", "-33.0882, -50.6643, 19.8875, 1.25", "-39.7748, -55.2088, 24.467, 1.25", "-46.2724, -60.0248, 29.0267, 1.25" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-12.0876, -31.4655, 1.07542, 0.66", "-12.9271, -31.4061, 1.0166, 0.66", "-13.4871, -31.3613, 0.947826, 0.29", "-13.6245, -31.3512, 0.928701, 0.29", "-13.9865, -31.3311, 0.88702, 0.29", "-14.2601, -31.3169, 0.860096, 0.29", "-14.9669, -31.2732, 0.80983, 0.44", "-15.0989, -31.2668, 0.802402, 0.44", "-15.3091, -31.2505, 0.795123, 0.88", "-15.8557, -31.2084, 0.725786, 1.25", "-15.9554, -31.1989, 0.711054, 1.25", "-16.3414, -31.1624, 0.662316, 1.25", "-16.6873, -31.1281, 0.605782, 1.11", "-17.2171, -31.0723, 0.49611, 1.03", "-18.1756, -30.9886, 0.149805, 0.81", "-18.7357, -30.9647, -0.111064, 0.29", "-19.1611, -30.9668, -0.328862, 0.37", "-19.9915, -31.0094, -0.790931, 0.66", "-20.2212, -31.0308, -0.92343, 0.66", "-21.5106, -31.2269, -1.65688, 0.15", "-21.8979, -31.3045, -1.87292, 0.15", "-22.2481, -31.3886, -2.06593, 0.15", "-22.3849, -31.4245, -2.13048, 0.81", "-22.6387, -31.4994, -2.20436, 1.18", "-22.9045, -31.5786, -2.24748, 0.59", "-23.6321, -31.7983, -2.25539, 0.29", "-23.9653, -31.9046, -2.26565, 0.29", "-24.2259, -32.0052, -2.27462, 0.52", "-24.5678, -32.1602, -2.28255, 0.66", "-24.8227, -32.295, -2.30315, 0.81", "-25.1692, -32.4984, -2.42392, 0.29", "-25.4363, -32.6677, -2.60916, 0.22", "-25.749, -32.8565, -2.89747, 0.22", "-25.9092, -32.9522, -3.06413, 0.22", "-26.412, -33.2451, -3.5992, 0.74", "-27.4189, -33.8146, -4.61377, 0.74", "-28.0666, -34.1664, -5.29398, 0.44", "-28.5668, -34.4232, -5.82626, 0.88", "-28.7263, -34.5037, -5.99003, 1.33", "-29.114, -34.6957, -6.3637, 1.03", "-29.6181, -34.9431, -6.79579, 0.81", "-31.2423, -35.7161, -7.93727, 0.37", "-31.8775, -36.0051, -8.35027, 0.22", "-32.2686, -36.1834, -8.60765, 0.22", "-32.3457, -36.2184, -8.6591, 0.22", "-32.5003, -36.2935, -8.76359, 0.59", "-32.8228, -36.4674, -8.97676, 0.81", "-33.3616, -36.8291, -9.20692, 0.37", "-33.5153, -36.945, -9.28011, 0.29", "-33.7786, -37.1183, -9.44303, 0.29", "-34.0725, -37.2804, -9.60869, 0.59", "-34.9766, -37.7269, -10.0581, 0.88", "-35.3952, -37.9153, -10.2253, 0.29", "-35.4549, -37.9414, -10.244, 0.29", "-36.6004, -38.4205, -10.5468, 0.29", "-37.5321, -38.8279, -10.7581, 1.47", "-38.0583, -39.0682, -10.8429, 1.55", "-38.8107, -39.4376, -10.8895, 0.37", "-39.1675, -39.6315, -10.8983, 0.29", "-39.2305, -39.6719, -10.8989, 0.29", "-39.6455, -40.0276, -10.8779, 0.29", "-39.89, -40.2782, -10.8941, 0.29", "-39.9364, -40.3259, -10.9039, 0.29", "-40.2433, -40.6273, -10.9919, 0.29", "-40.7489, -41.0625, -11.1606, 0.66", "-41.051, -41.2982, -11.2603, 1.03", "-41.2771, -41.4535, -11.3292, 0.88", "-41.6907, -41.7218, -11.4584, 1.03", "-42.0778, -41.9508, -11.5721, 0.52", "-42.8607, -42.385, -11.7764, 0.22", "-43.1382, -42.5393, -11.862, 0.22", "-43.4296, -42.7009, -11.97, 0.22", "-43.7102, -42.8725, -12.1043, 0.22", "-43.8531, -42.9691, -12.1916, 0.22", "-44.1584, -43.1897, -12.4216, 0.22", "-44.9503, -43.8258, -13.0911, 1.11", "-45.1522, -44.0077, -13.275, 1.33", "-45.4871, -44.3538, -13.5914, 0.74", "-45.7581, -44.6614, -13.8264, 0.37", "-45.8765, -44.8008, -13.9193, 0.22", "-46.0808, -45.0487, -14.0488, 0.22", "-46.2258, -45.2165, -14.1501, 0.22", "-46.6343, -45.6735, -14.4714, 1.18", "-46.9298, -46.0, -14.7154, 1.62", "-47.6556, -46.8049, -15.4218, 0.22", "-48.0885, -47.2965, -15.9058, 0.22", "-48.9786, -48.325, -17.0174, 0.52", "-49.0161, -48.3672, -17.0664, 0.52", "-49.0771, -48.4343, -17.1505, 0.88", "-49.6199, -49.0228, -17.9335, 0.22", "-49.756, -49.1643, -18.1195, 0.22", "-49.8811, -49.2851, -18.2597, 0.22", "-50.145, -49.5405, -18.4473, 0.37", "-50.3221, -49.677, -18.5582, 0.37", "-50.5244, -49.82, -18.6735, 0.37", "-50.9696, -50.1107, -18.8937, 0.88", "-51.8826, -50.6415, -19.351, 1.25", "-52.1387, -50.7765, -19.4693, 1.4", "-53.6292, -51.5359, -20.1183, 0.29", "-53.9154, -51.6742, -20.2315, 0.44", "-54.2714, -51.8413, -20.3554, 0.44", "-55.2926, -52.2987, -20.6236, 0.59", "-56.0969, -52.666, -20.744, 1.25", "-56.4055, -52.8265, -20.7701, 1.25", "-56.6378, -52.9707, -20.7632, 1.25", "-56.8819, -53.1336, -20.754, 0.96", "-57.3467, -53.483, -20.7262, 0.59", "-57.962, -54.0052, -20.6574, 0.29", "-58.412, -54.3946, -20.6191, 0.29", "-58.6724, -54.6049, -20.6143, 0.29", "-59.2037, -54.9787, -20.6365, 0.74", "-59.4697, -55.145, -20.6575, 1.03", "-59.6389, -55.2445, -20.6759, 1.25", "-59.8762, -55.3774, -20.7064, 0.96", "-60.4402, -55.7035, -20.7803, 0.59", "-61.1732, -56.2224, -20.916, 0.29", "-61.649, -56.6253, -21.0187, 0.29", "-61.9624, -56.9167, -21.0951, 0.29", "-62.1034, -57.0467, -21.1508, 0.44", "-62.2654, -57.1977, -21.2321, 0.74", "-62.8681, -57.7407, -21.5872, 0.29", "-63.0558, -57.9025, -21.7216, 0.29", "-63.2462, -58.0467, -21.8643, 0.22", "-64.2028, -58.685, -22.5331, 0.22", "-64.3851, -58.7903, -22.6603, 0.96", "-64.8528, -59.0372, -22.9727, 1.33", "-65.1459, -59.193, -23.1575, 1.11", "-65.5012, -59.4208, -23.3822, 0.37", "-65.7577, -59.6064, -23.5262, 0.22", "-66.4492, -60.1209, -23.8383, 0.22", "-66.7591, -60.3248, -23.9738, 0.29", "-67.1031, -60.5285, -24.0972, 0.37", "-67.494, -60.744, -24.2037, 0.29", "-67.8494, -60.9364, -24.2691, 0.29", "-68.6475, -61.4146, -24.3626, 0.74", "-68.9441, -61.6059, -24.3697, 0.74", "-69.5525, -62.0108, -24.466, 0.22", "-70.0087, -62.2944, -24.57, 0.22", "-70.2092, -62.4199, -24.6264, 0.37", "-70.6946, -62.7725, -24.78, 0.37", "-70.9383, -62.98, -24.8752, 0.37", "-72.0057, -63.9108, -25.351, 0.74", "-72.41, -64.2367, -25.5376, 1.33", "-72.6849, -64.441, -25.6573, 1.33", "-73.3248, -64.8817, -25.9091, 0.96", "-74.4279, -65.6064, -26.2797, 0.15", "-74.7708, -65.8396, -26.3616, 0.15", "-75.187, -66.1504, -26.3855, 0.15", "-75.425, -66.3507, -26.3913, 0.81", "-75.4734, -66.3946, -26.3883, 0.81", "-75.783, -66.7047, -26.3125, 1.33", "-76.105, -67.1126, -26.1523, 0.74", "-76.3602, -67.4994, -26.0123, 0.96", "-76.4323, -67.6173, -25.9724, 0.96", "-76.7452, -68.072, -25.8186, 0.29", "-77.1049, -68.5201, -25.6683, 0.29", "-77.4092, -68.8589, -25.5452, 0.88", "-77.9314, -69.392, -25.3424, 1.47", "-78.174, -69.6335, -25.2549, 1.47", "-78.9062, -70.3795, -24.9503, 0.52", "-79.6036, -71.0962, -24.6307, 0.52", "-79.9829, -71.5005, -24.4487, 0.52", "-80.2388, -71.7912, -24.3006, 0.52", "-80.6657, -72.313, -24.0176, 0.52", "-81.0027, -72.8457, -23.6726, 0.74", "-81.2203, -73.2882, -23.3525, 0.74", "-81.5176, -74.013, -22.8052, 0.22", "-81.7667, -74.6986, -22.3087, 0.96", "-81.8626, -75.0322, -22.0532, 1.33", "-82.1824, -76.2978, -21.0452, 0.37", "-82.3011, -76.8578, -20.6134, 0.22", "-82.3467, -77.1294, -20.41, 0.29", "-82.4482, -77.6808, -19.9942, 0.29", "-82.7315, -78.8147, -19.2049, 0.96", "-82.8243, -79.115, -18.9939, 1.4", "-82.9087, -79.332, -18.8431, 1.69", "-83.0725, -79.704, -18.5738, 1.55", "-83.7979, -81.1712, -17.4013, 0.44", "-84.0509, -81.6032, -17.0276, 0.44", "-84.3766, -82.092, -16.6321, 0.44", "-84.4273, -82.1642, -16.5756, 0.88", "-84.8133, -82.6746, -16.1945, 1.11", "-85.3793, -83.3719, -15.7107, 1.11", "-85.5555, -83.5649, -15.6061, 0.81", "-86.3289, -84.3775, -15.1763, 0.29", "-86.9212, -85.0515, -14.8809, 0.29", "-87.1692, -85.3722, -14.7383, 0.66", "-87.2752, -85.5274, -14.6725, 1.11", "-87.6341, -86.082, -14.4578, 1.11", "-87.855, -86.4785, -14.2878, 1.11", "-88.2841, -87.405, -13.8458, 0.44", "-88.6512, -88.252, -13.517, 0.37", "-88.8145, -88.5563, -13.4267, 0.44", "-88.8496, -88.61, -13.4155, 0.66", "-89.0565, -88.8822, -13.3666, 0.29", "-89.5471, -89.3802, -13.3218, 0.29", "-90.4526, -90.0984, -13.2094, 0.81", "-91.1697, -90.6224, -13.1076, 1.11", "-91.279, -90.7037, -13.079, 1.11", "-91.7649, -91.1094, -12.8977, 1.03", "-91.8018, -91.146, -12.878, 1.03", "-92.4604, -91.9738, -12.3788, 0.29", "-92.5539, -92.138, -12.2963, 0.29", "-92.7541, -92.5619, -12.19, 0.59", "-92.9351, -92.9317, -12.1598, 0.74", "-93.1313, -93.3124, -12.1845, 0.44", "-93.3193, -93.6434, -12.2542, 0.44", "-93.7527, -94.3733, -12.4892, 0.22", "-94.0939, -94.9218, -12.6856, 0.59", "-94.2831, -95.2142, -12.7946, 1.03", "-94.4833, -95.5124, -12.9037, 0.74", "-95.1073, -96.4947, -13.1276, 0.29", "-95.5105, -97.2021, -13.2008, 0.29", "-95.8546, -97.8991, -13.1895, 0.74", "-96.0409, -98.3449, -13.1474, 0.74", "-96.1902, -98.755, -13.0887, 0.74", "-96.6922, -100.337, -12.77, 0.29", "-96.7942, -100.765, -12.6217, 0.29", "-96.8672, -101.075, -12.5121, 0.29", "-96.9896, -101.572, -12.3368, 1.11", "-97.1078, -101.975, -12.2128, 0.96", "-97.263, -102.423, -12.1142, 0.81", "-97.8043, -103.63, -12.022, 0.22", "-98.3046, -104.615, -11.9458, 0.22", "-98.4285, -104.864, -11.8961, 0.66", "-98.5298, -105.106, -11.8249, 1.11", "-98.6305, -105.404, -11.7238, 0.66", "-98.6977, -105.705, -11.5772, 0.66", "-98.7041, -105.754, -11.5477, 0.66", "-98.7979, -106.918, -10.751, 0.22", "-98.889, -107.443, -10.4386, 0.22", "-98.9597, -107.732, -10.2877, 0.66", "-99.2479, -108.55, -9.94768, 1.18", "-99.2705, -108.608, -9.9277, 1.18", "-99.4826, -109.068, -9.80171, 1.18", "-100.152, -110.323, -9.60974, 0.37", "-100.218, -110.439, -9.59324, 0.59", "-100.626, -111.105, -9.5119, 0.59", "-101.052, -111.781, -9.4587, 0.59", "-101.123, -111.91, -9.44304, 0.66", "-101.268, -112.219, -9.38891, 0.74", "-101.29, -112.277, -9.36985, 0.74", "-101.373, -112.47, -9.29987, 0.74", "-101.754, -113.237, -9.00341, 0.22", "-102.043, -113.717, -8.82019, 0.22", "-102.238, -114.015, -8.70013, 0.22", "-102.694, -114.604, -8.45533, 1.03", "-103.014, -114.995, -8.29425, 1.4", "-103.051, -115.037, -8.27734, 1.4", "-103.376, -115.381, -8.14119, 1.4", "-103.763, -115.786, -7.99951, 0.66", "-104.466, -116.599, -7.73375, 0.29", "-104.513, -116.656, -7.71733, 0.29", "-104.883, -117.161, -7.55883, 0.29", "-105.095, -117.486, -7.45252, 0.29", "-105.188, -117.654, -7.38143, 0.29", "-105.561, -118.34, -7.03031, 0.52", "-105.667, -118.562, -6.91678, 1.03", "-105.804, -118.842, -6.77619, 1.03", "-105.862, -118.958, -6.71983, 1.03", "-106.382, -119.939, -6.25841, 0.37", "-106.752, -120.629, -5.972, 0.29", "-107.064, -121.206, -5.7838, 0.29", "-107.091, -121.252, -5.7704, 0.29", "-107.377, -121.732, -5.64809, 0.74", "-107.602, -122.09, -5.57037, 0.81", "-107.936, -122.615, -5.48666, 0.81", "-108.451, -123.405, -5.3583, 0.29", "-109.027, -124.214, -5.21217, 0.29", "-109.222, -124.481, -5.16373, 0.52", "-109.461, -124.794, -5.11053, 0.66" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-1.01895, 53.5132, 8.1808, 0.74", "-1.16947, 53.8953, 8.16613, 0.74", "-1.23967, 54.0738, 8.16221, 0.74", "-1.34633, 54.4127, 8.09687, 0.44", "-1.49517, 54.9109, 7.92943, 0.29", "-1.57138, 55.1098, 7.82332, 0.29", "-1.67725, 55.3595, 7.66909, 0.66", "-1.76807, 55.544, 7.53527, 0.66", "-2.17124, 56.3867, 6.85356, 0.22", "-2.38652, 56.873, 6.35509, 0.22", "-2.65186, 57.6027, 5.56128, 0.37", "-2.68204, 57.6804, 5.47504, 0.37", "-2.88457, 58.1804, 4.92782, 0.29", "-3.03909, 58.551, 4.5333, 0.29", "-3.55492, 59.7757, 3.35336, 0.96", "-3.79571, 60.4116, 2.81508, 0.74", "-4.05913, 61.2166, 2.24098, 0.52", "-4.1551, 61.5145, 2.05505, 0.52", "-4.17375, 61.5719, 2.02604, 0.52", "-4.36018, 62.0593, 1.85983, 0.52", "-4.40421, 62.1795, 1.85076, 0.52", "-4.50153, 62.4695, 1.84155, 0.52", "-4.62346, 63.0338, 1.851, 0.52", "-4.65321, 63.1564, 1.84186, 0.52", "-4.76814, 63.5564, 1.78481, 0.52", "-4.80597, 63.6731, 1.75963, 0.52", "-4.89917, 63.934, 1.68884, 0.52", "-4.98807, 64.1583, 1.61573, 0.52", "-5.28448, 64.8522, 1.35324, 0.66", "-5.33088, 64.9649, 1.31162, 0.66", "-5.40691, 65.1662, 1.25297, 0.88", "-5.42701, 65.2187, 1.23874, 0.88", "-5.54993, 65.5508, 1.16307, 0.88", "-5.59567, 65.6775, 1.1417, 0.88", "-5.71266, 66.0167, 1.10827, 0.66", "-5.95779, 66.7633, 1.03653, 0.29", "-6.10666, 67.2138, 0.995798, 0.44", "-6.23761, 67.6219, 0.961777, 0.59", "-6.35101, 67.9637, 0.927758, 0.96", "-6.50788, 68.4238, 0.87904, 1.33", "-6.66223, 68.8351, 0.837791, 1.33", "-6.77983, 69.1139, 0.815529, 1.11", "-6.93173, 69.4445, 0.799138, 1.11", "-7.50387, 70.5066, 0.753717, 0.52", "-7.54079, 70.5641, 0.753292, 0.52", "-7.89081, 71.0136, 0.771802, 0.52", "-8.10006, 71.2333, 0.795996, 0.44", "-8.14969, 71.2779, 0.804311, 0.44", "-8.52492, 71.576, 0.889425, 0.44", "-8.87156, 71.8457, 0.994402, 0.81", "-9.12057, 72.0784, 1.06673, 0.74", "-9.44055, 72.4303, 1.15617, 0.81", "-9.47596, 72.4763, 1.16509, 0.81", "-9.8133, 72.969, 1.24053, 0.29", "-10.0478, 73.3606, 1.2847, 0.29", "-10.3756, 73.9441, 1.33333, 0.29", "-10.4075, 74.0043, 1.33796, 0.29", "-10.6808, 74.5466, 1.37711, 0.29", "-10.9196, 75.0069, 1.41165, 1.11", "-11.1284, 75.3804, 1.44258, 1.47", "-11.2598, 75.5876, 1.46274, 2.28" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-1.01895, 53.5132, 8.1808, 0.29", "0.960762, 54.1966, 8.48377, 0.29", "1.54754, 54.3666, 9.10623, 0.29", "2.2021, 54.5223, 9.90143, 0.37", "2.43027, 54.5733, 10.2211, 0.37", "2.80396, 54.6582, 10.7641, 1.03", "3.00395, 54.7087, 11.0545, 1.03", "5.39245, 55.4365, 14.9687, 0.81", "5.69336, 55.5415, 15.5101, 0.74", "6.37653, 55.8303, 16.8313, 0.37", "6.4848, 55.893, 17.0496, 0.37", "6.69244, 56.056, 17.4696, 0.37", "7.15103, 56.5534, 18.2598, 0.81", "7.34008, 56.8557, 18.4456, 1.25", "7.56819, 57.2116, 18.6161, 1.62", "8.44664, 58.4444, 19.028, 0.52", "8.79104, 58.9197, 19.1626, 0.52", "9.18432, 59.4651, 19.2695, 0.66", "9.94835, 60.5529, 19.4932, 0.52", "10.643, 61.5967, 19.7239, 0.44", "11.3391, 62.6433, 19.9537, 0.44", "11.7573, 63.2936, 20.158, 0.44", "12.1392, 63.9572, 20.4775, 0.44", "12.8586, 65.4468, 21.4632, 0.44", "13.0338, 65.9346, 21.8774, 0.44", "13.0483, 65.9807, 21.9245, 0.44", "13.5529, 67.3021, 23.4757, 0.44", "13.6755, 67.5036, 23.7193, 0.66", "13.7522, 67.5914, 23.8351, 0.66", "14.0705, 67.8652, 24.1605, 1.11", "14.4408, 68.159, 24.5144, 1.11", "14.7306, 68.4045, 24.7732, 1.03", "15.1807, 68.8574, 25.1195, 0.66", "16.1835, 70.2329, 26.0554, 0.66", "16.3132, 70.4773, 26.2034, 0.52", "16.4481, 70.8815, 26.4098, 0.52", "16.5414, 71.3749, 26.6064, 0.37", "16.6236, 72.286, 26.8733, 0.37", "16.6352, 72.9129, 26.9727, 0.37", "16.6414, 73.0983, 26.9948, 0.52", "16.7004, 73.6534, 27.1387, 0.52", "16.7735, 74.0143, 27.2659, 0.74", "16.7968, 74.0766, 27.3009, 0.74", "16.9693, 74.3131, 27.5782, 0.74", "17.8285, 75.0566, 29.0831, 0.74", "17.8672, 75.0804, 29.1572, 0.74", "23.215, 80.9574, 36.3838, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-15.1864, 47.6888, 40.5147, 0.29", "-15.5216, 48.2581, 41.8292, 0.29", "-15.5904, 48.4103, 42.0845, 0.29", "-15.6168, 48.4693, 42.1685, 0.29", "-15.8224, 48.8785, 42.7061, 0.29", "-15.8334, 48.9087, 42.744, 0.29", "-16.0722, 49.5449, 43.5225, 0.29", "-16.1721, 49.8194, 43.796, 0.29", "-16.2223, 49.9728, 43.9439, 0.29", "-16.2711, 50.1808, 44.132, 0.59", "-16.42, 51.0348, 44.84, 0.29", "-16.4975, 51.4298, 45.1354, 0.29", "-16.5109, 51.4857, 45.1712, 0.29", "-16.594, 51.8988, 45.4319, 0.29", "-16.703, 52.5464, 45.8092, 0.29", "-16.7549, 52.9018, 45.9841, 0.29", "-16.7988, 53.1309, 46.0569, 1.03", "-16.8258, 53.4197, 46.1401, 1.4", "-18.481, 57.8022, 51.0836, 1.4", "-19.9394, 62.4167, 55.8684, 1.4" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-15.1864, 47.6888, 40.5147, 0.44", "-15.9552, 47.0132, 40.7054, 0.44", "-15.8193, 46.9038, 41.1647, 0.44", "-15.5477, 46.7062, 41.9752, 0.44", "-15.4337, 46.5899, 42.3324, 0.44", "-15.3946, 46.5226, 42.493, 0.59", "-15.3392, 46.3532, 42.8421, 0.81", "-14.7857, 44.8637, 46.0705, 0.29", "-14.7587, 44.792, 46.2318, 0.29", "-14.6353, 44.4848, 46.8815, 0.29", "-14.4593, 44.0696, 47.7276, 0.29", "-14.3479, 43.769, 48.2962, 0.29", "-14.2642, 43.3192, 48.9949, 0.29", "-14.3285, 43.1897, 49.0984, 0.29", "-14.5468, 42.7852, 49.4617, 0.29", "-15.8678, 35.6894, 59.7926, 0.29", "-16.3962, 29.099, 70.5279, 0.29", "-16.3117, 24.4466, 82.283, 0.29", "-16.2067, 18.902, 93.6258, 0.29" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-73.3733, 24.6366, 56.4006, 0.29", "-80.7132, 22.8065, 57.6677, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-73.3733, 24.6366, 56.4006, 0.44", "-83.2513, 22.9542, 57.0898, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-67.4764, -63.7596, -27.7155, 1.47", "-67.8932, -63.5402, -27.7712, 1.47", "-68.7843, -63.1, -27.8243, 0.44", "-69.84, -62.624, -27.8382, 0.44", "-69.8999, -62.5987, -27.8375, 0.44", "-71.2938, -62.0102, -27.8216, 0.29", "-72.6696, -61.4295, -27.806, 0.29", "-73.4619, -61.1006, -27.8129, 0.59", "-74.3365, -60.7861, -27.8559, 0.29", "-74.9279, -60.6155, -27.8649, 0.74" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-67.4764, -63.7596, -27.7155, 0.44", "-68.5285, -64.839, -27.567, 0.44", "-68.8624, -65.1056, -27.5463, 0.88", "-69.1028, -65.2662, -27.538, 1.4", "-69.2008, -65.3275, -27.536, 1.55", "-69.2599, -65.3623, -27.535, 1.55", "-70.4253, -66.0144, -27.4066, 0.44", "-70.6253, -66.0958, -27.3991, 1.4", "-70.9777, -66.222, -27.3837, 1.69", "-71.3286, -66.3382, -27.3647, 1.25", "-71.555, -66.4029, -27.3521, 0.74", "-72.846, -66.7335, -27.2735, 0.22", "-73.646, -66.9159, -27.2135, 0.96", "-74.1191, -67.0028, -27.1832, 0.96", "-74.4982, -67.0562, -27.1614, 0.52", "-75.6957, -67.1738, -27.1009, 0.29", "-75.7855, -67.1809, -27.0979, 0.29", "-75.8889, -67.1857, -27.0892, 0.59", "-76.4414, -67.2269, -26.9419, 0.74", "-76.7057, -67.2896, -26.7569, 0.96", "-76.7418, -67.3006, -26.7202, 0.96", "-76.8448, -67.3379, -26.5989, 1.18", "-77.4974, -67.5898, -25.8702, 1.18", "-77.5268, -67.6018, -25.8381, 1.18", "-78.8074, -68.1558, -24.4802, 0.44", "-79.1697, -68.3092, -24.1035, 0.44", "-79.5266, -68.4527, -23.7585, 0.44", "-79.8528, -68.576, -23.4966, 0.81", "-79.8954, -68.5918, -23.4701, 0.81", "-80.1344, -68.6806, -23.3428, 1.33", "-80.8429, -68.9367, -23.0856, 1.33", "-81.0322, -69.0148, -23.0115, 1.33", "-81.893, -69.3663, -22.6464, 0.22", "-81.933, -69.3821, -22.629, 0.74", "-82.0252, -69.4189, -22.5919, 0.74" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-32.6248, 37.0425, -22.6939, 0.29", "-32.6996, 37.5796, -23.4283, 0.29", "-32.8461, 37.9447, -24.4356, 0.29", "-32.9112, 38.0973, -24.8983, 0.29", "-33.0502, 38.4172, -25.9025, 0.74", "-33.0898, 38.5071, -26.1812, 1.25", "-33.1167, 38.5685, -26.3668, 1.47", "-33.7378, 39.7765, -30.2779, 0.59", "-33.7787, 39.8463, -30.5291, 0.59", "-33.7892, 39.8594, -30.5857, 0.59", "-33.8385, 39.9093, -30.8133, 0.59", "-33.8722, 39.9416, -30.9547, 0.66", "-33.8722, 39.9416, -30.9547, 0.66", "-33.9401, 40.0402, -31.1128, 0.66", "-34.2924, 40.5709, -31.9815, 0.22", "-34.4409, 40.7607, -32.4275, 0.22", "-34.6385, 40.9941, -33.0322, 0.29", "-34.6819, 41.041, -33.1576, 0.59", "-34.7049, 41.0649, -33.2209, 0.74", "-34.7791, 41.1136, -33.4207, 0.74", "-35.5221, 41.4, -35.3885, 0.96", "-35.6253, 41.427, -35.638, 0.96", "-35.7152, 41.4475, -35.8365, 0.96", "-35.7664, 41.4579, -35.9449, 0.96", "-37.0349, 41.6857, -38.6233, 0.37", "-38.1564, 41.8516, -40.9804, 0.15", "-38.3551, 41.8758, -41.3932, 0.74", "-38.5893, 41.9001, -41.8965, 1.18", "-38.63, 41.9043, -41.9862, 1.47" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-32.6248, 37.0425, -22.6939, 0.22", "-33.0591, 37.5447, -22.6054, 0.22", "-33.3417, 37.8637, -22.5492, 0.22", "-33.6314, 38.1546, -22.5294, 0.22", "-33.9259, 38.4109, -22.5281, 0.22", "-34.1704, 38.6072, -22.5335, 0.29", "-34.4196, 38.7957, -22.5407, 0.37", "-34.4692, 38.83, -22.5465, 0.37", "-34.9962, 39.2043, -22.6246, 0.88", "-35.3321, 39.4457, -22.6799, 1.18", "-35.6167, 39.6633, -22.7297, 1.18", "-35.8171, 39.8442, -22.7819, 1.11", "-36.5885, 40.6616, -23.0375, 0.22", "-36.8536, 40.9998, -23.141, 0.22", "-36.8799, 41.0421, -23.1626, 0.22", "-36.963, 41.2167, -23.2907, 0.22", "-37.1464, 41.7004, -23.7438, 0.66", "-37.1831, 41.8429, -23.8977, 1.25", "-37.2077, 42.0248, -24.1101, 1.11", "-37.3318, 43.0183, -25.2374, 1.25", "-37.3652, 43.3356, -25.6278, 0.66", "-37.3675, 43.3685, -25.6693, 0.66", "-37.3776, 43.9397, -26.3411, 0.22", "-37.3766, 44.1707, -26.6018, 0.22", "-37.3711, 44.3741, -26.8068, 0.22", "-37.3237, 45.3929, -27.6825, 0.59", "-37.3164, 45.5813, -27.8771, 1.18", "-37.3133, 45.8928, -28.2207, 1.18", "-37.3936, 46.0347, -28.8045, 0.52", "-37.5017, 46.1915, -29.4781, 0.29", "-37.5108, 46.2037, -29.5293, 0.29", "-37.7171, 46.4741, -30.6393, 1.4", "-37.7856, 46.5666, -31.0153, 1.69", "-39.7546, 49.257, -41.8257, 0.22", "-39.9121, 49.4977, -42.7306, 0.22", "-40.0141, 49.6694, -43.3303, 0.22", "-40.341, 50.2791, -45.2578, 1.4", "-40.4241, 50.4526, -45.7454, 1.5", "-40.4831, 50.6096, -46.1102, 1.5", "-40.5562, 51.6396, -46.875, 0.29", "-40.5547, 52.077, -47.2103, 0.29", "-40.4981, 52.9441, -47.8296, 0.29", "-40.4723, 53.1547, -47.9493, 0.29", "-40.3622, 53.7975, -48.3063, 0.74", "-40.2756, 54.1077, -48.4724, 1.11", "-40.008, 54.776, -48.8005, 1.4", "-39.9214, 54.9416, -48.8705, 1.69", "-39.6297, 55.4267, -49.0345, 0.74", "-39.332, 55.9322, -49.2057, 0.15", "-39.2378, 56.1263, -49.282, 0.15", "-39.2197, 56.1773, -49.3079, 0.15", "-39.1572, 56.5351, -49.5267, 0.44", "-39.1371, 56.8947, -49.7735, 0.37", "-39.1463, 57.1315, -49.92, 0.37", "-39.2196, 57.8536, -50.3213, 0.29", "-39.2415, 58.0409, -50.3857, 0.29", "-39.3178, 58.4608, -50.4996, 1.11", "-39.3984, 58.8069, -50.5263, 1.11", "-39.8665, 60.3832, -50.3527, 1.11", "-39.895, 60.4609, -50.4461, 1.11", "-39.9165, 60.5173, -50.5547, 1.11", "-40.1561, 61.2159, -51.7133, 0.29", "-40.1809, 61.3026, -51.8727, 0.29", "-40.2015, 61.3787, -52.0064, 0.29", "-40.3354, 61.8826, -52.9061, 1.25", "-40.3491, 61.9373, -52.9979, 1.25", "-40.382, 62.0851, -53.2257, 1.55", "-40.7051, 63.4382, -55.1696, 0.22", "-40.7601, 63.6649, -55.4873, 0.22", "-40.7672, 63.6971, -55.5288, 0.22", "-40.8866, 64.328, -56.2477, 1.25", "-40.9124, 64.5242, -56.448, 1.47", "-40.9866, 65.5043, -57.2971, 0.74", "-40.9975, 66.3497, -57.8642, 0.22", "-40.9898, 66.8068, -58.156, 0.52", "-40.9833, 67.1582, -58.3442, 0.52", "-40.9713, 67.6982, -58.5628, 0.29", "-40.9613, 68.0572, -58.6738, 0.44", "-40.9406, 68.5831, -58.7661, 0.74", "-40.9298, 69.1136, -58.8349, 1.18", "-40.9202, 69.8425, -58.952, 0.22", "-40.9073, 70.222, -59.0427, 0.22", "-40.8622, 70.5026, -59.166, 0.22", "-40.8554, 70.5364, -59.2083, 0.22", "-40.752, 70.8937, -59.8221, 0.29", "-40.7443, 70.9156, -59.8701, 0.29", "-40.621, 71.2747, -60.7105, 0.29", "-40.4889, 71.6201, -61.5619, 1.47", "-40.0808, 72.5788, -63.9252, 0.52", "-39.9355, 72.8952, -64.6897, 0.07", "-39.7719, 73.2489, -65.6068, 0.74", "-39.67, 73.4641, -66.1604, 0.96", "-39.5035, 73.8405, -67.0811, 0.15", "-39.4084, 74.0725, -67.6249, 0.15", "-39.2157, 74.5079, -68.575, 1.84", "-38.9089, 75.4495, -70.612, 0.66", "-38.8627, 75.6501, -71.0161, 0.22", "-38.8319, 75.8724, -71.4563, 0.22", "-38.8361, 75.9377, -71.5722, 0.22", "-38.8423, 75.9661, -71.6186, 0.22", "-38.8967, 76.1558, -71.818, 0.22", "-38.9319, 76.4857, -72.0014, 0.22", "-38.9273, 76.6589, -72.1484, 0.22", "-38.9229, 76.7011, -72.1912, 0.22", "-38.9309, 76.8941, -72.4186, 0.81", "-38.9584, 77.0287, -72.6211, 0.81", "-39.0681, 77.7687, -73.8099, 0.29", "-39.0721, 77.7975, -73.8563, 0.29", "-39.0854, 77.8825, -73.9905, 0.29", "-39.164, 78.3394, -74.7057, 1.55", "-39.3211, 79.005, -76.016, 0.15", "-39.3917, 79.3291, -76.6825, 0.15", "-39.4138, 79.4505, -76.9326, 0.15", "-39.4443, 79.854, -77.7522, 1.18", "-39.4436, 79.898, -77.841, 1.18", "-39.2838, 81.1826, -80.3474, 0.37", "-39.2478, 81.4606, -80.8779, 1.4", "-39.2184, 81.8354, -81.632, 0.07", "-39.1974, 82.1239, -82.2081, 0.07", "-39.1941, 82.1629, -82.2779, 0.07", "-39.1882, 82.2942, -82.4706, 0.07", "-39.2053, 82.5238, -82.7008, 0.07", "-39.33, 83.3142, -83.4965, 0.07", "-39.4053, 83.7858, -83.9406, 0.96", "-39.4466, 84.0649, -84.1982, 1.25", "-39.4732, 84.4189, -84.5415, 1.11", "-39.4774, 85.3818, -85.4814, 0.29", "-39.4783, 85.6432, -85.7873, 0.29", "-39.4754, 85.913, -86.1169, 0.29", "-39.4734, 86.0538, -86.3056, 0.29", "-39.4837, 86.7279, -87.3065, 1.25", "-39.4946, 86.8596, -87.5125, 1.4", "-39.7441, 88.0295, -89.3878, 0.37", "-39.7944, 88.1688, -89.6117, 0.74", "-39.8857, 88.3302, -89.8829, 0.88", "-39.9318, 88.3909, -89.986, 0.88", "-40.1593, 88.6393, -90.4065, 0.22", "-40.4577, 88.9262, -90.9073, 0.44", "-40.5394, 88.9998, -91.019, 0.81", "-41.1942, 89.5686, -91.8481, 0.37", "-41.336, 89.6831, -91.9866, 0.37", "-42.12, 90.3143, -92.5724, 0.07", "-42.2864, 90.4495, -92.6644, 0.07", "-42.7887, 90.8888, -92.8353, 0.74", "-43.0507, 91.135, -92.8924, 0.96", "-43.8151, 91.8921, -92.9228, 0.22", "-44.1341, 92.2076, -92.9179, 0.22", "-44.2808, 92.3493, -92.903, 0.22", "-44.3988, 92.4663, -92.8999, 0.22", "-44.8702, 92.9323, -93.008, 0.81", "-44.9378, 93.0016, -93.0329, 0.81", "-45.2117, 93.2815, -93.1835, 1.33", "-45.6636, 93.6992, -93.497, 1.25", "-45.7694, 93.7966, -93.5813, 1.25", "-46.5959, 94.6283, -94.3284, 0.29", "-46.6251, 94.6602, -94.3581, 0.29", "-46.9299, 95.0193, -94.7271, 0.88", "-47.4069, 95.5926, -95.3623, 0.22", "-47.5778, 95.7996, -95.5963, 0.52", "-47.8274, 96.0906, -95.9229, 0.52", "-48.0711, 96.3784, -96.2283, 0.15", "-48.5571, 96.9605, -96.8141, 0.96", "-48.7211, 97.1624, -97.0058, 0.96", "-48.824, 97.2864, -97.1276, 1.03", "-49.5729, 98.2023, -98.0358, 0.29", "-49.7435, 98.4232, -98.2958, 0.29", "-49.8315, 98.5543, -98.4503, 0.29", "-49.8511, 98.5864, -98.4878, 0.29", "-50.126, 99.1007, -99.0735, 0.29", "-50.2945, 99.4501, -99.4611, 1.55", "-50.9949, 101.111, -101.142, 0.22", "-51.1084, 101.369, -101.397, 0.22", "-51.1278, 101.411, -101.435, 0.22", "-51.309, 101.775, -101.729, 0.22", "-51.3308, 101.815, -101.757, 0.22", "-51.6409, 102.295, -102.082, 0.22", "-51.9844, 102.775, -102.326, 0.88", "-52.1462, 102.968, -102.444, 1.25", "-52.4704, 103.318, -102.688, 1.03", "-52.8166, 103.644, -102.944, 1.03", "-53.8857, 104.568, -103.697, 0.44", "-53.9601, 104.626, -103.749, 0.44", "-54.2403, 104.847, -103.927, 0.44", "-54.277, 104.877, -103.95, 0.44", "-54.516, 105.087, -104.086, 0.52", "-54.6861, 105.266, -104.156, 0.52", "-54.7254, 105.313, -104.156, 0.52", "-54.9468, 105.59, -104.168, 0.52", "-54.9468, 105.59, -104.168, 0.52", "-55.0237, 105.686, -104.171, 0.52", "-55.3954, 106.153, -104.182, 0.07", "-55.601, 106.406, -104.184, 0.07", "-55.8876, 106.668, -104.153, 0.07", "-56.3391, 107.038, -104.084, 0.96", "-56.5172, 107.174, -104.058, 1.18", "-56.8558, 107.429, -104.007, 1.18", "-57.0502, 107.578, -103.979, 1.18", "-58.0474, 108.405, -103.865, 0.22", "-58.3441, 108.665, -103.837, 0.29", "-58.9499, 109.202, -103.792, 0.96", "-59.1336, 109.365, -103.779, 1.18", "-59.6394, 109.851, -103.754, 0.37", "-59.9533, 110.2, -103.746, 0.22", "-60.1373, 110.471, -103.752, 0.22", "-60.3422, 110.808, -103.751, 0.22", "-60.3702, 110.863, -103.749, 0.22", "-60.6308, 111.401, -103.72, 0.22", "-60.7826, 111.811, -103.691, 0.29", "-60.8684, 112.094, -103.678, 0.22", "-60.9425, 112.361, -103.671, 0.22", "-60.9648, 112.434, -103.67, 0.22", "-61.019, 112.55, -103.667, 0.22", "-61.0839, 112.643, -103.663, 0.22", "-61.2952, 112.897, -103.647, 0.81", "-61.5086, 113.131, -103.627, 1.18", "-61.5443, 113.17, -103.623, 1.18", "-61.8917, 113.523, -103.583, 1.03", "-61.9856, 113.616, -103.571, 1.03", "-62.633, 114.273, -103.481, 0.29", "-62.8486, 114.489, -103.447, 0.29", "-62.8803, 114.522, -103.448, 0.29", "-63.1827, 114.852, -103.505, 0.29", "-63.3602, 115.056, -103.594, 0.29", "-63.5106, 115.243, -103.711, 0.37", "-63.5354, 115.273, -103.757, 0.37", "-63.9325, 115.75, -104.589, 0.37", "-64.0417, 115.883, -104.836, 1.11", "-64.2467, 116.135, -105.352, 1.33", "-64.2879, 116.183, -105.459, 1.33", "-65.0672, 117.018, -107.512, 0.07", "-65.1975, 117.15, -107.855, 0.81" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-36.7189, 29.0486, -6.38977, 1.11", "-37.2904, 28.8933, -6.25289, 1.11", "-38.2821, 28.7529, -6.00321, 0.37", "-38.7312, 28.7348, -5.87342, 0.37", "-39.5221, 28.7373, -5.63283, 0.88", "-39.9369, 28.746, -5.51319, 1.18", "-40.4775, 28.798, -5.39405, 1.25", "-41.0689, 28.9197, -5.28737, 1.18", "-41.758, 29.1363, -5.18422, 0.59", "-42.0955, 29.2545, -5.15033, 0.52", "-42.4654, 29.3822, -5.12979, 0.52", "-43.7525, 29.8007, -5.07232, 0.52", "-44.1435, 29.9219, -5.06229, 0.52", "-44.535, 30.0472, -5.05632, 0.81", "-45.0529, 30.2238, -5.05005, 1.11", "-45.4962, 30.3932, -5.03029, 1.18", "-45.9437, 30.5729, -5.02528, 0.81", "-46.8484, 30.9173, -5.06333, 0.52", "-47.3492, 31.1196, -5.11608, 1.03", "-47.645, 31.2563, -5.16308, 1.18", "-48.3469, 31.6156, -5.29659, 1.11", "-49.3551, 32.1618, -5.49972, 0.52", "-49.9082, 32.4583, -5.60677, 0.22", "-50.3925, 32.6959, -5.68518, 0.59", "-50.8402, 32.8753, -5.73197, 0.74", "-51.5903, 33.099, -5.74962, 0.37", "-52.0394, 33.1526, -5.72309, 0.37", "-52.3956, 33.1639, -5.67228, 0.74", "-52.9198, 33.1613, -5.5968, 1.18", "-53.5048, 33.1279, -5.51645, 0.96", "-53.9547, 33.094, -5.45467, 0.44", "-55.2975, 33.0054, -5.274, 0.37", "-55.7895, 32.9765, -5.21134, 0.37", "-56.2189, 32.9635, -5.16004, 0.88", "-56.8124, 32.9746, -5.09428, 1.55", "-57.4485, 33.0148, -5.02692, 1.69", "-57.6983, 33.0502, -4.99365, 1.69" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-36.7189, 29.0486, -6.38977, 0.59", "-37.0995, 29.6975, -5.37794, 0.59", "-37.3465, 30.0354, -4.84831, 0.74", "-38.0245, 30.8653, -3.4118, 0.44", "-38.5323, 31.4268, -2.43449, 0.37", "-39.672, 32.5913, -0.352575, 0.37", "-40.231, 33.1155, 0.611219, 0.52", "-40.5003, 33.3197, 1.04059, 0.74", "-41.4874, 33.9475, 2.55899, 0.74", "-42.0229, 34.2774, 3.37855, 0.22", "-42.4155, 34.5252, 4.03508, 0.74", "-42.663, 34.689, 4.4366, 0.74", "-43.0339, 34.9719, 5.08329, 0.74", "-43.5182, 35.3729, 5.85267, 0.15", "-44.3839, 35.9835, 6.85752, 0.96", "-44.7958, 36.238, 7.27495, 0.96", "-45.1285, 36.4227, 7.54042, 0.96", "-45.6688, 36.6962, 7.91206, 0.81", "-46.2792, 36.9659, 8.22901, 0.44", "-47.4411, 37.3975, 8.73045, 0.22", "-47.7149, 37.4755, 8.83618, 0.52", "-48.0232, 37.5567, 8.96596, 0.81", "-48.8679, 37.7828, 9.34597, 0.52", "-49.8452, 38.0826, 9.7831, 0.22", "-50.293, 38.2434, 9.97715, 0.37", "-50.597, 38.3923, 10.1002, 0.37", "-50.6554, 38.4213, 10.1129, 0.37", "-51.0068, 38.5787, 10.1598, 0.44", "-52.4071, 39.1674, 10.2481, 0.29", "-52.8692, 39.3536, 10.2714, 1.03", "-53.6565, 39.6613, 10.3057, 1.03", "-55.4041, 40.3375, 10.395, 0.29", "-56.4618, 40.7238, 10.4049, 0.29", "-57.1173, 40.9637, 10.3922, 0.81", "-58.0767, 41.3396, 10.3475, 0.52", "-58.3117, 41.4288, 10.3366, 0.96", "-58.846, 41.6192, 10.3179, 1.25", "-59.9493, 42.0915, 10.3203, 0.81", "-60.9517, 42.5933, 10.18, 0.29", "-61.4772, 42.8758, 10.0656, 0.81", "-68.3178, 46.5442, 12.8441, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-20.6206, 45.0158, -13.9298, 1.33", "-21.4907, 46.7189, -18.2108, 1.33", "-21.6358, 47.0084, -18.9173, 1.18", "-21.7605, 47.2649, -19.4908, 0.96", "-22.1668, 48.1112, -21.2999, 0.44", "-22.1796, 48.1382, -21.3538, 0.44", "-22.6418, 49.1264, -23.1789, 0.37", "-22.696, 49.2418, -23.3234, 0.88", "-22.8768, 49.623, -23.805, 0.22", "-22.8923, 49.6561, -23.8421, 0.22", "-23.1745, 50.3072, -24.3781, 1.11", "-23.316, 50.6574, -24.6076, 1.47", "-23.5992, 51.3359, -24.9324, 0.37", "-23.6945, 51.5478, -25.0334, 0.22", "-23.8902, 51.9655, -25.231, 0.22", "-24.1741, 52.5582, -25.4828, 1.03", "-24.6903, 53.633, -25.8702, 0.22", "-24.8566, 53.9796, -25.9814, 0.29", "-25.0633, 54.4474, -26.1268, 0.29", "-25.2688, 54.9408, -26.2828, 0.81", "-25.4968, 55.5294, -26.465, 1.55", "-25.6843, 56.0479, -26.6124, 1.55", "-25.7232, 56.1702, -26.6478, 1.55", "-26.0429, 57.4534, -27.0433, 0.22", "-26.098, 57.7395, -27.1367, 0.22", "-26.1079, 57.8046, -27.1576, 0.22", "-26.1523, 58.1842, -27.2849, 0.44", "-26.1831, 58.4902, -27.382, 0.59", "-26.2268, 59.0399, -27.518, 0.22", "-26.2295, 59.0999, -27.5248, 0.22", "-26.2442, 59.598, -27.6052, 0.22", "-26.2486, 59.6462, -27.6227, 0.22", "-26.2788, 59.8641, -27.7288, 0.22", "-26.3287, 60.3134, -27.9791, 1.25", "-26.3518, 60.5353, -28.1112, 1.25", "-26.3958, 60.9658, -28.3649, 1.25", "-26.5106, 62.3364, -29.1245, 0.44", "-26.5524, 62.788, -29.3807, 0.29", "-26.6035, 63.2641, -29.645, 0.29", "-26.6357, 63.4366, -29.749, 0.29", "-26.6689, 63.6468, -29.872, 0.29", "-26.759, 64.3817, -30.2578, 0.88", "-26.822, 65.1665, -30.6269, 0.29", "-26.8562, 65.6644, -30.892, 0.29", "-26.9335, 66.6878, -31.4748, 1.25", "-26.9944, 67.6735, -32.0399, 1.4", "-27.0097, 68.061, -32.2628, 1.4", "-27.0248, 68.7172, -32.6701, 0.29", "-27.019, 69.5595, -33.1838, 1.03", "-27.0226, 69.6775, -33.2735, 1.03", "-27.0725, 70.3665, -33.8352, 0.29", "-27.1041, 70.5303, -33.9879, 0.44", "-27.2582, 71.126, -34.6953, 0.52", "-27.274, 71.1864, -34.772, 0.66", "-27.4598, 72.2514, -36.16, 0.22", "-27.4774, 72.6739, -36.7146, 1.11", "-27.4731, 72.7347, -36.7955, 1.11", "-27.2839, 73.7741, -38.1223, 1.25", "-27.0747, 74.3858, -38.8349, 0.52", "-26.7937, 74.9581, -39.4725, 0.52", "-26.5161, 75.3484, -39.9033, 0.44", "-26.4815, 75.3908, -39.9495, 0.44", "-25.9426, 76.0216, -40.5479, 0.96", "-25.7301, 76.2613, -40.7295, 1.18", "-25.5966, 76.4128, -40.8529, 1.11", "-25.2147, 76.9356, -41.2964, 0.88", "-24.729, 77.5525, -41.833, 0.22", "-24.4771, 77.8644, -42.1289, 0.81", "-24.3452, 78.0353, -42.2859, 0.88", "-24.2715, 78.1529, -42.4114, 0.88", "-23.9265, 78.7829, -43.1429, 0.66", "-23.6385, 79.3416, -43.8246, 0.22", "-23.358, 79.9501, -44.6599, 0.81", "-23.2169, 80.2693, -45.1266, 0.81", "-22.8586, 81.0261, -46.2492, 0.29", "-22.8215, 81.0966, -46.3446, 0.29", "-22.6296, 81.4115, -46.7209, 0.29", "-22.6003, 81.4473, -46.7613, 0.29", "-21.9696, 81.9415, -47.1981, 1.11", "-21.6052, 82.1707, -47.3802, 1.47", "-20.4741, 82.9159, -48.11, 0.88", "-20.4012, 82.9797, -48.1883, 0.88", "-19.6372, 83.8711, -49.404, 0.29", "-19.5495, 83.9935, -49.5826, 0.29", "-19.5351, 84.0371, -49.6973, 0.29", "-19.4047, 84.5723, -51.3525, 0.29", "-19.3884, 84.6973, -51.7925, 0.29", "-19.3829, 84.7625, -52.0222, 0.29", "-19.385, 84.7976, -52.1408, 0.29", "-19.4653, 85.9704, -55.9957, 1.33", "-19.4764, 86.0903, -56.3696, 1.4", "-19.489, 86.2062, -56.7037, 1.4", "-19.5565, 86.5455, -57.662, 0.29", "-19.6069, 86.7441, -58.1703, 0.29", "-19.6132, 86.7816, -58.2487, 0.29", "-19.6195, 87.1484, -58.7592, 0.81", "-19.6081, 87.2932, -59.0049, 0.96", "-19.6046, 87.3238, -59.0603, 0.96", "-19.4452, 88.2708, -60.8976, 0.22", "-19.3603, 88.61, -61.6439, 1.18", "-19.3232, 88.713, -61.8862, 1.03", "-18.9745, 89.601, -63.8865, 0.22", "-18.9225, 89.7524, -64.2094, 0.22", "-18.8797, 89.8942, -64.4939, 0.22", "-18.6727, 90.6945, -65.9651, 0.22", "-18.59, 91.0546, -66.5983, 1.33", "-18.3959, 91.8203, -67.8612, 0.29", "-18.1946, 92.5267, -68.9014, 1.18", "-18.1374, 92.7815, -69.2619, 0.74", "-18.1217, 92.8951, -69.4079, 0.74", "-18.1771, 93.4166, -70.1049, 0.29", "-18.2234, 93.5719, -70.3331, 0.29", "-18.2983, 93.7737, -70.6547, 0.29", "-18.5682, 94.406, -71.6788, 1.62", "-18.6246, 94.5299, -71.8947, 1.62", "-19.389, 96.0411, -74.7191, 0.29", "-19.5006, 96.2374, -75.1147, 0.29", "-19.6637, 96.5007, -75.6955, 0.29", "-19.677, 96.5244, -75.7509, 0.29", "-20.0425, 97.0713, -77.1453, 1.11", "-20.117, 97.1494, -77.3693, 0.96", "-20.1472, 97.1645, -77.4233, 0.96", "-20.5806, 97.2914, -78.3837, 0.81", "-20.7536, 97.3341, -78.7783, 0.81", "-21.2937, 97.4757, -79.9659, 0.22", "-21.3304, 97.4872, -80.0446, 0.74", "-21.4123, 97.5113, -80.2304, 0.74", "-23.1655, 98.0879, -84.2927, 1.25", "-24.2938, 98.5044, -86.932, 0.22", "-24.6563, 98.659, -87.8756, 1.47", "-25.2661, 98.9924, -89.7411, 0.15", "-26.1206, 99.5318, -92.5685, 0.59", "-26.308, 99.6722, -93.2448, 0.22", "-26.4561, 99.8276, -93.8813, 0.96", "-26.9088, 100.608, -96.7775, 1.11", "-27.1543, 101.33, -99.3286, 0.22", "-27.1682, 101.453, -99.7022, 0.22", "-27.1672, 101.54, -99.9155, 0.22", "-27.157, 101.891, -100.769, 1.33", "-27.1445, 102.242, -101.497, 1.33", "-27.1466, 102.287, -101.553, 1.33", "-27.1729, 103.061, -102.202, 0.29", "-27.1833, 103.235, -102.344, 0.29", "-27.2011, 103.419, -102.475, 0.29", "-27.2247, 103.67, -102.673, 0.29", "-27.2218, 103.782, -102.769, 0.29", "-27.2086, 103.914, -102.994, 0.29", "-27.187, 104.078, -103.356, 0.29", "-27.1702, 104.172, -103.565, 0.29", "-27.0356, 104.87, -105.153, 1.47", "-27.0295, 104.907, -105.234, 1.47", "-26.8874, 106.114, -107.817, 0.29", "-26.884, 106.172, -107.936, 0.29", "-26.8838, 106.493, -108.542, 0.29", "-26.8875, 106.521, -108.596, 0.29", "-26.9442, 106.796, -109.096, 0.29", "-26.9634, 106.89, -109.255, 0.29", "-26.9961, 107.407, -109.924, 0.29", "-26.9977, 107.545, -110.107, 1.25", "-27.007, 109.3, -112.487, 0.29", "-27.005, 109.508, -112.757, 0.96", "-26.9989, 109.837, -113.174, 1.4", "-26.9685, 110.794, -114.36, 0.22", "-26.9264, 111.576, -115.257, 0.37", "-26.9104, 111.774, -115.459, 0.37", "-26.7453, 112.653, -116.01, 0.37", "-26.7312, 112.773, -116.093, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-20.6206, 45.0158, -13.9298, 0.44", "-20.7183, 45.0831, -13.8625, 0.44", "-20.8787, 45.2052, -13.7615, 0.44", "-21.5234, 45.7808, -13.3919, 0.44", "-22.0173, 46.3026, -13.1359, 0.44", "-22.7424, 47.2361, -12.6593, 0.44", "-23.1158, 47.8306, -12.3632, 1.03", "-23.3006, 48.1903, -12.1944, 1.33", "-23.5644, 48.826, -11.9166, 1.18", "-23.741, 49.5318, -11.5217, 0.96", "-23.8786, 50.4676, -10.915, 0.88", "-23.9478, 51.4663, -10.2211, 0.52", "-23.943, 51.784, -9.97419, 0.52", "-23.9294, 51.9389, -9.84897, 1.11", "-23.6071, 53.8998, -8.25375, 0.74", "-23.5115, 54.2723, -7.97935, 1.11", "-23.4014, 54.6626, -7.74128, 1.18", "-23.3254, 54.8886, -7.6224, 1.77", "-23.2046, 55.2658, -7.4817, 1.4", "-23.0099, 55.9569, -7.37399, 0.81", "-22.7795, 56.8546, -7.4194, 0.44", "-22.6593, 57.3269, -7.41246, 0.44", "-22.5858, 57.5876, -7.39872, 0.44", "-22.4476, 57.9395, -7.33808, 0.44", "-22.3229, 58.1972, -7.27046, 0.66", "-21.8486, 58.9473, -6.85338, 0.59", "-21.6668, 59.214, -6.67097, 0.81", "-21.2257, 59.8817, -6.19981, 0.44", "-20.7267, 60.6569, -5.5035, 0.59", "-20.5674, 60.9243, -5.25017, 0.44", "-19.7485, 62.4297, -3.86842, 0.37", "-19.6004, 62.7221, -3.63407, 1.25", "-19.3687, 63.2119, -3.28871, 1.47", "-18.5925, 65.1077, -2.18975, 0.88", "-18.367, 65.6945, -1.88303, 0.44", "-18.1013, 66.3658, -1.59845, 0.52", "-17.6063, 67.5464, -1.27456, 0.96", "-17.2772, 68.2524, -1.11854, 1.03", "-16.937, 68.9343, -0.954643, 0.59", "-15.8902, 71.0691, -0.491076, 0.59", "-15.3688, 72.1194, -0.189427, 1.18", "-14.9975, 73.0139, 0.0553921, 1.4", "-14.8982, 73.3221, 0.140696, 1.4", "-14.4557, 75.1401, 0.577734, 0.81", "-14.3443, 75.93, 0.728119, 0.29", "-14.3317, 76.4835, 0.805888, 0.29", "-14.4529, 78.3044, 1.41292, 0.52", "-14.5789, 79.1878, 1.84626, 1.11", "-14.6919, 79.7659, 2.18099, 1.25", "-14.7921, 80.148, 2.42828, 1.4", "-15.0343, 80.9279, 3.01654, 1.03", "-15.7599, 83.0239, 4.74742, 0.52", "-16.0579, 83.7836, 5.43987, 0.96", "-16.2653, 84.2366, 5.82955, 0.96", "-16.5235, 84.6874, 6.15216, 0.59", "-16.9759, 85.3527, 6.47865, 0.59", "-17.3203, 85.7812, 6.56754, 1.03", "-17.814, 86.3421, 6.52648, 1.33", "-18.2868, 86.8738, 6.4366, 0.74", "-19.5093, 88.2432, 6.19109, 0.59", "-19.9276, 88.706, 6.09749, 0.59", "-20.1282, 88.9252, 6.05291, 0.88", "-20.631, 89.4718, 5.95877, 0.88", "-21.0966, 89.9838, 5.8711, 0.74", "-21.8546, 90.8147, 5.75304, 0.37", "-22.5573, 91.5662, 5.6964, 0.37", "-22.9648, 91.9737, 5.67465, 0.81", "-23.55, 92.5376, 5.6611, 1.11", "-23.8543, 92.8329, 5.6537, 1.03", "-24.121, 93.102, 5.64264, 1.03", "-24.5041, 93.5199, 5.60895, 0.88", "-25.2138, 94.3749, 5.56295, 0.29", "-25.5372, 94.8001, 5.54254, 0.44", "-26.07, 95.562, 5.51402, 0.52", "-26.2675, 95.8588, 5.51071, 0.74", "-26.4516, 96.1427, 5.51118, 0.74", "-27.0752, 97.1697, 5.56174, 0.29", "-27.3811, 97.7244, 5.5951, 1.18", "-27.5679, 98.1576, 5.62615, 1.18", "-27.695, 98.512, 5.65643, 1.18", "-27.8501, 99.0052, 5.69344, 0.96", "-28.0047, 99.5826, 5.72013, 0.88", "-28.2773, 100.908, 5.73146, 0.37", "-28.5273, 102.57, 5.68375, 0.29", "-28.5952, 103.223, 5.64548, 0.29", "-28.62, 103.627, 5.61019, 0.44", "-28.6218, 103.894, 5.57724, 0.66", "-28.6171, 104.217, 5.49447, 0.52", "-28.5296, 105.08, 5.14567, 0.52", "-28.4608, 105.415, 4.93178, 0.66", "-28.3993, 105.665, 4.68891, 0.88", "-28.3197, 106.003, 4.30614, 0.88", "-28.1304, 107.005, 3.02157, 1.03", "-28.0753, 107.345, 2.55615, 1.25", "-28.0314, 107.679, 2.09465, 1.4", "-27.8845, 108.845, 0.544474, 0.44", "-27.8174, 109.279, 0.0610548, 0.37", "-27.6673, 110.063, -0.645126, 0.88", "-27.5725, 110.43, -0.88012, 1.18", "-27.4371, 110.962, -1.13115, 1.4", "-27.3328, 111.368, -1.26843, 1.03", "-26.8539, 113.089, -1.6366, 0.29", "-26.678, 113.714, -1.74861, 0.29", "-26.4396, 114.607, -1.86703, 0.37", "-26.1558, 115.867, -2.04742, 0.37", "-26.0493, 116.469, -2.13713, 0.88", "-26.0116, 116.74, -2.18052, 1.25", "-25.947, 117.436, -2.29844, 1.47", "-25.9077, 118.018, -2.40608, 1.03", "-25.8638, 119.134, -2.63261, 0.44", "-25.8497, 119.699, -2.75995, 0.44", "-25.8397, 121.117, -3.08846, 0.44", "-25.8415, 121.44, -3.16668, 0.74", "-25.8513, 121.904, -3.28115, 0.74", "-25.8631, 122.36, -3.39468, 0.74", "-25.8994, 123.158, -3.58221, 0.81", "-25.9215, 123.42, -3.6504, 1.4", "-26.0363, 123.944, -3.80203, 2.06", "-26.1522, 124.523, -3.98758, 2.06" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.462977, 35.5079, -6.49769, 1.55", "-0.715356, 36.8531, -6.36085, 1.55", "-0.832759, 37.5791, -6.30291, 1.11", "-0.917073, 38.9506, -6.29863, 0.74", "-0.897916, 39.8189, -6.35024, 0.88", "-0.813865, 40.6917, -6.45059, 1.33", "-0.680093, 41.2587, -6.50175, 1.25", "-0.213054, 42.1877, -6.58409, 0.96", "0.828549, 43.586, -6.73584, 0.66", "1.37617, 44.1793, -6.88455, 1.11", "1.99225, 44.7622, -7.09989, 1.4", "3.77946, 46.3253, -7.84579, 1.11", "5.09601, 47.3938, -8.45957, 0.81", "5.71572, 47.8287, -8.74408, 0.81", "7.61519, 49.1003, -9.63365, 0.44", "8.17652, 49.4702, -9.83487, 0.88", "8.61952, 49.7567, -9.97009, 0.88", "8.94229, 49.9719, -10.0676, 0.88", "11.0699, 51.3482, -10.5553, 0.59", "11.7164, 51.7369, -10.6725, 0.88", "14.113, 53.194, -11.0047, 1.4", "14.9768, 53.7563, -11.1505, 1.33", "15.8768, 54.3838, -11.309, 1.33", "17.4794, 55.6388, -11.6901, 0.81", "18.2259, 56.3071, -11.9471, 0.96", "18.9944, 57.0409, -12.273, 1.25", "19.4513, 57.5374, -12.5307, 1.25", "20.3265, 58.5907, -12.9905, 0.88", "20.9912, 59.4787, -13.3022, 0.74", "21.3563, 60.0503, -13.4521, 0.74", "21.6494, 60.5554, -13.5601, 0.74", "22.067, 61.2824, -13.7142, 0.74", "22.2425, 61.6209, -13.7854, 0.96", "22.5536, 62.3297, -13.9267, 1.03", "22.7716, 62.8825, -13.9755, 1.03", "22.9033, 63.2684, -13.9842, 0.88", "23.1255, 63.9556, -13.961, 0.59", "23.3425, 64.5691, -13.8941, 0.29", "23.6303, 65.2624, -13.7889, 0.59", "23.8693, 65.746, -13.7076, 0.59", "24.2251, 66.2576, -13.5856, 0.52", "24.691, 66.7619, -13.4123, 0.59", "25.3543, 67.382, -13.1533, 0.74", "25.643, 67.6258, -13.0469, 0.74", "26.0629, 67.9657, -12.9358, 0.59", "27.0801, 68.986, -12.7956, 0.29", "27.6047, 69.7143, -12.825, 0.81", "27.9465, 70.4453, -12.9302, 1.18", "28.0331, 70.7242, -12.9887, 1.62", "28.3492, 72.0128, -13.2795, 1.18", "28.7554, 74.1106, -13.7933, 0.81", "28.9771, 75.6365, -14.2013, 0.74", "29.1072, 76.6761, -14.4781, 0.88", "29.2331, 77.743, -14.7348, 0.96", "29.3872, 79.1793, -15.0317, 0.29", "29.4428, 79.7654, -15.117, 0.29", "29.4895, 80.0596, -15.1466, 0.29", "29.6378, 80.6789, -15.1808, 0.52", "29.7647, 81.1718, -15.2277, 0.96", "29.8956, 81.6768, -15.3034, 1.25", "30.0467, 82.2929, -15.4221, 1.25", "30.2732, 83.1282, -15.6121, 1.25", "30.4892, 83.8475, -15.8101, 1.25", "30.6724, 84.3793, -15.9827, 1.18", "30.9157, 85.0178, -16.2198, 1.18" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.462977, 35.5079, -6.49769, 1.84", "0.448531, 36.3711, -7.36559, 1.84", "1.7855, 37.5957, -8.52976, 0.44", "2.20554, 37.9897, -8.89704, 1.25", "2.44679, 38.2535, -9.16431, 1.25", "2.82117, 38.7504, -9.64337, 1.03", "3.41946, 39.6521, -10.4706, 0.59", "3.76436, 40.2432, -10.9946, 1.18", "4.1661, 41.1087, -11.7296, 1.18", "4.76885, 42.5762, -12.9205, 0.66", "5.0979, 43.4779, -13.6498, 0.52", "5.30814, 44.164, -14.2015, 1.25", "5.48608, 44.8875, -14.7515, 1.25", "5.68275, 45.7329, -15.3362, 1.18", "5.88189, 46.4605, -15.7588, 0.66", "5.92387, 46.5703, -15.8046, 0.66", "6.04786, 46.8778, -15.9318, 0.66", "6.06919, 46.9507, -15.9534, 0.66", "6.1803, 47.5275, -16.0485, 0.66", "6.2346, 47.8697, -16.0751, 0.66", "6.26048, 48.3587, -16.1594, 0.66", "6.26322, 48.5675, -16.1975, 0.66", "6.24281, 48.8344, -16.2463, 0.66", "6.23276, 48.8997, -16.2573, 0.66", "6.11086, 49.4367, -16.3364, 0.66", "6.01055, 49.8807, -16.4077, 0.66", "5.92571, 50.225, -16.4914, 0.59", "5.84103, 50.5895, -16.6037, 0.22", "5.72701, 51.1702, -16.8016, 0.22", "5.68725, 51.4425, -16.8973, 0.22", "5.65787, 51.7321, -17.0014, 0.22", "5.64134, 52.4357, -17.2567, 0.22", "5.65051, 52.7168, -17.3629, 0.22", "5.6847, 53.0375, -17.4833, 0.59", "5.75603, 53.5569, -17.668, 1.11", "5.76525, 53.6207, -17.6861, 1.11", "5.79178, 53.8127, -17.7222, 1.25", "5.8307, 54.0808, -17.7456, 1.25", "5.86448, 54.3598, -17.7592, 0.88", "5.89026, 54.6983, -17.7672, 0.81", "5.90917, 55.071, -17.767, 0.96", "5.91846, 55.2831, -17.7667, 0.96", "5.92334, 55.5611, -17.7609, 0.59", "5.91214, 56.0224, -17.739, 0.81", "5.83428, 57.0015, -17.671, 0.29", "5.78984, 57.3488, -17.6421, 0.29", "5.7369, 57.6643, -17.6119, 0.44", "5.69599, 57.9149, -17.5934, 0.44", "5.63589, 58.4585, -17.5271, 0.44", "5.60133, 58.9645, -17.4486, 0.29", "5.59474, 59.3745, -17.3696, 0.29", "5.59498, 59.6563, -17.3106, 0.59", "5.61097, 60.2446, -17.1892, 0.96", "5.65238, 61.253, -17.0179, 1.11", "5.68575, 62.0336, -16.9163, 0.81", "5.74612, 62.6551, -16.8583, 0.74", "5.78382, 62.9079, -16.8292, 0.52", "5.86848, 63.4108, -16.7641, 0.52", "5.98135, 64.0613, -16.6798, 0.81", "6.14574, 64.8624, -16.6113, 0.95", "6.45501, 66.018, -16.5179, 1.55", "6.71639, 66.8658, -16.4609, 0.74", "6.85552, 67.2941, -16.438, 0.66", "7.03006, 67.8319, -16.4148, 0.29", "7.19138, 68.3203, -16.3993, 0.29", "7.34548, 68.8914, -16.4109, 0.29", "7.41504, 69.3532, -16.4529, 0.37", "7.45323, 69.7032, -16.5115, 0.37", "7.5183, 70.1858, -16.5502, 0.44", "7.5183, 70.1858, -16.5502, 0.52", "7.61135, 70.8142, -16.5261, 0.81", "7.6762, 71.2156, -16.5, 1.11", "7.75715, 71.6381, -16.4695, 1.25", "8.07819, 73.085, -16.3426, 0.29", "8.16525, 73.4528, -16.3087, 0.29", "8.27632, 73.9729, -16.2577, 0.52", "8.31774, 74.1995, -16.2339, 0.81", "8.36345, 74.4749, -16.195, 0.81", "8.46831, 75.1571, -16.1001, 0.29", "8.54566, 75.7906, -16.0242, 0.22", "8.6144, 76.4571, -15.9466, 0.15", "8.65973, 76.9667, -15.8903, 0.22", "8.74549, 78.0505, -15.7964, 0.22", "8.78636, 78.7175, -15.7493, 0.22", "8.80503, 79.0565, -15.7366, 0.22", "8.8485, 79.7401, -15.7298, 1.03", "8.86069, 79.9502, -15.7477, 1.33", "8.87267, 80.5821, -15.8557, 1.47", "8.87431, 80.8907, -15.9364, 1.62", "8.88507, 81.3017, -16.0498, 1.55", "8.90559, 81.6895, -16.1584, 1.55", "8.97929, 82.6333, -16.4219, 0.81", "9.03607, 83.3742, -16.6469, 0.22", "9.11175, 84.3766, -16.974, 0.22", "9.1371, 84.737, -17.0948, 0.22", "9.15075, 85.0195, -17.1856, 0.59", "9.15075, 85.2879, -17.2583, 0.59", "9.12451, 85.7395, -17.3397, 0.29", "9.08926, 85.8786, -17.3697, 0.29", "8.93003, 86.2, -17.4376, 0.29", "8.81178, 86.4176, -17.4841, 0.22", "8.61609, 86.7823, -17.5615, 0.22", "8.53119, 86.9518, -17.5946, 0.22", "8.20546, 87.7137, -17.733, 0.88", "8.07572, 88.1462, -17.849, 1.33", "7.98896, 88.6088, -18.0061, 1.55", "7.98513, 88.8602, -18.1109, 1.77", "8.02225, 89.1298, -18.2313, 1.47", "8.0802, 89.4098, -18.3491, 1.18", "8.34585, 90.3255, -18.7127, 0.29", "8.43404, 90.5793, -18.8213, 0.29", "8.65843, 91.2294, -19.1613, 0.29", "8.89832, 91.9482, -19.5811, 0.29", "9.04884, 92.4101, -19.8738, 0.29", "9.21877, 92.9267, -20.223, 0.29", "9.31882, 93.2285, -20.4365, 0.29", "9.62486, 94.0995, -21.1003, 0.88", "9.62486, 94.0995, -21.1003, 1.03", "9.79506, 94.4448, -21.4162, 1.25", "10.0136, 94.8279, -21.7618, 0.96", "10.1338, 95.046, -21.9281, 0.88", "10.3311, 95.4016, -22.1448, 1.03", "10.3618, 95.4567, -22.1752, 1.03", "10.5923, 95.9795, -22.4824, 0.59", "10.6298, 96.0919, -22.5489, 0.52", "10.6988, 96.3874, -22.7348, 0.52", "10.72, 96.5002, -22.8075, 0.52", "10.8835, 97.3661, -23.3695, 0.29", "10.9988, 97.9463, -23.7469, 0.29", "11.0183, 98.2801, -24.0659, 0.29", "10.9695, 98.6029, -24.4849, 0.74", "10.891, 98.8675, -24.8723, 1.18", "10.7497, 99.2286, -25.4095, 1.25", "10.7209, 99.2847, -25.4979, 0.96", "9.98711, 100.488, -27.5368, 0.22", "9.61325, 101.038, -28.4854, 0.15", "9.4206, 101.308, -28.9425, 0.15", "9.24067, 101.557, -29.3439, 0.15", "9.21585, 101.593, -29.3956, 0.15", "9.1538, 101.783, -29.5473, 0.15", "9.16519, 101.994, -29.5651, 0.15", "9.20625, 102.327, -29.5496, 0.88", "9.27357, 102.889, -29.5083, 1.33", "9.31423, 103.167, -29.4895, 1.55", "9.46592, 104.038, -29.4534, 0.15", "9.54422, 104.532, -29.4716, 0.15", "9.59401, 104.875, -29.5188, 0.15", "9.60216, 104.94, -29.5354, 0.15", "9.6442, 105.327, -29.7104, 0.15", "9.7064, 105.702, -29.9544, 0.15", "9.8285, 106.265, -30.492, 0.74", "9.89687, 106.497, -30.7556, 1.33", "9.92406, 106.596, -30.8777, 2.36", "9.95315, 106.762, -31.0752, 2.5", "9.9508, 106.88, -31.2084, 2.5" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "-7.95237, -56.2557, 20.5525, 0.22", "-7.99009, -56.4898, 20.5202, 0.22", "-8.07108, -56.9927, 20.4508, 0.22", "-8.14993, -57.4823, 20.3833, 0.22", "-8.24926, -58.0991, 20.2983, 0.22", "-8.27265, -58.2443, 20.2782, 0.22" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "-7.95237, -56.2557, 20.5525, 0.44", "-7.41215, -56.7092, 20.8052, 0.44", "-6.67802, -57.3031, 21.1364, 0.29", "-6.39616, -57.5312, 21.2636, 0.29", "-5.78292, -58.0274, 21.5402, 0.29", "-5.28066, -58.4337, 21.7668, 0.29", "-5.09909, -58.5806, 21.8487, 0.44", "-5.03959, -58.6291, 21.8637, 0.44", "2.72218, -66.2878, 23.5716, 0.44", "11.2618, -72.721, 26.4589, 0.44", "20.982, -77.8961, 27.9786, 0.44", "30.3655, -83.8254, 27.909, 0.44", "38.8774, -90.8714, 28.4369, 0.44", "47.3768, -97.9523, 28.2269, 0.44" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "-33.1781, -55.0228, 34.8014, 0.29", "-42.6424, -56.1511, 36.4945, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "-33.1781, -55.0228, 34.8014, 0.52", "-38.9047, -55.2199, 41.0064, 0.29", "-44.0383, -56.301, 47.6202, 0.29", "-49.993, -57.9003, 53.3781, 0.29", "-55.3554, -60.3609, 59.3922, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "10.0321, -54.1873, 8.80969, 0.74", "9.95077, -54.9965, 8.83011, 0.74", "9.86461, -55.8534, 8.85173, 0.59", "9.80081, -56.488, 8.86774, 0.52", "9.73484, -57.1442, 8.8843, 0.66", "9.67833, -57.7062, 8.89847, 0.66", "9.62243, -58.2622, 8.9125, 0.66" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "10.0321, -54.1873, 8.80969, 0.29", "10.7928, -54.4869, 8.91998, 0.29", "11.5383, -54.7795, 9.04802, 0.29", "13.0108, -55.4056, 9.34299, 0.29", "13.6629, -55.6949, 9.4636, 0.29", "14.4609, -56.0412, 9.59533, 0.96", "14.8865, -56.2216, 9.67201, 1.11", "15.2562, -56.3863, 9.74997, 1.11", "15.7959, -56.6255, 9.86758, 0.88", "16.7067, -57.028, 10.059, 0.22", "17.4311, -57.3306, 10.2293, 0.22", "18.7002, -57.8019, 10.5218, 0.22", "19.1645, -57.9568, 10.6477, 0.29", "19.377, -58.0281, 10.7133, 0.59", "19.6694, -58.1248, 10.8133, 0.59", "20.7049, -58.541, 11.2433, 0.29", "20.9417, -58.6577, 11.3468, 0.44", "20.9995, -58.6887, 11.3718, 0.44", "21.4964, -58.9687, 11.5955, 0.44", "21.9384, -59.2652, 11.7852, 0.44", "22.2976, -59.5842, 11.9021, 0.44", "22.3843, -59.7012, 11.9012, 0.44", "30.6208, -63.6198, 15.0155, 0.44", "38.3822, -67.0559, 19.6016, 0.44", "46.3562, -69.4985, 24.4825, 0.44", "53.6316, -71.5744, 30.5005, 0.44", "60.5332, -73.1857, 37.0818, 0.44", "67.7494, -74.1653, 43.4525, 0.44" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "57.0279, -43.9104, -40.9525, 0.81", "58.981, -43.2705, -41.2738, 0.81", "59.0577, -43.2447, -41.2886, 0.81", "60.1289, -42.8932, -41.4236, 0.81", "60.5255, -42.7554, -41.4208, 0.96", "62.0917, -42.2033, -41.3221, 0.29", "62.6413, -42.0125, -41.2755, 0.81", "63.3819, -41.755, -41.1926, 0.29", "64.6663, -41.3133, -41.038, 0.22", "66.1767, -40.7874, -40.7658, 0.74", "66.3001, -40.746, -40.7446, 1.18", "66.8607, -40.5685, -40.6738, 1.4", "67.2985, -40.4172, -40.6438, 1.11", "68.1173, -40.1264, -40.6692, 0.59", "69.0861, -39.7682, -40.8751, 0.22", "69.6813, -39.5518, -41.0805, 0.22", "70.4423, -39.2874, -41.3378, 0.22", "70.8862, -39.1432, -41.4862, 0.22", "71.2216, -39.0572, -41.592, 0.81", "71.3071, -39.0436, -41.6205, 0.81", "71.965, -38.9985, -41.8857, 0.81", "72.7826, -39.0118, -42.2095, 0.22", "73.7841, -39.0784, -42.5981, 0.22", "74.4323, -39.1135, -42.8531, 0.22", "75.1503, -39.1462, -43.1326, 0.81", "75.227, -39.15, -43.1613, 0.81", "75.8429, -39.1986, -43.377, 1.33", "76.5141, -39.2563, -43.5952, 0.66", "77.4495, -39.3526, -43.8706, 0.29", "78.2632, -39.4251, -44.0926, 0.29", "79.0716, -39.4985, -44.2889, 0.29", "79.8223, -39.5499, -44.4738, 0.37", "80.8468, -39.6211, -44.7225, 0.22", "81.1677, -39.6506, -44.7972, 0.96", "81.9409, -39.7345, -44.9719, 1.18", "82.2109, -39.7608, -45.0343, 1.18", "83.9292, -39.8783, -45.4552, 0.22", "84.9192, -39.8805, -45.7233, 0.22", "85.528, -39.8511, -45.9009, 0.22", "86.0328, -39.7875, -46.0066, 1.25", "86.6996, -39.6776, -46.0985, 1.69", "87.5851, -39.5074, -46.1708, 1.11", "88.8944, -39.2517, -46.1377, 0.22", "89.6676, -39.114, -46.0695, 0.22", "91.8633, -38.8142, -45.788, 0.22", "92.3839, -38.762, -45.7062, 0.66", "93.0706, -38.7269, -45.5983, 0.96", "94.799, -38.7218, -45.3326, 0.22", "95.6965, -38.7656, -45.2204, 0.22", "96.4087, -38.8148, -45.1889, 0.66", "96.8996, -38.8373, -45.1976, 1.11", "98.268, -38.7895, -45.1976, 0.22", "98.4395, -38.7714, -45.1956, 0.22", "99.0016, -38.6468, -45.1797, 0.22", "99.5787, -38.4793, -45.1359, 0.22", "101.32, -37.9432, -44.9138, 0.96", "101.854, -37.7906, -44.8325, 1.4", "101.932, -37.7673, -44.8213, 1.4", "103.303, -37.2961, -44.5036, 0.29", "103.798, -37.11, -44.3633, 0.29", "103.941, -37.0526, -44.3218, 0.29", "104.798, -36.7262, -44.0881, 0.29", "105.567, -36.4638, -43.882, 0.29", "108.145, -35.7261, -43.2756, 1.18", "108.222, -35.7067, -43.2565, 1.18", "108.684, -35.6064, -43.1436, 1.18", "110.527, -35.3191, -42.7449, 0.22", "111.846, -35.2305, -42.5075, 0.22", "112.891, -35.2533, -42.3986, 0.22", "113.904, -35.3625, -42.3972, 0.81", "114.502, -35.4377, -42.414, 0.81", "115.956, -35.6635, -42.4984, 0.22", "117.088, -35.894, -42.6599, 0.22", "117.949, -36.087, -42.8315, 0.96", "118.734, -36.2809, -43.0471, 1.55", "119.363, -36.442, -43.2679, 0.96", "119.654, -36.512, -43.3798, 0.96", "120.861, -36.784, -43.8811, 0.22", "122.082, -37.0294, -44.393, 0.22", "122.8, -37.1737, -44.6841, 0.22", "123.474, -37.2996, -44.9527, 0.22", "124.01, -37.3923, -45.1543, 0.74", "124.727, -37.4914, -45.4083, 1.18", "125.35, -37.5567, -45.5977, 0.52", "125.492, -37.5691, -45.639, 0.52", "126.335, -37.6182, -45.8638, 0.22", "127.096, -37.6486, -46.0667, 0.22", "127.184, -37.6526, -46.0894, 0.22", "127.369, -37.6634, -46.1355, 0.96", "127.456, -37.6757, -46.1578, 0.96", "128.208, -37.8508, -46.389, 1.33", "128.983, -38.096, -46.6589, 0.29", "129.849, -38.4216, -46.9857, 0.29", "129.918, -38.4493, -47.0132, 0.29", "130.798, -38.8503, -47.3746, 0.29", "131.434, -39.1812, -47.6462, 0.74", "131.498, -39.2218, -47.6756, 0.74", "131.677, -39.3327, -47.7572, 0.74", "131.778, -39.3722, -47.7963, 0.74", "132.239, -39.4996, -47.9774, 0.74", "132.314, -39.5139, -48.0061, 0.74", "132.545, -39.5471, -48.0943, 0.74", "133.75, -39.5647, -48.5258, 0.22", "134.963, -39.4553, -48.9484, 0.22", "135.996, -39.2397, -49.2354, 0.22", "136.276, -39.158, -49.2993, 1.25", "136.671, -39.0225, -49.3734, 1.47", "138.363, -38.3269, -49.6341, 0.22", "139.056, -37.9732, -49.6294, 0.22", "140.306, -37.3145, -49.4868, 0.29", "140.877, -37.0215, -49.3916, 0.81", "141.371, -36.7847, -49.3018, 1.25", "141.818, -36.5907, -49.2143, 1.33", "144.073, -35.7396, -48.7718, 0.22", "145.32, -35.2844, -48.5306, 0.22", "145.882, -35.0924, -48.4414, 0.22", "146.629, -34.8194, -48.2636, 0.59", "146.727, -34.7853, -48.2371, 0.59", "147.05, -34.6804, -48.1464, 0.96", "147.125, -34.6582, -48.1286, 0.96", "148.486, -34.206, -47.5542, 0.29", "150.255, -33.6283, -46.8168, 0.29", "150.893, -33.4244, -46.5748, 0.29", "150.987, -33.3931, -46.5433, 0.29", "151.546, -33.2132, -46.4087, 0.29", "154.169, -32.4358, -46.1067, 0.22", "155.748, -31.9762, -45.9527, 0.96", "156.357, -31.7964, -45.9137, 1.33", "156.819, -31.6386, -45.874, 0.81", "158.165, -31.1444, -45.7805, 0.22", "158.981, -30.8106, -45.7389, 0.22", "161.3, -29.8762, -45.6857, 0.66", "161.535, -29.7749, -45.6516, 0.96", "162.17, -29.4839, -45.5216, 0.29", "163.077, -29.0328, -45.2717, 0.22", "163.462, -28.7752, -45.1149, 0.81" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "57.0279, -43.9104, -40.9525, 1.25", "57.1466, -44.0063, -41.0674, 1.25", "58.2238, -44.7962, -41.938, 0.29", "58.7859, -45.1943, -42.341, 0.29", "59.8203, -45.9156, -43.0149, 0.29", "60.3326, -46.2712, -43.3165, 0.29", "61.1405, -46.8313, -43.7846, 0.29", "61.5705, -47.1226, -43.9967, 0.29", "61.86, -47.3134, -44.1022, 0.96", "62.1542, -47.5049, -44.1915, 1.4", "62.6351, -47.8205, -44.3521, 0.88", "63.5645, -48.4554, -44.7384, 0.22", "64.2593, -48.9687, -45.123, 0.22", "64.869, -49.4195, -45.5048, 0.22", "65.8165, -50.0845, -46.1606, 0.22", "66.7908, -50.7845, -46.8637, 0.81", "67.2004, -51.1035, -47.1785, 1.33", "68.116, -51.9297, -47.9417, 0.37", "68.4336, -52.2604, -48.2411, 0.37", "68.9793, -52.9733, -48.7904, 0.22", "69.4666, -53.8153, -49.3282, 0.22", "69.9005, -54.7036, -49.7676, 0.88", "70.171, -55.3998, -50.0636, 1.25", "70.2327, -55.599, -50.131, 1.11", "70.4772, -56.5448, -50.5, 0.44", "70.7632, -57.6378, -50.97, 0.59", "70.8292, -57.819, -51.068, 1.11", "70.9962, -58.1438, -51.2611, 1.11", "71.0417, -58.214, -51.3117, 1.11", "71.8662, -59.3553, -52.3049, 0.44", "72.2009, -59.7594, -52.6908, 0.22", "72.5397, -60.1549, -53.0392, 0.22", "72.8411, -60.5247, -53.332, 0.22", "73.4536, -61.2898, -53.876, 0.96", "74.0168, -62.0021, -54.3017, 1.77", "74.5569, -62.6964, -54.6217, 0.29", "74.9073, -63.1771, -54.8147, 0.29", "75.2673, -63.6703, -54.9858, 0.29", "75.5084, -63.9824, -55.0618, 0.29", "75.849, -64.3963, -55.0914, 0.29", "75.886, -64.4401, -55.0903, 0.29", "76.2935, -64.9225, -55.0786, 0.29", "76.3382, -64.9746, -55.0774, 0.29", "76.7963, -65.4976, -55.0417, 1.03", "77.0649, -65.8237, -55.0049, 1.4", "77.1055, -65.8765, -55.0039, 1.4", "77.7211, -66.7151, -55.0422, 0.29", "78.124, -67.2768, -55.0944, 0.29", "78.4749, -67.7681, -55.1553, 0.81", "78.8985, -68.3205, -55.2381, 0.81", "79.6796, -69.2917, -55.4074, 0.22", "80.0275, -69.7061, -55.4862, 0.22", "80.4429, -70.1761, -55.5886, 0.74", "80.8036, -70.5576, -55.6781, 1.18", "81.6161, -71.376, -55.8554, 0.29", "81.6644, -71.4209, -55.8619, 0.29", "82.3318, -72.0353, -55.9107, 0.29", "82.6428, -72.3246, -55.9409, 0.88", "82.8503, -72.5241, -55.9648, 1.47", "83.6955, -73.3703, -56.0897, 0.22", "84.4648, -74.1229, -56.2826, 0.22", "84.8898, -74.5269, -56.4744, 0.74", "84.9356, -74.5702, -56.5029, 0.74", "85.254, -74.8687, -56.7691, 1.11", "85.4863, -75.0879, -56.9988, 1.4", "86.3707, -75.9473, -57.9975, 0.29", "87.1642, -76.7507, -58.9532, 0.81", "87.4681, -77.1074, -59.3882, 1.4", "88.1037, -77.8769, -60.3632, 0.29", "88.2951, -78.1064, -60.6676, 0.29", "88.5906, -78.4644, -61.1446, 0.66", "88.6453, -78.5343, -61.2336, 0.66", "89.8804, -80.1012, -63.0996, 0.29", "90.1851, -80.5018, -63.5998, 0.29", "90.3613, -80.7529, -63.9222, 0.29", "90.3861, -80.7887, -63.9731, 0.29", "90.5861, -81.0532, -64.3447, 0.29", "90.9395, -81.47, -64.8366, 0.81", "91.0425, -81.5785, -64.9198, 0.81", "91.5456, -82.117, -65.2789, 1.25", "91.5833, -82.1537, -65.3007, 1.25", "92.4047, -82.8324, -65.6689, 0.22", "92.9488, -83.2164, -65.853, 0.22", "93.0655, -83.2951, -65.8899, 0.22", "93.5265, -83.6268, -66.0284, 0.22", "93.8675, -83.8994, -66.1199, 1.03", "94.1318, -84.1241, -66.1976, 1.33", "94.1794, -84.1675, -66.2137, 1.33", "95.2725, -85.2167, -66.5874, 0.29", "95.7671, -85.6991, -66.7545, 0.29", "96.3472, -86.2732, -66.936, 0.29", "96.7287, -86.639, -67.0387, 0.74", "96.8017, -86.7065, -67.0545, 0.74", "97.026, -86.8902, -67.0865, 1.11", "97.0829, -86.9294, -67.0876, 1.11", "97.8623, -87.3827, -67.1153, 0.37", "98.3057, -87.6092, -67.1372, 0.37", "98.3926, -87.6606, -67.1411, 0.37", "98.8711, -87.9709, -67.1619, 0.37", "98.9264, -88.0088, -67.1643, 0.37", "99.2048, -88.2188, -67.1738, 0.81", "99.5355, -88.4972, -67.1808, 0.81", "100.542, -89.3988, -67.1942, 0.29", "101.098, -89.9748, -67.2863, 0.29", "101.142, -90.0264, -67.2983, 0.29", "101.566, -90.5532, -67.443, 0.29", "102.038, -91.1621, -67.6214, 1.18", "102.506, -91.7548, -67.8049, 1.47", "103.65, -93.2186, -68.3945, 0.29", "104.049, -93.735, -68.6263, 0.29", "104.423, -94.2197, -68.8118, 0.74", "105.115, -95.1152, -69.0866, 0.29", "105.688, -95.8634, -69.2576, 0.29", "106.449, -96.8909, -69.4287, 0.81", "106.69, -97.2115, -69.4539, 1.4", "107.695, -98.5537, -69.5782, 0.22", "108.314, -99.3837, -69.6584, 0.22", "108.314, -99.3837, -69.6584, 0.96", "109.334, -100.634, -69.7572, 0.29", "109.379, -100.684, -69.7596, 0.29", "110.2, -101.481, -70.053, 0.29", "110.519, -101.754, -70.2583, 1.18", "110.889, -102.042, -70.5311, 1.18", "111.081, -102.188, -70.6749, 1.33", "111.198, -102.272, -70.7651, 1.33", "112.775, -103.513, -72.0392, 0.29", "113.215, -103.916, -72.4289, 0.29", "113.27, -103.975, -72.4793, 0.29", "113.712, -104.481, -72.8406, 0.29", "113.752, -104.527, -72.8679, 0.29", "114.204, -105.028, -73.1048, 0.59", "114.487, -105.34, -73.1917, 0.96", "115.278, -106.265, -73.6169, 0.29", "115.792, -106.903, -74.0715, 0.29", "115.953, -107.114, -74.2984, 0.74", "116.064, -107.261, -74.483, 1.11", "116.222, -107.476, -74.8167, 1.47", "117.052, -108.683, -76.847, 0.22", "117.663, -109.648, -78.5001, 0.22", "118.319, -110.757, -80.428, 1.11", "118.457, -110.998, -80.8546, 1.55", "119.441, -112.746, -84.0118, 0.37", "119.778, -113.343, -85.1312, 0.37", "119.931, -113.602, -85.6366, 0.74", "119.931, -113.602, -85.6366, 1.4" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "1.25065, -79.1912, -54.9457, 0.74", "1.24904, -78.6207, -57.7896, 0.74", "1.24638, -78.6098, -57.8432, 0.74", "1.08005, -78.1595, -61.2209, 0.29", "1.04375, -78.1081, -61.7514, 0.29", "1.02645, -78.0972, -61.9301, 0.59", "0.558852, -78.0604, -65.0165, 0.96", "0.288627, -78.109, -66.1578, 1.55", "-0.272884, -78.2858, -68.1392, 0.59", "-0.450802, -78.3607, -68.6811, 0.59", "-1.29533, -78.695, -70.9852, 1.03", "-2.23321, -79.0348, -73.3082, 0.22", "-2.30876, -79.0587, -73.4665, 1.03", "-2.4933, -79.0948, -73.8268, 1.03", "-4.27193, -79.2016, -77.0366, 0.74", "-4.77021, -79.2047, -77.9429, 0.37", "-4.77021, -79.2047, -77.9429, 1.03", "-5.06095, -79.1936, -78.4546, 1.03", "-6.49992, -79.1881, -80.9683, 0.29", "-6.64492, -79.1953, -81.2158, 0.88", "-6.74908, -79.2082, -81.3744, 1.33", "-7.72415, -79.3388, -82.8545, 0.44", "-7.75218, -79.3418, -82.8915, 0.44", "-8.43454, -79.4052, -83.6452, 1.25", "-8.52528, -79.4049, -83.7091, 1.25", "-8.77343, -79.363, -83.8356, 1.62", "-9.95368, -78.8548, -84.0031, 0.59", "-10.4103, -78.53, -83.8797, 0.96", "-10.5589, -78.4106, -83.8128, 1.33", "-11.9861, -77.1566, -82.8698, 0.29", "-12.3421, -76.8273, -82.5889, 0.66", "-12.4511, -76.7051, -82.4703, 1.11", "-12.5117, -76.6083, -82.3588, 1.11", "-12.5674, -76.4924, -82.2252, 1.11", "-12.6638, -76.2746, -81.9798, 0.66", "-13.0353, -76.2531, -81.9655, 0.66" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "1.25065, -79.1912, -54.9457, 1.33", "1.21777, -79.3651, -55.0863, 1.33", "0.916047, -81.4107, -56.6077, 0.81", "0.797588, -82.4622, -57.4107, 0.44", "0.756338, -82.9727, -57.7921, 0.44", "0.677978, -84.2369, -58.672, 0.15", "0.64719, -85.105, -59.2239, 0.29", "0.660008, -85.5638, -59.4579, 0.74", "0.724436, -86.6482, -59.8768, 0.52", "0.778629, -87.1211, -60.077, 0.37", "0.914433, -87.9794, -60.4421, 0.37", "1.08305, -88.7757, -60.7289, 0.74", "1.26619, -89.6993, -60.9396, 0.74" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-23.2405, -96.7635, -70.0301, 0.29", "-23.8443, -97.641, -70.7584, 0.29", "-23.9983, -97.8708, -70.9357, 0.29", "-24.2099, -98.169, -71.1493, 0.29", "-24.3291, -98.3506, -71.2995, 0.81", "-24.4388, -98.52, -71.4322, 0.81", "-24.7515, -99.0404, -71.8335, 0.15", "-24.9253, -99.3605, -72.0534, 0.22", "-25.0512, -99.6382, -72.2556, 0.96", "-25.311, -100.316, -72.7761, 0.59", "-25.5483, -100.98, -73.2914, 0.22", "-25.6985, -101.409, -73.6192, 0.29", "-25.7791, -101.629, -73.7731, 0.88", "-25.8973, -101.943, -73.9831, 0.88", "-26.1078, -102.499, -74.3112, 0.29", "-26.1936, -102.694, -74.4037, 0.52", "-26.2511, -102.827, -74.4657, 0.66", "-26.4927, -103.319, -74.6534, 0.22", "-26.6272, -103.602, -74.7879, 0.22", "-26.7118, -103.804, -74.8847, 0.22", "-26.7392, -103.893, -74.9267, 0.22", "-26.8116, -104.22, -75.0983, 0.88", "-26.8271, -104.354, -75.1911, 1.11", "-26.8735, -105.116, -75.7997, 0.29", "-26.8947, -105.353, -76.0137, 0.29", "-26.939, -105.672, -76.3058, 0.44", "-26.9446, -105.705, -76.3362, 0.44", "-27.0831, -106.386, -76.9514, 0.22", "-27.1128, -106.607, -77.198, 0.37", "-27.143, -106.951, -77.6106, 0.22", "-27.1547, -107.138, -77.8586, 0.81", "-27.1564, -107.165, -77.8953, 0.81", "-27.1661, -107.315, -78.0883, 1.33", "-27.2301, -108.427, -79.5568, 0.29", "-27.2363, -108.563, -79.7411, 0.29", "-27.2389, -108.705, -79.9249, 0.29", "-27.2343, -108.887, -80.1558, 0.74", "-27.2286, -109.037, -80.3301, 0.88", "-27.1911, -109.799, -81.1286, 0.22", "-27.1789, -110.008, -81.3015, 0.22", "-27.1607, -110.223, -81.4838, 0.22", "-27.1113, -110.66, -81.8288, 0.66", "-27.0877, -110.851, -81.9625, 1.11", "-27.0764, -110.959, -82.0255, 1.33", "-27.0237, -111.518, -82.2386, 0.22", "-27.0031, -111.784, -82.3487, 0.22", "-26.9922, -112.2, -82.5087, 0.22", "-26.9914, -112.408, -82.5761, 0.22", "-26.991, -112.456, -82.5901, 0.59", "-26.9832, -112.64, -82.6411, 0.59", "-26.9261, -113.294, -82.8002, 0.22", "-26.8674, -113.818, -82.937, 0.22", "-26.8409, -114.04, -82.9959, 0.22", "-26.8052, -114.358, -83.0739, 0.96", "-26.7638, -114.768, -83.1599, 0.22", "-26.7509, -114.902, -83.1875, 0.22", "-26.7285, -115.124, -83.2246, 0.22", "-26.7047, -115.343, -83.2706, 0.22", "-26.6861, -115.566, -83.3418, 0.22", "-26.6784, -115.773, -83.4165, 0.22", "-26.6891, -116.221, -83.5804, 0.59", "-26.6941, -116.349, -83.6323, 0.74", "-26.7083, -116.602, -83.7405, 0.74", "-26.7538, -117.397, -84.0805, 0.29", "-26.7799, -117.835, -84.2408, 0.29", "-26.789, -118.024, -84.3016, 0.29", "-26.805, -118.429, -84.4074, 0.59", "-26.8069, -118.61, -84.4474, 0.96", "-26.8016, -118.848, -84.4858, 0.96", "-26.7641, -119.399, -84.5177, 0.22", "-26.7305, -119.768, -84.5333, 0.22", "-26.7135, -119.911, -84.5351, 0.29", "-26.6669, -120.28, -84.523, 0.22", "-26.6434, -120.458, -84.5181, 0.37", "-26.6103, -120.635, -84.5379, 0.37", "-26.5475, -120.867, -84.5932, 0.22", "-26.4525, -121.154, -84.6736, 0.29", "-26.3382, -121.445, -84.7607, 0.29", "-26.3237, -121.478, -84.7703, 0.29", "-25.9643, -122.259, -84.9868, 1.03", "-25.8128, -122.602, -85.0706, 1.03", "-25.6101, -123.106, -85.1713, 0.22", "-25.4499, -123.573, -85.2412, 0.22", "-25.3086, -124.029, -85.2922, 0.22", "-25.285, -124.113, -85.2974, 0.22", "-25.1646, -124.645, -85.2818, 0.22", "-25.0702, -125.132, -85.2661, 0.22", "-25.0121, -125.531, -85.2471, 0.22", "-24.9894, -125.773, -85.2395, 0.88" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-23.2405, -96.7635, -70.0301, 0.22", "-22.7498, -98.4536, -72.971, 0.22", "-22.6289, -98.7872, -73.4979, 0.22", "-22.4922, -99.1135, -73.9866, 0.22", "-22.2478, -99.621, -74.7428, 0.22", "-22.141, -99.8189, -75.0378, 0.66", "-21.7115, -100.556, -76.1183, 0.15", "-21.4506, -100.913, -76.5406, 0.15", "-21.3555, -101.026, -76.6943, 0.15", "-20.952, -101.466, -77.3444, 0.74", "-20.8423, -101.572, -77.4939, 0.96", "-20.7062, -101.695, -77.6667, 0.96" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-8.67505, -125.231, -65.6823, 0.22", "-8.90238, -126.131, -66.0748, 0.22", "-9.01983, -126.705, -66.3213, 0.22", "-9.06482, -127.311, -66.6356, 0.22", "-9.06085, -127.554, -66.764, 0.81", "-9.0362, -127.824, -66.8995, 1.11", "-8.99725, -128.083, -67.0313, 1.03", "-8.98243, -128.133, -67.0573, 1.03", "-8.65928, -129.029, -67.5351, 0.29", "-8.49938, -129.441, -67.7439, 0.29", "-8.33781, -129.916, -67.976, 0.37", "-8.23414, -130.266, -68.1379, 0.22", "-8.13162, -130.7, -68.3405, 0.22", "-8.03848, -131.166, -68.5513, 0.74", "-8.02234, -131.274, -68.597, 1.03", "-7.96923, -132.118, -69.0207, 0.22", "-7.97301, -132.438, -69.192, 0.22", "-8.00361, -132.973, -69.4758, 0.74", "-8.02144, -133.181, -69.6033, 0.74", "-8.04008, -133.349, -69.7095, 0.74", "-8.1866, -134.271, -70.3395, 0.22", "-8.2396, -134.529, -70.5296, 0.29", "-8.28404, -134.717, -70.6671, 0.29", "-8.51059, -135.549, -71.2498, 0.22", "-8.60408, -135.799, -71.4336, 0.22", "-8.81978, -136.302, -71.8177, 0.37", "-8.83604, -136.339, -71.8464, 0.81", "-8.97992, -136.668, -72.15, 0.81", "-9.05295, -136.832, -72.3137, 0.81", "-9.42803, -137.597, -73.2689, 0.22", "-9.5536, -137.851, -73.6251, 0.22", "-9.66729, -138.08, -73.9644, 0.22", "-10.0087, -138.787, -75.0178, 0.88", "-10.0837, -138.95, -75.2689, 0.88", "-10.5043, -140.026, -76.9058, 0.37", "-10.5561, -140.162, -77.1378, 0.52", "-10.5983, -140.259, -77.3069, 0.74", "-10.6825, -140.444, -77.6241, 0.74", "-11.0225, -141.268, -79.0021, 0.22", "-11.1057, -141.493, -79.371, 0.59", "-11.4934, -142.769, -81.261, 0.29", "-11.5525, -142.975, -81.5626, 0.74", "-11.5904, -143.117, -81.7614, 0.74", "-11.7395, -143.655, -82.4538, 0.22", "-11.8094, -143.932, -82.7488, 0.22", "-11.8935, -144.306, -83.0744, 0.22", "-11.9659, -144.911, -83.4048, 0.81", "-11.9862, -145.134, -83.5162, 1.18", "-12.0223, -145.505, -83.6755, 0.66", "-12.059, -145.982, -83.8387, 0.29", "-12.0921, -146.493, -84.008, 0.29", "-12.101, -146.739, -84.0835, 0.44", "-12.1078, -147.238, -84.2154, 0.15", "-12.1072, -147.475, -84.323, 0.15", "-12.0886, -147.922, -84.5821, 0.59", "-12.0799, -148.102, -84.708, 0.96", "-12.0635, -148.353, -84.9104, 0.96", "-12.0459, -148.544, -85.0707, 0.96", "-11.9292, -149.672, -86.0347, 0.29", "-11.8922, -149.968, -86.2772, 0.29", "-11.8264, -150.451, -86.6437, 0.37", "-11.7758, -150.836, -86.9295, 1.03", "-11.7397, -151.132, -87.1354, 1.25", "-11.6462, -152.401, -88.0447, 0.29", "-11.6405, -152.786, -88.3125, 0.29", "-11.6551, -153.143, -88.5678, 0.29", "-11.6998, -153.776, -89.0153, 0.59", "-11.731, -154.067, -89.23, 0.88", "-11.9464, -155.65, -90.4611, 0.22", "-12.0006, -155.953, -90.6993, 0.22", "-12.0602, -156.253, -90.9366, 0.29", "-12.1274, -156.545, -91.1571, 0.29", "-12.2477, -157.097, -91.5311, 0.29", "-12.3642, -157.732, -91.9235, 0.74", "-12.3957, -157.995, -92.0571, 1.25", "-12.4098, -158.162, -92.1384, 1.25", "-12.5282, -159.73, -92.844, 0.29", "-12.5548, -160.079, -92.9773, 0.29", "-12.5649, -160.529, -93.1051, 0.74", "-12.5524, -160.883, -93.1802, 1.18", "-12.5194, -161.237, -93.2444, 0.74", "-12.4384, -161.8, -93.347, 0.22", "-12.3375, -162.252, -93.4218, 0.22", "-12.1778, -163.067, -93.5896, 0.22", "-12.1331, -163.327, -93.6614, 0.44", "-12.093, -163.608, -93.7524, 0.44", "-12.0165, -164.309, -94.0201, 0.29", "-11.9879, -164.652, -94.1686, 0.59", "-11.9601, -165.046, -94.3208, 0.59", "-11.9344, -165.574, -94.4863, 0.22", "-11.9067, -165.951, -94.5681, 0.22", "-11.8554, -166.395, -94.6347, 0.81", "-11.8483, -166.444, -94.6344, 0.81", "-11.6709, -167.514, -94.5541, 0.88", "-11.5362, -168.317, -94.5271, 0.29", "-11.4907, -168.561, -94.525, 0.29", "-11.3618, -169.161, -94.5555, 0.66", "-11.2083, -169.867, -94.626, 0.96", "-11.1847, -169.988, -94.6493, 0.96", "-11.0234, -170.964, -94.9425, 0.22", "-10.9737, -171.276, -95.014, 0.22", "-10.9118, -171.646, -95.085, 0.22", "-10.8746, -171.884, -95.1208, 0.22", "-10.8222, -172.335, -95.1819, 0.96", "-10.8068, -172.569, -95.1956, 1.18", "-10.8056, -173.597, -95.1542, 0.15", "-10.8244, -173.906, -95.1346, 0.15", "-10.8523, -174.192, -95.1114, 0.15", "-10.8978, -174.717, -95.04, 0.22", "-10.9073, -174.932, -95.0025, 0.22", "-10.9133, -175.234, -94.9489, 0.22", "-10.9078, -175.661, -94.8728, 0.81", "-10.899, -176.063, -94.7939, 0.96", "-10.8689, -176.77, -94.6296, 0.29", "-10.849, -177.155, -94.5292, 0.22", "-10.8424, -177.506, -94.4322, 0.22", "-10.8471, -177.555, -94.4236, 0.22", "-10.9474, -177.974, -94.388, 0.22", "-11.0609, -178.335, -94.384, 0.81", "-11.1711, -178.637, -94.3992, 1.18", "-11.2631, -178.866, -94.4393, 1.18", "-11.6997, -179.994, -94.7512, 0.22", "-11.8496, -180.436, -94.8912, 0.22", "-11.9551, -180.821, -95.0258, 0.22", "-12.0112, -181.068, -95.1179, 0.22", "-12.183, -182.091, -95.4759, 0.52", "-12.2272, -182.437, -95.5796, 1.03", "-12.2969, -183.076, -95.7177, 0.29", "-12.3629, -183.556, -95.7562, 0.29", "-12.4002, -183.796, -95.7531, 0.37", "-12.4679, -184.287, -95.7113, 0.22", "-12.5316, -184.829, -95.6298, 0.22", "-12.5762, -185.229, -95.5739, 0.22", "-12.7433, -186.672, -95.396, 1.47", "-12.7631, -186.859, -95.3733, 1.47", "-12.8057, -187.404, -95.3247, 0.29", "-12.8146, -187.823, -95.3083, 0.22", "-12.7889, -188.3, -95.3009, 0.22", "-12.7256, -188.783, -95.3348, 0.22", "-12.7147, -188.839, -95.3454, 0.22", "-12.6193, -189.288, -95.4445, 0.59", "-12.5041, -189.758, -95.5439, 0.96", "-12.3749, -190.215, -95.6321, 0.96", "-12.1214, -190.989, -95.697, 0.22", "-11.9983, -191.33, -95.6894, 0.22", "-11.9446, -191.485, -95.6717, 0.22", "-11.7871, -191.927, -95.5688, 0.81", "-11.6808, -192.211, -95.4871, 0.81", "-11.4577, -192.818, -95.3143, 0.22", "-11.3573, -193.091, -95.223, 0.22", "-11.1509, -193.636, -95.0549, 0.22", "-10.9897, -194.031, -94.955, 0.59", "-10.8597, -194.303, -94.9089, 0.96", "-10.69, -194.651, -94.8719, 0.22", "-10.5231, -194.995, -94.8703, 0.22", "-10.494, -195.056, -94.8714, 0.22", "-10.3435, -195.444, -94.8882, 0.22", "-10.2623, -195.747, -94.8784, 0.22", "-10.1615, -196.25, -94.8197, 0.22", "-10.1423, -196.423, -94.793, 0.29", "-10.1326, -196.621, -94.7609, 0.37", "-10.1307, -197.176, -94.6708, 0.22", "-10.1944, -197.965, -94.5755, 0.74", "-10.2457, -198.387, -94.5422, 1.4", "-10.3235, -198.969, -94.5762, 0.22", "-10.3662, -199.255, -94.6253, 0.22", "-10.4009, -199.51, -94.6988, 0.22", "-10.4797, -200.142, -94.9535, 1.11", "-10.5165, -200.412, -95.1024, 1.11", "-10.605, -201.291, -95.6313, 0.22", "-10.6095, -201.456, -95.7344, 0.22", "-10.6019, -201.966, -96.0706, 0.22", "-10.5726, -202.394, -96.3437, 0.74", "-10.4414, -203.209, -96.8284, 0.29", "-10.3706, -203.518, -97.0062, 0.29", "-10.2834, -203.774, -97.147, 0.59", "-9.95674, -204.519, -97.5749, 0.22", "-9.74079, -204.879, -97.7958, 0.22", "-9.47184, -205.233, -98.1014, 0.22", "-9.26298, -205.475, -98.3377, 0.22", "-8.9472, -205.835, -98.7331, 1.25", "-8.79062, -206.01, -98.9382, 1.69", "-8.65667, -206.149, -99.1111, 1.18", "-7.70184, -207.16, -100.476, 0.29", "-7.44934, -207.444, -100.88, 0.29", "-7.42225, -207.473, -100.924, 0.29", "-7.29358, -207.6, -101.142, 0.29", "-7.18141, -207.692, -101.316, 0.29", "-7.15103, -207.712, -101.352, 0.29", "-6.90597, -207.849, -101.546, 0.29", "-6.64529, -208.036, -101.846, 0.29", "-6.0571, -208.537, -102.575, 0.29", "-5.84804, -208.74, -102.85, 0.29", "-5.5135, -209.121, -103.371, 1.33", "-5.35549, -209.325, -103.63, 1.33", "-4.63836, -210.382, -104.863, 0.22", "-4.46909, -210.656, -105.179, 0.22", "-4.40099, -210.776, -105.304, 0.22", "-4.06467, -211.415, -105.943, 0.22", "-3.87588, -211.763, -106.277, 1.03", "-3.78601, -211.912, -106.41, 1.18", "-3.0486, -213.021, -107.23, 0.22", "-2.64661, -213.577, -107.635, 0.22", "-2.43093, -213.855, -107.8, 0.22", "-2.18401, -214.15, -107.92, 0.29", "-1.95665, -214.404, -107.987, 0.29", "-1.77326, -214.588, -107.982, 0.29", "-1.59038, -214.753, -107.907, 0.37", "-1.0828, -215.211, -107.659, 0.44", "-0.967322, -215.328, -107.595, 0.44", "-0.628195, -215.754, -107.408, 0.22", "-0.468261, -215.969, -107.329, 0.22", "-0.273995, -216.255, -107.25, 0.29", "-0.0985062, -216.529, -107.202, 0.29", "-0.0582309, -216.596, -107.199, 0.29", "0.237364, -217.162, -107.195, 0.22", "0.376286, -217.479, -107.209, 0.22", "0.499325, -217.818, -107.221, 0.22", "0.513805, -217.866, -107.222, 0.22", "0.558751, -218.053, -107.228, 0.22", "0.64342, -218.474, -107.237, 0.66", "0.685647, -218.719, -107.24, 0.66", "0.767166, -219.212, -107.244, 0.15", "0.821968, -219.508, -107.246, 0.22", "0.915327, -219.986, -107.248, 0.22", "1.01988, -220.474, -107.251, 0.29", "1.08913, -220.77, -107.255, 0.22", "1.12183, -220.89, -107.257, 0.22", "1.21619, -221.178, -107.27, 0.66" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-8.67505, -125.231, -65.6823, 0.37", "-7.83697, -126.208, -66.7227, 0.37", "-7.33949, -126.82, -67.3823, 0.29", "-7.30323, -126.869, -67.434, 0.29", "-7.04156, -127.278, -67.924, 0.29", "-6.91334, -127.504, -68.1922, 0.29", "-6.42976, -128.494, -69.3231, 0.52", "-6.38464, -128.635, -69.4875, 0.88", "-6.33997, -128.871, -69.7573, 0.88", "-6.13772, -130.144, -71.3839, 0.15", "-6.09663, -130.454, -71.7926, 0.15", "-6.0692, -130.729, -72.1479, 0.15", "-6.01727, -131.366, -72.9113, 0.81", "-6.00645, -131.512, -73.0792, 0.81", "-5.90207, -133.138, -74.8014, 0.22", "-5.89058, -133.555, -75.1641, 0.22", "-5.87571, -133.992, -75.5061, 0.22", "-5.86582, -134.238, -75.6607, 0.59", "-5.83701, -135.376, -76.1612, 0.15", "-5.84476, -135.869, -76.2964, 0.15", "-5.91606, -136.688, -76.3391, 0.66", "-5.94887, -137.024, -76.3663, 0.96", "-6.00375, -137.785, -76.4372, 0.22", "-6.00816, -137.856, -76.4439, 0.22", "-6.03226, -138.362, -76.4837, 0.22", "-6.0374, -138.683, -76.5422, 0.22", "-6.03007, -139.309, -76.7083, 0.22", "-6.00097, -139.878, -76.8542, 0.22", "-5.97471, -140.167, -76.9205, 0.66", "-5.9357, -140.445, -76.9916, 0.66", "-5.80901, -141.059, -77.1461, 0.29", "-5.71015, -141.46, -77.2695, 0.29", "-5.64353, -141.792, -77.378, 0.66", "-5.6036, -142.064, -77.4751, 0.66", "-5.53323, -142.777, -77.7297, 1.11", "-5.49236, -143.422, -77.95, 0.88", "-5.44794, -144.531, -78.3462, 0.22", "-5.43853, -145.21, -78.5953, 0.22", "-5.44471, -145.837, -78.8022, 0.22", "-5.45744, -146.239, -78.9165, 0.22", "-5.49055, -146.737, -79.0224, 0.81", "-5.53508, -147.349, -79.1206, 0.81", "-5.56142, -147.788, -79.1541, 0.81", "-5.58225, -148.591, -79.2023, 0.22", "-5.59827, -148.917, -79.2158, 0.22", "-5.62116, -149.439, -79.2231, 0.22", "-5.63284, -149.867, -79.2148, 0.81", "-5.65106, -150.259, -79.1958, 0.81", "-5.67792, -150.617, -79.1842, 0.81", "-5.75287, -151.417, -79.1724, 0.22", "-5.80197, -151.953, -79.1643, 0.22", "-5.88226, -152.681, -79.1554, 0.22", "-5.96193, -153.234, -79.1572, 0.22", "-6.04244, -153.728, -79.1625, 0.22", "-6.06983, -153.88, -79.1653, 0.59", "-6.08986, -153.984, -79.168, 0.59", "-6.15111, -154.28, -79.1778, 0.81", "-6.21095, -154.887, -79.2457, 0.22", "-6.19991, -155.111, -79.2795, 0.22", "-6.1516, -155.488, -79.3398, 0.59", "-6.10095, -155.779, -79.3856, 0.59", "-6.07499, -155.904, -79.4054, 0.59", "-5.83009, -156.876, -79.5568, 0.22", "-5.68837, -157.38, -79.632, 0.22", "-5.52624, -157.919, -79.7581, 0.22", "-5.41866, -158.251, -79.8577, 0.44", "-5.39613, -158.313, -79.879, 0.44", "-5.32376, -158.501, -79.9476, 0.74", "-5.20883, -158.771, -80.0496, 0.74", "-4.85463, -159.707, -80.4257, 0.15", "-4.80192, -159.906, -80.4841, 0.15", "-4.77539, -160.092, -80.5183, 0.15", "-4.73833, -160.517, -80.5678, 0.15", "-4.73149, -160.824, -80.5877, 0.66", "-4.75616, -161.584, -80.6287, 1.03", "-4.84076, -162.67, -80.6566, 0.22", "-4.92701, -163.569, -80.6977, 0.22", "-4.95221, -163.836, -80.7147, 0.52", "-4.97072, -164.146, -80.7753, 0.59", "-4.97572, -164.859, -81.0333, 0.15", "-4.94416, -165.225, -81.2379, 0.15", "-4.92733, -165.306, -81.3061, 0.52", "-4.86275, -165.566, -81.5549, 0.74", "-4.60584, -166.749, -82.7305, 0.15", "-4.53549, -167.127, -83.107, 0.15", "-4.51045, -167.278, -83.2548, 0.59", "-4.35599, -168.302, -84.2591, 0.22", "-4.31821, -168.645, -84.5725, 0.22", "-4.28235, -169.168, -85.0036, 0.66", "-4.27603, -169.435, -85.1783, 0.88", "-4.27835, -169.721, -85.3446, 0.88", "-4.30848, -170.814, -85.878, 0.15", "-4.32386, -171.298, -86.085, 0.15", "-4.3243, -171.501, -86.1748, 0.44", "-4.31263, -171.863, -86.3306, 0.22", "-4.30287, -172.222, -86.4877, 0.15", "-4.29709, -172.764, -86.6617, 0.15", "-4.23055, -173.774, -86.9063, 0.88", "-4.20047, -173.973, -86.9534, 0.88", "-4.13389, -174.273, -87.0131, 0.88", "-4.10104, -174.382, -87.0303, 0.88", "-3.65199, -175.628, -87.1489, 0.15", "-3.38731, -176.323, -87.1715, 0.22", "-3.24815, -176.683, -87.1638, 0.22", "-3.0091, -177.324, -87.1595, 0.22", "-2.91444, -177.606, -87.1671, 0.22", "-2.6661, -178.395, -87.2093, 0.15", "-2.60258, -178.613, -87.2275, 0.15", "-2.48683, -179.089, -87.2529, 0.74", "-2.34452, -179.712, -87.2972, 0.74", "-2.20255, -180.381, -87.3503, 0.07", "-2.13067, -180.741, -87.3786, 0.07", "-2.05756, -181.116, -87.4242, 0.81", "-1.97522, -181.558, -87.4656, 0.81", "-1.87138, -182.301, -87.505, 0.22", "-1.80368, -182.95, -87.5194, 0.22", "-1.78351, -183.229, -87.5161, 0.22", "-1.73556, -184.029, -87.4929, 0.81", "-1.70822, -184.827, -87.4563, 0.88", "-1.69806, -185.605, -87.4037, 0.22", "-1.71026, -186.101, -87.36, 0.22", "-1.72735, -186.542, -87.3147, 0.22", "-1.73462, -186.853, -87.2769, 0.22", "-1.72371, -187.358, -87.2041, 0.22", "-1.72155, -187.417, -87.1938, 0.22", "-1.69922, -187.77, -87.1265, 0.22", "-1.69462, -187.847, -87.1109, 0.22", "-1.67343, -188.187, -87.011, 0.22", "-1.61906, -188.881, -86.7853, 0.44", "-1.47766, -190.092, -86.3886, 0.22", "-1.38822, -190.719, -86.1958, 0.59", "-1.35315, -190.937, -86.1311, 0.88", "-1.10085, -192.403, -85.715, 0.22", "-0.949932, -193.17, -85.5136, 0.22", "-0.751912, -194.015, -85.3192, 0.22", "-0.565988, -194.717, -85.1932, 0.74", "-0.549134, -194.784, -85.1811, 0.74", "-0.469922, -195.094, -85.1405, 0.74", "-0.29146, -195.69, -85.145, 0.29", "-0.0860766, -196.314, -85.1752, 0.29", "0.0230322, -196.593, -85.2295, 0.29", "0.191594, -196.971, -85.3473, 0.52", "0.316669, -197.251, -85.4541, 0.96", "0.781145, -198.274, -85.8934, 0.22", "0.813158, -198.341, -85.9267, 0.22", "1.31536, -199.284, -86.4583, 0.59", "1.41841, -199.46, -86.5656, 0.59", "1.81306, -200.109, -87.0019, 0.22", "2.01878, -200.465, -87.2559, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-46.2724, -60.0248, 29.0267, 0.22", "-52.1898, -68.1091, 36.8534, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-46.2724, -60.0248, 29.0267, 0.29", "-53.9582, -65.7421, 34.8206, 0.22", "-61.7427, -72.4845, 39.1196, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-16.2067, 18.902, 93.6258, 0.29", "-17.4326, 14.0821, 101.732, 0.29", "-20.9006, 10.6403, 109.924, 0.29", "-25.7542, 8.44775, 117.855, 0.29", "-31.425, 7.71062, 125.516, 0.29" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-16.2067, 18.902, 93.6258, 0.44", "-20.4117, 13.2361, 102.977, 0.29", "-24.8857, 6.8408, 111.69, 0.29", "-29.9239, -0.299935, 119.437, 0.29", "-35.6243, -5.7063, 128.136, 0.29", "-41.2666, -10.2836, 137.354, 0.29", "-45.843, -14.6881, 147.225, 0.29", "-49.2827, -19.0354, 157.57, 0.29", "-52.752, -23.638, 167.79, 0.29", "-53.396, -28.4941, 178.441, 0.29", "-53.5906, -34.4796, 188.489, 0.29", "-53.1135, -42.0657, 197.316, 0.29", "-51.6723, -50.8074, 204.808, 0.29", "-49.3888, -60.1013, 211.32, 0.29", "-46.2451, -70.5563, 214.981, 0.29", "-43.5259, -80.4343, 220.306, 0.29", "-42.7469, -90.8304, 225.237, 0.29", "-40.7491, -101.171, 229.924, 0.29", "-38.2884, -111.366, 234.722, 0.29", "-35.9638, -121.027, 240.627, 0.29", "-33.6781, -130.848, 246.263, 0.29", "-31.1514, -141.054, 251.001, 0.29" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-38.63, 41.9043, -41.9862, 0.22", "-39.336, 42.5348, -43.597, 0.22", "-39.4258, 42.6188, -43.8028, 0.22", "-39.5454, 42.7421, -44.0905, 0.22", "-39.7119, 42.924, -44.4857, 0.22", "-40.2181, 43.5351, -45.7831, 0.22", "-40.309, 43.6516, -46.0249, 0.52", "-40.3406, 43.6933, -46.1054, 0.74", "-40.3984, 43.779, -46.2773, 0.74", "-40.445, 43.8928, -46.4986, 0.88", "-40.5102, 44.5593, -47.5747, 0.22", "-40.506, 44.5982, -47.6158, 0.37", "-40.5001, 44.6475, -47.6701, 0.37", "-40.4781, 44.7933, -47.824, 0.37", "-40.4016, 45.1931, -48.2113, 0.15", "-40.3366, 45.4279, -48.4052, 0.15", "-40.315, 45.5435, -48.5341, 0.15", "-40.2945, 45.8297, -48.9572, 0.29", "-40.2858, 45.9352, -49.1352, 0.59", "-40.2791, 46.0145, -49.2816, 1.03", "-40.2729, 46.0716, -49.3969, 1.03", "-40.0566, 46.8476, -51.0156, 0.59", "-40.0454, 46.8744, -51.0714, 0.59", "-39.9159, 47.0987, -51.5189, 0.22", "-39.8528, 47.197, -51.7365, 0.29", "-39.7774, 47.3002, -51.98, 0.29", "-39.648, 47.4416, -52.3109, 0.66", "-39.5982, 47.4884, -52.3986, 0.66", "-39.5494, 47.5384, -52.5014, 0.74", "-39.2285, 47.8857, -53.2673, 0.74", "-39.218, 47.9022, -53.3293, 0.74", "-39.0482, 48.1768, -54.3457, 0.22", "-38.9817, 48.285, -54.7325, 0.22", "-38.9074, 48.407, -55.1241, 0.44", "-38.8612, 48.4879, -55.3601, 0.66", "-38.3509, 49.4182, -57.8017, 0.81", "-38.2499, 49.8594, -59.1223, 0.29", "-38.2668, 49.9178, -59.3182, 0.22", "-38.3049, 49.9969, -59.5911, 0.22", "-38.3242, 50.0281, -59.7062, 0.22", "-38.3342, 50.0425, -59.7591, 0.22", "-38.6943, 50.5226, -61.4969, 0.44", "-38.8429, 50.6728, -62.0634, 0.59", "-38.8915, 50.7186, -62.2308, 0.74", "-39.4536, 51.1456, -64.0753, 0.29", "-39.5057, 51.1813, -64.2403, 0.59", "-39.5493, 51.2105, -64.3739, 0.66", "-40.1246, 51.5765, -66.0288, 0.07", "-40.2408, 51.6433, -66.3458, 0.07", "-41.3125, 52.2378, -69.0495, 0.66", "-41.3346, 52.2496, -69.1013, 0.88", "-41.3987, 52.2842, -69.2522, 0.88", "-41.4446, 52.3105, -69.3594, 1.11", "-42.2629, 52.8181, -71.2523, 0.29", "-42.407, 52.9149, -71.5653, 0.29", "-42.4359, 52.9391, -71.6165, 0.29", "-42.7485, 53.1682, -72.127, 0.15", "-42.8955, 53.2655, -72.3508, 0.15", "-42.9368, 53.2918, -72.4069, 0.15", "-43.5649, 53.6575, -73.0967, 0.66", "-43.763, 53.768, -73.3025, 0.96", "-44.621, 54.2322, -74.1743, 0.22", "-44.6789, 54.2625, -74.2291, 0.22", "-44.9311, 54.3925, -74.4632, 0.22", "-44.9702, 54.4127, -74.4966, 0.22", "-45.1853, 54.5148, -74.7197, 0.22", "-45.7266, 54.7723, -75.3437, 0.52", "-45.8534, 54.8347, -75.4944, 0.81", "-45.9064, 54.8599, -75.5627, 1.03", "-45.9486, 54.8798, -75.6264, 1.03", "-47.1268, 55.428, -77.5155, 0.37", "-47.3972, 55.5542, -77.9724, 0.37", "-47.4962, 55.6007, -78.1412, 0.37", "-47.8099, 55.7477, -78.6958, 0.52", "-48.3618, 56.0126, -79.6961, 0.74", "-48.4132, 56.042, -79.8013, 0.81", "-48.46, 56.0723, -79.907, 0.88", "-48.4812, 56.0839, -79.9574, 0.88", "-48.5124, 56.0989, -80.0285, 1.03", "-48.5397, 56.1103, -80.0849, 1.03", "-49.262, 56.2751, -81.7747, 0.29", "-49.5055, 56.3091, -82.3699, 0.29", "-49.6934, 56.3254, -82.8347, 0.59", "-49.6934, 56.3254, -82.8347, 0.59", "-49.7302, 56.3264, -82.9254, 0.59", "-51.003, 56.3296, -85.9944, 0.07", "-51.0606, 56.3236, -86.1368, 0.07", "-51.0906, 56.3208, -86.2169, 0.07", "-51.117, 56.3187, -86.2867, 0.59", "-51.1756, 56.3114, -86.4947, 0.96", "-51.2212, 56.304, -86.7023, 1.11", "-51.6684, 56.155, -89.5682, 0.37", "-51.7064, 56.1367, -89.8675, 0.59", "-51.7269, 56.1204, -90.091, 0.74", "-52.1126, 55.5869, -96.1948, 0.29", "-52.1224, 55.5634, -96.4264, 0.29", "-52.1378, 55.5179, -96.8415, 0.29", "-52.1414, 55.509, -96.9224, 0.29", "-52.1591, 55.4536, -97.4189, 0.29", "-52.1416, 55.3822, -97.8375, 0.29", "-51.8715, 55.1423, -98.3501, 0.52", "-51.846, 55.1176, -98.4048, 0.81", "-51.8263, 55.0971, -98.4529, 0.81", "-51.7434, 55.0055, -98.6736, 1.11", "-51.1335, 54.2611, -100.521, 0.22", "-51.0335, 54.1444, -100.81, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-38.63, 41.9043, -41.9862, 0.22", "-41.2752, 40.8424, -46.3965, 0.22", "-41.5924, 40.7201, -46.8798, 0.22", "-41.8493, 40.6231, -47.2542, 0.74", "-42.0714, 40.5382, -47.5649, 1.03", "-43.5618, 39.9668, -49.5683, 0.22", "-43.9034, 39.8325, -50.0151, 0.22", "-44.0481, 39.7831, -50.1286, 0.22", "-44.1073, 39.7618, -50.1784, 0.22", "-44.3063, 39.6864, -50.3518, 0.44", "-44.4381, 39.6318, -50.4606, 0.44", "-44.5887, 39.5635, -50.5617, 0.44", "-45.2079, 39.4046, -51.2192, 0.15", "-45.4275, 39.3735, -51.4642, 0.15", "-46.2367, 39.3502, -52.535, 0.81", "-46.6819, 39.3494, -53.155, 1.18", "-46.7932, 39.3507, -53.3145, 1.33", "-48.5592, 39.4167, -55.8796, 0.59", "-48.9145, 39.4394, -56.4062, 0.74", "-50.7011, 39.6134, -59.0461, 0.29", "-50.9972, 39.6492, -59.483, 0.29", "-51.0695, 39.6603, -59.5869, 0.37", "-51.1979, 39.6808, -59.7513, 0.37", "-51.3311, 39.6991, -59.8706, 0.37", "-51.751, 39.7856, -60.1673, 0.37", "-52.3875, 40.0003, -60.2445, 0.15", "-52.9343, 40.159, -60.4004, 0.15", "-53.3128, 40.2214, -60.5375, 0.22", "-53.4016, 40.2309, -60.586, 0.29", "-53.7524, 40.249, -60.8273, 0.29", "-53.9525, 40.2649, -61.1281, 0.29", "-54.6546, 40.3279, -62.4696, 0.88", "-54.8832, 40.3516, -62.9588, 0.96", "-55.3199, 40.4043, -63.9044, 1.11", "-55.3199, 40.4043, -63.9044, 1.11", "-56.6779, 40.5247, -67.5131, 0.52", "-56.8537, 40.5328, -68.0337, 0.66", "-57.0971, 40.5371, -68.7967, 0.66", "-57.7607, 40.5173, -70.9407, 0.88", "-57.8294, 40.5098, -71.1551, 0.88", "-60.0405, 40.2401, -77.6243, 0.96", "-60.1347, 40.2233, -77.8899, 1.11", "-60.1965, 40.2148, -78.0585, 1.11", "-60.6465, 40.1581, -79.2521, 1.18", "-60.7879, 40.1459, -79.6199, 1.33", "-61.6219, 40.1334, -81.6432, 0.37", "-61.7096, 40.1424, -81.8165, 0.37", "-63.2176, 40.3414, -85.1827, 0.37", "-63.4789, 40.366, -85.7795, 0.74", "-63.5899, 40.3698, -86.039, 0.74", "-64.7883, 40.3521, -88.938, 0.81", "-64.986, 40.3379, -89.4285, 0.81", "-66.9208, 40.0283, -94.1437, 0.29", "-67.2426, 39.9466, -94.8912, 0.29", "-67.4782, 39.8741, -95.4115, 0.74", "-67.557, 39.845, -95.5703, 1.03", "-67.6803, 39.7915, -95.7858, 1.33", "-69.8792, 38.7939, -99.2452, 0.29", "-70.1979, 38.6331, -99.7022, 0.29", "-70.3467, 38.5579, -99.9337, 0.29", "-70.8902, 38.2788, -100.79, 0.66", "-71.0276, 38.1999, -101.01, 0.81", "-71.2783, 38.0442, -101.422, 0.66", "-72.9191, 36.7139, -104.22, 0.88", "-72.9949, 36.6445, -104.369, 1.11", "-73.1205, 36.515, -104.648, 1.55", "-73.2484, 36.3488, -104.989, 1.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-65.1975, 117.15, -107.855, 0.29", "-65.6121, 118.056, -108.645, 0.29", "-65.9567, 118.704, -109.25, 0.81", "-66.6344, 119.806, -110.311, 0.29", "-66.7074, 119.915, -110.417, 0.22", "-66.7909, 120.002, -110.525, 0.22", "-67.3257, 120.423, -111.131, 0.52", "-67.5141, 120.476, -111.337, 0.81", "-67.7301, 120.502, -111.568, 0.29", "-67.7827, 120.505, -111.623, 0.29", "-68.9138, 120.58, -112.827, 0.22", "-69.2341, 120.61, -113.17, 0.22", "-70.6609, 120.758, -114.79, 0.37", "-70.8236, 120.794, -115.027, 0.66", "-70.8839, 120.81, -115.125, 0.66", "-70.9403, 120.831, -115.218, 0.66", "-71.0477, 120.883, -115.408, 0.66", "-71.5194, 121.141, -116.278, 0.66", "-72.4584, 121.582, -118.31, 0.44", "-72.6194, 121.649, -118.684, 0.44", "-72.9503, 121.779, -119.482, 0.52", "-73.127, 121.847, -119.923, 0.59", "-73.2608, 121.901, -120.295, 0.74", "-74.5476, 122.425, -124.177, 0.22", "-74.6, 122.447, -124.352, 0.66", "-74.6207, 122.456, -124.427, 0.66", "-75.5555, 122.868, -128.098, 0.29", "-75.7315, 122.956, -128.783, 0.52", "-75.7616, 122.97, -128.9, 0.66", "-75.8521, 123.041, -129.29, 0.66" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-65.1975, 117.15, -107.855, 0.15", "-65.731, 117.824, -106.487, 0.15", "-65.7667, 117.859, -106.438, 0.15", "-66.0389, 118.085, -106.244, 0.44", "-66.2524, 118.257, -106.136, 0.15", "-66.4023, 118.411, -106.075, 0.15", "-66.6253, 118.726, -105.998, 0.15", "-66.9064, 119.181, -106.045, 0.88", "-67.0708, 119.483, -106.105, 1.03", "-67.3054, 119.982, -106.232, 0.52", "-67.7021, 120.915, -106.499, 0.22", "-68.0455, 121.751, -106.742, 0.22", "-68.5343, 122.792, -107.124, 0.22", "-68.6264, 122.966, -107.195, 0.22", "-68.933, 123.457, -107.419, 0.81", "-69.1917, 123.801, -107.594, 1.33", "-69.5057, 124.133, -107.775, 0.88", "-70.7249, 125.194, -108.293, 0.22", "-70.9391, 125.371, -108.356, 0.22", "-71.2103, 125.574, -108.436, 0.22", "-71.3207, 125.616, -108.53, 0.22", "-71.8951, 125.749, -109.125, 0.81", "-72.323, 125.799, -109.6, 1.4", "-72.6458, 125.808, -109.966, 1.84", "-73.1739, 125.81, -110.556, 1.92", "-76.6984, 125.67, -115.093, 0.37", "-76.8497, 125.659, -115.294, 0.59", "-77.2037, 125.623, -115.782, 0.44", "-77.439, 125.595, -116.124, 0.66", "-77.7498, 125.551, -116.594, 1.25", "-80.8708, 125.103, -121.472, 1.25", "-81.1827, 125.073, -121.952, 1.25" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-57.6983, 33.0502, -4.99365, 0.22", "-60.0082, 32.1839, -5.1176, 0.22", "-61.3946, 31.6566, -5.16339, 0.74", "-62.0695, 31.3749, -5.13393, 0.74", "-63.0982, 30.9321, -5.10738, 0.29", "-64.2818, 30.4174, -5.08772, 1.03", "-65.181, 30.0166, -5.07846, 0.59", "-65.6431, 29.7957, -5.05901, 0.44", "-67.0722, 29.1029, -5.01206, 0.22", "-68.2785, 28.5063, -5.02476, 0.59", "-68.5016, 28.4053, -5.03489, 0.59", "-68.7482, 28.3046, -5.05465, 0.59", "-69.4745, 28.0158, -5.11914, 0.37", "-70.4068, 27.6893, -5.13113, 0.15", "-71.643, 27.2688, -5.09743, 0.22", "-72.8672, 26.8304, -4.97627, 0.22", "-73.4216, 26.6299, -4.90994, 0.81", "-74.0073, 26.4229, -4.82255, 0.81", "-76.2347, 25.6506, -4.43542, 0.29", "-76.7633, 25.473, -4.34763, 1.03", "-77.329, 25.2965, -4.23227, 1.4", "-77.875, 25.1417, -4.13006, 1.11", "-79.6938, 24.6714, -3.81955, 0.29", "-80.7736, 24.4112, -3.65232, 0.29", "-81.2599, 24.2939, -3.5877, 0.74", "-81.767, 24.175, -3.52373, 0.52", "-83.787, 23.6773, -3.33364, 0.29", "-85.0743, 23.3514, -3.25039, 0.29", "-85.3552, 23.2777, -3.24097, 0.66", "-86.0242, 23.0911, -3.22863, 1.47", "-86.7304, 22.9002, -3.23032, 1.47", "-88.2859, 22.497, -3.26006, 0.22", "-88.5258, 22.4433, -3.26594, 0.59", "-89.0158, 22.3251, -3.28053, 0.59", "-89.3613, 22.2375, -3.27909, 0.52", "-90.3354, 21.9838, -3.24896, 0.37", "-91.0611, 21.7839, -3.20679, 0.37", "-91.5814, 21.6344, -3.1591, 0.37", "-93.1977, 21.1432, -3.04166, 0.29", "-94.9015, 20.6127, -2.93519, 0.29", "-95.4359, 20.4475, -2.90381, 0.44", "-96.0655, 20.2484, -2.87029, 1.03", "-96.6301, 20.0971, -2.8488, 1.11", "-98.0107, 19.828, -2.90119, 0.37", "-98.5815, 19.7578, -2.96486, 0.74", "-98.9746, 19.713, -3.03469, 0.44", "-99.3343, 19.6786, -3.10681, 0.44", "-100.223, 19.6428, -3.36737, 0.22", "-102.102, 19.6367, -4.04066, 0.22", "-102.573, 19.6576, -4.22267, 1.11", "-103.158, 19.6928, -4.45543, 1.03", "-103.479, 19.7179, -4.59298, 1.03", "-105.553, 19.8946, -5.50113, 0.22", "-107.109, 20.0671, -6.17397, 0.22", "-107.582, 20.1527, -6.36229, 0.88", "-108.118, 20.277, -6.56778, 0.88", "-109.064, 20.5613, -6.88793, 0.66", "-109.759, 20.8203, -7.09271, 0.29", "-110.525, 21.2099, -7.23538, 0.29", "-110.793, 21.3915, -7.31613, 0.29", "-111.196, 21.6969, -7.47533, 0.74", "-111.833, 22.2422, -7.7656, 1.03", "-112.459, 22.8533, -8.07268, 0.44", "-112.612, 23.0228, -8.15846, 0.44", "-113.673, 24.2255, -8.85665, 0.29", "-114.019, 24.6208, -9.10751, 0.29", "-114.186, 24.81, -9.24136, 0.44", "-114.7, 25.3937, -9.68226, 0.22", "-115.049, 25.7897, -9.93327, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-57.6983, 33.0502, -4.99365, 0.52", "-58.8272, 33.9746, -4.85126, 0.52", "-59.9151, 34.8468, -4.69456, 0.52", "-60.5501, 35.2722, -4.46921, 0.22", "-60.8357, 35.436, -4.23427, 0.59", "-61.1754, 35.6265, -3.89607, 0.96", "-61.4464, 35.7793, -3.60973, 0.88", "-61.8394, 35.982, -3.10134, 0.81", "-63.0896, 36.6287, -1.39303, 0.29", "-64.6707, 37.4651, 0.729522, 0.52", "-65.0117, 37.6415, 1.20955, 0.96", "-65.2961, 37.7971, 1.62541, 0.96", "-65.7179, 38.034, 2.24771, 0.44", "-66.3569, 38.4989, 3.51344, 0.37", "-66.5505, 38.6885, 3.98645, 0.37", "-67.3553, 39.4407, 5.48179, 0.88", "-67.6255, 39.6728, 5.94341, 1.33", "-67.6808, 39.7169, 6.02855, 1.33", "-69.4266, 40.9684, 8.68235, 0.59", "-69.8424, 41.2519, 9.24675, 0.52", "-71.6352, 42.3122, 11.0835, 0.22", "-71.9229, 42.4567, 11.341, 0.74", "-72.3058, 42.6137, 11.6535, 0.74", "-73.9774, 43.2288, 12.6974, 0.74", "-75.1873, 43.6108, 13.2236, 0.29", "-75.8201, 43.7976, 13.5333, 1.11", "-77.9527, 44.427, 14.6597, 0.96", "-78.7195, 44.685, 15.0092, 0.74", "-80.3679, 45.291, 15.644, 0.22", "-80.6901, 45.4245, 15.7904, 0.74", "-81.0003, 45.5538, 15.9431, 0.74", "-83.2905, 46.576, 17.0178, 0.29", "-83.7851, 46.8161, 17.2191, 1.11", "-84.1096, 46.9834, 17.4012, 1.11", "-86.562, 48.2648, 19.2948, 0.44", "-95.2463, 51.215, 25.5764, 0.44" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-68.3178, 46.5442, 12.8441, 0.29", "-76.2577, 49.3194, 16.2237, 0.29", "-83.7473, 51.9339, 20.6026, 0.29", "-91.1126, 56.0117, 23.89, 0.29", "-97.8109, 60.5884, 27.8297, 0.29", "-104.96, 64.2534, 31.9772, 0.29", "-111.267, 67.8353, 37.3584, 0.29", "-116.131, 71.0632, 44.2429, 0.29", "-120.051, 74.7445, 51.4701, 0.29", "-123.15, 77.8627, 59.3422, 0.29", "-124.719, 79.8643, 68.0131, 0.29", "-125.63, 82.0658, 76.7227, 0.29", "-127.321, 84.6583, 85.198, 0.29", "-129.66, 87.3349, 93.492, 0.29", "-131.438, 89.5517, 102.066, 0.29", "-132.788, 92.586, 110.442, 0.29", "-135.498, 96.0878, 118.283, 0.29", "-138.537, 98.5159, 126.435, 0.29", "-142.65, 101.98, 133.67, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-68.3178, 46.5442, 12.8441, 0.52", "-73.5747, 49.5524, 16.2355, 0.29", "-79.1422, 51.7306, 19.7962, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-26.7312, 112.773, -116.093, 0.22", "-26.1211, 114.31, -120.856, 0.22", "-26.0059, 114.6, -121.755, 1.55", "-25.7711, 115.191, -123.588, 0.29", "-25.7221, 115.315, -123.971, 0.29", "-25.6982, 115.375, -124.158, 0.29", "-25.5754, 115.685, -125.116, 1.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-26.7312, 112.773, -116.093, 0.29", "-27.6982, 112.416, -115.624, 0.29", "-28.0633, 112.316, -115.295, 0.22", "-28.2272, 112.278, -115.105, 0.22", "-29.0454, 112.089, -114.081, 1.11", "-30.05, 111.864, -112.784, 0.29", "-30.3313, 111.801, -112.423, 0.29", "-31.8508, 111.423, -110.254, 0.29", "-32.4834, 111.264, -109.272, 0.22", "-32.5726, 111.243, -109.13, 0.22", "-32.6153, 111.234, -109.051, 0.22", "-32.8001, 111.206, -108.661, 0.37", "-32.8743, 111.189, -108.505, 0.37", "-34.0164, 110.786, -106.55, 0.22", "-34.2112, 110.718, -106.2, 0.52", "-35.0724, 110.422, -104.558, 0.88" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-26.1522, 124.523, -3.98758, 0.44", "-26.7814, 126.14, -5.10537, 0.44", "-26.913, 126.503, -5.28696, 0.44", "-26.9855, 126.72, -5.37078, 0.44", "-27.2391, 127.511, -5.63202, 0.52", "-27.4429, 128.083, -5.80508, 0.44", "-27.7039, 128.725, -5.98161, 0.22", "-27.8353, 129.049, -6.03322, 0.22", "-28.0693, 129.437, -6.10511, 0.66", "-28.1744, 129.555, -6.14986, 0.66", "-28.7884, 129.975, -6.46861, 0.22", "-29.1123, 130.142, -6.63789, 0.22", "-29.7981, 130.452, -7.00105, 0.81", "-30.4057, 130.7, -7.31558, 0.96", "-31.5918, 131.15, -7.9012, 0.59", "-32.4821, 131.489, -8.3095, 0.22", "-33.3541, 131.805, -8.7088, 0.22", "-33.5953, 131.895, -8.81823, 0.52", "-33.7429, 131.954, -8.87627, 0.52", "-34.3222, 132.221, -9.09014, 0.22", "-34.7885, 132.488, -9.12915, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-26.1522, 124.523, -3.98758, 0.59", "-24.2924, 125.078, -5.62456, 0.59", "-23.8391, 125.234, -6.03926, 0.59", "-23.3247, 125.464, -6.6215, 0.59", "-22.8317, 125.736, -7.22848, 0.59", "-22.0459, 126.251, -8.19459, 0.37", "-21.8228, 126.419, -8.49291, 0.74", "-21.4146, 126.852, -9.06107, 0.74", "-20.7636, 127.711, -10.0415, 0.74", "-20.486, 128.187, -10.5211, 0.6", "-20.0907, 128.977, -11.2526, 0.52", "-19.7267, 129.88, -12.0194, 0.3", "-19.3028, 130.955, -12.8739, 0.81", "-19.0069, 131.679, -13.4067, 1.25", "-18.0532, 133.764, -14.8156, 0.29", "-17.85, 134.194, -15.1038, 0.52", "-17.4107, 135.013, -15.5369, 0.44", "-16.7326, 136.062, -16.0062, 0.44", "-16.3924, 136.488, -16.1828, 1.33", "-15.2888, 137.594, -16.5652, 0.52", "-14.9488, 137.898, -16.619, 0.88", "-12.683, 139.988, -16.8509, 0.59", "-11.4031, 141.273, -16.8636, 0.44", "-11.0385, 141.753, -16.8325, 0.59", "-10.8376, 142.253, -16.7486, 0.59", "-10.9598, 143.645, -16.402, 0.29", "-11.0693, 144.301, -16.0643, 0.29", "-11.1907, 144.784, -15.7801, 0.29", "-11.2221, 144.924, -15.6867, 0.29", "-11.4355, 145.91, -15.0022, 1.33", "-11.5633, 146.607, -14.5295, 1.33", "-11.792, 148.699, -13.2155, 0.37", "-11.8848, 149.488, -12.7843, 0.37", "-11.9349, 149.854, -12.6067, 0.88", "-12.023, 150.406, -12.3781, 1.03", "-12.2636, 151.561, -12.0077, 0.44", "-12.4164, 152.209, -11.893, 1.18", "-12.6841, 153.293, -11.8762, 1.4", "-12.9662, 154.605, -11.912, 0.44", "-13.0379, 154.97, -11.9372, 0.44", "-13.2066, 155.975, -12.0504, 1.25", "-13.3988, 157.502, -12.2951, 0.37", "-13.5224, 158.618, -12.5712, 0.37", "-13.5668, 159.096, -12.7734, 0.37", "-13.6211, 159.72, -13.1092, 1.25", "-13.6822, 160.323, -13.4444, 1.25", "-13.7783, 161.236, -13.9575, 1.25", "-13.8849, 162.168, -14.4738, 1.25", "-14.1049, 164.267, -15.6907, 0.44", "-14.1847, 165.026, -16.1879, 0.44", "-14.2818, 165.803, -16.7641, 0.44", "-14.3561, 166.217, -17.0929, 0.44", "-14.4527, 166.825, -17.6027, 1.18", "-14.5267, 167.475, -18.1294, 0.88", "-14.6507, 169.022, -19.4153, 0.88", "-14.6927, 169.819, -20.1207, 0.74", "-14.7021, 170.225, -20.4871, 0.74", "-14.7459, 171.386, -21.4523, 0.52", "-14.7691, 171.961, -21.8468, 0.52", "-14.7707, 172.413, -22.0989, 0.96", "-14.7585, 172.569, -22.1597, 0.96", "-14.6665, 173.438, -22.4168, 0.44", "-14.5238, 174.133, -22.6131, 0.81", "-14.3968, 174.646, -22.755, 0.44", "-13.9233, 176.011, -23.1556, 0.22", "-13.7523, 176.411, -23.2466, 0.74", "-13.272, 177.44, -23.4684, 0.52", "-12.3965, 179.082, -23.7875, 0.44", "-12.0225, 179.717, -23.9121, 1.69", "-11.4654, 180.597, -24.0775, 1.69", "-10.6787, 181.701, -24.1759, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "30.9157, 85.0178, -16.2198, 0.29", "31.4593, 87.4714, -15.7302, 0.29", "31.6076, 88.1322, -15.6381, 0.66", "31.7103, 88.5708, -15.5974, 1.03", "31.7805, 88.8223, -15.5731, 1.03", "32.3648, 90.704, -15.409, 0.44", "32.5959, 91.3797, -15.3644, 0.44", "32.8599, 92.0562, -15.3879, 0.59", "33.0752, 92.5346, -15.4102, 0.59", "33.7199, 93.8592, -15.5071, 0.29", "33.8864, 94.1754, -15.5403, 0.66", "34.2214, 94.6864, -15.6482, 1.03", "34.3926, 94.9245, -15.7269, 1.4", "34.8057, 95.4737, -15.9428, 1.03", "35.1995, 95.9897, -16.1962, 0.96", "35.1995, 95.9897, -16.1962, 1.03", "35.6594, 96.608, -16.6383, 1.03", "36.2595, 97.4155, -17.2356, 0.81" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "30.9157, 85.0178, -16.2198, 0.44", "31.995, 85.9621, -16.8559, 0.44", "32.4264, 86.2864, -17.1272, 0.52", "32.8555, 86.577, -17.3993, 0.88", "33.1376, 86.7618, -17.5786, 0.96", "33.3002, 86.8651, -17.6738, 0.88", "34.8756, 87.8536, -18.5518, 0.44", "35.6787, 88.3513, -18.9953, 0.44", "36.4095, 88.8118, -19.3947, 0.44", "36.7842, 89.0565, -19.5928, 0.44", "37.461, 89.5144, -19.9489, 0.66", "37.9976, 89.899, -20.2256, 1.03", "38.637, 90.4135, -20.5422, 0.96", "39.0241, 90.7791, -20.7961, 0.66", "39.6465, 91.4307, -21.3136, 0.44", "40.1197, 91.9557, -21.7911, 0.44", "40.369, 92.2507, -22.0946, 0.88", "40.5342, 92.4541, -22.3139, 0.88", "41.3273, 93.4617, -23.4024, 0.37", "41.5066, 93.6976, -23.6458, 0.37", "41.7161, 93.9739, -23.9111, 0.66", "42.0276, 94.3975, -24.1909, 0.96", "42.326, 94.8156, -24.3864, 0.88", "42.9304, 95.627, -24.6978, 0.44", "43.3368, 96.148, -24.829, 0.59", "43.814, 96.789, -24.9643, 0.59", "44.9019, 98.2968, -25.2114, 0.52", "45.326, 98.8994, -25.2729, 1.0", "50.0878, 106.216, -30.6281, 1.0" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.9508, 106.88, -31.2084, 0.29", "12.2252, 109.484, -29.6587, 0.29", "12.5255, 109.849, -29.4685, 0.29", "13.0429, 110.512, -29.1584, 0.22", "13.4699, 111.076, -28.9122, 0.22", "13.728, 111.447, -28.7581, 0.22", "13.9783, 111.821, -28.618, 0.44", "14.2263, 112.229, -28.5536, 0.52", "14.3031, 112.388, -28.5248, 0.52", "14.3357, 112.47, -28.5118, 0.52", "14.7042, 113.49, -28.1567, 0.07", "14.9458, 114.138, -27.8483, 0.07", "15.1536, 114.668, -27.5541, 0.37", "15.3903, 115.233, -27.2017, 0.52", "15.63, 115.827, -26.8326, 0.52", "16.1839, 117.262, -25.9706, 0.88", "16.2985, 117.583, -25.7823, 0.88", "16.356, 117.761, -25.6874, 0.88", "16.7314, 118.885, -25.1812, 0.22", "16.9516, 119.48, -24.9568, 0.22", "17.0749, 119.781, -24.8564, 0.44", "17.1884, 120.036, -24.7994, 0.44", "17.5136, 120.742, -24.6199, 0.37", "17.5989, 120.924, -24.5682, 0.37", "17.7681, 121.287, -24.4567, 0.37", "18.3977, 122.543, -23.9878, 0.44", "18.4861, 122.71, -23.9207, 0.74", "18.6501, 123.013, -23.788, 0.74", "18.6859, 123.075, -23.7621, 0.74", "18.7525, 123.199, -23.7311, 0.81", "19.0455, 123.712, -23.7045, 0.52", "19.2068, 123.969, -23.7714, 0.29", "19.3147, 124.122, -23.8123, 0.29", "19.8639, 124.938, -24.0297, 0.22", "20.2787, 125.552, -24.2006, 0.22", "20.6265, 126.063, -24.347, 0.59", "21.0506, 126.72, -24.5413, 0.74", "21.4591, 127.377, -24.7435, 0.81", "21.8127, 127.921, -24.9283, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.9508, 106.88, -31.2084, 0.74", "9.86772, 107.511, -31.4497, 0.74", "9.69273, 108.92, -31.9402, 0.29", "9.68888, 109.133, -32.0135, 0.22", "9.68286, 109.374, -32.1245, 0.22", "9.65949, 109.785, -32.3234, 0.22", "9.63654, 110.059, -32.4559, 0.22", "9.53205, 111.017, -32.9247, 0.96", "9.3609, 112.105, -33.448, 0.96", "9.14264, 113.206, -33.9871, 0.29", "8.98037, 113.907, -34.3356, 0.22", "8.89672, 114.198, -34.4762, 0.15", "8.75509, 114.606, -34.6581, 0.15", "8.58828, 114.984, -34.7943, 0.15", "8.48871, 115.194, -34.845, 0.44", "8.44002, 115.34, -34.8652, 0.81", "8.34719, 115.831, -34.9694, 0.74", "8.33464, 116.051, -35.0249, 0.88", "8.35266, 116.348, -35.106, 0.81", "8.45871, 117.186, -35.3274, 0.15", "8.48718, 117.35, -35.373, 0.15", "8.60703, 117.888, -35.5292, 0.15", "8.75959, 118.353, -35.6178, 0.15", "9.01145, 119.0, -35.7043, 0.96", "9.035, 119.056, -35.7096, 0.96", "9.13348, 119.283, -35.7231, 1.11", "9.27361, 119.623, -35.7401, 1.18", "9.92224, 121.245, -35.8039, 0.22", "10.3068, 122.204, -35.8426, 0.22", "10.4189, 122.498, -35.8584, 0.22", "10.5982, 122.949, -35.9177, 0.29", "10.7951, 123.43, -36.0126, 0.29", "10.9895, 123.888, -36.1409, 0.88", "11.0716, 124.068, -36.2158, 1.33", "11.3246, 124.577, -36.4414, 1.33", "11.9848, 125.805, -37.0188, 0.22", "12.1507, 126.144, -37.1801, 0.44", "12.292, 126.456, -37.3293, 0.88", "12.4352, 126.812, -37.4954, 0.88", "12.6127, 127.314, -37.7118, 0.52", "12.6585, 127.463, -37.7701, 0.52", "12.8959, 128.602, -38.1373, 0.15", "12.9804, 129.005, -38.2726, 0.15", "12.9931, 129.07, -38.2989, 0.15", "13.1036, 129.594, -38.5485, 0.15", "13.1277, 129.693, -38.6033, 0.15", "13.2592, 130.145, -38.8743, 0.15", "13.3661, 130.422, -39.0916, 0.59", "13.6022, 131.049, -39.6137, 0.66", "13.7043, 131.318, -39.8462, 0.59", "13.7306, 131.388, -39.9072, 0.59", "13.8969, 131.815, -40.243, 0.52", "14.2753, 132.771, -40.9032, 0.15", "14.4783, 133.267, -41.1805, 0.15", "14.5063, 133.329, -41.2044, 0.15", "14.6783, 133.71, -41.3224, 0.15", "14.9131, 134.274, -41.4531, 0.88", "15.0526, 134.649, -41.5067, 1.18", "15.2612, 135.308, -41.5379, 0.74", "15.5416, 136.367, -41.566, 0.22", "15.6094, 136.657, -41.5731, 0.22", "15.7215, 137.202, -41.5899, 0.22", "15.8001, 137.638, -41.6114, 0.22", "15.8743, 138.078, -41.6373, 0.22", "15.9736, 138.707, -41.684, 0.37", "16.0077, 138.928, -41.7102, 0.59", "16.0936, 139.348, -41.7722, 0.59", "16.1194, 139.451, -41.7904, 0.44", "16.2858, 140.062, -41.9119, 0.29", "16.3767, 140.387, -41.9839, 0.29", "16.5678, 140.924, -42.1338, 0.15", "16.7432, 141.346, -42.2629, 0.15", "16.7778, 141.41, -42.2753, 0.15", "17.0749, 141.851, -42.332, 0.15", "17.4979, 142.385, -42.3708, 0.96", "18.0601, 143.014, -42.4019, 1.18", "18.2848, 143.24, -42.4065, 0.96", "19.3807, 144.294, -42.4087, 0.15", "19.7781, 144.68, -42.4339, 0.15", "19.9975, 144.901, -42.4542, 0.15", "20.2885, 145.195, -42.4753, 0.29", "20.2885, 145.195, -42.4753, 0.74", "20.555, 145.548, -42.574, 1.03", "20.8662, 146.164, -43.1003, 1.03", "20.9321, 146.354, -43.2741, 1.03" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "-8.27265, -58.2443, 20.2782, 0.37", "-7.89422, -58.5299, 20.3536, 0.37", "-7.43718, -58.8842, 20.4468, 0.37", "-7.06086, -59.176, 20.5235, 0.37", "-7.02554, -59.2034, 20.5307, 0.37", "-6.76607, -59.4046, 20.5836, 0.74", "-6.68176, -59.4699, 20.6008, 1.11", "-6.46746, -59.6354, 20.6517, 1.11", "0.547588, -62.5173, 21.0451, 1.11", "7.51969, -65.406, 21.886, 1.11" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "-8.27265, -58.2443, 20.2782, 0.22", "-8.6714, -57.8836, 18.4512, 0.22", "-8.71968, -57.8213, 18.2104, 0.37", "-8.76064, -57.7546, 17.9888, 0.52", "-9.01056, -57.2359, 16.4862, 0.52", "-9.04597, -57.1534, 16.2715, 0.74", "-9.11808, -56.9855, 15.8344, 0.88", "-9.17268, -56.7967, 15.5423, 1.03", "-9.18452, -56.7309, 15.4489, 1.03", "-9.19427, -56.586, 15.2659, 1.03", "-9.16726, -56.4048, 15.1494, 1.03", "-9.49965, -52.3054, 5.0885, 1.03", "-7.90334, -48.4363, -4.95104, 1.03" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "9.62243, -58.2622, 8.9125, 0.29", "10.2848, -58.8522, 9.45635, 0.29", "10.968, -59.512, 10.0394, 0.44", "11.2357, -59.7787, 10.2687, 0.81", "11.3631, -59.9057, 10.3778, 0.81", "12.3115, -60.8503, 11.1899, 0.29", "12.5879, -61.1257, 11.4266, 0.29", "12.6208, -61.1664, 11.4661, 0.29", "12.6562, -61.2153, 11.5091, 0.66", "17.8477, -66.2479, 16.9044, 0.66", "21.9608, -70.9181, 23.4431, 0.66" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "9.62243, -58.2622, 8.9125, 0.29", "9.18845, -59.8638, 8.69808, 0.29", "8.96999, -60.67, 8.59015, 0.29", "8.69774, -61.6747, 8.45563, 0.29", "8.59604, -62.05, 8.40539, 0.29", "2.51598, -75.32, 7.91556, 0.29", "-1.12933, -89.2869, 9.91339, 0.29", "-3.68667, -103.281, 13.0702, 0.29" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "163.462, -28.7752, -45.1149, 0.29", "164.704, -28.1864, -46.0582, 0.29", "165.481, -27.8092, -46.6443, 0.29", "165.771, -27.675, -46.8564, 0.66", "166.263, -27.4112, -47.104, 0.66", "167.37, -26.7152, -47.6097, 0.22", "168.245, -26.1045, -48.0044, 0.22", "168.742, -25.6708, -48.2412, 0.59", "168.923, -25.4864, -48.3292, 0.88", "170.543, -23.6591, -49.0032, 0.22", "171.228, -22.8597, -49.2537, 0.22", "171.471, -22.5737, -49.3207, 0.22", "171.791, -22.147, -49.4081, 0.81", "172.14, -21.6608, -49.516, 0.81", "173.333, -20.1035, -49.9624, 0.29", "173.781, -19.5961, -50.1555, 0.88", "174.52, -18.8845, -50.4342, 0.66", "174.897, -18.5464, -50.5643, 0.22", "175.272, -18.2306, -50.6845, 0.29", "176.221, -17.5326, -51.0034, 0.29", "176.815, -17.1628, -51.2766, 0.59", "177.162, -16.9551, -51.4478, 0.96" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "163.462, -28.7752, -45.1149, 0.29", "162.729, -28.7201, -44.916, 0.29", "161.982, -28.625, -44.7851, 0.29", "161.569, -28.5558, -44.7315, 0.29", "161.234, -28.5107, -44.6723, 0.29", "160.767, -28.4631, -44.5208, 0.81", "160.426, -28.4475, -44.3683, 0.22", "160.137, -28.4625, -44.1889, 0.37", "159.752, -28.4783, -43.9374, 0.22", "159.079, -28.5416, -43.414, 0.22", "158.391, -28.6822, -42.7318, 0.88", "158.114, -28.7784, -42.3716, 1.25", "157.995, -28.8363, -42.1798, 1.33" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "119.931, -113.602, -85.6366, 0.37", "120.83, -114.637, -87.8652, 0.37", "121.098, -114.948, -88.4733, 0.37", "121.274, -115.148, -88.8336, 0.96", "121.397, -115.279, -89.062, 1.18", "122.715, -116.577, -91.2942, 0.52", "123.022, -116.856, -91.7792, 0.52", "123.302, -117.048, -92.1288, 0.52", "123.708, -117.291, -92.6451, 0.29", "123.991, -117.429, -92.9849, 0.29", "124.213, -117.493, -93.2159, 0.96", "124.424, -117.492, -93.3675, 0.96", "125.084, -117.395, -94.0038, 0.22", "125.573, -117.286, -94.6977, 0.88", "125.604, -117.278, -94.756, 0.88", "125.8, -117.277, -95.3119, 1.25", "125.817, -117.281, -95.3662, 1.25", "126.083, -117.369, -96.2216, 1.25", "126.457, -117.533, -97.4249, 0.96", "126.477, -117.541, -97.4776, 0.96", "127.315, -117.839, -99.4164, 0.22", "127.544, -117.912, -99.8982, 0.59", "127.72, -117.959, -100.234, 0.59", "127.821, -117.98, -100.417, 0.96", "128.623, -118.084, -101.773, 0.22", "128.703, -118.089, -101.915, 0.22", "129.097, -118.079, -102.629, 0.66", "129.353, -118.071, -103.132, 1.18", "130.192, -117.973, -104.729, 0.22", "130.432, -117.918, -105.158, 0.96", "131.308, -117.699, -106.864, 0.22", "131.455, -117.678, -107.18, 0.81", "131.475, -117.688, -107.255, 0.81", "132.279, -115.509, -104.188, 0.37", "132.54, -114.997, -103.656, 0.88" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "119.931, -113.602, -85.6366, 0.29", "119.149, -115.395, -86.7467, 0.29", "118.959, -115.91, -87.0505, 0.29", "118.815, -116.337, -87.296, 0.66", "118.557, -117.188, -87.7616, 0.66", "117.805, -119.895, -89.1355, 0.44", "117.744, -120.141, -89.2487, 0.74", "117.63, -120.749, -89.5495, 0.29", "117.62, -120.801, -89.5773, 0.29", "117.552, -121.164, -89.7854, 0.96", "117.326, -122.388, -90.4916, 0.52", "117.232, -122.893, -90.779, 1.11", "116.656, -125.928, -92.4919, 0.22", "116.623, -126.093, -92.5846, 1.03", "116.253, -128.08, -93.6538, 0.37", "116.236, -128.178, -93.7063, 0.37", "116.162, -128.715, -93.9765, 0.37", "116.062, -129.565, -94.3454, 0.37", "116.048, -129.747, -94.3952, 0.37", "116.013, -130.307, -94.5356, 0.37", "115.874, -131.801, -94.9708, 0.22", "115.826, -132.158, -95.0913, 0.52", "115.695, -132.862, -95.369, 0.37", "115.46, -133.938, -95.8401, 0.81", "115.362, -134.325, -96.0185, 0.81", "114.814, -136.307, -96.9736, 0.44", "114.664, -136.828, -97.2226, 0.59", "114.245, -138.358, -97.9462, 0.22", "114.245, -138.358, -97.9462, 0.74", "113.756, -140.689, -99.0011, 0.52", "113.52, -141.892, -99.5491, 0.96", "113.511, -141.947, -99.5732, 0.96", "113.364, -142.995, -100.081, 0.52", "113.294, -143.613, -100.389, 0.52", "113.122, -145.414, -101.298, 0.96", "113.114, -145.577, -101.383, 0.96", "113.098, -145.816, -101.515, 0.96", "112.931, -147.472, -102.507, 0.52", "112.91, -147.586, -102.588, 0.88" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-61.7427, -72.4845, 39.1196, 0.29", "-69.885, -79.4854, 45.1944, 0.29" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-61.7427, -72.4845, 39.1196, 0.44", "-70.0761, -78.8443, 43.7596, 0.29", "-78.014, -83.7781, 50.4699, 0.29", "-85.6877, -88.5603, 57.5924, 0.29", "-92.7381, -92.8496, 65.6328, 0.29", "-99.8196, -95.8792, 74.227, 0.29", "-105.165, -98.0721, 84.2288, 0.29", "-109.945, -98.3139, 94.7448, 0.29", "-114.872, -98.2929, 105.195, 0.29", "-121.112, -98.2353, 114.918, 0.29", "-125.864, -99.5694, 125.365, 0.29", "-132.667, -101.237, 134.552, 0.29", "-138.944, -102.215, 144.204, 0.29", "-146.032, -102.762, 153.313, 0.29", "-155.438, -103.648, 159.963, 0.29", "-163.678, -103.608, 168.062, 0.29", "-172.445, -103.742, 175.588, 0.29" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-73.2484, 36.3488, -104.989, 0.52", "-73.4444, 35.0763, -109.386, 0.52", "-73.4503, 35.011, -109.574, 0.52", "-73.4547, 34.9162, -109.805, 0.52", "-73.4564, 34.8043, -110.04, 0.59", "-73.4563, 34.6661, -110.302, 0.66", "-73.4605, 34.5412, -110.535, 0.66", "-73.4847, 33.2558, -112.347, 0.29", "-73.5007, 33.0105, -112.704, 0.29", "-73.5285, 32.8239, -113.075, 0.44", "-73.5383, 32.7699, -113.208, 0.66", "-73.6442, 32.1182, -115.218, 0.52", "-73.6466, 32.0998, -115.283, 0.81", "-73.6503, 32.0121, -115.633, 0.81", "-73.6218, 31.336, -118.769, 0.29", "-73.6088, 31.2653, -119.155, 0.29", "-73.5368, 31.1102, -120.193, 0.88", "-73.4865, 31.0642, -120.614, 1.03", "-73.4223, 31.0199, -121.121, 1.03", "-73.4089, 31.0244, -121.49, 1.03", "-73.4158, 31.04, -121.696, 1.03", "-73.4458, 31.0808, -122.113, 1.03", "-73.5105, 31.1383, -122.539, 1.03", "-73.5336, 31.1587, -122.67, 1.03", "-74.3093, 31.8014, -126.517, 0.66", "-74.3235, 31.8122, -126.584, 0.66", "-74.3556, 31.8373, -126.729, 0.74", "-74.992, 32.359, -129.573, 0.15", "-75.0343, 32.4015, -129.776, 0.15", "-75.1789, 32.5604, -130.42, 0.52", "-75.1975, 32.5836, -130.491, 0.52", "-75.2686, 32.6775, -130.976, 0.59", "-75.254, 32.6676, -131.093, 0.59", "-75.0491, 32.4923, -131.361, 0.59", "-74.8766, 32.3515, -131.562, 0.59", "-73.9895, 31.6848, -132.45, 0.15", "-73.7215, 31.4785, -132.741, 0.15", "-73.532, 31.3344, -132.947, 0.74", "-73.4242, 31.2553, -133.083, 1.11", "-73.2643, 31.1455, -133.308, 1.11", "-72.6119, 30.7666, -134.253, 0.29", "-72.02, 30.4804, -135.113, 0.29", "-71.8699, 30.4181, -135.354, 0.29", "-71.2448, 30.1897, -136.431, 0.22", "-71.1751, 30.1669, -136.556, 0.22", "-71.0211, 30.1232, -136.854, 0.22", "-70.989, 30.1191, -136.926, 0.22", "-70.7658, 30.1149, -137.323, 0.66", "-70.6925, 30.1118, -137.45, 0.66", "-70.4571, 30.083, -137.634, 0.88", "-70.4065, 30.0679, -137.675, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-73.2484, 36.3488, -104.989, 0.37", "-74.366, 35.7425, -105.232, 0.37", "-74.9841, 35.4189, -105.353, 0.22", "-75.7391, 35.0257, -105.56, 0.81", "-76.2101, 34.7719, -105.709, 0.81", "-77.5623, 33.9966, -106.181, 0.52", "-78.0033, 33.7317, -106.344, 0.37", "-78.448, 33.4258, -106.719, 0.37", "-79.0787, 32.9485, -107.538, 0.37", "-79.2091, 32.8408, -107.765, 0.66", "-79.3593, 32.7087, -108.089, 0.81", "-79.402, 32.6728, -108.204, 0.96", "-80.8332, 31.7335, -111.799, 0.37", "-80.9145, 31.6954, -111.972, 0.37", "-80.9596, 31.6776, -112.062, 0.59", "-81.0722, 31.6335, -112.278, 0.74", "-82.2353, 31.1495, -114.421, 1.03", "-82.6566, 30.9475, -115.176, 0.44", "-83.1697, 30.6948, -116.017, 0.44", "-85.0736, 29.6826, -119.282, 0.59", "-85.3099, 29.5422, -119.709, 0.74", "-85.5231, 29.3881, -120.127, 0.74", "-85.6593, 29.2408, -120.451, 0.74" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-81.1827, 125.073, -121.952, 0.22", "-81.3886, 126.475, -121.788, 0.22", "-81.4253, 126.634, -121.78, 0.22", "-81.5298, 126.784, -122.014, 0.22", "-81.5982, 126.897, -122.195, 0.22", "-81.8232, 127.341, -122.838, 0.37", "-81.8888, 127.485, -123.03, 0.66", "-81.9086, 127.532, -123.096, 0.88", "-82.6285, 129.551, -125.9, 0.29", "-82.7177, 129.866, -126.334, 0.29", "-82.8133, 130.257, -126.854, 0.44", "-82.8591, 130.495, -127.155, 0.52", "-82.9394, 130.921, -127.66, 0.22", "-82.9763, 131.146, -127.885, 0.22", "-83.0019, 131.281, -127.958, 0.37", "-83.2858, 131.799, -128.384, 0.22", "-83.4067, 131.919, -128.53, 0.29", "-83.5003, 132.0, -128.641, 0.66", "-83.5374, 132.031, -128.693, 0.66", "-84.0651, 132.57, -129.752, 0.37", "-84.0948, 132.616, -129.846, 0.22", "-84.1053, 132.645, -129.911, 0.15", "-84.1706, 132.904, -130.516, 0.15", "-84.1533, 133.211, -131.265, 0.88", "-84.127, 133.331, -131.545, 0.88", "-84.0466, 133.801, -132.806, 0.44", "-84.0208, 134.138, -133.783, 0.44", "-84.0198, 134.189, -133.932, 0.74", "-84.0284, 134.67, -135.382, 0.22", "-84.0203, 134.769, -135.662, 0.22", "-83.8579, 135.477, -137.62, 0.22", "-83.8345, 135.547, -137.841, 0.66", "-83.8099, 135.684, -138.256, 0.66", "-83.8056, 135.787, -138.554, 0.66", "-83.8216, 136.065, -139.299, 0.15", "-83.8149, 136.155, -139.514, 0.66", "-83.6356, 137.245, -141.794, 0.15", "-83.6215, 137.412, -142.133, 0.22", "-83.621, 137.533, -142.368, 0.22", "-83.654, 137.819, -142.944, 0.81", "-83.687, 137.999, -143.3, 0.81", "-83.7711, 138.638, -144.517, 0.29", "-83.7679, 138.903, -144.952, 0.29", "-83.7696, 138.972, -145.076, 0.52", "-83.8614, 139.772, -146.628, 0.44", "-83.886, 139.87, -146.837, 0.44" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-81.1827, 125.073, -121.952, 1.03", "-81.1697, 124.386, -121.928, 1.03", "-81.1144, 123.631, -121.923, 0.29", "-81.0652, 123.21, -121.931, 0.29", "-81.0115, 122.788, -121.943, 0.22", "-80.9687, 122.49, -121.952, 0.22", "-80.9245, 122.21, -121.963, 0.37", "-80.8639, 121.904, -121.977, 0.37", "-80.6667, 121.221, -122.002, 0.22", "-80.5851, 120.97, -122.012, 0.22", "-80.4975, 120.725, -122.023, 0.37", "-80.4451, 120.586, -122.029, 0.37", "-80.0998, 119.683, -122.047, 0.22", "-80.0142, 119.276, -122.133, 0.22", "-80.0166, 119.238, -122.154, 0.22", "-80.0857, 119.069, -122.306, 0.22", "-80.2135, 118.917, -122.481, 0.22", "-80.4004, 118.763, -122.678, 0.74", "-81.9124, 117.805, -124.068, 0.59", "-82.0582, 117.715, -124.193, 0.52", "-82.1154, 117.681, -124.241, 0.52", "-82.5233, 117.479, -124.576, 0.29", "-82.7581, 117.387, -124.769, 0.29", "-83.2442, 117.214, -125.166, 0.37", "-83.4191, 117.154, -125.308, 0.44", "-83.4576, 117.141, -125.341, 0.44", "-84.458, 116.807, -126.22, 0.44", "-84.6206, 116.755, -126.365, 0.44", "-84.8602, 116.687, -126.562, 0.44", "-85.7652, 116.464, -127.235, 0.22", "-85.9695, 116.412, -127.379, 0.22", "-86.1941, 116.339, -127.532, 0.22", "-86.2897, 116.283, -127.584, 0.37", "-86.3441, 116.248, -127.615, 0.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-115.049, 25.7897, -9.93327, 0.29", "-116.364, 26.4476, -12.186, 0.29", "-116.59, 26.5498, -12.5569, 0.66", "-116.677, 26.589, -12.6994, 0.66", "-118.037, 27.205, -14.9362, 0.29", "-119.474, 27.8554, -17.2983, 1.18", "-119.73, 27.9712, -17.7189, 1.62", "-119.89, 28.0545, -18.0037, 1.62" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-115.049, 25.7897, -9.93327, 0.22", "-114.789, 27.754, -10.0652, 0.22", "-114.763, 27.944, -10.0779, 0.37", "-114.614, 29.0739, -10.1538, 0.29", "-114.568, 29.4165, -10.1768, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-25.5754, 115.685, -125.116, 0.29", "-26.542, 116.333, -125.308, 0.29", "-26.5967, 116.377, -125.318, 0.29", "-27.3265, 117.056, -125.633, 0.59", "-27.6121, 117.341, -125.799, 0.66", "-27.8715, 117.62, -125.997, 0.52", "-27.9382, 117.696, -126.052, 0.52", "-28.3541, 118.195, -126.442, 0.37", "-29.3115, 119.281, -127.362, 0.66", "-29.794, 119.784, -127.811, 0.74", "-30.6079, 120.533, -128.498, 0.29", "-31.2609, 121.07, -128.996, 0.29", "-32.0933, 121.723, -129.602, 0.66", "-32.5388, 122.046, -129.905, 0.52", "-33.3203, 122.558, -130.333, 0.29", "-34.0516, 122.98, -130.669, 0.52", "-34.5759, 123.226, -130.843, 0.74" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-25.5754, 115.685, -125.116, 0.29", "-25.4291, 116.031, -126.35, 0.29", "-25.4218, 116.048, -126.407, 0.29", "-25.277, 116.382, -127.557, 0.66", "-24.9756, 117.058, -129.879, 0.66", "-24.6482, 117.747, -132.2, 0.22", "-24.5981, 117.854, -132.554, 0.29", "-24.569, 117.939, -132.842, 0.29", "-24.4516, 118.295, -133.998, 0.22", "-24.4331, 118.349, -134.166, 0.59", "-24.3745, 118.47, -134.457, 0.59", "-24.201, 118.803, -135.085, 0.59", "-24.0503, 119.155, -135.761, 0.29", "-24.0037, 119.27, -135.97, 0.29", "-23.8228, 119.721, -136.697, 0.59", "-23.7798, 119.841, -136.916, 1.03", "-23.7182, 119.981, -137.191, 1.25", "-23.2542, 120.84, -138.91, 0.22", "-23.1739, 120.967, -139.17, 0.22", "-23.0789, 121.107, -139.464, 0.74", "-22.535, 121.866, -141.019, 0.22", "-22.2691, 122.198, -141.704, 0.29", "-22.1716, 122.307, -141.921, 0.29", "-21.846, 122.599, -142.43, 0.59", "-21.7271, 122.699, -142.591, 0.66", "-21.5599, 122.839, -142.744, 0.52", "-21.2141, 123.138, -142.909, 0.22", "-21.0707, 123.28, -142.978, 0.52", "-20.8679, 123.471, -143.057, 0.81", "-20.5273, 123.784, -143.126, 0.74", "-19.8941, 124.304, -143.208, 0.59" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-10.6787, 181.701, -24.1759, 0.22", "-10.9905, 183.055, -24.1914, 0.22", "-11.351, 184.109, -24.2792, 0.22", "-12.1837, 186.136, -24.508, 0.29", "-12.8687, 187.485, -24.6974, 0.29", "-13.3054, 188.239, -24.805, 1.11", "-13.5952, 188.698, -24.8669, 1.33", "-14.8661, 190.485, -25.1349, 0.22", "-15.3659, 191.092, -25.2266, 0.81", "-16.8861, 192.72, -25.461, 0.29", "-18.1199, 193.994, -25.6226, 0.29", "-18.7936, 194.741, -25.7318, 0.52", "-18.7936, 194.741, -25.7318, 0.59", "-19.214, 195.343, -25.8031, 0.37", "-19.7034, 196.145, -25.9288, 0.81", "-19.8722, 196.508, -25.9969, 0.81", "-20.509, 198.235, -26.373, 0.44", "-20.7134, 198.914, -26.5529, 0.44", "-20.8714, 199.503, -26.7175, 0.66", "-21.0194, 200.266, -26.9366, 0.29", "-21.1265, 201.031, -27.182, 0.74", "-21.1846, 201.504, -27.3308, 0.81", "-21.3506, 203.212, -27.8283, 0.29", "-21.4142, 203.882, -28.044, 0.44", "-21.4869, 204.915, -28.4178, 0.52", "-21.5384, 205.947, -28.8398, 0.44" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.6787, 181.701, -24.1759, 0.44", "-10.2987, 182.355, -23.8599, 0.44", "-9.75953, 183.395, -23.3639, 0.44", "-9.15098, 184.624, -22.8404, 0.44", "-8.78601, 185.354, -22.5645, 1.18", "-7.58921, 187.461, -21.3868, 0.59", "-7.11966, 188.222, -20.8675, 0.37", "-6.72247, 188.858, -20.3611, 0.37", "-6.29026, 189.514, -19.7945, 0.59", "-5.94011, 190.007, -19.3586, 1.18", "-3.92406, 192.739, -17.0377, 0.88", "-3.19991, 193.712, -16.2369, 0.96", "-2.70824, 194.355, -15.6863, 0.96", "-2.10264, 195.144, -15.0119, 0.44", "-1.95091, 195.365, -14.8304, 0.59", "-1.51376, 196.038, -14.1423, 0.59", "-0.941452, 197.018, -13.1151, 0.52", "-0.653307, 197.499, -12.4775, 0.29", "-0.543396, 197.668, -12.2149, 0.81", "-0.29388, 198.017, -11.6026, 0.81", "1.47293, 200.208, -7.37945, 0.66", "1.74553, 200.449, -6.85488, 0.74", "1.79122, 200.48, -6.79042, 0.74", "2.1283, 200.679, -6.34805, 0.96", "2.99448, 201.22, -5.26569, 0.29", "3.18752, 201.342, -5.03798, 0.81", "4.40933, 202.277, -3.35978, 0.22", "4.63391, 202.482, -2.82953, 1.33", "5.15122, 203.12, -0.464423, 0.29", "5.191, 203.23, 0.130678, 0.29", "5.13904, 203.306, 0.936519, 0.59", "4.82368, 203.208, 2.26386, 0.29", "4.5016, 202.938, 2.90854, 0.29", "4.14756, 202.498, 3.46261, 0.29", "4.05024, 202.334, 3.56988, 0.88", "3.83868, 201.89, 3.78733, 0.88", "3.69749, 201.295, 3.82782, 0.52", "4.14123, 200.804, 3.11738, 0.44", "4.34265, 200.679, 2.82275, 0.52", "5.13377, 200.443, 1.708, 0.66", "6.01577, 200.342, 0.482677, 0.52", "6.24111, 200.345, 0.183982, 0.52", "6.99022, 200.364, -0.808259, 0.37", "7.28848, 200.357, -1.24624, 0.52", "7.7497, 200.294, -2.00607, 0.22", "8.02003, 200.203, -2.5031, 0.22", "8.32629, 200.019, -3.12677, 0.74", "8.8567, 199.575, -4.22386, 0.37", "9.48742, 198.895, -5.64104, 0.29", "9.80956, 198.488, -6.38822, 0.81", "9.88964, 198.367, -6.58384, 0.96", "10.36, 197.59, -7.80538, 0.29", "10.6083, 197.153, -8.5004, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "36.2595, 97.4155, -17.2356, 0.29", "35.9665, 98.3211, -17.5176, 0.29", "35.7558, 99.0272, -17.7632, 0.29", "35.5935, 99.6029, -17.9999, 0.59", "35.3048, 100.614, -18.4158, 0.59", "35.0277, 101.585, -18.815, 0.52", "34.7601, 102.522, -19.2004, 0.52", "34.5503, 103.27, -19.5145, 0.52", "34.1875, 104.624, -20.1275, 0.52", "33.9733, 105.468, -20.5241, 0.52", "32.5758, 113.516, -25.2616, 0.52", "33.2829, 121.656, -29.974, 0.52", "32.5756, 130.185, -33.9213, 0.52", "30.3832, 137.689, -39.2581, 0.52", "26.7934, 145.752, -42.6639, 0.52", "24.1066, 153.804, -46.8215, 0.52", "22.5428, 162.148, -50.9411, 0.52", "19.9418, 171.009, -52.8648, 0.52", "18.1974, 180.14, -54.4002, 0.52", "15.6942, 188.898, -56.8526, 0.52", "14.4603, 197.562, -60.3511, 0.52", "14.878, 206.232, -64.0016, 0.52", "16.1822, 215.224, -66.4477, 0.52" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "36.2595, 97.4155, -17.2356, 0.52", "38.2871, 97.7726, -16.1971, 0.52", "39.1885, 97.9408, -15.7422, 0.44", "39.4505, 97.9951, -15.614, 0.74", "40.0793, 98.1482, -15.3216, 0.74", "41.2729, 98.4996, -14.8068, 0.52", "48.0784, 101.21, -12.3202, 0.52", "54.7353, 102.3, -8.43222, 0.22", "55.3758, 102.304, -7.99366, 0.22", "55.8955, 102.167, -7.54448, 0.22", "55.684, 102.355, -7.82993, 0.22", "55.3521, 102.811, -8.41007, 0.74", "55.1854, 103.07, -8.72989, 1.11", "55.7966, 103.798, -8.994, 0.96", "56.1624, 104.209, -9.13192, 1.25", "56.6726, 104.768, -9.30967, 1.25", "56.9194, 105.039, -9.39576, 1.25", "57.8197, 106.077, -9.71682, 1.25", "58.5813, 106.978, -9.96277, 0.52", "58.7387, 107.178, -10.0154, 0.66", "58.7919, 107.258, -10.0361, 0.66", "58.9843, 107.594, -10.1419, 0.66", "59.0793, 107.746, -10.1904, 0.59", "59.4276, 108.311, -10.3786, 0.59", "59.9898, 109.158, -10.6319, 0.22", "60.4627, 109.868, -10.8372, 0.22", "61.0769, 110.786, -11.1126, 0.22", "61.8004, 111.86, -11.4379, 0.81", "62.3732, 112.644, -11.6871, 0.81", "62.6601, 113.001, -11.8153, 0.44", "63.3488, 113.716, -12.1145, 0.22", "63.9431, 114.257, -12.3873, 0.22", "64.0363, 114.335, -12.4334, 0.22", "64.7314, 114.902, -12.8388, 0.29", "65.3555, 115.363, -13.1892, 0.29", "66.357, 116.152, -13.7619, 0.29", "66.7509, 116.51, -13.9943, 0.88", "66.9981, 116.78, -14.1503, 1.18", "67.3901, 117.283, -14.4226, 1.47", "67.6494, 117.696, -14.6317, 1.77", "68.3786, 119.084, -15.2837, 0.59", "68.7584, 119.953, -15.677, 0.44", "68.9814, 120.492, -15.9067, 0.44", "69.0294, 120.612, -15.9563, 0.44", "69.3163, 121.315, -16.2562, 0.29", "69.7077, 122.239, -16.6728, 0.29", "69.9783, 122.88, -16.9664, 0.52", "70.1553, 123.327, -17.1737, 0.52", "70.3823, 123.856, -17.4045, 0.52", "70.7741, 124.649, -17.7643, 0.29", "70.8123, 124.719, -17.7957, 0.29", "70.8597, 124.8, -17.8312, 0.29", "71.2078, 125.361, -18.0817, 0.44", "71.8405, 126.364, -18.5348, 1.03", "72.197, 126.929, -18.7926, 1.03", "72.5065, 127.412, -19.0258, 1.03", "72.9009, 128.026, -19.3355, 1.11", "73.1891, 128.477, -19.5794, 1.11", "73.5479, 129.051, -19.9044, 1.18", "73.7658, 129.442, -20.1492, 1.11", "73.9681, 129.833, -20.4266, 0.88", "74.0031, 129.891, -20.4799, 0.88", "74.4841, 130.654, -21.2607, 0.52", "74.5199, 130.71, -21.3205, 0.52", "74.8876, 131.261, -21.9451, 0.52", "75.6711, 132.411, -23.2932, 0.22", "76.2005, 133.117, -24.0629, 0.22", "76.3947, 133.364, -24.3084, 0.59", "76.8234, 133.888, -24.7818, 0.88", "76.9795, 134.077, -24.9286, 1.11", "77.0425, 134.147, -24.9631, 1.11", "78.4024, 135.474, -25.2289, 0.29", "78.8099, 135.861, -25.2582, 0.29", "78.8649, 135.896, -25.2492, 0.29", "79.1978, 136.093, -25.172, 0.29", "80.3377, 136.721, -24.8607, 0.44", "80.9105, 136.99, -24.6837, 0.44", "81.3157, 137.108, -24.5179, 0.44", "84.0808, 137.722, -23.3598, 0.59", "94.4594, 144.139, -24.7771, 0.59", "105.18, 150.14, -24.2188, 0.59", "116.112, 155.75, -23.4909, 0.59", "126.596, 161.964, -21.8744, 0.59", "138.085, 166.307, -20.6752, 0.59", "149.73, 169.061, -17.5343, 0.59", "160.958, 172.165, -13.3788, 0.59", "173.068, 173.505, -11.1378, 0.59", "185.272, 173.746, -8.97252, 0.59", "197.267, 176.398, -7.51469, 0.59", "209.385, 178.653, -6.3928, 0.59" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "20.9321, 146.354, -43.2741, 0.22", "22.3304, 147.09, -43.3666, 0.22", "22.8303, 147.373, -43.4122, 0.81", "22.998, 147.48, -43.4343, 0.81", "24.1571, 148.316, -43.6166, 0.22", "24.4752, 148.573, -43.6787, 0.22", "24.5708, 148.657, -43.7003, 0.44", "24.7943, 148.932, -43.7714, 0.44", "25.0951, 149.366, -43.8896, 0.15", "25.2605, 149.661, -43.9798, 0.15", "25.4056, 150.054, -44.1142, 0.15", "25.4648, 150.229, -44.1653, 0.66", "25.5628, 150.521, -44.2459, 1.03", "25.6738, 150.855, -44.3311, 0.66", "25.8145, 151.248, -44.4353, 0.22", "25.8762, 151.404, -44.4813, 0.22", "25.9622, 151.635, -44.5432, 0.22", "26.0462, 151.869, -44.6045, 0.22", "26.0719, 151.947, -44.6237, 0.22", "26.1443, 152.243, -44.6854, 0.74", "26.1879, 152.461, -44.7301, 0.59", "26.2512, 152.766, -44.7952, 0.29", "26.2731, 152.871, -44.8179, 0.22", "26.2986, 152.983, -44.8401, 0.22", "26.5065, 153.824, -44.9958, 0.15", "26.6011, 154.272, -45.0498, 0.15", "26.679, 154.707, -45.079, 0.15", "26.7255, 154.956, -45.0947, 0.15", "26.768, 155.159, -45.1173, 0.29", "26.8479, 155.43, -45.1784, 0.29", "27.1229, 156.022, -45.4383, 1.77", "27.2783, 156.272, -45.6598, 1.77", "27.5332, 156.529, -46.0402, 1.77", "27.854, 156.831, -46.7141, 0.22", "28.0726, 157.089, -47.4016, 0.22", "28.2107, 157.258, -47.9568, 0.22", "28.351, 157.482, -48.8276, 0.44", "28.4313, 157.687, -49.671, 0.22", "28.469, 157.997, -51.0094, 0.44", "28.4196, 158.204, -51.913, 0.44", "28.386, 158.263, -52.1372, 0.44", "28.1387, 158.593, -53.2094, 0.22", "28.0653, 158.679, -53.4518, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "20.9321, 146.354, -43.2741, 0.29", "20.8586, 146.829, -43.2133, 0.29", "20.7997, 147.192, -43.2041, 0.37", "20.7308, 147.605, -43.21, 0.37", "20.6687, 147.982, -43.2201, 0.22", "20.6431, 148.156, -43.227, 0.29", "20.6283, 148.273, -43.2329, 0.29", "20.5607, 148.904, -43.293, 0.22", "20.5273, 149.209, -43.3299, 0.22", "20.5222, 149.258, -43.3374, 0.29", "20.4885, 149.668, -43.4167, 0.29", "20.4663, 149.974, -43.4757, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_131",
    "id" : "dend_131",
    "points3d" : [ "7.51969, -65.406, 21.886, 0.22", "16.2454, -68.973, 24.2921, 0.22", "24.562, -72.6623, 27.7301, 0.22", "32.2442, -77.473, 31.1745, 0.22", "40.3699, -82.3673, 33.1703, 0.22" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "7.51969, -65.406, 21.886, 0.29", "18.6537, -69.8367, 25.3203, 0.22", "29.3316, -75.8824, 27.269, 0.22", "38.5564, -83.2912, 30.9218, 0.22" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "21.9608, -70.9181, 23.4431, 1.33", "25.3413, -74.0501, 26.7754, 1.33", "28.8716, -77.1053, 30.0274, 1.33" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "21.9608, -70.9181, 23.4431, 0.44", "28.42, -76.8453, 29.3397, 1.33", "34.3409, -82.0373, 36.4017, 1.33" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-119.89, 28.0545, -18.0037, 0.96", "-120.417, 27.4307, -19.2714, 0.96", "-121.074, 26.5918, -20.9549, 0.22", "-121.264, 26.3108, -21.4864, 0.74", "-121.73, 25.5464, -22.8689, 0.29", "-121.804, 25.4247, -23.0891, 0.59", "-122.65, 24.036, -25.6008, 0.22", "-122.88, 23.6565, -26.3023, 0.22", "-123.028, 23.3627, -26.8616, 0.59", "-123.072, 23.2884, -27.0208, 0.59" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-119.89, 28.0545, -18.0037, 0.29", "-122.333, 28.903, -19.8556, 0.29", "-122.736, 29.0139, -20.1633, 0.59", "-122.888, 29.049, -20.2632, 0.66", "-123.062, 29.0825, -20.3605, 0.66", "-123.826, 29.2179, -20.794, 0.52", "-124.119, 29.2581, -20.9662, 0.29", "-125.317, 29.3569, -21.6371, 0.44", "-126.098, 29.4111, -22.1208, 0.44", "-127.8, 29.5213, -23.2139, 0.29", "-128.942, 29.5971, -23.9121, 0.59", "-130.321, 29.6914, -24.7481, 0.44", "-130.498, 29.6996, -24.8505, 0.52", "-132.26, 29.7355, -25.79, 0.22", "-132.424, 29.7356, -25.8764, 0.59", "-133.481, 29.7111, -26.381, 0.59", "-134.377, 29.6901, -26.7168, 0.59", "-136.096, 29.701, -27.2, 0.22", "-136.29, 29.7019, -27.2453, 0.44", "-136.382, 29.7068, -27.2516, 0.44" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-19.8941, 124.304, -143.208, 0.15", "-19.4796, 124.438, -143.726, 0.15", "-18.9468, 124.595, -144.358, 0.52", "-18.2041, 124.826, -145.218, 0.59", "-17.8651, 124.934, -145.602, 0.22", "-17.6919, 124.992, -145.795, 0.22", "-17.5407, 125.061, -146.035, 0.22", "-17.5032, 125.089, -146.127, 0.22", "-17.4179, 125.227, -146.572, 0.74", "-17.4149, 125.241, -146.618, 0.74", "-17.4138, 125.261, -146.686, 0.74", "-17.4388, 125.858, -148.701, 0.22", "-17.4502, 125.961, -149.048, 0.66", "-17.5012, 126.321, -150.303, 0.37", "-17.5044, 126.334, -150.351, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-19.8941, 124.304, -143.208, 0.22", "-19.6152, 124.662, -143.133, 0.22", "-19.324, 125.051, -143.044, 0.22", "-19.0622, 125.423, -142.962, 0.81", "-18.6013, 126.117, -142.807, 0.22", "-18.3797, 126.466, -142.751, 0.37", "-18.1723, 126.801, -142.707, 0.29", "-17.9506, 127.182, -142.674, 0.22", "-17.8018, 127.455, -142.657, 0.22", "-17.7388, 127.578, -142.648, 0.66", "-17.4316, 128.244, -142.634, 0.15", "-17.4089, 128.285, -142.631, 0.15", "-17.1492, 128.691, -142.584, 0.15", "-17.094, 128.76, -142.581, 0.15", "-16.7206, 129.192, -142.624, 0.88", "-16.6056, 129.323, -142.647, 0.88", "-16.1348, 129.824, -142.762, 0.15", "-16.0464, 129.914, -142.789, 0.15", "-15.3366, 130.598, -143.058, 1.5", "-14.6491, 131.247, -143.357, 0.29", "-14.4884, 131.408, -143.447, 0.29", "-14.2404, 131.686, -143.61, 0.29", "-14.1767, 131.765, -143.658, 0.29", "-14.1077, 131.85, -143.705, 0.29", "-13.8985, 132.094, -143.812, 0.29", "-13.4831, 132.485, -144.152, 1.03", "-13.1917, 132.757, -144.538, 0.22", "-13.0068, 132.919, -144.823, 0.22", "-12.8513, 133.04, -145.072, 0.22", "-12.7124, 133.132, -145.329, 0.37", "-12.0343, 133.472, -146.656, 0.59", "-11.5697, 133.643, -147.589, 0.59", "-11.3093, 133.738, -148.126, 0.22", "-11.2394, 133.771, -148.294, 0.22", "-10.988, 134.053, -149.38, 0.59", "-10.9441, 134.136, -149.656, 0.59", "-10.932, 134.179, -149.785, 0.59", "-10.9249, 134.361, -150.336, 0.22", "-10.9852, 134.769, -151.551, 1.03", "-11.2168, 135.702, -154.059, 0.29", "-11.2577, 135.837, -154.384, 0.29", "-11.4097, 136.276, -155.408, 0.29", "-11.5072, 136.499, -155.943, 0.29", "-11.533, 136.549, -156.061, 0.29", "-11.645, 136.77, -156.532, 0.29", "-11.6936, 136.865, -156.716, 0.29", "-12.0765, 137.595, -158.136, 1.25", "-12.5743, 138.61, -160.088, 0.29", "-12.652, 138.786, -160.434, 0.29", "-12.8988, 139.317, -161.552, 1.33", "-12.9101, 139.339, -161.602, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "38.5564, -83.2912, 30.9218, 0.29", "50.1422, -84.0616, 27.2808, 0.29" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "38.5564, -83.2912, 30.9218, 0.44", "44.0314, -88.4862, 37.0908, 0.29" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-12.9101, 139.339, -161.602, 0.22", "-12.4972, 140.684, -161.904, 0.22", "-12.4288, 140.828, -161.934, 0.22", "-12.2241, 141.155, -161.996, 0.22", "-11.9331, 141.483, -162.1, 0.59", "-11.4795, 141.874, -162.263, 0.59", "-10.6894, 142.433, -162.603, 0.29", "-10.1794, 142.676, -162.842, 0.29", "-9.76694, 142.819, -163.055, 0.29", "-8.77178, 143.075, -163.581, 0.22", "-8.37656, 143.149, -163.788, 0.22", "-7.52506, 143.275, -164.243, 0.96", "-7.37141, 143.291, -164.336, 1.25", "-5.93061, 143.465, -165.234, 0.15", "-5.65268, 143.507, -165.405, 0.96", "-5.37177, 143.565, -165.566, 0.96", "-5.27782, 143.586, -165.617, 0.96", "-4.16715, 143.833, -166.126, 0.22", "-3.85722, 143.898, -166.252, 0.22", "-3.70086, 143.935, -166.3, 0.22", "-3.62915, 143.946, -166.318, 0.22", "-3.30392, 143.95, -166.366, 0.37", "-3.13186, 143.924, -166.374, 0.37", "-2.59823, 143.772, -166.351, 0.52", "-2.49901, 143.738, -166.346, 0.81", "-2.01749, 143.588, -166.334, 0.81", "-1.07669, 143.35, -166.345, 0.29", "-0.678493, 143.283, -166.362, 0.29", "-0.505756, 143.285, -166.387, 0.29", "-0.166084, 143.354, -166.467, 0.29", "0.697849, 143.654, -166.725, 0.29", "1.05196, 143.824, -166.857, 0.66", "1.40719, 144.034, -167.008, 0.66", "2.38217, 144.642, -167.428, 0.22", "2.56624, 144.764, -167.511, 0.22", "2.85869, 144.971, -167.651, 0.22", "3.21154, 145.217, -167.828, 0.74", "3.46268, 145.366, -167.939, 0.74", "3.61452, 145.434, -167.999, 0.74" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-12.9101, 139.339, -161.602, 0.07", "-13.0823, 139.61, -162.278, 0.07", "-13.1019, 139.648, -162.386, 0.15", "-13.143, 139.719, -162.567, 0.15", "-13.2201, 139.811, -162.793, 0.15", "-13.3499, 139.949, -163.113, 0.15", "-14.2846, 141.015, -165.383, 0.88", "-14.8319, 141.715, -166.835, 0.15", "-15.033, 141.993, -167.388, 1.4", "-15.5723, 142.82, -168.946, 0.29", "-15.6983, 143.026, -169.313, 0.52", "-15.9249, 143.449, -170.005, 0.22", "-15.997, 143.609, -170.189, 0.22", "-16.0365, 143.74, -170.318, 0.22", "-16.0781, 143.991, -170.555, 0.22", "-16.0828, 144.1, -170.646, 0.22", "-16.1442, 145.45, -171.784, 1.03", "-16.1699, 145.907, -172.19, 1.03", "-16.2065, 146.515, -172.728, 0.22", "-16.2318, 146.901, -173.145, 0.22", "-16.2397, 147.035, -173.297, 0.22", "-16.2472, 147.224, -173.508, 0.22", "-16.265, 147.996, -174.342, 0.88", "-16.2669, 148.314, -174.712, 1.11", "-16.2604, 150.019, -176.618, 0.22", "-16.267, 150.322, -176.936, 0.37", "-16.2793, 150.575, -177.169, 0.37", "-16.3004, 150.869, -177.401, 0.37", "-16.313, 150.989, -177.475, 0.37", "-16.4142, 151.781, -177.864, 1.47", "-16.4801, 152.17, -177.979, 1.47", "-16.77, 153.234, -178.433, 0.22", "-16.8651, 153.529, -178.577, 0.22", "-17.0959, 154.237, -178.929, 1.25", "-17.2305, 154.668, -179.14, 1.69", "-17.3525, 155.079, -179.372, 1.69", "-17.813, 156.754, -180.372, 0.29", "-17.8945, 157.12, -180.596, 0.29", "-17.9647, 157.7, -180.929, 0.29", "-17.959, 158.128, -181.19, 0.74", "-17.8079, 159.176, -181.878, 0.07", "-17.7883, 159.248, -181.926, 0.15", "-17.5223, 159.717, -182.2, 0.74", "-16.9526, 160.661, -182.931, 0.66", "-16.5252, 161.416, -183.763, 0.66", "-16.4443, 161.533, -183.931, 0.66" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-16.4443, 161.533, -183.931, 0.22", "-16.1358, 162.244, -184.341, 0.22", "-16.0016, 162.552, -184.506, 0.22", "-15.9703, 162.631, -184.542, 0.22", "-15.8107, 163.092, -184.711, 0.15", "-15.6288, 163.656, -184.882, 0.74", "-15.5913, 163.784, -184.923, 0.66", "-15.5553, 163.982, -184.983, 0.59", "-15.5009, 164.302, -185.085, 0.29", "-15.4579, 164.608, -185.175, 0.22", "-15.4254, 164.861, -185.239, 0.22", "-15.3643, 165.333, -185.354, 0.22", "-15.3501, 165.448, -185.389, 0.66", "-15.2828, 166.002, -185.597, 0.22", "-15.2361, 166.309, -185.736, 0.52", "-15.2156, 166.433, -185.796, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-16.4443, 161.533, -183.931, 0.22", "-16.4572, 162.121, -184.305, 0.22", "-16.4398, 162.369, -184.461, 0.22", "-16.3915, 162.714, -184.701, 0.22", "-16.3007, 163.432, -185.226, 1.11", "-16.2746, 163.66, -185.396, 1.11", "-16.1734, 164.654, -186.128, 0.29", "-16.138, 164.936, -186.334, 0.29", "-16.0685, 165.656, -186.815, 0.88", "-16.0239, 166.483, -187.301, 0.22", "-16.0243, 166.544, -187.337, 0.22", "-16.0352, 166.791, -187.483, 0.22", "-16.0755, 167.138, -187.725, 1.69", "-16.2568, 168.414, -188.71, 0.22", "-16.3112, 168.818, -189.065, 0.22", "-16.4227, 169.821, -190.062, 0.74", "-16.4409, 169.982, -190.262, 0.81", "-16.5302, 171.052, -191.824, 0.22", "-16.5313, 171.095, -191.904, 0.22", "-16.5096, 171.445, -192.684, 0.66", "-16.5051, 171.472, -192.748, 0.81", "-16.3162, 172.303, -194.793, 0.22", "-16.2624, 172.494, -195.276, 0.22", "-16.0615, 173.047, -196.655, 1.03", "-15.9874, 173.24, -197.125, 0.66", "-15.9349, 173.377, -197.479, 0.66", "-15.587, 174.137, -199.577, 0.15", "-15.5324, 174.244, -199.886, 0.15", "-15.5013, 174.319, -200.109, 0.74", "-15.4711, 174.399, -200.346, 0.74", "-15.1701, 175.246, -202.979, 0.15", "-15.1311, 175.352, -203.347, 0.44", "-15.1036, 175.422, -203.608, 0.44", "-15.075, 175.517, -204.016, 0.44" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_106", "dend_75", "dend_60", "dend_53", "dend_0", "dend_118", "dend_107", "dend_91", "dend_76", "dend_66", "dend_61", "dend_59", "dend_54", "dend_30", "dend_1", "dend_132", "dend_119", "dend_109", "dend_108", "dend_95", "dend_92", "dend_84", "dend_77", "dend_72", "dend_67", "dend_65", "dend_62", "dend_58", "dend_55", "dend_42", "dend_31", "dend_13", "dend_2", "dend_134", "dend_133", "dend_123", "dend_120", "dend_111", "dend_110", "dend_99", "dend_96", "dend_94", "dend_93", "dend_88", "dend_85", "dend_79", "dend_78", "dend_74", "dend_73", "dend_71", "dend_68", "dend_64", "dend_63", "dend_57", "dend_56", "dend_48", "dend_43", "dend_35", "dend_32", "dend_19", "dend_14", "dend_8", "dend_3", "dend_125", "dend_124", "dend_122", "dend_121", "dend_113", "dend_112", "dend_103", "dend_100", "dend_98", "dend_97", "dend_90", "dend_89", "dend_87", "dend_86", "dend_83", "dend_80", "dend_70", "dend_69", "dend_52", "dend_49", "dend_47", "dend_44", "dend_37", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_127", "dend_126", "dend_115", "dend_114", "dend_105", "dend_104", "dend_102", "dend_101", "dend_82", "dend_81", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_38", "dend_29", "dend_22", "dend_17", "dend_16", "dend_12", "dend_11", "dend_6", "dend_5", "dend_131", "dend_128", "dend_117", "dend_116", "dend_41", "dend_40", "dend_28", "dend_23", "dend_130", "dend_129", "dend_27", "dend_24", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_106", "dend_75", "dend_60", "dend_53", "dend_0", "dend_118", "dend_107", "dend_91", "dend_76", "dend_66", "dend_61", "dend_59", "dend_54", "dend_30", "dend_1", "dend_132", "dend_119", "dend_109", "dend_108", "dend_95", "dend_92", "dend_84", "dend_77", "dend_72", "dend_67", "dend_65", "dend_62", "dend_58", "dend_55", "dend_42", "dend_31", "dend_13", "dend_2", "dend_134", "dend_133", "dend_123", "dend_120", "dend_111", "dend_110", "dend_99", "dend_96", "dend_94", "dend_93", "dend_88", "dend_85", "dend_79", "dend_78", "dend_74", "dend_73", "dend_71", "dend_68", "dend_64", "dend_63", "dend_57", "dend_56", "dend_48", "dend_43", "dend_35", "dend_32", "dend_19", "dend_14", "dend_8", "dend_3", "dend_125", "dend_124", "dend_122", "dend_121", "dend_113", "dend_112", "dend_103", "dend_100", "dend_98", "dend_97", "dend_90", "dend_89", "dend_87", "dend_86", "dend_83", "dend_80", "dend_70", "dend_69", "dend_52", "dend_49", "dend_47", "dend_44", "dend_37", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_127", "dend_126", "dend_115", "dend_114", "dend_105", "dend_104", "dend_102", "dend_101", "dend_82", "dend_81", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_38", "dend_29", "dend_22", "dend_17", "dend_16", "dend_12", "dend_11", "dend_6", "dend_5", "dend_131", "dend_128", "dend_117", "dend_116", "dend_41", "dend_40", "dend_28", "dend_23", "dend_130", "dend_129", "dend_27", "dend_24", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_106", "dend_75", "dend_60", "dend_53", "dend_0", "axon_0", "dend_118", "dend_107", "dend_91", "dend_76", "dend_66", "dend_61", "dend_59", "dend_54", "dend_30", "dend_1", "axon_1", "dend_132", "dend_119", "dend_109", "dend_108", "dend_95", "dend_92", "dend_84", "dend_77", "dend_72", "dend_67", "dend_65", "dend_62", "dend_58", "dend_55", "dend_42", "dend_31", "dend_13", "dend_2", "dend_134", "dend_133", "dend_123", "dend_120", "dend_111", "dend_110", "dend_99", "dend_96", "dend_94", "dend_93", "dend_88", "dend_85", "dend_79", "dend_78", "dend_74", "dend_73", "dend_71", "dend_68", "dend_64", "dend_63", "dend_57", "dend_56", "dend_48", "dend_43", "dend_35", "dend_32", "dend_19", "dend_14", "dend_8", "dend_3", "dend_125", "dend_124", "dend_122", "dend_121", "dend_113", "dend_112", "dend_103", "dend_100", "dend_98", "dend_97", "dend_90", "dend_89", "dend_87", "dend_86", "dend_83", "dend_80", "dend_70", "dend_69", "dend_52", "dend_49", "dend_47", "dend_44", "dend_37", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_127", "dend_126", "dend_115", "dend_114", "dend_105", "dend_104", "dend_102", "dend_101", "dend_82", "dend_81", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_38", "dend_29", "dend_22", "dend_17", "dend_16", "dend_12", "dend_11", "dend_6", "dend_5", "dend_131", "dend_128", "dend_117", "dend_116", "dend_41", "dend_40", "dend_28", "dend_23", "dend_130", "dend_129", "dend_27", "dend_24", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_134" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_133" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_120",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_121",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_132" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_131" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_135",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_136",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_137",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_138",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130", "dend_131", "dend_132", "dend_133", "dend_134" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_132", "dend_132", "dend_132", "dend_132", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_123", "dend_123", "dend_123", "dend_123", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_94", "dend_93", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_63", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_122", "dend_121", "dend_121", "dend_121", "dend_121", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_83", "dend_80", "dend_80", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_131", "dend_131", "dend_131", "dend_131", "dend_128", "dend_128", "dend_128", "dend_117", "dend_117", "dend_116", "dend_116", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_130", "dend_129", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_BTC_a4bce5d682_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_106, id: dend_106, parent: soma_0
create dend_106
public dend_106
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_118, id: dend_118, parent: dend_106
create dend_118
public dend_118
// Section: dend_107, id: dend_107, parent: dend_106
create dend_107
public dend_107
// Section: dend_91, id: dend_91, parent: dend_75
create dend_91
public dend_91
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_66, id: dend_66, parent: dend_60
create dend_66
public dend_66
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_53
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_30, id: dend_30, parent: dend_0
create dend_30
public dend_30
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_132, id: dend_132, parent: dend_118
create dend_132
public dend_132
// Section: dend_119, id: dend_119, parent: dend_118
create dend_119
public dend_119
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_95, id: dend_95, parent: dend_91
create dend_95
public dend_95
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_84, id: dend_84, parent: dend_76
create dend_84
public dend_84
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_66
create dend_72
public dend_72
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_42, id: dend_42, parent: dend_30
create dend_42
public dend_42
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_134, id: dend_134, parent: dend_132
create dend_134
public dend_134
// Section: dend_133, id: dend_133, parent: dend_132
create dend_133
public dend_133
// Section: dend_123, id: dend_123, parent: dend_119
create dend_123
public dend_123
// Section: dend_120, id: dend_120, parent: dend_119
create dend_120
public dend_120
// Section: dend_111, id: dend_111, parent: dend_109
create dend_111
public dend_111
// Section: dend_110, id: dend_110, parent: dend_109
create dend_110
public dend_110
// Section: dend_99, id: dend_99, parent: dend_95
create dend_99
public dend_99
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_94, id: dend_94, parent: dend_92
create dend_94
public dend_94
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_88, id: dend_88, parent: dend_84
create dend_88
public dend_88
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_125, id: dend_125, parent: dend_123
create dend_125
public dend_125
// Section: dend_124, id: dend_124, parent: dend_123
create dend_124
public dend_124
// Section: dend_122, id: dend_122, parent: dend_120
create dend_122
public dend_122
// Section: dend_121, id: dend_121, parent: dend_120
create dend_121
public dend_121
// Section: dend_113, id: dend_113, parent: dend_111
create dend_113
public dend_113
// Section: dend_112, id: dend_112, parent: dend_111
create dend_112
public dend_112
// Section: dend_103, id: dend_103, parent: dend_99
create dend_103
public dend_103
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_98, id: dend_98, parent: dend_96
create dend_98
public dend_98
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_79
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_127, id: dend_127, parent: dend_125
create dend_127
public dend_127
// Section: dend_126, id: dend_126, parent: dend_125
create dend_126
public dend_126
// Section: dend_115, id: dend_115, parent: dend_113
create dend_115
public dend_115
// Section: dend_114, id: dend_114, parent: dend_113
create dend_114
public dend_114
// Section: dend_105, id: dend_105, parent: dend_103
create dend_105
public dend_105
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: dend_21
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_131, id: dend_131, parent: dend_127
create dend_131
public dend_131
// Section: dend_128, id: dend_128, parent: dend_127
create dend_128
public dend_128
// Section: dend_117, id: dend_117, parent: dend_115
create dend_117
public dend_117
// Section: dend_116, id: dend_116, parent: dend_115
create dend_116
public dend_116
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_28, id: dend_28, parent: dend_22
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_130, id: dend_130, parent: dend_128
create dend_130
public dend_130
// Section: dend_129, id: dend_129, parent: dend_128
create dend_129
public dend_129
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_106, dend_75, dend_60, dend_53, dend_0, axon_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, axon_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_134]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_133]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_120
// Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_121
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_132]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_131]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_135
// Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_136
// Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_137
// Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_138
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_0, dend_0, dend_0, axon_0, axon_0, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_132, dend_132, dend_132, dend_132, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_123, dend_123, dend_123, dend_123, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_94, dend_93, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_63, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_125, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_122, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_80, dend_80, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_131, dend_131, dend_131, dend_131, dend_128, dend_128, dend_128, dend_117, dend_117, dend_116, dend_116, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_130, dend_129, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_106(0), soma_0(0.4500002059017331)
    connect dend_75(0), soma_0(0.4500002059017331)
    connect dend_60(0), soma_0(0.4500002059017331)
    connect dend_53(0), soma_0(0.4500002059017331)
    connect dend_0(0), soma_0(0.4500002059017331)
    connect axon_0(0), soma_0(1.0)
    connect dend_118(0), dend_106(1.0)
    connect dend_107(0), dend_106(1.0)
    connect dend_91(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_66(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_30(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_132(0), dend_118(1.0)
    connect dend_119(0), dend_118(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_95(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_84(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_72(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_42(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_134(0), dend_132(1.0)
    connect dend_133(0), dend_132(1.0)
    connect dend_123(0), dend_119(1.0)
    connect dend_120(0), dend_119(1.0)
    connect dend_111(0), dend_109(1.0)
    connect dend_110(0), dend_109(1.0)
    connect dend_99(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_94(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_88(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_125(0), dend_123(1.0)
    connect dend_124(0), dend_123(1.0)
    connect dend_122(0), dend_120(1.0)
    connect dend_121(0), dend_120(1.0)
    connect dend_113(0), dend_111(1.0)
    connect dend_112(0), dend_111(1.0)
    connect dend_103(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_98(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_83(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_127(0), dend_125(1.0)
    connect dend_126(0), dend_125(1.0)
    connect dend_115(0), dend_113(1.0)
    connect dend_114(0), dend_113(1.0)
    connect dend_105(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_29(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_131(0), dend_127(1.0)
    connect dend_128(0), dend_127(1.0)
    connect dend_117(0), dend_115(1.0)
    connect dend_116(0), dend_115(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_28(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_130(0), dend_128(1.0)
    connect dend_129(0), dend_128(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.00557, 13.9448, -0.281532, 2.94779 ) }
    soma_0 { pt3dadd( -0.903474, 12.664, -0.255809, 4.6084 ) }
    soma_0 { pt3dadd( -0.801382, 11.3832, -0.230087, 6.06545 ) }
    soma_0 { pt3dadd( -0.699289, 10.1025, -0.204364, 7.51206 ) }
    soma_0 { pt3dadd( -0.597197, 8.82172, -0.178642, 8.73615 ) }
    soma_0 { pt3dadd( -0.495104, 7.54095, -0.15292, 9.82275 ) }
    soma_0 { pt3dadd( -0.393011, 6.26019, -0.127197, 10.7174 ) }
    soma_0 { pt3dadd( -0.290919, 4.97943, -0.101475, 11.6395 ) }
    soma_0 { pt3dadd( -0.188826, 3.69867, -0.0757524, 12.4724 ) }
    soma_0 { pt3dadd( -0.0867336, 2.41791, -0.05003, 12.6766 ) }
    soma_0 { pt3dadd( 0.015359, 1.13715, -0.0243075, 12.8528 ) }
    soma_0 { pt3dadd( 0.117452, -0.143613, 0.00141486, 12.7165 ) }
    soma_0 { pt3dadd( 0.219544, -1.42437, 0.0271373, 12.4031 ) }
    soma_0 { pt3dadd( 0.321637, -2.70514, 0.0528597, 12.3753 ) }
    soma_0 { pt3dadd( 0.423729, -3.9859, 0.0785821, 12.071 ) }
    soma_0 { pt3dadd( 0.525822, -5.26666, 0.104304, 10.4042 ) }
    soma_0 { pt3dadd( 0.627914, -6.54742, 0.130027, 7.86989 ) }
    soma_0 { pt3dadd( 0.730007, -7.82818, 0.155749, 5.70594 ) }
    soma_0 { pt3dadd( 0.8321, -9.10894, 0.181472, 4.59143 ) }
    soma_0 { pt3dadd( 0.934192, -10.3897, 0.207194, 3.60784 ) }
    soma_0 { pt3dadd( 1.03628, -11.6705, 0.232917, 2.27826 ) }
    // Section: dend_106, id: dend_106, parent: soma_0 (entry count 21/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 0.462584, -8.38364, 1.90039, 2.8 ) }
    dend_106 { pt3dadd( 0.553688, -8.92111, 1.86232, 2.8 ) }
    dend_106 { pt3dadd( 0.6629, -9.48912, 1.82626, 2.28 ) }
    dend_106 { pt3dadd( 0.7866, -10.0602, 1.81404, 1.77 ) }
    dend_106 { pt3dadd( 0.864339, -10.3586, 1.8142, 1.4 ) }
    dend_106 { pt3dadd( 1.14737, -11.3121, 1.82628, 1.33 ) }
    dend_106 { pt3dadd( 1.33821, -11.8716, 1.86078, 1.18 ) }
    dend_106 { pt3dadd( 1.52285, -12.3211, 1.91066, 1.11 ) }
    dend_106 { pt3dadd( 1.7957, -12.9123, 2.02568, 1.25 ) }
    dend_106 { pt3dadd( 2.02275, -13.3904, 2.1536, 1.33 ) }
    dend_106 { pt3dadd( 2.18747, -13.7475, 2.27267, 1.4 ) }
    dend_106 { pt3dadd( 2.49508, -14.4728, 2.56411, 1.33 ) }
    dend_106 { pt3dadd( 2.62305, -14.8008, 2.71223, 1.03 ) }
    dend_106 { pt3dadd( 2.79756, -15.3857, 2.99473, 0.59 ) }
    dend_106 { pt3dadd( 2.83696, -15.6852, 3.14179, 0.52 ) }
    dend_106 { pt3dadd( 2.80991, -15.8662, 3.23229, 0.52 ) }
    dend_106 { pt3dadd( 2.75824, -15.951, 3.27046, 0.52 ) }
    dend_106 { pt3dadd( 2.545, -16.1017, 3.31388, 0.52 ) }
    dend_106 { pt3dadd( 2.17761, -16.274, 3.39332, 0.52 ) }
    dend_106 { pt3dadd( 2.03381, -16.3471, 3.4403, 0.52 ) }
    dend_106 { pt3dadd( 1.81855, -16.4842, 3.53945, 0.52 ) }
    dend_106 { pt3dadd( 1.61261, -16.6526, 3.65673, 0.52 ) }
    dend_106 { pt3dadd( 1.58632, -16.6919, 3.4247, 0.52 ) }
    dend_106 { pt3dadd( 1.49752, -16.8552, 2.68283, 0.52 ) }
    dend_106 { pt3dadd( 1.37563, -17.1131, 1.7054, 1.55 ) }
    dend_106 { pt3dadd( 1.33787, -17.2091, 1.37437, 1.84 ) }
    dend_106 { pt3dadd( 1.31097, -17.2937, 1.09557, 2.14 ) }
    dend_106 { pt3dadd( 0.765926, -19.618, -6.44963, 1.25 ) }
    dend_106 { pt3dadd( 0.7441, -19.761, -6.93354, 1.11 ) }
    dend_106 { pt3dadd( 0.706467, -20.0073, -7.94571, 0.81 ) }
    dend_106 { pt3dadd( 0.692249, -20.0573, -8.24271, 0.59 ) }
    dend_106 { pt3dadd( 0.58658, -20.1381, -9.39239, 0.88 ) }
    dend_106 { pt3dadd( 0.52444, -20.1033, -9.77546, 0.88 ) }
    dend_106 { pt3dadd( 0.694553, -20.363, -9.05667, 0.44 ) }
    dend_106 { pt3dadd( 1.06704, -21.1184, -6.95867, 0.81 ) }
    dend_106 { pt3dadd( 1.08492, -21.1767, -6.8096, 0.81 ) }
    dend_106 { pt3dadd( 1.09913, -21.4214, -6.29563, 1.03 ) }
    dend_106 { pt3dadd( 1.0735, -21.6371, -5.95292, 0.96 ) }
    dend_106 { pt3dadd( 0.881396, -22.4474, -4.93365, 0.96 ) }
    dend_106 { pt3dadd( 0.716393, -22.9643, -4.48698, 0.96 ) }
    dend_106 { pt3dadd( 0.611582, -23.2944, -4.3045, 0.96 ) }
    dend_106 { pt3dadd( 0.416322, -24.0076, -3.93617, 0.66 ) }
    dend_106 { pt3dadd( 0.27884, -24.6822, -3.61837, 0.44 ) }
    dend_106 { pt3dadd( 0.245809, -24.922, -3.51683, 0.44 ) }
    dend_106 { pt3dadd( 0.228666, -25.1352, -3.44859, 0.44 ) }
    dend_106 { pt3dadd( 0.196822, -25.8469, -3.21098, 0.81 ) }
    dend_106 { pt3dadd( 0.195155, -25.8887, -3.19659, 0.81 ) }
    dend_106 { pt3dadd( 0.139861, -26.5686, -2.96924, 1.11 ) }
    dend_106 { pt3dadd( 0.0982508, -26.9648, -2.83188, 1.55 ) }
    dend_106 { pt3dadd( 0.0783866, -27.124, -2.7903, 1.69 ) }
    dend_106 { pt3dadd( 0.0379094, -27.3951, -2.7303, 1.77 ) }
    dend_106 { pt3dadd( -0.0854955, -28.0723, -2.62193, 1.77 ) }
    dend_106 { pt3dadd( -0.161472, -28.4131, -2.56923, 1.77 ) }
    dend_106 { pt3dadd( -0.273605, -28.787, -2.51857, 1.77 ) }
    dend_106 { pt3dadd( -0.507883, -29.3141, -2.43278, 1.03 ) }
    dend_106 { pt3dadd( -0.712358, -29.6586, -2.36624, 1.03 ) }
    dend_106 { pt3dadd( -0.844028, -29.8126, -2.30427, 0.96 ) }
    dend_106 { pt3dadd( -1.05722, -29.991, -2.18361, 0.66 ) }
    dend_106 { pt3dadd( -1.3404, -30.1971, -2.00126, 0.52 ) }
    dend_106 { pt3dadd( -1.5694, -30.377, -1.74259, 0.59 ) }
    dend_106 { pt3dadd( -1.59009, -30.3991, -1.70843, 0.59 ) }
    dend_106 { pt3dadd( -1.93375, -30.9297, -0.91302, 0.96 ) }
    dend_106 { pt3dadd( -2.00354, -31.0686, -0.686046, 0.96 ) }
    dend_106 { pt3dadd( -2.0431, -31.1562, -0.537922, 0.96 ) }
    dend_106 { pt3dadd( -2.3086, -31.8472, 0.85851, 0.59 ) }
    dend_106 { pt3dadd( -2.38371, -32.0879, 1.347, 1.18 ) }
    dend_106 { pt3dadd( -2.4054, -32.1607, 1.49552, 1.18 ) }
    dend_106 { pt3dadd( -2.55627, -32.7377, 2.68505, 1.55 ) }
    dend_106 { pt3dadd( -2.59385, -32.8709, 2.9827, 1.55 ) }
    dend_106 { pt3dadd( -2.87525, -33.6846, 4.9511, 1.03 ) }
    dend_106 { pt3dadd( -3.01316, -33.9429, 5.65233, 0.66 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 92/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 0.932584, -10.5579, -0.789611, 2.95 ) }
    dend_75 { pt3dadd( 0.932584, -10.5579, -0.789611, 2.95 ) }
    dend_75 { pt3dadd( 1.07046, -11.3522, -0.789611, 2.95 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 95/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -1.33741, 13.3199, 3.03039, 2.06 ) }
    dend_60 { pt3dadd( -1.33741, 13.3199, 3.03039, 2.06 ) }
    dend_60 { pt3dadd( -0.988769, 13.9458, 4.20007, 1.47 ) }
    dend_60 { pt3dadd( -0.419414, 15.1076, 6.32574, 1.55 ) }
    dend_60 { pt3dadd( -0.402613, 15.1475, 6.39678, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_60 { pt3dadd( -0.19736, 15.6988, 7.34906, 1.77 ) }
    dend_60 { pt3dadd( 0.391805, 17.4984, 10.3546, 1.77 ) }
    dend_60 { pt3dadd( 0.64865, 18.386, 11.8152, 1.84 ) }
    dend_60 { pt3dadd( 0.74897, 18.8831, 12.6965, 1.99 ) }
    dend_60 { pt3dadd( 0.804323, 19.3386, 13.4689, 2.14 ) }
    dend_60 { pt3dadd( 0.820395, 19.5923, 13.8963, 2.28 ) }
    dend_60 { pt3dadd( 0.80558, 19.7922, 14.23, 2.73 ) }
    dend_60 { pt3dadd( 0.703851, 20.1729, 14.7314, 2.8 ) }
    dend_60 { pt3dadd( 0.153911, 21.9576, 17.1132, 2.8 ) }
    dend_60 { pt3dadd( 0.0804848, 22.1928, 17.5187, 2.8 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 10/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.47741, -4.50314, -5.90961, 1.25 ) }
    dend_53 { pt3dadd( -4.79618, -4.87705, -5.79809, 1.25 ) }
    dend_53 { pt3dadd( -5.36896, -5.56597, -5.74432, 1.03 ) }
    dend_53 { pt3dadd( -5.71264, -6.00428, -5.7586, 1.03 ) }
    dend_53 { pt3dadd( -6.4661, -6.98019, -5.83461, 0.66 ) }
    dend_53 { pt3dadd( -7.13504, -7.82834, -6.05539, 0.74 ) }
    dend_53 { pt3dadd( -7.74667, -8.55917, -6.30469, 0.74 ) }
    dend_53 { pt3dadd( -8.68508, -9.61634, -6.76667, 1.18 ) }
    dend_53 { pt3dadd( -9.27183, -10.2253, -7.08744, 1.47 ) }
    dend_53 { pt3dadd( -10.1367, -11.0484, -7.58554, 1.77 ) }
    dend_53 { pt3dadd( -11.9391, -12.5091, -8.70586, 0.52 ) }
    dend_53 { pt3dadd( -12.6506, -12.9867, -9.1287, 0.52 ) }
    dend_53 { pt3dadd( -12.9684, -13.152, -9.34228, 0.74 ) }
    dend_53 { pt3dadd( -13.5122, -13.3474, -9.66069, 1.18 ) }
    dend_53 { pt3dadd( -14.188, -13.5017, -10.1947, 1.47 ) }
    dend_53 { pt3dadd( -14.9198, -13.6217, -10.8662, 1.92 ) }
    dend_53 { pt3dadd( -15.2631, -13.679, -11.1998, 1.69 ) }
    dend_53 { pt3dadd( -17.2411, -14.129, -13.4026, 0.88 ) }
    dend_53 { pt3dadd( -18.568, -14.5369, -14.996, 0.74 ) }
    dend_53 { pt3dadd( -20.8801, -15.4694, -17.9726, 0.74 ) }
    dend_53 { pt3dadd( -21.2091, -15.6522, -18.4546, 0.52 ) }
    dend_53 { pt3dadd( -21.6824, -16.0079, -19.2178, 0.52 ) }
    dend_53 { pt3dadd( -22.1893, -16.4837, -20.0908, 0.96 ) }
    dend_53 { pt3dadd( -22.5116, -16.8596, -20.621, 0.96 ) }
    dend_53 { pt3dadd( -22.7959, -17.2435, -21.0801, 1.33 ) }
    dend_53 { pt3dadd( -23.9975, -18.7889, -22.7109, 1.33 ) }
    dend_53 { pt3dadd( -25.1089, -19.9861, -24.1944, 0.44 ) }
    dend_53 { pt3dadd( -25.3961, -20.2726, -24.5759, 0.88 ) }
    dend_53 { pt3dadd( -26.114, -20.932, -25.4775, 0.29 ) }
    dend_53 { pt3dadd( -26.6679, -21.3995, -26.1747, 1.33 ) }
    dend_53 { pt3dadd( -28.2254, -22.561, -28.0028, 1.84 ) }
    dend_53 { pt3dadd( -29.0638, -23.1095, -28.7142, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.82741, 13.4369, -3.03961, 1.99 ) }
    dend_0 { pt3dadd( -2.82741, 13.4369, -3.03961, 1.99 ) }
    dend_0 { pt3dadd( -3.39111, 15.7227, -3.57533, 2.06 ) }
    dend_0 { pt3dadd( -3.8645, 17.6424, -4.02522, 2.06 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 46/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.03628, -11.6705, 0.232917, 0.52 ) }
    axon_0 { pt3dadd( 2.22818, -26.6231, 0.232917, 0.52 ) }
    axon_0 { pt3dadd( 3.42008, -41.5756, 0.232917, 0.52 ) }
    // Section: dend_118, id: dend_118, parent: dend_106 (entry count 49/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( -3.01316, -33.9429, 5.65233, 0.52 ) }
    dend_118 { pt3dadd( -2.45094, -34.4454, 5.80171, 0.52 ) }
    dend_118 { pt3dadd( -2.16693, -34.8546, 6.00639, 0.74 ) }
    dend_118 { pt3dadd( -2.11345, -35.0899, 6.1258, 0.74 ) }
    dend_118 { pt3dadd( -2.12524, -35.503, 6.28041, 0.74 ) }
    dend_118 { pt3dadd( -2.13477, -35.5593, 6.29719, 0.74 ) }
    dend_118 { pt3dadd( -2.20482, -35.8144, 6.35968, 0.74 ) }
    dend_118 { pt3dadd( -2.59915, -36.6793, 6.52204, 0.66 ) }
    dend_118 { pt3dadd( -2.9621, -37.336, 6.63549, 0.66 ) }
    dend_118 { pt3dadd( -3.30822, -37.9164, 6.73042, 1.25 ) }
    dend_118 { pt3dadd( -3.45082, -38.1624, 6.7647, 1.18 ) }
    dend_118 { pt3dadd( -3.62414, -38.4798, 6.79893, 1.33 ) }
    dend_118 { pt3dadd( -3.79079, -38.7899, 6.81743, 1.11 ) }
    dend_118 { pt3dadd( -3.81869, -38.8426, 6.81621, 1.11 ) }
    dend_118 { pt3dadd( -4.0468, -39.2405, 6.8992, 0.66 ) }
    dend_118 { pt3dadd( -4.33365, -39.6849, 7.26596, 0.59 ) }
    dend_118 { pt3dadd( -4.35698, -39.7219, 7.30815, 0.59 ) }
    dend_118 { pt3dadd( -4.52192, -40.011, 7.67386, 0.44 ) }
    dend_118 { pt3dadd( -4.6612, -40.2639, 8.02015, 0.44 ) }
    dend_118 { pt3dadd( -5.01981, -40.8903, 8.95677, 0.96 ) }
    dend_118 { pt3dadd( -5.54304, -41.7444, 10.4387, 1.11 ) }
    dend_118 { pt3dadd( -5.63384, -41.8881, 10.7256, 0.88 ) }
    dend_118 { pt3dadd( -5.75261, -42.1008, 11.1721, 0.88 ) }
    dend_118 { pt3dadd( -5.75849, -42.1148, 11.2044, 0.88 ) }
    // Section: dend_107, id: dend_107, parent: dend_106 (entry count 73/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( -3.01316, -33.9429, 5.65233, 0.37 ) }
    dend_107 { pt3dadd( -2.65457, -34.6326, 5.40716, 0.37 ) }
    dend_107 { pt3dadd( -2.2843, -35.4143, 5.20414, 0.37 ) }
    dend_107 { pt3dadd( -1.75994, -36.5502, 5.26013, 0.59 ) }
    dend_107 { pt3dadd( -1.59133, -36.9241, 5.35778, 0.74 ) }
    dend_107 { pt3dadd( -1.29345, -37.6058, 5.64664, 0.74 ) }
    dend_107 { pt3dadd( -1.01755, -38.2215, 5.93948, 0.37 ) }
    dend_107 { pt3dadd( -0.583393, -39.2043, 6.49395, 0.37 ) }
    dend_107 { pt3dadd( 0.291381, -41.2258, 7.79408, 0.29 ) }
    dend_107 { pt3dadd( 0.706542, -42.2156, 8.50901, 0.81 ) }
    dend_107 { pt3dadd( 1.23053, -43.4376, 9.46082, 0.37 ) }
    dend_107 { pt3dadd( 1.56446, -44.2181, 10.1299, 0.29 ) }
    dend_107 { pt3dadd( 1.69719, -44.53, 10.4234, 0.37 ) }
    // Section: dend_91, id: dend_91, parent: dend_75 (entry count 86/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 1.07046, -11.3522, -0.789611, 1.47 ) }
    dend_91 { pt3dadd( 2.47043, -12.3844, -1.38175, 1.47 ) }
    dend_91 { pt3dadd( 2.94846, -12.8069, -1.56958, 1.33 ) }
    dend_91 { pt3dadd( 3.0889, -12.9485, -1.68874, 1.33 ) }
    dend_91 { pt3dadd( 3.30861, -13.2083, -1.94186, 1.03 ) }
    dend_91 { pt3dadd( 3.46088, -13.4228, -2.15627, 0.81 ) }
    dend_91 { pt3dadd( 3.64491, -13.7406, -2.4724, 1.11 ) }
    dend_91 { pt3dadd( 3.73384, -14.1004, -2.88388, 1.18 ) }
    dend_91 { pt3dadd( 3.79869, -15.1493, -4.54964, 0.88 ) }
    dend_91 { pt3dadd( 3.78225, -15.3246, -4.8656, 1.33 ) }
    dend_91 { pt3dadd( 3.74619, -15.5001, -5.21374, 1.92 ) }
    dend_91 { pt3dadd( 3.70001, -15.6901, -5.6097, 1.99 ) }
    dend_91 { pt3dadd( 3.60078, -16.1426, -6.58581, 1.92 ) }
    dend_91 { pt3dadd( 3.52244, -16.8422, -8.08244, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_91 { pt3dadd( 3.53897, -17.0851, -8.54875, 1.18 ) }
    dend_91 { pt3dadd( 3.63921, -17.4525, -9.25451, 1.18 ) }
    dend_91 { pt3dadd( 3.72917, -17.6333, -9.5918, 1.18 ) }
    dend_91 { pt3dadd( 3.97355, -17.9638, -10.1507, 1.18 ) }
    dend_91 { pt3dadd( 4.3243, -18.3371, -10.6418, 1.4 ) }
    dend_91 { pt3dadd( 4.65976, -18.6134, -10.913, 2.06 ) }
    dend_91 { pt3dadd( 4.6924, -18.6345, -10.9347, 2.06 ) }
    dend_91 { pt3dadd( 4.92878, -18.7595, -11.0581, 1.84 ) }
    dend_91 { pt3dadd( 4.95406, -18.7722, -11.0721, 1.84 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 9/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 1.07046, -11.3522, -0.789611, 1.03 ) }
    dend_76 { pt3dadd( 0.685408, -13.349, -1.84376, 1.03 ) }
    dend_76 { pt3dadd( 0.48962, -14.4493, -2.39651, 0.96 ) }
    dend_76 { pt3dadd( 0.322372, -15.3892, -2.86869, 1.33 ) }
    dend_76 { pt3dadd( 0.135766, -16.4379, -3.39552, 1.55 ) }
    dend_76 { pt3dadd( 0.0160692, -17.1106, -3.73345, 1.55 ) }
    dend_76 { pt3dadd( -0.085077, -17.679, -4.01901, 1.55 ) }
    dend_76 { pt3dadd( -0.18249, -18.5016, -4.33901, 1.69 ) }
    // Section: dend_66, id: dend_66, parent: dend_60 (entry count 17/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 0.0804848, 22.1928, 17.5187, 1.03 ) }
    dend_66 { pt3dadd( 0.0541272, 22.7198, 17.4083, 1.03 ) }
    dend_66 { pt3dadd( 0.0520958, 23.0196, 17.4108, 1.03 ) }
    dend_66 { pt3dadd( 0.0444361, 23.2536, 17.4411, 0.88 ) }
    dend_66 { pt3dadd( 0.0189378, 23.5301, 17.4947, 0.88 ) }
    dend_66 { pt3dadd( -0.023598, 23.7894, 17.5341, 0.88 ) }
    dend_66 { pt3dadd( -0.0715005, 24.0039, 17.5635, 1.03 ) }
    dend_66 { pt3dadd( -0.250079, 24.5667, 17.6829, 1.03 ) }
    dend_66 { pt3dadd( -0.36621, 24.8509, 17.7427, 0.96 ) }
    dend_66 { pt3dadd( -0.499613, 25.1208, 17.7959, 0.96 ) }
    dend_66 { pt3dadd( -0.74517, 25.5361, 17.8656, 0.66 ) }
    dend_66 { pt3dadd( -0.858385, 25.7038, 17.8853, 0.59 ) }
    dend_66 { pt3dadd( -0.945396, 25.8194, 17.8883, 0.52 ) }
    dend_66 { pt3dadd( -1.03057, 25.9258, 17.8811, 0.59 ) }
    dend_66 { pt3dadd( -1.11793, 26.0379, 17.8712, 0.74 ) }
    dend_66 { pt3dadd( -1.28635, 26.2657, 17.8529, 1.03 ) }
    dend_66 { pt3dadd( -1.42407, 26.4595, 17.8444, 0.96 ) }
    dend_66 { pt3dadd( -1.63071, 26.7654, 17.8264, 1.25 ) }
    dend_66 { pt3dadd( -1.78464, 26.9851, 17.7822, 1.62 ) }
    dend_66 { pt3dadd( -2.0012, 27.2769, 17.697, 1.62 ) }
    dend_66 { pt3dadd( -2.13536, 27.4385, 17.6416, 1.47 ) }
    dend_66 { pt3dadd( -2.29566, 27.6044, 17.5792, 1.25 ) }
    dend_66 { pt3dadd( -2.52076, 27.7985, 17.5024, 1.11 ) }
    dend_66 { pt3dadd( -3.1635, 28.253, 17.3235, 0.81 ) }
    dend_66 { pt3dadd( -3.47711, 28.4331, 17.2564, 0.74 ) }
    dend_66 { pt3dadd( -3.80247, 28.5826, 17.2083, 0.74 ) }
    dend_66 { pt3dadd( -4.11686, 28.6958, 17.1772, 0.74 ) }
    dend_66 { pt3dadd( -4.33048, 28.7489, 17.1728, 0.74 ) }
    dend_66 { pt3dadd( -4.4974, 28.776, 17.1861, 0.74 ) }
    dend_66 { pt3dadd( -4.69615, 28.798, 17.2312, 0.74 ) }
    dend_66 { pt3dadd( -4.90826, 28.8101, 17.3231, 0.66 ) }
    dend_66 { pt3dadd( -5.06882, 28.8277, 17.4353, 0.52 ) }
    dend_66 { pt3dadd( -5.26964, 28.8715, 17.6356, 0.59 ) }
    dend_66 { pt3dadd( -5.3677, 28.9168, 17.7568, 0.59 ) }
    dend_66 { pt3dadd( -5.39091, 28.9354, 17.7906, 0.59 ) }
    dend_66 { pt3dadd( -5.82059, 29.4469, 18.531, 0.74 ) }
    dend_66 { pt3dadd( -5.8744, 29.5904, 18.7459, 1.03 ) }
    dend_66 { pt3dadd( -5.88789, 29.6777, 18.8661, 1.77 ) }
    dend_66 { pt3dadd( -5.89738, 29.9327, 19.1823, 1.77 ) }
    dend_66 { pt3dadd( -5.89147, 30.1505, 19.4273, 1.77 ) }
    dend_66 { pt3dadd( -5.88958, 30.1801, 19.4586, 1.77 ) }
    dend_66 { pt3dadd( -5.75378, 31.1311, 20.326, 1.77 ) }
    dend_66 { pt3dadd( -5.71451, 31.3149, 20.5214, 1.77 ) }
    dend_66 { pt3dadd( -5.68093, 31.4321, 20.6675, 1.84 ) }
    dend_66 { pt3dadd( -5.62814, 31.5553, 20.8613, 1.69 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 62/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 0.0804848, 22.1928, 17.5187, 0.88 ) }
    dend_61 { pt3dadd( -1.97664, 23.5626, 19.6527, 0.88 ) }
    dend_61 { pt3dadd( -2.37505, 23.8638, 20.0425, 0.88 ) }
    dend_61 { pt3dadd( -3.0018, 24.4119, 20.6128, 0.81 ) }
    dend_61 { pt3dadd( -3.31597, 24.7305, 20.8831, 0.52 ) }
    dend_61 { pt3dadd( -3.56553, 25.023, 21.0949, 0.52 ) }
    dend_61 { pt3dadd( -3.6032, 25.0767, 21.1286, 0.52 ) }
    dend_61 { pt3dadd( -3.61331, 25.37, 21.4438, 0.66 ) }
    dend_61 { pt3dadd( -3.51007, 25.5447, 21.8701, 0.59 ) }
    dend_61 { pt3dadd( -3.41037, 25.6437, 22.1971, 0.59 ) }
    dend_61 { pt3dadd( -3.30605, 25.734, 22.5054, 0.74 ) }
    dend_61 { pt3dadd( -3.11188, 25.8902, 23.0414, 0.96 ) }
    dend_61 { pt3dadd( -1.74918, 26.975, 26.7994, 1.11 ) }
    dend_61 { pt3dadd( -1.47929, 27.1604, 27.5376, 1.18 ) }
    dend_61 { pt3dadd( -1.41087, 27.1999, 27.7281, 1.18 ) }
    dend_61 { pt3dadd( -1.26427, 27.2745, 28.1749, 1.11 ) }
    dend_61 { pt3dadd( -1.17794, 27.3055, 28.4487, 1.03 ) }
    dend_61 { pt3dadd( -1.02955, 27.3031, 28.7889, 0.81 ) }
    dend_61 { pt3dadd( -2.38255, 27.6262, 28.2064, 1.03 ) }
    dend_61 { pt3dadd( -2.72659, 27.6827, 28.1123, 1.03 ) }
    dend_61 { pt3dadd( -3.8877, 27.8385, 27.9041, 1.03 ) }
    dend_61 { pt3dadd( -4.51829, 27.9162, 27.834, 0.74 ) }
    dend_61 { pt3dadd( -4.69091, 27.9427, 27.8533, 0.74 ) }
    dend_61 { pt3dadd( -5.2286, 28.0647, 28.0112, 0.88 ) }
    dend_61 { pt3dadd( -5.9332, 28.3184, 28.3532, 0.74 ) }
    dend_61 { pt3dadd( -6.39794, 28.6106, 28.6273, 0.74 ) }
    dend_61 { pt3dadd( -6.48474, 28.7365, 28.7328, 0.74 ) }
    dend_61 { pt3dadd( -6.91075, 30.0224, 29.7464, 0.74 ) }
    dend_61 { pt3dadd( -6.98187, 30.567, 30.1059, 1.25 ) }
    dend_61 { pt3dadd( -6.94657, 31.0601, 30.3727, 1.25 ) }
    dend_61 { pt3dadd( -6.82773, 31.6828, 30.6586, 1.25 ) }
    dend_61 { pt3dadd( -6.47225, 33.0446, 31.3556, 1.03 ) }
    dend_61 { pt3dadd( -6.29518, 33.6396, 31.7273, 0.96 ) }
    dend_61 { pt3dadd( -6.03656, 34.3711, 32.1417, 0.81 ) }
    dend_61 { pt3dadd( -5.76429, 35.0772, 32.5889, 0.74 ) }
    dend_61 { pt3dadd( -5.67111, 35.3016, 32.7312, 0.74 ) }
    dend_61 { pt3dadd( -5.3688, 36.3141, 33.8343, 0.74 ) }
    dend_61 { pt3dadd( -5.29677, 37.1003, 34.8578, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_61 { pt3dadd( -5.4463, 37.7382, 36.0494, 0.74 ) }
    dend_61 { pt3dadd( -5.52979, 37.9369, 36.4752, 0.74 ) }
    dend_61 { pt3dadd( -5.63973, 38.1457, 36.9527, 0.74 ) }
    dend_61 { pt3dadd( -6.57456, 39.7008, 40.587, 0.81 ) }
    dend_61 { pt3dadd( -6.79566, 40.0191, 41.3315, 1.03 ) }
    dend_61 { pt3dadd( -7.7265, 41.1566, 44.2359, 1.25 ) }
    dend_61 { pt3dadd( -7.75183, 41.1841, 44.314, 1.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_53 (entry count 7/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -29.0638, -23.1095, -28.7142, 0.74 ) }
    dend_59 { pt3dadd( -31.0039, -22.3574, -32.9981, 0.74 ) }
    dend_59 { pt3dadd( -31.5873, -22.1332, -34.1753, 0.37 ) }
    dend_59 { pt3dadd( -31.8331, -22.04, -34.6443, 0.37 ) }
    dend_59 { pt3dadd( -32.1842, -21.911, -35.2729, 0.37 ) }
    dend_59 { pt3dadd( -32.321, -21.8704, -35.5083, 0.37 ) }
    dend_59 { pt3dadd( -32.538, -21.809, -35.8592, 0.74 ) }
    dend_59 { pt3dadd( -32.7135, -21.7647, -36.0565, 1.03 ) }
    dend_59 { pt3dadd( -33.4075, -21.6329, -36.8601, 1.33 ) }
    dend_59 { pt3dadd( -33.5819, -21.6076, -37.0673, 1.25 ) }
    dend_59 { pt3dadd( -34.7553, -21.4168, -39.1834, 0.22 ) }
    dend_59 { pt3dadd( -34.9852, -21.3612, -39.6451, 0.22 ) }
    dend_59 { pt3dadd( -35.072, -21.3342, -39.8318, 0.59 ) }
    dend_59 { pt3dadd( -35.1974, -21.2877, -40.1056, 1.03 ) }
    dend_59 { pt3dadd( -35.3124, -21.2377, -40.3676, 1.03 ) }
    dend_59 { pt3dadd( -36.9373, -20.4892, -44.6494, 0.22 ) }
    dend_59 { pt3dadd( -37.159, -20.3804, -45.2988, 0.66 ) }
    dend_59 { pt3dadd( -37.2026, -20.3591, -45.4333, 1.47 ) }
    dend_59 { pt3dadd( -37.303, -20.3052, -45.7976, 1.84 ) }
    dend_59 { pt3dadd( -37.6203, -20.1302, -47.051, 1.33 ) }
    dend_59 { pt3dadd( -38.3502, -19.6969, -50.0539, 0.88 ) }
    dend_59 { pt3dadd( -38.3654, -19.688, -50.1196, 0.88 ) }
    dend_59 { pt3dadd( -38.4283, -19.6545, -50.3956, 0.96 ) }
    dend_59 { pt3dadd( -39.6868, -18.9694, -55.5812, 1.47 ) }
    dend_59 { pt3dadd( -39.704, -18.9603, -55.6465, 1.47 ) }
    dend_59 { pt3dadd( -39.8198, -18.8994, -56.0438, 1.47 ) }
    dend_59 { pt3dadd( -41.1477, -18.1605, -60.2292, 0.29 ) }
    dend_59 { pt3dadd( -41.318, -18.0661, -60.7462, 0.29 ) }
    dend_59 { pt3dadd( -41.6209, -17.908, -61.5785, 0.29 ) }
    dend_59 { pt3dadd( -41.823, -17.8016, -62.0311, 0.52 ) }
    dend_59 { pt3dadd( -41.823, -17.8016, -62.0311, 0.96 ) }
    dend_59 { pt3dadd( -42.1697, -17.629, -63.4846, 1.47 ) }
    dend_59 { pt3dadd( -42.844, -17.2851, -66.5757, 0.44 ) }
    dend_59 { pt3dadd( -42.9393, -17.2389, -67.0314, 1.11 ) }
    dend_59 { pt3dadd( -43.0373, -17.1953, -67.5177, 1.11 ) }
    dend_59 { pt3dadd( -45.1501, -16.2439, -78.3687, 0.52 ) }
    dend_59 { pt3dadd( -45.1627, -16.2381, -78.4334, 0.52 ) }
    dend_59 { pt3dadd( -45.2497, -16.2022, -78.8917, 0.81 ) }
    dend_59 { pt3dadd( -45.313, -16.1776, -79.2313, 0.81 ) }
    dend_59 { pt3dadd( -45.3247, -16.173, -79.2956, 0.81 ) }
    dend_59 { pt3dadd( -45.9501, -15.9271, -82.5426, 0.81 ) }
    dend_59 { pt3dadd( -46.0465, -15.8823, -82.9404, 0.81 ) }
    dend_59 { pt3dadd( -47.2456, -15.347, -87.7356, 0.37 ) }
    dend_59 { pt3dadd( -47.3212, -15.3172, -88.0178, 1.47 ) }
    dend_59 { pt3dadd( -47.3212, -15.3172, -88.0178, 1.47 ) }
    dend_59 { pt3dadd( -48.4011, -14.977, -91.2474, 0.22 ) }
    dend_59 { pt3dadd( -48.6339, -14.92, -91.8048, 0.22 ) }
    dend_59 { pt3dadd( -48.7569, -14.891, -92.0597, 0.22 ) }
    dend_59 { pt3dadd( -49.2297, -14.7552, -92.7112, 0.22 ) }
    dend_59 { pt3dadd( -49.3731, -14.7165, -92.9946, 0.74 ) }
    dend_59 { pt3dadd( -49.5305, -14.6819, -93.3604, 1.11 ) }
    dend_59 { pt3dadd( -49.554, -14.676, -93.422, 1.11 ) }
    dend_59 { pt3dadd( -49.9648, -14.5652, -94.6356, 1.11 ) }
    dend_59 { pt3dadd( -50.0338, -14.5324, -94.8387, 1.11 ) }
    dend_59 { pt3dadd( -51.516, -13.6384, -98.9352, 0.74 ) }
    dend_59 { pt3dadd( -51.6164, -13.5745, -99.1915, 1.69 ) }
    dend_59 { pt3dadd( -51.8722, -13.3873, -99.8318, 1.69 ) }
    dend_59 { pt3dadd( -51.9675, -13.3024, -100.064, 1.69 ) }
    dend_59 { pt3dadd( -53.107, -12.0615, -102.684, 0.44 ) }
    dend_59 { pt3dadd( -53.4137, -11.6432, -103.312, 0.44 ) }
    dend_59 { pt3dadd( -53.439, -11.6002, -103.353, 0.44 ) }
    dend_59 { pt3dadd( -53.9318, -10.6365, -104.211, 0.81 ) }
    dend_59 { pt3dadd( -54.0935, -10.2808, -104.506, 1.11 ) }
    dend_59 { pt3dadd( -54.1987, -10.0184, -104.688, 1.11 ) }
    dend_59 { pt3dadd( -54.5925, -8.6738, -105.302, 0.29 ) }
    dend_59 { pt3dadd( -54.6085, -8.61438, -105.328, 0.29 ) }
    dend_59 { pt3dadd( -54.7517, -8.16353, -105.57, 0.29 ) }
    dend_59 { pt3dadd( -54.8477, -7.91436, -105.71, 0.88 ) }
    dend_59 { pt3dadd( -54.9799, -7.57897, -105.933, 1.11 ) }
    dend_59 { pt3dadd( -55.0964, -7.31615, -106.218, 1.11 ) }
    dend_59 { pt3dadd( -55.2608, -6.98956, -106.65, 1.11 ) }
    dend_59 { pt3dadd( -56.009, -5.6585, -108.507, 0.22 ) }
    dend_59 { pt3dadd( -56.2595, -5.3069, -109.037, 1.33 ) }
    dend_59 { pt3dadd( -56.3255, -5.22766, -109.157, 1.33 ) }
    dend_59 { pt3dadd( -57.9092, -3.55526, -111.685, 0.29 ) }
    dend_59 { pt3dadd( -58.0767, -3.39762, -111.962, 0.66 ) }
    dend_59 { pt3dadd( -58.2358, -3.25308, -112.22, 0.88 ) }
    dend_59 { pt3dadd( -58.7789, -2.83872, -113.005, 0.52 ) }
    dend_59 { pt3dadd( -59.2528, -2.48864, -113.665, 0.52 ) }
    dend_59 { pt3dadd( -59.4089, -2.37111, -113.872, 0.81 ) }
    dend_59 { pt3dadd( -61.4055, -0.752008, -116.297, 0.52 ) }
    dend_59 { pt3dadd( -61.6628, -0.490206, -116.79, 0.52 ) }
    dend_59 { pt3dadd( -62.0388, -0.0404644, -117.716, 0.29 ) }
    dend_59 { pt3dadd( -62.1708, 0.124425, -118.078, 0.81 ) }
    dend_59 { pt3dadd( -62.1913, 0.14853, -118.136, 0.81 ) }
    dend_59 { pt3dadd( -62.3435, 0.309911, -118.536, 0.81 ) }
    dend_59 { pt3dadd( -64.0424, 1.88068, -122.462, 0.29 ) }
    dend_59 { pt3dadd( -64.1351, 1.96443, -122.687, 0.29 ) }
    dend_59 { pt3dadd( -64.472, 2.27078, -123.539, 0.29 ) }
    dend_59 { pt3dadd( -64.4966, 2.2912, -123.597, 0.29 ) }
    dend_59 { pt3dadd( -64.624, 2.38574, -123.853, 0.74 ) }
    dend_59 { pt3dadd( -64.7247, 2.44995, -124.011, 0.74 ) }
    dend_59 { pt3dadd( -66.3368, 3.40723, -125.433, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_59 { pt3dadd( -66.5169, 3.52432, -125.597, 0.29 ) }
    dend_59 { pt3dadd( -66.5655, 3.55905, -125.646, 0.29 ) }
    dend_59 { pt3dadd( -66.9039, 3.84053, -126.021, 0.29 ) }
    dend_59 { pt3dadd( -67.0967, 4.01594, -126.247, 0.52 ) }
    dend_59 { pt3dadd( -67.1339, 4.05001, -126.289, 0.52 ) }
    dend_59 { pt3dadd( -67.374, 4.30636, -126.547, 0.52 ) }
    dend_59 { pt3dadd( -67.585, 4.5629, -126.8, 0.52 ) }
    dend_59 { pt3dadd( -68.536, 5.65496, -128.091, 0.29 ) }
    dend_59 { pt3dadd( -68.6216, 5.73782, -128.187, 0.59 ) }
    dend_59 { pt3dadd( -68.7145, 5.81315, -128.273, 0.59 ) }
    dend_59 { pt3dadd( -69.0598, 6.05992, -128.534, 1.03 ) }
    dend_59 { pt3dadd( -69.4299, 6.29013, -128.753, 1.03 ) }
    dend_59 { pt3dadd( -70.4052, 6.80814, -129.493, 0.66 ) }
    dend_59 { pt3dadd( -71.362, 7.18605, -130.278, 0.22 ) }
    dend_59 { pt3dadd( -71.6034, 7.30002, -130.523, 0.66 ) }
    dend_59 { pt3dadd( -71.7616, 7.38723, -130.709, 0.96 ) }
    dend_59 { pt3dadd( -72.0702, 7.57158, -131.111, 0.96 ) }
    dend_59 { pt3dadd( -73.6556, 8.67222, -133.403, 0.44 ) }
    dend_59 { pt3dadd( -73.6933, 8.70214, -133.463, 0.44 ) }
    dend_59 { pt3dadd( -74.2104, 9.1391, -134.405, 0.29 ) }
    dend_59 { pt3dadd( -74.3211, 9.21982, -134.643, 0.29 ) }
    dend_59 { pt3dadd( -74.5338, 9.32688, -135.035, 0.29 ) }
    dend_59 { pt3dadd( -74.8529, 9.43707, -135.511, 0.96 ) }
    dend_59 { pt3dadd( -75.1057, 9.50792, -135.784, 1.4 ) }
    dend_59 { pt3dadd( -75.2495, 9.54133, -135.93, 1.4 ) }
    dend_59 { pt3dadd( -77.9232, 10.0214, -138.475, 0.44 ) }
    dend_59 { pt3dadd( -78.8868, 10.186, -139.377, 0.29 ) }
    dend_59 { pt3dadd( -79.3703, 10.2718, -139.865, 0.29 ) }
    dend_59 { pt3dadd( -79.976, 10.3836, -140.503, 0.29 ) }
    dend_59 { pt3dadd( -80.0217, 10.3937, -140.55, 0.29 ) }
    dend_59 { pt3dadd( -80.3114, 10.4632, -140.82, 0.29 ) }
    dend_59 { pt3dadd( -80.8752, 10.6177, -141.217, 0.88 ) }
    dend_59 { pt3dadd( -81.8825, 10.9393, -142.267, 0.74 ) }
    dend_59 { pt3dadd( -81.9234, 10.9454, -142.318, 0.74 ) }
    dend_59 { pt3dadd( -82.1918, 10.9449, -142.666, 0.74 ) }
    dend_59 { pt3dadd( -82.2478, 10.9406, -142.734, 0.74 ) }
    dend_59 { pt3dadd( -82.7081, 10.8783, -143.338, 0.52 ) }
    dend_59 { pt3dadd( -82.7554, 10.8707, -143.398, 0.52 ) }
    dend_59 { pt3dadd( -83.6059, 10.6923, -144.392, 0.22 ) }
    dend_59 { pt3dadd( -83.8257, 10.6421, -144.652, 0.44 ) }
    dend_59 { pt3dadd( -84.0041, 10.6024, -144.871, 0.59 ) }
    dend_59 { pt3dadd( -85.2567, 10.3258, -146.35, 0.22 ) }
    dend_59 { pt3dadd( -85.3525, 10.3082, -146.453, 0.22 ) }
    dend_59 { pt3dadd( -85.6157, 10.2694, -146.723, 0.66 ) }
    dend_59 { pt3dadd( -85.7108, 10.2604, -146.814, 0.66 ) }
    dend_59 { pt3dadd( -86.9394, 10.1322, -147.87, 0.22 ) }
    dend_59 { pt3dadd( -87.2684, 10.0955, -148.09, 0.22 ) }
    dend_59 { pt3dadd( -87.8587, 10.0354, -148.329, 0.66 ) }
    dend_59 { pt3dadd( -88.0924, 10.0191, -148.407, 1.25 ) }
    dend_59 { pt3dadd( -88.2829, 10.0158, -148.468, 1.25 ) }
    dend_59 { pt3dadd( -88.7727, 10.021, -148.601, 1.55 ) }
    dend_59 { pt3dadd( -89.4136, 10.0472, -148.699, 1.33 ) }
    dend_59 { pt3dadd( -89.7997, 10.0699, -148.797, 1.33 ) }
    dend_59 { pt3dadd( -90.2014, 10.0906, -148.923, 1.33 ) }
    dend_59 { pt3dadd( -90.9458, 10.1293, -149.163, 0.81 ) }
    dend_59 { pt3dadd( -91.1426, 10.1378, -149.229, 0.81 ) }
    dend_59 { pt3dadd( -92.1209, 10.1941, -149.601, 0.44 ) }
    dend_59 { pt3dadd( -93.2306, 10.2902, -150.041, 0.44 ) }
    dend_59 { pt3dadd( -93.2912, 10.2948, -150.067, 0.44 ) }
    dend_59 { pt3dadd( -93.9945, 10.3475, -150.378, 0.44 ) }
    dend_59 { pt3dadd( -94.0562, 10.3501, -150.4, 0.44 ) }
    dend_59 { pt3dadd( -95.2435, 10.3674, -150.755, 0.44 ) }
    dend_59 { pt3dadd( -95.6328, 10.3481, -150.844, 0.44 ) }
    dend_59 { pt3dadd( -96.2301, 10.2616, -150.923, 0.44 ) }
    dend_59 { pt3dadd( -96.3829, 10.2304, -150.938, 0.44 ) }
    dend_59 { pt3dadd( -97.6127, 9.94525, -151.011, 0.29 ) }
    dend_59 { pt3dadd( -98.1467, 9.80723, -151.019, 0.96 ) }
    dend_59 { pt3dadd( -99.3962, 9.53109, -151.376, 0.22 ) }
    dend_59 { pt3dadd( -99.937, 9.44879, -151.58, 1.25 ) }
    dend_59 { pt3dadd( -100.05, 9.4404, -151.629, 1.25 ) }
    dend_59 { pt3dadd( -100.622, 9.43316, -151.92, 1.25 ) }
    dend_59 { pt3dadd( -100.75, 9.43952, -151.988, 1.25 ) }
    dend_59 { pt3dadd( -103.954, 9.77633, -153.56, 0.44 ) }
    dend_59 { pt3dadd( -105.196, 9.98625, -154.073, 0.29 ) }
    dend_59 { pt3dadd( -105.617, 10.065, -154.185, 0.29 ) }
    dend_59 { pt3dadd( -105.679, 10.0765, -154.207, 0.29 ) }
    dend_59 { pt3dadd( -107.439, 10.2518, -154.931, 0.96 ) }
    dend_59 { pt3dadd( -107.501, 10.2558, -154.954, 0.96 ) }
    dend_59 { pt3dadd( -107.836, 10.2651, -155.062, 1.33 ) }
    dend_59 { pt3dadd( -108.341, 10.2821, -155.282, 1.33 ) }
    dend_59 { pt3dadd( -110.646, 10.4496, -156.407, 0.37 ) }
    dend_59 { pt3dadd( -111.848, 10.5781, -157.032, 0.22 ) }
    dend_59 { pt3dadd( -112.516, 10.6637, -157.41, 0.22 ) }
    dend_59 { pt3dadd( -112.761, 10.7015, -157.543, 0.74 ) }
    dend_59 { pt3dadd( -113.231, 10.7906, -157.776, 1.18 ) }
    dend_59 { pt3dadd( -115.025, 11.1943, -158.531, 0.29 ) }
    dend_59 { pt3dadd( -115.392, 11.2993, -158.617, 0.29 ) }
    dend_59 { pt3dadd( -115.452, 11.3223, -158.629, 0.29 ) }
    dend_59 { pt3dadd( -115.625, 11.3904, -158.661, 0.96 ) }
    dend_59 { pt3dadd( -116.262, 11.6625, -158.749, 0.96 ) }
    dend_59 { pt3dadd( -116.33, 11.6934, -158.753, 0.96 ) }
    dend_59 { pt3dadd( -117.435, 12.2352, -158.722, 0.37 ) }
    dend_59 { pt3dadd( -117.746, 12.386, -158.715, 0.66 ) }
    dend_59 { pt3dadd( -118.12, 12.5749, -158.726, 0.81 ) }
    dend_59 { pt3dadd( -118.828, 12.9412, -158.832, 0.66 ) }
    dend_59 { pt3dadd( -119.32, 13.2197, -158.971, 0.37 ) }
    dend_59 { pt3dadd( -119.541, 13.3269, -159.017, 0.74 ) }
    dend_59 { pt3dadd( -120.187, 13.5966, -159.113, 1.11 ) }
    dend_59 { pt3dadd( -120.867, 13.8605, -159.168, 1.11 ) }
    dend_59 { pt3dadd( -121.848, 14.2313, -159.184, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_59 { pt3dadd( -122.377, 14.4201, -159.224, 0.81 ) }
    dend_59 { pt3dadd( -124.512, 15.1997, -159.455, 0.29 ) }
    dend_59 { pt3dadd( -124.963, 15.3615, -159.505, 0.44 ) }
    dend_59 { pt3dadd( -125.383, 15.5171, -159.545, 0.74 ) }
    dend_59 { pt3dadd( -125.973, 15.7341, -159.58, 0.74 ) }
    dend_59 { pt3dadd( -127.326, 16.2856, -159.668, 0.29 ) }
    dend_59 { pt3dadd( -127.855, 16.5379, -159.746, 0.29 ) }
    dend_59 { pt3dadd( -127.984, 16.6143, -159.778, 0.29 ) }
    dend_59 { pt3dadd( -128.356, 16.8225, -159.825, 0.66 ) }
    dend_59 { pt3dadd( -128.815, 17.0789, -159.824, 0.96 ) }
    dend_59 { pt3dadd( -129.28, 17.3484, -159.766, 0.74 ) }
    dend_59 { pt3dadd( -129.963, 17.7572, -159.604, 0.29 ) }
    dend_59 { pt3dadd( -130.956, 18.378, -159.371, 0.29 ) }
    dend_59 { pt3dadd( -131.253, 18.5781, -159.303, 0.66 ) }
    dend_59 { pt3dadd( -131.755, 18.9242, -159.211, 0.96 ) }
    dend_59 { pt3dadd( -132.145, 19.2074, -159.159, 0.29 ) }
    dend_59 { pt3dadd( -132.499, 19.4668, -159.141, 0.29 ) }
    dend_59 { pt3dadd( -132.664, 19.5898, -159.153, 0.29 ) }
    dend_59 { pt3dadd( -133.046, 19.8608, -159.203, 0.29 ) }
    dend_59 { pt3dadd( -133.443, 20.0722, -159.266, 0.29 ) }
    dend_59 { pt3dadd( -133.752, 20.1451, -159.247, 0.44 ) }
    dend_59 { pt3dadd( -133.806, 20.1493, -159.231, 0.44 ) }
    dend_59 { pt3dadd( -134.055, 20.1656, -159.123, 0.44 ) }
    dend_59 { pt3dadd( -134.903, 20.2141, -158.695, 0.37 ) }
    dend_59 { pt3dadd( -134.954, 20.2219, -158.672, 0.37 ) }
    dend_59 { pt3dadd( -136.106, 20.5017, -158.188, 0.88 ) }
    dend_59 { pt3dadd( -136.464, 20.6037, -158.05, 1.33 ) }
    dend_59 { pt3dadd( -136.949, 20.7724, -157.897, 1.25 ) }
    dend_59 { pt3dadd( -137.011, 20.7959, -157.882, 1.25 ) }
    dend_59 { pt3dadd( -138.561, 21.3935, -157.651, 0.44 ) }
    dend_59 { pt3dadd( -138.925, 21.5091, -157.634, 0.81 ) }
    dend_59 { pt3dadd( -139.127, 21.5541, -157.657, 0.81 ) }
    dend_59 { pt3dadd( -139.724, 21.6332, -157.752, 0.22 ) }
    dend_59 { pt3dadd( -140.298, 21.5579, -157.999, 0.22 ) }
    dend_59 { pt3dadd( -140.63, 21.4225, -158.236, 0.22 ) }
    dend_59 { pt3dadd( -140.89, 21.2414, -158.492, 0.22 ) }
    dend_59 { pt3dadd( -141.387, 20.8489, -159.068, 0.81 ) }
    dend_59 { pt3dadd( -141.558, 20.7102, -159.273, 1.18 ) }
    dend_59 { pt3dadd( -142.976, 19.4014, -161.067, 0.37 ) }
    dend_59 { pt3dadd( -143.137, 19.2423, -161.278, 0.44 ) }
    dend_59 { pt3dadd( -143.29, 19.0868, -161.472, 0.44 ) }
    dend_59 { pt3dadd( -144.232, 18.0784, -162.576, 0.37 ) }
    dend_59 { pt3dadd( -144.537, 17.7413, -162.893, 0.37 ) }
    dend_59 { pt3dadd( -144.891, 17.4293, -163.173, 0.81 ) }
    dend_59 { pt3dadd( -145.291, 17.1345, -163.405, 1.03 ) }
    dend_59 { pt3dadd( -145.656, 16.8562, -163.609, 1.18 ) }
    dend_59 { pt3dadd( -146.134, 16.4814, -163.917, 1.18 ) }
    dend_59 { pt3dadd( -146.18, 16.4455, -163.947, 1.18 ) }
    dend_59 { pt3dadd( -148.274, 14.8702, -165.434, 0.29 ) }
    dend_59 { pt3dadd( -148.602, 14.6329, -165.676, 1.18 ) }
    dend_59 { pt3dadd( -149.009, 14.3421, -165.991, 1.47 ) }
    dend_59 { pt3dadd( -150.352, 13.3962, -166.939, 0.52 ) }
    dend_59 { pt3dadd( -150.761, 13.1141, -167.193, 0.37 ) }
    dend_59 { pt3dadd( -150.979, 12.9583, -167.3, 0.81 ) }
    dend_59 { pt3dadd( -151.207, 12.7815, -167.391, 0.96 ) }
    dend_59 { pt3dadd( -151.306, 12.7054, -167.429, 0.96 ) }
    dend_59 { pt3dadd( -152.46, 11.7971, -167.831, 0.37 ) }
    dend_59 { pt3dadd( -152.664, 11.6137, -167.886, 0.74 ) }
    dend_59 { pt3dadd( -152.901, 11.3803, -167.983, 0.74 ) }
    dend_59 { pt3dadd( -153.904, 10.1953, -168.531, 0.44 ) }
    dend_59 { pt3dadd( -154.617, 9.1704, -169.011, 0.29 ) }
    dend_59 { pt3dadd( -154.767, 8.92349, -169.128, 0.66 ) }
    dend_59 { pt3dadd( -154.972, 8.51502, -169.328, 1.03 ) }
    dend_59 { pt3dadd( -155.244, 7.9289, -169.593, 0.29 ) }
    dend_59 { pt3dadd( -155.594, 7.05005, -169.923, 0.29 ) }
    dend_59 { pt3dadd( -155.878, 6.22736, -170.135, 0.29 ) }
    dend_59 { pt3dadd( -156.024, 5.71436, -170.282, 0.29 ) }
    dend_59 { pt3dadd( -156.109, 5.40227, -170.372, 0.66 ) }
    dend_59 { pt3dadd( -156.32, 4.66323, -170.581, 0.29 ) }
    dend_59 { pt3dadd( -156.503, 4.03421, -170.724, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 70/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -29.0638, -23.1095, -28.7142, 1.84 ) }
    dend_54 { pt3dadd( -29.9447, -23.7327, -28.7162, 1.84 ) }
    dend_54 { pt3dadd( -31.1744, -24.705, -28.7163, 0.29 ) }
    dend_54 { pt3dadd( -31.8862, -25.3519, -28.7141, 0.29 ) }
    dend_54 { pt3dadd( -32.5523, -25.9623, -28.7118, 0.81 ) }
    dend_54 { pt3dadd( -33.1458, -26.5507, -28.7057, 0.29 ) }
    dend_54 { pt3dadd( -33.7572, -27.1687, -28.697, 0.22 ) }
    dend_54 { pt3dadd( -33.9754, -27.3925, -28.6929, 0.81 ) }
    dend_54 { pt3dadd( -34.4374, -27.9719, -28.6788, 0.81 ) }
    dend_54 { pt3dadd( -34.8182, -28.4729, -28.6653, 0.81 ) }
    dend_54 { pt3dadd( -35.3384, -29.153, -28.6464, 0.81 ) }
    dend_54 { pt3dadd( -35.8685, -29.8681, -28.6263, 0.52 ) }
    dend_54 { pt3dadd( -36.3334, -30.5213, -28.6089, 0.52 ) }
    dend_54 { pt3dadd( -36.7167, -31.1091, -28.6088, 1.11 ) }
    dend_54 { pt3dadd( -37.0869, -31.7467, -28.6219, 1.33 ) }
    dend_54 { pt3dadd( -37.33, -32.2611, -28.6397, 1.33 ) }
    dend_54 { pt3dadd( -37.4366, -32.5147, -28.652, 1.11 ) }
    dend_54 { pt3dadd( -37.7671, -33.5076, -28.7026, 1.03 ) }
    dend_54 { pt3dadd( -37.9393, -34.0463, -28.7317, 0.29 ) }
    dend_54 { pt3dadd( -38.093, -34.4748, -28.7558, 0.29 ) }
    dend_54 { pt3dadd( -38.3239, -35.1871, -28.7879, 0.22 ) }
    dend_54 { pt3dadd( -38.5913, -35.8851, -28.8146, 0.22 ) }
    dend_54 { pt3dadd( -38.8346, -36.4347, -28.8295, 0.88 ) }
    dend_54 { pt3dadd( -39.0429, -36.849, -28.8345, 1.11 ) }
    dend_54 { pt3dadd( -39.2777, -37.2889, -28.833, 1.11 ) }
    dend_54 { pt3dadd( -40.5347, -39.2735, -28.8305, 0.22 ) }
    dend_54 { pt3dadd( -41.1796, -40.1145, -28.8974, 0.96 ) }
    dend_54 { pt3dadd( -41.8488, -40.9325, -29.0107, 1.33 ) }
    dend_54 { pt3dadd( -42.9039, -42.1557, -29.2395, 0.37 ) }
    dend_54 { pt3dadd( -44.0817, -43.4261, -29.5308, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_54 { pt3dadd( -45.22, -44.4734, -29.7644, 0.37 ) }
    dend_54 { pt3dadd( -46.8116, -45.667, -30.0354, 1.25 ) }
    dend_54 { pt3dadd( -47.5716, -46.2322, -30.139, 1.92 ) }
    dend_54 { pt3dadd( -48.2698, -46.6999, -30.2083, 1.25 ) }
    dend_54 { pt3dadd( -49.0236, -47.1548, -30.2455, 1.03 ) }
    dend_54 { pt3dadd( -50.5443, -48.0659, -29.9831, 0.29 ) }
    dend_54 { pt3dadd( -50.974, -48.363, -29.7977, 0.52 ) }
    dend_54 { pt3dadd( -51.7224, -48.8597, -29.2892, 0.29 ) }
    dend_54 { pt3dadd( -51.8006, -48.9058, -29.2312, 0.29 ) }
    dend_54 { pt3dadd( -52.1123, -49.0957, -29.0326, 0.29 ) }
    dend_54 { pt3dadd( -54.0266, -50.3669, -28.0267, 0.88 ) }
    dend_54 { pt3dadd( -54.0943, -50.4144, -28.0011, 0.88 ) }
    dend_54 { pt3dadd( -54.5493, -50.7266, -27.8532, 1.4 ) }
    dend_54 { pt3dadd( -55.0844, -51.073, -27.7105, 1.11 ) }
    dend_54 { pt3dadd( -57.2615, -52.4888, -27.3212, 0.44 ) }
    dend_54 { pt3dadd( -57.5912, -52.706, -27.3117, 1.18 ) }
    dend_54 { pt3dadd( -57.9229, -52.9243, -27.3757, 1.18 ) }
    dend_54 { pt3dadd( -58.3885, -53.2321, -27.4692, 0.96 ) }
    // Section: dend_30, id: dend_30, parent: dend_0 (entry count 18/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.8645, 17.6424, -4.02522, 1.03 ) }
    dend_30 { pt3dadd( -4.66244, 18.1849, -4.18808, 1.03 ) }
    dend_30 { pt3dadd( -6.40118, 19.3204, -4.49483, 0.74 ) }
    dend_30 { pt3dadd( -6.89178, 19.6168, -4.56304, 0.81 ) }
    dend_30 { pt3dadd( -8.1436, 20.3291, -4.57205, 0.96 ) }
    dend_30 { pt3dadd( -9.28526, 20.9013, -4.63809, 0.96 ) }
    dend_30 { pt3dadd( -10.4525, 21.4543, -4.73583, 1.47 ) }
    dend_30 { pt3dadd( -11.0728, 21.7141, -4.83956, 1.47 ) }
    dend_30 { pt3dadd( -11.9099, 22.0292, -4.99761, 1.47 ) }
    dend_30 { pt3dadd( -13.7596, 22.6772, -5.40218, 0.88 ) }
    dend_30 { pt3dadd( -16.5222, 23.5621, -6.088, 0.81 ) }
    dend_30 { pt3dadd( -17.1052, 23.7529, -6.22742, 0.59 ) }
    dend_30 { pt3dadd( -18.2077, 24.1233, -6.56261, 0.96 ) }
    dend_30 { pt3dadd( -19.0858, 24.4421, -6.88151, 0.96 ) }
    dend_30 { pt3dadd( -19.6063, 24.6488, -7.16558, 0.81 ) }
    dend_30 { pt3dadd( -20.1249, 24.8894, -7.50163, 0.81 ) }
    dend_30 { pt3dadd( -20.6288, 25.1608, -7.77822, 0.96 ) }
    dend_30 { pt3dadd( -20.9567, 25.3439, -7.97298, 0.96 ) }
    dend_30 { pt3dadd( -21.7581, 25.806, -8.4814, 1.25 ) }
    dend_30 { pt3dadd( -23.3999, 26.7286, -9.71816, 1.84 ) }
    dend_30 { pt3dadd( -24.1565, 27.1783, -10.3824, 1.84 ) }
    dend_30 { pt3dadd( -24.3404, 27.2947, -10.5678, 1.84 ) }
    dend_30 { pt3dadd( -24.6231, 27.4805, -10.8813, 1.84 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 41/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.8645, 17.6424, -4.02522, 2.06 ) }
    dend_1 { pt3dadd( -3.89827, 18.4161, -3.99853, 2.06 ) }
    dend_1 { pt3dadd( -3.95451, 19.7048, -3.95408, 1.55 ) }
    dend_1 { pt3dadd( -4.0174, 21.1459, -3.90436, 1.4 ) }
    dend_1 { pt3dadd( -4.06336, 22.1988, -3.86804, 1.84 ) }
    dend_1 { pt3dadd( -4.11619, 23.4094, -3.82628, 1.84 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 47/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.42008, -41.5756, 0.232917, 0.52 ) }
    axon_1 { pt3dadd( 4.61198, -56.5282, 0.232917, 0.52 ) }
    axon_1 { pt3dadd( 5.80388, -71.4808, 0.232917, 0.52 ) }
    // Section: dend_132, id: dend_132, parent: dend_118 (entry count 50/100)
    dend_132 { pt3dclear() }
    dend_132 { pt3dadd( -5.75849, -42.1148, 11.2044, 0.88 ) }
    dend_132 { pt3dadd( -6.49133, -41.949, 11.927, 0.88 ) }
    dend_132 { pt3dadd( -7.00379, -41.833, 12.4324, 0.96 ) }
    dend_132 { pt3dadd( -7.39225, -41.7451, 12.8154, 0.96 ) }
    dend_132 { pt3dadd( -7.65582, -41.6855, 13.0753, 0.96 ) }
    // Section: dend_119, id: dend_119, parent: dend_118 (entry count 55/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( -5.75849, -42.1148, 11.2044, 0.88 ) }
    dend_119 { pt3dadd( -6.08896, -42.7792, 11.411, 0.88 ) }
    dend_119 { pt3dadd( -6.35222, -43.2168, 11.5781, 0.59 ) }
    dend_119 { pt3dadd( -6.69424, -43.7112, 11.7731, 0.59 ) }
    dend_119 { pt3dadd( -7.53185, -44.9563, 12.2345, 0.37 ) }
    dend_119 { pt3dadd( -8.00169, -45.6684, 12.4888, 0.37 ) }
    dend_119 { pt3dadd( -8.54343, -46.589, 12.8056, 0.37 ) }
    dend_119 { pt3dadd( -9.13424, -47.7552, 13.3643, 0.52 ) }
    dend_119 { pt3dadd( -9.44757, -48.5497, 13.8336, 0.52 ) }
    dend_119 { pt3dadd( -9.62146, -49.2904, 14.4545, 0.66 ) }
    dend_119 { pt3dadd( -9.62943, -49.3517, 14.5137, 0.66 ) }
    dend_119 { pt3dadd( -9.59155, -50.3884, 15.7147, 0.59 ) }
    dend_119 { pt3dadd( -9.16648, -52.0314, 17.9568, 0.88 ) }
    dend_119 { pt3dadd( -9.006, -52.3622, 18.485, 1.03 ) }
    dend_119 { pt3dadd( -8.40693, -53.3423, 20.3403, 1.03 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 70/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 1.69719, -44.53, 10.4234, 0.81 ) }
    dend_109 { pt3dadd( 2.67172, -45.4451, 10.3483, 0.81 ) }
    dend_109 { pt3dadd( 3.82098, -46.4789, 10.2126, 0.81 ) }
    dend_109 { pt3dadd( 4.47323, -47.0375, 10.1224, 0.74 ) }
    dend_109 { pt3dadd( 5.51514, -47.9217, 9.96934, 0.59 ) }
    dend_109 { pt3dadd( 6.00287, -48.3356, 9.89765, 1.03 ) }
    dend_109 { pt3dadd( 6.92717, -49.12, 9.7618, 1.11 ) }
    dend_109 { pt3dadd( 7.63509, -49.6992, 9.5805, 1.11 ) }
    dend_109 { pt3dadd( 8.26834, -50.2134, 9.40575, 0.96 ) }
    dend_109 { pt3dadd( 8.41864, -50.332, 9.36376, 0.96 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 80/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 1.69719, -44.53, 10.4234, 0.29 ) }
    dend_108 { pt3dadd( 1.07209, -44.4038, 10.1971, 0.29 ) }
    dend_108 { pt3dadd( 0.839475, -44.3538, 10.0954, 0.29 ) }
    dend_108 { pt3dadd( 0.2145, -44.2196, 9.82216, 0.22 ) }
    dend_108 { pt3dadd( -0.257648, -44.1182, 9.61574, 0.22 ) }
    dend_108 { pt3dadd( -0.599308, -44.0448, 9.46637, 0.22 ) }
    dend_108 { pt3dadd( -1.09154, -43.9391, 9.25116, 0.74 ) }
    dend_108 { pt3dadd( -1.18475, -43.9089, 9.19441, 0.74 ) }
    dend_108 { pt3dadd( -7.58006, -41.0026, 5.38252, 0.74 ) }
    dend_108 { pt3dadd( -14.2691, -37.3222, 3.08422, 0.74 ) }
    dend_108 { pt3dadd( -20.6926, -33.04, 1.15951, 0.74 ) }
    dend_108 { pt3dadd( -27.9502, -29.8762, 0.117951, 0.74 ) }
    // Section: dend_95, id: dend_95, parent: dend_91 (entry count 92/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 4.95406, -18.7722, -11.0721, 0.59 ) }
    dend_95 { pt3dadd( 5.49727, -19.7369, -13.2106, 0.59 ) }
    dend_95 { pt3dadd( 5.52026, -19.7744, -13.2865, 0.59 ) }
    dend_95 { pt3dadd( 5.78757, -20.2203, -14.2205, 0.59 ) }
    dend_95 { pt3dadd( 6.86692, -22.1328, -18.0716, 0.96 ) }
    dend_95 { pt3dadd( 7.18961, -22.6413, -19.1009, 0.59 ) }
    dend_95 { pt3dadd( 7.44965, -22.9847, -19.7959, 0.44 ) }
    dend_95 { pt3dadd( 7.77938, -23.3437, -20.5473, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_95 { pt3dadd( 9.09134, -24.4805, -23.0801, 1.25 ) }
    dend_95 { pt3dadd( 9.38704, -24.683, -23.5369, 1.25 ) }
    dend_95 { pt3dadd( 10.7141, -25.4963, -25.066, 0.52 ) }
    dend_95 { pt3dadd( 11.4682, -25.9625, -25.9571, 0.52 ) }
    dend_95 { pt3dadd( 11.5174, -25.9917, -26.0119, 0.52 ) }
    dend_95 { pt3dadd( 12.6481, -26.6025, -27.0565, 0.52 ) }
    dend_95 { pt3dadd( 13.5403, -27.0868, -27.7246, 0.52 ) }
    dend_95 { pt3dadd( 14.4056, -27.5889, -28.3487, 0.88 ) }
    dend_95 { pt3dadd( 15.3168, -28.1886, -28.986, 1.55 ) }
    dend_95 { pt3dadd( 16.144, -28.7901, -29.5775, 2.14 ) }
    dend_95 { pt3dadd( 16.8268, -29.3126, -30.0353, 1.69 ) }
    dend_95 { pt3dadd( 17.8238, -30.1202, -30.6538, 1.18 ) }
    dend_95 { pt3dadd( 18.4956, -30.6549, -31.07, 1.03 ) }
    dend_95 { pt3dadd( 18.6172, -30.7482, -31.1321, 1.03 ) }
    dend_95 { pt3dadd( 18.9819, -31.0214, -31.2648, 0.74 ) }
    dend_95 { pt3dadd( 19.2877, -31.2391, -31.3697, 0.74 ) }
    dend_95 { pt3dadd( 19.9617, -31.7106, -31.6943, 0.74 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 17/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 4.95406, -18.7722, -11.0721, 0.29 ) }
    dend_92 { pt3dadd( 7.06516, -20.0397, -11.3709, 0.29 ) }
    dend_92 { pt3dadd( 7.47046, -20.3469, -11.2684, 0.29 ) }
    dend_92 { pt3dadd( 7.87892, -20.7086, -11.0897, 0.29 ) }
    dend_92 { pt3dadd( 8.31362, -21.1398, -10.8027, 0.29 ) }
    dend_92 { pt3dadd( 8.83224, -21.6933, -10.3864, 0.74 ) }
    dend_92 { pt3dadd( 9.26796, -22.1909, -9.9504, 0.88 ) }
    dend_92 { pt3dadd( 9.78667, -22.894, -9.16293, 0.66 ) }
    dend_92 { pt3dadd( 10.076, -23.2735, -8.71923, 0.66 ) }
    dend_92 { pt3dadd( 10.5097, -23.7987, -7.99816, 0.66 ) }
    dend_92 { pt3dadd( 10.7322, -24.025, -7.64357, 0.66 ) }
    dend_92 { pt3dadd( 11.2954, -24.5156, -6.79661, 0.66 ) }
    dend_92 { pt3dadd( 11.7363, -24.8424, -6.20026, 0.52 ) }
    dend_92 { pt3dadd( 12.3812, -25.2852, -5.46106, 0.29 ) }
    dend_92 { pt3dadd( 13.225, -25.8481, -4.58875, 0.29 ) }
    dend_92 { pt3dadd( 13.7136, -26.1806, -4.17377, 0.37 ) }
    dend_92 { pt3dadd( 13.7648, -26.216, -4.13669, 0.37 ) }
    dend_92 { pt3dadd( 14.4268, -26.6939, -3.74564, 0.37 ) }
    dend_92 { pt3dadd( 14.8786, -27.0632, -3.48185, 0.44 ) }
    dend_92 { pt3dadd( 15.8994, -28.0569, -2.87272, 0.44 ) }
    dend_92 { pt3dadd( 16.4795, -28.6531, -2.56214, 1.03 ) }
    dend_92 { pt3dadd( 16.6942, -28.8794, -2.43032, 1.4 ) }
    dend_92 { pt3dadd( 17.0872, -29.2966, -2.17345, 1.62 ) }
    dend_92 { pt3dadd( 17.8229, -30.1218, -1.54058, 0.44 ) }
    dend_92 { pt3dadd( 18.2057, -30.59, -1.13967, 0.59 ) }
    dend_92 { pt3dadd( 18.4965, -31.0457, -0.738741, 0.22 ) }
    dend_92 { pt3dadd( 18.8878, -31.7892, -0.0691609, 0.07 ) }
    dend_92 { pt3dadd( 19.0227, -32.0851, 0.203104, 0.07 ) }
    dend_92 { pt3dadd( 19.4968, -33.2832, 1.30859, 0.96 ) }
    dend_92 { pt3dadd( 19.5368, -33.4573, 1.50701, 1.25 ) }
    dend_92 { pt3dadd( 19.6292, -34.3041, 2.54497, 0.22 ) }
    dend_92 { pt3dadd( 19.6453, -34.7129, 3.05906, 0.22 ) }
    dend_92 { pt3dadd( 19.6507, -35.1016, 3.52369, 0.74 ) }
    dend_92 { pt3dadd( 19.6619, -35.3393, 3.78545, 0.88 ) }
    dend_92 { pt3dadd( 19.898, -38.1417, 6.57529, 0.29 ) }
    dend_92 { pt3dadd( 19.9639, -38.6193, 7.03143, 0.29 ) }
    dend_92 { pt3dadd( 20.2725, -40.1539, 8.43963, 1.0 ) }
    dend_92 { pt3dadd( 20.4472, -40.7938, 9.01158, 1.5 ) }
    dend_92 { pt3dadd( 20.9028, -42.079, 10.0718, 0.29 ) }
    dend_92 { pt3dadd( 21.1628, -42.588, 10.4901, 0.29 ) }
    dend_92 { pt3dadd( 21.6056, -43.1677, 10.9056, 0.29 ) }
    dend_92 { pt3dadd( 21.9067, -43.4941, 11.1715, 0.29 ) }
    dend_92 { pt3dadd( 22.7216, -44.2366, 11.8294, 0.52 ) }
    dend_92 { pt3dadd( 22.8402, -44.3339, 11.9315, 1.03 ) }
    dend_92 { pt3dadd( 24.0793, -45.2953, 12.981, 1.18 ) }
    dend_92 { pt3dadd( 24.4927, -45.6365, 13.323, 1.03 ) }
    dend_92 { pt3dadd( 24.9619, -46.0815, 13.6774, 0.96 ) }
    dend_92 { pt3dadd( 25.2996, -46.4434, 13.8824, 0.96 ) }
    dend_92 { pt3dadd( 25.4541, -46.6277, 13.979, 0.88 ) }
    dend_92 { pt3dadd( 26.2119, -47.5297, 14.4549, 0.52 ) }
    dend_92 { pt3dadd( 26.2627, -47.5905, 14.4849, 0.52 ) }
    dend_92 { pt3dadd( 26.7665, -48.161, 14.8199, 1.33 ) }
    dend_92 { pt3dadd( 27.1281, -48.5465, 15.125, 1.33 ) }
    dend_92 { pt3dadd( 28.5055, -49.9571, 16.4196, 0.29 ) }
    dend_92 { pt3dadd( 29.2699, -50.7148, 17.1992, 0.29 ) }
    dend_92 { pt3dadd( 29.3277, -50.768, 17.2602, 0.29 ) }
    dend_92 { pt3dadd( 29.4911, -50.9051, 17.4252, 0.59 ) }
    dend_92 { pt3dadd( 30.6673, -51.7808, 18.5422, 0.22 ) }
    dend_92 { pt3dadd( 31.1595, -52.0991, 18.9483, 0.22 ) }
    dend_92 { pt3dadd( 31.3031, -52.1802, 19.0316, 0.22 ) }
    dend_92 { pt3dadd( 31.9565, -52.5271, 19.4059, 0.22 ) }
    dend_92 { pt3dadd( 32.0285, -52.5644, 19.4398, 0.22 ) }
    dend_92 { pt3dadd( 32.4205, -52.7518, 19.5679, 0.22 ) }
    dend_92 { pt3dadd( 32.5956, -52.8049, 19.5977, 0.22 ) }
    dend_92 { pt3dadd( 33.0683, -52.9072, 19.7035, 0.88 ) }
    dend_92 { pt3dadd( 33.1617, -52.9252, 19.7269, 0.88 ) }
    dend_92 { pt3dadd( 33.6432, -53.004, 19.8586, 1.18 ) }
    dend_92 { pt3dadd( 33.82, -53.0306, 19.9093, 1.18 ) }
    dend_92 { pt3dadd( 35.4517, -53.2326, 20.4087, 0.22 ) }
    dend_92 { pt3dadd( 35.9461, -53.2892, 20.5685, 0.22 ) }
    dend_92 { pt3dadd( 36.2533, -53.3153, 20.6747, 0.44 ) }
    dend_92 { pt3dadd( 40.8594, -61.1367, 28.5461, 0.44 ) }
    dend_92 { pt3dadd( 46.7989, -69.0053, 35.4015, 0.44 ) }
    // Section: dend_84, id: dend_84, parent: dend_76 (entry count 90/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -0.18249, -18.5016, -4.33901, 0.22 ) }
    dend_84 { pt3dadd( 0.0390844, -18.4549, -5.15783, 0.22 ) }
    dend_84 { pt3dadd( 0.26396, -18.3663, -5.98235, 0.22 ) }
    dend_84 { pt3dadd( 0.368236, -18.3534, -6.50379, 0.22 ) }
    dend_84 { pt3dadd( 0.425625, -18.3812, -6.83454, 0.22 ) }
    dend_84 { pt3dadd( 0.675077, -18.6542, -8.62976, 0.66 ) }
    dend_84 { pt3dadd( 0.68493, -18.7136, -8.99949, 0.66 ) }
    dend_84 { pt3dadd( 0.663793, -18.7512, -9.26289, 0.66 ) }
    dend_84 { pt3dadd( 0.3065, -18.9953, -11.0312, 0.37 ) }
    dend_84 { pt3dadd( 0.121838, -19.1375, -11.7705, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_84 { pt3dadd( 0.0348577, -19.2114, -12.0894, 0.37 ) }
    dend_84 { pt3dadd( -0.566463, -19.8329, -14.2509, 0.81 ) }
    dend_84 { pt3dadd( -0.623382, -19.9005, -14.4606, 1.03 ) }
    dend_84 { pt3dadd( -1.05184, -20.4211, -16.0311, 0.52 ) }
    dend_84 { pt3dadd( -1.34704, -20.969, -17.5706, 0.29 ) }
    dend_84 { pt3dadd( -1.34704, -20.969, -17.5706, 0.66 ) }
    dend_84 { pt3dadd( -1.287, -21.1746, -18.0007, 1.11 ) }
    dend_84 { pt3dadd( -1.08328, -21.4918, -18.463, 1.11 ) }
    dend_84 { pt3dadd( -1.01017, -21.5793, -18.5725, 1.11 ) }
    dend_84 { pt3dadd( 0.230656, -22.8312, -19.9947, 0.29 ) }
    dend_84 { pt3dadd( 0.840463, -23.4146, -20.6399, 0.29 ) }
    dend_84 { pt3dadd( 1.13107, -23.7318, -20.9982, 0.96 ) }
    dend_84 { pt3dadd( 1.39913, -24.0769, -21.387, 1.25 ) }
    dend_84 { pt3dadd( 1.67661, -24.5092, -21.8649, 1.55 ) }
    dend_84 { pt3dadd( 2.0663, -25.448, -22.8904, 0.81 ) }
    dend_84 { pt3dadd( 2.08182, -25.8062, -23.252, 0.74 ) }
    dend_84 { pt3dadd( 1.83696, -26.6541, -24.0828, 0.22 ) }
    dend_84 { pt3dadd( 1.66213, -27.0126, -24.4355, 0.22 ) }
    dend_84 { pt3dadd( 1.56535, -27.1711, -24.5805, 0.22 ) }
    dend_84 { pt3dadd( 1.00391, -28.0324, -25.2675, 0.66 ) }
    dend_84 { pt3dadd( 0.658458, -28.6268, -25.7342, 0.66 ) }
    dend_84 { pt3dadd( 0.345554, -29.3249, -26.3077, 0.66 ) }
    dend_84 { pt3dadd( 0.188002, -29.8793, -26.8034, 1.4 ) }
    dend_84 { pt3dadd( 0.0768432, -30.4173, -27.2992, 1.69 ) }
    dend_84 { pt3dadd( 0.0202785, -30.7708, -27.6131, 1.69 ) }
    dend_84 { pt3dadd( -0.11542, -32.177, -28.8219, 0.66 ) }
    dend_84 { pt3dadd( -0.130446, -32.6389, -29.2368, 0.66 ) }
    dend_84 { pt3dadd( -0.133032, -33.3927, -29.9231, 0.59 ) }
    dend_84 { pt3dadd( -0.137015, -33.7255, -30.2182, 0.52 ) }
    dend_84 { pt3dadd( -0.142661, -34.1234, -30.5677, 0.52 ) }
    dend_84 { pt3dadd( -0.150065, -34.6841, -31.0183, 0.66 ) }
    dend_84 { pt3dadd( -0.147926, -35.0112, -31.2293, 0.66 ) }
    dend_84 { pt3dadd( -0.150097, -35.3453, -31.4292, 0.66 ) }
    dend_84 { pt3dadd( -0.146229, -36.0286, -31.7684, 0.52 ) }
    dend_84 { pt3dadd( -0.149367, -36.2972, -31.8927, 0.29 ) }
    dend_84 { pt3dadd( -0.177968, -36.704, -32.0567, 0.29 ) }
    dend_84 { pt3dadd( -0.388271, -37.4566, -32.4071, 0.96 ) }
    dend_84 { pt3dadd( -0.610511, -37.987, -32.669, 1.4 ) }
    dend_84 { pt3dadd( -0.793384, -38.3403, -32.8362, 1.92 ) }
    dend_84 { pt3dadd( -1.01773, -38.7151, -33.0242, 2.36 ) }
    dend_84 { pt3dadd( -1.23256, -39.0399, -33.2001, 2.36 ) }
    dend_84 { pt3dadd( -2.46379, -40.745, -34.1779, 0.29 ) }
    dend_84 { pt3dadd( -2.7999, -41.1832, -34.4387, 0.29 ) }
    dend_84 { pt3dadd( -3.21142, -41.709, -34.7649, 0.29 ) }
    dend_84 { pt3dadd( -3.74974, -42.3995, -35.2281, 0.29 ) }
    dend_84 { pt3dadd( -4.03689, -42.7629, -35.4807, 0.59 ) }
    dend_84 { pt3dadd( -4.11734, -42.8632, -35.5485, 1.11 ) }
    dend_84 { pt3dadd( -4.15404, -42.9055, -35.5723, 1.11 ) }
    dend_84 { pt3dadd( -4.53375, -43.2837, -35.8314, 0.88 ) }
    dend_84 { pt3dadd( -5.52287, -44.2343, -36.4931, 0.37 ) }
    dend_84 { pt3dadd( -5.75082, -44.4547, -36.6632, 0.37 ) }
    dend_84 { pt3dadd( -5.95508, -44.635, -36.8206, 0.59 ) }
    dend_84 { pt3dadd( -6.37723, -45.0136, -37.1844, 0.59 ) }
    dend_84 { pt3dadd( -6.99579, -45.5887, -37.7559, 0.59 ) }
    dend_84 { pt3dadd( -7.37875, -45.9776, -38.1952, 0.29 ) }
    dend_84 { pt3dadd( -8.00869, -46.7492, -39.0177, 0.66 ) }
    dend_84 { pt3dadd( -8.31749, -47.2426, -39.5105, 1.47 ) }
    dend_84 { pt3dadd( -8.67231, -47.9833, -40.1815, 2.28 ) }
    dend_84 { pt3dadd( -8.7748, -48.2729, -40.4133, 2.06 ) }
    dend_84 { pt3dadd( -9.10251, -49.5892, -41.2695, 0.59 ) }
    dend_84 { pt3dadd( -9.25394, -50.3955, -41.7019, 0.52 ) }
    dend_84 { pt3dadd( -9.32915, -51.0482, -41.9486, 0.52 ) }
    dend_84 { pt3dadd( -9.37758, -51.6447, -42.125, 0.52 ) }
    dend_84 { pt3dadd( -9.42108, -52.2023, -42.2208, 0.59 ) }
    dend_84 { pt3dadd( -9.47369, -52.9239, -42.2763, 0.81 ) }
    dend_84 { pt3dadd( -9.50772, -53.5213, -42.2479, 0.37 ) }
    dend_84 { pt3dadd( -9.55095, -54.2004, -42.2048, 0.22 ) }
    dend_84 { pt3dadd( -9.58574, -54.6248, -42.1924, 0.22 ) }
    dend_84 { pt3dadd( -9.61377, -55.0094, -42.1941, 0.81 ) }
    dend_84 { pt3dadd( -9.65654, -55.6896, -42.2146, 1.03 ) }
    dend_84 { pt3dadd( -9.72884, -56.7959, -42.3051, 0.96 ) }
    dend_84 { pt3dadd( -9.74313, -57.0081, -42.3327, 0.96 ) }
    dend_84 { pt3dadd( -9.82248, -58.0687, -42.5419, 0.29 ) }
    dend_84 { pt3dadd( -9.8718, -58.8143, -42.723, 0.29 ) }
    dend_84 { pt3dadd( -9.89409, -59.0886, -42.7985, 0.29 ) }
    dend_84 { pt3dadd( -9.96113, -59.8235, -43.0185, 1.4 ) }
    dend_84 { pt3dadd( -10.0265, -60.5729, -43.2466, 1.69 ) }
    dend_84 { pt3dadd( -10.0889, -61.3415, -43.4589, 1.25 ) }
    dend_84 { pt3dadd( -10.1434, -61.9186, -43.5887, 0.96 ) }
    dend_84 { pt3dadd( -10.1977, -62.4621, -43.7102, 0.59 ) }
    dend_84 { pt3dadd( -10.2378, -62.883, -43.7976, 0.22 ) }
    dend_84 { pt3dadd( -10.272, -63.5284, -43.9361, 0.22 ) }
    dend_84 { pt3dadd( -10.2744, -64.082, -44.0569, 0.22 ) }
    dend_84 { pt3dadd( -10.2632, -64.8083, -44.2069, 0.22 ) }
    dend_84 { pt3dadd( -10.243, -65.5668, -44.3973, 0.74 ) }
    dend_84 { pt3dadd( -10.2335, -65.7874, -44.4577, 1.03 ) }
    dend_84 { pt3dadd( -10.1753, -66.9316, -44.7786, 0.22 ) }
    dend_84 { pt3dadd( -10.1511, -67.6747, -45.0911, 0.22 ) }
    dend_84 { pt3dadd( -10.1205, -68.3109, -45.3842, 0.22 ) }
    dend_84 { pt3dadd( -10.0793, -68.9912, -45.7261, 0.88 ) }
    dend_84 { pt3dadd( -10.0543, -69.5357, -46.0119, 1.33 ) }
    dend_84 { pt3dadd( -10.0547, -69.7379, -46.1283, 1.4 ) }
    dend_84 { pt3dadd( -10.2384, -71.3892, -47.3032, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 93/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -0.18249, -18.5016, -4.33901, 0.59 ) }
    dend_77 { pt3dadd( -1.53056, -19.0247, -4.38908, 0.59 ) }
    dend_77 { pt3dadd( -2.74773, -19.5239, -4.4134, 0.52 ) }
    dend_77 { pt3dadd( -3.42962, -19.8323, -4.44318, 0.59 ) }
    dend_77 { pt3dadd( -4.51324, -20.4036, -4.50577, 0.74 ) }
    dend_77 { pt3dadd( -5.39593, -20.9362, -4.55583, 0.37 ) }
    dend_77 { pt3dadd( -5.99561, -21.3519, -4.56224, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_77 { pt3dadd( -6.41771, -21.7297, -4.47966, 0.74 ) }
    dend_77 { pt3dadd( -6.89532, -22.3516, -4.2702, 1.25 ) }
    dend_77 { pt3dadd( -7.29829, -23.0537, -3.97105, 1.18 ) }
    dend_77 { pt3dadd( -7.50642, -23.5384, -3.73458, 0.88 ) }
    dend_77 { pt3dadd( -7.87208, -24.6212, -3.12521, 0.37 ) }
    dend_77 { pt3dadd( -8.32258, -26.1316, -2.18787, 0.96 ) }
    dend_77 { pt3dadd( -8.51162, -26.8376, -1.7146, 0.96 ) }
    dend_77 { pt3dadd( -8.64759, -27.3721, -1.32263, 0.81 ) }
    dend_77 { pt3dadd( -8.74335, -27.7401, -1.04735, 0.81 ) }
    dend_77 { pt3dadd( -8.92213, -28.3756, -0.609947, 0.44 ) }
    dend_77 { pt3dadd( -9.01243, -28.6643, -0.451298, 0.66 ) }
    dend_77 { pt3dadd( -9.13075, -28.9258, -0.356491, 0.59 ) }
    dend_77 { pt3dadd( -9.1671, -28.9827, -0.326916, 0.59 ) }
    dend_77 { pt3dadd( -9.42381, -29.2827, -0.176907, 0.59 ) }
    dend_77 { pt3dadd( -9.92227, -29.773, 0.0705305, 0.22 ) }
    dend_77 { pt3dadd( -10.1434, -29.9685, 0.163757, 0.22 ) }
    dend_77 { pt3dadd( -10.4281, -30.2074, 0.290209, 0.22 ) }
    dend_77 { pt3dadd( -11.3438, -30.9137, 0.707314, 1.11 ) }
    dend_77 { pt3dadd( -12.0344, -31.4276, 1.04477, 1.47 ) }
    dend_77 { pt3dadd( -12.0876, -31.4655, 1.07542, 1.47 ) }
    // Section: dend_72, id: dend_72, parent: dend_66 (entry count 20/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -5.62814, 31.5553, 20.8613, 1.03 ) }
    dend_72 { pt3dadd( -7.45707, 33.231, 9.1156, 1.03 ) }
    dend_72 { pt3dadd( -7.56179, 33.3665, 8.33163, 0.66 ) }
    dend_72 { pt3dadd( -7.63237, 33.4923, 7.69649, 0.66 ) }
    dend_72 { pt3dadd( -7.66544, 33.5774, 7.31234, 0.74 ) }
    dend_72 { pt3dadd( -7.69983, 33.7173, 6.74317, 0.74 ) }
    dend_72 { pt3dadd( -7.71457, 33.8317, 6.31869, 0.96 ) }
    dend_72 { pt3dadd( -7.13382, 34.5376, 6.07178, 0.96 ) }
    dend_72 { pt3dadd( -6.92656, 34.7936, 5.9991, 0.66 ) }
    dend_72 { pt3dadd( -6.6618, 35.1434, 5.93075, 0.88 ) }
    dend_72 { pt3dadd( -6.44471, 35.4631, 5.89629, 1.18 ) }
    dend_72 { pt3dadd( -6.30507, 35.7056, 5.89304, 1.33 ) }
    dend_72 { pt3dadd( -5.9044, 36.5387, 5.94855, 1.33 ) }
    dend_72 { pt3dadd( -5.69908, 37.1489, 6.03796, 1.33 ) }
    dend_72 { pt3dadd( -5.60844, 37.5701, 6.10016, 1.03 ) }
    dend_72 { pt3dadd( -5.58111, 37.8281, 6.13448, 0.88 ) }
    dend_72 { pt3dadd( -5.5679, 38.2469, 6.17991, 0.88 ) }
    dend_72 { pt3dadd( -5.57155, 38.343, 6.18603, 0.88 ) }
    dend_72 { pt3dadd( -5.63728, 38.935, 6.1821, 0.81 ) }
    dend_72 { pt3dadd( -5.68442, 39.2458, 6.18363, 0.81 ) }
    dend_72 { pt3dadd( -5.78434, 39.7779, 6.19174, 0.74 ) }
    dend_72 { pt3dadd( -5.80164, 39.8578, 6.19361, 0.74 ) }
    dend_72 { pt3dadd( -5.91164, 40.2754, 6.20897, 0.66 ) }
    dend_72 { pt3dadd( -6.00504, 40.6057, 6.22295, 0.66 ) }
    dend_72 { pt3dadd( -6.12489, 41.0163, 6.24138, 0.66 ) }
    dend_72 { pt3dadd( -6.19875, 41.3377, 6.28087, 0.66 ) }
    dend_72 { pt3dadd( -6.28461, 42.0113, 6.38841, 0.66 ) }
    dend_72 { pt3dadd( -6.28516, 42.2017, 6.41846, 0.66 ) }
    dend_72 { pt3dadd( -6.20632, 42.8524, 6.50864, 0.66 ) }
    dend_72 { pt3dadd( -6.14211, 43.1529, 6.54551, 0.74 ) }
    dend_72 { pt3dadd( -5.80457, 44.232, 6.67855, 0.74 ) }
    dend_72 { pt3dadd( -5.58435, 44.8031, 6.74441, 0.88 ) }
    dend_72 { pt3dadd( -5.27039, 45.5383, 6.82266, 0.66 ) }
    dend_72 { pt3dadd( -4.97776, 46.2109, 6.93405, 0.81 ) }
    dend_72 { pt3dadd( -4.94161, 46.2844, 6.94929, 0.81 ) }
    dend_72 { pt3dadd( -4.59272, 46.9453, 7.09694, 1.03 ) }
    dend_72 { pt3dadd( -4.38424, 47.3388, 7.14872, 1.25 ) }
    dend_72 { pt3dadd( -4.19018, 47.708, 7.18577, 1.33 ) }
    dend_72 { pt3dadd( -3.67603, 48.6642, 7.24489, 1.4 ) }
    dend_72 { pt3dadd( -3.30769, 49.3772, 7.24191, 1.4 ) }
    dend_72 { pt3dadd( -3.10344, 49.759, 7.27044, 1.4 ) }
    dend_72 { pt3dadd( -2.53884, 50.781, 7.3814, 0.52 ) }
    dend_72 { pt3dadd( -2.3228, 51.1539, 7.43637, 0.52 ) }
    dend_72 { pt3dadd( -2.27995, 51.2238, 7.44715, 0.52 ) }
    dend_72 { pt3dadd( -2.00449, 51.6961, 7.49971, 0.52 ) }
    dend_72 { pt3dadd( -1.29781, 53.0611, 7.8672, 0.96 ) }
    dend_72 { pt3dadd( -1.13569, 53.3456, 8.01082, 1.33 ) }
    dend_72 { pt3dadd( -1.13569, 53.3456, 8.01082, 1.69 ) }
    dend_72 { pt3dadd( -1.01895, 53.5132, 8.1808, 1.69 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 69/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -5.62814, 31.5553, 20.8613, 0.88 ) }
    dend_67 { pt3dadd( -5.65634, 32.2388, 23.1632, 0.88 ) }
    dend_67 { pt3dadd( -5.66348, 32.3037, 23.3611, 1.03 ) }
    dend_67 { pt3dadd( -5.82942, 33.1154, 25.7162, 0.66 ) }
    dend_67 { pt3dadd( -5.88326, 33.3013, 26.2176, 0.44 ) }
    dend_67 { pt3dadd( -5.9317, 33.4227, 26.5312, 0.66 ) }
    dend_67 { pt3dadd( -5.99284, 33.5281, 26.799, 0.81 ) }
    dend_67 { pt3dadd( -6.1143, 33.5925, 26.9091, 0.88 ) }
    dend_67 { pt3dadd( -6.44734, 33.6817, 27.0043, 0.88 ) }
    dend_67 { pt3dadd( -6.7829, 33.742, 27.0182, 0.88 ) }
    dend_67 { pt3dadd( -7.76865, 33.8907, 27.0711, 0.44 ) }
    dend_67 { pt3dadd( -8.44275, 33.9851, 27.1169, 0.37 ) }
    dend_67 { pt3dadd( -9.16644, 34.1934, 27.6422, 0.37 ) }
    dend_67 { pt3dadd( -9.27528, 34.2814, 27.9101, 0.52 ) }
    dend_67 { pt3dadd( -9.40171, 34.5147, 28.5342, 0.59 ) }
    dend_67 { pt3dadd( -9.44511, 34.6923, 28.9785, 0.74 ) }
    dend_67 { pt3dadd( -9.44664, 34.7723, 29.1546, 0.88 ) }
    dend_67 { pt3dadd( -9.17116, 37.004, 33.3921, 0.66 ) }
    dend_67 { pt3dadd( -9.12396, 37.2549, 33.8205, 0.66 ) }
    dend_67 { pt3dadd( -9.04381, 37.6269, 34.4127, 0.81 ) }
    dend_67 { pt3dadd( -9.02909, 37.6956, 34.5129, 0.81 ) }
    dend_67 { pt3dadd( -8.98287, 38.1465, 35.0641, 0.52 ) }
    dend_67 { pt3dadd( -9.05943, 38.6744, 35.4979, 0.44 ) }
    dend_67 { pt3dadd( -9.35371, 39.2545, 35.6472, 0.44 ) }
    dend_67 { pt3dadd( -10.0946, 40.494, 35.9481, 0.88 ) }
    dend_67 { pt3dadd( -10.3835, 40.9215, 36.0607, 1.11 ) }
    dend_67 { pt3dadd( -11.3603, 42.2645, 36.4161, 0.44 ) }
    dend_67 { pt3dadd( -11.7909, 42.7991, 36.5551, 0.44 ) }
    dend_67 { pt3dadd( -12.1115, 43.1803, 36.6369, 0.44 ) }
    dend_67 { pt3dadd( -12.3954, 43.5333, 36.6766, 0.44 ) }
    dend_67 { pt3dadd( -12.8126, 44.0835, 36.6891, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_67 { pt3dadd( -12.9398, 44.2998, 36.7241, 1.25 ) }
    dend_67 { pt3dadd( -12.9703, 44.3707, 36.7456, 1.25 ) }
    dend_67 { pt3dadd( -13.0998, 44.6842, 36.8815, 1.47 ) }
    dend_67 { pt3dadd( -13.4531, 45.5319, 37.3435, 0.59 ) }
    dend_67 { pt3dadd( -13.6503, 46.0113, 37.6432, 0.59 ) }
    dend_67 { pt3dadd( -13.8471, 46.529, 37.9924, 0.59 ) }
    dend_67 { pt3dadd( -13.9964, 46.9182, 38.3086, 0.74 ) }
    dend_67 { pt3dadd( -14.3152, 47.5962, 39.0101, 0.74 ) }
    dend_67 { pt3dadd( -14.3409, 47.6409, 39.0759, 0.88 ) }
    dend_67 { pt3dadd( -14.3727, 47.678, 39.1732, 1.03 ) }
    dend_67 { pt3dadd( -14.4637, 47.7296, 39.4203, 1.03 ) }
    dend_67 { pt3dadd( -14.6357, 47.7521, 39.7674, 0.81 ) }
    dend_67 { pt3dadd( -14.9833, 47.6987, 40.3732, 0.44 ) }
    dend_67 { pt3dadd( -15.1864, 47.6888, 40.5147, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 14/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -7.75183, 41.1841, 44.314, 0.88 ) }
    dend_65 { pt3dadd( -8.1186, 41.7487, 43.8829, 0.88 ) }
    dend_65 { pt3dadd( -8.50599, 42.3587, 43.6021, 0.52 ) }
    dend_65 { pt3dadd( -8.95389, 43.1177, 43.4473, 0.37 ) }
    dend_65 { pt3dadd( -9.2304, 43.6151, 43.4202, 0.37 ) }
    dend_65 { pt3dadd( -9.41556, 43.9797, 43.4367, 0.37 ) }
    dend_65 { pt3dadd( -9.54101, 44.248, 43.4642, 0.44 ) }
    dend_65 { pt3dadd( -9.98557, 45.5414, 43.858, 0.29 ) }
    dend_65 { pt3dadd( -10.05, 45.8034, 43.9809, 0.29 ) }
    dend_65 { pt3dadd( -10.061, 45.8634, 44.0225, 0.29 ) }
    dend_65 { pt3dadd( -10.1207, 46.0909, 44.237, 0.29 ) }
    dend_65 { pt3dadd( -10.1789, 46.2456, 44.4105, 0.29 ) }
    dend_65 { pt3dadd( -10.3541, 46.6274, 44.8639, 0.29 ) }
    dend_65 { pt3dadd( -10.4573, 46.8207, 45.0822, 0.29 ) }
    dend_65 { pt3dadd( -10.8897, 47.5129, 45.8668, 0.37 ) }
    dend_65 { pt3dadd( -11.3812, 48.2276, 46.6497, 0.22 ) }
    dend_65 { pt3dadd( -11.5002, 48.3806, 46.8183, 0.37 ) }
    dend_65 { pt3dadd( -11.6208, 48.5243, 46.9689, 0.37 ) }
    dend_65 { pt3dadd( -11.8439, 48.7578, 47.19, 0.29 ) }
    dend_65 { pt3dadd( -12.1126, 49.0432, 47.3514, 0.29 ) }
    dend_65 { pt3dadd( -12.3025, 49.2631, 47.3535, 0.37 ) }
    dend_65 { pt3dadd( -12.3471, 49.32, 47.3394, 0.59 ) }
    dend_65 { pt3dadd( -12.5559, 49.5706, 47.2642, 0.59 ) }
    dend_65 { pt3dadd( -13.1503, 50.2303, 47.0558, 0.81 ) }
    dend_65 { pt3dadd( -13.6013, 50.6988, 46.905, 0.29 ) }
    dend_65 { pt3dadd( -13.8232, 50.9046, 46.834, 0.44 ) }
    dend_65 { pt3dadd( -14.0772, 51.1178, 46.7539, 0.44 ) }
    dend_65 { pt3dadd( -18.2386, 60.5655, 48.3951, 0.44 ) }
    dend_65 { pt3dadd( -23.3385, 69.3765, 50.8917, 0.44 ) }
    dend_65 { pt3dadd( -26.8232, 79.0156, 52.8539, 0.44 ) }
    dend_65 { pt3dadd( -30.6621, 88.7126, 53.4272, 0.44 ) }
    dend_65 { pt3dadd( -35.4362, 98.0029, 54.15, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 46/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -7.75183, 41.1841, 44.314, 0.52 ) }
    dend_62 { pt3dadd( -8.07416, 40.5263, 44.8303, 0.52 ) }
    dend_62 { pt3dadd( -8.32839, 40.1106, 45.2021, 0.52 ) }
    dend_62 { pt3dadd( -8.49183, 39.9098, 45.3898, 0.52 ) }
    dend_62 { pt3dadd( -8.75275, 39.6499, 45.6415, 0.52 ) }
    dend_62 { pt3dadd( -9.78661, 38.8291, 46.4437, 0.74 ) }
    dend_62 { pt3dadd( -10.0333, 38.6656, 46.6034, 0.66 ) }
    dend_62 { pt3dadd( -10.4341, 38.503, 46.8165, 0.52 ) }
    dend_62 { pt3dadd( -11.0705, 38.3696, 47.0589, 0.52 ) }
    dend_62 { pt3dadd( -11.3177, 38.3561, 47.0977, 0.44 ) }
    dend_62 { pt3dadd( -11.8514, 38.3859, 47.0605, 0.37 ) }
    dend_62 { pt3dadd( -12.0623, 38.4092, 47.0006, 0.37 ) }
    dend_62 { pt3dadd( -12.1308, 38.4201, 46.9782, 0.37 ) }
    dend_62 { pt3dadd( -12.4923, 38.475, 46.8524, 0.37 ) }
    dend_62 { pt3dadd( -13.151, 38.5995, 46.604, 0.29 ) }
    dend_62 { pt3dadd( -13.5692, 38.6821, 46.4404, 0.29 ) }
    dend_62 { pt3dadd( -14.0626, 38.7929, 46.2386, 0.29 ) }
    dend_62 { pt3dadd( -14.5918, 38.9194, 46.0199, 0.29 ) }
    dend_62 { pt3dadd( -24.1556, 35.5013, 47.3802, 0.29 ) }
    dend_62 { pt3dadd( -34.0418, 33.0563, 48.6926, 0.29 ) }
    dend_62 { pt3dadd( -43.5086, 30.6027, 51.8338, 0.29 ) }
    dend_62 { pt3dadd( -53.5856, 28.8225, 52.8205, 0.29 ) }
    dend_62 { pt3dadd( -63.4813, 26.9471, 54.8805, 0.29 ) }
    dend_62 { pt3dadd( -73.3733, 24.6366, 56.4006, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 70/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -58.3885, -53.2321, -27.4692, 0.44 ) }
    dend_58 { pt3dadd( -60.0179, -53.6148, -28.3132, 0.44 ) }
    dend_58 { pt3dadd( -60.8499, -53.8925, -28.7533, 0.74 ) }
    dend_58 { pt3dadd( -60.9838, -53.9424, -28.8239, 0.74 ) }
    dend_58 { pt3dadd( -61.7399, -54.2649, -29.1542, 0.37 ) }
    dend_58 { pt3dadd( -62.0295, -54.4034, -29.2747, 1.4 ) }
    dend_58 { pt3dadd( -62.2127, -54.5041, -29.339, 1.4 ) }
    dend_58 { pt3dadd( -63.5033, -55.4087, -29.5673, 0.52 ) }
    dend_58 { pt3dadd( -63.5432, -55.4414, -29.5716, 0.52 ) }
    dend_58 { pt3dadd( -64.2929, -56.1113, -29.6388, 0.29 ) }
    dend_58 { pt3dadd( -64.7744, -56.5835, -29.6338, 0.74 ) }
    dend_58 { pt3dadd( -65.4401, -57.2196, -29.5627, 0.22 ) }
    dend_58 { pt3dadd( -65.5851, -57.3548, -29.5489, 0.81 ) }
    dend_58 { pt3dadd( -65.7087, -57.4636, -29.535, 0.81 ) }
    dend_58 { pt3dadd( -66.4349, -58.0522, -29.4545, 0.22 ) }
    dend_58 { pt3dadd( -67.1126, -58.5135, -29.3934, 0.74 ) }
    dend_58 { pt3dadd( -67.4077, -58.6861, -29.3517, 0.74 ) }
    dend_58 { pt3dadd( -68.434, -59.2201, -29.3927, 0.59 ) }
    dend_58 { pt3dadd( -68.8247, -59.4151, -29.437, 0.59 ) }
    dend_58 { pt3dadd( -69.8069, -59.8842, -29.5938, 0.59 ) }
    dend_58 { pt3dadd( -70.7048, -60.3664, -29.8752, 0.29 ) }
    dend_58 { pt3dadd( -70.9801, -60.5266, -29.9893, 1.11 ) }
    dend_58 { pt3dadd( -72.3729, -61.36, -30.5776, 0.29 ) }
    dend_58 { pt3dadd( -72.8713, -61.6598, -30.7869, 0.29 ) }
    dend_58 { pt3dadd( -73.0822, -61.7908, -30.8991, 0.66 ) }
    dend_58 { pt3dadd( -74.5227, -62.7412, -31.8949, 0.44 ) }
    dend_58 { pt3dadd( -74.6833, -62.8596, -32.0277, 0.81 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 97/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -58.3885, -53.2321, -27.4692, 0.59 ) }
    dend_55 { pt3dadd( -59.1436, -54.5151, -27.4001, 0.59 ) }
    dend_55 { pt3dadd( -59.1838, -54.5779, -27.3982, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( -59.4966, -55.0452, -27.3873, 0.52 ) }
    dend_55 { pt3dadd( -59.5651, -55.1436, -27.3771, 0.74 ) }
    dend_55 { pt3dadd( -60.2544, -56.1318, -27.2352, 0.37 ) }
    dend_55 { pt3dadd( -61.2259, -57.4686, -27.0138, 0.59 ) }
    dend_55 { pt3dadd( -62.0828, -58.5192, -26.8135, 0.29 ) }
    dend_55 { pt3dadd( -62.3677, -58.8512, -26.7425, 0.88 ) }
    dend_55 { pt3dadd( -63.1462, -59.7237, -26.6387, 0.74 ) }
    dend_55 { pt3dadd( -63.3016, -59.891, -26.6274, 0.74 ) }
    dend_55 { pt3dadd( -64.313, -60.913, -26.5827, 0.22 ) }
    dend_55 { pt3dadd( -64.5554, -61.1446, -26.5883, 0.88 ) }
    dend_55 { pt3dadd( -64.6909, -61.2653, -26.6091, 0.88 ) }
    dend_55 { pt3dadd( -66.6074, -62.9789, -27.2284, 1.47 ) }
    dend_55 { pt3dadd( -67.4764, -63.7596, -27.7155, 1.47 ) }
    // Section: dend_42, id: dend_42, parent: dend_30 (entry count 13/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -24.6231, 27.4805, -10.8813, 1.18 ) }
    dend_42 { pt3dadd( -24.7694, 27.9511, -11.4479, 1.18 ) }
    dend_42 { pt3dadd( -24.8323, 28.1408, -11.7328, 1.4 ) }
    dend_42 { pt3dadd( -24.9337, 28.4732, -12.2926, 1.4 ) }
    dend_42 { pt3dadd( -24.9743, 28.6492, -12.5921, 1.33 ) }
    dend_42 { pt3dadd( -25.1353, 29.3932, -13.8657, 0.29 ) }
    dend_42 { pt3dadd( -25.1575, 29.4616, -14.0029, 0.29 ) }
    dend_42 { pt3dadd( -25.3097, 29.8553, -14.8721, 0.29 ) }
    dend_42 { pt3dadd( -25.4704, 30.2262, -15.7389, 1.03 ) }
    dend_42 { pt3dadd( -25.5303, 30.3588, -16.0459, 1.92 ) }
    dend_42 { pt3dadd( -25.5591, 30.4209, -16.1835, 1.92 ) }
    dend_42 { pt3dadd( -26.1004, 31.5434, -18.3393, 0.22 ) }
    dend_42 { pt3dadd( -26.1926, 31.7211, -18.6484, 0.22 ) }
    dend_42 { pt3dadd( -26.2487, 31.8186, -18.7938, 0.22 ) }
    dend_42 { pt3dadd( -26.3814, 32.0201, -19.0665, 1.11 ) }
    dend_42 { pt3dadd( -26.4863, 32.1623, -19.2432, 1.11 ) }
    dend_42 { pt3dadd( -26.8977, 32.6964, -19.7627, 0.29 ) }
    dend_42 { pt3dadd( -27.0115, 32.8176, -19.8137, 0.29 ) }
    dend_42 { pt3dadd( -27.1309, 32.9146, -19.853, 0.29 ) }
    dend_42 { pt3dadd( -27.2261, 32.9756, -19.874, 0.29 ) }
    dend_42 { pt3dadd( -27.6258, 33.1816, -20.0118, 0.96 ) }
    dend_42 { pt3dadd( -28.063, 33.3806, -20.1857, 1.47 ) }
    dend_42 { pt3dadd( -28.45, 33.5424, -20.3516, 1.77 ) }
    dend_42 { pt3dadd( -28.723, 33.6622, -20.4844, 1.84 ) }
    dend_42 { pt3dadd( -28.9815, 33.7891, -20.6241, 1.55 ) }
    dend_42 { pt3dadd( -30.2154, 34.4685, -21.3472, 0.66 ) }
    dend_42 { pt3dadd( -30.2998, 34.5215, -21.4011, 0.59 ) }
    dend_42 { pt3dadd( -30.6859, 34.7948, -21.6731, 0.22 ) }
    dend_42 { pt3dadd( -30.855, 34.9361, -21.7986, 0.22 ) }
    dend_42 { pt3dadd( -31.0487, 35.1256, -21.9293, 0.22 ) }
    dend_42 { pt3dadd( -31.2113, 35.3137, -22.0259, 0.22 ) }
    dend_42 { pt3dadd( -31.3462, 35.4915, -22.0751, 0.22 ) }
    dend_42 { pt3dadd( -31.4933, 35.6879, -22.135, 0.22 ) }
    dend_42 { pt3dadd( -31.7768, 36.0701, -22.2567, 1.03 ) }
    dend_42 { pt3dadd( -31.9988, 36.3411, -22.3569, 1.62 ) }
    dend_42 { pt3dadd( -32.4257, 36.8219, -22.5664, 1.84 ) }
    dend_42 { pt3dadd( -32.4559, 36.8554, -22.5835, 1.84 ) }
    dend_42 { pt3dadd( -32.6248, 37.0425, -22.6939, 1.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 51/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -24.6231, 27.4805, -10.8813, 1.4 ) }
    dend_31 { pt3dadd( -24.8946, 27.4131, -10.6925, 1.4 ) }
    dend_31 { pt3dadd( -26.7087, 26.9931, -9.39941, 0.59 ) }
    dend_31 { pt3dadd( -27.3727, 26.8584, -8.93309, 0.88 ) }
    dend_31 { pt3dadd( -28.2703, 26.7598, -8.33575, 1.11 ) }
    dend_31 { pt3dadd( -29.281, 26.7301, -7.70804, 0.81 ) }
    dend_31 { pt3dadd( -30.0608, 26.7411, -7.29524, 0.59 ) }
    dend_31 { pt3dadd( -31.2862, 26.8573, -6.79402, 0.59 ) }
    dend_31 { pt3dadd( -31.7559, 26.9429, -6.67398, 0.59 ) }
    dend_31 { pt3dadd( -33.0647, 27.3307, -6.41036, 0.59 ) }
    dend_31 { pt3dadd( -33.9611, 27.6692, -6.26719, 0.66 ) }
    dend_31 { pt3dadd( -35.1522, 28.2203, -6.15864, 0.88 ) }
    dend_31 { pt3dadd( -35.5704, 28.4368, -6.16312, 1.11 ) }
    dend_31 { pt3dadd( -35.922, 28.6302, -6.21991, 1.25 ) }
    dend_31 { pt3dadd( -36.7189, 29.0486, -6.38977, 1.25 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.11619, 23.4094, -3.82628, 2.21 ) }
    dend_13 { pt3dadd( -4.31971, 23.6651, -4.04426, 2.21 ) }
    dend_13 { pt3dadd( -5.37766, 24.8836, -5.06766, 1.03 ) }
    dend_13 { pt3dadd( -5.92911, 25.5493, -5.5759, 0.81 ) }
    dend_13 { pt3dadd( -6.6707, 26.4466, -6.2193, 0.81 ) }
    dend_13 { pt3dadd( -7.44246, 27.3837, -6.83025, 1.11 ) }
    dend_13 { pt3dadd( -7.77404, 27.7845, -7.0665, 1.11 ) }
    dend_13 { pt3dadd( -8.25747, 28.3818, -7.3752, 1.33 ) }
    dend_13 { pt3dadd( -8.80825, 29.0739, -7.67756, 1.55 ) }
    dend_13 { pt3dadd( -9.22285, 29.6066, -7.79792, 1.4 ) }
    dend_13 { pt3dadd( -9.83327, 30.4214, -7.8075, 0.96 ) }
    dend_13 { pt3dadd( -10.2398, 30.99, -7.7348, 0.96 ) }
    dend_13 { pt3dadd( -10.4953, 31.3493, -7.6863, 1.03 ) }
    dend_13 { pt3dadd( -10.7232, 31.6892, -7.64016, 0.52 ) }
    dend_13 { pt3dadd( -11.4382, 32.6505, -7.5426, 0.59 ) }
    dend_13 { pt3dadd( -11.7228, 33.0649, -7.52563, 0.44 ) }
    dend_13 { pt3dadd( -11.8767, 33.2895, -7.54121, 0.37 ) }
    dend_13 { pt3dadd( -12.421, 34.0555, -7.74621, 0.37 ) }
    dend_13 { pt3dadd( -12.6739, 34.3828, -7.90873, 0.74 ) }
    dend_13 { pt3dadd( -13.053, 34.8583, -8.22395, 1.11 ) }
    dend_13 { pt3dadd( -13.2933, 35.1477, -8.47872, 1.4 ) }
    dend_13 { pt3dadd( -13.597, 35.512, -8.81512, 1.4 ) }
    dend_13 { pt3dadd( -14.162, 36.1559, -9.44548, 1.25 ) }
    dend_13 { pt3dadd( -14.805, 36.8628, -10.1389, 1.11 ) }
    dend_13 { pt3dadd( -15.2125, 37.2906, -10.556, 0.96 ) }
    dend_13 { pt3dadd( -16.1575, 38.2739, -11.46, 0.44 ) }
    dend_13 { pt3dadd( -16.4442, 38.5695, -11.7116, 0.44 ) }
    dend_13 { pt3dadd( -17.1207, 39.2763, -12.2697, 0.88 ) }
    dend_13 { pt3dadd( -17.3617, 39.5516, -12.4545, 0.96 ) }
    dend_13 { pt3dadd( -17.8122, 40.1125, -12.7578, 0.66 ) }
    dend_13 { pt3dadd( -18.1737, 40.6004, -12.9759, 0.52 ) }
    dend_13 { pt3dadd( -18.6846, 41.3782, -13.2116, 0.29 ) }
    dend_13 { pt3dadd( -19.3078, 42.3826, -13.4582, 1.4 ) }
    dend_13 { pt3dadd( -19.6843, 43.0622, -13.6037, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_13 { pt3dadd( -19.882, 43.4398, -13.6963, 1.84 ) }
    dend_13 { pt3dadd( -19.9594, 43.5984, -13.742, 1.84 ) }
    dend_13 { pt3dadd( -20.2937, 44.2931, -13.9149, 0.44 ) }
    dend_13 { pt3dadd( -20.6206, 45.0158, -13.9298, 0.44 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 4/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.11619, 23.4094, -3.82628, 2.06 ) }
    dend_2 { pt3dadd( -3.96256, 23.8702, -4.06516, 2.06 ) }
    dend_2 { pt3dadd( -3.49906, 25.2197, -4.85731, 1.33 ) }
    dend_2 { pt3dadd( -3.26976, 25.8448, -5.15308, 1.33 ) }
    dend_2 { pt3dadd( -2.87958, 26.8387, -5.57006, 1.1 ) }
    dend_2 { pt3dadd( -2.34592, 28.2234, -6.08188, 1.25 ) }
    dend_2 { pt3dadd( -2.11579, 28.8879, -6.26817, 1.2 ) }
    dend_2 { pt3dadd( -1.87587, 29.6225, -6.44356, 1.35 ) }
    dend_2 { pt3dadd( -1.4449, 31.2236, -6.73571, 1.2 ) }
    dend_2 { pt3dadd( -1.24324, 32.0146, -6.811, 1.4 ) }
    dend_2 { pt3dadd( -0.986885, 32.9956, -6.80968, 1.33 ) }
    dend_2 { pt3dadd( -0.592818, 34.5879, -6.64217, 0.74 ) }
    dend_2 { pt3dadd( -0.553509, 34.7664, -6.61363, 0.96 ) }
    dend_2 { pt3dadd( -0.477719, 35.2556, -6.52725, 1.25 ) }
    dend_2 { pt3dadd( -0.462977, 35.5079, -6.49769, 1.84 ) }
    // Section: dend_134, id: dend_134, parent: dend_132 (entry count 19/100)
    dend_134 { pt3dclear() }
    dend_134 { pt3dadd( -7.65582, -41.6855, 13.0753, 0.37 ) }
    dend_134 { pt3dadd( -6.75815, -41.146, 12.6612, 0.37 ) }
    dend_134 { pt3dadd( -6.51685, -41.001, 12.5499, 0.37 ) }
    dend_134 { pt3dadd( -5.78554, -40.5615, 12.2126, 0.37 ) }
    dend_134 { pt3dadd( -5.57217, -40.4332, 12.1142, 0.52 ) }
    dend_134 { pt3dadd( -5.4413, -40.3546, 12.0538, 0.52 ) }
    dend_134 { pt3dadd( -5.36762, -40.3103, 12.0198, 0.52 ) }
    dend_134 { pt3dadd( 4.62507, -35.3276, 9.35926, 0.52 ) }
    dend_134 { pt3dadd( 14.8653, -31.2372, 6.10404, 0.52 ) }
    dend_134 { pt3dadd( 25.0333, -26.1143, 4.67384, 0.52 ) }
    dend_134 { pt3dadd( 36.0561, -22.8489, 4.08979, 0.52 ) }
    dend_134 { pt3dadd( 46.5577, -18.4209, 5.54902, 0.52 ) }
    // Section: dend_133, id: dend_133, parent: dend_132 (entry count 31/100)
    dend_133 { pt3dclear() }
    dend_133 { pt3dadd( -7.65582, -41.6855, 13.0753, 0.44 ) }
    dend_133 { pt3dadd( -8.22657, -41.901, 13.0706, 0.44 ) }
    dend_133 { pt3dadd( -8.62244, -42.0504, 13.0673, 0.44 ) }
    dend_133 { pt3dadd( -8.93521, -42.1685, 13.0646, 0.44 ) }
    dend_133 { pt3dadd( -9.18357, -42.2622, 13.0626, 0.44 ) }
    dend_133 { pt3dadd( -9.58073, -42.4122, 13.0592, 0.37 ) }
    dend_133 { pt3dadd( -9.84185, -42.5108, 13.0571, 0.37 ) }
    dend_133 { pt3dadd( -16.9839, -44.6774, 12.513, 0.37 ) }
    dend_133 { pt3dadd( -24.1863, -46.7141, 12.4625, 0.37 ) }
    dend_133 { pt3dadd( -31.3271, -48.5195, 11.1135, 0.37 ) }
    dend_133 { pt3dadd( -38.1785, -50.0575, 8.50488, 0.37 ) }
    dend_133 { pt3dadd( -45.2056, -51.3164, 6.22791, 0.37 ) }
    dend_133 { pt3dadd( -52.2713, -53.2582, 4.69483, 0.37 ) }
    // Section: dend_123, id: dend_123, parent: dend_119 (entry count 44/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( -8.40693, -53.3423, 20.3403, 0.96 ) }
    dend_123 { pt3dadd( -8.25731, -54.3012, 20.4101, 0.96 ) }
    dend_123 { pt3dadd( -8.1412, -55.0454, 20.4643, 0.96 ) }
    dend_123 { pt3dadd( -8.04033, -55.6919, 20.5114, 0.88 ) }
    dend_123 { pt3dadd( -7.95237, -56.2557, 20.5525, 0.88 ) }
    // Section: dend_120, id: dend_120, parent: dend_119 (entry count 49/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( -8.40693, -53.3423, 20.3403, 0.44 ) }
    dend_120 { pt3dadd( -9.04056, -53.5781, 20.6008, 0.44 ) }
    dend_120 { pt3dadd( -9.26857, -53.6504, 20.6826, 0.44 ) }
    dend_120 { pt3dadd( -9.55694, -53.7336, 20.7788, 0.44 ) }
    dend_120 { pt3dadd( -10.0663, -53.8562, 20.9368, 0.44 ) }
    dend_120 { pt3dadd( -10.3791, -53.9185, 21.0286, 0.44 ) }
    dend_120 { pt3dadd( -10.5041, -53.9401, 21.0637, 0.66 ) }
    dend_120 { pt3dadd( -10.8392, -53.988, 21.1173, 0.81 ) }
    dend_120 { pt3dadd( -10.8899, -53.9939, 21.1254, 0.81 ) }
    dend_120 { pt3dadd( -11.1721, -54.0089, 21.1713, 0.74 ) }
    dend_120 { pt3dadd( -11.3217, -53.9918, 21.1964, 0.74 ) }
    dend_120 { pt3dadd( -11.4321, -53.9663, 21.2153, 0.74 ) }
    dend_120 { pt3dadd( -19.1811, -54.8468, 24.8648, 0.74 ) }
    dend_120 { pt3dadd( -26.4562, -54.3751, 29.4556, 0.74 ) }
    dend_120 { pt3dadd( -33.1781, -55.0228, 34.8014, 0.74 ) }
    // Section: dend_111, id: dend_111, parent: dend_109 (entry count 64/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( 8.41864, -50.332, 9.36376, 0.66 ) }
    dend_111 { pt3dadd( 8.88132, -51.4376, 9.20487, 0.66 ) }
    dend_111 { pt3dadd( 9.26077, -52.3442, 9.07457, 0.66 ) }
    dend_111 { pt3dadd( 9.56311, -53.0667, 8.97075, 1.11 ) }
    dend_111 { pt3dadd( 9.84994, -53.752, 8.87226, 1.11 ) }
    dend_111 { pt3dadd( 10.0083, -54.1303, 8.81789, 1.11 ) }
    dend_111 { pt3dadd( 10.0321, -54.1873, 8.80969, 1.11 ) }
    // Section: dend_110, id: dend_110, parent: dend_109 (entry count 71/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( 8.41864, -50.332, 9.36376, 0.29 ) }
    dend_110 { pt3dadd( 8.78811, -49.1612, 9.15999, 0.29 ) }
    dend_110 { pt3dadd( 8.80495, -49.0721, 9.1441, 0.29 ) }
    dend_110 { pt3dadd( 8.84021, -48.0046, 8.92664, 0.29 ) }
    dend_110 { pt3dadd( 8.83552, -47.9025, 8.90571, 0.29 ) }
    dend_110 { pt3dadd( 8.6971, -46.2538, 8.59084, 0.29 ) }
    dend_110 { pt3dadd( 8.59684, -45.2618, 8.41146, 0.52 ) }
    dend_110 { pt3dadd( 8.45939, -44.4532, 8.26837, 0.66 ) }
    dend_110 { pt3dadd( 8.1806, -43.0725, 8.0318, 0.37 ) }
    dend_110 { pt3dadd( 8.02034, -42.443, 7.92374, 0.37 ) }
    dend_110 { pt3dadd( 7.69677, -41.2981, 7.73845, 0.44 ) }
    dend_110 { pt3dadd( 7.67126, -41.227, 7.72908, 0.44 ) }
    dend_110 { pt3dadd( 7.62428, -41.088, 7.71056, 0.44 ) }
    dend_110 { pt3dadd( 7.60578, -41.0008, 7.70305, 0.44 ) }
    dend_110 { pt3dadd( 4.24744, -28.8206, 6.80813, 0.44 ) }
    dend_110 { pt3dadd( -0.356792, -17.0039, 6.49731, 0.44 ) }
    // Section: dend_99, id: dend_99, parent: dend_95 (entry count 87/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 19.9617, -31.7106, -31.6943, 0.44 ) }
    dend_99 { pt3dadd( 21.9887, -31.5835, -31.2715, 0.44 ) }
    dend_99 { pt3dadd( 23.4799, -31.5053, -30.9831, 0.44 ) }
    dend_99 { pt3dadd( 25.3916, -31.4137, -30.6332, 0.29 ) }
    dend_99 { pt3dadd( 26.7627, -31.356, -30.3976, 0.29 ) }
    dend_99 { pt3dadd( 27.7512, -31.3476, -30.2866, 0.29 ) }
    dend_99 { pt3dadd( 27.8138, -31.3493, -30.2825, 0.29 ) }
    dend_99 { pt3dadd( 28.0292, -31.3774, -30.3008, 0.59 ) }
    dend_99 { pt3dadd( 28.1117, -31.3948, -30.3178, 0.59 ) }
    dend_99 { pt3dadd( 28.3153, -31.4533, -30.3954, 1.03 ) }
    dend_99 { pt3dadd( 29.8557, -31.9235, -31.0501, 0.22 ) }
    dend_99 { pt3dadd( 30.3944, -32.0827, -31.2806, 0.22 ) }
    dend_99 { pt3dadd( 30.4614, -32.0998, -31.306, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_99 { pt3dadd( 31.1001, -32.2281, -31.5231, 0.96 ) }
    dend_99 { pt3dadd( 31.1705, -32.2384, -31.5431, 0.96 ) }
    dend_99 { pt3dadd( 31.9166, -32.2719, -31.7017, 1.62 ) }
    dend_99 { pt3dadd( 32.0056, -32.2647, -31.7142, 1.62 ) }
    dend_99 { pt3dadd( 32.8766, -32.1625, -31.8404, 1.62 ) }
    dend_99 { pt3dadd( 33.3292, -32.1027, -31.9068, 1.18 ) }
    dend_99 { pt3dadd( 33.8783, -32.0375, -32.0199, 0.66 ) }
    dend_99 { pt3dadd( 34.8742, -31.9693, -32.2678, 0.22 ) }
    dend_99 { pt3dadd( 35.458, -31.9718, -32.4365, 0.22 ) }
    dend_99 { pt3dadd( 36.213, -32.0547, -32.6978, 0.22 ) }
    dend_99 { pt3dadd( 36.4806, -32.1219, -32.8066, 0.22 ) }
    dend_99 { pt3dadd( 37.3579, -32.4875, -33.2318, 0.22 ) }
    dend_99 { pt3dadd( 37.8919, -32.8019, -33.5641, 0.96 ) }
    dend_99 { pt3dadd( 38.314, -33.1072, -33.8555, 0.96 ) }
    dend_99 { pt3dadd( 38.8595, -33.5305, -34.2452, 0.37 ) }
    dend_99 { pt3dadd( 39.2387, -33.8108, -34.5139, 0.37 ) }
    dend_99 { pt3dadd( 39.8308, -34.1785, -34.8765, 0.96 ) }
    dend_99 { pt3dadd( 40.755, -34.6666, -35.3342, 1.62 ) }
    dend_99 { pt3dadd( 41.3848, -34.9752, -35.6199, 1.92 ) }
    dend_99 { pt3dadd( 41.4456, -35.0056, -35.6476, 1.92 ) }
    dend_99 { pt3dadd( 42.3184, -35.4676, -36.0217, 0.66 ) }
    dend_99 { pt3dadd( 43.3252, -36.0413, -36.4193, 0.29 ) }
    dend_99 { pt3dadd( 44.2559, -36.5998, -36.7393, 0.29 ) }
    dend_99 { pt3dadd( 44.7133, -36.894, -36.8716, 0.29 ) }
    dend_99 { pt3dadd( 45.5521, -37.4533, -37.0969, 0.74 ) }
    dend_99 { pt3dadd( 45.9972, -37.7591, -37.2009, 1.18 ) }
    dend_99 { pt3dadd( 46.6796, -38.2451, -37.3368, 1.62 ) }
    dend_99 { pt3dadd( 46.7406, -38.2876, -37.348, 1.62 ) }
    dend_99 { pt3dadd( 47.8544, -38.973, -37.5198, 0.29 ) }
    dend_99 { pt3dadd( 48.8256, -39.5186, -37.7473, 0.29 ) }
    dend_99 { pt3dadd( 49.6035, -39.923, -37.9626, 0.29 ) }
    dend_99 { pt3dadd( 49.6652, -39.9544, -37.9845, 0.29 ) }
    dend_99 { pt3dadd( 50.0728, -40.1602, -38.1549, 0.66 ) }
    dend_99 { pt3dadd( 50.7006, -40.483, -38.46, 0.96 ) }
    dend_99 { pt3dadd( 52.2741, -41.3172, -39.3188, 1.33 ) }
    dend_99 { pt3dadd( 52.4656, -41.4277, -39.4268, 1.33 ) }
    dend_99 { pt3dadd( 53.2126, -41.8617, -39.8289, 1.69 ) }
    dend_99 { pt3dadd( 53.5945, -42.083, -40.0125, 1.33 ) }
    dend_99 { pt3dadd( 54.2984, -42.4798, -40.3028, 0.81 ) }
    dend_99 { pt3dadd( 55.2003, -42.9894, -40.6103, 0.22 ) }
    dend_99 { pt3dadd( 55.6017, -43.2052, -40.6857, 0.22 ) }
    dend_99 { pt3dadd( 56.046, -43.4362, -40.7711, 0.74 ) }
    dend_99 { pt3dadd( 56.5704, -43.6955, -40.8738, 1.25 ) }
    dend_99 { pt3dadd( 57.0279, -43.9104, -40.9525, 1.25 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 44/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 19.9617, -31.7106, -31.6943, 0.37 ) }
    dend_96 { pt3dadd( 19.845, -32.6917, -31.972, 0.37 ) }
    dend_96 { pt3dadd( 19.7822, -33.2293, -32.1298, 0.37 ) }
    dend_96 { pt3dadd( 19.7226, -33.835, -32.3972, 0.88 ) }
    dend_96 { pt3dadd( 19.6867, -34.1433, -32.5519, 0.96 ) }
    dend_96 { pt3dadd( 19.5231, -35.1097, -32.9157, 0.52 ) }
    dend_96 { pt3dadd( 19.4527, -35.4493, -33.0447, 0.52 ) }
    dend_96 { pt3dadd( 19.4359, -35.5098, -33.0659, 0.52 ) }
    dend_96 { pt3dadd( 19.1369, -36.4434, -33.3769, 0.96 ) }
    dend_96 { pt3dadd( 18.9951, -36.8545, -33.5585, 1.18 ) }
    dend_96 { pt3dadd( 18.5289, -38.0508, -34.1184, 0.44 ) }
    dend_96 { pt3dadd( 18.033, -39.183, -34.7063, 0.44 ) }
    dend_96 { pt3dadd( 17.6975, -39.8823, -35.1037, 0.44 ) }
    dend_96 { pt3dadd( 17.2164, -40.8036, -35.6496, 0.44 ) }
    dend_96 { pt3dadd( 16.4075, -42.141, -36.4577, 1.25 ) }
    dend_96 { pt3dadd( 16.115, -42.5758, -36.7561, 1.18 ) }
    dend_96 { pt3dadd( 15.5995, -43.2576, -37.2898, 0.59 ) }
    dend_96 { pt3dadd( 15.2929, -43.6158, -37.5578, 0.52 ) }
    dend_96 { pt3dadd( 14.9952, -43.9424, -37.8129, 0.52 ) }
    dend_96 { pt3dadd( 14.4301, -44.5526, -38.2287, 0.52 ) }
    dend_96 { pt3dadd( 13.8564, -45.2601, -38.5637, 1.33 ) }
    dend_96 { pt3dadd( 13.7067, -45.4903, -38.6658, 1.84 ) }
    dend_96 { pt3dadd( 13.4998, -45.8682, -38.8108, 1.25 ) }
    dend_96 { pt3dadd( 13.0844, -46.7612, -39.1573, 0.44 ) }
    dend_96 { pt3dadd( 12.6742, -47.7302, -39.5204, 0.22 ) }
    dend_96 { pt3dadd( 12.4123, -48.3716, -39.7138, 0.22 ) }
    dend_96 { pt3dadd( 12.0313, -49.2571, -39.9085, 0.22 ) }
    dend_96 { pt3dadd( 11.7537, -49.863, -40.0395, 0.22 ) }
    dend_96 { pt3dadd( 11.733, -49.9073, -40.047, 0.22 ) }
    dend_96 { pt3dadd( 11.3806, -50.6352, -40.1272, 0.22 ) }
    dend_96 { pt3dadd( 10.9526, -51.4962, -40.2224, 1.47 ) }
    dend_96 { pt3dadd( 10.9279, -51.5484, -40.2298, 1.47 ) }
    dend_96 { pt3dadd( 10.4613, -52.7361, -40.4026, 1.47 ) }
    dend_96 { pt3dadd( 9.96204, -54.2264, -40.7309, 0.44 ) }
    dend_96 { pt3dadd( 9.84262, -54.6225, -40.8809, 0.81 ) }
    dend_96 { pt3dadd( 9.75725, -54.9511, -41.0407, 1.11 ) }
    dend_96 { pt3dadd( 9.51676, -55.9397, -41.5953, 0.29 ) }
    dend_96 { pt3dadd( 9.25241, -57.009, -42.2209, 0.29 ) }
    dend_96 { pt3dadd( 9.06485, -57.8204, -42.7103, 0.88 ) }
    dend_96 { pt3dadd( 8.63727, -59.608, -43.8628, 0.29 ) }
    dend_96 { pt3dadd( 8.55414, -59.9156, -44.0625, 0.29 ) }
    dend_96 { pt3dadd( 8.45154, -60.2678, -44.2921, 0.74 ) }
    dend_96 { pt3dadd( 8.33679, -60.6211, -44.5147, 1.25 ) }
    dend_96 { pt3dadd( 7.88428, -61.9644, -45.3069, 0.29 ) }
    dend_96 { pt3dadd( 7.41025, -63.3369, -45.9986, 0.29 ) }
    dend_96 { pt3dadd( 7.08106, -64.2332, -46.4003, 0.88 ) }
    dend_96 { pt3dadd( 7.04571, -64.3248, -46.4433, 0.88 ) }
    dend_96 { pt3dadd( 6.84351, -64.8276, -46.7169, 1.33 ) }
    dend_96 { pt3dadd( 6.55242, -65.469, -47.1051, 0.88 ) }
    dend_96 { pt3dadd( 5.87705, -66.7128, -47.9212, 0.22 ) }
    dend_96 { pt3dadd( 5.85128, -66.7568, -47.9501, 0.88 ) }
    dend_96 { pt3dadd( 5.82074, -66.808, -47.9836, 0.88 ) }
    dend_96 { pt3dadd( 5.15381, -67.8751, -48.676, 0.29 ) }
    dend_96 { pt3dadd( 4.80121, -68.4265, -49.0477, 0.29 ) }
    dend_96 { pt3dadd( 4.54668, -68.8014, -49.2953, 0.96 ) }
    dend_96 { pt3dadd( 4.27949, -69.2115, -49.5474, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_96 { pt3dadd( 3.82339, -69.9956, -49.9704, 0.44 ) }
    dend_96 { pt3dadd( 3.56678, -70.4945, -50.2047, 0.44 ) }
    dend_96 { pt3dadd( 3.28616, -71.1851, -50.4632, 1.03 ) }
    dend_96 { pt3dadd( 3.15914, -71.5594, -50.6384, 1.4 ) }
    dend_96 { pt3dadd( 2.88755, -72.4199, -51.0767, 0.44 ) }
    dend_96 { pt3dadd( 2.65007, -73.2362, -51.4934, 0.44 ) }
    dend_96 { pt3dadd( 2.3951, -74.1899, -51.9951, 0.29 ) }
    dend_96 { pt3dadd( 2.19688, -75.0264, -52.4472, 0.29 ) }
    dend_96 { pt3dadd( 1.77845, -76.8401, -53.4381, 0.29 ) }
    dend_96 { pt3dadd( 1.64758, -77.4247, -53.7729, 0.29 ) }
    dend_96 { pt3dadd( 1.49435, -78.1143, -54.1879, 0.29 ) }
    dend_96 { pt3dadd( 1.35492, -78.7254, -54.6044, 1.03 ) }
    dend_96 { pt3dadd( 1.25065, -79.1912, -54.9457, 1.03 ) }
    // Section: dend_94, id: dend_94, parent: dend_92 (entry count 13/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 46.7989, -69.0053, 35.4015, 1.33 ) }
    dend_94 { pt3dadd( 49.793, -73.7362, 39.4214, 1.33 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 15/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 46.7989, -69.0053, 35.4015, 0.44 ) }
    dend_93 { pt3dadd( 50.7759, -74.8853, 40.8096, 1.33 ) }
    // Section: dend_88, id: dend_88, parent: dend_84 (entry count 17/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -10.2384, -71.3892, -47.3032, 0.22 ) }
    dend_88 { pt3dadd( -10.4109, -71.5788, -47.4838, 0.22 ) }
    dend_88 { pt3dadd( -10.5945, -71.8193, -47.6611, 0.22 ) }
    dend_88 { pt3dadd( -10.7787, -72.0784, -47.9606, 0.22 ) }
    dend_88 { pt3dadd( -11.169, -72.6872, -48.6817, 0.96 ) }
    dend_88 { pt3dadd( -11.2581, -72.8398, -48.8551, 0.96 ) }
    dend_88 { pt3dadd( -11.4697, -73.2307, -49.2524, 0.22 ) }
    dend_88 { pt3dadd( -11.6759, -73.6676, -49.6659, 0.22 ) }
    dend_88 { pt3dadd( -12.2323, -75.0367, -50.9344, 0.59 ) }
    dend_88 { pt3dadd( -12.3919, -75.5146, -51.3373, 0.22 ) }
    dend_88 { pt3dadd( -12.47, -75.8055, -51.5405, 0.22 ) }
    dend_88 { pt3dadd( -12.5886, -76.3496, -51.8849, 0.88 ) }
    dend_88 { pt3dadd( -12.6268, -76.5526, -51.995, 1.03 ) }
    dend_88 { pt3dadd( -12.8064, -77.634, -52.4361, 0.22 ) }
    dend_88 { pt3dadd( -12.8961, -78.2493, -52.5648, 0.22 ) }
    dend_88 { pt3dadd( -12.9777, -78.7893, -52.6887, 0.22 ) }
    dend_88 { pt3dadd( -13.0232, -79.0144, -52.7428, 0.22 ) }
    dend_88 { pt3dadd( -13.0917, -79.2807, -52.8371, 0.66 ) }
    dend_88 { pt3dadd( -13.1981, -79.6139, -52.9667, 0.44 ) }
    dend_88 { pt3dadd( -13.243, -79.7297, -53.026, 0.37 ) }
    dend_88 { pt3dadd( -13.4196, -80.1444, -53.3091, 0.22 ) }
    dend_88 { pt3dadd( -13.6513, -80.637, -53.7652, 0.22 ) }
    dend_88 { pt3dadd( -13.9845, -81.3213, -54.469, 0.59 ) }
    dend_88 { pt3dadd( -14.0975, -81.5623, -54.739, 0.74 ) }
    dend_88 { pt3dadd( -14.4, -82.2126, -55.5364, 0.74 ) }
    dend_88 { pt3dadd( -14.4791, -82.3851, -55.7595, 0.96 ) }
    dend_88 { pt3dadd( -15.0148, -83.5056, -57.2661, 0.15 ) }
    dend_88 { pt3dadd( -15.0485, -83.5712, -57.3589, 0.37 ) }
    dend_88 { pt3dadd( -15.3279, -84.0261, -57.9889, 0.15 ) }
    dend_88 { pt3dadd( -15.527, -84.2958, -58.3849, 0.66 ) }
    dend_88 { pt3dadd( -15.5537, -84.3242, -58.4274, 0.66 ) }
    dend_88 { pt3dadd( -15.7878, -84.5223, -58.7264, 0.66 ) }
    dend_88 { pt3dadd( -16.3679, -84.8647, -59.2248, 0.22 ) }
    dend_88 { pt3dadd( -16.6892, -85.0286, -59.4589, 0.22 ) }
    dend_88 { pt3dadd( -16.7296, -85.0472, -59.4852, 0.52 ) }
    dend_88 { pt3dadd( -16.9257, -85.1443, -59.6029, 0.37 ) }
    dend_88 { pt3dadd( -17.2437, -85.313, -59.7879, 0.22 ) }
    dend_88 { pt3dadd( -17.9148, -85.6977, -60.2394, 0.88 ) }
    dend_88 { pt3dadd( -18.0519, -85.7802, -60.3348, 0.88 ) }
    dend_88 { pt3dadd( -18.4372, -86.0285, -60.6384, 0.74 ) }
    dend_88 { pt3dadd( -18.9003, -86.33, -61.013, 0.22 ) }
    dend_88 { pt3dadd( -19.2116, -86.5415, -61.2684, 0.22 ) }
    dend_88 { pt3dadd( -19.7946, -86.9418, -61.7326, 0.81 ) }
    dend_88 { pt3dadd( -19.9453, -87.0503, -61.8493, 0.81 ) }
    dend_88 { pt3dadd( -20.3784, -87.37, -62.1998, 0.15 ) }
    dend_88 { pt3dadd( -20.5403, -87.5036, -62.3318, 0.15 ) }
    dend_88 { pt3dadd( -20.7128, -87.6756, -62.4976, 0.44 ) }
    dend_88 { pt3dadd( -20.8121, -87.7951, -62.5983, 0.74 ) }
    dend_88 { pt3dadd( -21.2049, -88.3436, -62.9484, 0.22 ) }
    dend_88 { pt3dadd( -21.2223, -88.3786, -62.9772, 0.22 ) }
    dend_88 { pt3dadd( -21.3363, -88.7842, -63.3317, 0.15 ) }
    dend_88 { pt3dadd( -21.3806, -89.027, -63.5544, 0.66 ) }
    dend_88 { pt3dadd( -21.3872, -89.0877, -63.6113, 1.03 ) }
    dend_88 { pt3dadd( -21.3971, -89.2368, -63.744, 1.03 ) }
    dend_88 { pt3dadd( -21.4696, -90.1822, -64.6294, 0.29 ) }
    dend_88 { pt3dadd( -21.5159, -90.4969, -64.9324, 0.22 ) }
    dend_88 { pt3dadd( -21.5416, -90.6515, -65.0779, 0.22 ) }
    dend_88 { pt3dadd( -21.6116, -91.098, -65.4558, 0.81 ) }
    dend_88 { pt3dadd( -21.6419, -91.3126, -65.6142, 0.81 ) }
    dend_88 { pt3dadd( -21.7351, -92.0901, -66.1224, 0.22 ) }
    dend_88 { pt3dadd( -21.7988, -92.4906, -66.3322, 0.22 ) }
    dend_88 { pt3dadd( -21.872, -92.8992, -66.6011, 0.29 ) }
    dend_88 { pt3dadd( -21.9292, -93.1451, -66.7766, 0.29 ) }
    dend_88 { pt3dadd( -22.008, -93.433, -66.983, 0.29 ) }
    dend_88 { pt3dadd( -22.1502, -93.9108, -67.3617, 0.96 ) }
    dend_88 { pt3dadd( -22.2313, -94.1703, -67.5739, 1.25 ) }
    dend_88 { pt3dadd( -22.5301, -95.0993, -68.3814, 0.22 ) }
    dend_88 { pt3dadd( -22.6594, -95.4347, -68.6971, 0.22 ) }
    dend_88 { pt3dadd( -22.7668, -95.6825, -68.9424, 0.22 ) }
    dend_88 { pt3dadd( -23.0994, -96.3948, -69.672, 0.88 ) }
    dend_88 { pt3dadd( -23.1369, -96.478, -69.754, 1.25 ) }
    dend_88 { pt3dadd( -23.2405, -96.7635, -70.0301, 1.25 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 89/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -10.2384, -71.3892, -47.3032, 0.29 ) }
    dend_85 { pt3dadd( -9.64116, -73.4885, -45.2788, 0.29 ) }
    dend_85 { pt3dadd( -9.48352, -74.024, -44.8258, 0.29 ) }
    dend_85 { pt3dadd( -9.31227, -74.6744, -44.4091, 0.29 ) }
    dend_85 { pt3dadd( -9.17241, -75.3218, -44.1676, 0.96 ) }
    dend_85 { pt3dadd( -9.04913, -76.4422, -43.9643, 1.33 ) }
    dend_85 { pt3dadd( -9.07121, -77.4975, -43.9975, 0.29 ) }
    dend_85 { pt3dadd( -9.14748, -78.0265, -44.1836, 0.29 ) }
    dend_85 { pt3dadd( -9.62461, -80.2827, -45.1759, 0.66 ) }
    dend_85 { pt3dadd( -9.78116, -80.9799, -45.517, 1.03 ) }
    dend_85 { pt3dadd( -9.99103, -81.9829, -46.055, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_85 { pt3dadd( -10.2171, -83.2651, -46.7659, 0.29 ) }
    dend_85 { pt3dadd( -10.3015, -83.8653, -47.0503, 0.29 ) }
    dend_85 { pt3dadd( -10.3092, -83.9501, -47.0761, 0.29 ) }
    dend_85 { pt3dadd( -10.2971, -85.0697, -47.157, 0.29 ) }
    dend_85 { pt3dadd( -10.2711, -85.4624, -47.1892, 0.81 ) }
    dend_85 { pt3dadd( -10.1846, -86.0458, -47.235, 0.81 ) }
    dend_85 { pt3dadd( -10.098, -86.6759, -47.267, 0.22 ) }
    dend_85 { pt3dadd( -10.072, -87.2757, -47.4054, 0.22 ) }
    dend_85 { pt3dadd( -10.0884, -87.8332, -47.5943, 0.22 ) }
    dend_85 { pt3dadd( -10.2012, -88.7604, -47.9661, 0.81 ) }
    dend_85 { pt3dadd( -10.28, -89.3419, -48.2102, 1.25 ) }
    dend_85 { pt3dadd( -10.38, -90.1518, -48.5555, 1.62 ) }
    dend_85 { pt3dadd( -10.5443, -92.0601, -49.4113, 0.29 ) }
    dend_85 { pt3dadd( -10.5724, -92.6978, -49.7009, 0.29 ) }
    dend_85 { pt3dadd( -10.5651, -93.6649, -50.1132, 0.29 ) }
    dend_85 { pt3dadd( -10.5261, -94.3327, -50.3521, 0.29 ) }
    dend_85 { pt3dadd( -10.4718, -94.9846, -50.5609, 0.29 ) }
    dend_85 { pt3dadd( -10.3404, -95.9318, -50.8666, 0.29 ) }
    dend_85 { pt3dadd( -10.2375, -96.4679, -51.0402, 0.74 ) }
    dend_85 { pt3dadd( -10.0495, -97.2264, -51.3374, 1.33 ) }
    dend_85 { pt3dadd( -9.79358, -98.2081, -51.7564, 1.33 ) }
    dend_85 { pt3dadd( -9.67218, -98.7541, -51.9679, 1.33 ) }
    dend_85 { pt3dadd( -9.41155, -100.14, -52.4267, 0.52 ) }
    dend_85 { pt3dadd( -9.29019, -100.934, -52.6285, 0.37 ) }
    dend_85 { pt3dadd( -9.19769, -102.011, -52.9418, 0.37 ) }
    dend_85 { pt3dadd( -9.1629, -102.821, -53.1907, 0.37 ) }
    dend_85 { pt3dadd( -9.15801, -103.841, -53.5293, 0.81 ) }
    dend_85 { pt3dadd( -9.17597, -104.515, -53.7497, 1.11 ) }
    dend_85 { pt3dadd( -9.22257, -105.151, -53.9648, 0.74 ) }
    dend_85 { pt3dadd( -9.41035, -107.304, -54.8162, 0.22 ) }
    dend_85 { pt3dadd( -9.43439, -107.53, -54.9256, 0.66 ) }
    dend_85 { pt3dadd( -9.45951, -107.841, -55.0963, 1.11 ) }
    dend_85 { pt3dadd( -9.46399, -107.907, -55.1357, 1.11 ) }
    dend_85 { pt3dadd( -9.53756, -109.027, -55.7863, 0.29 ) }
    dend_85 { pt3dadd( -9.58676, -109.819, -56.3018, 0.29 ) }
    dend_85 { pt3dadd( -9.60883, -110.314, -56.5996, 0.52 ) }
    dend_85 { pt3dadd( -9.62467, -110.594, -56.7764, 1.03 ) }
    dend_85 { pt3dadd( -9.64262, -110.849, -56.9401, 1.03 ) }
    dend_85 { pt3dadd( -9.64871, -110.938, -57.0054, 1.03 ) }
    dend_85 { pt3dadd( -9.84541, -112.787, -58.4917, 0.29 ) }
    dend_85 { pt3dadd( -9.91152, -113.322, -58.9682, 0.29 ) }
    dend_85 { pt3dadd( -9.93762, -113.611, -59.2482, 0.29 ) }
    dend_85 { pt3dadd( -9.94025, -113.668, -59.3003, 0.29 ) }
    dend_85 { pt3dadd( -9.92977, -114.546, -60.0166, 0.74 ) }
    dend_85 { pt3dadd( -9.92082, -115.043, -60.3931, 1.25 ) }
    dend_85 { pt3dadd( -9.91789, -115.318, -60.5744, 1.25 ) }
    dend_85 { pt3dadd( -9.93795, -116.525, -61.41, 0.44 ) }
    dend_85 { pt3dadd( -9.9555, -117.306, -61.9457, 0.37 ) }
    dend_85 { pt3dadd( -9.9963, -117.931, -62.3297, 0.37 ) }
    dend_85 { pt3dadd( -10.066, -119.088, -62.9278, 0.29 ) }
    dend_85 { pt3dadd( -10.0689, -119.384, -63.0659, 0.29 ) }
    dend_85 { pt3dadd( -10.0542, -119.962, -63.2919, 0.66 ) }
    dend_85 { pt3dadd( -10.0388, -120.207, -63.3818, 1.03 ) }
    dend_85 { pt3dadd( -9.90604, -121.355, -63.8829, 0.29 ) }
    dend_85 { pt3dadd( -9.76169, -122.187, -64.2456, 0.29 ) }
    dend_85 { pt3dadd( -9.58866, -122.876, -64.5116, 0.29 ) }
    dend_85 { pt3dadd( -9.44511, -123.357, -64.7079, 0.29 ) }
    dend_85 { pt3dadd( -9.03721, -124.526, -65.2135, 1.18 ) }
    dend_85 { pt3dadd( -8.91064, -124.837, -65.3768, 0.07 ) }
    dend_85 { pt3dadd( -8.67505, -125.231, -65.6823, 1.18 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 60/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -12.0876, -31.4655, 1.07542, 1.18 ) }
    dend_79 { pt3dadd( -12.5578, -32.0684, 1.58001, 1.18 ) }
    dend_79 { pt3dadd( -12.9467, -32.431, 1.90344, 1.18 ) }
    dend_79 { pt3dadd( -13.3194, -32.7001, 2.16075, 0.59 ) }
    dend_79 { pt3dadd( -13.9178, -33.0648, 2.51309, 0.52 ) }
    dend_79 { pt3dadd( -14.2767, -33.2668, 2.69949, 0.22 ) }
    dend_79 { pt3dadd( -14.6122, -33.4579, 2.85954, 0.22 ) }
    dend_79 { pt3dadd( -15.1377, -33.7128, 3.03516, 0.22 ) }
    dend_79 { pt3dadd( -15.4105, -33.8469, 3.10539, 0.22 ) }
    dend_79 { pt3dadd( -15.7197, -34.033, 3.17914, 0.22 ) }
    dend_79 { pt3dadd( -15.9876, -34.2373, 3.23145, 0.37 ) }
    dend_79 { pt3dadd( -16.243, -34.4718, 3.32518, 0.44 ) }
    dend_79 { pt3dadd( -16.5713, -34.7897, 3.48451, 0.44 ) }
    dend_79 { pt3dadd( -16.9622, -35.1622, 3.69833, 0.37 ) }
    dend_79 { pt3dadd( -17.4988, -35.6063, 3.98021, 0.81 ) }
    dend_79 { pt3dadd( -17.7213, -35.7539, 4.08958, 1.25 ) }
    dend_79 { pt3dadd( -18.4822, -36.1436, 4.43015, 0.81 ) }
    dend_79 { pt3dadd( -19.0973, -36.3773, 4.67595, 0.29 ) }
    dend_79 { pt3dadd( -19.5207, -36.4881, 4.83848, 0.29 ) }
    dend_79 { pt3dadd( -20.0162, -36.569, 5.00924, 0.66 ) }
    dend_79 { pt3dadd( -20.3651, -36.6065, 5.10182, 1.11 ) }
    dend_79 { pt3dadd( -20.6401, -36.6455, 5.16177, 0.59 ) }
    dend_79 { pt3dadd( -20.8255, -36.6954, 5.21603, 0.44 ) }
    dend_79 { pt3dadd( -21.1228, -36.8623, 5.39579, 0.74 ) }
    dend_79 { pt3dadd( -21.339, -37.0998, 5.74138, 0.37 ) }
    dend_79 { pt3dadd( -21.5184, -37.3741, 6.16263, 0.22 ) }
    dend_79 { pt3dadd( -21.6472, -37.6213, 6.57095, 0.22 ) }
    dend_79 { pt3dadd( -21.9245, -38.2272, 7.5991, 0.66 ) }
    dend_79 { pt3dadd( -21.9715, -38.3351, 7.7812, 0.81 ) }
    dend_79 { pt3dadd( -22.309, -39.1211, 9.07612, 0.44 ) }
    dend_79 { pt3dadd( -22.3694, -39.2705, 9.32595, 0.15 ) }
    dend_79 { pt3dadd( -22.484, -39.5346, 9.77184, 0.22 ) }
    dend_79 { pt3dadd( -22.5461, -39.6543, 9.96644, 0.22 ) }
    dend_79 { pt3dadd( -22.6461, -39.84, 10.1952, 0.44 ) }
    dend_79 { pt3dadd( -22.7436, -40.0105, 10.3578, 1.18 ) }
    dend_79 { pt3dadd( -22.8922, -40.2636, 10.5073, 1.18 ) }
    dend_79 { pt3dadd( -23.0336, -40.4949, 10.6289, 0.88 ) }
    dend_79 { pt3dadd( -23.5193, -41.1835, 11.0229, 0.52 ) }
    dend_79 { pt3dadd( -23.7008, -41.4105, 11.1941, 0.37 ) }
    dend_79 { pt3dadd( -24.0586, -41.8134, 11.5441, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_79 { pt3dadd( -24.3181, -42.0764, 11.7896, 0.29 ) }
    dend_79 { pt3dadd( -24.6145, -42.3458, 12.0452, 0.44 ) }
    dend_79 { pt3dadd( -25.2834, -42.9173, 12.6679, 0.37 ) }
    dend_79 { pt3dadd( -25.7994, -43.3357, 13.152, 0.37 ) }
    dend_79 { pt3dadd( -25.9921, -43.4865, 13.346, 0.37 ) }
    dend_79 { pt3dadd( -26.2238, -43.667, 13.6014, 0.66 ) }
    dend_79 { pt3dadd( -26.5402, -43.9151, 13.9732, 0.37 ) }
    dend_79 { pt3dadd( -27.3791, -44.6352, 15.0371, 0.29 ) }
    dend_79 { pt3dadd( -27.4577, -44.7096, 15.1363, 1.03 ) }
    dend_79 { pt3dadd( -27.574, -44.8263, 15.2888, 1.25 ) }
    dend_79 { pt3dadd( -33.0882, -50.6643, 19.8875, 1.25 ) }
    dend_79 { pt3dadd( -39.7748, -55.2088, 24.467, 1.25 ) }
    dend_79 { pt3dadd( -46.2724, -60.0248, 29.0267, 1.25 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 13/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -12.0876, -31.4655, 1.07542, 0.66 ) }
    dend_78 { pt3dadd( -12.9271, -31.4061, 1.0166, 0.66 ) }
    dend_78 { pt3dadd( -13.4871, -31.3613, 0.947826, 0.29 ) }
    dend_78 { pt3dadd( -13.6245, -31.3512, 0.928701, 0.29 ) }
    dend_78 { pt3dadd( -13.9865, -31.3311, 0.88702, 0.29 ) }
    dend_78 { pt3dadd( -14.2601, -31.3169, 0.860096, 0.29 ) }
    dend_78 { pt3dadd( -14.9669, -31.2732, 0.80983, 0.44 ) }
    dend_78 { pt3dadd( -15.0989, -31.2668, 0.802402, 0.44 ) }
    dend_78 { pt3dadd( -15.3091, -31.2505, 0.795123, 0.88 ) }
    dend_78 { pt3dadd( -15.8557, -31.2084, 0.725786, 1.25 ) }
    dend_78 { pt3dadd( -15.9554, -31.1989, 0.711054, 1.25 ) }
    dend_78 { pt3dadd( -16.3414, -31.1624, 0.662316, 1.25 ) }
    dend_78 { pt3dadd( -16.6873, -31.1281, 0.605782, 1.11 ) }
    dend_78 { pt3dadd( -17.2171, -31.0723, 0.49611, 1.03 ) }
    dend_78 { pt3dadd( -18.1756, -30.9886, 0.149805, 0.81 ) }
    dend_78 { pt3dadd( -18.7357, -30.9647, -0.111064, 0.29 ) }
    dend_78 { pt3dadd( -19.1611, -30.9668, -0.328862, 0.37 ) }
    dend_78 { pt3dadd( -19.9915, -31.0094, -0.790931, 0.66 ) }
    dend_78 { pt3dadd( -20.2212, -31.0308, -0.92343, 0.66 ) }
    dend_78 { pt3dadd( -21.5106, -31.2269, -1.65688, 0.15 ) }
    dend_78 { pt3dadd( -21.8979, -31.3045, -1.87292, 0.15 ) }
    dend_78 { pt3dadd( -22.2481, -31.3886, -2.06593, 0.15 ) }
    dend_78 { pt3dadd( -22.3849, -31.4245, -2.13048, 0.81 ) }
    dend_78 { pt3dadd( -22.6387, -31.4994, -2.20436, 1.18 ) }
    dend_78 { pt3dadd( -22.9045, -31.5786, -2.24748, 0.59 ) }
    dend_78 { pt3dadd( -23.6321, -31.7983, -2.25539, 0.29 ) }
    dend_78 { pt3dadd( -23.9653, -31.9046, -2.26565, 0.29 ) }
    dend_78 { pt3dadd( -24.2259, -32.0052, -2.27462, 0.52 ) }
    dend_78 { pt3dadd( -24.5678, -32.1602, -2.28255, 0.66 ) }
    dend_78 { pt3dadd( -24.8227, -32.295, -2.30315, 0.81 ) }
    dend_78 { pt3dadd( -25.1692, -32.4984, -2.42392, 0.29 ) }
    dend_78 { pt3dadd( -25.4363, -32.6677, -2.60916, 0.22 ) }
    dend_78 { pt3dadd( -25.749, -32.8565, -2.89747, 0.22 ) }
    dend_78 { pt3dadd( -25.9092, -32.9522, -3.06413, 0.22 ) }
    dend_78 { pt3dadd( -26.412, -33.2451, -3.5992, 0.74 ) }
    dend_78 { pt3dadd( -27.4189, -33.8146, -4.61377, 0.74 ) }
    dend_78 { pt3dadd( -28.0666, -34.1664, -5.29398, 0.44 ) }
    dend_78 { pt3dadd( -28.5668, -34.4232, -5.82626, 0.88 ) }
    dend_78 { pt3dadd( -28.7263, -34.5037, -5.99003, 1.33 ) }
    dend_78 { pt3dadd( -29.114, -34.6957, -6.3637, 1.03 ) }
    dend_78 { pt3dadd( -29.6181, -34.9431, -6.79579, 0.81 ) }
    dend_78 { pt3dadd( -31.2423, -35.7161, -7.93727, 0.37 ) }
    dend_78 { pt3dadd( -31.8775, -36.0051, -8.35027, 0.22 ) }
    dend_78 { pt3dadd( -32.2686, -36.1834, -8.60765, 0.22 ) }
    dend_78 { pt3dadd( -32.3457, -36.2184, -8.6591, 0.22 ) }
    dend_78 { pt3dadd( -32.5003, -36.2935, -8.76359, 0.59 ) }
    dend_78 { pt3dadd( -32.8228, -36.4674, -8.97676, 0.81 ) }
    dend_78 { pt3dadd( -33.3616, -36.8291, -9.20692, 0.37 ) }
    dend_78 { pt3dadd( -33.5153, -36.945, -9.28011, 0.29 ) }
    dend_78 { pt3dadd( -33.7786, -37.1183, -9.44303, 0.29 ) }
    dend_78 { pt3dadd( -34.0725, -37.2804, -9.60869, 0.59 ) }
    dend_78 { pt3dadd( -34.9766, -37.7269, -10.0581, 0.88 ) }
    dend_78 { pt3dadd( -35.3952, -37.9153, -10.2253, 0.29 ) }
    dend_78 { pt3dadd( -35.4549, -37.9414, -10.244, 0.29 ) }
    dend_78 { pt3dadd( -36.6004, -38.4205, -10.5468, 0.29 ) }
    dend_78 { pt3dadd( -37.5321, -38.8279, -10.7581, 1.47 ) }
    dend_78 { pt3dadd( -38.0583, -39.0682, -10.8429, 1.55 ) }
    dend_78 { pt3dadd( -38.8107, -39.4376, -10.8895, 0.37 ) }
    dend_78 { pt3dadd( -39.1675, -39.6315, -10.8983, 0.29 ) }
    dend_78 { pt3dadd( -39.2305, -39.6719, -10.8989, 0.29 ) }
    dend_78 { pt3dadd( -39.6455, -40.0276, -10.8779, 0.29 ) }
    dend_78 { pt3dadd( -39.89, -40.2782, -10.8941, 0.29 ) }
    dend_78 { pt3dadd( -39.9364, -40.3259, -10.9039, 0.29 ) }
    dend_78 { pt3dadd( -40.2433, -40.6273, -10.9919, 0.29 ) }
    dend_78 { pt3dadd( -40.7489, -41.0625, -11.1606, 0.66 ) }
    dend_78 { pt3dadd( -41.051, -41.2982, -11.2603, 1.03 ) }
    dend_78 { pt3dadd( -41.2771, -41.4535, -11.3292, 0.88 ) }
    dend_78 { pt3dadd( -41.6907, -41.7218, -11.4584, 1.03 ) }
    dend_78 { pt3dadd( -42.0778, -41.9508, -11.5721, 0.52 ) }
    dend_78 { pt3dadd( -42.8607, -42.385, -11.7764, 0.22 ) }
    dend_78 { pt3dadd( -43.1382, -42.5393, -11.862, 0.22 ) }
    dend_78 { pt3dadd( -43.4296, -42.7009, -11.97, 0.22 ) }
    dend_78 { pt3dadd( -43.7102, -42.8725, -12.1043, 0.22 ) }
    dend_78 { pt3dadd( -43.8531, -42.9691, -12.1916, 0.22 ) }
    dend_78 { pt3dadd( -44.1584, -43.1897, -12.4216, 0.22 ) }
    dend_78 { pt3dadd( -44.9503, -43.8258, -13.0911, 1.11 ) }
    dend_78 { pt3dadd( -45.1522, -44.0077, -13.275, 1.33 ) }
    dend_78 { pt3dadd( -45.4871, -44.3538, -13.5914, 0.74 ) }
    dend_78 { pt3dadd( -45.7581, -44.6614, -13.8264, 0.37 ) }
    dend_78 { pt3dadd( -45.8765, -44.8008, -13.9193, 0.22 ) }
    dend_78 { pt3dadd( -46.0808, -45.0487, -14.0488, 0.22 ) }
    dend_78 { pt3dadd( -46.2258, -45.2165, -14.1501, 0.22 ) }
    dend_78 { pt3dadd( -46.6343, -45.6735, -14.4714, 1.18 ) }
    dend_78 { pt3dadd( -46.9298, -46.0, -14.7154, 1.62 ) }
    dend_78 { pt3dadd( -47.6556, -46.8049, -15.4218, 0.22 ) }
    dend_78 { pt3dadd( -48.0885, -47.2965, -15.9058, 0.22 ) }
    dend_78 { pt3dadd( -48.9786, -48.325, -17.0174, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_78 { pt3dadd( -49.0161, -48.3672, -17.0664, 0.52 ) }
    dend_78 { pt3dadd( -49.0771, -48.4343, -17.1505, 0.88 ) }
    dend_78 { pt3dadd( -49.6199, -49.0228, -17.9335, 0.22 ) }
    dend_78 { pt3dadd( -49.756, -49.1643, -18.1195, 0.22 ) }
    dend_78 { pt3dadd( -49.8811, -49.2851, -18.2597, 0.22 ) }
    dend_78 { pt3dadd( -50.145, -49.5405, -18.4473, 0.37 ) }
    dend_78 { pt3dadd( -50.3221, -49.677, -18.5582, 0.37 ) }
    dend_78 { pt3dadd( -50.5244, -49.82, -18.6735, 0.37 ) }
    dend_78 { pt3dadd( -50.9696, -50.1107, -18.8937, 0.88 ) }
    dend_78 { pt3dadd( -51.8826, -50.6415, -19.351, 1.25 ) }
    dend_78 { pt3dadd( -52.1387, -50.7765, -19.4693, 1.4 ) }
    dend_78 { pt3dadd( -53.6292, -51.5359, -20.1183, 0.29 ) }
    dend_78 { pt3dadd( -53.9154, -51.6742, -20.2315, 0.44 ) }
    dend_78 { pt3dadd( -54.2714, -51.8413, -20.3554, 0.44 ) }
    dend_78 { pt3dadd( -55.2926, -52.2987, -20.6236, 0.59 ) }
    dend_78 { pt3dadd( -56.0969, -52.666, -20.744, 1.25 ) }
    dend_78 { pt3dadd( -56.4055, -52.8265, -20.7701, 1.25 ) }
    dend_78 { pt3dadd( -56.6378, -52.9707, -20.7632, 1.25 ) }
    dend_78 { pt3dadd( -56.8819, -53.1336, -20.754, 0.96 ) }
    dend_78 { pt3dadd( -57.3467, -53.483, -20.7262, 0.59 ) }
    dend_78 { pt3dadd( -57.962, -54.0052, -20.6574, 0.29 ) }
    dend_78 { pt3dadd( -58.412, -54.3946, -20.6191, 0.29 ) }
    dend_78 { pt3dadd( -58.6724, -54.6049, -20.6143, 0.29 ) }
    dend_78 { pt3dadd( -59.2037, -54.9787, -20.6365, 0.74 ) }
    dend_78 { pt3dadd( -59.4697, -55.145, -20.6575, 1.03 ) }
    dend_78 { pt3dadd( -59.6389, -55.2445, -20.6759, 1.25 ) }
    dend_78 { pt3dadd( -59.8762, -55.3774, -20.7064, 0.96 ) }
    dend_78 { pt3dadd( -60.4402, -55.7035, -20.7803, 0.59 ) }
    dend_78 { pt3dadd( -61.1732, -56.2224, -20.916, 0.29 ) }
    dend_78 { pt3dadd( -61.649, -56.6253, -21.0187, 0.29 ) }
    dend_78 { pt3dadd( -61.9624, -56.9167, -21.0951, 0.29 ) }
    dend_78 { pt3dadd( -62.1034, -57.0467, -21.1508, 0.44 ) }
    dend_78 { pt3dadd( -62.2654, -57.1977, -21.2321, 0.74 ) }
    dend_78 { pt3dadd( -62.8681, -57.7407, -21.5872, 0.29 ) }
    dend_78 { pt3dadd( -63.0558, -57.9025, -21.7216, 0.29 ) }
    dend_78 { pt3dadd( -63.2462, -58.0467, -21.8643, 0.22 ) }
    dend_78 { pt3dadd( -64.2028, -58.685, -22.5331, 0.22 ) }
    dend_78 { pt3dadd( -64.3851, -58.7903, -22.6603, 0.96 ) }
    dend_78 { pt3dadd( -64.8528, -59.0372, -22.9727, 1.33 ) }
    dend_78 { pt3dadd( -65.1459, -59.193, -23.1575, 1.11 ) }
    dend_78 { pt3dadd( -65.5012, -59.4208, -23.3822, 0.37 ) }
    dend_78 { pt3dadd( -65.7577, -59.6064, -23.5262, 0.22 ) }
    dend_78 { pt3dadd( -66.4492, -60.1209, -23.8383, 0.22 ) }
    dend_78 { pt3dadd( -66.7591, -60.3248, -23.9738, 0.29 ) }
    dend_78 { pt3dadd( -67.1031, -60.5285, -24.0972, 0.37 ) }
    dend_78 { pt3dadd( -67.494, -60.744, -24.2037, 0.29 ) }
    dend_78 { pt3dadd( -67.8494, -60.9364, -24.2691, 0.29 ) }
    dend_78 { pt3dadd( -68.6475, -61.4146, -24.3626, 0.74 ) }
    dend_78 { pt3dadd( -68.9441, -61.6059, -24.3697, 0.74 ) }
    dend_78 { pt3dadd( -69.5525, -62.0108, -24.466, 0.22 ) }
    dend_78 { pt3dadd( -70.0087, -62.2944, -24.57, 0.22 ) }
    dend_78 { pt3dadd( -70.2092, -62.4199, -24.6264, 0.37 ) }
    dend_78 { pt3dadd( -70.6946, -62.7725, -24.78, 0.37 ) }
    dend_78 { pt3dadd( -70.9383, -62.98, -24.8752, 0.37 ) }
    dend_78 { pt3dadd( -72.0057, -63.9108, -25.351, 0.74 ) }
    dend_78 { pt3dadd( -72.41, -64.2367, -25.5376, 1.33 ) }
    dend_78 { pt3dadd( -72.6849, -64.441, -25.6573, 1.33 ) }
    dend_78 { pt3dadd( -73.3248, -64.8817, -25.9091, 0.96 ) }
    dend_78 { pt3dadd( -74.4279, -65.6064, -26.2797, 0.15 ) }
    dend_78 { pt3dadd( -74.7708, -65.8396, -26.3616, 0.15 ) }
    dend_78 { pt3dadd( -75.187, -66.1504, -26.3855, 0.15 ) }
    dend_78 { pt3dadd( -75.425, -66.3507, -26.3913, 0.81 ) }
    dend_78 { pt3dadd( -75.4734, -66.3946, -26.3883, 0.81 ) }
    dend_78 { pt3dadd( -75.783, -66.7047, -26.3125, 1.33 ) }
    dend_78 { pt3dadd( -76.105, -67.1126, -26.1523, 0.74 ) }
    dend_78 { pt3dadd( -76.3602, -67.4994, -26.0123, 0.96 ) }
    dend_78 { pt3dadd( -76.4323, -67.6173, -25.9724, 0.96 ) }
    dend_78 { pt3dadd( -76.7452, -68.072, -25.8186, 0.29 ) }
    dend_78 { pt3dadd( -77.1049, -68.5201, -25.6683, 0.29 ) }
    dend_78 { pt3dadd( -77.4092, -68.8589, -25.5452, 0.88 ) }
    dend_78 { pt3dadd( -77.9314, -69.392, -25.3424, 1.47 ) }
    dend_78 { pt3dadd( -78.174, -69.6335, -25.2549, 1.47 ) }
    dend_78 { pt3dadd( -78.9062, -70.3795, -24.9503, 0.52 ) }
    dend_78 { pt3dadd( -79.6036, -71.0962, -24.6307, 0.52 ) }
    dend_78 { pt3dadd( -79.9829, -71.5005, -24.4487, 0.52 ) }
    dend_78 { pt3dadd( -80.2388, -71.7912, -24.3006, 0.52 ) }
    dend_78 { pt3dadd( -80.6657, -72.313, -24.0176, 0.52 ) }
    dend_78 { pt3dadd( -81.0027, -72.8457, -23.6726, 0.74 ) }
    dend_78 { pt3dadd( -81.2203, -73.2882, -23.3525, 0.74 ) }
    dend_78 { pt3dadd( -81.5176, -74.013, -22.8052, 0.22 ) }
    dend_78 { pt3dadd( -81.7667, -74.6986, -22.3087, 0.96 ) }
    dend_78 { pt3dadd( -81.8626, -75.0322, -22.0532, 1.33 ) }
    dend_78 { pt3dadd( -82.1824, -76.2978, -21.0452, 0.37 ) }
    dend_78 { pt3dadd( -82.3011, -76.8578, -20.6134, 0.22 ) }
    dend_78 { pt3dadd( -82.3467, -77.1294, -20.41, 0.29 ) }
    dend_78 { pt3dadd( -82.4482, -77.6808, -19.9942, 0.29 ) }
    dend_78 { pt3dadd( -82.7315, -78.8147, -19.2049, 0.96 ) }
    dend_78 { pt3dadd( -82.8243, -79.115, -18.9939, 1.4 ) }
    dend_78 { pt3dadd( -82.9087, -79.332, -18.8431, 1.69 ) }
    dend_78 { pt3dadd( -83.0725, -79.704, -18.5738, 1.55 ) }
    dend_78 { pt3dadd( -83.7979, -81.1712, -17.4013, 0.44 ) }
    dend_78 { pt3dadd( -84.0509, -81.6032, -17.0276, 0.44 ) }
    dend_78 { pt3dadd( -84.3766, -82.092, -16.6321, 0.44 ) }
    dend_78 { pt3dadd( -84.4273, -82.1642, -16.5756, 0.88 ) }
    dend_78 { pt3dadd( -84.8133, -82.6746, -16.1945, 1.11 ) }
    dend_78 { pt3dadd( -85.3793, -83.3719, -15.7107, 1.11 ) }
    dend_78 { pt3dadd( -85.5555, -83.5649, -15.6061, 0.81 ) }
    dend_78 { pt3dadd( -86.3289, -84.3775, -15.1763, 0.29 ) }
    dend_78 { pt3dadd( -86.9212, -85.0515, -14.8809, 0.29 ) }
    dend_78 { pt3dadd( -87.1692, -85.3722, -14.7383, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_78 { pt3dadd( -87.2752, -85.5274, -14.6725, 1.11 ) }
    dend_78 { pt3dadd( -87.6341, -86.082, -14.4578, 1.11 ) }
    dend_78 { pt3dadd( -87.855, -86.4785, -14.2878, 1.11 ) }
    dend_78 { pt3dadd( -88.2841, -87.405, -13.8458, 0.44 ) }
    dend_78 { pt3dadd( -88.6512, -88.252, -13.517, 0.37 ) }
    dend_78 { pt3dadd( -88.8145, -88.5563, -13.4267, 0.44 ) }
    dend_78 { pt3dadd( -88.8496, -88.61, -13.4155, 0.66 ) }
    dend_78 { pt3dadd( -89.0565, -88.8822, -13.3666, 0.29 ) }
    dend_78 { pt3dadd( -89.5471, -89.3802, -13.3218, 0.29 ) }
    dend_78 { pt3dadd( -90.4526, -90.0984, -13.2094, 0.81 ) }
    dend_78 { pt3dadd( -91.1697, -90.6224, -13.1076, 1.11 ) }
    dend_78 { pt3dadd( -91.279, -90.7037, -13.079, 1.11 ) }
    dend_78 { pt3dadd( -91.7649, -91.1094, -12.8977, 1.03 ) }
    dend_78 { pt3dadd( -91.8018, -91.146, -12.878, 1.03 ) }
    dend_78 { pt3dadd( -92.4604, -91.9738, -12.3788, 0.29 ) }
    dend_78 { pt3dadd( -92.5539, -92.138, -12.2963, 0.29 ) }
    dend_78 { pt3dadd( -92.7541, -92.5619, -12.19, 0.59 ) }
    dend_78 { pt3dadd( -92.9351, -92.9317, -12.1598, 0.74 ) }
    dend_78 { pt3dadd( -93.1313, -93.3124, -12.1845, 0.44 ) }
    dend_78 { pt3dadd( -93.3193, -93.6434, -12.2542, 0.44 ) }
    dend_78 { pt3dadd( -93.7527, -94.3733, -12.4892, 0.22 ) }
    dend_78 { pt3dadd( -94.0939, -94.9218, -12.6856, 0.59 ) }
    dend_78 { pt3dadd( -94.2831, -95.2142, -12.7946, 1.03 ) }
    dend_78 { pt3dadd( -94.4833, -95.5124, -12.9037, 0.74 ) }
    dend_78 { pt3dadd( -95.1073, -96.4947, -13.1276, 0.29 ) }
    dend_78 { pt3dadd( -95.5105, -97.2021, -13.2008, 0.29 ) }
    dend_78 { pt3dadd( -95.8546, -97.8991, -13.1895, 0.74 ) }
    dend_78 { pt3dadd( -96.0409, -98.3449, -13.1474, 0.74 ) }
    dend_78 { pt3dadd( -96.1902, -98.755, -13.0887, 0.74 ) }
    dend_78 { pt3dadd( -96.6922, -100.337, -12.77, 0.29 ) }
    dend_78 { pt3dadd( -96.7942, -100.765, -12.6217, 0.29 ) }
    dend_78 { pt3dadd( -96.8672, -101.075, -12.5121, 0.29 ) }
    dend_78 { pt3dadd( -96.9896, -101.572, -12.3368, 1.11 ) }
    dend_78 { pt3dadd( -97.1078, -101.975, -12.2128, 0.96 ) }
    dend_78 { pt3dadd( -97.263, -102.423, -12.1142, 0.81 ) }
    dend_78 { pt3dadd( -97.8043, -103.63, -12.022, 0.22 ) }
    dend_78 { pt3dadd( -98.3046, -104.615, -11.9458, 0.22 ) }
    dend_78 { pt3dadd( -98.4285, -104.864, -11.8961, 0.66 ) }
    dend_78 { pt3dadd( -98.5298, -105.106, -11.8249, 1.11 ) }
    dend_78 { pt3dadd( -98.6305, -105.404, -11.7238, 0.66 ) }
    dend_78 { pt3dadd( -98.6977, -105.705, -11.5772, 0.66 ) }
    dend_78 { pt3dadd( -98.7041, -105.754, -11.5477, 0.66 ) }
    dend_78 { pt3dadd( -98.7979, -106.918, -10.751, 0.22 ) }
    dend_78 { pt3dadd( -98.889, -107.443, -10.4386, 0.22 ) }
    dend_78 { pt3dadd( -98.9597, -107.732, -10.2877, 0.66 ) }
    dend_78 { pt3dadd( -99.2479, -108.55, -9.94768, 1.18 ) }
    dend_78 { pt3dadd( -99.2705, -108.608, -9.9277, 1.18 ) }
    dend_78 { pt3dadd( -99.4826, -109.068, -9.80171, 1.18 ) }
    dend_78 { pt3dadd( -100.152, -110.323, -9.60974, 0.37 ) }
    dend_78 { pt3dadd( -100.218, -110.439, -9.59324, 0.59 ) }
    dend_78 { pt3dadd( -100.626, -111.105, -9.5119, 0.59 ) }
    dend_78 { pt3dadd( -101.052, -111.781, -9.4587, 0.59 ) }
    dend_78 { pt3dadd( -101.123, -111.91, -9.44304, 0.66 ) }
    dend_78 { pt3dadd( -101.268, -112.219, -9.38891, 0.74 ) }
    dend_78 { pt3dadd( -101.29, -112.277, -9.36985, 0.74 ) }
    dend_78 { pt3dadd( -101.373, -112.47, -9.29987, 0.74 ) }
    dend_78 { pt3dadd( -101.754, -113.237, -9.00341, 0.22 ) }
    dend_78 { pt3dadd( -102.043, -113.717, -8.82019, 0.22 ) }
    dend_78 { pt3dadd( -102.238, -114.015, -8.70013, 0.22 ) }
    dend_78 { pt3dadd( -102.694, -114.604, -8.45533, 1.03 ) }
    dend_78 { pt3dadd( -103.014, -114.995, -8.29425, 1.4 ) }
    dend_78 { pt3dadd( -103.051, -115.037, -8.27734, 1.4 ) }
    dend_78 { pt3dadd( -103.376, -115.381, -8.14119, 1.4 ) }
    dend_78 { pt3dadd( -103.763, -115.786, -7.99951, 0.66 ) }
    dend_78 { pt3dadd( -104.466, -116.599, -7.73375, 0.29 ) }
    dend_78 { pt3dadd( -104.513, -116.656, -7.71733, 0.29 ) }
    dend_78 { pt3dadd( -104.883, -117.161, -7.55883, 0.29 ) }
    dend_78 { pt3dadd( -105.095, -117.486, -7.45252, 0.29 ) }
    dend_78 { pt3dadd( -105.188, -117.654, -7.38143, 0.29 ) }
    dend_78 { pt3dadd( -105.561, -118.34, -7.03031, 0.52 ) }
    dend_78 { pt3dadd( -105.667, -118.562, -6.91678, 1.03 ) }
    dend_78 { pt3dadd( -105.804, -118.842, -6.77619, 1.03 ) }
    dend_78 { pt3dadd( -105.862, -118.958, -6.71983, 1.03 ) }
    dend_78 { pt3dadd( -106.382, -119.939, -6.25841, 0.37 ) }
    dend_78 { pt3dadd( -106.752, -120.629, -5.972, 0.29 ) }
    dend_78 { pt3dadd( -107.064, -121.206, -5.7838, 0.29 ) }
    dend_78 { pt3dadd( -107.091, -121.252, -5.7704, 0.29 ) }
    dend_78 { pt3dadd( -107.377, -121.732, -5.64809, 0.74 ) }
    dend_78 { pt3dadd( -107.602, -122.09, -5.57037, 0.81 ) }
    dend_78 { pt3dadd( -107.936, -122.615, -5.48666, 0.81 ) }
    dend_78 { pt3dadd( -108.451, -123.405, -5.3583, 0.29 ) }
    dend_78 { pt3dadd( -109.027, -124.214, -5.21217, 0.29 ) }
    dend_78 { pt3dadd( -109.222, -124.481, -5.16373, 0.52 ) }
    dend_78 { pt3dadd( -109.461, -124.794, -5.11053, 0.66 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 84/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -1.01895, 53.5132, 8.1808, 0.74 ) }
    dend_74 { pt3dadd( -1.16947, 53.8953, 8.16613, 0.74 ) }
    dend_74 { pt3dadd( -1.23967, 54.0738, 8.16221, 0.74 ) }
    dend_74 { pt3dadd( -1.34633, 54.4127, 8.09687, 0.44 ) }
    dend_74 { pt3dadd( -1.49517, 54.9109, 7.92943, 0.29 ) }
    dend_74 { pt3dadd( -1.57138, 55.1098, 7.82332, 0.29 ) }
    dend_74 { pt3dadd( -1.67725, 55.3595, 7.66909, 0.66 ) }
    dend_74 { pt3dadd( -1.76807, 55.544, 7.53527, 0.66 ) }
    dend_74 { pt3dadd( -2.17124, 56.3867, 6.85356, 0.22 ) }
    dend_74 { pt3dadd( -2.38652, 56.873, 6.35509, 0.22 ) }
    dend_74 { pt3dadd( -2.65186, 57.6027, 5.56128, 0.37 ) }
    dend_74 { pt3dadd( -2.68204, 57.6804, 5.47504, 0.37 ) }
    dend_74 { pt3dadd( -2.88457, 58.1804, 4.92782, 0.29 ) }
    dend_74 { pt3dadd( -3.03909, 58.551, 4.5333, 0.29 ) }
    dend_74 { pt3dadd( -3.55492, 59.7757, 3.35336, 0.96 ) }
    dend_74 { pt3dadd( -3.79571, 60.4116, 2.81508, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_74 { pt3dadd( -4.05913, 61.2166, 2.24098, 0.52 ) }
    dend_74 { pt3dadd( -4.1551, 61.5145, 2.05505, 0.52 ) }
    dend_74 { pt3dadd( -4.17375, 61.5719, 2.02604, 0.52 ) }
    dend_74 { pt3dadd( -4.36018, 62.0593, 1.85983, 0.52 ) }
    dend_74 { pt3dadd( -4.40421, 62.1795, 1.85076, 0.52 ) }
    dend_74 { pt3dadd( -4.50153, 62.4695, 1.84155, 0.52 ) }
    dend_74 { pt3dadd( -4.62346, 63.0338, 1.851, 0.52 ) }
    dend_74 { pt3dadd( -4.65321, 63.1564, 1.84186, 0.52 ) }
    dend_74 { pt3dadd( -4.76814, 63.5564, 1.78481, 0.52 ) }
    dend_74 { pt3dadd( -4.80597, 63.6731, 1.75963, 0.52 ) }
    dend_74 { pt3dadd( -4.89917, 63.934, 1.68884, 0.52 ) }
    dend_74 { pt3dadd( -4.98807, 64.1583, 1.61573, 0.52 ) }
    dend_74 { pt3dadd( -5.28448, 64.8522, 1.35324, 0.66 ) }
    dend_74 { pt3dadd( -5.33088, 64.9649, 1.31162, 0.66 ) }
    dend_74 { pt3dadd( -5.40691, 65.1662, 1.25297, 0.88 ) }
    dend_74 { pt3dadd( -5.42701, 65.2187, 1.23874, 0.88 ) }
    dend_74 { pt3dadd( -5.54993, 65.5508, 1.16307, 0.88 ) }
    dend_74 { pt3dadd( -5.59567, 65.6775, 1.1417, 0.88 ) }
    dend_74 { pt3dadd( -5.71266, 66.0167, 1.10827, 0.66 ) }
    dend_74 { pt3dadd( -5.95779, 66.7633, 1.03653, 0.29 ) }
    dend_74 { pt3dadd( -6.10666, 67.2138, 0.995798, 0.44 ) }
    dend_74 { pt3dadd( -6.23761, 67.6219, 0.961777, 0.59 ) }
    dend_74 { pt3dadd( -6.35101, 67.9637, 0.927758, 0.96 ) }
    dend_74 { pt3dadd( -6.50788, 68.4238, 0.87904, 1.33 ) }
    dend_74 { pt3dadd( -6.66223, 68.8351, 0.837791, 1.33 ) }
    dend_74 { pt3dadd( -6.77983, 69.1139, 0.815529, 1.11 ) }
    dend_74 { pt3dadd( -6.93173, 69.4445, 0.799138, 1.11 ) }
    dend_74 { pt3dadd( -7.50387, 70.5066, 0.753717, 0.52 ) }
    dend_74 { pt3dadd( -7.54079, 70.5641, 0.753292, 0.52 ) }
    dend_74 { pt3dadd( -7.89081, 71.0136, 0.771802, 0.52 ) }
    dend_74 { pt3dadd( -8.10006, 71.2333, 0.795996, 0.44 ) }
    dend_74 { pt3dadd( -8.14969, 71.2779, 0.804311, 0.44 ) }
    dend_74 { pt3dadd( -8.52492, 71.576, 0.889425, 0.44 ) }
    dend_74 { pt3dadd( -8.87156, 71.8457, 0.994402, 0.81 ) }
    dend_74 { pt3dadd( -9.12057, 72.0784, 1.06673, 0.74 ) }
    dend_74 { pt3dadd( -9.44055, 72.4303, 1.15617, 0.81 ) }
    dend_74 { pt3dadd( -9.47596, 72.4763, 1.16509, 0.81 ) }
    dend_74 { pt3dadd( -9.8133, 72.969, 1.24053, 0.29 ) }
    dend_74 { pt3dadd( -10.0478, 73.3606, 1.2847, 0.29 ) }
    dend_74 { pt3dadd( -10.3756, 73.9441, 1.33333, 0.29 ) }
    dend_74 { pt3dadd( -10.4075, 74.0043, 1.33796, 0.29 ) }
    dend_74 { pt3dadd( -10.6808, 74.5466, 1.37711, 0.29 ) }
    dend_74 { pt3dadd( -10.9196, 75.0069, 1.41165, 1.11 ) }
    dend_74 { pt3dadd( -11.1284, 75.3804, 1.44258, 1.47 ) }
    dend_74 { pt3dadd( -11.2598, 75.5876, 1.46274, 2.28 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 45/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -1.01895, 53.5132, 8.1808, 0.29 ) }
    dend_73 { pt3dadd( 0.960762, 54.1966, 8.48377, 0.29 ) }
    dend_73 { pt3dadd( 1.54754, 54.3666, 9.10623, 0.29 ) }
    dend_73 { pt3dadd( 2.2021, 54.5223, 9.90143, 0.37 ) }
    dend_73 { pt3dadd( 2.43027, 54.5733, 10.2211, 0.37 ) }
    dend_73 { pt3dadd( 2.80396, 54.6582, 10.7641, 1.03 ) }
    dend_73 { pt3dadd( 3.00395, 54.7087, 11.0545, 1.03 ) }
    dend_73 { pt3dadd( 5.39245, 55.4365, 14.9687, 0.81 ) }
    dend_73 { pt3dadd( 5.69336, 55.5415, 15.5101, 0.74 ) }
    dend_73 { pt3dadd( 6.37653, 55.8303, 16.8313, 0.37 ) }
    dend_73 { pt3dadd( 6.4848, 55.893, 17.0496, 0.37 ) }
    dend_73 { pt3dadd( 6.69244, 56.056, 17.4696, 0.37 ) }
    dend_73 { pt3dadd( 7.15103, 56.5534, 18.2598, 0.81 ) }
    dend_73 { pt3dadd( 7.34008, 56.8557, 18.4456, 1.25 ) }
    dend_73 { pt3dadd( 7.56819, 57.2116, 18.6161, 1.62 ) }
    dend_73 { pt3dadd( 8.44664, 58.4444, 19.028, 0.52 ) }
    dend_73 { pt3dadd( 8.79104, 58.9197, 19.1626, 0.52 ) }
    dend_73 { pt3dadd( 9.18432, 59.4651, 19.2695, 0.66 ) }
    dend_73 { pt3dadd( 9.94835, 60.5529, 19.4932, 0.52 ) }
    dend_73 { pt3dadd( 10.643, 61.5967, 19.7239, 0.44 ) }
    dend_73 { pt3dadd( 11.3391, 62.6433, 19.9537, 0.44 ) }
    dend_73 { pt3dadd( 11.7573, 63.2936, 20.158, 0.44 ) }
    dend_73 { pt3dadd( 12.1392, 63.9572, 20.4775, 0.44 ) }
    dend_73 { pt3dadd( 12.8586, 65.4468, 21.4632, 0.44 ) }
    dend_73 { pt3dadd( 13.0338, 65.9346, 21.8774, 0.44 ) }
    dend_73 { pt3dadd( 13.0483, 65.9807, 21.9245, 0.44 ) }
    dend_73 { pt3dadd( 13.5529, 67.3021, 23.4757, 0.44 ) }
    dend_73 { pt3dadd( 13.6755, 67.5036, 23.7193, 0.66 ) }
    dend_73 { pt3dadd( 13.7522, 67.5914, 23.8351, 0.66 ) }
    dend_73 { pt3dadd( 14.0705, 67.8652, 24.1605, 1.11 ) }
    dend_73 { pt3dadd( 14.4408, 68.159, 24.5144, 1.11 ) }
    dend_73 { pt3dadd( 14.7306, 68.4045, 24.7732, 1.03 ) }
    dend_73 { pt3dadd( 15.1807, 68.8574, 25.1195, 0.66 ) }
    dend_73 { pt3dadd( 16.1835, 70.2329, 26.0554, 0.66 ) }
    dend_73 { pt3dadd( 16.3132, 70.4773, 26.2034, 0.52 ) }
    dend_73 { pt3dadd( 16.4481, 70.8815, 26.4098, 0.52 ) }
    dend_73 { pt3dadd( 16.5414, 71.3749, 26.6064, 0.37 ) }
    dend_73 { pt3dadd( 16.6236, 72.286, 26.8733, 0.37 ) }
    dend_73 { pt3dadd( 16.6352, 72.9129, 26.9727, 0.37 ) }
    dend_73 { pt3dadd( 16.6414, 73.0983, 26.9948, 0.52 ) }
    dend_73 { pt3dadd( 16.7004, 73.6534, 27.1387, 0.52 ) }
    dend_73 { pt3dadd( 16.7735, 74.0143, 27.2659, 0.74 ) }
    dend_73 { pt3dadd( 16.7968, 74.0766, 27.3009, 0.74 ) }
    dend_73 { pt3dadd( 16.9693, 74.3131, 27.5782, 0.74 ) }
    dend_73 { pt3dadd( 17.8285, 75.0566, 29.0831, 0.74 ) }
    dend_73 { pt3dadd( 17.8672, 75.0804, 29.1572, 0.74 ) }
    dend_73 { pt3dadd( 23.215, 80.9574, 36.3838, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -15.1864, 47.6888, 40.5147, 0.29 ) }
    dend_71 { pt3dadd( -15.5216, 48.2581, 41.8292, 0.29 ) }
    dend_71 { pt3dadd( -15.5904, 48.4103, 42.0845, 0.29 ) }
    dend_71 { pt3dadd( -15.6168, 48.4693, 42.1685, 0.29 ) }
    dend_71 { pt3dadd( -15.8224, 48.8785, 42.7061, 0.29 ) }
    dend_71 { pt3dadd( -15.8334, 48.9087, 42.744, 0.29 ) }
    dend_71 { pt3dadd( -16.0722, 49.5449, 43.5225, 0.29 ) }
    dend_71 { pt3dadd( -16.1721, 49.8194, 43.796, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_71 { pt3dadd( -16.2223, 49.9728, 43.9439, 0.29 ) }
    dend_71 { pt3dadd( -16.2711, 50.1808, 44.132, 0.59 ) }
    dend_71 { pt3dadd( -16.42, 51.0348, 44.84, 0.29 ) }
    dend_71 { pt3dadd( -16.4975, 51.4298, 45.1354, 0.29 ) }
    dend_71 { pt3dadd( -16.5109, 51.4857, 45.1712, 0.29 ) }
    dend_71 { pt3dadd( -16.594, 51.8988, 45.4319, 0.29 ) }
    dend_71 { pt3dadd( -16.703, 52.5464, 45.8092, 0.29 ) }
    dend_71 { pt3dadd( -16.7549, 52.9018, 45.9841, 0.29 ) }
    dend_71 { pt3dadd( -16.7988, 53.1309, 46.0569, 1.03 ) }
    dend_71 { pt3dadd( -16.8258, 53.4197, 46.1401, 1.4 ) }
    dend_71 { pt3dadd( -18.481, 57.8022, 51.0836, 1.4 ) }
    dend_71 { pt3dadd( -19.9394, 62.4167, 55.8684, 1.4 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 12/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -15.1864, 47.6888, 40.5147, 0.44 ) }
    dend_68 { pt3dadd( -15.9552, 47.0132, 40.7054, 0.44 ) }
    dend_68 { pt3dadd( -15.8193, 46.9038, 41.1647, 0.44 ) }
    dend_68 { pt3dadd( -15.5477, 46.7062, 41.9752, 0.44 ) }
    dend_68 { pt3dadd( -15.4337, 46.5899, 42.3324, 0.44 ) }
    dend_68 { pt3dadd( -15.3946, 46.5226, 42.493, 0.59 ) }
    dend_68 { pt3dadd( -15.3392, 46.3532, 42.8421, 0.81 ) }
    dend_68 { pt3dadd( -14.7857, 44.8637, 46.0705, 0.29 ) }
    dend_68 { pt3dadd( -14.7587, 44.792, 46.2318, 0.29 ) }
    dend_68 { pt3dadd( -14.6353, 44.4848, 46.8815, 0.29 ) }
    dend_68 { pt3dadd( -14.4593, 44.0696, 47.7276, 0.29 ) }
    dend_68 { pt3dadd( -14.3479, 43.769, 48.2962, 0.29 ) }
    dend_68 { pt3dadd( -14.2642, 43.3192, 48.9949, 0.29 ) }
    dend_68 { pt3dadd( -14.3285, 43.1897, 49.0984, 0.29 ) }
    dend_68 { pt3dadd( -14.5468, 42.7852, 49.4617, 0.29 ) }
    dend_68 { pt3dadd( -15.8678, 35.6894, 59.7926, 0.29 ) }
    dend_68 { pt3dadd( -16.3962, 29.099, 70.5279, 0.29 ) }
    dend_68 { pt3dadd( -16.3117, 24.4466, 82.283, 0.29 ) }
    dend_68 { pt3dadd( -16.2067, 18.902, 93.6258, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 31/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -73.3733, 24.6366, 56.4006, 0.29 ) }
    dend_64 { pt3dadd( -80.7132, 22.8065, 57.6677, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 33/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -73.3733, 24.6366, 56.4006, 0.44 ) }
    dend_63 { pt3dadd( -83.2513, 22.9542, 57.0898, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -67.4764, -63.7596, -27.7155, 1.47 ) }
    dend_57 { pt3dadd( -67.8932, -63.5402, -27.7712, 1.47 ) }
    dend_57 { pt3dadd( -68.7843, -63.1, -27.8243, 0.44 ) }
    dend_57 { pt3dadd( -69.84, -62.624, -27.8382, 0.44 ) }
    dend_57 { pt3dadd( -69.8999, -62.5987, -27.8375, 0.44 ) }
    dend_57 { pt3dadd( -71.2938, -62.0102, -27.8216, 0.29 ) }
    dend_57 { pt3dadd( -72.6696, -61.4295, -27.806, 0.29 ) }
    dend_57 { pt3dadd( -73.4619, -61.1006, -27.8129, 0.59 ) }
    dend_57 { pt3dadd( -74.3365, -60.7861, -27.8559, 0.29 ) }
    dend_57 { pt3dadd( -74.9279, -60.6155, -27.8649, 0.74 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 45/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -67.4764, -63.7596, -27.7155, 0.44 ) }
    dend_56 { pt3dadd( -68.5285, -64.839, -27.567, 0.44 ) }
    dend_56 { pt3dadd( -68.8624, -65.1056, -27.5463, 0.88 ) }
    dend_56 { pt3dadd( -69.1028, -65.2662, -27.538, 1.4 ) }
    dend_56 { pt3dadd( -69.2008, -65.3275, -27.536, 1.55 ) }
    dend_56 { pt3dadd( -69.2599, -65.3623, -27.535, 1.55 ) }
    dend_56 { pt3dadd( -70.4253, -66.0144, -27.4066, 0.44 ) }
    dend_56 { pt3dadd( -70.6253, -66.0958, -27.3991, 1.4 ) }
    dend_56 { pt3dadd( -70.9777, -66.222, -27.3837, 1.69 ) }
    dend_56 { pt3dadd( -71.3286, -66.3382, -27.3647, 1.25 ) }
    dend_56 { pt3dadd( -71.555, -66.4029, -27.3521, 0.74 ) }
    dend_56 { pt3dadd( -72.846, -66.7335, -27.2735, 0.22 ) }
    dend_56 { pt3dadd( -73.646, -66.9159, -27.2135, 0.96 ) }
    dend_56 { pt3dadd( -74.1191, -67.0028, -27.1832, 0.96 ) }
    dend_56 { pt3dadd( -74.4982, -67.0562, -27.1614, 0.52 ) }
    dend_56 { pt3dadd( -75.6957, -67.1738, -27.1009, 0.29 ) }
    dend_56 { pt3dadd( -75.7855, -67.1809, -27.0979, 0.29 ) }
    dend_56 { pt3dadd( -75.8889, -67.1857, -27.0892, 0.59 ) }
    dend_56 { pt3dadd( -76.4414, -67.2269, -26.9419, 0.74 ) }
    dend_56 { pt3dadd( -76.7057, -67.2896, -26.7569, 0.96 ) }
    dend_56 { pt3dadd( -76.7418, -67.3006, -26.7202, 0.96 ) }
    dend_56 { pt3dadd( -76.8448, -67.3379, -26.5989, 1.18 ) }
    dend_56 { pt3dadd( -77.4974, -67.5898, -25.8702, 1.18 ) }
    dend_56 { pt3dadd( -77.5268, -67.6018, -25.8381, 1.18 ) }
    dend_56 { pt3dadd( -78.8074, -68.1558, -24.4802, 0.44 ) }
    dend_56 { pt3dadd( -79.1697, -68.3092, -24.1035, 0.44 ) }
    dend_56 { pt3dadd( -79.5266, -68.4527, -23.7585, 0.44 ) }
    dend_56 { pt3dadd( -79.8528, -68.576, -23.4966, 0.81 ) }
    dend_56 { pt3dadd( -79.8954, -68.5918, -23.4701, 0.81 ) }
    dend_56 { pt3dadd( -80.1344, -68.6806, -23.3428, 1.33 ) }
    dend_56 { pt3dadd( -80.8429, -68.9367, -23.0856, 1.33 ) }
    dend_56 { pt3dadd( -81.0322, -69.0148, -23.0115, 1.33 ) }
    dend_56 { pt3dadd( -81.893, -69.3663, -22.6464, 0.22 ) }
    dend_56 { pt3dadd( -81.933, -69.3821, -22.629, 0.74 ) }
    dend_56 { pt3dadd( -82.0252, -69.4189, -22.5919, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 80/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -32.6248, 37.0425, -22.6939, 0.29 ) }
    dend_48 { pt3dadd( -32.6996, 37.5796, -23.4283, 0.29 ) }
    dend_48 { pt3dadd( -32.8461, 37.9447, -24.4356, 0.29 ) }
    dend_48 { pt3dadd( -32.9112, 38.0973, -24.8983, 0.29 ) }
    dend_48 { pt3dadd( -33.0502, 38.4172, -25.9025, 0.74 ) }
    dend_48 { pt3dadd( -33.0898, 38.5071, -26.1812, 1.25 ) }
    dend_48 { pt3dadd( -33.1167, 38.5685, -26.3668, 1.47 ) }
    dend_48 { pt3dadd( -33.7378, 39.7765, -30.2779, 0.59 ) }
    dend_48 { pt3dadd( -33.7787, 39.8463, -30.5291, 0.59 ) }
    dend_48 { pt3dadd( -33.7892, 39.8594, -30.5857, 0.59 ) }
    dend_48 { pt3dadd( -33.8385, 39.9093, -30.8133, 0.59 ) }
    dend_48 { pt3dadd( -33.8722, 39.9416, -30.9547, 0.66 ) }
    dend_48 { pt3dadd( -33.8722, 39.9416, -30.9547, 0.66 ) }
    dend_48 { pt3dadd( -33.9401, 40.0402, -31.1128, 0.66 ) }
    dend_48 { pt3dadd( -34.2924, 40.5709, -31.9815, 0.22 ) }
    dend_48 { pt3dadd( -34.4409, 40.7607, -32.4275, 0.22 ) }
    dend_48 { pt3dadd( -34.6385, 40.9941, -33.0322, 0.29 ) }
    dend_48 { pt3dadd( -34.6819, 41.041, -33.1576, 0.59 ) }
    dend_48 { pt3dadd( -34.7049, 41.0649, -33.2209, 0.74 ) }
    dend_48 { pt3dadd( -34.7791, 41.1136, -33.4207, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_48 { pt3dadd( -35.5221, 41.4, -35.3885, 0.96 ) }
    dend_48 { pt3dadd( -35.6253, 41.427, -35.638, 0.96 ) }
    dend_48 { pt3dadd( -35.7152, 41.4475, -35.8365, 0.96 ) }
    dend_48 { pt3dadd( -35.7664, 41.4579, -35.9449, 0.96 ) }
    dend_48 { pt3dadd( -37.0349, 41.6857, -38.6233, 0.37 ) }
    dend_48 { pt3dadd( -38.1564, 41.8516, -40.9804, 0.15 ) }
    dend_48 { pt3dadd( -38.3551, 41.8758, -41.3932, 0.74 ) }
    dend_48 { pt3dadd( -38.5893, 41.9001, -41.8965, 1.18 ) }
    dend_48 { pt3dadd( -38.63, 41.9043, -41.9862, 1.47 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 9/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -32.6248, 37.0425, -22.6939, 0.22 ) }
    dend_43 { pt3dadd( -33.0591, 37.5447, -22.6054, 0.22 ) }
    dend_43 { pt3dadd( -33.3417, 37.8637, -22.5492, 0.22 ) }
    dend_43 { pt3dadd( -33.6314, 38.1546, -22.5294, 0.22 ) }
    dend_43 { pt3dadd( -33.9259, 38.4109, -22.5281, 0.22 ) }
    dend_43 { pt3dadd( -34.1704, 38.6072, -22.5335, 0.29 ) }
    dend_43 { pt3dadd( -34.4196, 38.7957, -22.5407, 0.37 ) }
    dend_43 { pt3dadd( -34.4692, 38.83, -22.5465, 0.37 ) }
    dend_43 { pt3dadd( -34.9962, 39.2043, -22.6246, 0.88 ) }
    dend_43 { pt3dadd( -35.3321, 39.4457, -22.6799, 1.18 ) }
    dend_43 { pt3dadd( -35.6167, 39.6633, -22.7297, 1.18 ) }
    dend_43 { pt3dadd( -35.8171, 39.8442, -22.7819, 1.11 ) }
    dend_43 { pt3dadd( -36.5885, 40.6616, -23.0375, 0.22 ) }
    dend_43 { pt3dadd( -36.8536, 40.9998, -23.141, 0.22 ) }
    dend_43 { pt3dadd( -36.8799, 41.0421, -23.1626, 0.22 ) }
    dend_43 { pt3dadd( -36.963, 41.2167, -23.2907, 0.22 ) }
    dend_43 { pt3dadd( -37.1464, 41.7004, -23.7438, 0.66 ) }
    dend_43 { pt3dadd( -37.1831, 41.8429, -23.8977, 1.25 ) }
    dend_43 { pt3dadd( -37.2077, 42.0248, -24.1101, 1.11 ) }
    dend_43 { pt3dadd( -37.3318, 43.0183, -25.2374, 1.25 ) }
    dend_43 { pt3dadd( -37.3652, 43.3356, -25.6278, 0.66 ) }
    dend_43 { pt3dadd( -37.3675, 43.3685, -25.6693, 0.66 ) }
    dend_43 { pt3dadd( -37.3776, 43.9397, -26.3411, 0.22 ) }
    dend_43 { pt3dadd( -37.3766, 44.1707, -26.6018, 0.22 ) }
    dend_43 { pt3dadd( -37.3711, 44.3741, -26.8068, 0.22 ) }
    dend_43 { pt3dadd( -37.3237, 45.3929, -27.6825, 0.59 ) }
    dend_43 { pt3dadd( -37.3164, 45.5813, -27.8771, 1.18 ) }
    dend_43 { pt3dadd( -37.3133, 45.8928, -28.2207, 1.18 ) }
    dend_43 { pt3dadd( -37.3936, 46.0347, -28.8045, 0.52 ) }
    dend_43 { pt3dadd( -37.5017, 46.1915, -29.4781, 0.29 ) }
    dend_43 { pt3dadd( -37.5108, 46.2037, -29.5293, 0.29 ) }
    dend_43 { pt3dadd( -37.7171, 46.4741, -30.6393, 1.4 ) }
    dend_43 { pt3dadd( -37.7856, 46.5666, -31.0153, 1.69 ) }
    dend_43 { pt3dadd( -39.7546, 49.257, -41.8257, 0.22 ) }
    dend_43 { pt3dadd( -39.9121, 49.4977, -42.7306, 0.22 ) }
    dend_43 { pt3dadd( -40.0141, 49.6694, -43.3303, 0.22 ) }
    dend_43 { pt3dadd( -40.341, 50.2791, -45.2578, 1.4 ) }
    dend_43 { pt3dadd( -40.4241, 50.4526, -45.7454, 1.5 ) }
    dend_43 { pt3dadd( -40.4831, 50.6096, -46.1102, 1.5 ) }
    dend_43 { pt3dadd( -40.5562, 51.6396, -46.875, 0.29 ) }
    dend_43 { pt3dadd( -40.5547, 52.077, -47.2103, 0.29 ) }
    dend_43 { pt3dadd( -40.4981, 52.9441, -47.8296, 0.29 ) }
    dend_43 { pt3dadd( -40.4723, 53.1547, -47.9493, 0.29 ) }
    dend_43 { pt3dadd( -40.3622, 53.7975, -48.3063, 0.74 ) }
    dend_43 { pt3dadd( -40.2756, 54.1077, -48.4724, 1.11 ) }
    dend_43 { pt3dadd( -40.008, 54.776, -48.8005, 1.4 ) }
    dend_43 { pt3dadd( -39.9214, 54.9416, -48.8705, 1.69 ) }
    dend_43 { pt3dadd( -39.6297, 55.4267, -49.0345, 0.74 ) }
    dend_43 { pt3dadd( -39.332, 55.9322, -49.2057, 0.15 ) }
    dend_43 { pt3dadd( -39.2378, 56.1263, -49.282, 0.15 ) }
    dend_43 { pt3dadd( -39.2197, 56.1773, -49.3079, 0.15 ) }
    dend_43 { pt3dadd( -39.1572, 56.5351, -49.5267, 0.44 ) }
    dend_43 { pt3dadd( -39.1371, 56.8947, -49.7735, 0.37 ) }
    dend_43 { pt3dadd( -39.1463, 57.1315, -49.92, 0.37 ) }
    dend_43 { pt3dadd( -39.2196, 57.8536, -50.3213, 0.29 ) }
    dend_43 { pt3dadd( -39.2415, 58.0409, -50.3857, 0.29 ) }
    dend_43 { pt3dadd( -39.3178, 58.4608, -50.4996, 1.11 ) }
    dend_43 { pt3dadd( -39.3984, 58.8069, -50.5263, 1.11 ) }
    dend_43 { pt3dadd( -39.8665, 60.3832, -50.3527, 1.11 ) }
    dend_43 { pt3dadd( -39.895, 60.4609, -50.4461, 1.11 ) }
    dend_43 { pt3dadd( -39.9165, 60.5173, -50.5547, 1.11 ) }
    dend_43 { pt3dadd( -40.1561, 61.2159, -51.7133, 0.29 ) }
    dend_43 { pt3dadd( -40.1809, 61.3026, -51.8727, 0.29 ) }
    dend_43 { pt3dadd( -40.2015, 61.3787, -52.0064, 0.29 ) }
    dend_43 { pt3dadd( -40.3354, 61.8826, -52.9061, 1.25 ) }
    dend_43 { pt3dadd( -40.3491, 61.9373, -52.9979, 1.25 ) }
    dend_43 { pt3dadd( -40.382, 62.0851, -53.2257, 1.55 ) }
    dend_43 { pt3dadd( -40.7051, 63.4382, -55.1696, 0.22 ) }
    dend_43 { pt3dadd( -40.7601, 63.6649, -55.4873, 0.22 ) }
    dend_43 { pt3dadd( -40.7672, 63.6971, -55.5288, 0.22 ) }
    dend_43 { pt3dadd( -40.8866, 64.328, -56.2477, 1.25 ) }
    dend_43 { pt3dadd( -40.9124, 64.5242, -56.448, 1.47 ) }
    dend_43 { pt3dadd( -40.9866, 65.5043, -57.2971, 0.74 ) }
    dend_43 { pt3dadd( -40.9975, 66.3497, -57.8642, 0.22 ) }
    dend_43 { pt3dadd( -40.9898, 66.8068, -58.156, 0.52 ) }
    dend_43 { pt3dadd( -40.9833, 67.1582, -58.3442, 0.52 ) }
    dend_43 { pt3dadd( -40.9713, 67.6982, -58.5628, 0.29 ) }
    dend_43 { pt3dadd( -40.9613, 68.0572, -58.6738, 0.44 ) }
    dend_43 { pt3dadd( -40.9406, 68.5831, -58.7661, 0.74 ) }
    dend_43 { pt3dadd( -40.9298, 69.1136, -58.8349, 1.18 ) }
    dend_43 { pt3dadd( -40.9202, 69.8425, -58.952, 0.22 ) }
    dend_43 { pt3dadd( -40.9073, 70.222, -59.0427, 0.22 ) }
    dend_43 { pt3dadd( -40.8622, 70.5026, -59.166, 0.22 ) }
    dend_43 { pt3dadd( -40.8554, 70.5364, -59.2083, 0.22 ) }
    dend_43 { pt3dadd( -40.752, 70.8937, -59.8221, 0.29 ) }
    dend_43 { pt3dadd( -40.7443, 70.9156, -59.8701, 0.29 ) }
    dend_43 { pt3dadd( -40.621, 71.2747, -60.7105, 0.29 ) }
    dend_43 { pt3dadd( -40.4889, 71.6201, -61.5619, 1.47 ) }
    dend_43 { pt3dadd( -40.0808, 72.5788, -63.9252, 0.52 ) }
    dend_43 { pt3dadd( -39.9355, 72.8952, -64.6897, 0.07 ) }
    dend_43 { pt3dadd( -39.7719, 73.2489, -65.6068, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -39.67, 73.4641, -66.1604, 0.96 ) }
    dend_43 { pt3dadd( -39.5035, 73.8405, -67.0811, 0.15 ) }
    dend_43 { pt3dadd( -39.4084, 74.0725, -67.6249, 0.15 ) }
    dend_43 { pt3dadd( -39.2157, 74.5079, -68.575, 1.84 ) }
    dend_43 { pt3dadd( -38.9089, 75.4495, -70.612, 0.66 ) }
    dend_43 { pt3dadd( -38.8627, 75.6501, -71.0161, 0.22 ) }
    dend_43 { pt3dadd( -38.8319, 75.8724, -71.4563, 0.22 ) }
    dend_43 { pt3dadd( -38.8361, 75.9377, -71.5722, 0.22 ) }
    dend_43 { pt3dadd( -38.8423, 75.9661, -71.6186, 0.22 ) }
    dend_43 { pt3dadd( -38.8967, 76.1558, -71.818, 0.22 ) }
    dend_43 { pt3dadd( -38.9319, 76.4857, -72.0014, 0.22 ) }
    dend_43 { pt3dadd( -38.9273, 76.6589, -72.1484, 0.22 ) }
    dend_43 { pt3dadd( -38.9229, 76.7011, -72.1912, 0.22 ) }
    dend_43 { pt3dadd( -38.9309, 76.8941, -72.4186, 0.81 ) }
    dend_43 { pt3dadd( -38.9584, 77.0287, -72.6211, 0.81 ) }
    dend_43 { pt3dadd( -39.0681, 77.7687, -73.8099, 0.29 ) }
    dend_43 { pt3dadd( -39.0721, 77.7975, -73.8563, 0.29 ) }
    dend_43 { pt3dadd( -39.0854, 77.8825, -73.9905, 0.29 ) }
    dend_43 { pt3dadd( -39.164, 78.3394, -74.7057, 1.55 ) }
    dend_43 { pt3dadd( -39.3211, 79.005, -76.016, 0.15 ) }
    dend_43 { pt3dadd( -39.3917, 79.3291, -76.6825, 0.15 ) }
    dend_43 { pt3dadd( -39.4138, 79.4505, -76.9326, 0.15 ) }
    dend_43 { pt3dadd( -39.4443, 79.854, -77.7522, 1.18 ) }
    dend_43 { pt3dadd( -39.4436, 79.898, -77.841, 1.18 ) }
    dend_43 { pt3dadd( -39.2838, 81.1826, -80.3474, 0.37 ) }
    dend_43 { pt3dadd( -39.2478, 81.4606, -80.8779, 1.4 ) }
    dend_43 { pt3dadd( -39.2184, 81.8354, -81.632, 0.07 ) }
    dend_43 { pt3dadd( -39.1974, 82.1239, -82.2081, 0.07 ) }
    dend_43 { pt3dadd( -39.1941, 82.1629, -82.2779, 0.07 ) }
    dend_43 { pt3dadd( -39.1882, 82.2942, -82.4706, 0.07 ) }
    dend_43 { pt3dadd( -39.2053, 82.5238, -82.7008, 0.07 ) }
    dend_43 { pt3dadd( -39.33, 83.3142, -83.4965, 0.07 ) }
    dend_43 { pt3dadd( -39.4053, 83.7858, -83.9406, 0.96 ) }
    dend_43 { pt3dadd( -39.4466, 84.0649, -84.1982, 1.25 ) }
    dend_43 { pt3dadd( -39.4732, 84.4189, -84.5415, 1.11 ) }
    dend_43 { pt3dadd( -39.4774, 85.3818, -85.4814, 0.29 ) }
    dend_43 { pt3dadd( -39.4783, 85.6432, -85.7873, 0.29 ) }
    dend_43 { pt3dadd( -39.4754, 85.913, -86.1169, 0.29 ) }
    dend_43 { pt3dadd( -39.4734, 86.0538, -86.3056, 0.29 ) }
    dend_43 { pt3dadd( -39.4837, 86.7279, -87.3065, 1.25 ) }
    dend_43 { pt3dadd( -39.4946, 86.8596, -87.5125, 1.4 ) }
    dend_43 { pt3dadd( -39.7441, 88.0295, -89.3878, 0.37 ) }
    dend_43 { pt3dadd( -39.7944, 88.1688, -89.6117, 0.74 ) }
    dend_43 { pt3dadd( -39.8857, 88.3302, -89.8829, 0.88 ) }
    dend_43 { pt3dadd( -39.9318, 88.3909, -89.986, 0.88 ) }
    dend_43 { pt3dadd( -40.1593, 88.6393, -90.4065, 0.22 ) }
    dend_43 { pt3dadd( -40.4577, 88.9262, -90.9073, 0.44 ) }
    dend_43 { pt3dadd( -40.5394, 88.9998, -91.019, 0.81 ) }
    dend_43 { pt3dadd( -41.1942, 89.5686, -91.8481, 0.37 ) }
    dend_43 { pt3dadd( -41.336, 89.6831, -91.9866, 0.37 ) }
    dend_43 { pt3dadd( -42.12, 90.3143, -92.5724, 0.07 ) }
    dend_43 { pt3dadd( -42.2864, 90.4495, -92.6644, 0.07 ) }
    dend_43 { pt3dadd( -42.7887, 90.8888, -92.8353, 0.74 ) }
    dend_43 { pt3dadd( -43.0507, 91.135, -92.8924, 0.96 ) }
    dend_43 { pt3dadd( -43.8151, 91.8921, -92.9228, 0.22 ) }
    dend_43 { pt3dadd( -44.1341, 92.2076, -92.9179, 0.22 ) }
    dend_43 { pt3dadd( -44.2808, 92.3493, -92.903, 0.22 ) }
    dend_43 { pt3dadd( -44.3988, 92.4663, -92.8999, 0.22 ) }
    dend_43 { pt3dadd( -44.8702, 92.9323, -93.008, 0.81 ) }
    dend_43 { pt3dadd( -44.9378, 93.0016, -93.0329, 0.81 ) }
    dend_43 { pt3dadd( -45.2117, 93.2815, -93.1835, 1.33 ) }
    dend_43 { pt3dadd( -45.6636, 93.6992, -93.497, 1.25 ) }
    dend_43 { pt3dadd( -45.7694, 93.7966, -93.5813, 1.25 ) }
    dend_43 { pt3dadd( -46.5959, 94.6283, -94.3284, 0.29 ) }
    dend_43 { pt3dadd( -46.6251, 94.6602, -94.3581, 0.29 ) }
    dend_43 { pt3dadd( -46.9299, 95.0193, -94.7271, 0.88 ) }
    dend_43 { pt3dadd( -47.4069, 95.5926, -95.3623, 0.22 ) }
    dend_43 { pt3dadd( -47.5778, 95.7996, -95.5963, 0.52 ) }
    dend_43 { pt3dadd( -47.8274, 96.0906, -95.9229, 0.52 ) }
    dend_43 { pt3dadd( -48.0711, 96.3784, -96.2283, 0.15 ) }
    dend_43 { pt3dadd( -48.5571, 96.9605, -96.8141, 0.96 ) }
    dend_43 { pt3dadd( -48.7211, 97.1624, -97.0058, 0.96 ) }
    dend_43 { pt3dadd( -48.824, 97.2864, -97.1276, 1.03 ) }
    dend_43 { pt3dadd( -49.5729, 98.2023, -98.0358, 0.29 ) }
    dend_43 { pt3dadd( -49.7435, 98.4232, -98.2958, 0.29 ) }
    dend_43 { pt3dadd( -49.8315, 98.5543, -98.4503, 0.29 ) }
    dend_43 { pt3dadd( -49.8511, 98.5864, -98.4878, 0.29 ) }
    dend_43 { pt3dadd( -50.126, 99.1007, -99.0735, 0.29 ) }
    dend_43 { pt3dadd( -50.2945, 99.4501, -99.4611, 1.55 ) }
    dend_43 { pt3dadd( -50.9949, 101.111, -101.142, 0.22 ) }
    dend_43 { pt3dadd( -51.1084, 101.369, -101.397, 0.22 ) }
    dend_43 { pt3dadd( -51.1278, 101.411, -101.435, 0.22 ) }
    dend_43 { pt3dadd( -51.309, 101.775, -101.729, 0.22 ) }
    dend_43 { pt3dadd( -51.3308, 101.815, -101.757, 0.22 ) }
    dend_43 { pt3dadd( -51.6409, 102.295, -102.082, 0.22 ) }
    dend_43 { pt3dadd( -51.9844, 102.775, -102.326, 0.88 ) }
    dend_43 { pt3dadd( -52.1462, 102.968, -102.444, 1.25 ) }
    dend_43 { pt3dadd( -52.4704, 103.318, -102.688, 1.03 ) }
    dend_43 { pt3dadd( -52.8166, 103.644, -102.944, 1.03 ) }
    dend_43 { pt3dadd( -53.8857, 104.568, -103.697, 0.44 ) }
    dend_43 { pt3dadd( -53.9601, 104.626, -103.749, 0.44 ) }
    dend_43 { pt3dadd( -54.2403, 104.847, -103.927, 0.44 ) }
    dend_43 { pt3dadd( -54.277, 104.877, -103.95, 0.44 ) }
    dend_43 { pt3dadd( -54.516, 105.087, -104.086, 0.52 ) }
    dend_43 { pt3dadd( -54.6861, 105.266, -104.156, 0.52 ) }
    dend_43 { pt3dadd( -54.7254, 105.313, -104.156, 0.52 ) }
    dend_43 { pt3dadd( -54.9468, 105.59, -104.168, 0.52 ) }
    dend_43 { pt3dadd( -54.9468, 105.59, -104.168, 0.52 ) }
    dend_43 { pt3dadd( -55.0237, 105.686, -104.171, 0.52 ) }
    dend_43 { pt3dadd( -55.3954, 106.153, -104.182, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -55.601, 106.406, -104.184, 0.07 ) }
    dend_43 { pt3dadd( -55.8876, 106.668, -104.153, 0.07 ) }
    dend_43 { pt3dadd( -56.3391, 107.038, -104.084, 0.96 ) }
    dend_43 { pt3dadd( -56.5172, 107.174, -104.058, 1.18 ) }
    dend_43 { pt3dadd( -56.8558, 107.429, -104.007, 1.18 ) }
    dend_43 { pt3dadd( -57.0502, 107.578, -103.979, 1.18 ) }
    dend_43 { pt3dadd( -58.0474, 108.405, -103.865, 0.22 ) }
    dend_43 { pt3dadd( -58.3441, 108.665, -103.837, 0.29 ) }
    dend_43 { pt3dadd( -58.9499, 109.202, -103.792, 0.96 ) }
    dend_43 { pt3dadd( -59.1336, 109.365, -103.779, 1.18 ) }
    dend_43 { pt3dadd( -59.6394, 109.851, -103.754, 0.37 ) }
    dend_43 { pt3dadd( -59.9533, 110.2, -103.746, 0.22 ) }
    dend_43 { pt3dadd( -60.1373, 110.471, -103.752, 0.22 ) }
    dend_43 { pt3dadd( -60.3422, 110.808, -103.751, 0.22 ) }
    dend_43 { pt3dadd( -60.3702, 110.863, -103.749, 0.22 ) }
    dend_43 { pt3dadd( -60.6308, 111.401, -103.72, 0.22 ) }
    dend_43 { pt3dadd( -60.7826, 111.811, -103.691, 0.29 ) }
    dend_43 { pt3dadd( -60.8684, 112.094, -103.678, 0.22 ) }
    dend_43 { pt3dadd( -60.9425, 112.361, -103.671, 0.22 ) }
    dend_43 { pt3dadd( -60.9648, 112.434, -103.67, 0.22 ) }
    dend_43 { pt3dadd( -61.019, 112.55, -103.667, 0.22 ) }
    dend_43 { pt3dadd( -61.0839, 112.643, -103.663, 0.22 ) }
    dend_43 { pt3dadd( -61.2952, 112.897, -103.647, 0.81 ) }
    dend_43 { pt3dadd( -61.5086, 113.131, -103.627, 1.18 ) }
    dend_43 { pt3dadd( -61.5443, 113.17, -103.623, 1.18 ) }
    dend_43 { pt3dadd( -61.8917, 113.523, -103.583, 1.03 ) }
    dend_43 { pt3dadd( -61.9856, 113.616, -103.571, 1.03 ) }
    dend_43 { pt3dadd( -62.633, 114.273, -103.481, 0.29 ) }
    dend_43 { pt3dadd( -62.8486, 114.489, -103.447, 0.29 ) }
    dend_43 { pt3dadd( -62.8803, 114.522, -103.448, 0.29 ) }
    dend_43 { pt3dadd( -63.1827, 114.852, -103.505, 0.29 ) }
    dend_43 { pt3dadd( -63.3602, 115.056, -103.594, 0.29 ) }
    dend_43 { pt3dadd( -63.5106, 115.243, -103.711, 0.37 ) }
    dend_43 { pt3dadd( -63.5354, 115.273, -103.757, 0.37 ) }
    dend_43 { pt3dadd( -63.9325, 115.75, -104.589, 0.37 ) }
    dend_43 { pt3dadd( -64.0417, 115.883, -104.836, 1.11 ) }
    dend_43 { pt3dadd( -64.2467, 116.135, -105.352, 1.33 ) }
    dend_43 { pt3dadd( -64.2879, 116.183, -105.459, 1.33 ) }
    dend_43 { pt3dadd( -65.0672, 117.018, -107.512, 0.07 ) }
    dend_43 { pt3dadd( -65.1975, 117.15, -107.855, 0.81 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -36.7189, 29.0486, -6.38977, 1.11 ) }
    dend_35 { pt3dadd( -37.2904, 28.8933, -6.25289, 1.11 ) }
    dend_35 { pt3dadd( -38.2821, 28.7529, -6.00321, 0.37 ) }
    dend_35 { pt3dadd( -38.7312, 28.7348, -5.87342, 0.37 ) }
    dend_35 { pt3dadd( -39.5221, 28.7373, -5.63283, 0.88 ) }
    dend_35 { pt3dadd( -39.9369, 28.746, -5.51319, 1.18 ) }
    dend_35 { pt3dadd( -40.4775, 28.798, -5.39405, 1.25 ) }
    dend_35 { pt3dadd( -41.0689, 28.9197, -5.28737, 1.18 ) }
    dend_35 { pt3dadd( -41.758, 29.1363, -5.18422, 0.59 ) }
    dend_35 { pt3dadd( -42.0955, 29.2545, -5.15033, 0.52 ) }
    dend_35 { pt3dadd( -42.4654, 29.3822, -5.12979, 0.52 ) }
    dend_35 { pt3dadd( -43.7525, 29.8007, -5.07232, 0.52 ) }
    dend_35 { pt3dadd( -44.1435, 29.9219, -5.06229, 0.52 ) }
    dend_35 { pt3dadd( -44.535, 30.0472, -5.05632, 0.81 ) }
    dend_35 { pt3dadd( -45.0529, 30.2238, -5.05005, 1.11 ) }
    dend_35 { pt3dadd( -45.4962, 30.3932, -5.03029, 1.18 ) }
    dend_35 { pt3dadd( -45.9437, 30.5729, -5.02528, 0.81 ) }
    dend_35 { pt3dadd( -46.8484, 30.9173, -5.06333, 0.52 ) }
    dend_35 { pt3dadd( -47.3492, 31.1196, -5.11608, 1.03 ) }
    dend_35 { pt3dadd( -47.645, 31.2563, -5.16308, 1.18 ) }
    dend_35 { pt3dadd( -48.3469, 31.6156, -5.29659, 1.11 ) }
    dend_35 { pt3dadd( -49.3551, 32.1618, -5.49972, 0.52 ) }
    dend_35 { pt3dadd( -49.9082, 32.4583, -5.60677, 0.22 ) }
    dend_35 { pt3dadd( -50.3925, 32.6959, -5.68518, 0.59 ) }
    dend_35 { pt3dadd( -50.8402, 32.8753, -5.73197, 0.74 ) }
    dend_35 { pt3dadd( -51.5903, 33.099, -5.74962, 0.37 ) }
    dend_35 { pt3dadd( -52.0394, 33.1526, -5.72309, 0.37 ) }
    dend_35 { pt3dadd( -52.3956, 33.1639, -5.67228, 0.74 ) }
    dend_35 { pt3dadd( -52.9198, 33.1613, -5.5968, 1.18 ) }
    dend_35 { pt3dadd( -53.5048, 33.1279, -5.51645, 0.96 ) }
    dend_35 { pt3dadd( -53.9547, 33.094, -5.45467, 0.44 ) }
    dend_35 { pt3dadd( -55.2975, 33.0054, -5.274, 0.37 ) }
    dend_35 { pt3dadd( -55.7895, 32.9765, -5.21134, 0.37 ) }
    dend_35 { pt3dadd( -56.2189, 32.9635, -5.16004, 0.88 ) }
    dend_35 { pt3dadd( -56.8124, 32.9746, -5.09428, 1.55 ) }
    dend_35 { pt3dadd( -57.4485, 33.0148, -5.02692, 1.69 ) }
    dend_35 { pt3dadd( -57.6983, 33.0502, -4.99365, 1.69 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 77/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -36.7189, 29.0486, -6.38977, 0.59 ) }
    dend_32 { pt3dadd( -37.0995, 29.6975, -5.37794, 0.59 ) }
    dend_32 { pt3dadd( -37.3465, 30.0354, -4.84831, 0.74 ) }
    dend_32 { pt3dadd( -38.0245, 30.8653, -3.4118, 0.44 ) }
    dend_32 { pt3dadd( -38.5323, 31.4268, -2.43449, 0.37 ) }
    dend_32 { pt3dadd( -39.672, 32.5913, -0.352575, 0.37 ) }
    dend_32 { pt3dadd( -40.231, 33.1155, 0.611219, 0.52 ) }
    dend_32 { pt3dadd( -40.5003, 33.3197, 1.04059, 0.74 ) }
    dend_32 { pt3dadd( -41.4874, 33.9475, 2.55899, 0.74 ) }
    dend_32 { pt3dadd( -42.0229, 34.2774, 3.37855, 0.22 ) }
    dend_32 { pt3dadd( -42.4155, 34.5252, 4.03508, 0.74 ) }
    dend_32 { pt3dadd( -42.663, 34.689, 4.4366, 0.74 ) }
    dend_32 { pt3dadd( -43.0339, 34.9719, 5.08329, 0.74 ) }
    dend_32 { pt3dadd( -43.5182, 35.3729, 5.85267, 0.15 ) }
    dend_32 { pt3dadd( -44.3839, 35.9835, 6.85752, 0.96 ) }
    dend_32 { pt3dadd( -44.7958, 36.238, 7.27495, 0.96 ) }
    dend_32 { pt3dadd( -45.1285, 36.4227, 7.54042, 0.96 ) }
    dend_32 { pt3dadd( -45.6688, 36.6962, 7.91206, 0.81 ) }
    dend_32 { pt3dadd( -46.2792, 36.9659, 8.22901, 0.44 ) }
    dend_32 { pt3dadd( -47.4411, 37.3975, 8.73045, 0.22 ) }
    dend_32 { pt3dadd( -47.7149, 37.4755, 8.83618, 0.52 ) }
    dend_32 { pt3dadd( -48.0232, 37.5567, 8.96596, 0.81 ) }
    dend_32 { pt3dadd( -48.8679, 37.7828, 9.34597, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -49.8452, 38.0826, 9.7831, 0.22 ) }
    dend_32 { pt3dadd( -50.293, 38.2434, 9.97715, 0.37 ) }
    dend_32 { pt3dadd( -50.597, 38.3923, 10.1002, 0.37 ) }
    dend_32 { pt3dadd( -50.6554, 38.4213, 10.1129, 0.37 ) }
    dend_32 { pt3dadd( -51.0068, 38.5787, 10.1598, 0.44 ) }
    dend_32 { pt3dadd( -52.4071, 39.1674, 10.2481, 0.29 ) }
    dend_32 { pt3dadd( -52.8692, 39.3536, 10.2714, 1.03 ) }
    dend_32 { pt3dadd( -53.6565, 39.6613, 10.3057, 1.03 ) }
    dend_32 { pt3dadd( -55.4041, 40.3375, 10.395, 0.29 ) }
    dend_32 { pt3dadd( -56.4618, 40.7238, 10.4049, 0.29 ) }
    dend_32 { pt3dadd( -57.1173, 40.9637, 10.3922, 0.81 ) }
    dend_32 { pt3dadd( -58.0767, 41.3396, 10.3475, 0.52 ) }
    dend_32 { pt3dadd( -58.3117, 41.4288, 10.3366, 0.96 ) }
    dend_32 { pt3dadd( -58.846, 41.6192, 10.3179, 1.25 ) }
    dend_32 { pt3dadd( -59.9493, 42.0915, 10.3203, 0.81 ) }
    dend_32 { pt3dadd( -60.9517, 42.5933, 10.18, 0.29 ) }
    dend_32 { pt3dadd( -61.4772, 42.8758, 10.0656, 0.81 ) }
    dend_32 { pt3dadd( -68.3178, 46.5442, 12.8441, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 18/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -20.6206, 45.0158, -13.9298, 1.33 ) }
    dend_19 { pt3dadd( -21.4907, 46.7189, -18.2108, 1.33 ) }
    dend_19 { pt3dadd( -21.6358, 47.0084, -18.9173, 1.18 ) }
    dend_19 { pt3dadd( -21.7605, 47.2649, -19.4908, 0.96 ) }
    dend_19 { pt3dadd( -22.1668, 48.1112, -21.2999, 0.44 ) }
    dend_19 { pt3dadd( -22.1796, 48.1382, -21.3538, 0.44 ) }
    dend_19 { pt3dadd( -22.6418, 49.1264, -23.1789, 0.37 ) }
    dend_19 { pt3dadd( -22.696, 49.2418, -23.3234, 0.88 ) }
    dend_19 { pt3dadd( -22.8768, 49.623, -23.805, 0.22 ) }
    dend_19 { pt3dadd( -22.8923, 49.6561, -23.8421, 0.22 ) }
    dend_19 { pt3dadd( -23.1745, 50.3072, -24.3781, 1.11 ) }
    dend_19 { pt3dadd( -23.316, 50.6574, -24.6076, 1.47 ) }
    dend_19 { pt3dadd( -23.5992, 51.3359, -24.9324, 0.37 ) }
    dend_19 { pt3dadd( -23.6945, 51.5478, -25.0334, 0.22 ) }
    dend_19 { pt3dadd( -23.8902, 51.9655, -25.231, 0.22 ) }
    dend_19 { pt3dadd( -24.1741, 52.5582, -25.4828, 1.03 ) }
    dend_19 { pt3dadd( -24.6903, 53.633, -25.8702, 0.22 ) }
    dend_19 { pt3dadd( -24.8566, 53.9796, -25.9814, 0.29 ) }
    dend_19 { pt3dadd( -25.0633, 54.4474, -26.1268, 0.29 ) }
    dend_19 { pt3dadd( -25.2688, 54.9408, -26.2828, 0.81 ) }
    dend_19 { pt3dadd( -25.4968, 55.5294, -26.465, 1.55 ) }
    dend_19 { pt3dadd( -25.6843, 56.0479, -26.6124, 1.55 ) }
    dend_19 { pt3dadd( -25.7232, 56.1702, -26.6478, 1.55 ) }
    dend_19 { pt3dadd( -26.0429, 57.4534, -27.0433, 0.22 ) }
    dend_19 { pt3dadd( -26.098, 57.7395, -27.1367, 0.22 ) }
    dend_19 { pt3dadd( -26.1079, 57.8046, -27.1576, 0.22 ) }
    dend_19 { pt3dadd( -26.1523, 58.1842, -27.2849, 0.44 ) }
    dend_19 { pt3dadd( -26.1831, 58.4902, -27.382, 0.59 ) }
    dend_19 { pt3dadd( -26.2268, 59.0399, -27.518, 0.22 ) }
    dend_19 { pt3dadd( -26.2295, 59.0999, -27.5248, 0.22 ) }
    dend_19 { pt3dadd( -26.2442, 59.598, -27.6052, 0.22 ) }
    dend_19 { pt3dadd( -26.2486, 59.6462, -27.6227, 0.22 ) }
    dend_19 { pt3dadd( -26.2788, 59.8641, -27.7288, 0.22 ) }
    dend_19 { pt3dadd( -26.3287, 60.3134, -27.9791, 1.25 ) }
    dend_19 { pt3dadd( -26.3518, 60.5353, -28.1112, 1.25 ) }
    dend_19 { pt3dadd( -26.3958, 60.9658, -28.3649, 1.25 ) }
    dend_19 { pt3dadd( -26.5106, 62.3364, -29.1245, 0.44 ) }
    dend_19 { pt3dadd( -26.5524, 62.788, -29.3807, 0.29 ) }
    dend_19 { pt3dadd( -26.6035, 63.2641, -29.645, 0.29 ) }
    dend_19 { pt3dadd( -26.6357, 63.4366, -29.749, 0.29 ) }
    dend_19 { pt3dadd( -26.6689, 63.6468, -29.872, 0.29 ) }
    dend_19 { pt3dadd( -26.759, 64.3817, -30.2578, 0.88 ) }
    dend_19 { pt3dadd( -26.822, 65.1665, -30.6269, 0.29 ) }
    dend_19 { pt3dadd( -26.8562, 65.6644, -30.892, 0.29 ) }
    dend_19 { pt3dadd( -26.9335, 66.6878, -31.4748, 1.25 ) }
    dend_19 { pt3dadd( -26.9944, 67.6735, -32.0399, 1.4 ) }
    dend_19 { pt3dadd( -27.0097, 68.061, -32.2628, 1.4 ) }
    dend_19 { pt3dadd( -27.0248, 68.7172, -32.6701, 0.29 ) }
    dend_19 { pt3dadd( -27.019, 69.5595, -33.1838, 1.03 ) }
    dend_19 { pt3dadd( -27.0226, 69.6775, -33.2735, 1.03 ) }
    dend_19 { pt3dadd( -27.0725, 70.3665, -33.8352, 0.29 ) }
    dend_19 { pt3dadd( -27.1041, 70.5303, -33.9879, 0.44 ) }
    dend_19 { pt3dadd( -27.2582, 71.126, -34.6953, 0.52 ) }
    dend_19 { pt3dadd( -27.274, 71.1864, -34.772, 0.66 ) }
    dend_19 { pt3dadd( -27.4598, 72.2514, -36.16, 0.22 ) }
    dend_19 { pt3dadd( -27.4774, 72.6739, -36.7146, 1.11 ) }
    dend_19 { pt3dadd( -27.4731, 72.7347, -36.7955, 1.11 ) }
    dend_19 { pt3dadd( -27.2839, 73.7741, -38.1223, 1.25 ) }
    dend_19 { pt3dadd( -27.0747, 74.3858, -38.8349, 0.52 ) }
    dend_19 { pt3dadd( -26.7937, 74.9581, -39.4725, 0.52 ) }
    dend_19 { pt3dadd( -26.5161, 75.3484, -39.9033, 0.44 ) }
    dend_19 { pt3dadd( -26.4815, 75.3908, -39.9495, 0.44 ) }
    dend_19 { pt3dadd( -25.9426, 76.0216, -40.5479, 0.96 ) }
    dend_19 { pt3dadd( -25.7301, 76.2613, -40.7295, 1.18 ) }
    dend_19 { pt3dadd( -25.5966, 76.4128, -40.8529, 1.11 ) }
    dend_19 { pt3dadd( -25.2147, 76.9356, -41.2964, 0.88 ) }
    dend_19 { pt3dadd( -24.729, 77.5525, -41.833, 0.22 ) }
    dend_19 { pt3dadd( -24.4771, 77.8644, -42.1289, 0.81 ) }
    dend_19 { pt3dadd( -24.3452, 78.0353, -42.2859, 0.88 ) }
    dend_19 { pt3dadd( -24.2715, 78.1529, -42.4114, 0.88 ) }
    dend_19 { pt3dadd( -23.9265, 78.7829, -43.1429, 0.66 ) }
    dend_19 { pt3dadd( -23.6385, 79.3416, -43.8246, 0.22 ) }
    dend_19 { pt3dadd( -23.358, 79.9501, -44.6599, 0.81 ) }
    dend_19 { pt3dadd( -23.2169, 80.2693, -45.1266, 0.81 ) }
    dend_19 { pt3dadd( -22.8586, 81.0261, -46.2492, 0.29 ) }
    dend_19 { pt3dadd( -22.8215, 81.0966, -46.3446, 0.29 ) }
    dend_19 { pt3dadd( -22.6296, 81.4115, -46.7209, 0.29 ) }
    dend_19 { pt3dadd( -22.6003, 81.4473, -46.7613, 0.29 ) }
    dend_19 { pt3dadd( -21.9696, 81.9415, -47.1981, 1.11 ) }
    dend_19 { pt3dadd( -21.6052, 82.1707, -47.3802, 1.47 ) }
    dend_19 { pt3dadd( -20.4741, 82.9159, -48.11, 0.88 ) }
    dend_19 { pt3dadd( -20.4012, 82.9797, -48.1883, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_19 { pt3dadd( -19.6372, 83.8711, -49.404, 0.29 ) }
    dend_19 { pt3dadd( -19.5495, 83.9935, -49.5826, 0.29 ) }
    dend_19 { pt3dadd( -19.5351, 84.0371, -49.6973, 0.29 ) }
    dend_19 { pt3dadd( -19.4047, 84.5723, -51.3525, 0.29 ) }
    dend_19 { pt3dadd( -19.3884, 84.6973, -51.7925, 0.29 ) }
    dend_19 { pt3dadd( -19.3829, 84.7625, -52.0222, 0.29 ) }
    dend_19 { pt3dadd( -19.385, 84.7976, -52.1408, 0.29 ) }
    dend_19 { pt3dadd( -19.4653, 85.9704, -55.9957, 1.33 ) }
    dend_19 { pt3dadd( -19.4764, 86.0903, -56.3696, 1.4 ) }
    dend_19 { pt3dadd( -19.489, 86.2062, -56.7037, 1.4 ) }
    dend_19 { pt3dadd( -19.5565, 86.5455, -57.662, 0.29 ) }
    dend_19 { pt3dadd( -19.6069, 86.7441, -58.1703, 0.29 ) }
    dend_19 { pt3dadd( -19.6132, 86.7816, -58.2487, 0.29 ) }
    dend_19 { pt3dadd( -19.6195, 87.1484, -58.7592, 0.81 ) }
    dend_19 { pt3dadd( -19.6081, 87.2932, -59.0049, 0.96 ) }
    dend_19 { pt3dadd( -19.6046, 87.3238, -59.0603, 0.96 ) }
    dend_19 { pt3dadd( -19.4452, 88.2708, -60.8976, 0.22 ) }
    dend_19 { pt3dadd( -19.3603, 88.61, -61.6439, 1.18 ) }
    dend_19 { pt3dadd( -19.3232, 88.713, -61.8862, 1.03 ) }
    dend_19 { pt3dadd( -18.9745, 89.601, -63.8865, 0.22 ) }
    dend_19 { pt3dadd( -18.9225, 89.7524, -64.2094, 0.22 ) }
    dend_19 { pt3dadd( -18.8797, 89.8942, -64.4939, 0.22 ) }
    dend_19 { pt3dadd( -18.6727, 90.6945, -65.9651, 0.22 ) }
    dend_19 { pt3dadd( -18.59, 91.0546, -66.5983, 1.33 ) }
    dend_19 { pt3dadd( -18.3959, 91.8203, -67.8612, 0.29 ) }
    dend_19 { pt3dadd( -18.1946, 92.5267, -68.9014, 1.18 ) }
    dend_19 { pt3dadd( -18.1374, 92.7815, -69.2619, 0.74 ) }
    dend_19 { pt3dadd( -18.1217, 92.8951, -69.4079, 0.74 ) }
    dend_19 { pt3dadd( -18.1771, 93.4166, -70.1049, 0.29 ) }
    dend_19 { pt3dadd( -18.2234, 93.5719, -70.3331, 0.29 ) }
    dend_19 { pt3dadd( -18.2983, 93.7737, -70.6547, 0.29 ) }
    dend_19 { pt3dadd( -18.5682, 94.406, -71.6788, 1.62 ) }
    dend_19 { pt3dadd( -18.6246, 94.5299, -71.8947, 1.62 ) }
    dend_19 { pt3dadd( -19.389, 96.0411, -74.7191, 0.29 ) }
    dend_19 { pt3dadd( -19.5006, 96.2374, -75.1147, 0.29 ) }
    dend_19 { pt3dadd( -19.6637, 96.5007, -75.6955, 0.29 ) }
    dend_19 { pt3dadd( -19.677, 96.5244, -75.7509, 0.29 ) }
    dend_19 { pt3dadd( -20.0425, 97.0713, -77.1453, 1.11 ) }
    dend_19 { pt3dadd( -20.117, 97.1494, -77.3693, 0.96 ) }
    dend_19 { pt3dadd( -20.1472, 97.1645, -77.4233, 0.96 ) }
    dend_19 { pt3dadd( -20.5806, 97.2914, -78.3837, 0.81 ) }
    dend_19 { pt3dadd( -20.7536, 97.3341, -78.7783, 0.81 ) }
    dend_19 { pt3dadd( -21.2937, 97.4757, -79.9659, 0.22 ) }
    dend_19 { pt3dadd( -21.3304, 97.4872, -80.0446, 0.74 ) }
    dend_19 { pt3dadd( -21.4123, 97.5113, -80.2304, 0.74 ) }
    dend_19 { pt3dadd( -23.1655, 98.0879, -84.2927, 1.25 ) }
    dend_19 { pt3dadd( -24.2938, 98.5044, -86.932, 0.22 ) }
    dend_19 { pt3dadd( -24.6563, 98.659, -87.8756, 1.47 ) }
    dend_19 { pt3dadd( -25.2661, 98.9924, -89.7411, 0.15 ) }
    dend_19 { pt3dadd( -26.1206, 99.5318, -92.5685, 0.59 ) }
    dend_19 { pt3dadd( -26.308, 99.6722, -93.2448, 0.22 ) }
    dend_19 { pt3dadd( -26.4561, 99.8276, -93.8813, 0.96 ) }
    dend_19 { pt3dadd( -26.9088, 100.608, -96.7775, 1.11 ) }
    dend_19 { pt3dadd( -27.1543, 101.33, -99.3286, 0.22 ) }
    dend_19 { pt3dadd( -27.1682, 101.453, -99.7022, 0.22 ) }
    dend_19 { pt3dadd( -27.1672, 101.54, -99.9155, 0.22 ) }
    dend_19 { pt3dadd( -27.157, 101.891, -100.769, 1.33 ) }
    dend_19 { pt3dadd( -27.1445, 102.242, -101.497, 1.33 ) }
    dend_19 { pt3dadd( -27.1466, 102.287, -101.553, 1.33 ) }
    dend_19 { pt3dadd( -27.1729, 103.061, -102.202, 0.29 ) }
    dend_19 { pt3dadd( -27.1833, 103.235, -102.344, 0.29 ) }
    dend_19 { pt3dadd( -27.2011, 103.419, -102.475, 0.29 ) }
    dend_19 { pt3dadd( -27.2247, 103.67, -102.673, 0.29 ) }
    dend_19 { pt3dadd( -27.2218, 103.782, -102.769, 0.29 ) }
    dend_19 { pt3dadd( -27.2086, 103.914, -102.994, 0.29 ) }
    dend_19 { pt3dadd( -27.187, 104.078, -103.356, 0.29 ) }
    dend_19 { pt3dadd( -27.1702, 104.172, -103.565, 0.29 ) }
    dend_19 { pt3dadd( -27.0356, 104.87, -105.153, 1.47 ) }
    dend_19 { pt3dadd( -27.0295, 104.907, -105.234, 1.47 ) }
    dend_19 { pt3dadd( -26.8874, 106.114, -107.817, 0.29 ) }
    dend_19 { pt3dadd( -26.884, 106.172, -107.936, 0.29 ) }
    dend_19 { pt3dadd( -26.8838, 106.493, -108.542, 0.29 ) }
    dend_19 { pt3dadd( -26.8875, 106.521, -108.596, 0.29 ) }
    dend_19 { pt3dadd( -26.9442, 106.796, -109.096, 0.29 ) }
    dend_19 { pt3dadd( -26.9634, 106.89, -109.255, 0.29 ) }
    dend_19 { pt3dadd( -26.9961, 107.407, -109.924, 0.29 ) }
    dend_19 { pt3dadd( -26.9977, 107.545, -110.107, 1.25 ) }
    dend_19 { pt3dadd( -27.007, 109.3, -112.487, 0.29 ) }
    dend_19 { pt3dadd( -27.005, 109.508, -112.757, 0.96 ) }
    dend_19 { pt3dadd( -26.9989, 109.837, -113.174, 1.4 ) }
    dend_19 { pt3dadd( -26.9685, 110.794, -114.36, 0.22 ) }
    dend_19 { pt3dadd( -26.9264, 111.576, -115.257, 0.37 ) }
    dend_19 { pt3dadd( -26.9104, 111.774, -115.459, 0.37 ) }
    dend_19 { pt3dadd( -26.7453, 112.653, -116.01, 0.37 ) }
    dend_19 { pt3dadd( -26.7312, 112.773, -116.093, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -20.6206, 45.0158, -13.9298, 0.44 ) }
    dend_14 { pt3dadd( -20.7183, 45.0831, -13.8625, 0.44 ) }
    dend_14 { pt3dadd( -20.8787, 45.2052, -13.7615, 0.44 ) }
    dend_14 { pt3dadd( -21.5234, 45.7808, -13.3919, 0.44 ) }
    dend_14 { pt3dadd( -22.0173, 46.3026, -13.1359, 0.44 ) }
    dend_14 { pt3dadd( -22.7424, 47.2361, -12.6593, 0.44 ) }
    dend_14 { pt3dadd( -23.1158, 47.8306, -12.3632, 1.03 ) }
    dend_14 { pt3dadd( -23.3006, 48.1903, -12.1944, 1.33 ) }
    dend_14 { pt3dadd( -23.5644, 48.826, -11.9166, 1.18 ) }
    dend_14 { pt3dadd( -23.741, 49.5318, -11.5217, 0.96 ) }
    dend_14 { pt3dadd( -23.8786, 50.4676, -10.915, 0.88 ) }
    dend_14 { pt3dadd( -23.9478, 51.4663, -10.2211, 0.52 ) }
    dend_14 { pt3dadd( -23.943, 51.784, -9.97419, 0.52 ) }
    dend_14 { pt3dadd( -23.9294, 51.9389, -9.84897, 1.11 ) }
    dend_14 { pt3dadd( -23.6071, 53.8998, -8.25375, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_14 { pt3dadd( -23.5115, 54.2723, -7.97935, 1.11 ) }
    dend_14 { pt3dadd( -23.4014, 54.6626, -7.74128, 1.18 ) }
    dend_14 { pt3dadd( -23.3254, 54.8886, -7.6224, 1.77 ) }
    dend_14 { pt3dadd( -23.2046, 55.2658, -7.4817, 1.4 ) }
    dend_14 { pt3dadd( -23.0099, 55.9569, -7.37399, 0.81 ) }
    dend_14 { pt3dadd( -22.7795, 56.8546, -7.4194, 0.44 ) }
    dend_14 { pt3dadd( -22.6593, 57.3269, -7.41246, 0.44 ) }
    dend_14 { pt3dadd( -22.5858, 57.5876, -7.39872, 0.44 ) }
    dend_14 { pt3dadd( -22.4476, 57.9395, -7.33808, 0.44 ) }
    dend_14 { pt3dadd( -22.3229, 58.1972, -7.27046, 0.66 ) }
    dend_14 { pt3dadd( -21.8486, 58.9473, -6.85338, 0.59 ) }
    dend_14 { pt3dadd( -21.6668, 59.214, -6.67097, 0.81 ) }
    dend_14 { pt3dadd( -21.2257, 59.8817, -6.19981, 0.44 ) }
    dend_14 { pt3dadd( -20.7267, 60.6569, -5.5035, 0.59 ) }
    dend_14 { pt3dadd( -20.5674, 60.9243, -5.25017, 0.44 ) }
    dend_14 { pt3dadd( -19.7485, 62.4297, -3.86842, 0.37 ) }
    dend_14 { pt3dadd( -19.6004, 62.7221, -3.63407, 1.25 ) }
    dend_14 { pt3dadd( -19.3687, 63.2119, -3.28871, 1.47 ) }
    dend_14 { pt3dadd( -18.5925, 65.1077, -2.18975, 0.88 ) }
    dend_14 { pt3dadd( -18.367, 65.6945, -1.88303, 0.44 ) }
    dend_14 { pt3dadd( -18.1013, 66.3658, -1.59845, 0.52 ) }
    dend_14 { pt3dadd( -17.6063, 67.5464, -1.27456, 0.96 ) }
    dend_14 { pt3dadd( -17.2772, 68.2524, -1.11854, 1.03 ) }
    dend_14 { pt3dadd( -16.937, 68.9343, -0.954643, 0.59 ) }
    dend_14 { pt3dadd( -15.8902, 71.0691, -0.491076, 0.59 ) }
    dend_14 { pt3dadd( -15.3688, 72.1194, -0.189427, 1.18 ) }
    dend_14 { pt3dadd( -14.9975, 73.0139, 0.0553921, 1.4 ) }
    dend_14 { pt3dadd( -14.8982, 73.3221, 0.140696, 1.4 ) }
    dend_14 { pt3dadd( -14.4557, 75.1401, 0.577734, 0.81 ) }
    dend_14 { pt3dadd( -14.3443, 75.93, 0.728119, 0.29 ) }
    dend_14 { pt3dadd( -14.3317, 76.4835, 0.805888, 0.29 ) }
    dend_14 { pt3dadd( -14.4529, 78.3044, 1.41292, 0.52 ) }
    dend_14 { pt3dadd( -14.5789, 79.1878, 1.84626, 1.11 ) }
    dend_14 { pt3dadd( -14.6919, 79.7659, 2.18099, 1.25 ) }
    dend_14 { pt3dadd( -14.7921, 80.148, 2.42828, 1.4 ) }
    dend_14 { pt3dadd( -15.0343, 80.9279, 3.01654, 1.03 ) }
    dend_14 { pt3dadd( -15.7599, 83.0239, 4.74742, 0.52 ) }
    dend_14 { pt3dadd( -16.0579, 83.7836, 5.43987, 0.96 ) }
    dend_14 { pt3dadd( -16.2653, 84.2366, 5.82955, 0.96 ) }
    dend_14 { pt3dadd( -16.5235, 84.6874, 6.15216, 0.59 ) }
    dend_14 { pt3dadd( -16.9759, 85.3527, 6.47865, 0.59 ) }
    dend_14 { pt3dadd( -17.3203, 85.7812, 6.56754, 1.03 ) }
    dend_14 { pt3dadd( -17.814, 86.3421, 6.52648, 1.33 ) }
    dend_14 { pt3dadd( -18.2868, 86.8738, 6.4366, 0.74 ) }
    dend_14 { pt3dadd( -19.5093, 88.2432, 6.19109, 0.59 ) }
    dend_14 { pt3dadd( -19.9276, 88.706, 6.09749, 0.59 ) }
    dend_14 { pt3dadd( -20.1282, 88.9252, 6.05291, 0.88 ) }
    dend_14 { pt3dadd( -20.631, 89.4718, 5.95877, 0.88 ) }
    dend_14 { pt3dadd( -21.0966, 89.9838, 5.8711, 0.74 ) }
    dend_14 { pt3dadd( -21.8546, 90.8147, 5.75304, 0.37 ) }
    dend_14 { pt3dadd( -22.5573, 91.5662, 5.6964, 0.37 ) }
    dend_14 { pt3dadd( -22.9648, 91.9737, 5.67465, 0.81 ) }
    dend_14 { pt3dadd( -23.55, 92.5376, 5.6611, 1.11 ) }
    dend_14 { pt3dadd( -23.8543, 92.8329, 5.6537, 1.03 ) }
    dend_14 { pt3dadd( -24.121, 93.102, 5.64264, 1.03 ) }
    dend_14 { pt3dadd( -24.5041, 93.5199, 5.60895, 0.88 ) }
    dend_14 { pt3dadd( -25.2138, 94.3749, 5.56295, 0.29 ) }
    dend_14 { pt3dadd( -25.5372, 94.8001, 5.54254, 0.44 ) }
    dend_14 { pt3dadd( -26.07, 95.562, 5.51402, 0.52 ) }
    dend_14 { pt3dadd( -26.2675, 95.8588, 5.51071, 0.74 ) }
    dend_14 { pt3dadd( -26.4516, 96.1427, 5.51118, 0.74 ) }
    dend_14 { pt3dadd( -27.0752, 97.1697, 5.56174, 0.29 ) }
    dend_14 { pt3dadd( -27.3811, 97.7244, 5.5951, 1.18 ) }
    dend_14 { pt3dadd( -27.5679, 98.1576, 5.62615, 1.18 ) }
    dend_14 { pt3dadd( -27.695, 98.512, 5.65643, 1.18 ) }
    dend_14 { pt3dadd( -27.8501, 99.0052, 5.69344, 0.96 ) }
    dend_14 { pt3dadd( -28.0047, 99.5826, 5.72013, 0.88 ) }
    dend_14 { pt3dadd( -28.2773, 100.908, 5.73146, 0.37 ) }
    dend_14 { pt3dadd( -28.5273, 102.57, 5.68375, 0.29 ) }
    dend_14 { pt3dadd( -28.5952, 103.223, 5.64548, 0.29 ) }
    dend_14 { pt3dadd( -28.62, 103.627, 5.61019, 0.44 ) }
    dend_14 { pt3dadd( -28.6218, 103.894, 5.57724, 0.66 ) }
    dend_14 { pt3dadd( -28.6171, 104.217, 5.49447, 0.52 ) }
    dend_14 { pt3dadd( -28.5296, 105.08, 5.14567, 0.52 ) }
    dend_14 { pt3dadd( -28.4608, 105.415, 4.93178, 0.66 ) }
    dend_14 { pt3dadd( -28.3993, 105.665, 4.68891, 0.88 ) }
    dend_14 { pt3dadd( -28.3197, 106.003, 4.30614, 0.88 ) }
    dend_14 { pt3dadd( -28.1304, 107.005, 3.02157, 1.03 ) }
    dend_14 { pt3dadd( -28.0753, 107.345, 2.55615, 1.25 ) }
    dend_14 { pt3dadd( -28.0314, 107.679, 2.09465, 1.4 ) }
    dend_14 { pt3dadd( -27.8845, 108.845, 0.544474, 0.44 ) }
    dend_14 { pt3dadd( -27.8174, 109.279, 0.0610548, 0.37 ) }
    dend_14 { pt3dadd( -27.6673, 110.063, -0.645126, 0.88 ) }
    dend_14 { pt3dadd( -27.5725, 110.43, -0.88012, 1.18 ) }
    dend_14 { pt3dadd( -27.4371, 110.962, -1.13115, 1.4 ) }
    dend_14 { pt3dadd( -27.3328, 111.368, -1.26843, 1.03 ) }
    dend_14 { pt3dadd( -26.8539, 113.089, -1.6366, 0.29 ) }
    dend_14 { pt3dadd( -26.678, 113.714, -1.74861, 0.29 ) }
    dend_14 { pt3dadd( -26.4396, 114.607, -1.86703, 0.37 ) }
    dend_14 { pt3dadd( -26.1558, 115.867, -2.04742, 0.37 ) }
    dend_14 { pt3dadd( -26.0493, 116.469, -2.13713, 0.88 ) }
    dend_14 { pt3dadd( -26.0116, 116.74, -2.18052, 1.25 ) }
    dend_14 { pt3dadd( -25.947, 117.436, -2.29844, 1.47 ) }
    dend_14 { pt3dadd( -25.9077, 118.018, -2.40608, 1.03 ) }
    dend_14 { pt3dadd( -25.8638, 119.134, -2.63261, 0.44 ) }
    dend_14 { pt3dadd( -25.8497, 119.699, -2.75995, 0.44 ) }
    dend_14 { pt3dadd( -25.8397, 121.117, -3.08846, 0.44 ) }
    dend_14 { pt3dadd( -25.8415, 121.44, -3.16668, 0.74 ) }
    dend_14 { pt3dadd( -25.8513, 121.904, -3.28115, 0.74 ) }
    dend_14 { pt3dadd( -25.8631, 122.36, -3.39468, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_14 { pt3dadd( -25.8994, 123.158, -3.58221, 0.81 ) }
    dend_14 { pt3dadd( -25.9215, 123.42, -3.6504, 1.4 ) }
    dend_14 { pt3dadd( -26.0363, 123.944, -3.80203, 2.06 ) }
    dend_14 { pt3dadd( -26.1522, 124.523, -3.98758, 2.06 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.462977, 35.5079, -6.49769, 1.55 ) }
    dend_8 { pt3dadd( -0.715356, 36.8531, -6.36085, 1.55 ) }
    dend_8 { pt3dadd( -0.832759, 37.5791, -6.30291, 1.11 ) }
    dend_8 { pt3dadd( -0.917073, 38.9506, -6.29863, 0.74 ) }
    dend_8 { pt3dadd( -0.897916, 39.8189, -6.35024, 0.88 ) }
    dend_8 { pt3dadd( -0.813865, 40.6917, -6.45059, 1.33 ) }
    dend_8 { pt3dadd( -0.680093, 41.2587, -6.50175, 1.25 ) }
    dend_8 { pt3dadd( -0.213054, 42.1877, -6.58409, 0.96 ) }
    dend_8 { pt3dadd( 0.828549, 43.586, -6.73584, 0.66 ) }
    dend_8 { pt3dadd( 1.37617, 44.1793, -6.88455, 1.11 ) }
    dend_8 { pt3dadd( 1.99225, 44.7622, -7.09989, 1.4 ) }
    dend_8 { pt3dadd( 3.77946, 46.3253, -7.84579, 1.11 ) }
    dend_8 { pt3dadd( 5.09601, 47.3938, -8.45957, 0.81 ) }
    dend_8 { pt3dadd( 5.71572, 47.8287, -8.74408, 0.81 ) }
    dend_8 { pt3dadd( 7.61519, 49.1003, -9.63365, 0.44 ) }
    dend_8 { pt3dadd( 8.17652, 49.4702, -9.83487, 0.88 ) }
    dend_8 { pt3dadd( 8.61952, 49.7567, -9.97009, 0.88 ) }
    dend_8 { pt3dadd( 8.94229, 49.9719, -10.0676, 0.88 ) }
    dend_8 { pt3dadd( 11.0699, 51.3482, -10.5553, 0.59 ) }
    dend_8 { pt3dadd( 11.7164, 51.7369, -10.6725, 0.88 ) }
    dend_8 { pt3dadd( 14.113, 53.194, -11.0047, 1.4 ) }
    dend_8 { pt3dadd( 14.9768, 53.7563, -11.1505, 1.33 ) }
    dend_8 { pt3dadd( 15.8768, 54.3838, -11.309, 1.33 ) }
    dend_8 { pt3dadd( 17.4794, 55.6388, -11.6901, 0.81 ) }
    dend_8 { pt3dadd( 18.2259, 56.3071, -11.9471, 0.96 ) }
    dend_8 { pt3dadd( 18.9944, 57.0409, -12.273, 1.25 ) }
    dend_8 { pt3dadd( 19.4513, 57.5374, -12.5307, 1.25 ) }
    dend_8 { pt3dadd( 20.3265, 58.5907, -12.9905, 0.88 ) }
    dend_8 { pt3dadd( 20.9912, 59.4787, -13.3022, 0.74 ) }
    dend_8 { pt3dadd( 21.3563, 60.0503, -13.4521, 0.74 ) }
    dend_8 { pt3dadd( 21.6494, 60.5554, -13.5601, 0.74 ) }
    dend_8 { pt3dadd( 22.067, 61.2824, -13.7142, 0.74 ) }
    dend_8 { pt3dadd( 22.2425, 61.6209, -13.7854, 0.96 ) }
    dend_8 { pt3dadd( 22.5536, 62.3297, -13.9267, 1.03 ) }
    dend_8 { pt3dadd( 22.7716, 62.8825, -13.9755, 1.03 ) }
    dend_8 { pt3dadd( 22.9033, 63.2684, -13.9842, 0.88 ) }
    dend_8 { pt3dadd( 23.1255, 63.9556, -13.961, 0.59 ) }
    dend_8 { pt3dadd( 23.3425, 64.5691, -13.8941, 0.29 ) }
    dend_8 { pt3dadd( 23.6303, 65.2624, -13.7889, 0.59 ) }
    dend_8 { pt3dadd( 23.8693, 65.746, -13.7076, 0.59 ) }
    dend_8 { pt3dadd( 24.2251, 66.2576, -13.5856, 0.52 ) }
    dend_8 { pt3dadd( 24.691, 66.7619, -13.4123, 0.59 ) }
    dend_8 { pt3dadd( 25.3543, 67.382, -13.1533, 0.74 ) }
    dend_8 { pt3dadd( 25.643, 67.6258, -13.0469, 0.74 ) }
    dend_8 { pt3dadd( 26.0629, 67.9657, -12.9358, 0.59 ) }
    dend_8 { pt3dadd( 27.0801, 68.986, -12.7956, 0.29 ) }
    dend_8 { pt3dadd( 27.6047, 69.7143, -12.825, 0.81 ) }
    dend_8 { pt3dadd( 27.9465, 70.4453, -12.9302, 1.18 ) }
    dend_8 { pt3dadd( 28.0331, 70.7242, -12.9887, 1.62 ) }
    dend_8 { pt3dadd( 28.3492, 72.0128, -13.2795, 1.18 ) }
    dend_8 { pt3dadd( 28.7554, 74.1106, -13.7933, 0.81 ) }
    dend_8 { pt3dadd( 28.9771, 75.6365, -14.2013, 0.74 ) }
    dend_8 { pt3dadd( 29.1072, 76.6761, -14.4781, 0.88 ) }
    dend_8 { pt3dadd( 29.2331, 77.743, -14.7348, 0.96 ) }
    dend_8 { pt3dadd( 29.3872, 79.1793, -15.0317, 0.29 ) }
    dend_8 { pt3dadd( 29.4428, 79.7654, -15.117, 0.29 ) }
    dend_8 { pt3dadd( 29.4895, 80.0596, -15.1466, 0.29 ) }
    dend_8 { pt3dadd( 29.6378, 80.6789, -15.1808, 0.52 ) }
    dend_8 { pt3dadd( 29.7647, 81.1718, -15.2277, 0.96 ) }
    dend_8 { pt3dadd( 29.8956, 81.6768, -15.3034, 1.25 ) }
    dend_8 { pt3dadd( 30.0467, 82.2929, -15.4221, 1.25 ) }
    dend_8 { pt3dadd( 30.2732, 83.1282, -15.6121, 1.25 ) }
    dend_8 { pt3dadd( 30.4892, 83.8475, -15.8101, 1.25 ) }
    dend_8 { pt3dadd( 30.6724, 84.3793, -15.9827, 1.18 ) }
    dend_8 { pt3dadd( 30.9157, 85.0178, -16.2198, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.462977, 35.5079, -6.49769, 1.84 ) }
    dend_3 { pt3dadd( 0.448531, 36.3711, -7.36559, 1.84 ) }
    dend_3 { pt3dadd( 1.7855, 37.5957, -8.52976, 0.44 ) }
    dend_3 { pt3dadd( 2.20554, 37.9897, -8.89704, 1.25 ) }
    dend_3 { pt3dadd( 2.44679, 38.2535, -9.16431, 1.25 ) }
    dend_3 { pt3dadd( 2.82117, 38.7504, -9.64337, 1.03 ) }
    dend_3 { pt3dadd( 3.41946, 39.6521, -10.4706, 0.59 ) }
    dend_3 { pt3dadd( 3.76436, 40.2432, -10.9946, 1.18 ) }
    dend_3 { pt3dadd( 4.1661, 41.1087, -11.7296, 1.18 ) }
    dend_3 { pt3dadd( 4.76885, 42.5762, -12.9205, 0.66 ) }
    dend_3 { pt3dadd( 5.0979, 43.4779, -13.6498, 0.52 ) }
    dend_3 { pt3dadd( 5.30814, 44.164, -14.2015, 1.25 ) }
    dend_3 { pt3dadd( 5.48608, 44.8875, -14.7515, 1.25 ) }
    dend_3 { pt3dadd( 5.68275, 45.7329, -15.3362, 1.18 ) }
    dend_3 { pt3dadd( 5.88189, 46.4605, -15.7588, 0.66 ) }
    dend_3 { pt3dadd( 5.92387, 46.5703, -15.8046, 0.66 ) }
    dend_3 { pt3dadd( 6.04786, 46.8778, -15.9318, 0.66 ) }
    dend_3 { pt3dadd( 6.06919, 46.9507, -15.9534, 0.66 ) }
    dend_3 { pt3dadd( 6.1803, 47.5275, -16.0485, 0.66 ) }
    dend_3 { pt3dadd( 6.2346, 47.8697, -16.0751, 0.66 ) }
    dend_3 { pt3dadd( 6.26048, 48.3587, -16.1594, 0.66 ) }
    dend_3 { pt3dadd( 6.26322, 48.5675, -16.1975, 0.66 ) }
    dend_3 { pt3dadd( 6.24281, 48.8344, -16.2463, 0.66 ) }
    dend_3 { pt3dadd( 6.23276, 48.8997, -16.2573, 0.66 ) }
    dend_3 { pt3dadd( 6.11086, 49.4367, -16.3364, 0.66 ) }
    dend_3 { pt3dadd( 6.01055, 49.8807, -16.4077, 0.66 ) }
    dend_3 { pt3dadd( 5.92571, 50.225, -16.4914, 0.59 ) }
    dend_3 { pt3dadd( 5.84103, 50.5895, -16.6037, 0.22 ) }
    dend_3 { pt3dadd( 5.72701, 51.1702, -16.8016, 0.22 ) }
    dend_3 { pt3dadd( 5.68725, 51.4425, -16.8973, 0.22 ) }
    dend_3 { pt3dadd( 5.65787, 51.7321, -17.0014, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_3 { pt3dadd( 5.64134, 52.4357, -17.2567, 0.22 ) }
    dend_3 { pt3dadd( 5.65051, 52.7168, -17.3629, 0.22 ) }
    dend_3 { pt3dadd( 5.6847, 53.0375, -17.4833, 0.59 ) }
    dend_3 { pt3dadd( 5.75603, 53.5569, -17.668, 1.11 ) }
    dend_3 { pt3dadd( 5.76525, 53.6207, -17.6861, 1.11 ) }
    dend_3 { pt3dadd( 5.79178, 53.8127, -17.7222, 1.25 ) }
    dend_3 { pt3dadd( 5.8307, 54.0808, -17.7456, 1.25 ) }
    dend_3 { pt3dadd( 5.86448, 54.3598, -17.7592, 0.88 ) }
    dend_3 { pt3dadd( 5.89026, 54.6983, -17.7672, 0.81 ) }
    dend_3 { pt3dadd( 5.90917, 55.071, -17.767, 0.96 ) }
    dend_3 { pt3dadd( 5.91846, 55.2831, -17.7667, 0.96 ) }
    dend_3 { pt3dadd( 5.92334, 55.5611, -17.7609, 0.59 ) }
    dend_3 { pt3dadd( 5.91214, 56.0224, -17.739, 0.81 ) }
    dend_3 { pt3dadd( 5.83428, 57.0015, -17.671, 0.29 ) }
    dend_3 { pt3dadd( 5.78984, 57.3488, -17.6421, 0.29 ) }
    dend_3 { pt3dadd( 5.7369, 57.6643, -17.6119, 0.44 ) }
    dend_3 { pt3dadd( 5.69599, 57.9149, -17.5934, 0.44 ) }
    dend_3 { pt3dadd( 5.63589, 58.4585, -17.5271, 0.44 ) }
    dend_3 { pt3dadd( 5.60133, 58.9645, -17.4486, 0.29 ) }
    dend_3 { pt3dadd( 5.59474, 59.3745, -17.3696, 0.29 ) }
    dend_3 { pt3dadd( 5.59498, 59.6563, -17.3106, 0.59 ) }
    dend_3 { pt3dadd( 5.61097, 60.2446, -17.1892, 0.96 ) }
    dend_3 { pt3dadd( 5.65238, 61.253, -17.0179, 1.11 ) }
    dend_3 { pt3dadd( 5.68575, 62.0336, -16.9163, 0.81 ) }
    dend_3 { pt3dadd( 5.74612, 62.6551, -16.8583, 0.74 ) }
    dend_3 { pt3dadd( 5.78382, 62.9079, -16.8292, 0.52 ) }
    dend_3 { pt3dadd( 5.86848, 63.4108, -16.7641, 0.52 ) }
    dend_3 { pt3dadd( 5.98135, 64.0613, -16.6798, 0.81 ) }
    dend_3 { pt3dadd( 6.14574, 64.8624, -16.6113, 0.95 ) }
    dend_3 { pt3dadd( 6.45501, 66.018, -16.5179, 1.55 ) }
    dend_3 { pt3dadd( 6.71639, 66.8658, -16.4609, 0.74 ) }
    dend_3 { pt3dadd( 6.85552, 67.2941, -16.438, 0.66 ) }
    dend_3 { pt3dadd( 7.03006, 67.8319, -16.4148, 0.29 ) }
    dend_3 { pt3dadd( 7.19138, 68.3203, -16.3993, 0.29 ) }
    dend_3 { pt3dadd( 7.34548, 68.8914, -16.4109, 0.29 ) }
    dend_3 { pt3dadd( 7.41504, 69.3532, -16.4529, 0.37 ) }
    dend_3 { pt3dadd( 7.45323, 69.7032, -16.5115, 0.37 ) }
    dend_3 { pt3dadd( 7.5183, 70.1858, -16.5502, 0.44 ) }
    dend_3 { pt3dadd( 7.5183, 70.1858, -16.5502, 0.52 ) }
    dend_3 { pt3dadd( 7.61135, 70.8142, -16.5261, 0.81 ) }
    dend_3 { pt3dadd( 7.6762, 71.2156, -16.5, 1.11 ) }
    dend_3 { pt3dadd( 7.75715, 71.6381, -16.4695, 1.25 ) }
    dend_3 { pt3dadd( 8.07819, 73.085, -16.3426, 0.29 ) }
    dend_3 { pt3dadd( 8.16525, 73.4528, -16.3087, 0.29 ) }
    dend_3 { pt3dadd( 8.27632, 73.9729, -16.2577, 0.52 ) }
    dend_3 { pt3dadd( 8.31774, 74.1995, -16.2339, 0.81 ) }
    dend_3 { pt3dadd( 8.36345, 74.4749, -16.195, 0.81 ) }
    dend_3 { pt3dadd( 8.46831, 75.1571, -16.1001, 0.29 ) }
    dend_3 { pt3dadd( 8.54566, 75.7906, -16.0242, 0.22 ) }
    dend_3 { pt3dadd( 8.6144, 76.4571, -15.9466, 0.15 ) }
    dend_3 { pt3dadd( 8.65973, 76.9667, -15.8903, 0.22 ) }
    dend_3 { pt3dadd( 8.74549, 78.0505, -15.7964, 0.22 ) }
    dend_3 { pt3dadd( 8.78636, 78.7175, -15.7493, 0.22 ) }
    dend_3 { pt3dadd( 8.80503, 79.0565, -15.7366, 0.22 ) }
    dend_3 { pt3dadd( 8.8485, 79.7401, -15.7298, 1.03 ) }
    dend_3 { pt3dadd( 8.86069, 79.9502, -15.7477, 1.33 ) }
    dend_3 { pt3dadd( 8.87267, 80.5821, -15.8557, 1.47 ) }
    dend_3 { pt3dadd( 8.87431, 80.8907, -15.9364, 1.62 ) }
    dend_3 { pt3dadd( 8.88507, 81.3017, -16.0498, 1.55 ) }
    dend_3 { pt3dadd( 8.90559, 81.6895, -16.1584, 1.55 ) }
    dend_3 { pt3dadd( 8.97929, 82.6333, -16.4219, 0.81 ) }
    dend_3 { pt3dadd( 9.03607, 83.3742, -16.6469, 0.22 ) }
    dend_3 { pt3dadd( 9.11175, 84.3766, -16.974, 0.22 ) }
    dend_3 { pt3dadd( 9.1371, 84.737, -17.0948, 0.22 ) }
    dend_3 { pt3dadd( 9.15075, 85.0195, -17.1856, 0.59 ) }
    dend_3 { pt3dadd( 9.15075, 85.2879, -17.2583, 0.59 ) }
    dend_3 { pt3dadd( 9.12451, 85.7395, -17.3397, 0.29 ) }
    dend_3 { pt3dadd( 9.08926, 85.8786, -17.3697, 0.29 ) }
    dend_3 { pt3dadd( 8.93003, 86.2, -17.4376, 0.29 ) }
    dend_3 { pt3dadd( 8.81178, 86.4176, -17.4841, 0.22 ) }
    dend_3 { pt3dadd( 8.61609, 86.7823, -17.5615, 0.22 ) }
    dend_3 { pt3dadd( 8.53119, 86.9518, -17.5946, 0.22 ) }
    dend_3 { pt3dadd( 8.20546, 87.7137, -17.733, 0.88 ) }
    dend_3 { pt3dadd( 8.07572, 88.1462, -17.849, 1.33 ) }
    dend_3 { pt3dadd( 7.98896, 88.6088, -18.0061, 1.55 ) }
    dend_3 { pt3dadd( 7.98513, 88.8602, -18.1109, 1.77 ) }
    dend_3 { pt3dadd( 8.02225, 89.1298, -18.2313, 1.47 ) }
    dend_3 { pt3dadd( 8.0802, 89.4098, -18.3491, 1.18 ) }
    dend_3 { pt3dadd( 8.34585, 90.3255, -18.7127, 0.29 ) }
    dend_3 { pt3dadd( 8.43404, 90.5793, -18.8213, 0.29 ) }
    dend_3 { pt3dadd( 8.65843, 91.2294, -19.1613, 0.29 ) }
    dend_3 { pt3dadd( 8.89832, 91.9482, -19.5811, 0.29 ) }
    dend_3 { pt3dadd( 9.04884, 92.4101, -19.8738, 0.29 ) }
    dend_3 { pt3dadd( 9.21877, 92.9267, -20.223, 0.29 ) }
    dend_3 { pt3dadd( 9.31882, 93.2285, -20.4365, 0.29 ) }
    dend_3 { pt3dadd( 9.62486, 94.0995, -21.1003, 0.88 ) }
    dend_3 { pt3dadd( 9.62486, 94.0995, -21.1003, 1.03 ) }
    dend_3 { pt3dadd( 9.79506, 94.4448, -21.4162, 1.25 ) }
    dend_3 { pt3dadd( 10.0136, 94.8279, -21.7618, 0.96 ) }
    dend_3 { pt3dadd( 10.1338, 95.046, -21.9281, 0.88 ) }
    dend_3 { pt3dadd( 10.3311, 95.4016, -22.1448, 1.03 ) }
    dend_3 { pt3dadd( 10.3618, 95.4567, -22.1752, 1.03 ) }
    dend_3 { pt3dadd( 10.5923, 95.9795, -22.4824, 0.59 ) }
    dend_3 { pt3dadd( 10.6298, 96.0919, -22.5489, 0.52 ) }
    dend_3 { pt3dadd( 10.6988, 96.3874, -22.7348, 0.52 ) }
    dend_3 { pt3dadd( 10.72, 96.5002, -22.8075, 0.52 ) }
    dend_3 { pt3dadd( 10.8835, 97.3661, -23.3695, 0.29 ) }
    dend_3 { pt3dadd( 10.9988, 97.9463, -23.7469, 0.29 ) }
    dend_3 { pt3dadd( 11.0183, 98.2801, -24.0659, 0.29 ) }
    dend_3 { pt3dadd( 10.9695, 98.6029, -24.4849, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_3 { pt3dadd( 10.891, 98.8675, -24.8723, 1.18 ) }
    dend_3 { pt3dadd( 10.7497, 99.2286, -25.4095, 1.25 ) }
    dend_3 { pt3dadd( 10.7209, 99.2847, -25.4979, 0.96 ) }
    dend_3 { pt3dadd( 9.98711, 100.488, -27.5368, 0.22 ) }
    dend_3 { pt3dadd( 9.61325, 101.038, -28.4854, 0.15 ) }
    dend_3 { pt3dadd( 9.4206, 101.308, -28.9425, 0.15 ) }
    dend_3 { pt3dadd( 9.24067, 101.557, -29.3439, 0.15 ) }
    dend_3 { pt3dadd( 9.21585, 101.593, -29.3956, 0.15 ) }
    dend_3 { pt3dadd( 9.1538, 101.783, -29.5473, 0.15 ) }
    dend_3 { pt3dadd( 9.16519, 101.994, -29.5651, 0.15 ) }
    dend_3 { pt3dadd( 9.20625, 102.327, -29.5496, 0.88 ) }
    dend_3 { pt3dadd( 9.27357, 102.889, -29.5083, 1.33 ) }
    dend_3 { pt3dadd( 9.31423, 103.167, -29.4895, 1.55 ) }
    dend_3 { pt3dadd( 9.46592, 104.038, -29.4534, 0.15 ) }
    dend_3 { pt3dadd( 9.54422, 104.532, -29.4716, 0.15 ) }
    dend_3 { pt3dadd( 9.59401, 104.875, -29.5188, 0.15 ) }
    dend_3 { pt3dadd( 9.60216, 104.94, -29.5354, 0.15 ) }
    dend_3 { pt3dadd( 9.6442, 105.327, -29.7104, 0.15 ) }
    dend_3 { pt3dadd( 9.7064, 105.702, -29.9544, 0.15 ) }
    dend_3 { pt3dadd( 9.8285, 106.265, -30.492, 0.74 ) }
    dend_3 { pt3dadd( 9.89687, 106.497, -30.7556, 1.33 ) }
    dend_3 { pt3dadd( 9.92406, 106.596, -30.8777, 2.36 ) }
    dend_3 { pt3dadd( 9.95315, 106.762, -31.0752, 2.5 ) }
    dend_3 { pt3dadd( 9.9508, 106.88, -31.2084, 2.5 ) }
    // Section: dend_125, id: dend_125, parent: dend_123 (entry count 24/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( -7.95237, -56.2557, 20.5525, 0.22 ) }
    dend_125 { pt3dadd( -7.99009, -56.4898, 20.5202, 0.22 ) }
    dend_125 { pt3dadd( -8.07108, -56.9927, 20.4508, 0.22 ) }
    dend_125 { pt3dadd( -8.14993, -57.4823, 20.3833, 0.22 ) }
    dend_125 { pt3dadd( -8.24926, -58.0991, 20.2983, 0.22 ) }
    dend_125 { pt3dadd( -8.27265, -58.2443, 20.2782, 0.22 ) }
    // Section: dend_124, id: dend_124, parent: dend_123 (entry count 30/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( -7.95237, -56.2557, 20.5525, 0.44 ) }
    dend_124 { pt3dadd( -7.41215, -56.7092, 20.8052, 0.44 ) }
    dend_124 { pt3dadd( -6.67802, -57.3031, 21.1364, 0.29 ) }
    dend_124 { pt3dadd( -6.39616, -57.5312, 21.2636, 0.29 ) }
    dend_124 { pt3dadd( -5.78292, -58.0274, 21.5402, 0.29 ) }
    dend_124 { pt3dadd( -5.28066, -58.4337, 21.7668, 0.29 ) }
    dend_124 { pt3dadd( -5.09909, -58.5806, 21.8487, 0.44 ) }
    dend_124 { pt3dadd( -5.03959, -58.6291, 21.8637, 0.44 ) }
    dend_124 { pt3dadd( 2.72218, -66.2878, 23.5716, 0.44 ) }
    dend_124 { pt3dadd( 11.2618, -72.721, 26.4589, 0.44 ) }
    dend_124 { pt3dadd( 20.982, -77.8961, 27.9786, 0.44 ) }
    dend_124 { pt3dadd( 30.3655, -83.8254, 27.909, 0.44 ) }
    dend_124 { pt3dadd( 38.8774, -90.8714, 28.4369, 0.44 ) }
    dend_124 { pt3dadd( 47.3768, -97.9523, 28.2269, 0.44 ) }
    // Section: dend_122, id: dend_122, parent: dend_120 (entry count 44/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( -33.1781, -55.0228, 34.8014, 0.29 ) }
    dend_122 { pt3dadd( -42.6424, -56.1511, 36.4945, 0.29 ) }
    // Section: dend_121, id: dend_121, parent: dend_120 (entry count 46/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( -33.1781, -55.0228, 34.8014, 0.52 ) }
    dend_121 { pt3dadd( -38.9047, -55.2199, 41.0064, 0.29 ) }
    dend_121 { pt3dadd( -44.0383, -56.301, 47.6202, 0.29 ) }
    dend_121 { pt3dadd( -49.993, -57.9003, 53.3781, 0.29 ) }
    dend_121 { pt3dadd( -55.3554, -60.3609, 59.3922, 0.29 ) }
    // Section: dend_113, id: dend_113, parent: dend_111 (entry count 51/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( 10.0321, -54.1873, 8.80969, 0.74 ) }
    dend_113 { pt3dadd( 9.95077, -54.9965, 8.83011, 0.74 ) }
    dend_113 { pt3dadd( 9.86461, -55.8534, 8.85173, 0.59 ) }
    dend_113 { pt3dadd( 9.80081, -56.488, 8.86774, 0.52 ) }
    dend_113 { pt3dadd( 9.73484, -57.1442, 8.8843, 0.66 ) }
    dend_113 { pt3dadd( 9.67833, -57.7062, 8.89847, 0.66 ) }
    dend_113 { pt3dadd( 9.62243, -58.2622, 8.9125, 0.66 ) }
    // Section: dend_112, id: dend_112, parent: dend_111 (entry count 58/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( 10.0321, -54.1873, 8.80969, 0.29 ) }
    dend_112 { pt3dadd( 10.7928, -54.4869, 8.91998, 0.29 ) }
    dend_112 { pt3dadd( 11.5383, -54.7795, 9.04802, 0.29 ) }
    dend_112 { pt3dadd( 13.0108, -55.4056, 9.34299, 0.29 ) }
    dend_112 { pt3dadd( 13.6629, -55.6949, 9.4636, 0.29 ) }
    dend_112 { pt3dadd( 14.4609, -56.0412, 9.59533, 0.96 ) }
    dend_112 { pt3dadd( 14.8865, -56.2216, 9.67201, 1.11 ) }
    dend_112 { pt3dadd( 15.2562, -56.3863, 9.74997, 1.11 ) }
    dend_112 { pt3dadd( 15.7959, -56.6255, 9.86758, 0.88 ) }
    dend_112 { pt3dadd( 16.7067, -57.028, 10.059, 0.22 ) }
    dend_112 { pt3dadd( 17.4311, -57.3306, 10.2293, 0.22 ) }
    dend_112 { pt3dadd( 18.7002, -57.8019, 10.5218, 0.22 ) }
    dend_112 { pt3dadd( 19.1645, -57.9568, 10.6477, 0.29 ) }
    dend_112 { pt3dadd( 19.377, -58.0281, 10.7133, 0.59 ) }
    dend_112 { pt3dadd( 19.6694, -58.1248, 10.8133, 0.59 ) }
    dend_112 { pt3dadd( 20.7049, -58.541, 11.2433, 0.29 ) }
    dend_112 { pt3dadd( 20.9417, -58.6577, 11.3468, 0.44 ) }
    dend_112 { pt3dadd( 20.9995, -58.6887, 11.3718, 0.44 ) }
    dend_112 { pt3dadd( 21.4964, -58.9687, 11.5955, 0.44 ) }
    dend_112 { pt3dadd( 21.9384, -59.2652, 11.7852, 0.44 ) }
    dend_112 { pt3dadd( 22.2976, -59.5842, 11.9021, 0.44 ) }
    dend_112 { pt3dadd( 22.3843, -59.7012, 11.9012, 0.44 ) }
    dend_112 { pt3dadd( 30.6208, -63.6198, 15.0155, 0.44 ) }
    dend_112 { pt3dadd( 38.3822, -67.0559, 19.6016, 0.44 ) }
    dend_112 { pt3dadd( 46.3562, -69.4985, 24.4825, 0.44 ) }
    dend_112 { pt3dadd( 53.6316, -71.5744, 30.5005, 0.44 ) }
    dend_112 { pt3dadd( 60.5332, -73.1857, 37.0818, 0.44 ) }
    dend_112 { pt3dadd( 67.7494, -74.1653, 43.4525, 0.44 ) }
    // Section: dend_103, id: dend_103, parent: dend_99 (entry count 86/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 57.0279, -43.9104, -40.9525, 0.81 ) }
    dend_103 { pt3dadd( 58.981, -43.2705, -41.2738, 0.81 ) }
    dend_103 { pt3dadd( 59.0577, -43.2447, -41.2886, 0.81 ) }
    dend_103 { pt3dadd( 60.1289, -42.8932, -41.4236, 0.81 ) }
    dend_103 { pt3dadd( 60.5255, -42.7554, -41.4208, 0.96 ) }
    dend_103 { pt3dadd( 62.0917, -42.2033, -41.3221, 0.29 ) }
    dend_103 { pt3dadd( 62.6413, -42.0125, -41.2755, 0.81 ) }
    dend_103 { pt3dadd( 63.3819, -41.755, -41.1926, 0.29 ) }
    dend_103 { pt3dadd( 64.6663, -41.3133, -41.038, 0.22 ) }
    dend_103 { pt3dadd( 66.1767, -40.7874, -40.7658, 0.74 ) }
    dend_103 { pt3dadd( 66.3001, -40.746, -40.7446, 1.18 ) }
    dend_103 { pt3dadd( 66.8607, -40.5685, -40.6738, 1.4 ) }
    dend_103 { pt3dadd( 67.2985, -40.4172, -40.6438, 1.11 ) }
    dend_103 { pt3dadd( 68.1173, -40.1264, -40.6692, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_103 { pt3dadd( 69.0861, -39.7682, -40.8751, 0.22 ) }
    dend_103 { pt3dadd( 69.6813, -39.5518, -41.0805, 0.22 ) }
    dend_103 { pt3dadd( 70.4423, -39.2874, -41.3378, 0.22 ) }
    dend_103 { pt3dadd( 70.8862, -39.1432, -41.4862, 0.22 ) }
    dend_103 { pt3dadd( 71.2216, -39.0572, -41.592, 0.81 ) }
    dend_103 { pt3dadd( 71.3071, -39.0436, -41.6205, 0.81 ) }
    dend_103 { pt3dadd( 71.965, -38.9985, -41.8857, 0.81 ) }
    dend_103 { pt3dadd( 72.7826, -39.0118, -42.2095, 0.22 ) }
    dend_103 { pt3dadd( 73.7841, -39.0784, -42.5981, 0.22 ) }
    dend_103 { pt3dadd( 74.4323, -39.1135, -42.8531, 0.22 ) }
    dend_103 { pt3dadd( 75.1503, -39.1462, -43.1326, 0.81 ) }
    dend_103 { pt3dadd( 75.227, -39.15, -43.1613, 0.81 ) }
    dend_103 { pt3dadd( 75.8429, -39.1986, -43.377, 1.33 ) }
    dend_103 { pt3dadd( 76.5141, -39.2563, -43.5952, 0.66 ) }
    dend_103 { pt3dadd( 77.4495, -39.3526, -43.8706, 0.29 ) }
    dend_103 { pt3dadd( 78.2632, -39.4251, -44.0926, 0.29 ) }
    dend_103 { pt3dadd( 79.0716, -39.4985, -44.2889, 0.29 ) }
    dend_103 { pt3dadd( 79.8223, -39.5499, -44.4738, 0.37 ) }
    dend_103 { pt3dadd( 80.8468, -39.6211, -44.7225, 0.22 ) }
    dend_103 { pt3dadd( 81.1677, -39.6506, -44.7972, 0.96 ) }
    dend_103 { pt3dadd( 81.9409, -39.7345, -44.9719, 1.18 ) }
    dend_103 { pt3dadd( 82.2109, -39.7608, -45.0343, 1.18 ) }
    dend_103 { pt3dadd( 83.9292, -39.8783, -45.4552, 0.22 ) }
    dend_103 { pt3dadd( 84.9192, -39.8805, -45.7233, 0.22 ) }
    dend_103 { pt3dadd( 85.528, -39.8511, -45.9009, 0.22 ) }
    dend_103 { pt3dadd( 86.0328, -39.7875, -46.0066, 1.25 ) }
    dend_103 { pt3dadd( 86.6996, -39.6776, -46.0985, 1.69 ) }
    dend_103 { pt3dadd( 87.5851, -39.5074, -46.1708, 1.11 ) }
    dend_103 { pt3dadd( 88.8944, -39.2517, -46.1377, 0.22 ) }
    dend_103 { pt3dadd( 89.6676, -39.114, -46.0695, 0.22 ) }
    dend_103 { pt3dadd( 91.8633, -38.8142, -45.788, 0.22 ) }
    dend_103 { pt3dadd( 92.3839, -38.762, -45.7062, 0.66 ) }
    dend_103 { pt3dadd( 93.0706, -38.7269, -45.5983, 0.96 ) }
    dend_103 { pt3dadd( 94.799, -38.7218, -45.3326, 0.22 ) }
    dend_103 { pt3dadd( 95.6965, -38.7656, -45.2204, 0.22 ) }
    dend_103 { pt3dadd( 96.4087, -38.8148, -45.1889, 0.66 ) }
    dend_103 { pt3dadd( 96.8996, -38.8373, -45.1976, 1.11 ) }
    dend_103 { pt3dadd( 98.268, -38.7895, -45.1976, 0.22 ) }
    dend_103 { pt3dadd( 98.4395, -38.7714, -45.1956, 0.22 ) }
    dend_103 { pt3dadd( 99.0016, -38.6468, -45.1797, 0.22 ) }
    dend_103 { pt3dadd( 99.5787, -38.4793, -45.1359, 0.22 ) }
    dend_103 { pt3dadd( 101.32, -37.9432, -44.9138, 0.96 ) }
    dend_103 { pt3dadd( 101.854, -37.7906, -44.8325, 1.4 ) }
    dend_103 { pt3dadd( 101.932, -37.7673, -44.8213, 1.4 ) }
    dend_103 { pt3dadd( 103.303, -37.2961, -44.5036, 0.29 ) }
    dend_103 { pt3dadd( 103.798, -37.11, -44.3633, 0.29 ) }
    dend_103 { pt3dadd( 103.941, -37.0526, -44.3218, 0.29 ) }
    dend_103 { pt3dadd( 104.798, -36.7262, -44.0881, 0.29 ) }
    dend_103 { pt3dadd( 105.567, -36.4638, -43.882, 0.29 ) }
    dend_103 { pt3dadd( 108.145, -35.7261, -43.2756, 1.18 ) }
    dend_103 { pt3dadd( 108.222, -35.7067, -43.2565, 1.18 ) }
    dend_103 { pt3dadd( 108.684, -35.6064, -43.1436, 1.18 ) }
    dend_103 { pt3dadd( 110.527, -35.3191, -42.7449, 0.22 ) }
    dend_103 { pt3dadd( 111.846, -35.2305, -42.5075, 0.22 ) }
    dend_103 { pt3dadd( 112.891, -35.2533, -42.3986, 0.22 ) }
    dend_103 { pt3dadd( 113.904, -35.3625, -42.3972, 0.81 ) }
    dend_103 { pt3dadd( 114.502, -35.4377, -42.414, 0.81 ) }
    dend_103 { pt3dadd( 115.956, -35.6635, -42.4984, 0.22 ) }
    dend_103 { pt3dadd( 117.088, -35.894, -42.6599, 0.22 ) }
    dend_103 { pt3dadd( 117.949, -36.087, -42.8315, 0.96 ) }
    dend_103 { pt3dadd( 118.734, -36.2809, -43.0471, 1.55 ) }
    dend_103 { pt3dadd( 119.363, -36.442, -43.2679, 0.96 ) }
    dend_103 { pt3dadd( 119.654, -36.512, -43.3798, 0.96 ) }
    dend_103 { pt3dadd( 120.861, -36.784, -43.8811, 0.22 ) }
    dend_103 { pt3dadd( 122.082, -37.0294, -44.393, 0.22 ) }
    dend_103 { pt3dadd( 122.8, -37.1737, -44.6841, 0.22 ) }
    dend_103 { pt3dadd( 123.474, -37.2996, -44.9527, 0.22 ) }
    dend_103 { pt3dadd( 124.01, -37.3923, -45.1543, 0.74 ) }
    dend_103 { pt3dadd( 124.727, -37.4914, -45.4083, 1.18 ) }
    dend_103 { pt3dadd( 125.35, -37.5567, -45.5977, 0.52 ) }
    dend_103 { pt3dadd( 125.492, -37.5691, -45.639, 0.52 ) }
    dend_103 { pt3dadd( 126.335, -37.6182, -45.8638, 0.22 ) }
    dend_103 { pt3dadd( 127.096, -37.6486, -46.0667, 0.22 ) }
    dend_103 { pt3dadd( 127.184, -37.6526, -46.0894, 0.22 ) }
    dend_103 { pt3dadd( 127.369, -37.6634, -46.1355, 0.96 ) }
    dend_103 { pt3dadd( 127.456, -37.6757, -46.1578, 0.96 ) }
    dend_103 { pt3dadd( 128.208, -37.8508, -46.389, 1.33 ) }
    dend_103 { pt3dadd( 128.983, -38.096, -46.6589, 0.29 ) }
    dend_103 { pt3dadd( 129.849, -38.4216, -46.9857, 0.29 ) }
    dend_103 { pt3dadd( 129.918, -38.4493, -47.0132, 0.29 ) }
    dend_103 { pt3dadd( 130.798, -38.8503, -47.3746, 0.29 ) }
    dend_103 { pt3dadd( 131.434, -39.1812, -47.6462, 0.74 ) }
    dend_103 { pt3dadd( 131.498, -39.2218, -47.6756, 0.74 ) }
    dend_103 { pt3dadd( 131.677, -39.3327, -47.7572, 0.74 ) }
    dend_103 { pt3dadd( 131.778, -39.3722, -47.7963, 0.74 ) }
    dend_103 { pt3dadd( 132.239, -39.4996, -47.9774, 0.74 ) }
    dend_103 { pt3dadd( 132.314, -39.5139, -48.0061, 0.74 ) }
    dend_103 { pt3dadd( 132.545, -39.5471, -48.0943, 0.74 ) }
    dend_103 { pt3dadd( 133.75, -39.5647, -48.5258, 0.22 ) }
    dend_103 { pt3dadd( 134.963, -39.4553, -48.9484, 0.22 ) }
    dend_103 { pt3dadd( 135.996, -39.2397, -49.2354, 0.22 ) }
    dend_103 { pt3dadd( 136.276, -39.158, -49.2993, 1.25 ) }
    dend_103 { pt3dadd( 136.671, -39.0225, -49.3734, 1.47 ) }
    dend_103 { pt3dadd( 138.363, -38.3269, -49.6341, 0.22 ) }
    dend_103 { pt3dadd( 139.056, -37.9732, -49.6294, 0.22 ) }
    dend_103 { pt3dadd( 140.306, -37.3145, -49.4868, 0.29 ) }
    dend_103 { pt3dadd( 140.877, -37.0215, -49.3916, 0.81 ) }
    dend_103 { pt3dadd( 141.371, -36.7847, -49.3018, 1.25 ) }
    dend_103 { pt3dadd( 141.818, -36.5907, -49.2143, 1.33 ) }
    dend_103 { pt3dadd( 144.073, -35.7396, -48.7718, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_103 { pt3dadd( 145.32, -35.2844, -48.5306, 0.22 ) }
    dend_103 { pt3dadd( 145.882, -35.0924, -48.4414, 0.22 ) }
    dend_103 { pt3dadd( 146.629, -34.8194, -48.2636, 0.59 ) }
    dend_103 { pt3dadd( 146.727, -34.7853, -48.2371, 0.59 ) }
    dend_103 { pt3dadd( 147.05, -34.6804, -48.1464, 0.96 ) }
    dend_103 { pt3dadd( 147.125, -34.6582, -48.1286, 0.96 ) }
    dend_103 { pt3dadd( 148.486, -34.206, -47.5542, 0.29 ) }
    dend_103 { pt3dadd( 150.255, -33.6283, -46.8168, 0.29 ) }
    dend_103 { pt3dadd( 150.893, -33.4244, -46.5748, 0.29 ) }
    dend_103 { pt3dadd( 150.987, -33.3931, -46.5433, 0.29 ) }
    dend_103 { pt3dadd( 151.546, -33.2132, -46.4087, 0.29 ) }
    dend_103 { pt3dadd( 154.169, -32.4358, -46.1067, 0.22 ) }
    dend_103 { pt3dadd( 155.748, -31.9762, -45.9527, 0.96 ) }
    dend_103 { pt3dadd( 156.357, -31.7964, -45.9137, 1.33 ) }
    dend_103 { pt3dadd( 156.819, -31.6386, -45.874, 0.81 ) }
    dend_103 { pt3dadd( 158.165, -31.1444, -45.7805, 0.22 ) }
    dend_103 { pt3dadd( 158.981, -30.8106, -45.7389, 0.22 ) }
    dend_103 { pt3dadd( 161.3, -29.8762, -45.6857, 0.66 ) }
    dend_103 { pt3dadd( 161.535, -29.7749, -45.6516, 0.96 ) }
    dend_103 { pt3dadd( 162.17, -29.4839, -45.5216, 0.29 ) }
    dend_103 { pt3dadd( 163.077, -29.0328, -45.2717, 0.22 ) }
    dend_103 { pt3dadd( 163.462, -28.7752, -45.1149, 0.81 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 22/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 57.0279, -43.9104, -40.9525, 1.25 ) }
    dend_100 { pt3dadd( 57.1466, -44.0063, -41.0674, 1.25 ) }
    dend_100 { pt3dadd( 58.2238, -44.7962, -41.938, 0.29 ) }
    dend_100 { pt3dadd( 58.7859, -45.1943, -42.341, 0.29 ) }
    dend_100 { pt3dadd( 59.8203, -45.9156, -43.0149, 0.29 ) }
    dend_100 { pt3dadd( 60.3326, -46.2712, -43.3165, 0.29 ) }
    dend_100 { pt3dadd( 61.1405, -46.8313, -43.7846, 0.29 ) }
    dend_100 { pt3dadd( 61.5705, -47.1226, -43.9967, 0.29 ) }
    dend_100 { pt3dadd( 61.86, -47.3134, -44.1022, 0.96 ) }
    dend_100 { pt3dadd( 62.1542, -47.5049, -44.1915, 1.4 ) }
    dend_100 { pt3dadd( 62.6351, -47.8205, -44.3521, 0.88 ) }
    dend_100 { pt3dadd( 63.5645, -48.4554, -44.7384, 0.22 ) }
    dend_100 { pt3dadd( 64.2593, -48.9687, -45.123, 0.22 ) }
    dend_100 { pt3dadd( 64.869, -49.4195, -45.5048, 0.22 ) }
    dend_100 { pt3dadd( 65.8165, -50.0845, -46.1606, 0.22 ) }
    dend_100 { pt3dadd( 66.7908, -50.7845, -46.8637, 0.81 ) }
    dend_100 { pt3dadd( 67.2004, -51.1035, -47.1785, 1.33 ) }
    dend_100 { pt3dadd( 68.116, -51.9297, -47.9417, 0.37 ) }
    dend_100 { pt3dadd( 68.4336, -52.2604, -48.2411, 0.37 ) }
    dend_100 { pt3dadd( 68.9793, -52.9733, -48.7904, 0.22 ) }
    dend_100 { pt3dadd( 69.4666, -53.8153, -49.3282, 0.22 ) }
    dend_100 { pt3dadd( 69.9005, -54.7036, -49.7676, 0.88 ) }
    dend_100 { pt3dadd( 70.171, -55.3998, -50.0636, 1.25 ) }
    dend_100 { pt3dadd( 70.2327, -55.599, -50.131, 1.11 ) }
    dend_100 { pt3dadd( 70.4772, -56.5448, -50.5, 0.44 ) }
    dend_100 { pt3dadd( 70.7632, -57.6378, -50.97, 0.59 ) }
    dend_100 { pt3dadd( 70.8292, -57.819, -51.068, 1.11 ) }
    dend_100 { pt3dadd( 70.9962, -58.1438, -51.2611, 1.11 ) }
    dend_100 { pt3dadd( 71.0417, -58.214, -51.3117, 1.11 ) }
    dend_100 { pt3dadd( 71.8662, -59.3553, -52.3049, 0.44 ) }
    dend_100 { pt3dadd( 72.2009, -59.7594, -52.6908, 0.22 ) }
    dend_100 { pt3dadd( 72.5397, -60.1549, -53.0392, 0.22 ) }
    dend_100 { pt3dadd( 72.8411, -60.5247, -53.332, 0.22 ) }
    dend_100 { pt3dadd( 73.4536, -61.2898, -53.876, 0.96 ) }
    dend_100 { pt3dadd( 74.0168, -62.0021, -54.3017, 1.77 ) }
    dend_100 { pt3dadd( 74.5569, -62.6964, -54.6217, 0.29 ) }
    dend_100 { pt3dadd( 74.9073, -63.1771, -54.8147, 0.29 ) }
    dend_100 { pt3dadd( 75.2673, -63.6703, -54.9858, 0.29 ) }
    dend_100 { pt3dadd( 75.5084, -63.9824, -55.0618, 0.29 ) }
    dend_100 { pt3dadd( 75.849, -64.3963, -55.0914, 0.29 ) }
    dend_100 { pt3dadd( 75.886, -64.4401, -55.0903, 0.29 ) }
    dend_100 { pt3dadd( 76.2935, -64.9225, -55.0786, 0.29 ) }
    dend_100 { pt3dadd( 76.3382, -64.9746, -55.0774, 0.29 ) }
    dend_100 { pt3dadd( 76.7963, -65.4976, -55.0417, 1.03 ) }
    dend_100 { pt3dadd( 77.0649, -65.8237, -55.0049, 1.4 ) }
    dend_100 { pt3dadd( 77.1055, -65.8765, -55.0039, 1.4 ) }
    dend_100 { pt3dadd( 77.7211, -66.7151, -55.0422, 0.29 ) }
    dend_100 { pt3dadd( 78.124, -67.2768, -55.0944, 0.29 ) }
    dend_100 { pt3dadd( 78.4749, -67.7681, -55.1553, 0.81 ) }
    dend_100 { pt3dadd( 78.8985, -68.3205, -55.2381, 0.81 ) }
    dend_100 { pt3dadd( 79.6796, -69.2917, -55.4074, 0.22 ) }
    dend_100 { pt3dadd( 80.0275, -69.7061, -55.4862, 0.22 ) }
    dend_100 { pt3dadd( 80.4429, -70.1761, -55.5886, 0.74 ) }
    dend_100 { pt3dadd( 80.8036, -70.5576, -55.6781, 1.18 ) }
    dend_100 { pt3dadd( 81.6161, -71.376, -55.8554, 0.29 ) }
    dend_100 { pt3dadd( 81.6644, -71.4209, -55.8619, 0.29 ) }
    dend_100 { pt3dadd( 82.3318, -72.0353, -55.9107, 0.29 ) }
    dend_100 { pt3dadd( 82.6428, -72.3246, -55.9409, 0.88 ) }
    dend_100 { pt3dadd( 82.8503, -72.5241, -55.9648, 1.47 ) }
    dend_100 { pt3dadd( 83.6955, -73.3703, -56.0897, 0.22 ) }
    dend_100 { pt3dadd( 84.4648, -74.1229, -56.2826, 0.22 ) }
    dend_100 { pt3dadd( 84.8898, -74.5269, -56.4744, 0.74 ) }
    dend_100 { pt3dadd( 84.9356, -74.5702, -56.5029, 0.74 ) }
    dend_100 { pt3dadd( 85.254, -74.8687, -56.7691, 1.11 ) }
    dend_100 { pt3dadd( 85.4863, -75.0879, -56.9988, 1.4 ) }
    dend_100 { pt3dadd( 86.3707, -75.9473, -57.9975, 0.29 ) }
    dend_100 { pt3dadd( 87.1642, -76.7507, -58.9532, 0.81 ) }
    dend_100 { pt3dadd( 87.4681, -77.1074, -59.3882, 1.4 ) }
    dend_100 { pt3dadd( 88.1037, -77.8769, -60.3632, 0.29 ) }
    dend_100 { pt3dadd( 88.2951, -78.1064, -60.6676, 0.29 ) }
    dend_100 { pt3dadd( 88.5906, -78.4644, -61.1446, 0.66 ) }
    dend_100 { pt3dadd( 88.6453, -78.5343, -61.2336, 0.66 ) }
    dend_100 { pt3dadd( 89.8804, -80.1012, -63.0996, 0.29 ) }
    dend_100 { pt3dadd( 90.1851, -80.5018, -63.5998, 0.29 ) }
    dend_100 { pt3dadd( 90.3613, -80.7529, -63.9222, 0.29 ) }
    dend_100 { pt3dadd( 90.3861, -80.7887, -63.9731, 0.29 ) }
    dend_100 { pt3dadd( 90.5861, -81.0532, -64.3447, 0.29 ) }
    dend_100 { pt3dadd( 90.9395, -81.47, -64.8366, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_100 { pt3dadd( 91.0425, -81.5785, -64.9198, 0.81 ) }
    dend_100 { pt3dadd( 91.5456, -82.117, -65.2789, 1.25 ) }
    dend_100 { pt3dadd( 91.5833, -82.1537, -65.3007, 1.25 ) }
    dend_100 { pt3dadd( 92.4047, -82.8324, -65.6689, 0.22 ) }
    dend_100 { pt3dadd( 92.9488, -83.2164, -65.853, 0.22 ) }
    dend_100 { pt3dadd( 93.0655, -83.2951, -65.8899, 0.22 ) }
    dend_100 { pt3dadd( 93.5265, -83.6268, -66.0284, 0.22 ) }
    dend_100 { pt3dadd( 93.8675, -83.8994, -66.1199, 1.03 ) }
    dend_100 { pt3dadd( 94.1318, -84.1241, -66.1976, 1.33 ) }
    dend_100 { pt3dadd( 94.1794, -84.1675, -66.2137, 1.33 ) }
    dend_100 { pt3dadd( 95.2725, -85.2167, -66.5874, 0.29 ) }
    dend_100 { pt3dadd( 95.7671, -85.6991, -66.7545, 0.29 ) }
    dend_100 { pt3dadd( 96.3472, -86.2732, -66.936, 0.29 ) }
    dend_100 { pt3dadd( 96.7287, -86.639, -67.0387, 0.74 ) }
    dend_100 { pt3dadd( 96.8017, -86.7065, -67.0545, 0.74 ) }
    dend_100 { pt3dadd( 97.026, -86.8902, -67.0865, 1.11 ) }
    dend_100 { pt3dadd( 97.0829, -86.9294, -67.0876, 1.11 ) }
    dend_100 { pt3dadd( 97.8623, -87.3827, -67.1153, 0.37 ) }
    dend_100 { pt3dadd( 98.3057, -87.6092, -67.1372, 0.37 ) }
    dend_100 { pt3dadd( 98.3926, -87.6606, -67.1411, 0.37 ) }
    dend_100 { pt3dadd( 98.8711, -87.9709, -67.1619, 0.37 ) }
    dend_100 { pt3dadd( 98.9264, -88.0088, -67.1643, 0.37 ) }
    dend_100 { pt3dadd( 99.2048, -88.2188, -67.1738, 0.81 ) }
    dend_100 { pt3dadd( 99.5355, -88.4972, -67.1808, 0.81 ) }
    dend_100 { pt3dadd( 100.542, -89.3988, -67.1942, 0.29 ) }
    dend_100 { pt3dadd( 101.098, -89.9748, -67.2863, 0.29 ) }
    dend_100 { pt3dadd( 101.142, -90.0264, -67.2983, 0.29 ) }
    dend_100 { pt3dadd( 101.566, -90.5532, -67.443, 0.29 ) }
    dend_100 { pt3dadd( 102.038, -91.1621, -67.6214, 1.18 ) }
    dend_100 { pt3dadd( 102.506, -91.7548, -67.8049, 1.47 ) }
    dend_100 { pt3dadd( 103.65, -93.2186, -68.3945, 0.29 ) }
    dend_100 { pt3dadd( 104.049, -93.735, -68.6263, 0.29 ) }
    dend_100 { pt3dadd( 104.423, -94.2197, -68.8118, 0.74 ) }
    dend_100 { pt3dadd( 105.115, -95.1152, -69.0866, 0.29 ) }
    dend_100 { pt3dadd( 105.688, -95.8634, -69.2576, 0.29 ) }
    dend_100 { pt3dadd( 106.449, -96.8909, -69.4287, 0.81 ) }
    dend_100 { pt3dadd( 106.69, -97.2115, -69.4539, 1.4 ) }
    dend_100 { pt3dadd( 107.695, -98.5537, -69.5782, 0.22 ) }
    dend_100 { pt3dadd( 108.314, -99.3837, -69.6584, 0.22 ) }
    dend_100 { pt3dadd( 108.314, -99.3837, -69.6584, 0.96 ) }
    dend_100 { pt3dadd( 109.334, -100.634, -69.7572, 0.29 ) }
    dend_100 { pt3dadd( 109.379, -100.684, -69.7596, 0.29 ) }
    dend_100 { pt3dadd( 110.2, -101.481, -70.053, 0.29 ) }
    dend_100 { pt3dadd( 110.519, -101.754, -70.2583, 1.18 ) }
    dend_100 { pt3dadd( 110.889, -102.042, -70.5311, 1.18 ) }
    dend_100 { pt3dadd( 111.081, -102.188, -70.6749, 1.33 ) }
    dend_100 { pt3dadd( 111.198, -102.272, -70.7651, 1.33 ) }
    dend_100 { pt3dadd( 112.775, -103.513, -72.0392, 0.29 ) }
    dend_100 { pt3dadd( 113.215, -103.916, -72.4289, 0.29 ) }
    dend_100 { pt3dadd( 113.27, -103.975, -72.4793, 0.29 ) }
    dend_100 { pt3dadd( 113.712, -104.481, -72.8406, 0.29 ) }
    dend_100 { pt3dadd( 113.752, -104.527, -72.8679, 0.29 ) }
    dend_100 { pt3dadd( 114.204, -105.028, -73.1048, 0.59 ) }
    dend_100 { pt3dadd( 114.487, -105.34, -73.1917, 0.96 ) }
    dend_100 { pt3dadd( 115.278, -106.265, -73.6169, 0.29 ) }
    dend_100 { pt3dadd( 115.792, -106.903, -74.0715, 0.29 ) }
    dend_100 { pt3dadd( 115.953, -107.114, -74.2984, 0.74 ) }
    dend_100 { pt3dadd( 116.064, -107.261, -74.483, 1.11 ) }
    dend_100 { pt3dadd( 116.222, -107.476, -74.8167, 1.47 ) }
    dend_100 { pt3dadd( 117.052, -108.683, -76.847, 0.22 ) }
    dend_100 { pt3dadd( 117.663, -109.648, -78.5001, 0.22 ) }
    dend_100 { pt3dadd( 118.319, -110.757, -80.428, 1.11 ) }
    dend_100 { pt3dadd( 118.457, -110.998, -80.8546, 1.55 ) }
    dend_100 { pt3dadd( 119.441, -112.746, -84.0118, 0.37 ) }
    dend_100 { pt3dadd( 119.778, -113.343, -85.1312, 0.37 ) }
    dend_100 { pt3dadd( 119.931, -113.602, -85.6366, 0.74 ) }
    dend_100 { pt3dadd( 119.931, -113.602, -85.6366, 1.4 ) }
    // Section: dend_98, id: dend_98, parent: dend_96 (entry count 67/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 1.25065, -79.1912, -54.9457, 0.74 ) }
    dend_98 { pt3dadd( 1.24904, -78.6207, -57.7896, 0.74 ) }
    dend_98 { pt3dadd( 1.24638, -78.6098, -57.8432, 0.74 ) }
    dend_98 { pt3dadd( 1.08005, -78.1595, -61.2209, 0.29 ) }
    dend_98 { pt3dadd( 1.04375, -78.1081, -61.7514, 0.29 ) }
    dend_98 { pt3dadd( 1.02645, -78.0972, -61.9301, 0.59 ) }
    dend_98 { pt3dadd( 0.558852, -78.0604, -65.0165, 0.96 ) }
    dend_98 { pt3dadd( 0.288627, -78.109, -66.1578, 1.55 ) }
    dend_98 { pt3dadd( -0.272884, -78.2858, -68.1392, 0.59 ) }
    dend_98 { pt3dadd( -0.450802, -78.3607, -68.6811, 0.59 ) }
    dend_98 { pt3dadd( -1.29533, -78.695, -70.9852, 1.03 ) }
    dend_98 { pt3dadd( -2.23321, -79.0348, -73.3082, 0.22 ) }
    dend_98 { pt3dadd( -2.30876, -79.0587, -73.4665, 1.03 ) }
    dend_98 { pt3dadd( -2.4933, -79.0948, -73.8268, 1.03 ) }
    dend_98 { pt3dadd( -4.27193, -79.2016, -77.0366, 0.74 ) }
    dend_98 { pt3dadd( -4.77021, -79.2047, -77.9429, 0.37 ) }
    dend_98 { pt3dadd( -4.77021, -79.2047, -77.9429, 1.03 ) }
    dend_98 { pt3dadd( -5.06095, -79.1936, -78.4546, 1.03 ) }
    dend_98 { pt3dadd( -6.49992, -79.1881, -80.9683, 0.29 ) }
    dend_98 { pt3dadd( -6.64492, -79.1953, -81.2158, 0.88 ) }
    dend_98 { pt3dadd( -6.74908, -79.2082, -81.3744, 1.33 ) }
    dend_98 { pt3dadd( -7.72415, -79.3388, -82.8545, 0.44 ) }
    dend_98 { pt3dadd( -7.75218, -79.3418, -82.8915, 0.44 ) }
    dend_98 { pt3dadd( -8.43454, -79.4052, -83.6452, 1.25 ) }
    dend_98 { pt3dadd( -8.52528, -79.4049, -83.7091, 1.25 ) }
    dend_98 { pt3dadd( -8.77343, -79.363, -83.8356, 1.62 ) }
    dend_98 { pt3dadd( -9.95368, -78.8548, -84.0031, 0.59 ) }
    dend_98 { pt3dadd( -10.4103, -78.53, -83.8797, 0.96 ) }
    dend_98 { pt3dadd( -10.5589, -78.4106, -83.8128, 1.33 ) }
    dend_98 { pt3dadd( -11.9861, -77.1566, -82.8698, 0.29 ) }
    dend_98 { pt3dadd( -12.3421, -76.8273, -82.5889, 0.66 ) }
    dend_98 { pt3dadd( -12.4511, -76.7051, -82.4703, 1.11 ) }
    dend_98 { pt3dadd( -12.5117, -76.6083, -82.3588, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_98 { pt3dadd( -12.5674, -76.4924, -82.2252, 1.11 ) }
    dend_98 { pt3dadd( -12.6638, -76.2746, -81.9798, 0.66 ) }
    dend_98 { pt3dadd( -13.0353, -76.2531, -81.9655, 0.66 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 3/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 1.25065, -79.1912, -54.9457, 1.33 ) }
    dend_97 { pt3dadd( 1.21777, -79.3651, -55.0863, 1.33 ) }
    dend_97 { pt3dadd( 0.916047, -81.4107, -56.6077, 0.81 ) }
    dend_97 { pt3dadd( 0.797588, -82.4622, -57.4107, 0.44 ) }
    dend_97 { pt3dadd( 0.756338, -82.9727, -57.7921, 0.44 ) }
    dend_97 { pt3dadd( 0.677978, -84.2369, -58.672, 0.15 ) }
    dend_97 { pt3dadd( 0.64719, -85.105, -59.2239, 0.29 ) }
    dend_97 { pt3dadd( 0.660008, -85.5638, -59.4579, 0.74 ) }
    dend_97 { pt3dadd( 0.724436, -86.6482, -59.8768, 0.52 ) }
    dend_97 { pt3dadd( 0.778629, -87.1211, -60.077, 0.37 ) }
    dend_97 { pt3dadd( 0.914433, -87.9794, -60.4421, 0.37 ) }
    dend_97 { pt3dadd( 1.08305, -88.7757, -60.7289, 0.74 ) }
    dend_97 { pt3dadd( 1.26619, -89.6993, -60.9396, 0.74 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 16/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -23.2405, -96.7635, -70.0301, 0.29 ) }
    dend_90 { pt3dadd( -23.8443, -97.641, -70.7584, 0.29 ) }
    dend_90 { pt3dadd( -23.9983, -97.8708, -70.9357, 0.29 ) }
    dend_90 { pt3dadd( -24.2099, -98.169, -71.1493, 0.29 ) }
    dend_90 { pt3dadd( -24.3291, -98.3506, -71.2995, 0.81 ) }
    dend_90 { pt3dadd( -24.4388, -98.52, -71.4322, 0.81 ) }
    dend_90 { pt3dadd( -24.7515, -99.0404, -71.8335, 0.15 ) }
    dend_90 { pt3dadd( -24.9253, -99.3605, -72.0534, 0.22 ) }
    dend_90 { pt3dadd( -25.0512, -99.6382, -72.2556, 0.96 ) }
    dend_90 { pt3dadd( -25.311, -100.316, -72.7761, 0.59 ) }
    dend_90 { pt3dadd( -25.5483, -100.98, -73.2914, 0.22 ) }
    dend_90 { pt3dadd( -25.6985, -101.409, -73.6192, 0.29 ) }
    dend_90 { pt3dadd( -25.7791, -101.629, -73.7731, 0.88 ) }
    dend_90 { pt3dadd( -25.8973, -101.943, -73.9831, 0.88 ) }
    dend_90 { pt3dadd( -26.1078, -102.499, -74.3112, 0.29 ) }
    dend_90 { pt3dadd( -26.1936, -102.694, -74.4037, 0.52 ) }
    dend_90 { pt3dadd( -26.2511, -102.827, -74.4657, 0.66 ) }
    dend_90 { pt3dadd( -26.4927, -103.319, -74.6534, 0.22 ) }
    dend_90 { pt3dadd( -26.6272, -103.602, -74.7879, 0.22 ) }
    dend_90 { pt3dadd( -26.7118, -103.804, -74.8847, 0.22 ) }
    dend_90 { pt3dadd( -26.7392, -103.893, -74.9267, 0.22 ) }
    dend_90 { pt3dadd( -26.8116, -104.22, -75.0983, 0.88 ) }
    dend_90 { pt3dadd( -26.8271, -104.354, -75.1911, 1.11 ) }
    dend_90 { pt3dadd( -26.8735, -105.116, -75.7997, 0.29 ) }
    dend_90 { pt3dadd( -26.8947, -105.353, -76.0137, 0.29 ) }
    dend_90 { pt3dadd( -26.939, -105.672, -76.3058, 0.44 ) }
    dend_90 { pt3dadd( -26.9446, -105.705, -76.3362, 0.44 ) }
    dend_90 { pt3dadd( -27.0831, -106.386, -76.9514, 0.22 ) }
    dend_90 { pt3dadd( -27.1128, -106.607, -77.198, 0.37 ) }
    dend_90 { pt3dadd( -27.143, -106.951, -77.6106, 0.22 ) }
    dend_90 { pt3dadd( -27.1547, -107.138, -77.8586, 0.81 ) }
    dend_90 { pt3dadd( -27.1564, -107.165, -77.8953, 0.81 ) }
    dend_90 { pt3dadd( -27.1661, -107.315, -78.0883, 1.33 ) }
    dend_90 { pt3dadd( -27.2301, -108.427, -79.5568, 0.29 ) }
    dend_90 { pt3dadd( -27.2363, -108.563, -79.7411, 0.29 ) }
    dend_90 { pt3dadd( -27.2389, -108.705, -79.9249, 0.29 ) }
    dend_90 { pt3dadd( -27.2343, -108.887, -80.1558, 0.74 ) }
    dend_90 { pt3dadd( -27.2286, -109.037, -80.3301, 0.88 ) }
    dend_90 { pt3dadd( -27.1911, -109.799, -81.1286, 0.22 ) }
    dend_90 { pt3dadd( -27.1789, -110.008, -81.3015, 0.22 ) }
    dend_90 { pt3dadd( -27.1607, -110.223, -81.4838, 0.22 ) }
    dend_90 { pt3dadd( -27.1113, -110.66, -81.8288, 0.66 ) }
    dend_90 { pt3dadd( -27.0877, -110.851, -81.9625, 1.11 ) }
    dend_90 { pt3dadd( -27.0764, -110.959, -82.0255, 1.33 ) }
    dend_90 { pt3dadd( -27.0237, -111.518, -82.2386, 0.22 ) }
    dend_90 { pt3dadd( -27.0031, -111.784, -82.3487, 0.22 ) }
    dend_90 { pt3dadd( -26.9922, -112.2, -82.5087, 0.22 ) }
    dend_90 { pt3dadd( -26.9914, -112.408, -82.5761, 0.22 ) }
    dend_90 { pt3dadd( -26.991, -112.456, -82.5901, 0.59 ) }
    dend_90 { pt3dadd( -26.9832, -112.64, -82.6411, 0.59 ) }
    dend_90 { pt3dadd( -26.9261, -113.294, -82.8002, 0.22 ) }
    dend_90 { pt3dadd( -26.8674, -113.818, -82.937, 0.22 ) }
    dend_90 { pt3dadd( -26.8409, -114.04, -82.9959, 0.22 ) }
    dend_90 { pt3dadd( -26.8052, -114.358, -83.0739, 0.96 ) }
    dend_90 { pt3dadd( -26.7638, -114.768, -83.1599, 0.22 ) }
    dend_90 { pt3dadd( -26.7509, -114.902, -83.1875, 0.22 ) }
    dend_90 { pt3dadd( -26.7285, -115.124, -83.2246, 0.22 ) }
    dend_90 { pt3dadd( -26.7047, -115.343, -83.2706, 0.22 ) }
    dend_90 { pt3dadd( -26.6861, -115.566, -83.3418, 0.22 ) }
    dend_90 { pt3dadd( -26.6784, -115.773, -83.4165, 0.22 ) }
    dend_90 { pt3dadd( -26.6891, -116.221, -83.5804, 0.59 ) }
    dend_90 { pt3dadd( -26.6941, -116.349, -83.6323, 0.74 ) }
    dend_90 { pt3dadd( -26.7083, -116.602, -83.7405, 0.74 ) }
    dend_90 { pt3dadd( -26.7538, -117.397, -84.0805, 0.29 ) }
    dend_90 { pt3dadd( -26.7799, -117.835, -84.2408, 0.29 ) }
    dend_90 { pt3dadd( -26.789, -118.024, -84.3016, 0.29 ) }
    dend_90 { pt3dadd( -26.805, -118.429, -84.4074, 0.59 ) }
    dend_90 { pt3dadd( -26.8069, -118.61, -84.4474, 0.96 ) }
    dend_90 { pt3dadd( -26.8016, -118.848, -84.4858, 0.96 ) }
    dend_90 { pt3dadd( -26.7641, -119.399, -84.5177, 0.22 ) }
    dend_90 { pt3dadd( -26.7305, -119.768, -84.5333, 0.22 ) }
    dend_90 { pt3dadd( -26.7135, -119.911, -84.5351, 0.29 ) }
    dend_90 { pt3dadd( -26.6669, -120.28, -84.523, 0.22 ) }
    dend_90 { pt3dadd( -26.6434, -120.458, -84.5181, 0.37 ) }
    dend_90 { pt3dadd( -26.6103, -120.635, -84.5379, 0.37 ) }
    dend_90 { pt3dadd( -26.5475, -120.867, -84.5932, 0.22 ) }
    dend_90 { pt3dadd( -26.4525, -121.154, -84.6736, 0.29 ) }
    dend_90 { pt3dadd( -26.3382, -121.445, -84.7607, 0.29 ) }
    dend_90 { pt3dadd( -26.3237, -121.478, -84.7703, 0.29 ) }
    dend_90 { pt3dadd( -25.9643, -122.259, -84.9868, 1.03 ) }
    dend_90 { pt3dadd( -25.8128, -122.602, -85.0706, 1.03 ) }
    dend_90 { pt3dadd( -25.6101, -123.106, -85.1713, 0.22 ) }
    dend_90 { pt3dadd( -25.4499, -123.573, -85.2412, 0.22 ) }
    dend_90 { pt3dadd( -25.3086, -124.029, -85.2922, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_90 { pt3dadd( -25.285, -124.113, -85.2974, 0.22 ) }
    dend_90 { pt3dadd( -25.1646, -124.645, -85.2818, 0.22 ) }
    dend_90 { pt3dadd( -25.0702, -125.132, -85.2661, 0.22 ) }
    dend_90 { pt3dadd( -25.0121, -125.531, -85.2471, 0.22 ) }
    dend_90 { pt3dadd( -24.9894, -125.773, -85.2395, 0.88 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 5/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -23.2405, -96.7635, -70.0301, 0.22 ) }
    dend_89 { pt3dadd( -22.7498, -98.4536, -72.971, 0.22 ) }
    dend_89 { pt3dadd( -22.6289, -98.7872, -73.4979, 0.22 ) }
    dend_89 { pt3dadd( -22.4922, -99.1135, -73.9866, 0.22 ) }
    dend_89 { pt3dadd( -22.2478, -99.621, -74.7428, 0.22 ) }
    dend_89 { pt3dadd( -22.141, -99.8189, -75.0378, 0.66 ) }
    dend_89 { pt3dadd( -21.7115, -100.556, -76.1183, 0.15 ) }
    dend_89 { pt3dadd( -21.4506, -100.913, -76.5406, 0.15 ) }
    dend_89 { pt3dadd( -21.3555, -101.026, -76.6943, 0.15 ) }
    dend_89 { pt3dadd( -20.952, -101.466, -77.3444, 0.74 ) }
    dend_89 { pt3dadd( -20.8423, -101.572, -77.4939, 0.96 ) }
    dend_89 { pt3dadd( -20.7062, -101.695, -77.6667, 0.96 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 17/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -8.67505, -125.231, -65.6823, 0.22 ) }
    dend_87 { pt3dadd( -8.90238, -126.131, -66.0748, 0.22 ) }
    dend_87 { pt3dadd( -9.01983, -126.705, -66.3213, 0.22 ) }
    dend_87 { pt3dadd( -9.06482, -127.311, -66.6356, 0.22 ) }
    dend_87 { pt3dadd( -9.06085, -127.554, -66.764, 0.81 ) }
    dend_87 { pt3dadd( -9.0362, -127.824, -66.8995, 1.11 ) }
    dend_87 { pt3dadd( -8.99725, -128.083, -67.0313, 1.03 ) }
    dend_87 { pt3dadd( -8.98243, -128.133, -67.0573, 1.03 ) }
    dend_87 { pt3dadd( -8.65928, -129.029, -67.5351, 0.29 ) }
    dend_87 { pt3dadd( -8.49938, -129.441, -67.7439, 0.29 ) }
    dend_87 { pt3dadd( -8.33781, -129.916, -67.976, 0.37 ) }
    dend_87 { pt3dadd( -8.23414, -130.266, -68.1379, 0.22 ) }
    dend_87 { pt3dadd( -8.13162, -130.7, -68.3405, 0.22 ) }
    dend_87 { pt3dadd( -8.03848, -131.166, -68.5513, 0.74 ) }
    dend_87 { pt3dadd( -8.02234, -131.274, -68.597, 1.03 ) }
    dend_87 { pt3dadd( -7.96923, -132.118, -69.0207, 0.22 ) }
    dend_87 { pt3dadd( -7.97301, -132.438, -69.192, 0.22 ) }
    dend_87 { pt3dadd( -8.00361, -132.973, -69.4758, 0.74 ) }
    dend_87 { pt3dadd( -8.02144, -133.181, -69.6033, 0.74 ) }
    dend_87 { pt3dadd( -8.04008, -133.349, -69.7095, 0.74 ) }
    dend_87 { pt3dadd( -8.1866, -134.271, -70.3395, 0.22 ) }
    dend_87 { pt3dadd( -8.2396, -134.529, -70.5296, 0.29 ) }
    dend_87 { pt3dadd( -8.28404, -134.717, -70.6671, 0.29 ) }
    dend_87 { pt3dadd( -8.51059, -135.549, -71.2498, 0.22 ) }
    dend_87 { pt3dadd( -8.60408, -135.799, -71.4336, 0.22 ) }
    dend_87 { pt3dadd( -8.81978, -136.302, -71.8177, 0.37 ) }
    dend_87 { pt3dadd( -8.83604, -136.339, -71.8464, 0.81 ) }
    dend_87 { pt3dadd( -8.97992, -136.668, -72.15, 0.81 ) }
    dend_87 { pt3dadd( -9.05295, -136.832, -72.3137, 0.81 ) }
    dend_87 { pt3dadd( -9.42803, -137.597, -73.2689, 0.22 ) }
    dend_87 { pt3dadd( -9.5536, -137.851, -73.6251, 0.22 ) }
    dend_87 { pt3dadd( -9.66729, -138.08, -73.9644, 0.22 ) }
    dend_87 { pt3dadd( -10.0087, -138.787, -75.0178, 0.88 ) }
    dend_87 { pt3dadd( -10.0837, -138.95, -75.2689, 0.88 ) }
    dend_87 { pt3dadd( -10.5043, -140.026, -76.9058, 0.37 ) }
    dend_87 { pt3dadd( -10.5561, -140.162, -77.1378, 0.52 ) }
    dend_87 { pt3dadd( -10.5983, -140.259, -77.3069, 0.74 ) }
    dend_87 { pt3dadd( -10.6825, -140.444, -77.6241, 0.74 ) }
    dend_87 { pt3dadd( -11.0225, -141.268, -79.0021, 0.22 ) }
    dend_87 { pt3dadd( -11.1057, -141.493, -79.371, 0.59 ) }
    dend_87 { pt3dadd( -11.4934, -142.769, -81.261, 0.29 ) }
    dend_87 { pt3dadd( -11.5525, -142.975, -81.5626, 0.74 ) }
    dend_87 { pt3dadd( -11.5904, -143.117, -81.7614, 0.74 ) }
    dend_87 { pt3dadd( -11.7395, -143.655, -82.4538, 0.22 ) }
    dend_87 { pt3dadd( -11.8094, -143.932, -82.7488, 0.22 ) }
    dend_87 { pt3dadd( -11.8935, -144.306, -83.0744, 0.22 ) }
    dend_87 { pt3dadd( -11.9659, -144.911, -83.4048, 0.81 ) }
    dend_87 { pt3dadd( -11.9862, -145.134, -83.5162, 1.18 ) }
    dend_87 { pt3dadd( -12.0223, -145.505, -83.6755, 0.66 ) }
    dend_87 { pt3dadd( -12.059, -145.982, -83.8387, 0.29 ) }
    dend_87 { pt3dadd( -12.0921, -146.493, -84.008, 0.29 ) }
    dend_87 { pt3dadd( -12.101, -146.739, -84.0835, 0.44 ) }
    dend_87 { pt3dadd( -12.1078, -147.238, -84.2154, 0.15 ) }
    dend_87 { pt3dadd( -12.1072, -147.475, -84.323, 0.15 ) }
    dend_87 { pt3dadd( -12.0886, -147.922, -84.5821, 0.59 ) }
    dend_87 { pt3dadd( -12.0799, -148.102, -84.708, 0.96 ) }
    dend_87 { pt3dadd( -12.0635, -148.353, -84.9104, 0.96 ) }
    dend_87 { pt3dadd( -12.0459, -148.544, -85.0707, 0.96 ) }
    dend_87 { pt3dadd( -11.9292, -149.672, -86.0347, 0.29 ) }
    dend_87 { pt3dadd( -11.8922, -149.968, -86.2772, 0.29 ) }
    dend_87 { pt3dadd( -11.8264, -150.451, -86.6437, 0.37 ) }
    dend_87 { pt3dadd( -11.7758, -150.836, -86.9295, 1.03 ) }
    dend_87 { pt3dadd( -11.7397, -151.132, -87.1354, 1.25 ) }
    dend_87 { pt3dadd( -11.6462, -152.401, -88.0447, 0.29 ) }
    dend_87 { pt3dadd( -11.6405, -152.786, -88.3125, 0.29 ) }
    dend_87 { pt3dadd( -11.6551, -153.143, -88.5678, 0.29 ) }
    dend_87 { pt3dadd( -11.6998, -153.776, -89.0153, 0.59 ) }
    dend_87 { pt3dadd( -11.731, -154.067, -89.23, 0.88 ) }
    dend_87 { pt3dadd( -11.9464, -155.65, -90.4611, 0.22 ) }
    dend_87 { pt3dadd( -12.0006, -155.953, -90.6993, 0.22 ) }
    dend_87 { pt3dadd( -12.0602, -156.253, -90.9366, 0.29 ) }
    dend_87 { pt3dadd( -12.1274, -156.545, -91.1571, 0.29 ) }
    dend_87 { pt3dadd( -12.2477, -157.097, -91.5311, 0.29 ) }
    dend_87 { pt3dadd( -12.3642, -157.732, -91.9235, 0.74 ) }
    dend_87 { pt3dadd( -12.3957, -157.995, -92.0571, 1.25 ) }
    dend_87 { pt3dadd( -12.4098, -158.162, -92.1384, 1.25 ) }
    dend_87 { pt3dadd( -12.5282, -159.73, -92.844, 0.29 ) }
    dend_87 { pt3dadd( -12.5548, -160.079, -92.9773, 0.29 ) }
    dend_87 { pt3dadd( -12.5649, -160.529, -93.1051, 0.74 ) }
    dend_87 { pt3dadd( -12.5524, -160.883, -93.1802, 1.18 ) }
    dend_87 { pt3dadd( -12.5194, -161.237, -93.2444, 0.74 ) }
    dend_87 { pt3dadd( -12.4384, -161.8, -93.347, 0.22 ) }
    dend_87 { pt3dadd( -12.3375, -162.252, -93.4218, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_87 { pt3dadd( -12.1778, -163.067, -93.5896, 0.22 ) }
    dend_87 { pt3dadd( -12.1331, -163.327, -93.6614, 0.44 ) }
    dend_87 { pt3dadd( -12.093, -163.608, -93.7524, 0.44 ) }
    dend_87 { pt3dadd( -12.0165, -164.309, -94.0201, 0.29 ) }
    dend_87 { pt3dadd( -11.9879, -164.652, -94.1686, 0.59 ) }
    dend_87 { pt3dadd( -11.9601, -165.046, -94.3208, 0.59 ) }
    dend_87 { pt3dadd( -11.9344, -165.574, -94.4863, 0.22 ) }
    dend_87 { pt3dadd( -11.9067, -165.951, -94.5681, 0.22 ) }
    dend_87 { pt3dadd( -11.8554, -166.395, -94.6347, 0.81 ) }
    dend_87 { pt3dadd( -11.8483, -166.444, -94.6344, 0.81 ) }
    dend_87 { pt3dadd( -11.6709, -167.514, -94.5541, 0.88 ) }
    dend_87 { pt3dadd( -11.5362, -168.317, -94.5271, 0.29 ) }
    dend_87 { pt3dadd( -11.4907, -168.561, -94.525, 0.29 ) }
    dend_87 { pt3dadd( -11.3618, -169.161, -94.5555, 0.66 ) }
    dend_87 { pt3dadd( -11.2083, -169.867, -94.626, 0.96 ) }
    dend_87 { pt3dadd( -11.1847, -169.988, -94.6493, 0.96 ) }
    dend_87 { pt3dadd( -11.0234, -170.964, -94.9425, 0.22 ) }
    dend_87 { pt3dadd( -10.9737, -171.276, -95.014, 0.22 ) }
    dend_87 { pt3dadd( -10.9118, -171.646, -95.085, 0.22 ) }
    dend_87 { pt3dadd( -10.8746, -171.884, -95.1208, 0.22 ) }
    dend_87 { pt3dadd( -10.8222, -172.335, -95.1819, 0.96 ) }
    dend_87 { pt3dadd( -10.8068, -172.569, -95.1956, 1.18 ) }
    dend_87 { pt3dadd( -10.8056, -173.597, -95.1542, 0.15 ) }
    dend_87 { pt3dadd( -10.8244, -173.906, -95.1346, 0.15 ) }
    dend_87 { pt3dadd( -10.8523, -174.192, -95.1114, 0.15 ) }
    dend_87 { pt3dadd( -10.8978, -174.717, -95.04, 0.22 ) }
    dend_87 { pt3dadd( -10.9073, -174.932, -95.0025, 0.22 ) }
    dend_87 { pt3dadd( -10.9133, -175.234, -94.9489, 0.22 ) }
    dend_87 { pt3dadd( -10.9078, -175.661, -94.8728, 0.81 ) }
    dend_87 { pt3dadd( -10.899, -176.063, -94.7939, 0.96 ) }
    dend_87 { pt3dadd( -10.8689, -176.77, -94.6296, 0.29 ) }
    dend_87 { pt3dadd( -10.849, -177.155, -94.5292, 0.22 ) }
    dend_87 { pt3dadd( -10.8424, -177.506, -94.4322, 0.22 ) }
    dend_87 { pt3dadd( -10.8471, -177.555, -94.4236, 0.22 ) }
    dend_87 { pt3dadd( -10.9474, -177.974, -94.388, 0.22 ) }
    dend_87 { pt3dadd( -11.0609, -178.335, -94.384, 0.81 ) }
    dend_87 { pt3dadd( -11.1711, -178.637, -94.3992, 1.18 ) }
    dend_87 { pt3dadd( -11.2631, -178.866, -94.4393, 1.18 ) }
    dend_87 { pt3dadd( -11.6997, -179.994, -94.7512, 0.22 ) }
    dend_87 { pt3dadd( -11.8496, -180.436, -94.8912, 0.22 ) }
    dend_87 { pt3dadd( -11.9551, -180.821, -95.0258, 0.22 ) }
    dend_87 { pt3dadd( -12.0112, -181.068, -95.1179, 0.22 ) }
    dend_87 { pt3dadd( -12.183, -182.091, -95.4759, 0.52 ) }
    dend_87 { pt3dadd( -12.2272, -182.437, -95.5796, 1.03 ) }
    dend_87 { pt3dadd( -12.2969, -183.076, -95.7177, 0.29 ) }
    dend_87 { pt3dadd( -12.3629, -183.556, -95.7562, 0.29 ) }
    dend_87 { pt3dadd( -12.4002, -183.796, -95.7531, 0.37 ) }
    dend_87 { pt3dadd( -12.4679, -184.287, -95.7113, 0.22 ) }
    dend_87 { pt3dadd( -12.5316, -184.829, -95.6298, 0.22 ) }
    dend_87 { pt3dadd( -12.5762, -185.229, -95.5739, 0.22 ) }
    dend_87 { pt3dadd( -12.7433, -186.672, -95.396, 1.47 ) }
    dend_87 { pt3dadd( -12.7631, -186.859, -95.3733, 1.47 ) }
    dend_87 { pt3dadd( -12.8057, -187.404, -95.3247, 0.29 ) }
    dend_87 { pt3dadd( -12.8146, -187.823, -95.3083, 0.22 ) }
    dend_87 { pt3dadd( -12.7889, -188.3, -95.3009, 0.22 ) }
    dend_87 { pt3dadd( -12.7256, -188.783, -95.3348, 0.22 ) }
    dend_87 { pt3dadd( -12.7147, -188.839, -95.3454, 0.22 ) }
    dend_87 { pt3dadd( -12.6193, -189.288, -95.4445, 0.59 ) }
    dend_87 { pt3dadd( -12.5041, -189.758, -95.5439, 0.96 ) }
    dend_87 { pt3dadd( -12.3749, -190.215, -95.6321, 0.96 ) }
    dend_87 { pt3dadd( -12.1214, -190.989, -95.697, 0.22 ) }
    dend_87 { pt3dadd( -11.9983, -191.33, -95.6894, 0.22 ) }
    dend_87 { pt3dadd( -11.9446, -191.485, -95.6717, 0.22 ) }
    dend_87 { pt3dadd( -11.7871, -191.927, -95.5688, 0.81 ) }
    dend_87 { pt3dadd( -11.6808, -192.211, -95.4871, 0.81 ) }
    dend_87 { pt3dadd( -11.4577, -192.818, -95.3143, 0.22 ) }
    dend_87 { pt3dadd( -11.3573, -193.091, -95.223, 0.22 ) }
    dend_87 { pt3dadd( -11.1509, -193.636, -95.0549, 0.22 ) }
    dend_87 { pt3dadd( -10.9897, -194.031, -94.955, 0.59 ) }
    dend_87 { pt3dadd( -10.8597, -194.303, -94.9089, 0.96 ) }
    dend_87 { pt3dadd( -10.69, -194.651, -94.8719, 0.22 ) }
    dend_87 { pt3dadd( -10.5231, -194.995, -94.8703, 0.22 ) }
    dend_87 { pt3dadd( -10.494, -195.056, -94.8714, 0.22 ) }
    dend_87 { pt3dadd( -10.3435, -195.444, -94.8882, 0.22 ) }
    dend_87 { pt3dadd( -10.2623, -195.747, -94.8784, 0.22 ) }
    dend_87 { pt3dadd( -10.1615, -196.25, -94.8197, 0.22 ) }
    dend_87 { pt3dadd( -10.1423, -196.423, -94.793, 0.29 ) }
    dend_87 { pt3dadd( -10.1326, -196.621, -94.7609, 0.37 ) }
    dend_87 { pt3dadd( -10.1307, -197.176, -94.6708, 0.22 ) }
    dend_87 { pt3dadd( -10.1944, -197.965, -94.5755, 0.74 ) }
    dend_87 { pt3dadd( -10.2457, -198.387, -94.5422, 1.4 ) }
    dend_87 { pt3dadd( -10.3235, -198.969, -94.5762, 0.22 ) }
    dend_87 { pt3dadd( -10.3662, -199.255, -94.6253, 0.22 ) }
    dend_87 { pt3dadd( -10.4009, -199.51, -94.6988, 0.22 ) }
    dend_87 { pt3dadd( -10.4797, -200.142, -94.9535, 1.11 ) }
    dend_87 { pt3dadd( -10.5165, -200.412, -95.1024, 1.11 ) }
    dend_87 { pt3dadd( -10.605, -201.291, -95.6313, 0.22 ) }
    dend_87 { pt3dadd( -10.6095, -201.456, -95.7344, 0.22 ) }
    dend_87 { pt3dadd( -10.6019, -201.966, -96.0706, 0.22 ) }
    dend_87 { pt3dadd( -10.5726, -202.394, -96.3437, 0.74 ) }
    dend_87 { pt3dadd( -10.4414, -203.209, -96.8284, 0.29 ) }
    dend_87 { pt3dadd( -10.3706, -203.518, -97.0062, 0.29 ) }
    dend_87 { pt3dadd( -10.2834, -203.774, -97.147, 0.59 ) }
    dend_87 { pt3dadd( -9.95674, -204.519, -97.5749, 0.22 ) }
    dend_87 { pt3dadd( -9.74079, -204.879, -97.7958, 0.22 ) }
    dend_87 { pt3dadd( -9.47184, -205.233, -98.1014, 0.22 ) }
    dend_87 { pt3dadd( -9.26298, -205.475, -98.3377, 0.22 ) }
    dend_87 { pt3dadd( -8.9472, -205.835, -98.7331, 1.25 ) }
    dend_87 { pt3dadd( -8.79062, -206.01, -98.9382, 1.69 ) }
    dend_87 { pt3dadd( -8.65667, -206.149, -99.1111, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_87 { pt3dadd( -7.70184, -207.16, -100.476, 0.29 ) }
    dend_87 { pt3dadd( -7.44934, -207.444, -100.88, 0.29 ) }
    dend_87 { pt3dadd( -7.42225, -207.473, -100.924, 0.29 ) }
    dend_87 { pt3dadd( -7.29358, -207.6, -101.142, 0.29 ) }
    dend_87 { pt3dadd( -7.18141, -207.692, -101.316, 0.29 ) }
    dend_87 { pt3dadd( -7.15103, -207.712, -101.352, 0.29 ) }
    dend_87 { pt3dadd( -6.90597, -207.849, -101.546, 0.29 ) }
    dend_87 { pt3dadd( -6.64529, -208.036, -101.846, 0.29 ) }
    dend_87 { pt3dadd( -6.0571, -208.537, -102.575, 0.29 ) }
    dend_87 { pt3dadd( -5.84804, -208.74, -102.85, 0.29 ) }
    dend_87 { pt3dadd( -5.5135, -209.121, -103.371, 1.33 ) }
    dend_87 { pt3dadd( -5.35549, -209.325, -103.63, 1.33 ) }
    dend_87 { pt3dadd( -4.63836, -210.382, -104.863, 0.22 ) }
    dend_87 { pt3dadd( -4.46909, -210.656, -105.179, 0.22 ) }
    dend_87 { pt3dadd( -4.40099, -210.776, -105.304, 0.22 ) }
    dend_87 { pt3dadd( -4.06467, -211.415, -105.943, 0.22 ) }
    dend_87 { pt3dadd( -3.87588, -211.763, -106.277, 1.03 ) }
    dend_87 { pt3dadd( -3.78601, -211.912, -106.41, 1.18 ) }
    dend_87 { pt3dadd( -3.0486, -213.021, -107.23, 0.22 ) }
    dend_87 { pt3dadd( -2.64661, -213.577, -107.635, 0.22 ) }
    dend_87 { pt3dadd( -2.43093, -213.855, -107.8, 0.22 ) }
    dend_87 { pt3dadd( -2.18401, -214.15, -107.92, 0.29 ) }
    dend_87 { pt3dadd( -1.95665, -214.404, -107.987, 0.29 ) }
    dend_87 { pt3dadd( -1.77326, -214.588, -107.982, 0.29 ) }
    dend_87 { pt3dadd( -1.59038, -214.753, -107.907, 0.37 ) }
    dend_87 { pt3dadd( -1.0828, -215.211, -107.659, 0.44 ) }
    dend_87 { pt3dadd( -0.967322, -215.328, -107.595, 0.44 ) }
    dend_87 { pt3dadd( -0.628195, -215.754, -107.408, 0.22 ) }
    dend_87 { pt3dadd( -0.468261, -215.969, -107.329, 0.22 ) }
    dend_87 { pt3dadd( -0.273995, -216.255, -107.25, 0.29 ) }
    dend_87 { pt3dadd( -0.0985062, -216.529, -107.202, 0.29 ) }
    dend_87 { pt3dadd( -0.0582309, -216.596, -107.199, 0.29 ) }
    dend_87 { pt3dadd( 0.237364, -217.162, -107.195, 0.22 ) }
    dend_87 { pt3dadd( 0.376286, -217.479, -107.209, 0.22 ) }
    dend_87 { pt3dadd( 0.499325, -217.818, -107.221, 0.22 ) }
    dend_87 { pt3dadd( 0.513805, -217.866, -107.222, 0.22 ) }
    dend_87 { pt3dadd( 0.558751, -218.053, -107.228, 0.22 ) }
    dend_87 { pt3dadd( 0.64342, -218.474, -107.237, 0.66 ) }
    dend_87 { pt3dadd( 0.685647, -218.719, -107.24, 0.66 ) }
    dend_87 { pt3dadd( 0.767166, -219.212, -107.244, 0.15 ) }
    dend_87 { pt3dadd( 0.821968, -219.508, -107.246, 0.22 ) }
    dend_87 { pt3dadd( 0.915327, -219.986, -107.248, 0.22 ) }
    dend_87 { pt3dadd( 1.01988, -220.474, -107.251, 0.29 ) }
    dend_87 { pt3dadd( 1.08913, -220.77, -107.255, 0.22 ) }
    dend_87 { pt3dadd( 1.12183, -220.89, -107.257, 0.22 ) }
    dend_87 { pt3dadd( 1.21619, -221.178, -107.27, 0.66 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 46/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -8.67505, -125.231, -65.6823, 0.37 ) }
    dend_86 { pt3dadd( -7.83697, -126.208, -66.7227, 0.37 ) }
    dend_86 { pt3dadd( -7.33949, -126.82, -67.3823, 0.29 ) }
    dend_86 { pt3dadd( -7.30323, -126.869, -67.434, 0.29 ) }
    dend_86 { pt3dadd( -7.04156, -127.278, -67.924, 0.29 ) }
    dend_86 { pt3dadd( -6.91334, -127.504, -68.1922, 0.29 ) }
    dend_86 { pt3dadd( -6.42976, -128.494, -69.3231, 0.52 ) }
    dend_86 { pt3dadd( -6.38464, -128.635, -69.4875, 0.88 ) }
    dend_86 { pt3dadd( -6.33997, -128.871, -69.7573, 0.88 ) }
    dend_86 { pt3dadd( -6.13772, -130.144, -71.3839, 0.15 ) }
    dend_86 { pt3dadd( -6.09663, -130.454, -71.7926, 0.15 ) }
    dend_86 { pt3dadd( -6.0692, -130.729, -72.1479, 0.15 ) }
    dend_86 { pt3dadd( -6.01727, -131.366, -72.9113, 0.81 ) }
    dend_86 { pt3dadd( -6.00645, -131.512, -73.0792, 0.81 ) }
    dend_86 { pt3dadd( -5.90207, -133.138, -74.8014, 0.22 ) }
    dend_86 { pt3dadd( -5.89058, -133.555, -75.1641, 0.22 ) }
    dend_86 { pt3dadd( -5.87571, -133.992, -75.5061, 0.22 ) }
    dend_86 { pt3dadd( -5.86582, -134.238, -75.6607, 0.59 ) }
    dend_86 { pt3dadd( -5.83701, -135.376, -76.1612, 0.15 ) }
    dend_86 { pt3dadd( -5.84476, -135.869, -76.2964, 0.15 ) }
    dend_86 { pt3dadd( -5.91606, -136.688, -76.3391, 0.66 ) }
    dend_86 { pt3dadd( -5.94887, -137.024, -76.3663, 0.96 ) }
    dend_86 { pt3dadd( -6.00375, -137.785, -76.4372, 0.22 ) }
    dend_86 { pt3dadd( -6.00816, -137.856, -76.4439, 0.22 ) }
    dend_86 { pt3dadd( -6.03226, -138.362, -76.4837, 0.22 ) }
    dend_86 { pt3dadd( -6.0374, -138.683, -76.5422, 0.22 ) }
    dend_86 { pt3dadd( -6.03007, -139.309, -76.7083, 0.22 ) }
    dend_86 { pt3dadd( -6.00097, -139.878, -76.8542, 0.22 ) }
    dend_86 { pt3dadd( -5.97471, -140.167, -76.9205, 0.66 ) }
    dend_86 { pt3dadd( -5.9357, -140.445, -76.9916, 0.66 ) }
    dend_86 { pt3dadd( -5.80901, -141.059, -77.1461, 0.29 ) }
    dend_86 { pt3dadd( -5.71015, -141.46, -77.2695, 0.29 ) }
    dend_86 { pt3dadd( -5.64353, -141.792, -77.378, 0.66 ) }
    dend_86 { pt3dadd( -5.6036, -142.064, -77.4751, 0.66 ) }
    dend_86 { pt3dadd( -5.53323, -142.777, -77.7297, 1.11 ) }
    dend_86 { pt3dadd( -5.49236, -143.422, -77.95, 0.88 ) }
    dend_86 { pt3dadd( -5.44794, -144.531, -78.3462, 0.22 ) }
    dend_86 { pt3dadd( -5.43853, -145.21, -78.5953, 0.22 ) }
    dend_86 { pt3dadd( -5.44471, -145.837, -78.8022, 0.22 ) }
    dend_86 { pt3dadd( -5.45744, -146.239, -78.9165, 0.22 ) }
    dend_86 { pt3dadd( -5.49055, -146.737, -79.0224, 0.81 ) }
    dend_86 { pt3dadd( -5.53508, -147.349, -79.1206, 0.81 ) }
    dend_86 { pt3dadd( -5.56142, -147.788, -79.1541, 0.81 ) }
    dend_86 { pt3dadd( -5.58225, -148.591, -79.2023, 0.22 ) }
    dend_86 { pt3dadd( -5.59827, -148.917, -79.2158, 0.22 ) }
    dend_86 { pt3dadd( -5.62116, -149.439, -79.2231, 0.22 ) }
    dend_86 { pt3dadd( -5.63284, -149.867, -79.2148, 0.81 ) }
    dend_86 { pt3dadd( -5.65106, -150.259, -79.1958, 0.81 ) }
    dend_86 { pt3dadd( -5.67792, -150.617, -79.1842, 0.81 ) }
    dend_86 { pt3dadd( -5.75287, -151.417, -79.1724, 0.22 ) }
    dend_86 { pt3dadd( -5.80197, -151.953, -79.1643, 0.22 ) }
    dend_86 { pt3dadd( -5.88226, -152.681, -79.1554, 0.22 ) }
    dend_86 { pt3dadd( -5.96193, -153.234, -79.1572, 0.22 ) }
    dend_86 { pt3dadd( -6.04244, -153.728, -79.1625, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_86 { pt3dadd( -6.06983, -153.88, -79.1653, 0.59 ) }
    dend_86 { pt3dadd( -6.08986, -153.984, -79.168, 0.59 ) }
    dend_86 { pt3dadd( -6.15111, -154.28, -79.1778, 0.81 ) }
    dend_86 { pt3dadd( -6.21095, -154.887, -79.2457, 0.22 ) }
    dend_86 { pt3dadd( -6.19991, -155.111, -79.2795, 0.22 ) }
    dend_86 { pt3dadd( -6.1516, -155.488, -79.3398, 0.59 ) }
    dend_86 { pt3dadd( -6.10095, -155.779, -79.3856, 0.59 ) }
    dend_86 { pt3dadd( -6.07499, -155.904, -79.4054, 0.59 ) }
    dend_86 { pt3dadd( -5.83009, -156.876, -79.5568, 0.22 ) }
    dend_86 { pt3dadd( -5.68837, -157.38, -79.632, 0.22 ) }
    dend_86 { pt3dadd( -5.52624, -157.919, -79.7581, 0.22 ) }
    dend_86 { pt3dadd( -5.41866, -158.251, -79.8577, 0.44 ) }
    dend_86 { pt3dadd( -5.39613, -158.313, -79.879, 0.44 ) }
    dend_86 { pt3dadd( -5.32376, -158.501, -79.9476, 0.74 ) }
    dend_86 { pt3dadd( -5.20883, -158.771, -80.0496, 0.74 ) }
    dend_86 { pt3dadd( -4.85463, -159.707, -80.4257, 0.15 ) }
    dend_86 { pt3dadd( -4.80192, -159.906, -80.4841, 0.15 ) }
    dend_86 { pt3dadd( -4.77539, -160.092, -80.5183, 0.15 ) }
    dend_86 { pt3dadd( -4.73833, -160.517, -80.5678, 0.15 ) }
    dend_86 { pt3dadd( -4.73149, -160.824, -80.5877, 0.66 ) }
    dend_86 { pt3dadd( -4.75616, -161.584, -80.6287, 1.03 ) }
    dend_86 { pt3dadd( -4.84076, -162.67, -80.6566, 0.22 ) }
    dend_86 { pt3dadd( -4.92701, -163.569, -80.6977, 0.22 ) }
    dend_86 { pt3dadd( -4.95221, -163.836, -80.7147, 0.52 ) }
    dend_86 { pt3dadd( -4.97072, -164.146, -80.7753, 0.59 ) }
    dend_86 { pt3dadd( -4.97572, -164.859, -81.0333, 0.15 ) }
    dend_86 { pt3dadd( -4.94416, -165.225, -81.2379, 0.15 ) }
    dend_86 { pt3dadd( -4.92733, -165.306, -81.3061, 0.52 ) }
    dend_86 { pt3dadd( -4.86275, -165.566, -81.5549, 0.74 ) }
    dend_86 { pt3dadd( -4.60584, -166.749, -82.7305, 0.15 ) }
    dend_86 { pt3dadd( -4.53549, -167.127, -83.107, 0.15 ) }
    dend_86 { pt3dadd( -4.51045, -167.278, -83.2548, 0.59 ) }
    dend_86 { pt3dadd( -4.35599, -168.302, -84.2591, 0.22 ) }
    dend_86 { pt3dadd( -4.31821, -168.645, -84.5725, 0.22 ) }
    dend_86 { pt3dadd( -4.28235, -169.168, -85.0036, 0.66 ) }
    dend_86 { pt3dadd( -4.27603, -169.435, -85.1783, 0.88 ) }
    dend_86 { pt3dadd( -4.27835, -169.721, -85.3446, 0.88 ) }
    dend_86 { pt3dadd( -4.30848, -170.814, -85.878, 0.15 ) }
    dend_86 { pt3dadd( -4.32386, -171.298, -86.085, 0.15 ) }
    dend_86 { pt3dadd( -4.3243, -171.501, -86.1748, 0.44 ) }
    dend_86 { pt3dadd( -4.31263, -171.863, -86.3306, 0.22 ) }
    dend_86 { pt3dadd( -4.30287, -172.222, -86.4877, 0.15 ) }
    dend_86 { pt3dadd( -4.29709, -172.764, -86.6617, 0.15 ) }
    dend_86 { pt3dadd( -4.23055, -173.774, -86.9063, 0.88 ) }
    dend_86 { pt3dadd( -4.20047, -173.973, -86.9534, 0.88 ) }
    dend_86 { pt3dadd( -4.13389, -174.273, -87.0131, 0.88 ) }
    dend_86 { pt3dadd( -4.10104, -174.382, -87.0303, 0.88 ) }
    dend_86 { pt3dadd( -3.65199, -175.628, -87.1489, 0.15 ) }
    dend_86 { pt3dadd( -3.38731, -176.323, -87.1715, 0.22 ) }
    dend_86 { pt3dadd( -3.24815, -176.683, -87.1638, 0.22 ) }
    dend_86 { pt3dadd( -3.0091, -177.324, -87.1595, 0.22 ) }
    dend_86 { pt3dadd( -2.91444, -177.606, -87.1671, 0.22 ) }
    dend_86 { pt3dadd( -2.6661, -178.395, -87.2093, 0.15 ) }
    dend_86 { pt3dadd( -2.60258, -178.613, -87.2275, 0.15 ) }
    dend_86 { pt3dadd( -2.48683, -179.089, -87.2529, 0.74 ) }
    dend_86 { pt3dadd( -2.34452, -179.712, -87.2972, 0.74 ) }
    dend_86 { pt3dadd( -2.20255, -180.381, -87.3503, 0.07 ) }
    dend_86 { pt3dadd( -2.13067, -180.741, -87.3786, 0.07 ) }
    dend_86 { pt3dadd( -2.05756, -181.116, -87.4242, 0.81 ) }
    dend_86 { pt3dadd( -1.97522, -181.558, -87.4656, 0.81 ) }
    dend_86 { pt3dadd( -1.87138, -182.301, -87.505, 0.22 ) }
    dend_86 { pt3dadd( -1.80368, -182.95, -87.5194, 0.22 ) }
    dend_86 { pt3dadd( -1.78351, -183.229, -87.5161, 0.22 ) }
    dend_86 { pt3dadd( -1.73556, -184.029, -87.4929, 0.81 ) }
    dend_86 { pt3dadd( -1.70822, -184.827, -87.4563, 0.88 ) }
    dend_86 { pt3dadd( -1.69806, -185.605, -87.4037, 0.22 ) }
    dend_86 { pt3dadd( -1.71026, -186.101, -87.36, 0.22 ) }
    dend_86 { pt3dadd( -1.72735, -186.542, -87.3147, 0.22 ) }
    dend_86 { pt3dadd( -1.73462, -186.853, -87.2769, 0.22 ) }
    dend_86 { pt3dadd( -1.72371, -187.358, -87.2041, 0.22 ) }
    dend_86 { pt3dadd( -1.72155, -187.417, -87.1938, 0.22 ) }
    dend_86 { pt3dadd( -1.69922, -187.77, -87.1265, 0.22 ) }
    dend_86 { pt3dadd( -1.69462, -187.847, -87.1109, 0.22 ) }
    dend_86 { pt3dadd( -1.67343, -188.187, -87.011, 0.22 ) }
    dend_86 { pt3dadd( -1.61906, -188.881, -86.7853, 0.44 ) }
    dend_86 { pt3dadd( -1.47766, -190.092, -86.3886, 0.22 ) }
    dend_86 { pt3dadd( -1.38822, -190.719, -86.1958, 0.59 ) }
    dend_86 { pt3dadd( -1.35315, -190.937, -86.1311, 0.88 ) }
    dend_86 { pt3dadd( -1.10085, -192.403, -85.715, 0.22 ) }
    dend_86 { pt3dadd( -0.949932, -193.17, -85.5136, 0.22 ) }
    dend_86 { pt3dadd( -0.751912, -194.015, -85.3192, 0.22 ) }
    dend_86 { pt3dadd( -0.565988, -194.717, -85.1932, 0.74 ) }
    dend_86 { pt3dadd( -0.549134, -194.784, -85.1811, 0.74 ) }
    dend_86 { pt3dadd( -0.469922, -195.094, -85.1405, 0.74 ) }
    dend_86 { pt3dadd( -0.29146, -195.69, -85.145, 0.29 ) }
    dend_86 { pt3dadd( -0.0860766, -196.314, -85.1752, 0.29 ) }
    dend_86 { pt3dadd( 0.0230322, -196.593, -85.2295, 0.29 ) }
    dend_86 { pt3dadd( 0.191594, -196.971, -85.3473, 0.52 ) }
    dend_86 { pt3dadd( 0.316669, -197.251, -85.4541, 0.96 ) }
    dend_86 { pt3dadd( 0.781145, -198.274, -85.8934, 0.22 ) }
    dend_86 { pt3dadd( 0.813158, -198.341, -85.9267, 0.22 ) }
    dend_86 { pt3dadd( 1.31536, -199.284, -86.4583, 0.59 ) }
    dend_86 { pt3dadd( 1.41841, -199.46, -86.5656, 0.59 ) }
    dend_86 { pt3dadd( 1.81306, -200.109, -87.0019, 0.22 ) }
    dend_86 { pt3dadd( 2.01878, -200.465, -87.2559, 0.52 ) }
    // Section: dend_83, id: dend_83, parent: dend_79 (entry count 95/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -46.2724, -60.0248, 29.0267, 0.22 ) }
    dend_83 { pt3dadd( -52.1898, -68.1091, 36.8534, 0.22 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 97/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -46.2724, -60.0248, 29.0267, 0.29 ) }
    dend_80 { pt3dadd( -53.9582, -65.7421, 34.8206, 0.22 ) }
    dend_80 { pt3dadd( -61.7427, -72.4845, 39.1196, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 0/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -16.2067, 18.902, 93.6258, 0.29 ) }
    dend_70 { pt3dadd( -17.4326, 14.0821, 101.732, 0.29 ) }
    dend_70 { pt3dadd( -20.9006, 10.6403, 109.924, 0.29 ) }
    dend_70 { pt3dadd( -25.7542, 8.44775, 117.855, 0.29 ) }
    dend_70 { pt3dadd( -31.425, 7.71062, 125.516, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 5/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -16.2067, 18.902, 93.6258, 0.44 ) }
    dend_69 { pt3dadd( -20.4117, 13.2361, 102.977, 0.29 ) }
    dend_69 { pt3dadd( -24.8857, 6.8408, 111.69, 0.29 ) }
    dend_69 { pt3dadd( -29.9239, -0.299935, 119.437, 0.29 ) }
    dend_69 { pt3dadd( -35.6243, -5.7063, 128.136, 0.29 ) }
    dend_69 { pt3dadd( -41.2666, -10.2836, 137.354, 0.29 ) }
    dend_69 { pt3dadd( -45.843, -14.6881, 147.225, 0.29 ) }
    dend_69 { pt3dadd( -49.2827, -19.0354, 157.57, 0.29 ) }
    dend_69 { pt3dadd( -52.752, -23.638, 167.79, 0.29 ) }
    dend_69 { pt3dadd( -53.396, -28.4941, 178.441, 0.29 ) }
    dend_69 { pt3dadd( -53.5906, -34.4796, 188.489, 0.29 ) }
    dend_69 { pt3dadd( -53.1135, -42.0657, 197.316, 0.29 ) }
    dend_69 { pt3dadd( -51.6723, -50.8074, 204.808, 0.29 ) }
    dend_69 { pt3dadd( -49.3888, -60.1013, 211.32, 0.29 ) }
    dend_69 { pt3dadd( -46.2451, -70.5563, 214.981, 0.29 ) }
    dend_69 { pt3dadd( -43.5259, -80.4343, 220.306, 0.29 ) }
    dend_69 { pt3dadd( -42.7469, -90.8304, 225.237, 0.29 ) }
    dend_69 { pt3dadd( -40.7491, -101.171, 229.924, 0.29 ) }
    dend_69 { pt3dadd( -38.2884, -111.366, 234.722, 0.29 ) }
    dend_69 { pt3dadd( -35.9638, -121.027, 240.627, 0.29 ) }
    dend_69 { pt3dadd( -33.6781, -130.848, 246.263, 0.29 ) }
    dend_69 { pt3dadd( -31.1514, -141.054, 251.001, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 27/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -38.63, 41.9043, -41.9862, 0.22 ) }
    dend_52 { pt3dadd( -39.336, 42.5348, -43.597, 0.22 ) }
    dend_52 { pt3dadd( -39.4258, 42.6188, -43.8028, 0.22 ) }
    dend_52 { pt3dadd( -39.5454, 42.7421, -44.0905, 0.22 ) }
    dend_52 { pt3dadd( -39.7119, 42.924, -44.4857, 0.22 ) }
    dend_52 { pt3dadd( -40.2181, 43.5351, -45.7831, 0.22 ) }
    dend_52 { pt3dadd( -40.309, 43.6516, -46.0249, 0.52 ) }
    dend_52 { pt3dadd( -40.3406, 43.6933, -46.1054, 0.74 ) }
    dend_52 { pt3dadd( -40.3984, 43.779, -46.2773, 0.74 ) }
    dend_52 { pt3dadd( -40.445, 43.8928, -46.4986, 0.88 ) }
    dend_52 { pt3dadd( -40.5102, 44.5593, -47.5747, 0.22 ) }
    dend_52 { pt3dadd( -40.506, 44.5982, -47.6158, 0.37 ) }
    dend_52 { pt3dadd( -40.5001, 44.6475, -47.6701, 0.37 ) }
    dend_52 { pt3dadd( -40.4781, 44.7933, -47.824, 0.37 ) }
    dend_52 { pt3dadd( -40.4016, 45.1931, -48.2113, 0.15 ) }
    dend_52 { pt3dadd( -40.3366, 45.4279, -48.4052, 0.15 ) }
    dend_52 { pt3dadd( -40.315, 45.5435, -48.5341, 0.15 ) }
    dend_52 { pt3dadd( -40.2945, 45.8297, -48.9572, 0.29 ) }
    dend_52 { pt3dadd( -40.2858, 45.9352, -49.1352, 0.59 ) }
    dend_52 { pt3dadd( -40.2791, 46.0145, -49.2816, 1.03 ) }
    dend_52 { pt3dadd( -40.2729, 46.0716, -49.3969, 1.03 ) }
    dend_52 { pt3dadd( -40.0566, 46.8476, -51.0156, 0.59 ) }
    dend_52 { pt3dadd( -40.0454, 46.8744, -51.0714, 0.59 ) }
    dend_52 { pt3dadd( -39.9159, 47.0987, -51.5189, 0.22 ) }
    dend_52 { pt3dadd( -39.8528, 47.197, -51.7365, 0.29 ) }
    dend_52 { pt3dadd( -39.7774, 47.3002, -51.98, 0.29 ) }
    dend_52 { pt3dadd( -39.648, 47.4416, -52.3109, 0.66 ) }
    dend_52 { pt3dadd( -39.5982, 47.4884, -52.3986, 0.66 ) }
    dend_52 { pt3dadd( -39.5494, 47.5384, -52.5014, 0.74 ) }
    dend_52 { pt3dadd( -39.2285, 47.8857, -53.2673, 0.74 ) }
    dend_52 { pt3dadd( -39.218, 47.9022, -53.3293, 0.74 ) }
    dend_52 { pt3dadd( -39.0482, 48.1768, -54.3457, 0.22 ) }
    dend_52 { pt3dadd( -38.9817, 48.285, -54.7325, 0.22 ) }
    dend_52 { pt3dadd( -38.9074, 48.407, -55.1241, 0.44 ) }
    dend_52 { pt3dadd( -38.8612, 48.4879, -55.3601, 0.66 ) }
    dend_52 { pt3dadd( -38.3509, 49.4182, -57.8017, 0.81 ) }
    dend_52 { pt3dadd( -38.2499, 49.8594, -59.1223, 0.29 ) }
    dend_52 { pt3dadd( -38.2668, 49.9178, -59.3182, 0.22 ) }
    dend_52 { pt3dadd( -38.3049, 49.9969, -59.5911, 0.22 ) }
    dend_52 { pt3dadd( -38.3242, 50.0281, -59.7062, 0.22 ) }
    dend_52 { pt3dadd( -38.3342, 50.0425, -59.7591, 0.22 ) }
    dend_52 { pt3dadd( -38.6943, 50.5226, -61.4969, 0.44 ) }
    dend_52 { pt3dadd( -38.8429, 50.6728, -62.0634, 0.59 ) }
    dend_52 { pt3dadd( -38.8915, 50.7186, -62.2308, 0.74 ) }
    dend_52 { pt3dadd( -39.4536, 51.1456, -64.0753, 0.29 ) }
    dend_52 { pt3dadd( -39.5057, 51.1813, -64.2403, 0.59 ) }
    dend_52 { pt3dadd( -39.5493, 51.2105, -64.3739, 0.66 ) }
    dend_52 { pt3dadd( -40.1246, 51.5765, -66.0288, 0.07 ) }
    dend_52 { pt3dadd( -40.2408, 51.6433, -66.3458, 0.07 ) }
    dend_52 { pt3dadd( -41.3125, 52.2378, -69.0495, 0.66 ) }
    dend_52 { pt3dadd( -41.3346, 52.2496, -69.1013, 0.88 ) }
    dend_52 { pt3dadd( -41.3987, 52.2842, -69.2522, 0.88 ) }
    dend_52 { pt3dadd( -41.4446, 52.3105, -69.3594, 1.11 ) }
    dend_52 { pt3dadd( -42.2629, 52.8181, -71.2523, 0.29 ) }
    dend_52 { pt3dadd( -42.407, 52.9149, -71.5653, 0.29 ) }
    dend_52 { pt3dadd( -42.4359, 52.9391, -71.6165, 0.29 ) }
    dend_52 { pt3dadd( -42.7485, 53.1682, -72.127, 0.15 ) }
    dend_52 { pt3dadd( -42.8955, 53.2655, -72.3508, 0.15 ) }
    dend_52 { pt3dadd( -42.9368, 53.2918, -72.4069, 0.15 ) }
    dend_52 { pt3dadd( -43.5649, 53.6575, -73.0967, 0.66 ) }
    dend_52 { pt3dadd( -43.763, 53.768, -73.3025, 0.96 ) }
    dend_52 { pt3dadd( -44.621, 54.2322, -74.1743, 0.22 ) }
    dend_52 { pt3dadd( -44.6789, 54.2625, -74.2291, 0.22 ) }
    dend_52 { pt3dadd( -44.9311, 54.3925, -74.4632, 0.22 ) }
    dend_52 { pt3dadd( -44.9702, 54.4127, -74.4966, 0.22 ) }
    dend_52 { pt3dadd( -45.1853, 54.5148, -74.7197, 0.22 ) }
    dend_52 { pt3dadd( -45.7266, 54.7723, -75.3437, 0.52 ) }
    dend_52 { pt3dadd( -45.8534, 54.8347, -75.4944, 0.81 ) }
    dend_52 { pt3dadd( -45.9064, 54.8599, -75.5627, 1.03 ) }
    dend_52 { pt3dadd( -45.9486, 54.8798, -75.6264, 1.03 ) }
    dend_52 { pt3dadd( -47.1268, 55.428, -77.5155, 0.37 ) }
    dend_52 { pt3dadd( -47.3972, 55.5542, -77.9724, 0.37 ) }
    dend_52 { pt3dadd( -47.4962, 55.6007, -78.1412, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_52 { pt3dadd( -47.8099, 55.7477, -78.6958, 0.52 ) }
    dend_52 { pt3dadd( -48.3618, 56.0126, -79.6961, 0.74 ) }
    dend_52 { pt3dadd( -48.4132, 56.042, -79.8013, 0.81 ) }
    dend_52 { pt3dadd( -48.46, 56.0723, -79.907, 0.88 ) }
    dend_52 { pt3dadd( -48.4812, 56.0839, -79.9574, 0.88 ) }
    dend_52 { pt3dadd( -48.5124, 56.0989, -80.0285, 1.03 ) }
    dend_52 { pt3dadd( -48.5397, 56.1103, -80.0849, 1.03 ) }
    dend_52 { pt3dadd( -49.262, 56.2751, -81.7747, 0.29 ) }
    dend_52 { pt3dadd( -49.5055, 56.3091, -82.3699, 0.29 ) }
    dend_52 { pt3dadd( -49.6934, 56.3254, -82.8347, 0.59 ) }
    dend_52 { pt3dadd( -49.6934, 56.3254, -82.8347, 0.59 ) }
    dend_52 { pt3dadd( -49.7302, 56.3264, -82.9254, 0.59 ) }
    dend_52 { pt3dadd( -51.003, 56.3296, -85.9944, 0.07 ) }
    dend_52 { pt3dadd( -51.0606, 56.3236, -86.1368, 0.07 ) }
    dend_52 { pt3dadd( -51.0906, 56.3208, -86.2169, 0.07 ) }
    dend_52 { pt3dadd( -51.117, 56.3187, -86.2867, 0.59 ) }
    dend_52 { pt3dadd( -51.1756, 56.3114, -86.4947, 0.96 ) }
    dend_52 { pt3dadd( -51.2212, 56.304, -86.7023, 1.11 ) }
    dend_52 { pt3dadd( -51.6684, 56.155, -89.5682, 0.37 ) }
    dend_52 { pt3dadd( -51.7064, 56.1367, -89.8675, 0.59 ) }
    dend_52 { pt3dadd( -51.7269, 56.1204, -90.091, 0.74 ) }
    dend_52 { pt3dadd( -52.1126, 55.5869, -96.1948, 0.29 ) }
    dend_52 { pt3dadd( -52.1224, 55.5634, -96.4264, 0.29 ) }
    dend_52 { pt3dadd( -52.1378, 55.5179, -96.8415, 0.29 ) }
    dend_52 { pt3dadd( -52.1414, 55.509, -96.9224, 0.29 ) }
    dend_52 { pt3dadd( -52.1591, 55.4536, -97.4189, 0.29 ) }
    dend_52 { pt3dadd( -52.1416, 55.3822, -97.8375, 0.29 ) }
    dend_52 { pt3dadd( -51.8715, 55.1423, -98.3501, 0.52 ) }
    dend_52 { pt3dadd( -51.846, 55.1176, -98.4048, 0.81 ) }
    dend_52 { pt3dadd( -51.8263, 55.0971, -98.4529, 0.81 ) }
    dend_52 { pt3dadd( -51.7434, 55.0055, -98.6736, 1.11 ) }
    dend_52 { pt3dadd( -51.1335, 54.2611, -100.521, 0.22 ) }
    dend_52 { pt3dadd( -51.0335, 54.1444, -100.81, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 33/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -38.63, 41.9043, -41.9862, 0.22 ) }
    dend_49 { pt3dadd( -41.2752, 40.8424, -46.3965, 0.22 ) }
    dend_49 { pt3dadd( -41.5924, 40.7201, -46.8798, 0.22 ) }
    dend_49 { pt3dadd( -41.8493, 40.6231, -47.2542, 0.74 ) }
    dend_49 { pt3dadd( -42.0714, 40.5382, -47.5649, 1.03 ) }
    dend_49 { pt3dadd( -43.5618, 39.9668, -49.5683, 0.22 ) }
    dend_49 { pt3dadd( -43.9034, 39.8325, -50.0151, 0.22 ) }
    dend_49 { pt3dadd( -44.0481, 39.7831, -50.1286, 0.22 ) }
    dend_49 { pt3dadd( -44.1073, 39.7618, -50.1784, 0.22 ) }
    dend_49 { pt3dadd( -44.3063, 39.6864, -50.3518, 0.44 ) }
    dend_49 { pt3dadd( -44.4381, 39.6318, -50.4606, 0.44 ) }
    dend_49 { pt3dadd( -44.5887, 39.5635, -50.5617, 0.44 ) }
    dend_49 { pt3dadd( -45.2079, 39.4046, -51.2192, 0.15 ) }
    dend_49 { pt3dadd( -45.4275, 39.3735, -51.4642, 0.15 ) }
    dend_49 { pt3dadd( -46.2367, 39.3502, -52.535, 0.81 ) }
    dend_49 { pt3dadd( -46.6819, 39.3494, -53.155, 1.18 ) }
    dend_49 { pt3dadd( -46.7932, 39.3507, -53.3145, 1.33 ) }
    dend_49 { pt3dadd( -48.5592, 39.4167, -55.8796, 0.59 ) }
    dend_49 { pt3dadd( -48.9145, 39.4394, -56.4062, 0.74 ) }
    dend_49 { pt3dadd( -50.7011, 39.6134, -59.0461, 0.29 ) }
    dend_49 { pt3dadd( -50.9972, 39.6492, -59.483, 0.29 ) }
    dend_49 { pt3dadd( -51.0695, 39.6603, -59.5869, 0.37 ) }
    dend_49 { pt3dadd( -51.1979, 39.6808, -59.7513, 0.37 ) }
    dend_49 { pt3dadd( -51.3311, 39.6991, -59.8706, 0.37 ) }
    dend_49 { pt3dadd( -51.751, 39.7856, -60.1673, 0.37 ) }
    dend_49 { pt3dadd( -52.3875, 40.0003, -60.2445, 0.15 ) }
    dend_49 { pt3dadd( -52.9343, 40.159, -60.4004, 0.15 ) }
    dend_49 { pt3dadd( -53.3128, 40.2214, -60.5375, 0.22 ) }
    dend_49 { pt3dadd( -53.4016, 40.2309, -60.586, 0.29 ) }
    dend_49 { pt3dadd( -53.7524, 40.249, -60.8273, 0.29 ) }
    dend_49 { pt3dadd( -53.9525, 40.2649, -61.1281, 0.29 ) }
    dend_49 { pt3dadd( -54.6546, 40.3279, -62.4696, 0.88 ) }
    dend_49 { pt3dadd( -54.8832, 40.3516, -62.9588, 0.96 ) }
    dend_49 { pt3dadd( -55.3199, 40.4043, -63.9044, 1.11 ) }
    dend_49 { pt3dadd( -55.3199, 40.4043, -63.9044, 1.11 ) }
    dend_49 { pt3dadd( -56.6779, 40.5247, -67.5131, 0.52 ) }
    dend_49 { pt3dadd( -56.8537, 40.5328, -68.0337, 0.66 ) }
    dend_49 { pt3dadd( -57.0971, 40.5371, -68.7967, 0.66 ) }
    dend_49 { pt3dadd( -57.7607, 40.5173, -70.9407, 0.88 ) }
    dend_49 { pt3dadd( -57.8294, 40.5098, -71.1551, 0.88 ) }
    dend_49 { pt3dadd( -60.0405, 40.2401, -77.6243, 0.96 ) }
    dend_49 { pt3dadd( -60.1347, 40.2233, -77.8899, 1.11 ) }
    dend_49 { pt3dadd( -60.1965, 40.2148, -78.0585, 1.11 ) }
    dend_49 { pt3dadd( -60.6465, 40.1581, -79.2521, 1.18 ) }
    dend_49 { pt3dadd( -60.7879, 40.1459, -79.6199, 1.33 ) }
    dend_49 { pt3dadd( -61.6219, 40.1334, -81.6432, 0.37 ) }
    dend_49 { pt3dadd( -61.7096, 40.1424, -81.8165, 0.37 ) }
    dend_49 { pt3dadd( -63.2176, 40.3414, -85.1827, 0.37 ) }
    dend_49 { pt3dadd( -63.4789, 40.366, -85.7795, 0.74 ) }
    dend_49 { pt3dadd( -63.5899, 40.3698, -86.039, 0.74 ) }
    dend_49 { pt3dadd( -64.7883, 40.3521, -88.938, 0.81 ) }
    dend_49 { pt3dadd( -64.986, 40.3379, -89.4285, 0.81 ) }
    dend_49 { pt3dadd( -66.9208, 40.0283, -94.1437, 0.29 ) }
    dend_49 { pt3dadd( -67.2426, 39.9466, -94.8912, 0.29 ) }
    dend_49 { pt3dadd( -67.4782, 39.8741, -95.4115, 0.74 ) }
    dend_49 { pt3dadd( -67.557, 39.845, -95.5703, 1.03 ) }
    dend_49 { pt3dadd( -67.6803, 39.7915, -95.7858, 1.33 ) }
    dend_49 { pt3dadd( -69.8792, 38.7939, -99.2452, 0.29 ) }
    dend_49 { pt3dadd( -70.1979, 38.6331, -99.7022, 0.29 ) }
    dend_49 { pt3dadd( -70.3467, 38.5579, -99.9337, 0.29 ) }
    dend_49 { pt3dadd( -70.8902, 38.2788, -100.79, 0.66 ) }
    dend_49 { pt3dadd( -71.0276, 38.1999, -101.01, 0.81 ) }
    dend_49 { pt3dadd( -71.2783, 38.0442, -101.422, 0.66 ) }
    dend_49 { pt3dadd( -72.9191, 36.7139, -104.22, 0.88 ) }
    dend_49 { pt3dadd( -72.9949, 36.6445, -104.369, 1.11 ) }
    dend_49 { pt3dadd( -73.1205, 36.515, -104.648, 1.55 ) }
    dend_49 { pt3dadd( -73.2484, 36.3488, -104.989, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 0/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -65.1975, 117.15, -107.855, 0.29 ) }
    dend_47 { pt3dadd( -65.6121, 118.056, -108.645, 0.29 ) }
    dend_47 { pt3dadd( -65.9567, 118.704, -109.25, 0.81 ) }
    dend_47 { pt3dadd( -66.6344, 119.806, -110.311, 0.29 ) }
    dend_47 { pt3dadd( -66.7074, 119.915, -110.417, 0.22 ) }
    dend_47 { pt3dadd( -66.7909, 120.002, -110.525, 0.22 ) }
    dend_47 { pt3dadd( -67.3257, 120.423, -111.131, 0.52 ) }
    dend_47 { pt3dadd( -67.5141, 120.476, -111.337, 0.81 ) }
    dend_47 { pt3dadd( -67.7301, 120.502, -111.568, 0.29 ) }
    dend_47 { pt3dadd( -67.7827, 120.505, -111.623, 0.29 ) }
    dend_47 { pt3dadd( -68.9138, 120.58, -112.827, 0.22 ) }
    dend_47 { pt3dadd( -69.2341, 120.61, -113.17, 0.22 ) }
    dend_47 { pt3dadd( -70.6609, 120.758, -114.79, 0.37 ) }
    dend_47 { pt3dadd( -70.8236, 120.794, -115.027, 0.66 ) }
    dend_47 { pt3dadd( -70.8839, 120.81, -115.125, 0.66 ) }
    dend_47 { pt3dadd( -70.9403, 120.831, -115.218, 0.66 ) }
    dend_47 { pt3dadd( -71.0477, 120.883, -115.408, 0.66 ) }
    dend_47 { pt3dadd( -71.5194, 121.141, -116.278, 0.66 ) }
    dend_47 { pt3dadd( -72.4584, 121.582, -118.31, 0.44 ) }
    dend_47 { pt3dadd( -72.6194, 121.649, -118.684, 0.44 ) }
    dend_47 { pt3dadd( -72.9503, 121.779, -119.482, 0.52 ) }
    dend_47 { pt3dadd( -73.127, 121.847, -119.923, 0.59 ) }
    dend_47 { pt3dadd( -73.2608, 121.901, -120.295, 0.74 ) }
    dend_47 { pt3dadd( -74.5476, 122.425, -124.177, 0.22 ) }
    dend_47 { pt3dadd( -74.6, 122.447, -124.352, 0.66 ) }
    dend_47 { pt3dadd( -74.6207, 122.456, -124.427, 0.66 ) }
    dend_47 { pt3dadd( -75.5555, 122.868, -128.098, 0.29 ) }
    dend_47 { pt3dadd( -75.7315, 122.956, -128.783, 0.52 ) }
    dend_47 { pt3dadd( -75.7616, 122.97, -128.9, 0.66 ) }
    dend_47 { pt3dadd( -75.8521, 123.041, -129.29, 0.66 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -65.1975, 117.15, -107.855, 0.15 ) }
    dend_44 { pt3dadd( -65.731, 117.824, -106.487, 0.15 ) }
    dend_44 { pt3dadd( -65.7667, 117.859, -106.438, 0.15 ) }
    dend_44 { pt3dadd( -66.0389, 118.085, -106.244, 0.44 ) }
    dend_44 { pt3dadd( -66.2524, 118.257, -106.136, 0.15 ) }
    dend_44 { pt3dadd( -66.4023, 118.411, -106.075, 0.15 ) }
    dend_44 { pt3dadd( -66.6253, 118.726, -105.998, 0.15 ) }
    dend_44 { pt3dadd( -66.9064, 119.181, -106.045, 0.88 ) }
    dend_44 { pt3dadd( -67.0708, 119.483, -106.105, 1.03 ) }
    dend_44 { pt3dadd( -67.3054, 119.982, -106.232, 0.52 ) }
    dend_44 { pt3dadd( -67.7021, 120.915, -106.499, 0.22 ) }
    dend_44 { pt3dadd( -68.0455, 121.751, -106.742, 0.22 ) }
    dend_44 { pt3dadd( -68.5343, 122.792, -107.124, 0.22 ) }
    dend_44 { pt3dadd( -68.6264, 122.966, -107.195, 0.22 ) }
    dend_44 { pt3dadd( -68.933, 123.457, -107.419, 0.81 ) }
    dend_44 { pt3dadd( -69.1917, 123.801, -107.594, 1.33 ) }
    dend_44 { pt3dadd( -69.5057, 124.133, -107.775, 0.88 ) }
    dend_44 { pt3dadd( -70.7249, 125.194, -108.293, 0.22 ) }
    dend_44 { pt3dadd( -70.9391, 125.371, -108.356, 0.22 ) }
    dend_44 { pt3dadd( -71.2103, 125.574, -108.436, 0.22 ) }
    dend_44 { pt3dadd( -71.3207, 125.616, -108.53, 0.22 ) }
    dend_44 { pt3dadd( -71.8951, 125.749, -109.125, 0.81 ) }
    dend_44 { pt3dadd( -72.323, 125.799, -109.6, 1.4 ) }
    dend_44 { pt3dadd( -72.6458, 125.808, -109.966, 1.84 ) }
    dend_44 { pt3dadd( -73.1739, 125.81, -110.556, 1.92 ) }
    dend_44 { pt3dadd( -76.6984, 125.67, -115.093, 0.37 ) }
    dend_44 { pt3dadd( -76.8497, 125.659, -115.294, 0.59 ) }
    dend_44 { pt3dadd( -77.2037, 125.623, -115.782, 0.44 ) }
    dend_44 { pt3dadd( -77.439, 125.595, -116.124, 0.66 ) }
    dend_44 { pt3dadd( -77.7498, 125.551, -116.594, 1.25 ) }
    dend_44 { pt3dadd( -80.8708, 125.103, -121.472, 1.25 ) }
    dend_44 { pt3dadd( -81.1827, 125.073, -121.952, 1.25 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 62/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -57.6983, 33.0502, -4.99365, 0.22 ) }
    dend_37 { pt3dadd( -60.0082, 32.1839, -5.1176, 0.22 ) }
    dend_37 { pt3dadd( -61.3946, 31.6566, -5.16339, 0.74 ) }
    dend_37 { pt3dadd( -62.0695, 31.3749, -5.13393, 0.74 ) }
    dend_37 { pt3dadd( -63.0982, 30.9321, -5.10738, 0.29 ) }
    dend_37 { pt3dadd( -64.2818, 30.4174, -5.08772, 1.03 ) }
    dend_37 { pt3dadd( -65.181, 30.0166, -5.07846, 0.59 ) }
    dend_37 { pt3dadd( -65.6431, 29.7957, -5.05901, 0.44 ) }
    dend_37 { pt3dadd( -67.0722, 29.1029, -5.01206, 0.22 ) }
    dend_37 { pt3dadd( -68.2785, 28.5063, -5.02476, 0.59 ) }
    dend_37 { pt3dadd( -68.5016, 28.4053, -5.03489, 0.59 ) }
    dend_37 { pt3dadd( -68.7482, 28.3046, -5.05465, 0.59 ) }
    dend_37 { pt3dadd( -69.4745, 28.0158, -5.11914, 0.37 ) }
    dend_37 { pt3dadd( -70.4068, 27.6893, -5.13113, 0.15 ) }
    dend_37 { pt3dadd( -71.643, 27.2688, -5.09743, 0.22 ) }
    dend_37 { pt3dadd( -72.8672, 26.8304, -4.97627, 0.22 ) }
    dend_37 { pt3dadd( -73.4216, 26.6299, -4.90994, 0.81 ) }
    dend_37 { pt3dadd( -74.0073, 26.4229, -4.82255, 0.81 ) }
    dend_37 { pt3dadd( -76.2347, 25.6506, -4.43542, 0.29 ) }
    dend_37 { pt3dadd( -76.7633, 25.473, -4.34763, 1.03 ) }
    dend_37 { pt3dadd( -77.329, 25.2965, -4.23227, 1.4 ) }
    dend_37 { pt3dadd( -77.875, 25.1417, -4.13006, 1.11 ) }
    dend_37 { pt3dadd( -79.6938, 24.6714, -3.81955, 0.29 ) }
    dend_37 { pt3dadd( -80.7736, 24.4112, -3.65232, 0.29 ) }
    dend_37 { pt3dadd( -81.2599, 24.2939, -3.5877, 0.74 ) }
    dend_37 { pt3dadd( -81.767, 24.175, -3.52373, 0.52 ) }
    dend_37 { pt3dadd( -83.787, 23.6773, -3.33364, 0.29 ) }
    dend_37 { pt3dadd( -85.0743, 23.3514, -3.25039, 0.29 ) }
    dend_37 { pt3dadd( -85.3552, 23.2777, -3.24097, 0.66 ) }
    dend_37 { pt3dadd( -86.0242, 23.0911, -3.22863, 1.47 ) }
    dend_37 { pt3dadd( -86.7304, 22.9002, -3.23032, 1.47 ) }
    dend_37 { pt3dadd( -88.2859, 22.497, -3.26006, 0.22 ) }
    dend_37 { pt3dadd( -88.5258, 22.4433, -3.26594, 0.59 ) }
    dend_37 { pt3dadd( -89.0158, 22.3251, -3.28053, 0.59 ) }
    dend_37 { pt3dadd( -89.3613, 22.2375, -3.27909, 0.52 ) }
    dend_37 { pt3dadd( -90.3354, 21.9838, -3.24896, 0.37 ) }
    dend_37 { pt3dadd( -91.0611, 21.7839, -3.20679, 0.37 ) }
    dend_37 { pt3dadd( -91.5814, 21.6344, -3.1591, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_37 { pt3dadd( -93.1977, 21.1432, -3.04166, 0.29 ) }
    dend_37 { pt3dadd( -94.9015, 20.6127, -2.93519, 0.29 ) }
    dend_37 { pt3dadd( -95.4359, 20.4475, -2.90381, 0.44 ) }
    dend_37 { pt3dadd( -96.0655, 20.2484, -2.87029, 1.03 ) }
    dend_37 { pt3dadd( -96.6301, 20.0971, -2.8488, 1.11 ) }
    dend_37 { pt3dadd( -98.0107, 19.828, -2.90119, 0.37 ) }
    dend_37 { pt3dadd( -98.5815, 19.7578, -2.96486, 0.74 ) }
    dend_37 { pt3dadd( -98.9746, 19.713, -3.03469, 0.44 ) }
    dend_37 { pt3dadd( -99.3343, 19.6786, -3.10681, 0.44 ) }
    dend_37 { pt3dadd( -100.223, 19.6428, -3.36737, 0.22 ) }
    dend_37 { pt3dadd( -102.102, 19.6367, -4.04066, 0.22 ) }
    dend_37 { pt3dadd( -102.573, 19.6576, -4.22267, 1.11 ) }
    dend_37 { pt3dadd( -103.158, 19.6928, -4.45543, 1.03 ) }
    dend_37 { pt3dadd( -103.479, 19.7179, -4.59298, 1.03 ) }
    dend_37 { pt3dadd( -105.553, 19.8946, -5.50113, 0.22 ) }
    dend_37 { pt3dadd( -107.109, 20.0671, -6.17397, 0.22 ) }
    dend_37 { pt3dadd( -107.582, 20.1527, -6.36229, 0.88 ) }
    dend_37 { pt3dadd( -108.118, 20.277, -6.56778, 0.88 ) }
    dend_37 { pt3dadd( -109.064, 20.5613, -6.88793, 0.66 ) }
    dend_37 { pt3dadd( -109.759, 20.8203, -7.09271, 0.29 ) }
    dend_37 { pt3dadd( -110.525, 21.2099, -7.23538, 0.29 ) }
    dend_37 { pt3dadd( -110.793, 21.3915, -7.31613, 0.29 ) }
    dend_37 { pt3dadd( -111.196, 21.6969, -7.47533, 0.74 ) }
    dend_37 { pt3dadd( -111.833, 22.2422, -7.7656, 1.03 ) }
    dend_37 { pt3dadd( -112.459, 22.8533, -8.07268, 0.44 ) }
    dend_37 { pt3dadd( -112.612, 23.0228, -8.15846, 0.44 ) }
    dend_37 { pt3dadd( -113.673, 24.2255, -8.85665, 0.29 ) }
    dend_37 { pt3dadd( -114.019, 24.6208, -9.10751, 0.29 ) }
    dend_37 { pt3dadd( -114.186, 24.81, -9.24136, 0.44 ) }
    dend_37 { pt3dadd( -114.7, 25.3937, -9.68226, 0.22 ) }
    dend_37 { pt3dadd( -115.049, 25.7897, -9.93327, 0.66 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 31/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -57.6983, 33.0502, -4.99365, 0.52 ) }
    dend_36 { pt3dadd( -58.8272, 33.9746, -4.85126, 0.52 ) }
    dend_36 { pt3dadd( -59.9151, 34.8468, -4.69456, 0.52 ) }
    dend_36 { pt3dadd( -60.5501, 35.2722, -4.46921, 0.22 ) }
    dend_36 { pt3dadd( -60.8357, 35.436, -4.23427, 0.59 ) }
    dend_36 { pt3dadd( -61.1754, 35.6265, -3.89607, 0.96 ) }
    dend_36 { pt3dadd( -61.4464, 35.7793, -3.60973, 0.88 ) }
    dend_36 { pt3dadd( -61.8394, 35.982, -3.10134, 0.81 ) }
    dend_36 { pt3dadd( -63.0896, 36.6287, -1.39303, 0.29 ) }
    dend_36 { pt3dadd( -64.6707, 37.4651, 0.729522, 0.52 ) }
    dend_36 { pt3dadd( -65.0117, 37.6415, 1.20955, 0.96 ) }
    dend_36 { pt3dadd( -65.2961, 37.7971, 1.62541, 0.96 ) }
    dend_36 { pt3dadd( -65.7179, 38.034, 2.24771, 0.44 ) }
    dend_36 { pt3dadd( -66.3569, 38.4989, 3.51344, 0.37 ) }
    dend_36 { pt3dadd( -66.5505, 38.6885, 3.98645, 0.37 ) }
    dend_36 { pt3dadd( -67.3553, 39.4407, 5.48179, 0.88 ) }
    dend_36 { pt3dadd( -67.6255, 39.6728, 5.94341, 1.33 ) }
    dend_36 { pt3dadd( -67.6808, 39.7169, 6.02855, 1.33 ) }
    dend_36 { pt3dadd( -69.4266, 40.9684, 8.68235, 0.59 ) }
    dend_36 { pt3dadd( -69.8424, 41.2519, 9.24675, 0.52 ) }
    dend_36 { pt3dadd( -71.6352, 42.3122, 11.0835, 0.22 ) }
    dend_36 { pt3dadd( -71.9229, 42.4567, 11.341, 0.74 ) }
    dend_36 { pt3dadd( -72.3058, 42.6137, 11.6535, 0.74 ) }
    dend_36 { pt3dadd( -73.9774, 43.2288, 12.6974, 0.74 ) }
    dend_36 { pt3dadd( -75.1873, 43.6108, 13.2236, 0.29 ) }
    dend_36 { pt3dadd( -75.8201, 43.7976, 13.5333, 1.11 ) }
    dend_36 { pt3dadd( -77.9527, 44.427, 14.6597, 0.96 ) }
    dend_36 { pt3dadd( -78.7195, 44.685, 15.0092, 0.74 ) }
    dend_36 { pt3dadd( -80.3679, 45.291, 15.644, 0.22 ) }
    dend_36 { pt3dadd( -80.6901, 45.4245, 15.7904, 0.74 ) }
    dend_36 { pt3dadd( -81.0003, 45.5538, 15.9431, 0.74 ) }
    dend_36 { pt3dadd( -83.2905, 46.576, 17.0178, 0.29 ) }
    dend_36 { pt3dadd( -83.7851, 46.8161, 17.2191, 1.11 ) }
    dend_36 { pt3dadd( -84.1096, 46.9834, 17.4012, 1.11 ) }
    dend_36 { pt3dadd( -86.562, 48.2648, 19.2948, 0.44 ) }
    dend_36 { pt3dadd( -95.2463, 51.215, 25.5764, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 67/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -68.3178, 46.5442, 12.8441, 0.29 ) }
    dend_34 { pt3dadd( -76.2577, 49.3194, 16.2237, 0.29 ) }
    dend_34 { pt3dadd( -83.7473, 51.9339, 20.6026, 0.29 ) }
    dend_34 { pt3dadd( -91.1126, 56.0117, 23.89, 0.29 ) }
    dend_34 { pt3dadd( -97.8109, 60.5884, 27.8297, 0.29 ) }
    dend_34 { pt3dadd( -104.96, 64.2534, 31.9772, 0.29 ) }
    dend_34 { pt3dadd( -111.267, 67.8353, 37.3584, 0.29 ) }
    dend_34 { pt3dadd( -116.131, 71.0632, 44.2429, 0.29 ) }
    dend_34 { pt3dadd( -120.051, 74.7445, 51.4701, 0.29 ) }
    dend_34 { pt3dadd( -123.15, 77.8627, 59.3422, 0.29 ) }
    dend_34 { pt3dadd( -124.719, 79.8643, 68.0131, 0.29 ) }
    dend_34 { pt3dadd( -125.63, 82.0658, 76.7227, 0.29 ) }
    dend_34 { pt3dadd( -127.321, 84.6583, 85.198, 0.29 ) }
    dend_34 { pt3dadd( -129.66, 87.3349, 93.492, 0.29 ) }
    dend_34 { pt3dadd( -131.438, 89.5517, 102.066, 0.29 ) }
    dend_34 { pt3dadd( -132.788, 92.586, 110.442, 0.29 ) }
    dend_34 { pt3dadd( -135.498, 96.0878, 118.283, 0.29 ) }
    dend_34 { pt3dadd( -138.537, 98.5159, 126.435, 0.29 ) }
    dend_34 { pt3dadd( -142.65, 101.98, 133.67, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -68.3178, 46.5442, 12.8441, 0.52 ) }
    dend_33 { pt3dadd( -73.5747, 49.5524, 16.2355, 0.29 ) }
    dend_33 { pt3dadd( -79.1422, 51.7306, 19.7962, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 89/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -26.7312, 112.773, -116.093, 0.22 ) }
    dend_21 { pt3dadd( -26.1211, 114.31, -120.856, 0.22 ) }
    dend_21 { pt3dadd( -26.0059, 114.6, -121.755, 1.55 ) }
    dend_21 { pt3dadd( -25.7711, 115.191, -123.588, 0.29 ) }
    dend_21 { pt3dadd( -25.7221, 115.315, -123.971, 0.29 ) }
    dend_21 { pt3dadd( -25.6982, 115.375, -124.158, 0.29 ) }
    dend_21 { pt3dadd( -25.5754, 115.685, -125.116, 1.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 96/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -26.7312, 112.773, -116.093, 0.29 ) }
    dend_20 { pt3dadd( -27.6982, 112.416, -115.624, 0.29 ) }
    dend_20 { pt3dadd( -28.0633, 112.316, -115.295, 0.22 ) }
    dend_20 { pt3dadd( -28.2272, 112.278, -115.105, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_20 { pt3dadd( -29.0454, 112.089, -114.081, 1.11 ) }
    dend_20 { pt3dadd( -30.05, 111.864, -112.784, 0.29 ) }
    dend_20 { pt3dadd( -30.3313, 111.801, -112.423, 0.29 ) }
    dend_20 { pt3dadd( -31.8508, 111.423, -110.254, 0.29 ) }
    dend_20 { pt3dadd( -32.4834, 111.264, -109.272, 0.22 ) }
    dend_20 { pt3dadd( -32.5726, 111.243, -109.13, 0.22 ) }
    dend_20 { pt3dadd( -32.6153, 111.234, -109.051, 0.22 ) }
    dend_20 { pt3dadd( -32.8001, 111.206, -108.661, 0.37 ) }
    dend_20 { pt3dadd( -32.8743, 111.189, -108.505, 0.37 ) }
    dend_20 { pt3dadd( -34.0164, 110.786, -106.55, 0.22 ) }
    dend_20 { pt3dadd( -34.2112, 110.718, -106.2, 0.52 ) }
    dend_20 { pt3dadd( -35.0724, 110.422, -104.558, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -26.1522, 124.523, -3.98758, 0.44 ) }
    dend_18 { pt3dadd( -26.7814, 126.14, -5.10537, 0.44 ) }
    dend_18 { pt3dadd( -26.913, 126.503, -5.28696, 0.44 ) }
    dend_18 { pt3dadd( -26.9855, 126.72, -5.37078, 0.44 ) }
    dend_18 { pt3dadd( -27.2391, 127.511, -5.63202, 0.52 ) }
    dend_18 { pt3dadd( -27.4429, 128.083, -5.80508, 0.44 ) }
    dend_18 { pt3dadd( -27.7039, 128.725, -5.98161, 0.22 ) }
    dend_18 { pt3dadd( -27.8353, 129.049, -6.03322, 0.22 ) }
    dend_18 { pt3dadd( -28.0693, 129.437, -6.10511, 0.66 ) }
    dend_18 { pt3dadd( -28.1744, 129.555, -6.14986, 0.66 ) }
    dend_18 { pt3dadd( -28.7884, 129.975, -6.46861, 0.22 ) }
    dend_18 { pt3dadd( -29.1123, 130.142, -6.63789, 0.22 ) }
    dend_18 { pt3dadd( -29.7981, 130.452, -7.00105, 0.81 ) }
    dend_18 { pt3dadd( -30.4057, 130.7, -7.31558, 0.96 ) }
    dend_18 { pt3dadd( -31.5918, 131.15, -7.9012, 0.59 ) }
    dend_18 { pt3dadd( -32.4821, 131.489, -8.3095, 0.22 ) }
    dend_18 { pt3dadd( -33.3541, 131.805, -8.7088, 0.22 ) }
    dend_18 { pt3dadd( -33.5953, 131.895, -8.81823, 0.52 ) }
    dend_18 { pt3dadd( -33.7429, 131.954, -8.87627, 0.52 ) }
    dend_18 { pt3dadd( -34.3222, 132.221, -9.09014, 0.22 ) }
    dend_18 { pt3dadd( -34.7885, 132.488, -9.12915, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -26.1522, 124.523, -3.98758, 0.59 ) }
    dend_15 { pt3dadd( -24.2924, 125.078, -5.62456, 0.59 ) }
    dend_15 { pt3dadd( -23.8391, 125.234, -6.03926, 0.59 ) }
    dend_15 { pt3dadd( -23.3247, 125.464, -6.6215, 0.59 ) }
    dend_15 { pt3dadd( -22.8317, 125.736, -7.22848, 0.59 ) }
    dend_15 { pt3dadd( -22.0459, 126.251, -8.19459, 0.37 ) }
    dend_15 { pt3dadd( -21.8228, 126.419, -8.49291, 0.74 ) }
    dend_15 { pt3dadd( -21.4146, 126.852, -9.06107, 0.74 ) }
    dend_15 { pt3dadd( -20.7636, 127.711, -10.0415, 0.74 ) }
    dend_15 { pt3dadd( -20.486, 128.187, -10.5211, 0.6 ) }
    dend_15 { pt3dadd( -20.0907, 128.977, -11.2526, 0.52 ) }
    dend_15 { pt3dadd( -19.7267, 129.88, -12.0194, 0.3 ) }
    dend_15 { pt3dadd( -19.3028, 130.955, -12.8739, 0.81 ) }
    dend_15 { pt3dadd( -19.0069, 131.679, -13.4067, 1.25 ) }
    dend_15 { pt3dadd( -18.0532, 133.764, -14.8156, 0.29 ) }
    dend_15 { pt3dadd( -17.85, 134.194, -15.1038, 0.52 ) }
    dend_15 { pt3dadd( -17.4107, 135.013, -15.5369, 0.44 ) }
    dend_15 { pt3dadd( -16.7326, 136.062, -16.0062, 0.44 ) }
    dend_15 { pt3dadd( -16.3924, 136.488, -16.1828, 1.33 ) }
    dend_15 { pt3dadd( -15.2888, 137.594, -16.5652, 0.52 ) }
    dend_15 { pt3dadd( -14.9488, 137.898, -16.619, 0.88 ) }
    dend_15 { pt3dadd( -12.683, 139.988, -16.8509, 0.59 ) }
    dend_15 { pt3dadd( -11.4031, 141.273, -16.8636, 0.44 ) }
    dend_15 { pt3dadd( -11.0385, 141.753, -16.8325, 0.59 ) }
    dend_15 { pt3dadd( -10.8376, 142.253, -16.7486, 0.59 ) }
    dend_15 { pt3dadd( -10.9598, 143.645, -16.402, 0.29 ) }
    dend_15 { pt3dadd( -11.0693, 144.301, -16.0643, 0.29 ) }
    dend_15 { pt3dadd( -11.1907, 144.784, -15.7801, 0.29 ) }
    dend_15 { pt3dadd( -11.2221, 144.924, -15.6867, 0.29 ) }
    dend_15 { pt3dadd( -11.4355, 145.91, -15.0022, 1.33 ) }
    dend_15 { pt3dadd( -11.5633, 146.607, -14.5295, 1.33 ) }
    dend_15 { pt3dadd( -11.792, 148.699, -13.2155, 0.37 ) }
    dend_15 { pt3dadd( -11.8848, 149.488, -12.7843, 0.37 ) }
    dend_15 { pt3dadd( -11.9349, 149.854, -12.6067, 0.88 ) }
    dend_15 { pt3dadd( -12.023, 150.406, -12.3781, 1.03 ) }
    dend_15 { pt3dadd( -12.2636, 151.561, -12.0077, 0.44 ) }
    dend_15 { pt3dadd( -12.4164, 152.209, -11.893, 1.18 ) }
    dend_15 { pt3dadd( -12.6841, 153.293, -11.8762, 1.4 ) }
    dend_15 { pt3dadd( -12.9662, 154.605, -11.912, 0.44 ) }
    dend_15 { pt3dadd( -13.0379, 154.97, -11.9372, 0.44 ) }
    dend_15 { pt3dadd( -13.2066, 155.975, -12.0504, 1.25 ) }
    dend_15 { pt3dadd( -13.3988, 157.502, -12.2951, 0.37 ) }
    dend_15 { pt3dadd( -13.5224, 158.618, -12.5712, 0.37 ) }
    dend_15 { pt3dadd( -13.5668, 159.096, -12.7734, 0.37 ) }
    dend_15 { pt3dadd( -13.6211, 159.72, -13.1092, 1.25 ) }
    dend_15 { pt3dadd( -13.6822, 160.323, -13.4444, 1.25 ) }
    dend_15 { pt3dadd( -13.7783, 161.236, -13.9575, 1.25 ) }
    dend_15 { pt3dadd( -13.8849, 162.168, -14.4738, 1.25 ) }
    dend_15 { pt3dadd( -14.1049, 164.267, -15.6907, 0.44 ) }
    dend_15 { pt3dadd( -14.1847, 165.026, -16.1879, 0.44 ) }
    dend_15 { pt3dadd( -14.2818, 165.803, -16.7641, 0.44 ) }
    dend_15 { pt3dadd( -14.3561, 166.217, -17.0929, 0.44 ) }
    dend_15 { pt3dadd( -14.4527, 166.825, -17.6027, 1.18 ) }
    dend_15 { pt3dadd( -14.5267, 167.475, -18.1294, 0.88 ) }
    dend_15 { pt3dadd( -14.6507, 169.022, -19.4153, 0.88 ) }
    dend_15 { pt3dadd( -14.6927, 169.819, -20.1207, 0.74 ) }
    dend_15 { pt3dadd( -14.7021, 170.225, -20.4871, 0.74 ) }
    dend_15 { pt3dadd( -14.7459, 171.386, -21.4523, 0.52 ) }
    dend_15 { pt3dadd( -14.7691, 171.961, -21.8468, 0.52 ) }
    dend_15 { pt3dadd( -14.7707, 172.413, -22.0989, 0.96 ) }
    dend_15 { pt3dadd( -14.7585, 172.569, -22.1597, 0.96 ) }
    dend_15 { pt3dadd( -14.6665, 173.438, -22.4168, 0.44 ) }
    dend_15 { pt3dadd( -14.5238, 174.133, -22.6131, 0.81 ) }
    dend_15 { pt3dadd( -14.3968, 174.646, -22.755, 0.44 ) }
    dend_15 { pt3dadd( -13.9233, 176.011, -23.1556, 0.22 ) }
    dend_15 { pt3dadd( -13.7523, 176.411, -23.2466, 0.74 ) }
    dend_15 { pt3dadd( -13.272, 177.44, -23.4684, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_15 { pt3dadd( -12.3965, 179.082, -23.7875, 0.44 ) }
    dend_15 { pt3dadd( -12.0225, 179.717, -23.9121, 1.69 ) }
    dend_15 { pt3dadd( -11.4654, 180.597, -24.0775, 1.69 ) }
    dend_15 { pt3dadd( -10.6787, 181.701, -24.1759, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 4/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 30.9157, 85.0178, -16.2198, 0.29 ) }
    dend_10 { pt3dadd( 31.4593, 87.4714, -15.7302, 0.29 ) }
    dend_10 { pt3dadd( 31.6076, 88.1322, -15.6381, 0.66 ) }
    dend_10 { pt3dadd( 31.7103, 88.5708, -15.5974, 1.03 ) }
    dend_10 { pt3dadd( 31.7805, 88.8223, -15.5731, 1.03 ) }
    dend_10 { pt3dadd( 32.3648, 90.704, -15.409, 0.44 ) }
    dend_10 { pt3dadd( 32.5959, 91.3797, -15.3644, 0.44 ) }
    dend_10 { pt3dadd( 32.8599, 92.0562, -15.3879, 0.59 ) }
    dend_10 { pt3dadd( 33.0752, 92.5346, -15.4102, 0.59 ) }
    dend_10 { pt3dadd( 33.7199, 93.8592, -15.5071, 0.29 ) }
    dend_10 { pt3dadd( 33.8864, 94.1754, -15.5403, 0.66 ) }
    dend_10 { pt3dadd( 34.2214, 94.6864, -15.6482, 1.03 ) }
    dend_10 { pt3dadd( 34.3926, 94.9245, -15.7269, 1.4 ) }
    dend_10 { pt3dadd( 34.8057, 95.4737, -15.9428, 1.03 ) }
    dend_10 { pt3dadd( 35.1995, 95.9897, -16.1962, 0.96 ) }
    dend_10 { pt3dadd( 35.1995, 95.9897, -16.1962, 1.03 ) }
    dend_10 { pt3dadd( 35.6594, 96.608, -16.6383, 1.03 ) }
    dend_10 { pt3dadd( 36.2595, 97.4155, -17.2356, 0.81 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 22/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 30.9157, 85.0178, -16.2198, 0.44 ) }
    dend_9 { pt3dadd( 31.995, 85.9621, -16.8559, 0.44 ) }
    dend_9 { pt3dadd( 32.4264, 86.2864, -17.1272, 0.52 ) }
    dend_9 { pt3dadd( 32.8555, 86.577, -17.3993, 0.88 ) }
    dend_9 { pt3dadd( 33.1376, 86.7618, -17.5786, 0.96 ) }
    dend_9 { pt3dadd( 33.3002, 86.8651, -17.6738, 0.88 ) }
    dend_9 { pt3dadd( 34.8756, 87.8536, -18.5518, 0.44 ) }
    dend_9 { pt3dadd( 35.6787, 88.3513, -18.9953, 0.44 ) }
    dend_9 { pt3dadd( 36.4095, 88.8118, -19.3947, 0.44 ) }
    dend_9 { pt3dadd( 36.7842, 89.0565, -19.5928, 0.44 ) }
    dend_9 { pt3dadd( 37.461, 89.5144, -19.9489, 0.66 ) }
    dend_9 { pt3dadd( 37.9976, 89.899, -20.2256, 1.03 ) }
    dend_9 { pt3dadd( 38.637, 90.4135, -20.5422, 0.96 ) }
    dend_9 { pt3dadd( 39.0241, 90.7791, -20.7961, 0.66 ) }
    dend_9 { pt3dadd( 39.6465, 91.4307, -21.3136, 0.44 ) }
    dend_9 { pt3dadd( 40.1197, 91.9557, -21.7911, 0.44 ) }
    dend_9 { pt3dadd( 40.369, 92.2507, -22.0946, 0.88 ) }
    dend_9 { pt3dadd( 40.5342, 92.4541, -22.3139, 0.88 ) }
    dend_9 { pt3dadd( 41.3273, 93.4617, -23.4024, 0.37 ) }
    dend_9 { pt3dadd( 41.5066, 93.6976, -23.6458, 0.37 ) }
    dend_9 { pt3dadd( 41.7161, 93.9739, -23.9111, 0.66 ) }
    dend_9 { pt3dadd( 42.0276, 94.3975, -24.1909, 0.96 ) }
    dend_9 { pt3dadd( 42.326, 94.8156, -24.3864, 0.88 ) }
    dend_9 { pt3dadd( 42.9304, 95.627, -24.6978, 0.44 ) }
    dend_9 { pt3dadd( 43.3368, 96.148, -24.829, 0.59 ) }
    dend_9 { pt3dadd( 43.814, 96.789, -24.9643, 0.59 ) }
    dend_9 { pt3dadd( 44.9019, 98.2968, -25.2114, 0.52 ) }
    dend_9 { pt3dadd( 45.326, 98.8994, -25.2729, 1.0 ) }
    dend_9 { pt3dadd( 50.0878, 106.216, -30.6281, 1.0 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.9508, 106.88, -31.2084, 0.29 ) }
    dend_7 { pt3dadd( 12.2252, 109.484, -29.6587, 0.29 ) }
    dend_7 { pt3dadd( 12.5255, 109.849, -29.4685, 0.29 ) }
    dend_7 { pt3dadd( 13.0429, 110.512, -29.1584, 0.22 ) }
    dend_7 { pt3dadd( 13.4699, 111.076, -28.9122, 0.22 ) }
    dend_7 { pt3dadd( 13.728, 111.447, -28.7581, 0.22 ) }
    dend_7 { pt3dadd( 13.9783, 111.821, -28.618, 0.44 ) }
    dend_7 { pt3dadd( 14.2263, 112.229, -28.5536, 0.52 ) }
    dend_7 { pt3dadd( 14.3031, 112.388, -28.5248, 0.52 ) }
    dend_7 { pt3dadd( 14.3357, 112.47, -28.5118, 0.52 ) }
    dend_7 { pt3dadd( 14.7042, 113.49, -28.1567, 0.07 ) }
    dend_7 { pt3dadd( 14.9458, 114.138, -27.8483, 0.07 ) }
    dend_7 { pt3dadd( 15.1536, 114.668, -27.5541, 0.37 ) }
    dend_7 { pt3dadd( 15.3903, 115.233, -27.2017, 0.52 ) }
    dend_7 { pt3dadd( 15.63, 115.827, -26.8326, 0.52 ) }
    dend_7 { pt3dadd( 16.1839, 117.262, -25.9706, 0.88 ) }
    dend_7 { pt3dadd( 16.2985, 117.583, -25.7823, 0.88 ) }
    dend_7 { pt3dadd( 16.356, 117.761, -25.6874, 0.88 ) }
    dend_7 { pt3dadd( 16.7314, 118.885, -25.1812, 0.22 ) }
    dend_7 { pt3dadd( 16.9516, 119.48, -24.9568, 0.22 ) }
    dend_7 { pt3dadd( 17.0749, 119.781, -24.8564, 0.44 ) }
    dend_7 { pt3dadd( 17.1884, 120.036, -24.7994, 0.44 ) }
    dend_7 { pt3dadd( 17.5136, 120.742, -24.6199, 0.37 ) }
    dend_7 { pt3dadd( 17.5989, 120.924, -24.5682, 0.37 ) }
    dend_7 { pt3dadd( 17.7681, 121.287, -24.4567, 0.37 ) }
    dend_7 { pt3dadd( 18.3977, 122.543, -23.9878, 0.44 ) }
    dend_7 { pt3dadd( 18.4861, 122.71, -23.9207, 0.74 ) }
    dend_7 { pt3dadd( 18.6501, 123.013, -23.788, 0.74 ) }
    dend_7 { pt3dadd( 18.6859, 123.075, -23.7621, 0.74 ) }
    dend_7 { pt3dadd( 18.7525, 123.199, -23.7311, 0.81 ) }
    dend_7 { pt3dadd( 19.0455, 123.712, -23.7045, 0.52 ) }
    dend_7 { pt3dadd( 19.2068, 123.969, -23.7714, 0.29 ) }
    dend_7 { pt3dadd( 19.3147, 124.122, -23.8123, 0.29 ) }
    dend_7 { pt3dadd( 19.8639, 124.938, -24.0297, 0.22 ) }
    dend_7 { pt3dadd( 20.2787, 125.552, -24.2006, 0.22 ) }
    dend_7 { pt3dadd( 20.6265, 126.063, -24.347, 0.59 ) }
    dend_7 { pt3dadd( 21.0506, 126.72, -24.5413, 0.74 ) }
    dend_7 { pt3dadd( 21.4591, 127.377, -24.7435, 0.81 ) }
    dend_7 { pt3dadd( 21.8127, 127.921, -24.9283, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 90/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.9508, 106.88, -31.2084, 0.74 ) }
    dend_4 { pt3dadd( 9.86772, 107.511, -31.4497, 0.74 ) }
    dend_4 { pt3dadd( 9.69273, 108.92, -31.9402, 0.29 ) }
    dend_4 { pt3dadd( 9.68888, 109.133, -32.0135, 0.22 ) }
    dend_4 { pt3dadd( 9.68286, 109.374, -32.1245, 0.22 ) }
    dend_4 { pt3dadd( 9.65949, 109.785, -32.3234, 0.22 ) }
    dend_4 { pt3dadd( 9.63654, 110.059, -32.4559, 0.22 ) }
    dend_4 { pt3dadd( 9.53205, 111.017, -32.9247, 0.96 ) }
    dend_4 { pt3dadd( 9.3609, 112.105, -33.448, 0.96 ) }
    dend_4 { pt3dadd( 9.14264, 113.206, -33.9871, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_4 { pt3dadd( 8.98037, 113.907, -34.3356, 0.22 ) }
    dend_4 { pt3dadd( 8.89672, 114.198, -34.4762, 0.15 ) }
    dend_4 { pt3dadd( 8.75509, 114.606, -34.6581, 0.15 ) }
    dend_4 { pt3dadd( 8.58828, 114.984, -34.7943, 0.15 ) }
    dend_4 { pt3dadd( 8.48871, 115.194, -34.845, 0.44 ) }
    dend_4 { pt3dadd( 8.44002, 115.34, -34.8652, 0.81 ) }
    dend_4 { pt3dadd( 8.34719, 115.831, -34.9694, 0.74 ) }
    dend_4 { pt3dadd( 8.33464, 116.051, -35.0249, 0.88 ) }
    dend_4 { pt3dadd( 8.35266, 116.348, -35.106, 0.81 ) }
    dend_4 { pt3dadd( 8.45871, 117.186, -35.3274, 0.15 ) }
    dend_4 { pt3dadd( 8.48718, 117.35, -35.373, 0.15 ) }
    dend_4 { pt3dadd( 8.60703, 117.888, -35.5292, 0.15 ) }
    dend_4 { pt3dadd( 8.75959, 118.353, -35.6178, 0.15 ) }
    dend_4 { pt3dadd( 9.01145, 119.0, -35.7043, 0.96 ) }
    dend_4 { pt3dadd( 9.035, 119.056, -35.7096, 0.96 ) }
    dend_4 { pt3dadd( 9.13348, 119.283, -35.7231, 1.11 ) }
    dend_4 { pt3dadd( 9.27361, 119.623, -35.7401, 1.18 ) }
    dend_4 { pt3dadd( 9.92224, 121.245, -35.8039, 0.22 ) }
    dend_4 { pt3dadd( 10.3068, 122.204, -35.8426, 0.22 ) }
    dend_4 { pt3dadd( 10.4189, 122.498, -35.8584, 0.22 ) }
    dend_4 { pt3dadd( 10.5982, 122.949, -35.9177, 0.29 ) }
    dend_4 { pt3dadd( 10.7951, 123.43, -36.0126, 0.29 ) }
    dend_4 { pt3dadd( 10.9895, 123.888, -36.1409, 0.88 ) }
    dend_4 { pt3dadd( 11.0716, 124.068, -36.2158, 1.33 ) }
    dend_4 { pt3dadd( 11.3246, 124.577, -36.4414, 1.33 ) }
    dend_4 { pt3dadd( 11.9848, 125.805, -37.0188, 0.22 ) }
    dend_4 { pt3dadd( 12.1507, 126.144, -37.1801, 0.44 ) }
    dend_4 { pt3dadd( 12.292, 126.456, -37.3293, 0.88 ) }
    dend_4 { pt3dadd( 12.4352, 126.812, -37.4954, 0.88 ) }
    dend_4 { pt3dadd( 12.6127, 127.314, -37.7118, 0.52 ) }
    dend_4 { pt3dadd( 12.6585, 127.463, -37.7701, 0.52 ) }
    dend_4 { pt3dadd( 12.8959, 128.602, -38.1373, 0.15 ) }
    dend_4 { pt3dadd( 12.9804, 129.005, -38.2726, 0.15 ) }
    dend_4 { pt3dadd( 12.9931, 129.07, -38.2989, 0.15 ) }
    dend_4 { pt3dadd( 13.1036, 129.594, -38.5485, 0.15 ) }
    dend_4 { pt3dadd( 13.1277, 129.693, -38.6033, 0.15 ) }
    dend_4 { pt3dadd( 13.2592, 130.145, -38.8743, 0.15 ) }
    dend_4 { pt3dadd( 13.3661, 130.422, -39.0916, 0.59 ) }
    dend_4 { pt3dadd( 13.6022, 131.049, -39.6137, 0.66 ) }
    dend_4 { pt3dadd( 13.7043, 131.318, -39.8462, 0.59 ) }
    dend_4 { pt3dadd( 13.7306, 131.388, -39.9072, 0.59 ) }
    dend_4 { pt3dadd( 13.8969, 131.815, -40.243, 0.52 ) }
    dend_4 { pt3dadd( 14.2753, 132.771, -40.9032, 0.15 ) }
    dend_4 { pt3dadd( 14.4783, 133.267, -41.1805, 0.15 ) }
    dend_4 { pt3dadd( 14.5063, 133.329, -41.2044, 0.15 ) }
    dend_4 { pt3dadd( 14.6783, 133.71, -41.3224, 0.15 ) }
    dend_4 { pt3dadd( 14.9131, 134.274, -41.4531, 0.88 ) }
    dend_4 { pt3dadd( 15.0526, 134.649, -41.5067, 1.18 ) }
    dend_4 { pt3dadd( 15.2612, 135.308, -41.5379, 0.74 ) }
    dend_4 { pt3dadd( 15.5416, 136.367, -41.566, 0.22 ) }
    dend_4 { pt3dadd( 15.6094, 136.657, -41.5731, 0.22 ) }
    dend_4 { pt3dadd( 15.7215, 137.202, -41.5899, 0.22 ) }
    dend_4 { pt3dadd( 15.8001, 137.638, -41.6114, 0.22 ) }
    dend_4 { pt3dadd( 15.8743, 138.078, -41.6373, 0.22 ) }
    dend_4 { pt3dadd( 15.9736, 138.707, -41.684, 0.37 ) }
    dend_4 { pt3dadd( 16.0077, 138.928, -41.7102, 0.59 ) }
    dend_4 { pt3dadd( 16.0936, 139.348, -41.7722, 0.59 ) }
    dend_4 { pt3dadd( 16.1194, 139.451, -41.7904, 0.44 ) }
    dend_4 { pt3dadd( 16.2858, 140.062, -41.9119, 0.29 ) }
    dend_4 { pt3dadd( 16.3767, 140.387, -41.9839, 0.29 ) }
    dend_4 { pt3dadd( 16.5678, 140.924, -42.1338, 0.15 ) }
    dend_4 { pt3dadd( 16.7432, 141.346, -42.2629, 0.15 ) }
    dend_4 { pt3dadd( 16.7778, 141.41, -42.2753, 0.15 ) }
    dend_4 { pt3dadd( 17.0749, 141.851, -42.332, 0.15 ) }
    dend_4 { pt3dadd( 17.4979, 142.385, -42.3708, 0.96 ) }
    dend_4 { pt3dadd( 18.0601, 143.014, -42.4019, 1.18 ) }
    dend_4 { pt3dadd( 18.2848, 143.24, -42.4065, 0.96 ) }
    dend_4 { pt3dadd( 19.3807, 144.294, -42.4087, 0.15 ) }
    dend_4 { pt3dadd( 19.7781, 144.68, -42.4339, 0.15 ) }
    dend_4 { pt3dadd( 19.9975, 144.901, -42.4542, 0.15 ) }
    dend_4 { pt3dadd( 20.2885, 145.195, -42.4753, 0.29 ) }
    dend_4 { pt3dadd( 20.2885, 145.195, -42.4753, 0.74 ) }
    dend_4 { pt3dadd( 20.555, 145.548, -42.574, 1.03 ) }
    dend_4 { pt3dadd( 20.8662, 146.164, -43.1003, 1.03 ) }
    dend_4 { pt3dadd( 20.9321, 146.354, -43.2741, 1.03 ) }
    // Section: dend_127, id: dend_127, parent: dend_125 (entry count 75/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( -8.27265, -58.2443, 20.2782, 0.37 ) }
    dend_127 { pt3dadd( -7.89422, -58.5299, 20.3536, 0.37 ) }
    dend_127 { pt3dadd( -7.43718, -58.8842, 20.4468, 0.37 ) }
    dend_127 { pt3dadd( -7.06086, -59.176, 20.5235, 0.37 ) }
    dend_127 { pt3dadd( -7.02554, -59.2034, 20.5307, 0.37 ) }
    dend_127 { pt3dadd( -6.76607, -59.4046, 20.5836, 0.74 ) }
    dend_127 { pt3dadd( -6.68176, -59.4699, 20.6008, 1.11 ) }
    dend_127 { pt3dadd( -6.46746, -59.6354, 20.6517, 1.11 ) }
    dend_127 { pt3dadd( 0.547588, -62.5173, 21.0451, 1.11 ) }
    dend_127 { pt3dadd( 7.51969, -65.406, 21.886, 1.11 ) }
    // Section: dend_126, id: dend_126, parent: dend_125 (entry count 85/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( -8.27265, -58.2443, 20.2782, 0.22 ) }
    dend_126 { pt3dadd( -8.6714, -57.8836, 18.4512, 0.22 ) }
    dend_126 { pt3dadd( -8.71968, -57.8213, 18.2104, 0.37 ) }
    dend_126 { pt3dadd( -8.76064, -57.7546, 17.9888, 0.52 ) }
    dend_126 { pt3dadd( -9.01056, -57.2359, 16.4862, 0.52 ) }
    dend_126 { pt3dadd( -9.04597, -57.1534, 16.2715, 0.74 ) }
    dend_126 { pt3dadd( -9.11808, -56.9855, 15.8344, 0.88 ) }
    dend_126 { pt3dadd( -9.17268, -56.7967, 15.5423, 1.03 ) }
    dend_126 { pt3dadd( -9.18452, -56.7309, 15.4489, 1.03 ) }
    dend_126 { pt3dadd( -9.19427, -56.586, 15.2659, 1.03 ) }
    dend_126 { pt3dadd( -9.16726, -56.4048, 15.1494, 1.03 ) }
    dend_126 { pt3dadd( -9.49965, -52.3054, 5.0885, 1.03 ) }
    dend_126 { pt3dadd( -7.90334, -48.4363, -4.95104, 1.03 ) }
    // Section: dend_115, id: dend_115, parent: dend_113 (entry count 98/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( 9.62243, -58.2622, 8.9125, 0.29 ) }
    dend_115 { pt3dadd( 10.2848, -58.8522, 9.45635, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_115 { pt3dadd( 10.968, -59.512, 10.0394, 0.44 ) }
    dend_115 { pt3dadd( 11.2357, -59.7787, 10.2687, 0.81 ) }
    dend_115 { pt3dadd( 11.3631, -59.9057, 10.3778, 0.81 ) }
    dend_115 { pt3dadd( 12.3115, -60.8503, 11.1899, 0.29 ) }
    dend_115 { pt3dadd( 12.5879, -61.1257, 11.4266, 0.29 ) }
    dend_115 { pt3dadd( 12.6208, -61.1664, 11.4661, 0.29 ) }
    dend_115 { pt3dadd( 12.6562, -61.2153, 11.5091, 0.66 ) }
    dend_115 { pt3dadd( 17.8477, -66.2479, 16.9044, 0.66 ) }
    dend_115 { pt3dadd( 21.9608, -70.9181, 23.4431, 0.66 ) }
    // Section: dend_114, id: dend_114, parent: dend_113 (entry count 9/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( 9.62243, -58.2622, 8.9125, 0.29 ) }
    dend_114 { pt3dadd( 9.18845, -59.8638, 8.69808, 0.29 ) }
    dend_114 { pt3dadd( 8.96999, -60.67, 8.59015, 0.29 ) }
    dend_114 { pt3dadd( 8.69774, -61.6747, 8.45563, 0.29 ) }
    dend_114 { pt3dadd( 8.59604, -62.05, 8.40539, 0.29 ) }
    dend_114 { pt3dadd( 2.51598, -75.32, 7.91556, 0.29 ) }
    dend_114 { pt3dadd( -1.12933, -89.2869, 9.91339, 0.29 ) }
    dend_114 { pt3dadd( -3.68667, -103.281, 13.0702, 0.29 ) }
    // Section: dend_105, id: dend_105, parent: dend_103 (entry count 17/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 163.462, -28.7752, -45.1149, 0.29 ) }
    dend_105 { pt3dadd( 164.704, -28.1864, -46.0582, 0.29 ) }
    dend_105 { pt3dadd( 165.481, -27.8092, -46.6443, 0.29 ) }
    dend_105 { pt3dadd( 165.771, -27.675, -46.8564, 0.66 ) }
    dend_105 { pt3dadd( 166.263, -27.4112, -47.104, 0.66 ) }
    dend_105 { pt3dadd( 167.37, -26.7152, -47.6097, 0.22 ) }
    dend_105 { pt3dadd( 168.245, -26.1045, -48.0044, 0.22 ) }
    dend_105 { pt3dadd( 168.742, -25.6708, -48.2412, 0.59 ) }
    dend_105 { pt3dadd( 168.923, -25.4864, -48.3292, 0.88 ) }
    dend_105 { pt3dadd( 170.543, -23.6591, -49.0032, 0.22 ) }
    dend_105 { pt3dadd( 171.228, -22.8597, -49.2537, 0.22 ) }
    dend_105 { pt3dadd( 171.471, -22.5737, -49.3207, 0.22 ) }
    dend_105 { pt3dadd( 171.791, -22.147, -49.4081, 0.81 ) }
    dend_105 { pt3dadd( 172.14, -21.6608, -49.516, 0.81 ) }
    dend_105 { pt3dadd( 173.333, -20.1035, -49.9624, 0.29 ) }
    dend_105 { pt3dadd( 173.781, -19.5961, -50.1555, 0.88 ) }
    dend_105 { pt3dadd( 174.52, -18.8845, -50.4342, 0.66 ) }
    dend_105 { pt3dadd( 174.897, -18.5464, -50.5643, 0.22 ) }
    dend_105 { pt3dadd( 175.272, -18.2306, -50.6845, 0.29 ) }
    dend_105 { pt3dadd( 176.221, -17.5326, -51.0034, 0.29 ) }
    dend_105 { pt3dadd( 176.815, -17.1628, -51.2766, 0.59 ) }
    dend_105 { pt3dadd( 177.162, -16.9551, -51.4478, 0.96 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 39/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 163.462, -28.7752, -45.1149, 0.29 ) }
    dend_104 { pt3dadd( 162.729, -28.7201, -44.916, 0.29 ) }
    dend_104 { pt3dadd( 161.982, -28.625, -44.7851, 0.29 ) }
    dend_104 { pt3dadd( 161.569, -28.5558, -44.7315, 0.29 ) }
    dend_104 { pt3dadd( 161.234, -28.5107, -44.6723, 0.29 ) }
    dend_104 { pt3dadd( 160.767, -28.4631, -44.5208, 0.81 ) }
    dend_104 { pt3dadd( 160.426, -28.4475, -44.3683, 0.22 ) }
    dend_104 { pt3dadd( 160.137, -28.4625, -44.1889, 0.37 ) }
    dend_104 { pt3dadd( 159.752, -28.4783, -43.9374, 0.22 ) }
    dend_104 { pt3dadd( 159.079, -28.5416, -43.414, 0.22 ) }
    dend_104 { pt3dadd( 158.391, -28.6822, -42.7318, 0.88 ) }
    dend_104 { pt3dadd( 158.114, -28.7784, -42.3716, 1.25 ) }
    dend_104 { pt3dadd( 157.995, -28.8363, -42.1798, 1.33 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 52/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 119.931, -113.602, -85.6366, 0.37 ) }
    dend_102 { pt3dadd( 120.83, -114.637, -87.8652, 0.37 ) }
    dend_102 { pt3dadd( 121.098, -114.948, -88.4733, 0.37 ) }
    dend_102 { pt3dadd( 121.274, -115.148, -88.8336, 0.96 ) }
    dend_102 { pt3dadd( 121.397, -115.279, -89.062, 1.18 ) }
    dend_102 { pt3dadd( 122.715, -116.577, -91.2942, 0.52 ) }
    dend_102 { pt3dadd( 123.022, -116.856, -91.7792, 0.52 ) }
    dend_102 { pt3dadd( 123.302, -117.048, -92.1288, 0.52 ) }
    dend_102 { pt3dadd( 123.708, -117.291, -92.6451, 0.29 ) }
    dend_102 { pt3dadd( 123.991, -117.429, -92.9849, 0.29 ) }
    dend_102 { pt3dadd( 124.213, -117.493, -93.2159, 0.96 ) }
    dend_102 { pt3dadd( 124.424, -117.492, -93.3675, 0.96 ) }
    dend_102 { pt3dadd( 125.084, -117.395, -94.0038, 0.22 ) }
    dend_102 { pt3dadd( 125.573, -117.286, -94.6977, 0.88 ) }
    dend_102 { pt3dadd( 125.604, -117.278, -94.756, 0.88 ) }
    dend_102 { pt3dadd( 125.8, -117.277, -95.3119, 1.25 ) }
    dend_102 { pt3dadd( 125.817, -117.281, -95.3662, 1.25 ) }
    dend_102 { pt3dadd( 126.083, -117.369, -96.2216, 1.25 ) }
    dend_102 { pt3dadd( 126.457, -117.533, -97.4249, 0.96 ) }
    dend_102 { pt3dadd( 126.477, -117.541, -97.4776, 0.96 ) }
    dend_102 { pt3dadd( 127.315, -117.839, -99.4164, 0.22 ) }
    dend_102 { pt3dadd( 127.544, -117.912, -99.8982, 0.59 ) }
    dend_102 { pt3dadd( 127.72, -117.959, -100.234, 0.59 ) }
    dend_102 { pt3dadd( 127.821, -117.98, -100.417, 0.96 ) }
    dend_102 { pt3dadd( 128.623, -118.084, -101.773, 0.22 ) }
    dend_102 { pt3dadd( 128.703, -118.089, -101.915, 0.22 ) }
    dend_102 { pt3dadd( 129.097, -118.079, -102.629, 0.66 ) }
    dend_102 { pt3dadd( 129.353, -118.071, -103.132, 1.18 ) }
    dend_102 { pt3dadd( 130.192, -117.973, -104.729, 0.22 ) }
    dend_102 { pt3dadd( 130.432, -117.918, -105.158, 0.96 ) }
    dend_102 { pt3dadd( 131.308, -117.699, -106.864, 0.22 ) }
    dend_102 { pt3dadd( 131.455, -117.678, -107.18, 0.81 ) }
    dend_102 { pt3dadd( 131.475, -117.688, -107.255, 0.81 ) }
    dend_102 { pt3dadd( 132.279, -115.509, -104.188, 0.37 ) }
    dend_102 { pt3dadd( 132.54, -114.997, -103.656, 0.88 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 87/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 119.931, -113.602, -85.6366, 0.29 ) }
    dend_101 { pt3dadd( 119.149, -115.395, -86.7467, 0.29 ) }
    dend_101 { pt3dadd( 118.959, -115.91, -87.0505, 0.29 ) }
    dend_101 { pt3dadd( 118.815, -116.337, -87.296, 0.66 ) }
    dend_101 { pt3dadd( 118.557, -117.188, -87.7616, 0.66 ) }
    dend_101 { pt3dadd( 117.805, -119.895, -89.1355, 0.44 ) }
    dend_101 { pt3dadd( 117.744, -120.141, -89.2487, 0.74 ) }
    dend_101 { pt3dadd( 117.63, -120.749, -89.5495, 0.29 ) }
    dend_101 { pt3dadd( 117.62, -120.801, -89.5773, 0.29 ) }
    dend_101 { pt3dadd( 117.552, -121.164, -89.7854, 0.96 ) }
    dend_101 { pt3dadd( 117.326, -122.388, -90.4916, 0.52 ) }
    dend_101 { pt3dadd( 117.232, -122.893, -90.779, 1.11 ) }
    dend_101 { pt3dadd( 116.656, -125.928, -92.4919, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_101 { pt3dadd( 116.623, -126.093, -92.5846, 1.03 ) }
    dend_101 { pt3dadd( 116.253, -128.08, -93.6538, 0.37 ) }
    dend_101 { pt3dadd( 116.236, -128.178, -93.7063, 0.37 ) }
    dend_101 { pt3dadd( 116.162, -128.715, -93.9765, 0.37 ) }
    dend_101 { pt3dadd( 116.062, -129.565, -94.3454, 0.37 ) }
    dend_101 { pt3dadd( 116.048, -129.747, -94.3952, 0.37 ) }
    dend_101 { pt3dadd( 116.013, -130.307, -94.5356, 0.37 ) }
    dend_101 { pt3dadd( 115.874, -131.801, -94.9708, 0.22 ) }
    dend_101 { pt3dadd( 115.826, -132.158, -95.0913, 0.52 ) }
    dend_101 { pt3dadd( 115.695, -132.862, -95.369, 0.37 ) }
    dend_101 { pt3dadd( 115.46, -133.938, -95.8401, 0.81 ) }
    dend_101 { pt3dadd( 115.362, -134.325, -96.0185, 0.81 ) }
    dend_101 { pt3dadd( 114.814, -136.307, -96.9736, 0.44 ) }
    dend_101 { pt3dadd( 114.664, -136.828, -97.2226, 0.59 ) }
    dend_101 { pt3dadd( 114.245, -138.358, -97.9462, 0.22 ) }
    dend_101 { pt3dadd( 114.245, -138.358, -97.9462, 0.74 ) }
    dend_101 { pt3dadd( 113.756, -140.689, -99.0011, 0.52 ) }
    dend_101 { pt3dadd( 113.52, -141.892, -99.5491, 0.96 ) }
    dend_101 { pt3dadd( 113.511, -141.947, -99.5732, 0.96 ) }
    dend_101 { pt3dadd( 113.364, -142.995, -100.081, 0.52 ) }
    dend_101 { pt3dadd( 113.294, -143.613, -100.389, 0.52 ) }
    dend_101 { pt3dadd( 113.122, -145.414, -101.298, 0.96 ) }
    dend_101 { pt3dadd( 113.114, -145.577, -101.383, 0.96 ) }
    dend_101 { pt3dadd( 113.098, -145.816, -101.515, 0.96 ) }
    dend_101 { pt3dadd( 112.931, -147.472, -102.507, 0.52 ) }
    dend_101 { pt3dadd( 112.91, -147.586, -102.588, 0.88 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 26/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -61.7427, -72.4845, 39.1196, 0.29 ) }
    dend_82 { pt3dadd( -69.885, -79.4854, 45.1944, 0.29 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 28/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -61.7427, -72.4845, 39.1196, 0.44 ) }
    dend_81 { pt3dadd( -70.0761, -78.8443, 43.7596, 0.29 ) }
    dend_81 { pt3dadd( -78.014, -83.7781, 50.4699, 0.29 ) }
    dend_81 { pt3dadd( -85.6877, -88.5603, 57.5924, 0.29 ) }
    dend_81 { pt3dadd( -92.7381, -92.8496, 65.6328, 0.29 ) }
    dend_81 { pt3dadd( -99.8196, -95.8792, 74.227, 0.29 ) }
    dend_81 { pt3dadd( -105.165, -98.0721, 84.2288, 0.29 ) }
    dend_81 { pt3dadd( -109.945, -98.3139, 94.7448, 0.29 ) }
    dend_81 { pt3dadd( -114.872, -98.2929, 105.195, 0.29 ) }
    dend_81 { pt3dadd( -121.112, -98.2353, 114.918, 0.29 ) }
    dend_81 { pt3dadd( -125.864, -99.5694, 125.365, 0.29 ) }
    dend_81 { pt3dadd( -132.667, -101.237, 134.552, 0.29 ) }
    dend_81 { pt3dadd( -138.944, -102.215, 144.204, 0.29 ) }
    dend_81 { pt3dadd( -146.032, -102.762, 153.313, 0.29 ) }
    dend_81 { pt3dadd( -155.438, -103.648, 159.963, 0.29 ) }
    dend_81 { pt3dadd( -163.678, -103.608, 168.062, 0.29 ) }
    dend_81 { pt3dadd( -172.445, -103.742, 175.588, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 45/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -73.2484, 36.3488, -104.989, 0.52 ) }
    dend_51 { pt3dadd( -73.4444, 35.0763, -109.386, 0.52 ) }
    dend_51 { pt3dadd( -73.4503, 35.011, -109.574, 0.52 ) }
    dend_51 { pt3dadd( -73.4547, 34.9162, -109.805, 0.52 ) }
    dend_51 { pt3dadd( -73.4564, 34.8043, -110.04, 0.59 ) }
    dend_51 { pt3dadd( -73.4563, 34.6661, -110.302, 0.66 ) }
    dend_51 { pt3dadd( -73.4605, 34.5412, -110.535, 0.66 ) }
    dend_51 { pt3dadd( -73.4847, 33.2558, -112.347, 0.29 ) }
    dend_51 { pt3dadd( -73.5007, 33.0105, -112.704, 0.29 ) }
    dend_51 { pt3dadd( -73.5285, 32.8239, -113.075, 0.44 ) }
    dend_51 { pt3dadd( -73.5383, 32.7699, -113.208, 0.66 ) }
    dend_51 { pt3dadd( -73.6442, 32.1182, -115.218, 0.52 ) }
    dend_51 { pt3dadd( -73.6466, 32.0998, -115.283, 0.81 ) }
    dend_51 { pt3dadd( -73.6503, 32.0121, -115.633, 0.81 ) }
    dend_51 { pt3dadd( -73.6218, 31.336, -118.769, 0.29 ) }
    dend_51 { pt3dadd( -73.6088, 31.2653, -119.155, 0.29 ) }
    dend_51 { pt3dadd( -73.5368, 31.1102, -120.193, 0.88 ) }
    dend_51 { pt3dadd( -73.4865, 31.0642, -120.614, 1.03 ) }
    dend_51 { pt3dadd( -73.4223, 31.0199, -121.121, 1.03 ) }
    dend_51 { pt3dadd( -73.4089, 31.0244, -121.49, 1.03 ) }
    dend_51 { pt3dadd( -73.4158, 31.04, -121.696, 1.03 ) }
    dend_51 { pt3dadd( -73.4458, 31.0808, -122.113, 1.03 ) }
    dend_51 { pt3dadd( -73.5105, 31.1383, -122.539, 1.03 ) }
    dend_51 { pt3dadd( -73.5336, 31.1587, -122.67, 1.03 ) }
    dend_51 { pt3dadd( -74.3093, 31.8014, -126.517, 0.66 ) }
    dend_51 { pt3dadd( -74.3235, 31.8122, -126.584, 0.66 ) }
    dend_51 { pt3dadd( -74.3556, 31.8373, -126.729, 0.74 ) }
    dend_51 { pt3dadd( -74.992, 32.359, -129.573, 0.15 ) }
    dend_51 { pt3dadd( -75.0343, 32.4015, -129.776, 0.15 ) }
    dend_51 { pt3dadd( -75.1789, 32.5604, -130.42, 0.52 ) }
    dend_51 { pt3dadd( -75.1975, 32.5836, -130.491, 0.52 ) }
    dend_51 { pt3dadd( -75.2686, 32.6775, -130.976, 0.59 ) }
    dend_51 { pt3dadd( -75.254, 32.6676, -131.093, 0.59 ) }
    dend_51 { pt3dadd( -75.0491, 32.4923, -131.361, 0.59 ) }
    dend_51 { pt3dadd( -74.8766, 32.3515, -131.562, 0.59 ) }
    dend_51 { pt3dadd( -73.9895, 31.6848, -132.45, 0.15 ) }
    dend_51 { pt3dadd( -73.7215, 31.4785, -132.741, 0.15 ) }
    dend_51 { pt3dadd( -73.532, 31.3344, -132.947, 0.74 ) }
    dend_51 { pt3dadd( -73.4242, 31.2553, -133.083, 1.11 ) }
    dend_51 { pt3dadd( -73.2643, 31.1455, -133.308, 1.11 ) }
    dend_51 { pt3dadd( -72.6119, 30.7666, -134.253, 0.29 ) }
    dend_51 { pt3dadd( -72.02, 30.4804, -135.113, 0.29 ) }
    dend_51 { pt3dadd( -71.8699, 30.4181, -135.354, 0.29 ) }
    dend_51 { pt3dadd( -71.2448, 30.1897, -136.431, 0.22 ) }
    dend_51 { pt3dadd( -71.1751, 30.1669, -136.556, 0.22 ) }
    dend_51 { pt3dadd( -71.0211, 30.1232, -136.854, 0.22 ) }
    dend_51 { pt3dadd( -70.989, 30.1191, -136.926, 0.22 ) }
    dend_51 { pt3dadd( -70.7658, 30.1149, -137.323, 0.66 ) }
    dend_51 { pt3dadd( -70.6925, 30.1118, -137.45, 0.66 ) }
    dend_51 { pt3dadd( -70.4571, 30.083, -137.634, 0.88 ) }
    dend_51 { pt3dadd( -70.4065, 30.0679, -137.675, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -73.2484, 36.3488, -104.989, 0.37 ) }
    dend_50 { pt3dadd( -74.366, 35.7425, -105.232, 0.37 ) }
    dend_50 { pt3dadd( -74.9841, 35.4189, -105.353, 0.22 ) }
    dend_50 { pt3dadd( -75.7391, 35.0257, -105.56, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_50 { pt3dadd( -76.2101, 34.7719, -105.709, 0.81 ) }
    dend_50 { pt3dadd( -77.5623, 33.9966, -106.181, 0.52 ) }
    dend_50 { pt3dadd( -78.0033, 33.7317, -106.344, 0.37 ) }
    dend_50 { pt3dadd( -78.448, 33.4258, -106.719, 0.37 ) }
    dend_50 { pt3dadd( -79.0787, 32.9485, -107.538, 0.37 ) }
    dend_50 { pt3dadd( -79.2091, 32.8408, -107.765, 0.66 ) }
    dend_50 { pt3dadd( -79.3593, 32.7087, -108.089, 0.81 ) }
    dend_50 { pt3dadd( -79.402, 32.6728, -108.204, 0.96 ) }
    dend_50 { pt3dadd( -80.8332, 31.7335, -111.799, 0.37 ) }
    dend_50 { pt3dadd( -80.9145, 31.6954, -111.972, 0.37 ) }
    dend_50 { pt3dadd( -80.9596, 31.6776, -112.062, 0.59 ) }
    dend_50 { pt3dadd( -81.0722, 31.6335, -112.278, 0.74 ) }
    dend_50 { pt3dadd( -82.2353, 31.1495, -114.421, 1.03 ) }
    dend_50 { pt3dadd( -82.6566, 30.9475, -115.176, 0.44 ) }
    dend_50 { pt3dadd( -83.1697, 30.6948, -116.017, 0.44 ) }
    dend_50 { pt3dadd( -85.0736, 29.6826, -119.282, 0.59 ) }
    dend_50 { pt3dadd( -85.3099, 29.5422, -119.709, 0.74 ) }
    dend_50 { pt3dadd( -85.5231, 29.3881, -120.127, 0.74 ) }
    dend_50 { pt3dadd( -85.6593, 29.2408, -120.451, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 19/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -81.1827, 125.073, -121.952, 0.22 ) }
    dend_46 { pt3dadd( -81.3886, 126.475, -121.788, 0.22 ) }
    dend_46 { pt3dadd( -81.4253, 126.634, -121.78, 0.22 ) }
    dend_46 { pt3dadd( -81.5298, 126.784, -122.014, 0.22 ) }
    dend_46 { pt3dadd( -81.5982, 126.897, -122.195, 0.22 ) }
    dend_46 { pt3dadd( -81.8232, 127.341, -122.838, 0.37 ) }
    dend_46 { pt3dadd( -81.8888, 127.485, -123.03, 0.66 ) }
    dend_46 { pt3dadd( -81.9086, 127.532, -123.096, 0.88 ) }
    dend_46 { pt3dadd( -82.6285, 129.551, -125.9, 0.29 ) }
    dend_46 { pt3dadd( -82.7177, 129.866, -126.334, 0.29 ) }
    dend_46 { pt3dadd( -82.8133, 130.257, -126.854, 0.44 ) }
    dend_46 { pt3dadd( -82.8591, 130.495, -127.155, 0.52 ) }
    dend_46 { pt3dadd( -82.9394, 130.921, -127.66, 0.22 ) }
    dend_46 { pt3dadd( -82.9763, 131.146, -127.885, 0.22 ) }
    dend_46 { pt3dadd( -83.0019, 131.281, -127.958, 0.37 ) }
    dend_46 { pt3dadd( -83.2858, 131.799, -128.384, 0.22 ) }
    dend_46 { pt3dadd( -83.4067, 131.919, -128.53, 0.29 ) }
    dend_46 { pt3dadd( -83.5003, 132.0, -128.641, 0.66 ) }
    dend_46 { pt3dadd( -83.5374, 132.031, -128.693, 0.66 ) }
    dend_46 { pt3dadd( -84.0651, 132.57, -129.752, 0.37 ) }
    dend_46 { pt3dadd( -84.0948, 132.616, -129.846, 0.22 ) }
    dend_46 { pt3dadd( -84.1053, 132.645, -129.911, 0.15 ) }
    dend_46 { pt3dadd( -84.1706, 132.904, -130.516, 0.15 ) }
    dend_46 { pt3dadd( -84.1533, 133.211, -131.265, 0.88 ) }
    dend_46 { pt3dadd( -84.127, 133.331, -131.545, 0.88 ) }
    dend_46 { pt3dadd( -84.0466, 133.801, -132.806, 0.44 ) }
    dend_46 { pt3dadd( -84.0208, 134.138, -133.783, 0.44 ) }
    dend_46 { pt3dadd( -84.0198, 134.189, -133.932, 0.74 ) }
    dend_46 { pt3dadd( -84.0284, 134.67, -135.382, 0.22 ) }
    dend_46 { pt3dadd( -84.0203, 134.769, -135.662, 0.22 ) }
    dend_46 { pt3dadd( -83.8579, 135.477, -137.62, 0.22 ) }
    dend_46 { pt3dadd( -83.8345, 135.547, -137.841, 0.66 ) }
    dend_46 { pt3dadd( -83.8099, 135.684, -138.256, 0.66 ) }
    dend_46 { pt3dadd( -83.8056, 135.787, -138.554, 0.66 ) }
    dend_46 { pt3dadd( -83.8216, 136.065, -139.299, 0.15 ) }
    dend_46 { pt3dadd( -83.8149, 136.155, -139.514, 0.66 ) }
    dend_46 { pt3dadd( -83.6356, 137.245, -141.794, 0.15 ) }
    dend_46 { pt3dadd( -83.6215, 137.412, -142.133, 0.22 ) }
    dend_46 { pt3dadd( -83.621, 137.533, -142.368, 0.22 ) }
    dend_46 { pt3dadd( -83.654, 137.819, -142.944, 0.81 ) }
    dend_46 { pt3dadd( -83.687, 137.999, -143.3, 0.81 ) }
    dend_46 { pt3dadd( -83.7711, 138.638, -144.517, 0.29 ) }
    dend_46 { pt3dadd( -83.7679, 138.903, -144.952, 0.29 ) }
    dend_46 { pt3dadd( -83.7696, 138.972, -145.076, 0.52 ) }
    dend_46 { pt3dadd( -83.8614, 139.772, -146.628, 0.44 ) }
    dend_46 { pt3dadd( -83.886, 139.87, -146.837, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -81.1827, 125.073, -121.952, 1.03 ) }
    dend_45 { pt3dadd( -81.1697, 124.386, -121.928, 1.03 ) }
    dend_45 { pt3dadd( -81.1144, 123.631, -121.923, 0.29 ) }
    dend_45 { pt3dadd( -81.0652, 123.21, -121.931, 0.29 ) }
    dend_45 { pt3dadd( -81.0115, 122.788, -121.943, 0.22 ) }
    dend_45 { pt3dadd( -80.9687, 122.49, -121.952, 0.22 ) }
    dend_45 { pt3dadd( -80.9245, 122.21, -121.963, 0.37 ) }
    dend_45 { pt3dadd( -80.8639, 121.904, -121.977, 0.37 ) }
    dend_45 { pt3dadd( -80.6667, 121.221, -122.002, 0.22 ) }
    dend_45 { pt3dadd( -80.5851, 120.97, -122.012, 0.22 ) }
    dend_45 { pt3dadd( -80.4975, 120.725, -122.023, 0.37 ) }
    dend_45 { pt3dadd( -80.4451, 120.586, -122.029, 0.37 ) }
    dend_45 { pt3dadd( -80.0998, 119.683, -122.047, 0.22 ) }
    dend_45 { pt3dadd( -80.0142, 119.276, -122.133, 0.22 ) }
    dend_45 { pt3dadd( -80.0166, 119.238, -122.154, 0.22 ) }
    dend_45 { pt3dadd( -80.0857, 119.069, -122.306, 0.22 ) }
    dend_45 { pt3dadd( -80.2135, 118.917, -122.481, 0.22 ) }
    dend_45 { pt3dadd( -80.4004, 118.763, -122.678, 0.74 ) }
    dend_45 { pt3dadd( -81.9124, 117.805, -124.068, 0.59 ) }
    dend_45 { pt3dadd( -82.0582, 117.715, -124.193, 0.52 ) }
    dend_45 { pt3dadd( -82.1154, 117.681, -124.241, 0.52 ) }
    dend_45 { pt3dadd( -82.5233, 117.479, -124.576, 0.29 ) }
    dend_45 { pt3dadd( -82.7581, 117.387, -124.769, 0.29 ) }
    dend_45 { pt3dadd( -83.2442, 117.214, -125.166, 0.37 ) }
    dend_45 { pt3dadd( -83.4191, 117.154, -125.308, 0.44 ) }
    dend_45 { pt3dadd( -83.4576, 117.141, -125.341, 0.44 ) }
    dend_45 { pt3dadd( -84.458, 116.807, -126.22, 0.44 ) }
    dend_45 { pt3dadd( -84.6206, 116.755, -126.365, 0.44 ) }
    dend_45 { pt3dadd( -84.8602, 116.687, -126.562, 0.44 ) }
    dend_45 { pt3dadd( -85.7652, 116.464, -127.235, 0.22 ) }
    dend_45 { pt3dadd( -85.9695, 116.412, -127.379, 0.22 ) }
    dend_45 { pt3dadd( -86.1941, 116.339, -127.532, 0.22 ) }
    dend_45 { pt3dadd( -86.2897, 116.283, -127.584, 0.37 ) }
    dend_45 { pt3dadd( -86.3441, 116.248, -127.615, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 99/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -115.049, 25.7897, -9.93327, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_39 { pt3dadd( -116.364, 26.4476, -12.186, 0.29 ) }
    dend_39 { pt3dadd( -116.59, 26.5498, -12.5569, 0.66 ) }
    dend_39 { pt3dadd( -116.677, 26.589, -12.6994, 0.66 ) }
    dend_39 { pt3dadd( -118.037, 27.205, -14.9362, 0.29 ) }
    dend_39 { pt3dadd( -119.474, 27.8554, -17.2983, 1.18 ) }
    dend_39 { pt3dadd( -119.73, 27.9712, -17.7189, 1.62 ) }
    dend_39 { pt3dadd( -119.89, 28.0545, -18.0037, 1.62 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 7/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -115.049, 25.7897, -9.93327, 0.22 ) }
    dend_38 { pt3dadd( -114.789, 27.754, -10.0652, 0.22 ) }
    dend_38 { pt3dadd( -114.763, 27.944, -10.0779, 0.37 ) }
    dend_38 { pt3dadd( -114.614, 29.0739, -10.1538, 0.29 ) }
    dend_38 { pt3dadd( -114.568, 29.4165, -10.1768, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_21 (entry count 12/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -25.5754, 115.685, -125.116, 0.29 ) }
    dend_29 { pt3dadd( -26.542, 116.333, -125.308, 0.29 ) }
    dend_29 { pt3dadd( -26.5967, 116.377, -125.318, 0.29 ) }
    dend_29 { pt3dadd( -27.3265, 117.056, -125.633, 0.59 ) }
    dend_29 { pt3dadd( -27.6121, 117.341, -125.799, 0.66 ) }
    dend_29 { pt3dadd( -27.8715, 117.62, -125.997, 0.52 ) }
    dend_29 { pt3dadd( -27.9382, 117.696, -126.052, 0.52 ) }
    dend_29 { pt3dadd( -28.3541, 118.195, -126.442, 0.37 ) }
    dend_29 { pt3dadd( -29.3115, 119.281, -127.362, 0.66 ) }
    dend_29 { pt3dadd( -29.794, 119.784, -127.811, 0.74 ) }
    dend_29 { pt3dadd( -30.6079, 120.533, -128.498, 0.29 ) }
    dend_29 { pt3dadd( -31.2609, 121.07, -128.996, 0.29 ) }
    dend_29 { pt3dadd( -32.0933, 121.723, -129.602, 0.66 ) }
    dend_29 { pt3dadd( -32.5388, 122.046, -129.905, 0.52 ) }
    dend_29 { pt3dadd( -33.3203, 122.558, -130.333, 0.29 ) }
    dend_29 { pt3dadd( -34.0516, 122.98, -130.669, 0.52 ) }
    dend_29 { pt3dadd( -34.5759, 123.226, -130.843, 0.74 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 29/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -25.5754, 115.685, -125.116, 0.29 ) }
    dend_22 { pt3dadd( -25.4291, 116.031, -126.35, 0.29 ) }
    dend_22 { pt3dadd( -25.4218, 116.048, -126.407, 0.29 ) }
    dend_22 { pt3dadd( -25.277, 116.382, -127.557, 0.66 ) }
    dend_22 { pt3dadd( -24.9756, 117.058, -129.879, 0.66 ) }
    dend_22 { pt3dadd( -24.6482, 117.747, -132.2, 0.22 ) }
    dend_22 { pt3dadd( -24.5981, 117.854, -132.554, 0.29 ) }
    dend_22 { pt3dadd( -24.569, 117.939, -132.842, 0.29 ) }
    dend_22 { pt3dadd( -24.4516, 118.295, -133.998, 0.22 ) }
    dend_22 { pt3dadd( -24.4331, 118.349, -134.166, 0.59 ) }
    dend_22 { pt3dadd( -24.3745, 118.47, -134.457, 0.59 ) }
    dend_22 { pt3dadd( -24.201, 118.803, -135.085, 0.59 ) }
    dend_22 { pt3dadd( -24.0503, 119.155, -135.761, 0.29 ) }
    dend_22 { pt3dadd( -24.0037, 119.27, -135.97, 0.29 ) }
    dend_22 { pt3dadd( -23.8228, 119.721, -136.697, 0.59 ) }
    dend_22 { pt3dadd( -23.7798, 119.841, -136.916, 1.03 ) }
    dend_22 { pt3dadd( -23.7182, 119.981, -137.191, 1.25 ) }
    dend_22 { pt3dadd( -23.2542, 120.84, -138.91, 0.22 ) }
    dend_22 { pt3dadd( -23.1739, 120.967, -139.17, 0.22 ) }
    dend_22 { pt3dadd( -23.0789, 121.107, -139.464, 0.74 ) }
    dend_22 { pt3dadd( -22.535, 121.866, -141.019, 0.22 ) }
    dend_22 { pt3dadd( -22.2691, 122.198, -141.704, 0.29 ) }
    dend_22 { pt3dadd( -22.1716, 122.307, -141.921, 0.29 ) }
    dend_22 { pt3dadd( -21.846, 122.599, -142.43, 0.59 ) }
    dend_22 { pt3dadd( -21.7271, 122.699, -142.591, 0.66 ) }
    dend_22 { pt3dadd( -21.5599, 122.839, -142.744, 0.52 ) }
    dend_22 { pt3dadd( -21.2141, 123.138, -142.909, 0.22 ) }
    dend_22 { pt3dadd( -21.0707, 123.28, -142.978, 0.52 ) }
    dend_22 { pt3dadd( -20.8679, 123.471, -143.057, 0.81 ) }
    dend_22 { pt3dadd( -20.5273, 123.784, -143.126, 0.74 ) }
    dend_22 { pt3dadd( -19.8941, 124.304, -143.208, 0.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 60/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -10.6787, 181.701, -24.1759, 0.22 ) }
    dend_17 { pt3dadd( -10.9905, 183.055, -24.1914, 0.22 ) }
    dend_17 { pt3dadd( -11.351, 184.109, -24.2792, 0.22 ) }
    dend_17 { pt3dadd( -12.1837, 186.136, -24.508, 0.29 ) }
    dend_17 { pt3dadd( -12.8687, 187.485, -24.6974, 0.29 ) }
    dend_17 { pt3dadd( -13.3054, 188.239, -24.805, 1.11 ) }
    dend_17 { pt3dadd( -13.5952, 188.698, -24.8669, 1.33 ) }
    dend_17 { pt3dadd( -14.8661, 190.485, -25.1349, 0.22 ) }
    dend_17 { pt3dadd( -15.3659, 191.092, -25.2266, 0.81 ) }
    dend_17 { pt3dadd( -16.8861, 192.72, -25.461, 0.29 ) }
    dend_17 { pt3dadd( -18.1199, 193.994, -25.6226, 0.29 ) }
    dend_17 { pt3dadd( -18.7936, 194.741, -25.7318, 0.52 ) }
    dend_17 { pt3dadd( -18.7936, 194.741, -25.7318, 0.59 ) }
    dend_17 { pt3dadd( -19.214, 195.343, -25.8031, 0.37 ) }
    dend_17 { pt3dadd( -19.7034, 196.145, -25.9288, 0.81 ) }
    dend_17 { pt3dadd( -19.8722, 196.508, -25.9969, 0.81 ) }
    dend_17 { pt3dadd( -20.509, 198.235, -26.373, 0.44 ) }
    dend_17 { pt3dadd( -20.7134, 198.914, -26.5529, 0.44 ) }
    dend_17 { pt3dadd( -20.8714, 199.503, -26.7175, 0.66 ) }
    dend_17 { pt3dadd( -21.0194, 200.266, -26.9366, 0.29 ) }
    dend_17 { pt3dadd( -21.1265, 201.031, -27.182, 0.74 ) }
    dend_17 { pt3dadd( -21.1846, 201.504, -27.3308, 0.81 ) }
    dend_17 { pt3dadd( -21.3506, 203.212, -27.8283, 0.29 ) }
    dend_17 { pt3dadd( -21.4142, 203.882, -28.044, 0.44 ) }
    dend_17 { pt3dadd( -21.4869, 204.915, -28.4178, 0.52 ) }
    dend_17 { pt3dadd( -21.5384, 205.947, -28.8398, 0.44 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 86/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.6787, 181.701, -24.1759, 0.44 ) }
    dend_16 { pt3dadd( -10.2987, 182.355, -23.8599, 0.44 ) }
    dend_16 { pt3dadd( -9.75953, 183.395, -23.3639, 0.44 ) }
    dend_16 { pt3dadd( -9.15098, 184.624, -22.8404, 0.44 ) }
    dend_16 { pt3dadd( -8.78601, 185.354, -22.5645, 1.18 ) }
    dend_16 { pt3dadd( -7.58921, 187.461, -21.3868, 0.59 ) }
    dend_16 { pt3dadd( -7.11966, 188.222, -20.8675, 0.37 ) }
    dend_16 { pt3dadd( -6.72247, 188.858, -20.3611, 0.37 ) }
    dend_16 { pt3dadd( -6.29026, 189.514, -19.7945, 0.59 ) }
    dend_16 { pt3dadd( -5.94011, 190.007, -19.3586, 1.18 ) }
    dend_16 { pt3dadd( -3.92406, 192.739, -17.0377, 0.88 ) }
    dend_16 { pt3dadd( -3.19991, 193.712, -16.2369, 0.96 ) }
    dend_16 { pt3dadd( -2.70824, 194.355, -15.6863, 0.96 ) }
    dend_16 { pt3dadd( -2.10264, 195.144, -15.0119, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_16 { pt3dadd( -1.95091, 195.365, -14.8304, 0.59 ) }
    dend_16 { pt3dadd( -1.51376, 196.038, -14.1423, 0.59 ) }
    dend_16 { pt3dadd( -0.941452, 197.018, -13.1151, 0.52 ) }
    dend_16 { pt3dadd( -0.653307, 197.499, -12.4775, 0.29 ) }
    dend_16 { pt3dadd( -0.543396, 197.668, -12.2149, 0.81 ) }
    dend_16 { pt3dadd( -0.29388, 198.017, -11.6026, 0.81 ) }
    dend_16 { pt3dadd( 1.47293, 200.208, -7.37945, 0.66 ) }
    dend_16 { pt3dadd( 1.74553, 200.449, -6.85488, 0.74 ) }
    dend_16 { pt3dadd( 1.79122, 200.48, -6.79042, 0.74 ) }
    dend_16 { pt3dadd( 2.1283, 200.679, -6.34805, 0.96 ) }
    dend_16 { pt3dadd( 2.99448, 201.22, -5.26569, 0.29 ) }
    dend_16 { pt3dadd( 3.18752, 201.342, -5.03798, 0.81 ) }
    dend_16 { pt3dadd( 4.40933, 202.277, -3.35978, 0.22 ) }
    dend_16 { pt3dadd( 4.63391, 202.482, -2.82953, 1.33 ) }
    dend_16 { pt3dadd( 5.15122, 203.12, -0.464423, 0.29 ) }
    dend_16 { pt3dadd( 5.191, 203.23, 0.130678, 0.29 ) }
    dend_16 { pt3dadd( 5.13904, 203.306, 0.936519, 0.59 ) }
    dend_16 { pt3dadd( 4.82368, 203.208, 2.26386, 0.29 ) }
    dend_16 { pt3dadd( 4.5016, 202.938, 2.90854, 0.29 ) }
    dend_16 { pt3dadd( 4.14756, 202.498, 3.46261, 0.29 ) }
    dend_16 { pt3dadd( 4.05024, 202.334, 3.56988, 0.88 ) }
    dend_16 { pt3dadd( 3.83868, 201.89, 3.78733, 0.88 ) }
    dend_16 { pt3dadd( 3.69749, 201.295, 3.82782, 0.52 ) }
    dend_16 { pt3dadd( 4.14123, 200.804, 3.11738, 0.44 ) }
    dend_16 { pt3dadd( 4.34265, 200.679, 2.82275, 0.52 ) }
    dend_16 { pt3dadd( 5.13377, 200.443, 1.708, 0.66 ) }
    dend_16 { pt3dadd( 6.01577, 200.342, 0.482677, 0.52 ) }
    dend_16 { pt3dadd( 6.24111, 200.345, 0.183982, 0.52 ) }
    dend_16 { pt3dadd( 6.99022, 200.364, -0.808259, 0.37 ) }
    dend_16 { pt3dadd( 7.28848, 200.357, -1.24624, 0.52 ) }
    dend_16 { pt3dadd( 7.7497, 200.294, -2.00607, 0.22 ) }
    dend_16 { pt3dadd( 8.02003, 200.203, -2.5031, 0.22 ) }
    dend_16 { pt3dadd( 8.32629, 200.019, -3.12677, 0.74 ) }
    dend_16 { pt3dadd( 8.8567, 199.575, -4.22386, 0.37 ) }
    dend_16 { pt3dadd( 9.48742, 198.895, -5.64104, 0.29 ) }
    dend_16 { pt3dadd( 9.80956, 198.488, -6.38822, 0.81 ) }
    dend_16 { pt3dadd( 9.88964, 198.367, -6.58384, 0.96 ) }
    dend_16 { pt3dadd( 10.36, 197.59, -7.80538, 0.29 ) }
    dend_16 { pt3dadd( 10.6083, 197.153, -8.5004, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 36.2595, 97.4155, -17.2356, 0.29 ) }
    dend_12 { pt3dadd( 35.9665, 98.3211, -17.5176, 0.29 ) }
    dend_12 { pt3dadd( 35.7558, 99.0272, -17.7632, 0.29 ) }
    dend_12 { pt3dadd( 35.5935, 99.6029, -17.9999, 0.59 ) }
    dend_12 { pt3dadd( 35.3048, 100.614, -18.4158, 0.59 ) }
    dend_12 { pt3dadd( 35.0277, 101.585, -18.815, 0.52 ) }
    dend_12 { pt3dadd( 34.7601, 102.522, -19.2004, 0.52 ) }
    dend_12 { pt3dadd( 34.5503, 103.27, -19.5145, 0.52 ) }
    dend_12 { pt3dadd( 34.1875, 104.624, -20.1275, 0.52 ) }
    dend_12 { pt3dadd( 33.9733, 105.468, -20.5241, 0.52 ) }
    dend_12 { pt3dadd( 32.5758, 113.516, -25.2616, 0.52 ) }
    dend_12 { pt3dadd( 33.2829, 121.656, -29.974, 0.52 ) }
    dend_12 { pt3dadd( 32.5756, 130.185, -33.9213, 0.52 ) }
    dend_12 { pt3dadd( 30.3832, 137.689, -39.2581, 0.52 ) }
    dend_12 { pt3dadd( 26.7934, 145.752, -42.6639, 0.52 ) }
    dend_12 { pt3dadd( 24.1066, 153.804, -46.8215, 0.52 ) }
    dend_12 { pt3dadd( 22.5428, 162.148, -50.9411, 0.52 ) }
    dend_12 { pt3dadd( 19.9418, 171.009, -52.8648, 0.52 ) }
    dend_12 { pt3dadd( 18.1974, 180.14, -54.4002, 0.52 ) }
    dend_12 { pt3dadd( 15.6942, 188.898, -56.8526, 0.52 ) }
    dend_12 { pt3dadd( 14.4603, 197.562, -60.3511, 0.52 ) }
    dend_12 { pt3dadd( 14.878, 206.232, -64.0016, 0.52 ) }
    dend_12 { pt3dadd( 16.1822, 215.224, -66.4477, 0.52 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 62/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 36.2595, 97.4155, -17.2356, 0.52 ) }
    dend_11 { pt3dadd( 38.2871, 97.7726, -16.1971, 0.52 ) }
    dend_11 { pt3dadd( 39.1885, 97.9408, -15.7422, 0.44 ) }
    dend_11 { pt3dadd( 39.4505, 97.9951, -15.614, 0.74 ) }
    dend_11 { pt3dadd( 40.0793, 98.1482, -15.3216, 0.74 ) }
    dend_11 { pt3dadd( 41.2729, 98.4996, -14.8068, 0.52 ) }
    dend_11 { pt3dadd( 48.0784, 101.21, -12.3202, 0.52 ) }
    dend_11 { pt3dadd( 54.7353, 102.3, -8.43222, 0.22 ) }
    dend_11 { pt3dadd( 55.3758, 102.304, -7.99366, 0.22 ) }
    dend_11 { pt3dadd( 55.8955, 102.167, -7.54448, 0.22 ) }
    dend_11 { pt3dadd( 55.684, 102.355, -7.82993, 0.22 ) }
    dend_11 { pt3dadd( 55.3521, 102.811, -8.41007, 0.74 ) }
    dend_11 { pt3dadd( 55.1854, 103.07, -8.72989, 1.11 ) }
    dend_11 { pt3dadd( 55.7966, 103.798, -8.994, 0.96 ) }
    dend_11 { pt3dadd( 56.1624, 104.209, -9.13192, 1.25 ) }
    dend_11 { pt3dadd( 56.6726, 104.768, -9.30967, 1.25 ) }
    dend_11 { pt3dadd( 56.9194, 105.039, -9.39576, 1.25 ) }
    dend_11 { pt3dadd( 57.8197, 106.077, -9.71682, 1.25 ) }
    dend_11 { pt3dadd( 58.5813, 106.978, -9.96277, 0.52 ) }
    dend_11 { pt3dadd( 58.7387, 107.178, -10.0154, 0.66 ) }
    dend_11 { pt3dadd( 58.7919, 107.258, -10.0361, 0.66 ) }
    dend_11 { pt3dadd( 58.9843, 107.594, -10.1419, 0.66 ) }
    dend_11 { pt3dadd( 59.0793, 107.746, -10.1904, 0.59 ) }
    dend_11 { pt3dadd( 59.4276, 108.311, -10.3786, 0.59 ) }
    dend_11 { pt3dadd( 59.9898, 109.158, -10.6319, 0.22 ) }
    dend_11 { pt3dadd( 60.4627, 109.868, -10.8372, 0.22 ) }
    dend_11 { pt3dadd( 61.0769, 110.786, -11.1126, 0.22 ) }
    dend_11 { pt3dadd( 61.8004, 111.86, -11.4379, 0.81 ) }
    dend_11 { pt3dadd( 62.3732, 112.644, -11.6871, 0.81 ) }
    dend_11 { pt3dadd( 62.6601, 113.001, -11.8153, 0.44 ) }
    dend_11 { pt3dadd( 63.3488, 113.716, -12.1145, 0.22 ) }
    dend_11 { pt3dadd( 63.9431, 114.257, -12.3873, 0.22 ) }
    dend_11 { pt3dadd( 64.0363, 114.335, -12.4334, 0.22 ) }
    dend_11 { pt3dadd( 64.7314, 114.902, -12.8388, 0.29 ) }
    dend_11 { pt3dadd( 65.3555, 115.363, -13.1892, 0.29 ) }
    dend_11 { pt3dadd( 66.357, 116.152, -13.7619, 0.29 ) }
    dend_11 { pt3dadd( 66.7509, 116.51, -13.9943, 0.88 ) }
    dend_11 { pt3dadd( 66.9981, 116.78, -14.1503, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_11 { pt3dadd( 67.3901, 117.283, -14.4226, 1.47 ) }
    dend_11 { pt3dadd( 67.6494, 117.696, -14.6317, 1.77 ) }
    dend_11 { pt3dadd( 68.3786, 119.084, -15.2837, 0.59 ) }
    dend_11 { pt3dadd( 68.7584, 119.953, -15.677, 0.44 ) }
    dend_11 { pt3dadd( 68.9814, 120.492, -15.9067, 0.44 ) }
    dend_11 { pt3dadd( 69.0294, 120.612, -15.9563, 0.44 ) }
    dend_11 { pt3dadd( 69.3163, 121.315, -16.2562, 0.29 ) }
    dend_11 { pt3dadd( 69.7077, 122.239, -16.6728, 0.29 ) }
    dend_11 { pt3dadd( 69.9783, 122.88, -16.9664, 0.52 ) }
    dend_11 { pt3dadd( 70.1553, 123.327, -17.1737, 0.52 ) }
    dend_11 { pt3dadd( 70.3823, 123.856, -17.4045, 0.52 ) }
    dend_11 { pt3dadd( 70.7741, 124.649, -17.7643, 0.29 ) }
    dend_11 { pt3dadd( 70.8123, 124.719, -17.7957, 0.29 ) }
    dend_11 { pt3dadd( 70.8597, 124.8, -17.8312, 0.29 ) }
    dend_11 { pt3dadd( 71.2078, 125.361, -18.0817, 0.44 ) }
    dend_11 { pt3dadd( 71.8405, 126.364, -18.5348, 1.03 ) }
    dend_11 { pt3dadd( 72.197, 126.929, -18.7926, 1.03 ) }
    dend_11 { pt3dadd( 72.5065, 127.412, -19.0258, 1.03 ) }
    dend_11 { pt3dadd( 72.9009, 128.026, -19.3355, 1.11 ) }
    dend_11 { pt3dadd( 73.1891, 128.477, -19.5794, 1.11 ) }
    dend_11 { pt3dadd( 73.5479, 129.051, -19.9044, 1.18 ) }
    dend_11 { pt3dadd( 73.7658, 129.442, -20.1492, 1.11 ) }
    dend_11 { pt3dadd( 73.9681, 129.833, -20.4266, 0.88 ) }
    dend_11 { pt3dadd( 74.0031, 129.891, -20.4799, 0.88 ) }
    dend_11 { pt3dadd( 74.4841, 130.654, -21.2607, 0.52 ) }
    dend_11 { pt3dadd( 74.5199, 130.71, -21.3205, 0.52 ) }
    dend_11 { pt3dadd( 74.8876, 131.261, -21.9451, 0.52 ) }
    dend_11 { pt3dadd( 75.6711, 132.411, -23.2932, 0.22 ) }
    dend_11 { pt3dadd( 76.2005, 133.117, -24.0629, 0.22 ) }
    dend_11 { pt3dadd( 76.3947, 133.364, -24.3084, 0.59 ) }
    dend_11 { pt3dadd( 76.8234, 133.888, -24.7818, 0.88 ) }
    dend_11 { pt3dadd( 76.9795, 134.077, -24.9286, 1.11 ) }
    dend_11 { pt3dadd( 77.0425, 134.147, -24.9631, 1.11 ) }
    dend_11 { pt3dadd( 78.4024, 135.474, -25.2289, 0.29 ) }
    dend_11 { pt3dadd( 78.8099, 135.861, -25.2582, 0.29 ) }
    dend_11 { pt3dadd( 78.8649, 135.896, -25.2492, 0.29 ) }
    dend_11 { pt3dadd( 79.1978, 136.093, -25.172, 0.29 ) }
    dend_11 { pt3dadd( 80.3377, 136.721, -24.8607, 0.44 ) }
    dend_11 { pt3dadd( 80.9105, 136.99, -24.6837, 0.44 ) }
    dend_11 { pt3dadd( 81.3157, 137.108, -24.5179, 0.44 ) }
    dend_11 { pt3dadd( 84.0808, 137.722, -23.3598, 0.59 ) }
    dend_11 { pt3dadd( 94.4594, 144.139, -24.7771, 0.59 ) }
    dend_11 { pt3dadd( 105.18, 150.14, -24.2188, 0.59 ) }
    dend_11 { pt3dadd( 116.112, 155.75, -23.4909, 0.59 ) }
    dend_11 { pt3dadd( 126.596, 161.964, -21.8744, 0.59 ) }
    dend_11 { pt3dadd( 138.085, 166.307, -20.6752, 0.59 ) }
    dend_11 { pt3dadd( 149.73, 169.061, -17.5343, 0.59 ) }
    dend_11 { pt3dadd( 160.958, 172.165, -13.3788, 0.59 ) }
    dend_11 { pt3dadd( 173.068, 173.505, -11.1378, 0.59 ) }
    dend_11 { pt3dadd( 185.272, 173.746, -8.97252, 0.59 ) }
    dend_11 { pt3dadd( 197.267, 176.398, -7.51469, 0.59 ) }
    dend_11 { pt3dadd( 209.385, 178.653, -6.3928, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 52/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 20.9321, 146.354, -43.2741, 0.22 ) }
    dend_6 { pt3dadd( 22.3304, 147.09, -43.3666, 0.22 ) }
    dend_6 { pt3dadd( 22.8303, 147.373, -43.4122, 0.81 ) }
    dend_6 { pt3dadd( 22.998, 147.48, -43.4343, 0.81 ) }
    dend_6 { pt3dadd( 24.1571, 148.316, -43.6166, 0.22 ) }
    dend_6 { pt3dadd( 24.4752, 148.573, -43.6787, 0.22 ) }
    dend_6 { pt3dadd( 24.5708, 148.657, -43.7003, 0.44 ) }
    dend_6 { pt3dadd( 24.7943, 148.932, -43.7714, 0.44 ) }
    dend_6 { pt3dadd( 25.0951, 149.366, -43.8896, 0.15 ) }
    dend_6 { pt3dadd( 25.2605, 149.661, -43.9798, 0.15 ) }
    dend_6 { pt3dadd( 25.4056, 150.054, -44.1142, 0.15 ) }
    dend_6 { pt3dadd( 25.4648, 150.229, -44.1653, 0.66 ) }
    dend_6 { pt3dadd( 25.5628, 150.521, -44.2459, 1.03 ) }
    dend_6 { pt3dadd( 25.6738, 150.855, -44.3311, 0.66 ) }
    dend_6 { pt3dadd( 25.8145, 151.248, -44.4353, 0.22 ) }
    dend_6 { pt3dadd( 25.8762, 151.404, -44.4813, 0.22 ) }
    dend_6 { pt3dadd( 25.9622, 151.635, -44.5432, 0.22 ) }
    dend_6 { pt3dadd( 26.0462, 151.869, -44.6045, 0.22 ) }
    dend_6 { pt3dadd( 26.0719, 151.947, -44.6237, 0.22 ) }
    dend_6 { pt3dadd( 26.1443, 152.243, -44.6854, 0.74 ) }
    dend_6 { pt3dadd( 26.1879, 152.461, -44.7301, 0.59 ) }
    dend_6 { pt3dadd( 26.2512, 152.766, -44.7952, 0.29 ) }
    dend_6 { pt3dadd( 26.2731, 152.871, -44.8179, 0.22 ) }
    dend_6 { pt3dadd( 26.2986, 152.983, -44.8401, 0.22 ) }
    dend_6 { pt3dadd( 26.5065, 153.824, -44.9958, 0.15 ) }
    dend_6 { pt3dadd( 26.6011, 154.272, -45.0498, 0.15 ) }
    dend_6 { pt3dadd( 26.679, 154.707, -45.079, 0.15 ) }
    dend_6 { pt3dadd( 26.7255, 154.956, -45.0947, 0.15 ) }
    dend_6 { pt3dadd( 26.768, 155.159, -45.1173, 0.29 ) }
    dend_6 { pt3dadd( 26.8479, 155.43, -45.1784, 0.29 ) }
    dend_6 { pt3dadd( 27.1229, 156.022, -45.4383, 1.77 ) }
    dend_6 { pt3dadd( 27.2783, 156.272, -45.6598, 1.77 ) }
    dend_6 { pt3dadd( 27.5332, 156.529, -46.0402, 1.77 ) }
    dend_6 { pt3dadd( 27.854, 156.831, -46.7141, 0.22 ) }
    dend_6 { pt3dadd( 28.0726, 157.089, -47.4016, 0.22 ) }
    dend_6 { pt3dadd( 28.2107, 157.258, -47.9568, 0.22 ) }
    dend_6 { pt3dadd( 28.351, 157.482, -48.8276, 0.44 ) }
    dend_6 { pt3dadd( 28.4313, 157.687, -49.671, 0.22 ) }
    dend_6 { pt3dadd( 28.469, 157.997, -51.0094, 0.44 ) }
    dend_6 { pt3dadd( 28.4196, 158.204, -51.913, 0.44 ) }
    dend_6 { pt3dadd( 28.386, 158.263, -52.1372, 0.44 ) }
    dend_6 { pt3dadd( 28.1387, 158.593, -53.2094, 0.22 ) }
    dend_6 { pt3dadd( 28.0653, 158.679, -53.4518, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 20.9321, 146.354, -43.2741, 0.29 ) }
    dend_5 { pt3dadd( 20.8586, 146.829, -43.2133, 0.29 ) }
    dend_5 { pt3dadd( 20.7997, 147.192, -43.2041, 0.37 ) }
    dend_5 { pt3dadd( 20.7308, 147.605, -43.21, 0.37 ) }
    dend_5 { pt3dadd( 20.6687, 147.982, -43.2201, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_5 { pt3dadd( 20.6431, 148.156, -43.227, 0.29 ) }
    dend_5 { pt3dadd( 20.6283, 148.273, -43.2329, 0.29 ) }
    dend_5 { pt3dadd( 20.5607, 148.904, -43.293, 0.22 ) }
    dend_5 { pt3dadd( 20.5273, 149.209, -43.3299, 0.22 ) }
    dend_5 { pt3dadd( 20.5222, 149.258, -43.3374, 0.29 ) }
    dend_5 { pt3dadd( 20.4885, 149.668, -43.4167, 0.29 ) }
    dend_5 { pt3dadd( 20.4663, 149.974, -43.4757, 0.29 ) }
    // Section: dend_131, id: dend_131, parent: dend_127 (entry count 7/100)
    dend_131 { pt3dclear() }
    dend_131 { pt3dadd( 7.51969, -65.406, 21.886, 0.22 ) }
    dend_131 { pt3dadd( 16.2454, -68.973, 24.2921, 0.22 ) }
    dend_131 { pt3dadd( 24.562, -72.6623, 27.7301, 0.22 ) }
    dend_131 { pt3dadd( 32.2442, -77.473, 31.1745, 0.22 ) }
    dend_131 { pt3dadd( 40.3699, -82.3673, 33.1703, 0.22 ) }
    // Section: dend_128, id: dend_128, parent: dend_127 (entry count 12/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( 7.51969, -65.406, 21.886, 0.29 ) }
    dend_128 { pt3dadd( 18.6537, -69.8367, 25.3203, 0.22 ) }
    dend_128 { pt3dadd( 29.3316, -75.8824, 27.269, 0.22 ) }
    dend_128 { pt3dadd( 38.5564, -83.2912, 30.9218, 0.22 ) }
    // Section: dend_117, id: dend_117, parent: dend_115 (entry count 16/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( 21.9608, -70.9181, 23.4431, 1.33 ) }
    dend_117 { pt3dadd( 25.3413, -74.0501, 26.7754, 1.33 ) }
    dend_117 { pt3dadd( 28.8716, -77.1053, 30.0274, 1.33 ) }
    // Section: dend_116, id: dend_116, parent: dend_115 (entry count 19/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( 21.9608, -70.9181, 23.4431, 0.44 ) }
    dend_116 { pt3dadd( 28.42, -76.8453, 29.3397, 1.33 ) }
    dend_116 { pt3dadd( 34.3409, -82.0373, 36.4017, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 22/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -119.89, 28.0545, -18.0037, 0.96 ) }
    dend_41 { pt3dadd( -120.417, 27.4307, -19.2714, 0.96 ) }
    dend_41 { pt3dadd( -121.074, 26.5918, -20.9549, 0.22 ) }
    dend_41 { pt3dadd( -121.264, 26.3108, -21.4864, 0.74 ) }
    dend_41 { pt3dadd( -121.73, 25.5464, -22.8689, 0.29 ) }
    dend_41 { pt3dadd( -121.804, 25.4247, -23.0891, 0.59 ) }
    dend_41 { pt3dadd( -122.65, 24.036, -25.6008, 0.22 ) }
    dend_41 { pt3dadd( -122.88, 23.6565, -26.3023, 0.22 ) }
    dend_41 { pt3dadd( -123.028, 23.3627, -26.8616, 0.59 ) }
    dend_41 { pt3dadd( -123.072, 23.2884, -27.0208, 0.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 32/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -119.89, 28.0545, -18.0037, 0.29 ) }
    dend_40 { pt3dadd( -122.333, 28.903, -19.8556, 0.29 ) }
    dend_40 { pt3dadd( -122.736, 29.0139, -20.1633, 0.59 ) }
    dend_40 { pt3dadd( -122.888, 29.049, -20.2632, 0.66 ) }
    dend_40 { pt3dadd( -123.062, 29.0825, -20.3605, 0.66 ) }
    dend_40 { pt3dadd( -123.826, 29.2179, -20.794, 0.52 ) }
    dend_40 { pt3dadd( -124.119, 29.2581, -20.9662, 0.29 ) }
    dend_40 { pt3dadd( -125.317, 29.3569, -21.6371, 0.44 ) }
    dend_40 { pt3dadd( -126.098, 29.4111, -22.1208, 0.44 ) }
    dend_40 { pt3dadd( -127.8, 29.5213, -23.2139, 0.29 ) }
    dend_40 { pt3dadd( -128.942, 29.5971, -23.9121, 0.59 ) }
    dend_40 { pt3dadd( -130.321, 29.6914, -24.7481, 0.44 ) }
    dend_40 { pt3dadd( -130.498, 29.6996, -24.8505, 0.52 ) }
    dend_40 { pt3dadd( -132.26, 29.7355, -25.79, 0.22 ) }
    dend_40 { pt3dadd( -132.424, 29.7356, -25.8764, 0.59 ) }
    dend_40 { pt3dadd( -133.481, 29.7111, -26.381, 0.59 ) }
    dend_40 { pt3dadd( -134.377, 29.6901, -26.7168, 0.59 ) }
    dend_40 { pt3dadd( -136.096, 29.701, -27.2, 0.22 ) }
    dend_40 { pt3dadd( -136.29, 29.7019, -27.2453, 0.44 ) }
    dend_40 { pt3dadd( -136.382, 29.7068, -27.2516, 0.44 ) }
    // Section: dend_28, id: dend_28, parent: dend_22 (entry count 52/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -19.8941, 124.304, -143.208, 0.15 ) }
    dend_28 { pt3dadd( -19.4796, 124.438, -143.726, 0.15 ) }
    dend_28 { pt3dadd( -18.9468, 124.595, -144.358, 0.52 ) }
    dend_28 { pt3dadd( -18.2041, 124.826, -145.218, 0.59 ) }
    dend_28 { pt3dadd( -17.8651, 124.934, -145.602, 0.22 ) }
    dend_28 { pt3dadd( -17.6919, 124.992, -145.795, 0.22 ) }
    dend_28 { pt3dadd( -17.5407, 125.061, -146.035, 0.22 ) }
    dend_28 { pt3dadd( -17.5032, 125.089, -146.127, 0.22 ) }
    dend_28 { pt3dadd( -17.4179, 125.227, -146.572, 0.74 ) }
    dend_28 { pt3dadd( -17.4149, 125.241, -146.618, 0.74 ) }
    dend_28 { pt3dadd( -17.4138, 125.261, -146.686, 0.74 ) }
    dend_28 { pt3dadd( -17.4388, 125.858, -148.701, 0.22 ) }
    dend_28 { pt3dadd( -17.4502, 125.961, -149.048, 0.66 ) }
    dend_28 { pt3dadd( -17.5012, 126.321, -150.303, 0.37 ) }
    dend_28 { pt3dadd( -17.5044, 126.334, -150.351, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 67/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -19.8941, 124.304, -143.208, 0.22 ) }
    dend_23 { pt3dadd( -19.6152, 124.662, -143.133, 0.22 ) }
    dend_23 { pt3dadd( -19.324, 125.051, -143.044, 0.22 ) }
    dend_23 { pt3dadd( -19.0622, 125.423, -142.962, 0.81 ) }
    dend_23 { pt3dadd( -18.6013, 126.117, -142.807, 0.22 ) }
    dend_23 { pt3dadd( -18.3797, 126.466, -142.751, 0.37 ) }
    dend_23 { pt3dadd( -18.1723, 126.801, -142.707, 0.29 ) }
    dend_23 { pt3dadd( -17.9506, 127.182, -142.674, 0.22 ) }
    dend_23 { pt3dadd( -17.8018, 127.455, -142.657, 0.22 ) }
    dend_23 { pt3dadd( -17.7388, 127.578, -142.648, 0.66 ) }
    dend_23 { pt3dadd( -17.4316, 128.244, -142.634, 0.15 ) }
    dend_23 { pt3dadd( -17.4089, 128.285, -142.631, 0.15 ) }
    dend_23 { pt3dadd( -17.1492, 128.691, -142.584, 0.15 ) }
    dend_23 { pt3dadd( -17.094, 128.76, -142.581, 0.15 ) }
    dend_23 { pt3dadd( -16.7206, 129.192, -142.624, 0.88 ) }
    dend_23 { pt3dadd( -16.6056, 129.323, -142.647, 0.88 ) }
    dend_23 { pt3dadd( -16.1348, 129.824, -142.762, 0.15 ) }
    dend_23 { pt3dadd( -16.0464, 129.914, -142.789, 0.15 ) }
    dend_23 { pt3dadd( -15.3366, 130.598, -143.058, 1.5 ) }
    dend_23 { pt3dadd( -14.6491, 131.247, -143.357, 0.29 ) }
    dend_23 { pt3dadd( -14.4884, 131.408, -143.447, 0.29 ) }
    dend_23 { pt3dadd( -14.2404, 131.686, -143.61, 0.29 ) }
    dend_23 { pt3dadd( -14.1767, 131.765, -143.658, 0.29 ) }
    dend_23 { pt3dadd( -14.1077, 131.85, -143.705, 0.29 ) }
    dend_23 { pt3dadd( -13.8985, 132.094, -143.812, 0.29 ) }
    dend_23 { pt3dadd( -13.4831, 132.485, -144.152, 1.03 ) }
    dend_23 { pt3dadd( -13.1917, 132.757, -144.538, 0.22 ) }
    dend_23 { pt3dadd( -13.0068, 132.919, -144.823, 0.22 ) }
    dend_23 { pt3dadd( -12.8513, 133.04, -145.072, 0.22 ) }
    dend_23 { pt3dadd( -12.7124, 133.132, -145.329, 0.37 ) }
    dend_23 { pt3dadd( -12.0343, 133.472, -146.656, 0.59 ) }
    dend_23 { pt3dadd( -11.5697, 133.643, -147.589, 0.59 ) }
    dend_23 { pt3dadd( -11.3093, 133.738, -148.126, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_23 { pt3dadd( -11.2394, 133.771, -148.294, 0.22 ) }
    dend_23 { pt3dadd( -10.988, 134.053, -149.38, 0.59 ) }
    dend_23 { pt3dadd( -10.9441, 134.136, -149.656, 0.59 ) }
    dend_23 { pt3dadd( -10.932, 134.179, -149.785, 0.59 ) }
    dend_23 { pt3dadd( -10.9249, 134.361, -150.336, 0.22 ) }
    dend_23 { pt3dadd( -10.9852, 134.769, -151.551, 1.03 ) }
    dend_23 { pt3dadd( -11.2168, 135.702, -154.059, 0.29 ) }
    dend_23 { pt3dadd( -11.2577, 135.837, -154.384, 0.29 ) }
    dend_23 { pt3dadd( -11.4097, 136.276, -155.408, 0.29 ) }
    dend_23 { pt3dadd( -11.5072, 136.499, -155.943, 0.29 ) }
    dend_23 { pt3dadd( -11.533, 136.549, -156.061, 0.29 ) }
    dend_23 { pt3dadd( -11.645, 136.77, -156.532, 0.29 ) }
    dend_23 { pt3dadd( -11.6936, 136.865, -156.716, 0.29 ) }
    dend_23 { pt3dadd( -12.0765, 137.595, -158.136, 1.25 ) }
    dend_23 { pt3dadd( -12.5743, 138.61, -160.088, 0.29 ) }
    dend_23 { pt3dadd( -12.652, 138.786, -160.434, 0.29 ) }
    dend_23 { pt3dadd( -12.8988, 139.317, -161.552, 1.33 ) }
    dend_23 { pt3dadd( -12.9101, 139.339, -161.602, 1.33 ) }
    // Section: dend_130, id: dend_130, parent: dend_128 (entry count 18/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( 38.5564, -83.2912, 30.9218, 0.29 ) }
    dend_130 { pt3dadd( 50.1422, -84.0616, 27.2808, 0.29 ) }
    // Section: dend_129, id: dend_129, parent: dend_128 (entry count 20/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( 38.5564, -83.2912, 30.9218, 0.44 ) }
    dend_129 { pt3dadd( 44.0314, -88.4862, 37.0908, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 22/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -12.9101, 139.339, -161.602, 0.22 ) }
    dend_27 { pt3dadd( -12.4972, 140.684, -161.904, 0.22 ) }
    dend_27 { pt3dadd( -12.4288, 140.828, -161.934, 0.22 ) }
    dend_27 { pt3dadd( -12.2241, 141.155, -161.996, 0.22 ) }
    dend_27 { pt3dadd( -11.9331, 141.483, -162.1, 0.59 ) }
    dend_27 { pt3dadd( -11.4795, 141.874, -162.263, 0.59 ) }
    dend_27 { pt3dadd( -10.6894, 142.433, -162.603, 0.29 ) }
    dend_27 { pt3dadd( -10.1794, 142.676, -162.842, 0.29 ) }
    dend_27 { pt3dadd( -9.76694, 142.819, -163.055, 0.29 ) }
    dend_27 { pt3dadd( -8.77178, 143.075, -163.581, 0.22 ) }
    dend_27 { pt3dadd( -8.37656, 143.149, -163.788, 0.22 ) }
    dend_27 { pt3dadd( -7.52506, 143.275, -164.243, 0.96 ) }
    dend_27 { pt3dadd( -7.37141, 143.291, -164.336, 1.25 ) }
    dend_27 { pt3dadd( -5.93061, 143.465, -165.234, 0.15 ) }
    dend_27 { pt3dadd( -5.65268, 143.507, -165.405, 0.96 ) }
    dend_27 { pt3dadd( -5.37177, 143.565, -165.566, 0.96 ) }
    dend_27 { pt3dadd( -5.27782, 143.586, -165.617, 0.96 ) }
    dend_27 { pt3dadd( -4.16715, 143.833, -166.126, 0.22 ) }
    dend_27 { pt3dadd( -3.85722, 143.898, -166.252, 0.22 ) }
    dend_27 { pt3dadd( -3.70086, 143.935, -166.3, 0.22 ) }
    dend_27 { pt3dadd( -3.62915, 143.946, -166.318, 0.22 ) }
    dend_27 { pt3dadd( -3.30392, 143.95, -166.366, 0.37 ) }
    dend_27 { pt3dadd( -3.13186, 143.924, -166.374, 0.37 ) }
    dend_27 { pt3dadd( -2.59823, 143.772, -166.351, 0.52 ) }
    dend_27 { pt3dadd( -2.49901, 143.738, -166.346, 0.81 ) }
    dend_27 { pt3dadd( -2.01749, 143.588, -166.334, 0.81 ) }
    dend_27 { pt3dadd( -1.07669, 143.35, -166.345, 0.29 ) }
    dend_27 { pt3dadd( -0.678493, 143.283, -166.362, 0.29 ) }
    dend_27 { pt3dadd( -0.505756, 143.285, -166.387, 0.29 ) }
    dend_27 { pt3dadd( -0.166084, 143.354, -166.467, 0.29 ) }
    dend_27 { pt3dadd( 0.697849, 143.654, -166.725, 0.29 ) }
    dend_27 { pt3dadd( 1.05196, 143.824, -166.857, 0.66 ) }
    dend_27 { pt3dadd( 1.40719, 144.034, -167.008, 0.66 ) }
    dend_27 { pt3dadd( 2.38217, 144.642, -167.428, 0.22 ) }
    dend_27 { pt3dadd( 2.56624, 144.764, -167.511, 0.22 ) }
    dend_27 { pt3dadd( 2.85869, 144.971, -167.651, 0.22 ) }
    dend_27 { pt3dadd( 3.21154, 145.217, -167.828, 0.74 ) }
    dend_27 { pt3dadd( 3.46268, 145.366, -167.939, 0.74 ) }
    dend_27 { pt3dadd( 3.61452, 145.434, -167.999, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 61/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -12.9101, 139.339, -161.602, 0.07 ) }
    dend_24 { pt3dadd( -13.0823, 139.61, -162.278, 0.07 ) }
    dend_24 { pt3dadd( -13.1019, 139.648, -162.386, 0.15 ) }
    dend_24 { pt3dadd( -13.143, 139.719, -162.567, 0.15 ) }
    dend_24 { pt3dadd( -13.2201, 139.811, -162.793, 0.15 ) }
    dend_24 { pt3dadd( -13.3499, 139.949, -163.113, 0.15 ) }
    dend_24 { pt3dadd( -14.2846, 141.015, -165.383, 0.88 ) }
    dend_24 { pt3dadd( -14.8319, 141.715, -166.835, 0.15 ) }
    dend_24 { pt3dadd( -15.033, 141.993, -167.388, 1.4 ) }
    dend_24 { pt3dadd( -15.5723, 142.82, -168.946, 0.29 ) }
    dend_24 { pt3dadd( -15.6983, 143.026, -169.313, 0.52 ) }
    dend_24 { pt3dadd( -15.9249, 143.449, -170.005, 0.22 ) }
    dend_24 { pt3dadd( -15.997, 143.609, -170.189, 0.22 ) }
    dend_24 { pt3dadd( -16.0365, 143.74, -170.318, 0.22 ) }
    dend_24 { pt3dadd( -16.0781, 143.991, -170.555, 0.22 ) }
    dend_24 { pt3dadd( -16.0828, 144.1, -170.646, 0.22 ) }
    dend_24 { pt3dadd( -16.1442, 145.45, -171.784, 1.03 ) }
    dend_24 { pt3dadd( -16.1699, 145.907, -172.19, 1.03 ) }
    dend_24 { pt3dadd( -16.2065, 146.515, -172.728, 0.22 ) }
    dend_24 { pt3dadd( -16.2318, 146.901, -173.145, 0.22 ) }
    dend_24 { pt3dadd( -16.2397, 147.035, -173.297, 0.22 ) }
    dend_24 { pt3dadd( -16.2472, 147.224, -173.508, 0.22 ) }
    dend_24 { pt3dadd( -16.265, 147.996, -174.342, 0.88 ) }
    dend_24 { pt3dadd( -16.2669, 148.314, -174.712, 1.11 ) }
    dend_24 { pt3dadd( -16.2604, 150.019, -176.618, 0.22 ) }
    dend_24 { pt3dadd( -16.267, 150.322, -176.936, 0.37 ) }
    dend_24 { pt3dadd( -16.2793, 150.575, -177.169, 0.37 ) }
    dend_24 { pt3dadd( -16.3004, 150.869, -177.401, 0.37 ) }
    dend_24 { pt3dadd( -16.313, 150.989, -177.475, 0.37 ) }
    dend_24 { pt3dadd( -16.4142, 151.781, -177.864, 1.47 ) }
    dend_24 { pt3dadd( -16.4801, 152.17, -177.979, 1.47 ) }
    dend_24 { pt3dadd( -16.77, 153.234, -178.433, 0.22 ) }
    dend_24 { pt3dadd( -16.8651, 153.529, -178.577, 0.22 ) }
    dend_24 { pt3dadd( -17.0959, 154.237, -178.929, 1.25 ) }
    dend_24 { pt3dadd( -17.2305, 154.668, -179.14, 1.69 ) }
    dend_24 { pt3dadd( -17.3525, 155.079, -179.372, 1.69 ) }
    dend_24 { pt3dadd( -17.813, 156.754, -180.372, 0.29 ) }
    dend_24 { pt3dadd( -17.8945, 157.12, -180.596, 0.29 ) }
    dend_24 { pt3dadd( -17.9647, 157.7, -180.929, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_24 { pt3dadd( -17.959, 158.128, -181.19, 0.74 ) }
    dend_24 { pt3dadd( -17.8079, 159.176, -181.878, 0.07 ) }
    dend_24 { pt3dadd( -17.7883, 159.248, -181.926, 0.15 ) }
    dend_24 { pt3dadd( -17.5223, 159.717, -182.2, 0.74 ) }
    dend_24 { pt3dadd( -16.9526, 160.661, -182.931, 0.66 ) }
    dend_24 { pt3dadd( -16.5252, 161.416, -183.763, 0.66 ) }
    dend_24 { pt3dadd( -16.4443, 161.533, -183.931, 0.66 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 7/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -16.4443, 161.533, -183.931, 0.22 ) }
    dend_26 { pt3dadd( -16.1358, 162.244, -184.341, 0.22 ) }
    dend_26 { pt3dadd( -16.0016, 162.552, -184.506, 0.22 ) }
    dend_26 { pt3dadd( -15.9703, 162.631, -184.542, 0.22 ) }
    dend_26 { pt3dadd( -15.8107, 163.092, -184.711, 0.15 ) }
    dend_26 { pt3dadd( -15.6288, 163.656, -184.882, 0.74 ) }
    dend_26 { pt3dadd( -15.5913, 163.784, -184.923, 0.66 ) }
    dend_26 { pt3dadd( -15.5553, 163.982, -184.983, 0.59 ) }
    dend_26 { pt3dadd( -15.5009, 164.302, -185.085, 0.29 ) }
    dend_26 { pt3dadd( -15.4579, 164.608, -185.175, 0.22 ) }
    dend_26 { pt3dadd( -15.4254, 164.861, -185.239, 0.22 ) }
    dend_26 { pt3dadd( -15.3643, 165.333, -185.354, 0.22 ) }
    dend_26 { pt3dadd( -15.3501, 165.448, -185.389, 0.66 ) }
    dend_26 { pt3dadd( -15.2828, 166.002, -185.597, 0.22 ) }
    dend_26 { pt3dadd( -15.2361, 166.309, -185.736, 0.52 ) }
    dend_26 { pt3dadd( -15.2156, 166.433, -185.796, 0.52 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -16.4443, 161.533, -183.931, 0.22 ) }
    dend_25 { pt3dadd( -16.4572, 162.121, -184.305, 0.22 ) }
    dend_25 { pt3dadd( -16.4398, 162.369, -184.461, 0.22 ) }
    dend_25 { pt3dadd( -16.3915, 162.714, -184.701, 0.22 ) }
    dend_25 { pt3dadd( -16.3007, 163.432, -185.226, 1.11 ) }
    dend_25 { pt3dadd( -16.2746, 163.66, -185.396, 1.11 ) }
    dend_25 { pt3dadd( -16.1734, 164.654, -186.128, 0.29 ) }
    dend_25 { pt3dadd( -16.138, 164.936, -186.334, 0.29 ) }
    dend_25 { pt3dadd( -16.0685, 165.656, -186.815, 0.88 ) }
    dend_25 { pt3dadd( -16.0239, 166.483, -187.301, 0.22 ) }
    dend_25 { pt3dadd( -16.0243, 166.544, -187.337, 0.22 ) }
    dend_25 { pt3dadd( -16.0352, 166.791, -187.483, 0.22 ) }
    dend_25 { pt3dadd( -16.0755, 167.138, -187.725, 1.69 ) }
    dend_25 { pt3dadd( -16.2568, 168.414, -188.71, 0.22 ) }
    dend_25 { pt3dadd( -16.3112, 168.818, -189.065, 0.22 ) }
    dend_25 { pt3dadd( -16.4227, 169.821, -190.062, 0.74 ) }
    dend_25 { pt3dadd( -16.4409, 169.982, -190.262, 0.81 ) }
    dend_25 { pt3dadd( -16.5302, 171.052, -191.824, 0.22 ) }
    dend_25 { pt3dadd( -16.5313, 171.095, -191.904, 0.22 ) }
    dend_25 { pt3dadd( -16.5096, 171.445, -192.684, 0.66 ) }
    dend_25 { pt3dadd( -16.5051, 171.472, -192.748, 0.81 ) }
    dend_25 { pt3dadd( -16.3162, 172.303, -194.793, 0.22 ) }
    dend_25 { pt3dadd( -16.2624, 172.494, -195.276, 0.22 ) }
    dend_25 { pt3dadd( -16.0615, 173.047, -196.655, 1.03 ) }
    dend_25 { pt3dadd( -15.9874, 173.24, -197.125, 0.66 ) }
    dend_25 { pt3dadd( -15.9349, 173.377, -197.479, 0.66 ) }
    dend_25 { pt3dadd( -15.587, 174.137, -199.577, 0.15 ) }
    dend_25 { pt3dadd( -15.5324, 174.244, -199.886, 0.15 ) }
    dend_25 { pt3dadd( -15.5013, 174.319, -200.109, 0.74 ) }
    dend_25 { pt3dadd( -15.4711, 174.399, -200.346, 0.74 ) }
    dend_25 { pt3dadd( -15.1701, 175.246, -202.979, 0.15 ) }
    dend_25 { pt3dadd( -15.1311, 175.352, -203.347, 0.44 ) }
    dend_25 { pt3dadd( -15.1036, 175.422, -203.608, 0.44 ) }
    dend_25 { pt3dadd( -15.075, 175.517, -204.016, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_106 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_132 ModelViewParmSubset_2.append()
    dend_119 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_134 ModelViewParmSubset_2.append()
    dend_133 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_111 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_127 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_131 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_132 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_134 ModelViewParmSubset_4.append()
    dend_133 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_111 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_112 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_131 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_106, dend_75, dend_60, dend_53, dend_0, axon_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, axon_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
    ModelViewParmSubset_5 = new SectionList()
    dend_106 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_118 ModelViewParmSubset_5.append()
    dend_107 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_132 ModelViewParmSubset_5.append()
    dend_119 ModelViewParmSubset_5.append()
    dend_109 ModelViewParmSubset_5.append()
    dend_108 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_77 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_134 ModelViewParmSubset_5.append()
    dend_133 ModelViewParmSubset_5.append()
    dend_123 ModelViewParmSubset_5.append()
    dend_120 ModelViewParmSubset_5.append()
    dend_111 ModelViewParmSubset_5.append()
    dend_110 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_125 ModelViewParmSubset_5.append()
    dend_124 ModelViewParmSubset_5.append()
    dend_122 ModelViewParmSubset_5.append()
    dend_121 ModelViewParmSubset_5.append()
    dend_113 ModelViewParmSubset_5.append()
    dend_112 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_127 ModelViewParmSubset_5.append()
    dend_126 ModelViewParmSubset_5.append()
    dend_115 ModelViewParmSubset_5.append()
    dend_114 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_131 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_128 ModelViewParmSubset_5.append()
    dend_117 ModelViewParmSubset_5.append()
    dend_116 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_130 ModelViewParmSubset_5.append()
    dend_129 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_106 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_53 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_61 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_59 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_54 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_92 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_84 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_65 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_62 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_134]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_134 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_133]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_133 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_99 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_96 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_85 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_79 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_78 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_73 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_43 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_32 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_19 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_14 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_8 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_3 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_124 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_112 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_103 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_100 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_87 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_86 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_69 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_52 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_49 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_37 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_36 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_34 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_15 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_4 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_114 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_81 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_120 = new SectionList()
    dend_16 OneSecGrp_SectionRef_120.append()

    // Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_121 = new SectionList()
    dend_12 OneSecGrp_SectionRef_121.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_11 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_75 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_76 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_91 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_60 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_77 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_13 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_95 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_118 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_107 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_132]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_132 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_67 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_35 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_72 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_109 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_111 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_119 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_113 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_123 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_125 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_71 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_108 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_74 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_83 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_127 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_55 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_115 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_33 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_10 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_120 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_110 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_58 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_80 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_94 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_57 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_126 OneSecGrp_SectionRef_102.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_93 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_117 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_122 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_97 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_56 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_82 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_9 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_116 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_88 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_38 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_7 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_128 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_131]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_131 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_64 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_121 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_39 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_98 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_63 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_129 OneSecGrp_SectionRef_134.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_130 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_41 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_18 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_5 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_40 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_70 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_50 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_6 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_51 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_21 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_20 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_29 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_22 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_104 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_47 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_28 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_44 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_105 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_102 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_45 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_23 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_101 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_17 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_46 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_135 = new SectionList()
    dend_27 OneSecGrp_SectionRef_135.append()

    // Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_136 = new SectionList()
    dend_24 OneSecGrp_SectionRef_136.append()

    // Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_137 = new SectionList()
    dend_26 OneSecGrp_SectionRef_137.append()

    // Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_138 = new SectionList()
    dend_25 OneSecGrp_SectionRef_138.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()
    dend_131 basal.append()
    dend_132 basal.append()
    dend_133 basal.append()
    dend_134 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_0, dend_0, dend_0, axon_0, axon_0, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_132, dend_132, dend_132, dend_132, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_123, dend_123, dend_123, dend_123, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_94, dend_93, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_63, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_125, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_122, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_80, dend_80, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_131, dend_131, dend_131, dend_131, dend_128, dend_128, dend_128, dend_117, dend_117, dend_116, dend_116, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_130, dend_129, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_94 all.append()
    dend_93 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_122 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_112 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_86 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_130 all.append()
    dend_129 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_106 nseg = 3
    dend_53 nseg = 3
    dend_61 nseg = 3
    dend_59 nseg = 11
    dend_54 nseg = 3
    dend_92 nseg = 5
    dend_84 nseg = 3
    dend_65 nseg = 3
    dend_62 nseg = 3
    dend_134 nseg = 3
    dend_133 nseg = 3
    dend_99 nseg = 3
    dend_96 nseg = 3
    dend_85 nseg = 3
    dend_79 nseg = 3
    dend_78 nseg = 7
    dend_73 nseg = 3
    dend_68 nseg = 3
    dend_43 nseg = 7
    dend_32 nseg = 3
    dend_19 nseg = 7
    dend_14 nseg = 5
    dend_8 nseg = 3
    dend_3 nseg = 5
    dend_124 nseg = 3
    dend_112 nseg = 3
    dend_103 nseg = 5
    dend_100 nseg = 5
    dend_87 nseg = 5
    dend_86 nseg = 5
    dend_69 nseg = 13
    dend_52 nseg = 3
    dend_49 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 3
    dend_34 nseg = 9
    dend_15 nseg = 3
    dend_4 nseg = 3
    dend_114 nseg = 3
    dend_81 nseg = 9
    dend_16 nseg = 3
    dend_12 nseg = 7
    dend_11 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_BTC_a4bce5d682_0_0


