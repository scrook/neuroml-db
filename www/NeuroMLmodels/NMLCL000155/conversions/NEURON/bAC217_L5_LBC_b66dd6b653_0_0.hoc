// Cell: bAC217_L5_LBC_b66dd6b653_0_0
/*
{
  "id" : "bAC217_L5_LBC_b66dd6b653_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "5.31735, -9.24063, 0.0, 4.15585", "4.69678, -8.30052, 0.0, 7.05537", "4.07621, -7.3604, 0.0, 9.49099", "3.45565, -6.42028, 0.0, 11.817", "2.83508, -5.48017, 0.0, 13.4599", "2.21451, -4.54005, 0.0, 14.7908", "1.59394, -3.59994, 0.0, 16.0669", "0.973375, -2.65982, 0.0, 17.0826", "0.352808, -1.7197, 0.0, 17.8648", "-0.26776, -0.779586, 0.0, 18.3637", "-0.888328, 0.160531, 0.0, 18.8035", "-1.5089, 1.10065, 0.0, 19.2009", "-2.12946, 2.04076, 0.0, 19.0899", "-2.75003, 2.98088, 0.0, 18.8821", "-3.3706, 3.921, 0.0, 18.6116", "-3.99117, 4.86111, 0.0, 17.4033", "-4.61173, 5.80123, 0.0, 16.1027", "-5.2323, 6.74135, 0.0, 14.2403", "-5.85287, 7.68146, 0.0, 11.7641", "-6.47344, 8.62158, 0.0, 8.46221", "-7.094, 9.5617, 0.0, 4.77037" ]
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.24584, -7.07805, -7.59, 7.74", "6.24584, -7.07805, -7.59, 7.74", "6.46749, -7.51964, -7.51064, 6.71", "6.87838, -8.3382, -7.36353, 6.71", "7.3368, -9.25148, -7.19939, 5.68", "7.91543, -10.4042, -6.99222, 5.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-8.43415, -4.97801, 4.28, 6.78", "-8.43415, -4.97801, 4.28, 6.78", "-9.85494, -7.1092, 3.25656, 4.79" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "8.84582, -5.66801, -7.77, 1.99", "8.84582, -5.66801, -7.77, 1.99", "8.94278, -6.39734, -8.84629, 1.99", "9.0889, -8.28006, -11.5088, 1.84", "9.23083, -10.213, -14.1441, 1.62", "9.45898, -12.1591, -16.6934, 1.47", "9.63601, -13.6691, -18.6716, 1.18", "9.77271, -15.0261, -20.4574, 1.4", "9.81087, -15.5942, -21.2118, 1.77", "9.85162, -17.0004, -22.9115, 2.06", "9.95098, -18.8302, -24.9084, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "6.40587, 2.88198, -15.77, 2.06", "6.40587, 2.88198, -15.77, 2.06", "6.9178, 3.08979, -16.8729, 1.55", "7.34169, 3.33175, -17.8872, 1.4", "8.02538, 3.80231, -19.5824, 1.25", "8.67884, 4.24318, -21.0437, 1.47", "9.13839, 4.53805, -21.9773, 1.47", "9.37859, 4.70354, -22.4246, 1.47", "10.0944, 5.21904, -23.6757, 1.18", "11.0358, 5.79446, -25.0613, 1.18", "11.6984, 6.08846, -25.8483, 1.33", "12.472, 6.32058, -26.5966, 1.11", "13.3007, 6.46855, -27.2674, 0.81", "14.5977, 6.54347, -28.1926, 0.96", "15.554, 6.46049, -28.8144, 1.18", "16.4616, 6.23464, -29.3866, 0.88", "16.9553, 6.02123, -29.7245, 1.03", "17.6172, 5.57594, -30.1713, 0.74", "18.0848, 5.16509, -30.4942, 0.59", "18.891, 4.38874, -31.0217, 0.74", "19.2138, 4.10214, -31.2792, 0.52", "19.5433, 3.90631, -31.6261, 0.52", "20.0597, 3.87099, -32.2738, 0.44", "20.6018, 4.07981, -33.0092, 0.52", "21.1872, 4.39196, -33.7172, 0.88", "22.0021, 4.84852, -34.5773, 1.03", "22.472, 5.08843, -35.0366, 1.03", "23.1982, 5.40281, -35.7117, 0.66", "24.1554, 5.688, -36.5624, 0.44", "25.012, 5.63222, -37.1849, 0.29", "25.5166, 5.24453, -37.3789, 0.37", "25.9947, 4.50583, -37.4112, 0.22", "26.4388, 3.47004, -37.3409, 0.22", "26.7436, 2.44831, -37.2158, 0.15", "26.913, 1.59372, -37.0879, 0.15", "27.0523, -0.0217121, -36.7795, 0.15", "27.0564, -0.983765, -36.5597, 0.15", "27.0253, -1.79143, -36.3538, 0.22", "26.9761, -2.40029, -36.1778, 0.22", "26.885, -3.01343, -35.9821, 0.22", "26.5815, -4.28607, -35.5628, 0.15", "26.4446, -4.69295, -35.4492, 0.22", "33.3741, -7.86537, -41.2084, 0.22", "38.9228, -11.616, -48.0198, 0.22", "45.4847, -14.6769, -54.2506, 0.22", "52.7124, -16.4459, -60.2407, 0.22", "57.9242, -19.631, -67.5853, 0.22", "63.2066, -22.5268, -74.9989, 0.22", "67.6708, -26.4178, -82.4944, 0.22", "72.2888, -30.8155, -89.6066, 0.22", "77.0034, -34.2515, -97.1708, 0.22", "82.3519, -38.4596, -103.874, 0.22", "87.9389, -43.879, -109.412, 0.22", "93.9915, -47.3219, -115.951, 0.22", "100.169, -51.4232, -121.974, 0.22", "106.817, -56.6435, -126.422, 0.22", "113.717, -61.3593, -131.05, 0.22", "121.515, -64.2182, -135.768, 0.22", "129.424, -67.4366, -140.051, 0.22", "136.452, -71.4026, -145.163, 0.22", "142.316, -74.9548, -151.815, 0.22", "148.351, -79.5257, -157.64, 0.22", "154.843, -83.1325, -163.648, 0.22", "160.047, -87.0476, -170.636, 0.22", "164.572, -91.7314, -177.624, 0.22", "167.189, -95.8578, -185.833, 0.22", "169.699, -101.656, -192.997, 0.22", "173.592, -106.737, -200.088, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.51417, 8.71199, -10.34, 2.14", "-4.51417, 8.71199, -10.34, 2.14", "-4.53374, 9.88931, -9.92315, 2.14", "-4.55823, 11.0742, -9.57472, 1.84", "-4.58436, 12.6085, -9.26433, 1.62", "-4.61245, 14.5677, -8.98087, 1.99", "-4.6272, 15.4143, -8.93515, 2.21", "-4.64957, 17.0874, -9.00826, 1.4", "-4.67162, 18.5616, -9.23715, 0.96", "-4.70573, 20.2373, -9.65874, 1.11", "-4.74389, 21.4534, -10.184, 0.66", "-4.83351, 23.3048, -11.2002, 0.96", "-4.90541, 24.3801, -11.8453, 0.96", "-5.00682, 25.5078, -12.528, 1.4", "-5.17541, 26.9658, -13.3462, 1.11", "-5.65424, 29.8486, -14.7199, 1.18", "-5.89572, 30.9717, -15.1567, 1.47", "-6.11195, 31.8414, -15.3869, 1.03", "-6.52447, 33.3466, -15.6625, 0.74", "-6.86945, 34.6009, -15.7738, 0.96", "-7.16488, 35.7377, -15.7316, 0.59", "-7.35589, 36.5099, -15.5816, 0.52", "-7.5909, 37.4911, -15.382, 0.88", "-7.68175, 37.916, -15.2895, 1.11", "-7.83717, 38.9642, -15.0759, 1.11", "-7.98344, 40.396, -14.7584, 1.03", "-8.09349, 41.9827, -14.3702, 0.96", "-8.1321, 42.6731, -14.2221, 1.18", "-8.2599, 44.6885, -13.9116, 0.96", "-8.35723, 46.211, -13.7822, 0.88", "-8.43493, 47.5955, -13.757, 1.11", "-8.48432, 48.5009, -13.8305, 1.11", "-8.58397, 50.3343, -14.1867, 1.03", "-8.68755, 52.0619, -14.6592, 0.74", "-8.77857, 53.2972, -15.1367, 0.74", "-8.84974, 54.1204, -15.5171, 0.81", "-8.96946, 55.7, -16.3139, 0.59", "-9.04881, 57.0099, -16.9966, 0.74", "-9.06508, 57.6421, -17.3132, 1.18", "-9.03176, 59.0042, -18.0064, 0.96", "-8.99002, 59.9106, -18.4905, 1.03", "-8.92295, 60.95, -19.0452, 0.96", "-8.82088, 62.0203, -19.5772, 0.81", "-8.70683, 63.0691, -20.0487, 0.74", "-8.58176, 64.2217, -20.5733, 0.88", "-8.41002, 65.5082, -21.1189, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.31585, 9.99201, 0.0, 5.09", "2.31585, 9.99201, 0.0, 5.09", "2.51882, 10.9507, -0.013059, 3.1", "2.85379, 12.3528, -0.0535541, 2.43", "3.03374, 13.0383, -0.104515, 2.43", "3.36654, 14.2936, -0.226056, 2.21", "3.65411, 15.4252, -0.348303, 1.99", "3.93445, 16.5501, -0.473581, 1.92", "4.32285, 18.1357, -0.652316, 1.84", "4.58251, 19.1625, -0.790069, 2.14", "4.74087, 19.8066, -0.891544, 2.43", "4.99263, 20.863, -1.09865, 2.43", "5.18251, 21.7012, -1.28679, 2.43", "5.40231, 22.8276, -1.56602, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-7.094, 9.5617, 0.0, 0.681837", "-15.3575, 22.0803, 0.0, 0.681837", "-23.6209, 34.5989, 0.0, 0.681837" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "7.91543, -10.4042, -6.99222, 1.99", "7.52698, -12.9885, -7.59346, 1.99", "7.14558, -15.5575, -8.15162, 2.21", "6.77879, -18.0684, -8.69377, 2.36", "6.60628, -19.2086, -8.93893, 2.51", "6.19446, -21.6395, -9.4521, 1.92", "6.00184, -22.7765, -9.69213, 1.84", "5.75117, -24.2739, -10.013, 2.29", "5.51082, -25.6083, -10.2838, 3.32", "5.41768, -26.0684, -10.354, 3.32", "4.97883, -28.0622, -10.6803, 2.95" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "7.91543, -10.4042, -6.99222, 2.43", "8.89498, -11.5606, -6.30512, 2.43", "9.66643, -12.5681, -5.68784, 2.43", "10.7653, -14.1166, -4.66764, 2.21", "11.5842, -15.3035, -3.82812, 2.43", "12.361, -16.4256, -3.06709, 2.58", "13.2464, -17.7044, -2.19969, 2.06", "14.1344, -19.1102, -1.21661, 2.06", "14.9367, -20.4477, -0.267391, 2.43", "15.7321, -21.8069, 0.648545, 2.43", "16.3803, -22.9367, 1.46293, 2.51" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.85494, -7.1092, 3.25656, 3.76", "-10.159, -8.09035, 2.89955, 3.76", "-10.4263, -8.95266, 2.58579, 2.36", "-10.9347, -10.5927, 1.98903, 1.99", "-11.2473, -11.601, 1.62214, 2.21" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.85494, -7.1092, 3.25656, 3.32", "-11.3607, -8.56983, 5.14446, 3.32", "-12.716, -9.8845, 6.84372, 2.29", "-13.848, -10.9826, 8.26306, 1.84", "-14.4316, -11.5487, 8.99473, 1.62", "-15.2069, -12.3008, 9.9668, 1.92" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "9.95098, -18.8302, -24.9084, 0.96", "11.4357, -18.6475, -25.0711, 0.96", "12.4754, -18.4227, -25.1912, 0.81", "13.0694, -18.2317, -25.2637, 0.81", "13.739, -17.9408, -25.3946, 0.88", "14.4418, -17.572, -25.562, 1.11", "15.3325, -17.0524, -25.7949, 0.66", "16.0805, -16.5039, -26.0222, 0.59", "16.7949, -15.9307, -26.2517, 0.66", "17.8903, -15.0318, -26.5995, 0.59", "18.399, -14.6094, -26.7569, 0.81", "18.9465, -14.1637, -26.8942, 1.18", "19.9898, -13.3557, -27.096, 1.11", "20.7036, -12.8081, -27.1951, 0.88", "21.7655, -11.9859, -27.3216, 0.59", "22.7799, -11.1511, -27.4509, 0.52", "23.5332, -10.4596, -27.61, 0.66", "24.1003, -9.86624, -27.7807, 1.11", "24.8476, -8.97414, -28.11, 0.59", "25.6711, -7.88193, -28.5975, 0.44", "26.2093, -7.07079, -29.0418, 0.59", "26.7099, -6.22581, -29.5675, 0.59", "27.2187, -5.31589, -30.1804, 0.22", "27.579, -4.66806, -30.6563, 0.22", "27.8231, -4.2648, -30.9583, 0.59", "28.3002, -3.53331, -31.4733, 0.96", "28.6635, -3.03567, -31.7945, 0.96", "29.1963, -2.37121, -32.1883, 0.52", "30.0322, -1.37834, -32.738, 0.37", "30.669, -0.707569, -33.0602, 0.37", "31.3282, -0.078169, -33.3307, 0.37", "31.9099, 0.423088, -33.5224, 0.37", "32.5624, 0.948367, -33.715, 0.59", "32.7305, 1.07043, -33.7554, 0.59", "33.5835, 1.6564, -33.8424, 0.29", "34.0589, 1.97581, -33.8727, 0.29", "34.745, 2.40533, -33.8776, 0.59", "35.3465, 2.77639, -33.8679, 0.66", "36.4593, 3.49369, -33.8356, 0.52", "37.7735, 4.37911, -33.7944, 0.52", "38.3855, 4.79528, -33.7734, 0.37", "39.0339, 5.20904, -33.7331, 0.44", "39.9524, 5.78134, -33.6608, 0.52", "40.704, 6.26738, -33.607, 0.52", "41.3415, 6.6866, -33.5742, 0.22", "41.9094, 7.05198, -33.5732, 0.22", "42.8342, 7.63185, -33.5644, 0.59", "43.6471, 8.14323, -33.5562, 0.29", "44.3776, 8.60966, -33.6047, 0.15", "44.739, 8.85783, -33.6595, 0.37", "45.2719, 9.27375, -33.7299, 0.66", "46.0157, 9.94061, -33.825, 0.15", "46.5021, 10.4321, -33.8937, 0.29", "47.4417, 11.4424, -33.9898, 0.29", "48.2506, 12.3923, -34.0425, 0.15", "49.1678, 13.6161, -34.0562, 0.22", "49.4853, 14.086, -34.0434, 0.66", "49.7335, 14.4884, -34.0226, 0.66", "49.9459, 14.8435, -33.9763, 0.66", "50.49, 15.743, -33.8032, 0.15", "50.8708, 16.3503, -33.7648, 0.15", "51.391, 17.125, -33.8643, 0.15", "52.0307, 17.9924, -34.0558, 0.22", "52.6798, 18.7918, -34.3022, 0.37", "53.0777, 19.2382, -34.5037, 0.81", "54.2152, 20.3705, -35.2775, 0.07", "54.9752, 21.0235, -35.8631, 0.07", "55.3679, 21.3097, -36.2047, 0.07", "55.696, 21.5209, -36.503, 0.44", "56.2927, 21.8532, -37.0314, 0.59", "56.964, 22.18, -37.5638, 0.81", "58.1105, 22.6718, -38.3302, 0.29", "59.4327, 23.2253, -39.1212, 0.07", "60.0227, 23.4911, -39.4508, 0.07", "60.8038, 23.8821, -39.8939, 0.74", "61.2308, 24.1248, -40.0751, 0.74", "61.6057, 24.3756, -40.1833, 0.44", "62.1541, 24.7947, -40.2629, 0.66", "62.9378, 25.4142, -40.2206, 0.15", "64.0277, 26.1998, -40.0682, 0.15", "65.8398, 27.6531, -39.6505, 0.15", "66.1652, 27.9141, -39.5482, 0.44", "66.8003, 28.3759, -39.2726, 0.22", "67.3983, 28.6776, -38.906, 0.22", "68.027, 28.7801, -38.4337, 0.29", "76.5619, 33.1721, -41.1571, 0.29", "85.294, 36.4008, -44.7454, 0.29", "94.7054, 38.117, -47.5789, 0.29", "104.207, 38.5939, -50.5835, 0.29", "113.574, 37.9714, -53.9644, 0.29", "121.998, 37.192, -59.2537, 0.29", "130.713, 35.5669, -63.8311, 0.29", "139.343, 34.2234, -68.6547, 0.29", "148.448, 34.3335, -72.7332, 0.29", "157.606, 32.6279, -76.3091, 0.29", "166.899, 31.6064, -79.7941, 0.29", "176.532, 31.3793, -82.3805, 0.29", "185.332, 29.1553, -86.5246, 0.29", "194.228, 26.8914, -90.4343, 0.29", "201.838, 22.3958, -95.0624, 0.29", "209.433, 19.4942, -100.846, 0.29", "217.707, 18.2686, -106.286, 0.29", "225.613, 16.2374, -112.023, 0.29", "234.671, 15.2846, -116.096, 0.29", "244.203, 15.1301, -119.041, 0.29", "253.269, 16.7182, -122.893, 0.29", "261.908, 19.936, -126.709, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "9.95098, -18.8302, -24.9084, 1.11", "10.3042, -20.2164, -25.5313, 1.11", "10.6554, -21.2803, -25.9779, 0.96", "10.9764, -22.1651, -26.3193, 0.88", "11.5098, -23.4848, -26.8877, 1.03", "11.7835, -24.1034, -27.1911, 1.33", "12.2041, -24.9429, -27.6663, 1.62", "12.8123, -25.7343, -28.3554, 0.81", "13.1443, -26.0188, -28.7346, 0.66", "13.9431, -26.4016, -29.7354, 0.66", "14.3059, -26.4902, -30.2135, 0.66", "14.8474, -26.5547, -30.9921, 0.66", "15.5143, -26.6299, -32.0376, 0.66", "15.853, -26.7125, -32.6101, 0.59", "16.6499, -27.1828, -34.0009, 0.66", "16.9144, -27.573, -34.4839, 1.11", "17.0585, -27.9839, -34.764, 1.62", "17.3454, -29.0572, -35.3574, 1.77", "17.6631, -30.4261, -35.9916, 1.47", "17.8758, -31.511, -36.4321, 1.99", "18.0521, -32.4892, -36.7922, 1.7", "18.4177, -34.3117, -37.5054, 0.96", "18.724, -35.4893, -38.0058, 1.11", "18.959, -36.1331, -38.3203, 0.66", "19.3148, -36.8118, -38.7353, 0.59", "19.8686, -37.5113, -39.2556, 0.44", "20.6486, -38.0644, -39.8433, 0.44", "21.4097, -38.2692, -40.3032, 0.37", "22.1588, -38.3023, -40.6945, 0.81", "22.4716, -38.2817, -40.847, 0.81", "23.539, -38.1371, -41.3707, 0.59", "24.9144, -37.8964, -42.0186, 0.59", "25.8008, -37.7241, -42.4407, 0.44", "26.3161, -37.6345, -42.683, 0.29", "26.861, -37.5671, -42.9079, 0.29", "28.1591, -37.4521, -43.3667, 0.29", "28.6304, -37.4343, -43.502, 1.03", "29.2598, -37.459, -43.6231, 1.25", "30.2464, -37.5276, -43.7785, 0.37", "31.4294, -37.6112, -43.9385, 0.22", "32.4787, -37.6704, -44.0325, 0.22", "32.9837, -37.7052, -44.0313, 0.66", "33.5283, -37.751, -44.03, 0.88", "39.8643, -42.7933, -49.0087, 0.88", "45.437, -48.1772, -54.5145, 0.88", "50.9281, -54.1712, -59.4415, 0.88", "56.602, -60.7806, -63.2467, 0.88", "64.1527, -65.8139, -66.0766, 0.88", "71.283, -71.4851, -68.7879, 0.88", "79.3486, -76.3535, -70.0533, 0.88", "87.9024, -80.485, -70.3978, 0.88", "96.5702, -84.1445, -69.0437, 0.88", "104.947, -88.3259, -67.4024, 0.88", "112.966, -93.2331, -65.9978, 0.88", "121.857, -96.5785, -65.6555, 0.88", "130.39, -100.762, -65.8514, 0.88", "139.144, -104.435, -65.3675, 0.88", "147.645, -108.609, -64.5494, 0.88", "155.402, -114.025, -65.4713, 0.88", "163.792, -118.487, -65.2599, 0.88", "171.985, -123.308, -65.2836, 0.88", "180.491, -127.185, -63.5601, 0.88", "189.415, -130.105, -62.083, 0.88", "198.492, -132.885, -61.5931, 0.88", "207.742, -134.802, -60.5358, 0.88", "216.832, -137.582, -60.4807, 0.88", "225.881, -140.252, -61.642, 0.88", "234.792, -141.518, -64.6996, 0.88" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "173.592, -106.737, -200.088, 0.15", "179.877, -110.428, -206.557, 0.15", "185.427, -114.484, -213.466, 0.15", "191.351, -116.599, -220.91, 0.15", "197.479, -116.849, -228.484, 0.15", "204.523, -116.569, -235.214, 0.15", "212.517, -115.817, -240.737, 0.15", "220.881, -117.041, -245.587, 0.15", "229.233, -117.102, -250.609, 0.15", "237.3, -118.349, -255.933, 0.15", "245.47, -120.15, -260.933, 0.15", "253.794, -120.624, -265.98, 0.15", "262.266, -120.127, -270.771, 0.15" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "173.592, -106.737, -200.088, 0.07", "181.797, -112.427, -209.673, 0.15", "189.926, -119.39, -218.447, 0.15", "199.132, -125.657, -226.665, 0.15", "209.695, -132.709, -232.165, 0.15", "220.235, -139.822, -237.631, 0.15", "230.938, -147.788, -241.311, 0.15", "243.012, -154.378, -242.847, 0.15", "255.409, -160.389, -244.166, 0.15", "266.435, -168.743, -244.617, 0.15", "276.672, -177.65, -247.341, 0.15", "288.256, -185.198, -247.961, 0.15", "299.59, -192.644, -250.728, 0.15" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-8.41002, 65.5082, -21.1189, 0.52", "-8.52396, 66.4172, -21.4057, 0.52", "-8.59382, 66.838, -21.5204, 0.29", "-8.66417, 67.1829, -21.6018, 0.29", "-8.73502, 67.5004, -21.665, 0.29", "-8.88494, 68.1047, -21.7696, 0.52", "-9.02484, 68.6275, -21.849, 0.74", "-9.17003, 69.0979, -21.8931, 0.81", "-9.30687, 69.5453, -21.9184, 0.81", "-9.48927, 70.15, -21.9278, 0.29", "-9.61438, 70.5852, -21.913, 0.37", "-9.72404, 70.9898, -21.8804, 0.44", "-9.79642, 71.2591, -21.8581, 0.29", "-9.88894, 71.6319, -21.8488, 0.29", "-9.95844, 71.9365, -21.8614, 0.44", "-10.0364, 72.3248, -21.9026, 0.81", "-10.0767, 72.5932, -21.9412, 0.74", "-10.1323, 73.0777, -22.0211, 0.52", "-10.1832, 73.6304, -22.1165, 0.52", "-10.2025, 74.016, -22.1851, 0.52", "-10.1977, 74.672, -22.2814, 0.44", "-10.1613, 75.1855, -22.3417, 0.44", "-10.1176, 75.5739, -22.3737, 0.52", "-10.054, 75.9963, -22.3977, 0.66", "-9.99374, 76.3263, -22.4118, 0.66", "-9.88774, 76.8625, -22.4469, 0.44", "-9.77369, 77.4631, -22.5208, 0.44", "-9.73188, 77.7322, -22.5706, 0.52", "-9.71012, 77.9568, -22.6224, 0.52", "-9.71435, 78.5396, -22.7732, 0.44", "-9.77186, 79.0553, -22.9352, 0.44", "-9.88824, 79.6219, -23.1483, 0.59", "-9.99034, 79.9733, -23.2906, 0.81", "-10.122, 80.3644, -23.4603, 1.03", "-10.3747, 81.0336, -23.7581, 0.52", "-10.5994, 81.5642, -23.9913, 0.22", "-10.7364, 81.8972, -24.1482, 0.22", "-10.8756, 82.2585, -24.3114, 0.37", "-11.0308, 82.7099, -24.5088, 0.52", "-11.1055, 82.9643, -24.6161, 0.52", "-11.1695, 83.2177, -24.7117, 0.22", "-11.3192, 83.8824, -24.9107, 0.22", "-11.4178, 84.3628, -25.0198, 0.22", "-11.5005, 84.7686, -25.0779, 0.52", "-11.5773, 85.1162, -25.0887, 0.81", "-11.663, 85.4668, -25.0705, 0.96", "-11.7379, 85.7343, -25.0336, 1.03", "-11.9253, 86.271, -24.8793, 0.52", "-12.0978, 86.7027, -24.7289, 0.22", "-12.222, 86.9721, -24.616, 0.22", "-12.3496, 87.2198, -24.5071, 0.37", "-12.4775, 87.4488, -24.4085, 0.59", "-12.8657, 88.0964, -24.1463, 0.22", "-13.0645, 88.4271, -24.0309, 0.37", "-13.3617, 88.9378, -23.8835, 0.81", "-13.6212, 89.4182, -23.7686, 0.81", "-13.8067, 89.7988, -23.6893, 1.03", "-13.9291, 90.0739, -23.6444, 1.03", "-14.144, 90.6062, -23.5984, 0.52", "-14.2383, 90.8692, -23.5843, 0.22", "-14.3253, 91.1696, -23.5827, 0.22", "-14.376, 91.3903, -23.5817, 0.22", "-14.4224, 91.6333, -23.5812, 0.22", "-14.4959, 92.0804, -23.5816, 0.22", "-14.5427, 92.4259, -23.6024, 0.22", "-14.5877, 92.8185, -23.6428, 0.29", "-14.6132, 93.0505, -23.6733, 0.59", "-14.6359, 93.3103, -23.7117, 1.03", "-14.6585, 93.7372, -23.7776, 0.81", "-14.6817, 94.3478, -23.8734, 0.37", "-14.6983, 94.7345, -23.9329, 0.22", "-14.7143, 95.0868, -23.983, 0.22", "-14.7287, 95.4059, -24.0068, 0.22", "-14.7587, 95.8332, -24.0089, 0.29", "-14.8136, 96.1834, -23.9899, 0.81", "-14.8603, 96.3749, -23.9695, 0.81", "-14.9634, 96.7123, -23.9346, 0.81", "-15.16, 97.2772, -23.8799, 1.03", "-15.3477, 97.7582, -23.841, 0.74", "-15.6405, 98.4516, -23.7971, 0.22", "-15.8096, 98.8338, -23.7808, 0.22", "-16.0518, 99.3435, -23.7923, 0.37", "-16.198, 99.6397, -23.8189, 0.29", "-16.3652, 99.9839, -23.8756, 0.66", "-16.5274, 100.343, -23.9442, 0.88", "-16.6986, 100.756, -24.0289, 0.22", "-16.9111, 101.285, -24.1407, 0.22", "-17.0205, 101.579, -24.1973, 0.22", "-17.1096, 101.839, -24.2247, 0.29", "-17.2163, 102.172, -24.2207, 0.29", "-17.3506, 102.582, -24.1619, 0.44", "-17.4855, 102.99, -24.0617, 0.52", "-17.7023, 103.621, -23.864, 0.22", "-17.9219, 104.212, -23.6715, 0.29", "-18.1195, 104.715, -23.4791, 0.44", "-18.3129, 105.175, -23.2892, 0.44", "-18.4931, 105.576, -23.1236, 0.88", "-18.7141, 106.034, -22.9443, 0.59", "-18.9619, 106.527, -22.7776, 0.37", "-19.2606, 107.12, -22.6325, 0.37", "-19.5227, 107.69, -22.5353, 0.29", "-19.7929, 108.346, -22.4579, 0.29", "-19.9399, 108.749, -22.4203, 0.81", "-20.0601, 109.14, -22.3953, 1.4", "-20.2226, 109.796, -22.3769, 1.55", "-20.348, 110.494, -22.3855, 0.74", "-20.3984, 111.082, -22.418, 0.52", "-20.4065, 111.589, -22.4735, 0.52", "-20.3956, 111.974, -22.5312, 0.52", "-20.362, 112.507, -22.6335, 0.52", "-20.3051, 113.108, -22.7979, 0.44", "-20.2052, 114.038, -23.1487, 0.29", "-20.1608, 114.431, -23.3266, 0.29", "-20.118, 114.881, -23.5531, 0.22", "-20.0871, 115.354, -23.7934, 0.29", "-20.0845, 116.012, -24.1075, 0.22", "-20.1229, 116.581, -24.3398, 0.22", "-20.16, 116.896, -24.4367, 0.66", "-20.2042, 117.246, -24.536, 1.55", "-20.3102, 118.102, -24.7637, 0.29", "-20.3912, 118.812, -24.9222, 0.22", "-20.4483, 119.436, -25.0502, 0.52", "-20.466, 119.794, -25.1275, 0.15", "-20.4505, 120.41, -25.3122, 0.15", "-20.4244, 120.649, -25.4075, 0.37", "-20.3829, 120.846, -25.511, 0.37", "-20.2248, 121.385, -25.8612, 0.66", "-20.1512, 121.605, -26.02, 0.22", "-20.0072, 122.051, -26.3516, 0.15", "-19.9365, 122.289, -26.5211, 0.15", "-19.8232, 122.693, -26.8285, 0.22", "-19.747, 122.984, -27.0552, 0.22", "-21.8133, 127.789, -27.638, 0.22", "-24.4379, 132.349, -27.5476, 0.22", "-26.9955, 136.91, -28.1344, 0.22", "-29.5635, 141.327, -29.3955, 0.22", "-32.2751, 145.432, -31.2611, 0.22", "-34.0711, 149.719, -33.7284, 0.22", "-35.9364, 154.395, -35.2624, 0.22", "-37.6442, 159.112, -36.8514, 0.22", "-40.0947, 163.663, -37.839, 0.22", "-41.6346, 168.69, -38.0475, 0.22", "-43.2043, 173.706, -37.7777, 0.22", "-43.8349, 178.842, -36.8224, 0.22", "-43.5353, 183.817, -35.1333, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.41002, 65.5082, -21.1189, 0.59", "-8.54151, 66.3916, -21.9522, 0.59", "-8.59578, 66.8572, -22.3513, 0.59", "-8.73995, 68.3608, -23.539, 0.52", "-8.7831, 68.8839, -23.924, 0.37", "-8.80704, 69.3146, -24.2285, 0.22", "-8.825, 69.9573, -24.6785, 0.22", "-8.8447, 70.6998, -25.2128, 0.29", "-8.86045, 71.4598, -25.7665, 0.44", "-8.86432, 72.4396, -26.4547, 0.74", "-8.85576, 73.3792, -27.1404, 0.74", "-8.78683, 74.3775, -27.8716, 0.29", "-8.62906, 75.5996, -28.7697, 0.37", "-8.57141, 75.961, -29.0268, 0.37", "-8.45778, 76.5256, -29.4082, 0.37", "-8.3226, 77.1028, -29.7757, 0.37", "-8.06986, 78.3401, -30.5238, 0.29", "-7.92706, 79.181, -30.9827, 0.29", "-7.82675, 79.9324, -31.379, 0.29", "-7.76691, 80.6022, -31.74, 0.81", "-7.72562, 81.5645, -32.2858, 1.03", "-7.71022, 82.8657, -33.0312, 0.29", "-7.72106, 83.5934, -33.4908, 0.29", "-7.70788, 84.3479, -33.9859, 0.29", "-7.65513, 85.1177, -34.5071, 0.66", "-7.52756, 86.0583, -35.1536, 0.81", "-7.40692, 86.6348, -35.5478, 0.44", "-7.06105, 87.9378, -36.5066, 0.44", "-6.89285, 88.5225, -36.9599, 0.59", "-6.7198, 89.1316, -37.4112, 0.59", "-6.5047, 89.9972, -38.0276, 0.44", "-6.36015, 90.7171, -38.4808, 0.52", "-6.1864, 91.8959, -39.1167, 0.81", "-6.1141, 92.489, -39.3618, 0.81", "-6.05713, 93.3907, -39.7528, 0.37", "-6.05673, 93.893, -40.0214, 0.37", "-6.08209, 94.4925, -40.425, 0.37", "-6.11262, 94.9647, -40.8121, 0.59", "-6.15964, 95.5419, -41.3418, 0.44", "-6.23161, 96.5486, -42.3995, 0.37", "-6.275, 97.572, -43.5639, 0.59", "-6.26561, 98.2684, -44.348, 0.44", "-6.22347, 98.9509, -45.0762, 0.88", "-6.17631, 99.4099, -45.4968, 1.18", "-6.0887, 100.064, -45.9608, 0.44", "-5.9981, 100.663, -46.2627, 0.29", "-5.88893, 101.54, -46.5829, 0.66", "-5.86859, 102.185, -46.7982, 0.66", "-5.91378, 103.051, -47.0957, 0.37", "-5.98995, 103.63, -47.376, 0.37", "-6.1578, 104.38, -47.8786, 0.37", "-6.25789, 104.843, -48.2603, 0.37", "-6.41673, 105.65, -49.035, 0.88", "-6.46135, 106.114, -49.4816, 0.66", "-6.46715, 107.233, -50.4624, 0.29", "-6.45216, 107.953, -50.9682, 0.29", "-6.44431, 108.808, -51.4652, 0.44", "-6.4252, 109.163, -51.661, 0.44", "-6.34373, 110.273, -52.1903, 0.37", "-6.34413, 111.077, -52.5044, 0.37", "-6.47539, 112.38, -52.7767, 0.37", "-6.61318, 113.18, -52.86, 0.29", "-7.69953, 122.628, -56.6957, 0.29", "-9.22002, 132.376, -59.4943, 0.29", "-10.344, 141.906, -63.1106, 0.29", "-10.5668, 150.803, -68.2051, 0.29", "-10.7033, 160.592, -71.2605, 0.29", "-10.2403, 170.344, -74.3986, 0.29", "-9.84014, 180.382, -76.4585, 0.29", "-9.025, 190.593, -76.9275, 0.29", "-9.20192, 200.837, -76.4877, 0.29", "-8.63359, 210.969, -75.0102, 0.29", "-8.73282, 221.208, -74.4316, 0.29", "-9.04696, 231.431, -75.1769, 0.29", "-11.3277, 241.426, -75.3964, 0.29", "-11.3075, 251.681, -75.4762, 0.29", "-10.5613, 261.841, -76.6534, 0.29", "-9.91354, 271.721, -79.3217, 0.29", "-10.914, 281.398, -82.5638, 0.29", "-13.3745, 290.57, -86.4356, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "5.40231, 22.8276, -1.56602, 0.96", "5.01384, 23.5434, -1.13159, 0.96", "4.47523, 24.4308, -0.566941, 0.52", "4.10966, 24.9856, -0.192047, 0.81", "3.67827, 25.6256, 0.24171, 0.81", "3.3123, 26.1574, 0.609415, 0.74", "2.89796, 26.7465, 1.02815, 0.59", "2.46571, 27.3423, 1.47607, 0.74", "2.03847, 27.9229, 1.89899, 1.03", "1.49858, 28.6901, 2.39576, 0.81", "1.04702, 29.3753, 2.79319, 1.11", "0.749365, 29.8617, 3.0568, 1.25", "0.478189, 30.3426, 3.3017, 1.11", "0.120482, 31.0209, 3.60191, 0.66", "-0.162009, 31.5627, 3.80366, 0.52", "-0.501331, 32.2319, 4.01574, 0.66", "-0.672923, 32.5939, 4.11185, 0.81", "-0.936955, 33.1813, 4.25268, 1.11", "-1.16608, 33.6954, 4.36783, 1.11", "-1.59377, 34.662, 4.57278, 0.74", "-2.00705, 35.6332, 4.7664, 0.66", "-2.29138, 36.3703, 4.89202, 0.88", "-2.54884, 37.0938, 5.01124, 0.74", "-2.75937, 37.7335, 5.10878, 0.52", "-2.89912, 38.1535, 5.1727, 0.37", "-3.01591, 38.4608, 5.21846, 0.37", "-3.16654, 38.7959, 5.26528, 0.44", "-3.4467, 39.3519, 5.33739, 0.59", "-3.67443, 39.7868, 5.387, 0.88", "-3.85037, 40.1267, 5.42141, 1.18", "-4.34073, 41.096, 5.51038, 0.74", "-4.62276, 41.6708, 5.57848, 0.52", "-4.8438, 42.172, 5.65001, 0.52", "-5.04448, 42.695, 5.73885, 0.74", "-5.14418, 42.9972, 5.80025, 0.74", "-5.3425, 43.7162, 5.95343, 0.37", "-5.46737, 44.2579, 6.08111, 0.37", "-5.58139, 44.7482, 6.21137, 0.59", "-5.70966, 45.2765, 6.35496, 0.88", "-5.86173, 45.8638, 6.5045, 0.88", "-6.01209, 46.4446, 6.6342, 0.74", "-6.18393, 47.1219, 6.74407, 0.88", "-6.28041, 47.5163, 6.78566, 1.11", "-6.39478, 48.0247, 6.83752, 1.11", "-6.5146, 48.5775, 6.91904, 0.88", "-6.59683, 48.9542, 6.99203, 0.88", "-6.78084, 49.8139, 7.1889, 0.52", "-6.91672, 50.4708, 7.35099, 0.44", "-7.08651, 51.3421, 7.57418, 0.37", "-7.25393, 52.218, 7.81787, 0.37", "-7.33952, 52.6282, 7.95155, 0.66", "-7.44848, 53.0528, 8.11937, 0.96", "-7.5778, 53.4755, 8.3073, 0.59", "-7.83672, 54.1644, 8.61368, 0.37", "-8.08666, 54.7513, 8.85782, 0.29", "-8.31124, 55.264, 9.05318, 0.59", "-8.63519, 55.9968, 9.3387, 0.44", "-8.85765, 56.5175, 9.53694, 0.22", "-9.04264, 56.9745, 9.7028, 0.22", "-9.19342, 57.3761, 9.82788, 0.37", "-9.30136, 57.7215, 9.89296, 0.59", "-9.38399, 58.0603, 9.93998, 0.74", "-9.48729, 58.6453, 10.0115, 0.66", "-9.54102, 59.0142, 10.0659, 0.74", "-9.6142, 59.4703, 10.1603, 0.81", "-9.77472, 60.2755, 10.3796, 0.22", "-9.91534, 60.9169, 10.5814, 0.22", "-9.96984, 61.1697, 10.6726, 0.52", "-10.0362, 61.5204, 10.8014, 0.66", "-10.1895, 62.3759, 11.1514, 0.37", "-10.2906, 62.9147, 11.4127, 0.37", "-10.4361, 63.5441, 11.7645, 0.22", "-10.5832, 64.0724, 12.0741, 0.22", "-10.8247, 64.8271, 12.536, 0.29", "-11.0869, 65.5892, 13.001, 0.29", "-11.3422, 66.2755, 13.4142, 0.81", "-11.5986, 66.8658, 13.766, 1.03", "-11.891, 67.4407, 14.1017, 0.96", "-12.2156, 68.028, 14.4076, 0.22", "-12.5401, 68.6115, 14.674, 0.29", "-12.8599, 69.2055, 14.8782, 0.59", "-13.1069, 69.6905, 15.0248, 0.96", "-13.3487, 70.2004, 15.181, 0.96", "-13.5774, 70.689, 15.3368, 0.59", "-13.9844, 71.5649, 15.6526, 0.22", "-14.2782, 72.2025, 15.8984, 0.15", "-14.5933, 72.9571, 16.2207, 0.15", "-14.8719, 73.6881, 16.601, 0.15", "-14.9787, 73.9818, 16.7772, 0.66", "-15.1595, 74.4929, 17.1254, 1.33", "-15.2602, 74.7977, 17.3513, 1.33", "-15.5413, 75.7223, 18.1113, 0.15", "-15.7506, 76.4031, 18.692, 0.15", "-15.7971, 76.5553, 18.8252, 0.15", "-15.9613, 77.0455, 19.2586, 0.74", "-16.1886, 77.6743, 19.8053, 0.15", "-16.4407, 78.3131, 20.359, 0.66", "-16.6343, 78.727, 20.6995, 1.18", "-16.7116, 78.8742, 20.8216, 1.18", "-17.0755, 79.4747, 21.3767, 0.22", "-17.3399, 79.8636, 21.7069, 0.37", "-17.4457, 79.9985, 21.8249, 0.37", "-17.963, 80.5801, 22.3864, 0.15", "-18.5189, 81.1534, 23.0025, 0.15", "-19.124, 81.733, 23.617, 0.37", "-20.0175, 82.5783, 24.4584, 0.22", "-20.8007, 83.3112, 25.1934, 0.44", "-21.3379, 83.8364, 25.7021, 0.44", "-21.6522, 84.1621, 25.9923, 0.44", "-22.1873, 84.7897, 26.5259, 0.22", "-22.6633, 85.4233, 27.1075, 0.15", "-23.1049, 86.0806, 27.7775, 0.15", "-23.2881, 86.4003, 28.074, 0.81", "-23.4407, 86.7005, 28.3479, 0.29", "-23.7596, 87.4268, 29.0275, 0.15", "-23.9611, 87.9918, 29.6144, 0.15", "-24.0589, 88.324, 29.9935, 0.15", "-24.1196, 88.5811, 30.2905, 0.52", "-24.1367, 88.6804, 30.404, 0.52", "-24.1913, 89.1088, 30.8939, 0.22", "-24.2791, 89.9328, 31.781, 0.22", "-24.3317, 90.5922, 32.4486, 0.22", "-24.3608, 91.006, 32.8866, 0.88", "-24.4208, 91.639, 33.5818, 0.15", "-24.5124, 92.3274, 34.3228, 0.52", "-24.5626, 92.611, 34.6137, 0.52", "-24.6413, 92.9765, 34.9322, 0.15", "-24.8461, 93.8279, 35.5505, 0.15", "-24.994, 94.3924, 35.9362, 0.15", "-25.1166, 94.8379, 36.2083, 0.59", "-25.1781, 95.0916, 36.334, 1.25", "-25.2559, 95.47, 36.4985, 1.25", "-25.3668, 96.2891, 36.7824, 0.22", "-25.4106, 97.3918, 37.0374, 0.22", "-25.3945, 97.8041, 37.1152, 0.22", "-25.3537, 98.277, 37.1938, 0.44", "-25.3227, 98.5508, 37.2283, 0.59", "-25.228, 99.3253, 37.3317, 0.22", "-25.0916, 100.278, 37.4509, 0.15", "-24.9985, 100.868, 37.51, 0.15", "-24.9308, 101.37, 37.5639, 0.66", "-24.8271, 102.42, 37.6747, 0.22", "-24.7557, 103.582, 37.8152, 0.22", "-24.7503, 104.076, 37.88, 0.59", "-24.7674, 104.621, 37.9551, 0.88", "-24.8501, 105.941, 38.1288, 0.15", "-24.9276, 106.719, 38.2481, 0.15", "-24.9935, 107.151, 38.3143, 0.15", "-25.0823, 107.608, 38.3715, 0.52", "-25.1352, 107.833, 38.4172, 0.52", "-25.3333, 108.61, 38.6479, 0.22", "-25.5076, 109.273, 38.9251, 0.22", "-25.684, 110.078, 39.3227, 0.22", "-25.7796, 110.637, 39.6261, 0.07", "-25.8944, 111.465, 40.1075, 0.07", "-25.9453, 111.879, 40.354, 0.44", "-26.0024, 112.418, 40.6751, 0.74", "-26.0559, 113.261, 41.1068, 0.15", "-26.0621, 113.853, 41.4022, 0.15", "-26.0513, 114.466, 41.6698, 0.37", "-26.0404, 114.778, 41.7778, 1.47", "-26.0263, 115.133, 41.884, 1.47", "-25.9726, 116.185, 42.1424, 0.07", "-25.9186, 117.261, 42.3944, 0.07", "-25.8913, 117.753, 42.5077, 0.07", "-25.8712, 118.074, 42.5855, 0.29", "-25.8465, 118.474, 42.6855, 0.29", "-25.8055, 119.159, 42.8521, 0.07", "-25.7844, 119.821, 43.0398, 0.07", "-25.7811, 120.037, 43.1001, 0.07", "-25.7751, 120.387, 43.2109, 0.44", "-25.7709, 120.656, 43.3013, 0.44", "-25.7662, 121.363, 43.5329, 0.15", "-25.7668, 122.227, 43.7189, 0.15", "-25.7677, 122.504, 43.7405, 0.44", "-25.7747, 122.822, 43.7368, 0.44", "-25.7819, 123.014, 43.7177, 0.44", "-25.8097, 123.729, 43.547, 0.15", "-25.8509, 124.64, 43.2272, 0.15", "-25.8608, 124.992, 43.0848, 0.44", "-25.8646, 125.525, 42.9255, 0.59", "-25.8483, 126.391, 42.8166, 0.15", "-25.8088, 127.231, 42.855, 0.15", "-25.7883, 127.601, 42.9323, 0.15", "-25.7548, 128.307, 43.1535, 0.29", "-25.6998, 129.592, 43.607, 0.22", "-25.6581, 130.742, 44.0528, 0.22", "-25.6388, 131.697, 44.4081, 0.07", "-25.6433, 132.389, 44.6694, 0.07", "-25.6649, 133.138, 44.9237, 0.07", "-25.7028, 133.67, 45.085, 0.29", "-25.7394, 133.978, 45.1526, 0.29", "-25.902, 134.959, 45.4124, 0.15", "-26.1299, 136.104, 45.9001, 0.15", "-26.2045, 136.458, 46.0925, 0.52", "-26.3438, 136.989, 46.4365, 0.52", "-26.5259, 137.511, 46.8092, 0.22", "-26.9337, 138.404, 47.4649, 0.22", "-27.127, 138.75, 47.7194, 0.22", "-27.4166, 139.171, 47.9575, 0.96", "-27.79, 139.647, 48.1647, 0.15", "-28.2393, 140.185, 48.3031, 0.15", "-28.6929, 140.705, 48.3807, 0.29", "-28.9631, 141.013, 48.3879, 0.22", "-29.3243, 141.43, 48.3851, 0.37", "-29.5324, 141.681, 48.3822, 0.37", "-29.9703, 142.257, 48.3797, 0.15", "-30.2266, 142.61, 48.3756, 0.15", "-30.456, 142.923, 48.3741, 0.52", "-30.7832, 143.341, 48.3688, 0.88", "-31.3966, 144.064, 48.3447, 0.15", "-31.8743, 144.587, 48.3281, 0.15", "-32.0542, 144.768, 48.3244, 0.37", "-32.3831, 145.088, 48.3198, 0.66", "-32.7903, 145.477, 48.2966, 0.22", "-33.4087, 146.061, 48.2553, 0.15", "-33.9393, 146.568, 48.2125, 0.44", "-34.564, 147.181, 48.1492, 0.44", "-35.1989, 147.852, 48.0629, 0.07", "-35.7763, 148.515, 47.9616, 0.07", "-36.0209, 148.825, 47.906, 0.15", "-36.3124, 149.221, 47.8552, 0.59", "-36.4444, 149.409, 47.8211, 0.59", "-36.9038, 150.094, 47.6839, 0.07", "-37.1527, 150.474, 47.6151, 0.15", "-37.5811, 151.102, 47.5679, 0.07", "-38.1683, 151.935, 47.5289, 0.07", "-38.8282, 152.837, 47.531, 0.44", "-38.9803, 153.043, 47.5393, 0.44", "-39.547, 153.773, 47.6703, 0.15", "-40.0251, 154.391, 47.8288, 0.15", "-40.2869, 154.733, 47.9328, 0.59", "-40.5032, 155.01, 48.0227, 0.59", "-40.992, 155.604, 48.3142, 0.15", "-41.5882, 156.318, 48.695, 0.15", "-41.8474, 156.623, 48.8637, 0.29", "-42.0841, 156.913, 48.9987, 0.29", "-42.6037, 157.559, 49.3315, 0.07", "-43.1399, 158.25, 49.6939, 0.07", "-43.3849, 158.586, 49.8622, 0.66", "-43.54, 158.82, 49.9603, 0.66", "-44.0112, 159.566, 50.3034, 0.15", "-44.445, 160.303, 50.644, 0.15", "-44.6595, 160.708, 50.8173, 0.44", "-44.8098, 161.022, 50.9347, 0.59", "-45.1552, 161.845, 51.2203, 0.15", "-45.462, 162.815, 51.488, 0.15", "-45.5266, 163.182, 51.5595, 0.37", "-45.5446, 163.651, 51.5878, 0.81", "-45.5025, 164.163, 51.5801, 0.44", "-45.3634, 164.904, 51.5149, 0.15", "-45.1054, 165.829, 51.3709, 0.15", "-44.8891, 166.567, 51.2244, 0.15", "-44.7058, 167.239, 51.0925, 0.15", "-44.5769, 167.77, 50.9905, 0.52", "-44.4767, 168.221, 50.9037, 0.52", "-44.2993, 169.2, 50.7246, 0.22", "-44.2334, 169.87, 50.6283, 0.22", "-44.2258, 170.422, 50.5593, 0.22", "-44.2436, 170.84, 50.5322, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.40231, 22.8276, -1.56602, 1.62", "6.17249, 23.8941, -0.97084, 1.62", "6.71333, 24.6495, -0.52781, 1.4", "7.61948, 25.9152, 0.214475, 1.4", "8.86786, 27.6588, 1.23709, 1.25", "9.79638, 28.9557, 1.99769, 1.33", "10.6906, 30.2046, 2.73015, 1.55", "11.3355, 31.1869, 3.38954, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-23.6209, 34.5989, 0.0, 0.670034", "-31.8844, 47.1175, 0.0, 0.670034", "-40.1479, 59.636, 0.0, 0.670034" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.97883, -28.0622, -10.6803, 1.99", "5.1689, -30.308, -10.8126, 1.99", "5.23835, -31.522, -10.9492, 1.7", "5.31889, -33.2829, -11.1944, 1.47", "5.34711, -34.646, -11.3986, 1.92", "5.33918, -35.8525, -11.6024, 1.84", "5.31996, -37.3116, -11.8558, 1.77", "5.29313, -38.3493, -12.0507, 2.06", "5.28588, -39.2224, -12.2069, 1.84", "5.30091, -40.2989, -12.3869, 1.77", "5.32357, -42.2462, -12.6627, 1.7", "5.36733, -43.8083, -12.8723, 1.77", "5.46123, -45.8416, -13.108, 1.84", "5.58763, -47.6415, -13.2559, 2.06", "5.68628, -48.7312, -13.3401, 2.14" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "4.97883, -28.0622, -10.6803, 1.25", "4.18116, -28.3416, -10.5577, 1.25", "2.88123, -28.9135, -10.3277, 0.66", "2.15878, -29.2912, -10.1724, 0.81", "0.914853, -30.0652, -9.8905, 0.96", "-0.0240499, -30.7251, -9.69109, 0.66", "-0.599682, -31.1534, -9.59881, 0.37", "-1.31419, -31.7716, -9.49846, 0.52", "-1.90991, -32.3316, -9.424, 0.44", "-2.5575, -32.9142, -9.34799, 0.44", "-3.30759, -33.5359, -9.30445, 0.52", "-4.13071, -34.0936, -9.26057, 0.52", "-5.05438, -34.6001, -9.1967, 0.74", "-6.08388, -35.0318, -9.0838, 0.59", "-6.84753, -35.2833, -8.98344, 0.59", "-7.65616, -35.5099, -8.84676, 0.37", "-8.59979, -35.7878, -8.62767, 0.37", "-8.79514, -35.8538, -8.56568, 0.37", "-9.36621, -36.0913, -8.34921, 0.37", "-9.87524, -36.3524, -8.14089, 0.81", "-10.4665, -36.7263, -7.86218, 1.03", "-11.2536, -37.2769, -7.4573, 0.37", "-12.1165, -37.9381, -7.01684, 0.37", "-12.7708, -38.4737, -6.68029, 0.59", "-13.0907, -38.7442, -6.5097, 0.88", "-13.8696, -39.4009, -6.09454, 0.44", "-14.8248, -40.1994, -5.6112, 0.29", "-15.6876, -40.932, -5.23614, 0.29", "-16.1674, -41.3557, -5.07494, 0.22", "-16.8525, -41.9296, -4.89781, 0.22", "-17.2857, -42.2773, -4.80885, 0.44", "-18.1427, -42.9459, -4.70181, 1.11", "-18.6978, -43.348, -4.66074, 1.11", "-19.5583, -43.8958, -4.59256, 0.96", "-20.7737, -44.6163, -4.46918, 0.22", "-21.3051, -44.9303, -4.40777, 0.22", "-21.7054, -45.1595, -4.34073, 0.59", "-22.5172, -45.6133, -4.18587, 0.81", "-23.4252, -46.1287, -3.97782, 0.22", "-24.1802, -46.5642, -3.78649, 0.22", "-25.1566, -47.1527, -3.54842, 0.22", "-26.0434, -47.7058, -3.36891, 0.22", "-26.462, -47.9952, -3.30612, 0.37", "-26.848, -48.2928, -3.28479, 0.37", "-27.2698, -48.6434, -3.30414, 0.52", "-27.6109, -48.9381, -3.34641, 1.18", "-28.4831, -49.7312, -3.46151, 0.37", "-29.5406, -50.7716, -3.60952, 0.22", "-30.1481, -51.3936, -3.69342, 0.22", "-30.5354, -51.7856, -3.73245, 0.81", "-31.3271, -52.58, -3.79019, 0.81", "-32.4737, -53.685, -3.81056, 0.29", "-33.2234, -54.3568, -3.80258, 0.29", "-34.062, -55.0312, -3.78028, 0.29", "-35.2018, -55.8895, -3.6911, 0.29", "-35.5728, -56.1497, -3.64728, 0.74", "-36.5958, -56.8129, -3.47317, 1.18", "-37.5892, -57.4162, -3.27915, 0.44", "-38.6953, -58.0704, -3.02939, 0.29", "-39.6954, -58.6622, -2.79055, 0.29", "-40.4794, -59.1478, -2.61372, 0.88", "-41.4329, -59.7594, -2.3988, 0.96", "-42.2907, -60.3349, -2.22368, 0.22", "-42.7544, -60.6601, -2.12984, 0.15", "-43.0495, -60.881, -2.09411, 0.22", "-43.5955, -61.3082, -2.07978, 0.15", "-43.868, -61.5395, -2.0955, 0.15", "-44.2303, -61.8626, -2.11509, 0.29", "-44.571, -62.1601, -2.11457, 0.29", "-45.1198, -62.627, -2.08292, 0.15", "-45.4934, -62.939, -2.04436, 0.15", "-45.8985, -63.2707, -1.96758, 0.22", "-46.8392, -64.0344, -1.69969, 0.22", "-47.3552, -64.4432, -1.54018, 0.66", "-48.0197, -64.974, -1.33716, 1.4", "-48.782, -65.5925, -1.12339, 0.29", "-49.6611, -66.3329, -0.899219, 0.15", "-50.6221, -67.1696, -0.644017, 0.15", "-51.4251, -67.8769, -0.436606, 0.15", "-52.0772, -68.4404, -0.255647, 0.15", "-52.5839, -68.8756, -0.120638, 0.52", "-53.436, -69.6172, 0.0872111, 0.52", "-54.3892, -70.4334, 0.286104, 0.22", "-55.2768, -71.1991, 0.461645, 0.22", "-55.9247, -71.7466, 0.578665, 0.22", "-56.3705, -72.109, 0.651072, 0.81", "-56.9434, -72.5703, 0.720562, 0.88", "-58.0089, -73.4164, 0.783454, 0.15", "-58.5087, -73.8208, 0.805572, 0.15", "-59.5478, -74.7015, 0.850741, 0.15", "-60.3814, -75.4149, 0.88453, 0.15", "-60.8733, -75.8362, 0.896015, 0.52", "-61.6039, -76.4632, 0.929299, 0.81", "-62.4758, -77.2332, 0.975907, 0.22", "-63.2051, -77.8785, 0.988899, 0.15", "-63.6255, -78.2518, 0.971915, 0.22", "-64.8167, -79.2782, 0.764969, 0.15", "-66.0483, -80.2927, 0.384225, 0.15", "-66.616, -80.7474, 0.133089, 1.03", "-67.539, -81.4476, -0.419312, 0.52", "-68.3503, -82.023, -0.976148, 0.37", "-69.3824, -82.7286, -1.76667, 0.22", "-70.3255, -83.3403, -2.57369, 0.15", "-70.7637, -83.6268, -2.97979, 0.52", "-71.9054, -84.3821, -4.00307, 0.15", "-72.4974, -84.7703, -4.46885, 0.15", "-72.7946, -84.9582, -4.66235, 0.44", "-73.2089, -85.209, -4.85458, 0.44", "-74.2105, -85.7985, -5.16272, 0.15", "-74.7352, -86.1137, -5.23672, 0.22", "-75.581, -86.6471, -5.25543, 0.07", "-76.1953, -87.0491, -5.24761, 0.81", "-76.4532, -87.2181, -5.2422, 0.81", "-77.9019, -88.1817, -5.22239, 0.15", "-79.4704, -89.2426, -5.26425, 0.15", "-80.0253, -89.6361, -5.3087, 0.22", "-80.5753, -90.0435, -5.37431, 0.88", "-81.1445, -90.4778, -5.45025, 1.33", "-81.7964, -90.9835, -5.54402, 0.22", "-82.9816, -91.9339, -5.74647, 0.15", "-84.3467, -93.0744, -6.06583, 0.15", "-84.9915, -93.6309, -6.21308, 0.15", "-85.3461, -93.9496, -6.27932, 0.37", "-85.7353, -94.3057, -6.32613, 0.88", "-86.5869, -95.0697, -6.38355, 0.15", "-87.4164, -95.7545, -6.42217, 0.15", "-88.0177, -96.1995, -6.46658, 0.15", "-89.1828, -96.9802, -6.58933, 0.22", "-89.8653, -97.4013, -6.67505, 0.66", "-90.4812, -97.7476, -6.7379, 0.81", "-91.8287, -98.461, -6.88498, 0.15", "-92.846, -98.9844, -6.94314, 0.15", "-93.526, -99.3304, -6.92748, 0.37", "-94.3497, -99.7359, -6.86648, 0.81", "-95.3934, -100.241, -6.73693, 0.59", "-97.123, -101.066, -6.43077, 0.15", "-98.6551, -101.788, -6.09033, 0.29", "-99.9665, -102.383, -5.7894, 0.29", "-100.906, -102.816, -5.61063, 0.15", "-101.979, -103.35, -5.43599, 0.15", "-102.493, -103.631, -5.39008, 0.44", "-102.937, -103.893, -5.37861, 0.52", "-103.496, -104.262, -5.43797, 0.29", "-104.654, -105.109, -5.57605, 0.15", "-105.849, -106.06, -5.62131, 0.15", "-106.352, -106.486, -5.61304, 0.66", "-106.916, -106.977, -5.58381, 0.66", "-107.606, -107.59, -5.50336, 0.15", "-108.547, -108.437, -5.35712, 0.15", "-109.244, -109.067, -5.23367, 0.15", "-109.691, -109.488, -5.18276, 0.81", "-109.978, -109.778, -5.16155, 0.81", "-111.075, -110.964, -5.14337, 0.15", "-111.519, -111.451, -5.14254, 0.15", "-111.691, -111.647, -5.15156, 0.22", "-112.699, -112.821, -5.23353, 0.15", "-113.75, -114.015, -5.31285, 0.15", "-114.241, -114.568, -5.35198, 0.37", "-115.303, -115.705, -5.3946, 0.22", "-115.855, -116.258, -5.3753, 0.37", "-116.489, -116.865, -5.3298, 0.37", "-117.039, -117.37, -5.27334, 0.37", "-117.484, -117.764, -5.23018, 0.59", "-118.82, -118.935, -5.07616, 0.15", "-120.018, -119.998, -4.92332, 0.07", "-120.741, -120.65, -4.80622, 0.07", "-121.207, -121.092, -4.72302, 0.59", "-121.563, -121.455, -4.66279, 0.59", "-122.614, -122.645, -4.46044, 0.15", "-123.189, -123.372, -4.35424, 0.15", "-123.553, -123.863, -4.27946, 0.22", "-123.872, -124.311, -4.22163, 0.59", "-124.07, -124.606, -4.1967, 0.59", "-124.996, -126.091, -4.16994, 0.15", "-125.334, -126.663, -4.2194, 0.15", "-125.813, -127.467, -4.32865, 0.15", "-126.285, -128.255, -4.49872, 0.15", "-126.532, -128.682, -4.62341, 0.29", "-126.818, -129.193, -4.81659, 0.52", "-127.195, -129.925, -5.24037, 0.15", "-127.396, -130.354, -5.54352, 0.15", "-127.743, -131.189, -6.27424, 0.15", "-127.863, -131.495, -6.57539, 0.29", "-127.943, -131.707, -6.80115, 0.59", "-128.43, -132.98, -8.05513, 0.07", "-128.902, -134.154, -8.98102, 0.07", "-129.451, -135.387, -9.67107, 0.15", "-129.548, -135.582, -9.73972, 0.29", "-129.976, -136.313, -9.8656, 0.52", "-131.168, -138.093, -9.82337, 0.07", "-132.245, -139.542, -9.53151, 0.07", "-132.849, -140.31, -9.30378, 0.07", "-133.113, -140.625, -9.20794, 0.29", "-134.216, -141.894, -8.88916, 0.07", "-135.102, -142.873, -8.72339, 0.07", "-135.369, -143.158, -8.72618, 0.37", "-135.663, -143.457, -8.76232, 0.52", "-136.698, -144.501, -8.94804, 0.15", "-137.227, -145.039, -9.04323, 0.15", "-137.819, -145.659, -9.17143, 0.22", "-138.24, -146.109, -9.2729, 0.37", "-138.647, -146.552, -9.36462, 0.44", "-139.128, -147.106, -9.47097, 0.22", "-139.863, -148.045, -9.64416, 0.66", "-140.512, -148.958, -9.807, 0.22", "-141.136, -149.902, -9.94261, 0.07", "-141.415, -150.349, -10.0002, 0.15", "-141.92, -151.213, -10.1085, 0.59", "-142.634, -152.497, -10.2835, 0.07", "-143.1, -153.379, -10.4248, 0.07", "-143.719, -154.553, -10.6086, 0.15", "-143.978, -155.026, -10.6833, 0.37", "-144.38, -155.714, -10.8009, 0.37", "-144.822, -156.418, -10.9399, 0.37", "-145.31, -157.161, -11.1155, 0.07", "-146.036, -158.267, -11.4235, 0.07", "-146.367, -158.783, -11.5816, 0.52", "-146.547, -159.084, -11.6704, 0.52", "-147.191, -160.202, -11.9469, 0.07", "-147.755, -161.247, -12.1656, 0.07", "-148.046, -161.832, -12.262, 0.52", "-148.216, -162.225, -12.3433, 0.52", "-148.708, -163.486, -12.6456, 0.07", "-149.281, -165.055, -13.0675, 0.07", "-149.507, -165.68, -13.2529, 0.22", "-149.995, -166.967, -13.667, 0.07", "-150.688, -168.767, -14.2736, 0.07", "-150.843, -169.169, -14.4166, 0.37", "-151.616, -171.178, -15.1891, 0.07", "-152.23, -172.841, -15.8863, 0.07", "-152.736, -174.163, -16.4352, 0.07", "-152.968, -174.724, -16.6569, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "16.3803, -22.9367, 1.46293, 1.03", "17.4213, -23.6156, 0.586893, 1.03", "18.7697, -24.495, -0.547914, 1.03", "19.5491, -25.0033, -1.20388, 1.11", "20.4034, -25.5604, -1.92278, 1.25", "20.9943, -25.9458, -2.42011, 1.47", "21.8684, -26.5159, -3.15573, 1.84" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "16.3803, -22.9367, 1.46293, 1.25", "17.0209, -24.0519, -0.137413, 1.25", "17.7937, -25.5648, -1.9914, 0.81", "18.1922, -26.4256, -2.89108, 0.74", "18.573, -27.3013, -3.68375, 0.59", "18.7987, -27.8429, -4.10445, 0.66", "19.1093, -28.62, -4.62603, 0.52", "19.4285, -29.5394, -4.98721, 0.88", "19.6916, -30.4175, -5.13921, 0.52", "19.8946, -31.1693, -5.19263, 0.44", "20.1296, -32.0686, -5.19673, 0.59", "20.3334, -32.8426, -5.18071, 0.74", "20.5583, -33.723, -5.14248, 0.59", "20.7385, -34.4598, -5.09395, 0.59", "20.8764, -35.1025, -5.05522, 0.96", "21.0048, -35.8512, -5.01467, 1.03", "21.1362, -36.8144, -5.00732, 0.66", "21.2588, -37.7903, -5.04044, 0.44", "21.3299, -38.2658, -5.07857, 0.29", "21.4166, -38.6761, -5.11709, 0.29", "21.5301, -39.0172, -5.12489, 0.29", "21.9027, -39.8457, -5.04297, 0.44", "22.1847, -40.3544, -4.91219, 0.59", "22.5446, -40.954, -4.69431, 0.81", "22.9539, -41.6341, -4.40034, 0.74", "23.4811, -42.521, -3.97724, 0.59", "23.863, -43.2109, -3.64018, 0.59", "24.2445, -43.9787, -3.26593, 0.59", "24.6292, -44.847, -2.86947, 0.88", "25.0931, -46.0295, -2.39731, 1.03", "25.4536, -47.0532, -2.06456, 0.88", "25.744, -47.9353, -1.83179, 0.88", "26.0212, -48.8003, -1.6361, 1.18", "26.3052, -49.7637, -1.43169, 0.74", "26.5884, -50.8545, -1.2025, 0.66", "26.8003, -51.7814, -1.00018, 0.66", "26.9448, -52.44, -0.897979, 0.52", "27.1453, -53.3394, -0.802438, 0.52", "27.3764, -54.3821, -0.718988, 0.52", "27.5805, -55.3587, -0.679982, 0.59", "27.7371, -56.212, -0.667137, 0.74", "28.0903, -58.2725, -0.69444, 0.96", "28.2362, -59.1286, -0.720856, 0.66", "28.4525, -60.3037, -0.785338, 1.62", "28.7075, -61.532, -0.864612, 1.47", "28.9372, -62.603, -0.911764, 0.81", "29.1543, -63.6288, -0.875385, 0.74", "29.3538, -64.5354, -0.733611, 0.74", "29.4747, -65.0153, -0.638284, 0.52", "29.6391, -65.5384, -0.505771, 0.29", "29.7912, -65.9134, -0.376106, 0.29", "30.2304, -66.8388, -0.00786185, 0.37", "30.6042, -67.6018, 0.335004, 0.59", "30.9113, -68.2692, 0.628263, 0.74", "31.2577, -69.0595, 0.942898, 0.74", "31.5214, -69.6628, 1.1638, 0.44", "31.8409, -70.3852, 1.4202, 0.59", "32.2302, -71.2786, 1.70181, 0.66", "32.5472, -72.0775, 1.93649, 0.66", "32.9436, -73.141, 2.1551, 0.59", "33.3612, -74.3318, 2.3161, 0.37", "33.602, -75.062, 2.38334, 0.37", "33.81, -75.752, 2.40957, 0.74", "34.079, -76.7301, 2.42516, 0.29", "34.3966, -78.0617, 2.47673, 0.37", "34.5241, -78.8018, 2.53131, 0.59", "34.6162, -79.5456, 2.60727, 0.81", "34.7197, -80.5418, 2.75502, 1.03", "34.8305, -81.6528, 3.06404, 0.59", "34.9185, -82.4252, 3.3659, 0.37", "34.9987, -83.1547, 3.70118, 0.37", "35.0617, -83.6863, 3.93469, 0.59", "35.1425, -84.3356, 4.20324, 1.33", "35.2799, -85.5839, 4.66152, 0.66", "35.34, -86.2498, 4.85768, 0.44", "35.4103, -87.2326, 5.09012, 0.52", "35.4524, -88.294, 5.30623, 0.37", "35.4484, -89.3811, 5.47742, 0.37", "35.3979, -90.2441, 5.56469, 0.37", "35.3498, -90.6663, 5.56658, 0.37", "35.1979, -91.6111, 5.52268, 0.22", "35.0661, -92.2622, 5.46798, 0.22", "34.9085, -92.9156, 5.3613, 0.66", "34.7442, -93.5236, 5.21291, 0.88", "34.4802, -94.4872, 4.93143, 0.22", "34.3302, -95.0256, 4.76224, 0.29", "34.163, -95.635, 4.53643, 0.66", "33.9637, -96.4354, 4.21072, 1.18", "33.8072, -97.1176, 3.93856, 1.47", "33.6272, -98.01, 3.58135, 0.96", "33.4629, -98.9215, 3.23692, 0.37", "33.2887, -100.057, 2.83355, 0.29", "33.158, -101.038, 2.51672, 0.29", "33.0735, -101.747, 2.31812, 0.37", "32.9805, -102.675, 2.08473, 0.66", "32.8769, -103.793, 1.84704, 0.59", "32.8, -104.787, 1.67256, 0.29", "32.7374, -105.989, 1.52626, 0.22", "32.7179, -106.7, 1.44643, 0.22", "32.7165, -107.244, 1.38406, 0.66", "32.7316, -107.963, 1.29924, 0.96", "32.7599, -108.56, 1.22268, 0.81", "32.839, -109.827, 1.03661, 0.29", "32.8975, -110.669, 0.905037, 0.29", "32.9465, -111.381, 0.807551, 0.29", "32.9847, -112.033, 0.724732, 0.81", "33.0364, -112.994, 0.614354, 1.11", "33.0666, -113.878, 0.526355, 0.81", "33.0774, -114.422, 0.479619, 0.44", "33.1024, -115.552, 0.379009, 0.22", "33.1194, -116.322, 0.27452, 0.52", "33.1345, -116.971, 0.163489, 0.81", "33.1562, -117.916, -0.0225654, 0.37", "33.1713, -118.603, -0.180232, 0.15", "33.1916, -119.477, -0.411163, 0.15", "33.218, -120.355, -0.686229, 0.22", "33.2407, -120.874, -0.854089, 0.81", "33.2801, -121.608, -1.08622, 0.52", "33.3294, -122.384, -1.31312, 0.29", "33.3788, -123.261, -1.51328, 0.22", "33.4291, -124.207, -1.6601, 0.22", "33.4527, -124.685, -1.70767, 0.22", "33.4803, -125.339, -1.75894, 0.59", "33.4923, -125.88, -1.78779, 0.52", "33.4858, -126.717, -1.80658, 0.29", "33.4522, -127.38, -1.80975, 0.29", "33.4153, -127.917, -1.80385, 0.88", "33.3744, -128.575, -1.8036, 1.7", "33.3363, -129.221, -1.81141, 1.84", "33.3045, -129.822, -1.82714, 1.84", "33.2668, -130.61, -1.86086, 0.96", "33.2256, -131.775, -1.89526, 0.29", "33.2152, -132.49, -1.90797, 0.29", "33.2298, -133.221, -1.91323, 0.29", "33.2677, -133.875, -1.93737, 0.29", "33.3126, -134.41, -1.98867, 0.66", "33.3675, -134.926, -2.06467, 1.18", "33.4504, -135.685, -2.21011, 0.29", "33.5691, -136.657, -2.42263, 0.22", "33.6952, -137.672, -2.62867, 0.22", "33.7989, -138.624, -2.80526, 0.22", "33.8461, -139.161, -2.89381, 0.22", "33.8916, -139.921, -3.00343, 0.81", "33.9211, -140.53, -3.052, 0.29", "33.9568, -141.531, -3.06094, 0.15", "33.9911, -142.375, -3.01145, 0.15", "34.0334, -143.149, -2.94692, 0.15", "34.0772, -143.737, -2.9029, 0.96", "34.1648, -144.611, -2.86328, 1.47", "34.2798, -145.56, -2.85058, 0.81", "34.4385, -146.689, -2.87781, 0.29", "34.5643, -147.562, -2.90931, 0.22", "34.6514, -148.235, -2.9456, 0.29", "34.7382, -149.006, -3.00431, 0.81", "34.7866, -149.538, -3.07623, 0.74", "34.8338, -150.186, -3.18544, 0.37", "34.8542, -150.668, -3.27991, 0.22", "34.8659, -151.225, -3.37846, 0.22", "34.8732, -151.474, -3.41353, 0.29", "34.9198, -152.303, -3.48628, 0.37", "34.9779, -152.838, -3.47562, 0.37", "35.0903, -153.535, -3.35478, 0.22", "35.2356, -154.259, -3.11036, 0.37", "35.352, -154.786, -2.88232, 0.88", "35.4566, -155.246, -2.65513, 1.84", "35.7174, -156.294, -2.09148, 1.7", "36.0275, -157.38, -1.46677, 0.29", "36.3146, -158.308, -0.926064, 0.29", "36.4864, -158.863, -0.597861, 0.29", "36.5948, -159.222, -0.391685, 0.74", "36.7954, -159.884, -0.0326529, 0.81", "37.0631, -160.727, 0.360328, 0.29", "37.231, -161.23, 0.57364, 0.15", "37.4851, -161.996, 0.852952, 0.15", "37.6896, -162.601, 1.04407, 0.22", "37.8319, -163.031, 1.15186, 0.37", "38.0023, -163.561, 1.24323, 0.88", "38.1669, -164.07, 1.28952, 0.59", "38.4614, -164.97, 1.33284, 0.15", "38.8467, -166.166, 1.37602, 0.15", "39.0426, -166.816, 1.40577, 0.15", "39.281, -167.731, 1.46299, 0.22", "39.4372, -168.494, 1.52746, 0.22", "39.5788, -169.446, 1.66396, 0.29", "39.6385, -170.24, 1.83627, 0.88", "39.6371, -170.585, 1.94128, 0.88", "39.5813, -171.685, 2.38268, 0.22", "39.5103, -172.465, 2.75824, 0.37", "39.3866, -173.429, 3.28744, 0.22", "39.2861, -174.084, 3.66898, 1.4", "39.1556, -174.922, 4.16664, 0.88", "38.9818, -175.985, 4.80841, 0.15", "38.8484, -176.725, 5.24123, 0.15", "38.69, -177.586, 5.72034, 0.15", "38.6071, -178.023, 5.93319, 0.66", "38.4409, -178.832, 6.30219, 1.47", "38.2915, -179.404, 6.545, 1.25", "38.0323, -180.203, 6.8522, 0.29", "37.6994, -181.1, 7.16814, 0.22", "37.4185, -181.786, 7.40908, 0.59", "37.0206, -182.632, 7.71459, 0.15", "36.5981, -183.413, 8.01678, 0.15", "36.2297, -184.01, 8.27793, 0.15", "35.7431, -184.706, 8.62762, 0.22", "35.3713, -185.182, 8.87724, 0.59", "35.0592, -185.56, 9.0937, 0.88", "34.6338, -186.095, 9.43116, 0.22", "34.063, -186.875, 9.95805, 0.15", "33.7717, -187.295, 10.2453, 0.52", "33.5346, -187.679, 10.4968, 1.11", "32.9591, -188.778, 11.1343, 0.07", "32.6095, -189.573, 11.5512, 0.07", "32.3358, -190.29, 11.8508, 0.07", "32.1509, -190.861, 12.0415, 1.03", "31.8085, -192.02, 12.3552, 0.15", "31.5226, -193.118, 12.5906, 0.15", "31.3862, -193.695, 12.6806, 0.44", "31.0068, -195.329, 12.8604, 0.22", "30.7931, -196.259, 12.9375, 0.22", "30.5272, -197.416, 13.0052, 0.22", "30.2342, -198.701, 13.0356, 0.07", "30.1107, -199.25, 13.0254, 0.07", "29.9209, -200.101, 12.9537, 0.07", "29.8277, -200.535, 12.8843, 0.07", "29.7469, -200.873, 12.8038, 0.52", "29.6121, -201.376, 12.65, 0.52", "29.2829, -202.45, 12.2712, 0.07", "28.9369, -203.503, 11.887, 0.07", "28.7954, -203.912, 11.7383, 0.52", "28.5409, -204.588, 11.5491, 0.29", "28.0794, -205.762, 11.3201, 0.22", "27.8769, -206.265, 11.2621, 0.52", "27.642, -206.855, 11.2267, 1.03", "27.4379, -207.372, 11.2189, 0.44", "26.844, -208.907, 11.2119, 0.07", "26.348, -210.232, 11.2275, 0.15", "25.9992, -211.19, 11.2622, 0.15", "25.7471, -211.902, 11.3054, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-11.2473, -11.601, 1.62214, 1.03", "-11.531, -12.8979, 1.1354, 1.03", "-11.8642, -14.3922, 0.568535, 0.81", "-12.0083, -15.0113, 0.320162, 0.81", "-12.192, -15.7799, 0.0165629, 0.88", "-12.5017, -17.0401, -0.511546, 1.11", "-12.7413, -17.9714, -0.899014, 1.03", "-12.9771, -18.8277, -1.2502, 0.81", "-13.3182, -20.082, -1.72855, 1.33", "-13.5972, -21.1201, -2.10372, 1.18", "-13.8888, -22.2237, -2.45981, 1.4", "-14.2569, -23.6115, -2.84187, 0.59", "-14.5236, -24.6181, -3.06867, 0.59", "-14.7527, -25.5257, -3.21327, 0.74", "-14.9919, -26.4956, -3.30726, 0.66", "-15.3084, -27.7948, -3.37354, 0.66", "-15.5012, -28.5911, -3.3763, 0.81", "-15.7246, -29.568, -3.34798, 0.88", "-15.9333, -30.5217, -3.30196, 0.88", "-16.1368, -31.4836, -3.2462, 0.96", "-16.273, -32.2119, -3.19776, 1.18", "-16.412, -33.1049, -3.13602, 1.47", "-16.5817, -34.4674, -3.01513, 1.11", "-16.6507, -35.1719, -2.95019, 0.96", "-16.6898, -35.7625, -2.90694, 0.81", "-16.7367, -36.8351, -2.86077, 0.74", "-16.7732, -37.7633, -2.85948, 0.81", "-16.8203, -38.7397, -2.92261, 0.81", "-16.8855, -39.6156, -3.04051, 0.96", "-16.9977, -40.7113, -3.24571, 0.88", "-17.0897, -41.4734, -3.42748, 0.81", "-17.2429, -42.4955, -3.71785, 0.74", "-17.4142, -43.5553, -4.04098, 0.81", "-17.5432, -44.2889, -4.28634, 0.88", "-17.6876, -45.0716, -4.54821, 1.03", "-17.8034, -45.6771, -4.74595, 1.03", "-18.1438, -47.3473, -5.24104, 0.44", "-18.3432, -48.2332, -5.49089, 0.44", "-18.5729, -49.1998, -5.72669, 0.66", "-18.693, -49.7052, -5.83155, 0.88", "-18.85, -50.3644, -5.92152, 1.11", "-19.1385, -51.5393, -5.99546, 0.88", "-19.4092, -52.6754, -5.95182, 0.44", "-19.5877, -53.4606, -5.86166, 0.44", "-19.7824, -54.3804, -5.69187, 0.59", "-20.0182, -55.596, -5.4354, 0.44", "-20.1693, -56.5082, -5.22899, 0.37", "-20.3237, -57.6738, -4.97423, 0.52", "-20.4414, -58.6138, -4.79961, 0.88", "-20.5462, -59.4004, -4.70028, 0.88", "-20.6758, -60.2793, -4.6334, 1.47", "-20.7785, -60.9256, -4.61894, 1.47", "-20.9682, -61.9675, -4.63564, 0.88", "-21.1978, -63.0813, -4.69097, 0.52", "-21.4429, -64.1821, -4.73051, 0.44", "-21.6232, -64.9283, -4.74989, 0.52", "-21.7824, -65.5439, -4.75238, 0.59", "-21.9581, -66.2066, -4.74619, 0.37", "-22.1463, -66.9414, -4.73609, 0.37", "-22.3986, -67.9368, -4.72956, 0.37", "-22.5289, -68.4593, -4.70595, 0.74", "-22.7251, -69.2628, -4.65187, 1.18", "-22.9226, -70.0684, -4.62175, 1.25", "-23.1702, -71.039, -4.61681, 0.52", "-23.4512, -72.0821, -4.63849, 0.29", "-23.9024, -73.7005, -4.70492, 0.59", "-24.1316, -74.5427, -4.74449, 0.66", "-24.4861, -75.9296, -4.75911, 0.96", "-24.7554, -77.0974, -4.72415, 1.03", "-24.9435, -78.1083, -4.64952, 1.33", "-25.0315, -78.8541, -4.56269, 0.52", "-25.1133, -80.1922, -4.37422, 0.37", "-25.1369, -81.5842, -4.10374, 0.37", "-25.1247, -82.4518, -3.89592, 0.66", "-25.1013, -83.3515, -3.69502, 1.03", "-25.0878, -84.2938, -3.5145, 0.88", "-25.094, -85.17, -3.38199, 0.59", "-25.1422, -86.2408, -3.27019, 0.37", "-25.2348, -87.294, -3.23378, 0.44", "-25.3766, -88.4236, -3.2388, 0.29", "-25.5933, -89.6995, -3.28687, 0.22", "-25.7048, -90.2345, -3.30533, 0.44", "-25.8474, -90.8464, -3.31676, 0.88", "-25.9259, -91.1515, -3.31982, 0.96", "-26.1795, -92.0559, -3.29433, 0.44", "-26.4959, -93.1073, -3.23902, 0.29", "-26.8368, -94.1624, -3.17623, 0.29", "-27.0724, -94.8838, -3.13146, 0.52", "-27.2764, -95.5093, -3.09762, 0.59", "-27.6093, -96.529, -3.05793, 0.52", "-27.8377, -97.2384, -3.04382, 1.18", "-28.1027, -98.1238, -3.05154, 1.4", "-28.3931, -99.1562, -3.09868, 1.03", "-28.6654, -100.205, -3.165, 0.44", "-28.892, -101.148, -3.24777, 0.22", "-29.059, -101.888, -3.33886, 0.22", "-29.1583, -102.348, -3.39601, 0.22", "-29.2253, -102.656, -3.44202, 0.44", "-29.3108, -103.011, -3.49956, 0.96", "-29.4613, -103.584, -3.60003, 0.59", "-29.7381, -104.541, -3.7735, 0.29", "-29.9969, -105.326, -3.91746, 0.22", "-30.2323, -106.031, -4.04913, 0.29", "-30.469, -106.707, -4.17242, 0.52", "-30.6749, -107.263, -4.28863, 0.96", "-30.9761, -108.041, -4.46187, 1.77", "-31.429, -109.163, -4.71666, 2.14", "-31.8236, -110.126, -4.92966, 1.62", "-32.2853, -111.257, -5.16532, 0.52", "-32.7873, -112.512, -5.43425, 0.44", "-33.1253, -113.366, -5.59116, 0.22", "-33.4466, -114.188, -5.72027, 0.37", "-33.8591, -115.274, -5.84227, 0.22", "-34.2224, -116.254, -5.87832, 0.22", "-34.5502, -117.209, -5.84413, 0.22", "-34.8316, -118.08, -5.71907, 0.22", "-34.9598, -118.499, -5.61784, 0.96", "-35.1905, -119.295, -5.36723, 1.33", "-35.4591, -120.247, -4.98968, 1.03", "-35.6809, -121.021, -4.65676, 0.29", "-35.9599, -121.987, -4.23531, 0.29", "-36.2128, -122.885, -3.89066, 0.44", "-36.4128, -123.599, -3.63524, 0.81", "-36.6773, -124.515, -3.33974, 0.59", "-36.932, -125.386, -3.07237, 0.52", "-37.1739, -126.237, -2.8148, 0.22", "-37.4579, -127.245, -2.57819, 0.29", "-37.5766, -127.695, -2.50058, 0.66", "-37.6664, -128.064, -2.45062, 0.74", "-37.8734, -128.95, -2.38726, 0.74", "-38.0911, -129.939, -2.35668, 1.99", "-38.4797, -131.702, -2.38555, 0.44", "-38.7667, -133.03, -2.42999, 0.37", "-38.9837, -134.063, -2.49407, 0.29", "-39.1396, -134.822, -2.57067, 0.96", "-39.2834, -135.499, -2.68539, 1.47", "-39.5023, -136.497, -2.90443, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.2473, -11.601, 1.62214, 0.59", "-12.4374, -12.1274, 1.00211, 0.59", "-13.5393, -12.4509, 0.364066, 0.44", "-14.4179, -12.6236, -0.117513, 0.44", "-14.8677, -12.681, -0.342726, 0.44", "-15.6906, -12.7252, -0.669226, 0.44", "-16.3536, -12.7179, -0.881342, 0.66", "-17.8377, -12.5377, -1.32063, 0.66", "-18.69, -12.3625, -1.52274, 0.52", "-19.4001, -12.1952, -1.66686, 0.52", "-20.7405, -11.8582, -1.90884, 0.52", "-21.8726, -11.5533, -2.13797, 0.66", "-23.4596, -11.0996, -2.40926, 0.88", "-24.4042, -10.8173, -2.51649, 0.88", "-25.8018, -10.3907, -2.58561, 0.66", "-26.6988, -10.1359, -2.56081, 0.44", "-28.1608, -9.77911, -2.35805, 0.29", "-30.0542, -9.41607, -1.60569, 0.29", "-30.9427, -9.28768, -1.09816, 0.29", "-32.0243, -9.1756, -0.46936, 0.29", "-32.7056, -9.13596, -0.0477398, 0.74", "-33.6249, -9.13172, 0.475065, 1.33", "-35.1371, -9.15685, 1.23742, 0.66", "-35.9685, -9.15734, 1.56428, 0.44", "-37.4208, -9.09912, 2.07406, 0.37", "-38.5729, -9.00724, 2.45954, 0.37", "-39.4642, -8.91965, 2.77383, 0.44", "-40.1456, -8.8589, 3.02074, 0.44", "-41.1766, -8.77749, 3.37955, 0.44", "-41.9432, -8.70365, 3.64706, 0.29", "-42.2571, -8.64392, 3.76654, 0.29", "-42.7469, -8.49499, 3.9399, 0.29", "-43.1473, -8.32115, 4.12217, 0.29", "-43.4871, -8.16311, 4.29757, 0.29", "-44.2358, -7.80579, 4.6879, 0.44", "-45.4673, -7.18332, 5.33184, 0.66", "-45.8866, -6.97128, 5.54641, 0.81", "-47.1417, -6.29863, 6.17032, 0.22", "-47.7505, -5.98243, 6.45189, 0.59", "-48.3078, -5.72659, 6.67974, 0.66", "-49.2745, -5.37048, 7.00741, 0.52", "-50.4118, -5.04178, 7.29844, 0.29", "-51.1842, -4.8643, 7.45952, 0.29", "-52.1291, -4.70707, 7.59118, 0.29", "-53.1668, -4.55634, 7.70505, 0.52", "-53.969, -4.42511, 7.78409, 0.88", "-54.5343, -4.33273, 7.8495, 1.18", "-55.0343, -4.24823, 7.91156, 1.18", "-56.7823, -3.96535, 8.15622, 0.44", "-58.0099, -3.75133, 8.34689, 0.44", "-59.3003, -3.55156, 8.555, 0.29", "-60.2796, -3.4374, 8.74224, 0.29", "-61.3104, -3.37417, 8.95684, 0.66", "-61.7847, -3.38157, 9.08234, 0.88", "-62.4065, -3.4498, 9.27413, 0.74", "-63.6641, -3.7064, 9.66657, 0.29", "-64.8923, -4.0406, 10.0661, 0.59", "-65.825, -4.30734, 10.3862, 0.66", "-67.014, -4.64632, 10.834, 0.88", "-68.1847, -4.96964, 11.2877, 0.37", "-69.4308, -5.32503, 11.7659, 0.15", "-70.1449, -5.52481, 12.0171, 0.15", "-70.7691, -5.69568, 12.1714, 0.15", "-71.4117, -5.86277, 12.2521, 0.37", "-72.263, -6.07496, 12.2394, 0.81", "-73.2026, -6.27671, 12.0892, 0.44", "-74.3824, -6.47024, 11.748, 0.29", "-75.3514, -6.60787, 11.3809, 0.29", "-76.3553, -6.70993, 10.9565, 0.52", "-76.8279, -6.72743, 10.7526, 0.81", "-78.4977, -6.66177, 10.0411, 0.37", "-79.4401, -6.5449, 9.7083, 0.22", "-80.1297, -6.42891, 9.52421, 0.22", "-81.0573, -6.24411, 9.39406, 0.44", "-82.0489, -6.02175, 9.36495, 1.03", "-82.5251, -5.91078, 9.38926, 1.33", "-84.7476, -5.39654, 9.75612, 0.22", "-85.7464, -5.18383, 10.0312, 0.74", "-87.1252, -4.93644, 10.5627, 0.22", "-87.9375, -4.82827, 10.9451, 0.66", "-88.5044, -4.77079, 11.2638, 0.66", "-89.3735, -4.69834, 11.7709, 0.66", "-90.6825, -4.64367, 12.5391, 0.22", "-91.5117, -4.63078, 12.9876, 0.22", "-92.4084, -4.63149, 13.4112, 1.33", "-94.3014, -4.66475, 14.1626, 0.37", "-96.3455, -4.72739, 14.8066, 0.22", "-98.1045, -4.81062, 15.2037, 0.22", "-98.8466, -4.85863, 15.3312, 0.44", "-99.8735, -4.95011, 15.5182, 0.88", "-101.078, -5.09622, 15.7992, 0.22", "-102.364, -5.29904, 16.1539, 0.15", "-103.369, -5.49101, 16.5126, 0.59", "-105.076, -5.76402, 17.2168, 0.15", "-106.417, -5.93837, 17.8266, 0.15", "-107.374, -6.05976, 18.2975, 0.15", "-107.688, -6.08355, 18.4594, 1.03", "-108.313, -6.10834, 18.7766, 1.25", "-109.867, -6.14316, 19.3931, 0.29", "-110.649, -6.15834, 19.5704, 0.22", "-111.51, -6.16035, 19.6719, 0.22", "-112.495, -6.12933, 19.7827, 0.22", "-113.135, -6.09447, 19.9062, 0.37", "-114.176, -6.01781, 20.1877, 0.22", "-115.312, -5.91521, 20.651, 0.07", "-116.247, -5.80597, 21.1129, 0.29", "-117.367, -5.634, 21.7158, 0.15", "-118.566, -5.43415, 22.3909, 0.15", "-119.376, -5.27315, 22.8487, 0.74", "-120.814, -4.96742, 23.6653, 0.74", "-121.77, -4.77363, 24.1787, 0.15", "-122.997, -4.52339, 24.7035, 0.15", "-123.721, -4.36348, 24.9407, 0.59", "-124.719, -4.14213, 25.2012, 0.22", "-126.408, -3.77374, 25.5819, 0.22", "-127.28, -3.58592, 25.7399, 0.29", "-128.858, -3.1886, 26.0267, 0.66", "-130.282, -2.83254, 26.2676, 0.15", "-131.261, -2.59861, 26.4225, 0.15", "-131.733, -2.47936, 26.4894, 0.15", "-132.307, -2.33761, 26.5522, 0.37", "-133.255, -2.10895, 26.6665, 0.37", "-134.275, -1.88493, 26.8435, 0.37", "-135.307, -1.65474, 27.0419, 0.37", "-136.075, -1.47175, 27.2147, 0.37", "-137.679, -1.09685, 27.6544, 0.15", "-139.039, -0.809584, 28.0686, 0.52", "-140.136, -0.610634, 28.4603, 0.15", "-141.418, -0.396023, 28.9546, 0.15", "-142.27, -0.280513, 29.2882, 0.81", "-142.884, -0.229667, 29.522, 0.81", "-144.513, -0.139458, 29.9785, 0.15", "-145.93, -0.097096, 30.2423, 0.15", "-146.51, -0.08873, 30.3122, 0.81", "-147.572, -0.092374, 30.4008, 1.11", "-149.287, -0.118625, 30.5185, 0.15", "-151.608, -0.188058, 30.6928, 0.66", "-153.808, -0.274935, 30.8766, 0.07", "-155.392, -0.35006, 31.0106, 0.07", "-156.443, -0.401728, 31.1291, 0.66", "-157.572, -0.460376, 31.296, 0.15", "-158.876, -0.537285, 31.5504, 0.15", "-159.523, -0.574965, 31.7133, 0.52", "-159.93, -0.578619, 31.7862, 0.52", "-160.593, -0.53445, 31.8708, 0.22", "-161.707, -0.355, 31.982, 0.07", "-162.105, -0.249049, 32.0188, 0.07", "-162.889, 0.024759, 32.0793, 0.29", "-163.903, 0.427996, 32.1821, 0.07", "-164.566, 0.721167, 32.2637, 0.07", "-165.349, 1.09457, 32.396, 0.15", "-166.107, 1.47645, 32.5563, 0.15", "-166.962, 1.90981, 32.77, 0.74", "-167.488, 2.18003, 32.9188, 0.15", "-168.346, 2.60938, 33.1543, 0.07", "-168.867, 2.87013, 33.2919, 0.07", "-169.459, 3.14786, 33.4333, 0.29", "-170.915, 3.8285, 33.7417, 0.15", "-171.541, 4.11822, 33.8697, 0.52", "-172.764, 4.64079, 34.1461, 0.07", "-173.407, 4.89404, 34.3104, 0.07", "-174.301, 5.21634, 34.5518, 0.07", "-174.794, 5.36292, 34.7183, 0.37", "-175.299, 5.45855, 34.9671, 0.37", "-176.28, 5.55526, 35.5397, 0.22", "-177.131, 5.57127, 36.0827, 0.59", "-177.655, 5.52878, 36.4765, 0.59", "-178.835, 5.3611, 37.446, 0.15", "-180.356, 5.10294, 38.6948, 0.15", "-181.198, 4.96048, 39.3355, 0.15", "-181.811, 4.86129, 39.7814, 0.29", "-184.334, 4.4718, 41.5923, 0.07", "-184.997, 4.39155, 42.0526, 0.07", "-185.946, 4.31611, 42.6701, 1.18", "-187.499, 4.29202, 43.5662, 0.07", "-188.579, 4.34494, 44.1601, 0.07", "-189.411, 4.43881, 44.5566, 0.07", "-190.059, 4.5547, 44.7818, 0.37", "-190.332, 4.61277, 44.8701, 0.37", "-191.356, 4.8839, 45.0892, 0.07", "-192.485, 5.23854, 45.2104, 0.07", "-193.173, 5.48052, 45.215, 0.66", "-193.562, 5.62831, 45.2031, 0.66", "-194.426, 5.9755, 45.1691, 0.22", "-196.24, 6.75857, 45.1031, 0.07", "-197.126, 7.17313, 45.0701, 0.29", "-198.714, 7.95311, 45.0202, 0.07", "-199.272, 8.22404, 45.031, 0.29", "-199.584, 8.36246, 45.0526, 0.29", "-201.138, 8.93153, 45.2427, 0.07", "-201.462, 9.01262, 45.2986, 0.07", "-202.374, 9.14781, 45.3134, 0.15", "-203.488, 9.18127, 45.1986, 0.07", "-204.451, 9.13164, 45.0196, 0.66", "-205.544, 9.00196, 44.7433, 1.4", "-207.112, 8.72667, 44.2433, 0.07", "-209.849, 8.24056, 43.2776, 0.07", "-210.69, 8.09924, 42.9613, 0.07", "-211.127, 8.03903, 42.7901, 0.37", "-211.426, 8.01028, 42.6851, 0.37", "-212.182, 7.96515, 42.5194, 0.07", "-212.978, 7.95182, 42.4891, 0.59", "-214.267, 7.93288, 42.6443, 0.07", "-214.844, 7.92961, 42.676, 0.07", "-215.585, 7.92051, 42.6692, 0.29", "-216.961, 7.87735, 42.5747, 0.07", "-217.706, 7.83179, 42.4867, 0.74", "-219.618, 7.63187, 42.1782, 0.07", "-221.283, 7.40093, 41.847, 0.07", "-222.044, 7.29312, 41.6728, 0.07", "-222.875, 7.18063, 41.4452, 0.44", "-223.462, 7.10681, 41.2441, 0.59", "-224.984, 6.87449, 40.6857, 0.07", "-225.456, 6.76084, 40.5093, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-15.2069, -12.3008, 9.9668, 0.96", "-16.1142, -13.712, 9.37327, 0.96", "-17.3166, -15.5706, 8.57118, 0.96", "-17.8637, -16.4076, 8.19652, 1.11", "-18.7694, -17.7663, 7.57387, 0.74", "-19.4453, -18.7571, 7.12889, 0.81", "-20.1584, -19.8065, 6.65448, 0.74", "-20.8678, -20.8933, 6.14673, 0.74", "-21.4559, -21.8398, 5.70529, 0.96", "-22.0399, -22.8777, 5.18178, 1.4", "-22.7692, -24.338, 4.43435, 1.25", "-23.4091, -25.7281, 3.72181, 0.88", "-24.1047, -27.3368, 2.95139, 0.74", "-24.635, -28.7056, 2.3711, 0.59", "-25.09, -29.9823, 1.87884, 0.66", "-25.3136, -30.6807, 1.63895, 0.74", "-25.6668, -31.9168, 1.28449, 0.74", "-26.0108, -33.1491, 1.07853, 0.88", "-26.3802, -34.4755, 1.01678, 0.96", "-26.6487, -35.441, 1.06925, 0.88", "-26.8735, -36.2284, 1.16541, 0.66", "-27.1793, -37.274, 1.3299, 0.59", "-27.5936, -38.6474, 1.67188, 0.59", "-27.8022, -39.2955, 1.8411, 0.66", "-28.098, -40.1144, 2.05463, 0.59", "-28.5448, -41.2004, 2.31308, 0.88", "-29.004, -42.215, 2.49666, 0.88", "-29.6415, -43.5517, 2.64637, 1.03", "-30.2872, -44.88, 2.64445, 0.66", "-30.6957, -45.6697, 2.60305, 0.59", "-31.0807, -46.3747, 2.53522, 0.81", "-31.7166, -47.4607, 2.37379, 0.59", "-32.5416, -48.8551, 2.11578, 0.52", "-33.1571, -49.9091, 1.87059, 0.66", "-33.5923, -50.6513, 1.71396, 0.66", "-34.3326, -51.9243, 1.44298, 0.59", "-34.9076, -52.9199, 1.30333, 0.59", "-35.285, -53.5277, 1.29899, 0.81", "-35.917, -54.5029, 1.4919, 1.11", "-36.3156, -55.1107, 1.7209, 0.81", "-36.8957, -56.0004, 2.18656, 0.52", "-37.7508, -57.3083, 3.01584, 0.59", "-38.6017, -58.5838, 3.88867, 0.59", "-39.2428, -59.5227, 4.53931, 0.59", "-39.8714, -60.4527, 5.18117, 0.88", "-40.564, -61.5284, 5.8266, 1.11", "-41.0463, -62.3058, 6.18558, 1.18", "-41.6503, -63.3211, 6.47641, 0.88", "-42.0188, -63.9764, 6.60754, 1.03", "-42.3303, -64.5162, 6.69566, 1.18", "-43.1257, -65.8045, 6.91623, 0.81", "-44.0093, -67.1185, 7.15042, 0.59", "-44.7685, -68.1386, 7.39857, 0.52", "-45.4893, -69.0105, 7.66359, 0.52", "-46.3801, -69.9383, 7.99262, 0.52", "-47.4821, -70.9071, 8.42371, 0.44", "-48.0603, -71.3215, 8.65011, 0.52", "-48.8677, -71.8329, 8.96028, 0.81", "-49.3384, -72.1116, 9.12787, 0.81", "-50.6318, -72.9174, 9.5028, 0.52", "-51.6323, -73.6517, 9.72102, 0.44", "-52.5924, -74.5314, 9.83568, 0.29", "-53.1156, -75.1428, 9.88108, 0.29", "-53.5712, -75.8179, 9.93073, 0.52", "-54.1847, -76.9776, 10.0445, 0.81", "-54.7293, -78.2508, 10.2051, 0.81", "-55.0755, -79.1552, 10.3509, 1.18", "-55.4856, -80.2871, 10.5881, 1.55", "-55.8809, -81.3073, 10.8385, 0.88", "-56.5167, -82.8303, 11.2597, 0.74", "-57.0764, -84.0782, 11.6398, 0.52", "-57.4948, -84.9372, 11.9023, 0.66", "-58.1377, -86.0986, 12.2119, 0.81", "-58.6964, -86.9904, 12.3928, 0.59", "-59.1517, -87.6777, 12.4991, 0.29", "-59.7242, -88.5051, 12.6055, 0.29", "-60.1339, -89.0849, 12.6594, 0.29", "-61.0216, -90.3199, 12.7867, 0.37", "-61.7849, -91.3373, 12.9221, 0.37", "-62.6002, -92.4083, 13.0893, 0.44", "-63.2754, -93.3007, 13.2401, 0.44", "-63.6977, -93.8739, 13.3402, 0.81", "-64.3376, -94.7626, 13.4901, 1.33", "-64.7779, -95.3821, 13.5882, 1.33", "-65.3493, -96.1904, 13.6542, 0.74", "-66.1926, -97.3972, 13.663, 0.29", "-66.7622, -98.2408, 13.6201, 0.29", "-67.5583, -99.4228, 13.534, 0.29", "-67.9561, -100.02, 13.478, 0.74", "-68.9305, -101.526, 13.3572, 1.11", "-69.7287, -102.804, 13.2796, 0.52", "-70.3069, -103.729, 13.2419, 0.29", "-70.9886, -104.778, 13.2565, 0.29", "-71.5973, -105.659, 13.3538, 0.44", "-72.1004, -106.324, 13.4898, 0.52", "-73.0733, -107.475, 13.8576, 0.29", "-73.6182, -108.076, 14.069, 0.44", "-74.6055, -109.16, 14.4467, 0.59", "-75.5049, -110.147, 14.7617, 1.11", "-76.1383, -110.832, 14.9711, 1.62", "-77.0048, -111.755, 15.2504, 2.06", "-77.7796, -112.587, 15.4873, 0.66", "-78.6004, -113.563, 15.7148, 0.22", "-79.4378, -114.652, 15.895, 0.22", "-79.8901, -115.28, 15.97, 0.29", "-80.1932, -115.724, 16.0207, 0.74", "-80.6159, -116.374, 16.0865, 0.88", "-81.3497, -117.555, 16.1899, 0.22", "-81.6968, -118.131, 16.2418, 0.22", "-82.0478, -118.758, 16.2967, 0.29", "-82.4619, -119.54, 16.3592, 0.29", "-82.8829, -120.38, 16.4155, 0.29", "-83.2338, -121.094, 16.4998, 0.29", "-83.5585, -121.744, 16.6038, 0.59", "-83.8569, -122.33, 16.7096, 1.25", "-84.147, -122.884, 16.8145, 1.25", "-84.6063, -123.728, 16.9744, 0.59", "-85.2241, -124.844, 17.1791, 1.25", "-85.9587, -126.151, 17.4262, 0.44", "-86.5585, -127.21, 17.6133, 0.29", "-87.1466, -128.223, 17.786, 0.29", "-87.6859, -129.154, 17.8854, 0.29", "-88.1458, -129.938, 17.9181, 0.52", "-88.6177, -130.743, 17.8917, 0.81", "-88.9917, -131.375, 17.847, 0.59", "-89.5773, -132.373, 17.7487, 0.22", "-90.3757, -133.761, 17.5962, 0.22", "-90.6661, -134.283, 17.5314, 0.29", "-90.9639, -134.833, 17.4604, 0.74", "-91.3067, -135.479, 17.3783, 1.03", "-91.958, -136.749, 17.2702, 0.44", "-92.5789, -138.082, 17.2378, 0.29", "-93.1101, -139.31, 17.284, 0.29", "-93.3204, -139.832, 17.3083, 0.52", "-93.5607, -140.461, 17.3429, 0.81", "-93.8179, -141.188, 17.3897, 0.96", "-94.4001, -142.912, 17.5174, 0.22", "-94.643, -143.688, 17.5868, 0.22", "-94.9087, -144.62, 17.6903, 0.37", "-95.1172, -145.394, 17.7737, 0.88", "-95.4807, -146.801, 17.9107, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.2069, -12.3008, 9.9668, 0.66", "-15.0896, -13.3135, 10.8869, 0.66", "-14.9724, -14.3596, 11.8746, 0.66", "-14.87, -15.2543, 12.6679, 0.59", "-14.7742, -15.9453, 13.2384, 0.74", "-14.6631, -16.7464, 13.8999, 0.44", "-14.558, -17.505, 14.5262, 0.44", "-14.4196, -18.3975, 15.2486, 0.52", "-14.3341, -18.9765, 15.6493, 1.03", "-14.1969, -19.8075, 16.2245, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "261.908, 19.936, -126.709, 0.15", "274.429, 21.8835, -131.8, 0.15", "286.808, 26.8837, -134.671, 0.15", "299.265, 32.1028, -136.688, 0.15", "311.292, 38.5487, -137.221, 0.15", "323.374, 44.4593, -139.581, 0.15", "334.843, 51.7103, -141.124, 0.15", "346.19, 59.2649, -141.935, 0.15", "356.602, 67.4828, -145.182, 0.15", "366.066, 76.8007, -148.358, 0.15", "375.011, 85.5574, -153.816, 0.15", "383.182, 94.8732, -159.555, 0.15", "390.053, 104.122, -166.885, 0.15", "394.5, 114.763, -174.198, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "261.908, 19.936, -126.709, 0.07", "271.497, 21.6093, -130.779, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "234.792, -141.518, -64.6996, 0.15", "244.64, -147.563, -66.2887, 0.15", "254.69, -153.484, -66.216, 0.15", "265.087, -158.679, -67.2157, 0.15", "275.277, -164.202, -68.5221, 0.15", "285.902, -168.971, -69.1967, 0.15", "295.811, -175.12, -69.4275, 0.15", "305.924, -180.852, -70.4036, 0.15", "315.806, -186.765, -72.2609, 0.15", "325.619, -192.433, -75.0262, 0.15", "334.715, -199.533, -76.7317, 0.15", "343.04, -207.704, -76.6771, 0.15" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "234.792, -141.518, -64.6996, 0.07", "243.201, -146.129, -66.1608, 0.15", "251.256, -151.464, -67.0391, 0.15", "259.185, -156.925, -68.2318, 0.15", "267.558, -161.725, -69.221, 0.15", "275.174, -167.731, -69.4403, 0.15", "283.6, -172.236, -71.1204, 0.15", "292.021, -176.899, -72.3278, 0.15", "300.934, -180.451, -73.7653, 0.15", "310.341, -182.805, -74.0558, 0.15", "319.554, -185.757, -73.3342, 0.15", "328.435, -189.564, -72.468, 0.15", "336.625, -194.748, -72.8708, 0.15" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-43.5353, 183.817, -35.1333, 0.15", "-46.3858, 193.195, -36.3017, 0.15", "-49.3205, 202.611, -36.6931, 0.15", "-53.2386, 211.671, -36.6605, 0.15", "-56.519, 220.932, -35.7016, 0.15", "-58.0677, 230.569, -34.2304, 0.15", "-59.8118, 240.248, -33.3902, 0.15", "-61.0766, 250.023, -33.9188, 0.15", "-61.9891, 259.851, -33.7858, 0.15", "-61.8151, 269.705, -34.3363, 0.15", "-59.2508, 279.219, -33.7522, 0.15", "-57.8384, 288.692, -31.3617, 0.15" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-43.5353, 183.817, -35.1333, 0.07", "-45.5675, 191.395, -35.8375, 0.15", "-46.4032, 198.999, -37.7185, 0.15", "-47.8707, 206.303, -40.2797, 0.15", "-49.9041, 213.107, -43.6897, 0.15", "-51.7646, 219.953, -47.1151, 0.15", "-52.1831, 226.914, -50.7806, 0.15", "-53.8369, 233.813, -54.2052, 0.15", "-55.8812, 240.936, -56.8773, 0.15", "-59.4903, 247.515, -59.2753, 0.15", "-63.4837, 253.931, -61.4985, 0.15", "-67.4541, 260.086, -64.3987, 0.15" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.3745, 290.57, -86.4356, 0.15", "-13.7343, 298.033, -87.5847, 0.15", "-13.3714, 305.538, -88.4067, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.3745, 290.57, -86.4356, 0.07", "-13.3717, 295.523, -88.329, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-44.2436, 170.84, 50.5322, 0.15", "-44.1629, 171.803, 49.7544, 0.15", "-44.0326, 173.308, 48.6923, 0.15", "-43.9285, 174.47, 47.9711, 0.15", "-43.8868, 174.941, 47.7086, 0.59", "-43.8237, 175.668, 47.3385, 0.81", "-43.7392, 176.566, 46.9182, 0.15", "-43.618, 177.6, 46.4721, 0.15", "-43.5268, 178.235, 46.2163, 0.15", "-43.4423, 178.707, 46.008, 0.29", "-43.3648, 179.101, 45.8025, 0.29", "-43.2875, 179.481, 45.5795, 0.29", "-43.0938, 180.763, 44.8181, 0.15", "-42.9688, 182.06, 44.0279, 0.15", "-42.9462, 182.691, 43.6993, 0.15", "-42.9792, 183.424, 43.4161, 0.52", "-43.0168, 183.806, 43.2846, 0.52", "-43.2131, 185.207, 42.8908, 0.07", "-43.3688, 186.069, 42.726, 0.07", "-43.7416, 187.877, 42.4599, 0.44", "-44.0467, 189.334, 42.2389, 0.07", "-44.3385, 190.809, 41.9451, 0.07", "-44.4797, 191.538, 41.766, 0.07", "-44.6134, 192.218, 41.5947, 0.37", "-44.687, 192.581, 41.5047, 0.37", "-44.9831, 194.071, 41.0909, 0.15", "-45.245, 195.232, 40.9166, 0.15", "-45.4424, 196.003, 40.8986, 0.15", "-45.6858, 196.96, 40.846, 0.59", "-45.783, 197.355, 40.7936, 0.59", "-46.0395, 198.555, 40.4749, 0.07", "-46.3107, 199.884, 40.1906, 0.07", "-46.4063, 200.413, 40.114, 0.29", "-46.6498, 202.312, 39.8895, 0.59", "-46.749, 203.717, 39.6698, 0.07", "-46.8475, 205.127, 39.5384, 0.07", "-47.1595, 208.231, 39.6035, 0.29", "-47.2329, 208.76, 39.6544, 0.52", "-47.4289, 209.871, 39.8658, 0.15", "-47.7504, 211.519, 40.3118, 0.22", "-48.0789, 213.205, 40.7996, 0.07", "-48.38, 214.752, 41.1921, 0.07", "-48.5705, 215.746, 41.3906, 0.07", "-48.7462, 216.627, 41.6404, 0.22", "-48.8708, 217.28, 41.8998, 0.37", "-48.9574, 217.831, 42.1786, 0.44", "-49.0339, 218.694, 42.6714, 0.15", "-49.1049, 220.141, 43.609, 0.15", "-49.1419, 221.002, 44.253, 0.15", "-49.1676, 221.579, 44.7146, 0.15", "-49.2238, 222.37, 45.3378, 0.52", "-49.3226, 223.629, 46.2797, 0.07", "-49.3828, 224.439, 46.8293, 0.07", "-49.4326, 225.204, 47.244, 0.07", "-49.4724, 225.695, 47.4707, 0.44", "-49.6124, 227.341, 48.0366, 0.15", "-49.6703, 227.927, 48.1954, 0.15", "-49.7199, 228.444, 48.2543, 0.29", "-49.7885, 229.256, 48.2675, 0.07", "-49.8196, 229.801, 48.2429, 0.22", "-49.8908, 231.989, 48.0633, 0.07", "-49.891, 233.232, 47.9183, 0.07", "-49.8488, 235.012, 47.613, 0.07", "-49.8039, 235.73, 47.4051, 0.29", "-49.7044, 236.813, 46.9938, 0.07", "-49.651, 237.296, 46.7738, 0.44", "-49.515, 238.443, 46.1729, 0.15", "-49.3089, 240.138, 45.2407, 0.15", "-49.1321, 242.107, 44.2081, 0.15", "-49.0967, 242.717, 43.8782, 0.37", "-49.09, 243.114, 43.6637, 0.37", "-49.1225, 244.28, 43.1047, 0.15", "-49.218, 245.183, 42.8235, 0.15", "-49.3445, 245.817, 42.8126, 0.29", "-49.5304, 246.521, 42.9601, 0.29", "-49.7184, 247.159, 43.1506, 0.29", "-50.138, 248.489, 43.6002, 0.15", "-50.6812, 250.11, 44.2186, 0.15", "-51.1083, 251.395, 44.7222, 0.52", "-51.3198, 252.076, 44.9596, 0.52", "-51.7266, 253.38, 45.329, 0.07", "-52.0137, 254.298, 45.5162, 0.07", "-52.0843, 254.523, 45.5395, 0.07", "-52.3734, 255.513, 45.5164, 0.59", "-52.7606, 256.962, 45.396, 0.07", "-53.0487, 258.181, 45.2822, 0.07", "-53.1898, 258.856, 45.2306, 0.52", "-53.2652, 259.29, 45.2068, 0.52", "-53.4117, 260.449, 45.1553, 0.15", "-53.466, 261.186, 45.1311, 0.15", "-53.5037, 262.169, 45.1064, 0.15", "-53.5167, 262.549, 45.1079, 0.22", "-53.5506, 263.604, 45.1349, 0.22", "-53.5571, 264.118, 45.1291, 0.22", "-53.5713, 265.268, 45.1098, 0.22", "-53.5989, 266.323, 45.0959, 0.07", "-53.6277, 267.34, 45.0873, 0.07", "-53.6808, 268.157, 45.0904, 0.22", "-53.8514, 269.708, 45.1043, 0.07", "-53.9634, 270.59, 45.1152, 0.07", "-54.0171, 271.049, 45.1398, 0.07", "-54.0649, 271.892, 45.1416, 0.15", "-54.0693, 273.482, 45.1029, 0.15", "-54.0263, 274.613, 45.0746, 0.44", "-53.884, 276.12, 45.144, 0.15", "-53.6792, 277.439, 45.2627, 0.15", "-53.2224, 279.712, 45.6201, 0.07", "-53.0455, 280.496, 45.7954, 0.07", "-52.901, 281.123, 45.997, 0.22", "-52.6588, 283.101, 46.8068, 0.07", "-52.6762, 284.055, 47.2597, 0.07", "-52.8322, 284.973, 47.7169, 0.07", "-53.0553, 285.834, 48.203, 0.07", "-53.4493, 287.013, 48.8377, 0.22", "-54.0944, 288.553, 49.614, 0.07", "-54.3728, 289.07, 49.8172, 0.07", "-54.8339, 289.818, 50.0755, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-44.2436, 170.84, 50.5322, 0.07", "-44.1897, 172.017, 51.2846, 0.07", "-44.1852, 172.404, 51.5086, 0.22", "-44.1836, 174.076, 52.3808, 0.07", "-44.1868, 174.982, 52.9102, 0.07", "-44.1802, 175.445, 53.1978, 0.29", "-44.1716, 175.653, 53.3481, 0.29", "-44.1464, 176.182, 53.8272, 0.07", "-44.1193, 176.583, 54.2509, 0.44", "-44.0416, 177.624, 55.5158, 0.07", "-44.0226, 177.944, 55.9488, 0.29", "-43.9747, 179.08, 57.6587, 0.07", "-43.9363, 179.874, 58.8994, 0.07", "-43.9366, 180.322, 59.6435, 0.44", "-43.9674, 180.806, 60.4733, 0.66", "-44.0826, 181.836, 62.1971, 0.07", "-44.2049, 182.714, 63.6275, 0.07", "-44.2557, 183.064, 64.1696, 0.59", "-44.4513, 184.644, 66.3704, 0.22", "-44.5696, 185.876, 67.8694, 0.07", "-44.6167, 186.652, 68.6626, 0.88", "-44.6326, 187.232, 69.1297, 0.15", "-44.6314, 187.696, 69.4139, 0.44", "-44.5786, 188.863, 69.9846, 0.15", "-44.4551, 189.951, 70.2935, 0.15", "-44.3428, 190.724, 70.4198, 0.15", "-44.2395, 191.389, 70.5017, 0.37", "-44.1558, 191.947, 70.5777, 0.15", "-44.0402, 192.688, 70.6976, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.3355, 31.1869, 3.38954, 0.37", "11.1804, 32.2226, 4.10427, 0.37", "11.1354, 32.6462, 4.37271, 0.37", "11.1015, 33.2556, 4.74901, 0.37", "11.0906, 33.8322, 5.07456, 0.81", "11.0961, 34.359, 5.33642, 1.03", "11.119, 35.1066, 5.66391, 1.03", "11.1764, 35.7256, 5.8876, 0.74", "11.2845, 36.6371, 6.1736, 0.52", "11.3897, 37.3942, 6.35568, 0.29", "11.4771, 37.9661, 6.46472, 0.22", "11.5714, 38.6026, 6.51662, 0.29", "11.6572, 39.2093, 6.48706, 0.59", "11.7174, 39.6119, 6.43045, 0.81", "11.8161, 40.2726, 6.26257, 0.81", "11.892, 40.756, 6.11829, 0.59", "12.0855, 41.9902, 5.72882, 0.29", "12.2238, 42.8596, 5.43573, 0.22", "12.2808, 43.2223, 5.30437, 0.29", "12.3948, 43.9543, 5.04633, 0.29", "12.5074, 44.7204, 4.79922, 0.22", "12.5677, 45.1533, 4.68372, 0.22", "12.6547, 45.7767, 4.56926, 0.37", "12.7288, 46.3738, 4.46403, 0.52", "12.7826, 46.8215, 4.39965, 0.52", "12.8542, 47.4118, 4.34321, 0.66", "12.9033, 47.7845, 4.31267, 0.88", "12.9613, 48.1736, 4.27842, 1.4", "13.044, 48.6685, 4.23625, 1.4", "13.205, 49.538, 4.17136, 0.59", "13.3677, 50.3475, 4.10783, 0.44", "13.5294, 51.0741, 4.08909, 0.22", "13.6718, 51.6719, 4.1027, 0.22", "13.7794, 52.0941, 4.13231, 0.59", "13.8255, 52.2514, 4.1503, 0.59", "14.0124, 52.8148, 4.24308, 0.29", "14.3427, 53.7523, 4.43719, 0.29", "14.4834, 54.1689, 4.528, 1.18", "14.6127, 54.5663, 4.60638, 1.47", "14.7281, 54.9633, 4.66213, 1.47", "14.8679, 55.5114, 4.71052, 0.52", "14.9674, 55.9608, 4.70478, 0.52", "15.1349, 56.8667, 4.60544, 0.22", "15.2327, 57.4185, 4.53168, 0.22", "15.3183, 57.88, 4.46235, 0.37", "15.4052, 58.3222, 4.3905, 0.66", "15.5568, 58.9633, 4.28158, 0.96", "15.6491, 59.2714, 4.23514, 0.96", "15.9262, 60.034, 4.13988, 0.22", "16.1418, 60.5396, 4.09529, 0.52", "16.261, 60.7777, 4.08162, 0.52", "16.604, 61.3806, 4.07578, 0.22", "16.9428, 61.9156, 4.1115, 0.29", "17.164, 62.2423, 4.13524, 0.52", "17.3835, 62.5583, 4.15706, 0.74", "17.6057, 62.8845, 4.17659, 0.74", "18.0507, 63.5555, 4.20711, 0.44", "18.5512, 64.3565, 4.22181, 0.29", "18.8084, 64.8028, 4.21799, 0.52", "19.0592, 65.2809, 4.20894, 1.11", "19.2572, 65.6963, 4.19679, 0.96", "19.4687, 66.1888, 4.1763, 0.29", "19.7824, 67.0015, 4.12738, 0.22", "19.9259, 67.4069, 4.10152, 0.22", "20.1436, 68.0321, 4.0732, 0.29", "20.2561, 68.3476, 4.06147, 0.29", "20.4812, 68.9724, 4.04122, 0.15", "20.6508, 69.4567, 4.0292, 0.15", "20.7742, 69.8117, 4.0204, 0.22", "20.8414, 70.0039, 4.01371, 0.59", "20.9644, 70.3546, 4.00442, 0.88", "21.1315, 70.8354, 3.99584, 0.22", "21.2748, 71.2917, 3.99324, 0.22", "21.4294, 71.843, 4.0142, 0.22", "21.4996, 72.1003, 4.03118, 0.44", "21.5794, 72.4232, 4.02748, 0.96", "21.6435, 72.7088, 4.00219, 1.4", "21.7496, 73.2441, 3.91407, 0.96", "21.844, 73.7847, 3.7982, 0.81", "21.9342, 74.3665, 3.64123, 0.29", "22.1007, 75.4349, 3.3403, 0.37", "22.1826, 75.9151, 3.19674, 0.37", "22.3015, 76.5412, 3.00885, 0.37", "22.413, 77.0679, 2.8593, 0.37", "22.513, 77.5184, 2.75283, 0.37", "22.63, 78.0013, 2.68265, 0.74", "22.7206, 78.3187, 2.66982, 1.25", "22.8601, 78.7781, 2.66454, 1.55", "23.0852, 79.4794, 2.66663, 0.44", "23.3493, 80.2834, 2.71024, 0.15", "23.4912, 80.7135, 2.7497, 0.15", "23.657, 81.2369, 2.80097, 0.29", "23.8658, 81.8865, 2.88533, 0.15", "23.9857, 82.2531, 2.9429, 0.22", "24.2293, 82.959, 3.06441, 0.37", "24.3153, 83.1876, 3.1025, 0.88", "24.3982, 83.3991, 3.13266, 1.11", "24.6247, 83.9616, 3.19211, 0.22", "24.8833, 84.604, 3.23269, 0.15", "25.0894, 85.1363, 3.24058, 0.22", "25.3501, 85.8034, 3.21161, 0.29", "25.5363, 86.2882, 3.1901, 0.29", "25.6402, 86.5599, 3.17823, 0.59", "25.7437, 86.8262, 3.16664, 1.03", "25.8665, 87.136, 3.15364, 1.4", "26.0621, 87.6478, 3.13486, 1.4", "26.3075, 88.2963, 3.11426, 0.59", "26.6738, 89.2062, 3.11619, 0.22", "26.8596, 89.6389, 3.12964, 0.22", "27.0971, 90.1605, 3.15638, 0.22", "27.2322, 90.4552, 3.17828, 0.29", "27.3392, 90.7017, 3.20209, 0.44", "27.5372, 91.1619, 3.25352, 0.96", "27.6058, 91.3395, 3.28366, 1.18", "27.7018, 91.6233, 3.33884, 1.18", "27.7954, 91.9301, 3.39055, 1.11", "28.0267, 92.7833, 3.4602, 0.22", "28.1383, 93.242, 3.46375, 0.29", "28.2818, 93.8979, 3.41571, 0.52", "28.347, 94.2029, 3.36583, 0.66", "28.4425, 94.6339, 3.26099, 0.66", "28.6268, 95.408, 3.01204, 0.15", "28.7133, 95.7655, 2.879, 0.15", "28.7959, 96.1137, 2.74706, 0.15", "28.9804, 96.8333, 2.49408, 0.15", "29.0509, 97.0837, 2.43568, 0.52", "29.1357, 97.3571, 2.4052, 1.03", "29.3129, 97.9037, 2.36586, 1.25", "29.4059, 98.186, 2.33997, 1.33", "29.6685, 98.9561, 2.26576, 0.44", "29.938, 99.7709, 2.1846, 0.15", "30.1062, 100.311, 2.10768, 0.15", "30.2623, 100.846, 1.98609, 0.29", "30.3638, 101.21, 1.87575, 0.66", "30.4619, 101.583, 1.74726, 0.96", "30.5472, 101.961, 1.60941, 0.81", "30.656, 102.512, 1.41381, 0.29", "30.8272, 103.386, 1.15135, 0.15", "30.9052, 103.75, 1.07459, 0.15", "30.9559, 103.964, 1.02396, 0.59", "31.0141, 104.182, 0.963213, 0.88", "31.1042, 104.478, 0.873716, 1.11", "31.2786, 104.999, 0.71776, 0.29", "31.5324, 105.685, 0.540756, 0.15", "31.8345, 106.428, 0.352564, 0.15", "31.9593, 106.704, 0.285415, 0.59", "32.0976, 106.986, 0.223482, 0.81", "32.3586, 107.494, 0.128083, 0.22", "32.7063, 108.165, 0.0348287, 0.22", "32.9018, 108.532, 0.00243998, 0.22", "33.1483, 108.986, -0.0146558, 0.29", "33.5014, 109.618, -0.0395133, 0.22", "33.7807, 110.105, -0.0594809, 0.29", "34.2325, 110.884, -0.0919554, 0.29", "34.4984, 111.345, -0.111, 0.29", "34.8714, 111.997, -0.119293, 0.22", "35.0034, 112.229, -0.116372, 0.29", "35.1666, 112.512, -0.107142, 0.88", "35.2989, 112.743, -0.109005, 0.88", "35.5858, 113.265, -0.132073, 0.22", "35.9722, 114.003, -0.189276, 0.22", "36.3114, 114.686, -0.261128, 0.15", "36.5211, 115.122, -0.330799, 0.15", "36.8334, 115.786, -0.476538, 0.29", "36.9595, 116.06, -0.550768, 0.74", "37.1532, 116.487, -0.695927, 0.22", "37.4537, 117.132, -0.96211, 0.15", "37.6961, 117.619, -1.16517, 0.15", "37.9089, 118.03, -1.31476, 0.37", "38.0243, 118.24, -1.37466, 0.59", "38.1895, 118.523, -1.45159, 1.03", "38.2959, 118.691, -1.48846, 1.03", "38.602, 119.121, -1.54527, 0.22", "38.9534, 119.574, -1.60125, 0.15", "39.2581, 119.948, -1.65095, 0.15", "39.5078, 120.245, -1.69291, 0.96", "39.7814, 120.561, -1.72573, 0.96", "40.4654, 121.338, -1.78862, 0.15", "41.0969, 122.026, -1.86686, 0.15", "41.2974, 122.239, -1.89679, 0.15", "41.5236, 122.476, -1.93521, 0.29", "41.9127, 122.877, -2.0108, 0.96", "42.3406, 123.301, -2.10253, 0.07", "42.8929, 123.826, -2.19659, 0.07", "43.1747, 124.094, -2.22316, 0.52", "43.3577, 124.269, -2.24091, 0.59", "43.5017, 124.415, -2.27411, 0.59", "43.9448, 124.895, -2.46585, 0.15", "44.148, 125.138, -2.58054, 0.15", "44.4143, 125.467, -2.70641, 0.29", "44.6617, 125.759, -2.80607, 0.66", "45.3462, 126.492, -3.01505, 0.88", "45.7093, 126.85, -3.09655, 0.88", "46.1045, 127.204, -3.15865, 0.29", "46.8377, 127.81, -3.23101, 0.15", "47.2818, 128.179, -3.24567, 0.29", "47.8561, 128.673, -3.22697, 0.22", "48.2233, 128.991, -3.19031, 0.66", "48.5153, 129.255, -3.15946, 0.96", "48.8343, 129.581, -3.143, 0.96", "49.7121, 130.633, -3.17279, 0.15", "49.8761, 130.876, -3.17741, 0.59", "49.9769, 131.058, -3.17845, 1.03", "50.0571, 131.228, -3.17815, 1.03", "50.3521, 131.986, -3.17207, 0.15", "50.5106, 132.467, -3.16638, 0.15", "50.7563, 133.327, -3.12744, 0.15", "50.9367, 133.959, -3.07125, 0.29", "51.0607, 134.393, -3.01915, 0.15", "51.2588, 135.046, -2.92662, 0.22", "51.3477, 135.316, -2.88009, 0.22", "51.572, 135.941, -2.74031, 0.29", "51.7628, 136.419, -2.61379, 0.81", "51.8875, 136.709, -2.53237, 1.18", "52.2387, 137.446, -2.31817, 0.15", "52.4566, 137.867, -2.18953, 0.15", "52.7424, 138.406, -2.01921, 0.15", "52.9256, 138.733, -1.91089, 0.59", "53.1272, 139.079, -1.78853, 0.59", "53.6164, 139.909, -1.46708, 0.07", "53.9701, 140.491, -1.22895, 0.15", "54.1955, 140.858, -1.08385, 0.22", "54.4844, 141.333, -0.917987, 0.22", "54.6622, 141.65, -0.816771, 0.96", "54.827, 141.975, -0.718513, 1.11", "55.0116, 142.385, -0.648606, 0.88", "55.3367, 143.164, -0.605358, 0.22", "55.6033, 143.838, -0.624015, 0.22", "55.8118, 144.401, -0.674242, 0.22", "56.0151, 144.959, -0.740738, 0.22", "56.4034, 146.088, -0.899874, 0.88", "56.527, 146.471, -0.961785, 1.18", "56.5997, 146.705, -0.994278, 1.18", "56.8018, 147.336, -1.04524, 0.59", "57.0109, 147.962, -1.10904, 0.22", "57.228, 148.617, -1.17537, 0.29", "57.3328, 148.943, -1.21083, 0.22", "57.5888, 149.768, -1.35988, 0.29", "57.7216, 150.224, -1.46687, 0.52", "58.0098, 151.241, -1.78557, 0.88", "58.1118, 151.613, -1.92394, 0.88", "58.3606, 152.564, -2.2989, 0.22", "58.4456, 152.903, -2.41497, 0.22", "58.6083, 153.589, -2.60905, 0.15", "58.7134, 154.037, -2.67642, 0.74", "58.8248, 154.484, -2.67678, 0.74", "59.0248, 155.25, -2.62967, 0.15", "59.2478, 156.068, -2.55068, 0.15", "59.39, 156.601, -2.50173, 0.22", "59.5747, 157.412, -2.41623, 0.22", "59.7132, 158.177, -2.32827, 0.22", "59.8129, 158.815, -2.23599, 0.22", "59.8812, 159.321, -2.15681, 0.29", "59.9351, 159.821, -2.08308, 0.44", "59.9966, 160.624, -1.93035, 0.66", "60.0266, 161.293, -1.78107, 0.22", "60.0547, 162.087, -1.59219, 0.22", "60.0765, 162.546, -1.48108, 0.66", "60.0988, 162.859, -1.39928, 0.66", "60.1831, 163.701, -1.20256, 0.15", "60.2556, 164.288, -1.0907, 0.22", "60.3258, 164.817, -0.975371, 0.22", "60.368, 165.105, -0.897409, 0.52", "60.4571, 165.614, -0.700752, 0.96", "60.5172, 165.901, -0.56107, 0.96", "60.6616, 166.489, -0.220173, 0.22", "60.8882, 167.302, 0.33577, 0.22", "61.0485, 167.824, 0.726502, 0.22", "61.1721, 168.191, 1.02067, 0.59", "61.2093, 168.299, 1.10665, 0.59", "61.3887, 168.81, 1.48909, 0.15", "61.6082, 169.396, 1.91199, 0.15", "61.7615, 169.764, 2.16417, 0.66", "61.916, 170.085, 2.38436, 0.96", "62.1169, 170.458, 2.65638, 0.37", "62.4973, 171.141, 3.16185, 0.15", "62.8519, 171.765, 3.62563, 0.15", "63.1617, 172.341, 4.01597, 0.15", "63.3988, 172.8, 4.31436, 0.29", "63.5729, 173.163, 4.53721, 0.74", "63.7319, 173.492, 4.73909, 1.11", "64.0442, 174.178, 5.13006, 0.15", "64.2254, 174.608, 5.32921, 0.22", "64.3318, 174.835, 5.43687, 0.22", "64.6965, 175.475, 5.75477, 0.15", "65.0911, 176.026, 6.02944, 0.15", "65.3029, 176.267, 6.15186, 1.03", "65.4994, 176.459, 6.25895, 1.7", "66.4036, 177.273, 6.76677, 0.37", "66.9595, 177.758, 7.09084, 0.15", "67.3709, 178.117, 7.33561, 0.15", "67.6756, 178.399, 7.53529, 0.74", "68.42, 179.121, 8.13141, 0.15", "68.8871, 179.615, 8.5752, 0.15", "69.1184, 179.89, 8.83348, 0.66", "69.2115, 180.01, 8.95188, 0.66", "69.4953, 180.405, 9.35936, 0.15", "69.9664, 181.127, 10.0008, 0.15", "70.1442, 181.438, 10.2007, 0.66", "70.2355, 181.63, 10.2882, 1.11", "70.5565, 182.384, 10.5556, 0.15", "70.8102, 183.037, 10.74, 0.15", "71.3, 184.409, 11.0081, 0.37", "71.4448, 184.836, 11.0904, 0.74", "71.8158, 185.972, 11.3681, 0.07", "72.1273, 186.953, 11.658, 0.07", "72.2177, 187.246, 11.766, 0.37", "72.3649, 187.715, 11.9716, 0.07", "72.5654, 188.368, 12.3273, 0.07", "72.6667, 188.73, 12.5093, 0.66", "72.7357, 189.028, 12.633, 0.66", "72.856, 189.689, 12.8645, 0.15", "72.9517, 190.229, 13.0483, 0.22", "73.0273, 190.669, 13.1878, 0.37", "73.1419, 191.323, 13.3658, 0.22", "73.246, 191.865, 13.5131, 0.44", "73.3966, 192.548, 13.6809, 0.15", "73.6328, 193.465, 13.8682, 0.15", "73.6827, 193.627, 13.883, 0.59", "73.7888, 193.927, 13.8629, 0.88", "73.8467, 194.078, 13.8312, 0.88", "74.1814, 194.9, 13.5694, 0.07", "74.3245, 195.237, 13.4365, 0.29", "74.7868, 196.309, 12.9306, 0.07", "75.2044, 197.264, 12.4664, 0.07", "75.4131, 197.736, 12.2441, 0.22", "75.6463, 198.265, 11.9934, 0.15", "75.8163, 198.646, 11.8262, 0.37", "76.0563, 199.172, 11.6566, 0.74", "76.1995, 199.485, 11.5973, 1.25", "76.6268, 200.414, 11.4986, 0.15", "76.9282, 201.077, 11.4532, 0.15", "77.4247, 202.195, 11.4713, 0.15", "77.8123, 203.066, 11.564, 0.15", "77.9407, 203.354, 11.6171, 0.66", "78.0396, 203.573, 11.6678, 1.25", "78.3276, 204.189, 11.8403, 1.33", "78.8541, 205.268, 12.1476, 0.07", "79.194, 205.919, 12.2936, 0.07", "79.3138, 206.134, 12.3208, 0.22", "79.5356, 206.503, 12.3479, 0.66", "79.8951, 207.094, 12.3277, 0.07", "80.2426, 207.681, 12.2379, 0.07", "80.6711, 208.423, 12.0325, 0.07", "80.8514, 208.75, 11.9271, 0.07", "81.0782, 209.193, 11.7896, 0.88", "81.5124, 210.134, 11.5171, 0.15", "81.6861, 210.564, 11.4065, 0.15", "81.8168, 210.931, 11.3517, 0.15", "81.945, 211.341, 11.3228, 0.66", "82.2073, 212.257, 11.323, 0.07", "82.3362, 212.748, 11.3519, 0.07", "82.4359, 213.194, 11.4118, 0.22", "82.578, 214.191, 11.5658, 0.07", "82.584, 214.558, 11.6219, 0.07", "82.5463, 214.802, 11.6463, 0.29", "82.4024, 215.167, 11.6553, 0.74", "82.1043, 215.632, 11.6317, 0.22", "81.714, 216.103, 11.5799, 0.15", "81.3718, 216.461, 11.5254, 0.59", "80.8351, 216.991, 11.46, 0.96", "80.4065, 217.405, 11.4403, 0.22", "79.727, 218.058, 11.451, 0.15", "79.4542, 218.329, 11.4701, 0.52", "78.9836, 218.818, 11.536, 0.07", "78.7715, 219.059, 11.583, 0.15", "78.2243, 219.743, 11.7478, 0.07", "77.9579, 220.104, 11.8306, 0.22", "77.7454, 220.404, 11.8963, 0.15", "77.4503, 220.821, 11.9846, 0.81", "76.8762, 221.626, 12.145, 0.07", "76.6288, 221.974, 12.2073, 0.59", "76.2161, 222.563, 12.2964, 0.07", "75.9612, 222.926, 12.3527, 0.74", "75.4302, 223.668, 12.4693, 0.07", "75.1051, 224.068, 12.5379, 0.07", "74.8351, 224.348, 12.609, 0.29", "74.3624, 224.779, 12.7479, 0.07", "74.0224, 225.063, 12.8553, 0.52", "73.8639, 225.181, 12.8965, 0.52", "72.8409, 225.889, 13.1088, 0.15", "72.1301, 226.37, 13.2348, 0.15", "71.8384, 226.57, 13.278, 0.37", "71.4748, 226.829, 13.3287, 0.59", "70.6293, 227.497, 13.4368, 0.07", "70.1475, 227.932, 13.4919, 0.07", "69.9965, 228.102, 13.5051, 0.07", "69.7095, 228.477, 13.5472, 0.15", "69.4454, 228.873, 13.6276, 0.15", "69.2116, 229.322, 13.7504, 1.03", "69.1349, 229.528, 13.8188, 1.03", "68.918, 230.234, 14.0472, 0.07", "68.707, 230.994, 14.2801, 0.07", "68.6353, 231.292, 14.3792, 0.29", "68.4558, 232.173, 14.7262, 0.07", "68.3586, 232.728, 14.98, 0.07", "68.3167, 233.041, 15.1512, 0.37", "68.2889, 233.318, 15.3213, 0.37", "68.2168, 234.119, 15.8789, 0.07", "68.1613, 234.804, 16.4256, 0.07", "68.1442, 235.053, 16.6472, 0.59", "68.0539, 235.959, 17.4608, 0.07", "68.0254, 236.17, 17.6315, 0.15", "67.9141, 236.918, 18.1371, 0.07", "67.8828, 237.093, 18.2277, 0.07", "67.8204, 237.391, 18.3446, 0.29", "67.6204, 238.178, 18.5814, 0.15", "67.2907, 239.283, 18.801, 0.15", "67.1073, 239.893, 18.8952, 0.15", "66.9807, 240.303, 18.9382, 0.15", "66.8814, 240.612, 18.9691, 0.52", "66.6077, 241.462, 19.0476, 0.07", "66.3109, 242.429, 19.124, 0.07", "66.2094, 242.733, 19.1466, 0.29", "66.0293, 243.257, 19.1858, 0.07", "65.8753, 243.715, 19.198, 0.22", "65.7166, 244.19, 19.1896, 0.07", "65.6286, 244.458, 19.1715, 0.07", "65.5192, 244.764, 19.1182, 0.22", "65.261, 245.505, 18.9075, 0.07", "65.0591, 246.169, 18.7098, 0.07", "64.9866, 246.475, 18.6204, 0.59", "64.9483, 246.694, 18.5606, 0.59", "64.839, 247.888, 18.2914, 0.15", "64.8312, 248.758, 18.1275, 0.15", "64.897, 249.533, 18.0173, 0.15", "64.9949, 250.175, 18.0203, 0.29", "65.1145, 250.731, 18.1409, 0.29", "65.3522, 251.568, 18.6477, 0.07", "65.4108, 251.717, 18.8249, 0.07", "65.5179, 251.927, 19.2705, 0.22", "65.7875, 252.423, 20.5673, 0.07", "66.0185, 252.815, 21.8778, 0.07", "66.2226, 253.101, 23.1626, 0.07", "66.3508, 253.235, 24.0357, 0.29", "66.596, 253.45, 25.8422, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.3355, 31.1869, 3.38954, 0.81", "12.5133, 31.9144, 3.59189, 0.81", "13.5102, 32.5719, 3.68548, 0.66", "14.3475, 33.1294, 3.64658, 0.52", "15.3095, 33.7509, 3.52229, 0.59", "16.8171, 34.7119, 3.16752, 0.81", "17.333, 35.0436, 3.01757, 0.88", "18.5139, 35.8191, 2.57443, 0.44", "19.6986, 36.6274, 2.05454, 0.37", "20.2382, 37.0051, 1.7638, 0.37", "21.3956, 37.8656, 1.01611, 0.59", "22.2106, 38.4914, 0.403629, 0.66", "22.7603, 38.9272, -0.0306739, 0.66", "23.512, 39.5437, -0.615835, 0.52", "24.5602, 40.4371, -1.43367, 0.22", "25.085, 40.9009, -1.84367, 0.29", "25.7833, 41.5031, -2.34752, 0.52", "26.5875, 42.1696, -2.89382, 0.81", "27.039, 42.5426, -3.15813, 1.11", "27.6464, 43.0655, -3.44384, 1.11", "28.6256, 43.981, -3.76902, 0.74", "29.5467, 44.9064, -3.94258, 0.66", "29.9873, 45.3874, -3.96212, 0.52", "30.8728, 46.4619, -3.86636, 0.29", "31.5439, 47.4008, -3.72436, 0.37", "32.2999, 48.6043, -3.48844, 0.52", "33.0375, 49.8748, -3.12742, 0.74", "33.62, 50.9504, -2.7971, 0.96", "34.3161, 52.2161, -2.36199, 0.29", "34.7602, 52.9367, -2.06547, 0.29", "35.2434, 53.5995, -1.72535, 0.29", "36.1839, 54.6708, -1.09069, 0.66", "37.0223, 55.4926, -0.607996, 0.96", "37.8357, 56.1999, -0.156067, 0.96", "38.9823, 57.1186, 0.472495, 0.66", "40.2548, 58.1146, 1.17706, 0.29", "41.5361, 59.1012, 1.867, 0.22", "42.2352, 59.629, 2.21072, 0.22", "43.0131, 60.2004, 2.58338, 0.44", "43.8385, 60.791, 2.93662, 0.81", "44.6033, 61.3041, 3.21355, 0.81", "45.601, 61.883, 3.48646, 0.59", "46.3311, 62.2367, 3.65398, 0.44", "47.0538, 62.5362, 3.78489, 0.22", "48.2769, 62.9794, 3.76867, 0.29", "48.942, 63.1969, 3.63818, 0.29", "49.9339, 63.5068, 3.29505, 0.37", "50.3332, 63.6309, 3.11132, 0.37", "51.0751, 63.8382, 2.77573, 0.37", "53.6029, 64.4827, 1.66468, 0.81", "54.4951, 64.7195, 1.28486, 0.96", "55.4099, 64.9866, 1.00251, 1.11", "56.58, 65.3609, 0.750667, 0.52", "58.0854, 65.8657, 0.571743, 0.44", "58.6413, 66.0725, 0.567832, 0.44", "59.4593, 66.4262, 0.662532, 0.44", "60.6334, 67.007, 0.790986, 0.44", "61.5152, 67.514, 0.852692, 0.96", "62.047, 67.8604, 0.857483, 1.18", "62.9314, 68.4669, 0.791894, 0.66", "63.5584, 68.8915, 0.724239, 0.96", "64.082, 69.2118, 0.681294, 0.96", "65.4709, 69.9889, 0.663047, 0.37", "66.1521, 70.3383, 0.74513, 0.29", "66.8285, 70.6492, 0.896821, 0.29", "67.9048, 71.0753, 1.22927, 0.29", "69.2272, 71.5626, 1.74971, 0.29", "70.3619, 72.0147, 2.33815, 0.22", "71.2132, 72.3809, 2.8837, 0.22", "71.7932, 72.6527, 3.28649, 0.66", "72.4729, 73.0215, 3.75525, 0.96", "73.1284, 73.4249, 4.19412, 0.96", "74.6358, 74.485, 5.14312, 0.22", "75.2808, 74.965, 5.53517, 0.37", "75.7782, 75.3565, 5.84069, 0.37", "76.9119, 76.3059, 6.54515, 0.15", "77.4999, 76.7966, 6.90226, 0.37", "78.144, 77.3294, 7.28729, 0.74", "79.1338, 78.1433, 7.85765, 1.33", "79.7399, 78.6878, 8.22764, 1.03", "80.321, 79.3222, 8.62773, 0.22", "80.8431, 79.9752, 8.98953, 0.22", "81.3338, 80.6459, 9.32667, 0.22", "81.681, 81.1465, 9.55219, 0.44", "82.2062, 81.9143, 9.89595, 0.81", "83.1018, 83.1485, 10.5, 0.15", "83.8844, 84.2127, 11.1677, 0.15", "84.6036, 85.2, 11.9424, 0.22", "84.8232, 85.4917, 12.2104, 0.74", "85.2687, 86.1031, 12.812, 0.96", "86.0344, 87.1477, 13.9467, 0.22", "86.8085, 88.2499, 15.197, 0.44", "87.4616, 89.3046, 16.3517, 0.96", "87.9214, 90.092, 17.2241, 1.33", "88.5157, 91.1469, 18.4628, 0.22", "89.0395, 92.0772, 19.5789, 0.22", "89.2409, 92.4309, 19.9957, 0.74", "89.5285, 92.8872, 20.4677, 0.74", "90.8161, 94.7804, 22.1222, 0.15", "91.7375, 96.0545, 23.1071, 0.15", "92.1031, 96.5281, 23.3958, 0.66", "92.6263, 97.2029, 23.7187, 1.7", "93.7052, 98.5583, 24.2969, 0.44", "94.8607, 99.9579, 24.784, 0.22", "95.6156, 100.846, 24.9763, 0.22", "97.2155, 102.674, 25.3286, 0.22", "97.8062, 103.337, 25.4823, 0.37", "98.502, 104.081, 25.6846, 0.81", "99.0541, 104.654, 25.8509, 1.25", "100.326, 105.901, 26.2552, 0.15", "101.739, 107.236, 26.7054, 0.15", "102.44, 107.869, 26.9364, 0.66", "103.028, 108.384, 27.086, 0.74", "104.654, 109.753, 27.4587, 0.15", "105.892, 110.766, 27.7436, 0.15", "106.282, 111.074, 27.8286, 0.52", "106.773, 111.456, 27.9084, 0.81", "108.622, 112.902, 28.0725, 0.15", "109.607, 113.676, 28.1028, 0.15", "109.961, 113.952, 28.0883, 0.52", "110.366, 114.273, 28.0391, 0.52", "111.699, 115.335, 27.8367, 0.15", "112.831, 116.243, 27.6449, 0.15", "113.409, 116.72, 27.5658, 0.15", "113.793, 117.057, 27.5494, 0.44", "114.349, 117.573, 27.5896, 0.88", "114.98, 118.189, 27.6948, 0.88", "115.898, 119.112, 27.9366, 0.44", "116.964, 120.215, 28.2651, 0.15", "118.323, 121.597, 28.6664, 0.15", "119.176, 122.426, 28.8873, 0.22", "120.207, 123.409, 29.1156, 0.07", "120.847, 123.991, 29.2173, 0.07", "121.467, 124.499, 29.2872, 0.44", "122.191, 125.031, 29.3171, 0.96", "123.183, 125.703, 29.3046, 0.66", "123.896, 126.147, 29.3085, 0.15", "124.812, 126.695, 29.3265, 0.22", "126.587, 127.742, 29.402, 0.07", "127.143, 128.068, 29.4411, 0.29", "127.481, 128.269, 29.4671, 0.29", "128.971, 129.127, 29.5777, 0.07", "129.351, 129.342, 29.6194, 0.22", "130.529, 130.046, 29.7275, 0.07", "131.03, 130.361, 29.7654, 0.07", "131.656, 130.772, 29.8234, 0.15", "132.443, 131.335, 29.8965, 0.07", "133.823, 132.405, 30.0208, 0.15", "134.841, 133.216, 30.094, 0.15", "135.74, 133.947, 30.1307, 0.15", "137.015, 134.978, 30.2176, 0.29", "138.494, 136.149, 30.3341, 0.07", "139.138, 136.657, 30.3842, 0.44", "139.614, 137.03, 30.4119, 0.44", "140.921, 138.018, 30.5875, 0.15", "142.139, 138.919, 30.7816, 0.15", "142.683, 139.297, 30.8851, 0.74", "143.162, 139.601, 30.9777, 0.74", "144.992, 140.661, 31.3124, 0.07", "146.504, 141.473, 31.5638, 0.07", "147.106, 141.766, 31.6481, 0.29", "147.729, 142.036, 31.7048, 0.52", "149.609, 142.664, 31.813, 0.15", "150.989, 142.98, 31.8315, 0.15", "151.431, 143.044, 31.8247, 0.37", "151.958, 143.102, 31.7968, 0.88", "152.67, 143.174, 31.7561, 1.25", "155.063, 143.439, 31.7591, 0.15", "156.742, 143.677, 31.874, 0.15", "157.608, 143.845, 31.9713, 0.59", "158.129, 143.975, 32.0487, 0.59", "160.343, 144.691, 32.4347, 0.15", "162.396, 145.525, 32.8388, 0.15", "164.057, 146.427, 33.1785, 0.15", "164.527, 146.729, 33.2637, 0.59", "165.347, 147.31, 33.3271, 0.96", "166.555, 148.248, 33.3173, 0.15", "167.327, 148.914, 33.2229, 0.29", "169.159, 150.673, 32.75, 0.07", "169.814, 151.356, 32.5476, 0.07", "171.165, 152.809, 32.1245, 0.07", "171.747, 153.456, 31.9401, 0.59", "172.243, 154.026, 31.7894, 1.03", "173.603, 155.645, 31.409, 0.07", "174.596, 156.862, 31.2397, 0.07", "174.942, 157.298, 31.2237, 0.37", "175.343, 157.812, 31.2552, 0.37", "176.438, 159.184, 31.4062, 0.07", "176.852, 159.678, 31.4859, 0.22", "177.921, 160.78, 31.7935, 0.07", "178.642, 161.449, 32.0935, 0.96", "179.643, 162.305, 32.567, 0.07", "180.668, 163.12, 33.0839, 0.07", "181.61, 163.789, 33.5708, 0.44", "183.695, 165.128, 34.6482, 0.15", "185.048, 165.917, 35.4277, 0.15", "185.773, 166.308, 35.8983, 0.44", "186.292, 166.566, 36.2788, 0.88", "187.534, 167.13, 37.2347, 0.22", "188.519, 167.551, 38.0205, 0.07", "190.314, 168.368, 39.41, 0.07", "191.076, 168.74, 39.9493, 0.52", "192.113, 169.265, 40.6607, 0.52", "193.145, 169.863, 41.2871, 0.07", "193.724, 170.255, 41.5856, 0.29", "194.996, 171.264, 42.0688, 0.07", "195.976, 172.164, 42.3682, 0.07", "196.369, 172.564, 42.4941, 0.22", "197.764, 174.094, 42.9063, 0.07", "198.272, 174.632, 43.0536, 0.07", "199.08, 175.438, 43.286, 0.15", "200.484, 176.689, 43.6754, 0.07", "201.206, 177.254, 43.8533, 0.81", "202.93, 178.377, 44.1758, 0.15", "205.58, 179.8, 44.6463, 0.15", "206.151, 180.08, 44.7365, 0.29", "207.646, 180.763, 44.9495, 0.07", "209.145, 181.419, 45.1143, 0.22", "211.81, 182.552, 45.3945, 0.07", "214.444, 183.63, 45.6816, 0.07", "215.15, 183.929, 45.746, 0.22", "215.582, 184.13, 45.7806, 0.22", "216.956, 184.864, 45.8242, 0.07", "217.436, 185.154, 45.817, 0.29", "217.9, 185.479, 45.7691, 0.29", "219.447, 186.624, 45.4117, 0.07", "220.655, 187.51, 45.118, 0.07", "221.571, 188.184, 44.8894, 0.07", "221.951, 188.465, 44.7964, 0.07", "222.525, 188.882, 44.7142, 0.29", "222.79, 189.063, 44.6998, 0.29", "224.199, 189.973, 44.8002, 0.07", "224.906, 190.414, 44.9061, 0.52", "226.611, 191.452, 45.2498, 0.07", "228.169, 192.369, 45.5602, 0.52", "229.904, 193.357, 45.8944, 0.07", "231.195, 194.056, 46.1079, 0.07", "231.869, 194.408, 46.228, 0.37", "232.752, 194.865, 46.3124, 0.37", "234.415, 195.737, 46.3187, 0.07", "235.268, 196.199, 46.2203, 0.59", "237.084, 197.242, 45.9852, 0.07", "238.147, 197.877, 45.9371, 0.07", "240.312, 199.276, 46.156, 0.22", "240.962, 199.74, 46.3438, 0.07", "241.611, 200.272, 46.6339, 0.15", "242.879, 201.379, 47.3036, 0.07", "244.716, 203.058, 48.3605, 0.07", "245.893, 204.129, 48.9707, 0.15", "246.777, 204.918, 49.4222, 0.15", "248.122, 206.057, 50.02, 0.07", "248.742, 206.557, 50.2884, 0.29", "249.549, 207.196, 50.5943, 0.29", "251.218, 208.507, 51.2119, 0.07", "251.669, 208.845, 51.3972, 0.22", "254.195, 210.652, 52.4289, 0.07", "255.941, 211.844, 53.1708, 0.07", "256.846, 212.454, 53.5489, 0.15", "258.417, 213.484, 54.1975, 0.07", "259.532, 214.221, 54.6353, 0.07", "261.307, 215.481, 55.1928, 0.07", "261.689, 215.781, 55.2869, 0.15", "263.75, 217.639, 55.7238, 0.07", "264.315, 218.203, 55.8874, 0.07", "265.147, 219.09, 56.1348, 0.29", "266.966, 221.18, 56.7526, 0.07", "268.273, 222.814, 57.2632, 0.07", "270.118, 225.244, 58.0428, 0.07", "271.689, 227.54, 58.7918, 0.07" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "5.68628, -48.7312, -13.3401, 1.62", "5.53203, -50.5973, -12.8742, 1.62", "5.44998, -52.7088, -12.4056, 1.11", "5.35881, -55.4373, -11.8698, 0.88", "5.27621, -57.3934, -11.4799, 0.88", "5.22598, -58.557, -11.304, 0.96", "5.13147, -60.872, -11.0244, 1.33", "5.06275, -63.259, -10.8684, 0.96", "5.01103, -65.0102, -10.8434, 0.96", "4.90134, -67.4738, -10.9785, 0.81", "4.75213, -70.1793, -11.2309, 0.81", "4.67558, -71.3571, -11.3935, 1.18", "4.56291, -72.6893, -11.6619, 1.47", "4.45939, -73.7729, -11.9197, 1.47", "4.37923, -74.8769, -12.2066, 1.25", "4.31875, -75.758, -12.439, 1.33", "4.22231, -77.1389, -12.7158, 1.11", "4.11788, -78.6572, -12.9747, 1.03", "4.00128, -80.3718, -13.2069, 1.25", "3.91324, -81.6757, -13.3436, 1.25", "3.79568, -83.0937, -13.4604, 1.25", "3.63368, -84.5682, -13.5023, 1.25", "3.34508, -86.7299, -13.4584, 0.81", "3.18249, -87.9267, -13.3811, 0.88", "2.86343, -90.2624, -13.2031, 0.81", "2.66123, -91.8068, -13.099, 0.66", "2.45452, -93.8867, -12.9917, 0.59", "2.3689, -95.0705, -12.9528, 0.59", "2.31769, -96.5568, -12.9386, 0.66", "2.31003, -98.3051, -12.9181, 0.96", "2.34499, -100.193, -12.8595, 1.18", "2.4287, -102.203, -12.7862, 1.33", "2.51605, -104.0, -12.6967, 1.03", "2.59128, -105.954, -12.5269, 0.81", "2.66707, -108.528, -12.1804, 1.11", "2.7097, -110.782, -11.7838, 0.96", "2.72104, -111.951, -11.5569, 1.03", "2.72199, -113.802, -11.201, 1.03", "2.71855, -115.16, -10.9715, 0.88", "2.7193, -117.646, -10.6371, 1.11", "2.70952, -119.425, -10.4755, 1.55", "2.69108, -121.104, -10.372, 1.77", "2.67879, -123.266, -10.307, 2.14", "2.70586, -125.923, -10.3212, 1.25", "2.78027, -128.707, -10.4246, 0.59", "2.84505, -130.35, -10.5557, 0.52", "2.91465, -131.622, -10.6877, 0.52", "3.01238, -133.524, -10.9264, 0.66", "3.08751, -134.939, -11.1312, 0.66", "3.16226, -136.441, -11.3707, 0.59", "3.20477, -137.662, -11.527, 1.03", "3.22869, -138.835, -11.5831, 1.25", "3.21016, -140.702, -11.486, 0.88", "3.15267, -142.159, -11.2275, 0.81", "3.06155, -143.671, -10.7983, 0.88", "2.90444, -145.742, -10.0275, 0.44", "2.78148, -147.22, -9.36413, 0.44", "2.66006, -148.554, -8.68895, 0.52", "2.54694, -149.87, -7.97105, 0.52", "2.44021, -151.01, -7.32008, 0.59", "2.36191, -151.813, -6.85978, 0.81", "2.24871, -153.087, -6.19174, 0.74", "2.15562, -154.439, -5.54254, 1.03", "2.05379, -156.473, -4.6886, 0.88", "2.0004, -158.155, -4.0732, 0.59", "1.97971, -159.731, -3.58067, 0.59", "1.98771, -161.309, -3.27449, 1.11", "2.03395, -163.314, -3.17699, 1.18", "2.08571, -165.071, -3.3282, 1.25", "2.10567, -166.039, -3.56837, 1.33", "2.13379, -168.059, -4.3612, 0.74", "2.15035, -171.081, -5.85775, 0.52", "2.13999, -172.528, -6.70923, 0.52", "2.12866, -173.546, -7.38632, 0.44", "2.09702, -175.247, -8.57383, 0.37", "2.06614, -176.257, -9.32452, 0.37", "2.03519, -177.053, -9.90831, 0.37", "1.99237, -178.296, -10.702, 0.52", "1.93761, -179.741, -11.5373, 0.81", "1.87861, -181.571, -12.2759, 0.74", "1.83048, -183.701, -12.7331, 0.96", "1.79891, -185.272, -12.8387, 1.62", "1.77706, -186.83, -12.7504, 1.4", "1.75987, -189.237, -12.3183, 0.81", "1.74738, -194.055, -11.0238, 0.44", "1.74718, -195.12, -10.6761, 0.44", "1.73961, -196.064, -10.3871, 0.59", "1.7067, -197.128, -10.148, 1.18", "1.61285, -198.886, -9.92527, 1.18", "1.49473, -200.553, -9.92288, 1.03", "1.33837, -202.154, -10.1267, 0.88", "1.0466, -204.369, -10.4691, 0.59", "0.79606, -206.018, -10.7634, 0.44", "0.61144, -207.169, -11.0071, 0.52", "0.412579, -208.423, -11.3287, 0.52", "0.246325, -209.572, -11.6509, 0.74", "0.0860081, -210.81, -11.9939, 0.59", "-0.0542659, -212.05, -12.303, 0.59", "-0.194182, -213.443, -12.5881, 1.11", "-0.324795, -214.808, -12.801, 1.11", "-0.478664, -216.675, -12.9201, 1.55", "-0.642626, -218.683, -12.8988, 0.88", "-0.769632, -220.247, -12.7776, 0.96", "-0.941575, -222.209, -12.5383, 0.59", "-1.08075, -223.593, -12.3213, 0.59", "-1.34229, -225.958, -11.976, 0.59", "-1.47149, -227.045, -11.8464, 0.81", "-1.68328, -228.696, -11.7078, 0.59", "-1.98586, -230.748, -11.6227, 0.44", "-2.3155, -232.652, -11.648, 0.52", "-2.68804, -234.42, -11.6996, 0.52", "-3.04829, -235.79, -11.7705, 0.74", "-3.40773, -237.054, -11.812, 1.03", "-3.64461, -237.81, -11.8664, 1.25", "-4.05247, -239.018, -12.0177, 1.03", "-4.71877, -240.943, -12.3234, 0.59", "-5.37647, -242.743, -12.632, 0.52", "-6.08999, -244.546, -13.0041, 0.37", "-7.0267, -246.829, -13.5159, 0.37", "-7.46048, -247.85, -13.7787, 0.37", "-7.98132, -249.073, -14.1208, 0.88", "-8.56783, -250.511, -14.5738, 0.96", "-9.11802, -251.968, -15.0076, 1.03", "-9.56096, -253.351, -15.353, 0.66", "-10.022, -255.191, -15.7218, 0.59", "-10.3045, -256.733, -15.97, 0.52", "-10.5023, -258.532, -16.2172, 0.44", "-10.5435, -260.196, -16.3483, 0.44", "-10.4546, -262.23, -16.3825, 0.29", "-10.3793, -263.069, -16.3132, 0.29", "-10.1641, -264.863, -15.9841, 0.44", "-10.0049, -266.197, -15.6176, 0.52", "-9.78528, -268.257, -14.9027, 0.22", "-9.72551, -268.954, -14.6134, 0.59", "-9.6347, -270.373, -13.9278, 1.11", "-9.57689, -271.347, -13.42, 1.25", "-9.49006, -273.092, -12.4991, 0.59", "-9.44135, -274.385, -11.7911, 0.44", "-9.39054, -276.416, -10.7127, 0.29", "-9.38877, -277.716, -10.053, 0.29", "-9.41101, -279.017, -9.41546, 0.37", "-9.42672, -280.271, -8.7795, 0.52", "-9.44573, -281.383, -8.23075, 1.03", "-9.46497, -282.462, -7.73535, 1.84", "-9.46066, -283.561, -7.30366, 1.84", "-9.42533, -285.385, -6.68639, 1.55", "-9.32553, -287.952, -5.89169, 0.52", "-9.23029, -289.431, -5.468, 0.52", "-9.12016, -290.861, -5.13728, 0.52", "-9.01974, -292.373, -4.87402, 0.74", "-8.95021, -294.042, -4.71568, 0.29", "-8.96885, -295.088, -4.77367, 0.37", "-9.04445, -295.953, -4.94843, 0.88", "-9.28078, -297.72, -5.46085, 0.88", "-9.55062, -299.164, -5.9697, 0.66", "-10.0051, -301.013, -6.68983, 0.52", "-10.5918, -302.962, -7.45763, 0.37", "-10.9544, -304.05, -7.85607, 0.37", "-11.1541, -304.585, -8.02006, 0.74", "-11.5299, -305.521, -8.23164, 1.03", "-12.0939, -306.848, -8.45911, 0.81", "-12.7521, -308.318, -8.60593, 0.29", "-13.4874, -309.911, -8.64713, 0.29", "-14.1764, -311.35, -8.65989, 0.29", "-14.7083, -312.459, -8.67297, 0.29", "-15.3384, -313.814, -8.69311, 0.59", "-15.9269, -315.207, -8.64337, 0.29", "-16.1746, -315.862, -8.58973, 0.44", "-16.5711, -317.027, -8.44393, 0.96", "-16.7601, -317.695, -8.34434, 0.96", "-17.232, -319.651, -7.96153, 0.29", "-17.6233, -321.597, -7.52447, 0.74", "-17.7505, -322.361, -7.34885, 1.18", "-17.8928, -323.346, -7.19221, 1.25", "-18.1352, -325.308, -7.03161, 0.37", "-18.3553, -327.093, -7.05415, 0.44", "-18.4773, -328.165, -7.17235, 0.44", "-18.6494, -329.705, -7.47264, 0.44", "-18.8918, -332.062, -7.9871, 0.44", "-18.9866, -333.086, -8.18412, 0.88", "-19.0975, -334.479, -8.3572, 1.03", "-19.1396, -335.098, -8.37671, 1.03", "-19.2786, -337.545, -8.13639, 0.37", "-19.3495, -339.206, -7.7442, 0.44", "-19.3893, -341.358, -6.99352, 0.44", "-19.4035, -343.19, -6.24766, 0.44", "-19.3937, -344.349, -5.71989, 0.44", "-19.3811, -345.189, -5.30403, 0.88", "-19.3533, -346.181, -4.76107, 1.62", "-19.3169, -347.762, -3.90361, 1.62", "-19.2933, -349.942, -2.86926, 0.66", "-19.2984, -351.653, -2.12568, 0.29", "-19.3052, -353.118, -1.44701, 0.29", "-19.3026, -354.29, -0.850268, 0.29", "-19.2798, -355.209, -0.336848, 0.88", "-19.2104, -356.654, 0.525766, 0.96", "-19.0686, -358.245, 1.43152, 0.22", "-18.8757, -359.796, 2.26351, 0.22", "-18.7821, -360.456, 2.60575, 0.44", "-18.5968, -361.709, 3.27353, 0.88", "-18.47, -362.513, 3.73017, 1.77", "-18.2465, -363.799, 4.45713, 1.99", "-17.8537, -365.922, 5.58527, 0.74", "-17.4996, -367.846, 6.56822, 0.37", "-17.089, -370.041, 7.71167, 0.44", "-16.8464, -371.376, 8.40313, 0.37", "-16.6425, -372.47, 8.97886, 0.37", "-16.3011, -374.19, 9.85084, 0.37", "-16.0847, -375.209, 10.301, 0.22", "-15.9, -375.966, 10.5682, 0.22", "-15.6343, -376.904, 10.7559, 0.29", "-15.3299, -377.863, 10.7975, 0.81", "-14.8739, -379.167, 10.6549, 1.77", "-14.6585, -379.699, 10.5008, 1.62", "-14.0687, -381.118, 9.92956, 0.44", "-13.2552, -382.903, 8.97854, 0.29", "-12.763, -383.858, 8.36764, 0.29", "-12.3302, -384.618, 7.82909, 0.29", "-11.9233, -385.339, 7.28727, 0.44", "-11.2529, -386.64, 6.36958, 0.66", "-10.7508, -387.751, 5.67503, 0.66", "-10.4135, -388.581, 5.24894, 1.84", "-9.94584, -389.787, 4.70717, 1.84", "-8.97124, -392.401, 3.68515, 1.11", "-8.44099, -393.928, 3.18048, 0.22", "-8.07125, -395.067, 2.82495, 0.29", "-7.78397, -396.05, 2.54758, 0.66", "-7.43971, -397.331, 2.19486, 1.11", "-7.12947, -398.55, 1.8806, 0.29", "-6.81176, -399.759, 1.65225, 0.22", "-6.2139, -401.967, 1.28478, 0.22", "-5.94799, -402.893, 1.19971, 0.29", "-5.63527, -403.946, 1.2003, 0.37", "-5.12446, -405.575, 1.33227, 0.29", "-4.68782, -406.901, 1.57523, 0.52", "-4.25708, -408.195, 1.92993, 1.62", "-3.56064, -410.283, 2.67418, 0.37", "-3.06274, -411.784, 3.23707, 0.29", "-2.68798, -412.937, 3.67143, 0.29", "-2.21967, -414.523, 4.11658, 0.29", "-2.04077, -415.224, 4.215, 0.29", "-1.87233, -416.012, 4.23681, 0.74", "-1.63303, -417.298, 4.03767, 1.62", "-1.34946, -419.008, 3.49311, 2.73", "-0.908165, -421.933, 2.24449, 0.44", "-0.708413, -423.41, 1.48608, 0.44", "-0.570036, -424.473, 0.889707, 0.74", "-0.318873, -426.59, -0.420528, 0.44", "-0.150757, -428.067, -1.4633, 0.44", "-0.0577179, -428.917, -2.15529, 0.81", "0.0137911, -429.605, -2.76054, 1.62" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "5.68628, -48.7312, -13.3401, 1.55", "6.32771, -49.1994, -14.5004, 1.55", "7.00236, -49.7672, -15.6921, 0.66", "7.54045, -50.3036, -16.6074, 0.52", "7.76916, -50.5644, -16.9658, 0.52", "7.98609, -50.8251, -17.2768, 0.52", "8.28259, -51.1604, -17.6582, 0.74", "8.55775, -51.4361, -17.9032, 0.81", "8.95918, -51.7492, -18.1991, 0.66", "9.4134, -52.0103, -18.509, 0.74", "10.2835, -52.3114, -19.1194, 0.66", "10.7481, -52.351, -19.4778, 0.59", "11.3515, -52.2533, -19.9483, 0.59", "12.0889, -51.9947, -20.5932, 0.66", "12.5604, -51.7377, -21.0729, 0.74", "12.8636, -51.5298, -21.4441, 0.81", "13.3616, -51.1415, -22.1939, 0.81", "13.7813, -50.8047, -22.9942, 0.74", "14.2618, -50.4692, -24.0995, 0.44", "14.6813, -50.2701, -25.1869, 0.37", "15.0835, -50.2311, -26.305, 0.59", "15.4648, -50.3554, -27.3791, 0.96", "15.8193, -50.6096, -28.3392, 0.96", "16.2334, -51.0682, -29.4787, 0.88", "16.6558, -51.6321, -30.5388, 0.81", "17.2254, -52.4651, -31.8405, 0.81", "17.6849, -53.1189, -32.7926, 0.52", "17.9864, -53.4962, -33.3494, 0.88", "18.5051, -53.9842, -34.1889, 0.37", "18.7838, -54.1331, -34.5937, 0.37", "19.0108, -54.1544, -34.9049, 0.37", "19.6649, -54.0021, -35.743, 0.59", "20.2776, -53.8221, -36.5402, 0.81", "20.889, -53.7051, -37.4536, 0.52", "21.1875, -53.7336, -38.0236, 0.52", "21.456, -53.9376, -38.8414, 0.52", "21.5931, -54.144, -39.397, 0.52", "21.8475, -54.6671, -40.5449, 0.59", "22.1057, -55.3352, -41.847, 0.66", "22.3517, -56.0618, -43.1033, 0.66", "22.64, -56.9223, -44.4833, 0.66", "22.9512, -57.8348, -45.8042, 0.52", "23.1016, -58.2513, -46.3562, 0.52", "23.3396, -58.7969, -46.9763, 0.52", "23.7162, -59.5586, -47.6527, 0.66", "24.1825, -60.4495, -48.2369, 0.96", "24.555, -61.1381, -48.5988, 1.03", "24.8357, -61.6882, -48.8645, 1.33", "25.2646, -62.5201, -49.2705, 1.47", "25.6216, -63.2028, -49.5968, 1.25", "26.1952, -64.2677, -50.1085, 0.74", "26.8799, -65.4511, -50.6571, 0.74", "27.5117, -66.462, -51.1121, 0.44", "27.7972, -66.901, -51.2971, 0.44", "28.4913, -67.9412, -51.6609, 0.44", "28.8175, -68.4046, -51.784, 0.44", "29.505, -69.2555, -51.9368, 0.29", "30.3822, -70.1395, -52.0896, 0.29", "30.9209, -70.5311, -52.1849, 0.37", "31.8994, -70.9753, -52.4027, 0.66", "32.935, -71.1698, -52.6759, 0.52", "34.08, -71.1671, -53.0169, 0.44", "35.5187, -70.897, -53.4972, 0.15", "36.5903, -70.4864, -53.8917, 0.22", "37.5641, -69.9133, -54.3145, 0.15", "38.1531, -69.4086, -54.6285, 0.15", "38.4137, -69.0783, -54.7778, 0.59", "38.5809, -68.7709, -54.8776, 0.59", "38.8857, -67.9338, -55.0495, 0.37", "39.1401, -66.7617, -55.242, 0.15", "39.1909, -66.1483, -55.3083, 0.15", "39.2278, -64.8022, -55.3984, 0.15", "39.2443, -64.1679, -55.4251, 0.15", "39.2644, -63.6757, -55.4355, 0.29", "39.2861, -63.1307, -55.4314, 0.29", "39.3707, -61.5449, -55.3534, 0.15", "39.4231, -60.2449, -55.296, 0.15", "39.4261, -59.4457, -55.2913, 0.29", "39.424, -58.7736, -55.2864, 0.37", "45.0382, -59.5345, -63.1114, 0.37", "52.1345, -58.391, -69.566, 0.37", "58.7458, -56.0518, -76.2104, 0.37", "65.5464, -51.895, -81.6695, 0.37", "71.5923, -47.7362, -87.9528, 0.37", "76.7395, -42.2933, -94.0527, 0.37", "82.2105, -37.499, -100.41, 0.37", "87.0979, -32.6304, -107.173, 0.37", "92.9327, -27.5657, -112.972, 0.37", "98.3634, -22.8546, -119.425, 0.37", "102.68, -18.2943, -126.766, 0.37", "108.537, -13.4204, -132.705, 0.37", "114.636, -9.07724, -138.81, 0.37", "120.405, -4.77283, -145.253, 0.37", "125.844, -1.11119, -152.348, 0.37", "130.087, 1.85288, -160.505, 0.37", "134.786, 4.6869, -168.456, 0.37", "139.36, 7.10149, -176.616, 0.37", "143.616, 9.33874, -184.995, 0.37", "147.278, 12.6585, -193.295, 0.37", "150.53, 17.0047, -201.287, 0.37", "152.481, 22.0385, -209.298, 0.37", "154.816, 25.8663, -217.855, 0.37", "157.193, 28.7979, -226.749, 0.37", "158.61, 32.288, -235.645, 0.37" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "21.8684, -26.5159, -3.15573, 0.96", "22.2869, -26.4066, -2.41496, 0.96", "22.6248, -26.282, -1.70781, 0.59", "23.0641, -26.0387, -0.512569, 0.59", "23.3787, -25.788, 0.57176, 0.59", "23.586, -25.5757, 1.38143, 0.59", "23.8042, -25.3023, 2.28031, 0.66", "23.9768, -24.9969, 3.15116, 0.59", "24.2059, -24.519, 4.29461, 0.66", "24.4043, -24.1198, 5.12589, 0.66", "24.5761, -23.8474, 5.67281, 0.59", "24.8845, -23.5116, 6.44002, 0.52", "25.154, -23.3343, 6.97815, 0.52", "25.5432, -23.2032, 7.60228, 0.52", "26.1294, -23.1483, 8.39048, 0.52", "26.668, -23.1899, 9.08861, 0.59", "27.2981, -23.334, 9.93832, 0.37", "27.654, -23.461, 10.4409, 0.29", "27.7631, -23.514, 10.6256, 0.29", "27.8807, -23.5934, 10.86, 0.29", "28.1148, -23.8181, 11.4643, 0.29", "28.2554, -23.9861, 11.9514, 0.29", "28.44, -24.2219, 12.8157, 0.59", "28.7049, -24.5126, 14.2366, 0.59", "28.792, -24.6147, 14.8367, 0.59", "28.9041, -24.7556, 15.7335, 0.59", "28.9615, -24.8329, 16.2415, 0.59", "29.094, -24.9804, 17.3053, 0.59", "29.2267, -25.0599, 18.0769, 0.59", "29.7347, -25.1416, 19.7465, 0.59", "30.1072, -25.1785, 20.6147, 0.59", "30.7349, -25.2941, 21.7324, 0.81", "32.3597, -25.8134, 24.4649, 1.11", "32.7819, -25.99, 25.1907, 0.66", "33.4285, -26.293, 26.4569, 0.59", "33.802, -26.4609, 27.4265, 0.59", "33.9559, -26.5278, 28.081, 0.52", "34.1143, -26.5559, 29.2737, 0.52", "34.1749, -26.5474, 29.9924, 0.52", "34.2038, -26.5196, 30.6788, 0.52", "34.2307, -26.412, 32.1342, 0.52", "34.226, -26.3105, 33.1039, 0.59", "34.229, -26.1324, 34.5914, 0.59", "34.2474, -26.0481, 35.3746, 0.59", "34.2781, -26.0136, 35.8384, 0.59", "34.3649, -26.0057, 36.5009, 0.59", "34.4876, -26.0421, 36.9976, 0.59", "34.788, -26.1751, 37.7841, 0.29", "35.1944, -26.3829, 38.6773, 0.29", "35.4109, -26.4783, 39.1427, 0.52", "35.7869, -26.6109, 40.0687, 0.52", "36.1496, -26.6901, 41.0174, 0.15", "36.4205, -26.7164, 41.7587, 0.22", "36.9207, -26.71, 43.2097, 0.22", "37.0737, -26.7068, 43.6551, 0.22", "37.5615, -26.7214, 45.1265, 0.22", "37.8097, -26.7408, 45.8544, 0.22", "37.9408, -26.7576, 46.2521, 0.22", "38.2925, -26.8458, 47.1495, 0.22", "38.6588, -26.9676, 47.7775, 0.22", "38.998, -27.1028, 48.244, 0.22", "39.4322, -27.3259, 48.8385, 0.22", "39.5552, -27.3951, 49.0332, 0.22", "39.7411, -27.4865, 49.3924, 0.37", "39.9548, -27.5695, 49.8955, 0.81", "40.5589, -27.7133, 51.3522, 0.22", "41.2346, -27.8157, 52.9744, 0.22", "41.56, -27.8306, 53.6892, 0.81", "42.252, -27.8064, 55.1401, 0.22", "42.9264, -27.7274, 56.5085, 0.22", "43.2968, -27.638, 57.1872, 0.74", "43.4942, -27.5646, 57.5185, 0.74", "44.3714, -27.1955, 58.8521, 0.15", "45.2469, -26.8657, 60.2007, 0.59", "45.4085, -26.8199, 60.4787, 0.59", "45.8625, -26.7361, 61.4146, 0.22", "46.637, -26.7168, 63.3761, 0.22", "46.843, -26.7596, 63.9972, 0.44", "47.2719, -26.9787, 65.6047, 0.44", "47.6659, -27.2648, 67.3526, 0.44", "47.8194, -27.3974, 68.1756, 0.44", "47.9174, -27.4946, 68.8342, 0.44", "48.0582, -27.5802, 69.7271, 0.88", "48.3128, -27.6237, 71.2647, 0.74", "48.6895, -27.537, 73.0738, 0.74", "48.9674, -27.4163, 74.0765, 0.74", "49.2554, -27.2777, 74.8648, 0.74", "49.7063, -27.0482, 75.8021, 0.22", "50.2872, -26.7663, 76.6706, 0.22", "50.8916, -26.5264, 77.1994, 0.52", "51.5333, -26.2993, 77.5812, 0.66", "52.6754, -25.9457, 78.1224, 0.15", "53.6765, -25.681, 78.5158, 0.81", "54.1578, -25.5727, 78.7215, 0.22", "55.7093, -25.247, 79.4419, 0.15", "56.7928, -25.0211, 80.0172, 0.15", "57.5067, -24.8864, 80.4645, 0.59", "58.3569, -24.7647, 81.1519, 0.15", "59.7118, -24.6288, 82.4729, 0.15", "60.3074, -24.587, 83.1199, 0.15", "60.7343, -24.5739, 83.6306, 0.15", "61.1168, -24.5609, 84.0559, 0.52", "61.8809, -24.5331, 84.8494, 0.52", "63.0354, -24.502, 85.9065, 0.07", "63.3161, -24.5007, 86.1034, 0.07", "63.709, -24.5079, 86.377, 0.59", "64.7494, -24.5427, 87.1943, 0.07", "65.5291, -24.5364, 87.8288, 0.07", "65.8235, -24.5219, 88.0655, 0.29", "66.1325, -24.5032, 88.3314, 0.29", "67.7575, -24.3312, 89.733, 0.15", "68.7891, -24.1647, 90.6344, 0.15", "69.473, -24.0003, 91.232, 0.15", "70.0868, -23.8008, 91.7408, 0.15", "70.5271, -23.6412, 92.0818, 0.15", "71.3011, -23.3437, 92.6078, 0.15", "71.8, -23.1637, 92.856, 0.15", "72.3686, -22.976, 93.0992, 0.22", "73.7547, -22.5833, 93.6836, 0.07", "74.2596, -22.4553, 93.8796, 0.74", "74.6998, -22.3563, 94.0291, 0.74", "75.8497, -22.1644, 94.419, 0.07", "76.2991, -22.1058, 94.5615, 0.37", "76.8534, -22.0506, 94.7217, 0.66", "77.816, -21.9551, 94.9482, 0.07", "78.3146, -21.9027, 95.0927, 0.15", "79.5009, -21.7695, 95.5104, 0.07", "79.9747, -21.7156, 95.7248, 0.44", "80.393, -21.666, 95.9395, 0.44", "81.4146, -21.542, 96.4887, 0.15", "82.4912, -21.4197, 97.0706, 0.15", "83.0215, -21.3531, 97.3469, 0.37", "83.9469, -21.2088, 97.8111, 0.81", "84.4058, -21.1247, 98.0398, 0.59", "85.4397, -20.8922, 98.5342, 0.15", "86.1458, -20.6931, 98.8234, 0.15", "86.6614, -20.5192, 98.9883, 0.15", "87.4869, -20.2109, 99.2225, 0.15", "88.0421, -19.9881, 99.3489, 0.66", "88.5845, -19.7644, 99.4646, 0.37", "89.9852, -19.2284, 99.7261, 0.07", "90.3646, -19.1025, 99.8125, 0.44", "90.6773, -19.0243, 99.8863, 0.44", "92.1145, -18.811, 100.234, 0.15", "92.717, -18.7721, 100.424, 0.37", "94.4082, -18.7844, 101.092, 0.15", "95.7047, -18.8543, 101.712, 0.59", "96.4373, -18.9077, 102.101, 1.33", "97.5943, -18.9922, 102.754, 0.15", "98.8015, -19.086, 103.536, 0.15", "99.3823, -19.1182, 103.932, 0.15", "99.8891, -19.1251, 104.281, 0.37", "100.231, -19.113, 104.503, 0.37", "101.274, -19.0259, 105.255, 0.15", "102.439, -18.9128, 106.123, 0.15", "102.918, -18.8743, 106.47, 0.52", "103.447, -18.8342, 106.835, 0.59", "104.669, -18.7441, 107.654, 0.15", "105.795, -18.6655, 108.411, 0.15", "106.683, -18.627, 108.979, 0.29", "107.234, -18.6163, 109.284, 0.29", "108.32, -18.6723, 109.83, 0.29", "108.937, -18.781, 110.108, 0.29", "109.865, -19.1317, 110.441, 0.29", "110.678, -19.6308, 110.694, 0.29", "110.968, -19.9125, 110.844, 0.52", "111.459, -20.5765, 111.273, 0.15", "111.806, -21.221, 111.759, 0.15", "111.979, -21.6883, 112.145, 0.15", "112.096, -22.1034, 112.504, 0.52", "112.448, -23.5636, 113.873, 0.22", "112.71, -24.6472, 114.955, 0.52", "112.974, -25.6279, 116.042, 1.33", "113.363, -26.8692, 117.539, 0.22", "113.466, -27.1284, 117.879, 0.37", "113.734, -27.6707, 118.7, 0.15", "113.988, -28.0551, 119.355, 0.59", "114.694, -28.8578, 121.028, 0.15", "115.133, -29.251, 122.068, 0.44", "115.794, -29.7737, 123.608, 0.07", "116.494, -30.3248, 125.26, 0.07", "116.776, -30.5525, 125.927, 0.96", "117.799, -31.3677, 128.428, 0.52", "118.363, -31.8203, 129.843, 0.37", "118.711, -32.1109, 130.765, 0.15", "118.878, -32.2687, 131.269, 0.15", "119.029, -32.4216, 131.693, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "21.8684, -26.5159, -3.15573, 0.66", "23.1613, -28.1397, -1.42337, 0.66", "24.1366, -29.421, -0.23043, 0.66", "25.0094, -30.634, 0.770216, 0.66", "25.5701, -31.4836, 1.4131, 0.66", "26.3771, -32.8627, 2.39844, 0.81", "27.0712, -34.2325, 3.3432, 1.03", "27.5582, -35.4454, 4.05959, 0.74", "27.8377, -36.4764, 4.59475, 0.74", "27.9355, -37.1762, 4.92939, 1.18", "28.0218, -38.5242, 5.59253, 0.81", "28.089, -40.1935, 6.38672, 0.59", "28.1897, -41.3282, 6.98095, 0.59", "28.3331, -42.0264, 7.36156, 0.81", "28.6828, -42.9302, 7.89384, 0.81", "29.4292, -43.8671, 8.50625, 0.81", "30.5478, -44.4708, 9.05181, 0.74", "32.1377, -44.893, 9.61034, 0.88", "33.1435, -45.0785, 9.93597, 0.88", "34.0814, -45.2259, 10.2533, 0.96", "36.0288, -45.531, 10.885, 0.44", "37.3499, -45.7887, 11.3066, 0.44", "38.61, -46.1378, 11.7283, 0.52", "40.1449, -46.7532, 12.2405, 0.44", "41.5476, -47.5325, 12.7353, 0.74", "43.0477, -48.6157, 13.2647, 0.29", "43.8571, -49.3223, 13.534, 0.29", "44.6474, -50.0695, 13.735, 0.29", "45.2527, -50.6633, 13.8554, 0.29", "45.844, -51.2653, 14.0047, 0.52", "46.6841, -52.1898, 14.2822, 0.88", "47.1918, -52.7707, 14.5828, 0.66", "48.1316, -53.7897, 15.2939, 0.44", "48.8017, -54.4726, 15.9185, 0.22", "50.301, -56.0077, 17.5235, 0.22", "50.6519, -56.3815, 17.9342, 0.22", "51.7847, -57.6184, 19.2682, 0.22", "52.2764, -58.1737, 19.8058, 0.29", "52.9022, -58.8462, 20.3775, 0.74", "53.5675, -59.4805, 20.7716, 0.88", "54.3258, -60.0637, 20.9885, 0.88", "55.2483, -60.6336, 21.1648, 0.88", "56.0515, -61.0616, 21.2692, 0.59", "56.9374, -61.4616, 21.4223, 0.44", "57.7602, -61.7991, 21.5855, 0.44", "58.8793, -62.2557, 21.872, 0.29", "59.5254, -62.5308, 21.9992, 0.29", "60.6204, -63.0667, 22.1374, 0.29", "61.2318, -63.4426, 22.1222, 0.74", "61.8813, -63.9348, 22.074, 1.03", "62.7334, -64.6824, 22.0188, 0.29", "64.2263, -66.0891, 21.9754, 0.29", "64.9079, -66.734, 21.9945, 0.29", "65.7868, -67.5617, 22.0488, 0.29", "66.9131, -68.6193, 22.2226, 0.29", "67.6691, -69.3054, 22.4523, 0.88", "68.4466, -70.0103, 22.7952, 1.25", "69.5196, -70.9687, 23.393, 0.37", "69.9935, -71.3783, 23.6541, 0.37", "70.6442, -71.9328, 24.0167, 0.52", "71.5271, -72.6998, 24.4367, 0.52", "72.1912, -73.2512, 24.7694, 0.22", "72.4816, -73.4692, 24.9232, 0.22", "72.8696, -73.7157, 25.1344, 0.22", "73.7717, -74.1721, 25.5355, 0.22", "74.4895, -74.4772, 25.7769, 0.29", "75.5072, -74.8592, 26.0903, 0.66", "75.7889, -74.9564, 26.1894, 1.03", "76.8611, -75.309, 26.6783, 1.47", "78.2318, -75.7027, 27.4389, 0.81", "79.3921, -75.9782, 28.1834, 0.44", "80.6641, -76.2426, 29.1244, 0.22", "81.4964, -76.4207, 29.8018, 0.22", "82.8708, -76.7532, 31.0311, 0.22", "83.5939, -76.9523, 31.7531, 0.37", "84.2973, -77.201, 32.4964, 0.66", "84.7167, -77.3932, 32.9287, 0.22", "85.1928, -77.6841, 33.3904, 0.22", "85.8965, -78.1732, 33.9972, 0.22", "87.0953, -79.0696, 34.9557, 0.22", "87.5796, -79.4547, 35.3321, 0.96", "88.8414, -80.4668, 36.266, 1.55", "90.415, -81.6679, 37.3844, 0.22", "91.1777, -82.2122, 37.8974, 0.22", "92.1495, -82.8586, 38.4929, 0.59", "93.0177, -83.4315, 38.9463, 0.22", "94.0879, -84.1203, 39.3972, 0.22", "94.5906, -84.4209, 39.5525, 0.22", "95.2723, -84.7711, 39.7399, 0.29", "95.8336, -85.0328, 39.9203, 0.96", "96.5197, -85.328, 40.1516, 0.66", "97.3221, -85.6156, 40.5144, 0.22", "98.5908, -86.007, 41.1867, 0.29", "99.6518, -86.3109, 41.7155, 0.29", "100.177, -86.4451, 41.9372, 0.37", "101.37, -86.7141, 42.36, 1.03", "103.418, -87.1328, 42.8953, 0.66", "104.61, -87.4105, 43.038, 0.22", "105.952, -87.794, 42.9769, 0.22", "107.009, -88.1426, 42.7771, 0.22", "107.468, -88.2988, 42.647, 0.29", "108.268, -88.5977, 42.3591, 0.29", "109.522, -89.1612, 41.8756, 0.29", "110.66, -89.7382, 41.5077, 0.29", "111.669, -90.291, 41.2823, 0.29", "112.876, -90.9883, 41.078, 0.74", "113.997, -91.6436, 40.9155, 0.29", "115.178, -92.3278, 40.7813, 0.29", "115.983, -92.7848, 40.747, 0.96", "116.945, -93.2899, 40.7379, 1.7", "117.818, -93.6871, 40.7219, 0.96", "118.775, -94.0448, 40.6493, 0.29", "119.76, -94.3015, 40.4983, 0.22", "120.695, -94.4557, 40.3521, 0.22", "122.24, -94.6473, 40.1572, 0.29", "123.716, -94.849, 40.1255, 0.22", "124.201, -94.9637, 40.2109, 0.22", "124.73, -95.1755, 40.3929, 0.22", "126.068, -95.9067, 41.0702, 0.22", "126.842, -96.3809, 41.5556, 0.52", "127.795, -97.0187, 42.2504, 0.96", "128.772, -97.7279, 42.9993, 0.96", "129.746, -98.462, 43.7132, 0.22", "130.921, -99.353, 44.5125, 0.29", "131.77, -99.9654, 45.0316, 0.74", "132.853, -100.706, 45.6556, 1.47", "134.773, -101.916, 46.6131, 0.22", "135.422, -102.282, 46.8981, 0.22", "135.943, -102.55, 47.0998, 0.22", "137.128, -103.151, 47.4493, 0.22", "137.637, -103.414, 47.5704, 0.66", "138.26, -103.714, 47.6926, 0.96", "139.095, -104.051, 47.8698, 0.59", "139.862, -104.361, 48.1053, 0.22", "140.53, -104.601, 48.3791, 0.22", "141.081, -104.775, 48.6351, 0.22", "141.916, -105.007, 49.0922, 0.74", "143.562, -105.41, 50.0663, 0.22", "144.796, -105.7, 50.8317, 0.22", "146.006, -105.946, 51.6403, 0.22", "146.521, -106.041, 51.9937, 0.66", "147.811, -106.278, 52.8675, 1.03", "148.28, -106.386, 53.2233, 1.03", "149.494, -106.757, 54.1861, 0.15", "150.762, -107.211, 55.1839, 0.15", "151.138, -107.355, 55.4854, 0.66", "151.674, -107.553, 55.9128, 0.74", "153.828, -108.361, 57.5644, 0.15", "154.201, -108.514, 57.8519, 0.22", "154.748, -108.755, 58.2449, 0.22", "155.697, -109.245, 58.8409, 0.15", "156.468, -109.697, 59.2738, 0.22", "156.97, -110.031, 59.4868, 0.59", "158.282, -110.983, 59.7912, 1.11", "158.961, -111.511, 59.9084, 1.11", "159.667, -112.106, 59.9776, 0.37", "160.559, -112.917, 59.9699, 0.15", "161.387, -113.712, 60.0169, 0.15", "161.714, -114.036, 60.0555, 0.37", "162.147, -114.486, 60.1494, 0.66", "162.836, -115.182, 60.4464, 0.22", "163.143, -115.489, 60.6664, 0.22", "164.509, -116.937, 62.0486, 0.22", "164.826, -117.288, 62.4187, 0.44", "165.246, -117.786, 62.9409, 0.88", "165.704, -118.366, 63.4743, 1.03", "166.555, -119.475, 64.2777, 0.15", "167.05, -120.102, 64.5876, 0.15", "167.457, -120.597, 64.6797, 0.44", "167.692, -120.861, 64.7076, 0.44", "168.914, -122.169, 64.7388, 0.15", "169.873, -123.154, 64.737, 0.15", "170.296, -123.531, 64.7177, 0.59", "171.24, -124.277, 64.6821, 0.52", "172.493, -125.139, 64.6842, 0.22", "173.546, -125.722, 64.7278, 0.22", "174.176, -125.975, 64.8103, 0.22", "174.936, -126.185, 64.9588, 0.88", "175.226, -126.232, 65.0144, 0.96", "176.025, -126.244, 65.1483, 0.88", "177.512, -126.084, 65.2546, 0.22", "178.607, -125.865, 65.2697, 0.37", "179.686, -125.593, 65.2339, 0.37", "180.28, -125.419, 65.209, 0.37", "181.631, -124.98, 65.1165, 0.15", "183.198, -124.417, 64.9136, 0.22", "184.051, -124.088, 64.6676, 0.44", "184.565, -123.908, 64.4343, 0.44", "185.708, -123.574, 63.8845, 0.15", "186.129, -123.474, 63.7047, 0.15", "187.019, -123.353, 63.4436, 0.29", "189.078, -123.344, 63.8662, 0.29", "189.65, -123.403, 64.2744, 0.29", "191.181, -123.631, 65.7005, 0.29", "192.268, -123.811, 66.8147, 0.74", "192.848, -123.925, 67.4341, 0.22", "194.065, -124.181, 68.8309, 0.22", "195.022, -124.387, 69.9766, 0.22", "195.219, -124.426, 70.209, 0.22", "195.924, -124.566, 70.954, 0.44", "197.103, -124.841, 72.0773, 0.15", "198.178, -125.14, 72.951, 0.15", "198.685, -125.285, 73.2878, 0.44", "199.855, -125.604, 73.9702, 1.11", "200.742, -125.839, 74.4322, 1.11", "201.736, -126.086, 74.8689, 0.44", "203.562, -126.409, 75.4211, 0.15", "204.917, -126.561, 75.7335, 0.15", "205.498, -126.591, 75.846, 0.29", "206.349, -126.583, 75.9749, 0.66", "207.038, -126.511, 76.0116, 0.66", "208.999, -126.126, 75.9378, 0.15", "210.452, -125.748, 75.7761, 0.15", "210.993, -125.602, 75.6538, 0.44", "211.765, -125.388, 75.4582, 0.44", "214.62, -124.532, 74.6199, 0.07", "216.205, -124.051, 74.0605, 0.15", "216.772, -123.886, 73.8008, 0.22", "218.451, -123.424, 72.8615, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "25.7471, -211.902, 11.3054, 0.22", "25.5076, -213.011, 11.6408, 0.22", "25.3956, -213.47, 11.7854, 0.22", "25.2681, -213.973, 11.9399, 1.18", "25.0863, -214.686, 12.1476, 0.22", "24.923, -215.301, 12.3532, 0.15", "24.7811, -215.806, 12.5559, 0.15", "24.6432, -216.258, 12.7591, 0.15", "24.5485, -216.554, 12.9164, 0.52", "24.463, -216.834, 13.092, 0.52", "24.2516, -217.654, 13.6938, 0.07", "24.1115, -218.338, 14.2373, 0.07", "24.0607, -218.644, 14.5129, 0.07", "24.0432, -218.795, 14.6615, 0.66", "24.0166, -219.22, 15.1063, 0.88", "24.0181, -219.933, 15.8225, 0.22", "24.0443, -220.463, 16.3285, 0.22", "24.0866, -221.073, 16.8734, 0.22", "24.1237, -221.611, 17.3165, 0.96", "24.1679, -222.406, 17.8963, 0.52", "24.2062, -223.359, 18.4871, 0.22", "24.2083, -224.135, 18.8481, 0.22", "24.1842, -224.646, 19.0158, 0.22", "24.1189, -225.267, 19.1422, 0.96", "23.997, -225.944, 19.2097, 1.55", "23.9011, -226.336, 19.2339, 1.4", "23.5363, -227.581, 19.2959, 0.15", "23.3469, -228.192, 19.3204, 0.15", "23.1647, -228.754, 19.3533, 0.59", "22.8239, -229.848, 19.4447, 0.07", "22.5353, -230.87, 19.5484, 0.07", "22.4532, -231.217, 19.5864, 0.74", "22.3894, -231.555, 19.6241, 0.81", "22.2941, -232.2, 19.6728, 0.15", "22.1566, -233.293, 19.7094, 0.15", "22.0879, -233.873, 19.7003, 0.81", "21.9719, -234.7, 19.6456, 2.06", "21.8683, -235.356, 19.5957, 2.06", "21.6991, -236.32, 19.5126, 0.52", "21.5586, -237.047, 19.4413, 0.15", "21.3728, -237.935, 19.3065, 0.15", "21.2409, -238.546, 19.1925, 0.15", "21.1316, -239.062, 19.0853, 0.22", "21.0312, -239.577, 18.9542, 0.74", "20.9383, -240.095, 18.806, 0.81", "20.759, -241.301, 18.4238, 0.15", "20.6455, -242.173, 18.1326, 0.15", "20.5454, -243.007, 17.8647, 0.15", "20.4274, -243.909, 17.623, 0.22", "20.3535, -244.433, 17.5144, 0.66", "20.2794, -244.917, 17.4484, 1.25", "20.1624, -245.561, 17.4402, 1.25", "19.9143, -246.766, 17.5673, 0.22", "19.6805, -247.76, 17.7628, 0.15", "19.5197, -248.338, 17.9327, 0.96", "19.2788, -249.105, 18.2142, 0.15", "18.945, -250.079, 18.6424, 0.15", "18.6248, -250.942, 19.0719, 0.15", "18.4194, -251.454, 19.3497, 1.18", "17.9364, -252.599, 19.9914, 0.07", "17.5097, -253.577, 20.5581, 0.07", "17.2358, -254.196, 20.9088, 0.07", "17.098, -254.519, 21.0616, 0.81", "16.9749, -254.806, 21.1749, 0.81", "16.6156, -255.655, 21.4729, 0.15", "16.3847, -256.215, 21.6278, 0.15", "16.124, -256.862, 21.763, 1.33", "15.7233, -257.89, 21.9343, 0.15", "15.4662, -258.592, 22.0318, 0.15", "15.2306, -259.274, 22.1029, 0.15", "15.1381, -259.568, 22.1184, 0.29", "15.0323, -259.993, 22.1302, 0.07", "14.9801, -260.365, 22.138, 0.22", "14.9758, -261.27, 22.1054, 0.29", "15.0106, -261.605, 22.0756, 0.88", "15.0863, -261.993, 22.0514, 1.4", "15.2718, -262.765, 22.0507, 0.22", "15.5241, -263.669, 22.0902, 0.07", "15.7774, -264.472, 22.1567, 0.07", "15.8901, -264.804, 22.2001, 0.29", "16.3795, -266.243, 22.4332, 0.07", "16.5871, -266.846, 22.5437, 0.07", "16.703, -267.186, 22.6277, 0.59", "16.9967, -268.035, 22.8802, 0.15", "17.1821, -268.561, 23.0512, 1.25", "17.3902, -269.134, 23.2252, 0.88", "17.7387, -270.072, 23.4651, 0.15", "18.0614, -270.941, 23.6653, 0.15", "18.18, -271.288, 23.7396, 0.22", "18.3583, -271.876, 23.8475, 0.15", "18.4031, -272.066, 23.8858, 0.37", "18.4504, -272.442, 23.9947, 0.81", "18.4614, -272.911, 24.1501, 0.22", "18.4344, -273.606, 24.3754, 0.15", "18.3798, -274.073, 24.5241, 0.22", "18.183, -275.16, 24.8799, 0.07", "17.9269, -276.373, 25.2645, 0.07", "17.8173, -276.847, 25.4077, 0.22", "17.6787, -277.409, 25.5602, 0.88", "17.3465, -278.676, 25.9058, 0.15", "17.1343, -279.476, 26.1266, 0.22", "16.98, -280.076, 26.2763, 0.29", "16.8675, -280.539, 26.394, 0.52", "16.6844, -281.376, 26.6555, 0.07", "16.5035, -282.383, 27.0224, 0.07", "16.4041, -283.223, 27.3576, 0.07", "16.3819, -283.495, 27.4626, 0.59", "16.3641, -283.777, 27.5705, 0.66", "16.3372, -284.51, 27.8257, 0.15", "16.3362, -285.196, 28.0005, 0.15", "16.3427, -285.824, 28.1152, 0.15", "16.3416, -286.169, 28.1705, 0.74", "16.3281, -286.462, 28.2186, 0.74", "16.2875, -286.946, 28.2947, 0.15", "16.1459, -287.998, 28.4739, 0.07", "15.9961, -288.899, 28.6747, 0.07", "15.9177, -289.326, 28.7837, 0.74", "15.7331, -290.329, 29.0544, 0.07", "15.669, -290.664, 29.1451, 0.22", "15.5227, -291.431, 29.3409, 0.07", "15.3138, -292.589, 29.6095, 0.07", "15.246, -293.018, 29.6863, 0.66", "15.1976, -293.405, 29.7442, 0.22", "15.135, -294.1, 29.8132, 0.07", "15.0716, -294.933, 29.8571, 0.07", "15.049, -295.277, 29.8427, 0.07", "15.0147, -295.72, 29.7952, 0.52", "14.9295, -296.686, 29.6698, 0.07", "14.8013, -297.741, 29.4749, 0.07", "14.7537, -298.075, 29.3883, 0.59", "14.5841, -298.893, 29.1121, 0.07", "14.4492, -299.409, 28.9083, 0.07", "14.3354, -299.733, 28.7566, 0.44", "13.8812, -300.767, 28.2469, 0.07", "13.6469, -301.255, 28.0082, 0.22", "13.2449, -302.062, 27.6408, 0.07", "13.0635, -302.414, 27.4958, 0.37", "12.3843, -303.712, 26.965, 0.07", "11.7269, -304.956, 26.4832, 0.07", "11.5918, -305.21, 26.3995, 0.15", "11.3429, -305.675, 26.268, 0.07", "11.1672, -306.022, 26.1798, 0.52" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "25.7471, -211.902, 11.3054, 0.15", "24.517, -210.522, 11.3683, 0.15", "23.1257, -208.841, 11.4139, 0.15", "21.9058, -207.255, 11.4328, 0.15", "20.8564, -205.854, 11.4283, 0.15", "20.2019, -205.083, 11.3919, 0.22", "19.0317, -203.937, 11.2782, 0.07", "18.3667, -203.422, 11.1721, 0.15", "17.1789, -202.728, 10.9023, 0.07", "16.2378, -202.406, 10.6137, 0.15", "13.1782, -202.043, 9.43362, 0.07", "10.9871, -202.041, 8.53933, 0.07", "9.77576, -202.195, 8.01089, 0.07", "8.99814, -202.381, 7.64627, 0.37", "7.05319, -203.145, 6.63191, 0.07", "6.58872, -203.424, 6.3383, 0.59" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-39.5023, -136.497, -2.90443, 0.29", "-40.4676, -138.42, -2.56454, 0.29", "-40.9197, -139.316, -2.40916, 0.15", "-41.2102, -139.872, -2.29668, 0.22", "-41.725, -140.828, -2.10442, 0.07", "-42.2779, -141.819, -1.91991, 0.07", "-42.4541, -142.126, -1.86784, 0.22", "-42.8377, -142.753, -1.79041, 0.74", "-43.5871, -143.943, -1.74453, 0.15", "-44.0599, -144.69, -1.76492, 0.15", "-44.557, -145.483, -1.88631, 0.22", "-44.8988, -146.055, -2.05787, 0.52", "-45.4049, -146.966, -2.40029, 0.66", "-45.7159, -147.568, -2.6757, 0.15", "-46.2816, -148.777, -3.3009, 0.15", "-46.795, -150.01, -3.95416, 0.15", "-47.1723, -151.035, -4.49483, 0.15", "-47.3524, -151.593, -4.74532, 0.96", "-47.5871, -152.447, -5.00432, 0.96", "-47.7955, -153.408, -5.14556, 0.15", "-48.038, -154.916, -5.09062, 0.15", "-48.0982, -155.414, -4.9815, 1.11", "-48.2466, -157.041, -4.37989, 0.15", "-48.3333, -158.582, -3.6653, 0.15", "-48.3828, -160.113, -2.84724, 0.15", "-48.4246, -161.489, -2.0067, 0.15", "-48.4705, -162.616, -1.24627, 0.15", "-48.5435, -163.588, -0.598433, 0.15", "-48.6299, -164.286, -0.160042, 0.88", "-48.8102, -165.082, 0.298584, 0.07", "-49.1264, -165.972, 0.793696, 0.07", "-49.3292, -166.394, 0.999709, 0.29", "-49.8363, -167.27, 1.3539, 0.07", "-50.1004, -167.669, 1.49665, 0.22", "-50.8217, -168.638, 1.82539, 0.07", "-51.2229, -169.157, 1.98403, 0.15", "-51.5429, -169.578, 2.09855, 0.07", "-51.7585, -169.862, 2.1735, 0.22", "-52.5331, -170.888, 2.42062, 0.07", "-53.3226, -171.956, 2.62722, 0.07", "-53.5605, -172.286, 2.6649, 0.29", "-54.1429, -173.108, 2.74335, 0.07", "-54.5869, -173.757, 2.8309, 0.07", "-54.8129, -174.102, 2.92054, 0.81", "-54.956, -174.327, 3.00628, 0.81", "-55.3723, -174.959, 3.31556, 0.07", "-55.7728, -175.541, 3.63089, 0.44", "-56.3498, -176.359, 4.09583, 0.15", "-57.1381, -177.481, 4.74882, 0.15", "-57.4106, -177.889, 4.99595, 0.37", "-57.7421, -178.422, 5.31199, 0.22", "-58.0912, -179.069, 5.69935, 0.15", "-58.2499, -179.429, 5.89188, 0.15", "-58.4632, -180.029, 6.20566, 0.59", "-58.7149, -180.94, 6.67857, 0.15", "-58.8205, -181.357, 6.95365, 0.22", "-59.0319, -182.154, 7.50608, 0.07", "-59.1359, -182.505, 7.75501, 0.22", "-59.4872, -183.536, 8.53963, 0.15", "-59.7759, -184.266, 9.11232, 1.18", "-60.3879, -185.561, 10.1451, 0.07", "-60.8583, -186.433, 10.8523, 0.07", "-61.0079, -186.676, 11.0423, 0.22", "-61.6352, -187.566, 11.7015, 0.07", "-61.92, -187.927, 11.9335, 0.22", "-62.6181, -188.722, 12.4439, 0.22", "-62.8707, -188.989, 12.6089, 0.22", "-63.1494, -189.269, 12.8232, 0.59", "-64.0045, -190.106, 13.5658, 0.07", "-64.2754, -190.369, 13.8093, 0.22", "-64.8593, -190.936, 14.3518, 0.07", "-65.121, -191.209, 14.6091, 0.37", "-66.1012, -192.306, 15.6266, 0.07", "-66.7973, -193.141, 16.3527, 0.07", "-66.9378, -193.318, 16.4949, 0.07", "-67.4623, -193.997, 16.9746, 1.18", "-68.6444, -195.6, 17.8681, 0.07", "-68.8668, -195.929, 18.0118, 0.66", "-69.2863, -196.616, 18.1944, 0.07", "-69.5058, -197.01, 18.2707, 0.07", "-69.6769, -197.332, 18.328, 0.22", "-69.9871, -197.976, 18.4212, 0.07", "-70.1748, -198.4, 18.4485, 0.22", "-70.3565, -198.838, 18.4791, 0.07", "-70.7747, -199.842, 18.5938, 0.07", "-70.9815, -200.337, 18.6593, 0.22", "-71.2451, -200.926, 18.742, 0.07", "-71.4783, -201.433, 18.842, 0.07", "-71.9109, -202.389, 19.0921, 0.07", "-72.4596, -203.657, 19.472, 0.07", "-72.5946, -203.997, 19.5835, 0.44", "-72.7653, -204.43, 19.7466, 0.44", "-73.2692, -205.625, 20.2508, 0.07", "-73.5665, -206.339, 20.5673, 0.07", "-73.6751, -206.635, 20.7014, 0.07", "-73.7858, -206.97, 20.8353, 0.52", "-74.0561, -207.771, 21.1218, 0.15", "-74.2973, -208.468, 21.331, 0.15", "-74.5244, -209.051, 21.453, 0.37", "-74.9741, -210.119, 21.6748, 0.07", "-75.5884, -211.502, 21.9745, 0.07", "-75.821, -211.982, 22.0729, 0.37", "-76.0749, -212.483, 22.1598, 0.37", "-76.72, -213.695, 22.3725, 0.07", "-77.4086, -214.91, 22.5834, 0.07", "-77.6876, -215.419, 22.6567, 0.59", "-78.2391, -216.535, 22.7983, 0.07", "-78.6385, -217.524, 22.9123, 0.07", "-78.9017, -218.374, 22.988, 0.07", "-79.0223, -218.948, 23.0192, 0.81", "-79.1909, -220.282, 23.029, 0.07", "-79.2202, -220.822, 23.024, 0.15", "-79.2099, -222.052, 22.9973, 0.07", "-79.1751, -223.126, 22.9509, 0.07", "-79.1519, -223.588, 22.9172, 0.59", "-79.1282, -224.096, 22.8796, 0.59", "-79.1222, -224.925, 22.8141, 0.07", "-79.1485, -225.958, 22.7254, 0.07", "-79.1866, -226.718, 22.6532, 0.29", "-79.2404, -227.535, 22.6279, 0.29", "-79.2996, -228.304, 22.6712, 0.29", "-79.3866, -229.4, 22.8003, 0.07", "-79.4601, -230.39, 23.0113, 0.07", "-79.4972, -230.936, 23.1712, 0.22", "-79.6177, -232.743, 23.7882, 0.07", "-79.6987, -233.952, 24.2464, 0.07", "-79.7278, -234.539, 24.4938, 0.59", "-79.7734, -236.261, 25.2985, 0.07", "-79.8065, -237.791, 26.0683, 0.07", "-79.8167, -238.307, 26.3309, 0.52" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-39.5023, -136.497, -2.90443, 0.22", "-39.8085, -139.505, -4.09308, 0.22", "-39.9378, -140.885, -4.68632, 0.22", "-40.056, -142.202, -5.30376, 0.22", "-40.1413, -143.189, -5.77679, 0.29", "-40.2117, -143.99, -6.15464, 0.52", "-40.2794, -144.759, -6.50703, 1.03", "-40.3458, -145.838, -7.03687, 0.74", "-40.4393, -147.09, -7.63487, 0.15", "-40.4917, -147.79, -7.93483, 0.29", "-40.5514, -148.689, -8.29024, 0.37", "-40.6298, -149.929, -8.71534, 0.07", "-40.6788, -150.736, -8.96404, 0.15", "-40.7622, -152.235, -9.38434, 0.07", "-40.8078, -153.177, -9.65167, 0.29", "-40.8361, -154.175, -9.95232, 0.29", "-40.8382, -155.101, -10.2404, 0.29", "-40.814, -155.822, -10.4667, 1.03", "-40.7486, -156.813, -10.7801, 0.52", "-40.6318, -158.205, -11.2033, 0.22", "-40.5575, -159.198, -11.5121, 0.66", "-40.5031, -159.947, -11.7308, 0.29", "-40.4389, -160.874, -11.9766, 0.07", "-40.4216, -161.447, -12.1005, 0.29", "-40.4313, -162.628, -12.2918, 0.15", "-40.4577, -163.243, -12.3563, 0.15", "-40.5088, -163.958, -12.4231, 0.52", "-40.5668, -164.645, -12.4819, 0.52", "-40.6928, -166.306, -12.6019, 0.15", "-40.7203, -167.189, -12.6187, 0.15", "-40.6932, -168.194, -12.6083, 0.15", "-40.665, -168.608, -12.5968, 0.37", "-40.611, -169.088, -12.6096, 0.37", "-40.3953, -170.468, -12.8124, 0.07", "-40.1137, -171.887, -13.3863, 0.07", "-40.0138, -172.372, -13.7455, 0.59", "-39.9617, -172.609, -13.9924, 1.11", "-39.6971, -173.686, -15.3409, 0.37", "-39.4154, -174.826, -16.9026, 0.15", "-39.1803, -175.798, -18.3669, 0.15", "-39.0726, -176.298, -19.1725, 0.15", "-39.0252, -176.535, -19.5357, 0.37", "-38.9095, -177.125, -20.3364, 0.15", "-38.7223, -178.03, -21.2756, 0.15", "-38.6297, -178.459, -21.6157, 0.44", "-38.3761, -179.833, -22.4528, 0.07", "-38.3141, -180.27, -22.6787, 0.22", "-38.1297, -181.812, -23.4688, 0.07", "-38.0138, -182.924, -24.0204, 0.07", "-37.9856, -183.187, -24.1405, 0.15", "-37.8654, -184.484, -24.5828, 0.07", "-37.8411, -184.826, -24.6318, 0.22" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-95.4807, -146.801, 17.9107, 0.22", "-96.6654, -147.904, 18.2442, 0.22", "-97.4682, -148.608, 18.4681, 0.22", "-98.1161, -149.163, 18.6727, 0.29", "-98.6839, -149.659, 18.8602, 0.66", "-99.0981, -150.026, 19.0203, 0.88", "-100.046, -150.878, 19.4356, 0.22", "-100.801, -151.575, 19.8323, 0.29", "-101.385, -152.128, 20.1546, 0.44", "-101.825, -152.564, 20.3854, 0.44", "-102.657, -153.426, 20.8755, 0.15", "-103.315, -154.156, 21.3166, 0.15", "-103.616, -154.508, 21.5332, 0.37", "-103.995, -154.942, 21.8006, 0.81", "-104.629, -155.631, 22.2429, 0.59", "-105.416, -156.448, 22.7837, 0.22", "-106.025, -157.049, 23.1908, 0.15", "-107.109, -158.012, 23.9632, 0.22", "-107.949, -158.67, 24.5852, 0.07", "-108.521, -159.07, 25.0166, 0.07", "-108.806, -159.25, 25.2325, 0.44", "-109.409, -159.594, 25.6392, 0.81", "-110.535, -160.135, 26.3672, 0.22", "-111.417, -160.513, 26.8801, 0.15", "-112.395, -160.921, 27.3655, 0.15", "-113.009, -161.179, 27.6188, 0.15", "-113.98, -161.59, 27.9474, 0.37", "-115.048, -162.062, 28.2096, 0.15", "-115.855, -162.465, 28.3381, 0.22", "-116.397, -162.786, 28.4036, 0.81", "-117.141, -163.296, 28.4932, 1.25", "-117.539, -163.616, 28.5234, 1.25", "-118.813, -164.842, 28.5484, 0.22", "-119.667, -165.786, 28.4989, 0.22", "-120.678, -167.034, 28.4, 0.22", "-121.307, -167.838, 28.3749, 0.22", "-122.155, -168.942, 28.3857, 0.37", "-122.753, -169.68, 28.4279, 1.03", "-123.332, -170.329, 28.5075, 0.37", "-124.325, -171.145, 28.7472, 0.15", "-125.919, -171.956, 29.343, 0.07", "-126.568, -172.187, 29.6447, 0.15", "-127.415, -172.426, 30.0805, 0.37", "-127.989, -172.555, 30.3768, 0.37", "-128.975, -172.734, 30.8596, 0.74", "-130.86, -173.026, 31.6943, 0.15", "-131.854, -173.21, 32.0596, 0.15", "-132.644, -173.397, 32.2869, 0.15", "-133.347, -173.61, 32.3974, 0.74", "-133.732, -173.744, 32.4014, 0.74", "-134.834, -174.165, 32.2288, 0.15", "-135.422, -174.368, 32.0241, 0.15", "-136.707, -174.734, 31.4749, 0.15", "-137.61, -174.965, 31.0674, 0.15", "-138.138, -175.085, 30.85, 0.66", "-138.682, -175.17, 30.673, 0.96", "-139.562, -175.237, 30.4666, 0.52", "-140.516, -175.246, 30.3711, 0.15", "-141.033, -175.237, 30.3874, 0.15", "-142.11, -175.19, 30.4726, 0.15", "-143.49, -175.062, 30.665, 0.15", "-143.941, -175.001, 30.7415, 0.15", "-144.822, -174.859, 30.8995, 0.52", "-145.317, -174.781, 30.99, 0.88", "-146.359, -174.624, 31.1722, 0.59", "-147.843, -174.463, 31.4157, 0.37", "-148.579, -174.431, 31.5573, 0.15", "-149.234, -174.438, 31.6968, 0.59", "-150.495, -174.588, 32.0136, 0.07", "-151.202, -174.761, 32.2349, 0.52", "-152.191, -175.137, 32.59, 0.15", "-152.985, -175.528, 32.8822, 0.15", "-153.607, -175.881, 33.1588, 0.96", "-155.15, -176.821, 33.9398, 0.07", "-156.552, -177.748, 34.7049, 0.07", "-157.041, -178.081, 34.9863, 0.81", "-157.47, -178.361, 35.232, 0.96", "-158.856, -179.193, 36.0603, 0.07", "-159.582, -179.563, 36.5281, 0.07", "-159.82, -179.646, 36.6788, 0.37", "-160.295, -179.744, 36.9536, 0.37", "-161.3, -179.878, 37.5081, 0.07", "-162.545, -180.045, 38.09, 0.37", "-163.25, -180.161, 38.332, 0.37", "-164.208, -180.394, 38.62, 0.22", "-164.904, -180.595, 38.8549, 0.22", "-165.565, -180.83, 39.0847, 0.22", "-166.867, -181.372, 39.5259, 0.22", "-167.573, -181.683, 39.7337, 0.66", "-168.746, -182.238, 40.0906, 0.15", "-170.027, -182.872, 40.5373, 0.15", "-170.588, -183.169, 40.6868, 0.59", "-171.288, -183.551, 40.8315, 0.44", "-172.725, -184.373, 41.0495, 0.15", "-173.86, -185.101, 41.0891, 0.15", "-174.683, -185.662, 41.0526, 0.15", "-177.232, -187.46, 40.8018, 0.74", "-178.338, -188.206, 40.7536, 0.96", "-178.915, -188.574, 40.7849, 1.03", "-180.712, -189.674, 41.0204, 0.07", "-181.842, -190.315, 41.2478, 0.07", "-182.537, -190.672, 41.4446, 0.52", "-184.057, -191.342, 41.9897, 0.15", "-185.512, -191.91, 42.5236, 0.15", "-186.145, -192.128, 42.7612, 0.88", "-187.291, -192.468, 43.192, 1.62", "-188.536, -192.813, 43.6077, 0.74", "-189.976, -193.19, 44.0583, 0.15", "-191.308, -193.522, 44.4491, 0.15", "-191.76, -193.632, 44.5822, 0.15", "-192.385, -193.785, 44.7905, 0.81", "-192.838, -193.907, 44.9543, 0.81", "-194.314, -194.378, 45.4919, 0.07", "-195.561, -194.851, 45.95, 0.07", "-196.291, -195.156, 46.1805, 0.37", "-198.215, -195.998, 46.7633, 0.07", "-199.255, -196.481, 47.0543, 0.07", "-199.817, -196.756, 47.1937, 0.96", "-200.069, -196.887, 47.2413, 0.96", "-201.588, -197.693, 47.4968, 0.15", "-202.896, -198.364, 47.7155, 0.15", "-203.512, -198.661, 47.8263, 0.44", "-203.877, -198.804, 47.9125, 0.44", "-204.981, -199.155, 48.2522, 0.15", "-205.755, -199.353, 48.5271, 0.15", "-206.28, -199.442, 48.7372, 0.37", "-207.525, -199.579, 49.2095, 0.07", "-208.591, -199.666, 49.6168, 0.07", "-209.259, -199.717, 49.866, 0.07", "-209.936, -199.778, 50.1214, 1.11", "-211.577, -199.995, 50.7361, 0.07", "-212.155, -200.092, 50.9561, 0.59", "-213.848, -200.418, 51.5515, 0.07", "-214.625, -200.579, 51.7972, 0.52", "-215.644, -200.794, 52.0783, 0.22", "-216.579, -200.997, 52.3131, 0.22", "-217.036, -201.099, 52.3908, 0.52", "-217.847, -201.274, 52.4563, 0.52", "-218.021, -201.311, 52.4589, 0.52", "-219.303, -201.567, 52.5126, 0.07", "-219.834, -201.672, 52.5409, 0.52", "-220.954, -201.901, 52.6301, 0.07", "-221.555, -202.026, 52.7314, 0.37", "-223.021, -202.348, 53.1028, 0.07", "-224.178, -202.604, 53.4996, 0.07", "-224.572, -202.689, 53.675, 0.52", "-224.863, -202.748, 53.8197, 0.52", "-226.319, -203.022, 54.5775, 0.15", "-227.117, -203.168, 54.9836, 0.66", "-229.045, -203.543, 55.8739, 0.07", "-230.361, -203.856, 56.419, 0.07", "-231.09, -204.057, 56.6937, 0.07", "-231.767, -204.29, 56.8965, 0.37", "-232.31, -204.514, 57.0037, 0.37", "-233.581, -205.131, 57.1361, 0.07", "-235.116, -205.993, 57.1504, 0.07", "-235.682, -206.334, 57.1626, 0.29", "-237.241, -207.279, 57.3542, 0.07", "-237.891, -207.668, 57.4894, 0.52", "-239.171, -208.378, 57.9311, 0.07", "-239.606, -208.6, 58.1398, 0.22", "-241.344, -209.435, 59.1133, 0.07", "-242.931, -210.18, 60.0954, 0.07", "-243.536, -210.476, 60.4904, 0.15", "-245.384, -211.447, 61.6638, 0.07", "-246.148, -211.887, 62.1166, 0.07", "-247.359, -212.661, 62.7259, 0.07", "-247.586, -212.831, 62.7998, 0.15", "-249.023, -214.036, 63.0802, 0.07", "-249.631, -214.566, 63.1568, 0.29", "-250.655, -215.461, 63.2043, 0.07", "-251.047, -215.8, 63.2159, 0.29", "-253.483, -217.871, 63.2757, 0.07", "-255.026, -219.169, 63.2978, 0.07", "-255.787, -219.803, 63.3009, 0.15", "-256.848, -220.7, 63.2988, 0.15", "-257.423, -221.199, 63.3163, 0.22", "-258.712, -222.333, 63.4902, 0.07", "-259.772, -223.271, 63.7731, 0.07", "-260.117, -223.58, 63.8986, 0.37", "-260.47, -223.917, 64.0414, 0.37", "-262.334, -225.798, 64.8583, 0.07", "-264.06, -227.578, 65.6487, 0.07", "-264.873, -228.43, 66.0459, 0.07", "-265.501, -229.099, 66.3763, 0.29", "-267.493, -231.245, 67.4727, 0.07", "-268.021, -231.837, 67.7725, 0.07", "-268.237, -232.096, 67.9234, 0.22", "-269.546, -233.71, 69.198, 0.07", "-270.68, -235.118, 70.4367, 0.07", "-271.399, -235.988, 71.3648, 0.07", "-271.766, -236.409, 71.963, 0.29", "-272.973, -237.74, 74.1353, 0.07", "-274.0, -238.871, 76.3385, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-95.4807, -146.801, 17.9107, 0.44", "-96.0526, -148.702, 18.3911, 0.44", "-96.447, -149.952, 18.6837, 0.44", "-96.8236, -151.135, 18.8858, 0.37", "-97.1633, -152.222, 19.0248, 0.15", "-97.4485, -153.151, 19.1121, 0.15", "-97.7004, -153.978, 19.1725, 0.15", "-97.8137, -154.333, 19.1767, 0.37", "-98.1058, -155.285, 19.1092, 0.88", "-98.2944, -155.918, 19.0471, 0.74", "-98.7022, -157.254, 18.8947, 0.29", "-99.013, -158.226, 18.7907, 0.15", "-99.3089, -159.131, 18.723, 0.07", "-99.685, -160.274, 18.6225, 0.07", "-99.8037, -160.62, 18.5927, 0.44", "-99.9815, -161.121, 18.5267, 0.81", "-100.455, -162.437, 18.2845, 0.22", "-101.03, -164.03, 17.9614, 0.22", "-101.516, -165.372, 17.675, 0.22", "-101.673, -165.806, 17.5846, 0.44", "-101.926, -166.506, 17.4177, 0.81", "-102.198, -167.294, 17.1905, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-14.1969, -19.8075, 16.2245, 0.29", "-14.2083, -21.1265, 17.9554, 0.29", "-14.2491, -21.9001, 18.8834, 0.22", "-14.3276, -22.8691, 19.9359, 0.22", "-14.4134, -23.714, 20.8405, 0.22", "-14.4978, -24.3601, 21.512, 0.37", "-14.5965, -25.0216, 22.1473, 0.37", "-14.7253, -25.8109, 22.8485, 0.59", "-14.8842, -27.1892, 24.0427, 0.15", "-14.953, -28.249, 24.9813, 0.15", "-14.9551, -28.6883, 25.4075, 0.15", "-14.876, -29.6346, 26.3787, 1.03", "-14.5895, -31.3007, 28.2276, 0.29", "-14.3727, -32.1508, 29.3196, 0.29", "-14.0794, -33.0311, 30.526, 0.29", "-13.7164, -33.8819, 31.7965, 0.29", "-13.415, -34.3972, 32.705, 0.66", "-12.8784, -35.0301, 34.1524, 0.44", "-12.0918, -35.7007, 36.0953, 0.44", "-11.7979, -35.8903, 36.7582, 0.44", "-10.9741, -36.2861, 38.356, 0.22", "-10.1933, -36.5597, 39.666, 0.15", "-9.18796, -36.8324, 41.2558, 0.15", "-8.77708, -36.9323, 41.8277, 0.15", "-8.35872, -37.0695, 42.379, 0.37", "-7.82273, -37.377, 43.1433, 0.37", "-7.24835, -38.2209, 44.2455, 0.15", "-6.97518, -39.1742, 45.1095, 0.15", "-6.90573, -39.7258, 45.4979, 0.44", "-6.85006, -41.0414, 46.3071, 0.15", "-6.88502, -42.1824, 46.9441, 0.22", "-6.97877, -43.9587, 47.8402, 0.22", "-7.00012, -44.4009, 48.0301, 0.37", "-7.00444, -45.235, 48.3678, 0.44", "-6.92745, -46.322, 48.8598, 0.66", "-6.74569, -47.5328, 49.4707, 0.15", "-6.53832, -48.564, 50.0621, 0.15", "-6.39746, -49.126, 50.4125, 0.22", "-6.23497, -49.6835, 50.8437, 0.22", "-5.94768, -50.5547, 51.6692, 0.22", "-5.50774, -51.6962, 52.9709, 0.15", "-5.00148, -52.8517, 54.3833, 0.22", "-4.52265, -53.8247, 55.6602, 0.29", "-3.86201, -55.0188, 57.2796, 0.22", "-3.18718, -56.1093, 58.8346, 0.59", "-2.2307, -57.4497, 60.8296, 0.59", "-1.70667, -58.105, 61.8344, 0.07", "-0.959304, -59.018, 63.1795, 0.07", "-0.694553, -59.3425, 63.6165, 0.22", "0.501395, -60.9149, 65.4246, 0.07", "0.838809, -61.438, 65.9667, 0.07", "1.09544, -61.9006, 66.3989, 0.29", "1.45752, -62.6326, 67.0852, 0.74", "1.87303, -63.6214, 67.9246, 0.22", "2.30469, -64.8154, 68.8919, 0.15", "3.05242, -67.0632, 70.538, 0.15", "3.31699, -67.869, 71.1118, 0.15", "3.66119, -68.9868, 71.8935, 0.15", "3.8918, -69.9139, 72.5326, 0.15", "4.09319, -71.109, 73.3294, 0.15", "4.20491, -71.9656, 73.8792, 0.37", "4.27566, -72.7571, 74.4529, 0.37", "4.33991, -73.8726, 75.3732, 0.37", "4.39143, -75.02, 76.4386, 0.37", "4.44836, -76.028, 77.4408, 0.37", "4.56424, -77.1216, 78.6145, 0.22", "4.8679, -78.9729, 80.8492, 0.22", "5.023, -79.6478, 81.6946, 0.22", "5.35734, -80.6671, 83.0472, 0.22", "5.70704, -81.5171, 84.2014, 0.81", "6.60955, -83.5601, 86.9355, 0.15", "7.50145, -85.6238, 89.5678, 0.15", "7.80267, -86.3006, 90.3963, 0.37", "8.57063, -87.976, 92.4889, 0.37", "8.79469, -88.4745, 93.0866, 0.52", "9.179, -89.3392, 94.087, 0.22", "9.90691, -91.1234, 95.8095, 0.22", "10.361, -92.3542, 96.8209, 0.22", "10.8761, -93.8341, 98.0038, 0.22", "11.1992, -94.8042, 98.7676, 0.74", "11.4027, -95.41, 99.3003, 0.74", "11.8359, -96.5727, 100.431, 0.22", "12.4225, -97.9786, 101.961, 0.29", "13.093, -99.4033, 103.596, 0.29", "13.9756, -101.138, 105.632, 0.22", "14.7049, -102.539, 107.317, 0.29", "15.4206, -103.925, 108.956, 0.29", "16.0564, -105.141, 110.388, 0.29", "16.5901, -106.072, 111.501, 0.07", "17.3973, -107.36, 112.988, 0.07", "17.7056, -107.828, 113.513, 0.22", "18.2431, -108.648, 114.377, 0.22", "19.2885, -110.378, 116.021, 0.15", "20.5206, -112.755, 118.158, 0.15", "20.9294, -113.759, 119.05, 0.29", "21.4212, -115.319, 120.42, 0.52", "21.6501, -116.384, 121.394, 0.81", "21.8076, -117.906, 122.869, 0.37", "21.834, -119.309, 124.277, 0.37", "21.8042, -120.939, 125.971, 0.15", "21.7846, -122.514, 127.772, 0.29", "21.8402, -124.256, 130.014, 0.29", "22.033, -125.72, 132.255, 0.66", "22.3016, -126.649, 133.917, 0.66", "22.6588, -127.305, 135.159, 0.07", "22.9166, -127.616, 135.773, 0.44", "23.9053, -128.549, 137.483, 0.22", "25.4011, -129.862, 139.671, 0.44", "25.7514, -130.192, 140.193, 0.59", "26.2506, -130.789, 141.166, 0.22", "26.6776, -131.433, 142.292, 0.37", "27.1475, -132.231, 143.844, 0.37", "27.6149, -133.106, 145.803, 0.37", "27.8309, -133.646, 147.108, 0.22", "28.0757, -134.435, 149.157, 0.22", "28.1225, -134.665, 149.84, 0.22", "28.1511, -134.93, 150.742, 0.22", "28.1618, -135.514, 152.928, 0.22", "28.2882, -135.927, 154.517, 0.22", "28.4829, -136.185, 155.513, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-14.1969, -19.8075, 16.2245, 0.37", "-14.3678, -20.1146, 18.0724, 0.37", "-14.5027, -20.32, 19.2643, 0.37", "-14.6975, -20.5708, 20.6917, 0.37", "-14.9615, -20.9157, 22.4813, 0.37", "-15.105, -21.1322, 23.4864, 0.29", "-15.2239, -21.3496, 24.4167, 0.29", "-15.3508, -21.7546, 25.9026, 0.22", "-15.4007, -22.0174, 26.8385, 0.22", "-15.4289, -22.2452, 27.7075, 0.29", "-15.4785, -22.4705, 28.7078, 0.29", "-15.5258, -22.576, 29.3604, 0.29", "-15.5829, -22.657, 29.9921, 0.29", "-15.7129, -22.7809, 30.8813, 0.29", "-15.8414, -22.8416, 31.3656, 0.29", "-16.125, -22.9314, 32.1804, 0.29", "-16.4846, -23.0129, 33.026, 0.29", "-16.7046, -23.0687, 33.5239, 0.29", "-17.2154, -23.2462, 34.741, 0.22", "-17.9882, -23.6159, 36.801, 0.22", "-18.3699, -23.8357, 37.9418, 0.22", "-18.6012, -24.0008, 38.7573, 0.22", "-18.9296, -24.3106, 40.2619, 0.22", "-19.0714, -24.5115, 41.2614, 0.37", "-19.1351, -24.7181, 42.2878, 0.37", "-19.1343, -24.9027, 43.1015, 0.37", "-19.0712, -25.1145, 43.9447, 0.37", "-18.946, -25.3044, 44.6883, 0.22", "-18.4526, -25.8591, 46.862, 0.22", "-18.3818, -25.93, 47.1644, 0.22", "-18.0004, -26.2931, 48.8003, 0.22", "-17.8643, -26.4626, 49.5963, 0.15", "-17.7896, -26.7742, 51.1153, 0.15", "-17.8161, -26.8504, 51.5118, 0.22", "-18.1535, -27.2258, 53.4698, 0.22", "-18.2619, -27.3046, 53.9115, 0.29", "-18.9268, -27.6814, 55.8952, 0.15", "-19.5975, -27.9995, 57.6348, 0.15", "-20.3161, -28.3025, 59.4006, 0.15", "-20.53, -28.3857, 59.9528, 0.52", "-21.0921, -28.5965, 61.4898, 0.52", "-21.4367, -28.7102, 62.5605, 0.37", "-22.0006, -28.8375, 64.4709, 0.29", "-22.569, -28.9068, 66.6155, 0.29", "-22.9153, -28.9398, 68.0067, 0.29", "-23.2431, -28.9731, 69.5194, 0.29", "-23.6041, -29.0051, 71.333, 0.29", "-23.6773, -29.005, 71.7688, 0.44", "-23.9718, -29.0169, 73.594, 0.44", "-24.1219, -29.0497, 74.351, 0.44", "-24.3676, -29.1339, 75.3245, 0.44", "-24.7028, -29.2652, 76.2086, 0.44", "-25.7825, -29.6865, 78.2183, 0.44", "-26.4667, -29.9399, 79.141, 0.44", "-27.7921, -30.3887, 80.5367, 0.15", "-28.3756, -30.5746, 81.048, 0.29", "-29.9986, -31.0742, 82.2019, 0.22", "-30.6777, -31.2799, 82.5744, 0.29", "-32.6422, -31.878, 83.3877, 0.07", "-33.8637, -32.2386, 83.8285, 0.07", "-34.8003, -32.4892, 84.1709, 0.52", "-35.6493, -32.7098, 84.4945, 0.96", "-37.4248, -33.179, 85.1646, 0.07", "-38.2015, -33.3912, 85.5027, 0.07", "-38.9498, -33.6023, 85.8366, 0.07", "-39.984, -33.9187, 86.3528, 0.22", "-40.3847, -34.0544, 86.5803, 0.44", "-41.3385, -34.4122, 87.1684, 0.22", "-43.2384, -35.2449, 88.6144, 0.96", "-44.4814, -35.8999, 89.7772, 0.15", "-45.2018, -36.3446, 90.597, 0.96", "-46.1822, -37.025, 91.873, 0.15", "-46.5303, -37.2875, 92.4139, 0.29", "-47.5347, -38.1525, 94.4826, 0.15", "-48.1382, -38.8002, 96.2208, 0.22", "-48.3944, -39.2327, 97.6315, 0.22", "-48.4143, -39.3248, 97.9643, 0.22", "-48.3766, -39.534, 98.848, 0.22", "-48.2413, -39.8409, 100.433, 0.22", "-48.1843, -39.9129, 101.027, 0.22", "-48.1253, -39.9615, 101.97, 0.22", "-48.1052, -39.9818, 102.873, 0.22", "-48.1887, -40.0232, 104.195, 0.22", "-48.3729, -40.0852, 105.155, 0.22", "-48.7078, -40.1994, 106.013, 0.22", "-49.0887, -40.3242, 106.727, 0.81", "-49.6014, -40.4889, 107.489, 0.81", "-50.1472, -40.6675, 108.233, 0.22", "-50.6568, -40.8433, 108.875, 0.81", "-52.0627, -41.3067, 110.576, 0.15", "-52.3942, -41.4029, 110.977, 0.37", "-53.2876, -41.6048, 112.041, 0.07", "-54.2196, -41.7345, 113.121, 0.07", "-54.6106, -41.7547, 113.593, 0.29", "-55.4549, -41.7581, 114.699, 0.07", "-56.0329, -41.7703, 115.54, 0.07", "-56.2977, -41.8094, 115.967, 0.52", "-56.8301, -41.9721, 116.873, 0.74", "-57.618, -42.3562, 118.237, 0.37", "-58.4028, -42.8623, 119.589, 0.37", "-58.7998, -43.1673, 120.241, 0.59", "-59.6085, -43.8094, 121.471, 0.29", "-60.0145, -44.1113, 122.022, 0.29", "-60.3837, -44.3625, 122.454, 0.88", "-61.2414, -44.8904, 123.303, 0.22", "-61.8189, -45.1922, 123.803, 0.66", "-62.0537, -45.2871, 124.009, 0.66", "-62.7766, -45.527, 124.657, 0.07", "-63.8406, -45.8243, 125.595, 0.07", "-64.2589, -45.9217, 125.949, 0.07", "-64.5797, -45.988, 126.201, 0.37", "-66.0293, -46.2935, 127.274, 0.15", "-66.284, -46.352, 127.449, 0.15", "-67.0935, -46.5248, 127.92, 0.52", "-67.607, -46.6355, 128.196, 0.15", "-68.1977, -46.7806, 128.529, 0.37", "-69.1248, -47.0485, 129.068, 0.07", "-69.4836, -47.1687, 129.294, 0.37", "-70.2834, -47.4405, 129.923, 0.15", "-71.2097, -47.6912, 130.889, 0.15", "-71.8009, -47.789, 131.737, 0.37", "-72.1077, -47.7925, 132.364, 0.81", "-72.4494, -47.7173, 133.338, 1.4", "-72.7776, -47.5532, 134.624, 1.4", "-73.0987, -47.2434, 136.546, 0.37", "-73.2886, -46.8544, 138.68, 0.22", "-73.3472, -46.4919, 140.74, 0.22", "-73.346, -46.2031, 142.336, 0.22", "-73.3243, -46.0815, 143.011, 0.22", "-73.2556, -45.8978, 144.11, 0.44", "-72.9973, -45.5728, 146.525, 0.44", "-72.7265, -45.3448, 148.628, 0.44" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "0.0137911, -429.605, -2.76054, 1.33", "0.149294, -430.682, -3.36882, 1.33", "0.259948, -431.763, -3.95251, 0.37", "0.423348, -433.484, -4.95096, 0.22", "0.472326, -433.906, -5.19088, 0.22", "0.533076, -434.422, -5.45689, 0.37", "0.656252, -435.393, -5.9119, 0.37", "0.864967, -437.021, -6.6279, 0.22", "1.01981, -438.225, -7.09612, 0.96", "1.15926, -439.341, -7.4397, 1.18", "1.33251, -441.047, -7.98895, 0.29", "1.43181, -442.174, -8.35016, 0.29", "1.47317, -442.679, -8.49831, 0.29", "1.51071, -443.18, -8.63729, 0.44", "1.54718, -443.933, -8.86075, 0.44", "1.58739, -445.958, -9.5403, 0.44", "1.59754, -446.712, -9.81104, 1.11", "1.59339, -448.035, -10.2704, 1.62", "1.57746, -449.378, -10.6961, 0.37", "1.52831, -451.1, -11.1627, 0.22", "1.48743, -452.04, -11.3693, 0.29", "1.43311, -452.909, -11.5015, 0.29", "1.32171, -454.06, -11.6558, 0.29", "1.1519, -455.274, -11.7814, 0.29", "0.875291, -456.749, -11.8642, 0.22", "0.757661, -457.276, -11.8632, 0.22", "0.646355, -457.698, -11.8596, 0.52", "0.427583, -458.445, -11.8496, 0.96", "0.0744201, -459.612, -11.832, 0.29", "-0.274407, -460.699, -11.8125, 0.22", "-0.80428, -462.33, -11.7826, 0.29", "-1.18166, -463.522, -11.7628, 0.29", "-1.5302, -464.635, -11.7454, 0.37", "-1.86772, -465.735, -11.7298, 1.18", "-2.16176, -466.701, -11.717, 1.92", "-2.47356, -467.723, -11.7042, 0.88", "-3.09916, -469.695, -11.6759, 0.22", "-3.48283, -470.89, -11.658, 0.29", "-3.76587, -471.76, -11.6444, 0.66", "-4.07995, -472.729, -11.6294, 1.03", "-4.50762, -474.047, -11.609, 0.22", "-4.99606, -475.531, -11.585, 0.22", "-5.55709, -477.236, -11.5574, 0.22", "-5.82157, -478.09, -11.5172, 0.29", "-6.07566, -478.943, -11.4578, 0.81", "-6.27024, -479.593, -11.3999, 0.81", "-6.53726, -480.526, -11.3032, 0.44", "-7.12068, -482.813, -11.0695, 0.15", "-7.59598, -484.76, -10.881, 0.15", "-7.82661, -485.724, -10.7982, 0.59", "-8.02047, -486.571, -10.7359, 1.99", "-8.17485, -487.299, -10.693, 2.36", "-8.77312, -490.229, -10.5693, 0.44", "-9.07821, -491.768, -10.5392, 0.22", "-9.40038, -493.4, -10.5526, 0.29", "-9.59706, -494.427, -10.5635, 0.88", "-9.74939, -495.29, -10.5754, 1.03", "-9.96284, -496.632, -10.5659, 0.37", "-10.128, -497.995, -10.5027, 0.22", "-10.2254, -499.57, -10.3443, 0.22", "-10.2659, -500.631, -10.2183, 0.96", "-10.2996, -502.1, -10.0132, 0.37", "-10.298, -503.886, -9.71596, 0.22", "-10.2475, -504.889, -9.50776, 0.44", "-10.0873, -506.307, -9.1288, 1.18" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "0.0137911, -429.605, -2.76054, 0.15", "-0.15042, -430.46, -2.39783, 0.15", "-0.225353, -430.932, -2.21886, 0.15", "-0.28231, -431.312, -2.08058, 0.44", "-0.537713, -432.772, -1.57124, 0.15", "-0.576904, -432.983, -1.50161, 0.37", "-0.629964, -433.259, -1.41578, 0.37", "-0.856525, -434.632, -1.00658, 0.07", "-1.04881, -435.771, -0.666303, 0.07", "-1.28123, -437.009, -0.310999, 0.07", "-1.39261, -437.507, -0.188186, 0.07", "-1.52226, -438.061, -0.0479071, 0.37" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "158.61, 32.288, -235.645, 0.15", "162.325, 34.3787, -241.439, 0.15", "164.931, 36.391, -247.835, 0.15", "167.484, 37.2058, -254.511, 0.15", "170.272, 38.8631, -260.931, 0.15", "172.258, 40.9966, -267.508, 0.15", "174.203, 42.6501, -274.234, 0.15", "176.197, 43.3753, -281.107, 0.15", "178.126, 44.3314, -287.971, 0.15", "179.297, 44.1195, -295.065, 0.15", "180.731, 42.9043, -302.009, 0.15", "181.738, 42.8098, -309.131, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "158.61, 32.288, -235.645, 0.07", "167.647, 35.9283, -245.866, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "218.451, -123.424, 72.8615, 0.15", "219.579, -123.752, 71.4784, 0.15", "220.853, -124.114, 70.1331, 0.15", "221.12, -124.194, 69.8922, 0.15", "221.602, -124.351, 69.5284, 0.44", "221.993, -124.477, 69.2528, 0.44", "222.961, -124.756, 68.5808, 0.15", "223.733, -124.949, 68.1442, 0.29", "224.468, -125.109, 67.7781, 0.29", "225.289, -125.257, 67.37, 0.07", "226.406, -125.372, 66.8149, 0.07", "227.4, -125.404, 66.3454, 0.07", "227.73, -125.387, 66.2023, 0.37", "228.414, -125.319, 65.9353, 1.11", "228.657, -125.286, 65.8521, 1.11", "229.946, -125.079, 65.4785, 0.22", "231.382, -124.872, 65.1861, 0.15", "232.365, -124.733, 64.9517, 0.15", "233.021, -124.625, 64.7082, 0.15", "233.857, -124.459, 64.3006, 0.15", "234.312, -124.352, 64.0292, 0.74", "235.085, -124.133, 63.4723, 0.15", "236.567, -123.61, 62.2971, 0.15", "238.057, -123.057, 61.2217, 0.15", "238.537, -122.877, 60.9358, 0.74", "238.941, -122.746, 60.754, 0.81", "239.34, -122.645, 60.606, 0.37", "240.699, -122.418, 60.2359, 0.07", "242.158, -122.388, 60.1024, 0.07", "243.212, -122.528, 60.1668, 0.37", "244.481, -122.887, 60.321, 0.07", "246.121, -123.56, 60.578, 0.07", "246.676, -123.855, 60.6794, 0.59", "248.158, -124.826, 60.981, 0.07", "249.758, -125.995, 61.3121, 0.07", "250.675, -126.717, 61.6175, 0.15", "251.231, -127.18, 61.8816, 0.37", "251.724, -127.6, 62.1636, 0.66", "252.168, -127.981, 62.4104, 0.59", "252.661, -128.412, 62.647, 0.66", "254.044, -129.675, 63.2431, 0.07", "255.004, -130.577, 63.6655, 0.07", "255.611, -131.17, 63.9213, 0.07", "256.049, -131.595, 64.0766, 0.52", "257.078, -132.573, 64.3604, 0.07", "257.682, -133.097, 64.4614, 0.07", "257.922, -133.267, 64.4436, 0.07", "258.572, -133.627, 64.3164, 0.44", "259.885, -134.212, 64.0647, 0.15", "260.365, -134.383, 63.9988, 0.37", "261.193, -134.595, 63.9269, 0.59", "263.227, -135.018, 63.8763, 0.88", "263.887, -135.149, 63.8355, 0.29", "265.545, -135.494, 63.7306, 0.15", "266.811, -135.754, 63.6618, 0.15", "267.506, -135.89, 63.6345, 0.22", "268.079, -135.998, 63.6253, 0.52", "270.292, -136.361, 63.5904, 0.52", "271.639, -136.533, 63.4648, 0.37", "273.479, -136.714, 63.14, 0.15", "274.71, -136.822, 62.8502, 0.15", "275.259, -136.871, 62.659, 0.15", "276.074, -136.95, 62.3073, 0.66", "276.429, -137.006, 62.1105, 0.66", "277.32, -137.245, 61.3989, 0.07", "277.884, -137.486, 60.8615, 0.22", "279.691, -138.471, 59.1488, 0.07", "280.22, -138.805, 58.6591, 0.22", "281.675, -139.847, 57.3831, 0.07", "282.23, -140.292, 56.9302, 0.22", "283.342, -141.288, 56.1332, 0.07", "284.217, -142.153, 55.6815, 0.07", "284.776, -142.745, 55.5726, 0.88", "285.256, -143.251, 55.5828, 0.88", "286.085, -144.131, 55.7584, 0.22", "286.701, -144.795, 55.9379, 0.59", "287.75, -145.97, 56.3151, 0.07", "289.145, -147.561, 56.8116, 0.07", "289.853, -148.385, 57.1102, 0.07", "290.319, -148.94, 57.3191, 1.11", "290.992, -149.749, 57.6292, 0.15", "291.453, -150.308, 57.8527, 0.59", "292.655, -151.774, 58.472, 0.15", "293.495, -152.824, 58.884, 0.15", "293.882, -153.313, 59.0844, 0.29", "294.462, -154.01, 59.3922, 1.25", "295.634, -155.316, 60.0478, 0.07", "296.192, -155.879, 60.3825, 0.07", "296.724, -156.352, 60.6504, 0.29", "297.117, -156.666, 60.7829, 0.29", "297.926, -157.251, 60.9634, 0.07", "298.541, -157.646, 61.0073, 0.22", "299.44, -158.137, 60.8983, 0.07", "301.526, -159.26, 60.1794, 0.07", "301.889, -159.448, 60.0112, 0.29", "302.362, -159.69, 59.7619, 0.74", "302.63, -159.837, 59.6101, 0.96", "303.124, -160.125, 59.3312, 0.44", "304.725, -161.054, 58.5169, 0.15", "305.309, -161.403, 58.2387, 0.15", "305.989, -161.829, 57.878, 0.29", "306.625, -162.223, 57.5609, 0.07", "307.234, -162.574, 57.3111, 0.88", "307.731, -162.829, 57.15, 0.88", "309.71, -163.761, 56.7086, 0.15", "310.645, -164.175, 56.5286, 0.22", "311.898, -164.689, 56.3323, 0.07", "312.93, -165.129, 56.1704, 0.07", "313.369, -165.343, 56.0999, 0.37", "313.664, -165.515, 56.0564, 0.37", "314.727, -166.274, 55.8637, 0.15", "315.206, -166.698, 55.6854, 0.88", "316.37, -167.923, 55.0109, 0.15", "316.97, -168.614, 54.5814, 0.15", "317.336, -169.03, 54.2924, 0.44", "318.249, -170.026, 53.6278, 0.07", "318.792, -170.583, 53.2846, 0.07", "319.27, -170.982, 53.0892, 0.37", "319.57, -171.121, 53.1243, 0.37", "320.353, -171.285, 53.5804, 0.07", "322.047, -171.416, 54.9659, 0.07", "322.698, -171.41, 55.5982, 0.07", "322.927, -171.402, 55.8361, 0.37", "323.878, -171.355, 56.8317, 0.59", "324.431, -171.325, 57.3806, 0.59", "325.35, -171.269, 58.191, 0.22", "327.039, -171.153, 59.2595, 0.22", "328.308, -171.061, 59.823, 0.07", "329.312, -170.985, 60.0791, 0.07", "330.119, -170.907, 60.1923, 0.88", "331.402, -170.747, 60.3898, 0.07", "334.412, -170.302, 60.8629, 0.22", "335.275, -170.168, 60.9977, 0.07", "335.999, -170.05, 61.1457, 0.52", "338.633, -169.665, 61.8508, 0.07", "340.748, -169.366, 62.5723, 0.07", "341.112, -169.318, 62.7252, 0.29", "342.003, -169.203, 63.1618, 0.59", "342.757, -169.103, 63.4768, 0.59", "344.131, -168.877, 63.9177, 0.07", "344.735, -168.741, 63.9983, 0.07", "345.06, -168.637, 63.9938, 0.29", "345.374, -168.5, 63.9617, 0.29", "346.43, -167.917, 63.6473, 0.07", "347.182, -167.462, 63.3092, 0.37", "348.048, -166.935, 62.7985, 0.15", "349.196, -166.281, 62.047, 0.37", "350.382, -165.655, 61.2301, 0.07", "352.104, -164.834, 60.0366, 0.07", "352.587, -164.626, 59.6998, 0.37", "353.57, -164.238, 59.0375, 0.07", "354.054, -164.073, 58.7629, 0.07", "354.567, -163.925, 58.5604, 0.22", "355.817, -163.64, 58.2353, 0.07", "356.455, -163.498, 58.1552, 0.37", "356.919, -163.396, 58.1174, 0.74", "358.116, -163.176, 58.0395, 0.07", "358.765, -163.088, 57.9883, 0.07", "359.362, -163.055, 57.9368, 0.22", "360.164, -163.067, 57.9213, 0.07", "360.984, -163.129, 57.9451, 0.15", "363.196, -163.445, 58.1894, 0.07", "363.867, -163.586, 58.3129, 0.44", "365.213, -163.945, 58.6366, 0.07", "366.9, -164.487, 59.1284, 0.07", "367.585, -164.75, 59.3633, 0.29", "368.789, -165.297, 59.8482, 0.29", "369.443, -165.664, 60.1603, 0.07", "370.193, -166.144, 60.5665, 0.07", "370.399, -166.305, 60.7012, 0.07", "370.787, -166.657, 60.9716, 0.29", "371.188, -167.037, 61.3218, 0.07", "371.564, -167.408, 61.6765, 0.29", "372.462, -168.342, 62.5653, 0.07", "373.155, -169.102, 63.2624, 0.22", "373.855, -169.843, 63.9354, 0.07", "374.499, -170.516, 64.5263, 0.07", "374.957, -170.977, 64.9075, 0.44", "375.775, -171.719, 65.5405, 0.07", "376.073, -171.946, 65.7679, 0.15", "376.814, -172.443, 66.2426, 0.07", "377.208, -172.675, 66.4718, 0.07", "377.495, -172.81, 66.6415, 0.22", "378.954, -173.236, 67.7044, 0.07", "380.408, -173.489, 68.9204, 0.07", "382.486, -173.657, 70.7612, 0.07", "382.941, -173.641, 71.2003, 0.29", "383.57, -173.556, 71.8696, 0.29", "384.192, -173.408, 72.6882, 0.29" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "218.451, -123.424, 72.8615, 0.07", "219.88, -122.954, 72.1502, 0.07", "221.008, -122.582, 71.5343, 0.07", "221.683, -122.347, 71.1459, 0.29", "223.398, -121.689, 70.2407, 0.15", "224.11, -121.397, 69.898, 0.52", "225.514, -120.789, 69.2717, 0.07", "226.808, -120.183, 68.7967, 0.07", "227.438, -119.846, 68.6528, 0.07", "228.663, -119.092, 68.5145, 0.22", "229.139, -118.754, 68.5236, 0.74", "229.554, -118.429, 68.5784, 1.33", "230.867, -117.321, 68.8571, 0.22", "231.483, -116.756, 69.0008, 0.22", "232.153, -116.109, 69.0854, 0.29", "233.594, -114.655, 69.1055, 0.07", "234.843, -113.4, 68.955, 0.07", "235.511, -112.765, 68.7467, 0.37", "237.074, -111.387, 67.8913, 0.07", "238.329, -110.422, 66.9867, 0.07", "238.719, -110.138, 66.6535, 0.22", "239.999, -109.331, 65.2741, 0.07", "241.269, -108.707, 63.6325, 0.07", "241.869, -108.516, 62.7626, 0.07", "242.189, -108.507, 62.2337, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-102.198, -167.294, 17.1905, 0.29", "-102.653, -169.172, 16.9802, 0.29", "-102.944, -170.453, 16.8803, 0.22", "-103.229, -171.772, 16.804, 0.15", "-103.421, -172.735, 16.761, 0.22", "-103.637, -173.903, 16.7223, 0.29", "-103.782, -174.74, 16.7338, 0.22", "-103.916, -175.711, 16.8149, 0.37", "-103.99, -176.294, 16.9083, 0.74", "-104.062, -176.873, 17.0184, 0.88", "-104.191, -177.815, 17.2151, 1.47", "-104.426, -179.373, 17.5531, 0.22", "-104.615, -180.547, 17.8031, 0.15", "-104.748, -181.32, 17.9676, 0.15", "-104.826, -181.764, 18.0614, 0.44", "-104.916, -182.337, 18.1748, 0.44", "-105.007, -183.23, 18.2615, 0.15", "-105.025, -184.2, 18.1713, 0.15", "-104.982, -184.952, 17.984, 0.22", "-104.934, -185.467, 17.7745, 0.52", "-104.871, -186.118, 17.4256, 1.03", "-104.787, -187.549, 16.3991, 0.22", "-104.8, -188.382, 15.5943, 0.22", "-104.834, -188.655, 15.28, 0.22", "-104.92, -188.959, 14.8991, 0.22", "-105.1, -189.329, 14.4211, 0.96", "-105.59, -190.01, 13.4938, 0.22", "-106.04, -190.471, 12.8782, 0.22", "-106.297, -190.697, 12.5567, 0.29", "-106.872, -191.159, 11.8538, 0.15", "-107.355, -191.517, 11.3029, 0.29", "-107.91, -191.89, 10.7147, 0.29", "-108.256, -192.099, 10.3807, 0.15", "-108.723, -192.418, 9.95629, 0.15", "-109.071, -192.707, 9.65959, 0.59", "-109.575, -193.258, 9.25789, 0.15", "-109.796, -193.579, 9.07691, 0.44", "-110.399, -194.654, 8.59005, 0.22", "-110.8, -195.479, 8.27202, 1.4", "-111.255, -196.495, 7.93514, 0.44", "-111.702, -197.551, 7.61589, 0.44", "-112.157, -198.662, 7.31973, 0.29", "-112.516, -199.534, 7.12411, 0.66", "-112.961, -200.617, 6.93685, 0.15", "-113.539, -201.967, 6.684, 0.15", "-113.809, -202.597, 6.56618, 0.15", "-114.07, -203.162, 6.47522, 0.29", "-114.283, -203.6, 6.41423, 0.74", "-114.64, -204.347, 6.28635, 0.44", "-115.154, -205.447, 6.0799, 0.15", "-115.472, -206.167, 5.94859, 0.15", "-115.874, -207.171, 5.77882, 0.29", "-116.213, -208.084, 5.64385, 0.29", "-116.524, -209.01, 5.5303, 0.74", "-116.742, -209.73, 5.46012, 1.18", "-117.019, -210.74, 5.3968, 0.44", "-117.465, -212.251, 5.32285, 0.22", "-117.74, -213.134, 5.29382, 0.29", "-117.982, -213.835, 5.2865, 0.29", "-118.195, -214.403, 5.29587, 0.88", "-118.426, -214.981, 5.30583, 1.47", "-119.164, -216.647, 5.33814, 0.22", "-119.607, -217.574, 5.35933, 0.15", "-120.051, -218.489, 5.38445, 0.22", "-120.343, -219.096, 5.40432, 0.22", "-120.571, -219.571, 5.40466, 0.66", "-120.831, -220.152, 5.38701, 0.66", "-121.213, -221.044, 5.33531, 0.15", "-121.569, -221.936, 5.27314, 0.15", "-121.809, -222.587, 5.22348, 0.74", "-122.32, -224.161, 5.10945, 0.07", "-122.653, -225.425, 5.00522, 0.07", "-122.761, -225.943, 4.95947, 0.74", "-122.968, -227.603, 4.72037, 0.07", "-122.98, -227.972, 4.64962, 0.22", "-122.951, -229.505, 4.3425, 0.07", "-122.816, -230.874, 4.06058, 0.07", "-122.756, -231.255, 3.96238, 0.22", "-122.38, -233.086, 3.39139, 0.07", "-122.237, -233.61, 3.16485, 0.81", "-123.666, -243.451, 2.25512, 0.81", "-126.029, -253.149, 2.55546, 0.81", "-128.14, -262.877, 3.35978, 0.81", "-130.565, -272.227, 5.89155, 0.81", "-131.897, -281.759, 8.55383, 0.81", "-133.773, -290.939, 12.0101, 0.81", "-135.852, -300.584, 13.5496, 0.81", "-138.832, -309.686, 16.377, 0.81", "-142.702, -318.39, 19.3763, 0.81", "-144.539, -327.416, 23.2335, 0.81", "-145.164, -336.046, 28.2189, 0.81", "-146.415, -344.21, 33.8325, 0.81", "-149.734, -351.185, 40.1619, 0.81", "-153.784, -356.852, 47.3173, 0.81", "-158.562, -363.353, 53.2023, 0.81", "-164.115, -367.665, 60.2943, 0.81", "-168.336, -372.918, 67.6643, 0.81", "-171.487, -378.075, 75.6138, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-102.198, -167.294, 17.1905, 0.15", "-103.549, -168.688, 17.4933, 0.15", "-104.22, -169.38, 17.6437, 0.15", "-104.994, -170.179, 17.8172, 0.15", "-105.337, -170.533, 17.8941, 0.88", "-105.969, -171.185, 18.0356, 1.7", "-106.429, -171.659, 18.1387, 1.7" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "28.4829, -136.185, 155.513, 0.07", "29.3233, -136.791, 156.838, 0.07", "30.3467, -137.618, 158.469, 0.07", "31.108, -138.294, 159.691, 0.07", "31.286, -138.461, 160.012, 0.29", "32.2206, -139.315, 161.882, 0.29", "32.5176, -139.579, 162.561, 0.29", "32.689, -139.739, 163.091, 0.15", "32.9964, -139.955, 164.059, 0.37", "33.6075, -140.263, 165.904, 0.37", "33.9931, -140.393, 166.897, 0.37", "34.709, -140.517, 168.437, 0.37", "35.9807, -140.616, 170.849, 0.81", "37.0984, -140.64, 172.761, 0.15", "37.5912, -140.627, 173.485, 0.15", "38.2565, -140.589, 174.335, 0.37", "38.7041, -140.548, 174.849, 0.37", "40.2605, -140.372, 176.541, 0.07", "41.1848, -140.27, 177.624, 0.07", "41.6492, -140.238, 178.269, 0.59", "42.7606, -140.219, 179.976, 0.15", "43.1272, -140.24, 180.59, 0.29", "44.3239, -140.386, 182.587, 0.15", "45.2296, -140.558, 184.053, 0.15", "46.2727, -140.904, 185.96, 0.15", "46.4579, -141.002, 186.376, 0.15", "46.8617, -141.297, 187.414, 0.44", "47.356, -141.695, 188.771, 0.22", "47.86, -142.123, 190.241, 0.29", "48.8689, -143.072, 193.435, 0.15", "49.6072, -143.993, 196.356, 0.15", "49.8172, -144.329, 197.379, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "28.4829, -136.185, 155.513, 0.07", "29.8945, -137.563, 154.514, 0.07", "30.6251, -138.384, 154.131, 0.07", "31.2456, -139.234, 153.91, 0.29", "31.4934, -139.643, 153.884, 0.44", "31.8682, -140.391, 154.052, 0.15", "32.0597, -140.836, 154.239, 0.37", "32.5614, -142.52, 155.356, 0.22", "32.6605, -142.985, 155.716, 0.37", "32.8094, -143.871, 156.451, 0.37", "32.9233, -145.315, 157.802, 0.15", "32.9319, -146.167, 158.662, 0.15", "32.9194, -146.543, 159.083, 0.37", "32.8944, -147.027, 159.653, 0.37", "32.8736, -147.284, 159.987, 0.44", "32.7413, -148.572, 161.823, 0.22", "32.7478, -148.901, 162.325, 0.22", "32.9172, -149.615, 163.563, 0.22", "33.0527, -149.882, 164.068, 0.22", "33.242, -150.114, 164.515, 0.59", "33.7154, -150.568, 165.297, 0.15", "34.5801, -151.337, 166.599, 0.15", "34.9844, -151.751, 167.287, 0.15", "35.2596, -152.08, 167.788, 0.37", "35.4681, -152.369, 168.218, 0.74", "35.7854, -152.991, 169.082, 0.22", "36.4184, -155.086, 171.545, 0.22", "36.5414, -155.786, 172.259, 0.66", "36.6438, -156.684, 173.1, 0.22", "36.6923, -157.327, 173.658, 0.44", "36.7654, -158.819, 174.837, 0.15", "36.8107, -160.126, 175.734, 0.22", "36.855, -161.557, 176.482, 0.22", "36.8557, -161.897, 176.655, 0.22", "36.839, -162.403, 176.906, 0.44", "36.8128, -163.05, 177.225, 0.44", "36.7798, -164.105, 177.842, 0.22", "36.7381, -165.009, 178.481, 0.37", "36.6935, -165.823, 179.073, 0.37", "36.6717, -166.36, 179.439, 0.59", "36.6472, -167.394, 180.103, 0.07", "36.6405, -168.977, 181.018, 0.15", "36.661, -169.821, 181.439, 0.15", "36.7117, -170.602, 181.783, 0.96", "36.9249, -172.699, 182.602, 0.15", "36.9914, -173.16, 182.749, 0.59", "37.3982, -175.222, 183.244, 0.22", "37.5824, -175.942, 183.363, 0.37", "37.8169, -176.614, 183.46, 0.74", "37.9748, -176.953, 183.519, 0.96", "38.7739, -178.225, 183.68, 0.22", "39.2673, -178.888, 183.716, 0.22", "39.758, -179.447, 183.648, 0.59", "40.7791, -180.559, 183.289, 0.15", "41.4973, -181.34, 182.871, 0.15", "42.4752, -182.397, 182.071, 0.59", "42.6475, -182.582, 181.901, 0.59", "43.5588, -183.624, 180.885, 0.15", "44.3618, -184.611, 179.898, 0.59", "44.967, -185.428, 179.103, 0.22", "45.6124, -186.348, 178.275, 0.81", "46.5248, -187.724, 177.362, 0.22", "46.8118, -188.173, 177.157, 0.22", "47.1874, -188.773, 177.054, 0.52", "47.9295, -189.997, 177.139, 0.15", "48.2396, -190.505, 177.262, 0.37", "49.4785, -192.361, 178.095, 0.07", "50.0142, -193.06, 178.528, 0.29", "50.6271, -193.695, 178.999, 0.29", "51.2454, -194.211, 179.44, 0.15", "51.7491, -194.57, 179.779, 0.29", "53.0002, -195.437, 180.583, 0.22", "53.4606, -195.751, 180.891, 0.74", "54.4303, -196.445, 181.66, 0.15", "54.984, -196.925, 182.181, 0.15", "55.4665, -197.476, 182.728, 0.52", "56.077, -198.521, 183.699, 0.22", "56.582, -199.852, 184.848, 0.22", "56.7466, -200.417, 185.33, 0.96", "56.9978, -201.475, 186.263, 0.29", "57.1837, -202.443, 187.191, 0.59", "57.3853, -203.632, 188.384, 0.29", "57.4727, -204.458, 189.214, 0.29", "57.502, -204.877, 189.637, 0.22", "57.528, -205.743, 190.602, 0.74", "57.5247, -207.198, 192.458, 0.07", "57.5166, -207.618, 193.026, 0.07", "57.4936, -208.155, 193.745, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-10.0873, -506.307, -9.1288, 0.22", "-10.0217, -507.335, -9.28974, 0.22", "-9.98585, -508.381, -9.35045, 0.15", "-9.96515, -509.161, -9.24084, 0.15", "-9.96585, -509.409, -9.17855, 0.37", "-9.97445, -509.669, -9.09915, 0.81", "-9.99655, -510.101, -8.96281, 0.81", "-10.0508, -511.062, -8.62625, 0.22", "-10.1159, -512.337, -8.1805, 0.22", "-10.1571, -513.309, -7.86354, 0.29", "-10.1958, -513.942, -7.68382, 0.88", "-10.2539, -514.762, -7.47167, 1.62", "-10.3647, -516.002, -7.20142, 0.37", "-10.4406, -516.707, -7.08687, 0.52", "-10.5234, -517.353, -7.0105, 0.66", "-10.6548, -518.165, -6.90771, 0.22", "-10.8206, -518.988, -6.7975, 0.22", "-11.0946, -520.059, -6.63937, 0.07", "-11.2507, -520.577, -6.53675, 0.07", "-11.4042, -521.067, -6.4289, 0.88", "-11.7493, -522.181, -6.18153, 0.15", "-11.9656, -522.812, -6.04724, 0.44", "-12.2612, -523.557, -5.87419, 0.22", "-12.7552, -524.709, -5.5754, 0.22", "-12.9781, -525.2, -5.44032, 0.88", "-13.3457, -525.972, -5.21669, 1.4", "-14.0493, -527.366, -4.80526, 0.15", "-14.742, -528.638, -4.45103, 0.15", "-14.9803, -529.062, -4.34559, 0.15", "-15.1206, -529.308, -4.29499, 0.52", "-15.399, -529.807, -4.19751, 1.03", "-15.8743, -530.697, -4.04769, 0.22", "-16.4395, -531.874, -3.90188, 0.15", "-16.9214, -532.925, -3.81308, 0.15", "-17.0549, -533.23, -3.78907, 0.66", "-17.2766, -533.764, -3.7515, 1.33", "-17.8549, -535.246, -3.61756, 0.15", "-18.3042, -536.459, -3.59901, 0.15", "-18.5136, -537.027, -3.62327, 0.66", "-18.6599, -537.391, -3.6543, 0.66", "-19.4206, -539.209, -3.87696, 0.07", "-19.9725, -540.504, -4.08975, 0.07", "-20.8049, -542.54, -4.40094, 0.37", "-20.9565, -542.931, -4.434, 0.74", "-21.2185, -543.646, -4.44196, 0.96", "-21.4372, -544.295, -4.34278, 0.96", "-21.4875, -544.46, -4.288, 0.96", "-21.9349, -546.055, -3.58331, 0.07", "-22.2955, -547.367, -2.87867, 0.07", "-22.4245, -547.861, -2.60472, 0.15", "-22.8333, -549.527, -1.64591, 0.07", "-23.0548, -550.312, -1.13395, 0.07", "-23.1665, -550.675, -0.866317, 0.07", "-23.3257, -551.128, -0.47725, 0.52", "-23.5584, -551.75, 0.13385, 1.11", "-23.7558, -552.263, 0.720167, 1.25", "-24.1488, -553.334, 2.1796, 0.15", "-24.4884, -554.24, 3.48556, 0.15", "-24.6767, -554.728, 4.18554, 0.15", "-24.8831, -555.252, 4.93072, 0.74", "-25.3543, -556.384, 6.46809, 0.15", "-25.8926, -557.645, 8.06972, 0.74", "-26.2164, -558.41, 8.93796, 0.15", "-26.4415, -558.908, 9.41588, 0.29", "-26.9633, -560.054, 10.3753, 0.07", "-27.2455, -560.666, 10.8336, 0.07", "-27.3532, -560.89, 10.9653, 0.96", "-27.5437, -561.28, 11.1505, 0.74", "-28.0951, -562.545, 11.7759, 0.15", "-28.5694, -563.738, 12.3278, 0.15", "-28.7588, -564.262, 12.5374, 0.66", "-28.8395, -564.504, 12.6313, 0.66", "-29.1466, -565.537, 12.9922, 0.07", "-29.4033, -566.494, 13.2321, 0.07", "-29.6817, -567.652, 13.3902, 0.07", "-29.8289, -568.248, 13.3779, 0.07", "-29.9737, -568.78, 13.3186, 0.29", "-30.258, -569.801, 13.1274, 0.15", "-30.6354, -570.994, 12.7343, 0.15", "-30.8114, -571.449, 12.5117, 0.29", "-31.0918, -572.102, 12.1433, 0.81", "-31.2547, -572.431, 11.9373, 0.96", "-31.7542, -573.312, 11.3349, 0.22", "-32.4313, -574.382, 10.5862, 0.15", "-33.1995, -575.56, 9.81927, 0.15", "-33.4824, -575.989, 9.54305, 0.22", "-34.0914, -576.898, 8.95175, 0.07", "-34.4489, -577.426, 8.59127, 0.07", "-34.7156, -577.801, 8.33081, 0.66", "-35.0536, -578.28, 8.01824, 1.25", "-35.6463, -579.1, 7.46422, 0.15", "-36.2399, -579.911, 6.90077, 0.15", "-36.56, -580.343, 6.60278, 0.15", "-36.8523, -580.723, 6.33319, 0.29", "-37.5255, -581.555, 5.72128, 0.07", "-38.0947, -582.238, 5.22628, 0.07", "-38.4471, -582.66, 4.94424, 0.88", "-39.0313, -583.388, 4.55265, 0.15", "-39.3433, -583.804, 4.38097, 0.22", "-39.8284, -584.507, 4.17137, 0.22", "-40.0805, -584.906, 4.09902, 0.59", "-40.2431, -585.182, 4.07134, 0.74", "-40.8942, -586.368, 4.00634, 0.07", "-41.5066, -587.623, 3.98697, 0.07", "-41.7889, -588.269, 3.98589, 0.07", "-41.8976, -588.576, 4.00896, 0.52", "-42.0223, -588.996, 4.0586, 0.52", "-42.2302, -589.822, 4.17121, 0.07", "-42.4063, -590.727, 4.31137, 0.07", "-42.493, -591.235, 4.38627, 0.66", "-42.7571, -592.955, 4.59773, 0.15", "-42.8168, -593.304, 4.62905, 0.15", "-42.9764, -594.207, 4.68343, 0.15", "-43.0814, -594.792, 4.66621, 0.15", "-43.2808, -595.788, 4.54456, 0.15", "-43.5101, -596.774, 4.30517, 0.15", "-43.7769, -597.831, 3.93637, 0.15", "-43.8737, -598.184, 3.80613, 0.37", "-44.3485, -599.701, 3.23016, 0.15", "-44.5891, -600.419, 2.93557, 0.15", "-44.9552, -601.42, 2.48648, 0.37", "-45.1142, -601.805, 2.2926, 0.37", "-45.5185, -602.716, 1.79901, 0.37", "-45.7773, -603.215, 1.53575, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-10.0873, -506.307, -9.1288, 0.15", "-10.4916, -507.214, -8.55742, 0.15", "-10.7274, -507.735, -8.23154, 0.44", "-11.3386, -508.99, -7.48669, 0.15", "-12.0001, -510.28, -6.75889, 0.15", "-12.3603, -510.926, -6.37174, 0.15", "-12.5989, -511.321, -6.11296, 0.81", "-13.6314, -512.845, -4.96847, 0.15", "-14.5521, -514.0, -4.01855, 0.15", "-14.8998, -514.357, -3.69913, 0.66", "-15.8679, -515.183, -2.91701, 0.15", "-16.8005, -515.864, -2.22693, 0.15", "-17.551, -516.332, -1.67876, 0.15", "-18.0932, -516.608, -1.30459, 0.15", "-18.5235, -516.833, -1.02221, 0.88", "-18.8609, -517.036, -0.819647, 0.88", "-20.1477, -517.976, -0.163885, 0.07", "-20.6311, -518.394, 0.0596412, 0.07", "-20.9709, -518.721, 0.219075, 0.66", "-22.2969, -520.14, 0.884517, 0.07", "-22.6417, -520.54, 1.06536, 0.44", "-23.1448, -521.166, 1.3242, 0.07", "-23.3591, -521.457, 1.41146, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-45.7773, -603.215, 1.53575, 0.07", "-46.7452, -603.514, 2.9027, 0.07", "-47.3363, -603.707, 3.69495, 0.15", "-48.0236, -603.989, 4.64181, 0.07", "-48.3688, -604.142, 5.04532, 0.07", "-48.5556, -604.223, 5.23625, 0.37", "-49.2267, -604.533, 5.84388, 0.07", "-49.5939, -604.732, 6.06457, 0.22", "-50.5192, -605.258, 6.44453, 0.07", "-51.6888, -605.939, 6.76244, 0.07", "-52.2069, -606.244, 6.83402, 0.37", "-53.0222, -606.717, 6.8159, 0.07", "-54.2634, -607.417, 6.59368, 0.07", "-54.7048, -607.664, 6.45713, 0.22", "-55.1516, -607.91, 6.25678, 0.22", "-56.0822, -608.414, 5.73622, 0.07", "-56.9626, -608.85, 5.15167, 0.07", "-57.6248, -609.153, 4.67447, 0.07", "-58.2269, -609.41, 4.21796, 0.22", "-58.806, -609.65, 3.7543, 0.52", "-59.6287, -609.991, 3.07125, 0.22", "-60.6424, -610.382, 2.16072, 0.66" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-45.7773, -603.215, 1.53575, 0.07", "-45.7403, -603.753, 1.49476, 0.07", "-45.7325, -604.01, 1.4797, 0.15", "-45.7457, -604.847, 1.44974, 0.07", "-45.7602, -605.112, 1.44303, 0.15", "-45.7814, -605.381, 1.43833, 0.15", "-45.8444, -606.181, 1.42435, 0.07", "-45.8794, -606.491, 1.42427, 0.29", "-45.9671, -607.085, 1.43226, 0.07", "-46.0919, -607.727, 1.44843, 0.07", "-46.1416, -607.96, 1.45619, 0.29" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_41", "dend_24", "dend_17", "dend_14", "dend_7", "dend_0", "dend_51", "dend_42", "dend_36", "dend_25", "dend_21", "dend_18", "dend_16", "dend_15", "dend_11", "dend_8", "dend_4", "dend_1", "dend_53", "dend_52", "dend_46", "dend_43", "dend_38", "dend_37", "dend_31", "dend_26", "dend_23", "dend_22", "dend_20", "dend_19", "dend_13", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_57", "dend_54", "dend_50", "dend_47", "dend_45", "dend_44", "dend_40", "dend_39", "dend_35", "dend_32", "dend_28", "dend_27", "dend_59", "dend_58", "dend_56", "dend_55", "dend_49", "dend_48", "dend_34", "dend_33", "dend_30", "dend_29", "dend_61", "dend_60", "dend_63", "dend_62" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_41", "dend_24", "dend_17", "dend_14", "dend_7", "dend_0", "dend_51", "dend_42", "dend_36", "dend_25", "dend_21", "dend_18", "dend_16", "dend_15", "dend_11", "dend_8", "dend_4", "dend_1", "dend_53", "dend_52", "dend_46", "dend_43", "dend_38", "dend_37", "dend_31", "dend_26", "dend_23", "dend_22", "dend_20", "dend_19", "dend_13", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_57", "dend_54", "dend_50", "dend_47", "dend_45", "dend_44", "dend_40", "dend_39", "dend_35", "dend_32", "dend_28", "dend_27", "dend_59", "dend_58", "dend_56", "dend_55", "dend_49", "dend_48", "dend_34", "dend_33", "dend_30", "dend_29", "dend_61", "dend_60", "dend_63", "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_LBC_b66dd6b653_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_41
create dend_51
public dend_51
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_66
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_41(0), soma_0(0.499999925181861)
    connect dend_24(0), soma_0(0.499999925181861)
    connect dend_17(0), soma_0(0.499999925181861)
    connect dend_14(0), soma_0(0.499999925181861)
    connect dend_7(0), soma_0(0.499999925181861)
    connect dend_0(0), soma_0(0.499999925181861)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 5.31735, -9.24063, 0.0, 4.15585 ) }
    soma_0 { pt3dadd( 4.69678, -8.30052, 0.0, 7.05537 ) }
    soma_0 { pt3dadd( 4.07621, -7.3604, 0.0, 9.49099 ) }
    soma_0 { pt3dadd( 3.45565, -6.42028, 0.0, 11.817 ) }
    soma_0 { pt3dadd( 2.83508, -5.48017, 0.0, 13.4599 ) }
    soma_0 { pt3dadd( 2.21451, -4.54005, 0.0, 14.7908 ) }
    soma_0 { pt3dadd( 1.59394, -3.59994, 0.0, 16.0669 ) }
    soma_0 { pt3dadd( 0.973375, -2.65982, 0.0, 17.0826 ) }
    soma_0 { pt3dadd( 0.352808, -1.7197, 0.0, 17.8648 ) }
    soma_0 { pt3dadd( -0.26776, -0.779586, 0.0, 18.3637 ) }
    soma_0 { pt3dadd( -0.888328, 0.160531, 0.0, 18.8035 ) }
    soma_0 { pt3dadd( -1.5089, 1.10065, 0.0, 19.2009 ) }
    soma_0 { pt3dadd( -2.12946, 2.04076, 0.0, 19.0899 ) }
    soma_0 { pt3dadd( -2.75003, 2.98088, 0.0, 18.8821 ) }
    soma_0 { pt3dadd( -3.3706, 3.921, 0.0, 18.6116 ) }
    soma_0 { pt3dadd( -3.99117, 4.86111, 0.0, 17.4033 ) }
    soma_0 { pt3dadd( -4.61173, 5.80123, 0.0, 16.1027 ) }
    soma_0 { pt3dadd( -5.2323, 6.74135, 0.0, 14.2403 ) }
    soma_0 { pt3dadd( -5.85287, 7.68146, 0.0, 11.7641 ) }
    soma_0 { pt3dadd( -6.47344, 8.62158, 0.0, 8.46221 ) }
    soma_0 { pt3dadd( -7.094, 9.5617, 0.0, 4.77037 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.24584, -7.07805, -7.59, 7.74 ) }
    dend_41 { pt3dadd( 6.24584, -7.07805, -7.59, 7.74 ) }
    dend_41 { pt3dadd( 6.46749, -7.51964, -7.51064, 6.71 ) }
    dend_41 { pt3dadd( 6.87838, -8.3382, -7.36353, 6.71 ) }
    dend_41 { pt3dadd( 7.3368, -9.25148, -7.19939, 5.68 ) }
    dend_41 { pt3dadd( 7.91543, -10.4042, -6.99222, 5.09 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 27/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -8.43415, -4.97801, 4.28, 6.78 ) }
    dend_24 { pt3dadd( -8.43415, -4.97801, 4.28, 6.78 ) }
    dend_24 { pt3dadd( -9.85494, -7.1092, 3.25656, 4.79 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 8.84582, -5.66801, -7.77, 1.99 ) }
    dend_17 { pt3dadd( 8.84582, -5.66801, -7.77, 1.99 ) }
    dend_17 { pt3dadd( 8.94278, -6.39734, -8.84629, 1.99 ) }
    dend_17 { pt3dadd( 9.0889, -8.28006, -11.5088, 1.84 ) }
    dend_17 { pt3dadd( 9.23083, -10.213, -14.1441, 1.62 ) }
    dend_17 { pt3dadd( 9.45898, -12.1591, -16.6934, 1.47 ) }
    dend_17 { pt3dadd( 9.63601, -13.6691, -18.6716, 1.18 ) }
    dend_17 { pt3dadd( 9.77271, -15.0261, -20.4574, 1.4 ) }
    dend_17 { pt3dadd( 9.81087, -15.5942, -21.2118, 1.77 ) }
    dend_17 { pt3dadd( 9.85162, -17.0004, -22.9115, 2.06 ) }
    dend_17 { pt3dadd( 9.95098, -18.8302, -24.9084, 2.58 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 6.40587, 2.88198, -15.77, 2.06 ) }
    dend_14 { pt3dadd( 6.40587, 2.88198, -15.77, 2.06 ) }
    dend_14 { pt3dadd( 6.9178, 3.08979, -16.8729, 1.55 ) }
    dend_14 { pt3dadd( 7.34169, 3.33175, -17.8872, 1.4 ) }
    dend_14 { pt3dadd( 8.02538, 3.80231, -19.5824, 1.25 ) }
    dend_14 { pt3dadd( 8.67884, 4.24318, -21.0437, 1.47 ) }
    dend_14 { pt3dadd( 9.13839, 4.53805, -21.9773, 1.47 ) }
    dend_14 { pt3dadd( 9.37859, 4.70354, -22.4246, 1.47 ) }
    dend_14 { pt3dadd( 10.0944, 5.21904, -23.6757, 1.18 ) }
    dend_14 { pt3dadd( 11.0358, 5.79446, -25.0613, 1.18 ) }
    dend_14 { pt3dadd( 11.6984, 6.08846, -25.8483, 1.33 ) }
    dend_14 { pt3dadd( 12.472, 6.32058, -26.5966, 1.11 ) }
    dend_14 { pt3dadd( 13.3007, 6.46855, -27.2674, 0.81 ) }
    dend_14 { pt3dadd( 14.5977, 6.54347, -28.1926, 0.96 ) }
    dend_14 { pt3dadd( 15.554, 6.46049, -28.8144, 1.18 ) }
    dend_14 { pt3dadd( 16.4616, 6.23464, -29.3866, 0.88 ) }
    dend_14 { pt3dadd( 16.9553, 6.02123, -29.7245, 1.03 ) }
    dend_14 { pt3dadd( 17.6172, 5.57594, -30.1713, 0.74 ) }
    dend_14 { pt3dadd( 18.0848, 5.16509, -30.4942, 0.59 ) }
    dend_14 { pt3dadd( 18.891, 4.38874, -31.0217, 0.74 ) }
    dend_14 { pt3dadd( 19.2138, 4.10214, -31.2792, 0.52 ) }
    dend_14 { pt3dadd( 19.5433, 3.90631, -31.6261, 0.52 ) }
    dend_14 { pt3dadd( 20.0597, 3.87099, -32.2738, 0.44 ) }
    dend_14 { pt3dadd( 20.6018, 4.07981, -33.0092, 0.52 ) }
    dend_14 { pt3dadd( 21.1872, 4.39196, -33.7172, 0.88 ) }
    dend_14 { pt3dadd( 22.0021, 4.84852, -34.5773, 1.03 ) }
    dend_14 { pt3dadd( 22.472, 5.08843, -35.0366, 1.03 ) }
    dend_14 { pt3dadd( 23.1982, 5.40281, -35.7117, 0.66 ) }
    dend_14 { pt3dadd( 24.1554, 5.688, -36.5624, 0.44 ) }
    dend_14 { pt3dadd( 25.012, 5.63222, -37.1849, 0.29 ) }
    dend_14 { pt3dadd( 25.5166, 5.24453, -37.3789, 0.37 ) }
    dend_14 { pt3dadd( 25.9947, 4.50583, -37.4112, 0.22 ) }
    dend_14 { pt3dadd( 26.4388, 3.47004, -37.3409, 0.22 ) }
    dend_14 { pt3dadd( 26.7436, 2.44831, -37.2158, 0.15 ) }
    dend_14 { pt3dadd( 26.913, 1.59372, -37.0879, 0.15 ) }
    dend_14 { pt3dadd( 27.0523, -0.0217121, -36.7795, 0.15 ) }
    dend_14 { pt3dadd( 27.0564, -0.983765, -36.5597, 0.15 ) }
    dend_14 { pt3dadd( 27.0253, -1.79143, -36.3538, 0.22 ) }
    dend_14 { pt3dadd( 26.9761, -2.40029, -36.1778, 0.22 ) }
    dend_14 { pt3dadd( 26.885, -3.01343, -35.9821, 0.22 ) }
    dend_14 { pt3dadd( 26.5815, -4.28607, -35.5628, 0.15 ) }
    dend_14 { pt3dadd( 26.4446, -4.69295, -35.4492, 0.22 ) }
    dend_14 { pt3dadd( 33.3741, -7.86537, -41.2084, 0.22 ) }
    dend_14 { pt3dadd( 38.9228, -11.616, -48.0198, 0.22 ) }
    dend_14 { pt3dadd( 45.4847, -14.6769, -54.2506, 0.22 ) }
    dend_14 { pt3dadd( 52.7124, -16.4459, -60.2407, 0.22 ) }
    dend_14 { pt3dadd( 57.9242, -19.631, -67.5853, 0.22 ) }
    dend_14 { pt3dadd( 63.2066, -22.5268, -74.9989, 0.22 ) }
    dend_14 { pt3dadd( 67.6708, -26.4178, -82.4944, 0.22 ) }
    dend_14 { pt3dadd( 72.2888, -30.8155, -89.6066, 0.22 ) }
    dend_14 { pt3dadd( 77.0034, -34.2515, -97.1708, 0.22 ) }
    dend_14 { pt3dadd( 82.3519, -38.4596, -103.874, 0.22 ) }
    dend_14 { pt3dadd( 87.9389, -43.879, -109.412, 0.22 ) }
    dend_14 { pt3dadd( 93.9915, -47.3219, -115.951, 0.22 ) }
    dend_14 { pt3dadd( 100.169, -51.4232, -121.974, 0.22 ) }
    dend_14 { pt3dadd( 106.817, -56.6435, -126.422, 0.22 ) }
    dend_14 { pt3dadd( 113.717, -61.3593, -131.05, 0.22 ) }
    dend_14 { pt3dadd( 121.515, -64.2182, -135.768, 0.22 ) }
    dend_14 { pt3dadd( 129.424, -67.4366, -140.051, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_14 { pt3dadd( 136.452, -71.4026, -145.163, 0.22 ) }
    dend_14 { pt3dadd( 142.316, -74.9548, -151.815, 0.22 ) }
    dend_14 { pt3dadd( 148.351, -79.5257, -157.64, 0.22 ) }
    dend_14 { pt3dadd( 154.843, -83.1325, -163.648, 0.22 ) }
    dend_14 { pt3dadd( 160.047, -87.0476, -170.636, 0.22 ) }
    dend_14 { pt3dadd( 164.572, -91.7314, -177.624, 0.22 ) }
    dend_14 { pt3dadd( 167.189, -95.8578, -185.833, 0.22 ) }
    dend_14 { pt3dadd( 169.699, -101.656, -192.997, 0.22 ) }
    dend_14 { pt3dadd( 173.592, -106.737, -200.088, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 9/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.51417, 8.71199, -10.34, 2.14 ) }
    dend_7 { pt3dadd( -4.51417, 8.71199, -10.34, 2.14 ) }
    dend_7 { pt3dadd( -4.53374, 9.88931, -9.92315, 2.14 ) }
    dend_7 { pt3dadd( -4.55823, 11.0742, -9.57472, 1.84 ) }
    dend_7 { pt3dadd( -4.58436, 12.6085, -9.26433, 1.62 ) }
    dend_7 { pt3dadd( -4.61245, 14.5677, -8.98087, 1.99 ) }
    dend_7 { pt3dadd( -4.6272, 15.4143, -8.93515, 2.21 ) }
    dend_7 { pt3dadd( -4.64957, 17.0874, -9.00826, 1.4 ) }
    dend_7 { pt3dadd( -4.67162, 18.5616, -9.23715, 0.96 ) }
    dend_7 { pt3dadd( -4.70573, 20.2373, -9.65874, 1.11 ) }
    dend_7 { pt3dadd( -4.74389, 21.4534, -10.184, 0.66 ) }
    dend_7 { pt3dadd( -4.83351, 23.3048, -11.2002, 0.96 ) }
    dend_7 { pt3dadd( -4.90541, 24.3801, -11.8453, 0.96 ) }
    dend_7 { pt3dadd( -5.00682, 25.5078, -12.528, 1.4 ) }
    dend_7 { pt3dadd( -5.17541, 26.9658, -13.3462, 1.11 ) }
    dend_7 { pt3dadd( -5.65424, 29.8486, -14.7199, 1.18 ) }
    dend_7 { pt3dadd( -5.89572, 30.9717, -15.1567, 1.47 ) }
    dend_7 { pt3dadd( -6.11195, 31.8414, -15.3869, 1.03 ) }
    dend_7 { pt3dadd( -6.52447, 33.3466, -15.6625, 0.74 ) }
    dend_7 { pt3dadd( -6.86945, 34.6009, -15.7738, 0.96 ) }
    dend_7 { pt3dadd( -7.16488, 35.7377, -15.7316, 0.59 ) }
    dend_7 { pt3dadd( -7.35589, 36.5099, -15.5816, 0.52 ) }
    dend_7 { pt3dadd( -7.5909, 37.4911, -15.382, 0.88 ) }
    dend_7 { pt3dadd( -7.68175, 37.916, -15.2895, 1.11 ) }
    dend_7 { pt3dadd( -7.83717, 38.9642, -15.0759, 1.11 ) }
    dend_7 { pt3dadd( -7.98344, 40.396, -14.7584, 1.03 ) }
    dend_7 { pt3dadd( -8.09349, 41.9827, -14.3702, 0.96 ) }
    dend_7 { pt3dadd( -8.1321, 42.6731, -14.2221, 1.18 ) }
    dend_7 { pt3dadd( -8.2599, 44.6885, -13.9116, 0.96 ) }
    dend_7 { pt3dadd( -8.35723, 46.211, -13.7822, 0.88 ) }
    dend_7 { pt3dadd( -8.43493, 47.5955, -13.757, 1.11 ) }
    dend_7 { pt3dadd( -8.48432, 48.5009, -13.8305, 1.11 ) }
    dend_7 { pt3dadd( -8.58397, 50.3343, -14.1867, 1.03 ) }
    dend_7 { pt3dadd( -8.68755, 52.0619, -14.6592, 0.74 ) }
    dend_7 { pt3dadd( -8.77857, 53.2972, -15.1367, 0.74 ) }
    dend_7 { pt3dadd( -8.84974, 54.1204, -15.5171, 0.81 ) }
    dend_7 { pt3dadd( -8.96946, 55.7, -16.3139, 0.59 ) }
    dend_7 { pt3dadd( -9.04881, 57.0099, -16.9966, 0.74 ) }
    dend_7 { pt3dadd( -9.06508, 57.6421, -17.3132, 1.18 ) }
    dend_7 { pt3dadd( -9.03176, 59.0042, -18.0064, 0.96 ) }
    dend_7 { pt3dadd( -8.99002, 59.9106, -18.4905, 1.03 ) }
    dend_7 { pt3dadd( -8.92295, 60.95, -19.0452, 0.96 ) }
    dend_7 { pt3dadd( -8.82088, 62.0203, -19.5772, 0.81 ) }
    dend_7 { pt3dadd( -8.70683, 63.0691, -20.0487, 0.74 ) }
    dend_7 { pt3dadd( -8.58176, 64.2217, -20.5733, 0.88 ) }
    dend_7 { pt3dadd( -8.41002, 65.5082, -21.1189, 1.18 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.31585, 9.99201, 0.0, 5.09 ) }
    dend_0 { pt3dadd( 2.31585, 9.99201, 0.0, 5.09 ) }
    dend_0 { pt3dadd( 2.51882, 10.9507, -0.013059, 3.1 ) }
    dend_0 { pt3dadd( 2.85379, 12.3528, -0.0535541, 2.43 ) }
    dend_0 { pt3dadd( 3.03374, 13.0383, -0.104515, 2.43 ) }
    dend_0 { pt3dadd( 3.36654, 14.2936, -0.226056, 2.21 ) }
    dend_0 { pt3dadd( 3.65411, 15.4252, -0.348303, 1.99 ) }
    dend_0 { pt3dadd( 3.93445, 16.5501, -0.473581, 1.92 ) }
    dend_0 { pt3dadd( 4.32285, 18.1357, -0.652316, 1.84 ) }
    dend_0 { pt3dadd( 4.58251, 19.1625, -0.790069, 2.14 ) }
    dend_0 { pt3dadd( 4.74087, 19.8066, -0.891544, 2.43 ) }
    dend_0 { pt3dadd( 4.99263, 20.863, -1.09865, 2.43 ) }
    dend_0 { pt3dadd( 5.18251, 21.7012, -1.28679, 2.43 ) }
    dend_0 { pt3dadd( 5.40231, 22.8276, -1.56602, 2.21 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 69/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -7.094, 9.5617, 0.0, 0.681837 ) }
    axon_0 { pt3dadd( -15.3575, 22.0803, 0.0, 0.681837 ) }
    axon_0 { pt3dadd( -23.6209, 34.5989, 0.0, 0.681837 ) }
    // Section: dend_51, id: dend_51, parent: dend_41 (entry count 72/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 7.91543, -10.4042, -6.99222, 1.99 ) }
    dend_51 { pt3dadd( 7.52698, -12.9885, -7.59346, 1.99 ) }
    dend_51 { pt3dadd( 7.14558, -15.5575, -8.15162, 2.21 ) }
    dend_51 { pt3dadd( 6.77879, -18.0684, -8.69377, 2.36 ) }
    dend_51 { pt3dadd( 6.60628, -19.2086, -8.93893, 2.51 ) }
    dend_51 { pt3dadd( 6.19446, -21.6395, -9.4521, 1.92 ) }
    dend_51 { pt3dadd( 6.00184, -22.7765, -9.69213, 1.84 ) }
    dend_51 { pt3dadd( 5.75117, -24.2739, -10.013, 2.29 ) }
    dend_51 { pt3dadd( 5.51082, -25.6083, -10.2838, 3.32 ) }
    dend_51 { pt3dadd( 5.41768, -26.0684, -10.354, 3.32 ) }
    dend_51 { pt3dadd( 4.97883, -28.0622, -10.6803, 2.95 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 7.91543, -10.4042, -6.99222, 2.43 ) }
    dend_42 { pt3dadd( 8.89498, -11.5606, -6.30512, 2.43 ) }
    dend_42 { pt3dadd( 9.66643, -12.5681, -5.68784, 2.43 ) }
    dend_42 { pt3dadd( 10.7653, -14.1166, -4.66764, 2.21 ) }
    dend_42 { pt3dadd( 11.5842, -15.3035, -3.82812, 2.43 ) }
    dend_42 { pt3dadd( 12.361, -16.4256, -3.06709, 2.58 ) }
    dend_42 { pt3dadd( 13.2464, -17.7044, -2.19969, 2.06 ) }
    dend_42 { pt3dadd( 14.1344, -19.1102, -1.21661, 2.06 ) }
    dend_42 { pt3dadd( 14.9367, -20.4477, -0.267391, 2.43 ) }
    dend_42 { pt3dadd( 15.7321, -21.8069, 0.648545, 2.43 ) }
    dend_42 { pt3dadd( 16.3803, -22.9367, 1.46293, 2.51 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 94/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.85494, -7.1092, 3.25656, 3.76 ) }
    dend_36 { pt3dadd( -10.159, -8.09035, 2.89955, 3.76 ) }
    dend_36 { pt3dadd( -10.4263, -8.95266, 2.58579, 2.36 ) }
    dend_36 { pt3dadd( -10.9347, -10.5927, 1.98903, 1.99 ) }
    dend_36 { pt3dadd( -11.2473, -11.601, 1.62214, 2.21 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.85494, -7.1092, 3.25656, 3.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( -11.3607, -8.56983, 5.14446, 3.32 ) }
    dend_25 { pt3dadd( -12.716, -9.8845, 6.84372, 2.29 ) }
    dend_25 { pt3dadd( -13.848, -10.9826, 8.26306, 1.84 ) }
    dend_25 { pt3dadd( -14.4316, -11.5487, 8.99473, 1.62 ) }
    dend_25 { pt3dadd( -15.2069, -12.3008, 9.9668, 1.92 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 5/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 9.95098, -18.8302, -24.9084, 0.96 ) }
    dend_21 { pt3dadd( 11.4357, -18.6475, -25.0711, 0.96 ) }
    dend_21 { pt3dadd( 12.4754, -18.4227, -25.1912, 0.81 ) }
    dend_21 { pt3dadd( 13.0694, -18.2317, -25.2637, 0.81 ) }
    dend_21 { pt3dadd( 13.739, -17.9408, -25.3946, 0.88 ) }
    dend_21 { pt3dadd( 14.4418, -17.572, -25.562, 1.11 ) }
    dend_21 { pt3dadd( 15.3325, -17.0524, -25.7949, 0.66 ) }
    dend_21 { pt3dadd( 16.0805, -16.5039, -26.0222, 0.59 ) }
    dend_21 { pt3dadd( 16.7949, -15.9307, -26.2517, 0.66 ) }
    dend_21 { pt3dadd( 17.8903, -15.0318, -26.5995, 0.59 ) }
    dend_21 { pt3dadd( 18.399, -14.6094, -26.7569, 0.81 ) }
    dend_21 { pt3dadd( 18.9465, -14.1637, -26.8942, 1.18 ) }
    dend_21 { pt3dadd( 19.9898, -13.3557, -27.096, 1.11 ) }
    dend_21 { pt3dadd( 20.7036, -12.8081, -27.1951, 0.88 ) }
    dend_21 { pt3dadd( 21.7655, -11.9859, -27.3216, 0.59 ) }
    dend_21 { pt3dadd( 22.7799, -11.1511, -27.4509, 0.52 ) }
    dend_21 { pt3dadd( 23.5332, -10.4596, -27.61, 0.66 ) }
    dend_21 { pt3dadd( 24.1003, -9.86624, -27.7807, 1.11 ) }
    dend_21 { pt3dadd( 24.8476, -8.97414, -28.11, 0.59 ) }
    dend_21 { pt3dadd( 25.6711, -7.88193, -28.5975, 0.44 ) }
    dend_21 { pt3dadd( 26.2093, -7.07079, -29.0418, 0.59 ) }
    dend_21 { pt3dadd( 26.7099, -6.22581, -29.5675, 0.59 ) }
    dend_21 { pt3dadd( 27.2187, -5.31589, -30.1804, 0.22 ) }
    dend_21 { pt3dadd( 27.579, -4.66806, -30.6563, 0.22 ) }
    dend_21 { pt3dadd( 27.8231, -4.2648, -30.9583, 0.59 ) }
    dend_21 { pt3dadd( 28.3002, -3.53331, -31.4733, 0.96 ) }
    dend_21 { pt3dadd( 28.6635, -3.03567, -31.7945, 0.96 ) }
    dend_21 { pt3dadd( 29.1963, -2.37121, -32.1883, 0.52 ) }
    dend_21 { pt3dadd( 30.0322, -1.37834, -32.738, 0.37 ) }
    dend_21 { pt3dadd( 30.669, -0.707569, -33.0602, 0.37 ) }
    dend_21 { pt3dadd( 31.3282, -0.078169, -33.3307, 0.37 ) }
    dend_21 { pt3dadd( 31.9099, 0.423088, -33.5224, 0.37 ) }
    dend_21 { pt3dadd( 32.5624, 0.948367, -33.715, 0.59 ) }
    dend_21 { pt3dadd( 32.7305, 1.07043, -33.7554, 0.59 ) }
    dend_21 { pt3dadd( 33.5835, 1.6564, -33.8424, 0.29 ) }
    dend_21 { pt3dadd( 34.0589, 1.97581, -33.8727, 0.29 ) }
    dend_21 { pt3dadd( 34.745, 2.40533, -33.8776, 0.59 ) }
    dend_21 { pt3dadd( 35.3465, 2.77639, -33.8679, 0.66 ) }
    dend_21 { pt3dadd( 36.4593, 3.49369, -33.8356, 0.52 ) }
    dend_21 { pt3dadd( 37.7735, 4.37911, -33.7944, 0.52 ) }
    dend_21 { pt3dadd( 38.3855, 4.79528, -33.7734, 0.37 ) }
    dend_21 { pt3dadd( 39.0339, 5.20904, -33.7331, 0.44 ) }
    dend_21 { pt3dadd( 39.9524, 5.78134, -33.6608, 0.52 ) }
    dend_21 { pt3dadd( 40.704, 6.26738, -33.607, 0.52 ) }
    dend_21 { pt3dadd( 41.3415, 6.6866, -33.5742, 0.22 ) }
    dend_21 { pt3dadd( 41.9094, 7.05198, -33.5732, 0.22 ) }
    dend_21 { pt3dadd( 42.8342, 7.63185, -33.5644, 0.59 ) }
    dend_21 { pt3dadd( 43.6471, 8.14323, -33.5562, 0.29 ) }
    dend_21 { pt3dadd( 44.3776, 8.60966, -33.6047, 0.15 ) }
    dend_21 { pt3dadd( 44.739, 8.85783, -33.6595, 0.37 ) }
    dend_21 { pt3dadd( 45.2719, 9.27375, -33.7299, 0.66 ) }
    dend_21 { pt3dadd( 46.0157, 9.94061, -33.825, 0.15 ) }
    dend_21 { pt3dadd( 46.5021, 10.4321, -33.8937, 0.29 ) }
    dend_21 { pt3dadd( 47.4417, 11.4424, -33.9898, 0.29 ) }
    dend_21 { pt3dadd( 48.2506, 12.3923, -34.0425, 0.15 ) }
    dend_21 { pt3dadd( 49.1678, 13.6161, -34.0562, 0.22 ) }
    dend_21 { pt3dadd( 49.4853, 14.086, -34.0434, 0.66 ) }
    dend_21 { pt3dadd( 49.7335, 14.4884, -34.0226, 0.66 ) }
    dend_21 { pt3dadd( 49.9459, 14.8435, -33.9763, 0.66 ) }
    dend_21 { pt3dadd( 50.49, 15.743, -33.8032, 0.15 ) }
    dend_21 { pt3dadd( 50.8708, 16.3503, -33.7648, 0.15 ) }
    dend_21 { pt3dadd( 51.391, 17.125, -33.8643, 0.15 ) }
    dend_21 { pt3dadd( 52.0307, 17.9924, -34.0558, 0.22 ) }
    dend_21 { pt3dadd( 52.6798, 18.7918, -34.3022, 0.37 ) }
    dend_21 { pt3dadd( 53.0777, 19.2382, -34.5037, 0.81 ) }
    dend_21 { pt3dadd( 54.2152, 20.3705, -35.2775, 0.07 ) }
    dend_21 { pt3dadd( 54.9752, 21.0235, -35.8631, 0.07 ) }
    dend_21 { pt3dadd( 55.3679, 21.3097, -36.2047, 0.07 ) }
    dend_21 { pt3dadd( 55.696, 21.5209, -36.503, 0.44 ) }
    dend_21 { pt3dadd( 56.2927, 21.8532, -37.0314, 0.59 ) }
    dend_21 { pt3dadd( 56.964, 22.18, -37.5638, 0.81 ) }
    dend_21 { pt3dadd( 58.1105, 22.6718, -38.3302, 0.29 ) }
    dend_21 { pt3dadd( 59.4327, 23.2253, -39.1212, 0.07 ) }
    dend_21 { pt3dadd( 60.0227, 23.4911, -39.4508, 0.07 ) }
    dend_21 { pt3dadd( 60.8038, 23.8821, -39.8939, 0.74 ) }
    dend_21 { pt3dadd( 61.2308, 24.1248, -40.0751, 0.74 ) }
    dend_21 { pt3dadd( 61.6057, 24.3756, -40.1833, 0.44 ) }
    dend_21 { pt3dadd( 62.1541, 24.7947, -40.2629, 0.66 ) }
    dend_21 { pt3dadd( 62.9378, 25.4142, -40.2206, 0.15 ) }
    dend_21 { pt3dadd( 64.0277, 26.1998, -40.0682, 0.15 ) }
    dend_21 { pt3dadd( 65.8398, 27.6531, -39.6505, 0.15 ) }
    dend_21 { pt3dadd( 66.1652, 27.9141, -39.5482, 0.44 ) }
    dend_21 { pt3dadd( 66.8003, 28.3759, -39.2726, 0.22 ) }
    dend_21 { pt3dadd( 67.3983, 28.6776, -38.906, 0.22 ) }
    dend_21 { pt3dadd( 68.027, 28.7801, -38.4337, 0.29 ) }
    dend_21 { pt3dadd( 76.5619, 33.1721, -41.1571, 0.29 ) }
    dend_21 { pt3dadd( 85.294, 36.4008, -44.7454, 0.29 ) }
    dend_21 { pt3dadd( 94.7054, 38.117, -47.5789, 0.29 ) }
    dend_21 { pt3dadd( 104.207, 38.5939, -50.5835, 0.29 ) }
    dend_21 { pt3dadd( 113.574, 37.9714, -53.9644, 0.29 ) }
    dend_21 { pt3dadd( 121.998, 37.192, -59.2537, 0.29 ) }
    dend_21 { pt3dadd( 130.713, 35.5669, -63.8311, 0.29 ) }
    dend_21 { pt3dadd( 139.343, 34.2234, -68.6547, 0.29 ) }
    dend_21 { pt3dadd( 148.448, 34.3335, -72.7332, 0.29 ) }
    dend_21 { pt3dadd( 157.606, 32.6279, -76.3091, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( 166.899, 31.6064, -79.7941, 0.29 ) }
    dend_21 { pt3dadd( 176.532, 31.3793, -82.3805, 0.29 ) }
    dend_21 { pt3dadd( 185.332, 29.1553, -86.5246, 0.29 ) }
    dend_21 { pt3dadd( 194.228, 26.8914, -90.4343, 0.29 ) }
    dend_21 { pt3dadd( 201.838, 22.3958, -95.0624, 0.29 ) }
    dend_21 { pt3dadd( 209.433, 19.4942, -100.846, 0.29 ) }
    dend_21 { pt3dadd( 217.707, 18.2686, -106.286, 0.29 ) }
    dend_21 { pt3dadd( 225.613, 16.2374, -112.023, 0.29 ) }
    dend_21 { pt3dadd( 234.671, 15.2846, -116.096, 0.29 ) }
    dend_21 { pt3dadd( 244.203, 15.1301, -119.041, 0.29 ) }
    dend_21 { pt3dadd( 253.269, 16.7182, -122.893, 0.29 ) }
    dend_21 { pt3dadd( 261.908, 19.936, -126.709, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 9.95098, -18.8302, -24.9084, 1.11 ) }
    dend_18 { pt3dadd( 10.3042, -20.2164, -25.5313, 1.11 ) }
    dend_18 { pt3dadd( 10.6554, -21.2803, -25.9779, 0.96 ) }
    dend_18 { pt3dadd( 10.9764, -22.1651, -26.3193, 0.88 ) }
    dend_18 { pt3dadd( 11.5098, -23.4848, -26.8877, 1.03 ) }
    dend_18 { pt3dadd( 11.7835, -24.1034, -27.1911, 1.33 ) }
    dend_18 { pt3dadd( 12.2041, -24.9429, -27.6663, 1.62 ) }
    dend_18 { pt3dadd( 12.8123, -25.7343, -28.3554, 0.81 ) }
    dend_18 { pt3dadd( 13.1443, -26.0188, -28.7346, 0.66 ) }
    dend_18 { pt3dadd( 13.9431, -26.4016, -29.7354, 0.66 ) }
    dend_18 { pt3dadd( 14.3059, -26.4902, -30.2135, 0.66 ) }
    dend_18 { pt3dadd( 14.8474, -26.5547, -30.9921, 0.66 ) }
    dend_18 { pt3dadd( 15.5143, -26.6299, -32.0376, 0.66 ) }
    dend_18 { pt3dadd( 15.853, -26.7125, -32.6101, 0.59 ) }
    dend_18 { pt3dadd( 16.6499, -27.1828, -34.0009, 0.66 ) }
    dend_18 { pt3dadd( 16.9144, -27.573, -34.4839, 1.11 ) }
    dend_18 { pt3dadd( 17.0585, -27.9839, -34.764, 1.62 ) }
    dend_18 { pt3dadd( 17.3454, -29.0572, -35.3574, 1.77 ) }
    dend_18 { pt3dadd( 17.6631, -30.4261, -35.9916, 1.47 ) }
    dend_18 { pt3dadd( 17.8758, -31.511, -36.4321, 1.99 ) }
    dend_18 { pt3dadd( 18.0521, -32.4892, -36.7922, 1.7 ) }
    dend_18 { pt3dadd( 18.4177, -34.3117, -37.5054, 0.96 ) }
    dend_18 { pt3dadd( 18.724, -35.4893, -38.0058, 1.11 ) }
    dend_18 { pt3dadd( 18.959, -36.1331, -38.3203, 0.66 ) }
    dend_18 { pt3dadd( 19.3148, -36.8118, -38.7353, 0.59 ) }
    dend_18 { pt3dadd( 19.8686, -37.5113, -39.2556, 0.44 ) }
    dend_18 { pt3dadd( 20.6486, -38.0644, -39.8433, 0.44 ) }
    dend_18 { pt3dadd( 21.4097, -38.2692, -40.3032, 0.37 ) }
    dend_18 { pt3dadd( 22.1588, -38.3023, -40.6945, 0.81 ) }
    dend_18 { pt3dadd( 22.4716, -38.2817, -40.847, 0.81 ) }
    dend_18 { pt3dadd( 23.539, -38.1371, -41.3707, 0.59 ) }
    dend_18 { pt3dadd( 24.9144, -37.8964, -42.0186, 0.59 ) }
    dend_18 { pt3dadd( 25.8008, -37.7241, -42.4407, 0.44 ) }
    dend_18 { pt3dadd( 26.3161, -37.6345, -42.683, 0.29 ) }
    dend_18 { pt3dadd( 26.861, -37.5671, -42.9079, 0.29 ) }
    dend_18 { pt3dadd( 28.1591, -37.4521, -43.3667, 0.29 ) }
    dend_18 { pt3dadd( 28.6304, -37.4343, -43.502, 1.03 ) }
    dend_18 { pt3dadd( 29.2598, -37.459, -43.6231, 1.25 ) }
    dend_18 { pt3dadd( 30.2464, -37.5276, -43.7785, 0.37 ) }
    dend_18 { pt3dadd( 31.4294, -37.6112, -43.9385, 0.22 ) }
    dend_18 { pt3dadd( 32.4787, -37.6704, -44.0325, 0.22 ) }
    dend_18 { pt3dadd( 32.9837, -37.7052, -44.0313, 0.66 ) }
    dend_18 { pt3dadd( 33.5283, -37.751, -44.03, 0.88 ) }
    dend_18 { pt3dadd( 39.8643, -42.7933, -49.0087, 0.88 ) }
    dend_18 { pt3dadd( 45.437, -48.1772, -54.5145, 0.88 ) }
    dend_18 { pt3dadd( 50.9281, -54.1712, -59.4415, 0.88 ) }
    dend_18 { pt3dadd( 56.602, -60.7806, -63.2467, 0.88 ) }
    dend_18 { pt3dadd( 64.1527, -65.8139, -66.0766, 0.88 ) }
    dend_18 { pt3dadd( 71.283, -71.4851, -68.7879, 0.88 ) }
    dend_18 { pt3dadd( 79.3486, -76.3535, -70.0533, 0.88 ) }
    dend_18 { pt3dadd( 87.9024, -80.485, -70.3978, 0.88 ) }
    dend_18 { pt3dadd( 96.5702, -84.1445, -69.0437, 0.88 ) }
    dend_18 { pt3dadd( 104.947, -88.3259, -67.4024, 0.88 ) }
    dend_18 { pt3dadd( 112.966, -93.2331, -65.9978, 0.88 ) }
    dend_18 { pt3dadd( 121.857, -96.5785, -65.6555, 0.88 ) }
    dend_18 { pt3dadd( 130.39, -100.762, -65.8514, 0.88 ) }
    dend_18 { pt3dadd( 139.144, -104.435, -65.3675, 0.88 ) }
    dend_18 { pt3dadd( 147.645, -108.609, -64.5494, 0.88 ) }
    dend_18 { pt3dadd( 155.402, -114.025, -65.4713, 0.88 ) }
    dend_18 { pt3dadd( 163.792, -118.487, -65.2599, 0.88 ) }
    dend_18 { pt3dadd( 171.985, -123.308, -65.2836, 0.88 ) }
    dend_18 { pt3dadd( 180.491, -127.185, -63.5601, 0.88 ) }
    dend_18 { pt3dadd( 189.415, -130.105, -62.083, 0.88 ) }
    dend_18 { pt3dadd( 198.492, -132.885, -61.5931, 0.88 ) }
    dend_18 { pt3dadd( 207.742, -134.802, -60.5358, 0.88 ) }
    dend_18 { pt3dadd( 216.832, -137.582, -60.4807, 0.88 ) }
    dend_18 { pt3dadd( 225.881, -140.252, -61.642, 0.88 ) }
    dend_18 { pt3dadd( 234.792, -141.518, -64.6996, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 80/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 173.592, -106.737, -200.088, 0.15 ) }
    dend_16 { pt3dadd( 179.877, -110.428, -206.557, 0.15 ) }
    dend_16 { pt3dadd( 185.427, -114.484, -213.466, 0.15 ) }
    dend_16 { pt3dadd( 191.351, -116.599, -220.91, 0.15 ) }
    dend_16 { pt3dadd( 197.479, -116.849, -228.484, 0.15 ) }
    dend_16 { pt3dadd( 204.523, -116.569, -235.214, 0.15 ) }
    dend_16 { pt3dadd( 212.517, -115.817, -240.737, 0.15 ) }
    dend_16 { pt3dadd( 220.881, -117.041, -245.587, 0.15 ) }
    dend_16 { pt3dadd( 229.233, -117.102, -250.609, 0.15 ) }
    dend_16 { pt3dadd( 237.3, -118.349, -255.933, 0.15 ) }
    dend_16 { pt3dadd( 245.47, -120.15, -260.933, 0.15 ) }
    dend_16 { pt3dadd( 253.794, -120.624, -265.98, 0.15 ) }
    dend_16 { pt3dadd( 262.266, -120.127, -270.771, 0.15 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 93/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 173.592, -106.737, -200.088, 0.07 ) }
    dend_15 { pt3dadd( 181.797, -112.427, -209.673, 0.15 ) }
    dend_15 { pt3dadd( 189.926, -119.39, -218.447, 0.15 ) }
    dend_15 { pt3dadd( 199.132, -125.657, -226.665, 0.15 ) }
    dend_15 { pt3dadd( 209.695, -132.709, -232.165, 0.15 ) }
    dend_15 { pt3dadd( 220.235, -139.822, -237.631, 0.15 ) }
    dend_15 { pt3dadd( 230.938, -147.788, -241.311, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_15 { pt3dadd( 243.012, -154.378, -242.847, 0.15 ) }
    dend_15 { pt3dadd( 255.409, -160.389, -244.166, 0.15 ) }
    dend_15 { pt3dadd( 266.435, -168.743, -244.617, 0.15 ) }
    dend_15 { pt3dadd( 276.672, -177.65, -247.341, 0.15 ) }
    dend_15 { pt3dadd( 288.256, -185.198, -247.961, 0.15 ) }
    dend_15 { pt3dadd( 299.59, -192.644, -250.728, 0.15 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 6/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -8.41002, 65.5082, -21.1189, 0.52 ) }
    dend_11 { pt3dadd( -8.52396, 66.4172, -21.4057, 0.52 ) }
    dend_11 { pt3dadd( -8.59382, 66.838, -21.5204, 0.29 ) }
    dend_11 { pt3dadd( -8.66417, 67.1829, -21.6018, 0.29 ) }
    dend_11 { pt3dadd( -8.73502, 67.5004, -21.665, 0.29 ) }
    dend_11 { pt3dadd( -8.88494, 68.1047, -21.7696, 0.52 ) }
    dend_11 { pt3dadd( -9.02484, 68.6275, -21.849, 0.74 ) }
    dend_11 { pt3dadd( -9.17003, 69.0979, -21.8931, 0.81 ) }
    dend_11 { pt3dadd( -9.30687, 69.5453, -21.9184, 0.81 ) }
    dend_11 { pt3dadd( -9.48927, 70.15, -21.9278, 0.29 ) }
    dend_11 { pt3dadd( -9.61438, 70.5852, -21.913, 0.37 ) }
    dend_11 { pt3dadd( -9.72404, 70.9898, -21.8804, 0.44 ) }
    dend_11 { pt3dadd( -9.79642, 71.2591, -21.8581, 0.29 ) }
    dend_11 { pt3dadd( -9.88894, 71.6319, -21.8488, 0.29 ) }
    dend_11 { pt3dadd( -9.95844, 71.9365, -21.8614, 0.44 ) }
    dend_11 { pt3dadd( -10.0364, 72.3248, -21.9026, 0.81 ) }
    dend_11 { pt3dadd( -10.0767, 72.5932, -21.9412, 0.74 ) }
    dend_11 { pt3dadd( -10.1323, 73.0777, -22.0211, 0.52 ) }
    dend_11 { pt3dadd( -10.1832, 73.6304, -22.1165, 0.52 ) }
    dend_11 { pt3dadd( -10.2025, 74.016, -22.1851, 0.52 ) }
    dend_11 { pt3dadd( -10.1977, 74.672, -22.2814, 0.44 ) }
    dend_11 { pt3dadd( -10.1613, 75.1855, -22.3417, 0.44 ) }
    dend_11 { pt3dadd( -10.1176, 75.5739, -22.3737, 0.52 ) }
    dend_11 { pt3dadd( -10.054, 75.9963, -22.3977, 0.66 ) }
    dend_11 { pt3dadd( -9.99374, 76.3263, -22.4118, 0.66 ) }
    dend_11 { pt3dadd( -9.88774, 76.8625, -22.4469, 0.44 ) }
    dend_11 { pt3dadd( -9.77369, 77.4631, -22.5208, 0.44 ) }
    dend_11 { pt3dadd( -9.73188, 77.7322, -22.5706, 0.52 ) }
    dend_11 { pt3dadd( -9.71012, 77.9568, -22.6224, 0.52 ) }
    dend_11 { pt3dadd( -9.71435, 78.5396, -22.7732, 0.44 ) }
    dend_11 { pt3dadd( -9.77186, 79.0553, -22.9352, 0.44 ) }
    dend_11 { pt3dadd( -9.88824, 79.6219, -23.1483, 0.59 ) }
    dend_11 { pt3dadd( -9.99034, 79.9733, -23.2906, 0.81 ) }
    dend_11 { pt3dadd( -10.122, 80.3644, -23.4603, 1.03 ) }
    dend_11 { pt3dadd( -10.3747, 81.0336, -23.7581, 0.52 ) }
    dend_11 { pt3dadd( -10.5994, 81.5642, -23.9913, 0.22 ) }
    dend_11 { pt3dadd( -10.7364, 81.8972, -24.1482, 0.22 ) }
    dend_11 { pt3dadd( -10.8756, 82.2585, -24.3114, 0.37 ) }
    dend_11 { pt3dadd( -11.0308, 82.7099, -24.5088, 0.52 ) }
    dend_11 { pt3dadd( -11.1055, 82.9643, -24.6161, 0.52 ) }
    dend_11 { pt3dadd( -11.1695, 83.2177, -24.7117, 0.22 ) }
    dend_11 { pt3dadd( -11.3192, 83.8824, -24.9107, 0.22 ) }
    dend_11 { pt3dadd( -11.4178, 84.3628, -25.0198, 0.22 ) }
    dend_11 { pt3dadd( -11.5005, 84.7686, -25.0779, 0.52 ) }
    dend_11 { pt3dadd( -11.5773, 85.1162, -25.0887, 0.81 ) }
    dend_11 { pt3dadd( -11.663, 85.4668, -25.0705, 0.96 ) }
    dend_11 { pt3dadd( -11.7379, 85.7343, -25.0336, 1.03 ) }
    dend_11 { pt3dadd( -11.9253, 86.271, -24.8793, 0.52 ) }
    dend_11 { pt3dadd( -12.0978, 86.7027, -24.7289, 0.22 ) }
    dend_11 { pt3dadd( -12.222, 86.9721, -24.616, 0.22 ) }
    dend_11 { pt3dadd( -12.3496, 87.2198, -24.5071, 0.37 ) }
    dend_11 { pt3dadd( -12.4775, 87.4488, -24.4085, 0.59 ) }
    dend_11 { pt3dadd( -12.8657, 88.0964, -24.1463, 0.22 ) }
    dend_11 { pt3dadd( -13.0645, 88.4271, -24.0309, 0.37 ) }
    dend_11 { pt3dadd( -13.3617, 88.9378, -23.8835, 0.81 ) }
    dend_11 { pt3dadd( -13.6212, 89.4182, -23.7686, 0.81 ) }
    dend_11 { pt3dadd( -13.8067, 89.7988, -23.6893, 1.03 ) }
    dend_11 { pt3dadd( -13.9291, 90.0739, -23.6444, 1.03 ) }
    dend_11 { pt3dadd( -14.144, 90.6062, -23.5984, 0.52 ) }
    dend_11 { pt3dadd( -14.2383, 90.8692, -23.5843, 0.22 ) }
    dend_11 { pt3dadd( -14.3253, 91.1696, -23.5827, 0.22 ) }
    dend_11 { pt3dadd( -14.376, 91.3903, -23.5817, 0.22 ) }
    dend_11 { pt3dadd( -14.4224, 91.6333, -23.5812, 0.22 ) }
    dend_11 { pt3dadd( -14.4959, 92.0804, -23.5816, 0.22 ) }
    dend_11 { pt3dadd( -14.5427, 92.4259, -23.6024, 0.22 ) }
    dend_11 { pt3dadd( -14.5877, 92.8185, -23.6428, 0.29 ) }
    dend_11 { pt3dadd( -14.6132, 93.0505, -23.6733, 0.59 ) }
    dend_11 { pt3dadd( -14.6359, 93.3103, -23.7117, 1.03 ) }
    dend_11 { pt3dadd( -14.6585, 93.7372, -23.7776, 0.81 ) }
    dend_11 { pt3dadd( -14.6817, 94.3478, -23.8734, 0.37 ) }
    dend_11 { pt3dadd( -14.6983, 94.7345, -23.9329, 0.22 ) }
    dend_11 { pt3dadd( -14.7143, 95.0868, -23.983, 0.22 ) }
    dend_11 { pt3dadd( -14.7287, 95.4059, -24.0068, 0.22 ) }
    dend_11 { pt3dadd( -14.7587, 95.8332, -24.0089, 0.29 ) }
    dend_11 { pt3dadd( -14.8136, 96.1834, -23.9899, 0.81 ) }
    dend_11 { pt3dadd( -14.8603, 96.3749, -23.9695, 0.81 ) }
    dend_11 { pt3dadd( -14.9634, 96.7123, -23.9346, 0.81 ) }
    dend_11 { pt3dadd( -15.16, 97.2772, -23.8799, 1.03 ) }
    dend_11 { pt3dadd( -15.3477, 97.7582, -23.841, 0.74 ) }
    dend_11 { pt3dadd( -15.6405, 98.4516, -23.7971, 0.22 ) }
    dend_11 { pt3dadd( -15.8096, 98.8338, -23.7808, 0.22 ) }
    dend_11 { pt3dadd( -16.0518, 99.3435, -23.7923, 0.37 ) }
    dend_11 { pt3dadd( -16.198, 99.6397, -23.8189, 0.29 ) }
    dend_11 { pt3dadd( -16.3652, 99.9839, -23.8756, 0.66 ) }
    dend_11 { pt3dadd( -16.5274, 100.343, -23.9442, 0.88 ) }
    dend_11 { pt3dadd( -16.6986, 100.756, -24.0289, 0.22 ) }
    dend_11 { pt3dadd( -16.9111, 101.285, -24.1407, 0.22 ) }
    dend_11 { pt3dadd( -17.0205, 101.579, -24.1973, 0.22 ) }
    dend_11 { pt3dadd( -17.1096, 101.839, -24.2247, 0.29 ) }
    dend_11 { pt3dadd( -17.2163, 102.172, -24.2207, 0.29 ) }
    dend_11 { pt3dadd( -17.3506, 102.582, -24.1619, 0.44 ) }
    dend_11 { pt3dadd( -17.4855, 102.99, -24.0617, 0.52 ) }
    dend_11 { pt3dadd( -17.7023, 103.621, -23.864, 0.22 ) }
    dend_11 { pt3dadd( -17.9219, 104.212, -23.6715, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( -18.1195, 104.715, -23.4791, 0.44 ) }
    dend_11 { pt3dadd( -18.3129, 105.175, -23.2892, 0.44 ) }
    dend_11 { pt3dadd( -18.4931, 105.576, -23.1236, 0.88 ) }
    dend_11 { pt3dadd( -18.7141, 106.034, -22.9443, 0.59 ) }
    dend_11 { pt3dadd( -18.9619, 106.527, -22.7776, 0.37 ) }
    dend_11 { pt3dadd( -19.2606, 107.12, -22.6325, 0.37 ) }
    dend_11 { pt3dadd( -19.5227, 107.69, -22.5353, 0.29 ) }
    dend_11 { pt3dadd( -19.7929, 108.346, -22.4579, 0.29 ) }
    dend_11 { pt3dadd( -19.9399, 108.749, -22.4203, 0.81 ) }
    dend_11 { pt3dadd( -20.0601, 109.14, -22.3953, 1.4 ) }
    dend_11 { pt3dadd( -20.2226, 109.796, -22.3769, 1.55 ) }
    dend_11 { pt3dadd( -20.348, 110.494, -22.3855, 0.74 ) }
    dend_11 { pt3dadd( -20.3984, 111.082, -22.418, 0.52 ) }
    dend_11 { pt3dadd( -20.4065, 111.589, -22.4735, 0.52 ) }
    dend_11 { pt3dadd( -20.3956, 111.974, -22.5312, 0.52 ) }
    dend_11 { pt3dadd( -20.362, 112.507, -22.6335, 0.52 ) }
    dend_11 { pt3dadd( -20.3051, 113.108, -22.7979, 0.44 ) }
    dend_11 { pt3dadd( -20.2052, 114.038, -23.1487, 0.29 ) }
    dend_11 { pt3dadd( -20.1608, 114.431, -23.3266, 0.29 ) }
    dend_11 { pt3dadd( -20.118, 114.881, -23.5531, 0.22 ) }
    dend_11 { pt3dadd( -20.0871, 115.354, -23.7934, 0.29 ) }
    dend_11 { pt3dadd( -20.0845, 116.012, -24.1075, 0.22 ) }
    dend_11 { pt3dadd( -20.1229, 116.581, -24.3398, 0.22 ) }
    dend_11 { pt3dadd( -20.16, 116.896, -24.4367, 0.66 ) }
    dend_11 { pt3dadd( -20.2042, 117.246, -24.536, 1.55 ) }
    dend_11 { pt3dadd( -20.3102, 118.102, -24.7637, 0.29 ) }
    dend_11 { pt3dadd( -20.3912, 118.812, -24.9222, 0.22 ) }
    dend_11 { pt3dadd( -20.4483, 119.436, -25.0502, 0.52 ) }
    dend_11 { pt3dadd( -20.466, 119.794, -25.1275, 0.15 ) }
    dend_11 { pt3dadd( -20.4505, 120.41, -25.3122, 0.15 ) }
    dend_11 { pt3dadd( -20.4244, 120.649, -25.4075, 0.37 ) }
    dend_11 { pt3dadd( -20.3829, 120.846, -25.511, 0.37 ) }
    dend_11 { pt3dadd( -20.2248, 121.385, -25.8612, 0.66 ) }
    dend_11 { pt3dadd( -20.1512, 121.605, -26.02, 0.22 ) }
    dend_11 { pt3dadd( -20.0072, 122.051, -26.3516, 0.15 ) }
    dend_11 { pt3dadd( -19.9365, 122.289, -26.5211, 0.15 ) }
    dend_11 { pt3dadd( -19.8232, 122.693, -26.8285, 0.22 ) }
    dend_11 { pt3dadd( -19.747, 122.984, -27.0552, 0.22 ) }
    dend_11 { pt3dadd( -21.8133, 127.789, -27.638, 0.22 ) }
    dend_11 { pt3dadd( -24.4379, 132.349, -27.5476, 0.22 ) }
    dend_11 { pt3dadd( -26.9955, 136.91, -28.1344, 0.22 ) }
    dend_11 { pt3dadd( -29.5635, 141.327, -29.3955, 0.22 ) }
    dend_11 { pt3dadd( -32.2751, 145.432, -31.2611, 0.22 ) }
    dend_11 { pt3dadd( -34.0711, 149.719, -33.7284, 0.22 ) }
    dend_11 { pt3dadd( -35.9364, 154.395, -35.2624, 0.22 ) }
    dend_11 { pt3dadd( -37.6442, 159.112, -36.8514, 0.22 ) }
    dend_11 { pt3dadd( -40.0947, 163.663, -37.839, 0.22 ) }
    dend_11 { pt3dadd( -41.6346, 168.69, -38.0475, 0.22 ) }
    dend_11 { pt3dadd( -43.2043, 173.706, -37.7777, 0.22 ) }
    dend_11 { pt3dadd( -43.8349, 178.842, -36.8224, 0.22 ) }
    dend_11 { pt3dadd( -43.5353, 183.817, -35.1333, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 51/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.41002, 65.5082, -21.1189, 0.59 ) }
    dend_8 { pt3dadd( -8.54151, 66.3916, -21.9522, 0.59 ) }
    dend_8 { pt3dadd( -8.59578, 66.8572, -22.3513, 0.59 ) }
    dend_8 { pt3dadd( -8.73995, 68.3608, -23.539, 0.52 ) }
    dend_8 { pt3dadd( -8.7831, 68.8839, -23.924, 0.37 ) }
    dend_8 { pt3dadd( -8.80704, 69.3146, -24.2285, 0.22 ) }
    dend_8 { pt3dadd( -8.825, 69.9573, -24.6785, 0.22 ) }
    dend_8 { pt3dadd( -8.8447, 70.6998, -25.2128, 0.29 ) }
    dend_8 { pt3dadd( -8.86045, 71.4598, -25.7665, 0.44 ) }
    dend_8 { pt3dadd( -8.86432, 72.4396, -26.4547, 0.74 ) }
    dend_8 { pt3dadd( -8.85576, 73.3792, -27.1404, 0.74 ) }
    dend_8 { pt3dadd( -8.78683, 74.3775, -27.8716, 0.29 ) }
    dend_8 { pt3dadd( -8.62906, 75.5996, -28.7697, 0.37 ) }
    dend_8 { pt3dadd( -8.57141, 75.961, -29.0268, 0.37 ) }
    dend_8 { pt3dadd( -8.45778, 76.5256, -29.4082, 0.37 ) }
    dend_8 { pt3dadd( -8.3226, 77.1028, -29.7757, 0.37 ) }
    dend_8 { pt3dadd( -8.06986, 78.3401, -30.5238, 0.29 ) }
    dend_8 { pt3dadd( -7.92706, 79.181, -30.9827, 0.29 ) }
    dend_8 { pt3dadd( -7.82675, 79.9324, -31.379, 0.29 ) }
    dend_8 { pt3dadd( -7.76691, 80.6022, -31.74, 0.81 ) }
    dend_8 { pt3dadd( -7.72562, 81.5645, -32.2858, 1.03 ) }
    dend_8 { pt3dadd( -7.71022, 82.8657, -33.0312, 0.29 ) }
    dend_8 { pt3dadd( -7.72106, 83.5934, -33.4908, 0.29 ) }
    dend_8 { pt3dadd( -7.70788, 84.3479, -33.9859, 0.29 ) }
    dend_8 { pt3dadd( -7.65513, 85.1177, -34.5071, 0.66 ) }
    dend_8 { pt3dadd( -7.52756, 86.0583, -35.1536, 0.81 ) }
    dend_8 { pt3dadd( -7.40692, 86.6348, -35.5478, 0.44 ) }
    dend_8 { pt3dadd( -7.06105, 87.9378, -36.5066, 0.44 ) }
    dend_8 { pt3dadd( -6.89285, 88.5225, -36.9599, 0.59 ) }
    dend_8 { pt3dadd( -6.7198, 89.1316, -37.4112, 0.59 ) }
    dend_8 { pt3dadd( -6.5047, 89.9972, -38.0276, 0.44 ) }
    dend_8 { pt3dadd( -6.36015, 90.7171, -38.4808, 0.52 ) }
    dend_8 { pt3dadd( -6.1864, 91.8959, -39.1167, 0.81 ) }
    dend_8 { pt3dadd( -6.1141, 92.489, -39.3618, 0.81 ) }
    dend_8 { pt3dadd( -6.05713, 93.3907, -39.7528, 0.37 ) }
    dend_8 { pt3dadd( -6.05673, 93.893, -40.0214, 0.37 ) }
    dend_8 { pt3dadd( -6.08209, 94.4925, -40.425, 0.37 ) }
    dend_8 { pt3dadd( -6.11262, 94.9647, -40.8121, 0.59 ) }
    dend_8 { pt3dadd( -6.15964, 95.5419, -41.3418, 0.44 ) }
    dend_8 { pt3dadd( -6.23161, 96.5486, -42.3995, 0.37 ) }
    dend_8 { pt3dadd( -6.275, 97.572, -43.5639, 0.59 ) }
    dend_8 { pt3dadd( -6.26561, 98.2684, -44.348, 0.44 ) }
    dend_8 { pt3dadd( -6.22347, 98.9509, -45.0762, 0.88 ) }
    dend_8 { pt3dadd( -6.17631, 99.4099, -45.4968, 1.18 ) }
    dend_8 { pt3dadd( -6.0887, 100.064, -45.9608, 0.44 ) }
    dend_8 { pt3dadd( -5.9981, 100.663, -46.2627, 0.29 ) }
    dend_8 { pt3dadd( -5.88893, 101.54, -46.5829, 0.66 ) }
    dend_8 { pt3dadd( -5.86859, 102.185, -46.7982, 0.66 ) }
    dend_8 { pt3dadd( -5.91378, 103.051, -47.0957, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_8 { pt3dadd( -5.98995, 103.63, -47.376, 0.37 ) }
    dend_8 { pt3dadd( -6.1578, 104.38, -47.8786, 0.37 ) }
    dend_8 { pt3dadd( -6.25789, 104.843, -48.2603, 0.37 ) }
    dend_8 { pt3dadd( -6.41673, 105.65, -49.035, 0.88 ) }
    dend_8 { pt3dadd( -6.46135, 106.114, -49.4816, 0.66 ) }
    dend_8 { pt3dadd( -6.46715, 107.233, -50.4624, 0.29 ) }
    dend_8 { pt3dadd( -6.45216, 107.953, -50.9682, 0.29 ) }
    dend_8 { pt3dadd( -6.44431, 108.808, -51.4652, 0.44 ) }
    dend_8 { pt3dadd( -6.4252, 109.163, -51.661, 0.44 ) }
    dend_8 { pt3dadd( -6.34373, 110.273, -52.1903, 0.37 ) }
    dend_8 { pt3dadd( -6.34413, 111.077, -52.5044, 0.37 ) }
    dend_8 { pt3dadd( -6.47539, 112.38, -52.7767, 0.37 ) }
    dend_8 { pt3dadd( -6.61318, 113.18, -52.86, 0.29 ) }
    dend_8 { pt3dadd( -7.69953, 122.628, -56.6957, 0.29 ) }
    dend_8 { pt3dadd( -9.22002, 132.376, -59.4943, 0.29 ) }
    dend_8 { pt3dadd( -10.344, 141.906, -63.1106, 0.29 ) }
    dend_8 { pt3dadd( -10.5668, 150.803, -68.2051, 0.29 ) }
    dend_8 { pt3dadd( -10.7033, 160.592, -71.2605, 0.29 ) }
    dend_8 { pt3dadd( -10.2403, 170.344, -74.3986, 0.29 ) }
    dend_8 { pt3dadd( -9.84014, 180.382, -76.4585, 0.29 ) }
    dend_8 { pt3dadd( -9.025, 190.593, -76.9275, 0.29 ) }
    dend_8 { pt3dadd( -9.20192, 200.837, -76.4877, 0.29 ) }
    dend_8 { pt3dadd( -8.63359, 210.969, -75.0102, 0.29 ) }
    dend_8 { pt3dadd( -8.73282, 221.208, -74.4316, 0.29 ) }
    dend_8 { pt3dadd( -9.04696, 231.431, -75.1769, 0.29 ) }
    dend_8 { pt3dadd( -11.3277, 241.426, -75.3964, 0.29 ) }
    dend_8 { pt3dadd( -11.3075, 251.681, -75.4762, 0.29 ) }
    dend_8 { pt3dadd( -10.5613, 261.841, -76.6534, 0.29 ) }
    dend_8 { pt3dadd( -9.91354, 271.721, -79.3217, 0.29 ) }
    dend_8 { pt3dadd( -10.914, 281.398, -82.5638, 0.29 ) }
    dend_8 { pt3dadd( -13.3745, 290.57, -86.4356, 0.29 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 31/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 5.40231, 22.8276, -1.56602, 0.96 ) }
    dend_4 { pt3dadd( 5.01384, 23.5434, -1.13159, 0.96 ) }
    dend_4 { pt3dadd( 4.47523, 24.4308, -0.566941, 0.52 ) }
    dend_4 { pt3dadd( 4.10966, 24.9856, -0.192047, 0.81 ) }
    dend_4 { pt3dadd( 3.67827, 25.6256, 0.24171, 0.81 ) }
    dend_4 { pt3dadd( 3.3123, 26.1574, 0.609415, 0.74 ) }
    dend_4 { pt3dadd( 2.89796, 26.7465, 1.02815, 0.59 ) }
    dend_4 { pt3dadd( 2.46571, 27.3423, 1.47607, 0.74 ) }
    dend_4 { pt3dadd( 2.03847, 27.9229, 1.89899, 1.03 ) }
    dend_4 { pt3dadd( 1.49858, 28.6901, 2.39576, 0.81 ) }
    dend_4 { pt3dadd( 1.04702, 29.3753, 2.79319, 1.11 ) }
    dend_4 { pt3dadd( 0.749365, 29.8617, 3.0568, 1.25 ) }
    dend_4 { pt3dadd( 0.478189, 30.3426, 3.3017, 1.11 ) }
    dend_4 { pt3dadd( 0.120482, 31.0209, 3.60191, 0.66 ) }
    dend_4 { pt3dadd( -0.162009, 31.5627, 3.80366, 0.52 ) }
    dend_4 { pt3dadd( -0.501331, 32.2319, 4.01574, 0.66 ) }
    dend_4 { pt3dadd( -0.672923, 32.5939, 4.11185, 0.81 ) }
    dend_4 { pt3dadd( -0.936955, 33.1813, 4.25268, 1.11 ) }
    dend_4 { pt3dadd( -1.16608, 33.6954, 4.36783, 1.11 ) }
    dend_4 { pt3dadd( -1.59377, 34.662, 4.57278, 0.74 ) }
    dend_4 { pt3dadd( -2.00705, 35.6332, 4.7664, 0.66 ) }
    dend_4 { pt3dadd( -2.29138, 36.3703, 4.89202, 0.88 ) }
    dend_4 { pt3dadd( -2.54884, 37.0938, 5.01124, 0.74 ) }
    dend_4 { pt3dadd( -2.75937, 37.7335, 5.10878, 0.52 ) }
    dend_4 { pt3dadd( -2.89912, 38.1535, 5.1727, 0.37 ) }
    dend_4 { pt3dadd( -3.01591, 38.4608, 5.21846, 0.37 ) }
    dend_4 { pt3dadd( -3.16654, 38.7959, 5.26528, 0.44 ) }
    dend_4 { pt3dadd( -3.4467, 39.3519, 5.33739, 0.59 ) }
    dend_4 { pt3dadd( -3.67443, 39.7868, 5.387, 0.88 ) }
    dend_4 { pt3dadd( -3.85037, 40.1267, 5.42141, 1.18 ) }
    dend_4 { pt3dadd( -4.34073, 41.096, 5.51038, 0.74 ) }
    dend_4 { pt3dadd( -4.62276, 41.6708, 5.57848, 0.52 ) }
    dend_4 { pt3dadd( -4.8438, 42.172, 5.65001, 0.52 ) }
    dend_4 { pt3dadd( -5.04448, 42.695, 5.73885, 0.74 ) }
    dend_4 { pt3dadd( -5.14418, 42.9972, 5.80025, 0.74 ) }
    dend_4 { pt3dadd( -5.3425, 43.7162, 5.95343, 0.37 ) }
    dend_4 { pt3dadd( -5.46737, 44.2579, 6.08111, 0.37 ) }
    dend_4 { pt3dadd( -5.58139, 44.7482, 6.21137, 0.59 ) }
    dend_4 { pt3dadd( -5.70966, 45.2765, 6.35496, 0.88 ) }
    dend_4 { pt3dadd( -5.86173, 45.8638, 6.5045, 0.88 ) }
    dend_4 { pt3dadd( -6.01209, 46.4446, 6.6342, 0.74 ) }
    dend_4 { pt3dadd( -6.18393, 47.1219, 6.74407, 0.88 ) }
    dend_4 { pt3dadd( -6.28041, 47.5163, 6.78566, 1.11 ) }
    dend_4 { pt3dadd( -6.39478, 48.0247, 6.83752, 1.11 ) }
    dend_4 { pt3dadd( -6.5146, 48.5775, 6.91904, 0.88 ) }
    dend_4 { pt3dadd( -6.59683, 48.9542, 6.99203, 0.88 ) }
    dend_4 { pt3dadd( -6.78084, 49.8139, 7.1889, 0.52 ) }
    dend_4 { pt3dadd( -6.91672, 50.4708, 7.35099, 0.44 ) }
    dend_4 { pt3dadd( -7.08651, 51.3421, 7.57418, 0.37 ) }
    dend_4 { pt3dadd( -7.25393, 52.218, 7.81787, 0.37 ) }
    dend_4 { pt3dadd( -7.33952, 52.6282, 7.95155, 0.66 ) }
    dend_4 { pt3dadd( -7.44848, 53.0528, 8.11937, 0.96 ) }
    dend_4 { pt3dadd( -7.5778, 53.4755, 8.3073, 0.59 ) }
    dend_4 { pt3dadd( -7.83672, 54.1644, 8.61368, 0.37 ) }
    dend_4 { pt3dadd( -8.08666, 54.7513, 8.85782, 0.29 ) }
    dend_4 { pt3dadd( -8.31124, 55.264, 9.05318, 0.59 ) }
    dend_4 { pt3dadd( -8.63519, 55.9968, 9.3387, 0.44 ) }
    dend_4 { pt3dadd( -8.85765, 56.5175, 9.53694, 0.22 ) }
    dend_4 { pt3dadd( -9.04264, 56.9745, 9.7028, 0.22 ) }
    dend_4 { pt3dadd( -9.19342, 57.3761, 9.82788, 0.37 ) }
    dend_4 { pt3dadd( -9.30136, 57.7215, 9.89296, 0.59 ) }
    dend_4 { pt3dadd( -9.38399, 58.0603, 9.93998, 0.74 ) }
    dend_4 { pt3dadd( -9.48729, 58.6453, 10.0115, 0.66 ) }
    dend_4 { pt3dadd( -9.54102, 59.0142, 10.0659, 0.74 ) }
    dend_4 { pt3dadd( -9.6142, 59.4703, 10.1603, 0.81 ) }
    dend_4 { pt3dadd( -9.77472, 60.2755, 10.3796, 0.22 ) }
    dend_4 { pt3dadd( -9.91534, 60.9169, 10.5814, 0.22 ) }
    dend_4 { pt3dadd( -9.96984, 61.1697, 10.6726, 0.52 ) }
    dend_4 { pt3dadd( -10.0362, 61.5204, 10.8014, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -10.1895, 62.3759, 11.1514, 0.37 ) }
    dend_4 { pt3dadd( -10.2906, 62.9147, 11.4127, 0.37 ) }
    dend_4 { pt3dadd( -10.4361, 63.5441, 11.7645, 0.22 ) }
    dend_4 { pt3dadd( -10.5832, 64.0724, 12.0741, 0.22 ) }
    dend_4 { pt3dadd( -10.8247, 64.8271, 12.536, 0.29 ) }
    dend_4 { pt3dadd( -11.0869, 65.5892, 13.001, 0.29 ) }
    dend_4 { pt3dadd( -11.3422, 66.2755, 13.4142, 0.81 ) }
    dend_4 { pt3dadd( -11.5986, 66.8658, 13.766, 1.03 ) }
    dend_4 { pt3dadd( -11.891, 67.4407, 14.1017, 0.96 ) }
    dend_4 { pt3dadd( -12.2156, 68.028, 14.4076, 0.22 ) }
    dend_4 { pt3dadd( -12.5401, 68.6115, 14.674, 0.29 ) }
    dend_4 { pt3dadd( -12.8599, 69.2055, 14.8782, 0.59 ) }
    dend_4 { pt3dadd( -13.1069, 69.6905, 15.0248, 0.96 ) }
    dend_4 { pt3dadd( -13.3487, 70.2004, 15.181, 0.96 ) }
    dend_4 { pt3dadd( -13.5774, 70.689, 15.3368, 0.59 ) }
    dend_4 { pt3dadd( -13.9844, 71.5649, 15.6526, 0.22 ) }
    dend_4 { pt3dadd( -14.2782, 72.2025, 15.8984, 0.15 ) }
    dend_4 { pt3dadd( -14.5933, 72.9571, 16.2207, 0.15 ) }
    dend_4 { pt3dadd( -14.8719, 73.6881, 16.601, 0.15 ) }
    dend_4 { pt3dadd( -14.9787, 73.9818, 16.7772, 0.66 ) }
    dend_4 { pt3dadd( -15.1595, 74.4929, 17.1254, 1.33 ) }
    dend_4 { pt3dadd( -15.2602, 74.7977, 17.3513, 1.33 ) }
    dend_4 { pt3dadd( -15.5413, 75.7223, 18.1113, 0.15 ) }
    dend_4 { pt3dadd( -15.7506, 76.4031, 18.692, 0.15 ) }
    dend_4 { pt3dadd( -15.7971, 76.5553, 18.8252, 0.15 ) }
    dend_4 { pt3dadd( -15.9613, 77.0455, 19.2586, 0.74 ) }
    dend_4 { pt3dadd( -16.1886, 77.6743, 19.8053, 0.15 ) }
    dend_4 { pt3dadd( -16.4407, 78.3131, 20.359, 0.66 ) }
    dend_4 { pt3dadd( -16.6343, 78.727, 20.6995, 1.18 ) }
    dend_4 { pt3dadd( -16.7116, 78.8742, 20.8216, 1.18 ) }
    dend_4 { pt3dadd( -17.0755, 79.4747, 21.3767, 0.22 ) }
    dend_4 { pt3dadd( -17.3399, 79.8636, 21.7069, 0.37 ) }
    dend_4 { pt3dadd( -17.4457, 79.9985, 21.8249, 0.37 ) }
    dend_4 { pt3dadd( -17.963, 80.5801, 22.3864, 0.15 ) }
    dend_4 { pt3dadd( -18.5189, 81.1534, 23.0025, 0.15 ) }
    dend_4 { pt3dadd( -19.124, 81.733, 23.617, 0.37 ) }
    dend_4 { pt3dadd( -20.0175, 82.5783, 24.4584, 0.22 ) }
    dend_4 { pt3dadd( -20.8007, 83.3112, 25.1934, 0.44 ) }
    dend_4 { pt3dadd( -21.3379, 83.8364, 25.7021, 0.44 ) }
    dend_4 { pt3dadd( -21.6522, 84.1621, 25.9923, 0.44 ) }
    dend_4 { pt3dadd( -22.1873, 84.7897, 26.5259, 0.22 ) }
    dend_4 { pt3dadd( -22.6633, 85.4233, 27.1075, 0.15 ) }
    dend_4 { pt3dadd( -23.1049, 86.0806, 27.7775, 0.15 ) }
    dend_4 { pt3dadd( -23.2881, 86.4003, 28.074, 0.81 ) }
    dend_4 { pt3dadd( -23.4407, 86.7005, 28.3479, 0.29 ) }
    dend_4 { pt3dadd( -23.7596, 87.4268, 29.0275, 0.15 ) }
    dend_4 { pt3dadd( -23.9611, 87.9918, 29.6144, 0.15 ) }
    dend_4 { pt3dadd( -24.0589, 88.324, 29.9935, 0.15 ) }
    dend_4 { pt3dadd( -24.1196, 88.5811, 30.2905, 0.52 ) }
    dend_4 { pt3dadd( -24.1367, 88.6804, 30.404, 0.52 ) }
    dend_4 { pt3dadd( -24.1913, 89.1088, 30.8939, 0.22 ) }
    dend_4 { pt3dadd( -24.2791, 89.9328, 31.781, 0.22 ) }
    dend_4 { pt3dadd( -24.3317, 90.5922, 32.4486, 0.22 ) }
    dend_4 { pt3dadd( -24.3608, 91.006, 32.8866, 0.88 ) }
    dend_4 { pt3dadd( -24.4208, 91.639, 33.5818, 0.15 ) }
    dend_4 { pt3dadd( -24.5124, 92.3274, 34.3228, 0.52 ) }
    dend_4 { pt3dadd( -24.5626, 92.611, 34.6137, 0.52 ) }
    dend_4 { pt3dadd( -24.6413, 92.9765, 34.9322, 0.15 ) }
    dend_4 { pt3dadd( -24.8461, 93.8279, 35.5505, 0.15 ) }
    dend_4 { pt3dadd( -24.994, 94.3924, 35.9362, 0.15 ) }
    dend_4 { pt3dadd( -25.1166, 94.8379, 36.2083, 0.59 ) }
    dend_4 { pt3dadd( -25.1781, 95.0916, 36.334, 1.25 ) }
    dend_4 { pt3dadd( -25.2559, 95.47, 36.4985, 1.25 ) }
    dend_4 { pt3dadd( -25.3668, 96.2891, 36.7824, 0.22 ) }
    dend_4 { pt3dadd( -25.4106, 97.3918, 37.0374, 0.22 ) }
    dend_4 { pt3dadd( -25.3945, 97.8041, 37.1152, 0.22 ) }
    dend_4 { pt3dadd( -25.3537, 98.277, 37.1938, 0.44 ) }
    dend_4 { pt3dadd( -25.3227, 98.5508, 37.2283, 0.59 ) }
    dend_4 { pt3dadd( -25.228, 99.3253, 37.3317, 0.22 ) }
    dend_4 { pt3dadd( -25.0916, 100.278, 37.4509, 0.15 ) }
    dend_4 { pt3dadd( -24.9985, 100.868, 37.51, 0.15 ) }
    dend_4 { pt3dadd( -24.9308, 101.37, 37.5639, 0.66 ) }
    dend_4 { pt3dadd( -24.8271, 102.42, 37.6747, 0.22 ) }
    dend_4 { pt3dadd( -24.7557, 103.582, 37.8152, 0.22 ) }
    dend_4 { pt3dadd( -24.7503, 104.076, 37.88, 0.59 ) }
    dend_4 { pt3dadd( -24.7674, 104.621, 37.9551, 0.88 ) }
    dend_4 { pt3dadd( -24.8501, 105.941, 38.1288, 0.15 ) }
    dend_4 { pt3dadd( -24.9276, 106.719, 38.2481, 0.15 ) }
    dend_4 { pt3dadd( -24.9935, 107.151, 38.3143, 0.15 ) }
    dend_4 { pt3dadd( -25.0823, 107.608, 38.3715, 0.52 ) }
    dend_4 { pt3dadd( -25.1352, 107.833, 38.4172, 0.52 ) }
    dend_4 { pt3dadd( -25.3333, 108.61, 38.6479, 0.22 ) }
    dend_4 { pt3dadd( -25.5076, 109.273, 38.9251, 0.22 ) }
    dend_4 { pt3dadd( -25.684, 110.078, 39.3227, 0.22 ) }
    dend_4 { pt3dadd( -25.7796, 110.637, 39.6261, 0.07 ) }
    dend_4 { pt3dadd( -25.8944, 111.465, 40.1075, 0.07 ) }
    dend_4 { pt3dadd( -25.9453, 111.879, 40.354, 0.44 ) }
    dend_4 { pt3dadd( -26.0024, 112.418, 40.6751, 0.74 ) }
    dend_4 { pt3dadd( -26.0559, 113.261, 41.1068, 0.15 ) }
    dend_4 { pt3dadd( -26.0621, 113.853, 41.4022, 0.15 ) }
    dend_4 { pt3dadd( -26.0513, 114.466, 41.6698, 0.37 ) }
    dend_4 { pt3dadd( -26.0404, 114.778, 41.7778, 1.47 ) }
    dend_4 { pt3dadd( -26.0263, 115.133, 41.884, 1.47 ) }
    dend_4 { pt3dadd( -25.9726, 116.185, 42.1424, 0.07 ) }
    dend_4 { pt3dadd( -25.9186, 117.261, 42.3944, 0.07 ) }
    dend_4 { pt3dadd( -25.8913, 117.753, 42.5077, 0.07 ) }
    dend_4 { pt3dadd( -25.8712, 118.074, 42.5855, 0.29 ) }
    dend_4 { pt3dadd( -25.8465, 118.474, 42.6855, 0.29 ) }
    dend_4 { pt3dadd( -25.8055, 119.159, 42.8521, 0.07 ) }
    dend_4 { pt3dadd( -25.7844, 119.821, 43.0398, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( -25.7811, 120.037, 43.1001, 0.07 ) }
    dend_4 { pt3dadd( -25.7751, 120.387, 43.2109, 0.44 ) }
    dend_4 { pt3dadd( -25.7709, 120.656, 43.3013, 0.44 ) }
    dend_4 { pt3dadd( -25.7662, 121.363, 43.5329, 0.15 ) }
    dend_4 { pt3dadd( -25.7668, 122.227, 43.7189, 0.15 ) }
    dend_4 { pt3dadd( -25.7677, 122.504, 43.7405, 0.44 ) }
    dend_4 { pt3dadd( -25.7747, 122.822, 43.7368, 0.44 ) }
    dend_4 { pt3dadd( -25.7819, 123.014, 43.7177, 0.44 ) }
    dend_4 { pt3dadd( -25.8097, 123.729, 43.547, 0.15 ) }
    dend_4 { pt3dadd( -25.8509, 124.64, 43.2272, 0.15 ) }
    dend_4 { pt3dadd( -25.8608, 124.992, 43.0848, 0.44 ) }
    dend_4 { pt3dadd( -25.8646, 125.525, 42.9255, 0.59 ) }
    dend_4 { pt3dadd( -25.8483, 126.391, 42.8166, 0.15 ) }
    dend_4 { pt3dadd( -25.8088, 127.231, 42.855, 0.15 ) }
    dend_4 { pt3dadd( -25.7883, 127.601, 42.9323, 0.15 ) }
    dend_4 { pt3dadd( -25.7548, 128.307, 43.1535, 0.29 ) }
    dend_4 { pt3dadd( -25.6998, 129.592, 43.607, 0.22 ) }
    dend_4 { pt3dadd( -25.6581, 130.742, 44.0528, 0.22 ) }
    dend_4 { pt3dadd( -25.6388, 131.697, 44.4081, 0.07 ) }
    dend_4 { pt3dadd( -25.6433, 132.389, 44.6694, 0.07 ) }
    dend_4 { pt3dadd( -25.6649, 133.138, 44.9237, 0.07 ) }
    dend_4 { pt3dadd( -25.7028, 133.67, 45.085, 0.29 ) }
    dend_4 { pt3dadd( -25.7394, 133.978, 45.1526, 0.29 ) }
    dend_4 { pt3dadd( -25.902, 134.959, 45.4124, 0.15 ) }
    dend_4 { pt3dadd( -26.1299, 136.104, 45.9001, 0.15 ) }
    dend_4 { pt3dadd( -26.2045, 136.458, 46.0925, 0.52 ) }
    dend_4 { pt3dadd( -26.3438, 136.989, 46.4365, 0.52 ) }
    dend_4 { pt3dadd( -26.5259, 137.511, 46.8092, 0.22 ) }
    dend_4 { pt3dadd( -26.9337, 138.404, 47.4649, 0.22 ) }
    dend_4 { pt3dadd( -27.127, 138.75, 47.7194, 0.22 ) }
    dend_4 { pt3dadd( -27.4166, 139.171, 47.9575, 0.96 ) }
    dend_4 { pt3dadd( -27.79, 139.647, 48.1647, 0.15 ) }
    dend_4 { pt3dadd( -28.2393, 140.185, 48.3031, 0.15 ) }
    dend_4 { pt3dadd( -28.6929, 140.705, 48.3807, 0.29 ) }
    dend_4 { pt3dadd( -28.9631, 141.013, 48.3879, 0.22 ) }
    dend_4 { pt3dadd( -29.3243, 141.43, 48.3851, 0.37 ) }
    dend_4 { pt3dadd( -29.5324, 141.681, 48.3822, 0.37 ) }
    dend_4 { pt3dadd( -29.9703, 142.257, 48.3797, 0.15 ) }
    dend_4 { pt3dadd( -30.2266, 142.61, 48.3756, 0.15 ) }
    dend_4 { pt3dadd( -30.456, 142.923, 48.3741, 0.52 ) }
    dend_4 { pt3dadd( -30.7832, 143.341, 48.3688, 0.88 ) }
    dend_4 { pt3dadd( -31.3966, 144.064, 48.3447, 0.15 ) }
    dend_4 { pt3dadd( -31.8743, 144.587, 48.3281, 0.15 ) }
    dend_4 { pt3dadd( -32.0542, 144.768, 48.3244, 0.37 ) }
    dend_4 { pt3dadd( -32.3831, 145.088, 48.3198, 0.66 ) }
    dend_4 { pt3dadd( -32.7903, 145.477, 48.2966, 0.22 ) }
    dend_4 { pt3dadd( -33.4087, 146.061, 48.2553, 0.15 ) }
    dend_4 { pt3dadd( -33.9393, 146.568, 48.2125, 0.44 ) }
    dend_4 { pt3dadd( -34.564, 147.181, 48.1492, 0.44 ) }
    dend_4 { pt3dadd( -35.1989, 147.852, 48.0629, 0.07 ) }
    dend_4 { pt3dadd( -35.7763, 148.515, 47.9616, 0.07 ) }
    dend_4 { pt3dadd( -36.0209, 148.825, 47.906, 0.15 ) }
    dend_4 { pt3dadd( -36.3124, 149.221, 47.8552, 0.59 ) }
    dend_4 { pt3dadd( -36.4444, 149.409, 47.8211, 0.59 ) }
    dend_4 { pt3dadd( -36.9038, 150.094, 47.6839, 0.07 ) }
    dend_4 { pt3dadd( -37.1527, 150.474, 47.6151, 0.15 ) }
    dend_4 { pt3dadd( -37.5811, 151.102, 47.5679, 0.07 ) }
    dend_4 { pt3dadd( -38.1683, 151.935, 47.5289, 0.07 ) }
    dend_4 { pt3dadd( -38.8282, 152.837, 47.531, 0.44 ) }
    dend_4 { pt3dadd( -38.9803, 153.043, 47.5393, 0.44 ) }
    dend_4 { pt3dadd( -39.547, 153.773, 47.6703, 0.15 ) }
    dend_4 { pt3dadd( -40.0251, 154.391, 47.8288, 0.15 ) }
    dend_4 { pt3dadd( -40.2869, 154.733, 47.9328, 0.59 ) }
    dend_4 { pt3dadd( -40.5032, 155.01, 48.0227, 0.59 ) }
    dend_4 { pt3dadd( -40.992, 155.604, 48.3142, 0.15 ) }
    dend_4 { pt3dadd( -41.5882, 156.318, 48.695, 0.15 ) }
    dend_4 { pt3dadd( -41.8474, 156.623, 48.8637, 0.29 ) }
    dend_4 { pt3dadd( -42.0841, 156.913, 48.9987, 0.29 ) }
    dend_4 { pt3dadd( -42.6037, 157.559, 49.3315, 0.07 ) }
    dend_4 { pt3dadd( -43.1399, 158.25, 49.6939, 0.07 ) }
    dend_4 { pt3dadd( -43.3849, 158.586, 49.8622, 0.66 ) }
    dend_4 { pt3dadd( -43.54, 158.82, 49.9603, 0.66 ) }
    dend_4 { pt3dadd( -44.0112, 159.566, 50.3034, 0.15 ) }
    dend_4 { pt3dadd( -44.445, 160.303, 50.644, 0.15 ) }
    dend_4 { pt3dadd( -44.6595, 160.708, 50.8173, 0.44 ) }
    dend_4 { pt3dadd( -44.8098, 161.022, 50.9347, 0.59 ) }
    dend_4 { pt3dadd( -45.1552, 161.845, 51.2203, 0.15 ) }
    dend_4 { pt3dadd( -45.462, 162.815, 51.488, 0.15 ) }
    dend_4 { pt3dadd( -45.5266, 163.182, 51.5595, 0.37 ) }
    dend_4 { pt3dadd( -45.5446, 163.651, 51.5878, 0.81 ) }
    dend_4 { pt3dadd( -45.5025, 164.163, 51.5801, 0.44 ) }
    dend_4 { pt3dadd( -45.3634, 164.904, 51.5149, 0.15 ) }
    dend_4 { pt3dadd( -45.1054, 165.829, 51.3709, 0.15 ) }
    dend_4 { pt3dadd( -44.8891, 166.567, 51.2244, 0.15 ) }
    dend_4 { pt3dadd( -44.7058, 167.239, 51.0925, 0.15 ) }
    dend_4 { pt3dadd( -44.5769, 167.77, 50.9905, 0.52 ) }
    dend_4 { pt3dadd( -44.4767, 168.221, 50.9037, 0.52 ) }
    dend_4 { pt3dadd( -44.2993, 169.2, 50.7246, 0.22 ) }
    dend_4 { pt3dadd( -44.2334, 169.87, 50.6283, 0.22 ) }
    dend_4 { pt3dadd( -44.2258, 170.422, 50.5593, 0.22 ) }
    dend_4 { pt3dadd( -44.2436, 170.84, 50.5322, 0.29 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 91/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.40231, 22.8276, -1.56602, 1.62 ) }
    dend_1 { pt3dadd( 6.17249, 23.8941, -0.97084, 1.62 ) }
    dend_1 { pt3dadd( 6.71333, 24.6495, -0.52781, 1.4 ) }
    dend_1 { pt3dadd( 7.61948, 25.9152, 0.214475, 1.4 ) }
    dend_1 { pt3dadd( 8.86786, 27.6588, 1.23709, 1.25 ) }
    dend_1 { pt3dadd( 9.79638, 28.9557, 1.99769, 1.33 ) }
    dend_1 { pt3dadd( 10.6906, 30.2046, 2.73015, 1.55 ) }
    dend_1 { pt3dadd( 11.3355, 31.1869, 3.38954, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 99/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -23.6209, 34.5989, 0.0, 0.670034 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    axon_1 { pt3dadd( -31.8844, 47.1175, 0.0, 0.670034 ) }
    axon_1 { pt3dadd( -40.1479, 59.636, 0.0, 0.670034 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 2/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.97883, -28.0622, -10.6803, 1.99 ) }
    dend_53 { pt3dadd( 5.1689, -30.308, -10.8126, 1.99 ) }
    dend_53 { pt3dadd( 5.23835, -31.522, -10.9492, 1.7 ) }
    dend_53 { pt3dadd( 5.31889, -33.2829, -11.1944, 1.47 ) }
    dend_53 { pt3dadd( 5.34711, -34.646, -11.3986, 1.92 ) }
    dend_53 { pt3dadd( 5.33918, -35.8525, -11.6024, 1.84 ) }
    dend_53 { pt3dadd( 5.31996, -37.3116, -11.8558, 1.77 ) }
    dend_53 { pt3dadd( 5.29313, -38.3493, -12.0507, 2.06 ) }
    dend_53 { pt3dadd( 5.28588, -39.2224, -12.2069, 1.84 ) }
    dend_53 { pt3dadd( 5.30091, -40.2989, -12.3869, 1.77 ) }
    dend_53 { pt3dadd( 5.32357, -42.2462, -12.6627, 1.7 ) }
    dend_53 { pt3dadd( 5.36733, -43.8083, -12.8723, 1.77 ) }
    dend_53 { pt3dadd( 5.46123, -45.8416, -13.108, 1.84 ) }
    dend_53 { pt3dadd( 5.58763, -47.6415, -13.2559, 2.06 ) }
    dend_53 { pt3dadd( 5.68628, -48.7312, -13.3401, 2.14 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 17/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 4.97883, -28.0622, -10.6803, 1.25 ) }
    dend_52 { pt3dadd( 4.18116, -28.3416, -10.5577, 1.25 ) }
    dend_52 { pt3dadd( 2.88123, -28.9135, -10.3277, 0.66 ) }
    dend_52 { pt3dadd( 2.15878, -29.2912, -10.1724, 0.81 ) }
    dend_52 { pt3dadd( 0.914853, -30.0652, -9.8905, 0.96 ) }
    dend_52 { pt3dadd( -0.0240499, -30.7251, -9.69109, 0.66 ) }
    dend_52 { pt3dadd( -0.599682, -31.1534, -9.59881, 0.37 ) }
    dend_52 { pt3dadd( -1.31419, -31.7716, -9.49846, 0.52 ) }
    dend_52 { pt3dadd( -1.90991, -32.3316, -9.424, 0.44 ) }
    dend_52 { pt3dadd( -2.5575, -32.9142, -9.34799, 0.44 ) }
    dend_52 { pt3dadd( -3.30759, -33.5359, -9.30445, 0.52 ) }
    dend_52 { pt3dadd( -4.13071, -34.0936, -9.26057, 0.52 ) }
    dend_52 { pt3dadd( -5.05438, -34.6001, -9.1967, 0.74 ) }
    dend_52 { pt3dadd( -6.08388, -35.0318, -9.0838, 0.59 ) }
    dend_52 { pt3dadd( -6.84753, -35.2833, -8.98344, 0.59 ) }
    dend_52 { pt3dadd( -7.65616, -35.5099, -8.84676, 0.37 ) }
    dend_52 { pt3dadd( -8.59979, -35.7878, -8.62767, 0.37 ) }
    dend_52 { pt3dadd( -8.79514, -35.8538, -8.56568, 0.37 ) }
    dend_52 { pt3dadd( -9.36621, -36.0913, -8.34921, 0.37 ) }
    dend_52 { pt3dadd( -9.87524, -36.3524, -8.14089, 0.81 ) }
    dend_52 { pt3dadd( -10.4665, -36.7263, -7.86218, 1.03 ) }
    dend_52 { pt3dadd( -11.2536, -37.2769, -7.4573, 0.37 ) }
    dend_52 { pt3dadd( -12.1165, -37.9381, -7.01684, 0.37 ) }
    dend_52 { pt3dadd( -12.7708, -38.4737, -6.68029, 0.59 ) }
    dend_52 { pt3dadd( -13.0907, -38.7442, -6.5097, 0.88 ) }
    dend_52 { pt3dadd( -13.8696, -39.4009, -6.09454, 0.44 ) }
    dend_52 { pt3dadd( -14.8248, -40.1994, -5.6112, 0.29 ) }
    dend_52 { pt3dadd( -15.6876, -40.932, -5.23614, 0.29 ) }
    dend_52 { pt3dadd( -16.1674, -41.3557, -5.07494, 0.22 ) }
    dend_52 { pt3dadd( -16.8525, -41.9296, -4.89781, 0.22 ) }
    dend_52 { pt3dadd( -17.2857, -42.2773, -4.80885, 0.44 ) }
    dend_52 { pt3dadd( -18.1427, -42.9459, -4.70181, 1.11 ) }
    dend_52 { pt3dadd( -18.6978, -43.348, -4.66074, 1.11 ) }
    dend_52 { pt3dadd( -19.5583, -43.8958, -4.59256, 0.96 ) }
    dend_52 { pt3dadd( -20.7737, -44.6163, -4.46918, 0.22 ) }
    dend_52 { pt3dadd( -21.3051, -44.9303, -4.40777, 0.22 ) }
    dend_52 { pt3dadd( -21.7054, -45.1595, -4.34073, 0.59 ) }
    dend_52 { pt3dadd( -22.5172, -45.6133, -4.18587, 0.81 ) }
    dend_52 { pt3dadd( -23.4252, -46.1287, -3.97782, 0.22 ) }
    dend_52 { pt3dadd( -24.1802, -46.5642, -3.78649, 0.22 ) }
    dend_52 { pt3dadd( -25.1566, -47.1527, -3.54842, 0.22 ) }
    dend_52 { pt3dadd( -26.0434, -47.7058, -3.36891, 0.22 ) }
    dend_52 { pt3dadd( -26.462, -47.9952, -3.30612, 0.37 ) }
    dend_52 { pt3dadd( -26.848, -48.2928, -3.28479, 0.37 ) }
    dend_52 { pt3dadd( -27.2698, -48.6434, -3.30414, 0.52 ) }
    dend_52 { pt3dadd( -27.6109, -48.9381, -3.34641, 1.18 ) }
    dend_52 { pt3dadd( -28.4831, -49.7312, -3.46151, 0.37 ) }
    dend_52 { pt3dadd( -29.5406, -50.7716, -3.60952, 0.22 ) }
    dend_52 { pt3dadd( -30.1481, -51.3936, -3.69342, 0.22 ) }
    dend_52 { pt3dadd( -30.5354, -51.7856, -3.73245, 0.81 ) }
    dend_52 { pt3dadd( -31.3271, -52.58, -3.79019, 0.81 ) }
    dend_52 { pt3dadd( -32.4737, -53.685, -3.81056, 0.29 ) }
    dend_52 { pt3dadd( -33.2234, -54.3568, -3.80258, 0.29 ) }
    dend_52 { pt3dadd( -34.062, -55.0312, -3.78028, 0.29 ) }
    dend_52 { pt3dadd( -35.2018, -55.8895, -3.6911, 0.29 ) }
    dend_52 { pt3dadd( -35.5728, -56.1497, -3.64728, 0.74 ) }
    dend_52 { pt3dadd( -36.5958, -56.8129, -3.47317, 1.18 ) }
    dend_52 { pt3dadd( -37.5892, -57.4162, -3.27915, 0.44 ) }
    dend_52 { pt3dadd( -38.6953, -58.0704, -3.02939, 0.29 ) }
    dend_52 { pt3dadd( -39.6954, -58.6622, -2.79055, 0.29 ) }
    dend_52 { pt3dadd( -40.4794, -59.1478, -2.61372, 0.88 ) }
    dend_52 { pt3dadd( -41.4329, -59.7594, -2.3988, 0.96 ) }
    dend_52 { pt3dadd( -42.2907, -60.3349, -2.22368, 0.22 ) }
    dend_52 { pt3dadd( -42.7544, -60.6601, -2.12984, 0.15 ) }
    dend_52 { pt3dadd( -43.0495, -60.881, -2.09411, 0.22 ) }
    dend_52 { pt3dadd( -43.5955, -61.3082, -2.07978, 0.15 ) }
    dend_52 { pt3dadd( -43.868, -61.5395, -2.0955, 0.15 ) }
    dend_52 { pt3dadd( -44.2303, -61.8626, -2.11509, 0.29 ) }
    dend_52 { pt3dadd( -44.571, -62.1601, -2.11457, 0.29 ) }
    dend_52 { pt3dadd( -45.1198, -62.627, -2.08292, 0.15 ) }
    dend_52 { pt3dadd( -45.4934, -62.939, -2.04436, 0.15 ) }
    dend_52 { pt3dadd( -45.8985, -63.2707, -1.96758, 0.22 ) }
    dend_52 { pt3dadd( -46.8392, -64.0344, -1.69969, 0.22 ) }
    dend_52 { pt3dadd( -47.3552, -64.4432, -1.54018, 0.66 ) }
    dend_52 { pt3dadd( -48.0197, -64.974, -1.33716, 1.4 ) }
    dend_52 { pt3dadd( -48.782, -65.5925, -1.12339, 0.29 ) }
    dend_52 { pt3dadd( -49.6611, -66.3329, -0.899219, 0.15 ) }
    dend_52 { pt3dadd( -50.6221, -67.1696, -0.644017, 0.15 ) }
    dend_52 { pt3dadd( -51.4251, -67.8769, -0.436606, 0.15 ) }
    dend_52 { pt3dadd( -52.0772, -68.4404, -0.255647, 0.15 ) }
    dend_52 { pt3dadd( -52.5839, -68.8756, -0.120638, 0.52 ) }
    dend_52 { pt3dadd( -53.436, -69.6172, 0.0872111, 0.52 ) }
    dend_52 { pt3dadd( -54.3892, -70.4334, 0.286104, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_52 { pt3dadd( -55.2768, -71.1991, 0.461645, 0.22 ) }
    dend_52 { pt3dadd( -55.9247, -71.7466, 0.578665, 0.22 ) }
    dend_52 { pt3dadd( -56.3705, -72.109, 0.651072, 0.81 ) }
    dend_52 { pt3dadd( -56.9434, -72.5703, 0.720562, 0.88 ) }
    dend_52 { pt3dadd( -58.0089, -73.4164, 0.783454, 0.15 ) }
    dend_52 { pt3dadd( -58.5087, -73.8208, 0.805572, 0.15 ) }
    dend_52 { pt3dadd( -59.5478, -74.7015, 0.850741, 0.15 ) }
    dend_52 { pt3dadd( -60.3814, -75.4149, 0.88453, 0.15 ) }
    dend_52 { pt3dadd( -60.8733, -75.8362, 0.896015, 0.52 ) }
    dend_52 { pt3dadd( -61.6039, -76.4632, 0.929299, 0.81 ) }
    dend_52 { pt3dadd( -62.4758, -77.2332, 0.975907, 0.22 ) }
    dend_52 { pt3dadd( -63.2051, -77.8785, 0.988899, 0.15 ) }
    dend_52 { pt3dadd( -63.6255, -78.2518, 0.971915, 0.22 ) }
    dend_52 { pt3dadd( -64.8167, -79.2782, 0.764969, 0.15 ) }
    dend_52 { pt3dadd( -66.0483, -80.2927, 0.384225, 0.15 ) }
    dend_52 { pt3dadd( -66.616, -80.7474, 0.133089, 1.03 ) }
    dend_52 { pt3dadd( -67.539, -81.4476, -0.419312, 0.52 ) }
    dend_52 { pt3dadd( -68.3503, -82.023, -0.976148, 0.37 ) }
    dend_52 { pt3dadd( -69.3824, -82.7286, -1.76667, 0.22 ) }
    dend_52 { pt3dadd( -70.3255, -83.3403, -2.57369, 0.15 ) }
    dend_52 { pt3dadd( -70.7637, -83.6268, -2.97979, 0.52 ) }
    dend_52 { pt3dadd( -71.9054, -84.3821, -4.00307, 0.15 ) }
    dend_52 { pt3dadd( -72.4974, -84.7703, -4.46885, 0.15 ) }
    dend_52 { pt3dadd( -72.7946, -84.9582, -4.66235, 0.44 ) }
    dend_52 { pt3dadd( -73.2089, -85.209, -4.85458, 0.44 ) }
    dend_52 { pt3dadd( -74.2105, -85.7985, -5.16272, 0.15 ) }
    dend_52 { pt3dadd( -74.7352, -86.1137, -5.23672, 0.22 ) }
    dend_52 { pt3dadd( -75.581, -86.6471, -5.25543, 0.07 ) }
    dend_52 { pt3dadd( -76.1953, -87.0491, -5.24761, 0.81 ) }
    dend_52 { pt3dadd( -76.4532, -87.2181, -5.2422, 0.81 ) }
    dend_52 { pt3dadd( -77.9019, -88.1817, -5.22239, 0.15 ) }
    dend_52 { pt3dadd( -79.4704, -89.2426, -5.26425, 0.15 ) }
    dend_52 { pt3dadd( -80.0253, -89.6361, -5.3087, 0.22 ) }
    dend_52 { pt3dadd( -80.5753, -90.0435, -5.37431, 0.88 ) }
    dend_52 { pt3dadd( -81.1445, -90.4778, -5.45025, 1.33 ) }
    dend_52 { pt3dadd( -81.7964, -90.9835, -5.54402, 0.22 ) }
    dend_52 { pt3dadd( -82.9816, -91.9339, -5.74647, 0.15 ) }
    dend_52 { pt3dadd( -84.3467, -93.0744, -6.06583, 0.15 ) }
    dend_52 { pt3dadd( -84.9915, -93.6309, -6.21308, 0.15 ) }
    dend_52 { pt3dadd( -85.3461, -93.9496, -6.27932, 0.37 ) }
    dend_52 { pt3dadd( -85.7353, -94.3057, -6.32613, 0.88 ) }
    dend_52 { pt3dadd( -86.5869, -95.0697, -6.38355, 0.15 ) }
    dend_52 { pt3dadd( -87.4164, -95.7545, -6.42217, 0.15 ) }
    dend_52 { pt3dadd( -88.0177, -96.1995, -6.46658, 0.15 ) }
    dend_52 { pt3dadd( -89.1828, -96.9802, -6.58933, 0.22 ) }
    dend_52 { pt3dadd( -89.8653, -97.4013, -6.67505, 0.66 ) }
    dend_52 { pt3dadd( -90.4812, -97.7476, -6.7379, 0.81 ) }
    dend_52 { pt3dadd( -91.8287, -98.461, -6.88498, 0.15 ) }
    dend_52 { pt3dadd( -92.846, -98.9844, -6.94314, 0.15 ) }
    dend_52 { pt3dadd( -93.526, -99.3304, -6.92748, 0.37 ) }
    dend_52 { pt3dadd( -94.3497, -99.7359, -6.86648, 0.81 ) }
    dend_52 { pt3dadd( -95.3934, -100.241, -6.73693, 0.59 ) }
    dend_52 { pt3dadd( -97.123, -101.066, -6.43077, 0.15 ) }
    dend_52 { pt3dadd( -98.6551, -101.788, -6.09033, 0.29 ) }
    dend_52 { pt3dadd( -99.9665, -102.383, -5.7894, 0.29 ) }
    dend_52 { pt3dadd( -100.906, -102.816, -5.61063, 0.15 ) }
    dend_52 { pt3dadd( -101.979, -103.35, -5.43599, 0.15 ) }
    dend_52 { pt3dadd( -102.493, -103.631, -5.39008, 0.44 ) }
    dend_52 { pt3dadd( -102.937, -103.893, -5.37861, 0.52 ) }
    dend_52 { pt3dadd( -103.496, -104.262, -5.43797, 0.29 ) }
    dend_52 { pt3dadd( -104.654, -105.109, -5.57605, 0.15 ) }
    dend_52 { pt3dadd( -105.849, -106.06, -5.62131, 0.15 ) }
    dend_52 { pt3dadd( -106.352, -106.486, -5.61304, 0.66 ) }
    dend_52 { pt3dadd( -106.916, -106.977, -5.58381, 0.66 ) }
    dend_52 { pt3dadd( -107.606, -107.59, -5.50336, 0.15 ) }
    dend_52 { pt3dadd( -108.547, -108.437, -5.35712, 0.15 ) }
    dend_52 { pt3dadd( -109.244, -109.067, -5.23367, 0.15 ) }
    dend_52 { pt3dadd( -109.691, -109.488, -5.18276, 0.81 ) }
    dend_52 { pt3dadd( -109.978, -109.778, -5.16155, 0.81 ) }
    dend_52 { pt3dadd( -111.075, -110.964, -5.14337, 0.15 ) }
    dend_52 { pt3dadd( -111.519, -111.451, -5.14254, 0.15 ) }
    dend_52 { pt3dadd( -111.691, -111.647, -5.15156, 0.22 ) }
    dend_52 { pt3dadd( -112.699, -112.821, -5.23353, 0.15 ) }
    dend_52 { pt3dadd( -113.75, -114.015, -5.31285, 0.15 ) }
    dend_52 { pt3dadd( -114.241, -114.568, -5.35198, 0.37 ) }
    dend_52 { pt3dadd( -115.303, -115.705, -5.3946, 0.22 ) }
    dend_52 { pt3dadd( -115.855, -116.258, -5.3753, 0.37 ) }
    dend_52 { pt3dadd( -116.489, -116.865, -5.3298, 0.37 ) }
    dend_52 { pt3dadd( -117.039, -117.37, -5.27334, 0.37 ) }
    dend_52 { pt3dadd( -117.484, -117.764, -5.23018, 0.59 ) }
    dend_52 { pt3dadd( -118.82, -118.935, -5.07616, 0.15 ) }
    dend_52 { pt3dadd( -120.018, -119.998, -4.92332, 0.07 ) }
    dend_52 { pt3dadd( -120.741, -120.65, -4.80622, 0.07 ) }
    dend_52 { pt3dadd( -121.207, -121.092, -4.72302, 0.59 ) }
    dend_52 { pt3dadd( -121.563, -121.455, -4.66279, 0.59 ) }
    dend_52 { pt3dadd( -122.614, -122.645, -4.46044, 0.15 ) }
    dend_52 { pt3dadd( -123.189, -123.372, -4.35424, 0.15 ) }
    dend_52 { pt3dadd( -123.553, -123.863, -4.27946, 0.22 ) }
    dend_52 { pt3dadd( -123.872, -124.311, -4.22163, 0.59 ) }
    dend_52 { pt3dadd( -124.07, -124.606, -4.1967, 0.59 ) }
    dend_52 { pt3dadd( -124.996, -126.091, -4.16994, 0.15 ) }
    dend_52 { pt3dadd( -125.334, -126.663, -4.2194, 0.15 ) }
    dend_52 { pt3dadd( -125.813, -127.467, -4.32865, 0.15 ) }
    dend_52 { pt3dadd( -126.285, -128.255, -4.49872, 0.15 ) }
    dend_52 { pt3dadd( -126.532, -128.682, -4.62341, 0.29 ) }
    dend_52 { pt3dadd( -126.818, -129.193, -4.81659, 0.52 ) }
    dend_52 { pt3dadd( -127.195, -129.925, -5.24037, 0.15 ) }
    dend_52 { pt3dadd( -127.396, -130.354, -5.54352, 0.15 ) }
    dend_52 { pt3dadd( -127.743, -131.189, -6.27424, 0.15 ) }
    dend_52 { pt3dadd( -127.863, -131.495, -6.57539, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( -127.943, -131.707, -6.80115, 0.59 ) }
    dend_52 { pt3dadd( -128.43, -132.98, -8.05513, 0.07 ) }
    dend_52 { pt3dadd( -128.902, -134.154, -8.98102, 0.07 ) }
    dend_52 { pt3dadd( -129.451, -135.387, -9.67107, 0.15 ) }
    dend_52 { pt3dadd( -129.548, -135.582, -9.73972, 0.29 ) }
    dend_52 { pt3dadd( -129.976, -136.313, -9.8656, 0.52 ) }
    dend_52 { pt3dadd( -131.168, -138.093, -9.82337, 0.07 ) }
    dend_52 { pt3dadd( -132.245, -139.542, -9.53151, 0.07 ) }
    dend_52 { pt3dadd( -132.849, -140.31, -9.30378, 0.07 ) }
    dend_52 { pt3dadd( -133.113, -140.625, -9.20794, 0.29 ) }
    dend_52 { pt3dadd( -134.216, -141.894, -8.88916, 0.07 ) }
    dend_52 { pt3dadd( -135.102, -142.873, -8.72339, 0.07 ) }
    dend_52 { pt3dadd( -135.369, -143.158, -8.72618, 0.37 ) }
    dend_52 { pt3dadd( -135.663, -143.457, -8.76232, 0.52 ) }
    dend_52 { pt3dadd( -136.698, -144.501, -8.94804, 0.15 ) }
    dend_52 { pt3dadd( -137.227, -145.039, -9.04323, 0.15 ) }
    dend_52 { pt3dadd( -137.819, -145.659, -9.17143, 0.22 ) }
    dend_52 { pt3dadd( -138.24, -146.109, -9.2729, 0.37 ) }
    dend_52 { pt3dadd( -138.647, -146.552, -9.36462, 0.44 ) }
    dend_52 { pt3dadd( -139.128, -147.106, -9.47097, 0.22 ) }
    dend_52 { pt3dadd( -139.863, -148.045, -9.64416, 0.66 ) }
    dend_52 { pt3dadd( -140.512, -148.958, -9.807, 0.22 ) }
    dend_52 { pt3dadd( -141.136, -149.902, -9.94261, 0.07 ) }
    dend_52 { pt3dadd( -141.415, -150.349, -10.0002, 0.15 ) }
    dend_52 { pt3dadd( -141.92, -151.213, -10.1085, 0.59 ) }
    dend_52 { pt3dadd( -142.634, -152.497, -10.2835, 0.07 ) }
    dend_52 { pt3dadd( -143.1, -153.379, -10.4248, 0.07 ) }
    dend_52 { pt3dadd( -143.719, -154.553, -10.6086, 0.15 ) }
    dend_52 { pt3dadd( -143.978, -155.026, -10.6833, 0.37 ) }
    dend_52 { pt3dadd( -144.38, -155.714, -10.8009, 0.37 ) }
    dend_52 { pt3dadd( -144.822, -156.418, -10.9399, 0.37 ) }
    dend_52 { pt3dadd( -145.31, -157.161, -11.1155, 0.07 ) }
    dend_52 { pt3dadd( -146.036, -158.267, -11.4235, 0.07 ) }
    dend_52 { pt3dadd( -146.367, -158.783, -11.5816, 0.52 ) }
    dend_52 { pt3dadd( -146.547, -159.084, -11.6704, 0.52 ) }
    dend_52 { pt3dadd( -147.191, -160.202, -11.9469, 0.07 ) }
    dend_52 { pt3dadd( -147.755, -161.247, -12.1656, 0.07 ) }
    dend_52 { pt3dadd( -148.046, -161.832, -12.262, 0.52 ) }
    dend_52 { pt3dadd( -148.216, -162.225, -12.3433, 0.52 ) }
    dend_52 { pt3dadd( -148.708, -163.486, -12.6456, 0.07 ) }
    dend_52 { pt3dadd( -149.281, -165.055, -13.0675, 0.07 ) }
    dend_52 { pt3dadd( -149.507, -165.68, -13.2529, 0.22 ) }
    dend_52 { pt3dadd( -149.995, -166.967, -13.667, 0.07 ) }
    dend_52 { pt3dadd( -150.688, -168.767, -14.2736, 0.07 ) }
    dend_52 { pt3dadd( -150.843, -169.169, -14.4166, 0.37 ) }
    dend_52 { pt3dadd( -151.616, -171.178, -15.1891, 0.07 ) }
    dend_52 { pt3dadd( -152.23, -172.841, -15.8863, 0.07 ) }
    dend_52 { pt3dadd( -152.736, -174.163, -16.4352, 0.07 ) }
    dend_52 { pt3dadd( -152.968, -174.724, -16.6569, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 16.3803, -22.9367, 1.46293, 1.03 ) }
    dend_46 { pt3dadd( 17.4213, -23.6156, 0.586893, 1.03 ) }
    dend_46 { pt3dadd( 18.7697, -24.495, -0.547914, 1.03 ) }
    dend_46 { pt3dadd( 19.5491, -25.0033, -1.20388, 1.11 ) }
    dend_46 { pt3dadd( 20.4034, -25.5604, -1.92278, 1.25 ) }
    dend_46 { pt3dadd( 20.9943, -25.9458, -2.42011, 1.47 ) }
    dend_46 { pt3dadd( 21.8684, -26.5159, -3.15573, 1.84 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 16.3803, -22.9367, 1.46293, 1.25 ) }
    dend_43 { pt3dadd( 17.0209, -24.0519, -0.137413, 1.25 ) }
    dend_43 { pt3dadd( 17.7937, -25.5648, -1.9914, 0.81 ) }
    dend_43 { pt3dadd( 18.1922, -26.4256, -2.89108, 0.74 ) }
    dend_43 { pt3dadd( 18.573, -27.3013, -3.68375, 0.59 ) }
    dend_43 { pt3dadd( 18.7987, -27.8429, -4.10445, 0.66 ) }
    dend_43 { pt3dadd( 19.1093, -28.62, -4.62603, 0.52 ) }
    dend_43 { pt3dadd( 19.4285, -29.5394, -4.98721, 0.88 ) }
    dend_43 { pt3dadd( 19.6916, -30.4175, -5.13921, 0.52 ) }
    dend_43 { pt3dadd( 19.8946, -31.1693, -5.19263, 0.44 ) }
    dend_43 { pt3dadd( 20.1296, -32.0686, -5.19673, 0.59 ) }
    dend_43 { pt3dadd( 20.3334, -32.8426, -5.18071, 0.74 ) }
    dend_43 { pt3dadd( 20.5583, -33.723, -5.14248, 0.59 ) }
    dend_43 { pt3dadd( 20.7385, -34.4598, -5.09395, 0.59 ) }
    dend_43 { pt3dadd( 20.8764, -35.1025, -5.05522, 0.96 ) }
    dend_43 { pt3dadd( 21.0048, -35.8512, -5.01467, 1.03 ) }
    dend_43 { pt3dadd( 21.1362, -36.8144, -5.00732, 0.66 ) }
    dend_43 { pt3dadd( 21.2588, -37.7903, -5.04044, 0.44 ) }
    dend_43 { pt3dadd( 21.3299, -38.2658, -5.07857, 0.29 ) }
    dend_43 { pt3dadd( 21.4166, -38.6761, -5.11709, 0.29 ) }
    dend_43 { pt3dadd( 21.5301, -39.0172, -5.12489, 0.29 ) }
    dend_43 { pt3dadd( 21.9027, -39.8457, -5.04297, 0.44 ) }
    dend_43 { pt3dadd( 22.1847, -40.3544, -4.91219, 0.59 ) }
    dend_43 { pt3dadd( 22.5446, -40.954, -4.69431, 0.81 ) }
    dend_43 { pt3dadd( 22.9539, -41.6341, -4.40034, 0.74 ) }
    dend_43 { pt3dadd( 23.4811, -42.521, -3.97724, 0.59 ) }
    dend_43 { pt3dadd( 23.863, -43.2109, -3.64018, 0.59 ) }
    dend_43 { pt3dadd( 24.2445, -43.9787, -3.26593, 0.59 ) }
    dend_43 { pt3dadd( 24.6292, -44.847, -2.86947, 0.88 ) }
    dend_43 { pt3dadd( 25.0931, -46.0295, -2.39731, 1.03 ) }
    dend_43 { pt3dadd( 25.4536, -47.0532, -2.06456, 0.88 ) }
    dend_43 { pt3dadd( 25.744, -47.9353, -1.83179, 0.88 ) }
    dend_43 { pt3dadd( 26.0212, -48.8003, -1.6361, 1.18 ) }
    dend_43 { pt3dadd( 26.3052, -49.7637, -1.43169, 0.74 ) }
    dend_43 { pt3dadd( 26.5884, -50.8545, -1.2025, 0.66 ) }
    dend_43 { pt3dadd( 26.8003, -51.7814, -1.00018, 0.66 ) }
    dend_43 { pt3dadd( 26.9448, -52.44, -0.897979, 0.52 ) }
    dend_43 { pt3dadd( 27.1453, -53.3394, -0.802438, 0.52 ) }
    dend_43 { pt3dadd( 27.3764, -54.3821, -0.718988, 0.52 ) }
    dend_43 { pt3dadd( 27.5805, -55.3587, -0.679982, 0.59 ) }
    dend_43 { pt3dadd( 27.7371, -56.212, -0.667137, 0.74 ) }
    dend_43 { pt3dadd( 28.0903, -58.2725, -0.69444, 0.96 ) }
    dend_43 { pt3dadd( 28.2362, -59.1286, -0.720856, 0.66 ) }
    dend_43 { pt3dadd( 28.4525, -60.3037, -0.785338, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_43 { pt3dadd( 28.7075, -61.532, -0.864612, 1.47 ) }
    dend_43 { pt3dadd( 28.9372, -62.603, -0.911764, 0.81 ) }
    dend_43 { pt3dadd( 29.1543, -63.6288, -0.875385, 0.74 ) }
    dend_43 { pt3dadd( 29.3538, -64.5354, -0.733611, 0.74 ) }
    dend_43 { pt3dadd( 29.4747, -65.0153, -0.638284, 0.52 ) }
    dend_43 { pt3dadd( 29.6391, -65.5384, -0.505771, 0.29 ) }
    dend_43 { pt3dadd( 29.7912, -65.9134, -0.376106, 0.29 ) }
    dend_43 { pt3dadd( 30.2304, -66.8388, -0.00786185, 0.37 ) }
    dend_43 { pt3dadd( 30.6042, -67.6018, 0.335004, 0.59 ) }
    dend_43 { pt3dadd( 30.9113, -68.2692, 0.628263, 0.74 ) }
    dend_43 { pt3dadd( 31.2577, -69.0595, 0.942898, 0.74 ) }
    dend_43 { pt3dadd( 31.5214, -69.6628, 1.1638, 0.44 ) }
    dend_43 { pt3dadd( 31.8409, -70.3852, 1.4202, 0.59 ) }
    dend_43 { pt3dadd( 32.2302, -71.2786, 1.70181, 0.66 ) }
    dend_43 { pt3dadd( 32.5472, -72.0775, 1.93649, 0.66 ) }
    dend_43 { pt3dadd( 32.9436, -73.141, 2.1551, 0.59 ) }
    dend_43 { pt3dadd( 33.3612, -74.3318, 2.3161, 0.37 ) }
    dend_43 { pt3dadd( 33.602, -75.062, 2.38334, 0.37 ) }
    dend_43 { pt3dadd( 33.81, -75.752, 2.40957, 0.74 ) }
    dend_43 { pt3dadd( 34.079, -76.7301, 2.42516, 0.29 ) }
    dend_43 { pt3dadd( 34.3966, -78.0617, 2.47673, 0.37 ) }
    dend_43 { pt3dadd( 34.5241, -78.8018, 2.53131, 0.59 ) }
    dend_43 { pt3dadd( 34.6162, -79.5456, 2.60727, 0.81 ) }
    dend_43 { pt3dadd( 34.7197, -80.5418, 2.75502, 1.03 ) }
    dend_43 { pt3dadd( 34.8305, -81.6528, 3.06404, 0.59 ) }
    dend_43 { pt3dadd( 34.9185, -82.4252, 3.3659, 0.37 ) }
    dend_43 { pt3dadd( 34.9987, -83.1547, 3.70118, 0.37 ) }
    dend_43 { pt3dadd( 35.0617, -83.6863, 3.93469, 0.59 ) }
    dend_43 { pt3dadd( 35.1425, -84.3356, 4.20324, 1.33 ) }
    dend_43 { pt3dadd( 35.2799, -85.5839, 4.66152, 0.66 ) }
    dend_43 { pt3dadd( 35.34, -86.2498, 4.85768, 0.44 ) }
    dend_43 { pt3dadd( 35.4103, -87.2326, 5.09012, 0.52 ) }
    dend_43 { pt3dadd( 35.4524, -88.294, 5.30623, 0.37 ) }
    dend_43 { pt3dadd( 35.4484, -89.3811, 5.47742, 0.37 ) }
    dend_43 { pt3dadd( 35.3979, -90.2441, 5.56469, 0.37 ) }
    dend_43 { pt3dadd( 35.3498, -90.6663, 5.56658, 0.37 ) }
    dend_43 { pt3dadd( 35.1979, -91.6111, 5.52268, 0.22 ) }
    dend_43 { pt3dadd( 35.0661, -92.2622, 5.46798, 0.22 ) }
    dend_43 { pt3dadd( 34.9085, -92.9156, 5.3613, 0.66 ) }
    dend_43 { pt3dadd( 34.7442, -93.5236, 5.21291, 0.88 ) }
    dend_43 { pt3dadd( 34.4802, -94.4872, 4.93143, 0.22 ) }
    dend_43 { pt3dadd( 34.3302, -95.0256, 4.76224, 0.29 ) }
    dend_43 { pt3dadd( 34.163, -95.635, 4.53643, 0.66 ) }
    dend_43 { pt3dadd( 33.9637, -96.4354, 4.21072, 1.18 ) }
    dend_43 { pt3dadd( 33.8072, -97.1176, 3.93856, 1.47 ) }
    dend_43 { pt3dadd( 33.6272, -98.01, 3.58135, 0.96 ) }
    dend_43 { pt3dadd( 33.4629, -98.9215, 3.23692, 0.37 ) }
    dend_43 { pt3dadd( 33.2887, -100.057, 2.83355, 0.29 ) }
    dend_43 { pt3dadd( 33.158, -101.038, 2.51672, 0.29 ) }
    dend_43 { pt3dadd( 33.0735, -101.747, 2.31812, 0.37 ) }
    dend_43 { pt3dadd( 32.9805, -102.675, 2.08473, 0.66 ) }
    dend_43 { pt3dadd( 32.8769, -103.793, 1.84704, 0.59 ) }
    dend_43 { pt3dadd( 32.8, -104.787, 1.67256, 0.29 ) }
    dend_43 { pt3dadd( 32.7374, -105.989, 1.52626, 0.22 ) }
    dend_43 { pt3dadd( 32.7179, -106.7, 1.44643, 0.22 ) }
    dend_43 { pt3dadd( 32.7165, -107.244, 1.38406, 0.66 ) }
    dend_43 { pt3dadd( 32.7316, -107.963, 1.29924, 0.96 ) }
    dend_43 { pt3dadd( 32.7599, -108.56, 1.22268, 0.81 ) }
    dend_43 { pt3dadd( 32.839, -109.827, 1.03661, 0.29 ) }
    dend_43 { pt3dadd( 32.8975, -110.669, 0.905037, 0.29 ) }
    dend_43 { pt3dadd( 32.9465, -111.381, 0.807551, 0.29 ) }
    dend_43 { pt3dadd( 32.9847, -112.033, 0.724732, 0.81 ) }
    dend_43 { pt3dadd( 33.0364, -112.994, 0.614354, 1.11 ) }
    dend_43 { pt3dadd( 33.0666, -113.878, 0.526355, 0.81 ) }
    dend_43 { pt3dadd( 33.0774, -114.422, 0.479619, 0.44 ) }
    dend_43 { pt3dadd( 33.1024, -115.552, 0.379009, 0.22 ) }
    dend_43 { pt3dadd( 33.1194, -116.322, 0.27452, 0.52 ) }
    dend_43 { pt3dadd( 33.1345, -116.971, 0.163489, 0.81 ) }
    dend_43 { pt3dadd( 33.1562, -117.916, -0.0225654, 0.37 ) }
    dend_43 { pt3dadd( 33.1713, -118.603, -0.180232, 0.15 ) }
    dend_43 { pt3dadd( 33.1916, -119.477, -0.411163, 0.15 ) }
    dend_43 { pt3dadd( 33.218, -120.355, -0.686229, 0.22 ) }
    dend_43 { pt3dadd( 33.2407, -120.874, -0.854089, 0.81 ) }
    dend_43 { pt3dadd( 33.2801, -121.608, -1.08622, 0.52 ) }
    dend_43 { pt3dadd( 33.3294, -122.384, -1.31312, 0.29 ) }
    dend_43 { pt3dadd( 33.3788, -123.261, -1.51328, 0.22 ) }
    dend_43 { pt3dadd( 33.4291, -124.207, -1.6601, 0.22 ) }
    dend_43 { pt3dadd( 33.4527, -124.685, -1.70767, 0.22 ) }
    dend_43 { pt3dadd( 33.4803, -125.339, -1.75894, 0.59 ) }
    dend_43 { pt3dadd( 33.4923, -125.88, -1.78779, 0.52 ) }
    dend_43 { pt3dadd( 33.4858, -126.717, -1.80658, 0.29 ) }
    dend_43 { pt3dadd( 33.4522, -127.38, -1.80975, 0.29 ) }
    dend_43 { pt3dadd( 33.4153, -127.917, -1.80385, 0.88 ) }
    dend_43 { pt3dadd( 33.3744, -128.575, -1.8036, 1.7 ) }
    dend_43 { pt3dadd( 33.3363, -129.221, -1.81141, 1.84 ) }
    dend_43 { pt3dadd( 33.3045, -129.822, -1.82714, 1.84 ) }
    dend_43 { pt3dadd( 33.2668, -130.61, -1.86086, 0.96 ) }
    dend_43 { pt3dadd( 33.2256, -131.775, -1.89526, 0.29 ) }
    dend_43 { pt3dadd( 33.2152, -132.49, -1.90797, 0.29 ) }
    dend_43 { pt3dadd( 33.2298, -133.221, -1.91323, 0.29 ) }
    dend_43 { pt3dadd( 33.2677, -133.875, -1.93737, 0.29 ) }
    dend_43 { pt3dadd( 33.3126, -134.41, -1.98867, 0.66 ) }
    dend_43 { pt3dadd( 33.3675, -134.926, -2.06467, 1.18 ) }
    dend_43 { pt3dadd( 33.4504, -135.685, -2.21011, 0.29 ) }
    dend_43 { pt3dadd( 33.5691, -136.657, -2.42263, 0.22 ) }
    dend_43 { pt3dadd( 33.6952, -137.672, -2.62867, 0.22 ) }
    dend_43 { pt3dadd( 33.7989, -138.624, -2.80526, 0.22 ) }
    dend_43 { pt3dadd( 33.8461, -139.161, -2.89381, 0.22 ) }
    dend_43 { pt3dadd( 33.8916, -139.921, -3.00343, 0.81 ) }
    dend_43 { pt3dadd( 33.9211, -140.53, -3.052, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_43 { pt3dadd( 33.9568, -141.531, -3.06094, 0.15 ) }
    dend_43 { pt3dadd( 33.9911, -142.375, -3.01145, 0.15 ) }
    dend_43 { pt3dadd( 34.0334, -143.149, -2.94692, 0.15 ) }
    dend_43 { pt3dadd( 34.0772, -143.737, -2.9029, 0.96 ) }
    dend_43 { pt3dadd( 34.1648, -144.611, -2.86328, 1.47 ) }
    dend_43 { pt3dadd( 34.2798, -145.56, -2.85058, 0.81 ) }
    dend_43 { pt3dadd( 34.4385, -146.689, -2.87781, 0.29 ) }
    dend_43 { pt3dadd( 34.5643, -147.562, -2.90931, 0.22 ) }
    dend_43 { pt3dadd( 34.6514, -148.235, -2.9456, 0.29 ) }
    dend_43 { pt3dadd( 34.7382, -149.006, -3.00431, 0.81 ) }
    dend_43 { pt3dadd( 34.7866, -149.538, -3.07623, 0.74 ) }
    dend_43 { pt3dadd( 34.8338, -150.186, -3.18544, 0.37 ) }
    dend_43 { pt3dadd( 34.8542, -150.668, -3.27991, 0.22 ) }
    dend_43 { pt3dadd( 34.8659, -151.225, -3.37846, 0.22 ) }
    dend_43 { pt3dadd( 34.8732, -151.474, -3.41353, 0.29 ) }
    dend_43 { pt3dadd( 34.9198, -152.303, -3.48628, 0.37 ) }
    dend_43 { pt3dadd( 34.9779, -152.838, -3.47562, 0.37 ) }
    dend_43 { pt3dadd( 35.0903, -153.535, -3.35478, 0.22 ) }
    dend_43 { pt3dadd( 35.2356, -154.259, -3.11036, 0.37 ) }
    dend_43 { pt3dadd( 35.352, -154.786, -2.88232, 0.88 ) }
    dend_43 { pt3dadd( 35.4566, -155.246, -2.65513, 1.84 ) }
    dend_43 { pt3dadd( 35.7174, -156.294, -2.09148, 1.7 ) }
    dend_43 { pt3dadd( 36.0275, -157.38, -1.46677, 0.29 ) }
    dend_43 { pt3dadd( 36.3146, -158.308, -0.926064, 0.29 ) }
    dend_43 { pt3dadd( 36.4864, -158.863, -0.597861, 0.29 ) }
    dend_43 { pt3dadd( 36.5948, -159.222, -0.391685, 0.74 ) }
    dend_43 { pt3dadd( 36.7954, -159.884, -0.0326529, 0.81 ) }
    dend_43 { pt3dadd( 37.0631, -160.727, 0.360328, 0.29 ) }
    dend_43 { pt3dadd( 37.231, -161.23, 0.57364, 0.15 ) }
    dend_43 { pt3dadd( 37.4851, -161.996, 0.852952, 0.15 ) }
    dend_43 { pt3dadd( 37.6896, -162.601, 1.04407, 0.22 ) }
    dend_43 { pt3dadd( 37.8319, -163.031, 1.15186, 0.37 ) }
    dend_43 { pt3dadd( 38.0023, -163.561, 1.24323, 0.88 ) }
    dend_43 { pt3dadd( 38.1669, -164.07, 1.28952, 0.59 ) }
    dend_43 { pt3dadd( 38.4614, -164.97, 1.33284, 0.15 ) }
    dend_43 { pt3dadd( 38.8467, -166.166, 1.37602, 0.15 ) }
    dend_43 { pt3dadd( 39.0426, -166.816, 1.40577, 0.15 ) }
    dend_43 { pt3dadd( 39.281, -167.731, 1.46299, 0.22 ) }
    dend_43 { pt3dadd( 39.4372, -168.494, 1.52746, 0.22 ) }
    dend_43 { pt3dadd( 39.5788, -169.446, 1.66396, 0.29 ) }
    dend_43 { pt3dadd( 39.6385, -170.24, 1.83627, 0.88 ) }
    dend_43 { pt3dadd( 39.6371, -170.585, 1.94128, 0.88 ) }
    dend_43 { pt3dadd( 39.5813, -171.685, 2.38268, 0.22 ) }
    dend_43 { pt3dadd( 39.5103, -172.465, 2.75824, 0.37 ) }
    dend_43 { pt3dadd( 39.3866, -173.429, 3.28744, 0.22 ) }
    dend_43 { pt3dadd( 39.2861, -174.084, 3.66898, 1.4 ) }
    dend_43 { pt3dadd( 39.1556, -174.922, 4.16664, 0.88 ) }
    dend_43 { pt3dadd( 38.9818, -175.985, 4.80841, 0.15 ) }
    dend_43 { pt3dadd( 38.8484, -176.725, 5.24123, 0.15 ) }
    dend_43 { pt3dadd( 38.69, -177.586, 5.72034, 0.15 ) }
    dend_43 { pt3dadd( 38.6071, -178.023, 5.93319, 0.66 ) }
    dend_43 { pt3dadd( 38.4409, -178.832, 6.30219, 1.47 ) }
    dend_43 { pt3dadd( 38.2915, -179.404, 6.545, 1.25 ) }
    dend_43 { pt3dadd( 38.0323, -180.203, 6.8522, 0.29 ) }
    dend_43 { pt3dadd( 37.6994, -181.1, 7.16814, 0.22 ) }
    dend_43 { pt3dadd( 37.4185, -181.786, 7.40908, 0.59 ) }
    dend_43 { pt3dadd( 37.0206, -182.632, 7.71459, 0.15 ) }
    dend_43 { pt3dadd( 36.5981, -183.413, 8.01678, 0.15 ) }
    dend_43 { pt3dadd( 36.2297, -184.01, 8.27793, 0.15 ) }
    dend_43 { pt3dadd( 35.7431, -184.706, 8.62762, 0.22 ) }
    dend_43 { pt3dadd( 35.3713, -185.182, 8.87724, 0.59 ) }
    dend_43 { pt3dadd( 35.0592, -185.56, 9.0937, 0.88 ) }
    dend_43 { pt3dadd( 34.6338, -186.095, 9.43116, 0.22 ) }
    dend_43 { pt3dadd( 34.063, -186.875, 9.95805, 0.15 ) }
    dend_43 { pt3dadd( 33.7717, -187.295, 10.2453, 0.52 ) }
    dend_43 { pt3dadd( 33.5346, -187.679, 10.4968, 1.11 ) }
    dend_43 { pt3dadd( 32.9591, -188.778, 11.1343, 0.07 ) }
    dend_43 { pt3dadd( 32.6095, -189.573, 11.5512, 0.07 ) }
    dend_43 { pt3dadd( 32.3358, -190.29, 11.8508, 0.07 ) }
    dend_43 { pt3dadd( 32.1509, -190.861, 12.0415, 1.03 ) }
    dend_43 { pt3dadd( 31.8085, -192.02, 12.3552, 0.15 ) }
    dend_43 { pt3dadd( 31.5226, -193.118, 12.5906, 0.15 ) }
    dend_43 { pt3dadd( 31.3862, -193.695, 12.6806, 0.44 ) }
    dend_43 { pt3dadd( 31.0068, -195.329, 12.8604, 0.22 ) }
    dend_43 { pt3dadd( 30.7931, -196.259, 12.9375, 0.22 ) }
    dend_43 { pt3dadd( 30.5272, -197.416, 13.0052, 0.22 ) }
    dend_43 { pt3dadd( 30.2342, -198.701, 13.0356, 0.07 ) }
    dend_43 { pt3dadd( 30.1107, -199.25, 13.0254, 0.07 ) }
    dend_43 { pt3dadd( 29.9209, -200.101, 12.9537, 0.07 ) }
    dend_43 { pt3dadd( 29.8277, -200.535, 12.8843, 0.07 ) }
    dend_43 { pt3dadd( 29.7469, -200.873, 12.8038, 0.52 ) }
    dend_43 { pt3dadd( 29.6121, -201.376, 12.65, 0.52 ) }
    dend_43 { pt3dadd( 29.2829, -202.45, 12.2712, 0.07 ) }
    dend_43 { pt3dadd( 28.9369, -203.503, 11.887, 0.07 ) }
    dend_43 { pt3dadd( 28.7954, -203.912, 11.7383, 0.52 ) }
    dend_43 { pt3dadd( 28.5409, -204.588, 11.5491, 0.29 ) }
    dend_43 { pt3dadd( 28.0794, -205.762, 11.3201, 0.22 ) }
    dend_43 { pt3dadd( 27.8769, -206.265, 11.2621, 0.52 ) }
    dend_43 { pt3dadd( 27.642, -206.855, 11.2267, 1.03 ) }
    dend_43 { pt3dadd( 27.4379, -207.372, 11.2189, 0.44 ) }
    dend_43 { pt3dadd( 26.844, -208.907, 11.2119, 0.07 ) }
    dend_43 { pt3dadd( 26.348, -210.232, 11.2275, 0.15 ) }
    dend_43 { pt3dadd( 25.9992, -211.19, 11.2622, 0.15 ) }
    dend_43 { pt3dadd( 25.7471, -211.902, 11.3054, 0.59 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -11.2473, -11.601, 1.62214, 1.03 ) }
    dend_38 { pt3dadd( -11.531, -12.8979, 1.1354, 1.03 ) }
    dend_38 { pt3dadd( -11.8642, -14.3922, 0.568535, 0.81 ) }
    dend_38 { pt3dadd( -12.0083, -15.0113, 0.320162, 0.81 ) }
    dend_38 { pt3dadd( -12.192, -15.7799, 0.0165629, 0.88 ) }
    dend_38 { pt3dadd( -12.5017, -17.0401, -0.511546, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_38 { pt3dadd( -12.7413, -17.9714, -0.899014, 1.03 ) }
    dend_38 { pt3dadd( -12.9771, -18.8277, -1.2502, 0.81 ) }
    dend_38 { pt3dadd( -13.3182, -20.082, -1.72855, 1.33 ) }
    dend_38 { pt3dadd( -13.5972, -21.1201, -2.10372, 1.18 ) }
    dend_38 { pt3dadd( -13.8888, -22.2237, -2.45981, 1.4 ) }
    dend_38 { pt3dadd( -14.2569, -23.6115, -2.84187, 0.59 ) }
    dend_38 { pt3dadd( -14.5236, -24.6181, -3.06867, 0.59 ) }
    dend_38 { pt3dadd( -14.7527, -25.5257, -3.21327, 0.74 ) }
    dend_38 { pt3dadd( -14.9919, -26.4956, -3.30726, 0.66 ) }
    dend_38 { pt3dadd( -15.3084, -27.7948, -3.37354, 0.66 ) }
    dend_38 { pt3dadd( -15.5012, -28.5911, -3.3763, 0.81 ) }
    dend_38 { pt3dadd( -15.7246, -29.568, -3.34798, 0.88 ) }
    dend_38 { pt3dadd( -15.9333, -30.5217, -3.30196, 0.88 ) }
    dend_38 { pt3dadd( -16.1368, -31.4836, -3.2462, 0.96 ) }
    dend_38 { pt3dadd( -16.273, -32.2119, -3.19776, 1.18 ) }
    dend_38 { pt3dadd( -16.412, -33.1049, -3.13602, 1.47 ) }
    dend_38 { pt3dadd( -16.5817, -34.4674, -3.01513, 1.11 ) }
    dend_38 { pt3dadd( -16.6507, -35.1719, -2.95019, 0.96 ) }
    dend_38 { pt3dadd( -16.6898, -35.7625, -2.90694, 0.81 ) }
    dend_38 { pt3dadd( -16.7367, -36.8351, -2.86077, 0.74 ) }
    dend_38 { pt3dadd( -16.7732, -37.7633, -2.85948, 0.81 ) }
    dend_38 { pt3dadd( -16.8203, -38.7397, -2.92261, 0.81 ) }
    dend_38 { pt3dadd( -16.8855, -39.6156, -3.04051, 0.96 ) }
    dend_38 { pt3dadd( -16.9977, -40.7113, -3.24571, 0.88 ) }
    dend_38 { pt3dadd( -17.0897, -41.4734, -3.42748, 0.81 ) }
    dend_38 { pt3dadd( -17.2429, -42.4955, -3.71785, 0.74 ) }
    dend_38 { pt3dadd( -17.4142, -43.5553, -4.04098, 0.81 ) }
    dend_38 { pt3dadd( -17.5432, -44.2889, -4.28634, 0.88 ) }
    dend_38 { pt3dadd( -17.6876, -45.0716, -4.54821, 1.03 ) }
    dend_38 { pt3dadd( -17.8034, -45.6771, -4.74595, 1.03 ) }
    dend_38 { pt3dadd( -18.1438, -47.3473, -5.24104, 0.44 ) }
    dend_38 { pt3dadd( -18.3432, -48.2332, -5.49089, 0.44 ) }
    dend_38 { pt3dadd( -18.5729, -49.1998, -5.72669, 0.66 ) }
    dend_38 { pt3dadd( -18.693, -49.7052, -5.83155, 0.88 ) }
    dend_38 { pt3dadd( -18.85, -50.3644, -5.92152, 1.11 ) }
    dend_38 { pt3dadd( -19.1385, -51.5393, -5.99546, 0.88 ) }
    dend_38 { pt3dadd( -19.4092, -52.6754, -5.95182, 0.44 ) }
    dend_38 { pt3dadd( -19.5877, -53.4606, -5.86166, 0.44 ) }
    dend_38 { pt3dadd( -19.7824, -54.3804, -5.69187, 0.59 ) }
    dend_38 { pt3dadd( -20.0182, -55.596, -5.4354, 0.44 ) }
    dend_38 { pt3dadd( -20.1693, -56.5082, -5.22899, 0.37 ) }
    dend_38 { pt3dadd( -20.3237, -57.6738, -4.97423, 0.52 ) }
    dend_38 { pt3dadd( -20.4414, -58.6138, -4.79961, 0.88 ) }
    dend_38 { pt3dadd( -20.5462, -59.4004, -4.70028, 0.88 ) }
    dend_38 { pt3dadd( -20.6758, -60.2793, -4.6334, 1.47 ) }
    dend_38 { pt3dadd( -20.7785, -60.9256, -4.61894, 1.47 ) }
    dend_38 { pt3dadd( -20.9682, -61.9675, -4.63564, 0.88 ) }
    dend_38 { pt3dadd( -21.1978, -63.0813, -4.69097, 0.52 ) }
    dend_38 { pt3dadd( -21.4429, -64.1821, -4.73051, 0.44 ) }
    dend_38 { pt3dadd( -21.6232, -64.9283, -4.74989, 0.52 ) }
    dend_38 { pt3dadd( -21.7824, -65.5439, -4.75238, 0.59 ) }
    dend_38 { pt3dadd( -21.9581, -66.2066, -4.74619, 0.37 ) }
    dend_38 { pt3dadd( -22.1463, -66.9414, -4.73609, 0.37 ) }
    dend_38 { pt3dadd( -22.3986, -67.9368, -4.72956, 0.37 ) }
    dend_38 { pt3dadd( -22.5289, -68.4593, -4.70595, 0.74 ) }
    dend_38 { pt3dadd( -22.7251, -69.2628, -4.65187, 1.18 ) }
    dend_38 { pt3dadd( -22.9226, -70.0684, -4.62175, 1.25 ) }
    dend_38 { pt3dadd( -23.1702, -71.039, -4.61681, 0.52 ) }
    dend_38 { pt3dadd( -23.4512, -72.0821, -4.63849, 0.29 ) }
    dend_38 { pt3dadd( -23.9024, -73.7005, -4.70492, 0.59 ) }
    dend_38 { pt3dadd( -24.1316, -74.5427, -4.74449, 0.66 ) }
    dend_38 { pt3dadd( -24.4861, -75.9296, -4.75911, 0.96 ) }
    dend_38 { pt3dadd( -24.7554, -77.0974, -4.72415, 1.03 ) }
    dend_38 { pt3dadd( -24.9435, -78.1083, -4.64952, 1.33 ) }
    dend_38 { pt3dadd( -25.0315, -78.8541, -4.56269, 0.52 ) }
    dend_38 { pt3dadd( -25.1133, -80.1922, -4.37422, 0.37 ) }
    dend_38 { pt3dadd( -25.1369, -81.5842, -4.10374, 0.37 ) }
    dend_38 { pt3dadd( -25.1247, -82.4518, -3.89592, 0.66 ) }
    dend_38 { pt3dadd( -25.1013, -83.3515, -3.69502, 1.03 ) }
    dend_38 { pt3dadd( -25.0878, -84.2938, -3.5145, 0.88 ) }
    dend_38 { pt3dadd( -25.094, -85.17, -3.38199, 0.59 ) }
    dend_38 { pt3dadd( -25.1422, -86.2408, -3.27019, 0.37 ) }
    dend_38 { pt3dadd( -25.2348, -87.294, -3.23378, 0.44 ) }
    dend_38 { pt3dadd( -25.3766, -88.4236, -3.2388, 0.29 ) }
    dend_38 { pt3dadd( -25.5933, -89.6995, -3.28687, 0.22 ) }
    dend_38 { pt3dadd( -25.7048, -90.2345, -3.30533, 0.44 ) }
    dend_38 { pt3dadd( -25.8474, -90.8464, -3.31676, 0.88 ) }
    dend_38 { pt3dadd( -25.9259, -91.1515, -3.31982, 0.96 ) }
    dend_38 { pt3dadd( -26.1795, -92.0559, -3.29433, 0.44 ) }
    dend_38 { pt3dadd( -26.4959, -93.1073, -3.23902, 0.29 ) }
    dend_38 { pt3dadd( -26.8368, -94.1624, -3.17623, 0.29 ) }
    dend_38 { pt3dadd( -27.0724, -94.8838, -3.13146, 0.52 ) }
    dend_38 { pt3dadd( -27.2764, -95.5093, -3.09762, 0.59 ) }
    dend_38 { pt3dadd( -27.6093, -96.529, -3.05793, 0.52 ) }
    dend_38 { pt3dadd( -27.8377, -97.2384, -3.04382, 1.18 ) }
    dend_38 { pt3dadd( -28.1027, -98.1238, -3.05154, 1.4 ) }
    dend_38 { pt3dadd( -28.3931, -99.1562, -3.09868, 1.03 ) }
    dend_38 { pt3dadd( -28.6654, -100.205, -3.165, 0.44 ) }
    dend_38 { pt3dadd( -28.892, -101.148, -3.24777, 0.22 ) }
    dend_38 { pt3dadd( -29.059, -101.888, -3.33886, 0.22 ) }
    dend_38 { pt3dadd( -29.1583, -102.348, -3.39601, 0.22 ) }
    dend_38 { pt3dadd( -29.2253, -102.656, -3.44202, 0.44 ) }
    dend_38 { pt3dadd( -29.3108, -103.011, -3.49956, 0.96 ) }
    dend_38 { pt3dadd( -29.4613, -103.584, -3.60003, 0.59 ) }
    dend_38 { pt3dadd( -29.7381, -104.541, -3.7735, 0.29 ) }
    dend_38 { pt3dadd( -29.9969, -105.326, -3.91746, 0.22 ) }
    dend_38 { pt3dadd( -30.2323, -106.031, -4.04913, 0.29 ) }
    dend_38 { pt3dadd( -30.469, -106.707, -4.17242, 0.52 ) }
    dend_38 { pt3dadd( -30.6749, -107.263, -4.28863, 0.96 ) }
    dend_38 { pt3dadd( -30.9761, -108.041, -4.46187, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_38 { pt3dadd( -31.429, -109.163, -4.71666, 2.14 ) }
    dend_38 { pt3dadd( -31.8236, -110.126, -4.92966, 1.62 ) }
    dend_38 { pt3dadd( -32.2853, -111.257, -5.16532, 0.52 ) }
    dend_38 { pt3dadd( -32.7873, -112.512, -5.43425, 0.44 ) }
    dend_38 { pt3dadd( -33.1253, -113.366, -5.59116, 0.22 ) }
    dend_38 { pt3dadd( -33.4466, -114.188, -5.72027, 0.37 ) }
    dend_38 { pt3dadd( -33.8591, -115.274, -5.84227, 0.22 ) }
    dend_38 { pt3dadd( -34.2224, -116.254, -5.87832, 0.22 ) }
    dend_38 { pt3dadd( -34.5502, -117.209, -5.84413, 0.22 ) }
    dend_38 { pt3dadd( -34.8316, -118.08, -5.71907, 0.22 ) }
    dend_38 { pt3dadd( -34.9598, -118.499, -5.61784, 0.96 ) }
    dend_38 { pt3dadd( -35.1905, -119.295, -5.36723, 1.33 ) }
    dend_38 { pt3dadd( -35.4591, -120.247, -4.98968, 1.03 ) }
    dend_38 { pt3dadd( -35.6809, -121.021, -4.65676, 0.29 ) }
    dend_38 { pt3dadd( -35.9599, -121.987, -4.23531, 0.29 ) }
    dend_38 { pt3dadd( -36.2128, -122.885, -3.89066, 0.44 ) }
    dend_38 { pt3dadd( -36.4128, -123.599, -3.63524, 0.81 ) }
    dend_38 { pt3dadd( -36.6773, -124.515, -3.33974, 0.59 ) }
    dend_38 { pt3dadd( -36.932, -125.386, -3.07237, 0.52 ) }
    dend_38 { pt3dadd( -37.1739, -126.237, -2.8148, 0.22 ) }
    dend_38 { pt3dadd( -37.4579, -127.245, -2.57819, 0.29 ) }
    dend_38 { pt3dadd( -37.5766, -127.695, -2.50058, 0.66 ) }
    dend_38 { pt3dadd( -37.6664, -128.064, -2.45062, 0.74 ) }
    dend_38 { pt3dadd( -37.8734, -128.95, -2.38726, 0.74 ) }
    dend_38 { pt3dadd( -38.0911, -129.939, -2.35668, 1.99 ) }
    dend_38 { pt3dadd( -38.4797, -131.702, -2.38555, 0.44 ) }
    dend_38 { pt3dadd( -38.7667, -133.03, -2.42999, 0.37 ) }
    dend_38 { pt3dadd( -38.9837, -134.063, -2.49407, 0.29 ) }
    dend_38 { pt3dadd( -39.1396, -134.822, -2.57067, 0.96 ) }
    dend_38 { pt3dadd( -39.2834, -135.499, -2.68539, 1.47 ) }
    dend_38 { pt3dadd( -39.5023, -136.497, -2.90443, 1.92 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 31/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.2473, -11.601, 1.62214, 0.59 ) }
    dend_37 { pt3dadd( -12.4374, -12.1274, 1.00211, 0.59 ) }
    dend_37 { pt3dadd( -13.5393, -12.4509, 0.364066, 0.44 ) }
    dend_37 { pt3dadd( -14.4179, -12.6236, -0.117513, 0.44 ) }
    dend_37 { pt3dadd( -14.8677, -12.681, -0.342726, 0.44 ) }
    dend_37 { pt3dadd( -15.6906, -12.7252, -0.669226, 0.44 ) }
    dend_37 { pt3dadd( -16.3536, -12.7179, -0.881342, 0.66 ) }
    dend_37 { pt3dadd( -17.8377, -12.5377, -1.32063, 0.66 ) }
    dend_37 { pt3dadd( -18.69, -12.3625, -1.52274, 0.52 ) }
    dend_37 { pt3dadd( -19.4001, -12.1952, -1.66686, 0.52 ) }
    dend_37 { pt3dadd( -20.7405, -11.8582, -1.90884, 0.52 ) }
    dend_37 { pt3dadd( -21.8726, -11.5533, -2.13797, 0.66 ) }
    dend_37 { pt3dadd( -23.4596, -11.0996, -2.40926, 0.88 ) }
    dend_37 { pt3dadd( -24.4042, -10.8173, -2.51649, 0.88 ) }
    dend_37 { pt3dadd( -25.8018, -10.3907, -2.58561, 0.66 ) }
    dend_37 { pt3dadd( -26.6988, -10.1359, -2.56081, 0.44 ) }
    dend_37 { pt3dadd( -28.1608, -9.77911, -2.35805, 0.29 ) }
    dend_37 { pt3dadd( -30.0542, -9.41607, -1.60569, 0.29 ) }
    dend_37 { pt3dadd( -30.9427, -9.28768, -1.09816, 0.29 ) }
    dend_37 { pt3dadd( -32.0243, -9.1756, -0.46936, 0.29 ) }
    dend_37 { pt3dadd( -32.7056, -9.13596, -0.0477398, 0.74 ) }
    dend_37 { pt3dadd( -33.6249, -9.13172, 0.475065, 1.33 ) }
    dend_37 { pt3dadd( -35.1371, -9.15685, 1.23742, 0.66 ) }
    dend_37 { pt3dadd( -35.9685, -9.15734, 1.56428, 0.44 ) }
    dend_37 { pt3dadd( -37.4208, -9.09912, 2.07406, 0.37 ) }
    dend_37 { pt3dadd( -38.5729, -9.00724, 2.45954, 0.37 ) }
    dend_37 { pt3dadd( -39.4642, -8.91965, 2.77383, 0.44 ) }
    dend_37 { pt3dadd( -40.1456, -8.8589, 3.02074, 0.44 ) }
    dend_37 { pt3dadd( -41.1766, -8.77749, 3.37955, 0.44 ) }
    dend_37 { pt3dadd( -41.9432, -8.70365, 3.64706, 0.29 ) }
    dend_37 { pt3dadd( -42.2571, -8.64392, 3.76654, 0.29 ) }
    dend_37 { pt3dadd( -42.7469, -8.49499, 3.9399, 0.29 ) }
    dend_37 { pt3dadd( -43.1473, -8.32115, 4.12217, 0.29 ) }
    dend_37 { pt3dadd( -43.4871, -8.16311, 4.29757, 0.29 ) }
    dend_37 { pt3dadd( -44.2358, -7.80579, 4.6879, 0.44 ) }
    dend_37 { pt3dadd( -45.4673, -7.18332, 5.33184, 0.66 ) }
    dend_37 { pt3dadd( -45.8866, -6.97128, 5.54641, 0.81 ) }
    dend_37 { pt3dadd( -47.1417, -6.29863, 6.17032, 0.22 ) }
    dend_37 { pt3dadd( -47.7505, -5.98243, 6.45189, 0.59 ) }
    dend_37 { pt3dadd( -48.3078, -5.72659, 6.67974, 0.66 ) }
    dend_37 { pt3dadd( -49.2745, -5.37048, 7.00741, 0.52 ) }
    dend_37 { pt3dadd( -50.4118, -5.04178, 7.29844, 0.29 ) }
    dend_37 { pt3dadd( -51.1842, -4.8643, 7.45952, 0.29 ) }
    dend_37 { pt3dadd( -52.1291, -4.70707, 7.59118, 0.29 ) }
    dend_37 { pt3dadd( -53.1668, -4.55634, 7.70505, 0.52 ) }
    dend_37 { pt3dadd( -53.969, -4.42511, 7.78409, 0.88 ) }
    dend_37 { pt3dadd( -54.5343, -4.33273, 7.8495, 1.18 ) }
    dend_37 { pt3dadd( -55.0343, -4.24823, 7.91156, 1.18 ) }
    dend_37 { pt3dadd( -56.7823, -3.96535, 8.15622, 0.44 ) }
    dend_37 { pt3dadd( -58.0099, -3.75133, 8.34689, 0.44 ) }
    dend_37 { pt3dadd( -59.3003, -3.55156, 8.555, 0.29 ) }
    dend_37 { pt3dadd( -60.2796, -3.4374, 8.74224, 0.29 ) }
    dend_37 { pt3dadd( -61.3104, -3.37417, 8.95684, 0.66 ) }
    dend_37 { pt3dadd( -61.7847, -3.38157, 9.08234, 0.88 ) }
    dend_37 { pt3dadd( -62.4065, -3.4498, 9.27413, 0.74 ) }
    dend_37 { pt3dadd( -63.6641, -3.7064, 9.66657, 0.29 ) }
    dend_37 { pt3dadd( -64.8923, -4.0406, 10.0661, 0.59 ) }
    dend_37 { pt3dadd( -65.825, -4.30734, 10.3862, 0.66 ) }
    dend_37 { pt3dadd( -67.014, -4.64632, 10.834, 0.88 ) }
    dend_37 { pt3dadd( -68.1847, -4.96964, 11.2877, 0.37 ) }
    dend_37 { pt3dadd( -69.4308, -5.32503, 11.7659, 0.15 ) }
    dend_37 { pt3dadd( -70.1449, -5.52481, 12.0171, 0.15 ) }
    dend_37 { pt3dadd( -70.7691, -5.69568, 12.1714, 0.15 ) }
    dend_37 { pt3dadd( -71.4117, -5.86277, 12.2521, 0.37 ) }
    dend_37 { pt3dadd( -72.263, -6.07496, 12.2394, 0.81 ) }
    dend_37 { pt3dadd( -73.2026, -6.27671, 12.0892, 0.44 ) }
    dend_37 { pt3dadd( -74.3824, -6.47024, 11.748, 0.29 ) }
    dend_37 { pt3dadd( -75.3514, -6.60787, 11.3809, 0.29 ) }
    dend_37 { pt3dadd( -76.3553, -6.70993, 10.9565, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_37 { pt3dadd( -76.8279, -6.72743, 10.7526, 0.81 ) }
    dend_37 { pt3dadd( -78.4977, -6.66177, 10.0411, 0.37 ) }
    dend_37 { pt3dadd( -79.4401, -6.5449, 9.7083, 0.22 ) }
    dend_37 { pt3dadd( -80.1297, -6.42891, 9.52421, 0.22 ) }
    dend_37 { pt3dadd( -81.0573, -6.24411, 9.39406, 0.44 ) }
    dend_37 { pt3dadd( -82.0489, -6.02175, 9.36495, 1.03 ) }
    dend_37 { pt3dadd( -82.5251, -5.91078, 9.38926, 1.33 ) }
    dend_37 { pt3dadd( -84.7476, -5.39654, 9.75612, 0.22 ) }
    dend_37 { pt3dadd( -85.7464, -5.18383, 10.0312, 0.74 ) }
    dend_37 { pt3dadd( -87.1252, -4.93644, 10.5627, 0.22 ) }
    dend_37 { pt3dadd( -87.9375, -4.82827, 10.9451, 0.66 ) }
    dend_37 { pt3dadd( -88.5044, -4.77079, 11.2638, 0.66 ) }
    dend_37 { pt3dadd( -89.3735, -4.69834, 11.7709, 0.66 ) }
    dend_37 { pt3dadd( -90.6825, -4.64367, 12.5391, 0.22 ) }
    dend_37 { pt3dadd( -91.5117, -4.63078, 12.9876, 0.22 ) }
    dend_37 { pt3dadd( -92.4084, -4.63149, 13.4112, 1.33 ) }
    dend_37 { pt3dadd( -94.3014, -4.66475, 14.1626, 0.37 ) }
    dend_37 { pt3dadd( -96.3455, -4.72739, 14.8066, 0.22 ) }
    dend_37 { pt3dadd( -98.1045, -4.81062, 15.2037, 0.22 ) }
    dend_37 { pt3dadd( -98.8466, -4.85863, 15.3312, 0.44 ) }
    dend_37 { pt3dadd( -99.8735, -4.95011, 15.5182, 0.88 ) }
    dend_37 { pt3dadd( -101.078, -5.09622, 15.7992, 0.22 ) }
    dend_37 { pt3dadd( -102.364, -5.29904, 16.1539, 0.15 ) }
    dend_37 { pt3dadd( -103.369, -5.49101, 16.5126, 0.59 ) }
    dend_37 { pt3dadd( -105.076, -5.76402, 17.2168, 0.15 ) }
    dend_37 { pt3dadd( -106.417, -5.93837, 17.8266, 0.15 ) }
    dend_37 { pt3dadd( -107.374, -6.05976, 18.2975, 0.15 ) }
    dend_37 { pt3dadd( -107.688, -6.08355, 18.4594, 1.03 ) }
    dend_37 { pt3dadd( -108.313, -6.10834, 18.7766, 1.25 ) }
    dend_37 { pt3dadd( -109.867, -6.14316, 19.3931, 0.29 ) }
    dend_37 { pt3dadd( -110.649, -6.15834, 19.5704, 0.22 ) }
    dend_37 { pt3dadd( -111.51, -6.16035, 19.6719, 0.22 ) }
    dend_37 { pt3dadd( -112.495, -6.12933, 19.7827, 0.22 ) }
    dend_37 { pt3dadd( -113.135, -6.09447, 19.9062, 0.37 ) }
    dend_37 { pt3dadd( -114.176, -6.01781, 20.1877, 0.22 ) }
    dend_37 { pt3dadd( -115.312, -5.91521, 20.651, 0.07 ) }
    dend_37 { pt3dadd( -116.247, -5.80597, 21.1129, 0.29 ) }
    dend_37 { pt3dadd( -117.367, -5.634, 21.7158, 0.15 ) }
    dend_37 { pt3dadd( -118.566, -5.43415, 22.3909, 0.15 ) }
    dend_37 { pt3dadd( -119.376, -5.27315, 22.8487, 0.74 ) }
    dend_37 { pt3dadd( -120.814, -4.96742, 23.6653, 0.74 ) }
    dend_37 { pt3dadd( -121.77, -4.77363, 24.1787, 0.15 ) }
    dend_37 { pt3dadd( -122.997, -4.52339, 24.7035, 0.15 ) }
    dend_37 { pt3dadd( -123.721, -4.36348, 24.9407, 0.59 ) }
    dend_37 { pt3dadd( -124.719, -4.14213, 25.2012, 0.22 ) }
    dend_37 { pt3dadd( -126.408, -3.77374, 25.5819, 0.22 ) }
    dend_37 { pt3dadd( -127.28, -3.58592, 25.7399, 0.29 ) }
    dend_37 { pt3dadd( -128.858, -3.1886, 26.0267, 0.66 ) }
    dend_37 { pt3dadd( -130.282, -2.83254, 26.2676, 0.15 ) }
    dend_37 { pt3dadd( -131.261, -2.59861, 26.4225, 0.15 ) }
    dend_37 { pt3dadd( -131.733, -2.47936, 26.4894, 0.15 ) }
    dend_37 { pt3dadd( -132.307, -2.33761, 26.5522, 0.37 ) }
    dend_37 { pt3dadd( -133.255, -2.10895, 26.6665, 0.37 ) }
    dend_37 { pt3dadd( -134.275, -1.88493, 26.8435, 0.37 ) }
    dend_37 { pt3dadd( -135.307, -1.65474, 27.0419, 0.37 ) }
    dend_37 { pt3dadd( -136.075, -1.47175, 27.2147, 0.37 ) }
    dend_37 { pt3dadd( -137.679, -1.09685, 27.6544, 0.15 ) }
    dend_37 { pt3dadd( -139.039, -0.809584, 28.0686, 0.52 ) }
    dend_37 { pt3dadd( -140.136, -0.610634, 28.4603, 0.15 ) }
    dend_37 { pt3dadd( -141.418, -0.396023, 28.9546, 0.15 ) }
    dend_37 { pt3dadd( -142.27, -0.280513, 29.2882, 0.81 ) }
    dend_37 { pt3dadd( -142.884, -0.229667, 29.522, 0.81 ) }
    dend_37 { pt3dadd( -144.513, -0.139458, 29.9785, 0.15 ) }
    dend_37 { pt3dadd( -145.93, -0.097096, 30.2423, 0.15 ) }
    dend_37 { pt3dadd( -146.51, -0.08873, 30.3122, 0.81 ) }
    dend_37 { pt3dadd( -147.572, -0.092374, 30.4008, 1.11 ) }
    dend_37 { pt3dadd( -149.287, -0.118625, 30.5185, 0.15 ) }
    dend_37 { pt3dadd( -151.608, -0.188058, 30.6928, 0.66 ) }
    dend_37 { pt3dadd( -153.808, -0.274935, 30.8766, 0.07 ) }
    dend_37 { pt3dadd( -155.392, -0.35006, 31.0106, 0.07 ) }
    dend_37 { pt3dadd( -156.443, -0.401728, 31.1291, 0.66 ) }
    dend_37 { pt3dadd( -157.572, -0.460376, 31.296, 0.15 ) }
    dend_37 { pt3dadd( -158.876, -0.537285, 31.5504, 0.15 ) }
    dend_37 { pt3dadd( -159.523, -0.574965, 31.7133, 0.52 ) }
    dend_37 { pt3dadd( -159.93, -0.578619, 31.7862, 0.52 ) }
    dend_37 { pt3dadd( -160.593, -0.53445, 31.8708, 0.22 ) }
    dend_37 { pt3dadd( -161.707, -0.355, 31.982, 0.07 ) }
    dend_37 { pt3dadd( -162.105, -0.249049, 32.0188, 0.07 ) }
    dend_37 { pt3dadd( -162.889, 0.024759, 32.0793, 0.29 ) }
    dend_37 { pt3dadd( -163.903, 0.427996, 32.1821, 0.07 ) }
    dend_37 { pt3dadd( -164.566, 0.721167, 32.2637, 0.07 ) }
    dend_37 { pt3dadd( -165.349, 1.09457, 32.396, 0.15 ) }
    dend_37 { pt3dadd( -166.107, 1.47645, 32.5563, 0.15 ) }
    dend_37 { pt3dadd( -166.962, 1.90981, 32.77, 0.74 ) }
    dend_37 { pt3dadd( -167.488, 2.18003, 32.9188, 0.15 ) }
    dend_37 { pt3dadd( -168.346, 2.60938, 33.1543, 0.07 ) }
    dend_37 { pt3dadd( -168.867, 2.87013, 33.2919, 0.07 ) }
    dend_37 { pt3dadd( -169.459, 3.14786, 33.4333, 0.29 ) }
    dend_37 { pt3dadd( -170.915, 3.8285, 33.7417, 0.15 ) }
    dend_37 { pt3dadd( -171.541, 4.11822, 33.8697, 0.52 ) }
    dend_37 { pt3dadd( -172.764, 4.64079, 34.1461, 0.07 ) }
    dend_37 { pt3dadd( -173.407, 4.89404, 34.3104, 0.07 ) }
    dend_37 { pt3dadd( -174.301, 5.21634, 34.5518, 0.07 ) }
    dend_37 { pt3dadd( -174.794, 5.36292, 34.7183, 0.37 ) }
    dend_37 { pt3dadd( -175.299, 5.45855, 34.9671, 0.37 ) }
    dend_37 { pt3dadd( -176.28, 5.55526, 35.5397, 0.22 ) }
    dend_37 { pt3dadd( -177.131, 5.57127, 36.0827, 0.59 ) }
    dend_37 { pt3dadd( -177.655, 5.52878, 36.4765, 0.59 ) }
    dend_37 { pt3dadd( -178.835, 5.3611, 37.446, 0.15 ) }
    dend_37 { pt3dadd( -180.356, 5.10294, 38.6948, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( -181.198, 4.96048, 39.3355, 0.15 ) }
    dend_37 { pt3dadd( -181.811, 4.86129, 39.7814, 0.29 ) }
    dend_37 { pt3dadd( -184.334, 4.4718, 41.5923, 0.07 ) }
    dend_37 { pt3dadd( -184.997, 4.39155, 42.0526, 0.07 ) }
    dend_37 { pt3dadd( -185.946, 4.31611, 42.6701, 1.18 ) }
    dend_37 { pt3dadd( -187.499, 4.29202, 43.5662, 0.07 ) }
    dend_37 { pt3dadd( -188.579, 4.34494, 44.1601, 0.07 ) }
    dend_37 { pt3dadd( -189.411, 4.43881, 44.5566, 0.07 ) }
    dend_37 { pt3dadd( -190.059, 4.5547, 44.7818, 0.37 ) }
    dend_37 { pt3dadd( -190.332, 4.61277, 44.8701, 0.37 ) }
    dend_37 { pt3dadd( -191.356, 4.8839, 45.0892, 0.07 ) }
    dend_37 { pt3dadd( -192.485, 5.23854, 45.2104, 0.07 ) }
    dend_37 { pt3dadd( -193.173, 5.48052, 45.215, 0.66 ) }
    dend_37 { pt3dadd( -193.562, 5.62831, 45.2031, 0.66 ) }
    dend_37 { pt3dadd( -194.426, 5.9755, 45.1691, 0.22 ) }
    dend_37 { pt3dadd( -196.24, 6.75857, 45.1031, 0.07 ) }
    dend_37 { pt3dadd( -197.126, 7.17313, 45.0701, 0.29 ) }
    dend_37 { pt3dadd( -198.714, 7.95311, 45.0202, 0.07 ) }
    dend_37 { pt3dadd( -199.272, 8.22404, 45.031, 0.29 ) }
    dend_37 { pt3dadd( -199.584, 8.36246, 45.0526, 0.29 ) }
    dend_37 { pt3dadd( -201.138, 8.93153, 45.2427, 0.07 ) }
    dend_37 { pt3dadd( -201.462, 9.01262, 45.2986, 0.07 ) }
    dend_37 { pt3dadd( -202.374, 9.14781, 45.3134, 0.15 ) }
    dend_37 { pt3dadd( -203.488, 9.18127, 45.1986, 0.07 ) }
    dend_37 { pt3dadd( -204.451, 9.13164, 45.0196, 0.66 ) }
    dend_37 { pt3dadd( -205.544, 9.00196, 44.7433, 1.4 ) }
    dend_37 { pt3dadd( -207.112, 8.72667, 44.2433, 0.07 ) }
    dend_37 { pt3dadd( -209.849, 8.24056, 43.2776, 0.07 ) }
    dend_37 { pt3dadd( -210.69, 8.09924, 42.9613, 0.07 ) }
    dend_37 { pt3dadd( -211.127, 8.03903, 42.7901, 0.37 ) }
    dend_37 { pt3dadd( -211.426, 8.01028, 42.6851, 0.37 ) }
    dend_37 { pt3dadd( -212.182, 7.96515, 42.5194, 0.07 ) }
    dend_37 { pt3dadd( -212.978, 7.95182, 42.4891, 0.59 ) }
    dend_37 { pt3dadd( -214.267, 7.93288, 42.6443, 0.07 ) }
    dend_37 { pt3dadd( -214.844, 7.92961, 42.676, 0.07 ) }
    dend_37 { pt3dadd( -215.585, 7.92051, 42.6692, 0.29 ) }
    dend_37 { pt3dadd( -216.961, 7.87735, 42.5747, 0.07 ) }
    dend_37 { pt3dadd( -217.706, 7.83179, 42.4867, 0.74 ) }
    dend_37 { pt3dadd( -219.618, 7.63187, 42.1782, 0.07 ) }
    dend_37 { pt3dadd( -221.283, 7.40093, 41.847, 0.07 ) }
    dend_37 { pt3dadd( -222.044, 7.29312, 41.6728, 0.07 ) }
    dend_37 { pt3dadd( -222.875, 7.18063, 41.4452, 0.44 ) }
    dend_37 { pt3dadd( -223.462, 7.10681, 41.2441, 0.59 ) }
    dend_37 { pt3dadd( -224.984, 6.87449, 40.6857, 0.07 ) }
    dend_37 { pt3dadd( -225.456, 6.76084, 40.5093, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 45/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -15.2069, -12.3008, 9.9668, 0.96 ) }
    dend_31 { pt3dadd( -16.1142, -13.712, 9.37327, 0.96 ) }
    dend_31 { pt3dadd( -17.3166, -15.5706, 8.57118, 0.96 ) }
    dend_31 { pt3dadd( -17.8637, -16.4076, 8.19652, 1.11 ) }
    dend_31 { pt3dadd( -18.7694, -17.7663, 7.57387, 0.74 ) }
    dend_31 { pt3dadd( -19.4453, -18.7571, 7.12889, 0.81 ) }
    dend_31 { pt3dadd( -20.1584, -19.8065, 6.65448, 0.74 ) }
    dend_31 { pt3dadd( -20.8678, -20.8933, 6.14673, 0.74 ) }
    dend_31 { pt3dadd( -21.4559, -21.8398, 5.70529, 0.96 ) }
    dend_31 { pt3dadd( -22.0399, -22.8777, 5.18178, 1.4 ) }
    dend_31 { pt3dadd( -22.7692, -24.338, 4.43435, 1.25 ) }
    dend_31 { pt3dadd( -23.4091, -25.7281, 3.72181, 0.88 ) }
    dend_31 { pt3dadd( -24.1047, -27.3368, 2.95139, 0.74 ) }
    dend_31 { pt3dadd( -24.635, -28.7056, 2.3711, 0.59 ) }
    dend_31 { pt3dadd( -25.09, -29.9823, 1.87884, 0.66 ) }
    dend_31 { pt3dadd( -25.3136, -30.6807, 1.63895, 0.74 ) }
    dend_31 { pt3dadd( -25.6668, -31.9168, 1.28449, 0.74 ) }
    dend_31 { pt3dadd( -26.0108, -33.1491, 1.07853, 0.88 ) }
    dend_31 { pt3dadd( -26.3802, -34.4755, 1.01678, 0.96 ) }
    dend_31 { pt3dadd( -26.6487, -35.441, 1.06925, 0.88 ) }
    dend_31 { pt3dadd( -26.8735, -36.2284, 1.16541, 0.66 ) }
    dend_31 { pt3dadd( -27.1793, -37.274, 1.3299, 0.59 ) }
    dend_31 { pt3dadd( -27.5936, -38.6474, 1.67188, 0.59 ) }
    dend_31 { pt3dadd( -27.8022, -39.2955, 1.8411, 0.66 ) }
    dend_31 { pt3dadd( -28.098, -40.1144, 2.05463, 0.59 ) }
    dend_31 { pt3dadd( -28.5448, -41.2004, 2.31308, 0.88 ) }
    dend_31 { pt3dadd( -29.004, -42.215, 2.49666, 0.88 ) }
    dend_31 { pt3dadd( -29.6415, -43.5517, 2.64637, 1.03 ) }
    dend_31 { pt3dadd( -30.2872, -44.88, 2.64445, 0.66 ) }
    dend_31 { pt3dadd( -30.6957, -45.6697, 2.60305, 0.59 ) }
    dend_31 { pt3dadd( -31.0807, -46.3747, 2.53522, 0.81 ) }
    dend_31 { pt3dadd( -31.7166, -47.4607, 2.37379, 0.59 ) }
    dend_31 { pt3dadd( -32.5416, -48.8551, 2.11578, 0.52 ) }
    dend_31 { pt3dadd( -33.1571, -49.9091, 1.87059, 0.66 ) }
    dend_31 { pt3dadd( -33.5923, -50.6513, 1.71396, 0.66 ) }
    dend_31 { pt3dadd( -34.3326, -51.9243, 1.44298, 0.59 ) }
    dend_31 { pt3dadd( -34.9076, -52.9199, 1.30333, 0.59 ) }
    dend_31 { pt3dadd( -35.285, -53.5277, 1.29899, 0.81 ) }
    dend_31 { pt3dadd( -35.917, -54.5029, 1.4919, 1.11 ) }
    dend_31 { pt3dadd( -36.3156, -55.1107, 1.7209, 0.81 ) }
    dend_31 { pt3dadd( -36.8957, -56.0004, 2.18656, 0.52 ) }
    dend_31 { pt3dadd( -37.7508, -57.3083, 3.01584, 0.59 ) }
    dend_31 { pt3dadd( -38.6017, -58.5838, 3.88867, 0.59 ) }
    dend_31 { pt3dadd( -39.2428, -59.5227, 4.53931, 0.59 ) }
    dend_31 { pt3dadd( -39.8714, -60.4527, 5.18117, 0.88 ) }
    dend_31 { pt3dadd( -40.564, -61.5284, 5.8266, 1.11 ) }
    dend_31 { pt3dadd( -41.0463, -62.3058, 6.18558, 1.18 ) }
    dend_31 { pt3dadd( -41.6503, -63.3211, 6.47641, 0.88 ) }
    dend_31 { pt3dadd( -42.0188, -63.9764, 6.60754, 1.03 ) }
    dend_31 { pt3dadd( -42.3303, -64.5162, 6.69566, 1.18 ) }
    dend_31 { pt3dadd( -43.1257, -65.8045, 6.91623, 0.81 ) }
    dend_31 { pt3dadd( -44.0093, -67.1185, 7.15042, 0.59 ) }
    dend_31 { pt3dadd( -44.7685, -68.1386, 7.39857, 0.52 ) }
    dend_31 { pt3dadd( -45.4893, -69.0105, 7.66359, 0.52 ) }
    dend_31 { pt3dadd( -46.3801, -69.9383, 7.99262, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_31 { pt3dadd( -47.4821, -70.9071, 8.42371, 0.44 ) }
    dend_31 { pt3dadd( -48.0603, -71.3215, 8.65011, 0.52 ) }
    dend_31 { pt3dadd( -48.8677, -71.8329, 8.96028, 0.81 ) }
    dend_31 { pt3dadd( -49.3384, -72.1116, 9.12787, 0.81 ) }
    dend_31 { pt3dadd( -50.6318, -72.9174, 9.5028, 0.52 ) }
    dend_31 { pt3dadd( -51.6323, -73.6517, 9.72102, 0.44 ) }
    dend_31 { pt3dadd( -52.5924, -74.5314, 9.83568, 0.29 ) }
    dend_31 { pt3dadd( -53.1156, -75.1428, 9.88108, 0.29 ) }
    dend_31 { pt3dadd( -53.5712, -75.8179, 9.93073, 0.52 ) }
    dend_31 { pt3dadd( -54.1847, -76.9776, 10.0445, 0.81 ) }
    dend_31 { pt3dadd( -54.7293, -78.2508, 10.2051, 0.81 ) }
    dend_31 { pt3dadd( -55.0755, -79.1552, 10.3509, 1.18 ) }
    dend_31 { pt3dadd( -55.4856, -80.2871, 10.5881, 1.55 ) }
    dend_31 { pt3dadd( -55.8809, -81.3073, 10.8385, 0.88 ) }
    dend_31 { pt3dadd( -56.5167, -82.8303, 11.2597, 0.74 ) }
    dend_31 { pt3dadd( -57.0764, -84.0782, 11.6398, 0.52 ) }
    dend_31 { pt3dadd( -57.4948, -84.9372, 11.9023, 0.66 ) }
    dend_31 { pt3dadd( -58.1377, -86.0986, 12.2119, 0.81 ) }
    dend_31 { pt3dadd( -58.6964, -86.9904, 12.3928, 0.59 ) }
    dend_31 { pt3dadd( -59.1517, -87.6777, 12.4991, 0.29 ) }
    dend_31 { pt3dadd( -59.7242, -88.5051, 12.6055, 0.29 ) }
    dend_31 { pt3dadd( -60.1339, -89.0849, 12.6594, 0.29 ) }
    dend_31 { pt3dadd( -61.0216, -90.3199, 12.7867, 0.37 ) }
    dend_31 { pt3dadd( -61.7849, -91.3373, 12.9221, 0.37 ) }
    dend_31 { pt3dadd( -62.6002, -92.4083, 13.0893, 0.44 ) }
    dend_31 { pt3dadd( -63.2754, -93.3007, 13.2401, 0.44 ) }
    dend_31 { pt3dadd( -63.6977, -93.8739, 13.3402, 0.81 ) }
    dend_31 { pt3dadd( -64.3376, -94.7626, 13.4901, 1.33 ) }
    dend_31 { pt3dadd( -64.7779, -95.3821, 13.5882, 1.33 ) }
    dend_31 { pt3dadd( -65.3493, -96.1904, 13.6542, 0.74 ) }
    dend_31 { pt3dadd( -66.1926, -97.3972, 13.663, 0.29 ) }
    dend_31 { pt3dadd( -66.7622, -98.2408, 13.6201, 0.29 ) }
    dend_31 { pt3dadd( -67.5583, -99.4228, 13.534, 0.29 ) }
    dend_31 { pt3dadd( -67.9561, -100.02, 13.478, 0.74 ) }
    dend_31 { pt3dadd( -68.9305, -101.526, 13.3572, 1.11 ) }
    dend_31 { pt3dadd( -69.7287, -102.804, 13.2796, 0.52 ) }
    dend_31 { pt3dadd( -70.3069, -103.729, 13.2419, 0.29 ) }
    dend_31 { pt3dadd( -70.9886, -104.778, 13.2565, 0.29 ) }
    dend_31 { pt3dadd( -71.5973, -105.659, 13.3538, 0.44 ) }
    dend_31 { pt3dadd( -72.1004, -106.324, 13.4898, 0.52 ) }
    dend_31 { pt3dadd( -73.0733, -107.475, 13.8576, 0.29 ) }
    dend_31 { pt3dadd( -73.6182, -108.076, 14.069, 0.44 ) }
    dend_31 { pt3dadd( -74.6055, -109.16, 14.4467, 0.59 ) }
    dend_31 { pt3dadd( -75.5049, -110.147, 14.7617, 1.11 ) }
    dend_31 { pt3dadd( -76.1383, -110.832, 14.9711, 1.62 ) }
    dend_31 { pt3dadd( -77.0048, -111.755, 15.2504, 2.06 ) }
    dend_31 { pt3dadd( -77.7796, -112.587, 15.4873, 0.66 ) }
    dend_31 { pt3dadd( -78.6004, -113.563, 15.7148, 0.22 ) }
    dend_31 { pt3dadd( -79.4378, -114.652, 15.895, 0.22 ) }
    dend_31 { pt3dadd( -79.8901, -115.28, 15.97, 0.29 ) }
    dend_31 { pt3dadd( -80.1932, -115.724, 16.0207, 0.74 ) }
    dend_31 { pt3dadd( -80.6159, -116.374, 16.0865, 0.88 ) }
    dend_31 { pt3dadd( -81.3497, -117.555, 16.1899, 0.22 ) }
    dend_31 { pt3dadd( -81.6968, -118.131, 16.2418, 0.22 ) }
    dend_31 { pt3dadd( -82.0478, -118.758, 16.2967, 0.29 ) }
    dend_31 { pt3dadd( -82.4619, -119.54, 16.3592, 0.29 ) }
    dend_31 { pt3dadd( -82.8829, -120.38, 16.4155, 0.29 ) }
    dend_31 { pt3dadd( -83.2338, -121.094, 16.4998, 0.29 ) }
    dend_31 { pt3dadd( -83.5585, -121.744, 16.6038, 0.59 ) }
    dend_31 { pt3dadd( -83.8569, -122.33, 16.7096, 1.25 ) }
    dend_31 { pt3dadd( -84.147, -122.884, 16.8145, 1.25 ) }
    dend_31 { pt3dadd( -84.6063, -123.728, 16.9744, 0.59 ) }
    dend_31 { pt3dadd( -85.2241, -124.844, 17.1791, 1.25 ) }
    dend_31 { pt3dadd( -85.9587, -126.151, 17.4262, 0.44 ) }
    dend_31 { pt3dadd( -86.5585, -127.21, 17.6133, 0.29 ) }
    dend_31 { pt3dadd( -87.1466, -128.223, 17.786, 0.29 ) }
    dend_31 { pt3dadd( -87.6859, -129.154, 17.8854, 0.29 ) }
    dend_31 { pt3dadd( -88.1458, -129.938, 17.9181, 0.52 ) }
    dend_31 { pt3dadd( -88.6177, -130.743, 17.8917, 0.81 ) }
    dend_31 { pt3dadd( -88.9917, -131.375, 17.847, 0.59 ) }
    dend_31 { pt3dadd( -89.5773, -132.373, 17.7487, 0.22 ) }
    dend_31 { pt3dadd( -90.3757, -133.761, 17.5962, 0.22 ) }
    dend_31 { pt3dadd( -90.6661, -134.283, 17.5314, 0.29 ) }
    dend_31 { pt3dadd( -90.9639, -134.833, 17.4604, 0.74 ) }
    dend_31 { pt3dadd( -91.3067, -135.479, 17.3783, 1.03 ) }
    dend_31 { pt3dadd( -91.958, -136.749, 17.2702, 0.44 ) }
    dend_31 { pt3dadd( -92.5789, -138.082, 17.2378, 0.29 ) }
    dend_31 { pt3dadd( -93.1101, -139.31, 17.284, 0.29 ) }
    dend_31 { pt3dadd( -93.3204, -139.832, 17.3083, 0.52 ) }
    dend_31 { pt3dadd( -93.5607, -140.461, 17.3429, 0.81 ) }
    dend_31 { pt3dadd( -93.8179, -141.188, 17.3897, 0.96 ) }
    dend_31 { pt3dadd( -94.4001, -142.912, 17.5174, 0.22 ) }
    dend_31 { pt3dadd( -94.643, -143.688, 17.5868, 0.22 ) }
    dend_31 { pt3dadd( -94.9087, -144.62, 17.6903, 0.37 ) }
    dend_31 { pt3dadd( -95.1172, -145.394, 17.7737, 0.88 ) }
    dend_31 { pt3dadd( -95.4807, -146.801, 17.9107, 1.62 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.2069, -12.3008, 9.9668, 0.66 ) }
    dend_26 { pt3dadd( -15.0896, -13.3135, 10.8869, 0.66 ) }
    dend_26 { pt3dadd( -14.9724, -14.3596, 11.8746, 0.66 ) }
    dend_26 { pt3dadd( -14.87, -15.2543, 12.6679, 0.59 ) }
    dend_26 { pt3dadd( -14.7742, -15.9453, 13.2384, 0.74 ) }
    dend_26 { pt3dadd( -14.6631, -16.7464, 13.8999, 0.44 ) }
    dend_26 { pt3dadd( -14.558, -17.505, 14.5262, 0.44 ) }
    dend_26 { pt3dadd( -14.4196, -18.3975, 15.2486, 0.52 ) }
    dend_26 { pt3dadd( -14.3341, -18.9765, 15.6493, 1.03 ) }
    dend_26 { pt3dadd( -14.1969, -19.8075, 16.2245, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 96/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 261.908, 19.936, -126.709, 0.15 ) }
    dend_23 { pt3dadd( 274.429, 21.8835, -131.8, 0.15 ) }
    dend_23 { pt3dadd( 286.808, 26.8837, -134.671, 0.15 ) }
    dend_23 { pt3dadd( 299.265, 32.1028, -136.688, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_23 { pt3dadd( 311.292, 38.5487, -137.221, 0.15 ) }
    dend_23 { pt3dadd( 323.374, 44.4593, -139.581, 0.15 ) }
    dend_23 { pt3dadd( 334.843, 51.7103, -141.124, 0.15 ) }
    dend_23 { pt3dadd( 346.19, 59.2649, -141.935, 0.15 ) }
    dend_23 { pt3dadd( 356.602, 67.4828, -145.182, 0.15 ) }
    dend_23 { pt3dadd( 366.066, 76.8007, -148.358, 0.15 ) }
    dend_23 { pt3dadd( 375.011, 85.5574, -153.816, 0.15 ) }
    dend_23 { pt3dadd( 383.182, 94.8732, -159.555, 0.15 ) }
    dend_23 { pt3dadd( 390.053, 104.122, -166.885, 0.15 ) }
    dend_23 { pt3dadd( 394.5, 114.763, -174.198, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 10/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 261.908, 19.936, -126.709, 0.07 ) }
    dend_22 { pt3dadd( 271.497, 21.6093, -130.779, 0.15 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 234.792, -141.518, -64.6996, 0.15 ) }
    dend_20 { pt3dadd( 244.64, -147.563, -66.2887, 0.15 ) }
    dend_20 { pt3dadd( 254.69, -153.484, -66.216, 0.15 ) }
    dend_20 { pt3dadd( 265.087, -158.679, -67.2157, 0.15 ) }
    dend_20 { pt3dadd( 275.277, -164.202, -68.5221, 0.15 ) }
    dend_20 { pt3dadd( 285.902, -168.971, -69.1967, 0.15 ) }
    dend_20 { pt3dadd( 295.811, -175.12, -69.4275, 0.15 ) }
    dend_20 { pt3dadd( 305.924, -180.852, -70.4036, 0.15 ) }
    dend_20 { pt3dadd( 315.806, -186.765, -72.2609, 0.15 ) }
    dend_20 { pt3dadd( 325.619, -192.433, -75.0262, 0.15 ) }
    dend_20 { pt3dadd( 334.715, -199.533, -76.7317, 0.15 ) }
    dend_20 { pt3dadd( 343.04, -207.704, -76.6771, 0.15 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 24/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 234.792, -141.518, -64.6996, 0.07 ) }
    dend_19 { pt3dadd( 243.201, -146.129, -66.1608, 0.15 ) }
    dend_19 { pt3dadd( 251.256, -151.464, -67.0391, 0.15 ) }
    dend_19 { pt3dadd( 259.185, -156.925, -68.2318, 0.15 ) }
    dend_19 { pt3dadd( 267.558, -161.725, -69.221, 0.15 ) }
    dend_19 { pt3dadd( 275.174, -167.731, -69.4403, 0.15 ) }
    dend_19 { pt3dadd( 283.6, -172.236, -71.1204, 0.15 ) }
    dend_19 { pt3dadd( 292.021, -176.899, -72.3278, 0.15 ) }
    dend_19 { pt3dadd( 300.934, -180.451, -73.7653, 0.15 ) }
    dend_19 { pt3dadd( 310.341, -182.805, -74.0558, 0.15 ) }
    dend_19 { pt3dadd( 319.554, -185.757, -73.3342, 0.15 ) }
    dend_19 { pt3dadd( 328.435, -189.564, -72.468, 0.15 ) }
    dend_19 { pt3dadd( 336.625, -194.748, -72.8708, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -43.5353, 183.817, -35.1333, 0.15 ) }
    dend_13 { pt3dadd( -46.3858, 193.195, -36.3017, 0.15 ) }
    dend_13 { pt3dadd( -49.3205, 202.611, -36.6931, 0.15 ) }
    dend_13 { pt3dadd( -53.2386, 211.671, -36.6605, 0.15 ) }
    dend_13 { pt3dadd( -56.519, 220.932, -35.7016, 0.15 ) }
    dend_13 { pt3dadd( -58.0677, 230.569, -34.2304, 0.15 ) }
    dend_13 { pt3dadd( -59.8118, 240.248, -33.3902, 0.15 ) }
    dend_13 { pt3dadd( -61.0766, 250.023, -33.9188, 0.15 ) }
    dend_13 { pt3dadd( -61.9891, 259.851, -33.7858, 0.15 ) }
    dend_13 { pt3dadd( -61.8151, 269.705, -34.3363, 0.15 ) }
    dend_13 { pt3dadd( -59.2508, 279.219, -33.7522, 0.15 ) }
    dend_13 { pt3dadd( -57.8384, 288.692, -31.3617, 0.15 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 49/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -43.5353, 183.817, -35.1333, 0.07 ) }
    dend_12 { pt3dadd( -45.5675, 191.395, -35.8375, 0.15 ) }
    dend_12 { pt3dadd( -46.4032, 198.999, -37.7185, 0.15 ) }
    dend_12 { pt3dadd( -47.8707, 206.303, -40.2797, 0.15 ) }
    dend_12 { pt3dadd( -49.9041, 213.107, -43.6897, 0.15 ) }
    dend_12 { pt3dadd( -51.7646, 219.953, -47.1151, 0.15 ) }
    dend_12 { pt3dadd( -52.1831, 226.914, -50.7806, 0.15 ) }
    dend_12 { pt3dadd( -53.8369, 233.813, -54.2052, 0.15 ) }
    dend_12 { pt3dadd( -55.8812, 240.936, -56.8773, 0.15 ) }
    dend_12 { pt3dadd( -59.4903, 247.515, -59.2753, 0.15 ) }
    dend_12 { pt3dadd( -63.4837, 253.931, -61.4985, 0.15 ) }
    dend_12 { pt3dadd( -67.4541, 260.086, -64.3987, 0.15 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 61/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.3745, 290.57, -86.4356, 0.15 ) }
    dend_10 { pt3dadd( -13.7343, 298.033, -87.5847, 0.15 ) }
    dend_10 { pt3dadd( -13.3714, 305.538, -88.4067, 0.15 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.3745, 290.57, -86.4356, 0.07 ) }
    dend_9 { pt3dadd( -13.3717, 295.523, -88.329, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -44.2436, 170.84, 50.5322, 0.15 ) }
    dend_6 { pt3dadd( -44.1629, 171.803, 49.7544, 0.15 ) }
    dend_6 { pt3dadd( -44.0326, 173.308, 48.6923, 0.15 ) }
    dend_6 { pt3dadd( -43.9285, 174.47, 47.9711, 0.15 ) }
    dend_6 { pt3dadd( -43.8868, 174.941, 47.7086, 0.59 ) }
    dend_6 { pt3dadd( -43.8237, 175.668, 47.3385, 0.81 ) }
    dend_6 { pt3dadd( -43.7392, 176.566, 46.9182, 0.15 ) }
    dend_6 { pt3dadd( -43.618, 177.6, 46.4721, 0.15 ) }
    dend_6 { pt3dadd( -43.5268, 178.235, 46.2163, 0.15 ) }
    dend_6 { pt3dadd( -43.4423, 178.707, 46.008, 0.29 ) }
    dend_6 { pt3dadd( -43.3648, 179.101, 45.8025, 0.29 ) }
    dend_6 { pt3dadd( -43.2875, 179.481, 45.5795, 0.29 ) }
    dend_6 { pt3dadd( -43.0938, 180.763, 44.8181, 0.15 ) }
    dend_6 { pt3dadd( -42.9688, 182.06, 44.0279, 0.15 ) }
    dend_6 { pt3dadd( -42.9462, 182.691, 43.6993, 0.15 ) }
    dend_6 { pt3dadd( -42.9792, 183.424, 43.4161, 0.52 ) }
    dend_6 { pt3dadd( -43.0168, 183.806, 43.2846, 0.52 ) }
    dend_6 { pt3dadd( -43.2131, 185.207, 42.8908, 0.07 ) }
    dend_6 { pt3dadd( -43.3688, 186.069, 42.726, 0.07 ) }
    dend_6 { pt3dadd( -43.7416, 187.877, 42.4599, 0.44 ) }
    dend_6 { pt3dadd( -44.0467, 189.334, 42.2389, 0.07 ) }
    dend_6 { pt3dadd( -44.3385, 190.809, 41.9451, 0.07 ) }
    dend_6 { pt3dadd( -44.4797, 191.538, 41.766, 0.07 ) }
    dend_6 { pt3dadd( -44.6134, 192.218, 41.5947, 0.37 ) }
    dend_6 { pt3dadd( -44.687, 192.581, 41.5047, 0.37 ) }
    dend_6 { pt3dadd( -44.9831, 194.071, 41.0909, 0.15 ) }
    dend_6 { pt3dadd( -45.245, 195.232, 40.9166, 0.15 ) }
    dend_6 { pt3dadd( -45.4424, 196.003, 40.8986, 0.15 ) }
    dend_6 { pt3dadd( -45.6858, 196.96, 40.846, 0.59 ) }
    dend_6 { pt3dadd( -45.783, 197.355, 40.7936, 0.59 ) }
    dend_6 { pt3dadd( -46.0395, 198.555, 40.4749, 0.07 ) }
    dend_6 { pt3dadd( -46.3107, 199.884, 40.1906, 0.07 ) }
    dend_6 { pt3dadd( -46.4063, 200.413, 40.114, 0.29 ) }
    dend_6 { pt3dadd( -46.6498, 202.312, 39.8895, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -46.749, 203.717, 39.6698, 0.07 ) }
    dend_6 { pt3dadd( -46.8475, 205.127, 39.5384, 0.07 ) }
    dend_6 { pt3dadd( -47.1595, 208.231, 39.6035, 0.29 ) }
    dend_6 { pt3dadd( -47.2329, 208.76, 39.6544, 0.52 ) }
    dend_6 { pt3dadd( -47.4289, 209.871, 39.8658, 0.15 ) }
    dend_6 { pt3dadd( -47.7504, 211.519, 40.3118, 0.22 ) }
    dend_6 { pt3dadd( -48.0789, 213.205, 40.7996, 0.07 ) }
    dend_6 { pt3dadd( -48.38, 214.752, 41.1921, 0.07 ) }
    dend_6 { pt3dadd( -48.5705, 215.746, 41.3906, 0.07 ) }
    dend_6 { pt3dadd( -48.7462, 216.627, 41.6404, 0.22 ) }
    dend_6 { pt3dadd( -48.8708, 217.28, 41.8998, 0.37 ) }
    dend_6 { pt3dadd( -48.9574, 217.831, 42.1786, 0.44 ) }
    dend_6 { pt3dadd( -49.0339, 218.694, 42.6714, 0.15 ) }
    dend_6 { pt3dadd( -49.1049, 220.141, 43.609, 0.15 ) }
    dend_6 { pt3dadd( -49.1419, 221.002, 44.253, 0.15 ) }
    dend_6 { pt3dadd( -49.1676, 221.579, 44.7146, 0.15 ) }
    dend_6 { pt3dadd( -49.2238, 222.37, 45.3378, 0.52 ) }
    dend_6 { pt3dadd( -49.3226, 223.629, 46.2797, 0.07 ) }
    dend_6 { pt3dadd( -49.3828, 224.439, 46.8293, 0.07 ) }
    dend_6 { pt3dadd( -49.4326, 225.204, 47.244, 0.07 ) }
    dend_6 { pt3dadd( -49.4724, 225.695, 47.4707, 0.44 ) }
    dend_6 { pt3dadd( -49.6124, 227.341, 48.0366, 0.15 ) }
    dend_6 { pt3dadd( -49.6703, 227.927, 48.1954, 0.15 ) }
    dend_6 { pt3dadd( -49.7199, 228.444, 48.2543, 0.29 ) }
    dend_6 { pt3dadd( -49.7885, 229.256, 48.2675, 0.07 ) }
    dend_6 { pt3dadd( -49.8196, 229.801, 48.2429, 0.22 ) }
    dend_6 { pt3dadd( -49.8908, 231.989, 48.0633, 0.07 ) }
    dend_6 { pt3dadd( -49.891, 233.232, 47.9183, 0.07 ) }
    dend_6 { pt3dadd( -49.8488, 235.012, 47.613, 0.07 ) }
    dend_6 { pt3dadd( -49.8039, 235.73, 47.4051, 0.29 ) }
    dend_6 { pt3dadd( -49.7044, 236.813, 46.9938, 0.07 ) }
    dend_6 { pt3dadd( -49.651, 237.296, 46.7738, 0.44 ) }
    dend_6 { pt3dadd( -49.515, 238.443, 46.1729, 0.15 ) }
    dend_6 { pt3dadd( -49.3089, 240.138, 45.2407, 0.15 ) }
    dend_6 { pt3dadd( -49.1321, 242.107, 44.2081, 0.15 ) }
    dend_6 { pt3dadd( -49.0967, 242.717, 43.8782, 0.37 ) }
    dend_6 { pt3dadd( -49.09, 243.114, 43.6637, 0.37 ) }
    dend_6 { pt3dadd( -49.1225, 244.28, 43.1047, 0.15 ) }
    dend_6 { pt3dadd( -49.218, 245.183, 42.8235, 0.15 ) }
    dend_6 { pt3dadd( -49.3445, 245.817, 42.8126, 0.29 ) }
    dend_6 { pt3dadd( -49.5304, 246.521, 42.9601, 0.29 ) }
    dend_6 { pt3dadd( -49.7184, 247.159, 43.1506, 0.29 ) }
    dend_6 { pt3dadd( -50.138, 248.489, 43.6002, 0.15 ) }
    dend_6 { pt3dadd( -50.6812, 250.11, 44.2186, 0.15 ) }
    dend_6 { pt3dadd( -51.1083, 251.395, 44.7222, 0.52 ) }
    dend_6 { pt3dadd( -51.3198, 252.076, 44.9596, 0.52 ) }
    dend_6 { pt3dadd( -51.7266, 253.38, 45.329, 0.07 ) }
    dend_6 { pt3dadd( -52.0137, 254.298, 45.5162, 0.07 ) }
    dend_6 { pt3dadd( -52.0843, 254.523, 45.5395, 0.07 ) }
    dend_6 { pt3dadd( -52.3734, 255.513, 45.5164, 0.59 ) }
    dend_6 { pt3dadd( -52.7606, 256.962, 45.396, 0.07 ) }
    dend_6 { pt3dadd( -53.0487, 258.181, 45.2822, 0.07 ) }
    dend_6 { pt3dadd( -53.1898, 258.856, 45.2306, 0.52 ) }
    dend_6 { pt3dadd( -53.2652, 259.29, 45.2068, 0.52 ) }
    dend_6 { pt3dadd( -53.4117, 260.449, 45.1553, 0.15 ) }
    dend_6 { pt3dadd( -53.466, 261.186, 45.1311, 0.15 ) }
    dend_6 { pt3dadd( -53.5037, 262.169, 45.1064, 0.15 ) }
    dend_6 { pt3dadd( -53.5167, 262.549, 45.1079, 0.22 ) }
    dend_6 { pt3dadd( -53.5506, 263.604, 45.1349, 0.22 ) }
    dend_6 { pt3dadd( -53.5571, 264.118, 45.1291, 0.22 ) }
    dend_6 { pt3dadd( -53.5713, 265.268, 45.1098, 0.22 ) }
    dend_6 { pt3dadd( -53.5989, 266.323, 45.0959, 0.07 ) }
    dend_6 { pt3dadd( -53.6277, 267.34, 45.0873, 0.07 ) }
    dend_6 { pt3dadd( -53.6808, 268.157, 45.0904, 0.22 ) }
    dend_6 { pt3dadd( -53.8514, 269.708, 45.1043, 0.07 ) }
    dend_6 { pt3dadd( -53.9634, 270.59, 45.1152, 0.07 ) }
    dend_6 { pt3dadd( -54.0171, 271.049, 45.1398, 0.07 ) }
    dend_6 { pt3dadd( -54.0649, 271.892, 45.1416, 0.15 ) }
    dend_6 { pt3dadd( -54.0693, 273.482, 45.1029, 0.15 ) }
    dend_6 { pt3dadd( -54.0263, 274.613, 45.0746, 0.44 ) }
    dend_6 { pt3dadd( -53.884, 276.12, 45.144, 0.15 ) }
    dend_6 { pt3dadd( -53.6792, 277.439, 45.2627, 0.15 ) }
    dend_6 { pt3dadd( -53.2224, 279.712, 45.6201, 0.07 ) }
    dend_6 { pt3dadd( -53.0455, 280.496, 45.7954, 0.07 ) }
    dend_6 { pt3dadd( -52.901, 281.123, 45.997, 0.22 ) }
    dend_6 { pt3dadd( -52.6588, 283.101, 46.8068, 0.07 ) }
    dend_6 { pt3dadd( -52.6762, 284.055, 47.2597, 0.07 ) }
    dend_6 { pt3dadd( -52.8322, 284.973, 47.7169, 0.07 ) }
    dend_6 { pt3dadd( -53.0553, 285.834, 48.203, 0.07 ) }
    dend_6 { pt3dadd( -53.4493, 287.013, 48.8377, 0.22 ) }
    dend_6 { pt3dadd( -54.0944, 288.553, 49.614, 0.07 ) }
    dend_6 { pt3dadd( -54.3728, 289.07, 49.8172, 0.07 ) }
    dend_6 { pt3dadd( -54.8339, 289.818, 50.0755, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -44.2436, 170.84, 50.5322, 0.07 ) }
    dend_5 { pt3dadd( -44.1897, 172.017, 51.2846, 0.07 ) }
    dend_5 { pt3dadd( -44.1852, 172.404, 51.5086, 0.22 ) }
    dend_5 { pt3dadd( -44.1836, 174.076, 52.3808, 0.07 ) }
    dend_5 { pt3dadd( -44.1868, 174.982, 52.9102, 0.07 ) }
    dend_5 { pt3dadd( -44.1802, 175.445, 53.1978, 0.29 ) }
    dend_5 { pt3dadd( -44.1716, 175.653, 53.3481, 0.29 ) }
    dend_5 { pt3dadd( -44.1464, 176.182, 53.8272, 0.07 ) }
    dend_5 { pt3dadd( -44.1193, 176.583, 54.2509, 0.44 ) }
    dend_5 { pt3dadd( -44.0416, 177.624, 55.5158, 0.07 ) }
    dend_5 { pt3dadd( -44.0226, 177.944, 55.9488, 0.29 ) }
    dend_5 { pt3dadd( -43.9747, 179.08, 57.6587, 0.07 ) }
    dend_5 { pt3dadd( -43.9363, 179.874, 58.8994, 0.07 ) }
    dend_5 { pt3dadd( -43.9366, 180.322, 59.6435, 0.44 ) }
    dend_5 { pt3dadd( -43.9674, 180.806, 60.4733, 0.66 ) }
    dend_5 { pt3dadd( -44.0826, 181.836, 62.1971, 0.07 ) }
    dend_5 { pt3dadd( -44.2049, 182.714, 63.6275, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_5 { pt3dadd( -44.2557, 183.064, 64.1696, 0.59 ) }
    dend_5 { pt3dadd( -44.4513, 184.644, 66.3704, 0.22 ) }
    dend_5 { pt3dadd( -44.5696, 185.876, 67.8694, 0.07 ) }
    dend_5 { pt3dadd( -44.6167, 186.652, 68.6626, 0.88 ) }
    dend_5 { pt3dadd( -44.6326, 187.232, 69.1297, 0.15 ) }
    dend_5 { pt3dadd( -44.6314, 187.696, 69.4139, 0.44 ) }
    dend_5 { pt3dadd( -44.5786, 188.863, 69.9846, 0.15 ) }
    dend_5 { pt3dadd( -44.4551, 189.951, 70.2935, 0.15 ) }
    dend_5 { pt3dadd( -44.3428, 190.724, 70.4198, 0.15 ) }
    dend_5 { pt3dadd( -44.2395, 191.389, 70.5017, 0.37 ) }
    dend_5 { pt3dadd( -44.1558, 191.947, 70.5777, 0.15 ) }
    dend_5 { pt3dadd( -44.0402, 192.688, 70.6976, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 12/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.3355, 31.1869, 3.38954, 0.37 ) }
    dend_3 { pt3dadd( 11.1804, 32.2226, 4.10427, 0.37 ) }
    dend_3 { pt3dadd( 11.1354, 32.6462, 4.37271, 0.37 ) }
    dend_3 { pt3dadd( 11.1015, 33.2556, 4.74901, 0.37 ) }
    dend_3 { pt3dadd( 11.0906, 33.8322, 5.07456, 0.81 ) }
    dend_3 { pt3dadd( 11.0961, 34.359, 5.33642, 1.03 ) }
    dend_3 { pt3dadd( 11.119, 35.1066, 5.66391, 1.03 ) }
    dend_3 { pt3dadd( 11.1764, 35.7256, 5.8876, 0.74 ) }
    dend_3 { pt3dadd( 11.2845, 36.6371, 6.1736, 0.52 ) }
    dend_3 { pt3dadd( 11.3897, 37.3942, 6.35568, 0.29 ) }
    dend_3 { pt3dadd( 11.4771, 37.9661, 6.46472, 0.22 ) }
    dend_3 { pt3dadd( 11.5714, 38.6026, 6.51662, 0.29 ) }
    dend_3 { pt3dadd( 11.6572, 39.2093, 6.48706, 0.59 ) }
    dend_3 { pt3dadd( 11.7174, 39.6119, 6.43045, 0.81 ) }
    dend_3 { pt3dadd( 11.8161, 40.2726, 6.26257, 0.81 ) }
    dend_3 { pt3dadd( 11.892, 40.756, 6.11829, 0.59 ) }
    dend_3 { pt3dadd( 12.0855, 41.9902, 5.72882, 0.29 ) }
    dend_3 { pt3dadd( 12.2238, 42.8596, 5.43573, 0.22 ) }
    dend_3 { pt3dadd( 12.2808, 43.2223, 5.30437, 0.29 ) }
    dend_3 { pt3dadd( 12.3948, 43.9543, 5.04633, 0.29 ) }
    dend_3 { pt3dadd( 12.5074, 44.7204, 4.79922, 0.22 ) }
    dend_3 { pt3dadd( 12.5677, 45.1533, 4.68372, 0.22 ) }
    dend_3 { pt3dadd( 12.6547, 45.7767, 4.56926, 0.37 ) }
    dend_3 { pt3dadd( 12.7288, 46.3738, 4.46403, 0.52 ) }
    dend_3 { pt3dadd( 12.7826, 46.8215, 4.39965, 0.52 ) }
    dend_3 { pt3dadd( 12.8542, 47.4118, 4.34321, 0.66 ) }
    dend_3 { pt3dadd( 12.9033, 47.7845, 4.31267, 0.88 ) }
    dend_3 { pt3dadd( 12.9613, 48.1736, 4.27842, 1.4 ) }
    dend_3 { pt3dadd( 13.044, 48.6685, 4.23625, 1.4 ) }
    dend_3 { pt3dadd( 13.205, 49.538, 4.17136, 0.59 ) }
    dend_3 { pt3dadd( 13.3677, 50.3475, 4.10783, 0.44 ) }
    dend_3 { pt3dadd( 13.5294, 51.0741, 4.08909, 0.22 ) }
    dend_3 { pt3dadd( 13.6718, 51.6719, 4.1027, 0.22 ) }
    dend_3 { pt3dadd( 13.7794, 52.0941, 4.13231, 0.59 ) }
    dend_3 { pt3dadd( 13.8255, 52.2514, 4.1503, 0.59 ) }
    dend_3 { pt3dadd( 14.0124, 52.8148, 4.24308, 0.29 ) }
    dend_3 { pt3dadd( 14.3427, 53.7523, 4.43719, 0.29 ) }
    dend_3 { pt3dadd( 14.4834, 54.1689, 4.528, 1.18 ) }
    dend_3 { pt3dadd( 14.6127, 54.5663, 4.60638, 1.47 ) }
    dend_3 { pt3dadd( 14.7281, 54.9633, 4.66213, 1.47 ) }
    dend_3 { pt3dadd( 14.8679, 55.5114, 4.71052, 0.52 ) }
    dend_3 { pt3dadd( 14.9674, 55.9608, 4.70478, 0.52 ) }
    dend_3 { pt3dadd( 15.1349, 56.8667, 4.60544, 0.22 ) }
    dend_3 { pt3dadd( 15.2327, 57.4185, 4.53168, 0.22 ) }
    dend_3 { pt3dadd( 15.3183, 57.88, 4.46235, 0.37 ) }
    dend_3 { pt3dadd( 15.4052, 58.3222, 4.3905, 0.66 ) }
    dend_3 { pt3dadd( 15.5568, 58.9633, 4.28158, 0.96 ) }
    dend_3 { pt3dadd( 15.6491, 59.2714, 4.23514, 0.96 ) }
    dend_3 { pt3dadd( 15.9262, 60.034, 4.13988, 0.22 ) }
    dend_3 { pt3dadd( 16.1418, 60.5396, 4.09529, 0.52 ) }
    dend_3 { pt3dadd( 16.261, 60.7777, 4.08162, 0.52 ) }
    dend_3 { pt3dadd( 16.604, 61.3806, 4.07578, 0.22 ) }
    dend_3 { pt3dadd( 16.9428, 61.9156, 4.1115, 0.29 ) }
    dend_3 { pt3dadd( 17.164, 62.2423, 4.13524, 0.52 ) }
    dend_3 { pt3dadd( 17.3835, 62.5583, 4.15706, 0.74 ) }
    dend_3 { pt3dadd( 17.6057, 62.8845, 4.17659, 0.74 ) }
    dend_3 { pt3dadd( 18.0507, 63.5555, 4.20711, 0.44 ) }
    dend_3 { pt3dadd( 18.5512, 64.3565, 4.22181, 0.29 ) }
    dend_3 { pt3dadd( 18.8084, 64.8028, 4.21799, 0.52 ) }
    dend_3 { pt3dadd( 19.0592, 65.2809, 4.20894, 1.11 ) }
    dend_3 { pt3dadd( 19.2572, 65.6963, 4.19679, 0.96 ) }
    dend_3 { pt3dadd( 19.4687, 66.1888, 4.1763, 0.29 ) }
    dend_3 { pt3dadd( 19.7824, 67.0015, 4.12738, 0.22 ) }
    dend_3 { pt3dadd( 19.9259, 67.4069, 4.10152, 0.22 ) }
    dend_3 { pt3dadd( 20.1436, 68.0321, 4.0732, 0.29 ) }
    dend_3 { pt3dadd( 20.2561, 68.3476, 4.06147, 0.29 ) }
    dend_3 { pt3dadd( 20.4812, 68.9724, 4.04122, 0.15 ) }
    dend_3 { pt3dadd( 20.6508, 69.4567, 4.0292, 0.15 ) }
    dend_3 { pt3dadd( 20.7742, 69.8117, 4.0204, 0.22 ) }
    dend_3 { pt3dadd( 20.8414, 70.0039, 4.01371, 0.59 ) }
    dend_3 { pt3dadd( 20.9644, 70.3546, 4.00442, 0.88 ) }
    dend_3 { pt3dadd( 21.1315, 70.8354, 3.99584, 0.22 ) }
    dend_3 { pt3dadd( 21.2748, 71.2917, 3.99324, 0.22 ) }
    dend_3 { pt3dadd( 21.4294, 71.843, 4.0142, 0.22 ) }
    dend_3 { pt3dadd( 21.4996, 72.1003, 4.03118, 0.44 ) }
    dend_3 { pt3dadd( 21.5794, 72.4232, 4.02748, 0.96 ) }
    dend_3 { pt3dadd( 21.6435, 72.7088, 4.00219, 1.4 ) }
    dend_3 { pt3dadd( 21.7496, 73.2441, 3.91407, 0.96 ) }
    dend_3 { pt3dadd( 21.844, 73.7847, 3.7982, 0.81 ) }
    dend_3 { pt3dadd( 21.9342, 74.3665, 3.64123, 0.29 ) }
    dend_3 { pt3dadd( 22.1007, 75.4349, 3.3403, 0.37 ) }
    dend_3 { pt3dadd( 22.1826, 75.9151, 3.19674, 0.37 ) }
    dend_3 { pt3dadd( 22.3015, 76.5412, 3.00885, 0.37 ) }
    dend_3 { pt3dadd( 22.413, 77.0679, 2.8593, 0.37 ) }
    dend_3 { pt3dadd( 22.513, 77.5184, 2.75283, 0.37 ) }
    dend_3 { pt3dadd( 22.63, 78.0013, 2.68265, 0.74 ) }
    dend_3 { pt3dadd( 22.7206, 78.3187, 2.66982, 1.25 ) }
    dend_3 { pt3dadd( 22.8601, 78.7781, 2.66454, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_3 { pt3dadd( 23.0852, 79.4794, 2.66663, 0.44 ) }
    dend_3 { pt3dadd( 23.3493, 80.2834, 2.71024, 0.15 ) }
    dend_3 { pt3dadd( 23.4912, 80.7135, 2.7497, 0.15 ) }
    dend_3 { pt3dadd( 23.657, 81.2369, 2.80097, 0.29 ) }
    dend_3 { pt3dadd( 23.8658, 81.8865, 2.88533, 0.15 ) }
    dend_3 { pt3dadd( 23.9857, 82.2531, 2.9429, 0.22 ) }
    dend_3 { pt3dadd( 24.2293, 82.959, 3.06441, 0.37 ) }
    dend_3 { pt3dadd( 24.3153, 83.1876, 3.1025, 0.88 ) }
    dend_3 { pt3dadd( 24.3982, 83.3991, 3.13266, 1.11 ) }
    dend_3 { pt3dadd( 24.6247, 83.9616, 3.19211, 0.22 ) }
    dend_3 { pt3dadd( 24.8833, 84.604, 3.23269, 0.15 ) }
    dend_3 { pt3dadd( 25.0894, 85.1363, 3.24058, 0.22 ) }
    dend_3 { pt3dadd( 25.3501, 85.8034, 3.21161, 0.29 ) }
    dend_3 { pt3dadd( 25.5363, 86.2882, 3.1901, 0.29 ) }
    dend_3 { pt3dadd( 25.6402, 86.5599, 3.17823, 0.59 ) }
    dend_3 { pt3dadd( 25.7437, 86.8262, 3.16664, 1.03 ) }
    dend_3 { pt3dadd( 25.8665, 87.136, 3.15364, 1.4 ) }
    dend_3 { pt3dadd( 26.0621, 87.6478, 3.13486, 1.4 ) }
    dend_3 { pt3dadd( 26.3075, 88.2963, 3.11426, 0.59 ) }
    dend_3 { pt3dadd( 26.6738, 89.2062, 3.11619, 0.22 ) }
    dend_3 { pt3dadd( 26.8596, 89.6389, 3.12964, 0.22 ) }
    dend_3 { pt3dadd( 27.0971, 90.1605, 3.15638, 0.22 ) }
    dend_3 { pt3dadd( 27.2322, 90.4552, 3.17828, 0.29 ) }
    dend_3 { pt3dadd( 27.3392, 90.7017, 3.20209, 0.44 ) }
    dend_3 { pt3dadd( 27.5372, 91.1619, 3.25352, 0.96 ) }
    dend_3 { pt3dadd( 27.6058, 91.3395, 3.28366, 1.18 ) }
    dend_3 { pt3dadd( 27.7018, 91.6233, 3.33884, 1.18 ) }
    dend_3 { pt3dadd( 27.7954, 91.9301, 3.39055, 1.11 ) }
    dend_3 { pt3dadd( 28.0267, 92.7833, 3.4602, 0.22 ) }
    dend_3 { pt3dadd( 28.1383, 93.242, 3.46375, 0.29 ) }
    dend_3 { pt3dadd( 28.2818, 93.8979, 3.41571, 0.52 ) }
    dend_3 { pt3dadd( 28.347, 94.2029, 3.36583, 0.66 ) }
    dend_3 { pt3dadd( 28.4425, 94.6339, 3.26099, 0.66 ) }
    dend_3 { pt3dadd( 28.6268, 95.408, 3.01204, 0.15 ) }
    dend_3 { pt3dadd( 28.7133, 95.7655, 2.879, 0.15 ) }
    dend_3 { pt3dadd( 28.7959, 96.1137, 2.74706, 0.15 ) }
    dend_3 { pt3dadd( 28.9804, 96.8333, 2.49408, 0.15 ) }
    dend_3 { pt3dadd( 29.0509, 97.0837, 2.43568, 0.52 ) }
    dend_3 { pt3dadd( 29.1357, 97.3571, 2.4052, 1.03 ) }
    dend_3 { pt3dadd( 29.3129, 97.9037, 2.36586, 1.25 ) }
    dend_3 { pt3dadd( 29.4059, 98.186, 2.33997, 1.33 ) }
    dend_3 { pt3dadd( 29.6685, 98.9561, 2.26576, 0.44 ) }
    dend_3 { pt3dadd( 29.938, 99.7709, 2.1846, 0.15 ) }
    dend_3 { pt3dadd( 30.1062, 100.311, 2.10768, 0.15 ) }
    dend_3 { pt3dadd( 30.2623, 100.846, 1.98609, 0.29 ) }
    dend_3 { pt3dadd( 30.3638, 101.21, 1.87575, 0.66 ) }
    dend_3 { pt3dadd( 30.4619, 101.583, 1.74726, 0.96 ) }
    dend_3 { pt3dadd( 30.5472, 101.961, 1.60941, 0.81 ) }
    dend_3 { pt3dadd( 30.656, 102.512, 1.41381, 0.29 ) }
    dend_3 { pt3dadd( 30.8272, 103.386, 1.15135, 0.15 ) }
    dend_3 { pt3dadd( 30.9052, 103.75, 1.07459, 0.15 ) }
    dend_3 { pt3dadd( 30.9559, 103.964, 1.02396, 0.59 ) }
    dend_3 { pt3dadd( 31.0141, 104.182, 0.963213, 0.88 ) }
    dend_3 { pt3dadd( 31.1042, 104.478, 0.873716, 1.11 ) }
    dend_3 { pt3dadd( 31.2786, 104.999, 0.71776, 0.29 ) }
    dend_3 { pt3dadd( 31.5324, 105.685, 0.540756, 0.15 ) }
    dend_3 { pt3dadd( 31.8345, 106.428, 0.352564, 0.15 ) }
    dend_3 { pt3dadd( 31.9593, 106.704, 0.285415, 0.59 ) }
    dend_3 { pt3dadd( 32.0976, 106.986, 0.223482, 0.81 ) }
    dend_3 { pt3dadd( 32.3586, 107.494, 0.128083, 0.22 ) }
    dend_3 { pt3dadd( 32.7063, 108.165, 0.0348287, 0.22 ) }
    dend_3 { pt3dadd( 32.9018, 108.532, 0.00243998, 0.22 ) }
    dend_3 { pt3dadd( 33.1483, 108.986, -0.0146558, 0.29 ) }
    dend_3 { pt3dadd( 33.5014, 109.618, -0.0395133, 0.22 ) }
    dend_3 { pt3dadd( 33.7807, 110.105, -0.0594809, 0.29 ) }
    dend_3 { pt3dadd( 34.2325, 110.884, -0.0919554, 0.29 ) }
    dend_3 { pt3dadd( 34.4984, 111.345, -0.111, 0.29 ) }
    dend_3 { pt3dadd( 34.8714, 111.997, -0.119293, 0.22 ) }
    dend_3 { pt3dadd( 35.0034, 112.229, -0.116372, 0.29 ) }
    dend_3 { pt3dadd( 35.1666, 112.512, -0.107142, 0.88 ) }
    dend_3 { pt3dadd( 35.2989, 112.743, -0.109005, 0.88 ) }
    dend_3 { pt3dadd( 35.5858, 113.265, -0.132073, 0.22 ) }
    dend_3 { pt3dadd( 35.9722, 114.003, -0.189276, 0.22 ) }
    dend_3 { pt3dadd( 36.3114, 114.686, -0.261128, 0.15 ) }
    dend_3 { pt3dadd( 36.5211, 115.122, -0.330799, 0.15 ) }
    dend_3 { pt3dadd( 36.8334, 115.786, -0.476538, 0.29 ) }
    dend_3 { pt3dadd( 36.9595, 116.06, -0.550768, 0.74 ) }
    dend_3 { pt3dadd( 37.1532, 116.487, -0.695927, 0.22 ) }
    dend_3 { pt3dadd( 37.4537, 117.132, -0.96211, 0.15 ) }
    dend_3 { pt3dadd( 37.6961, 117.619, -1.16517, 0.15 ) }
    dend_3 { pt3dadd( 37.9089, 118.03, -1.31476, 0.37 ) }
    dend_3 { pt3dadd( 38.0243, 118.24, -1.37466, 0.59 ) }
    dend_3 { pt3dadd( 38.1895, 118.523, -1.45159, 1.03 ) }
    dend_3 { pt3dadd( 38.2959, 118.691, -1.48846, 1.03 ) }
    dend_3 { pt3dadd( 38.602, 119.121, -1.54527, 0.22 ) }
    dend_3 { pt3dadd( 38.9534, 119.574, -1.60125, 0.15 ) }
    dend_3 { pt3dadd( 39.2581, 119.948, -1.65095, 0.15 ) }
    dend_3 { pt3dadd( 39.5078, 120.245, -1.69291, 0.96 ) }
    dend_3 { pt3dadd( 39.7814, 120.561, -1.72573, 0.96 ) }
    dend_3 { pt3dadd( 40.4654, 121.338, -1.78862, 0.15 ) }
    dend_3 { pt3dadd( 41.0969, 122.026, -1.86686, 0.15 ) }
    dend_3 { pt3dadd( 41.2974, 122.239, -1.89679, 0.15 ) }
    dend_3 { pt3dadd( 41.5236, 122.476, -1.93521, 0.29 ) }
    dend_3 { pt3dadd( 41.9127, 122.877, -2.0108, 0.96 ) }
    dend_3 { pt3dadd( 42.3406, 123.301, -2.10253, 0.07 ) }
    dend_3 { pt3dadd( 42.8929, 123.826, -2.19659, 0.07 ) }
    dend_3 { pt3dadd( 43.1747, 124.094, -2.22316, 0.52 ) }
    dend_3 { pt3dadd( 43.3577, 124.269, -2.24091, 0.59 ) }
    dend_3 { pt3dadd( 43.5017, 124.415, -2.27411, 0.59 ) }
    dend_3 { pt3dadd( 43.9448, 124.895, -2.46585, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_3 { pt3dadd( 44.148, 125.138, -2.58054, 0.15 ) }
    dend_3 { pt3dadd( 44.4143, 125.467, -2.70641, 0.29 ) }
    dend_3 { pt3dadd( 44.6617, 125.759, -2.80607, 0.66 ) }
    dend_3 { pt3dadd( 45.3462, 126.492, -3.01505, 0.88 ) }
    dend_3 { pt3dadd( 45.7093, 126.85, -3.09655, 0.88 ) }
    dend_3 { pt3dadd( 46.1045, 127.204, -3.15865, 0.29 ) }
    dend_3 { pt3dadd( 46.8377, 127.81, -3.23101, 0.15 ) }
    dend_3 { pt3dadd( 47.2818, 128.179, -3.24567, 0.29 ) }
    dend_3 { pt3dadd( 47.8561, 128.673, -3.22697, 0.22 ) }
    dend_3 { pt3dadd( 48.2233, 128.991, -3.19031, 0.66 ) }
    dend_3 { pt3dadd( 48.5153, 129.255, -3.15946, 0.96 ) }
    dend_3 { pt3dadd( 48.8343, 129.581, -3.143, 0.96 ) }
    dend_3 { pt3dadd( 49.7121, 130.633, -3.17279, 0.15 ) }
    dend_3 { pt3dadd( 49.8761, 130.876, -3.17741, 0.59 ) }
    dend_3 { pt3dadd( 49.9769, 131.058, -3.17845, 1.03 ) }
    dend_3 { pt3dadd( 50.0571, 131.228, -3.17815, 1.03 ) }
    dend_3 { pt3dadd( 50.3521, 131.986, -3.17207, 0.15 ) }
    dend_3 { pt3dadd( 50.5106, 132.467, -3.16638, 0.15 ) }
    dend_3 { pt3dadd( 50.7563, 133.327, -3.12744, 0.15 ) }
    dend_3 { pt3dadd( 50.9367, 133.959, -3.07125, 0.29 ) }
    dend_3 { pt3dadd( 51.0607, 134.393, -3.01915, 0.15 ) }
    dend_3 { pt3dadd( 51.2588, 135.046, -2.92662, 0.22 ) }
    dend_3 { pt3dadd( 51.3477, 135.316, -2.88009, 0.22 ) }
    dend_3 { pt3dadd( 51.572, 135.941, -2.74031, 0.29 ) }
    dend_3 { pt3dadd( 51.7628, 136.419, -2.61379, 0.81 ) }
    dend_3 { pt3dadd( 51.8875, 136.709, -2.53237, 1.18 ) }
    dend_3 { pt3dadd( 52.2387, 137.446, -2.31817, 0.15 ) }
    dend_3 { pt3dadd( 52.4566, 137.867, -2.18953, 0.15 ) }
    dend_3 { pt3dadd( 52.7424, 138.406, -2.01921, 0.15 ) }
    dend_3 { pt3dadd( 52.9256, 138.733, -1.91089, 0.59 ) }
    dend_3 { pt3dadd( 53.1272, 139.079, -1.78853, 0.59 ) }
    dend_3 { pt3dadd( 53.6164, 139.909, -1.46708, 0.07 ) }
    dend_3 { pt3dadd( 53.9701, 140.491, -1.22895, 0.15 ) }
    dend_3 { pt3dadd( 54.1955, 140.858, -1.08385, 0.22 ) }
    dend_3 { pt3dadd( 54.4844, 141.333, -0.917987, 0.22 ) }
    dend_3 { pt3dadd( 54.6622, 141.65, -0.816771, 0.96 ) }
    dend_3 { pt3dadd( 54.827, 141.975, -0.718513, 1.11 ) }
    dend_3 { pt3dadd( 55.0116, 142.385, -0.648606, 0.88 ) }
    dend_3 { pt3dadd( 55.3367, 143.164, -0.605358, 0.22 ) }
    dend_3 { pt3dadd( 55.6033, 143.838, -0.624015, 0.22 ) }
    dend_3 { pt3dadd( 55.8118, 144.401, -0.674242, 0.22 ) }
    dend_3 { pt3dadd( 56.0151, 144.959, -0.740738, 0.22 ) }
    dend_3 { pt3dadd( 56.4034, 146.088, -0.899874, 0.88 ) }
    dend_3 { pt3dadd( 56.527, 146.471, -0.961785, 1.18 ) }
    dend_3 { pt3dadd( 56.5997, 146.705, -0.994278, 1.18 ) }
    dend_3 { pt3dadd( 56.8018, 147.336, -1.04524, 0.59 ) }
    dend_3 { pt3dadd( 57.0109, 147.962, -1.10904, 0.22 ) }
    dend_3 { pt3dadd( 57.228, 148.617, -1.17537, 0.29 ) }
    dend_3 { pt3dadd( 57.3328, 148.943, -1.21083, 0.22 ) }
    dend_3 { pt3dadd( 57.5888, 149.768, -1.35988, 0.29 ) }
    dend_3 { pt3dadd( 57.7216, 150.224, -1.46687, 0.52 ) }
    dend_3 { pt3dadd( 58.0098, 151.241, -1.78557, 0.88 ) }
    dend_3 { pt3dadd( 58.1118, 151.613, -1.92394, 0.88 ) }
    dend_3 { pt3dadd( 58.3606, 152.564, -2.2989, 0.22 ) }
    dend_3 { pt3dadd( 58.4456, 152.903, -2.41497, 0.22 ) }
    dend_3 { pt3dadd( 58.6083, 153.589, -2.60905, 0.15 ) }
    dend_3 { pt3dadd( 58.7134, 154.037, -2.67642, 0.74 ) }
    dend_3 { pt3dadd( 58.8248, 154.484, -2.67678, 0.74 ) }
    dend_3 { pt3dadd( 59.0248, 155.25, -2.62967, 0.15 ) }
    dend_3 { pt3dadd( 59.2478, 156.068, -2.55068, 0.15 ) }
    dend_3 { pt3dadd( 59.39, 156.601, -2.50173, 0.22 ) }
    dend_3 { pt3dadd( 59.5747, 157.412, -2.41623, 0.22 ) }
    dend_3 { pt3dadd( 59.7132, 158.177, -2.32827, 0.22 ) }
    dend_3 { pt3dadd( 59.8129, 158.815, -2.23599, 0.22 ) }
    dend_3 { pt3dadd( 59.8812, 159.321, -2.15681, 0.29 ) }
    dend_3 { pt3dadd( 59.9351, 159.821, -2.08308, 0.44 ) }
    dend_3 { pt3dadd( 59.9966, 160.624, -1.93035, 0.66 ) }
    dend_3 { pt3dadd( 60.0266, 161.293, -1.78107, 0.22 ) }
    dend_3 { pt3dadd( 60.0547, 162.087, -1.59219, 0.22 ) }
    dend_3 { pt3dadd( 60.0765, 162.546, -1.48108, 0.66 ) }
    dend_3 { pt3dadd( 60.0988, 162.859, -1.39928, 0.66 ) }
    dend_3 { pt3dadd( 60.1831, 163.701, -1.20256, 0.15 ) }
    dend_3 { pt3dadd( 60.2556, 164.288, -1.0907, 0.22 ) }
    dend_3 { pt3dadd( 60.3258, 164.817, -0.975371, 0.22 ) }
    dend_3 { pt3dadd( 60.368, 165.105, -0.897409, 0.52 ) }
    dend_3 { pt3dadd( 60.4571, 165.614, -0.700752, 0.96 ) }
    dend_3 { pt3dadd( 60.5172, 165.901, -0.56107, 0.96 ) }
    dend_3 { pt3dadd( 60.6616, 166.489, -0.220173, 0.22 ) }
    dend_3 { pt3dadd( 60.8882, 167.302, 0.33577, 0.22 ) }
    dend_3 { pt3dadd( 61.0485, 167.824, 0.726502, 0.22 ) }
    dend_3 { pt3dadd( 61.1721, 168.191, 1.02067, 0.59 ) }
    dend_3 { pt3dadd( 61.2093, 168.299, 1.10665, 0.59 ) }
    dend_3 { pt3dadd( 61.3887, 168.81, 1.48909, 0.15 ) }
    dend_3 { pt3dadd( 61.6082, 169.396, 1.91199, 0.15 ) }
    dend_3 { pt3dadd( 61.7615, 169.764, 2.16417, 0.66 ) }
    dend_3 { pt3dadd( 61.916, 170.085, 2.38436, 0.96 ) }
    dend_3 { pt3dadd( 62.1169, 170.458, 2.65638, 0.37 ) }
    dend_3 { pt3dadd( 62.4973, 171.141, 3.16185, 0.15 ) }
    dend_3 { pt3dadd( 62.8519, 171.765, 3.62563, 0.15 ) }
    dend_3 { pt3dadd( 63.1617, 172.341, 4.01597, 0.15 ) }
    dend_3 { pt3dadd( 63.3988, 172.8, 4.31436, 0.29 ) }
    dend_3 { pt3dadd( 63.5729, 173.163, 4.53721, 0.74 ) }
    dend_3 { pt3dadd( 63.7319, 173.492, 4.73909, 1.11 ) }
    dend_3 { pt3dadd( 64.0442, 174.178, 5.13006, 0.15 ) }
    dend_3 { pt3dadd( 64.2254, 174.608, 5.32921, 0.22 ) }
    dend_3 { pt3dadd( 64.3318, 174.835, 5.43687, 0.22 ) }
    dend_3 { pt3dadd( 64.6965, 175.475, 5.75477, 0.15 ) }
    dend_3 { pt3dadd( 65.0911, 176.026, 6.02944, 0.15 ) }
    dend_3 { pt3dadd( 65.3029, 176.267, 6.15186, 1.03 ) }
    dend_3 { pt3dadd( 65.4994, 176.459, 6.25895, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_3 { pt3dadd( 66.4036, 177.273, 6.76677, 0.37 ) }
    dend_3 { pt3dadd( 66.9595, 177.758, 7.09084, 0.15 ) }
    dend_3 { pt3dadd( 67.3709, 178.117, 7.33561, 0.15 ) }
    dend_3 { pt3dadd( 67.6756, 178.399, 7.53529, 0.74 ) }
    dend_3 { pt3dadd( 68.42, 179.121, 8.13141, 0.15 ) }
    dend_3 { pt3dadd( 68.8871, 179.615, 8.5752, 0.15 ) }
    dend_3 { pt3dadd( 69.1184, 179.89, 8.83348, 0.66 ) }
    dend_3 { pt3dadd( 69.2115, 180.01, 8.95188, 0.66 ) }
    dend_3 { pt3dadd( 69.4953, 180.405, 9.35936, 0.15 ) }
    dend_3 { pt3dadd( 69.9664, 181.127, 10.0008, 0.15 ) }
    dend_3 { pt3dadd( 70.1442, 181.438, 10.2007, 0.66 ) }
    dend_3 { pt3dadd( 70.2355, 181.63, 10.2882, 1.11 ) }
    dend_3 { pt3dadd( 70.5565, 182.384, 10.5556, 0.15 ) }
    dend_3 { pt3dadd( 70.8102, 183.037, 10.74, 0.15 ) }
    dend_3 { pt3dadd( 71.3, 184.409, 11.0081, 0.37 ) }
    dend_3 { pt3dadd( 71.4448, 184.836, 11.0904, 0.74 ) }
    dend_3 { pt3dadd( 71.8158, 185.972, 11.3681, 0.07 ) }
    dend_3 { pt3dadd( 72.1273, 186.953, 11.658, 0.07 ) }
    dend_3 { pt3dadd( 72.2177, 187.246, 11.766, 0.37 ) }
    dend_3 { pt3dadd( 72.3649, 187.715, 11.9716, 0.07 ) }
    dend_3 { pt3dadd( 72.5654, 188.368, 12.3273, 0.07 ) }
    dend_3 { pt3dadd( 72.6667, 188.73, 12.5093, 0.66 ) }
    dend_3 { pt3dadd( 72.7357, 189.028, 12.633, 0.66 ) }
    dend_3 { pt3dadd( 72.856, 189.689, 12.8645, 0.15 ) }
    dend_3 { pt3dadd( 72.9517, 190.229, 13.0483, 0.22 ) }
    dend_3 { pt3dadd( 73.0273, 190.669, 13.1878, 0.37 ) }
    dend_3 { pt3dadd( 73.1419, 191.323, 13.3658, 0.22 ) }
    dend_3 { pt3dadd( 73.246, 191.865, 13.5131, 0.44 ) }
    dend_3 { pt3dadd( 73.3966, 192.548, 13.6809, 0.15 ) }
    dend_3 { pt3dadd( 73.6328, 193.465, 13.8682, 0.15 ) }
    dend_3 { pt3dadd( 73.6827, 193.627, 13.883, 0.59 ) }
    dend_3 { pt3dadd( 73.7888, 193.927, 13.8629, 0.88 ) }
    dend_3 { pt3dadd( 73.8467, 194.078, 13.8312, 0.88 ) }
    dend_3 { pt3dadd( 74.1814, 194.9, 13.5694, 0.07 ) }
    dend_3 { pt3dadd( 74.3245, 195.237, 13.4365, 0.29 ) }
    dend_3 { pt3dadd( 74.7868, 196.309, 12.9306, 0.07 ) }
    dend_3 { pt3dadd( 75.2044, 197.264, 12.4664, 0.07 ) }
    dend_3 { pt3dadd( 75.4131, 197.736, 12.2441, 0.22 ) }
    dend_3 { pt3dadd( 75.6463, 198.265, 11.9934, 0.15 ) }
    dend_3 { pt3dadd( 75.8163, 198.646, 11.8262, 0.37 ) }
    dend_3 { pt3dadd( 76.0563, 199.172, 11.6566, 0.74 ) }
    dend_3 { pt3dadd( 76.1995, 199.485, 11.5973, 1.25 ) }
    dend_3 { pt3dadd( 76.6268, 200.414, 11.4986, 0.15 ) }
    dend_3 { pt3dadd( 76.9282, 201.077, 11.4532, 0.15 ) }
    dend_3 { pt3dadd( 77.4247, 202.195, 11.4713, 0.15 ) }
    dend_3 { pt3dadd( 77.8123, 203.066, 11.564, 0.15 ) }
    dend_3 { pt3dadd( 77.9407, 203.354, 11.6171, 0.66 ) }
    dend_3 { pt3dadd( 78.0396, 203.573, 11.6678, 1.25 ) }
    dend_3 { pt3dadd( 78.3276, 204.189, 11.8403, 1.33 ) }
    dend_3 { pt3dadd( 78.8541, 205.268, 12.1476, 0.07 ) }
    dend_3 { pt3dadd( 79.194, 205.919, 12.2936, 0.07 ) }
    dend_3 { pt3dadd( 79.3138, 206.134, 12.3208, 0.22 ) }
    dend_3 { pt3dadd( 79.5356, 206.503, 12.3479, 0.66 ) }
    dend_3 { pt3dadd( 79.8951, 207.094, 12.3277, 0.07 ) }
    dend_3 { pt3dadd( 80.2426, 207.681, 12.2379, 0.07 ) }
    dend_3 { pt3dadd( 80.6711, 208.423, 12.0325, 0.07 ) }
    dend_3 { pt3dadd( 80.8514, 208.75, 11.9271, 0.07 ) }
    dend_3 { pt3dadd( 81.0782, 209.193, 11.7896, 0.88 ) }
    dend_3 { pt3dadd( 81.5124, 210.134, 11.5171, 0.15 ) }
    dend_3 { pt3dadd( 81.6861, 210.564, 11.4065, 0.15 ) }
    dend_3 { pt3dadd( 81.8168, 210.931, 11.3517, 0.15 ) }
    dend_3 { pt3dadd( 81.945, 211.341, 11.3228, 0.66 ) }
    dend_3 { pt3dadd( 82.2073, 212.257, 11.323, 0.07 ) }
    dend_3 { pt3dadd( 82.3362, 212.748, 11.3519, 0.07 ) }
    dend_3 { pt3dadd( 82.4359, 213.194, 11.4118, 0.22 ) }
    dend_3 { pt3dadd( 82.578, 214.191, 11.5658, 0.07 ) }
    dend_3 { pt3dadd( 82.584, 214.558, 11.6219, 0.07 ) }
    dend_3 { pt3dadd( 82.5463, 214.802, 11.6463, 0.29 ) }
    dend_3 { pt3dadd( 82.4024, 215.167, 11.6553, 0.74 ) }
    dend_3 { pt3dadd( 82.1043, 215.632, 11.6317, 0.22 ) }
    dend_3 { pt3dadd( 81.714, 216.103, 11.5799, 0.15 ) }
    dend_3 { pt3dadd( 81.3718, 216.461, 11.5254, 0.59 ) }
    dend_3 { pt3dadd( 80.8351, 216.991, 11.46, 0.96 ) }
    dend_3 { pt3dadd( 80.4065, 217.405, 11.4403, 0.22 ) }
    dend_3 { pt3dadd( 79.727, 218.058, 11.451, 0.15 ) }
    dend_3 { pt3dadd( 79.4542, 218.329, 11.4701, 0.52 ) }
    dend_3 { pt3dadd( 78.9836, 218.818, 11.536, 0.07 ) }
    dend_3 { pt3dadd( 78.7715, 219.059, 11.583, 0.15 ) }
    dend_3 { pt3dadd( 78.2243, 219.743, 11.7478, 0.07 ) }
    dend_3 { pt3dadd( 77.9579, 220.104, 11.8306, 0.22 ) }
    dend_3 { pt3dadd( 77.7454, 220.404, 11.8963, 0.15 ) }
    dend_3 { pt3dadd( 77.4503, 220.821, 11.9846, 0.81 ) }
    dend_3 { pt3dadd( 76.8762, 221.626, 12.145, 0.07 ) }
    dend_3 { pt3dadd( 76.6288, 221.974, 12.2073, 0.59 ) }
    dend_3 { pt3dadd( 76.2161, 222.563, 12.2964, 0.07 ) }
    dend_3 { pt3dadd( 75.9612, 222.926, 12.3527, 0.74 ) }
    dend_3 { pt3dadd( 75.4302, 223.668, 12.4693, 0.07 ) }
    dend_3 { pt3dadd( 75.1051, 224.068, 12.5379, 0.07 ) }
    dend_3 { pt3dadd( 74.8351, 224.348, 12.609, 0.29 ) }
    dend_3 { pt3dadd( 74.3624, 224.779, 12.7479, 0.07 ) }
    dend_3 { pt3dadd( 74.0224, 225.063, 12.8553, 0.52 ) }
    dend_3 { pt3dadd( 73.8639, 225.181, 12.8965, 0.52 ) }
    dend_3 { pt3dadd( 72.8409, 225.889, 13.1088, 0.15 ) }
    dend_3 { pt3dadd( 72.1301, 226.37, 13.2348, 0.15 ) }
    dend_3 { pt3dadd( 71.8384, 226.57, 13.278, 0.37 ) }
    dend_3 { pt3dadd( 71.4748, 226.829, 13.3287, 0.59 ) }
    dend_3 { pt3dadd( 70.6293, 227.497, 13.4368, 0.07 ) }
    dend_3 { pt3dadd( 70.1475, 227.932, 13.4919, 0.07 ) }
    dend_3 { pt3dadd( 69.9965, 228.102, 13.5051, 0.07 ) }
    dend_3 { pt3dadd( 69.7095, 228.477, 13.5472, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_3 { pt3dadd( 69.4454, 228.873, 13.6276, 0.15 ) }
    dend_3 { pt3dadd( 69.2116, 229.322, 13.7504, 1.03 ) }
    dend_3 { pt3dadd( 69.1349, 229.528, 13.8188, 1.03 ) }
    dend_3 { pt3dadd( 68.918, 230.234, 14.0472, 0.07 ) }
    dend_3 { pt3dadd( 68.707, 230.994, 14.2801, 0.07 ) }
    dend_3 { pt3dadd( 68.6353, 231.292, 14.3792, 0.29 ) }
    dend_3 { pt3dadd( 68.4558, 232.173, 14.7262, 0.07 ) }
    dend_3 { pt3dadd( 68.3586, 232.728, 14.98, 0.07 ) }
    dend_3 { pt3dadd( 68.3167, 233.041, 15.1512, 0.37 ) }
    dend_3 { pt3dadd( 68.2889, 233.318, 15.3213, 0.37 ) }
    dend_3 { pt3dadd( 68.2168, 234.119, 15.8789, 0.07 ) }
    dend_3 { pt3dadd( 68.1613, 234.804, 16.4256, 0.07 ) }
    dend_3 { pt3dadd( 68.1442, 235.053, 16.6472, 0.59 ) }
    dend_3 { pt3dadd( 68.0539, 235.959, 17.4608, 0.07 ) }
    dend_3 { pt3dadd( 68.0254, 236.17, 17.6315, 0.15 ) }
    dend_3 { pt3dadd( 67.9141, 236.918, 18.1371, 0.07 ) }
    dend_3 { pt3dadd( 67.8828, 237.093, 18.2277, 0.07 ) }
    dend_3 { pt3dadd( 67.8204, 237.391, 18.3446, 0.29 ) }
    dend_3 { pt3dadd( 67.6204, 238.178, 18.5814, 0.15 ) }
    dend_3 { pt3dadd( 67.2907, 239.283, 18.801, 0.15 ) }
    dend_3 { pt3dadd( 67.1073, 239.893, 18.8952, 0.15 ) }
    dend_3 { pt3dadd( 66.9807, 240.303, 18.9382, 0.15 ) }
    dend_3 { pt3dadd( 66.8814, 240.612, 18.9691, 0.52 ) }
    dend_3 { pt3dadd( 66.6077, 241.462, 19.0476, 0.07 ) }
    dend_3 { pt3dadd( 66.3109, 242.429, 19.124, 0.07 ) }
    dend_3 { pt3dadd( 66.2094, 242.733, 19.1466, 0.29 ) }
    dend_3 { pt3dadd( 66.0293, 243.257, 19.1858, 0.07 ) }
    dend_3 { pt3dadd( 65.8753, 243.715, 19.198, 0.22 ) }
    dend_3 { pt3dadd( 65.7166, 244.19, 19.1896, 0.07 ) }
    dend_3 { pt3dadd( 65.6286, 244.458, 19.1715, 0.07 ) }
    dend_3 { pt3dadd( 65.5192, 244.764, 19.1182, 0.22 ) }
    dend_3 { pt3dadd( 65.261, 245.505, 18.9075, 0.07 ) }
    dend_3 { pt3dadd( 65.0591, 246.169, 18.7098, 0.07 ) }
    dend_3 { pt3dadd( 64.9866, 246.475, 18.6204, 0.59 ) }
    dend_3 { pt3dadd( 64.9483, 246.694, 18.5606, 0.59 ) }
    dend_3 { pt3dadd( 64.839, 247.888, 18.2914, 0.15 ) }
    dend_3 { pt3dadd( 64.8312, 248.758, 18.1275, 0.15 ) }
    dend_3 { pt3dadd( 64.897, 249.533, 18.0173, 0.15 ) }
    dend_3 { pt3dadd( 64.9949, 250.175, 18.0203, 0.29 ) }
    dend_3 { pt3dadd( 65.1145, 250.731, 18.1409, 0.29 ) }
    dend_3 { pt3dadd( 65.3522, 251.568, 18.6477, 0.07 ) }
    dend_3 { pt3dadd( 65.4108, 251.717, 18.8249, 0.07 ) }
    dend_3 { pt3dadd( 65.5179, 251.927, 19.2705, 0.22 ) }
    dend_3 { pt3dadd( 65.7875, 252.423, 20.5673, 0.07 ) }
    dend_3 { pt3dadd( 66.0185, 252.815, 21.8778, 0.07 ) }
    dend_3 { pt3dadd( 66.2226, 253.101, 23.1626, 0.07 ) }
    dend_3 { pt3dadd( 66.3508, 253.235, 24.0357, 0.29 ) }
    dend_3 { pt3dadd( 66.596, 253.45, 25.8422, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 48/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.3355, 31.1869, 3.38954, 0.81 ) }
    dend_2 { pt3dadd( 12.5133, 31.9144, 3.59189, 0.81 ) }
    dend_2 { pt3dadd( 13.5102, 32.5719, 3.68548, 0.66 ) }
    dend_2 { pt3dadd( 14.3475, 33.1294, 3.64658, 0.52 ) }
    dend_2 { pt3dadd( 15.3095, 33.7509, 3.52229, 0.59 ) }
    dend_2 { pt3dadd( 16.8171, 34.7119, 3.16752, 0.81 ) }
    dend_2 { pt3dadd( 17.333, 35.0436, 3.01757, 0.88 ) }
    dend_2 { pt3dadd( 18.5139, 35.8191, 2.57443, 0.44 ) }
    dend_2 { pt3dadd( 19.6986, 36.6274, 2.05454, 0.37 ) }
    dend_2 { pt3dadd( 20.2382, 37.0051, 1.7638, 0.37 ) }
    dend_2 { pt3dadd( 21.3956, 37.8656, 1.01611, 0.59 ) }
    dend_2 { pt3dadd( 22.2106, 38.4914, 0.403629, 0.66 ) }
    dend_2 { pt3dadd( 22.7603, 38.9272, -0.0306739, 0.66 ) }
    dend_2 { pt3dadd( 23.512, 39.5437, -0.615835, 0.52 ) }
    dend_2 { pt3dadd( 24.5602, 40.4371, -1.43367, 0.22 ) }
    dend_2 { pt3dadd( 25.085, 40.9009, -1.84367, 0.29 ) }
    dend_2 { pt3dadd( 25.7833, 41.5031, -2.34752, 0.52 ) }
    dend_2 { pt3dadd( 26.5875, 42.1696, -2.89382, 0.81 ) }
    dend_2 { pt3dadd( 27.039, 42.5426, -3.15813, 1.11 ) }
    dend_2 { pt3dadd( 27.6464, 43.0655, -3.44384, 1.11 ) }
    dend_2 { pt3dadd( 28.6256, 43.981, -3.76902, 0.74 ) }
    dend_2 { pt3dadd( 29.5467, 44.9064, -3.94258, 0.66 ) }
    dend_2 { pt3dadd( 29.9873, 45.3874, -3.96212, 0.52 ) }
    dend_2 { pt3dadd( 30.8728, 46.4619, -3.86636, 0.29 ) }
    dend_2 { pt3dadd( 31.5439, 47.4008, -3.72436, 0.37 ) }
    dend_2 { pt3dadd( 32.2999, 48.6043, -3.48844, 0.52 ) }
    dend_2 { pt3dadd( 33.0375, 49.8748, -3.12742, 0.74 ) }
    dend_2 { pt3dadd( 33.62, 50.9504, -2.7971, 0.96 ) }
    dend_2 { pt3dadd( 34.3161, 52.2161, -2.36199, 0.29 ) }
    dend_2 { pt3dadd( 34.7602, 52.9367, -2.06547, 0.29 ) }
    dend_2 { pt3dadd( 35.2434, 53.5995, -1.72535, 0.29 ) }
    dend_2 { pt3dadd( 36.1839, 54.6708, -1.09069, 0.66 ) }
    dend_2 { pt3dadd( 37.0223, 55.4926, -0.607996, 0.96 ) }
    dend_2 { pt3dadd( 37.8357, 56.1999, -0.156067, 0.96 ) }
    dend_2 { pt3dadd( 38.9823, 57.1186, 0.472495, 0.66 ) }
    dend_2 { pt3dadd( 40.2548, 58.1146, 1.17706, 0.29 ) }
    dend_2 { pt3dadd( 41.5361, 59.1012, 1.867, 0.22 ) }
    dend_2 { pt3dadd( 42.2352, 59.629, 2.21072, 0.22 ) }
    dend_2 { pt3dadd( 43.0131, 60.2004, 2.58338, 0.44 ) }
    dend_2 { pt3dadd( 43.8385, 60.791, 2.93662, 0.81 ) }
    dend_2 { pt3dadd( 44.6033, 61.3041, 3.21355, 0.81 ) }
    dend_2 { pt3dadd( 45.601, 61.883, 3.48646, 0.59 ) }
    dend_2 { pt3dadd( 46.3311, 62.2367, 3.65398, 0.44 ) }
    dend_2 { pt3dadd( 47.0538, 62.5362, 3.78489, 0.22 ) }
    dend_2 { pt3dadd( 48.2769, 62.9794, 3.76867, 0.29 ) }
    dend_2 { pt3dadd( 48.942, 63.1969, 3.63818, 0.29 ) }
    dend_2 { pt3dadd( 49.9339, 63.5068, 3.29505, 0.37 ) }
    dend_2 { pt3dadd( 50.3332, 63.6309, 3.11132, 0.37 ) }
    dend_2 { pt3dadd( 51.0751, 63.8382, 2.77573, 0.37 ) }
    dend_2 { pt3dadd( 53.6029, 64.4827, 1.66468, 0.81 ) }
    dend_2 { pt3dadd( 54.4951, 64.7195, 1.28486, 0.96 ) }
    dend_2 { pt3dadd( 55.4099, 64.9866, 1.00251, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_2 { pt3dadd( 56.58, 65.3609, 0.750667, 0.52 ) }
    dend_2 { pt3dadd( 58.0854, 65.8657, 0.571743, 0.44 ) }
    dend_2 { pt3dadd( 58.6413, 66.0725, 0.567832, 0.44 ) }
    dend_2 { pt3dadd( 59.4593, 66.4262, 0.662532, 0.44 ) }
    dend_2 { pt3dadd( 60.6334, 67.007, 0.790986, 0.44 ) }
    dend_2 { pt3dadd( 61.5152, 67.514, 0.852692, 0.96 ) }
    dend_2 { pt3dadd( 62.047, 67.8604, 0.857483, 1.18 ) }
    dend_2 { pt3dadd( 62.9314, 68.4669, 0.791894, 0.66 ) }
    dend_2 { pt3dadd( 63.5584, 68.8915, 0.724239, 0.96 ) }
    dend_2 { pt3dadd( 64.082, 69.2118, 0.681294, 0.96 ) }
    dend_2 { pt3dadd( 65.4709, 69.9889, 0.663047, 0.37 ) }
    dend_2 { pt3dadd( 66.1521, 70.3383, 0.74513, 0.29 ) }
    dend_2 { pt3dadd( 66.8285, 70.6492, 0.896821, 0.29 ) }
    dend_2 { pt3dadd( 67.9048, 71.0753, 1.22927, 0.29 ) }
    dend_2 { pt3dadd( 69.2272, 71.5626, 1.74971, 0.29 ) }
    dend_2 { pt3dadd( 70.3619, 72.0147, 2.33815, 0.22 ) }
    dend_2 { pt3dadd( 71.2132, 72.3809, 2.8837, 0.22 ) }
    dend_2 { pt3dadd( 71.7932, 72.6527, 3.28649, 0.66 ) }
    dend_2 { pt3dadd( 72.4729, 73.0215, 3.75525, 0.96 ) }
    dend_2 { pt3dadd( 73.1284, 73.4249, 4.19412, 0.96 ) }
    dend_2 { pt3dadd( 74.6358, 74.485, 5.14312, 0.22 ) }
    dend_2 { pt3dadd( 75.2808, 74.965, 5.53517, 0.37 ) }
    dend_2 { pt3dadd( 75.7782, 75.3565, 5.84069, 0.37 ) }
    dend_2 { pt3dadd( 76.9119, 76.3059, 6.54515, 0.15 ) }
    dend_2 { pt3dadd( 77.4999, 76.7966, 6.90226, 0.37 ) }
    dend_2 { pt3dadd( 78.144, 77.3294, 7.28729, 0.74 ) }
    dend_2 { pt3dadd( 79.1338, 78.1433, 7.85765, 1.33 ) }
    dend_2 { pt3dadd( 79.7399, 78.6878, 8.22764, 1.03 ) }
    dend_2 { pt3dadd( 80.321, 79.3222, 8.62773, 0.22 ) }
    dend_2 { pt3dadd( 80.8431, 79.9752, 8.98953, 0.22 ) }
    dend_2 { pt3dadd( 81.3338, 80.6459, 9.32667, 0.22 ) }
    dend_2 { pt3dadd( 81.681, 81.1465, 9.55219, 0.44 ) }
    dend_2 { pt3dadd( 82.2062, 81.9143, 9.89595, 0.81 ) }
    dend_2 { pt3dadd( 83.1018, 83.1485, 10.5, 0.15 ) }
    dend_2 { pt3dadd( 83.8844, 84.2127, 11.1677, 0.15 ) }
    dend_2 { pt3dadd( 84.6036, 85.2, 11.9424, 0.22 ) }
    dend_2 { pt3dadd( 84.8232, 85.4917, 12.2104, 0.74 ) }
    dend_2 { pt3dadd( 85.2687, 86.1031, 12.812, 0.96 ) }
    dend_2 { pt3dadd( 86.0344, 87.1477, 13.9467, 0.22 ) }
    dend_2 { pt3dadd( 86.8085, 88.2499, 15.197, 0.44 ) }
    dend_2 { pt3dadd( 87.4616, 89.3046, 16.3517, 0.96 ) }
    dend_2 { pt3dadd( 87.9214, 90.092, 17.2241, 1.33 ) }
    dend_2 { pt3dadd( 88.5157, 91.1469, 18.4628, 0.22 ) }
    dend_2 { pt3dadd( 89.0395, 92.0772, 19.5789, 0.22 ) }
    dend_2 { pt3dadd( 89.2409, 92.4309, 19.9957, 0.74 ) }
    dend_2 { pt3dadd( 89.5285, 92.8872, 20.4677, 0.74 ) }
    dend_2 { pt3dadd( 90.8161, 94.7804, 22.1222, 0.15 ) }
    dend_2 { pt3dadd( 91.7375, 96.0545, 23.1071, 0.15 ) }
    dend_2 { pt3dadd( 92.1031, 96.5281, 23.3958, 0.66 ) }
    dend_2 { pt3dadd( 92.6263, 97.2029, 23.7187, 1.7 ) }
    dend_2 { pt3dadd( 93.7052, 98.5583, 24.2969, 0.44 ) }
    dend_2 { pt3dadd( 94.8607, 99.9579, 24.784, 0.22 ) }
    dend_2 { pt3dadd( 95.6156, 100.846, 24.9763, 0.22 ) }
    dend_2 { pt3dadd( 97.2155, 102.674, 25.3286, 0.22 ) }
    dend_2 { pt3dadd( 97.8062, 103.337, 25.4823, 0.37 ) }
    dend_2 { pt3dadd( 98.502, 104.081, 25.6846, 0.81 ) }
    dend_2 { pt3dadd( 99.0541, 104.654, 25.8509, 1.25 ) }
    dend_2 { pt3dadd( 100.326, 105.901, 26.2552, 0.15 ) }
    dend_2 { pt3dadd( 101.739, 107.236, 26.7054, 0.15 ) }
    dend_2 { pt3dadd( 102.44, 107.869, 26.9364, 0.66 ) }
    dend_2 { pt3dadd( 103.028, 108.384, 27.086, 0.74 ) }
    dend_2 { pt3dadd( 104.654, 109.753, 27.4587, 0.15 ) }
    dend_2 { pt3dadd( 105.892, 110.766, 27.7436, 0.15 ) }
    dend_2 { pt3dadd( 106.282, 111.074, 27.8286, 0.52 ) }
    dend_2 { pt3dadd( 106.773, 111.456, 27.9084, 0.81 ) }
    dend_2 { pt3dadd( 108.622, 112.902, 28.0725, 0.15 ) }
    dend_2 { pt3dadd( 109.607, 113.676, 28.1028, 0.15 ) }
    dend_2 { pt3dadd( 109.961, 113.952, 28.0883, 0.52 ) }
    dend_2 { pt3dadd( 110.366, 114.273, 28.0391, 0.52 ) }
    dend_2 { pt3dadd( 111.699, 115.335, 27.8367, 0.15 ) }
    dend_2 { pt3dadd( 112.831, 116.243, 27.6449, 0.15 ) }
    dend_2 { pt3dadd( 113.409, 116.72, 27.5658, 0.15 ) }
    dend_2 { pt3dadd( 113.793, 117.057, 27.5494, 0.44 ) }
    dend_2 { pt3dadd( 114.349, 117.573, 27.5896, 0.88 ) }
    dend_2 { pt3dadd( 114.98, 118.189, 27.6948, 0.88 ) }
    dend_2 { pt3dadd( 115.898, 119.112, 27.9366, 0.44 ) }
    dend_2 { pt3dadd( 116.964, 120.215, 28.2651, 0.15 ) }
    dend_2 { pt3dadd( 118.323, 121.597, 28.6664, 0.15 ) }
    dend_2 { pt3dadd( 119.176, 122.426, 28.8873, 0.22 ) }
    dend_2 { pt3dadd( 120.207, 123.409, 29.1156, 0.07 ) }
    dend_2 { pt3dadd( 120.847, 123.991, 29.2173, 0.07 ) }
    dend_2 { pt3dadd( 121.467, 124.499, 29.2872, 0.44 ) }
    dend_2 { pt3dadd( 122.191, 125.031, 29.3171, 0.96 ) }
    dend_2 { pt3dadd( 123.183, 125.703, 29.3046, 0.66 ) }
    dend_2 { pt3dadd( 123.896, 126.147, 29.3085, 0.15 ) }
    dend_2 { pt3dadd( 124.812, 126.695, 29.3265, 0.22 ) }
    dend_2 { pt3dadd( 126.587, 127.742, 29.402, 0.07 ) }
    dend_2 { pt3dadd( 127.143, 128.068, 29.4411, 0.29 ) }
    dend_2 { pt3dadd( 127.481, 128.269, 29.4671, 0.29 ) }
    dend_2 { pt3dadd( 128.971, 129.127, 29.5777, 0.07 ) }
    dend_2 { pt3dadd( 129.351, 129.342, 29.6194, 0.22 ) }
    dend_2 { pt3dadd( 130.529, 130.046, 29.7275, 0.07 ) }
    dend_2 { pt3dadd( 131.03, 130.361, 29.7654, 0.07 ) }
    dend_2 { pt3dadd( 131.656, 130.772, 29.8234, 0.15 ) }
    dend_2 { pt3dadd( 132.443, 131.335, 29.8965, 0.07 ) }
    dend_2 { pt3dadd( 133.823, 132.405, 30.0208, 0.15 ) }
    dend_2 { pt3dadd( 134.841, 133.216, 30.094, 0.15 ) }
    dend_2 { pt3dadd( 135.74, 133.947, 30.1307, 0.15 ) }
    dend_2 { pt3dadd( 137.015, 134.978, 30.2176, 0.29 ) }
    dend_2 { pt3dadd( 138.494, 136.149, 30.3341, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_2 { pt3dadd( 139.138, 136.657, 30.3842, 0.44 ) }
    dend_2 { pt3dadd( 139.614, 137.03, 30.4119, 0.44 ) }
    dend_2 { pt3dadd( 140.921, 138.018, 30.5875, 0.15 ) }
    dend_2 { pt3dadd( 142.139, 138.919, 30.7816, 0.15 ) }
    dend_2 { pt3dadd( 142.683, 139.297, 30.8851, 0.74 ) }
    dend_2 { pt3dadd( 143.162, 139.601, 30.9777, 0.74 ) }
    dend_2 { pt3dadd( 144.992, 140.661, 31.3124, 0.07 ) }
    dend_2 { pt3dadd( 146.504, 141.473, 31.5638, 0.07 ) }
    dend_2 { pt3dadd( 147.106, 141.766, 31.6481, 0.29 ) }
    dend_2 { pt3dadd( 147.729, 142.036, 31.7048, 0.52 ) }
    dend_2 { pt3dadd( 149.609, 142.664, 31.813, 0.15 ) }
    dend_2 { pt3dadd( 150.989, 142.98, 31.8315, 0.15 ) }
    dend_2 { pt3dadd( 151.431, 143.044, 31.8247, 0.37 ) }
    dend_2 { pt3dadd( 151.958, 143.102, 31.7968, 0.88 ) }
    dend_2 { pt3dadd( 152.67, 143.174, 31.7561, 1.25 ) }
    dend_2 { pt3dadd( 155.063, 143.439, 31.7591, 0.15 ) }
    dend_2 { pt3dadd( 156.742, 143.677, 31.874, 0.15 ) }
    dend_2 { pt3dadd( 157.608, 143.845, 31.9713, 0.59 ) }
    dend_2 { pt3dadd( 158.129, 143.975, 32.0487, 0.59 ) }
    dend_2 { pt3dadd( 160.343, 144.691, 32.4347, 0.15 ) }
    dend_2 { pt3dadd( 162.396, 145.525, 32.8388, 0.15 ) }
    dend_2 { pt3dadd( 164.057, 146.427, 33.1785, 0.15 ) }
    dend_2 { pt3dadd( 164.527, 146.729, 33.2637, 0.59 ) }
    dend_2 { pt3dadd( 165.347, 147.31, 33.3271, 0.96 ) }
    dend_2 { pt3dadd( 166.555, 148.248, 33.3173, 0.15 ) }
    dend_2 { pt3dadd( 167.327, 148.914, 33.2229, 0.29 ) }
    dend_2 { pt3dadd( 169.159, 150.673, 32.75, 0.07 ) }
    dend_2 { pt3dadd( 169.814, 151.356, 32.5476, 0.07 ) }
    dend_2 { pt3dadd( 171.165, 152.809, 32.1245, 0.07 ) }
    dend_2 { pt3dadd( 171.747, 153.456, 31.9401, 0.59 ) }
    dend_2 { pt3dadd( 172.243, 154.026, 31.7894, 1.03 ) }
    dend_2 { pt3dadd( 173.603, 155.645, 31.409, 0.07 ) }
    dend_2 { pt3dadd( 174.596, 156.862, 31.2397, 0.07 ) }
    dend_2 { pt3dadd( 174.942, 157.298, 31.2237, 0.37 ) }
    dend_2 { pt3dadd( 175.343, 157.812, 31.2552, 0.37 ) }
    dend_2 { pt3dadd( 176.438, 159.184, 31.4062, 0.07 ) }
    dend_2 { pt3dadd( 176.852, 159.678, 31.4859, 0.22 ) }
    dend_2 { pt3dadd( 177.921, 160.78, 31.7935, 0.07 ) }
    dend_2 { pt3dadd( 178.642, 161.449, 32.0935, 0.96 ) }
    dend_2 { pt3dadd( 179.643, 162.305, 32.567, 0.07 ) }
    dend_2 { pt3dadd( 180.668, 163.12, 33.0839, 0.07 ) }
    dend_2 { pt3dadd( 181.61, 163.789, 33.5708, 0.44 ) }
    dend_2 { pt3dadd( 183.695, 165.128, 34.6482, 0.15 ) }
    dend_2 { pt3dadd( 185.048, 165.917, 35.4277, 0.15 ) }
    dend_2 { pt3dadd( 185.773, 166.308, 35.8983, 0.44 ) }
    dend_2 { pt3dadd( 186.292, 166.566, 36.2788, 0.88 ) }
    dend_2 { pt3dadd( 187.534, 167.13, 37.2347, 0.22 ) }
    dend_2 { pt3dadd( 188.519, 167.551, 38.0205, 0.07 ) }
    dend_2 { pt3dadd( 190.314, 168.368, 39.41, 0.07 ) }
    dend_2 { pt3dadd( 191.076, 168.74, 39.9493, 0.52 ) }
    dend_2 { pt3dadd( 192.113, 169.265, 40.6607, 0.52 ) }
    dend_2 { pt3dadd( 193.145, 169.863, 41.2871, 0.07 ) }
    dend_2 { pt3dadd( 193.724, 170.255, 41.5856, 0.29 ) }
    dend_2 { pt3dadd( 194.996, 171.264, 42.0688, 0.07 ) }
    dend_2 { pt3dadd( 195.976, 172.164, 42.3682, 0.07 ) }
    dend_2 { pt3dadd( 196.369, 172.564, 42.4941, 0.22 ) }
    dend_2 { pt3dadd( 197.764, 174.094, 42.9063, 0.07 ) }
    dend_2 { pt3dadd( 198.272, 174.632, 43.0536, 0.07 ) }
    dend_2 { pt3dadd( 199.08, 175.438, 43.286, 0.15 ) }
    dend_2 { pt3dadd( 200.484, 176.689, 43.6754, 0.07 ) }
    dend_2 { pt3dadd( 201.206, 177.254, 43.8533, 0.81 ) }
    dend_2 { pt3dadd( 202.93, 178.377, 44.1758, 0.15 ) }
    dend_2 { pt3dadd( 205.58, 179.8, 44.6463, 0.15 ) }
    dend_2 { pt3dadd( 206.151, 180.08, 44.7365, 0.29 ) }
    dend_2 { pt3dadd( 207.646, 180.763, 44.9495, 0.07 ) }
    dend_2 { pt3dadd( 209.145, 181.419, 45.1143, 0.22 ) }
    dend_2 { pt3dadd( 211.81, 182.552, 45.3945, 0.07 ) }
    dend_2 { pt3dadd( 214.444, 183.63, 45.6816, 0.07 ) }
    dend_2 { pt3dadd( 215.15, 183.929, 45.746, 0.22 ) }
    dend_2 { pt3dadd( 215.582, 184.13, 45.7806, 0.22 ) }
    dend_2 { pt3dadd( 216.956, 184.864, 45.8242, 0.07 ) }
    dend_2 { pt3dadd( 217.436, 185.154, 45.817, 0.29 ) }
    dend_2 { pt3dadd( 217.9, 185.479, 45.7691, 0.29 ) }
    dend_2 { pt3dadd( 219.447, 186.624, 45.4117, 0.07 ) }
    dend_2 { pt3dadd( 220.655, 187.51, 45.118, 0.07 ) }
    dend_2 { pt3dadd( 221.571, 188.184, 44.8894, 0.07 ) }
    dend_2 { pt3dadd( 221.951, 188.465, 44.7964, 0.07 ) }
    dend_2 { pt3dadd( 222.525, 188.882, 44.7142, 0.29 ) }
    dend_2 { pt3dadd( 222.79, 189.063, 44.6998, 0.29 ) }
    dend_2 { pt3dadd( 224.199, 189.973, 44.8002, 0.07 ) }
    dend_2 { pt3dadd( 224.906, 190.414, 44.9061, 0.52 ) }
    dend_2 { pt3dadd( 226.611, 191.452, 45.2498, 0.07 ) }
    dend_2 { pt3dadd( 228.169, 192.369, 45.5602, 0.52 ) }
    dend_2 { pt3dadd( 229.904, 193.357, 45.8944, 0.07 ) }
    dend_2 { pt3dadd( 231.195, 194.056, 46.1079, 0.07 ) }
    dend_2 { pt3dadd( 231.869, 194.408, 46.228, 0.37 ) }
    dend_2 { pt3dadd( 232.752, 194.865, 46.3124, 0.37 ) }
    dend_2 { pt3dadd( 234.415, 195.737, 46.3187, 0.07 ) }
    dend_2 { pt3dadd( 235.268, 196.199, 46.2203, 0.59 ) }
    dend_2 { pt3dadd( 237.084, 197.242, 45.9852, 0.07 ) }
    dend_2 { pt3dadd( 238.147, 197.877, 45.9371, 0.07 ) }
    dend_2 { pt3dadd( 240.312, 199.276, 46.156, 0.22 ) }
    dend_2 { pt3dadd( 240.962, 199.74, 46.3438, 0.07 ) }
    dend_2 { pt3dadd( 241.611, 200.272, 46.6339, 0.15 ) }
    dend_2 { pt3dadd( 242.879, 201.379, 47.3036, 0.07 ) }
    dend_2 { pt3dadd( 244.716, 203.058, 48.3605, 0.07 ) }
    dend_2 { pt3dadd( 245.893, 204.129, 48.9707, 0.15 ) }
    dend_2 { pt3dadd( 246.777, 204.918, 49.4222, 0.15 ) }
    dend_2 { pt3dadd( 248.122, 206.057, 50.02, 0.07 ) }
    dend_2 { pt3dadd( 248.742, 206.557, 50.2884, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_2 { pt3dadd( 249.549, 207.196, 50.5943, 0.29 ) }
    dend_2 { pt3dadd( 251.218, 208.507, 51.2119, 0.07 ) }
    dend_2 { pt3dadd( 251.669, 208.845, 51.3972, 0.22 ) }
    dend_2 { pt3dadd( 254.195, 210.652, 52.4289, 0.07 ) }
    dend_2 { pt3dadd( 255.941, 211.844, 53.1708, 0.07 ) }
    dend_2 { pt3dadd( 256.846, 212.454, 53.5489, 0.15 ) }
    dend_2 { pt3dadd( 258.417, 213.484, 54.1975, 0.07 ) }
    dend_2 { pt3dadd( 259.532, 214.221, 54.6353, 0.07 ) }
    dend_2 { pt3dadd( 261.307, 215.481, 55.1928, 0.07 ) }
    dend_2 { pt3dadd( 261.689, 215.781, 55.2869, 0.15 ) }
    dend_2 { pt3dadd( 263.75, 217.639, 55.7238, 0.07 ) }
    dend_2 { pt3dadd( 264.315, 218.203, 55.8874, 0.07 ) }
    dend_2 { pt3dadd( 265.147, 219.09, 56.1348, 0.29 ) }
    dend_2 { pt3dadd( 266.966, 221.18, 56.7526, 0.07 ) }
    dend_2 { pt3dadd( 268.273, 222.814, 57.2632, 0.07 ) }
    dend_2 { pt3dadd( 270.118, 225.244, 58.0428, 0.07 ) }
    dend_2 { pt3dadd( 271.689, 227.54, 58.7918, 0.07 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 17/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 5.68628, -48.7312, -13.3401, 1.62 ) }
    dend_57 { pt3dadd( 5.53203, -50.5973, -12.8742, 1.62 ) }
    dend_57 { pt3dadd( 5.44998, -52.7088, -12.4056, 1.11 ) }
    dend_57 { pt3dadd( 5.35881, -55.4373, -11.8698, 0.88 ) }
    dend_57 { pt3dadd( 5.27621, -57.3934, -11.4799, 0.88 ) }
    dend_57 { pt3dadd( 5.22598, -58.557, -11.304, 0.96 ) }
    dend_57 { pt3dadd( 5.13147, -60.872, -11.0244, 1.33 ) }
    dend_57 { pt3dadd( 5.06275, -63.259, -10.8684, 0.96 ) }
    dend_57 { pt3dadd( 5.01103, -65.0102, -10.8434, 0.96 ) }
    dend_57 { pt3dadd( 4.90134, -67.4738, -10.9785, 0.81 ) }
    dend_57 { pt3dadd( 4.75213, -70.1793, -11.2309, 0.81 ) }
    dend_57 { pt3dadd( 4.67558, -71.3571, -11.3935, 1.18 ) }
    dend_57 { pt3dadd( 4.56291, -72.6893, -11.6619, 1.47 ) }
    dend_57 { pt3dadd( 4.45939, -73.7729, -11.9197, 1.47 ) }
    dend_57 { pt3dadd( 4.37923, -74.8769, -12.2066, 1.25 ) }
    dend_57 { pt3dadd( 4.31875, -75.758, -12.439, 1.33 ) }
    dend_57 { pt3dadd( 4.22231, -77.1389, -12.7158, 1.11 ) }
    dend_57 { pt3dadd( 4.11788, -78.6572, -12.9747, 1.03 ) }
    dend_57 { pt3dadd( 4.00128, -80.3718, -13.2069, 1.25 ) }
    dend_57 { pt3dadd( 3.91324, -81.6757, -13.3436, 1.25 ) }
    dend_57 { pt3dadd( 3.79568, -83.0937, -13.4604, 1.25 ) }
    dend_57 { pt3dadd( 3.63368, -84.5682, -13.5023, 1.25 ) }
    dend_57 { pt3dadd( 3.34508, -86.7299, -13.4584, 0.81 ) }
    dend_57 { pt3dadd( 3.18249, -87.9267, -13.3811, 0.88 ) }
    dend_57 { pt3dadd( 2.86343, -90.2624, -13.2031, 0.81 ) }
    dend_57 { pt3dadd( 2.66123, -91.8068, -13.099, 0.66 ) }
    dend_57 { pt3dadd( 2.45452, -93.8867, -12.9917, 0.59 ) }
    dend_57 { pt3dadd( 2.3689, -95.0705, -12.9528, 0.59 ) }
    dend_57 { pt3dadd( 2.31769, -96.5568, -12.9386, 0.66 ) }
    dend_57 { pt3dadd( 2.31003, -98.3051, -12.9181, 0.96 ) }
    dend_57 { pt3dadd( 2.34499, -100.193, -12.8595, 1.18 ) }
    dend_57 { pt3dadd( 2.4287, -102.203, -12.7862, 1.33 ) }
    dend_57 { pt3dadd( 2.51605, -104.0, -12.6967, 1.03 ) }
    dend_57 { pt3dadd( 2.59128, -105.954, -12.5269, 0.81 ) }
    dend_57 { pt3dadd( 2.66707, -108.528, -12.1804, 1.11 ) }
    dend_57 { pt3dadd( 2.7097, -110.782, -11.7838, 0.96 ) }
    dend_57 { pt3dadd( 2.72104, -111.951, -11.5569, 1.03 ) }
    dend_57 { pt3dadd( 2.72199, -113.802, -11.201, 1.03 ) }
    dend_57 { pt3dadd( 2.71855, -115.16, -10.9715, 0.88 ) }
    dend_57 { pt3dadd( 2.7193, -117.646, -10.6371, 1.11 ) }
    dend_57 { pt3dadd( 2.70952, -119.425, -10.4755, 1.55 ) }
    dend_57 { pt3dadd( 2.69108, -121.104, -10.372, 1.77 ) }
    dend_57 { pt3dadd( 2.67879, -123.266, -10.307, 2.14 ) }
    dend_57 { pt3dadd( 2.70586, -125.923, -10.3212, 1.25 ) }
    dend_57 { pt3dadd( 2.78027, -128.707, -10.4246, 0.59 ) }
    dend_57 { pt3dadd( 2.84505, -130.35, -10.5557, 0.52 ) }
    dend_57 { pt3dadd( 2.91465, -131.622, -10.6877, 0.52 ) }
    dend_57 { pt3dadd( 3.01238, -133.524, -10.9264, 0.66 ) }
    dend_57 { pt3dadd( 3.08751, -134.939, -11.1312, 0.66 ) }
    dend_57 { pt3dadd( 3.16226, -136.441, -11.3707, 0.59 ) }
    dend_57 { pt3dadd( 3.20477, -137.662, -11.527, 1.03 ) }
    dend_57 { pt3dadd( 3.22869, -138.835, -11.5831, 1.25 ) }
    dend_57 { pt3dadd( 3.21016, -140.702, -11.486, 0.88 ) }
    dend_57 { pt3dadd( 3.15267, -142.159, -11.2275, 0.81 ) }
    dend_57 { pt3dadd( 3.06155, -143.671, -10.7983, 0.88 ) }
    dend_57 { pt3dadd( 2.90444, -145.742, -10.0275, 0.44 ) }
    dend_57 { pt3dadd( 2.78148, -147.22, -9.36413, 0.44 ) }
    dend_57 { pt3dadd( 2.66006, -148.554, -8.68895, 0.52 ) }
    dend_57 { pt3dadd( 2.54694, -149.87, -7.97105, 0.52 ) }
    dend_57 { pt3dadd( 2.44021, -151.01, -7.32008, 0.59 ) }
    dend_57 { pt3dadd( 2.36191, -151.813, -6.85978, 0.81 ) }
    dend_57 { pt3dadd( 2.24871, -153.087, -6.19174, 0.74 ) }
    dend_57 { pt3dadd( 2.15562, -154.439, -5.54254, 1.03 ) }
    dend_57 { pt3dadd( 2.05379, -156.473, -4.6886, 0.88 ) }
    dend_57 { pt3dadd( 2.0004, -158.155, -4.0732, 0.59 ) }
    dend_57 { pt3dadd( 1.97971, -159.731, -3.58067, 0.59 ) }
    dend_57 { pt3dadd( 1.98771, -161.309, -3.27449, 1.11 ) }
    dend_57 { pt3dadd( 2.03395, -163.314, -3.17699, 1.18 ) }
    dend_57 { pt3dadd( 2.08571, -165.071, -3.3282, 1.25 ) }
    dend_57 { pt3dadd( 2.10567, -166.039, -3.56837, 1.33 ) }
    dend_57 { pt3dadd( 2.13379, -168.059, -4.3612, 0.74 ) }
    dend_57 { pt3dadd( 2.15035, -171.081, -5.85775, 0.52 ) }
    dend_57 { pt3dadd( 2.13999, -172.528, -6.70923, 0.52 ) }
    dend_57 { pt3dadd( 2.12866, -173.546, -7.38632, 0.44 ) }
    dend_57 { pt3dadd( 2.09702, -175.247, -8.57383, 0.37 ) }
    dend_57 { pt3dadd( 2.06614, -176.257, -9.32452, 0.37 ) }
    dend_57 { pt3dadd( 2.03519, -177.053, -9.90831, 0.37 ) }
    dend_57 { pt3dadd( 1.99237, -178.296, -10.702, 0.52 ) }
    dend_57 { pt3dadd( 1.93761, -179.741, -11.5373, 0.81 ) }
    dend_57 { pt3dadd( 1.87861, -181.571, -12.2759, 0.74 ) }
    dend_57 { pt3dadd( 1.83048, -183.701, -12.7331, 0.96 ) }
    dend_57 { pt3dadd( 1.79891, -185.272, -12.8387, 1.62 ) }
    dend_57 { pt3dadd( 1.77706, -186.83, -12.7504, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_57 { pt3dadd( 1.75987, -189.237, -12.3183, 0.81 ) }
    dend_57 { pt3dadd( 1.74738, -194.055, -11.0238, 0.44 ) }
    dend_57 { pt3dadd( 1.74718, -195.12, -10.6761, 0.44 ) }
    dend_57 { pt3dadd( 1.73961, -196.064, -10.3871, 0.59 ) }
    dend_57 { pt3dadd( 1.7067, -197.128, -10.148, 1.18 ) }
    dend_57 { pt3dadd( 1.61285, -198.886, -9.92527, 1.18 ) }
    dend_57 { pt3dadd( 1.49473, -200.553, -9.92288, 1.03 ) }
    dend_57 { pt3dadd( 1.33837, -202.154, -10.1267, 0.88 ) }
    dend_57 { pt3dadd( 1.0466, -204.369, -10.4691, 0.59 ) }
    dend_57 { pt3dadd( 0.79606, -206.018, -10.7634, 0.44 ) }
    dend_57 { pt3dadd( 0.61144, -207.169, -11.0071, 0.52 ) }
    dend_57 { pt3dadd( 0.412579, -208.423, -11.3287, 0.52 ) }
    dend_57 { pt3dadd( 0.246325, -209.572, -11.6509, 0.74 ) }
    dend_57 { pt3dadd( 0.0860081, -210.81, -11.9939, 0.59 ) }
    dend_57 { pt3dadd( -0.0542659, -212.05, -12.303, 0.59 ) }
    dend_57 { pt3dadd( -0.194182, -213.443, -12.5881, 1.11 ) }
    dend_57 { pt3dadd( -0.324795, -214.808, -12.801, 1.11 ) }
    dend_57 { pt3dadd( -0.478664, -216.675, -12.9201, 1.55 ) }
    dend_57 { pt3dadd( -0.642626, -218.683, -12.8988, 0.88 ) }
    dend_57 { pt3dadd( -0.769632, -220.247, -12.7776, 0.96 ) }
    dend_57 { pt3dadd( -0.941575, -222.209, -12.5383, 0.59 ) }
    dend_57 { pt3dadd( -1.08075, -223.593, -12.3213, 0.59 ) }
    dend_57 { pt3dadd( -1.34229, -225.958, -11.976, 0.59 ) }
    dend_57 { pt3dadd( -1.47149, -227.045, -11.8464, 0.81 ) }
    dend_57 { pt3dadd( -1.68328, -228.696, -11.7078, 0.59 ) }
    dend_57 { pt3dadd( -1.98586, -230.748, -11.6227, 0.44 ) }
    dend_57 { pt3dadd( -2.3155, -232.652, -11.648, 0.52 ) }
    dend_57 { pt3dadd( -2.68804, -234.42, -11.6996, 0.52 ) }
    dend_57 { pt3dadd( -3.04829, -235.79, -11.7705, 0.74 ) }
    dend_57 { pt3dadd( -3.40773, -237.054, -11.812, 1.03 ) }
    dend_57 { pt3dadd( -3.64461, -237.81, -11.8664, 1.25 ) }
    dend_57 { pt3dadd( -4.05247, -239.018, -12.0177, 1.03 ) }
    dend_57 { pt3dadd( -4.71877, -240.943, -12.3234, 0.59 ) }
    dend_57 { pt3dadd( -5.37647, -242.743, -12.632, 0.52 ) }
    dend_57 { pt3dadd( -6.08999, -244.546, -13.0041, 0.37 ) }
    dend_57 { pt3dadd( -7.0267, -246.829, -13.5159, 0.37 ) }
    dend_57 { pt3dadd( -7.46048, -247.85, -13.7787, 0.37 ) }
    dend_57 { pt3dadd( -7.98132, -249.073, -14.1208, 0.88 ) }
    dend_57 { pt3dadd( -8.56783, -250.511, -14.5738, 0.96 ) }
    dend_57 { pt3dadd( -9.11802, -251.968, -15.0076, 1.03 ) }
    dend_57 { pt3dadd( -9.56096, -253.351, -15.353, 0.66 ) }
    dend_57 { pt3dadd( -10.022, -255.191, -15.7218, 0.59 ) }
    dend_57 { pt3dadd( -10.3045, -256.733, -15.97, 0.52 ) }
    dend_57 { pt3dadd( -10.5023, -258.532, -16.2172, 0.44 ) }
    dend_57 { pt3dadd( -10.5435, -260.196, -16.3483, 0.44 ) }
    dend_57 { pt3dadd( -10.4546, -262.23, -16.3825, 0.29 ) }
    dend_57 { pt3dadd( -10.3793, -263.069, -16.3132, 0.29 ) }
    dend_57 { pt3dadd( -10.1641, -264.863, -15.9841, 0.44 ) }
    dend_57 { pt3dadd( -10.0049, -266.197, -15.6176, 0.52 ) }
    dend_57 { pt3dadd( -9.78528, -268.257, -14.9027, 0.22 ) }
    dend_57 { pt3dadd( -9.72551, -268.954, -14.6134, 0.59 ) }
    dend_57 { pt3dadd( -9.6347, -270.373, -13.9278, 1.11 ) }
    dend_57 { pt3dadd( -9.57689, -271.347, -13.42, 1.25 ) }
    dend_57 { pt3dadd( -9.49006, -273.092, -12.4991, 0.59 ) }
    dend_57 { pt3dadd( -9.44135, -274.385, -11.7911, 0.44 ) }
    dend_57 { pt3dadd( -9.39054, -276.416, -10.7127, 0.29 ) }
    dend_57 { pt3dadd( -9.38877, -277.716, -10.053, 0.29 ) }
    dend_57 { pt3dadd( -9.41101, -279.017, -9.41546, 0.37 ) }
    dend_57 { pt3dadd( -9.42672, -280.271, -8.7795, 0.52 ) }
    dend_57 { pt3dadd( -9.44573, -281.383, -8.23075, 1.03 ) }
    dend_57 { pt3dadd( -9.46497, -282.462, -7.73535, 1.84 ) }
    dend_57 { pt3dadd( -9.46066, -283.561, -7.30366, 1.84 ) }
    dend_57 { pt3dadd( -9.42533, -285.385, -6.68639, 1.55 ) }
    dend_57 { pt3dadd( -9.32553, -287.952, -5.89169, 0.52 ) }
    dend_57 { pt3dadd( -9.23029, -289.431, -5.468, 0.52 ) }
    dend_57 { pt3dadd( -9.12016, -290.861, -5.13728, 0.52 ) }
    dend_57 { pt3dadd( -9.01974, -292.373, -4.87402, 0.74 ) }
    dend_57 { pt3dadd( -8.95021, -294.042, -4.71568, 0.29 ) }
    dend_57 { pt3dadd( -8.96885, -295.088, -4.77367, 0.37 ) }
    dend_57 { pt3dadd( -9.04445, -295.953, -4.94843, 0.88 ) }
    dend_57 { pt3dadd( -9.28078, -297.72, -5.46085, 0.88 ) }
    dend_57 { pt3dadd( -9.55062, -299.164, -5.9697, 0.66 ) }
    dend_57 { pt3dadd( -10.0051, -301.013, -6.68983, 0.52 ) }
    dend_57 { pt3dadd( -10.5918, -302.962, -7.45763, 0.37 ) }
    dend_57 { pt3dadd( -10.9544, -304.05, -7.85607, 0.37 ) }
    dend_57 { pt3dadd( -11.1541, -304.585, -8.02006, 0.74 ) }
    dend_57 { pt3dadd( -11.5299, -305.521, -8.23164, 1.03 ) }
    dend_57 { pt3dadd( -12.0939, -306.848, -8.45911, 0.81 ) }
    dend_57 { pt3dadd( -12.7521, -308.318, -8.60593, 0.29 ) }
    dend_57 { pt3dadd( -13.4874, -309.911, -8.64713, 0.29 ) }
    dend_57 { pt3dadd( -14.1764, -311.35, -8.65989, 0.29 ) }
    dend_57 { pt3dadd( -14.7083, -312.459, -8.67297, 0.29 ) }
    dend_57 { pt3dadd( -15.3384, -313.814, -8.69311, 0.59 ) }
    dend_57 { pt3dadd( -15.9269, -315.207, -8.64337, 0.29 ) }
    dend_57 { pt3dadd( -16.1746, -315.862, -8.58973, 0.44 ) }
    dend_57 { pt3dadd( -16.5711, -317.027, -8.44393, 0.96 ) }
    dend_57 { pt3dadd( -16.7601, -317.695, -8.34434, 0.96 ) }
    dend_57 { pt3dadd( -17.232, -319.651, -7.96153, 0.29 ) }
    dend_57 { pt3dadd( -17.6233, -321.597, -7.52447, 0.74 ) }
    dend_57 { pt3dadd( -17.7505, -322.361, -7.34885, 1.18 ) }
    dend_57 { pt3dadd( -17.8928, -323.346, -7.19221, 1.25 ) }
    dend_57 { pt3dadd( -18.1352, -325.308, -7.03161, 0.37 ) }
    dend_57 { pt3dadd( -18.3553, -327.093, -7.05415, 0.44 ) }
    dend_57 { pt3dadd( -18.4773, -328.165, -7.17235, 0.44 ) }
    dend_57 { pt3dadd( -18.6494, -329.705, -7.47264, 0.44 ) }
    dend_57 { pt3dadd( -18.8918, -332.062, -7.9871, 0.44 ) }
    dend_57 { pt3dadd( -18.9866, -333.086, -8.18412, 0.88 ) }
    dend_57 { pt3dadd( -19.0975, -334.479, -8.3572, 1.03 ) }
    dend_57 { pt3dadd( -19.1396, -335.098, -8.37671, 1.03 ) }
    dend_57 { pt3dadd( -19.2786, -337.545, -8.13639, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_57 { pt3dadd( -19.3495, -339.206, -7.7442, 0.44 ) }
    dend_57 { pt3dadd( -19.3893, -341.358, -6.99352, 0.44 ) }
    dend_57 { pt3dadd( -19.4035, -343.19, -6.24766, 0.44 ) }
    dend_57 { pt3dadd( -19.3937, -344.349, -5.71989, 0.44 ) }
    dend_57 { pt3dadd( -19.3811, -345.189, -5.30403, 0.88 ) }
    dend_57 { pt3dadd( -19.3533, -346.181, -4.76107, 1.62 ) }
    dend_57 { pt3dadd( -19.3169, -347.762, -3.90361, 1.62 ) }
    dend_57 { pt3dadd( -19.2933, -349.942, -2.86926, 0.66 ) }
    dend_57 { pt3dadd( -19.2984, -351.653, -2.12568, 0.29 ) }
    dend_57 { pt3dadd( -19.3052, -353.118, -1.44701, 0.29 ) }
    dend_57 { pt3dadd( -19.3026, -354.29, -0.850268, 0.29 ) }
    dend_57 { pt3dadd( -19.2798, -355.209, -0.336848, 0.88 ) }
    dend_57 { pt3dadd( -19.2104, -356.654, 0.525766, 0.96 ) }
    dend_57 { pt3dadd( -19.0686, -358.245, 1.43152, 0.22 ) }
    dend_57 { pt3dadd( -18.8757, -359.796, 2.26351, 0.22 ) }
    dend_57 { pt3dadd( -18.7821, -360.456, 2.60575, 0.44 ) }
    dend_57 { pt3dadd( -18.5968, -361.709, 3.27353, 0.88 ) }
    dend_57 { pt3dadd( -18.47, -362.513, 3.73017, 1.77 ) }
    dend_57 { pt3dadd( -18.2465, -363.799, 4.45713, 1.99 ) }
    dend_57 { pt3dadd( -17.8537, -365.922, 5.58527, 0.74 ) }
    dend_57 { pt3dadd( -17.4996, -367.846, 6.56822, 0.37 ) }
    dend_57 { pt3dadd( -17.089, -370.041, 7.71167, 0.44 ) }
    dend_57 { pt3dadd( -16.8464, -371.376, 8.40313, 0.37 ) }
    dend_57 { pt3dadd( -16.6425, -372.47, 8.97886, 0.37 ) }
    dend_57 { pt3dadd( -16.3011, -374.19, 9.85084, 0.37 ) }
    dend_57 { pt3dadd( -16.0847, -375.209, 10.301, 0.22 ) }
    dend_57 { pt3dadd( -15.9, -375.966, 10.5682, 0.22 ) }
    dend_57 { pt3dadd( -15.6343, -376.904, 10.7559, 0.29 ) }
    dend_57 { pt3dadd( -15.3299, -377.863, 10.7975, 0.81 ) }
    dend_57 { pt3dadd( -14.8739, -379.167, 10.6549, 1.77 ) }
    dend_57 { pt3dadd( -14.6585, -379.699, 10.5008, 1.62 ) }
    dend_57 { pt3dadd( -14.0687, -381.118, 9.92956, 0.44 ) }
    dend_57 { pt3dadd( -13.2552, -382.903, 8.97854, 0.29 ) }
    dend_57 { pt3dadd( -12.763, -383.858, 8.36764, 0.29 ) }
    dend_57 { pt3dadd( -12.3302, -384.618, 7.82909, 0.29 ) }
    dend_57 { pt3dadd( -11.9233, -385.339, 7.28727, 0.44 ) }
    dend_57 { pt3dadd( -11.2529, -386.64, 6.36958, 0.66 ) }
    dend_57 { pt3dadd( -10.7508, -387.751, 5.67503, 0.66 ) }
    dend_57 { pt3dadd( -10.4135, -388.581, 5.24894, 1.84 ) }
    dend_57 { pt3dadd( -9.94584, -389.787, 4.70717, 1.84 ) }
    dend_57 { pt3dadd( -8.97124, -392.401, 3.68515, 1.11 ) }
    dend_57 { pt3dadd( -8.44099, -393.928, 3.18048, 0.22 ) }
    dend_57 { pt3dadd( -8.07125, -395.067, 2.82495, 0.29 ) }
    dend_57 { pt3dadd( -7.78397, -396.05, 2.54758, 0.66 ) }
    dend_57 { pt3dadd( -7.43971, -397.331, 2.19486, 1.11 ) }
    dend_57 { pt3dadd( -7.12947, -398.55, 1.8806, 0.29 ) }
    dend_57 { pt3dadd( -6.81176, -399.759, 1.65225, 0.22 ) }
    dend_57 { pt3dadd( -6.2139, -401.967, 1.28478, 0.22 ) }
    dend_57 { pt3dadd( -5.94799, -402.893, 1.19971, 0.29 ) }
    dend_57 { pt3dadd( -5.63527, -403.946, 1.2003, 0.37 ) }
    dend_57 { pt3dadd( -5.12446, -405.575, 1.33227, 0.29 ) }
    dend_57 { pt3dadd( -4.68782, -406.901, 1.57523, 0.52 ) }
    dend_57 { pt3dadd( -4.25708, -408.195, 1.92993, 1.62 ) }
    dend_57 { pt3dadd( -3.56064, -410.283, 2.67418, 0.37 ) }
    dend_57 { pt3dadd( -3.06274, -411.784, 3.23707, 0.29 ) }
    dend_57 { pt3dadd( -2.68798, -412.937, 3.67143, 0.29 ) }
    dend_57 { pt3dadd( -2.21967, -414.523, 4.11658, 0.29 ) }
    dend_57 { pt3dadd( -2.04077, -415.224, 4.215, 0.29 ) }
    dend_57 { pt3dadd( -1.87233, -416.012, 4.23681, 0.74 ) }
    dend_57 { pt3dadd( -1.63303, -417.298, 4.03767, 1.62 ) }
    dend_57 { pt3dadd( -1.34946, -419.008, 3.49311, 2.73 ) }
    dend_57 { pt3dadd( -0.908165, -421.933, 2.24449, 0.44 ) }
    dend_57 { pt3dadd( -0.708413, -423.41, 1.48608, 0.44 ) }
    dend_57 { pt3dadd( -0.570036, -424.473, 0.889707, 0.74 ) }
    dend_57 { pt3dadd( -0.318873, -426.59, -0.420528, 0.44 ) }
    dend_57 { pt3dadd( -0.150757, -428.067, -1.4633, 0.44 ) }
    dend_57 { pt3dadd( -0.0577179, -428.917, -2.15529, 0.81 ) }
    dend_57 { pt3dadd( 0.0137911, -429.605, -2.76054, 1.62 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 68/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 5.68628, -48.7312, -13.3401, 1.55 ) }
    dend_54 { pt3dadd( 6.32771, -49.1994, -14.5004, 1.55 ) }
    dend_54 { pt3dadd( 7.00236, -49.7672, -15.6921, 0.66 ) }
    dend_54 { pt3dadd( 7.54045, -50.3036, -16.6074, 0.52 ) }
    dend_54 { pt3dadd( 7.76916, -50.5644, -16.9658, 0.52 ) }
    dend_54 { pt3dadd( 7.98609, -50.8251, -17.2768, 0.52 ) }
    dend_54 { pt3dadd( 8.28259, -51.1604, -17.6582, 0.74 ) }
    dend_54 { pt3dadd( 8.55775, -51.4361, -17.9032, 0.81 ) }
    dend_54 { pt3dadd( 8.95918, -51.7492, -18.1991, 0.66 ) }
    dend_54 { pt3dadd( 9.4134, -52.0103, -18.509, 0.74 ) }
    dend_54 { pt3dadd( 10.2835, -52.3114, -19.1194, 0.66 ) }
    dend_54 { pt3dadd( 10.7481, -52.351, -19.4778, 0.59 ) }
    dend_54 { pt3dadd( 11.3515, -52.2533, -19.9483, 0.59 ) }
    dend_54 { pt3dadd( 12.0889, -51.9947, -20.5932, 0.66 ) }
    dend_54 { pt3dadd( 12.5604, -51.7377, -21.0729, 0.74 ) }
    dend_54 { pt3dadd( 12.8636, -51.5298, -21.4441, 0.81 ) }
    dend_54 { pt3dadd( 13.3616, -51.1415, -22.1939, 0.81 ) }
    dend_54 { pt3dadd( 13.7813, -50.8047, -22.9942, 0.74 ) }
    dend_54 { pt3dadd( 14.2618, -50.4692, -24.0995, 0.44 ) }
    dend_54 { pt3dadd( 14.6813, -50.2701, -25.1869, 0.37 ) }
    dend_54 { pt3dadd( 15.0835, -50.2311, -26.305, 0.59 ) }
    dend_54 { pt3dadd( 15.4648, -50.3554, -27.3791, 0.96 ) }
    dend_54 { pt3dadd( 15.8193, -50.6096, -28.3392, 0.96 ) }
    dend_54 { pt3dadd( 16.2334, -51.0682, -29.4787, 0.88 ) }
    dend_54 { pt3dadd( 16.6558, -51.6321, -30.5388, 0.81 ) }
    dend_54 { pt3dadd( 17.2254, -52.4651, -31.8405, 0.81 ) }
    dend_54 { pt3dadd( 17.6849, -53.1189, -32.7926, 0.52 ) }
    dend_54 { pt3dadd( 17.9864, -53.4962, -33.3494, 0.88 ) }
    dend_54 { pt3dadd( 18.5051, -53.9842, -34.1889, 0.37 ) }
    dend_54 { pt3dadd( 18.7838, -54.1331, -34.5937, 0.37 ) }
    dend_54 { pt3dadd( 19.0108, -54.1544, -34.9049, 0.37 ) }
    dend_54 { pt3dadd( 19.6649, -54.0021, -35.743, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( 20.2776, -53.8221, -36.5402, 0.81 ) }
    dend_54 { pt3dadd( 20.889, -53.7051, -37.4536, 0.52 ) }
    dend_54 { pt3dadd( 21.1875, -53.7336, -38.0236, 0.52 ) }
    dend_54 { pt3dadd( 21.456, -53.9376, -38.8414, 0.52 ) }
    dend_54 { pt3dadd( 21.5931, -54.144, -39.397, 0.52 ) }
    dend_54 { pt3dadd( 21.8475, -54.6671, -40.5449, 0.59 ) }
    dend_54 { pt3dadd( 22.1057, -55.3352, -41.847, 0.66 ) }
    dend_54 { pt3dadd( 22.3517, -56.0618, -43.1033, 0.66 ) }
    dend_54 { pt3dadd( 22.64, -56.9223, -44.4833, 0.66 ) }
    dend_54 { pt3dadd( 22.9512, -57.8348, -45.8042, 0.52 ) }
    dend_54 { pt3dadd( 23.1016, -58.2513, -46.3562, 0.52 ) }
    dend_54 { pt3dadd( 23.3396, -58.7969, -46.9763, 0.52 ) }
    dend_54 { pt3dadd( 23.7162, -59.5586, -47.6527, 0.66 ) }
    dend_54 { pt3dadd( 24.1825, -60.4495, -48.2369, 0.96 ) }
    dend_54 { pt3dadd( 24.555, -61.1381, -48.5988, 1.03 ) }
    dend_54 { pt3dadd( 24.8357, -61.6882, -48.8645, 1.33 ) }
    dend_54 { pt3dadd( 25.2646, -62.5201, -49.2705, 1.47 ) }
    dend_54 { pt3dadd( 25.6216, -63.2028, -49.5968, 1.25 ) }
    dend_54 { pt3dadd( 26.1952, -64.2677, -50.1085, 0.74 ) }
    dend_54 { pt3dadd( 26.8799, -65.4511, -50.6571, 0.74 ) }
    dend_54 { pt3dadd( 27.5117, -66.462, -51.1121, 0.44 ) }
    dend_54 { pt3dadd( 27.7972, -66.901, -51.2971, 0.44 ) }
    dend_54 { pt3dadd( 28.4913, -67.9412, -51.6609, 0.44 ) }
    dend_54 { pt3dadd( 28.8175, -68.4046, -51.784, 0.44 ) }
    dend_54 { pt3dadd( 29.505, -69.2555, -51.9368, 0.29 ) }
    dend_54 { pt3dadd( 30.3822, -70.1395, -52.0896, 0.29 ) }
    dend_54 { pt3dadd( 30.9209, -70.5311, -52.1849, 0.37 ) }
    dend_54 { pt3dadd( 31.8994, -70.9753, -52.4027, 0.66 ) }
    dend_54 { pt3dadd( 32.935, -71.1698, -52.6759, 0.52 ) }
    dend_54 { pt3dadd( 34.08, -71.1671, -53.0169, 0.44 ) }
    dend_54 { pt3dadd( 35.5187, -70.897, -53.4972, 0.15 ) }
    dend_54 { pt3dadd( 36.5903, -70.4864, -53.8917, 0.22 ) }
    dend_54 { pt3dadd( 37.5641, -69.9133, -54.3145, 0.15 ) }
    dend_54 { pt3dadd( 38.1531, -69.4086, -54.6285, 0.15 ) }
    dend_54 { pt3dadd( 38.4137, -69.0783, -54.7778, 0.59 ) }
    dend_54 { pt3dadd( 38.5809, -68.7709, -54.8776, 0.59 ) }
    dend_54 { pt3dadd( 38.8857, -67.9338, -55.0495, 0.37 ) }
    dend_54 { pt3dadd( 39.1401, -66.7617, -55.242, 0.15 ) }
    dend_54 { pt3dadd( 39.1909, -66.1483, -55.3083, 0.15 ) }
    dend_54 { pt3dadd( 39.2278, -64.8022, -55.3984, 0.15 ) }
    dend_54 { pt3dadd( 39.2443, -64.1679, -55.4251, 0.15 ) }
    dend_54 { pt3dadd( 39.2644, -63.6757, -55.4355, 0.29 ) }
    dend_54 { pt3dadd( 39.2861, -63.1307, -55.4314, 0.29 ) }
    dend_54 { pt3dadd( 39.3707, -61.5449, -55.3534, 0.15 ) }
    dend_54 { pt3dadd( 39.4231, -60.2449, -55.296, 0.15 ) }
    dend_54 { pt3dadd( 39.4261, -59.4457, -55.2913, 0.29 ) }
    dend_54 { pt3dadd( 39.424, -58.7736, -55.2864, 0.37 ) }
    dend_54 { pt3dadd( 45.0382, -59.5345, -63.1114, 0.37 ) }
    dend_54 { pt3dadd( 52.1345, -58.391, -69.566, 0.37 ) }
    dend_54 { pt3dadd( 58.7458, -56.0518, -76.2104, 0.37 ) }
    dend_54 { pt3dadd( 65.5464, -51.895, -81.6695, 0.37 ) }
    dend_54 { pt3dadd( 71.5923, -47.7362, -87.9528, 0.37 ) }
    dend_54 { pt3dadd( 76.7395, -42.2933, -94.0527, 0.37 ) }
    dend_54 { pt3dadd( 82.2105, -37.499, -100.41, 0.37 ) }
    dend_54 { pt3dadd( 87.0979, -32.6304, -107.173, 0.37 ) }
    dend_54 { pt3dadd( 92.9327, -27.5657, -112.972, 0.37 ) }
    dend_54 { pt3dadd( 98.3634, -22.8546, -119.425, 0.37 ) }
    dend_54 { pt3dadd( 102.68, -18.2943, -126.766, 0.37 ) }
    dend_54 { pt3dadd( 108.537, -13.4204, -132.705, 0.37 ) }
    dend_54 { pt3dadd( 114.636, -9.07724, -138.81, 0.37 ) }
    dend_54 { pt3dadd( 120.405, -4.77283, -145.253, 0.37 ) }
    dend_54 { pt3dadd( 125.844, -1.11119, -152.348, 0.37 ) }
    dend_54 { pt3dadd( 130.087, 1.85288, -160.505, 0.37 ) }
    dend_54 { pt3dadd( 134.786, 4.6869, -168.456, 0.37 ) }
    dend_54 { pt3dadd( 139.36, 7.10149, -176.616, 0.37 ) }
    dend_54 { pt3dadd( 143.616, 9.33874, -184.995, 0.37 ) }
    dend_54 { pt3dadd( 147.278, 12.6585, -193.295, 0.37 ) }
    dend_54 { pt3dadd( 150.53, 17.0047, -201.287, 0.37 ) }
    dend_54 { pt3dadd( 152.481, 22.0385, -209.298, 0.37 ) }
    dend_54 { pt3dadd( 154.816, 25.8663, -217.855, 0.37 ) }
    dend_54 { pt3dadd( 157.193, 28.7979, -226.749, 0.37 ) }
    dend_54 { pt3dadd( 158.61, 32.288, -235.645, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 72/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 21.8684, -26.5159, -3.15573, 0.96 ) }
    dend_50 { pt3dadd( 22.2869, -26.4066, -2.41496, 0.96 ) }
    dend_50 { pt3dadd( 22.6248, -26.282, -1.70781, 0.59 ) }
    dend_50 { pt3dadd( 23.0641, -26.0387, -0.512569, 0.59 ) }
    dend_50 { pt3dadd( 23.3787, -25.788, 0.57176, 0.59 ) }
    dend_50 { pt3dadd( 23.586, -25.5757, 1.38143, 0.59 ) }
    dend_50 { pt3dadd( 23.8042, -25.3023, 2.28031, 0.66 ) }
    dend_50 { pt3dadd( 23.9768, -24.9969, 3.15116, 0.59 ) }
    dend_50 { pt3dadd( 24.2059, -24.519, 4.29461, 0.66 ) }
    dend_50 { pt3dadd( 24.4043, -24.1198, 5.12589, 0.66 ) }
    dend_50 { pt3dadd( 24.5761, -23.8474, 5.67281, 0.59 ) }
    dend_50 { pt3dadd( 24.8845, -23.5116, 6.44002, 0.52 ) }
    dend_50 { pt3dadd( 25.154, -23.3343, 6.97815, 0.52 ) }
    dend_50 { pt3dadd( 25.5432, -23.2032, 7.60228, 0.52 ) }
    dend_50 { pt3dadd( 26.1294, -23.1483, 8.39048, 0.52 ) }
    dend_50 { pt3dadd( 26.668, -23.1899, 9.08861, 0.59 ) }
    dend_50 { pt3dadd( 27.2981, -23.334, 9.93832, 0.37 ) }
    dend_50 { pt3dadd( 27.654, -23.461, 10.4409, 0.29 ) }
    dend_50 { pt3dadd( 27.7631, -23.514, 10.6256, 0.29 ) }
    dend_50 { pt3dadd( 27.8807, -23.5934, 10.86, 0.29 ) }
    dend_50 { pt3dadd( 28.1148, -23.8181, 11.4643, 0.29 ) }
    dend_50 { pt3dadd( 28.2554, -23.9861, 11.9514, 0.29 ) }
    dend_50 { pt3dadd( 28.44, -24.2219, 12.8157, 0.59 ) }
    dend_50 { pt3dadd( 28.7049, -24.5126, 14.2366, 0.59 ) }
    dend_50 { pt3dadd( 28.792, -24.6147, 14.8367, 0.59 ) }
    dend_50 { pt3dadd( 28.9041, -24.7556, 15.7335, 0.59 ) }
    dend_50 { pt3dadd( 28.9615, -24.8329, 16.2415, 0.59 ) }
    dend_50 { pt3dadd( 29.094, -24.9804, 17.3053, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_50 { pt3dadd( 29.2267, -25.0599, 18.0769, 0.59 ) }
    dend_50 { pt3dadd( 29.7347, -25.1416, 19.7465, 0.59 ) }
    dend_50 { pt3dadd( 30.1072, -25.1785, 20.6147, 0.59 ) }
    dend_50 { pt3dadd( 30.7349, -25.2941, 21.7324, 0.81 ) }
    dend_50 { pt3dadd( 32.3597, -25.8134, 24.4649, 1.11 ) }
    dend_50 { pt3dadd( 32.7819, -25.99, 25.1907, 0.66 ) }
    dend_50 { pt3dadd( 33.4285, -26.293, 26.4569, 0.59 ) }
    dend_50 { pt3dadd( 33.802, -26.4609, 27.4265, 0.59 ) }
    dend_50 { pt3dadd( 33.9559, -26.5278, 28.081, 0.52 ) }
    dend_50 { pt3dadd( 34.1143, -26.5559, 29.2737, 0.52 ) }
    dend_50 { pt3dadd( 34.1749, -26.5474, 29.9924, 0.52 ) }
    dend_50 { pt3dadd( 34.2038, -26.5196, 30.6788, 0.52 ) }
    dend_50 { pt3dadd( 34.2307, -26.412, 32.1342, 0.52 ) }
    dend_50 { pt3dadd( 34.226, -26.3105, 33.1039, 0.59 ) }
    dend_50 { pt3dadd( 34.229, -26.1324, 34.5914, 0.59 ) }
    dend_50 { pt3dadd( 34.2474, -26.0481, 35.3746, 0.59 ) }
    dend_50 { pt3dadd( 34.2781, -26.0136, 35.8384, 0.59 ) }
    dend_50 { pt3dadd( 34.3649, -26.0057, 36.5009, 0.59 ) }
    dend_50 { pt3dadd( 34.4876, -26.0421, 36.9976, 0.59 ) }
    dend_50 { pt3dadd( 34.788, -26.1751, 37.7841, 0.29 ) }
    dend_50 { pt3dadd( 35.1944, -26.3829, 38.6773, 0.29 ) }
    dend_50 { pt3dadd( 35.4109, -26.4783, 39.1427, 0.52 ) }
    dend_50 { pt3dadd( 35.7869, -26.6109, 40.0687, 0.52 ) }
    dend_50 { pt3dadd( 36.1496, -26.6901, 41.0174, 0.15 ) }
    dend_50 { pt3dadd( 36.4205, -26.7164, 41.7587, 0.22 ) }
    dend_50 { pt3dadd( 36.9207, -26.71, 43.2097, 0.22 ) }
    dend_50 { pt3dadd( 37.0737, -26.7068, 43.6551, 0.22 ) }
    dend_50 { pt3dadd( 37.5615, -26.7214, 45.1265, 0.22 ) }
    dend_50 { pt3dadd( 37.8097, -26.7408, 45.8544, 0.22 ) }
    dend_50 { pt3dadd( 37.9408, -26.7576, 46.2521, 0.22 ) }
    dend_50 { pt3dadd( 38.2925, -26.8458, 47.1495, 0.22 ) }
    dend_50 { pt3dadd( 38.6588, -26.9676, 47.7775, 0.22 ) }
    dend_50 { pt3dadd( 38.998, -27.1028, 48.244, 0.22 ) }
    dend_50 { pt3dadd( 39.4322, -27.3259, 48.8385, 0.22 ) }
    dend_50 { pt3dadd( 39.5552, -27.3951, 49.0332, 0.22 ) }
    dend_50 { pt3dadd( 39.7411, -27.4865, 49.3924, 0.37 ) }
    dend_50 { pt3dadd( 39.9548, -27.5695, 49.8955, 0.81 ) }
    dend_50 { pt3dadd( 40.5589, -27.7133, 51.3522, 0.22 ) }
    dend_50 { pt3dadd( 41.2346, -27.8157, 52.9744, 0.22 ) }
    dend_50 { pt3dadd( 41.56, -27.8306, 53.6892, 0.81 ) }
    dend_50 { pt3dadd( 42.252, -27.8064, 55.1401, 0.22 ) }
    dend_50 { pt3dadd( 42.9264, -27.7274, 56.5085, 0.22 ) }
    dend_50 { pt3dadd( 43.2968, -27.638, 57.1872, 0.74 ) }
    dend_50 { pt3dadd( 43.4942, -27.5646, 57.5185, 0.74 ) }
    dend_50 { pt3dadd( 44.3714, -27.1955, 58.8521, 0.15 ) }
    dend_50 { pt3dadd( 45.2469, -26.8657, 60.2007, 0.59 ) }
    dend_50 { pt3dadd( 45.4085, -26.8199, 60.4787, 0.59 ) }
    dend_50 { pt3dadd( 45.8625, -26.7361, 61.4146, 0.22 ) }
    dend_50 { pt3dadd( 46.637, -26.7168, 63.3761, 0.22 ) }
    dend_50 { pt3dadd( 46.843, -26.7596, 63.9972, 0.44 ) }
    dend_50 { pt3dadd( 47.2719, -26.9787, 65.6047, 0.44 ) }
    dend_50 { pt3dadd( 47.6659, -27.2648, 67.3526, 0.44 ) }
    dend_50 { pt3dadd( 47.8194, -27.3974, 68.1756, 0.44 ) }
    dend_50 { pt3dadd( 47.9174, -27.4946, 68.8342, 0.44 ) }
    dend_50 { pt3dadd( 48.0582, -27.5802, 69.7271, 0.88 ) }
    dend_50 { pt3dadd( 48.3128, -27.6237, 71.2647, 0.74 ) }
    dend_50 { pt3dadd( 48.6895, -27.537, 73.0738, 0.74 ) }
    dend_50 { pt3dadd( 48.9674, -27.4163, 74.0765, 0.74 ) }
    dend_50 { pt3dadd( 49.2554, -27.2777, 74.8648, 0.74 ) }
    dend_50 { pt3dadd( 49.7063, -27.0482, 75.8021, 0.22 ) }
    dend_50 { pt3dadd( 50.2872, -26.7663, 76.6706, 0.22 ) }
    dend_50 { pt3dadd( 50.8916, -26.5264, 77.1994, 0.52 ) }
    dend_50 { pt3dadd( 51.5333, -26.2993, 77.5812, 0.66 ) }
    dend_50 { pt3dadd( 52.6754, -25.9457, 78.1224, 0.15 ) }
    dend_50 { pt3dadd( 53.6765, -25.681, 78.5158, 0.81 ) }
    dend_50 { pt3dadd( 54.1578, -25.5727, 78.7215, 0.22 ) }
    dend_50 { pt3dadd( 55.7093, -25.247, 79.4419, 0.15 ) }
    dend_50 { pt3dadd( 56.7928, -25.0211, 80.0172, 0.15 ) }
    dend_50 { pt3dadd( 57.5067, -24.8864, 80.4645, 0.59 ) }
    dend_50 { pt3dadd( 58.3569, -24.7647, 81.1519, 0.15 ) }
    dend_50 { pt3dadd( 59.7118, -24.6288, 82.4729, 0.15 ) }
    dend_50 { pt3dadd( 60.3074, -24.587, 83.1199, 0.15 ) }
    dend_50 { pt3dadd( 60.7343, -24.5739, 83.6306, 0.15 ) }
    dend_50 { pt3dadd( 61.1168, -24.5609, 84.0559, 0.52 ) }
    dend_50 { pt3dadd( 61.8809, -24.5331, 84.8494, 0.52 ) }
    dend_50 { pt3dadd( 63.0354, -24.502, 85.9065, 0.07 ) }
    dend_50 { pt3dadd( 63.3161, -24.5007, 86.1034, 0.07 ) }
    dend_50 { pt3dadd( 63.709, -24.5079, 86.377, 0.59 ) }
    dend_50 { pt3dadd( 64.7494, -24.5427, 87.1943, 0.07 ) }
    dend_50 { pt3dadd( 65.5291, -24.5364, 87.8288, 0.07 ) }
    dend_50 { pt3dadd( 65.8235, -24.5219, 88.0655, 0.29 ) }
    dend_50 { pt3dadd( 66.1325, -24.5032, 88.3314, 0.29 ) }
    dend_50 { pt3dadd( 67.7575, -24.3312, 89.733, 0.15 ) }
    dend_50 { pt3dadd( 68.7891, -24.1647, 90.6344, 0.15 ) }
    dend_50 { pt3dadd( 69.473, -24.0003, 91.232, 0.15 ) }
    dend_50 { pt3dadd( 70.0868, -23.8008, 91.7408, 0.15 ) }
    dend_50 { pt3dadd( 70.5271, -23.6412, 92.0818, 0.15 ) }
    dend_50 { pt3dadd( 71.3011, -23.3437, 92.6078, 0.15 ) }
    dend_50 { pt3dadd( 71.8, -23.1637, 92.856, 0.15 ) }
    dend_50 { pt3dadd( 72.3686, -22.976, 93.0992, 0.22 ) }
    dend_50 { pt3dadd( 73.7547, -22.5833, 93.6836, 0.07 ) }
    dend_50 { pt3dadd( 74.2596, -22.4553, 93.8796, 0.74 ) }
    dend_50 { pt3dadd( 74.6998, -22.3563, 94.0291, 0.74 ) }
    dend_50 { pt3dadd( 75.8497, -22.1644, 94.419, 0.07 ) }
    dend_50 { pt3dadd( 76.2991, -22.1058, 94.5615, 0.37 ) }
    dend_50 { pt3dadd( 76.8534, -22.0506, 94.7217, 0.66 ) }
    dend_50 { pt3dadd( 77.816, -21.9551, 94.9482, 0.07 ) }
    dend_50 { pt3dadd( 78.3146, -21.9027, 95.0927, 0.15 ) }
    dend_50 { pt3dadd( 79.5009, -21.7695, 95.5104, 0.07 ) }
    dend_50 { pt3dadd( 79.9747, -21.7156, 95.7248, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_50 { pt3dadd( 80.393, -21.666, 95.9395, 0.44 ) }
    dend_50 { pt3dadd( 81.4146, -21.542, 96.4887, 0.15 ) }
    dend_50 { pt3dadd( 82.4912, -21.4197, 97.0706, 0.15 ) }
    dend_50 { pt3dadd( 83.0215, -21.3531, 97.3469, 0.37 ) }
    dend_50 { pt3dadd( 83.9469, -21.2088, 97.8111, 0.81 ) }
    dend_50 { pt3dadd( 84.4058, -21.1247, 98.0398, 0.59 ) }
    dend_50 { pt3dadd( 85.4397, -20.8922, 98.5342, 0.15 ) }
    dend_50 { pt3dadd( 86.1458, -20.6931, 98.8234, 0.15 ) }
    dend_50 { pt3dadd( 86.6614, -20.5192, 98.9883, 0.15 ) }
    dend_50 { pt3dadd( 87.4869, -20.2109, 99.2225, 0.15 ) }
    dend_50 { pt3dadd( 88.0421, -19.9881, 99.3489, 0.66 ) }
    dend_50 { pt3dadd( 88.5845, -19.7644, 99.4646, 0.37 ) }
    dend_50 { pt3dadd( 89.9852, -19.2284, 99.7261, 0.07 ) }
    dend_50 { pt3dadd( 90.3646, -19.1025, 99.8125, 0.44 ) }
    dend_50 { pt3dadd( 90.6773, -19.0243, 99.8863, 0.44 ) }
    dend_50 { pt3dadd( 92.1145, -18.811, 100.234, 0.15 ) }
    dend_50 { pt3dadd( 92.717, -18.7721, 100.424, 0.37 ) }
    dend_50 { pt3dadd( 94.4082, -18.7844, 101.092, 0.15 ) }
    dend_50 { pt3dadd( 95.7047, -18.8543, 101.712, 0.59 ) }
    dend_50 { pt3dadd( 96.4373, -18.9077, 102.101, 1.33 ) }
    dend_50 { pt3dadd( 97.5943, -18.9922, 102.754, 0.15 ) }
    dend_50 { pt3dadd( 98.8015, -19.086, 103.536, 0.15 ) }
    dend_50 { pt3dadd( 99.3823, -19.1182, 103.932, 0.15 ) }
    dend_50 { pt3dadd( 99.8891, -19.1251, 104.281, 0.37 ) }
    dend_50 { pt3dadd( 100.231, -19.113, 104.503, 0.37 ) }
    dend_50 { pt3dadd( 101.274, -19.0259, 105.255, 0.15 ) }
    dend_50 { pt3dadd( 102.439, -18.9128, 106.123, 0.15 ) }
    dend_50 { pt3dadd( 102.918, -18.8743, 106.47, 0.52 ) }
    dend_50 { pt3dadd( 103.447, -18.8342, 106.835, 0.59 ) }
    dend_50 { pt3dadd( 104.669, -18.7441, 107.654, 0.15 ) }
    dend_50 { pt3dadd( 105.795, -18.6655, 108.411, 0.15 ) }
    dend_50 { pt3dadd( 106.683, -18.627, 108.979, 0.29 ) }
    dend_50 { pt3dadd( 107.234, -18.6163, 109.284, 0.29 ) }
    dend_50 { pt3dadd( 108.32, -18.6723, 109.83, 0.29 ) }
    dend_50 { pt3dadd( 108.937, -18.781, 110.108, 0.29 ) }
    dend_50 { pt3dadd( 109.865, -19.1317, 110.441, 0.29 ) }
    dend_50 { pt3dadd( 110.678, -19.6308, 110.694, 0.29 ) }
    dend_50 { pt3dadd( 110.968, -19.9125, 110.844, 0.52 ) }
    dend_50 { pt3dadd( 111.459, -20.5765, 111.273, 0.15 ) }
    dend_50 { pt3dadd( 111.806, -21.221, 111.759, 0.15 ) }
    dend_50 { pt3dadd( 111.979, -21.6883, 112.145, 0.15 ) }
    dend_50 { pt3dadd( 112.096, -22.1034, 112.504, 0.52 ) }
    dend_50 { pt3dadd( 112.448, -23.5636, 113.873, 0.22 ) }
    dend_50 { pt3dadd( 112.71, -24.6472, 114.955, 0.52 ) }
    dend_50 { pt3dadd( 112.974, -25.6279, 116.042, 1.33 ) }
    dend_50 { pt3dadd( 113.363, -26.8692, 117.539, 0.22 ) }
    dend_50 { pt3dadd( 113.466, -27.1284, 117.879, 0.37 ) }
    dend_50 { pt3dadd( 113.734, -27.6707, 118.7, 0.15 ) }
    dend_50 { pt3dadd( 113.988, -28.0551, 119.355, 0.59 ) }
    dend_50 { pt3dadd( 114.694, -28.8578, 121.028, 0.15 ) }
    dend_50 { pt3dadd( 115.133, -29.251, 122.068, 0.44 ) }
    dend_50 { pt3dadd( 115.794, -29.7737, 123.608, 0.07 ) }
    dend_50 { pt3dadd( 116.494, -30.3248, 125.26, 0.07 ) }
    dend_50 { pt3dadd( 116.776, -30.5525, 125.927, 0.96 ) }
    dend_50 { pt3dadd( 117.799, -31.3677, 128.428, 0.52 ) }
    dend_50 { pt3dadd( 118.363, -31.8203, 129.843, 0.37 ) }
    dend_50 { pt3dadd( 118.711, -32.1109, 130.765, 0.15 ) }
    dend_50 { pt3dadd( 118.878, -32.2687, 131.269, 0.15 ) }
    dend_50 { pt3dadd( 119.029, -32.4216, 131.693, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 59/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 21.8684, -26.5159, -3.15573, 0.66 ) }
    dend_47 { pt3dadd( 23.1613, -28.1397, -1.42337, 0.66 ) }
    dend_47 { pt3dadd( 24.1366, -29.421, -0.23043, 0.66 ) }
    dend_47 { pt3dadd( 25.0094, -30.634, 0.770216, 0.66 ) }
    dend_47 { pt3dadd( 25.5701, -31.4836, 1.4131, 0.66 ) }
    dend_47 { pt3dadd( 26.3771, -32.8627, 2.39844, 0.81 ) }
    dend_47 { pt3dadd( 27.0712, -34.2325, 3.3432, 1.03 ) }
    dend_47 { pt3dadd( 27.5582, -35.4454, 4.05959, 0.74 ) }
    dend_47 { pt3dadd( 27.8377, -36.4764, 4.59475, 0.74 ) }
    dend_47 { pt3dadd( 27.9355, -37.1762, 4.92939, 1.18 ) }
    dend_47 { pt3dadd( 28.0218, -38.5242, 5.59253, 0.81 ) }
    dend_47 { pt3dadd( 28.089, -40.1935, 6.38672, 0.59 ) }
    dend_47 { pt3dadd( 28.1897, -41.3282, 6.98095, 0.59 ) }
    dend_47 { pt3dadd( 28.3331, -42.0264, 7.36156, 0.81 ) }
    dend_47 { pt3dadd( 28.6828, -42.9302, 7.89384, 0.81 ) }
    dend_47 { pt3dadd( 29.4292, -43.8671, 8.50625, 0.81 ) }
    dend_47 { pt3dadd( 30.5478, -44.4708, 9.05181, 0.74 ) }
    dend_47 { pt3dadd( 32.1377, -44.893, 9.61034, 0.88 ) }
    dend_47 { pt3dadd( 33.1435, -45.0785, 9.93597, 0.88 ) }
    dend_47 { pt3dadd( 34.0814, -45.2259, 10.2533, 0.96 ) }
    dend_47 { pt3dadd( 36.0288, -45.531, 10.885, 0.44 ) }
    dend_47 { pt3dadd( 37.3499, -45.7887, 11.3066, 0.44 ) }
    dend_47 { pt3dadd( 38.61, -46.1378, 11.7283, 0.52 ) }
    dend_47 { pt3dadd( 40.1449, -46.7532, 12.2405, 0.44 ) }
    dend_47 { pt3dadd( 41.5476, -47.5325, 12.7353, 0.74 ) }
    dend_47 { pt3dadd( 43.0477, -48.6157, 13.2647, 0.29 ) }
    dend_47 { pt3dadd( 43.8571, -49.3223, 13.534, 0.29 ) }
    dend_47 { pt3dadd( 44.6474, -50.0695, 13.735, 0.29 ) }
    dend_47 { pt3dadd( 45.2527, -50.6633, 13.8554, 0.29 ) }
    dend_47 { pt3dadd( 45.844, -51.2653, 14.0047, 0.52 ) }
    dend_47 { pt3dadd( 46.6841, -52.1898, 14.2822, 0.88 ) }
    dend_47 { pt3dadd( 47.1918, -52.7707, 14.5828, 0.66 ) }
    dend_47 { pt3dadd( 48.1316, -53.7897, 15.2939, 0.44 ) }
    dend_47 { pt3dadd( 48.8017, -54.4726, 15.9185, 0.22 ) }
    dend_47 { pt3dadd( 50.301, -56.0077, 17.5235, 0.22 ) }
    dend_47 { pt3dadd( 50.6519, -56.3815, 17.9342, 0.22 ) }
    dend_47 { pt3dadd( 51.7847, -57.6184, 19.2682, 0.22 ) }
    dend_47 { pt3dadd( 52.2764, -58.1737, 19.8058, 0.29 ) }
    dend_47 { pt3dadd( 52.9022, -58.8462, 20.3775, 0.74 ) }
    dend_47 { pt3dadd( 53.5675, -59.4805, 20.7716, 0.88 ) }
    dend_47 { pt3dadd( 54.3258, -60.0637, 20.9885, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_47 { pt3dadd( 55.2483, -60.6336, 21.1648, 0.88 ) }
    dend_47 { pt3dadd( 56.0515, -61.0616, 21.2692, 0.59 ) }
    dend_47 { pt3dadd( 56.9374, -61.4616, 21.4223, 0.44 ) }
    dend_47 { pt3dadd( 57.7602, -61.7991, 21.5855, 0.44 ) }
    dend_47 { pt3dadd( 58.8793, -62.2557, 21.872, 0.29 ) }
    dend_47 { pt3dadd( 59.5254, -62.5308, 21.9992, 0.29 ) }
    dend_47 { pt3dadd( 60.6204, -63.0667, 22.1374, 0.29 ) }
    dend_47 { pt3dadd( 61.2318, -63.4426, 22.1222, 0.74 ) }
    dend_47 { pt3dadd( 61.8813, -63.9348, 22.074, 1.03 ) }
    dend_47 { pt3dadd( 62.7334, -64.6824, 22.0188, 0.29 ) }
    dend_47 { pt3dadd( 64.2263, -66.0891, 21.9754, 0.29 ) }
    dend_47 { pt3dadd( 64.9079, -66.734, 21.9945, 0.29 ) }
    dend_47 { pt3dadd( 65.7868, -67.5617, 22.0488, 0.29 ) }
    dend_47 { pt3dadd( 66.9131, -68.6193, 22.2226, 0.29 ) }
    dend_47 { pt3dadd( 67.6691, -69.3054, 22.4523, 0.88 ) }
    dend_47 { pt3dadd( 68.4466, -70.0103, 22.7952, 1.25 ) }
    dend_47 { pt3dadd( 69.5196, -70.9687, 23.393, 0.37 ) }
    dend_47 { pt3dadd( 69.9935, -71.3783, 23.6541, 0.37 ) }
    dend_47 { pt3dadd( 70.6442, -71.9328, 24.0167, 0.52 ) }
    dend_47 { pt3dadd( 71.5271, -72.6998, 24.4367, 0.52 ) }
    dend_47 { pt3dadd( 72.1912, -73.2512, 24.7694, 0.22 ) }
    dend_47 { pt3dadd( 72.4816, -73.4692, 24.9232, 0.22 ) }
    dend_47 { pt3dadd( 72.8696, -73.7157, 25.1344, 0.22 ) }
    dend_47 { pt3dadd( 73.7717, -74.1721, 25.5355, 0.22 ) }
    dend_47 { pt3dadd( 74.4895, -74.4772, 25.7769, 0.29 ) }
    dend_47 { pt3dadd( 75.5072, -74.8592, 26.0903, 0.66 ) }
    dend_47 { pt3dadd( 75.7889, -74.9564, 26.1894, 1.03 ) }
    dend_47 { pt3dadd( 76.8611, -75.309, 26.6783, 1.47 ) }
    dend_47 { pt3dadd( 78.2318, -75.7027, 27.4389, 0.81 ) }
    dend_47 { pt3dadd( 79.3921, -75.9782, 28.1834, 0.44 ) }
    dend_47 { pt3dadd( 80.6641, -76.2426, 29.1244, 0.22 ) }
    dend_47 { pt3dadd( 81.4964, -76.4207, 29.8018, 0.22 ) }
    dend_47 { pt3dadd( 82.8708, -76.7532, 31.0311, 0.22 ) }
    dend_47 { pt3dadd( 83.5939, -76.9523, 31.7531, 0.37 ) }
    dend_47 { pt3dadd( 84.2973, -77.201, 32.4964, 0.66 ) }
    dend_47 { pt3dadd( 84.7167, -77.3932, 32.9287, 0.22 ) }
    dend_47 { pt3dadd( 85.1928, -77.6841, 33.3904, 0.22 ) }
    dend_47 { pt3dadd( 85.8965, -78.1732, 33.9972, 0.22 ) }
    dend_47 { pt3dadd( 87.0953, -79.0696, 34.9557, 0.22 ) }
    dend_47 { pt3dadd( 87.5796, -79.4547, 35.3321, 0.96 ) }
    dend_47 { pt3dadd( 88.8414, -80.4668, 36.266, 1.55 ) }
    dend_47 { pt3dadd( 90.415, -81.6679, 37.3844, 0.22 ) }
    dend_47 { pt3dadd( 91.1777, -82.2122, 37.8974, 0.22 ) }
    dend_47 { pt3dadd( 92.1495, -82.8586, 38.4929, 0.59 ) }
    dend_47 { pt3dadd( 93.0177, -83.4315, 38.9463, 0.22 ) }
    dend_47 { pt3dadd( 94.0879, -84.1203, 39.3972, 0.22 ) }
    dend_47 { pt3dadd( 94.5906, -84.4209, 39.5525, 0.22 ) }
    dend_47 { pt3dadd( 95.2723, -84.7711, 39.7399, 0.29 ) }
    dend_47 { pt3dadd( 95.8336, -85.0328, 39.9203, 0.96 ) }
    dend_47 { pt3dadd( 96.5197, -85.328, 40.1516, 0.66 ) }
    dend_47 { pt3dadd( 97.3221, -85.6156, 40.5144, 0.22 ) }
    dend_47 { pt3dadd( 98.5908, -86.007, 41.1867, 0.29 ) }
    dend_47 { pt3dadd( 99.6518, -86.3109, 41.7155, 0.29 ) }
    dend_47 { pt3dadd( 100.177, -86.4451, 41.9372, 0.37 ) }
    dend_47 { pt3dadd( 101.37, -86.7141, 42.36, 1.03 ) }
    dend_47 { pt3dadd( 103.418, -87.1328, 42.8953, 0.66 ) }
    dend_47 { pt3dadd( 104.61, -87.4105, 43.038, 0.22 ) }
    dend_47 { pt3dadd( 105.952, -87.794, 42.9769, 0.22 ) }
    dend_47 { pt3dadd( 107.009, -88.1426, 42.7771, 0.22 ) }
    dend_47 { pt3dadd( 107.468, -88.2988, 42.647, 0.29 ) }
    dend_47 { pt3dadd( 108.268, -88.5977, 42.3591, 0.29 ) }
    dend_47 { pt3dadd( 109.522, -89.1612, 41.8756, 0.29 ) }
    dend_47 { pt3dadd( 110.66, -89.7382, 41.5077, 0.29 ) }
    dend_47 { pt3dadd( 111.669, -90.291, 41.2823, 0.29 ) }
    dend_47 { pt3dadd( 112.876, -90.9883, 41.078, 0.74 ) }
    dend_47 { pt3dadd( 113.997, -91.6436, 40.9155, 0.29 ) }
    dend_47 { pt3dadd( 115.178, -92.3278, 40.7813, 0.29 ) }
    dend_47 { pt3dadd( 115.983, -92.7848, 40.747, 0.96 ) }
    dend_47 { pt3dadd( 116.945, -93.2899, 40.7379, 1.7 ) }
    dend_47 { pt3dadd( 117.818, -93.6871, 40.7219, 0.96 ) }
    dend_47 { pt3dadd( 118.775, -94.0448, 40.6493, 0.29 ) }
    dend_47 { pt3dadd( 119.76, -94.3015, 40.4983, 0.22 ) }
    dend_47 { pt3dadd( 120.695, -94.4557, 40.3521, 0.22 ) }
    dend_47 { pt3dadd( 122.24, -94.6473, 40.1572, 0.29 ) }
    dend_47 { pt3dadd( 123.716, -94.849, 40.1255, 0.22 ) }
    dend_47 { pt3dadd( 124.201, -94.9637, 40.2109, 0.22 ) }
    dend_47 { pt3dadd( 124.73, -95.1755, 40.3929, 0.22 ) }
    dend_47 { pt3dadd( 126.068, -95.9067, 41.0702, 0.22 ) }
    dend_47 { pt3dadd( 126.842, -96.3809, 41.5556, 0.52 ) }
    dend_47 { pt3dadd( 127.795, -97.0187, 42.2504, 0.96 ) }
    dend_47 { pt3dadd( 128.772, -97.7279, 42.9993, 0.96 ) }
    dend_47 { pt3dadd( 129.746, -98.462, 43.7132, 0.22 ) }
    dend_47 { pt3dadd( 130.921, -99.353, 44.5125, 0.29 ) }
    dend_47 { pt3dadd( 131.77, -99.9654, 45.0316, 0.74 ) }
    dend_47 { pt3dadd( 132.853, -100.706, 45.6556, 1.47 ) }
    dend_47 { pt3dadd( 134.773, -101.916, 46.6131, 0.22 ) }
    dend_47 { pt3dadd( 135.422, -102.282, 46.8981, 0.22 ) }
    dend_47 { pt3dadd( 135.943, -102.55, 47.0998, 0.22 ) }
    dend_47 { pt3dadd( 137.128, -103.151, 47.4493, 0.22 ) }
    dend_47 { pt3dadd( 137.637, -103.414, 47.5704, 0.66 ) }
    dend_47 { pt3dadd( 138.26, -103.714, 47.6926, 0.96 ) }
    dend_47 { pt3dadd( 139.095, -104.051, 47.8698, 0.59 ) }
    dend_47 { pt3dadd( 139.862, -104.361, 48.1053, 0.22 ) }
    dend_47 { pt3dadd( 140.53, -104.601, 48.3791, 0.22 ) }
    dend_47 { pt3dadd( 141.081, -104.775, 48.6351, 0.22 ) }
    dend_47 { pt3dadd( 141.916, -105.007, 49.0922, 0.74 ) }
    dend_47 { pt3dadd( 143.562, -105.41, 50.0663, 0.22 ) }
    dend_47 { pt3dadd( 144.796, -105.7, 50.8317, 0.22 ) }
    dend_47 { pt3dadd( 146.006, -105.946, 51.6403, 0.22 ) }
    dend_47 { pt3dadd( 146.521, -106.041, 51.9937, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_47 { pt3dadd( 147.811, -106.278, 52.8675, 1.03 ) }
    dend_47 { pt3dadd( 148.28, -106.386, 53.2233, 1.03 ) }
    dend_47 { pt3dadd( 149.494, -106.757, 54.1861, 0.15 ) }
    dend_47 { pt3dadd( 150.762, -107.211, 55.1839, 0.15 ) }
    dend_47 { pt3dadd( 151.138, -107.355, 55.4854, 0.66 ) }
    dend_47 { pt3dadd( 151.674, -107.553, 55.9128, 0.74 ) }
    dend_47 { pt3dadd( 153.828, -108.361, 57.5644, 0.15 ) }
    dend_47 { pt3dadd( 154.201, -108.514, 57.8519, 0.22 ) }
    dend_47 { pt3dadd( 154.748, -108.755, 58.2449, 0.22 ) }
    dend_47 { pt3dadd( 155.697, -109.245, 58.8409, 0.15 ) }
    dend_47 { pt3dadd( 156.468, -109.697, 59.2738, 0.22 ) }
    dend_47 { pt3dadd( 156.97, -110.031, 59.4868, 0.59 ) }
    dend_47 { pt3dadd( 158.282, -110.983, 59.7912, 1.11 ) }
    dend_47 { pt3dadd( 158.961, -111.511, 59.9084, 1.11 ) }
    dend_47 { pt3dadd( 159.667, -112.106, 59.9776, 0.37 ) }
    dend_47 { pt3dadd( 160.559, -112.917, 59.9699, 0.15 ) }
    dend_47 { pt3dadd( 161.387, -113.712, 60.0169, 0.15 ) }
    dend_47 { pt3dadd( 161.714, -114.036, 60.0555, 0.37 ) }
    dend_47 { pt3dadd( 162.147, -114.486, 60.1494, 0.66 ) }
    dend_47 { pt3dadd( 162.836, -115.182, 60.4464, 0.22 ) }
    dend_47 { pt3dadd( 163.143, -115.489, 60.6664, 0.22 ) }
    dend_47 { pt3dadd( 164.509, -116.937, 62.0486, 0.22 ) }
    dend_47 { pt3dadd( 164.826, -117.288, 62.4187, 0.44 ) }
    dend_47 { pt3dadd( 165.246, -117.786, 62.9409, 0.88 ) }
    dend_47 { pt3dadd( 165.704, -118.366, 63.4743, 1.03 ) }
    dend_47 { pt3dadd( 166.555, -119.475, 64.2777, 0.15 ) }
    dend_47 { pt3dadd( 167.05, -120.102, 64.5876, 0.15 ) }
    dend_47 { pt3dadd( 167.457, -120.597, 64.6797, 0.44 ) }
    dend_47 { pt3dadd( 167.692, -120.861, 64.7076, 0.44 ) }
    dend_47 { pt3dadd( 168.914, -122.169, 64.7388, 0.15 ) }
    dend_47 { pt3dadd( 169.873, -123.154, 64.737, 0.15 ) }
    dend_47 { pt3dadd( 170.296, -123.531, 64.7177, 0.59 ) }
    dend_47 { pt3dadd( 171.24, -124.277, 64.6821, 0.52 ) }
    dend_47 { pt3dadd( 172.493, -125.139, 64.6842, 0.22 ) }
    dend_47 { pt3dadd( 173.546, -125.722, 64.7278, 0.22 ) }
    dend_47 { pt3dadd( 174.176, -125.975, 64.8103, 0.22 ) }
    dend_47 { pt3dadd( 174.936, -126.185, 64.9588, 0.88 ) }
    dend_47 { pt3dadd( 175.226, -126.232, 65.0144, 0.96 ) }
    dend_47 { pt3dadd( 176.025, -126.244, 65.1483, 0.88 ) }
    dend_47 { pt3dadd( 177.512, -126.084, 65.2546, 0.22 ) }
    dend_47 { pt3dadd( 178.607, -125.865, 65.2697, 0.37 ) }
    dend_47 { pt3dadd( 179.686, -125.593, 65.2339, 0.37 ) }
    dend_47 { pt3dadd( 180.28, -125.419, 65.209, 0.37 ) }
    dend_47 { pt3dadd( 181.631, -124.98, 65.1165, 0.15 ) }
    dend_47 { pt3dadd( 183.198, -124.417, 64.9136, 0.22 ) }
    dend_47 { pt3dadd( 184.051, -124.088, 64.6676, 0.44 ) }
    dend_47 { pt3dadd( 184.565, -123.908, 64.4343, 0.44 ) }
    dend_47 { pt3dadd( 185.708, -123.574, 63.8845, 0.15 ) }
    dend_47 { pt3dadd( 186.129, -123.474, 63.7047, 0.15 ) }
    dend_47 { pt3dadd( 187.019, -123.353, 63.4436, 0.29 ) }
    dend_47 { pt3dadd( 189.078, -123.344, 63.8662, 0.29 ) }
    dend_47 { pt3dadd( 189.65, -123.403, 64.2744, 0.29 ) }
    dend_47 { pt3dadd( 191.181, -123.631, 65.7005, 0.29 ) }
    dend_47 { pt3dadd( 192.268, -123.811, 66.8147, 0.74 ) }
    dend_47 { pt3dadd( 192.848, -123.925, 67.4341, 0.22 ) }
    dend_47 { pt3dadd( 194.065, -124.181, 68.8309, 0.22 ) }
    dend_47 { pt3dadd( 195.022, -124.387, 69.9766, 0.22 ) }
    dend_47 { pt3dadd( 195.219, -124.426, 70.209, 0.22 ) }
    dend_47 { pt3dadd( 195.924, -124.566, 70.954, 0.44 ) }
    dend_47 { pt3dadd( 197.103, -124.841, 72.0773, 0.15 ) }
    dend_47 { pt3dadd( 198.178, -125.14, 72.951, 0.15 ) }
    dend_47 { pt3dadd( 198.685, -125.285, 73.2878, 0.44 ) }
    dend_47 { pt3dadd( 199.855, -125.604, 73.9702, 1.11 ) }
    dend_47 { pt3dadd( 200.742, -125.839, 74.4322, 1.11 ) }
    dend_47 { pt3dadd( 201.736, -126.086, 74.8689, 0.44 ) }
    dend_47 { pt3dadd( 203.562, -126.409, 75.4211, 0.15 ) }
    dend_47 { pt3dadd( 204.917, -126.561, 75.7335, 0.15 ) }
    dend_47 { pt3dadd( 205.498, -126.591, 75.846, 0.29 ) }
    dend_47 { pt3dadd( 206.349, -126.583, 75.9749, 0.66 ) }
    dend_47 { pt3dadd( 207.038, -126.511, 76.0116, 0.66 ) }
    dend_47 { pt3dadd( 208.999, -126.126, 75.9378, 0.15 ) }
    dend_47 { pt3dadd( 210.452, -125.748, 75.7761, 0.15 ) }
    dend_47 { pt3dadd( 210.993, -125.602, 75.6538, 0.44 ) }
    dend_47 { pt3dadd( 211.765, -125.388, 75.4582, 0.44 ) }
    dend_47 { pt3dadd( 214.62, -124.532, 74.6199, 0.07 ) }
    dend_47 { pt3dadd( 216.205, -124.051, 74.0605, 0.15 ) }
    dend_47 { pt3dadd( 216.772, -123.886, 73.8008, 0.22 ) }
    dend_47 { pt3dadd( 218.451, -123.424, 72.8615, 0.96 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 78/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 25.7471, -211.902, 11.3054, 0.22 ) }
    dend_45 { pt3dadd( 25.5076, -213.011, 11.6408, 0.22 ) }
    dend_45 { pt3dadd( 25.3956, -213.47, 11.7854, 0.22 ) }
    dend_45 { pt3dadd( 25.2681, -213.973, 11.9399, 1.18 ) }
    dend_45 { pt3dadd( 25.0863, -214.686, 12.1476, 0.22 ) }
    dend_45 { pt3dadd( 24.923, -215.301, 12.3532, 0.15 ) }
    dend_45 { pt3dadd( 24.7811, -215.806, 12.5559, 0.15 ) }
    dend_45 { pt3dadd( 24.6432, -216.258, 12.7591, 0.15 ) }
    dend_45 { pt3dadd( 24.5485, -216.554, 12.9164, 0.52 ) }
    dend_45 { pt3dadd( 24.463, -216.834, 13.092, 0.52 ) }
    dend_45 { pt3dadd( 24.2516, -217.654, 13.6938, 0.07 ) }
    dend_45 { pt3dadd( 24.1115, -218.338, 14.2373, 0.07 ) }
    dend_45 { pt3dadd( 24.0607, -218.644, 14.5129, 0.07 ) }
    dend_45 { pt3dadd( 24.0432, -218.795, 14.6615, 0.66 ) }
    dend_45 { pt3dadd( 24.0166, -219.22, 15.1063, 0.88 ) }
    dend_45 { pt3dadd( 24.0181, -219.933, 15.8225, 0.22 ) }
    dend_45 { pt3dadd( 24.0443, -220.463, 16.3285, 0.22 ) }
    dend_45 { pt3dadd( 24.0866, -221.073, 16.8734, 0.22 ) }
    dend_45 { pt3dadd( 24.1237, -221.611, 17.3165, 0.96 ) }
    dend_45 { pt3dadd( 24.1679, -222.406, 17.8963, 0.52 ) }
    dend_45 { pt3dadd( 24.2062, -223.359, 18.4871, 0.22 ) }
    dend_45 { pt3dadd( 24.2083, -224.135, 18.8481, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_45 { pt3dadd( 24.1842, -224.646, 19.0158, 0.22 ) }
    dend_45 { pt3dadd( 24.1189, -225.267, 19.1422, 0.96 ) }
    dend_45 { pt3dadd( 23.997, -225.944, 19.2097, 1.55 ) }
    dend_45 { pt3dadd( 23.9011, -226.336, 19.2339, 1.4 ) }
    dend_45 { pt3dadd( 23.5363, -227.581, 19.2959, 0.15 ) }
    dend_45 { pt3dadd( 23.3469, -228.192, 19.3204, 0.15 ) }
    dend_45 { pt3dadd( 23.1647, -228.754, 19.3533, 0.59 ) }
    dend_45 { pt3dadd( 22.8239, -229.848, 19.4447, 0.07 ) }
    dend_45 { pt3dadd( 22.5353, -230.87, 19.5484, 0.07 ) }
    dend_45 { pt3dadd( 22.4532, -231.217, 19.5864, 0.74 ) }
    dend_45 { pt3dadd( 22.3894, -231.555, 19.6241, 0.81 ) }
    dend_45 { pt3dadd( 22.2941, -232.2, 19.6728, 0.15 ) }
    dend_45 { pt3dadd( 22.1566, -233.293, 19.7094, 0.15 ) }
    dend_45 { pt3dadd( 22.0879, -233.873, 19.7003, 0.81 ) }
    dend_45 { pt3dadd( 21.9719, -234.7, 19.6456, 2.06 ) }
    dend_45 { pt3dadd( 21.8683, -235.356, 19.5957, 2.06 ) }
    dend_45 { pt3dadd( 21.6991, -236.32, 19.5126, 0.52 ) }
    dend_45 { pt3dadd( 21.5586, -237.047, 19.4413, 0.15 ) }
    dend_45 { pt3dadd( 21.3728, -237.935, 19.3065, 0.15 ) }
    dend_45 { pt3dadd( 21.2409, -238.546, 19.1925, 0.15 ) }
    dend_45 { pt3dadd( 21.1316, -239.062, 19.0853, 0.22 ) }
    dend_45 { pt3dadd( 21.0312, -239.577, 18.9542, 0.74 ) }
    dend_45 { pt3dadd( 20.9383, -240.095, 18.806, 0.81 ) }
    dend_45 { pt3dadd( 20.759, -241.301, 18.4238, 0.15 ) }
    dend_45 { pt3dadd( 20.6455, -242.173, 18.1326, 0.15 ) }
    dend_45 { pt3dadd( 20.5454, -243.007, 17.8647, 0.15 ) }
    dend_45 { pt3dadd( 20.4274, -243.909, 17.623, 0.22 ) }
    dend_45 { pt3dadd( 20.3535, -244.433, 17.5144, 0.66 ) }
    dend_45 { pt3dadd( 20.2794, -244.917, 17.4484, 1.25 ) }
    dend_45 { pt3dadd( 20.1624, -245.561, 17.4402, 1.25 ) }
    dend_45 { pt3dadd( 19.9143, -246.766, 17.5673, 0.22 ) }
    dend_45 { pt3dadd( 19.6805, -247.76, 17.7628, 0.15 ) }
    dend_45 { pt3dadd( 19.5197, -248.338, 17.9327, 0.96 ) }
    dend_45 { pt3dadd( 19.2788, -249.105, 18.2142, 0.15 ) }
    dend_45 { pt3dadd( 18.945, -250.079, 18.6424, 0.15 ) }
    dend_45 { pt3dadd( 18.6248, -250.942, 19.0719, 0.15 ) }
    dend_45 { pt3dadd( 18.4194, -251.454, 19.3497, 1.18 ) }
    dend_45 { pt3dadd( 17.9364, -252.599, 19.9914, 0.07 ) }
    dend_45 { pt3dadd( 17.5097, -253.577, 20.5581, 0.07 ) }
    dend_45 { pt3dadd( 17.2358, -254.196, 20.9088, 0.07 ) }
    dend_45 { pt3dadd( 17.098, -254.519, 21.0616, 0.81 ) }
    dend_45 { pt3dadd( 16.9749, -254.806, 21.1749, 0.81 ) }
    dend_45 { pt3dadd( 16.6156, -255.655, 21.4729, 0.15 ) }
    dend_45 { pt3dadd( 16.3847, -256.215, 21.6278, 0.15 ) }
    dend_45 { pt3dadd( 16.124, -256.862, 21.763, 1.33 ) }
    dend_45 { pt3dadd( 15.7233, -257.89, 21.9343, 0.15 ) }
    dend_45 { pt3dadd( 15.4662, -258.592, 22.0318, 0.15 ) }
    dend_45 { pt3dadd( 15.2306, -259.274, 22.1029, 0.15 ) }
    dend_45 { pt3dadd( 15.1381, -259.568, 22.1184, 0.29 ) }
    dend_45 { pt3dadd( 15.0323, -259.993, 22.1302, 0.07 ) }
    dend_45 { pt3dadd( 14.9801, -260.365, 22.138, 0.22 ) }
    dend_45 { pt3dadd( 14.9758, -261.27, 22.1054, 0.29 ) }
    dend_45 { pt3dadd( 15.0106, -261.605, 22.0756, 0.88 ) }
    dend_45 { pt3dadd( 15.0863, -261.993, 22.0514, 1.4 ) }
    dend_45 { pt3dadd( 15.2718, -262.765, 22.0507, 0.22 ) }
    dend_45 { pt3dadd( 15.5241, -263.669, 22.0902, 0.07 ) }
    dend_45 { pt3dadd( 15.7774, -264.472, 22.1567, 0.07 ) }
    dend_45 { pt3dadd( 15.8901, -264.804, 22.2001, 0.29 ) }
    dend_45 { pt3dadd( 16.3795, -266.243, 22.4332, 0.07 ) }
    dend_45 { pt3dadd( 16.5871, -266.846, 22.5437, 0.07 ) }
    dend_45 { pt3dadd( 16.703, -267.186, 22.6277, 0.59 ) }
    dend_45 { pt3dadd( 16.9967, -268.035, 22.8802, 0.15 ) }
    dend_45 { pt3dadd( 17.1821, -268.561, 23.0512, 1.25 ) }
    dend_45 { pt3dadd( 17.3902, -269.134, 23.2252, 0.88 ) }
    dend_45 { pt3dadd( 17.7387, -270.072, 23.4651, 0.15 ) }
    dend_45 { pt3dadd( 18.0614, -270.941, 23.6653, 0.15 ) }
    dend_45 { pt3dadd( 18.18, -271.288, 23.7396, 0.22 ) }
    dend_45 { pt3dadd( 18.3583, -271.876, 23.8475, 0.15 ) }
    dend_45 { pt3dadd( 18.4031, -272.066, 23.8858, 0.37 ) }
    dend_45 { pt3dadd( 18.4504, -272.442, 23.9947, 0.81 ) }
    dend_45 { pt3dadd( 18.4614, -272.911, 24.1501, 0.22 ) }
    dend_45 { pt3dadd( 18.4344, -273.606, 24.3754, 0.15 ) }
    dend_45 { pt3dadd( 18.3798, -274.073, 24.5241, 0.22 ) }
    dend_45 { pt3dadd( 18.183, -275.16, 24.8799, 0.07 ) }
    dend_45 { pt3dadd( 17.9269, -276.373, 25.2645, 0.07 ) }
    dend_45 { pt3dadd( 17.8173, -276.847, 25.4077, 0.22 ) }
    dend_45 { pt3dadd( 17.6787, -277.409, 25.5602, 0.88 ) }
    dend_45 { pt3dadd( 17.3465, -278.676, 25.9058, 0.15 ) }
    dend_45 { pt3dadd( 17.1343, -279.476, 26.1266, 0.22 ) }
    dend_45 { pt3dadd( 16.98, -280.076, 26.2763, 0.29 ) }
    dend_45 { pt3dadd( 16.8675, -280.539, 26.394, 0.52 ) }
    dend_45 { pt3dadd( 16.6844, -281.376, 26.6555, 0.07 ) }
    dend_45 { pt3dadd( 16.5035, -282.383, 27.0224, 0.07 ) }
    dend_45 { pt3dadd( 16.4041, -283.223, 27.3576, 0.07 ) }
    dend_45 { pt3dadd( 16.3819, -283.495, 27.4626, 0.59 ) }
    dend_45 { pt3dadd( 16.3641, -283.777, 27.5705, 0.66 ) }
    dend_45 { pt3dadd( 16.3372, -284.51, 27.8257, 0.15 ) }
    dend_45 { pt3dadd( 16.3362, -285.196, 28.0005, 0.15 ) }
    dend_45 { pt3dadd( 16.3427, -285.824, 28.1152, 0.15 ) }
    dend_45 { pt3dadd( 16.3416, -286.169, 28.1705, 0.74 ) }
    dend_45 { pt3dadd( 16.3281, -286.462, 28.2186, 0.74 ) }
    dend_45 { pt3dadd( 16.2875, -286.946, 28.2947, 0.15 ) }
    dend_45 { pt3dadd( 16.1459, -287.998, 28.4739, 0.07 ) }
    dend_45 { pt3dadd( 15.9961, -288.899, 28.6747, 0.07 ) }
    dend_45 { pt3dadd( 15.9177, -289.326, 28.7837, 0.74 ) }
    dend_45 { pt3dadd( 15.7331, -290.329, 29.0544, 0.07 ) }
    dend_45 { pt3dadd( 15.669, -290.664, 29.1451, 0.22 ) }
    dend_45 { pt3dadd( 15.5227, -291.431, 29.3409, 0.07 ) }
    dend_45 { pt3dadd( 15.3138, -292.589, 29.6095, 0.07 ) }
    dend_45 { pt3dadd( 15.246, -293.018, 29.6863, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_45 { pt3dadd( 15.1976, -293.405, 29.7442, 0.22 ) }
    dend_45 { pt3dadd( 15.135, -294.1, 29.8132, 0.07 ) }
    dend_45 { pt3dadd( 15.0716, -294.933, 29.8571, 0.07 ) }
    dend_45 { pt3dadd( 15.049, -295.277, 29.8427, 0.07 ) }
    dend_45 { pt3dadd( 15.0147, -295.72, 29.7952, 0.52 ) }
    dend_45 { pt3dadd( 14.9295, -296.686, 29.6698, 0.07 ) }
    dend_45 { pt3dadd( 14.8013, -297.741, 29.4749, 0.07 ) }
    dend_45 { pt3dadd( 14.7537, -298.075, 29.3883, 0.59 ) }
    dend_45 { pt3dadd( 14.5841, -298.893, 29.1121, 0.07 ) }
    dend_45 { pt3dadd( 14.4492, -299.409, 28.9083, 0.07 ) }
    dend_45 { pt3dadd( 14.3354, -299.733, 28.7566, 0.44 ) }
    dend_45 { pt3dadd( 13.8812, -300.767, 28.2469, 0.07 ) }
    dend_45 { pt3dadd( 13.6469, -301.255, 28.0082, 0.22 ) }
    dend_45 { pt3dadd( 13.2449, -302.062, 27.6408, 0.07 ) }
    dend_45 { pt3dadd( 13.0635, -302.414, 27.4958, 0.37 ) }
    dend_45 { pt3dadd( 12.3843, -303.712, 26.965, 0.07 ) }
    dend_45 { pt3dadd( 11.7269, -304.956, 26.4832, 0.07 ) }
    dend_45 { pt3dadd( 11.5918, -305.21, 26.3995, 0.15 ) }
    dend_45 { pt3dadd( 11.3429, -305.675, 26.268, 0.07 ) }
    dend_45 { pt3dadd( 11.1672, -306.022, 26.1798, 0.52 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 25.7471, -211.902, 11.3054, 0.15 ) }
    dend_44 { pt3dadd( 24.517, -210.522, 11.3683, 0.15 ) }
    dend_44 { pt3dadd( 23.1257, -208.841, 11.4139, 0.15 ) }
    dend_44 { pt3dadd( 21.9058, -207.255, 11.4328, 0.15 ) }
    dend_44 { pt3dadd( 20.8564, -205.854, 11.4283, 0.15 ) }
    dend_44 { pt3dadd( 20.2019, -205.083, 11.3919, 0.22 ) }
    dend_44 { pt3dadd( 19.0317, -203.937, 11.2782, 0.07 ) }
    dend_44 { pt3dadd( 18.3667, -203.422, 11.1721, 0.15 ) }
    dend_44 { pt3dadd( 17.1789, -202.728, 10.9023, 0.07 ) }
    dend_44 { pt3dadd( 16.2378, -202.406, 10.6137, 0.15 ) }
    dend_44 { pt3dadd( 13.1782, -202.043, 9.43362, 0.07 ) }
    dend_44 { pt3dadd( 10.9871, -202.041, 8.53933, 0.07 ) }
    dend_44 { pt3dadd( 9.77576, -202.195, 8.01089, 0.07 ) }
    dend_44 { pt3dadd( 8.99814, -202.381, 7.64627, 0.37 ) }
    dend_44 { pt3dadd( 7.05319, -203.145, 6.63191, 0.07 ) }
    dend_44 { pt3dadd( 6.58872, -203.424, 6.3383, 0.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 36/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -39.5023, -136.497, -2.90443, 0.29 ) }
    dend_40 { pt3dadd( -40.4676, -138.42, -2.56454, 0.29 ) }
    dend_40 { pt3dadd( -40.9197, -139.316, -2.40916, 0.15 ) }
    dend_40 { pt3dadd( -41.2102, -139.872, -2.29668, 0.22 ) }
    dend_40 { pt3dadd( -41.725, -140.828, -2.10442, 0.07 ) }
    dend_40 { pt3dadd( -42.2779, -141.819, -1.91991, 0.07 ) }
    dend_40 { pt3dadd( -42.4541, -142.126, -1.86784, 0.22 ) }
    dend_40 { pt3dadd( -42.8377, -142.753, -1.79041, 0.74 ) }
    dend_40 { pt3dadd( -43.5871, -143.943, -1.74453, 0.15 ) }
    dend_40 { pt3dadd( -44.0599, -144.69, -1.76492, 0.15 ) }
    dend_40 { pt3dadd( -44.557, -145.483, -1.88631, 0.22 ) }
    dend_40 { pt3dadd( -44.8988, -146.055, -2.05787, 0.52 ) }
    dend_40 { pt3dadd( -45.4049, -146.966, -2.40029, 0.66 ) }
    dend_40 { pt3dadd( -45.7159, -147.568, -2.6757, 0.15 ) }
    dend_40 { pt3dadd( -46.2816, -148.777, -3.3009, 0.15 ) }
    dend_40 { pt3dadd( -46.795, -150.01, -3.95416, 0.15 ) }
    dend_40 { pt3dadd( -47.1723, -151.035, -4.49483, 0.15 ) }
    dend_40 { pt3dadd( -47.3524, -151.593, -4.74532, 0.96 ) }
    dend_40 { pt3dadd( -47.5871, -152.447, -5.00432, 0.96 ) }
    dend_40 { pt3dadd( -47.7955, -153.408, -5.14556, 0.15 ) }
    dend_40 { pt3dadd( -48.038, -154.916, -5.09062, 0.15 ) }
    dend_40 { pt3dadd( -48.0982, -155.414, -4.9815, 1.11 ) }
    dend_40 { pt3dadd( -48.2466, -157.041, -4.37989, 0.15 ) }
    dend_40 { pt3dadd( -48.3333, -158.582, -3.6653, 0.15 ) }
    dend_40 { pt3dadd( -48.3828, -160.113, -2.84724, 0.15 ) }
    dend_40 { pt3dadd( -48.4246, -161.489, -2.0067, 0.15 ) }
    dend_40 { pt3dadd( -48.4705, -162.616, -1.24627, 0.15 ) }
    dend_40 { pt3dadd( -48.5435, -163.588, -0.598433, 0.15 ) }
    dend_40 { pt3dadd( -48.6299, -164.286, -0.160042, 0.88 ) }
    dend_40 { pt3dadd( -48.8102, -165.082, 0.298584, 0.07 ) }
    dend_40 { pt3dadd( -49.1264, -165.972, 0.793696, 0.07 ) }
    dend_40 { pt3dadd( -49.3292, -166.394, 0.999709, 0.29 ) }
    dend_40 { pt3dadd( -49.8363, -167.27, 1.3539, 0.07 ) }
    dend_40 { pt3dadd( -50.1004, -167.669, 1.49665, 0.22 ) }
    dend_40 { pt3dadd( -50.8217, -168.638, 1.82539, 0.07 ) }
    dend_40 { pt3dadd( -51.2229, -169.157, 1.98403, 0.15 ) }
    dend_40 { pt3dadd( -51.5429, -169.578, 2.09855, 0.07 ) }
    dend_40 { pt3dadd( -51.7585, -169.862, 2.1735, 0.22 ) }
    dend_40 { pt3dadd( -52.5331, -170.888, 2.42062, 0.07 ) }
    dend_40 { pt3dadd( -53.3226, -171.956, 2.62722, 0.07 ) }
    dend_40 { pt3dadd( -53.5605, -172.286, 2.6649, 0.29 ) }
    dend_40 { pt3dadd( -54.1429, -173.108, 2.74335, 0.07 ) }
    dend_40 { pt3dadd( -54.5869, -173.757, 2.8309, 0.07 ) }
    dend_40 { pt3dadd( -54.8129, -174.102, 2.92054, 0.81 ) }
    dend_40 { pt3dadd( -54.956, -174.327, 3.00628, 0.81 ) }
    dend_40 { pt3dadd( -55.3723, -174.959, 3.31556, 0.07 ) }
    dend_40 { pt3dadd( -55.7728, -175.541, 3.63089, 0.44 ) }
    dend_40 { pt3dadd( -56.3498, -176.359, 4.09583, 0.15 ) }
    dend_40 { pt3dadd( -57.1381, -177.481, 4.74882, 0.15 ) }
    dend_40 { pt3dadd( -57.4106, -177.889, 4.99595, 0.37 ) }
    dend_40 { pt3dadd( -57.7421, -178.422, 5.31199, 0.22 ) }
    dend_40 { pt3dadd( -58.0912, -179.069, 5.69935, 0.15 ) }
    dend_40 { pt3dadd( -58.2499, -179.429, 5.89188, 0.15 ) }
    dend_40 { pt3dadd( -58.4632, -180.029, 6.20566, 0.59 ) }
    dend_40 { pt3dadd( -58.7149, -180.94, 6.67857, 0.15 ) }
    dend_40 { pt3dadd( -58.8205, -181.357, 6.95365, 0.22 ) }
    dend_40 { pt3dadd( -59.0319, -182.154, 7.50608, 0.07 ) }
    dend_40 { pt3dadd( -59.1359, -182.505, 7.75501, 0.22 ) }
    dend_40 { pt3dadd( -59.4872, -183.536, 8.53963, 0.15 ) }
    dend_40 { pt3dadd( -59.7759, -184.266, 9.11232, 1.18 ) }
    dend_40 { pt3dadd( -60.3879, -185.561, 10.1451, 0.07 ) }
    dend_40 { pt3dadd( -60.8583, -186.433, 10.8523, 0.07 ) }
    dend_40 { pt3dadd( -61.0079, -186.676, 11.0423, 0.22 ) }
    dend_40 { pt3dadd( -61.6352, -187.566, 11.7015, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_40 { pt3dadd( -61.92, -187.927, 11.9335, 0.22 ) }
    dend_40 { pt3dadd( -62.6181, -188.722, 12.4439, 0.22 ) }
    dend_40 { pt3dadd( -62.8707, -188.989, 12.6089, 0.22 ) }
    dend_40 { pt3dadd( -63.1494, -189.269, 12.8232, 0.59 ) }
    dend_40 { pt3dadd( -64.0045, -190.106, 13.5658, 0.07 ) }
    dend_40 { pt3dadd( -64.2754, -190.369, 13.8093, 0.22 ) }
    dend_40 { pt3dadd( -64.8593, -190.936, 14.3518, 0.07 ) }
    dend_40 { pt3dadd( -65.121, -191.209, 14.6091, 0.37 ) }
    dend_40 { pt3dadd( -66.1012, -192.306, 15.6266, 0.07 ) }
    dend_40 { pt3dadd( -66.7973, -193.141, 16.3527, 0.07 ) }
    dend_40 { pt3dadd( -66.9378, -193.318, 16.4949, 0.07 ) }
    dend_40 { pt3dadd( -67.4623, -193.997, 16.9746, 1.18 ) }
    dend_40 { pt3dadd( -68.6444, -195.6, 17.8681, 0.07 ) }
    dend_40 { pt3dadd( -68.8668, -195.929, 18.0118, 0.66 ) }
    dend_40 { pt3dadd( -69.2863, -196.616, 18.1944, 0.07 ) }
    dend_40 { pt3dadd( -69.5058, -197.01, 18.2707, 0.07 ) }
    dend_40 { pt3dadd( -69.6769, -197.332, 18.328, 0.22 ) }
    dend_40 { pt3dadd( -69.9871, -197.976, 18.4212, 0.07 ) }
    dend_40 { pt3dadd( -70.1748, -198.4, 18.4485, 0.22 ) }
    dend_40 { pt3dadd( -70.3565, -198.838, 18.4791, 0.07 ) }
    dend_40 { pt3dadd( -70.7747, -199.842, 18.5938, 0.07 ) }
    dend_40 { pt3dadd( -70.9815, -200.337, 18.6593, 0.22 ) }
    dend_40 { pt3dadd( -71.2451, -200.926, 18.742, 0.07 ) }
    dend_40 { pt3dadd( -71.4783, -201.433, 18.842, 0.07 ) }
    dend_40 { pt3dadd( -71.9109, -202.389, 19.0921, 0.07 ) }
    dend_40 { pt3dadd( -72.4596, -203.657, 19.472, 0.07 ) }
    dend_40 { pt3dadd( -72.5946, -203.997, 19.5835, 0.44 ) }
    dend_40 { pt3dadd( -72.7653, -204.43, 19.7466, 0.44 ) }
    dend_40 { pt3dadd( -73.2692, -205.625, 20.2508, 0.07 ) }
    dend_40 { pt3dadd( -73.5665, -206.339, 20.5673, 0.07 ) }
    dend_40 { pt3dadd( -73.6751, -206.635, 20.7014, 0.07 ) }
    dend_40 { pt3dadd( -73.7858, -206.97, 20.8353, 0.52 ) }
    dend_40 { pt3dadd( -74.0561, -207.771, 21.1218, 0.15 ) }
    dend_40 { pt3dadd( -74.2973, -208.468, 21.331, 0.15 ) }
    dend_40 { pt3dadd( -74.5244, -209.051, 21.453, 0.37 ) }
    dend_40 { pt3dadd( -74.9741, -210.119, 21.6748, 0.07 ) }
    dend_40 { pt3dadd( -75.5884, -211.502, 21.9745, 0.07 ) }
    dend_40 { pt3dadd( -75.821, -211.982, 22.0729, 0.37 ) }
    dend_40 { pt3dadd( -76.0749, -212.483, 22.1598, 0.37 ) }
    dend_40 { pt3dadd( -76.72, -213.695, 22.3725, 0.07 ) }
    dend_40 { pt3dadd( -77.4086, -214.91, 22.5834, 0.07 ) }
    dend_40 { pt3dadd( -77.6876, -215.419, 22.6567, 0.59 ) }
    dend_40 { pt3dadd( -78.2391, -216.535, 22.7983, 0.07 ) }
    dend_40 { pt3dadd( -78.6385, -217.524, 22.9123, 0.07 ) }
    dend_40 { pt3dadd( -78.9017, -218.374, 22.988, 0.07 ) }
    dend_40 { pt3dadd( -79.0223, -218.948, 23.0192, 0.81 ) }
    dend_40 { pt3dadd( -79.1909, -220.282, 23.029, 0.07 ) }
    dend_40 { pt3dadd( -79.2202, -220.822, 23.024, 0.15 ) }
    dend_40 { pt3dadd( -79.2099, -222.052, 22.9973, 0.07 ) }
    dend_40 { pt3dadd( -79.1751, -223.126, 22.9509, 0.07 ) }
    dend_40 { pt3dadd( -79.1519, -223.588, 22.9172, 0.59 ) }
    dend_40 { pt3dadd( -79.1282, -224.096, 22.8796, 0.59 ) }
    dend_40 { pt3dadd( -79.1222, -224.925, 22.8141, 0.07 ) }
    dend_40 { pt3dadd( -79.1485, -225.958, 22.7254, 0.07 ) }
    dend_40 { pt3dadd( -79.1866, -226.718, 22.6532, 0.29 ) }
    dend_40 { pt3dadd( -79.2404, -227.535, 22.6279, 0.29 ) }
    dend_40 { pt3dadd( -79.2996, -228.304, 22.6712, 0.29 ) }
    dend_40 { pt3dadd( -79.3866, -229.4, 22.8003, 0.07 ) }
    dend_40 { pt3dadd( -79.4601, -230.39, 23.0113, 0.07 ) }
    dend_40 { pt3dadd( -79.4972, -230.936, 23.1712, 0.22 ) }
    dend_40 { pt3dadd( -79.6177, -232.743, 23.7882, 0.07 ) }
    dend_40 { pt3dadd( -79.6987, -233.952, 24.2464, 0.07 ) }
    dend_40 { pt3dadd( -79.7278, -234.539, 24.4938, 0.59 ) }
    dend_40 { pt3dadd( -79.7734, -236.261, 25.2985, 0.07 ) }
    dend_40 { pt3dadd( -79.8065, -237.791, 26.0683, 0.07 ) }
    dend_40 { pt3dadd( -79.8167, -238.307, 26.3309, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 66/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -39.5023, -136.497, -2.90443, 0.22 ) }
    dend_39 { pt3dadd( -39.8085, -139.505, -4.09308, 0.22 ) }
    dend_39 { pt3dadd( -39.9378, -140.885, -4.68632, 0.22 ) }
    dend_39 { pt3dadd( -40.056, -142.202, -5.30376, 0.22 ) }
    dend_39 { pt3dadd( -40.1413, -143.189, -5.77679, 0.29 ) }
    dend_39 { pt3dadd( -40.2117, -143.99, -6.15464, 0.52 ) }
    dend_39 { pt3dadd( -40.2794, -144.759, -6.50703, 1.03 ) }
    dend_39 { pt3dadd( -40.3458, -145.838, -7.03687, 0.74 ) }
    dend_39 { pt3dadd( -40.4393, -147.09, -7.63487, 0.15 ) }
    dend_39 { pt3dadd( -40.4917, -147.79, -7.93483, 0.29 ) }
    dend_39 { pt3dadd( -40.5514, -148.689, -8.29024, 0.37 ) }
    dend_39 { pt3dadd( -40.6298, -149.929, -8.71534, 0.07 ) }
    dend_39 { pt3dadd( -40.6788, -150.736, -8.96404, 0.15 ) }
    dend_39 { pt3dadd( -40.7622, -152.235, -9.38434, 0.07 ) }
    dend_39 { pt3dadd( -40.8078, -153.177, -9.65167, 0.29 ) }
    dend_39 { pt3dadd( -40.8361, -154.175, -9.95232, 0.29 ) }
    dend_39 { pt3dadd( -40.8382, -155.101, -10.2404, 0.29 ) }
    dend_39 { pt3dadd( -40.814, -155.822, -10.4667, 1.03 ) }
    dend_39 { pt3dadd( -40.7486, -156.813, -10.7801, 0.52 ) }
    dend_39 { pt3dadd( -40.6318, -158.205, -11.2033, 0.22 ) }
    dend_39 { pt3dadd( -40.5575, -159.198, -11.5121, 0.66 ) }
    dend_39 { pt3dadd( -40.5031, -159.947, -11.7308, 0.29 ) }
    dend_39 { pt3dadd( -40.4389, -160.874, -11.9766, 0.07 ) }
    dend_39 { pt3dadd( -40.4216, -161.447, -12.1005, 0.29 ) }
    dend_39 { pt3dadd( -40.4313, -162.628, -12.2918, 0.15 ) }
    dend_39 { pt3dadd( -40.4577, -163.243, -12.3563, 0.15 ) }
    dend_39 { pt3dadd( -40.5088, -163.958, -12.4231, 0.52 ) }
    dend_39 { pt3dadd( -40.5668, -164.645, -12.4819, 0.52 ) }
    dend_39 { pt3dadd( -40.6928, -166.306, -12.6019, 0.15 ) }
    dend_39 { pt3dadd( -40.7203, -167.189, -12.6187, 0.15 ) }
    dend_39 { pt3dadd( -40.6932, -168.194, -12.6083, 0.15 ) }
    dend_39 { pt3dadd( -40.665, -168.608, -12.5968, 0.37 ) }
    dend_39 { pt3dadd( -40.611, -169.088, -12.6096, 0.37 ) }
    dend_39 { pt3dadd( -40.3953, -170.468, -12.8124, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_39 { pt3dadd( -40.1137, -171.887, -13.3863, 0.07 ) }
    dend_39 { pt3dadd( -40.0138, -172.372, -13.7455, 0.59 ) }
    dend_39 { pt3dadd( -39.9617, -172.609, -13.9924, 1.11 ) }
    dend_39 { pt3dadd( -39.6971, -173.686, -15.3409, 0.37 ) }
    dend_39 { pt3dadd( -39.4154, -174.826, -16.9026, 0.15 ) }
    dend_39 { pt3dadd( -39.1803, -175.798, -18.3669, 0.15 ) }
    dend_39 { pt3dadd( -39.0726, -176.298, -19.1725, 0.15 ) }
    dend_39 { pt3dadd( -39.0252, -176.535, -19.5357, 0.37 ) }
    dend_39 { pt3dadd( -38.9095, -177.125, -20.3364, 0.15 ) }
    dend_39 { pt3dadd( -38.7223, -178.03, -21.2756, 0.15 ) }
    dend_39 { pt3dadd( -38.6297, -178.459, -21.6157, 0.44 ) }
    dend_39 { pt3dadd( -38.3761, -179.833, -22.4528, 0.07 ) }
    dend_39 { pt3dadd( -38.3141, -180.27, -22.6787, 0.22 ) }
    dend_39 { pt3dadd( -38.1297, -181.812, -23.4688, 0.07 ) }
    dend_39 { pt3dadd( -38.0138, -182.924, -24.0204, 0.07 ) }
    dend_39 { pt3dadd( -37.9856, -183.187, -24.1405, 0.15 ) }
    dend_39 { pt3dadd( -37.8654, -184.484, -24.5828, 0.07 ) }
    dend_39 { pt3dadd( -37.8411, -184.826, -24.6318, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 18/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -95.4807, -146.801, 17.9107, 0.22 ) }
    dend_35 { pt3dadd( -96.6654, -147.904, 18.2442, 0.22 ) }
    dend_35 { pt3dadd( -97.4682, -148.608, 18.4681, 0.22 ) }
    dend_35 { pt3dadd( -98.1161, -149.163, 18.6727, 0.29 ) }
    dend_35 { pt3dadd( -98.6839, -149.659, 18.8602, 0.66 ) }
    dend_35 { pt3dadd( -99.0981, -150.026, 19.0203, 0.88 ) }
    dend_35 { pt3dadd( -100.046, -150.878, 19.4356, 0.22 ) }
    dend_35 { pt3dadd( -100.801, -151.575, 19.8323, 0.29 ) }
    dend_35 { pt3dadd( -101.385, -152.128, 20.1546, 0.44 ) }
    dend_35 { pt3dadd( -101.825, -152.564, 20.3854, 0.44 ) }
    dend_35 { pt3dadd( -102.657, -153.426, 20.8755, 0.15 ) }
    dend_35 { pt3dadd( -103.315, -154.156, 21.3166, 0.15 ) }
    dend_35 { pt3dadd( -103.616, -154.508, 21.5332, 0.37 ) }
    dend_35 { pt3dadd( -103.995, -154.942, 21.8006, 0.81 ) }
    dend_35 { pt3dadd( -104.629, -155.631, 22.2429, 0.59 ) }
    dend_35 { pt3dadd( -105.416, -156.448, 22.7837, 0.22 ) }
    dend_35 { pt3dadd( -106.025, -157.049, 23.1908, 0.15 ) }
    dend_35 { pt3dadd( -107.109, -158.012, 23.9632, 0.22 ) }
    dend_35 { pt3dadd( -107.949, -158.67, 24.5852, 0.07 ) }
    dend_35 { pt3dadd( -108.521, -159.07, 25.0166, 0.07 ) }
    dend_35 { pt3dadd( -108.806, -159.25, 25.2325, 0.44 ) }
    dend_35 { pt3dadd( -109.409, -159.594, 25.6392, 0.81 ) }
    dend_35 { pt3dadd( -110.535, -160.135, 26.3672, 0.22 ) }
    dend_35 { pt3dadd( -111.417, -160.513, 26.8801, 0.15 ) }
    dend_35 { pt3dadd( -112.395, -160.921, 27.3655, 0.15 ) }
    dend_35 { pt3dadd( -113.009, -161.179, 27.6188, 0.15 ) }
    dend_35 { pt3dadd( -113.98, -161.59, 27.9474, 0.37 ) }
    dend_35 { pt3dadd( -115.048, -162.062, 28.2096, 0.15 ) }
    dend_35 { pt3dadd( -115.855, -162.465, 28.3381, 0.22 ) }
    dend_35 { pt3dadd( -116.397, -162.786, 28.4036, 0.81 ) }
    dend_35 { pt3dadd( -117.141, -163.296, 28.4932, 1.25 ) }
    dend_35 { pt3dadd( -117.539, -163.616, 28.5234, 1.25 ) }
    dend_35 { pt3dadd( -118.813, -164.842, 28.5484, 0.22 ) }
    dend_35 { pt3dadd( -119.667, -165.786, 28.4989, 0.22 ) }
    dend_35 { pt3dadd( -120.678, -167.034, 28.4, 0.22 ) }
    dend_35 { pt3dadd( -121.307, -167.838, 28.3749, 0.22 ) }
    dend_35 { pt3dadd( -122.155, -168.942, 28.3857, 0.37 ) }
    dend_35 { pt3dadd( -122.753, -169.68, 28.4279, 1.03 ) }
    dend_35 { pt3dadd( -123.332, -170.329, 28.5075, 0.37 ) }
    dend_35 { pt3dadd( -124.325, -171.145, 28.7472, 0.15 ) }
    dend_35 { pt3dadd( -125.919, -171.956, 29.343, 0.07 ) }
    dend_35 { pt3dadd( -126.568, -172.187, 29.6447, 0.15 ) }
    dend_35 { pt3dadd( -127.415, -172.426, 30.0805, 0.37 ) }
    dend_35 { pt3dadd( -127.989, -172.555, 30.3768, 0.37 ) }
    dend_35 { pt3dadd( -128.975, -172.734, 30.8596, 0.74 ) }
    dend_35 { pt3dadd( -130.86, -173.026, 31.6943, 0.15 ) }
    dend_35 { pt3dadd( -131.854, -173.21, 32.0596, 0.15 ) }
    dend_35 { pt3dadd( -132.644, -173.397, 32.2869, 0.15 ) }
    dend_35 { pt3dadd( -133.347, -173.61, 32.3974, 0.74 ) }
    dend_35 { pt3dadd( -133.732, -173.744, 32.4014, 0.74 ) }
    dend_35 { pt3dadd( -134.834, -174.165, 32.2288, 0.15 ) }
    dend_35 { pt3dadd( -135.422, -174.368, 32.0241, 0.15 ) }
    dend_35 { pt3dadd( -136.707, -174.734, 31.4749, 0.15 ) }
    dend_35 { pt3dadd( -137.61, -174.965, 31.0674, 0.15 ) }
    dend_35 { pt3dadd( -138.138, -175.085, 30.85, 0.66 ) }
    dend_35 { pt3dadd( -138.682, -175.17, 30.673, 0.96 ) }
    dend_35 { pt3dadd( -139.562, -175.237, 30.4666, 0.52 ) }
    dend_35 { pt3dadd( -140.516, -175.246, 30.3711, 0.15 ) }
    dend_35 { pt3dadd( -141.033, -175.237, 30.3874, 0.15 ) }
    dend_35 { pt3dadd( -142.11, -175.19, 30.4726, 0.15 ) }
    dend_35 { pt3dadd( -143.49, -175.062, 30.665, 0.15 ) }
    dend_35 { pt3dadd( -143.941, -175.001, 30.7415, 0.15 ) }
    dend_35 { pt3dadd( -144.822, -174.859, 30.8995, 0.52 ) }
    dend_35 { pt3dadd( -145.317, -174.781, 30.99, 0.88 ) }
    dend_35 { pt3dadd( -146.359, -174.624, 31.1722, 0.59 ) }
    dend_35 { pt3dadd( -147.843, -174.463, 31.4157, 0.37 ) }
    dend_35 { pt3dadd( -148.579, -174.431, 31.5573, 0.15 ) }
    dend_35 { pt3dadd( -149.234, -174.438, 31.6968, 0.59 ) }
    dend_35 { pt3dadd( -150.495, -174.588, 32.0136, 0.07 ) }
    dend_35 { pt3dadd( -151.202, -174.761, 32.2349, 0.52 ) }
    dend_35 { pt3dadd( -152.191, -175.137, 32.59, 0.15 ) }
    dend_35 { pt3dadd( -152.985, -175.528, 32.8822, 0.15 ) }
    dend_35 { pt3dadd( -153.607, -175.881, 33.1588, 0.96 ) }
    dend_35 { pt3dadd( -155.15, -176.821, 33.9398, 0.07 ) }
    dend_35 { pt3dadd( -156.552, -177.748, 34.7049, 0.07 ) }
    dend_35 { pt3dadd( -157.041, -178.081, 34.9863, 0.81 ) }
    dend_35 { pt3dadd( -157.47, -178.361, 35.232, 0.96 ) }
    dend_35 { pt3dadd( -158.856, -179.193, 36.0603, 0.07 ) }
    dend_35 { pt3dadd( -159.582, -179.563, 36.5281, 0.07 ) }
    dend_35 { pt3dadd( -159.82, -179.646, 36.6788, 0.37 ) }
    dend_35 { pt3dadd( -160.295, -179.744, 36.9536, 0.37 ) }
    dend_35 { pt3dadd( -161.3, -179.878, 37.5081, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_35 { pt3dadd( -162.545, -180.045, 38.09, 0.37 ) }
    dend_35 { pt3dadd( -163.25, -180.161, 38.332, 0.37 ) }
    dend_35 { pt3dadd( -164.208, -180.394, 38.62, 0.22 ) }
    dend_35 { pt3dadd( -164.904, -180.595, 38.8549, 0.22 ) }
    dend_35 { pt3dadd( -165.565, -180.83, 39.0847, 0.22 ) }
    dend_35 { pt3dadd( -166.867, -181.372, 39.5259, 0.22 ) }
    dend_35 { pt3dadd( -167.573, -181.683, 39.7337, 0.66 ) }
    dend_35 { pt3dadd( -168.746, -182.238, 40.0906, 0.15 ) }
    dend_35 { pt3dadd( -170.027, -182.872, 40.5373, 0.15 ) }
    dend_35 { pt3dadd( -170.588, -183.169, 40.6868, 0.59 ) }
    dend_35 { pt3dadd( -171.288, -183.551, 40.8315, 0.44 ) }
    dend_35 { pt3dadd( -172.725, -184.373, 41.0495, 0.15 ) }
    dend_35 { pt3dadd( -173.86, -185.101, 41.0891, 0.15 ) }
    dend_35 { pt3dadd( -174.683, -185.662, 41.0526, 0.15 ) }
    dend_35 { pt3dadd( -177.232, -187.46, 40.8018, 0.74 ) }
    dend_35 { pt3dadd( -178.338, -188.206, 40.7536, 0.96 ) }
    dend_35 { pt3dadd( -178.915, -188.574, 40.7849, 1.03 ) }
    dend_35 { pt3dadd( -180.712, -189.674, 41.0204, 0.07 ) }
    dend_35 { pt3dadd( -181.842, -190.315, 41.2478, 0.07 ) }
    dend_35 { pt3dadd( -182.537, -190.672, 41.4446, 0.52 ) }
    dend_35 { pt3dadd( -184.057, -191.342, 41.9897, 0.15 ) }
    dend_35 { pt3dadd( -185.512, -191.91, 42.5236, 0.15 ) }
    dend_35 { pt3dadd( -186.145, -192.128, 42.7612, 0.88 ) }
    dend_35 { pt3dadd( -187.291, -192.468, 43.192, 1.62 ) }
    dend_35 { pt3dadd( -188.536, -192.813, 43.6077, 0.74 ) }
    dend_35 { pt3dadd( -189.976, -193.19, 44.0583, 0.15 ) }
    dend_35 { pt3dadd( -191.308, -193.522, 44.4491, 0.15 ) }
    dend_35 { pt3dadd( -191.76, -193.632, 44.5822, 0.15 ) }
    dend_35 { pt3dadd( -192.385, -193.785, 44.7905, 0.81 ) }
    dend_35 { pt3dadd( -192.838, -193.907, 44.9543, 0.81 ) }
    dend_35 { pt3dadd( -194.314, -194.378, 45.4919, 0.07 ) }
    dend_35 { pt3dadd( -195.561, -194.851, 45.95, 0.07 ) }
    dend_35 { pt3dadd( -196.291, -195.156, 46.1805, 0.37 ) }
    dend_35 { pt3dadd( -198.215, -195.998, 46.7633, 0.07 ) }
    dend_35 { pt3dadd( -199.255, -196.481, 47.0543, 0.07 ) }
    dend_35 { pt3dadd( -199.817, -196.756, 47.1937, 0.96 ) }
    dend_35 { pt3dadd( -200.069, -196.887, 47.2413, 0.96 ) }
    dend_35 { pt3dadd( -201.588, -197.693, 47.4968, 0.15 ) }
    dend_35 { pt3dadd( -202.896, -198.364, 47.7155, 0.15 ) }
    dend_35 { pt3dadd( -203.512, -198.661, 47.8263, 0.44 ) }
    dend_35 { pt3dadd( -203.877, -198.804, 47.9125, 0.44 ) }
    dend_35 { pt3dadd( -204.981, -199.155, 48.2522, 0.15 ) }
    dend_35 { pt3dadd( -205.755, -199.353, 48.5271, 0.15 ) }
    dend_35 { pt3dadd( -206.28, -199.442, 48.7372, 0.37 ) }
    dend_35 { pt3dadd( -207.525, -199.579, 49.2095, 0.07 ) }
    dend_35 { pt3dadd( -208.591, -199.666, 49.6168, 0.07 ) }
    dend_35 { pt3dadd( -209.259, -199.717, 49.866, 0.07 ) }
    dend_35 { pt3dadd( -209.936, -199.778, 50.1214, 1.11 ) }
    dend_35 { pt3dadd( -211.577, -199.995, 50.7361, 0.07 ) }
    dend_35 { pt3dadd( -212.155, -200.092, 50.9561, 0.59 ) }
    dend_35 { pt3dadd( -213.848, -200.418, 51.5515, 0.07 ) }
    dend_35 { pt3dadd( -214.625, -200.579, 51.7972, 0.52 ) }
    dend_35 { pt3dadd( -215.644, -200.794, 52.0783, 0.22 ) }
    dend_35 { pt3dadd( -216.579, -200.997, 52.3131, 0.22 ) }
    dend_35 { pt3dadd( -217.036, -201.099, 52.3908, 0.52 ) }
    dend_35 { pt3dadd( -217.847, -201.274, 52.4563, 0.52 ) }
    dend_35 { pt3dadd( -218.021, -201.311, 52.4589, 0.52 ) }
    dend_35 { pt3dadd( -219.303, -201.567, 52.5126, 0.07 ) }
    dend_35 { pt3dadd( -219.834, -201.672, 52.5409, 0.52 ) }
    dend_35 { pt3dadd( -220.954, -201.901, 52.6301, 0.07 ) }
    dend_35 { pt3dadd( -221.555, -202.026, 52.7314, 0.37 ) }
    dend_35 { pt3dadd( -223.021, -202.348, 53.1028, 0.07 ) }
    dend_35 { pt3dadd( -224.178, -202.604, 53.4996, 0.07 ) }
    dend_35 { pt3dadd( -224.572, -202.689, 53.675, 0.52 ) }
    dend_35 { pt3dadd( -224.863, -202.748, 53.8197, 0.52 ) }
    dend_35 { pt3dadd( -226.319, -203.022, 54.5775, 0.15 ) }
    dend_35 { pt3dadd( -227.117, -203.168, 54.9836, 0.66 ) }
    dend_35 { pt3dadd( -229.045, -203.543, 55.8739, 0.07 ) }
    dend_35 { pt3dadd( -230.361, -203.856, 56.419, 0.07 ) }
    dend_35 { pt3dadd( -231.09, -204.057, 56.6937, 0.07 ) }
    dend_35 { pt3dadd( -231.767, -204.29, 56.8965, 0.37 ) }
    dend_35 { pt3dadd( -232.31, -204.514, 57.0037, 0.37 ) }
    dend_35 { pt3dadd( -233.581, -205.131, 57.1361, 0.07 ) }
    dend_35 { pt3dadd( -235.116, -205.993, 57.1504, 0.07 ) }
    dend_35 { pt3dadd( -235.682, -206.334, 57.1626, 0.29 ) }
    dend_35 { pt3dadd( -237.241, -207.279, 57.3542, 0.07 ) }
    dend_35 { pt3dadd( -237.891, -207.668, 57.4894, 0.52 ) }
    dend_35 { pt3dadd( -239.171, -208.378, 57.9311, 0.07 ) }
    dend_35 { pt3dadd( -239.606, -208.6, 58.1398, 0.22 ) }
    dend_35 { pt3dadd( -241.344, -209.435, 59.1133, 0.07 ) }
    dend_35 { pt3dadd( -242.931, -210.18, 60.0954, 0.07 ) }
    dend_35 { pt3dadd( -243.536, -210.476, 60.4904, 0.15 ) }
    dend_35 { pt3dadd( -245.384, -211.447, 61.6638, 0.07 ) }
    dend_35 { pt3dadd( -246.148, -211.887, 62.1166, 0.07 ) }
    dend_35 { pt3dadd( -247.359, -212.661, 62.7259, 0.07 ) }
    dend_35 { pt3dadd( -247.586, -212.831, 62.7998, 0.15 ) }
    dend_35 { pt3dadd( -249.023, -214.036, 63.0802, 0.07 ) }
    dend_35 { pt3dadd( -249.631, -214.566, 63.1568, 0.29 ) }
    dend_35 { pt3dadd( -250.655, -215.461, 63.2043, 0.07 ) }
    dend_35 { pt3dadd( -251.047, -215.8, 63.2159, 0.29 ) }
    dend_35 { pt3dadd( -253.483, -217.871, 63.2757, 0.07 ) }
    dend_35 { pt3dadd( -255.026, -219.169, 63.2978, 0.07 ) }
    dend_35 { pt3dadd( -255.787, -219.803, 63.3009, 0.15 ) }
    dend_35 { pt3dadd( -256.848, -220.7, 63.2988, 0.15 ) }
    dend_35 { pt3dadd( -257.423, -221.199, 63.3163, 0.22 ) }
    dend_35 { pt3dadd( -258.712, -222.333, 63.4902, 0.07 ) }
    dend_35 { pt3dadd( -259.772, -223.271, 63.7731, 0.07 ) }
    dend_35 { pt3dadd( -260.117, -223.58, 63.8986, 0.37 ) }
    dend_35 { pt3dadd( -260.47, -223.917, 64.0414, 0.37 ) }
    dend_35 { pt3dadd( -262.334, -225.798, 64.8583, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_35 { pt3dadd( -264.06, -227.578, 65.6487, 0.07 ) }
    dend_35 { pt3dadd( -264.873, -228.43, 66.0459, 0.07 ) }
    dend_35 { pt3dadd( -265.501, -229.099, 66.3763, 0.29 ) }
    dend_35 { pt3dadd( -267.493, -231.245, 67.4727, 0.07 ) }
    dend_35 { pt3dadd( -268.021, -231.837, 67.7725, 0.07 ) }
    dend_35 { pt3dadd( -268.237, -232.096, 67.9234, 0.22 ) }
    dend_35 { pt3dadd( -269.546, -233.71, 69.198, 0.07 ) }
    dend_35 { pt3dadd( -270.68, -235.118, 70.4367, 0.07 ) }
    dend_35 { pt3dadd( -271.399, -235.988, 71.3648, 0.07 ) }
    dend_35 { pt3dadd( -271.766, -236.409, 71.963, 0.29 ) }
    dend_35 { pt3dadd( -272.973, -237.74, 74.1353, 0.07 ) }
    dend_35 { pt3dadd( -274.0, -238.871, 76.3385, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 12/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -95.4807, -146.801, 17.9107, 0.44 ) }
    dend_32 { pt3dadd( -96.0526, -148.702, 18.3911, 0.44 ) }
    dend_32 { pt3dadd( -96.447, -149.952, 18.6837, 0.44 ) }
    dend_32 { pt3dadd( -96.8236, -151.135, 18.8858, 0.37 ) }
    dend_32 { pt3dadd( -97.1633, -152.222, 19.0248, 0.15 ) }
    dend_32 { pt3dadd( -97.4485, -153.151, 19.1121, 0.15 ) }
    dend_32 { pt3dadd( -97.7004, -153.978, 19.1725, 0.15 ) }
    dend_32 { pt3dadd( -97.8137, -154.333, 19.1767, 0.37 ) }
    dend_32 { pt3dadd( -98.1058, -155.285, 19.1092, 0.88 ) }
    dend_32 { pt3dadd( -98.2944, -155.918, 19.0471, 0.74 ) }
    dend_32 { pt3dadd( -98.7022, -157.254, 18.8947, 0.29 ) }
    dend_32 { pt3dadd( -99.013, -158.226, 18.7907, 0.15 ) }
    dend_32 { pt3dadd( -99.3089, -159.131, 18.723, 0.07 ) }
    dend_32 { pt3dadd( -99.685, -160.274, 18.6225, 0.07 ) }
    dend_32 { pt3dadd( -99.8037, -160.62, 18.5927, 0.44 ) }
    dend_32 { pt3dadd( -99.9815, -161.121, 18.5267, 0.81 ) }
    dend_32 { pt3dadd( -100.455, -162.437, 18.2845, 0.22 ) }
    dend_32 { pt3dadd( -101.03, -164.03, 17.9614, 0.22 ) }
    dend_32 { pt3dadd( -101.516, -165.372, 17.675, 0.22 ) }
    dend_32 { pt3dadd( -101.673, -165.806, 17.5846, 0.44 ) }
    dend_32 { pt3dadd( -101.926, -166.506, 17.4177, 0.81 ) }
    dend_32 { pt3dadd( -102.198, -167.294, 17.1905, 1.33 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -14.1969, -19.8075, 16.2245, 0.29 ) }
    dend_28 { pt3dadd( -14.2083, -21.1265, 17.9554, 0.29 ) }
    dend_28 { pt3dadd( -14.2491, -21.9001, 18.8834, 0.22 ) }
    dend_28 { pt3dadd( -14.3276, -22.8691, 19.9359, 0.22 ) }
    dend_28 { pt3dadd( -14.4134, -23.714, 20.8405, 0.22 ) }
    dend_28 { pt3dadd( -14.4978, -24.3601, 21.512, 0.37 ) }
    dend_28 { pt3dadd( -14.5965, -25.0216, 22.1473, 0.37 ) }
    dend_28 { pt3dadd( -14.7253, -25.8109, 22.8485, 0.59 ) }
    dend_28 { pt3dadd( -14.8842, -27.1892, 24.0427, 0.15 ) }
    dend_28 { pt3dadd( -14.953, -28.249, 24.9813, 0.15 ) }
    dend_28 { pt3dadd( -14.9551, -28.6883, 25.4075, 0.15 ) }
    dend_28 { pt3dadd( -14.876, -29.6346, 26.3787, 1.03 ) }
    dend_28 { pt3dadd( -14.5895, -31.3007, 28.2276, 0.29 ) }
    dend_28 { pt3dadd( -14.3727, -32.1508, 29.3196, 0.29 ) }
    dend_28 { pt3dadd( -14.0794, -33.0311, 30.526, 0.29 ) }
    dend_28 { pt3dadd( -13.7164, -33.8819, 31.7965, 0.29 ) }
    dend_28 { pt3dadd( -13.415, -34.3972, 32.705, 0.66 ) }
    dend_28 { pt3dadd( -12.8784, -35.0301, 34.1524, 0.44 ) }
    dend_28 { pt3dadd( -12.0918, -35.7007, 36.0953, 0.44 ) }
    dend_28 { pt3dadd( -11.7979, -35.8903, 36.7582, 0.44 ) }
    dend_28 { pt3dadd( -10.9741, -36.2861, 38.356, 0.22 ) }
    dend_28 { pt3dadd( -10.1933, -36.5597, 39.666, 0.15 ) }
    dend_28 { pt3dadd( -9.18796, -36.8324, 41.2558, 0.15 ) }
    dend_28 { pt3dadd( -8.77708, -36.9323, 41.8277, 0.15 ) }
    dend_28 { pt3dadd( -8.35872, -37.0695, 42.379, 0.37 ) }
    dend_28 { pt3dadd( -7.82273, -37.377, 43.1433, 0.37 ) }
    dend_28 { pt3dadd( -7.24835, -38.2209, 44.2455, 0.15 ) }
    dend_28 { pt3dadd( -6.97518, -39.1742, 45.1095, 0.15 ) }
    dend_28 { pt3dadd( -6.90573, -39.7258, 45.4979, 0.44 ) }
    dend_28 { pt3dadd( -6.85006, -41.0414, 46.3071, 0.15 ) }
    dend_28 { pt3dadd( -6.88502, -42.1824, 46.9441, 0.22 ) }
    dend_28 { pt3dadd( -6.97877, -43.9587, 47.8402, 0.22 ) }
    dend_28 { pt3dadd( -7.00012, -44.4009, 48.0301, 0.37 ) }
    dend_28 { pt3dadd( -7.00444, -45.235, 48.3678, 0.44 ) }
    dend_28 { pt3dadd( -6.92745, -46.322, 48.8598, 0.66 ) }
    dend_28 { pt3dadd( -6.74569, -47.5328, 49.4707, 0.15 ) }
    dend_28 { pt3dadd( -6.53832, -48.564, 50.0621, 0.15 ) }
    dend_28 { pt3dadd( -6.39746, -49.126, 50.4125, 0.22 ) }
    dend_28 { pt3dadd( -6.23497, -49.6835, 50.8437, 0.22 ) }
    dend_28 { pt3dadd( -5.94768, -50.5547, 51.6692, 0.22 ) }
    dend_28 { pt3dadd( -5.50774, -51.6962, 52.9709, 0.15 ) }
    dend_28 { pt3dadd( -5.00148, -52.8517, 54.3833, 0.22 ) }
    dend_28 { pt3dadd( -4.52265, -53.8247, 55.6602, 0.29 ) }
    dend_28 { pt3dadd( -3.86201, -55.0188, 57.2796, 0.22 ) }
    dend_28 { pt3dadd( -3.18718, -56.1093, 58.8346, 0.59 ) }
    dend_28 { pt3dadd( -2.2307, -57.4497, 60.8296, 0.59 ) }
    dend_28 { pt3dadd( -1.70667, -58.105, 61.8344, 0.07 ) }
    dend_28 { pt3dadd( -0.959304, -59.018, 63.1795, 0.07 ) }
    dend_28 { pt3dadd( -0.694553, -59.3425, 63.6165, 0.22 ) }
    dend_28 { pt3dadd( 0.501395, -60.9149, 65.4246, 0.07 ) }
    dend_28 { pt3dadd( 0.838809, -61.438, 65.9667, 0.07 ) }
    dend_28 { pt3dadd( 1.09544, -61.9006, 66.3989, 0.29 ) }
    dend_28 { pt3dadd( 1.45752, -62.6326, 67.0852, 0.74 ) }
    dend_28 { pt3dadd( 1.87303, -63.6214, 67.9246, 0.22 ) }
    dend_28 { pt3dadd( 2.30469, -64.8154, 68.8919, 0.15 ) }
    dend_28 { pt3dadd( 3.05242, -67.0632, 70.538, 0.15 ) }
    dend_28 { pt3dadd( 3.31699, -67.869, 71.1118, 0.15 ) }
    dend_28 { pt3dadd( 3.66119, -68.9868, 71.8935, 0.15 ) }
    dend_28 { pt3dadd( 3.8918, -69.9139, 72.5326, 0.15 ) }
    dend_28 { pt3dadd( 4.09319, -71.109, 73.3294, 0.15 ) }
    dend_28 { pt3dadd( 4.20491, -71.9656, 73.8792, 0.37 ) }
    dend_28 { pt3dadd( 4.27566, -72.7571, 74.4529, 0.37 ) }
    dend_28 { pt3dadd( 4.33991, -73.8726, 75.3732, 0.37 ) }
    dend_28 { pt3dadd( 4.39143, -75.02, 76.4386, 0.37 ) }
    dend_28 { pt3dadd( 4.44836, -76.028, 77.4408, 0.37 ) }
    dend_28 { pt3dadd( 4.56424, -77.1216, 78.6145, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_28 { pt3dadd( 4.8679, -78.9729, 80.8492, 0.22 ) }
    dend_28 { pt3dadd( 5.023, -79.6478, 81.6946, 0.22 ) }
    dend_28 { pt3dadd( 5.35734, -80.6671, 83.0472, 0.22 ) }
    dend_28 { pt3dadd( 5.70704, -81.5171, 84.2014, 0.81 ) }
    dend_28 { pt3dadd( 6.60955, -83.5601, 86.9355, 0.15 ) }
    dend_28 { pt3dadd( 7.50145, -85.6238, 89.5678, 0.15 ) }
    dend_28 { pt3dadd( 7.80267, -86.3006, 90.3963, 0.37 ) }
    dend_28 { pt3dadd( 8.57063, -87.976, 92.4889, 0.37 ) }
    dend_28 { pt3dadd( 8.79469, -88.4745, 93.0866, 0.52 ) }
    dend_28 { pt3dadd( 9.179, -89.3392, 94.087, 0.22 ) }
    dend_28 { pt3dadd( 9.90691, -91.1234, 95.8095, 0.22 ) }
    dend_28 { pt3dadd( 10.361, -92.3542, 96.8209, 0.22 ) }
    dend_28 { pt3dadd( 10.8761, -93.8341, 98.0038, 0.22 ) }
    dend_28 { pt3dadd( 11.1992, -94.8042, 98.7676, 0.74 ) }
    dend_28 { pt3dadd( 11.4027, -95.41, 99.3003, 0.74 ) }
    dend_28 { pt3dadd( 11.8359, -96.5727, 100.431, 0.22 ) }
    dend_28 { pt3dadd( 12.4225, -97.9786, 101.961, 0.29 ) }
    dend_28 { pt3dadd( 13.093, -99.4033, 103.596, 0.29 ) }
    dend_28 { pt3dadd( 13.9756, -101.138, 105.632, 0.22 ) }
    dend_28 { pt3dadd( 14.7049, -102.539, 107.317, 0.29 ) }
    dend_28 { pt3dadd( 15.4206, -103.925, 108.956, 0.29 ) }
    dend_28 { pt3dadd( 16.0564, -105.141, 110.388, 0.29 ) }
    dend_28 { pt3dadd( 16.5901, -106.072, 111.501, 0.07 ) }
    dend_28 { pt3dadd( 17.3973, -107.36, 112.988, 0.07 ) }
    dend_28 { pt3dadd( 17.7056, -107.828, 113.513, 0.22 ) }
    dend_28 { pt3dadd( 18.2431, -108.648, 114.377, 0.22 ) }
    dend_28 { pt3dadd( 19.2885, -110.378, 116.021, 0.15 ) }
    dend_28 { pt3dadd( 20.5206, -112.755, 118.158, 0.15 ) }
    dend_28 { pt3dadd( 20.9294, -113.759, 119.05, 0.29 ) }
    dend_28 { pt3dadd( 21.4212, -115.319, 120.42, 0.52 ) }
    dend_28 { pt3dadd( 21.6501, -116.384, 121.394, 0.81 ) }
    dend_28 { pt3dadd( 21.8076, -117.906, 122.869, 0.37 ) }
    dend_28 { pt3dadd( 21.834, -119.309, 124.277, 0.37 ) }
    dend_28 { pt3dadd( 21.8042, -120.939, 125.971, 0.15 ) }
    dend_28 { pt3dadd( 21.7846, -122.514, 127.772, 0.29 ) }
    dend_28 { pt3dadd( 21.8402, -124.256, 130.014, 0.29 ) }
    dend_28 { pt3dadd( 22.033, -125.72, 132.255, 0.66 ) }
    dend_28 { pt3dadd( 22.3016, -126.649, 133.917, 0.66 ) }
    dend_28 { pt3dadd( 22.6588, -127.305, 135.159, 0.07 ) }
    dend_28 { pt3dadd( 22.9166, -127.616, 135.773, 0.44 ) }
    dend_28 { pt3dadd( 23.9053, -128.549, 137.483, 0.22 ) }
    dend_28 { pt3dadd( 25.4011, -129.862, 139.671, 0.44 ) }
    dend_28 { pt3dadd( 25.7514, -130.192, 140.193, 0.59 ) }
    dend_28 { pt3dadd( 26.2506, -130.789, 141.166, 0.22 ) }
    dend_28 { pt3dadd( 26.6776, -131.433, 142.292, 0.37 ) }
    dend_28 { pt3dadd( 27.1475, -132.231, 143.844, 0.37 ) }
    dend_28 { pt3dadd( 27.6149, -133.106, 145.803, 0.37 ) }
    dend_28 { pt3dadd( 27.8309, -133.646, 147.108, 0.22 ) }
    dend_28 { pt3dadd( 28.0757, -134.435, 149.157, 0.22 ) }
    dend_28 { pt3dadd( 28.1225, -134.665, 149.84, 0.22 ) }
    dend_28 { pt3dadd( 28.1511, -134.93, 150.742, 0.22 ) }
    dend_28 { pt3dadd( 28.1618, -135.514, 152.928, 0.22 ) }
    dend_28 { pt3dadd( 28.2882, -135.927, 154.517, 0.22 ) }
    dend_28 { pt3dadd( 28.4829, -136.185, 155.513, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 54/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -14.1969, -19.8075, 16.2245, 0.37 ) }
    dend_27 { pt3dadd( -14.3678, -20.1146, 18.0724, 0.37 ) }
    dend_27 { pt3dadd( -14.5027, -20.32, 19.2643, 0.37 ) }
    dend_27 { pt3dadd( -14.6975, -20.5708, 20.6917, 0.37 ) }
    dend_27 { pt3dadd( -14.9615, -20.9157, 22.4813, 0.37 ) }
    dend_27 { pt3dadd( -15.105, -21.1322, 23.4864, 0.29 ) }
    dend_27 { pt3dadd( -15.2239, -21.3496, 24.4167, 0.29 ) }
    dend_27 { pt3dadd( -15.3508, -21.7546, 25.9026, 0.22 ) }
    dend_27 { pt3dadd( -15.4007, -22.0174, 26.8385, 0.22 ) }
    dend_27 { pt3dadd( -15.4289, -22.2452, 27.7075, 0.29 ) }
    dend_27 { pt3dadd( -15.4785, -22.4705, 28.7078, 0.29 ) }
    dend_27 { pt3dadd( -15.5258, -22.576, 29.3604, 0.29 ) }
    dend_27 { pt3dadd( -15.5829, -22.657, 29.9921, 0.29 ) }
    dend_27 { pt3dadd( -15.7129, -22.7809, 30.8813, 0.29 ) }
    dend_27 { pt3dadd( -15.8414, -22.8416, 31.3656, 0.29 ) }
    dend_27 { pt3dadd( -16.125, -22.9314, 32.1804, 0.29 ) }
    dend_27 { pt3dadd( -16.4846, -23.0129, 33.026, 0.29 ) }
    dend_27 { pt3dadd( -16.7046, -23.0687, 33.5239, 0.29 ) }
    dend_27 { pt3dadd( -17.2154, -23.2462, 34.741, 0.22 ) }
    dend_27 { pt3dadd( -17.9882, -23.6159, 36.801, 0.22 ) }
    dend_27 { pt3dadd( -18.3699, -23.8357, 37.9418, 0.22 ) }
    dend_27 { pt3dadd( -18.6012, -24.0008, 38.7573, 0.22 ) }
    dend_27 { pt3dadd( -18.9296, -24.3106, 40.2619, 0.22 ) }
    dend_27 { pt3dadd( -19.0714, -24.5115, 41.2614, 0.37 ) }
    dend_27 { pt3dadd( -19.1351, -24.7181, 42.2878, 0.37 ) }
    dend_27 { pt3dadd( -19.1343, -24.9027, 43.1015, 0.37 ) }
    dend_27 { pt3dadd( -19.0712, -25.1145, 43.9447, 0.37 ) }
    dend_27 { pt3dadd( -18.946, -25.3044, 44.6883, 0.22 ) }
    dend_27 { pt3dadd( -18.4526, -25.8591, 46.862, 0.22 ) }
    dend_27 { pt3dadd( -18.3818, -25.93, 47.1644, 0.22 ) }
    dend_27 { pt3dadd( -18.0004, -26.2931, 48.8003, 0.22 ) }
    dend_27 { pt3dadd( -17.8643, -26.4626, 49.5963, 0.15 ) }
    dend_27 { pt3dadd( -17.7896, -26.7742, 51.1153, 0.15 ) }
    dend_27 { pt3dadd( -17.8161, -26.8504, 51.5118, 0.22 ) }
    dend_27 { pt3dadd( -18.1535, -27.2258, 53.4698, 0.22 ) }
    dend_27 { pt3dadd( -18.2619, -27.3046, 53.9115, 0.29 ) }
    dend_27 { pt3dadd( -18.9268, -27.6814, 55.8952, 0.15 ) }
    dend_27 { pt3dadd( -19.5975, -27.9995, 57.6348, 0.15 ) }
    dend_27 { pt3dadd( -20.3161, -28.3025, 59.4006, 0.15 ) }
    dend_27 { pt3dadd( -20.53, -28.3857, 59.9528, 0.52 ) }
    dend_27 { pt3dadd( -21.0921, -28.5965, 61.4898, 0.52 ) }
    dend_27 { pt3dadd( -21.4367, -28.7102, 62.5605, 0.37 ) }
    dend_27 { pt3dadd( -22.0006, -28.8375, 64.4709, 0.29 ) }
    dend_27 { pt3dadd( -22.569, -28.9068, 66.6155, 0.29 ) }
    dend_27 { pt3dadd( -22.9153, -28.9398, 68.0067, 0.29 ) }
    dend_27 { pt3dadd( -23.2431, -28.9731, 69.5194, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_27 { pt3dadd( -23.6041, -29.0051, 71.333, 0.29 ) }
    dend_27 { pt3dadd( -23.6773, -29.005, 71.7688, 0.44 ) }
    dend_27 { pt3dadd( -23.9718, -29.0169, 73.594, 0.44 ) }
    dend_27 { pt3dadd( -24.1219, -29.0497, 74.351, 0.44 ) }
    dend_27 { pt3dadd( -24.3676, -29.1339, 75.3245, 0.44 ) }
    dend_27 { pt3dadd( -24.7028, -29.2652, 76.2086, 0.44 ) }
    dend_27 { pt3dadd( -25.7825, -29.6865, 78.2183, 0.44 ) }
    dend_27 { pt3dadd( -26.4667, -29.9399, 79.141, 0.44 ) }
    dend_27 { pt3dadd( -27.7921, -30.3887, 80.5367, 0.15 ) }
    dend_27 { pt3dadd( -28.3756, -30.5746, 81.048, 0.29 ) }
    dend_27 { pt3dadd( -29.9986, -31.0742, 82.2019, 0.22 ) }
    dend_27 { pt3dadd( -30.6777, -31.2799, 82.5744, 0.29 ) }
    dend_27 { pt3dadd( -32.6422, -31.878, 83.3877, 0.07 ) }
    dend_27 { pt3dadd( -33.8637, -32.2386, 83.8285, 0.07 ) }
    dend_27 { pt3dadd( -34.8003, -32.4892, 84.1709, 0.52 ) }
    dend_27 { pt3dadd( -35.6493, -32.7098, 84.4945, 0.96 ) }
    dend_27 { pt3dadd( -37.4248, -33.179, 85.1646, 0.07 ) }
    dend_27 { pt3dadd( -38.2015, -33.3912, 85.5027, 0.07 ) }
    dend_27 { pt3dadd( -38.9498, -33.6023, 85.8366, 0.07 ) }
    dend_27 { pt3dadd( -39.984, -33.9187, 86.3528, 0.22 ) }
    dend_27 { pt3dadd( -40.3847, -34.0544, 86.5803, 0.44 ) }
    dend_27 { pt3dadd( -41.3385, -34.4122, 87.1684, 0.22 ) }
    dend_27 { pt3dadd( -43.2384, -35.2449, 88.6144, 0.96 ) }
    dend_27 { pt3dadd( -44.4814, -35.8999, 89.7772, 0.15 ) }
    dend_27 { pt3dadd( -45.2018, -36.3446, 90.597, 0.96 ) }
    dend_27 { pt3dadd( -46.1822, -37.025, 91.873, 0.15 ) }
    dend_27 { pt3dadd( -46.5303, -37.2875, 92.4139, 0.29 ) }
    dend_27 { pt3dadd( -47.5347, -38.1525, 94.4826, 0.15 ) }
    dend_27 { pt3dadd( -48.1382, -38.8002, 96.2208, 0.22 ) }
    dend_27 { pt3dadd( -48.3944, -39.2327, 97.6315, 0.22 ) }
    dend_27 { pt3dadd( -48.4143, -39.3248, 97.9643, 0.22 ) }
    dend_27 { pt3dadd( -48.3766, -39.534, 98.848, 0.22 ) }
    dend_27 { pt3dadd( -48.2413, -39.8409, 100.433, 0.22 ) }
    dend_27 { pt3dadd( -48.1843, -39.9129, 101.027, 0.22 ) }
    dend_27 { pt3dadd( -48.1253, -39.9615, 101.97, 0.22 ) }
    dend_27 { pt3dadd( -48.1052, -39.9818, 102.873, 0.22 ) }
    dend_27 { pt3dadd( -48.1887, -40.0232, 104.195, 0.22 ) }
    dend_27 { pt3dadd( -48.3729, -40.0852, 105.155, 0.22 ) }
    dend_27 { pt3dadd( -48.7078, -40.1994, 106.013, 0.22 ) }
    dend_27 { pt3dadd( -49.0887, -40.3242, 106.727, 0.81 ) }
    dend_27 { pt3dadd( -49.6014, -40.4889, 107.489, 0.81 ) }
    dend_27 { pt3dadd( -50.1472, -40.6675, 108.233, 0.22 ) }
    dend_27 { pt3dadd( -50.6568, -40.8433, 108.875, 0.81 ) }
    dend_27 { pt3dadd( -52.0627, -41.3067, 110.576, 0.15 ) }
    dend_27 { pt3dadd( -52.3942, -41.4029, 110.977, 0.37 ) }
    dend_27 { pt3dadd( -53.2876, -41.6048, 112.041, 0.07 ) }
    dend_27 { pt3dadd( -54.2196, -41.7345, 113.121, 0.07 ) }
    dend_27 { pt3dadd( -54.6106, -41.7547, 113.593, 0.29 ) }
    dend_27 { pt3dadd( -55.4549, -41.7581, 114.699, 0.07 ) }
    dend_27 { pt3dadd( -56.0329, -41.7703, 115.54, 0.07 ) }
    dend_27 { pt3dadd( -56.2977, -41.8094, 115.967, 0.52 ) }
    dend_27 { pt3dadd( -56.8301, -41.9721, 116.873, 0.74 ) }
    dend_27 { pt3dadd( -57.618, -42.3562, 118.237, 0.37 ) }
    dend_27 { pt3dadd( -58.4028, -42.8623, 119.589, 0.37 ) }
    dend_27 { pt3dadd( -58.7998, -43.1673, 120.241, 0.59 ) }
    dend_27 { pt3dadd( -59.6085, -43.8094, 121.471, 0.29 ) }
    dend_27 { pt3dadd( -60.0145, -44.1113, 122.022, 0.29 ) }
    dend_27 { pt3dadd( -60.3837, -44.3625, 122.454, 0.88 ) }
    dend_27 { pt3dadd( -61.2414, -44.8904, 123.303, 0.22 ) }
    dend_27 { pt3dadd( -61.8189, -45.1922, 123.803, 0.66 ) }
    dend_27 { pt3dadd( -62.0537, -45.2871, 124.009, 0.66 ) }
    dend_27 { pt3dadd( -62.7766, -45.527, 124.657, 0.07 ) }
    dend_27 { pt3dadd( -63.8406, -45.8243, 125.595, 0.07 ) }
    dend_27 { pt3dadd( -64.2589, -45.9217, 125.949, 0.07 ) }
    dend_27 { pt3dadd( -64.5797, -45.988, 126.201, 0.37 ) }
    dend_27 { pt3dadd( -66.0293, -46.2935, 127.274, 0.15 ) }
    dend_27 { pt3dadd( -66.284, -46.352, 127.449, 0.15 ) }
    dend_27 { pt3dadd( -67.0935, -46.5248, 127.92, 0.52 ) }
    dend_27 { pt3dadd( -67.607, -46.6355, 128.196, 0.15 ) }
    dend_27 { pt3dadd( -68.1977, -46.7806, 128.529, 0.37 ) }
    dend_27 { pt3dadd( -69.1248, -47.0485, 129.068, 0.07 ) }
    dend_27 { pt3dadd( -69.4836, -47.1687, 129.294, 0.37 ) }
    dend_27 { pt3dadd( -70.2834, -47.4405, 129.923, 0.15 ) }
    dend_27 { pt3dadd( -71.2097, -47.6912, 130.889, 0.15 ) }
    dend_27 { pt3dadd( -71.8009, -47.789, 131.737, 0.37 ) }
    dend_27 { pt3dadd( -72.1077, -47.7925, 132.364, 0.81 ) }
    dend_27 { pt3dadd( -72.4494, -47.7173, 133.338, 1.4 ) }
    dend_27 { pt3dadd( -72.7776, -47.5532, 134.624, 1.4 ) }
    dend_27 { pt3dadd( -73.0987, -47.2434, 136.546, 0.37 ) }
    dend_27 { pt3dadd( -73.2886, -46.8544, 138.68, 0.22 ) }
    dend_27 { pt3dadd( -73.3472, -46.4919, 140.74, 0.22 ) }
    dend_27 { pt3dadd( -73.346, -46.2031, 142.336, 0.22 ) }
    dend_27 { pt3dadd( -73.3243, -46.0815, 143.011, 0.22 ) }
    dend_27 { pt3dadd( -73.2556, -45.8978, 144.11, 0.44 ) }
    dend_27 { pt3dadd( -72.9973, -45.5728, 146.525, 0.44 ) }
    dend_27 { pt3dadd( -72.7265, -45.3448, 148.628, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 86/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 0.0137911, -429.605, -2.76054, 1.33 ) }
    dend_59 { pt3dadd( 0.149294, -430.682, -3.36882, 1.33 ) }
    dend_59 { pt3dadd( 0.259948, -431.763, -3.95251, 0.37 ) }
    dend_59 { pt3dadd( 0.423348, -433.484, -4.95096, 0.22 ) }
    dend_59 { pt3dadd( 0.472326, -433.906, -5.19088, 0.22 ) }
    dend_59 { pt3dadd( 0.533076, -434.422, -5.45689, 0.37 ) }
    dend_59 { pt3dadd( 0.656252, -435.393, -5.9119, 0.37 ) }
    dend_59 { pt3dadd( 0.864967, -437.021, -6.6279, 0.22 ) }
    dend_59 { pt3dadd( 1.01981, -438.225, -7.09612, 0.96 ) }
    dend_59 { pt3dadd( 1.15926, -439.341, -7.4397, 1.18 ) }
    dend_59 { pt3dadd( 1.33251, -441.047, -7.98895, 0.29 ) }
    dend_59 { pt3dadd( 1.43181, -442.174, -8.35016, 0.29 ) }
    dend_59 { pt3dadd( 1.47317, -442.679, -8.49831, 0.29 ) }
    dend_59 { pt3dadd( 1.51071, -443.18, -8.63729, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_59 { pt3dadd( 1.54718, -443.933, -8.86075, 0.44 ) }
    dend_59 { pt3dadd( 1.58739, -445.958, -9.5403, 0.44 ) }
    dend_59 { pt3dadd( 1.59754, -446.712, -9.81104, 1.11 ) }
    dend_59 { pt3dadd( 1.59339, -448.035, -10.2704, 1.62 ) }
    dend_59 { pt3dadd( 1.57746, -449.378, -10.6961, 0.37 ) }
    dend_59 { pt3dadd( 1.52831, -451.1, -11.1627, 0.22 ) }
    dend_59 { pt3dadd( 1.48743, -452.04, -11.3693, 0.29 ) }
    dend_59 { pt3dadd( 1.43311, -452.909, -11.5015, 0.29 ) }
    dend_59 { pt3dadd( 1.32171, -454.06, -11.6558, 0.29 ) }
    dend_59 { pt3dadd( 1.1519, -455.274, -11.7814, 0.29 ) }
    dend_59 { pt3dadd( 0.875291, -456.749, -11.8642, 0.22 ) }
    dend_59 { pt3dadd( 0.757661, -457.276, -11.8632, 0.22 ) }
    dend_59 { pt3dadd( 0.646355, -457.698, -11.8596, 0.52 ) }
    dend_59 { pt3dadd( 0.427583, -458.445, -11.8496, 0.96 ) }
    dend_59 { pt3dadd( 0.0744201, -459.612, -11.832, 0.29 ) }
    dend_59 { pt3dadd( -0.274407, -460.699, -11.8125, 0.22 ) }
    dend_59 { pt3dadd( -0.80428, -462.33, -11.7826, 0.29 ) }
    dend_59 { pt3dadd( -1.18166, -463.522, -11.7628, 0.29 ) }
    dend_59 { pt3dadd( -1.5302, -464.635, -11.7454, 0.37 ) }
    dend_59 { pt3dadd( -1.86772, -465.735, -11.7298, 1.18 ) }
    dend_59 { pt3dadd( -2.16176, -466.701, -11.717, 1.92 ) }
    dend_59 { pt3dadd( -2.47356, -467.723, -11.7042, 0.88 ) }
    dend_59 { pt3dadd( -3.09916, -469.695, -11.6759, 0.22 ) }
    dend_59 { pt3dadd( -3.48283, -470.89, -11.658, 0.29 ) }
    dend_59 { pt3dadd( -3.76587, -471.76, -11.6444, 0.66 ) }
    dend_59 { pt3dadd( -4.07995, -472.729, -11.6294, 1.03 ) }
    dend_59 { pt3dadd( -4.50762, -474.047, -11.609, 0.22 ) }
    dend_59 { pt3dadd( -4.99606, -475.531, -11.585, 0.22 ) }
    dend_59 { pt3dadd( -5.55709, -477.236, -11.5574, 0.22 ) }
    dend_59 { pt3dadd( -5.82157, -478.09, -11.5172, 0.29 ) }
    dend_59 { pt3dadd( -6.07566, -478.943, -11.4578, 0.81 ) }
    dend_59 { pt3dadd( -6.27024, -479.593, -11.3999, 0.81 ) }
    dend_59 { pt3dadd( -6.53726, -480.526, -11.3032, 0.44 ) }
    dend_59 { pt3dadd( -7.12068, -482.813, -11.0695, 0.15 ) }
    dend_59 { pt3dadd( -7.59598, -484.76, -10.881, 0.15 ) }
    dend_59 { pt3dadd( -7.82661, -485.724, -10.7982, 0.59 ) }
    dend_59 { pt3dadd( -8.02047, -486.571, -10.7359, 1.99 ) }
    dend_59 { pt3dadd( -8.17485, -487.299, -10.693, 2.36 ) }
    dend_59 { pt3dadd( -8.77312, -490.229, -10.5693, 0.44 ) }
    dend_59 { pt3dadd( -9.07821, -491.768, -10.5392, 0.22 ) }
    dend_59 { pt3dadd( -9.40038, -493.4, -10.5526, 0.29 ) }
    dend_59 { pt3dadd( -9.59706, -494.427, -10.5635, 0.88 ) }
    dend_59 { pt3dadd( -9.74939, -495.29, -10.5754, 1.03 ) }
    dend_59 { pt3dadd( -9.96284, -496.632, -10.5659, 0.37 ) }
    dend_59 { pt3dadd( -10.128, -497.995, -10.5027, 0.22 ) }
    dend_59 { pt3dadd( -10.2254, -499.57, -10.3443, 0.22 ) }
    dend_59 { pt3dadd( -10.2659, -500.631, -10.2183, 0.96 ) }
    dend_59 { pt3dadd( -10.2996, -502.1, -10.0132, 0.37 ) }
    dend_59 { pt3dadd( -10.298, -503.886, -9.71596, 0.22 ) }
    dend_59 { pt3dadd( -10.2475, -504.889, -9.50776, 0.44 ) }
    dend_59 { pt3dadd( -10.0873, -506.307, -9.1288, 1.18 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 51/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 0.0137911, -429.605, -2.76054, 0.15 ) }
    dend_58 { pt3dadd( -0.15042, -430.46, -2.39783, 0.15 ) }
    dend_58 { pt3dadd( -0.225353, -430.932, -2.21886, 0.15 ) }
    dend_58 { pt3dadd( -0.28231, -431.312, -2.08058, 0.44 ) }
    dend_58 { pt3dadd( -0.537713, -432.772, -1.57124, 0.15 ) }
    dend_58 { pt3dadd( -0.576904, -432.983, -1.50161, 0.37 ) }
    dend_58 { pt3dadd( -0.629964, -433.259, -1.41578, 0.37 ) }
    dend_58 { pt3dadd( -0.856525, -434.632, -1.00658, 0.07 ) }
    dend_58 { pt3dadd( -1.04881, -435.771, -0.666303, 0.07 ) }
    dend_58 { pt3dadd( -1.28123, -437.009, -0.310999, 0.07 ) }
    dend_58 { pt3dadd( -1.39261, -437.507, -0.188186, 0.07 ) }
    dend_58 { pt3dadd( -1.52226, -438.061, -0.0479071, 0.37 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 63/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 158.61, 32.288, -235.645, 0.15 ) }
    dend_56 { pt3dadd( 162.325, 34.3787, -241.439, 0.15 ) }
    dend_56 { pt3dadd( 164.931, 36.391, -247.835, 0.15 ) }
    dend_56 { pt3dadd( 167.484, 37.2058, -254.511, 0.15 ) }
    dend_56 { pt3dadd( 170.272, 38.8631, -260.931, 0.15 ) }
    dend_56 { pt3dadd( 172.258, 40.9966, -267.508, 0.15 ) }
    dend_56 { pt3dadd( 174.203, 42.6501, -274.234, 0.15 ) }
    dend_56 { pt3dadd( 176.197, 43.3753, -281.107, 0.15 ) }
    dend_56 { pt3dadd( 178.126, 44.3314, -287.971, 0.15 ) }
    dend_56 { pt3dadd( 179.297, 44.1195, -295.065, 0.15 ) }
    dend_56 { pt3dadd( 180.731, 42.9043, -302.009, 0.15 ) }
    dend_56 { pt3dadd( 181.738, 42.8098, -309.131, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 75/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 158.61, 32.288, -235.645, 0.07 ) }
    dend_55 { pt3dadd( 167.647, 35.9283, -245.866, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 77/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 218.451, -123.424, 72.8615, 0.15 ) }
    dend_49 { pt3dadd( 219.579, -123.752, 71.4784, 0.15 ) }
    dend_49 { pt3dadd( 220.853, -124.114, 70.1331, 0.15 ) }
    dend_49 { pt3dadd( 221.12, -124.194, 69.8922, 0.15 ) }
    dend_49 { pt3dadd( 221.602, -124.351, 69.5284, 0.44 ) }
    dend_49 { pt3dadd( 221.993, -124.477, 69.2528, 0.44 ) }
    dend_49 { pt3dadd( 222.961, -124.756, 68.5808, 0.15 ) }
    dend_49 { pt3dadd( 223.733, -124.949, 68.1442, 0.29 ) }
    dend_49 { pt3dadd( 224.468, -125.109, 67.7781, 0.29 ) }
    dend_49 { pt3dadd( 225.289, -125.257, 67.37, 0.07 ) }
    dend_49 { pt3dadd( 226.406, -125.372, 66.8149, 0.07 ) }
    dend_49 { pt3dadd( 227.4, -125.404, 66.3454, 0.07 ) }
    dend_49 { pt3dadd( 227.73, -125.387, 66.2023, 0.37 ) }
    dend_49 { pt3dadd( 228.414, -125.319, 65.9353, 1.11 ) }
    dend_49 { pt3dadd( 228.657, -125.286, 65.8521, 1.11 ) }
    dend_49 { pt3dadd( 229.946, -125.079, 65.4785, 0.22 ) }
    dend_49 { pt3dadd( 231.382, -124.872, 65.1861, 0.15 ) }
    dend_49 { pt3dadd( 232.365, -124.733, 64.9517, 0.15 ) }
    dend_49 { pt3dadd( 233.021, -124.625, 64.7082, 0.15 ) }
    dend_49 { pt3dadd( 233.857, -124.459, 64.3006, 0.15 ) }
    dend_49 { pt3dadd( 234.312, -124.352, 64.0292, 0.74 ) }
    dend_49 { pt3dadd( 235.085, -124.133, 63.4723, 0.15 ) }
    dend_49 { pt3dadd( 236.567, -123.61, 62.2971, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_49 { pt3dadd( 238.057, -123.057, 61.2217, 0.15 ) }
    dend_49 { pt3dadd( 238.537, -122.877, 60.9358, 0.74 ) }
    dend_49 { pt3dadd( 238.941, -122.746, 60.754, 0.81 ) }
    dend_49 { pt3dadd( 239.34, -122.645, 60.606, 0.37 ) }
    dend_49 { pt3dadd( 240.699, -122.418, 60.2359, 0.07 ) }
    dend_49 { pt3dadd( 242.158, -122.388, 60.1024, 0.07 ) }
    dend_49 { pt3dadd( 243.212, -122.528, 60.1668, 0.37 ) }
    dend_49 { pt3dadd( 244.481, -122.887, 60.321, 0.07 ) }
    dend_49 { pt3dadd( 246.121, -123.56, 60.578, 0.07 ) }
    dend_49 { pt3dadd( 246.676, -123.855, 60.6794, 0.59 ) }
    dend_49 { pt3dadd( 248.158, -124.826, 60.981, 0.07 ) }
    dend_49 { pt3dadd( 249.758, -125.995, 61.3121, 0.07 ) }
    dend_49 { pt3dadd( 250.675, -126.717, 61.6175, 0.15 ) }
    dend_49 { pt3dadd( 251.231, -127.18, 61.8816, 0.37 ) }
    dend_49 { pt3dadd( 251.724, -127.6, 62.1636, 0.66 ) }
    dend_49 { pt3dadd( 252.168, -127.981, 62.4104, 0.59 ) }
    dend_49 { pt3dadd( 252.661, -128.412, 62.647, 0.66 ) }
    dend_49 { pt3dadd( 254.044, -129.675, 63.2431, 0.07 ) }
    dend_49 { pt3dadd( 255.004, -130.577, 63.6655, 0.07 ) }
    dend_49 { pt3dadd( 255.611, -131.17, 63.9213, 0.07 ) }
    dend_49 { pt3dadd( 256.049, -131.595, 64.0766, 0.52 ) }
    dend_49 { pt3dadd( 257.078, -132.573, 64.3604, 0.07 ) }
    dend_49 { pt3dadd( 257.682, -133.097, 64.4614, 0.07 ) }
    dend_49 { pt3dadd( 257.922, -133.267, 64.4436, 0.07 ) }
    dend_49 { pt3dadd( 258.572, -133.627, 64.3164, 0.44 ) }
    dend_49 { pt3dadd( 259.885, -134.212, 64.0647, 0.15 ) }
    dend_49 { pt3dadd( 260.365, -134.383, 63.9988, 0.37 ) }
    dend_49 { pt3dadd( 261.193, -134.595, 63.9269, 0.59 ) }
    dend_49 { pt3dadd( 263.227, -135.018, 63.8763, 0.88 ) }
    dend_49 { pt3dadd( 263.887, -135.149, 63.8355, 0.29 ) }
    dend_49 { pt3dadd( 265.545, -135.494, 63.7306, 0.15 ) }
    dend_49 { pt3dadd( 266.811, -135.754, 63.6618, 0.15 ) }
    dend_49 { pt3dadd( 267.506, -135.89, 63.6345, 0.22 ) }
    dend_49 { pt3dadd( 268.079, -135.998, 63.6253, 0.52 ) }
    dend_49 { pt3dadd( 270.292, -136.361, 63.5904, 0.52 ) }
    dend_49 { pt3dadd( 271.639, -136.533, 63.4648, 0.37 ) }
    dend_49 { pt3dadd( 273.479, -136.714, 63.14, 0.15 ) }
    dend_49 { pt3dadd( 274.71, -136.822, 62.8502, 0.15 ) }
    dend_49 { pt3dadd( 275.259, -136.871, 62.659, 0.15 ) }
    dend_49 { pt3dadd( 276.074, -136.95, 62.3073, 0.66 ) }
    dend_49 { pt3dadd( 276.429, -137.006, 62.1105, 0.66 ) }
    dend_49 { pt3dadd( 277.32, -137.245, 61.3989, 0.07 ) }
    dend_49 { pt3dadd( 277.884, -137.486, 60.8615, 0.22 ) }
    dend_49 { pt3dadd( 279.691, -138.471, 59.1488, 0.07 ) }
    dend_49 { pt3dadd( 280.22, -138.805, 58.6591, 0.22 ) }
    dend_49 { pt3dadd( 281.675, -139.847, 57.3831, 0.07 ) }
    dend_49 { pt3dadd( 282.23, -140.292, 56.9302, 0.22 ) }
    dend_49 { pt3dadd( 283.342, -141.288, 56.1332, 0.07 ) }
    dend_49 { pt3dadd( 284.217, -142.153, 55.6815, 0.07 ) }
    dend_49 { pt3dadd( 284.776, -142.745, 55.5726, 0.88 ) }
    dend_49 { pt3dadd( 285.256, -143.251, 55.5828, 0.88 ) }
    dend_49 { pt3dadd( 286.085, -144.131, 55.7584, 0.22 ) }
    dend_49 { pt3dadd( 286.701, -144.795, 55.9379, 0.59 ) }
    dend_49 { pt3dadd( 287.75, -145.97, 56.3151, 0.07 ) }
    dend_49 { pt3dadd( 289.145, -147.561, 56.8116, 0.07 ) }
    dend_49 { pt3dadd( 289.853, -148.385, 57.1102, 0.07 ) }
    dend_49 { pt3dadd( 290.319, -148.94, 57.3191, 1.11 ) }
    dend_49 { pt3dadd( 290.992, -149.749, 57.6292, 0.15 ) }
    dend_49 { pt3dadd( 291.453, -150.308, 57.8527, 0.59 ) }
    dend_49 { pt3dadd( 292.655, -151.774, 58.472, 0.15 ) }
    dend_49 { pt3dadd( 293.495, -152.824, 58.884, 0.15 ) }
    dend_49 { pt3dadd( 293.882, -153.313, 59.0844, 0.29 ) }
    dend_49 { pt3dadd( 294.462, -154.01, 59.3922, 1.25 ) }
    dend_49 { pt3dadd( 295.634, -155.316, 60.0478, 0.07 ) }
    dend_49 { pt3dadd( 296.192, -155.879, 60.3825, 0.07 ) }
    dend_49 { pt3dadd( 296.724, -156.352, 60.6504, 0.29 ) }
    dend_49 { pt3dadd( 297.117, -156.666, 60.7829, 0.29 ) }
    dend_49 { pt3dadd( 297.926, -157.251, 60.9634, 0.07 ) }
    dend_49 { pt3dadd( 298.541, -157.646, 61.0073, 0.22 ) }
    dend_49 { pt3dadd( 299.44, -158.137, 60.8983, 0.07 ) }
    dend_49 { pt3dadd( 301.526, -159.26, 60.1794, 0.07 ) }
    dend_49 { pt3dadd( 301.889, -159.448, 60.0112, 0.29 ) }
    dend_49 { pt3dadd( 302.362, -159.69, 59.7619, 0.74 ) }
    dend_49 { pt3dadd( 302.63, -159.837, 59.6101, 0.96 ) }
    dend_49 { pt3dadd( 303.124, -160.125, 59.3312, 0.44 ) }
    dend_49 { pt3dadd( 304.725, -161.054, 58.5169, 0.15 ) }
    dend_49 { pt3dadd( 305.309, -161.403, 58.2387, 0.15 ) }
    dend_49 { pt3dadd( 305.989, -161.829, 57.878, 0.29 ) }
    dend_49 { pt3dadd( 306.625, -162.223, 57.5609, 0.07 ) }
    dend_49 { pt3dadd( 307.234, -162.574, 57.3111, 0.88 ) }
    dend_49 { pt3dadd( 307.731, -162.829, 57.15, 0.88 ) }
    dend_49 { pt3dadd( 309.71, -163.761, 56.7086, 0.15 ) }
    dend_49 { pt3dadd( 310.645, -164.175, 56.5286, 0.22 ) }
    dend_49 { pt3dadd( 311.898, -164.689, 56.3323, 0.07 ) }
    dend_49 { pt3dadd( 312.93, -165.129, 56.1704, 0.07 ) }
    dend_49 { pt3dadd( 313.369, -165.343, 56.0999, 0.37 ) }
    dend_49 { pt3dadd( 313.664, -165.515, 56.0564, 0.37 ) }
    dend_49 { pt3dadd( 314.727, -166.274, 55.8637, 0.15 ) }
    dend_49 { pt3dadd( 315.206, -166.698, 55.6854, 0.88 ) }
    dend_49 { pt3dadd( 316.37, -167.923, 55.0109, 0.15 ) }
    dend_49 { pt3dadd( 316.97, -168.614, 54.5814, 0.15 ) }
    dend_49 { pt3dadd( 317.336, -169.03, 54.2924, 0.44 ) }
    dend_49 { pt3dadd( 318.249, -170.026, 53.6278, 0.07 ) }
    dend_49 { pt3dadd( 318.792, -170.583, 53.2846, 0.07 ) }
    dend_49 { pt3dadd( 319.27, -170.982, 53.0892, 0.37 ) }
    dend_49 { pt3dadd( 319.57, -171.121, 53.1243, 0.37 ) }
    dend_49 { pt3dadd( 320.353, -171.285, 53.5804, 0.07 ) }
    dend_49 { pt3dadd( 322.047, -171.416, 54.9659, 0.07 ) }
    dend_49 { pt3dadd( 322.698, -171.41, 55.5982, 0.07 ) }
    dend_49 { pt3dadd( 322.927, -171.402, 55.8361, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_49 { pt3dadd( 323.878, -171.355, 56.8317, 0.59 ) }
    dend_49 { pt3dadd( 324.431, -171.325, 57.3806, 0.59 ) }
    dend_49 { pt3dadd( 325.35, -171.269, 58.191, 0.22 ) }
    dend_49 { pt3dadd( 327.039, -171.153, 59.2595, 0.22 ) }
    dend_49 { pt3dadd( 328.308, -171.061, 59.823, 0.07 ) }
    dend_49 { pt3dadd( 329.312, -170.985, 60.0791, 0.07 ) }
    dend_49 { pt3dadd( 330.119, -170.907, 60.1923, 0.88 ) }
    dend_49 { pt3dadd( 331.402, -170.747, 60.3898, 0.07 ) }
    dend_49 { pt3dadd( 334.412, -170.302, 60.8629, 0.22 ) }
    dend_49 { pt3dadd( 335.275, -170.168, 60.9977, 0.07 ) }
    dend_49 { pt3dadd( 335.999, -170.05, 61.1457, 0.52 ) }
    dend_49 { pt3dadd( 338.633, -169.665, 61.8508, 0.07 ) }
    dend_49 { pt3dadd( 340.748, -169.366, 62.5723, 0.07 ) }
    dend_49 { pt3dadd( 341.112, -169.318, 62.7252, 0.29 ) }
    dend_49 { pt3dadd( 342.003, -169.203, 63.1618, 0.59 ) }
    dend_49 { pt3dadd( 342.757, -169.103, 63.4768, 0.59 ) }
    dend_49 { pt3dadd( 344.131, -168.877, 63.9177, 0.07 ) }
    dend_49 { pt3dadd( 344.735, -168.741, 63.9983, 0.07 ) }
    dend_49 { pt3dadd( 345.06, -168.637, 63.9938, 0.29 ) }
    dend_49 { pt3dadd( 345.374, -168.5, 63.9617, 0.29 ) }
    dend_49 { pt3dadd( 346.43, -167.917, 63.6473, 0.07 ) }
    dend_49 { pt3dadd( 347.182, -167.462, 63.3092, 0.37 ) }
    dend_49 { pt3dadd( 348.048, -166.935, 62.7985, 0.15 ) }
    dend_49 { pt3dadd( 349.196, -166.281, 62.047, 0.37 ) }
    dend_49 { pt3dadd( 350.382, -165.655, 61.2301, 0.07 ) }
    dend_49 { pt3dadd( 352.104, -164.834, 60.0366, 0.07 ) }
    dend_49 { pt3dadd( 352.587, -164.626, 59.6998, 0.37 ) }
    dend_49 { pt3dadd( 353.57, -164.238, 59.0375, 0.07 ) }
    dend_49 { pt3dadd( 354.054, -164.073, 58.7629, 0.07 ) }
    dend_49 { pt3dadd( 354.567, -163.925, 58.5604, 0.22 ) }
    dend_49 { pt3dadd( 355.817, -163.64, 58.2353, 0.07 ) }
    dend_49 { pt3dadd( 356.455, -163.498, 58.1552, 0.37 ) }
    dend_49 { pt3dadd( 356.919, -163.396, 58.1174, 0.74 ) }
    dend_49 { pt3dadd( 358.116, -163.176, 58.0395, 0.07 ) }
    dend_49 { pt3dadd( 358.765, -163.088, 57.9883, 0.07 ) }
    dend_49 { pt3dadd( 359.362, -163.055, 57.9368, 0.22 ) }
    dend_49 { pt3dadd( 360.164, -163.067, 57.9213, 0.07 ) }
    dend_49 { pt3dadd( 360.984, -163.129, 57.9451, 0.15 ) }
    dend_49 { pt3dadd( 363.196, -163.445, 58.1894, 0.07 ) }
    dend_49 { pt3dadd( 363.867, -163.586, 58.3129, 0.44 ) }
    dend_49 { pt3dadd( 365.213, -163.945, 58.6366, 0.07 ) }
    dend_49 { pt3dadd( 366.9, -164.487, 59.1284, 0.07 ) }
    dend_49 { pt3dadd( 367.585, -164.75, 59.3633, 0.29 ) }
    dend_49 { pt3dadd( 368.789, -165.297, 59.8482, 0.29 ) }
    dend_49 { pt3dadd( 369.443, -165.664, 60.1603, 0.07 ) }
    dend_49 { pt3dadd( 370.193, -166.144, 60.5665, 0.07 ) }
    dend_49 { pt3dadd( 370.399, -166.305, 60.7012, 0.07 ) }
    dend_49 { pt3dadd( 370.787, -166.657, 60.9716, 0.29 ) }
    dend_49 { pt3dadd( 371.188, -167.037, 61.3218, 0.07 ) }
    dend_49 { pt3dadd( 371.564, -167.408, 61.6765, 0.29 ) }
    dend_49 { pt3dadd( 372.462, -168.342, 62.5653, 0.07 ) }
    dend_49 { pt3dadd( 373.155, -169.102, 63.2624, 0.22 ) }
    dend_49 { pt3dadd( 373.855, -169.843, 63.9354, 0.07 ) }
    dend_49 { pt3dadd( 374.499, -170.516, 64.5263, 0.07 ) }
    dend_49 { pt3dadd( 374.957, -170.977, 64.9075, 0.44 ) }
    dend_49 { pt3dadd( 375.775, -171.719, 65.5405, 0.07 ) }
    dend_49 { pt3dadd( 376.073, -171.946, 65.7679, 0.15 ) }
    dend_49 { pt3dadd( 376.814, -172.443, 66.2426, 0.07 ) }
    dend_49 { pt3dadd( 377.208, -172.675, 66.4718, 0.07 ) }
    dend_49 { pt3dadd( 377.495, -172.81, 66.6415, 0.22 ) }
    dend_49 { pt3dadd( 378.954, -173.236, 67.7044, 0.07 ) }
    dend_49 { pt3dadd( 380.408, -173.489, 68.9204, 0.07 ) }
    dend_49 { pt3dadd( 382.486, -173.657, 70.7612, 0.07 ) }
    dend_49 { pt3dadd( 382.941, -173.641, 71.2003, 0.29 ) }
    dend_49 { pt3dadd( 383.57, -173.556, 71.8696, 0.29 ) }
    dend_49 { pt3dadd( 384.192, -173.408, 72.6882, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 66/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 218.451, -123.424, 72.8615, 0.07 ) }
    dend_48 { pt3dadd( 219.88, -122.954, 72.1502, 0.07 ) }
    dend_48 { pt3dadd( 221.008, -122.582, 71.5343, 0.07 ) }
    dend_48 { pt3dadd( 221.683, -122.347, 71.1459, 0.29 ) }
    dend_48 { pt3dadd( 223.398, -121.689, 70.2407, 0.15 ) }
    dend_48 { pt3dadd( 224.11, -121.397, 69.898, 0.52 ) }
    dend_48 { pt3dadd( 225.514, -120.789, 69.2717, 0.07 ) }
    dend_48 { pt3dadd( 226.808, -120.183, 68.7967, 0.07 ) }
    dend_48 { pt3dadd( 227.438, -119.846, 68.6528, 0.07 ) }
    dend_48 { pt3dadd( 228.663, -119.092, 68.5145, 0.22 ) }
    dend_48 { pt3dadd( 229.139, -118.754, 68.5236, 0.74 ) }
    dend_48 { pt3dadd( 229.554, -118.429, 68.5784, 1.33 ) }
    dend_48 { pt3dadd( 230.867, -117.321, 68.8571, 0.22 ) }
    dend_48 { pt3dadd( 231.483, -116.756, 69.0008, 0.22 ) }
    dend_48 { pt3dadd( 232.153, -116.109, 69.0854, 0.29 ) }
    dend_48 { pt3dadd( 233.594, -114.655, 69.1055, 0.07 ) }
    dend_48 { pt3dadd( 234.843, -113.4, 68.955, 0.07 ) }
    dend_48 { pt3dadd( 235.511, -112.765, 68.7467, 0.37 ) }
    dend_48 { pt3dadd( 237.074, -111.387, 67.8913, 0.07 ) }
    dend_48 { pt3dadd( 238.329, -110.422, 66.9867, 0.07 ) }
    dend_48 { pt3dadd( 238.719, -110.138, 66.6535, 0.22 ) }
    dend_48 { pt3dadd( 239.999, -109.331, 65.2741, 0.07 ) }
    dend_48 { pt3dadd( 241.269, -108.707, 63.6325, 0.07 ) }
    dend_48 { pt3dadd( 241.869, -108.516, 62.7626, 0.07 ) }
    dend_48 { pt3dadd( 242.189, -108.507, 62.2337, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 91/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -102.198, -167.294, 17.1905, 0.29 ) }
    dend_34 { pt3dadd( -102.653, -169.172, 16.9802, 0.29 ) }
    dend_34 { pt3dadd( -102.944, -170.453, 16.8803, 0.22 ) }
    dend_34 { pt3dadd( -103.229, -171.772, 16.804, 0.15 ) }
    dend_34 { pt3dadd( -103.421, -172.735, 16.761, 0.22 ) }
    dend_34 { pt3dadd( -103.637, -173.903, 16.7223, 0.29 ) }
    dend_34 { pt3dadd( -103.782, -174.74, 16.7338, 0.22 ) }
    dend_34 { pt3dadd( -103.916, -175.711, 16.8149, 0.37 ) }
    dend_34 { pt3dadd( -103.99, -176.294, 16.9083, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_34 { pt3dadd( -104.062, -176.873, 17.0184, 0.88 ) }
    dend_34 { pt3dadd( -104.191, -177.815, 17.2151, 1.47 ) }
    dend_34 { pt3dadd( -104.426, -179.373, 17.5531, 0.22 ) }
    dend_34 { pt3dadd( -104.615, -180.547, 17.8031, 0.15 ) }
    dend_34 { pt3dadd( -104.748, -181.32, 17.9676, 0.15 ) }
    dend_34 { pt3dadd( -104.826, -181.764, 18.0614, 0.44 ) }
    dend_34 { pt3dadd( -104.916, -182.337, 18.1748, 0.44 ) }
    dend_34 { pt3dadd( -105.007, -183.23, 18.2615, 0.15 ) }
    dend_34 { pt3dadd( -105.025, -184.2, 18.1713, 0.15 ) }
    dend_34 { pt3dadd( -104.982, -184.952, 17.984, 0.22 ) }
    dend_34 { pt3dadd( -104.934, -185.467, 17.7745, 0.52 ) }
    dend_34 { pt3dadd( -104.871, -186.118, 17.4256, 1.03 ) }
    dend_34 { pt3dadd( -104.787, -187.549, 16.3991, 0.22 ) }
    dend_34 { pt3dadd( -104.8, -188.382, 15.5943, 0.22 ) }
    dend_34 { pt3dadd( -104.834, -188.655, 15.28, 0.22 ) }
    dend_34 { pt3dadd( -104.92, -188.959, 14.8991, 0.22 ) }
    dend_34 { pt3dadd( -105.1, -189.329, 14.4211, 0.96 ) }
    dend_34 { pt3dadd( -105.59, -190.01, 13.4938, 0.22 ) }
    dend_34 { pt3dadd( -106.04, -190.471, 12.8782, 0.22 ) }
    dend_34 { pt3dadd( -106.297, -190.697, 12.5567, 0.29 ) }
    dend_34 { pt3dadd( -106.872, -191.159, 11.8538, 0.15 ) }
    dend_34 { pt3dadd( -107.355, -191.517, 11.3029, 0.29 ) }
    dend_34 { pt3dadd( -107.91, -191.89, 10.7147, 0.29 ) }
    dend_34 { pt3dadd( -108.256, -192.099, 10.3807, 0.15 ) }
    dend_34 { pt3dadd( -108.723, -192.418, 9.95629, 0.15 ) }
    dend_34 { pt3dadd( -109.071, -192.707, 9.65959, 0.59 ) }
    dend_34 { pt3dadd( -109.575, -193.258, 9.25789, 0.15 ) }
    dend_34 { pt3dadd( -109.796, -193.579, 9.07691, 0.44 ) }
    dend_34 { pt3dadd( -110.399, -194.654, 8.59005, 0.22 ) }
    dend_34 { pt3dadd( -110.8, -195.479, 8.27202, 1.4 ) }
    dend_34 { pt3dadd( -111.255, -196.495, 7.93514, 0.44 ) }
    dend_34 { pt3dadd( -111.702, -197.551, 7.61589, 0.44 ) }
    dend_34 { pt3dadd( -112.157, -198.662, 7.31973, 0.29 ) }
    dend_34 { pt3dadd( -112.516, -199.534, 7.12411, 0.66 ) }
    dend_34 { pt3dadd( -112.961, -200.617, 6.93685, 0.15 ) }
    dend_34 { pt3dadd( -113.539, -201.967, 6.684, 0.15 ) }
    dend_34 { pt3dadd( -113.809, -202.597, 6.56618, 0.15 ) }
    dend_34 { pt3dadd( -114.07, -203.162, 6.47522, 0.29 ) }
    dend_34 { pt3dadd( -114.283, -203.6, 6.41423, 0.74 ) }
    dend_34 { pt3dadd( -114.64, -204.347, 6.28635, 0.44 ) }
    dend_34 { pt3dadd( -115.154, -205.447, 6.0799, 0.15 ) }
    dend_34 { pt3dadd( -115.472, -206.167, 5.94859, 0.15 ) }
    dend_34 { pt3dadd( -115.874, -207.171, 5.77882, 0.29 ) }
    dend_34 { pt3dadd( -116.213, -208.084, 5.64385, 0.29 ) }
    dend_34 { pt3dadd( -116.524, -209.01, 5.5303, 0.74 ) }
    dend_34 { pt3dadd( -116.742, -209.73, 5.46012, 1.18 ) }
    dend_34 { pt3dadd( -117.019, -210.74, 5.3968, 0.44 ) }
    dend_34 { pt3dadd( -117.465, -212.251, 5.32285, 0.22 ) }
    dend_34 { pt3dadd( -117.74, -213.134, 5.29382, 0.29 ) }
    dend_34 { pt3dadd( -117.982, -213.835, 5.2865, 0.29 ) }
    dend_34 { pt3dadd( -118.195, -214.403, 5.29587, 0.88 ) }
    dend_34 { pt3dadd( -118.426, -214.981, 5.30583, 1.47 ) }
    dend_34 { pt3dadd( -119.164, -216.647, 5.33814, 0.22 ) }
    dend_34 { pt3dadd( -119.607, -217.574, 5.35933, 0.15 ) }
    dend_34 { pt3dadd( -120.051, -218.489, 5.38445, 0.22 ) }
    dend_34 { pt3dadd( -120.343, -219.096, 5.40432, 0.22 ) }
    dend_34 { pt3dadd( -120.571, -219.571, 5.40466, 0.66 ) }
    dend_34 { pt3dadd( -120.831, -220.152, 5.38701, 0.66 ) }
    dend_34 { pt3dadd( -121.213, -221.044, 5.33531, 0.15 ) }
    dend_34 { pt3dadd( -121.569, -221.936, 5.27314, 0.15 ) }
    dend_34 { pt3dadd( -121.809, -222.587, 5.22348, 0.74 ) }
    dend_34 { pt3dadd( -122.32, -224.161, 5.10945, 0.07 ) }
    dend_34 { pt3dadd( -122.653, -225.425, 5.00522, 0.07 ) }
    dend_34 { pt3dadd( -122.761, -225.943, 4.95947, 0.74 ) }
    dend_34 { pt3dadd( -122.968, -227.603, 4.72037, 0.07 ) }
    dend_34 { pt3dadd( -122.98, -227.972, 4.64962, 0.22 ) }
    dend_34 { pt3dadd( -122.951, -229.505, 4.3425, 0.07 ) }
    dend_34 { pt3dadd( -122.816, -230.874, 4.06058, 0.07 ) }
    dend_34 { pt3dadd( -122.756, -231.255, 3.96238, 0.22 ) }
    dend_34 { pt3dadd( -122.38, -233.086, 3.39139, 0.07 ) }
    dend_34 { pt3dadd( -122.237, -233.61, 3.16485, 0.81 ) }
    dend_34 { pt3dadd( -123.666, -243.451, 2.25512, 0.81 ) }
    dend_34 { pt3dadd( -126.029, -253.149, 2.55546, 0.81 ) }
    dend_34 { pt3dadd( -128.14, -262.877, 3.35978, 0.81 ) }
    dend_34 { pt3dadd( -130.565, -272.227, 5.89155, 0.81 ) }
    dend_34 { pt3dadd( -131.897, -281.759, 8.55383, 0.81 ) }
    dend_34 { pt3dadd( -133.773, -290.939, 12.0101, 0.81 ) }
    dend_34 { pt3dadd( -135.852, -300.584, 13.5496, 0.81 ) }
    dend_34 { pt3dadd( -138.832, -309.686, 16.377, 0.81 ) }
    dend_34 { pt3dadd( -142.702, -318.39, 19.3763, 0.81 ) }
    dend_34 { pt3dadd( -144.539, -327.416, 23.2335, 0.81 ) }
    dend_34 { pt3dadd( -145.164, -336.046, 28.2189, 0.81 ) }
    dend_34 { pt3dadd( -146.415, -344.21, 33.8325, 0.81 ) }
    dend_34 { pt3dadd( -149.734, -351.185, 40.1619, 0.81 ) }
    dend_34 { pt3dadd( -153.784, -356.852, 47.3173, 0.81 ) }
    dend_34 { pt3dadd( -158.562, -363.353, 53.2023, 0.81 ) }
    dend_34 { pt3dadd( -164.115, -367.665, 60.2943, 0.81 ) }
    dend_34 { pt3dadd( -168.336, -372.918, 67.6643, 0.81 ) }
    dend_34 { pt3dadd( -171.487, -378.075, 75.6138, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 89/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -102.198, -167.294, 17.1905, 0.15 ) }
    dend_33 { pt3dadd( -103.549, -168.688, 17.4933, 0.15 ) }
    dend_33 { pt3dadd( -104.22, -169.38, 17.6437, 0.15 ) }
    dend_33 { pt3dadd( -104.994, -170.179, 17.8172, 0.15 ) }
    dend_33 { pt3dadd( -105.337, -170.533, 17.8941, 0.88 ) }
    dend_33 { pt3dadd( -105.969, -171.185, 18.0356, 1.7 ) }
    dend_33 { pt3dadd( -106.429, -171.659, 18.1387, 1.7 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 96/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 28.4829, -136.185, 155.513, 0.07 ) }
    dend_30 { pt3dadd( 29.3233, -136.791, 156.838, 0.07 ) }
    dend_30 { pt3dadd( 30.3467, -137.618, 158.469, 0.07 ) }
    dend_30 { pt3dadd( 31.108, -138.294, 159.691, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_30 { pt3dadd( 31.286, -138.461, 160.012, 0.29 ) }
    dend_30 { pt3dadd( 32.2206, -139.315, 161.882, 0.29 ) }
    dend_30 { pt3dadd( 32.5176, -139.579, 162.561, 0.29 ) }
    dend_30 { pt3dadd( 32.689, -139.739, 163.091, 0.15 ) }
    dend_30 { pt3dadd( 32.9964, -139.955, 164.059, 0.37 ) }
    dend_30 { pt3dadd( 33.6075, -140.263, 165.904, 0.37 ) }
    dend_30 { pt3dadd( 33.9931, -140.393, 166.897, 0.37 ) }
    dend_30 { pt3dadd( 34.709, -140.517, 168.437, 0.37 ) }
    dend_30 { pt3dadd( 35.9807, -140.616, 170.849, 0.81 ) }
    dend_30 { pt3dadd( 37.0984, -140.64, 172.761, 0.15 ) }
    dend_30 { pt3dadd( 37.5912, -140.627, 173.485, 0.15 ) }
    dend_30 { pt3dadd( 38.2565, -140.589, 174.335, 0.37 ) }
    dend_30 { pt3dadd( 38.7041, -140.548, 174.849, 0.37 ) }
    dend_30 { pt3dadd( 40.2605, -140.372, 176.541, 0.07 ) }
    dend_30 { pt3dadd( 41.1848, -140.27, 177.624, 0.07 ) }
    dend_30 { pt3dadd( 41.6492, -140.238, 178.269, 0.59 ) }
    dend_30 { pt3dadd( 42.7606, -140.219, 179.976, 0.15 ) }
    dend_30 { pt3dadd( 43.1272, -140.24, 180.59, 0.29 ) }
    dend_30 { pt3dadd( 44.3239, -140.386, 182.587, 0.15 ) }
    dend_30 { pt3dadd( 45.2296, -140.558, 184.053, 0.15 ) }
    dend_30 { pt3dadd( 46.2727, -140.904, 185.96, 0.15 ) }
    dend_30 { pt3dadd( 46.4579, -141.002, 186.376, 0.15 ) }
    dend_30 { pt3dadd( 46.8617, -141.297, 187.414, 0.44 ) }
    dend_30 { pt3dadd( 47.356, -141.695, 188.771, 0.22 ) }
    dend_30 { pt3dadd( 47.86, -142.123, 190.241, 0.29 ) }
    dend_30 { pt3dadd( 48.8689, -143.072, 193.435, 0.15 ) }
    dend_30 { pt3dadd( 49.6072, -143.993, 196.356, 0.15 ) }
    dend_30 { pt3dadd( 49.8172, -144.329, 197.379, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 28/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 28.4829, -136.185, 155.513, 0.07 ) }
    dend_29 { pt3dadd( 29.8945, -137.563, 154.514, 0.07 ) }
    dend_29 { pt3dadd( 30.6251, -138.384, 154.131, 0.07 ) }
    dend_29 { pt3dadd( 31.2456, -139.234, 153.91, 0.29 ) }
    dend_29 { pt3dadd( 31.4934, -139.643, 153.884, 0.44 ) }
    dend_29 { pt3dadd( 31.8682, -140.391, 154.052, 0.15 ) }
    dend_29 { pt3dadd( 32.0597, -140.836, 154.239, 0.37 ) }
    dend_29 { pt3dadd( 32.5614, -142.52, 155.356, 0.22 ) }
    dend_29 { pt3dadd( 32.6605, -142.985, 155.716, 0.37 ) }
    dend_29 { pt3dadd( 32.8094, -143.871, 156.451, 0.37 ) }
    dend_29 { pt3dadd( 32.9233, -145.315, 157.802, 0.15 ) }
    dend_29 { pt3dadd( 32.9319, -146.167, 158.662, 0.15 ) }
    dend_29 { pt3dadd( 32.9194, -146.543, 159.083, 0.37 ) }
    dend_29 { pt3dadd( 32.8944, -147.027, 159.653, 0.37 ) }
    dend_29 { pt3dadd( 32.8736, -147.284, 159.987, 0.44 ) }
    dend_29 { pt3dadd( 32.7413, -148.572, 161.823, 0.22 ) }
    dend_29 { pt3dadd( 32.7478, -148.901, 162.325, 0.22 ) }
    dend_29 { pt3dadd( 32.9172, -149.615, 163.563, 0.22 ) }
    dend_29 { pt3dadd( 33.0527, -149.882, 164.068, 0.22 ) }
    dend_29 { pt3dadd( 33.242, -150.114, 164.515, 0.59 ) }
    dend_29 { pt3dadd( 33.7154, -150.568, 165.297, 0.15 ) }
    dend_29 { pt3dadd( 34.5801, -151.337, 166.599, 0.15 ) }
    dend_29 { pt3dadd( 34.9844, -151.751, 167.287, 0.15 ) }
    dend_29 { pt3dadd( 35.2596, -152.08, 167.788, 0.37 ) }
    dend_29 { pt3dadd( 35.4681, -152.369, 168.218, 0.74 ) }
    dend_29 { pt3dadd( 35.7854, -152.991, 169.082, 0.22 ) }
    dend_29 { pt3dadd( 36.4184, -155.086, 171.545, 0.22 ) }
    dend_29 { pt3dadd( 36.5414, -155.786, 172.259, 0.66 ) }
    dend_29 { pt3dadd( 36.6438, -156.684, 173.1, 0.22 ) }
    dend_29 { pt3dadd( 36.6923, -157.327, 173.658, 0.44 ) }
    dend_29 { pt3dadd( 36.7654, -158.819, 174.837, 0.15 ) }
    dend_29 { pt3dadd( 36.8107, -160.126, 175.734, 0.22 ) }
    dend_29 { pt3dadd( 36.855, -161.557, 176.482, 0.22 ) }
    dend_29 { pt3dadd( 36.8557, -161.897, 176.655, 0.22 ) }
    dend_29 { pt3dadd( 36.839, -162.403, 176.906, 0.44 ) }
    dend_29 { pt3dadd( 36.8128, -163.05, 177.225, 0.44 ) }
    dend_29 { pt3dadd( 36.7798, -164.105, 177.842, 0.22 ) }
    dend_29 { pt3dadd( 36.7381, -165.009, 178.481, 0.37 ) }
    dend_29 { pt3dadd( 36.6935, -165.823, 179.073, 0.37 ) }
    dend_29 { pt3dadd( 36.6717, -166.36, 179.439, 0.59 ) }
    dend_29 { pt3dadd( 36.6472, -167.394, 180.103, 0.07 ) }
    dend_29 { pt3dadd( 36.6405, -168.977, 181.018, 0.15 ) }
    dend_29 { pt3dadd( 36.661, -169.821, 181.439, 0.15 ) }
    dend_29 { pt3dadd( 36.7117, -170.602, 181.783, 0.96 ) }
    dend_29 { pt3dadd( 36.9249, -172.699, 182.602, 0.15 ) }
    dend_29 { pt3dadd( 36.9914, -173.16, 182.749, 0.59 ) }
    dend_29 { pt3dadd( 37.3982, -175.222, 183.244, 0.22 ) }
    dend_29 { pt3dadd( 37.5824, -175.942, 183.363, 0.37 ) }
    dend_29 { pt3dadd( 37.8169, -176.614, 183.46, 0.74 ) }
    dend_29 { pt3dadd( 37.9748, -176.953, 183.519, 0.96 ) }
    dend_29 { pt3dadd( 38.7739, -178.225, 183.68, 0.22 ) }
    dend_29 { pt3dadd( 39.2673, -178.888, 183.716, 0.22 ) }
    dend_29 { pt3dadd( 39.758, -179.447, 183.648, 0.59 ) }
    dend_29 { pt3dadd( 40.7791, -180.559, 183.289, 0.15 ) }
    dend_29 { pt3dadd( 41.4973, -181.34, 182.871, 0.15 ) }
    dend_29 { pt3dadd( 42.4752, -182.397, 182.071, 0.59 ) }
    dend_29 { pt3dadd( 42.6475, -182.582, 181.901, 0.59 ) }
    dend_29 { pt3dadd( 43.5588, -183.624, 180.885, 0.15 ) }
    dend_29 { pt3dadd( 44.3618, -184.611, 179.898, 0.59 ) }
    dend_29 { pt3dadd( 44.967, -185.428, 179.103, 0.22 ) }
    dend_29 { pt3dadd( 45.6124, -186.348, 178.275, 0.81 ) }
    dend_29 { pt3dadd( 46.5248, -187.724, 177.362, 0.22 ) }
    dend_29 { pt3dadd( 46.8118, -188.173, 177.157, 0.22 ) }
    dend_29 { pt3dadd( 47.1874, -188.773, 177.054, 0.52 ) }
    dend_29 { pt3dadd( 47.9295, -189.997, 177.139, 0.15 ) }
    dend_29 { pt3dadd( 48.2396, -190.505, 177.262, 0.37 ) }
    dend_29 { pt3dadd( 49.4785, -192.361, 178.095, 0.07 ) }
    dend_29 { pt3dadd( 50.0142, -193.06, 178.528, 0.29 ) }
    dend_29 { pt3dadd( 50.6271, -193.695, 178.999, 0.29 ) }
    dend_29 { pt3dadd( 51.2454, -194.211, 179.44, 0.15 ) }
    dend_29 { pt3dadd( 51.7491, -194.57, 179.779, 0.29 ) }
    dend_29 { pt3dadd( 53.0002, -195.437, 180.583, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_29 { pt3dadd( 53.4606, -195.751, 180.891, 0.74 ) }
    dend_29 { pt3dadd( 54.4303, -196.445, 181.66, 0.15 ) }
    dend_29 { pt3dadd( 54.984, -196.925, 182.181, 0.15 ) }
    dend_29 { pt3dadd( 55.4665, -197.476, 182.728, 0.52 ) }
    dend_29 { pt3dadd( 56.077, -198.521, 183.699, 0.22 ) }
    dend_29 { pt3dadd( 56.582, -199.852, 184.848, 0.22 ) }
    dend_29 { pt3dadd( 56.7466, -200.417, 185.33, 0.96 ) }
    dend_29 { pt3dadd( 56.9978, -201.475, 186.263, 0.29 ) }
    dend_29 { pt3dadd( 57.1837, -202.443, 187.191, 0.59 ) }
    dend_29 { pt3dadd( 57.3853, -203.632, 188.384, 0.29 ) }
    dend_29 { pt3dadd( 57.4727, -204.458, 189.214, 0.29 ) }
    dend_29 { pt3dadd( 57.502, -204.877, 189.637, 0.22 ) }
    dend_29 { pt3dadd( 57.528, -205.743, 190.602, 0.74 ) }
    dend_29 { pt3dadd( 57.5247, -207.198, 192.458, 0.07 ) }
    dend_29 { pt3dadd( 57.5166, -207.618, 193.026, 0.07 ) }
    dend_29 { pt3dadd( 57.4936, -208.155, 193.745, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 16/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -10.0873, -506.307, -9.1288, 0.22 ) }
    dend_61 { pt3dadd( -10.0217, -507.335, -9.28974, 0.22 ) }
    dend_61 { pt3dadd( -9.98585, -508.381, -9.35045, 0.15 ) }
    dend_61 { pt3dadd( -9.96515, -509.161, -9.24084, 0.15 ) }
    dend_61 { pt3dadd( -9.96585, -509.409, -9.17855, 0.37 ) }
    dend_61 { pt3dadd( -9.97445, -509.669, -9.09915, 0.81 ) }
    dend_61 { pt3dadd( -9.99655, -510.101, -8.96281, 0.81 ) }
    dend_61 { pt3dadd( -10.0508, -511.062, -8.62625, 0.22 ) }
    dend_61 { pt3dadd( -10.1159, -512.337, -8.1805, 0.22 ) }
    dend_61 { pt3dadd( -10.1571, -513.309, -7.86354, 0.29 ) }
    dend_61 { pt3dadd( -10.1958, -513.942, -7.68382, 0.88 ) }
    dend_61 { pt3dadd( -10.2539, -514.762, -7.47167, 1.62 ) }
    dend_61 { pt3dadd( -10.3647, -516.002, -7.20142, 0.37 ) }
    dend_61 { pt3dadd( -10.4406, -516.707, -7.08687, 0.52 ) }
    dend_61 { pt3dadd( -10.5234, -517.353, -7.0105, 0.66 ) }
    dend_61 { pt3dadd( -10.6548, -518.165, -6.90771, 0.22 ) }
    dend_61 { pt3dadd( -10.8206, -518.988, -6.7975, 0.22 ) }
    dend_61 { pt3dadd( -11.0946, -520.059, -6.63937, 0.07 ) }
    dend_61 { pt3dadd( -11.2507, -520.577, -6.53675, 0.07 ) }
    dend_61 { pt3dadd( -11.4042, -521.067, -6.4289, 0.88 ) }
    dend_61 { pt3dadd( -11.7493, -522.181, -6.18153, 0.15 ) }
    dend_61 { pt3dadd( -11.9656, -522.812, -6.04724, 0.44 ) }
    dend_61 { pt3dadd( -12.2612, -523.557, -5.87419, 0.22 ) }
    dend_61 { pt3dadd( -12.7552, -524.709, -5.5754, 0.22 ) }
    dend_61 { pt3dadd( -12.9781, -525.2, -5.44032, 0.88 ) }
    dend_61 { pt3dadd( -13.3457, -525.972, -5.21669, 1.4 ) }
    dend_61 { pt3dadd( -14.0493, -527.366, -4.80526, 0.15 ) }
    dend_61 { pt3dadd( -14.742, -528.638, -4.45103, 0.15 ) }
    dend_61 { pt3dadd( -14.9803, -529.062, -4.34559, 0.15 ) }
    dend_61 { pt3dadd( -15.1206, -529.308, -4.29499, 0.52 ) }
    dend_61 { pt3dadd( -15.399, -529.807, -4.19751, 1.03 ) }
    dend_61 { pt3dadd( -15.8743, -530.697, -4.04769, 0.22 ) }
    dend_61 { pt3dadd( -16.4395, -531.874, -3.90188, 0.15 ) }
    dend_61 { pt3dadd( -16.9214, -532.925, -3.81308, 0.15 ) }
    dend_61 { pt3dadd( -17.0549, -533.23, -3.78907, 0.66 ) }
    dend_61 { pt3dadd( -17.2766, -533.764, -3.7515, 1.33 ) }
    dend_61 { pt3dadd( -17.8549, -535.246, -3.61756, 0.15 ) }
    dend_61 { pt3dadd( -18.3042, -536.459, -3.59901, 0.15 ) }
    dend_61 { pt3dadd( -18.5136, -537.027, -3.62327, 0.66 ) }
    dend_61 { pt3dadd( -18.6599, -537.391, -3.6543, 0.66 ) }
    dend_61 { pt3dadd( -19.4206, -539.209, -3.87696, 0.07 ) }
    dend_61 { pt3dadd( -19.9725, -540.504, -4.08975, 0.07 ) }
    dend_61 { pt3dadd( -20.8049, -542.54, -4.40094, 0.37 ) }
    dend_61 { pt3dadd( -20.9565, -542.931, -4.434, 0.74 ) }
    dend_61 { pt3dadd( -21.2185, -543.646, -4.44196, 0.96 ) }
    dend_61 { pt3dadd( -21.4372, -544.295, -4.34278, 0.96 ) }
    dend_61 { pt3dadd( -21.4875, -544.46, -4.288, 0.96 ) }
    dend_61 { pt3dadd( -21.9349, -546.055, -3.58331, 0.07 ) }
    dend_61 { pt3dadd( -22.2955, -547.367, -2.87867, 0.07 ) }
    dend_61 { pt3dadd( -22.4245, -547.861, -2.60472, 0.15 ) }
    dend_61 { pt3dadd( -22.8333, -549.527, -1.64591, 0.07 ) }
    dend_61 { pt3dadd( -23.0548, -550.312, -1.13395, 0.07 ) }
    dend_61 { pt3dadd( -23.1665, -550.675, -0.866317, 0.07 ) }
    dend_61 { pt3dadd( -23.3257, -551.128, -0.47725, 0.52 ) }
    dend_61 { pt3dadd( -23.5584, -551.75, 0.13385, 1.11 ) }
    dend_61 { pt3dadd( -23.7558, -552.263, 0.720167, 1.25 ) }
    dend_61 { pt3dadd( -24.1488, -553.334, 2.1796, 0.15 ) }
    dend_61 { pt3dadd( -24.4884, -554.24, 3.48556, 0.15 ) }
    dend_61 { pt3dadd( -24.6767, -554.728, 4.18554, 0.15 ) }
    dend_61 { pt3dadd( -24.8831, -555.252, 4.93072, 0.74 ) }
    dend_61 { pt3dadd( -25.3543, -556.384, 6.46809, 0.15 ) }
    dend_61 { pt3dadd( -25.8926, -557.645, 8.06972, 0.74 ) }
    dend_61 { pt3dadd( -26.2164, -558.41, 8.93796, 0.15 ) }
    dend_61 { pt3dadd( -26.4415, -558.908, 9.41588, 0.29 ) }
    dend_61 { pt3dadd( -26.9633, -560.054, 10.3753, 0.07 ) }
    dend_61 { pt3dadd( -27.2455, -560.666, 10.8336, 0.07 ) }
    dend_61 { pt3dadd( -27.3532, -560.89, 10.9653, 0.96 ) }
    dend_61 { pt3dadd( -27.5437, -561.28, 11.1505, 0.74 ) }
    dend_61 { pt3dadd( -28.0951, -562.545, 11.7759, 0.15 ) }
    dend_61 { pt3dadd( -28.5694, -563.738, 12.3278, 0.15 ) }
    dend_61 { pt3dadd( -28.7588, -564.262, 12.5374, 0.66 ) }
    dend_61 { pt3dadd( -28.8395, -564.504, 12.6313, 0.66 ) }
    dend_61 { pt3dadd( -29.1466, -565.537, 12.9922, 0.07 ) }
    dend_61 { pt3dadd( -29.4033, -566.494, 13.2321, 0.07 ) }
    dend_61 { pt3dadd( -29.6817, -567.652, 13.3902, 0.07 ) }
    dend_61 { pt3dadd( -29.8289, -568.248, 13.3779, 0.07 ) }
    dend_61 { pt3dadd( -29.9737, -568.78, 13.3186, 0.29 ) }
    dend_61 { pt3dadd( -30.258, -569.801, 13.1274, 0.15 ) }
    dend_61 { pt3dadd( -30.6354, -570.994, 12.7343, 0.15 ) }
    dend_61 { pt3dadd( -30.8114, -571.449, 12.5117, 0.29 ) }
    dend_61 { pt3dadd( -31.0918, -572.102, 12.1433, 0.81 ) }
    dend_61 { pt3dadd( -31.2547, -572.431, 11.9373, 0.96 ) }
    dend_61 { pt3dadd( -31.7542, -573.312, 11.3349, 0.22 ) }
    dend_61 { pt3dadd( -32.4313, -574.382, 10.5862, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_61 { pt3dadd( -33.1995, -575.56, 9.81927, 0.15 ) }
    dend_61 { pt3dadd( -33.4824, -575.989, 9.54305, 0.22 ) }
    dend_61 { pt3dadd( -34.0914, -576.898, 8.95175, 0.07 ) }
    dend_61 { pt3dadd( -34.4489, -577.426, 8.59127, 0.07 ) }
    dend_61 { pt3dadd( -34.7156, -577.801, 8.33081, 0.66 ) }
    dend_61 { pt3dadd( -35.0536, -578.28, 8.01824, 1.25 ) }
    dend_61 { pt3dadd( -35.6463, -579.1, 7.46422, 0.15 ) }
    dend_61 { pt3dadd( -36.2399, -579.911, 6.90077, 0.15 ) }
    dend_61 { pt3dadd( -36.56, -580.343, 6.60278, 0.15 ) }
    dend_61 { pt3dadd( -36.8523, -580.723, 6.33319, 0.29 ) }
    dend_61 { pt3dadd( -37.5255, -581.555, 5.72128, 0.07 ) }
    dend_61 { pt3dadd( -38.0947, -582.238, 5.22628, 0.07 ) }
    dend_61 { pt3dadd( -38.4471, -582.66, 4.94424, 0.88 ) }
    dend_61 { pt3dadd( -39.0313, -583.388, 4.55265, 0.15 ) }
    dend_61 { pt3dadd( -39.3433, -583.804, 4.38097, 0.22 ) }
    dend_61 { pt3dadd( -39.8284, -584.507, 4.17137, 0.22 ) }
    dend_61 { pt3dadd( -40.0805, -584.906, 4.09902, 0.59 ) }
    dend_61 { pt3dadd( -40.2431, -585.182, 4.07134, 0.74 ) }
    dend_61 { pt3dadd( -40.8942, -586.368, 4.00634, 0.07 ) }
    dend_61 { pt3dadd( -41.5066, -587.623, 3.98697, 0.07 ) }
    dend_61 { pt3dadd( -41.7889, -588.269, 3.98589, 0.07 ) }
    dend_61 { pt3dadd( -41.8976, -588.576, 4.00896, 0.52 ) }
    dend_61 { pt3dadd( -42.0223, -588.996, 4.0586, 0.52 ) }
    dend_61 { pt3dadd( -42.2302, -589.822, 4.17121, 0.07 ) }
    dend_61 { pt3dadd( -42.4063, -590.727, 4.31137, 0.07 ) }
    dend_61 { pt3dadd( -42.493, -591.235, 4.38627, 0.66 ) }
    dend_61 { pt3dadd( -42.7571, -592.955, 4.59773, 0.15 ) }
    dend_61 { pt3dadd( -42.8168, -593.304, 4.62905, 0.15 ) }
    dend_61 { pt3dadd( -42.9764, -594.207, 4.68343, 0.15 ) }
    dend_61 { pt3dadd( -43.0814, -594.792, 4.66621, 0.15 ) }
    dend_61 { pt3dadd( -43.2808, -595.788, 4.54456, 0.15 ) }
    dend_61 { pt3dadd( -43.5101, -596.774, 4.30517, 0.15 ) }
    dend_61 { pt3dadd( -43.7769, -597.831, 3.93637, 0.15 ) }
    dend_61 { pt3dadd( -43.8737, -598.184, 3.80613, 0.37 ) }
    dend_61 { pt3dadd( -44.3485, -599.701, 3.23016, 0.15 ) }
    dend_61 { pt3dadd( -44.5891, -600.419, 2.93557, 0.15 ) }
    dend_61 { pt3dadd( -44.9552, -601.42, 2.48648, 0.37 ) }
    dend_61 { pt3dadd( -45.1142, -601.805, 2.2926, 0.37 ) }
    dend_61 { pt3dadd( -45.5185, -602.716, 1.79901, 0.37 ) }
    dend_61 { pt3dadd( -45.7773, -603.215, 1.53575, 0.07 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 40/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -10.0873, -506.307, -9.1288, 0.15 ) }
    dend_60 { pt3dadd( -10.4916, -507.214, -8.55742, 0.15 ) }
    dend_60 { pt3dadd( -10.7274, -507.735, -8.23154, 0.44 ) }
    dend_60 { pt3dadd( -11.3386, -508.99, -7.48669, 0.15 ) }
    dend_60 { pt3dadd( -12.0001, -510.28, -6.75889, 0.15 ) }
    dend_60 { pt3dadd( -12.3603, -510.926, -6.37174, 0.15 ) }
    dend_60 { pt3dadd( -12.5989, -511.321, -6.11296, 0.81 ) }
    dend_60 { pt3dadd( -13.6314, -512.845, -4.96847, 0.15 ) }
    dend_60 { pt3dadd( -14.5521, -514.0, -4.01855, 0.15 ) }
    dend_60 { pt3dadd( -14.8998, -514.357, -3.69913, 0.66 ) }
    dend_60 { pt3dadd( -15.8679, -515.183, -2.91701, 0.15 ) }
    dend_60 { pt3dadd( -16.8005, -515.864, -2.22693, 0.15 ) }
    dend_60 { pt3dadd( -17.551, -516.332, -1.67876, 0.15 ) }
    dend_60 { pt3dadd( -18.0932, -516.608, -1.30459, 0.15 ) }
    dend_60 { pt3dadd( -18.5235, -516.833, -1.02221, 0.88 ) }
    dend_60 { pt3dadd( -18.8609, -517.036, -0.819647, 0.88 ) }
    dend_60 { pt3dadd( -20.1477, -517.976, -0.163885, 0.07 ) }
    dend_60 { pt3dadd( -20.6311, -518.394, 0.0596412, 0.07 ) }
    dend_60 { pt3dadd( -20.9709, -518.721, 0.219075, 0.66 ) }
    dend_60 { pt3dadd( -22.2969, -520.14, 0.884517, 0.07 ) }
    dend_60 { pt3dadd( -22.6417, -520.54, 1.06536, 0.44 ) }
    dend_60 { pt3dadd( -23.1448, -521.166, 1.3242, 0.07 ) }
    dend_60 { pt3dadd( -23.3591, -521.457, 1.41146, 0.22 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 63/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -45.7773, -603.215, 1.53575, 0.07 ) }
    dend_63 { pt3dadd( -46.7452, -603.514, 2.9027, 0.07 ) }
    dend_63 { pt3dadd( -47.3363, -603.707, 3.69495, 0.15 ) }
    dend_63 { pt3dadd( -48.0236, -603.989, 4.64181, 0.07 ) }
    dend_63 { pt3dadd( -48.3688, -604.142, 5.04532, 0.07 ) }
    dend_63 { pt3dadd( -48.5556, -604.223, 5.23625, 0.37 ) }
    dend_63 { pt3dadd( -49.2267, -604.533, 5.84388, 0.07 ) }
    dend_63 { pt3dadd( -49.5939, -604.732, 6.06457, 0.22 ) }
    dend_63 { pt3dadd( -50.5192, -605.258, 6.44453, 0.07 ) }
    dend_63 { pt3dadd( -51.6888, -605.939, 6.76244, 0.07 ) }
    dend_63 { pt3dadd( -52.2069, -606.244, 6.83402, 0.37 ) }
    dend_63 { pt3dadd( -53.0222, -606.717, 6.8159, 0.07 ) }
    dend_63 { pt3dadd( -54.2634, -607.417, 6.59368, 0.07 ) }
    dend_63 { pt3dadd( -54.7048, -607.664, 6.45713, 0.22 ) }
    dend_63 { pt3dadd( -55.1516, -607.91, 6.25678, 0.22 ) }
    dend_63 { pt3dadd( -56.0822, -608.414, 5.73622, 0.07 ) }
    dend_63 { pt3dadd( -56.9626, -608.85, 5.15167, 0.07 ) }
    dend_63 { pt3dadd( -57.6248, -609.153, 4.67447, 0.07 ) }
    dend_63 { pt3dadd( -58.2269, -609.41, 4.21796, 0.22 ) }
    dend_63 { pt3dadd( -58.806, -609.65, 3.7543, 0.52 ) }
    dend_63 { pt3dadd( -59.6287, -609.991, 3.07125, 0.22 ) }
    dend_63 { pt3dadd( -60.6424, -610.382, 2.16072, 0.66 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 85/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -45.7773, -603.215, 1.53575, 0.07 ) }
    dend_62 { pt3dadd( -45.7403, -603.753, 1.49476, 0.07 ) }
    dend_62 { pt3dadd( -45.7325, -604.01, 1.4797, 0.15 ) }
    dend_62 { pt3dadd( -45.7457, -604.847, 1.44974, 0.07 ) }
    dend_62 { pt3dadd( -45.7602, -605.112, 1.44303, 0.15 ) }
    dend_62 { pt3dadd( -45.7814, -605.381, 1.43833, 0.15 ) }
    dend_62 { pt3dadd( -45.8444, -606.181, 1.42435, 0.07 ) }
    dend_62 { pt3dadd( -45.8794, -606.491, 1.42427, 0.29 ) }
    dend_62 { pt3dadd( -45.9671, -607.085, 1.43226, 0.07 ) }
    dend_62 { pt3dadd( -46.0919, -607.727, 1.44843, 0.07 ) }
    dend_62 { pt3dadd( -46.1416, -607.96, 1.45619, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
    ModelViewParmSubset_2 = new SectionList()
    dend_41 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_14 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_7 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_21 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_18 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_16 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_15 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_11 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_4 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_52 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_43 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_38 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_37 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_23 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_6 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_2 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_57 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_54 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_50 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_47 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_40 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_39 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_35 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_28 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_27 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_59 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_49 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_34 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_30 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_29 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_61 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_41 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_25 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_42 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_53 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_32 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_33 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_5 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_10 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_22 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_55 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_58 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_60 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_63 OneSecGrp_SectionRef_66.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_14 nseg = 15
    dend_7 nseg = 3
    dend_21 nseg = 15
    dend_18 nseg = 15
    dend_16 nseg = 5
    dend_15 nseg = 9
    dend_11 nseg = 7
    dend_8 nseg = 13
    dend_4 nseg = 9
    dend_52 nseg = 11
    dend_43 nseg = 11
    dend_38 nseg = 7
    dend_37 nseg = 11
    dend_31 nseg = 9
    dend_23 nseg = 9
    dend_20 nseg = 7
    dend_19 nseg = 5
    dend_13 nseg = 5
    dend_12 nseg = 5
    dend_6 nseg = 7
    dend_3 nseg = 13
    dend_2 nseg = 17
    dend_57 nseg = 21
    dend_54 nseg = 15
    dend_50 nseg = 9
    dend_47 nseg = 13
    dend_45 nseg = 5
    dend_40 nseg = 7
    dend_39 nseg = 3
    dend_35 nseg = 11
    dend_28 nseg = 9
    dend_27 nseg = 7
    dend_59 nseg = 5
    dend_56 nseg = 3
    dend_49 nseg = 11
    dend_34 nseg = 13
    dend_30 nseg = 3
    dend_29 nseg = 5
    dend_61 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_LBC_b66dd6b653_0_0


