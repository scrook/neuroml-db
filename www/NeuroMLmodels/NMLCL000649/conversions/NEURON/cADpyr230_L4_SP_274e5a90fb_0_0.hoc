// Cell: cADpyr230_L4_SP_274e5a90fb_0_0
/*
{
  "id" : "cADpyr230_L4_SP_274e5a90fb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.7762, -6.65843, 1.68973, 1.62225", "-3.37091, -6.05756, 1.49202, 2.68302", "-2.96562, -5.45669, 1.29431, 4.18183", "-2.56033, -4.85582, 1.09659, 5.23637", "-2.15504, -4.25495, 0.898882, 5.96111", "-1.74975, -3.65409, 0.701169, 6.6575", "-1.34446, -3.05322, 0.503456, 7.22539", "-0.939173, -2.45235, 0.305744, 7.74314", "-0.533883, -1.85148, 0.108031, 8.02668", "-0.128593, -1.25061, -0.0896814, 7.99979", "0.276697, -0.649743, -0.287394, 7.71194", "0.681986, -0.0488738, -0.485107, 7.51065", "1.08728, 0.551995, -0.682819, 7.35885", "1.49257, 1.15286, -0.880532, 7.1093", "1.89786, 1.75373, -1.07824, 6.85975", "2.30315, 2.3546, -1.27596, 6.61021", "2.70844, 2.95547, -1.47367, 6.35799", "3.11373, 3.55634, -1.67138, 5.44931", "3.51902, 4.15721, -1.86909, 4.29173", "3.92431, 4.75808, -2.06681, 2.41932", "4.3296, 5.35894, -2.26452, 1.40798" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-0.790603, 6.06157, -1.87579, 2.22", "-0.910639, 6.84393, -2.11745, 2.22", "-0.931729, 9.2326, -1.98366, 1.66", "-0.974389, 14.0637, -1.71306, 1.66", "-0.995919, 16.5017, -1.5765, 1.39", "-1.01525, 18.6916, -1.45384, 1.39", "-1.03161, 20.5438, -1.3501, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.42677, -4.2805, -2.46667, 1.94", "-4.08154, -5.10331, -2.91262, 1.94", "-4.84072, -7.39663, -3.32099, 1.11", "-5.51413, -9.43084, -3.68322, 1.11", "-5.94992, -10.7473, -3.91763, 1.11", "-6.65471, -12.8763, -4.29674, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.13212, -1.70015, -2.57467, 0.83", "-11.2221, -3.86943, -5.49939, 0.83", "-12.7247, -5.12007, -5.13311, 0.83", "-17.1181, -8.69771, -4.33001, 1.11", "-21.216, -11.8342, -3.44739, 0.55", "-23.0036, -13.1656, -3.06353, 0.55", "-25.854, -15.1571, -2.53872, 0.55", "-28.7014, -16.7363, -2.34235, 0.55", "-30.0489, -17.4677, -2.32152, 0.55", "-33.9232, -19.4187, -2.359, 0.55", "-36.9888, -21.0014, -2.1962, 0.55", "-40.1098, -22.4666, -1.92565, 0.83", "-43.4316, -23.9368, -1.50412, 0.55", "-44.8299, -24.5779, -1.33209, 0.83", "-48.2727, -26.25, -1.12879, 0.55", "-52.7934, -28.5992, -1.24554, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.00657, -1.82482, 3.02105, 1.39", "10.7987, -4.18432, 6.66285, 1.39", "12.032, -4.7582, 4.45406, 1.39", "13.2043, -5.30367, 2.35461, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.10871, 3.84586, -3.97262, 1.39", "4.12133, 5.08917, -5.29699, 1.39", "7.19063, 5.40688, -9.18462, 1.39", "10.1185, 5.70995, -12.893, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.3296, 5.35894, -2.26452, 0.67", "12.7175, 17.7945, -2.26452, 0.67", "21.1054, 30.2301, -2.26452, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-1.03161, 20.5438, -1.3501, 1.94", "-3.12977, 25.1008, -1.80778, 1.11", "-4.45957, 27.9891, -2.09786, 1.11" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-1.03161, 20.5438, -1.3501, 1.94", "-4.58231, 21.8938, 0.105907, 1.11", "-7.59571, 22.8915, 1.39304, 0.83", "-9.19206, 23.3613, 2.115, 0.83", "-11.8056, 24.1402, 3.38306, 0.83", "-13.9742, 24.7259, 4.4024, 0.83", "-15.2496, 25.0135, 4.99398, 0.83", "-17.5931, 25.3958, 6.31763, 0.83", "-19.2998, 25.5234, 7.30625, 0.83", "-21.3328, 25.5348, 8.51624, 0.83", "-23.5666, 25.4271, 9.91157, 0.83", "-25.2983, 25.3848, 11.0711, 0.83", "-27.51, 25.4048, 12.6259, 0.83", "-29.0818, 25.5562, 13.7637, 0.55", "-31.3032, 25.885, 15.3773, 0.55", "-33.9519, 26.5284, 17.3475, 0.55", "-35.3266, 27.0019, 18.4451, 0.55", "-36.7973, 27.6353, 19.6137, 0.55", "-39.4021, 28.731, 21.6072, 0.55", "-39.8731, 28.9326, 21.9758, 0.83", "-42.6395, 30.0482, 24.1685, 0.55", "-44.8724, 30.8274, 25.9503, 0.55", "-45.7349, 31.1211, 26.6765, 0.55", "-49.0374, 32.2912, 29.4748, 0.55", "-50.3617, 32.7287, 30.7042, 0.55", "-51.4622, 33.1406, 31.8229, 0.55", "-52.4055, 33.532, 32.815, 0.55", "-54.1698, 34.4374, 34.7051, 0.55", "-55.5187, 35.2141, 36.2005, 0.55", "-57.2105, 36.4814, 38.5164, 0.55", "-58.4252, 37.4214, 40.4566, 0.55", "-59.1604, 38.0298, 41.9648, 1.11", "-59.7704, 38.558, 43.3239, 0.55", "-60.3559, 39.0082, 44.7189, 0.83", "-61.438, 39.9846, 47.9379, 0.28", "-61.9181, 40.4418, 49.3895, 0.28", "-62.5251, 40.9368, 51.9031, 0.55" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.65471, -12.8763, -4.29674, 1.94", "-7.55205, -14.4508, -7.05346, 1.39", "-8.04589, -15.3174, -8.57058, 1.39" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-6.65471, -12.8763, -4.29674, 1.94", "-8.13486, -15.7922, -4.08319, 0.55", "-8.92407, -17.361, -4.06796, 0.83", "-10.2125, -19.7281, -4.181, 0.55", "-11.0664, -21.4267, -4.25124, 0.55", "-12.5192, -24.6284, -4.34788, 0.55", "-13.5345, -26.8777, -4.33071, 0.55", "-14.5383, -29.1444, -4.27237, 0.55", "-15.5618, -31.2377, -4.13158, 0.55", "-16.9273, -34.0694, -3.92019, 0.55", "-17.7371, -35.7235, -3.79355, 0.55", "-18.8425, -37.9937, -3.5193, 0.55", "-19.667, -39.594, -3.13853, 0.55", "-21.3616, -42.56, -2.20615, 0.55", "-22.554, -44.462, -1.54914, 0.55", "-23.0241, -45.1226, -1.30878, 0.55", "-24.6183, -47.3182, -0.387895, 0.83", "-25.8507, -49.0716, 0.494384, 0.55", "-26.899, -50.6904, 1.43229, 1.11", "-28.5608, -53.4845, 3.27238, 0.55", "-29.4852, -55.1066, 4.36265, 0.55", "-30.4298, -56.978, 5.57634, 0.83", "-31.6183, -59.7719, 7.23868, 0.55", "-32.4249, -62.0195, 8.52829, 0.55", "-32.911, -63.7526, 9.44315, 0.55", "-33.2005, -65.0441, 10.0125, 0.55", "-33.5716, -66.7981, 10.6296, 0.55", "-34.0503, -69.0433, 11.2733, 0.55", "-34.2807, -70.0574, 11.5139, 0.55", "-35.0451, -72.8936, 12.1594, 0.55", "-35.7972, -75.5431, 12.7438, 0.55", "-36.4245, -77.5801, 13.213, 0.55", "-36.9914, -79.2923, 13.606, 0.28", "-37.2817, -80.165, 13.8168, 0.55", "-37.9392, -82.2032, 14.2932, 0.28", "-38.4479, -83.7839, 14.6965, 0.83", "-38.9069, -85.3924, 15.0001, 0.55", "-39.4349, -87.3364, 15.2552, 0.28", "-39.6279, -88.0569, 15.3065, 0.55", "-39.9994, -89.4576, 15.344, 0.28", "-40.1803, -90.1923, 15.3001, 0.55", "-40.6442, -92.2778, 15.0008, 0.28", "-40.8534, -93.3034, 14.7935, 0.55", "-41.1041, -94.6122, 14.4642, 0.28", "-41.2359, -95.3161, 14.2806, 0.55", "-41.4101, -96.3233, 13.9892, 0.28", "-41.6947, -97.9839, 13.5306, 0.28", "-41.8778, -99.1152, 13.2292, 0.55", "-42.1656, -101.117, 12.8722, 0.28", "-42.2961, -102.053, 12.7694, 0.28", "-42.4235, -103.004, 12.7541, 0.83", "-42.7719, -105.639, 12.904, 0.28", "-42.9665, -107.346, 13.1176, 0.83", "-43.3912, -111.434, 13.9158, 0.28", "-43.4417, -111.957, 14.0472, 0.55", "-43.6624, -114.487, 14.7792, 0.28", "-43.6855, -114.807, 14.8896, 0.55", "-43.7442, -116.238, 15.5345, 0.28", "-43.7607, -116.682, 15.7969, 0.55", "-45.3858, -124.832, 17.778, 0.55", "-46.9096, -132.387, 21.3809, 0.55", "-46.8476, -140.137, 24.9193, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-52.7934, -28.5992, -1.24554, 0.83", "-53.8572, -30.0836, -2.5798, 0.55", "-54.4787, -30.8414, -3.50244, 0.55", "-56.4149, -33.1958, -6.00205, 0.55", "-58.1359, -35.4658, -8.10571, 0.55", "-59.3564, -37.3298, -9.68198, 0.55", "-61.2805, -40.9202, -12.7694, 0.55", "-62.201, -42.7512, -14.5445, 0.55", "-63.365, -45.5365, -17.3712, 0.55", "-63.7268, -46.7631, -18.7701, 0.55", "-63.928, -48.4727, -21.0119, 0.55", "-63.8098, -50.8354, -24.1161, 0.83", "-63.6029, -54.0858, -28.25, 0.55", "-63.5419, -54.6662, -29.0903, 0.55", "-63.3575, -56.6259, -32.5889, 0.28", "-63.3625, -57.9325, -35.0926, 0.83", "-63.4095, -58.8574, -36.9686, 0.83", "-63.6287, -60.9531, -41.4585, 0.28", "-63.6757, -61.6854, -43.0398, 0.28", "-63.8943, -64.5178, -49.3713, 1.66", "-64.0492, -66.3386, -53.3049, 0.28", "-64.1062, -67.0358, -54.7664, 0.28", "-64.2671, -68.0318, -57.0982, 1.11", "-64.4936, -69.2674, -59.8033, 0.55", "-64.8764, -70.5523, -62.0557, 0.28", "-65.1588, -71.2085, -63.0879, 0.55", "-66.1781, -73.1175, -66.3096, 0.55", "-68.2138, -76.646, -72.442, 0.55", "-69.8551, -79.0429, -76.8865, 0.28", "-70.6135, -80.0362, -78.8243, 0.83", "-73.1979, -83.2464, -85.0771, 0.83", "-74.6108, -84.8619, -88.5, 0.28", "-74.8406, -85.0963, -89.0664, 0.83", "-77.4635, -87.5351, -95.4268, 0.28", "-77.9719, -87.8651, -96.6646, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-52.7934, -28.5992, -1.24554, 0.83", "-56.2722, -29.1083, -1.23797, 0.55", "-63.6868, -30.2934, -1.03305, 0.55", "-69.2984, -31.4991, -0.637848, 0.55", "-73.2228, -32.5405, -0.321599, 0.55", "-77.5528, -33.8631, 0.104254, 0.55", "-79.3232, -34.5377, 0.242327, 0.55", "-82.6885, -36.1187, 0.520405, 0.55", "-88.3181, -39.3933, 0.862155, 0.55", "-92.0783, -42.0745, 1.16361, 0.83", "-94.2991, -43.7199, 1.27244, 0.55", "-98.0938, -46.4337, 1.20406, 0.55", "-99.2549, -47.2331, 1.14398, 0.55", "-101.78, -48.9647, 1.01627, 0.55", "-105.056, -51.0278, 0.653816, 1.11", "-109.951, -53.9977, 0.114304, 0.55", "-112.058, -55.1437, -0.192782, 0.55", "-114.008, -56.0115, -0.472573, 0.83", "-116.016, -56.862, -0.834896, 0.55", "-120.078, -58.7886, -1.76096, 0.55", "-120.963, -59.2219, -1.98895, 0.55", "-124.72, -60.7481, -2.82827, 1.39", "-127.969, -62.0856, -3.46612, 0.83", "-131.149, -63.2961, -3.96306, 0.55", "-132.947, -63.7887, -4.16303, 0.55", "-135.544, -64.3268, -4.26191, 0.55", "-140.93, -65.2858, -4.41589, 0.55", "-143.646, -65.6927, -4.46975, 0.55", "-145.409, -65.9776, -4.59348, 0.55", "-149.526, -66.7009, -5.17971, 0.83", "-152.06, -67.2023, -5.71027, 0.83", "-156.371, -68.3798, -6.96971, 0.55", "-158.838, -69.2736, -7.88205, 0.83", "-161.593, -70.4407, -9.00808, 0.28", "-164.043, -71.7678, -10.0802, 0.55", "-164.891, -72.4217, -10.4205, 0.28", "-166.183, -73.5696, -10.9628, 0.83", "-167.544, -75.0525, -11.4843, 0.55", "-169.608, -77.453, -12.0825, 0.28", "-171.362, -79.5945, -12.4204, 0.55", "-173.848, -82.5945, -12.815, 0.28", "-177.034, -86.1581, -13.3299, 0.83", "-179.169, -88.2941, -13.7787, 0.83", "-183.03, -92.1951, -14.6544, 0.28", "-186.11, -95.1687, -15.3779, 0.55", "-188.579, -97.5509, -15.9665, 0.28", "-190.408, -99.1607, -16.4227, 0.83", "-193.697, -102.122, -16.983, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "13.2043, -5.30367, 2.35461, 1.39", "15.6883, -3.71561, -0.824251, 0.83", "17.2164, -2.73863, -2.7799, 0.83", "18.1526, -2.14012, -3.97796, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "13.2043, -5.30367, 2.35461, 1.39", "15.1241, -3.20285, 3.29639, 1.11", "15.7204, -2.55042, 3.58887, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "10.1185, 5.70995, -12.893, 1.39", "11.1233, 8.15201, -16.471, 1.11", "11.762, 9.70407, -18.7449, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "10.1185, 5.70995, -12.893, 1.39", "11.4589, 4.84364, -14.8376, 0.55", "13.5268, 3.28309, -17.6247, 0.55", "14.4964, 2.68, -18.516, 0.83", "15.8453, 1.99831, -19.45, 0.83", "17.8348, 1.11951, -20.5753, 0.28", "19.1435, 0.59609, -21.1556, 0.83", "21.7039, -0.429457, -22.1203, 0.83", "26.5205, -2.3888, -23.5529, 0.83", "29.6682, -3.771, -24.4408, 0.83", "31.7758, -4.68249, -24.946, 0.55", "32.5998, -5.01542, -25.1074, 0.55", "33.7814, -5.4757, -25.3101, 1.11", "36.4019, -6.55038, -25.8189, 0.83", "39.0252, -8.62952, -26.2123, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.1054, 30.2301, -2.26452, 0.67", "29.4932, 42.6657, -2.26452, 0.67", "37.8811, 55.1012, -2.26452, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-4.45957, 27.9891, -2.09786, 1.11", "-5.01644, 29.2341, -3.22491, 1.11", "-6.13587, 31.737, -5.49053, 1.11", "-8.61237, 37.2741, -10.5027, 1.11" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-4.45957, 27.9891, -2.09786, 1.11", "-13.2376, 28.7312, 4.41395, 0.83", "-17.2933, 29.3524, 7.49667, 0.83", "-19.0474, 29.6611, 8.71903, 0.83", "-22.9279, 30.2926, 11.0738, 0.83", "-26.1089, 30.6993, 12.7169, 0.83", "-29.1226, 30.9204, 14.0122, 0.83", "-31.9857, 30.6754, 15.2932, 0.83", "-35.5699, 30.4851, 14.6281, 0.83", "-38.3971, 30.4563, 13.4385, 0.83", "-40.2453, 30.3352, 12.3922, 0.83", "-42.1758, 30.1041, 11.2785, 0.83", "-44.3605, 29.7167, 10.1854, 0.83", "-50.6719, 28.4749, 7.95584, 0.83", "-53.1092, 28.1801, 7.33905, 0.83", "-56.2341, 28.0624, 6.75934, 0.83", "-58.5746, 28.0508, 6.43171, 0.83", "-61.3175, 28.0339, 6.0907, 0.83", "-64.933, 27.9782, 5.81272, 0.83", "-69.1902, 27.8274, 5.83483, 1.11", "-72.3691, 27.7205, 5.98696, 0.55", "-75.5807, 27.5784, 6.11551, 0.55", "-77.7531, 27.3593, 6.1632, 0.55", "-81.6014, 26.7448, 6.30639, 0.83", "-84.43, 25.9625, 6.50949, 0.55", "-86.6852, 25.0374, 6.73536, 0.55", "-89.2364, 23.6921, 7.04406, 1.11", "-91.1016, 22.5727, 7.3669, 0.55", "-93.1531, 21.2153, 7.87516, 0.55", "-94.8275, 20.0224, 8.26917, 0.55", "-96.0208, 19.2314, 8.53073, 0.55", "-98.6427, 17.5855, 9.1095, 0.83", "-101.515, 15.8137, 9.82972, 0.28", "-103.565, 14.5689, 10.2772, 1.39", "-106.255, 12.9234, 10.8336, 1.11", "-108.446, 11.6186, 11.3648, 0.28", "-109.822, 10.8116, 11.7165, 0.55", "-111.908, 9.65956, 12.1565, 0.28", "-113.801, 8.54816, 12.4773, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-8.04589, -15.3174, -8.57058, 1.39", "-13.6904, -14.9097, -8.88528, 0.83", "-15.7791, -14.7588, -9.00173, 0.83", "-17.2312, -14.6539, -9.08269, 0.83", "-18.8739, -14.5353, -9.17428, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.04589, -15.3174, -8.57058, 1.39", "-7.05113, -17.5439, -11.621, 0.83", "-6.1374, -19.5217, -14.6803, 0.83", "-5.47824, -21.2076, -17.0096, 0.83", "-4.66123, -23.5431, -20.2132, 0.83", "-4.17264, -25.1873, -22.318, 0.83", "-3.29585, -28.511, -26.5528, 0.83", "-2.46494, -31.7493, -30.2895, 0.83", "-1.69457, -35.1821, -33.9994, 0.83", "-0.987139, -38.3181, -37.2776, 0.83", "-0.477378, -40.5636, -39.5295, 0.83", "0.360134, -44.2099, -42.8401, 0.83", "0.878149, -46.5384, -44.7561, 0.83", "1.2957, -48.4, -46.0899, 0.83", "1.96574, -50.9552, -47.8884, 0.55", "2.54144, -52.9396, -49.0759, 1.39", "3.82064, -56.8218, -51.3211, 1.39" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "18.1526, -2.14012, -3.97796, 0.83", "19.1723, -2.60232, -5.19825, 0.83", "21.6049, -4.05532, -8.14616, 0.55", "22.9645, -4.96698, -9.75198, 0.55", "24.3019, -5.91309, -11.2164, 0.55", "25.4402, -6.71923, -12.4186, 0.55", "26.8819, -7.78076, -13.9061, 0.55", "28.1261, -8.6271, -15.203, 0.55", "29.6521, -9.61484, -16.8841, 0.55", "32.283, -11.1838, -19.9698, 0.55", "33.1448, -11.6335, -21.0222, 0.55", "34.7487, -12.385, -23.0895, 0.55", "36.2148, -12.999, -25.0743, 0.55", "37.9755, -13.6948, -27.5518, 0.55", "39.1046, -14.1447, -29.1379, 0.55", "40.2861, -14.6235, -30.8628, 0.55", "42.0624, -15.3358, -33.3289, 0.55", "42.7478, -15.6166, -34.2171, 0.55", "43.9476, -16.0794, -35.6317, 0.55", "46.0149, -16.743, -37.9072, 0.55", "48.2952, -17.302, -40.3199, 0.55", "49.8618, -17.5771, -41.9518, 0.55", "51.8995, -17.7915, -44.0395, 0.55", "53.8316, -17.8668, -45.9776, 0.55", "55.7122, -17.8221, -47.8315, 0.55", "56.9919, -17.7401, -49.0424, 0.55", "58.2403, -17.6785, -50.1618, 0.55", "59.115, -17.6721, -50.9593, 0.83", "61.0319, -17.6326, -52.7007, 0.55", "61.7792, -17.6508, -53.3911, 0.83", "64.2818, -17.7785, -55.8181, 0.55", "64.9964, -17.8352, -56.5385, 0.83", "67.6813, -18.1034, -59.3275, 0.55", "68.7616, -18.2817, -60.4936, 0.55", "69.9069, -18.5256, -61.7905, 0.55", "71.2456, -18.8354, -63.3423, 0.55", "72.0712, -19.0212, -64.3293, 0.55", "72.8732, -19.219, -65.3186, 0.55", "74.4906, -19.7151, -67.4492, 0.83", "75.0358, -19.942, -68.1949, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "18.1526, -2.14012, -3.97796, 0.83", "21.4968, -5.15547, -0.278843, 0.83", "23.7844, -6.58894, 1.76229, 0.83", "28.1589, -8.26497, 4.89453, 0.83", "30.4327, -9.13615, 6.52262, 0.83", "32.0807, -9.76753, 7.70256, 0.83", "35.8818, -11.2239, 10.4242, 0.55", "38.62, -11.607, 12.084, 0.55", "41.8285, -11.5219, 13.5936, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "15.7204, -2.55042, 3.58887, 1.11", "18.9562, 0.871167, 3.97208, 0.55", "21.2294, 3.81991, 4.22907, 0.83", "22.8183, 6.09552, 4.60076, 0.55", "25.1107, 9.37868, 5.13704, 0.55", "25.7733, 10.3276, 5.29204, 0.55", "26.8436, 11.8605, 5.54242, 0.83", "27.7458, 13.0814, 5.9765, 0.55", "28.8232, 14.6149, 6.08899, 0.83", "36.836, 22.6563, 5.58399, 0.83", "45.1303, 30.2391, 3.88625, 0.83", "53.6516, 37.6895, 3.0385, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "15.7204, -2.55042, 3.58887, 1.11", "15.017, -2.08969, 7.05626, 0.55", "14.7633, -1.98376, 8.55247, 0.55", "14.5528, -1.79474, 10.4347, 0.55", "14.2313, -1.1794, 17.9503, 0.55", "14.2028, -0.944362, 20.2293, 0.55", "14.2321, -0.786123, 21.5534, 0.55", "15.0497, 0.202806, 28.9754, 0.55", "15.766, 0.830886, 32.9258, 0.55", "16.1942, 1.10192, 34.7562, 0.55", "16.9139, 1.37035, 37.2615, 1.11", "17.3685, 4.65079, 47.4011, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "11.762, 9.70407, -18.7449, 1.39", "18.3851, 10.118, -24.0894, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "11.762, 9.70407, -18.7449, 1.39", "12.2555, 10.4573, -20.707, 0.83", "12.8379, 11.9993, -24.0, 0.83", "13.3427, 14.5527, -28.5887, 0.83", "13.4614, 15.3654, -30.0322, 0.83", "13.4353, 16.9288, -32.8525, 0.83", "13.3819, 20.126, -38.6201, 0.83", "13.2489, 21.8801, -41.7368, 0.83", "12.7486, 24.9576, -46.3549, 0.83", "11.8117, 28.039, -51.4456, 1.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "39.0252, -8.62952, -26.2123, 0.83", "41.391, -9.8779, -26.9876, 0.83", "43.8792, -11.5676, -27.9823, 0.83", "45.3106, -12.5407, -28.5089, 0.83", "47.5944, -14.1355, -29.2407, 0.83", "50.7852, -16.3754, -30.2569, 0.83", "55.5088, -19.721, -31.7192, 0.83", "58.5847, -21.9518, -32.6615, 0.83", "62.0851, -24.625, -33.641, 0.83", "65.5636, -27.3276, -34.5876, 0.83", "67.1686, -28.6212, -35.0048, 1.11", "72.2135, -32.8159, -36.1949, 0.83", "74.4287, -34.5925, -36.7088, 0.83", "76.7378, -36.4209, -37.2065, 0.83", "79.6671, -38.916, -37.9292, 0.83", "81.5551, -40.546, -38.4163, 0.83", "83.8123, -42.5664, -38.9196, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "39.0252, -8.62952, -26.2123, 0.83", "40.426, -10.6918, -27.4055, 0.28", "40.7186, -11.0504, -27.5946, 0.55", "42.0955, -12.6527, -28.4029, 0.28", "43.6601, -14.4196, -29.2201, 1.11", "48.2176, -19.4169, -31.4825, 0.28", "48.8043, -20.0484, -31.7563, 0.83", "52.1023, -23.2703, -33.0706, 0.28", "52.8122, -23.9196, -33.311, 0.55", "54.1349, -25.078, -33.6846, 0.28", "56.3951, -26.9198, -34.2333, 0.83", "59.3507, -29.1461, -34.7821, 0.28", "60.9767, -30.3708, -35.099, 0.55", "63.2722, -32.0981, -35.5877, 0.28", "64.136, -32.7206, -35.768, 0.55", "67.2731, -34.8813, -36.4462, 0.28", "69.8834, -36.5681, -36.8917, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-8.61237, 37.2741, -10.5027, 1.11", "-8.37841, 41.9253, -10.9874, 1.11", "-7.43922, 49.7605, -11.5279, 1.11", "-7.13373, 52.3091, -11.7037, 1.11", "-6.7578, 55.4454, -11.92, 1.11", "-6.17423, 60.3139, -12.2559, 1.11", "-6.35164, 65.5051, -13.326, 1.11" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-8.61237, 37.2741, -10.5027, 1.11", "-10.5853, 36.7226, -6.74974, 1.11", "-13.6334, 35.8705, -0.951376, 1.11" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-18.8739, -14.5353, -9.17428, 1.11", "-20.3126, -13.8968, -11.2018, 0.55", "-20.5219, -13.8632, -11.511, 0.55", "-21.0941, -13.8939, -12.3542, 0.55", "-24.3082, -14.5373, -16.7922, 0.55", "-25.1024, -14.7261, -17.7439, 0.55", "-25.5456, -14.8315, -18.2751, 0.55", "-27.662, -15.6215, -20.6447, 0.55", "-28.3765, -15.9594, -21.4458, 0.55", "-29.0929, -16.4483, -22.255, 0.55", "-30.3733, -18.0422, -23.226, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-18.8739, -14.5353, -9.17428, 1.11", "-20.6107, -18.3359, -11.2782, 0.83", "-22.9827, -22.5646, -13.5503, 0.83", "-23.7647, -23.9673, -14.2327, 0.28", "-24.2926, -24.9696, -14.7156, 0.83", "-25.471, -27.3175, -15.6718, 0.55", "-27.4469, -31.0365, -17.067, 0.55", "-30.5605, -36.423, -18.9717, 0.55", "-31.9546, -38.6875, -19.8377, 0.55", "-34.734, -43.0017, -21.5708, 0.83", "-38.0319, -47.8962, -23.5995, 0.83", "-40.7844, -51.9764, -25.2628, 0.83", "-42.5157, -54.6105, -26.3096, 0.83", "-43.9855, -56.7645, -27.2608, 0.83", "-45.3004, -58.4881, -28.1227, 0.83", "-45.9191, -59.1901, -28.527, 0.83", "-47.6333, -60.9446, -30.1817, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "3.82064, -56.8218, -51.3211, 1.39", "7.01017, -59.2261, -51.8953, 0.55", "8.68371, -60.4877, -52.1966, 0.83", "10.6776, -61.9907, -52.5555, 0.55", "11.7065, -62.7663, -52.7408, 0.55", "12.4824, -63.3512, -52.8804, 0.55", "13.915, -64.4311, -53.1383, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "3.82064, -56.8218, -51.3211, 1.39", "4.09264, -57.6566, -52.7811, 0.55", "4.73505, -59.2711, -55.4517, 0.55", "5.56449, -61.9042, -59.8969, 0.55", "5.9928, -63.1221, -62.0614, 0.55", "6.78223, -65.325, -65.9311, 0.55", "6.97323, -65.8957, -66.8816, 0.55", "7.58527, -67.732, -69.8107, 1.11", "8.20686, -69.9074, -72.8965, 0.28", "8.78913, -71.9746, -75.2649, 0.28", "9.0545, -73.1098, -76.3591, 0.28", "9.28836, -74.5741, -77.3824, 0.83", "9.57094, -76.0139, -78.2812, 0.28", "9.93961, -77.8176, -79.1225, 0.28", "10.3684, -79.4148, -79.6485, 0.55", "10.6475, -80.6119, -80.0601, 0.28", "10.8753, -81.836, -80.6298, 0.28", "11.1121, -83.4133, -81.5249, 0.83", "11.3999, -86.7144, -83.6907, 0.83", "11.6177, -89.8007, -85.7612, 0.28", "11.6752, -92.0061, -87.2979, 0.83", "11.7654, -95.1555, -89.5759, 0.28", "11.8181, -97.2161, -91.1468, 0.55", "11.6963, -99.9616, -93.5267, 0.28", "11.5556, -101.76, -95.3002, 1.11", "11.2432, -105.057, -98.8469, 0.28", "11.1218, -107.539, -101.539, 0.28", "11.0855, -108.76, -102.923, 0.83", "10.8283, -113.007, -108.01, 0.28", "10.7319, -114.1, -109.406, 0.55", "10.5325, -115.422, -111.223, 0.55", "10.2733, -117.145, -113.734, 0.55", "9.88034, -118.936, -116.276, 0.28", "9.80353, -119.603, -117.112, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "41.8285, -11.5219, 13.5936, 0.55", "42.5132, -8.32052, 14.9138, 0.28", "42.6294, -7.77677, 15.1381, 0.83", "42.8903, -6.55676, 15.6412, 0.28", "43.7189, -2.68244, 17.2389, 0.83", "46.4756, 6.89697, 21.2567, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "41.8285, -11.5219, 13.5936, 0.55", "46.5636, -13.993, 15.7634, 0.28", "46.9979, -14.2196, 15.9624, 0.83", "48.3506, -14.9256, 16.5823, 0.55", "51.9339, -16.7956, 18.2243, 1.11", "60.0765, -18.7726, 22.2313, 1.11", "68.3834, -21.4888, 25.3941, 1.11", "75.8367, -25.5965, 29.1699, 1.11", "82.9094, -30.3606, 32.935, 1.11", "89.9496, -35.8159, 35.7494, 1.11", "95.6924, -42.2617, 39.3716, 1.11", "102.197, -47.1147, 43.9555, 1.11", "107.375, -53.4145, 48.5363, 1.11", "111.047, -60.8769, 52.8943, 1.11", "115.753, -68.1787, 56.4549, 1.11", "120.779, -75.0768, 60.3313, 1.11", "125.869, -81.928, 64.2038, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "53.6516, 37.6895, 3.0385, 0.83", "61.4504, 45.0253, 1.86702, 0.83", "76.5077, 60.3814, 1.45489, 0.83", "82.3313, 69.4515, 1.31929, 0.83", "88.6421, 78.0804, 2.40748, 0.83", "95.952, 85.8357, 3.64439, 0.83", "102.35, 94.5027, 3.38377, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "53.6516, 37.6895, 3.0385, 0.83", "61.6344, 44.865, 1.80768, 0.83", "77.591, 58.7639, 4.65649, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "17.3685, 4.65079, 47.4011, 1.11", "17.3977, 5.49446, 60.5854, 0.83", "16.2932, 7.84335, 73.5261, 0.83", "13.0507, 13.1169, 85.1759, 0.83", "8.66472, 16.8003, 97.0603, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "17.3685, 4.65079, 47.4011, 1.11", "17.6705, 6.01263, 58.9947, 0.83", "23.1098, 7.36738, 81.5446, 0.83", "27.6139, 6.43791, 92.3092, 0.83", "32.0125, 4.93237, 103.061, 0.83", "37.4232, 1.70677, 112.984, 0.83", "43.6475, -0.871552, 122.606, 0.83", "49.784, -2.43019, 132.475, 0.83", "56.1663, -4.1958, 142.157, 0.83", "63.1222, -6.58525, 151.317, 0.83", "68.6568, -7.688, 161.582, 0.83", "72.7228, -9.9463, 172.344, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "18.3851, 10.118, -24.0894, 0.83", "21.4569, 12.0038, -27.5178, 0.83", "24.9175, 14.157, -31.2008, 0.83", "28.5501, 16.0042, -34.7833, 0.83", "32.2119, 17.6376, -38.2363, 0.83", "35.02, 18.7548, -40.8385, 0.83", "39.0753, 20.239, -44.5477, 0.83", "41.4982, 20.9425, -46.6937, 0.83", "45.6254, 21.8319, -50.03, 0.83", "47.557, 22.2154, -51.575, 0.83", "49.462, 22.5084, -53.1498, 0.83", "51.3916, 22.8869, -54.6984, 0.83", "53.0649, 23.2301, -56.0858, 0.83", "57.0214, 24.2309, -59.4007, 0.83", "59.5022, 25.0306, -61.5095, 0.83", "61.9078, 25.8398, -63.5327, 0.83", "67.9495, 27.9021, -68.6078, 0.83", "71.2357, 28.9287, -71.2695, 0.83", "73.8451, 29.7261, -73.2854, 0.55", "75.9248, 30.3475, -74.8246, 0.55", "77.9135, 30.9655, -76.2076, 0.55", "79.6729, 31.5163, -77.3671, 0.55", "85.9296, 33.4081, -81.3344, 0.55", "88.7072, 34.2807, -83.0421, 0.55", "90.5098, 34.7645, -84.2012, 1.11", "91.7728, 35.1246, -85.023, 0.55", "93.1127, 35.5052, -85.9409, 0.55", "96.2167, 36.3786, -88.1358, 0.55", "97.8878, 36.8071, -89.2835, 0.83", "100.462, 37.3141, -90.9996, 0.55", "104.558, 37.9573, -93.5201, 0.55", "106.4, 38.1942, -94.6107, 0.55", "110.924, 38.7878, -97.1962, 0.55", "114.122, 39.1782, -98.9856, 0.55", "116.523, 39.4662, -100.356, 0.55", "119.995, 39.925, -102.395, 0.55", "123.944, 40.4082, -104.881, 0.55", "127.812, 41.0314, -107.398, 0.28", "128.366, 41.127, -107.799, 0.55", "129.868, 41.4297, -109.011, 0.28", "132.408, 42.0837, -111.057, 0.28", "133.136, 42.3281, -111.699, 0.83", "135.265, 43.2695, -113.4, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.3851, 10.118, -24.0894, 0.83", "17.4257, 10.0182, -27.8916, 0.55", "17.135, 9.98646, -29.4796, 0.55", "16.7895, 9.97026, -31.7131, 0.55", "16.6522, 9.92337, -33.1654, 0.55", "16.6087, 9.88335, -33.8043, 0.83", "16.5793, 9.71346, -36.1158, 0.55", "16.7115, 9.36969, -38.8477, 0.55", "16.7971, 9.20332, -41.2895, 0.55", "16.8315, 9.16978, -43.3482, 0.55", "16.8096, 9.19073, -45.3154, 0.55", "16.726, 9.24381, -47.8721, 0.55", "16.5376, 9.32545, -50.1579, 0.55", "15.9761, 9.70702, -54.2198, 0.83", "15.7714, 9.89787, -55.5823, 0.55", "15.6567, 10.0182, -56.2907, 0.55", "15.4037, 10.3362, -58.1316, 0.83", "15.2082, 10.5598, -60.1158, 0.55", "15.2009, 10.6215, -62.2657, 0.55", "15.2398, 10.5206, -63.0086, 0.83", "15.2979, 10.2549, -64.8798, 0.28", "15.3183, 10.1785, -65.3992, 0.83", "15.334, 9.86958, -67.123, 0.28", "15.3054, 9.6452, -68.2717, 0.55", "15.0599, 9.23767, -70.7979, 0.55", "14.6866, 8.95491, -73.5151, 0.28", "14.5259, 8.88212, -74.6699, 0.28", "14.4059, 8.87843, -75.5752, 0.28", "14.2312, 8.93868, -76.9282, 0.83", "14.0128, 9.05433, -78.7828, 0.28", "13.8466, 9.16485, -80.0009, 0.83", "13.3841, 9.32764, -82.5292, 0.55", "12.9117, 9.44512, -85.0273, 0.28", "12.7749, 9.45681, -85.7542, 0.83", "12.5511, 9.50259, -86.8111, 0.83", "12.0912, 9.63533, -88.7967, 0.55", "11.6745, 9.81437, -90.4894, 0.55", "11.0596, 10.1712, -92.6727, 0.55", "10.6549, 10.3404, -94.2408, 0.55", "9.86744, 10.5288, -97.647, 0.55", "9.62564, 10.5267, -98.861, 0.28", "9.53488, 10.5128, -99.3702, 0.83", "9.10318, 10.4913, -102.182, 0.28", "8.39459, 10.3097, -105.789, 0.55", "8.21704, 10.0072, -107.049, 0.28", "8.19083, 9.67089, -107.437, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "11.8117, 28.039, -51.4456, 1.66", "11.3715, 29.8691, -53.6673, 0.55", "10.4014, 33.9196, -57.7538, 0.55", "10.116, 34.8279, -58.5639, 0.55", "9.60256, 36.6087, -60.1421, 0.28", "8.99563, 37.8947, -61.6102, 0.55", "7.79609, 40.0452, -64.5696, 0.55", "7.21821, 40.694, -65.828, 0.55", "5.78129, 41.7536, -68.4387, 0.55", "4.87808, 42.3259, -70.0447, 0.55", "1.1921, 44.4276, -76.6998, 1.39", "-0.190694, 45.2054, -79.3696, 0.55", "-1.96914, 46.2063, -83.015, 0.55", "-4.90526, 47.8659, -89.5729, 0.55", "-5.41497, 48.1679, -90.8132, 0.55", "-7.47827, 49.5354, -96.295, 0.55", "-9.00603, 50.8497, -101.478, 0.55", "-9.60791, 51.4997, -103.987, 0.55", "-9.86372, 52.0243, -105.883, 0.55", "-9.96391, 52.5686, -108.097, 0.28", "-9.92441, 52.9326, -109.614, 1.11", "-9.45702, 53.9117, -113.45, 0.28", "-9.31455, 54.1442, -114.284, 0.83", "-8.42369, 55.5796, -118.895, 0.28", "-8.33823, 55.7322, -119.307, 0.83", "-7.65628, 56.9754, -122.33, 0.28", "-7.12516, 58.0479, -124.634, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "11.8117, 28.039, -51.4456, 1.66", "12.9161, 26.2358, -53.716, 0.83", "15.3916, 22.1485, -60.0567, 0.83", "15.6932, 21.433, -61.2634, 0.55", "16.6471, 18.8094, -66.5593, 0.55", "16.6605, 17.7709, -68.9853, 0.55", "16.3703, 17.1279, -70.9576, 0.55", "15.8191, 16.4018, -73.6415, 0.83", "15.1518, 15.667, -76.2812, 0.28", "13.7488, 13.9702, -81.2087, 1.66", "11.5173, 10.4814, -87.2984, 0.83", "10.4269, 8.39509, -89.656, 0.83", "8.633, 4.21561, -92.9947, 0.28", "8.41515, 3.56947, -93.3486, 0.55", "7.39899, 0.295043, -94.5234, 0.28", "6.17035, -4.30937, -95.3183, 0.28", "5.33507, -8.02869, -95.7027, 0.83", "4.54049, -10.8383, -96.0197, 0.28", "4.28345, -11.5836, -96.1727, 0.55", "2.7292, -16.0156, -97.0502, 0.28", "1.96572, -18.0639, -97.3728, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-6.35164, 65.5051, -13.326, 1.11", "-9.52259, 73.4772, -17.0198, 1.11" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-6.35164, 65.5051, -13.326, 1.11", "-5.09857, 66.5792, -14.2156, 0.55", "-2.97206, 68.1048, -15.5707, 0.55", "-1.27287, 69.2486, -16.5791, 0.55", "1.37009, 70.9544, -18.2977, 0.55", "6.30412, 73.8749, -21.3722, 0.55", "11.1663, 76.6617, -24.4922, 0.55", "13.3261, 77.8149, -25.9867, 0.55", "14.9539, 78.6141, -27.2583, 0.55", "18.3464, 80.3309, -30.2956, 0.55", "20.592, 81.4956, -32.6868, 0.55", "22.4963, 82.6604, -35.1455, 0.55", "25.5653, 84.7791, -39.6378, 0.55", "27.3997, 86.0301, -42.3924, 0.55", "29.2956, 87.3704, -45.3845, 0.28", "30.0187, 87.9213, -46.5482, 0.55", "31.7398, 89.3657, -49.6277, 0.28", "32.5408, 89.959, -50.8558, 0.28", "34.6792, 91.2182, -53.2062, 0.28" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-13.6334, 35.8705, -0.951376, 1.11", "-16.7756, 34.7289, 1.08474, 0.55", "-19.5744, 33.9463, 2.43477, 0.55", "-21.905, 33.3156, 3.42304, 0.55", "-22.7644, 33.0921, 3.78258, 0.55", "-25.5252, 32.3689, 4.93324, 0.55", "-27.6841, 31.8302, 5.85612, 0.55", "-31.5402, 31.0782, 7.40607, 0.55", "-35.7881, 30.5494, 9.15825, 0.55", "-39.0807, 30.2915, 10.4632, 0.55", "-40.0919, 30.2659, 10.8452, 0.55", "-42.7486, 30.3125, 11.7147, 0.55", "-45.7864, 30.3798, 12.5463, 0.55", "-49.1212, 30.5738, 13.3575, 0.55", "-51.7025, 30.7839, 13.8028, 0.55", "-53.3837, 30.9188, 14.0174, 0.55", "-56.5294, 31.1654, 14.3703, 0.55", "-58.5469, 31.2908, 14.5729, 0.55", "-61.599, 31.467, 14.9248, 0.55", "-63.6201, 31.5506, 15.2628, 0.55", "-65.1596, 31.695, 15.6941, 0.83", "-66.4284, 31.8828, 16.1749, 0.55", "-67.6521, 32.1115, 16.7366, 0.55", "-69.0248, 32.4204, 17.3781, 0.55", "-70.4597, 32.7419, 18.0821, 0.83", "-71.9211, 33.028, 18.798, 0.55", "-73.151, 33.1749, 19.3637, 1.11", "-74.8537, 33.2909, 20.0229, 0.83", "-76.1623, 33.3309, 20.4539, 0.83", "-77.6398, 33.3342, 20.8284, 0.55", "-78.8475, 33.3751, 21.0297, 0.55", "-80.7276, 33.4214, 21.2238, 0.83", "-83.0388, 33.3554, 21.3119, 0.55", "-83.5175, 33.3185, 21.3168, 0.83", "-85.0471, 33.0781, 21.334, 0.55", "-86.1269, 32.8938, 21.3522, 0.55", "-88.3528, 32.5053, 21.4579, 0.55", "-89.8463, 32.2387, 21.544, 0.55", "-92.3129, 31.8107, 21.7396, 0.55", "-95.9384, 31.1753, 22.0551, 0.83", "-98.3784, 30.6846, 22.2464, 0.28", "-99.0387, 30.5264, 22.2789, 0.55", "-100.483, 30.1542, 22.306, 0.28", "-101.926, 29.7248, 22.3154, 0.28", "-103.463, 29.1007, 22.2508, 0.28", "-105.162, 28.2326, 21.9993, 0.28", "-105.914, 27.7968, 21.8048, 0.28", "-106.096, 27.6861, 21.7395, 0.83", "-107.069, 27.0521, 21.3449, 0.28", "-107.551, 26.7343, 21.1041, 0.83", "-110.184, 25.2192, 19.6924, 0.28", "-111.414, 24.6459, 19.0329, 0.55", "-112.061, 24.3973, 18.6743, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-13.6334, 35.8705, -0.951376, 1.11", "-18.2144, 34.4256, 1.51888, 0.83", "-22.4583, 33.2652, 3.71165, 0.83", "-27.4014, 31.8113, 6.1533, 0.83", "-33.3547, 30.0793, 9.09609, 0.83", "-35.6323, 29.4296, 10.1626, 0.83", "-38.0445, 28.8118, 11.163, 0.55", "-41.0445, 28.2601, 12.154, 0.55", "-46.7942, 27.354, 13.7084, 0.55", "-50.4589, 26.7066, 14.4795, 0.55", "-53.9137, 26.0868, 15.1185, 0.55", "-61.5884, 24.6555, 16.4279, 0.83", "-65.0034, 24.0392, 16.9562, 0.83", "-66.8331, 23.6885, 17.218, 0.83", "-71.1356, 22.8852, 17.747, 0.83", "-75.1092, 22.0237, 18.2616, 0.55", "-76.6182, 21.6692, 18.54, 0.83", "-80.4666, 20.6665, 19.5143, 0.55", "-81.1127, 20.501, 19.7122, 0.83", "-83.8259, 19.8783, 20.514, 0.55", "-85.8949, 19.4585, 21.1331, 0.55", "-87.3957, 19.2068, 21.5901, 0.55", "-90.5569, 18.6402, 22.7179, 0.55", "-92.8724, 18.1474, 23.6493, 0.55", "-95.1443, 17.6242, 24.5205, 0.55", "-98.0207, 16.8656, 25.5686, 0.55", "-100.879, 16.0508, 26.4791, 0.55", "-104.894, 14.9344, 27.7012, 0.55", "-106.061, 14.6029, 28.0574, 0.83", "-108.534, 13.9182, 28.81, 0.55", "-109.801, 13.5647, 29.1711, 0.83", "-113.407, 12.5288, 30.0982, 0.55", "-115.819, 11.7402, 30.6606, 0.55", "-119.547, 10.4603, 31.4296, 0.55", "-121.149, 9.84792, 31.7566, 0.83", "-124.4, 8.38468, 32.4447, 0.28", "-125.514, 7.84429, 32.6468, 0.55", "-127.109, 6.92916, 32.8634, 0.28", "-128.448, 6.09177, 33.0549, 0.83", "-130.862, 4.52503, 33.4837, 0.28", "-132.038, 3.77858, 33.7575, 0.55", "-133.45, 2.91184, 34.1561, 0.28", "-134.51, 2.28804, 34.4684, 0.83", "-138.227, 0.159859, 35.6129, 0.28", "-139.646, -0.657009, 36.0808, 0.83", "-143.211, -2.80749, 37.3897, 0.28", "-145.416, -4.16121, 38.1963, 0.28", "-145.921, -4.47634, 38.3871, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-30.3733, -18.0422, -23.226, 0.83", "-33.8225, -18.3276, -24.4143, 0.83", "-37.9002, -18.8088, -25.6367, 0.55", "-42.7861, -19.4921, -26.8907, 0.55", "-44.9246, -19.8455, -27.4497, 0.55", "-48.3373, -20.5163, -28.3731, 0.83", "-52.2025, -21.399, -29.5019, 0.55", "-55.3846, -22.4374, -30.7349, 0.55", "-56.2811, -22.8139, -31.0991, 0.55", "-57.7625, -23.4241, -31.6991, 0.55", "-58.83, -23.87, -32.2242, 0.55", "-60.8585, -24.7558, -33.3697, 0.83", "-63.3284, -25.7657, -34.6964, 0.28", "-65.1411, -26.5296, -35.8938, 1.94", "-68.2173, -27.7157, -37.9151, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-30.3733, -18.0422, -23.226, 0.83", "-31.3569, -15.1353, -26.5665, 0.55", "-31.8233, -13.607, -28.5331, 0.55", "-32.2575, -12.1474, -30.5521, 0.55", "-32.6968, -10.8076, -32.4622, 0.55", "-33.1854, -9.7307, -33.9554, 1.11", "-34.2335, -7.43775, -37.1605, 0.28", "-34.4461, -6.98805, -37.8617, 0.55", "-34.9475, -6.03105, -39.3539, 0.28", "-35.5685, -4.83779, -41.2572, 0.83", "-37.2129, -2.08592, -45.5987, 0.83", "-37.7041, -1.26219, -46.8629, 0.55", "-38.4514, -0.0193181, -48.8812, 1.11", "-38.8467, 0.581997, -49.9611, 0.28", "-39.1188, 1.02548, -50.8902, 0.28", "-39.7248, 1.95102, -53.1081, 1.11", "-40.4734, 3.07745, -56.0724, 0.55", "-41.3216, 4.22593, -59.1198, 0.55", "-41.8347, 4.89524, -60.9593, 0.55", "-42.9159, 6.13584, -64.6187, 0.55", "-44.5111, 7.89116, -69.8446, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-47.6333, -60.9446, -30.1817, 0.83", "-47.5566, -62.8714, -29.5424, 0.55", "-47.2883, -68.7191, -27.7887, 0.55", "-47.1609, -72.8575, -26.5125, 0.55", "-47.0597, -75.6392, -25.7353, 0.55", "-46.9222, -79.0536, -24.7501, 0.55", "-46.8413, -82.0274, -23.8784, 0.55", "-46.8041, -83.6367, -23.4116, 0.83", "-46.7887, -85.9303, -22.7255, 0.55", "-46.7375, -89.6509, -21.3359, 0.55", "-46.7342, -91.8541, -20.3942, 0.55", "-46.7439, -94.5719, -19.13, 0.55", "-46.7488, -98.3949, -17.2455, 0.55", "-46.7407, -101.256, -15.715, 0.55", "-46.6807, -104.071, -14.1541, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-47.6333, -60.9446, -30.1817, 0.83", "-47.8703, -61.2009, -30.2328, 0.83", "-49.4751, -62.4295, -30.5283, 0.83", "-51.1648, -63.6796, -30.9456, 0.83", "-53.7546, -65.6952, -31.6059, 0.83", "-55.353, -66.912, -32.0193, 0.83", "-57.4437, -68.6185, -32.6022, 1.11", "-60.3242, -71.2206, -33.5644, 0.55", "-63.6769, -74.6766, -34.9252, 0.55", "-65.1957, -76.4335, -35.6201, 0.55", "-66.1284, -77.7174, -36.155, 0.55", "-67.6711, -80.4945, -37.2645, 0.55", "-68.7911, -83.4305, -38.4386, 0.55", "-69.1627, -85.2629, -39.1515, 0.28", "-69.3274, -86.6492, -39.6837, 0.83", "-69.5563, -88.9041, -40.604, 0.28", "-69.7844, -90.8983, -41.4063, 0.28", "-70.0296, -92.2362, -41.95, 0.83", "-70.7457, -95.0251, -43.0429, 0.28", "-71.3898, -96.7115, -43.7152, 0.55", "-72.2084, -98.4607, -44.4032, 0.28", "-73.0905, -100.13, -45.0334, 1.11", "-74.4078, -102.387, -45.8993, 0.83", "-75.3037, -103.853, -46.4221, 0.55", "-76.94, -106.347, -47.2703, 0.55", "-78.1252, -108.306, -47.9165, 0.55", "-78.9328, -109.618, -48.3432, 0.55", "-80.0853, -111.407, -48.9668, 0.55", "-81.4903, -113.594, -49.7634, 0.55", "-82.7619, -115.649, -50.505, 0.28", "-83.4023, -116.737, -50.8736, 0.28", "-85.6145, -120.302, -52.0998, 0.28", "-86.2537, -121.348, -52.4581, 1.11", "-88.8474, -125.885, -54.0772, 0.28", "-89.7638, -127.632, -54.7563, 0.28", "-90.5347, -129.21, -55.4027, 0.55", "-91.3925, -131.012, -56.1619, 0.28", "-91.9951, -132.495, -56.8239, 1.11", "-93.3569, -136.139, -58.5588, 0.28", "-93.6129, -136.836, -58.9381, 0.83", "-94.4098, -139.05, -60.2311, 0.28", "-94.4915, -139.3, -60.3788, 0.83", "-95.3703, -142.25, -62.0223, 0.28", "-95.6321, -143.039, -62.4455, 0.55", "-96.2208, -144.891, -63.3969, 0.28", "-96.3357, -145.258, -63.5795, 0.55", "-96.8098, -147.003, -64.4051, 0.28", "-96.9691, -147.523, -64.6467, 0.55", "-98.2322, -150.672, -65.9566, 0.28" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "13.915, -64.4311, -53.1383, 0.55", "14.4019, -65.9366, -53.607, 0.55", "15.3619, -69.0728, -54.6413, 0.55", "16.2227, -71.3153, -55.4646, 0.55", "17.1003, -73.06, -56.2744, 0.55", "17.9897, -74.6414, -57.1094, 0.55", "18.6388, -75.7954, -57.7188, 0.55", "19.8159, -77.7169, -58.7896, 0.55", "21.2558, -79.8314, -60.073, 0.55", "23.3603, -82.4166, -61.9918, 0.55", "24.6317, -83.8582, -63.2329, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "13.915, -64.4311, -53.1383, 0.55", "14.7364, -64.9023, -53.3954, 0.83", "17.2437, -66.711, -54.2251, 0.55", "18.8106, -68.0053, -54.7721, 0.55", "21.9881, -70.893, -56.0486, 0.28", "23.3371, -72.1487, -56.6361, 0.28", "24.6847, -73.3984, -57.1827, 0.28", "25.6515, -74.3634, -57.5566, 0.83", "25.9161, -74.6418, -57.6426, 0.83", "27.1399, -76.164, -58.0777, 0.28", "27.9374, -77.3234, -58.6067, 0.83", "30.0007, -79.8313, -59.65, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "46.4756, 6.89697, 21.2567, 0.83", "48.3236, 14.3552, 23.9894, 0.83", "50.7601, 21.772, 26.3084, 0.83", "53.7867, 28.6522, 29.4243, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "46.4756, 6.89697, 21.2567, 0.83", "47.7809, 12.3003, 24.6992, 0.83", "49.7966, 17.7485, 27.6829, 0.83", "50.8136, 23.8176, 29.9107, 0.83", "50.9067, 29.4725, 33.2125, 0.83", "50.9757, 35.0246, 36.6825, 0.83", "50.5312, 40.5652, 40.1439, 0.83", "51.3324, 45.6078, 44.2243, 0.83", "52.7465, 49.8608, 48.952, 0.83", "53.5686, 53.6903, 54.1485, 0.83", "55.6005, 58.1248, 58.4651, 0.83", "57.7109, 62.994, 62.2551, 0.83", "58.7329, 68.7037, 65.2853, 0.83", "60.4675, 73.8188, 68.9548, 0.83", "62.3255, 78.4526, 73.1475, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-9.52259, 73.4772, -17.0198, 1.11", "-8.65235, 77.147, -17.4159, 1.11", "-6.39604, 86.6618, -18.443, 1.11" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-9.52259, 73.4772, -17.0198, 1.11", "-10.2661, 77.1959, -13.3427, 0.55", "-10.8843, 79.2986, -11.2374, 0.55", "-12.1147, 82.4731, -7.89507, 0.55", "-13.9175, 87.138, -3.04084, 0.55", "-14.9349, 89.6615, -0.402758, 0.55", "-16.3105, 92.7666, 3.04538, 0.55", "-16.8568, 93.8244, 4.22507, 0.55", "-19.2407, 97.9468, 8.92294, 0.55", "-20.6134, 100.132, 11.4058, 0.55", "-21.3443, 101.16, 12.7823, 0.55", "-22.421, 102.958, 15.3252, 0.55", "-23.4979, 105.112, 18.4484, 0.55", "-24.0109, 106.369, 20.2063, 0.55", "-24.5013, 107.501, 21.8371, 0.55", "-25.0933, 108.867, 23.6962, 0.55", "-26.423, 112.031, 27.5939, 0.55", "-27.3366, 114.216, 30.217, 0.55", "-28.0596, 115.74, 32.018, 0.55", "-29.7579, 118.978, 35.6415, 0.55", "-31.5616, 122.458, 39.1502, 0.55", "-32.525, 124.254, 40.8338, 0.55", "-34.2497, 127.02, 43.2819, 0.55", "-35.7185, 129.144, 45.1938, 0.28", "-36.0006, 129.566, 45.5982, 0.55", "-36.6736, 130.814, 46.565, 0.55" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-68.2173, -27.7157, -37.9151, 0.55", "-63.1627, -29.6652, -38.4072, 0.55", "-57.9233, -31.9445, -38.4286, 0.55", "-58.9143, -30.8971, -40.2278, 0.55", "-59.3052, -30.085, -41.813, 0.55", "-60.1193, -28.9636, -44.4226, 0.55", "-62.3395, -26.8787, -50.413, 0.55", "-63.3613, -26.099, -52.94, 0.83", "-64.7071, -25.3404, -55.9165, 0.83", "-66.1338, -24.7763, -58.6043, 0.55", "-68.4102, -24.2857, -62.3858, 0.55", "-70.8045, -23.9206, -66.0594, 0.55", "-72.0299, -23.7773, -67.8621, 0.55", "-74.6367, -23.4713, -71.1908, 0.28", "-78.1227, -22.9863, -75.1406, 0.28", "-79.6926, -22.5854, -76.9382, 0.83", "-83.4974, -21.3611, -81.1438, 0.28", "-84.9619, -20.8246, -82.6688, 0.83", "-90.1982, -18.6872, -87.8405, 0.55", "-92.8557, -17.4153, -90.4171, 0.55", "-97.7298, -14.4386, -95.4828, 0.28" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-68.2173, -27.7157, -37.9151, 0.55", "-70.1144, -27.8651, -38.7886, 0.55", "-74.9633, -28.3784, -41.1276, 0.55", "-81.5529, -29.2623, -44.4744, 1.11", "-83.1882, -29.5442, -45.3299, 0.55", "-86.5618, -30.2762, -47.1599, 0.55", "-89.7779, -31.0614, -48.8783, 0.55", "-91.4225, -31.5139, -49.7027, 0.55", "-92.2937, -31.8064, -50.1459, 0.55", "-94.4339, -32.6413, -51.1911, 0.55", "-98.3493, -34.0413, -52.9764, 0.28", "-99.5838, -34.4648, -53.5396, 0.55", "-104.262, -35.9068, -55.2889, 0.28", "-105.493, -36.2599, -55.6989, 0.55", "-108.442, -37.0358, -56.6145, 0.55", "-110.248, -37.4719, -57.1385, 0.83", "-113.565, -38.2468, -57.9835, 0.28", "-116.698, -39.0279, -58.8138, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "30.0007, -79.8313, -59.65, 0.55", "29.9512, -83.5449, -64.2836, 0.55", "29.9434, -84.1339, -65.0185, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "30.0007, -79.8313, -59.65, 0.55", "30.6958, -84.1748, -56.0815, 0.28", "30.9109, -85.5189, -54.9773, 0.28", "31.1067, -86.7422, -53.9722, 0.83", "31.9145, -91.7896, -49.8255, 0.55", "32.1121, -93.0243, -48.8112, 0.55", "32.3897, -94.7587, -47.3862, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "53.7867, 28.6522, 29.4243, 0.83", "58.5628, 40.1598, 31.5533, 0.83", "62.5402, 51.5518, 35.34, 0.83", "66.5241, 62.8331, 39.4304, 0.83", "71.3433, 72.7104, 45.593, 0.83", "76.2135, 81.5038, 53.1346, 0.83", "78.7548, 90.6108, 61.4349, 0.83", "82.8537, 99.5583, 69.2603, 0.83", "87.127, 107.112, 78.2984, 0.83", "92.2096, 114.633, 86.932, 0.83", "98.3737, 122.478, 94.5187, 0.83", "103.588, 130.223, 102.882, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "53.7867, 28.6522, 29.4243, 0.83", "56.8876, 37.0602, 31.6314, 0.83", "61.0966, 45.0306, 33.501, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-6.39604, 86.6618, -18.443, 1.11", "-5.98701, 96.9927, -18.4797, 1.11", "-6.20521, 103.506, -18.7156, 0.83", "-6.42094, 106.539, -18.7135, 0.83", "-6.81111, 112.971, -18.696, 0.83", "-6.98893, 117.161, -18.8491, 0.83", "-7.20446, 122.403, -19.0936, 0.83", "-7.38036, 125.888, -19.3933, 0.83", "-8.2844, 137.994, -20.452, 0.83", "-8.58744, 141.104, -20.62, 0.83", "-9.26241, 146.322, -20.5136, 0.83", "-9.5831, 149.368, -20.4958, 0.83", "-9.77543, 152.004, -20.4099, 0.83", "-10.3238, 158.509, -20.283, 0.83", "-10.8485, 163.736, -20.2441, 0.83", "-12.0708, 174.988, -20.049, 0.83", "-12.7518, 182.838, -19.8935, 1.11", "-13.4021, 192.44, -19.7778, 1.11", "-13.6826, 199.238, -19.7296, 1.11", "-13.8237, 204.525, -19.6333, 1.11", "-13.853, 209.41, -19.5217, 1.11", "-13.6168, 215.736, -19.3278, 1.11", "-13.2746, 220.672, -19.0952, 1.11", "-12.7293, 226.355, -18.8796, 1.11", "-12.1003, 230.987, -18.6594, 1.11", "-11.3998, 235.801, -18.4377, 1.11", "-10.5111, 241.874, -18.1932, 1.11", "-9.79306, 247.944, -18.0791, 1.11", "-8.86407, 257.541, -18.0554, 0.83", "-8.71122, 261.659, -17.9906, 0.83", "-8.73115, 263.607, -17.937, 0.83", "-8.98716, 267.627, -17.7288, 0.83", "-9.85445, 273.649, -17.3097, 0.83", "-10.9835, 278.546, -16.7532, 0.83", "-12.0789, 282.517, -16.2868, 0.83", "-13.2245, 286.701, -15.7552, 0.83", "-14.1458, 290.479, -15.3688, 0.83", "-15.6015, 296.452, -14.6776, 0.83", "-16.6874, 300.6, -14.2214, 0.83", "-17.5315, 304.108, -14.0061, 0.83", "-18.3522, 307.323, -13.8811, 0.83", "-19.3171, 311.402, -13.9183, 0.83", "-20.3131, 316.601, -14.1579, 0.83", "-21.036, 320.745, -14.4354, 0.83", "-21.7307, 325.943, -14.9546, 0.83", "-22.3715, 332.859, -15.5974, 0.83", "-23.1765, 344.381, -16.4232, 0.83", "-23.5295, 354.777, -17.2132, 0.83", "-23.5109, 360.828, -17.7359, 0.83", "-23.3432, 369.407, -18.3326, 0.83", "-22.8859, 382.126, -19.028, 0.83", "-22.5972, 386.603, -19.1664, 0.83", "-22.2841, 391.565, -19.1998, 0.83", "-21.9724, 395.956, -19.1979, 0.83", "-21.5609, 401.381, -19.1708, 0.83", "-21.1276, 408.768, -19.1414, 0.83", "-20.8249, 413.039, -19.2238, 0.83", "-20.5965, 419.457, -19.5686, 0.83", "-20.5722, 421.771, -19.7193, 0.83", "-20.6547, 428.297, -20.2044, 0.83", "-20.8379, 432.967, -20.5617, 0.83", "-21.0823, 435.854, -20.7629, 0.83", "-21.9714, 443.676, -21.4605, 0.83", "-22.8674, 450.478, -22.0601, 0.83", "-24.346, 460.867, -23.3187, 0.83", "-24.7308, 463.583, -23.6885, 0.83", "-25.6185, 471.237, -24.7519, 0.83", "-26.0105, 476.657, -25.5166, 0.83", "-26.3152, 483.621, -26.4411, 0.83", "-26.7126, 488.879, -27.2993, 0.83", "-26.9529, 492.897, -27.922, 0.83", "-27.1637, 496.513, -28.2265, 0.83", "-27.2723, 497.876, -28.169, 0.83", "-27.722, 502.026, -27.6336, 0.83", "-28.3553, 506.411, -26.8713, 0.83", "-29.1617, 514.282, -25.684, 0.83", "-29.4978, 517.573, -25.4794, 0.83", "-29.7661, 521.734, -25.4911, 0.83", "-29.832, 526.518, -25.7283, 0.83", "-29.7061, 529.577, -26.0695, 0.83", "-29.1328, 538.72, -27.501, 0.83", "-28.6207, 546.704, -29.0804, 0.83", "-28.3642, 550.537, -29.7587, 0.83", "-28.1928, 553.97, -30.244, 0.83", "-28.1445, 559.253, -30.6925, 0.83", "-28.3342, 565.595, -30.9688, 0.83", "-28.4825, 568.995, -30.9243, 0.83", "-28.9348, 581.407, -30.3813, 0.83", "-29.0939, 584.527, -30.1278, 0.83", "-29.3679, 588.819, -29.5546, 0.83", "-29.4791, 590.594, -29.2462, 0.83", "-29.8413, 597.233, -27.9043, 0.83", "-30.0914, 601.941, -26.7378, 0.83", "-30.31, 606.14, -25.4743, 0.83", "-30.9271, 615.701, -22.9092, 0.83", "-31.5514, 622.065, -21.284, 0.83", "-32.1714, 626.507, -20.3126, 0.83", "-32.8929, 630.195, -19.5354, 0.83", "-33.4567, 633.129, -18.9861, 0.83", "-34.9171, 640.39, -17.7473, 0.83", "-36.426, 648.513, -16.5361, 0.83", "-38.8432, 660.35, -14.7537, 0.83", "-39.9153, 665.241, -14.1077, 0.83", "-41.623, 672.84, -13.17, 0.83", "-44.9405, 685.198, -11.582, 0.83", "-47.1223, 692.571, -10.6854, 0.83", "-48.8094, 697.756, -10.2852, 0.83", "-51.5847, 705.259, -9.93842, 0.83", "-52.7768, 708.172, -9.90762, 0.83", "-56.3799, 715.684, -10.1213, 0.55", "-58.954, 720.853, -10.5623, 0.55", "-60.142, 723.343, -10.7212, 0.55", "-62.6742, 729.617, -11.2562, 0.55", "-64.2019, 733.666, -11.599, 0.55", "-65.9614, 738.401, -11.9124, 0.55", "-68.228, 745.156, -12.2488, 0.55", "-71.5377, 753.956, -12.402, 0.55", "-74.3363, 761.018, -12.4404, 0.55", "-75.5874, 764.092, -12.4084, 0.55", "-78.298, 770.84, -12.1894, 0.55", "-79.6802, 774.032, -11.8962, 0.55", "-82.2729, 780.227, -10.8761, 0.55", "-84.6163, 785.8, -9.68877, 0.55", "-86.0598, 789.506, -8.79139, 0.55", "-87.1442, 792.542, -8.04761, 0.55", "-88.0119, 795.057, -7.45081, 0.55", "-91.7188, 806.889, -5.09222, 0.55", "-93.0195, 811.483, -4.35759, 0.55", "-95.3535, 819.554, -3.38165, 0.55", "-96.8444, 824.888, -3.07869, 0.55", "-97.6476, 827.753, -2.97602, 0.55", "-101.381, 841.22, -2.86852, 0.55", "-102.609, 845.423, -2.98849, 0.55", "-104.371, 852.053, -3.2739, 0.55", "-106.269, 858.706, -3.87502, 0.28" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 39
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-6.39604, 86.6618, -18.443, 1.11", "-4.10853, 85.9791, -21.0959, 0.83", "-0.882446, 84.5262, -25.0771, 0.55", "1.31758, 83.3787, -27.913, 0.55", "5.17591, 81.1623, -33.0024, 0.55", "6.97623, 80.0371, -35.4127, 0.55", "8.12582, 79.2609, -36.9569, 0.55", "10.4377, 77.2742, -40.511, 0.55", "11.7395, 75.9203, -42.5632, 0.55", "13.2161, 74.4012, -44.8323, 0.55", "14.155, 73.4253, -46.2358, 0.55", "17.5567, 70.2435, -50.8428, 0.55", "19.4997, 68.6231, -53.3926, 0.55", "23.1535, 66.0316, -57.9968, 0.55", "24.8263, 65.0121, -60.0044, 0.55", "25.9843, 64.3702, -61.3912, 0.55", "26.9612, 63.8928, -62.548, 0.55", "28.6633, 63.2495, -64.5716, 0.55", "31.1652, 62.5165, -67.6453, 0.55", "32.4912, 62.2021, -69.516, 0.55", "34.4586, 61.6075, -72.7783, 0.55", "35.4061, 61.3469, -74.4312, 0.55", "36.9148, 60.9662, -77.2673, 0.55", "38.2435, 60.7142, -79.8885, 0.55", "39.0725, 60.6006, -81.7115, 0.55", "40.7642, 60.5581, -85.4805, 0.55", "41.8019, 60.6969, -87.7131, 0.55", "43.3751, 60.9568, -91.2051, 0.55", "44.3397, 61.0957, -93.3491, 0.55", "45.3305, 61.3343, -95.5359, 0.55", "46.201, 61.6782, -97.4784, 0.28" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-36.6736, 130.814, 46.565, 0.55", "-38.5654, 131.516, 48.1113, 0.55", "-40.2169, 132.129, 49.4613, 0.55", "-41.2666, 132.518, 50.3193, 0.28", "-42.1182, 132.834, 51.0154, 0.28", "-45.4054, 134.054, 53.7023, 0.28", "-46.8914, 134.605, 54.917, 0.28", "-54.8478, 138.415, 62.1923, 0.28", "-62.949, 140.851, 69.8476, 0.28" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-36.6736, 130.814, 46.565, 0.55", "-35.9177, 133.595, 46.5056, 0.28" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_2", "apic_1", "axon_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_31", "dend_28", "dend_11", "dend_0", "apic_2", "apic_1", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "apic_4", "apic_3", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "apic_8", "apic_5", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "apic_10", "apic_9", "apic_7", "apic_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "apic_14", "apic_11", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_31", "dend_28", "dend_11", "dend_0", "apic_2", "apic_1", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "apic_4", "apic_3", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "apic_8", "apic_5", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "apic_10", "apic_9", "apic_7", "apic_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "apic_14", "apic_11", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_28", "dend_11", "dend_0", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_2", "apic_2", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "apic_14", "apic_14", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_SP_274e5a90fb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_2, id: apic_2, parent: apic_0
create apic_2
public apic_2
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: apic_14, id: apic_14, parent: apic_10
create apic_14
public apic_14
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_31, dend_28, dend_11, dend_0, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_69
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_12, dend_12, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999998123122724)
    connect dend_31(0), soma_0(0.49999998123122724)
    connect dend_28(0), soma_0(0.49999998123122724)
    connect dend_11(0), soma_0(0.49999998123122724)
    connect dend_0(0), soma_0(0.49999998123122724)
    connect axon_0(0), soma_0(1.0)
    connect apic_2(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect apic_14(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.7762, -6.65843, 1.68973, 1.62225 ) }
    soma_0 { pt3dadd( -3.37091, -6.05756, 1.49202, 2.68302 ) }
    soma_0 { pt3dadd( -2.96562, -5.45669, 1.29431, 4.18183 ) }
    soma_0 { pt3dadd( -2.56033, -4.85582, 1.09659, 5.23637 ) }
    soma_0 { pt3dadd( -2.15504, -4.25495, 0.898882, 5.96111 ) }
    soma_0 { pt3dadd( -1.74975, -3.65409, 0.701169, 6.6575 ) }
    soma_0 { pt3dadd( -1.34446, -3.05322, 0.503456, 7.22539 ) }
    soma_0 { pt3dadd( -0.939173, -2.45235, 0.305744, 7.74314 ) }
    soma_0 { pt3dadd( -0.533883, -1.85148, 0.108031, 8.02668 ) }
    soma_0 { pt3dadd( -0.128593, -1.25061, -0.0896814, 7.99979 ) }
    soma_0 { pt3dadd( 0.276697, -0.649743, -0.287394, 7.71194 ) }
    soma_0 { pt3dadd( 0.681986, -0.0488738, -0.485107, 7.51065 ) }
    soma_0 { pt3dadd( 1.08728, 0.551995, -0.682819, 7.35885 ) }
    soma_0 { pt3dadd( 1.49257, 1.15286, -0.880532, 7.1093 ) }
    soma_0 { pt3dadd( 1.89786, 1.75373, -1.07824, 6.85975 ) }
    soma_0 { pt3dadd( 2.30315, 2.3546, -1.27596, 6.61021 ) }
    soma_0 { pt3dadd( 2.70844, 2.95547, -1.47367, 6.35799 ) }
    soma_0 { pt3dadd( 3.11373, 3.55634, -1.67138, 5.44931 ) }
    soma_0 { pt3dadd( 3.51902, 4.15721, -1.86909, 4.29173 ) }
    soma_0 { pt3dadd( 3.92431, 4.75808, -2.06681, 2.41932 ) }
    soma_0 { pt3dadd( 4.3296, 5.35894, -2.26452, 1.40798 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -0.790603, 6.06157, -1.87579, 2.22 ) }
    apic_0 { pt3dadd( -0.910639, 6.84393, -2.11745, 2.22 ) }
    apic_0 { pt3dadd( -0.931729, 9.2326, -1.98366, 1.66 ) }
    apic_0 { pt3dadd( -0.974389, 14.0637, -1.71306, 1.66 ) }
    apic_0 { pt3dadd( -0.995919, 16.5017, -1.5765, 1.39 ) }
    apic_0 { pt3dadd( -1.01525, 18.6916, -1.45384, 1.39 ) }
    apic_0 { pt3dadd( -1.03161, 20.5438, -1.3501, 1.94 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.42677, -4.2805, -2.46667, 1.94 ) }
    dend_31 { pt3dadd( -4.08154, -5.10331, -2.91262, 1.94 ) }
    dend_31 { pt3dadd( -4.84072, -7.39663, -3.32099, 1.11 ) }
    dend_31 { pt3dadd( -5.51413, -9.43084, -3.68322, 1.11 ) }
    dend_31 { pt3dadd( -5.94992, -10.7473, -3.91763, 1.11 ) }
    dend_31 { pt3dadd( -6.65471, -12.8763, -4.29674, 1.94 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.13212, -1.70015, -2.57467, 0.83 ) }
    dend_28 { pt3dadd( -11.2221, -3.86943, -5.49939, 0.83 ) }
    dend_28 { pt3dadd( -12.7247, -5.12007, -5.13311, 0.83 ) }
    dend_28 { pt3dadd( -17.1181, -8.69771, -4.33001, 1.11 ) }
    dend_28 { pt3dadd( -21.216, -11.8342, -3.44739, 0.55 ) }
    dend_28 { pt3dadd( -23.0036, -13.1656, -3.06353, 0.55 ) }
    dend_28 { pt3dadd( -25.854, -15.1571, -2.53872, 0.55 ) }
    dend_28 { pt3dadd( -28.7014, -16.7363, -2.34235, 0.55 ) }
    dend_28 { pt3dadd( -30.0489, -17.4677, -2.32152, 0.55 ) }
    dend_28 { pt3dadd( -33.9232, -19.4187, -2.359, 0.55 ) }
    dend_28 { pt3dadd( -36.9888, -21.0014, -2.1962, 0.55 ) }
    dend_28 { pt3dadd( -40.1098, -22.4666, -1.92565, 0.83 ) }
    dend_28 { pt3dadd( -43.4316, -23.9368, -1.50412, 0.55 ) }
    dend_28 { pt3dadd( -44.8299, -24.5779, -1.33209, 0.83 ) }
    dend_28 { pt3dadd( -48.2727, -26.25, -1.12879, 0.55 ) }
    dend_28 { pt3dadd( -52.7934, -28.5992, -1.24554, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.00657, -1.82482, 3.02105, 1.39 ) }
    dend_11 { pt3dadd( 10.7987, -4.18432, 6.66285, 1.39 ) }
    dend_11 { pt3dadd( 12.032, -4.7582, 4.45406, 1.39 ) }
    dend_11 { pt3dadd( 13.2043, -5.30367, 2.35461, 1.39 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 54/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.10871, 3.84586, -3.97262, 1.39 ) }
    dend_0 { pt3dadd( 4.12133, 5.08917, -5.29699, 1.39 ) }
    dend_0 { pt3dadd( 7.19063, 5.40688, -9.18462, 1.39 ) }
    dend_0 { pt3dadd( 10.1185, 5.70995, -12.893, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 58/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.3296, 5.35894, -2.26452, 0.67 ) }
    axon_0 { pt3dadd( 12.7175, 17.7945, -2.26452, 0.67 ) }
    axon_0 { pt3dadd( 21.1054, 30.2301, -2.26452, 0.67 ) }
    // Section: apic_2, id: apic_2, parent: apic_0 (entry count 61/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -1.03161, 20.5438, -1.3501, 1.94 ) }
    apic_2 { pt3dadd( -3.12977, 25.1008, -1.80778, 1.11 ) }
    apic_2 { pt3dadd( -4.45957, 27.9891, -2.09786, 1.11 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 64/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -1.03161, 20.5438, -1.3501, 1.94 ) }
    apic_1 { pt3dadd( -4.58231, 21.8938, 0.105907, 1.11 ) }
    apic_1 { pt3dadd( -7.59571, 22.8915, 1.39304, 0.83 ) }
    apic_1 { pt3dadd( -9.19206, 23.3613, 2.115, 0.83 ) }
    apic_1 { pt3dadd( -11.8056, 24.1402, 3.38306, 0.83 ) }
    apic_1 { pt3dadd( -13.9742, 24.7259, 4.4024, 0.83 ) }
    apic_1 { pt3dadd( -15.2496, 25.0135, 4.99398, 0.83 ) }
    apic_1 { pt3dadd( -17.5931, 25.3958, 6.31763, 0.83 ) }
    apic_1 { pt3dadd( -19.2998, 25.5234, 7.30625, 0.83 ) }
    apic_1 { pt3dadd( -21.3328, 25.5348, 8.51624, 0.83 ) }
    apic_1 { pt3dadd( -23.5666, 25.4271, 9.91157, 0.83 ) }
    apic_1 { pt3dadd( -25.2983, 25.3848, 11.0711, 0.83 ) }
    apic_1 { pt3dadd( -27.51, 25.4048, 12.6259, 0.83 ) }
    apic_1 { pt3dadd( -29.0818, 25.5562, 13.7637, 0.55 ) }
    apic_1 { pt3dadd( -31.3032, 25.885, 15.3773, 0.55 ) }
    apic_1 { pt3dadd( -33.9519, 26.5284, 17.3475, 0.55 ) }
    apic_1 { pt3dadd( -35.3266, 27.0019, 18.4451, 0.55 ) }
    apic_1 { pt3dadd( -36.7973, 27.6353, 19.6137, 0.55 ) }
    apic_1 { pt3dadd( -39.4021, 28.731, 21.6072, 0.55 ) }
    apic_1 { pt3dadd( -39.8731, 28.9326, 21.9758, 0.83 ) }
    apic_1 { pt3dadd( -42.6395, 30.0482, 24.1685, 0.55 ) }
    apic_1 { pt3dadd( -44.8724, 30.8274, 25.9503, 0.55 ) }
    apic_1 { pt3dadd( -45.7349, 31.1211, 26.6765, 0.55 ) }
    apic_1 { pt3dadd( -49.0374, 32.2912, 29.4748, 0.55 ) }
    apic_1 { pt3dadd( -50.3617, 32.7287, 30.7042, 0.55 ) }
    apic_1 { pt3dadd( -51.4622, 33.1406, 31.8229, 0.55 ) }
    apic_1 { pt3dadd( -52.4055, 33.532, 32.815, 0.55 ) }
    apic_1 { pt3dadd( -54.1698, 34.4374, 34.7051, 0.55 ) }
    apic_1 { pt3dadd( -55.5187, 35.2141, 36.2005, 0.55 ) }
    apic_1 { pt3dadd( -57.2105, 36.4814, 38.5164, 0.55 ) }
    apic_1 { pt3dadd( -58.4252, 37.4214, 40.4566, 0.55 ) }
    apic_1 { pt3dadd( -59.1604, 38.0298, 41.9648, 1.11 ) }
    apic_1 { pt3dadd( -59.7704, 38.558, 43.3239, 0.55 ) }
    apic_1 { pt3dadd( -60.3559, 39.0082, 44.7189, 0.83 ) }
    apic_1 { pt3dadd( -61.438, 39.9846, 47.9379, 0.28 ) }
    apic_1 { pt3dadd( -61.9181, 40.4418, 49.3895, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_1 { pt3dadd( -62.5251, 40.9368, 51.9031, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 1/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.65471, -12.8763, -4.29674, 1.94 ) }
    dend_33 { pt3dadd( -7.55205, -14.4508, -7.05346, 1.39 ) }
    dend_33 { pt3dadd( -8.04589, -15.3174, -8.57058, 1.39 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 4/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -6.65471, -12.8763, -4.29674, 1.94 ) }
    dend_32 { pt3dadd( -8.13486, -15.7922, -4.08319, 0.55 ) }
    dend_32 { pt3dadd( -8.92407, -17.361, -4.06796, 0.83 ) }
    dend_32 { pt3dadd( -10.2125, -19.7281, -4.181, 0.55 ) }
    dend_32 { pt3dadd( -11.0664, -21.4267, -4.25124, 0.55 ) }
    dend_32 { pt3dadd( -12.5192, -24.6284, -4.34788, 0.55 ) }
    dend_32 { pt3dadd( -13.5345, -26.8777, -4.33071, 0.55 ) }
    dend_32 { pt3dadd( -14.5383, -29.1444, -4.27237, 0.55 ) }
    dend_32 { pt3dadd( -15.5618, -31.2377, -4.13158, 0.55 ) }
    dend_32 { pt3dadd( -16.9273, -34.0694, -3.92019, 0.55 ) }
    dend_32 { pt3dadd( -17.7371, -35.7235, -3.79355, 0.55 ) }
    dend_32 { pt3dadd( -18.8425, -37.9937, -3.5193, 0.55 ) }
    dend_32 { pt3dadd( -19.667, -39.594, -3.13853, 0.55 ) }
    dend_32 { pt3dadd( -21.3616, -42.56, -2.20615, 0.55 ) }
    dend_32 { pt3dadd( -22.554, -44.462, -1.54914, 0.55 ) }
    dend_32 { pt3dadd( -23.0241, -45.1226, -1.30878, 0.55 ) }
    dend_32 { pt3dadd( -24.6183, -47.3182, -0.387895, 0.83 ) }
    dend_32 { pt3dadd( -25.8507, -49.0716, 0.494384, 0.55 ) }
    dend_32 { pt3dadd( -26.899, -50.6904, 1.43229, 1.11 ) }
    dend_32 { pt3dadd( -28.5608, -53.4845, 3.27238, 0.55 ) }
    dend_32 { pt3dadd( -29.4852, -55.1066, 4.36265, 0.55 ) }
    dend_32 { pt3dadd( -30.4298, -56.978, 5.57634, 0.83 ) }
    dend_32 { pt3dadd( -31.6183, -59.7719, 7.23868, 0.55 ) }
    dend_32 { pt3dadd( -32.4249, -62.0195, 8.52829, 0.55 ) }
    dend_32 { pt3dadd( -32.911, -63.7526, 9.44315, 0.55 ) }
    dend_32 { pt3dadd( -33.2005, -65.0441, 10.0125, 0.55 ) }
    dend_32 { pt3dadd( -33.5716, -66.7981, 10.6296, 0.55 ) }
    dend_32 { pt3dadd( -34.0503, -69.0433, 11.2733, 0.55 ) }
    dend_32 { pt3dadd( -34.2807, -70.0574, 11.5139, 0.55 ) }
    dend_32 { pt3dadd( -35.0451, -72.8936, 12.1594, 0.55 ) }
    dend_32 { pt3dadd( -35.7972, -75.5431, 12.7438, 0.55 ) }
    dend_32 { pt3dadd( -36.4245, -77.5801, 13.213, 0.55 ) }
    dend_32 { pt3dadd( -36.9914, -79.2923, 13.606, 0.28 ) }
    dend_32 { pt3dadd( -37.2817, -80.165, 13.8168, 0.55 ) }
    dend_32 { pt3dadd( -37.9392, -82.2032, 14.2932, 0.28 ) }
    dend_32 { pt3dadd( -38.4479, -83.7839, 14.6965, 0.83 ) }
    dend_32 { pt3dadd( -38.9069, -85.3924, 15.0001, 0.55 ) }
    dend_32 { pt3dadd( -39.4349, -87.3364, 15.2552, 0.28 ) }
    dend_32 { pt3dadd( -39.6279, -88.0569, 15.3065, 0.55 ) }
    dend_32 { pt3dadd( -39.9994, -89.4576, 15.344, 0.28 ) }
    dend_32 { pt3dadd( -40.1803, -90.1923, 15.3001, 0.55 ) }
    dend_32 { pt3dadd( -40.6442, -92.2778, 15.0008, 0.28 ) }
    dend_32 { pt3dadd( -40.8534, -93.3034, 14.7935, 0.55 ) }
    dend_32 { pt3dadd( -41.1041, -94.6122, 14.4642, 0.28 ) }
    dend_32 { pt3dadd( -41.2359, -95.3161, 14.2806, 0.55 ) }
    dend_32 { pt3dadd( -41.4101, -96.3233, 13.9892, 0.28 ) }
    dend_32 { pt3dadd( -41.6947, -97.9839, 13.5306, 0.28 ) }
    dend_32 { pt3dadd( -41.8778, -99.1152, 13.2292, 0.55 ) }
    dend_32 { pt3dadd( -42.1656, -101.117, 12.8722, 0.28 ) }
    dend_32 { pt3dadd( -42.2961, -102.053, 12.7694, 0.28 ) }
    dend_32 { pt3dadd( -42.4235, -103.004, 12.7541, 0.83 ) }
    dend_32 { pt3dadd( -42.7719, -105.639, 12.904, 0.28 ) }
    dend_32 { pt3dadd( -42.9665, -107.346, 13.1176, 0.83 ) }
    dend_32 { pt3dadd( -43.3912, -111.434, 13.9158, 0.28 ) }
    dend_32 { pt3dadd( -43.4417, -111.957, 14.0472, 0.55 ) }
    dend_32 { pt3dadd( -43.6624, -114.487, 14.7792, 0.28 ) }
    dend_32 { pt3dadd( -43.6855, -114.807, 14.8896, 0.55 ) }
    dend_32 { pt3dadd( -43.7442, -116.238, 15.5345, 0.28 ) }
    dend_32 { pt3dadd( -43.7607, -116.682, 15.7969, 0.55 ) }
    dend_32 { pt3dadd( -45.3858, -124.832, 17.778, 0.55 ) }
    dend_32 { pt3dadd( -46.9096, -132.387, 21.3809, 0.55 ) }
    dend_32 { pt3dadd( -46.8476, -140.137, 24.9193, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -52.7934, -28.5992, -1.24554, 0.83 ) }
    dend_30 { pt3dadd( -53.8572, -30.0836, -2.5798, 0.55 ) }
    dend_30 { pt3dadd( -54.4787, -30.8414, -3.50244, 0.55 ) }
    dend_30 { pt3dadd( -56.4149, -33.1958, -6.00205, 0.55 ) }
    dend_30 { pt3dadd( -58.1359, -35.4658, -8.10571, 0.55 ) }
    dend_30 { pt3dadd( -59.3564, -37.3298, -9.68198, 0.55 ) }
    dend_30 { pt3dadd( -61.2805, -40.9202, -12.7694, 0.55 ) }
    dend_30 { pt3dadd( -62.201, -42.7512, -14.5445, 0.55 ) }
    dend_30 { pt3dadd( -63.365, -45.5365, -17.3712, 0.55 ) }
    dend_30 { pt3dadd( -63.7268, -46.7631, -18.7701, 0.55 ) }
    dend_30 { pt3dadd( -63.928, -48.4727, -21.0119, 0.55 ) }
    dend_30 { pt3dadd( -63.8098, -50.8354, -24.1161, 0.83 ) }
    dend_30 { pt3dadd( -63.6029, -54.0858, -28.25, 0.55 ) }
    dend_30 { pt3dadd( -63.5419, -54.6662, -29.0903, 0.55 ) }
    dend_30 { pt3dadd( -63.3575, -56.6259, -32.5889, 0.28 ) }
    dend_30 { pt3dadd( -63.3625, -57.9325, -35.0926, 0.83 ) }
    dend_30 { pt3dadd( -63.4095, -58.8574, -36.9686, 0.83 ) }
    dend_30 { pt3dadd( -63.6287, -60.9531, -41.4585, 0.28 ) }
    dend_30 { pt3dadd( -63.6757, -61.6854, -43.0398, 0.28 ) }
    dend_30 { pt3dadd( -63.8943, -64.5178, -49.3713, 1.66 ) }
    dend_30 { pt3dadd( -64.0492, -66.3386, -53.3049, 0.28 ) }
    dend_30 { pt3dadd( -64.1062, -67.0358, -54.7664, 0.28 ) }
    dend_30 { pt3dadd( -64.2671, -68.0318, -57.0982, 1.11 ) }
    dend_30 { pt3dadd( -64.4936, -69.2674, -59.8033, 0.55 ) }
    dend_30 { pt3dadd( -64.8764, -70.5523, -62.0557, 0.28 ) }
    dend_30 { pt3dadd( -65.1588, -71.2085, -63.0879, 0.55 ) }
    dend_30 { pt3dadd( -66.1781, -73.1175, -66.3096, 0.55 ) }
    dend_30 { pt3dadd( -68.2138, -76.646, -72.442, 0.55 ) }
    dend_30 { pt3dadd( -69.8551, -79.0429, -76.8865, 0.28 ) }
    dend_30 { pt3dadd( -70.6135, -80.0362, -78.8243, 0.83 ) }
    dend_30 { pt3dadd( -73.1979, -83.2464, -85.0771, 0.83 ) }
    dend_30 { pt3dadd( -74.6108, -84.8619, -88.5, 0.28 ) }
    dend_30 { pt3dadd( -74.8406, -85.0963, -89.0664, 0.83 ) }
    dend_30 { pt3dadd( -77.4635, -87.5351, -95.4268, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -77.9719, -87.8651, -96.6646, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -52.7934, -28.5992, -1.24554, 0.83 ) }
    dend_29 { pt3dadd( -56.2722, -29.1083, -1.23797, 0.55 ) }
    dend_29 { pt3dadd( -63.6868, -30.2934, -1.03305, 0.55 ) }
    dend_29 { pt3dadd( -69.2984, -31.4991, -0.637848, 0.55 ) }
    dend_29 { pt3dadd( -73.2228, -32.5405, -0.321599, 0.55 ) }
    dend_29 { pt3dadd( -77.5528, -33.8631, 0.104254, 0.55 ) }
    dend_29 { pt3dadd( -79.3232, -34.5377, 0.242327, 0.55 ) }
    dend_29 { pt3dadd( -82.6885, -36.1187, 0.520405, 0.55 ) }
    dend_29 { pt3dadd( -88.3181, -39.3933, 0.862155, 0.55 ) }
    dend_29 { pt3dadd( -92.0783, -42.0745, 1.16361, 0.83 ) }
    dend_29 { pt3dadd( -94.2991, -43.7199, 1.27244, 0.55 ) }
    dend_29 { pt3dadd( -98.0938, -46.4337, 1.20406, 0.55 ) }
    dend_29 { pt3dadd( -99.2549, -47.2331, 1.14398, 0.55 ) }
    dend_29 { pt3dadd( -101.78, -48.9647, 1.01627, 0.55 ) }
    dend_29 { pt3dadd( -105.056, -51.0278, 0.653816, 1.11 ) }
    dend_29 { pt3dadd( -109.951, -53.9977, 0.114304, 0.55 ) }
    dend_29 { pt3dadd( -112.058, -55.1437, -0.192782, 0.55 ) }
    dend_29 { pt3dadd( -114.008, -56.0115, -0.472573, 0.83 ) }
    dend_29 { pt3dadd( -116.016, -56.862, -0.834896, 0.55 ) }
    dend_29 { pt3dadd( -120.078, -58.7886, -1.76096, 0.55 ) }
    dend_29 { pt3dadd( -120.963, -59.2219, -1.98895, 0.55 ) }
    dend_29 { pt3dadd( -124.72, -60.7481, -2.82827, 1.39 ) }
    dend_29 { pt3dadd( -127.969, -62.0856, -3.46612, 0.83 ) }
    dend_29 { pt3dadd( -131.149, -63.2961, -3.96306, 0.55 ) }
    dend_29 { pt3dadd( -132.947, -63.7887, -4.16303, 0.55 ) }
    dend_29 { pt3dadd( -135.544, -64.3268, -4.26191, 0.55 ) }
    dend_29 { pt3dadd( -140.93, -65.2858, -4.41589, 0.55 ) }
    dend_29 { pt3dadd( -143.646, -65.6927, -4.46975, 0.55 ) }
    dend_29 { pt3dadd( -145.409, -65.9776, -4.59348, 0.55 ) }
    dend_29 { pt3dadd( -149.526, -66.7009, -5.17971, 0.83 ) }
    dend_29 { pt3dadd( -152.06, -67.2023, -5.71027, 0.83 ) }
    dend_29 { pt3dadd( -156.371, -68.3798, -6.96971, 0.55 ) }
    dend_29 { pt3dadd( -158.838, -69.2736, -7.88205, 0.83 ) }
    dend_29 { pt3dadd( -161.593, -70.4407, -9.00808, 0.28 ) }
    dend_29 { pt3dadd( -164.043, -71.7678, -10.0802, 0.55 ) }
    dend_29 { pt3dadd( -164.891, -72.4217, -10.4205, 0.28 ) }
    dend_29 { pt3dadd( -166.183, -73.5696, -10.9628, 0.83 ) }
    dend_29 { pt3dadd( -167.544, -75.0525, -11.4843, 0.55 ) }
    dend_29 { pt3dadd( -169.608, -77.453, -12.0825, 0.28 ) }
    dend_29 { pt3dadd( -171.362, -79.5945, -12.4204, 0.55 ) }
    dend_29 { pt3dadd( -173.848, -82.5945, -12.815, 0.28 ) }
    dend_29 { pt3dadd( -177.034, -86.1581, -13.3299, 0.83 ) }
    dend_29 { pt3dadd( -179.169, -88.2941, -13.7787, 0.83 ) }
    dend_29 { pt3dadd( -183.03, -92.1951, -14.6544, 0.28 ) }
    dend_29 { pt3dadd( -186.11, -95.1687, -15.3779, 0.55 ) }
    dend_29 { pt3dadd( -188.579, -97.5509, -15.9665, 0.28 ) }
    dend_29 { pt3dadd( -190.408, -99.1607, -16.4227, 0.83 ) }
    dend_29 { pt3dadd( -193.697, -102.122, -16.983, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 49/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 13.2043, -5.30367, 2.35461, 1.39 ) }
    dend_19 { pt3dadd( 15.6883, -3.71561, -0.824251, 0.83 ) }
    dend_19 { pt3dadd( 17.2164, -2.73863, -2.7799, 0.83 ) }
    dend_19 { pt3dadd( 18.1526, -2.14012, -3.97796, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 13.2043, -5.30367, 2.35461, 1.39 ) }
    dend_12 { pt3dadd( 15.1241, -3.20285, 3.29639, 1.11 ) }
    dend_12 { pt3dadd( 15.7204, -2.55042, 3.58887, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 56/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 10.1185, 5.70995, -12.893, 1.39 ) }
    dend_4 { pt3dadd( 11.1233, 8.15201, -16.471, 1.11 ) }
    dend_4 { pt3dadd( 11.762, 9.70407, -18.7449, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 59/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 10.1185, 5.70995, -12.893, 1.39 ) }
    dend_1 { pt3dadd( 11.4589, 4.84364, -14.8376, 0.55 ) }
    dend_1 { pt3dadd( 13.5268, 3.28309, -17.6247, 0.55 ) }
    dend_1 { pt3dadd( 14.4964, 2.68, -18.516, 0.83 ) }
    dend_1 { pt3dadd( 15.8453, 1.99831, -19.45, 0.83 ) }
    dend_1 { pt3dadd( 17.8348, 1.11951, -20.5753, 0.28 ) }
    dend_1 { pt3dadd( 19.1435, 0.59609, -21.1556, 0.83 ) }
    dend_1 { pt3dadd( 21.7039, -0.429457, -22.1203, 0.83 ) }
    dend_1 { pt3dadd( 26.5205, -2.3888, -23.5529, 0.83 ) }
    dend_1 { pt3dadd( 29.6682, -3.771, -24.4408, 0.83 ) }
    dend_1 { pt3dadd( 31.7758, -4.68249, -24.946, 0.55 ) }
    dend_1 { pt3dadd( 32.5998, -5.01542, -25.1074, 0.55 ) }
    dend_1 { pt3dadd( 33.7814, -5.4757, -25.3101, 1.11 ) }
    dend_1 { pt3dadd( 36.4019, -6.55038, -25.8189, 0.83 ) }
    dend_1 { pt3dadd( 39.0252, -8.62952, -26.2123, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 74/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.1054, 30.2301, -2.26452, 0.67 ) }
    axon_1 { pt3dadd( 29.4932, 42.6657, -2.26452, 0.67 ) }
    axon_1 { pt3dadd( 37.8811, 55.1012, -2.26452, 0.67 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 77/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -4.45957, 27.9891, -2.09786, 1.11 ) }
    apic_4 { pt3dadd( -5.01644, 29.2341, -3.22491, 1.11 ) }
    apic_4 { pt3dadd( -6.13587, 31.737, -5.49053, 1.11 ) }
    apic_4 { pt3dadd( -8.61237, 37.2741, -10.5027, 1.11 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 81/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -4.45957, 27.9891, -2.09786, 1.11 ) }
    apic_3 { pt3dadd( -13.2376, 28.7312, 4.41395, 0.83 ) }
    apic_3 { pt3dadd( -17.2933, 29.3524, 7.49667, 0.83 ) }
    apic_3 { pt3dadd( -19.0474, 29.6611, 8.71903, 0.83 ) }
    apic_3 { pt3dadd( -22.9279, 30.2926, 11.0738, 0.83 ) }
    apic_3 { pt3dadd( -26.1089, 30.6993, 12.7169, 0.83 ) }
    apic_3 { pt3dadd( -29.1226, 30.9204, 14.0122, 0.83 ) }
    apic_3 { pt3dadd( -31.9857, 30.6754, 15.2932, 0.83 ) }
    apic_3 { pt3dadd( -35.5699, 30.4851, 14.6281, 0.83 ) }
    apic_3 { pt3dadd( -38.3971, 30.4563, 13.4385, 0.83 ) }
    apic_3 { pt3dadd( -40.2453, 30.3352, 12.3922, 0.83 ) }
    apic_3 { pt3dadd( -42.1758, 30.1041, 11.2785, 0.83 ) }
    apic_3 { pt3dadd( -44.3605, 29.7167, 10.1854, 0.83 ) }
    apic_3 { pt3dadd( -50.6719, 28.4749, 7.95584, 0.83 ) }
    apic_3 { pt3dadd( -53.1092, 28.1801, 7.33905, 0.83 ) }
    apic_3 { pt3dadd( -56.2341, 28.0624, 6.75934, 0.83 ) }
    apic_3 { pt3dadd( -58.5746, 28.0508, 6.43171, 0.83 ) }
    apic_3 { pt3dadd( -61.3175, 28.0339, 6.0907, 0.83 ) }
    apic_3 { pt3dadd( -64.933, 27.9782, 5.81272, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_3 { pt3dadd( -69.1902, 27.8274, 5.83483, 1.11 ) }
    apic_3 { pt3dadd( -72.3691, 27.7205, 5.98696, 0.55 ) }
    apic_3 { pt3dadd( -75.5807, 27.5784, 6.11551, 0.55 ) }
    apic_3 { pt3dadd( -77.7531, 27.3593, 6.1632, 0.55 ) }
    apic_3 { pt3dadd( -81.6014, 26.7448, 6.30639, 0.83 ) }
    apic_3 { pt3dadd( -84.43, 25.9625, 6.50949, 0.55 ) }
    apic_3 { pt3dadd( -86.6852, 25.0374, 6.73536, 0.55 ) }
    apic_3 { pt3dadd( -89.2364, 23.6921, 7.04406, 1.11 ) }
    apic_3 { pt3dadd( -91.1016, 22.5727, 7.3669, 0.55 ) }
    apic_3 { pt3dadd( -93.1531, 21.2153, 7.87516, 0.55 ) }
    apic_3 { pt3dadd( -94.8275, 20.0224, 8.26917, 0.55 ) }
    apic_3 { pt3dadd( -96.0208, 19.2314, 8.53073, 0.55 ) }
    apic_3 { pt3dadd( -98.6427, 17.5855, 9.1095, 0.83 ) }
    apic_3 { pt3dadd( -101.515, 15.8137, 9.82972, 0.28 ) }
    apic_3 { pt3dadd( -103.565, 14.5689, 10.2772, 1.39 ) }
    apic_3 { pt3dadd( -106.255, 12.9234, 10.8336, 1.11 ) }
    apic_3 { pt3dadd( -108.446, 11.6186, 11.3648, 0.28 ) }
    apic_3 { pt3dadd( -109.822, 10.8116, 11.7165, 0.55 ) }
    apic_3 { pt3dadd( -111.908, 9.65956, 12.1565, 0.28 ) }
    apic_3 { pt3dadd( -113.801, 8.54816, 12.4773, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 20/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -8.04589, -15.3174, -8.57058, 1.39 ) }
    dend_41 { pt3dadd( -13.6904, -14.9097, -8.88528, 0.83 ) }
    dend_41 { pt3dadd( -15.7791, -14.7588, -9.00173, 0.83 ) }
    dend_41 { pt3dadd( -17.2312, -14.6539, -9.08269, 0.83 ) }
    dend_41 { pt3dadd( -18.8739, -14.5353, -9.17428, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.04589, -15.3174, -8.57058, 1.39 ) }
    dend_34 { pt3dadd( -7.05113, -17.5439, -11.621, 0.83 ) }
    dend_34 { pt3dadd( -6.1374, -19.5217, -14.6803, 0.83 ) }
    dend_34 { pt3dadd( -5.47824, -21.2076, -17.0096, 0.83 ) }
    dend_34 { pt3dadd( -4.66123, -23.5431, -20.2132, 0.83 ) }
    dend_34 { pt3dadd( -4.17264, -25.1873, -22.318, 0.83 ) }
    dend_34 { pt3dadd( -3.29585, -28.511, -26.5528, 0.83 ) }
    dend_34 { pt3dadd( -2.46494, -31.7493, -30.2895, 0.83 ) }
    dend_34 { pt3dadd( -1.69457, -35.1821, -33.9994, 0.83 ) }
    dend_34 { pt3dadd( -0.987139, -38.3181, -37.2776, 0.83 ) }
    dend_34 { pt3dadd( -0.477378, -40.5636, -39.5295, 0.83 ) }
    dend_34 { pt3dadd( 0.360134, -44.2099, -42.8401, 0.83 ) }
    dend_34 { pt3dadd( 0.878149, -46.5384, -44.7561, 0.83 ) }
    dend_34 { pt3dadd( 1.2957, -48.4, -46.0899, 0.83 ) }
    dend_34 { pt3dadd( 1.96574, -50.9552, -47.8884, 0.55 ) }
    dend_34 { pt3dadd( 2.54144, -52.9396, -49.0759, 1.39 ) }
    dend_34 { pt3dadd( 3.82064, -56.8218, -51.3211, 1.39 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 42/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 18.1526, -2.14012, -3.97796, 0.83 ) }
    dend_27 { pt3dadd( 19.1723, -2.60232, -5.19825, 0.83 ) }
    dend_27 { pt3dadd( 21.6049, -4.05532, -8.14616, 0.55 ) }
    dend_27 { pt3dadd( 22.9645, -4.96698, -9.75198, 0.55 ) }
    dend_27 { pt3dadd( 24.3019, -5.91309, -11.2164, 0.55 ) }
    dend_27 { pt3dadd( 25.4402, -6.71923, -12.4186, 0.55 ) }
    dend_27 { pt3dadd( 26.8819, -7.78076, -13.9061, 0.55 ) }
    dend_27 { pt3dadd( 28.1261, -8.6271, -15.203, 0.55 ) }
    dend_27 { pt3dadd( 29.6521, -9.61484, -16.8841, 0.55 ) }
    dend_27 { pt3dadd( 32.283, -11.1838, -19.9698, 0.55 ) }
    dend_27 { pt3dadd( 33.1448, -11.6335, -21.0222, 0.55 ) }
    dend_27 { pt3dadd( 34.7487, -12.385, -23.0895, 0.55 ) }
    dend_27 { pt3dadd( 36.2148, -12.999, -25.0743, 0.55 ) }
    dend_27 { pt3dadd( 37.9755, -13.6948, -27.5518, 0.55 ) }
    dend_27 { pt3dadd( 39.1046, -14.1447, -29.1379, 0.55 ) }
    dend_27 { pt3dadd( 40.2861, -14.6235, -30.8628, 0.55 ) }
    dend_27 { pt3dadd( 42.0624, -15.3358, -33.3289, 0.55 ) }
    dend_27 { pt3dadd( 42.7478, -15.6166, -34.2171, 0.55 ) }
    dend_27 { pt3dadd( 43.9476, -16.0794, -35.6317, 0.55 ) }
    dend_27 { pt3dadd( 46.0149, -16.743, -37.9072, 0.55 ) }
    dend_27 { pt3dadd( 48.2952, -17.302, -40.3199, 0.55 ) }
    dend_27 { pt3dadd( 49.8618, -17.5771, -41.9518, 0.55 ) }
    dend_27 { pt3dadd( 51.8995, -17.7915, -44.0395, 0.55 ) }
    dend_27 { pt3dadd( 53.8316, -17.8668, -45.9776, 0.55 ) }
    dend_27 { pt3dadd( 55.7122, -17.8221, -47.8315, 0.55 ) }
    dend_27 { pt3dadd( 56.9919, -17.7401, -49.0424, 0.55 ) }
    dend_27 { pt3dadd( 58.2403, -17.6785, -50.1618, 0.55 ) }
    dend_27 { pt3dadd( 59.115, -17.6721, -50.9593, 0.83 ) }
    dend_27 { pt3dadd( 61.0319, -17.6326, -52.7007, 0.55 ) }
    dend_27 { pt3dadd( 61.7792, -17.6508, -53.3911, 0.83 ) }
    dend_27 { pt3dadd( 64.2818, -17.7785, -55.8181, 0.55 ) }
    dend_27 { pt3dadd( 64.9964, -17.8352, -56.5385, 0.83 ) }
    dend_27 { pt3dadd( 67.6813, -18.1034, -59.3275, 0.55 ) }
    dend_27 { pt3dadd( 68.7616, -18.2817, -60.4936, 0.55 ) }
    dend_27 { pt3dadd( 69.9069, -18.5256, -61.7905, 0.55 ) }
    dend_27 { pt3dadd( 71.2456, -18.8354, -63.3423, 0.55 ) }
    dend_27 { pt3dadd( 72.0712, -19.0212, -64.3293, 0.55 ) }
    dend_27 { pt3dadd( 72.8732, -19.219, -65.3186, 0.55 ) }
    dend_27 { pt3dadd( 74.4906, -19.7151, -67.4492, 0.83 ) }
    dend_27 { pt3dadd( 75.0358, -19.942, -68.1949, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 82/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 18.1526, -2.14012, -3.97796, 0.83 ) }
    dend_20 { pt3dadd( 21.4968, -5.15547, -0.278843, 0.83 ) }
    dend_20 { pt3dadd( 23.7844, -6.58894, 1.76229, 0.83 ) }
    dend_20 { pt3dadd( 28.1589, -8.26497, 4.89453, 0.83 ) }
    dend_20 { pt3dadd( 30.4327, -9.13615, 6.52262, 0.83 ) }
    dend_20 { pt3dadd( 32.0807, -9.76753, 7.70256, 0.83 ) }
    dend_20 { pt3dadd( 35.8818, -11.2239, 10.4242, 0.55 ) }
    dend_20 { pt3dadd( 38.62, -11.607, 12.084, 0.55 ) }
    dend_20 { pt3dadd( 41.8285, -11.5219, 13.5936, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 91/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 15.7204, -2.55042, 3.58887, 1.11 ) }
    dend_16 { pt3dadd( 18.9562, 0.871167, 3.97208, 0.55 ) }
    dend_16 { pt3dadd( 21.2294, 3.81991, 4.22907, 0.83 ) }
    dend_16 { pt3dadd( 22.8183, 6.09552, 4.60076, 0.55 ) }
    dend_16 { pt3dadd( 25.1107, 9.37868, 5.13704, 0.55 ) }
    dend_16 { pt3dadd( 25.7733, 10.3276, 5.29204, 0.55 ) }
    dend_16 { pt3dadd( 26.8436, 11.8605, 5.54242, 0.83 ) }
    dend_16 { pt3dadd( 27.7458, 13.0814, 5.9765, 0.55 ) }
    dend_16 { pt3dadd( 28.8232, 14.6149, 6.08899, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( 36.836, 22.6563, 5.58399, 0.83 ) }
    dend_16 { pt3dadd( 45.1303, 30.2391, 3.88625, 0.83 ) }
    dend_16 { pt3dadd( 53.6516, 37.6895, 3.0385, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 3/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 15.7204, -2.55042, 3.58887, 1.11 ) }
    dend_13 { pt3dadd( 15.017, -2.08969, 7.05626, 0.55 ) }
    dend_13 { pt3dadd( 14.7633, -1.98376, 8.55247, 0.55 ) }
    dend_13 { pt3dadd( 14.5528, -1.79474, 10.4347, 0.55 ) }
    dend_13 { pt3dadd( 14.2313, -1.1794, 17.9503, 0.55 ) }
    dend_13 { pt3dadd( 14.2028, -0.944362, 20.2293, 0.55 ) }
    dend_13 { pt3dadd( 14.2321, -0.786123, 21.5534, 0.55 ) }
    dend_13 { pt3dadd( 15.0497, 0.202806, 28.9754, 0.55 ) }
    dend_13 { pt3dadd( 15.766, 0.830886, 32.9258, 0.55 ) }
    dend_13 { pt3dadd( 16.1942, 1.10192, 34.7562, 0.55 ) }
    dend_13 { pt3dadd( 16.9139, 1.37035, 37.2615, 1.11 ) }
    dend_13 { pt3dadd( 17.3685, 4.65079, 47.4011, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 15/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 11.762, 9.70407, -18.7449, 1.39 ) }
    dend_8 { pt3dadd( 18.3851, 10.118, -24.0894, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 17/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 11.762, 9.70407, -18.7449, 1.39 ) }
    dend_5 { pt3dadd( 12.2555, 10.4573, -20.707, 0.83 ) }
    dend_5 { pt3dadd( 12.8379, 11.9993, -24.0, 0.83 ) }
    dend_5 { pt3dadd( 13.3427, 14.5527, -28.5887, 0.83 ) }
    dend_5 { pt3dadd( 13.4614, 15.3654, -30.0322, 0.83 ) }
    dend_5 { pt3dadd( 13.4353, 16.9288, -32.8525, 0.83 ) }
    dend_5 { pt3dadd( 13.3819, 20.126, -38.6201, 0.83 ) }
    dend_5 { pt3dadd( 13.2489, 21.8801, -41.7368, 0.83 ) }
    dend_5 { pt3dadd( 12.7486, 24.9576, -46.3549, 0.83 ) }
    dend_5 { pt3dadd( 11.8117, 28.039, -51.4456, 1.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 27/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 39.0252, -8.62952, -26.2123, 0.83 ) }
    dend_3 { pt3dadd( 41.391, -9.8779, -26.9876, 0.83 ) }
    dend_3 { pt3dadd( 43.8792, -11.5676, -27.9823, 0.83 ) }
    dend_3 { pt3dadd( 45.3106, -12.5407, -28.5089, 0.83 ) }
    dend_3 { pt3dadd( 47.5944, -14.1355, -29.2407, 0.83 ) }
    dend_3 { pt3dadd( 50.7852, -16.3754, -30.2569, 0.83 ) }
    dend_3 { pt3dadd( 55.5088, -19.721, -31.7192, 0.83 ) }
    dend_3 { pt3dadd( 58.5847, -21.9518, -32.6615, 0.83 ) }
    dend_3 { pt3dadd( 62.0851, -24.625, -33.641, 0.83 ) }
    dend_3 { pt3dadd( 65.5636, -27.3276, -34.5876, 0.83 ) }
    dend_3 { pt3dadd( 67.1686, -28.6212, -35.0048, 1.11 ) }
    dend_3 { pt3dadd( 72.2135, -32.8159, -36.1949, 0.83 ) }
    dend_3 { pt3dadd( 74.4287, -34.5925, -36.7088, 0.83 ) }
    dend_3 { pt3dadd( 76.7378, -36.4209, -37.2065, 0.83 ) }
    dend_3 { pt3dadd( 79.6671, -38.916, -37.9292, 0.83 ) }
    dend_3 { pt3dadd( 81.5551, -40.546, -38.4163, 0.83 ) }
    dend_3 { pt3dadd( 83.8123, -42.5664, -38.9196, 0.28 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 44/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 39.0252, -8.62952, -26.2123, 0.83 ) }
    dend_2 { pt3dadd( 40.426, -10.6918, -27.4055, 0.28 ) }
    dend_2 { pt3dadd( 40.7186, -11.0504, -27.5946, 0.55 ) }
    dend_2 { pt3dadd( 42.0955, -12.6527, -28.4029, 0.28 ) }
    dend_2 { pt3dadd( 43.6601, -14.4196, -29.2201, 1.11 ) }
    dend_2 { pt3dadd( 48.2176, -19.4169, -31.4825, 0.28 ) }
    dend_2 { pt3dadd( 48.8043, -20.0484, -31.7563, 0.83 ) }
    dend_2 { pt3dadd( 52.1023, -23.2703, -33.0706, 0.28 ) }
    dend_2 { pt3dadd( 52.8122, -23.9196, -33.311, 0.55 ) }
    dend_2 { pt3dadd( 54.1349, -25.078, -33.6846, 0.28 ) }
    dend_2 { pt3dadd( 56.3951, -26.9198, -34.2333, 0.83 ) }
    dend_2 { pt3dadd( 59.3507, -29.1461, -34.7821, 0.28 ) }
    dend_2 { pt3dadd( 60.9767, -30.3708, -35.099, 0.55 ) }
    dend_2 { pt3dadd( 63.2722, -32.0981, -35.5877, 0.28 ) }
    dend_2 { pt3dadd( 64.136, -32.7206, -35.768, 0.55 ) }
    dend_2 { pt3dadd( 67.2731, -34.8813, -36.4462, 0.28 ) }
    dend_2 { pt3dadd( 69.8834, -36.5681, -36.8917, 0.55 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 61/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -8.61237, 37.2741, -10.5027, 1.11 ) }
    apic_8 { pt3dadd( -8.37841, 41.9253, -10.9874, 1.11 ) }
    apic_8 { pt3dadd( -7.43922, 49.7605, -11.5279, 1.11 ) }
    apic_8 { pt3dadd( -7.13373, 52.3091, -11.7037, 1.11 ) }
    apic_8 { pt3dadd( -6.7578, 55.4454, -11.92, 1.11 ) }
    apic_8 { pt3dadd( -6.17423, 60.3139, -12.2559, 1.11 ) }
    apic_8 { pt3dadd( -6.35164, 65.5051, -13.326, 1.11 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 68/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -8.61237, 37.2741, -10.5027, 1.11 ) }
    apic_5 { pt3dadd( -10.5853, 36.7226, -6.74974, 1.11 ) }
    apic_5 { pt3dadd( -13.6334, 35.8705, -0.951376, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 71/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -18.8739, -14.5353, -9.17428, 1.11 ) }
    dend_45 { pt3dadd( -20.3126, -13.8968, -11.2018, 0.55 ) }
    dend_45 { pt3dadd( -20.5219, -13.8632, -11.511, 0.55 ) }
    dend_45 { pt3dadd( -21.0941, -13.8939, -12.3542, 0.55 ) }
    dend_45 { pt3dadd( -24.3082, -14.5373, -16.7922, 0.55 ) }
    dend_45 { pt3dadd( -25.1024, -14.7261, -17.7439, 0.55 ) }
    dend_45 { pt3dadd( -25.5456, -14.8315, -18.2751, 0.55 ) }
    dend_45 { pt3dadd( -27.662, -15.6215, -20.6447, 0.55 ) }
    dend_45 { pt3dadd( -28.3765, -15.9594, -21.4458, 0.55 ) }
    dend_45 { pt3dadd( -29.0929, -16.4483, -22.255, 0.55 ) }
    dend_45 { pt3dadd( -30.3733, -18.0422, -23.226, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -18.8739, -14.5353, -9.17428, 1.11 ) }
    dend_42 { pt3dadd( -20.6107, -18.3359, -11.2782, 0.83 ) }
    dend_42 { pt3dadd( -22.9827, -22.5646, -13.5503, 0.83 ) }
    dend_42 { pt3dadd( -23.7647, -23.9673, -14.2327, 0.28 ) }
    dend_42 { pt3dadd( -24.2926, -24.9696, -14.7156, 0.83 ) }
    dend_42 { pt3dadd( -25.471, -27.3175, -15.6718, 0.55 ) }
    dend_42 { pt3dadd( -27.4469, -31.0365, -17.067, 0.55 ) }
    dend_42 { pt3dadd( -30.5605, -36.423, -18.9717, 0.55 ) }
    dend_42 { pt3dadd( -31.9546, -38.6875, -19.8377, 0.55 ) }
    dend_42 { pt3dadd( -34.734, -43.0017, -21.5708, 0.83 ) }
    dend_42 { pt3dadd( -38.0319, -47.8962, -23.5995, 0.83 ) }
    dend_42 { pt3dadd( -40.7844, -51.9764, -25.2628, 0.83 ) }
    dend_42 { pt3dadd( -42.5157, -54.6105, -26.3096, 0.83 ) }
    dend_42 { pt3dadd( -43.9855, -56.7645, -27.2608, 0.83 ) }
    dend_42 { pt3dadd( -45.3004, -58.4881, -28.1227, 0.83 ) }
    dend_42 { pt3dadd( -45.9191, -59.1901, -28.527, 0.83 ) }
    dend_42 { pt3dadd( -47.6333, -60.9446, -30.1817, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 99/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 3.82064, -56.8218, -51.3211, 1.39 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( 7.01017, -59.2261, -51.8953, 0.55 ) }
    dend_36 { pt3dadd( 8.68371, -60.4877, -52.1966, 0.83 ) }
    dend_36 { pt3dadd( 10.6776, -61.9907, -52.5555, 0.55 ) }
    dend_36 { pt3dadd( 11.7065, -62.7663, -52.7408, 0.55 ) }
    dend_36 { pt3dadd( 12.4824, -63.3512, -52.8804, 0.55 ) }
    dend_36 { pt3dadd( 13.915, -64.4311, -53.1383, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 3.82064, -56.8218, -51.3211, 1.39 ) }
    dend_35 { pt3dadd( 4.09264, -57.6566, -52.7811, 0.55 ) }
    dend_35 { pt3dadd( 4.73505, -59.2711, -55.4517, 0.55 ) }
    dend_35 { pt3dadd( 5.56449, -61.9042, -59.8969, 0.55 ) }
    dend_35 { pt3dadd( 5.9928, -63.1221, -62.0614, 0.55 ) }
    dend_35 { pt3dadd( 6.78223, -65.325, -65.9311, 0.55 ) }
    dend_35 { pt3dadd( 6.97323, -65.8957, -66.8816, 0.55 ) }
    dend_35 { pt3dadd( 7.58527, -67.732, -69.8107, 1.11 ) }
    dend_35 { pt3dadd( 8.20686, -69.9074, -72.8965, 0.28 ) }
    dend_35 { pt3dadd( 8.78913, -71.9746, -75.2649, 0.28 ) }
    dend_35 { pt3dadd( 9.0545, -73.1098, -76.3591, 0.28 ) }
    dend_35 { pt3dadd( 9.28836, -74.5741, -77.3824, 0.83 ) }
    dend_35 { pt3dadd( 9.57094, -76.0139, -78.2812, 0.28 ) }
    dend_35 { pt3dadd( 9.93961, -77.8176, -79.1225, 0.28 ) }
    dend_35 { pt3dadd( 10.3684, -79.4148, -79.6485, 0.55 ) }
    dend_35 { pt3dadd( 10.6475, -80.6119, -80.0601, 0.28 ) }
    dend_35 { pt3dadd( 10.8753, -81.836, -80.6298, 0.28 ) }
    dend_35 { pt3dadd( 11.1121, -83.4133, -81.5249, 0.83 ) }
    dend_35 { pt3dadd( 11.3999, -86.7144, -83.6907, 0.83 ) }
    dend_35 { pt3dadd( 11.6177, -89.8007, -85.7612, 0.28 ) }
    dend_35 { pt3dadd( 11.6752, -92.0061, -87.2979, 0.83 ) }
    dend_35 { pt3dadd( 11.7654, -95.1555, -89.5759, 0.28 ) }
    dend_35 { pt3dadd( 11.8181, -97.2161, -91.1468, 0.55 ) }
    dend_35 { pt3dadd( 11.6963, -99.9616, -93.5267, 0.28 ) }
    dend_35 { pt3dadd( 11.5556, -101.76, -95.3002, 1.11 ) }
    dend_35 { pt3dadd( 11.2432, -105.057, -98.8469, 0.28 ) }
    dend_35 { pt3dadd( 11.1218, -107.539, -101.539, 0.28 ) }
    dend_35 { pt3dadd( 11.0855, -108.76, -102.923, 0.83 ) }
    dend_35 { pt3dadd( 10.8283, -113.007, -108.01, 0.28 ) }
    dend_35 { pt3dadd( 10.7319, -114.1, -109.406, 0.55 ) }
    dend_35 { pt3dadd( 10.5325, -115.422, -111.223, 0.55 ) }
    dend_35 { pt3dadd( 10.2733, -117.145, -113.734, 0.55 ) }
    dend_35 { pt3dadd( 9.88034, -118.936, -116.276, 0.28 ) }
    dend_35 { pt3dadd( 9.80353, -119.603, -117.112, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 41.8285, -11.5219, 13.5936, 0.55 ) }
    dend_22 { pt3dadd( 42.5132, -8.32052, 14.9138, 0.28 ) }
    dend_22 { pt3dadd( 42.6294, -7.77677, 15.1381, 0.83 ) }
    dend_22 { pt3dadd( 42.8903, -6.55676, 15.6412, 0.28 ) }
    dend_22 { pt3dadd( 43.7189, -2.68244, 17.2389, 0.83 ) }
    dend_22 { pt3dadd( 46.4756, 6.89697, 21.2567, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 46/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 41.8285, -11.5219, 13.5936, 0.55 ) }
    dend_21 { pt3dadd( 46.5636, -13.993, 15.7634, 0.28 ) }
    dend_21 { pt3dadd( 46.9979, -14.2196, 15.9624, 0.83 ) }
    dend_21 { pt3dadd( 48.3506, -14.9256, 16.5823, 0.55 ) }
    dend_21 { pt3dadd( 51.9339, -16.7956, 18.2243, 1.11 ) }
    dend_21 { pt3dadd( 60.0765, -18.7726, 22.2313, 1.11 ) }
    dend_21 { pt3dadd( 68.3834, -21.4888, 25.3941, 1.11 ) }
    dend_21 { pt3dadd( 75.8367, -25.5965, 29.1699, 1.11 ) }
    dend_21 { pt3dadd( 82.9094, -30.3606, 32.935, 1.11 ) }
    dend_21 { pt3dadd( 89.9496, -35.8159, 35.7494, 1.11 ) }
    dend_21 { pt3dadd( 95.6924, -42.2617, 39.3716, 1.11 ) }
    dend_21 { pt3dadd( 102.197, -47.1147, 43.9555, 1.11 ) }
    dend_21 { pt3dadd( 107.375, -53.4145, 48.5363, 1.11 ) }
    dend_21 { pt3dadd( 111.047, -60.8769, 52.8943, 1.11 ) }
    dend_21 { pt3dadd( 115.753, -68.1787, 56.4549, 1.11 ) }
    dend_21 { pt3dadd( 120.779, -75.0768, 60.3313, 1.11 ) }
    dend_21 { pt3dadd( 125.869, -81.928, 64.2038, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 63/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 53.6516, 37.6895, 3.0385, 0.83 ) }
    dend_18 { pt3dadd( 61.4504, 45.0253, 1.86702, 0.83 ) }
    dend_18 { pt3dadd( 76.5077, 60.3814, 1.45489, 0.83 ) }
    dend_18 { pt3dadd( 82.3313, 69.4515, 1.31929, 0.83 ) }
    dend_18 { pt3dadd( 88.6421, 78.0804, 2.40748, 0.83 ) }
    dend_18 { pt3dadd( 95.952, 85.8357, 3.64439, 0.83 ) }
    dend_18 { pt3dadd( 102.35, 94.5027, 3.38377, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 70/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 53.6516, 37.6895, 3.0385, 0.83 ) }
    dend_17 { pt3dadd( 61.6344, 44.865, 1.80768, 0.83 ) }
    dend_17 { pt3dadd( 77.591, 58.7639, 4.65649, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 17.3685, 4.65079, 47.4011, 1.11 ) }
    dend_15 { pt3dadd( 17.3977, 5.49446, 60.5854, 0.83 ) }
    dend_15 { pt3dadd( 16.2932, 7.84335, 73.5261, 0.83 ) }
    dend_15 { pt3dadd( 13.0507, 13.1169, 85.1759, 0.83 ) }
    dend_15 { pt3dadd( 8.66472, 16.8003, 97.0603, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 78/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 17.3685, 4.65079, 47.4011, 1.11 ) }
    dend_14 { pt3dadd( 17.6705, 6.01263, 58.9947, 0.83 ) }
    dend_14 { pt3dadd( 23.1098, 7.36738, 81.5446, 0.83 ) }
    dend_14 { pt3dadd( 27.6139, 6.43791, 92.3092, 0.83 ) }
    dend_14 { pt3dadd( 32.0125, 4.93237, 103.061, 0.83 ) }
    dend_14 { pt3dadd( 37.4232, 1.70677, 112.984, 0.83 ) }
    dend_14 { pt3dadd( 43.6475, -0.871552, 122.606, 0.83 ) }
    dend_14 { pt3dadd( 49.784, -2.43019, 132.475, 0.83 ) }
    dend_14 { pt3dadd( 56.1663, -4.1958, 142.157, 0.83 ) }
    dend_14 { pt3dadd( 63.1222, -6.58525, 151.317, 0.83 ) }
    dend_14 { pt3dadd( 68.6568, -7.688, 161.582, 0.83 ) }
    dend_14 { pt3dadd( 72.7228, -9.9463, 172.344, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 18.3851, 10.118, -24.0894, 0.83 ) }
    dend_10 { pt3dadd( 21.4569, 12.0038, -27.5178, 0.83 ) }
    dend_10 { pt3dadd( 24.9175, 14.157, -31.2008, 0.83 ) }
    dend_10 { pt3dadd( 28.5501, 16.0042, -34.7833, 0.83 ) }
    dend_10 { pt3dadd( 32.2119, 17.6376, -38.2363, 0.83 ) }
    dend_10 { pt3dadd( 35.02, 18.7548, -40.8385, 0.83 ) }
    dend_10 { pt3dadd( 39.0753, 20.239, -44.5477, 0.83 ) }
    dend_10 { pt3dadd( 41.4982, 20.9425, -46.6937, 0.83 ) }
    dend_10 { pt3dadd( 45.6254, 21.8319, -50.03, 0.83 ) }
    dend_10 { pt3dadd( 47.557, 22.2154, -51.575, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 49.462, 22.5084, -53.1498, 0.83 ) }
    dend_10 { pt3dadd( 51.3916, 22.8869, -54.6984, 0.83 ) }
    dend_10 { pt3dadd( 53.0649, 23.2301, -56.0858, 0.83 ) }
    dend_10 { pt3dadd( 57.0214, 24.2309, -59.4007, 0.83 ) }
    dend_10 { pt3dadd( 59.5022, 25.0306, -61.5095, 0.83 ) }
    dend_10 { pt3dadd( 61.9078, 25.8398, -63.5327, 0.83 ) }
    dend_10 { pt3dadd( 67.9495, 27.9021, -68.6078, 0.83 ) }
    dend_10 { pt3dadd( 71.2357, 28.9287, -71.2695, 0.83 ) }
    dend_10 { pt3dadd( 73.8451, 29.7261, -73.2854, 0.55 ) }
    dend_10 { pt3dadd( 75.9248, 30.3475, -74.8246, 0.55 ) }
    dend_10 { pt3dadd( 77.9135, 30.9655, -76.2076, 0.55 ) }
    dend_10 { pt3dadd( 79.6729, 31.5163, -77.3671, 0.55 ) }
    dend_10 { pt3dadd( 85.9296, 33.4081, -81.3344, 0.55 ) }
    dend_10 { pt3dadd( 88.7072, 34.2807, -83.0421, 0.55 ) }
    dend_10 { pt3dadd( 90.5098, 34.7645, -84.2012, 1.11 ) }
    dend_10 { pt3dadd( 91.7728, 35.1246, -85.023, 0.55 ) }
    dend_10 { pt3dadd( 93.1127, 35.5052, -85.9409, 0.55 ) }
    dend_10 { pt3dadd( 96.2167, 36.3786, -88.1358, 0.55 ) }
    dend_10 { pt3dadd( 97.8878, 36.8071, -89.2835, 0.83 ) }
    dend_10 { pt3dadd( 100.462, 37.3141, -90.9996, 0.55 ) }
    dend_10 { pt3dadd( 104.558, 37.9573, -93.5201, 0.55 ) }
    dend_10 { pt3dadd( 106.4, 38.1942, -94.6107, 0.55 ) }
    dend_10 { pt3dadd( 110.924, 38.7878, -97.1962, 0.55 ) }
    dend_10 { pt3dadd( 114.122, 39.1782, -98.9856, 0.55 ) }
    dend_10 { pt3dadd( 116.523, 39.4662, -100.356, 0.55 ) }
    dend_10 { pt3dadd( 119.995, 39.925, -102.395, 0.55 ) }
    dend_10 { pt3dadd( 123.944, 40.4082, -104.881, 0.55 ) }
    dend_10 { pt3dadd( 127.812, 41.0314, -107.398, 0.28 ) }
    dend_10 { pt3dadd( 128.366, 41.127, -107.799, 0.55 ) }
    dend_10 { pt3dadd( 129.868, 41.4297, -109.011, 0.28 ) }
    dend_10 { pt3dadd( 132.408, 42.0837, -111.057, 0.28 ) }
    dend_10 { pt3dadd( 133.136, 42.3281, -111.699, 0.83 ) }
    dend_10 { pt3dadd( 135.265, 43.2695, -113.4, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 33/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.3851, 10.118, -24.0894, 0.83 ) }
    dend_9 { pt3dadd( 17.4257, 10.0182, -27.8916, 0.55 ) }
    dend_9 { pt3dadd( 17.135, 9.98646, -29.4796, 0.55 ) }
    dend_9 { pt3dadd( 16.7895, 9.97026, -31.7131, 0.55 ) }
    dend_9 { pt3dadd( 16.6522, 9.92337, -33.1654, 0.55 ) }
    dend_9 { pt3dadd( 16.6087, 9.88335, -33.8043, 0.83 ) }
    dend_9 { pt3dadd( 16.5793, 9.71346, -36.1158, 0.55 ) }
    dend_9 { pt3dadd( 16.7115, 9.36969, -38.8477, 0.55 ) }
    dend_9 { pt3dadd( 16.7971, 9.20332, -41.2895, 0.55 ) }
    dend_9 { pt3dadd( 16.8315, 9.16978, -43.3482, 0.55 ) }
    dend_9 { pt3dadd( 16.8096, 9.19073, -45.3154, 0.55 ) }
    dend_9 { pt3dadd( 16.726, 9.24381, -47.8721, 0.55 ) }
    dend_9 { pt3dadd( 16.5376, 9.32545, -50.1579, 0.55 ) }
    dend_9 { pt3dadd( 15.9761, 9.70702, -54.2198, 0.83 ) }
    dend_9 { pt3dadd( 15.7714, 9.89787, -55.5823, 0.55 ) }
    dend_9 { pt3dadd( 15.6567, 10.0182, -56.2907, 0.55 ) }
    dend_9 { pt3dadd( 15.4037, 10.3362, -58.1316, 0.83 ) }
    dend_9 { pt3dadd( 15.2082, 10.5598, -60.1158, 0.55 ) }
    dend_9 { pt3dadd( 15.2009, 10.6215, -62.2657, 0.55 ) }
    dend_9 { pt3dadd( 15.2398, 10.5206, -63.0086, 0.83 ) }
    dend_9 { pt3dadd( 15.2979, 10.2549, -64.8798, 0.28 ) }
    dend_9 { pt3dadd( 15.3183, 10.1785, -65.3992, 0.83 ) }
    dend_9 { pt3dadd( 15.334, 9.86958, -67.123, 0.28 ) }
    dend_9 { pt3dadd( 15.3054, 9.6452, -68.2717, 0.55 ) }
    dend_9 { pt3dadd( 15.0599, 9.23767, -70.7979, 0.55 ) }
    dend_9 { pt3dadd( 14.6866, 8.95491, -73.5151, 0.28 ) }
    dend_9 { pt3dadd( 14.5259, 8.88212, -74.6699, 0.28 ) }
    dend_9 { pt3dadd( 14.4059, 8.87843, -75.5752, 0.28 ) }
    dend_9 { pt3dadd( 14.2312, 8.93868, -76.9282, 0.83 ) }
    dend_9 { pt3dadd( 14.0128, 9.05433, -78.7828, 0.28 ) }
    dend_9 { pt3dadd( 13.8466, 9.16485, -80.0009, 0.83 ) }
    dend_9 { pt3dadd( 13.3841, 9.32764, -82.5292, 0.55 ) }
    dend_9 { pt3dadd( 12.9117, 9.44512, -85.0273, 0.28 ) }
    dend_9 { pt3dadd( 12.7749, 9.45681, -85.7542, 0.83 ) }
    dend_9 { pt3dadd( 12.5511, 9.50259, -86.8111, 0.83 ) }
    dend_9 { pt3dadd( 12.0912, 9.63533, -88.7967, 0.55 ) }
    dend_9 { pt3dadd( 11.6745, 9.81437, -90.4894, 0.55 ) }
    dend_9 { pt3dadd( 11.0596, 10.1712, -92.6727, 0.55 ) }
    dend_9 { pt3dadd( 10.6549, 10.3404, -94.2408, 0.55 ) }
    dend_9 { pt3dadd( 9.86744, 10.5288, -97.647, 0.55 ) }
    dend_9 { pt3dadd( 9.62564, 10.5267, -98.861, 0.28 ) }
    dend_9 { pt3dadd( 9.53488, 10.5128, -99.3702, 0.83 ) }
    dend_9 { pt3dadd( 9.10318, 10.4913, -102.182, 0.28 ) }
    dend_9 { pt3dadd( 8.39459, 10.3097, -105.789, 0.55 ) }
    dend_9 { pt3dadd( 8.21704, 10.0072, -107.049, 0.28 ) }
    dend_9 { pt3dadd( 8.19083, 9.67089, -107.437, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 79/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 11.8117, 28.039, -51.4456, 1.66 ) }
    dend_7 { pt3dadd( 11.3715, 29.8691, -53.6673, 0.55 ) }
    dend_7 { pt3dadd( 10.4014, 33.9196, -57.7538, 0.55 ) }
    dend_7 { pt3dadd( 10.116, 34.8279, -58.5639, 0.55 ) }
    dend_7 { pt3dadd( 9.60256, 36.6087, -60.1421, 0.28 ) }
    dend_7 { pt3dadd( 8.99563, 37.8947, -61.6102, 0.55 ) }
    dend_7 { pt3dadd( 7.79609, 40.0452, -64.5696, 0.55 ) }
    dend_7 { pt3dadd( 7.21821, 40.694, -65.828, 0.55 ) }
    dend_7 { pt3dadd( 5.78129, 41.7536, -68.4387, 0.55 ) }
    dend_7 { pt3dadd( 4.87808, 42.3259, -70.0447, 0.55 ) }
    dend_7 { pt3dadd( 1.1921, 44.4276, -76.6998, 1.39 ) }
    dend_7 { pt3dadd( -0.190694, 45.2054, -79.3696, 0.55 ) }
    dend_7 { pt3dadd( -1.96914, 46.2063, -83.015, 0.55 ) }
    dend_7 { pt3dadd( -4.90526, 47.8659, -89.5729, 0.55 ) }
    dend_7 { pt3dadd( -5.41497, 48.1679, -90.8132, 0.55 ) }
    dend_7 { pt3dadd( -7.47827, 49.5354, -96.295, 0.55 ) }
    dend_7 { pt3dadd( -9.00603, 50.8497, -101.478, 0.55 ) }
    dend_7 { pt3dadd( -9.60791, 51.4997, -103.987, 0.55 ) }
    dend_7 { pt3dadd( -9.86372, 52.0243, -105.883, 0.55 ) }
    dend_7 { pt3dadd( -9.96391, 52.5686, -108.097, 0.28 ) }
    dend_7 { pt3dadd( -9.92441, 52.9326, -109.614, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( -9.45702, 53.9117, -113.45, 0.28 ) }
    dend_7 { pt3dadd( -9.31455, 54.1442, -114.284, 0.83 ) }
    dend_7 { pt3dadd( -8.42369, 55.5796, -118.895, 0.28 ) }
    dend_7 { pt3dadd( -8.33823, 55.7322, -119.307, 0.83 ) }
    dend_7 { pt3dadd( -7.65628, 56.9754, -122.33, 0.28 ) }
    dend_7 { pt3dadd( -7.12516, 58.0479, -124.634, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 6/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 11.8117, 28.039, -51.4456, 1.66 ) }
    dend_6 { pt3dadd( 12.9161, 26.2358, -53.716, 0.83 ) }
    dend_6 { pt3dadd( 15.3916, 22.1485, -60.0567, 0.83 ) }
    dend_6 { pt3dadd( 15.6932, 21.433, -61.2634, 0.55 ) }
    dend_6 { pt3dadd( 16.6471, 18.8094, -66.5593, 0.55 ) }
    dend_6 { pt3dadd( 16.6605, 17.7709, -68.9853, 0.55 ) }
    dend_6 { pt3dadd( 16.3703, 17.1279, -70.9576, 0.55 ) }
    dend_6 { pt3dadd( 15.8191, 16.4018, -73.6415, 0.83 ) }
    dend_6 { pt3dadd( 15.1518, 15.667, -76.2812, 0.28 ) }
    dend_6 { pt3dadd( 13.7488, 13.9702, -81.2087, 1.66 ) }
    dend_6 { pt3dadd( 11.5173, 10.4814, -87.2984, 0.83 ) }
    dend_6 { pt3dadd( 10.4269, 8.39509, -89.656, 0.83 ) }
    dend_6 { pt3dadd( 8.633, 4.21561, -92.9947, 0.28 ) }
    dend_6 { pt3dadd( 8.41515, 3.56947, -93.3486, 0.55 ) }
    dend_6 { pt3dadd( 7.39899, 0.295043, -94.5234, 0.28 ) }
    dend_6 { pt3dadd( 6.17035, -4.30937, -95.3183, 0.28 ) }
    dend_6 { pt3dadd( 5.33507, -8.02869, -95.7027, 0.83 ) }
    dend_6 { pt3dadd( 4.54049, -10.8383, -96.0197, 0.28 ) }
    dend_6 { pt3dadd( 4.28345, -11.5836, -96.1727, 0.55 ) }
    dend_6 { pt3dadd( 2.7292, -16.0156, -97.0502, 0.28 ) }
    dend_6 { pt3dadd( 1.96572, -18.0639, -97.3728, 0.55 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 27/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -6.35164, 65.5051, -13.326, 1.11 ) }
    apic_10 { pt3dadd( -9.52259, 73.4772, -17.0198, 1.11 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 29/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -6.35164, 65.5051, -13.326, 1.11 ) }
    apic_9 { pt3dadd( -5.09857, 66.5792, -14.2156, 0.55 ) }
    apic_9 { pt3dadd( -2.97206, 68.1048, -15.5707, 0.55 ) }
    apic_9 { pt3dadd( -1.27287, 69.2486, -16.5791, 0.55 ) }
    apic_9 { pt3dadd( 1.37009, 70.9544, -18.2977, 0.55 ) }
    apic_9 { pt3dadd( 6.30412, 73.8749, -21.3722, 0.55 ) }
    apic_9 { pt3dadd( 11.1663, 76.6617, -24.4922, 0.55 ) }
    apic_9 { pt3dadd( 13.3261, 77.8149, -25.9867, 0.55 ) }
    apic_9 { pt3dadd( 14.9539, 78.6141, -27.2583, 0.55 ) }
    apic_9 { pt3dadd( 18.3464, 80.3309, -30.2956, 0.55 ) }
    apic_9 { pt3dadd( 20.592, 81.4956, -32.6868, 0.55 ) }
    apic_9 { pt3dadd( 22.4963, 82.6604, -35.1455, 0.55 ) }
    apic_9 { pt3dadd( 25.5653, 84.7791, -39.6378, 0.55 ) }
    apic_9 { pt3dadd( 27.3997, 86.0301, -42.3924, 0.55 ) }
    apic_9 { pt3dadd( 29.2956, 87.3704, -45.3845, 0.28 ) }
    apic_9 { pt3dadd( 30.0187, 87.9213, -46.5482, 0.55 ) }
    apic_9 { pt3dadd( 31.7398, 89.3657, -49.6277, 0.28 ) }
    apic_9 { pt3dadd( 32.5408, 89.959, -50.8558, 0.28 ) }
    apic_9 { pt3dadd( 34.6792, 91.2182, -53.2062, 0.28 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 48/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -13.6334, 35.8705, -0.951376, 1.11 ) }
    apic_7 { pt3dadd( -16.7756, 34.7289, 1.08474, 0.55 ) }
    apic_7 { pt3dadd( -19.5744, 33.9463, 2.43477, 0.55 ) }
    apic_7 { pt3dadd( -21.905, 33.3156, 3.42304, 0.55 ) }
    apic_7 { pt3dadd( -22.7644, 33.0921, 3.78258, 0.55 ) }
    apic_7 { pt3dadd( -25.5252, 32.3689, 4.93324, 0.55 ) }
    apic_7 { pt3dadd( -27.6841, 31.8302, 5.85612, 0.55 ) }
    apic_7 { pt3dadd( -31.5402, 31.0782, 7.40607, 0.55 ) }
    apic_7 { pt3dadd( -35.7881, 30.5494, 9.15825, 0.55 ) }
    apic_7 { pt3dadd( -39.0807, 30.2915, 10.4632, 0.55 ) }
    apic_7 { pt3dadd( -40.0919, 30.2659, 10.8452, 0.55 ) }
    apic_7 { pt3dadd( -42.7486, 30.3125, 11.7147, 0.55 ) }
    apic_7 { pt3dadd( -45.7864, 30.3798, 12.5463, 0.55 ) }
    apic_7 { pt3dadd( -49.1212, 30.5738, 13.3575, 0.55 ) }
    apic_7 { pt3dadd( -51.7025, 30.7839, 13.8028, 0.55 ) }
    apic_7 { pt3dadd( -53.3837, 30.9188, 14.0174, 0.55 ) }
    apic_7 { pt3dadd( -56.5294, 31.1654, 14.3703, 0.55 ) }
    apic_7 { pt3dadd( -58.5469, 31.2908, 14.5729, 0.55 ) }
    apic_7 { pt3dadd( -61.599, 31.467, 14.9248, 0.55 ) }
    apic_7 { pt3dadd( -63.6201, 31.5506, 15.2628, 0.55 ) }
    apic_7 { pt3dadd( -65.1596, 31.695, 15.6941, 0.83 ) }
    apic_7 { pt3dadd( -66.4284, 31.8828, 16.1749, 0.55 ) }
    apic_7 { pt3dadd( -67.6521, 32.1115, 16.7366, 0.55 ) }
    apic_7 { pt3dadd( -69.0248, 32.4204, 17.3781, 0.55 ) }
    apic_7 { pt3dadd( -70.4597, 32.7419, 18.0821, 0.83 ) }
    apic_7 { pt3dadd( -71.9211, 33.028, 18.798, 0.55 ) }
    apic_7 { pt3dadd( -73.151, 33.1749, 19.3637, 1.11 ) }
    apic_7 { pt3dadd( -74.8537, 33.2909, 20.0229, 0.83 ) }
    apic_7 { pt3dadd( -76.1623, 33.3309, 20.4539, 0.83 ) }
    apic_7 { pt3dadd( -77.6398, 33.3342, 20.8284, 0.55 ) }
    apic_7 { pt3dadd( -78.8475, 33.3751, 21.0297, 0.55 ) }
    apic_7 { pt3dadd( -80.7276, 33.4214, 21.2238, 0.83 ) }
    apic_7 { pt3dadd( -83.0388, 33.3554, 21.3119, 0.55 ) }
    apic_7 { pt3dadd( -83.5175, 33.3185, 21.3168, 0.83 ) }
    apic_7 { pt3dadd( -85.0471, 33.0781, 21.334, 0.55 ) }
    apic_7 { pt3dadd( -86.1269, 32.8938, 21.3522, 0.55 ) }
    apic_7 { pt3dadd( -88.3528, 32.5053, 21.4579, 0.55 ) }
    apic_7 { pt3dadd( -89.8463, 32.2387, 21.544, 0.55 ) }
    apic_7 { pt3dadd( -92.3129, 31.8107, 21.7396, 0.55 ) }
    apic_7 { pt3dadd( -95.9384, 31.1753, 22.0551, 0.83 ) }
    apic_7 { pt3dadd( -98.3784, 30.6846, 22.2464, 0.28 ) }
    apic_7 { pt3dadd( -99.0387, 30.5264, 22.2789, 0.55 ) }
    apic_7 { pt3dadd( -100.483, 30.1542, 22.306, 0.28 ) }
    apic_7 { pt3dadd( -101.926, 29.7248, 22.3154, 0.28 ) }
    apic_7 { pt3dadd( -103.463, 29.1007, 22.2508, 0.28 ) }
    apic_7 { pt3dadd( -105.162, 28.2326, 21.9993, 0.28 ) }
    apic_7 { pt3dadd( -105.914, 27.7968, 21.8048, 0.28 ) }
    apic_7 { pt3dadd( -106.096, 27.6861, 21.7395, 0.83 ) }
    apic_7 { pt3dadd( -107.069, 27.0521, 21.3449, 0.28 ) }
    apic_7 { pt3dadd( -107.551, 26.7343, 21.1041, 0.83 ) }
    apic_7 { pt3dadd( -110.184, 25.2192, 19.6924, 0.28 ) }
    apic_7 { pt3dadd( -111.414, 24.6459, 19.0329, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_7 { pt3dadd( -112.061, 24.3973, 18.6743, 0.55 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 1/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -13.6334, 35.8705, -0.951376, 1.11 ) }
    apic_6 { pt3dadd( -18.2144, 34.4256, 1.51888, 0.83 ) }
    apic_6 { pt3dadd( -22.4583, 33.2652, 3.71165, 0.83 ) }
    apic_6 { pt3dadd( -27.4014, 31.8113, 6.1533, 0.83 ) }
    apic_6 { pt3dadd( -33.3547, 30.0793, 9.09609, 0.83 ) }
    apic_6 { pt3dadd( -35.6323, 29.4296, 10.1626, 0.83 ) }
    apic_6 { pt3dadd( -38.0445, 28.8118, 11.163, 0.55 ) }
    apic_6 { pt3dadd( -41.0445, 28.2601, 12.154, 0.55 ) }
    apic_6 { pt3dadd( -46.7942, 27.354, 13.7084, 0.55 ) }
    apic_6 { pt3dadd( -50.4589, 26.7066, 14.4795, 0.55 ) }
    apic_6 { pt3dadd( -53.9137, 26.0868, 15.1185, 0.55 ) }
    apic_6 { pt3dadd( -61.5884, 24.6555, 16.4279, 0.83 ) }
    apic_6 { pt3dadd( -65.0034, 24.0392, 16.9562, 0.83 ) }
    apic_6 { pt3dadd( -66.8331, 23.6885, 17.218, 0.83 ) }
    apic_6 { pt3dadd( -71.1356, 22.8852, 17.747, 0.83 ) }
    apic_6 { pt3dadd( -75.1092, 22.0237, 18.2616, 0.55 ) }
    apic_6 { pt3dadd( -76.6182, 21.6692, 18.54, 0.83 ) }
    apic_6 { pt3dadd( -80.4666, 20.6665, 19.5143, 0.55 ) }
    apic_6 { pt3dadd( -81.1127, 20.501, 19.7122, 0.83 ) }
    apic_6 { pt3dadd( -83.8259, 19.8783, 20.514, 0.55 ) }
    apic_6 { pt3dadd( -85.8949, 19.4585, 21.1331, 0.55 ) }
    apic_6 { pt3dadd( -87.3957, 19.2068, 21.5901, 0.55 ) }
    apic_6 { pt3dadd( -90.5569, 18.6402, 22.7179, 0.55 ) }
    apic_6 { pt3dadd( -92.8724, 18.1474, 23.6493, 0.55 ) }
    apic_6 { pt3dadd( -95.1443, 17.6242, 24.5205, 0.55 ) }
    apic_6 { pt3dadd( -98.0207, 16.8656, 25.5686, 0.55 ) }
    apic_6 { pt3dadd( -100.879, 16.0508, 26.4791, 0.55 ) }
    apic_6 { pt3dadd( -104.894, 14.9344, 27.7012, 0.55 ) }
    apic_6 { pt3dadd( -106.061, 14.6029, 28.0574, 0.83 ) }
    apic_6 { pt3dadd( -108.534, 13.9182, 28.81, 0.55 ) }
    apic_6 { pt3dadd( -109.801, 13.5647, 29.1711, 0.83 ) }
    apic_6 { pt3dadd( -113.407, 12.5288, 30.0982, 0.55 ) }
    apic_6 { pt3dadd( -115.819, 11.7402, 30.6606, 0.55 ) }
    apic_6 { pt3dadd( -119.547, 10.4603, 31.4296, 0.55 ) }
    apic_6 { pt3dadd( -121.149, 9.84792, 31.7566, 0.83 ) }
    apic_6 { pt3dadd( -124.4, 8.38468, 32.4447, 0.28 ) }
    apic_6 { pt3dadd( -125.514, 7.84429, 32.6468, 0.55 ) }
    apic_6 { pt3dadd( -127.109, 6.92916, 32.8634, 0.28 ) }
    apic_6 { pt3dadd( -128.448, 6.09177, 33.0549, 0.83 ) }
    apic_6 { pt3dadd( -130.862, 4.52503, 33.4837, 0.28 ) }
    apic_6 { pt3dadd( -132.038, 3.77858, 33.7575, 0.55 ) }
    apic_6 { pt3dadd( -133.45, 2.91184, 34.1561, 0.28 ) }
    apic_6 { pt3dadd( -134.51, 2.28804, 34.4684, 0.83 ) }
    apic_6 { pt3dadd( -138.227, 0.159859, 35.6129, 0.28 ) }
    apic_6 { pt3dadd( -139.646, -0.657009, 36.0808, 0.83 ) }
    apic_6 { pt3dadd( -143.211, -2.80749, 37.3897, 0.28 ) }
    apic_6 { pt3dadd( -145.416, -4.16121, 38.1963, 0.28 ) }
    apic_6 { pt3dadd( -145.921, -4.47634, 38.3871, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 49/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -30.3733, -18.0422, -23.226, 0.83 ) }
    dend_47 { pt3dadd( -33.8225, -18.3276, -24.4143, 0.83 ) }
    dend_47 { pt3dadd( -37.9002, -18.8088, -25.6367, 0.55 ) }
    dend_47 { pt3dadd( -42.7861, -19.4921, -26.8907, 0.55 ) }
    dend_47 { pt3dadd( -44.9246, -19.8455, -27.4497, 0.55 ) }
    dend_47 { pt3dadd( -48.3373, -20.5163, -28.3731, 0.83 ) }
    dend_47 { pt3dadd( -52.2025, -21.399, -29.5019, 0.55 ) }
    dend_47 { pt3dadd( -55.3846, -22.4374, -30.7349, 0.55 ) }
    dend_47 { pt3dadd( -56.2811, -22.8139, -31.0991, 0.55 ) }
    dend_47 { pt3dadd( -57.7625, -23.4241, -31.6991, 0.55 ) }
    dend_47 { pt3dadd( -58.83, -23.87, -32.2242, 0.55 ) }
    dend_47 { pt3dadd( -60.8585, -24.7558, -33.3697, 0.83 ) }
    dend_47 { pt3dadd( -63.3284, -25.7657, -34.6964, 0.28 ) }
    dend_47 { pt3dadd( -65.1411, -26.5296, -35.8938, 1.94 ) }
    dend_47 { pt3dadd( -68.2173, -27.7157, -37.9151, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 64/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -30.3733, -18.0422, -23.226, 0.83 ) }
    dend_46 { pt3dadd( -31.3569, -15.1353, -26.5665, 0.55 ) }
    dend_46 { pt3dadd( -31.8233, -13.607, -28.5331, 0.55 ) }
    dend_46 { pt3dadd( -32.2575, -12.1474, -30.5521, 0.55 ) }
    dend_46 { pt3dadd( -32.6968, -10.8076, -32.4622, 0.55 ) }
    dend_46 { pt3dadd( -33.1854, -9.7307, -33.9554, 1.11 ) }
    dend_46 { pt3dadd( -34.2335, -7.43775, -37.1605, 0.28 ) }
    dend_46 { pt3dadd( -34.4461, -6.98805, -37.8617, 0.55 ) }
    dend_46 { pt3dadd( -34.9475, -6.03105, -39.3539, 0.28 ) }
    dend_46 { pt3dadd( -35.5685, -4.83779, -41.2572, 0.83 ) }
    dend_46 { pt3dadd( -37.2129, -2.08592, -45.5987, 0.83 ) }
    dend_46 { pt3dadd( -37.7041, -1.26219, -46.8629, 0.55 ) }
    dend_46 { pt3dadd( -38.4514, -0.0193181, -48.8812, 1.11 ) }
    dend_46 { pt3dadd( -38.8467, 0.581997, -49.9611, 0.28 ) }
    dend_46 { pt3dadd( -39.1188, 1.02548, -50.8902, 0.28 ) }
    dend_46 { pt3dadd( -39.7248, 1.95102, -53.1081, 1.11 ) }
    dend_46 { pt3dadd( -40.4734, 3.07745, -56.0724, 0.55 ) }
    dend_46 { pt3dadd( -41.3216, 4.22593, -59.1198, 0.55 ) }
    dend_46 { pt3dadd( -41.8347, 4.89524, -60.9593, 0.55 ) }
    dend_46 { pt3dadd( -42.9159, 6.13584, -64.6187, 0.55 ) }
    dend_46 { pt3dadd( -44.5111, 7.89116, -69.8446, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 85/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -47.6333, -60.9446, -30.1817, 0.83 ) }
    dend_44 { pt3dadd( -47.5566, -62.8714, -29.5424, 0.55 ) }
    dend_44 { pt3dadd( -47.2883, -68.7191, -27.7887, 0.55 ) }
    dend_44 { pt3dadd( -47.1609, -72.8575, -26.5125, 0.55 ) }
    dend_44 { pt3dadd( -47.0597, -75.6392, -25.7353, 0.55 ) }
    dend_44 { pt3dadd( -46.9222, -79.0536, -24.7501, 0.55 ) }
    dend_44 { pt3dadd( -46.8413, -82.0274, -23.8784, 0.55 ) }
    dend_44 { pt3dadd( -46.8041, -83.6367, -23.4116, 0.83 ) }
    dend_44 { pt3dadd( -46.7887, -85.9303, -22.7255, 0.55 ) }
    dend_44 { pt3dadd( -46.7375, -89.6509, -21.3359, 0.55 ) }
    dend_44 { pt3dadd( -46.7342, -91.8541, -20.3942, 0.55 ) }
    dend_44 { pt3dadd( -46.7439, -94.5719, -19.13, 0.55 ) }
    dend_44 { pt3dadd( -46.7488, -98.3949, -17.2455, 0.55 ) }
    dend_44 { pt3dadd( -46.7407, -101.256, -15.715, 0.55 ) }
    dend_44 { pt3dadd( -46.6807, -104.071, -14.1541, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 0/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -47.6333, -60.9446, -30.1817, 0.83 ) }
    dend_43 { pt3dadd( -47.8703, -61.2009, -30.2328, 0.83 ) }
    dend_43 { pt3dadd( -49.4751, -62.4295, -30.5283, 0.83 ) }
    dend_43 { pt3dadd( -51.1648, -63.6796, -30.9456, 0.83 ) }
    dend_43 { pt3dadd( -53.7546, -65.6952, -31.6059, 0.83 ) }
    dend_43 { pt3dadd( -55.353, -66.912, -32.0193, 0.83 ) }
    dend_43 { pt3dadd( -57.4437, -68.6185, -32.6022, 1.11 ) }
    dend_43 { pt3dadd( -60.3242, -71.2206, -33.5644, 0.55 ) }
    dend_43 { pt3dadd( -63.6769, -74.6766, -34.9252, 0.55 ) }
    dend_43 { pt3dadd( -65.1957, -76.4335, -35.6201, 0.55 ) }
    dend_43 { pt3dadd( -66.1284, -77.7174, -36.155, 0.55 ) }
    dend_43 { pt3dadd( -67.6711, -80.4945, -37.2645, 0.55 ) }
    dend_43 { pt3dadd( -68.7911, -83.4305, -38.4386, 0.55 ) }
    dend_43 { pt3dadd( -69.1627, -85.2629, -39.1515, 0.28 ) }
    dend_43 { pt3dadd( -69.3274, -86.6492, -39.6837, 0.83 ) }
    dend_43 { pt3dadd( -69.5563, -88.9041, -40.604, 0.28 ) }
    dend_43 { pt3dadd( -69.7844, -90.8983, -41.4063, 0.28 ) }
    dend_43 { pt3dadd( -70.0296, -92.2362, -41.95, 0.83 ) }
    dend_43 { pt3dadd( -70.7457, -95.0251, -43.0429, 0.28 ) }
    dend_43 { pt3dadd( -71.3898, -96.7115, -43.7152, 0.55 ) }
    dend_43 { pt3dadd( -72.2084, -98.4607, -44.4032, 0.28 ) }
    dend_43 { pt3dadd( -73.0905, -100.13, -45.0334, 1.11 ) }
    dend_43 { pt3dadd( -74.4078, -102.387, -45.8993, 0.83 ) }
    dend_43 { pt3dadd( -75.3037, -103.853, -46.4221, 0.55 ) }
    dend_43 { pt3dadd( -76.94, -106.347, -47.2703, 0.55 ) }
    dend_43 { pt3dadd( -78.1252, -108.306, -47.9165, 0.55 ) }
    dend_43 { pt3dadd( -78.9328, -109.618, -48.3432, 0.55 ) }
    dend_43 { pt3dadd( -80.0853, -111.407, -48.9668, 0.55 ) }
    dend_43 { pt3dadd( -81.4903, -113.594, -49.7634, 0.55 ) }
    dend_43 { pt3dadd( -82.7619, -115.649, -50.505, 0.28 ) }
    dend_43 { pt3dadd( -83.4023, -116.737, -50.8736, 0.28 ) }
    dend_43 { pt3dadd( -85.6145, -120.302, -52.0998, 0.28 ) }
    dend_43 { pt3dadd( -86.2537, -121.348, -52.4581, 1.11 ) }
    dend_43 { pt3dadd( -88.8474, -125.885, -54.0772, 0.28 ) }
    dend_43 { pt3dadd( -89.7638, -127.632, -54.7563, 0.28 ) }
    dend_43 { pt3dadd( -90.5347, -129.21, -55.4027, 0.55 ) }
    dend_43 { pt3dadd( -91.3925, -131.012, -56.1619, 0.28 ) }
    dend_43 { pt3dadd( -91.9951, -132.495, -56.8239, 1.11 ) }
    dend_43 { pt3dadd( -93.3569, -136.139, -58.5588, 0.28 ) }
    dend_43 { pt3dadd( -93.6129, -136.836, -58.9381, 0.83 ) }
    dend_43 { pt3dadd( -94.4098, -139.05, -60.2311, 0.28 ) }
    dend_43 { pt3dadd( -94.4915, -139.3, -60.3788, 0.83 ) }
    dend_43 { pt3dadd( -95.3703, -142.25, -62.0223, 0.28 ) }
    dend_43 { pt3dadd( -95.6321, -143.039, -62.4455, 0.55 ) }
    dend_43 { pt3dadd( -96.2208, -144.891, -63.3969, 0.28 ) }
    dend_43 { pt3dadd( -96.3357, -145.258, -63.5795, 0.55 ) }
    dend_43 { pt3dadd( -96.8098, -147.003, -64.4051, 0.28 ) }
    dend_43 { pt3dadd( -96.9691, -147.523, -64.6467, 0.55 ) }
    dend_43 { pt3dadd( -98.2322, -150.672, -65.9566, 0.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 49/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 13.915, -64.4311, -53.1383, 0.55 ) }
    dend_40 { pt3dadd( 14.4019, -65.9366, -53.607, 0.55 ) }
    dend_40 { pt3dadd( 15.3619, -69.0728, -54.6413, 0.55 ) }
    dend_40 { pt3dadd( 16.2227, -71.3153, -55.4646, 0.55 ) }
    dend_40 { pt3dadd( 17.1003, -73.06, -56.2744, 0.55 ) }
    dend_40 { pt3dadd( 17.9897, -74.6414, -57.1094, 0.55 ) }
    dend_40 { pt3dadd( 18.6388, -75.7954, -57.7188, 0.55 ) }
    dend_40 { pt3dadd( 19.8159, -77.7169, -58.7896, 0.55 ) }
    dend_40 { pt3dadd( 21.2558, -79.8314, -60.073, 0.55 ) }
    dend_40 { pt3dadd( 23.3603, -82.4166, -61.9918, 0.55 ) }
    dend_40 { pt3dadd( 24.6317, -83.8582, -63.2329, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 60/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 13.915, -64.4311, -53.1383, 0.55 ) }
    dend_37 { pt3dadd( 14.7364, -64.9023, -53.3954, 0.83 ) }
    dend_37 { pt3dadd( 17.2437, -66.711, -54.2251, 0.55 ) }
    dend_37 { pt3dadd( 18.8106, -68.0053, -54.7721, 0.55 ) }
    dend_37 { pt3dadd( 21.9881, -70.893, -56.0486, 0.28 ) }
    dend_37 { pt3dadd( 23.3371, -72.1487, -56.6361, 0.28 ) }
    dend_37 { pt3dadd( 24.6847, -73.3984, -57.1827, 0.28 ) }
    dend_37 { pt3dadd( 25.6515, -74.3634, -57.5566, 0.83 ) }
    dend_37 { pt3dadd( 25.9161, -74.6418, -57.6426, 0.83 ) }
    dend_37 { pt3dadd( 27.1399, -76.164, -58.0777, 0.28 ) }
    dend_37 { pt3dadd( 27.9374, -77.3234, -58.6067, 0.83 ) }
    dend_37 { pt3dadd( 30.0007, -79.8313, -59.65, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 72/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 46.4756, 6.89697, 21.2567, 0.83 ) }
    dend_24 { pt3dadd( 48.3236, 14.3552, 23.9894, 0.83 ) }
    dend_24 { pt3dadd( 50.7601, 21.772, 26.3084, 0.83 ) }
    dend_24 { pt3dadd( 53.7867, 28.6522, 29.4243, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 76/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 46.4756, 6.89697, 21.2567, 0.83 ) }
    dend_23 { pt3dadd( 47.7809, 12.3003, 24.6992, 0.83 ) }
    dend_23 { pt3dadd( 49.7966, 17.7485, 27.6829, 0.83 ) }
    dend_23 { pt3dadd( 50.8136, 23.8176, 29.9107, 0.83 ) }
    dend_23 { pt3dadd( 50.9067, 29.4725, 33.2125, 0.83 ) }
    dend_23 { pt3dadd( 50.9757, 35.0246, 36.6825, 0.83 ) }
    dend_23 { pt3dadd( 50.5312, 40.5652, 40.1439, 0.83 ) }
    dend_23 { pt3dadd( 51.3324, 45.6078, 44.2243, 0.83 ) }
    dend_23 { pt3dadd( 52.7465, 49.8608, 48.952, 0.83 ) }
    dend_23 { pt3dadd( 53.5686, 53.6903, 54.1485, 0.83 ) }
    dend_23 { pt3dadd( 55.6005, 58.1248, 58.4651, 0.83 ) }
    dend_23 { pt3dadd( 57.7109, 62.994, 62.2551, 0.83 ) }
    dend_23 { pt3dadd( 58.7329, 68.7037, 65.2853, 0.83 ) }
    dend_23 { pt3dadd( 60.4675, 73.8188, 68.9548, 0.83 ) }
    dend_23 { pt3dadd( 62.3255, 78.4526, 73.1475, 0.83 ) }
    // Section: apic_14, id: apic_14, parent: apic_10 (entry count 91/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -9.52259, 73.4772, -17.0198, 1.11 ) }
    apic_14 { pt3dadd( -8.65235, 77.147, -17.4159, 1.11 ) }
    apic_14 { pt3dadd( -6.39604, 86.6618, -18.443, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 94/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -9.52259, 73.4772, -17.0198, 1.11 ) }
    apic_11 { pt3dadd( -10.2661, 77.1959, -13.3427, 0.55 ) }
    apic_11 { pt3dadd( -10.8843, 79.2986, -11.2374, 0.55 ) }
    apic_11 { pt3dadd( -12.1147, 82.4731, -7.89507, 0.55 ) }
    apic_11 { pt3dadd( -13.9175, 87.138, -3.04084, 0.55 ) }
    apic_11 { pt3dadd( -14.9349, 89.6615, -0.402758, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_11 { pt3dadd( -16.3105, 92.7666, 3.04538, 0.55 ) }
    apic_11 { pt3dadd( -16.8568, 93.8244, 4.22507, 0.55 ) }
    apic_11 { pt3dadd( -19.2407, 97.9468, 8.92294, 0.55 ) }
    apic_11 { pt3dadd( -20.6134, 100.132, 11.4058, 0.55 ) }
    apic_11 { pt3dadd( -21.3443, 101.16, 12.7823, 0.55 ) }
    apic_11 { pt3dadd( -22.421, 102.958, 15.3252, 0.55 ) }
    apic_11 { pt3dadd( -23.4979, 105.112, 18.4484, 0.55 ) }
    apic_11 { pt3dadd( -24.0109, 106.369, 20.2063, 0.55 ) }
    apic_11 { pt3dadd( -24.5013, 107.501, 21.8371, 0.55 ) }
    apic_11 { pt3dadd( -25.0933, 108.867, 23.6962, 0.55 ) }
    apic_11 { pt3dadd( -26.423, 112.031, 27.5939, 0.55 ) }
    apic_11 { pt3dadd( -27.3366, 114.216, 30.217, 0.55 ) }
    apic_11 { pt3dadd( -28.0596, 115.74, 32.018, 0.55 ) }
    apic_11 { pt3dadd( -29.7579, 118.978, 35.6415, 0.55 ) }
    apic_11 { pt3dadd( -31.5616, 122.458, 39.1502, 0.55 ) }
    apic_11 { pt3dadd( -32.525, 124.254, 40.8338, 0.55 ) }
    apic_11 { pt3dadd( -34.2497, 127.02, 43.2819, 0.55 ) }
    apic_11 { pt3dadd( -35.7185, 129.144, 45.1938, 0.28 ) }
    apic_11 { pt3dadd( -36.0006, 129.566, 45.5982, 0.55 ) }
    apic_11 { pt3dadd( -36.6736, 130.814, 46.565, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 20/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -68.2173, -27.7157, -37.9151, 0.55 ) }
    dend_49 { pt3dadd( -63.1627, -29.6652, -38.4072, 0.55 ) }
    dend_49 { pt3dadd( -57.9233, -31.9445, -38.4286, 0.55 ) }
    dend_49 { pt3dadd( -58.9143, -30.8971, -40.2278, 0.55 ) }
    dend_49 { pt3dadd( -59.3052, -30.085, -41.813, 0.55 ) }
    dend_49 { pt3dadd( -60.1193, -28.9636, -44.4226, 0.55 ) }
    dend_49 { pt3dadd( -62.3395, -26.8787, -50.413, 0.55 ) }
    dend_49 { pt3dadd( -63.3613, -26.099, -52.94, 0.83 ) }
    dend_49 { pt3dadd( -64.7071, -25.3404, -55.9165, 0.83 ) }
    dend_49 { pt3dadd( -66.1338, -24.7763, -58.6043, 0.55 ) }
    dend_49 { pt3dadd( -68.4102, -24.2857, -62.3858, 0.55 ) }
    dend_49 { pt3dadd( -70.8045, -23.9206, -66.0594, 0.55 ) }
    dend_49 { pt3dadd( -72.0299, -23.7773, -67.8621, 0.55 ) }
    dend_49 { pt3dadd( -74.6367, -23.4713, -71.1908, 0.28 ) }
    dend_49 { pt3dadd( -78.1227, -22.9863, -75.1406, 0.28 ) }
    dend_49 { pt3dadd( -79.6926, -22.5854, -76.9382, 0.83 ) }
    dend_49 { pt3dadd( -83.4974, -21.3611, -81.1438, 0.28 ) }
    dend_49 { pt3dadd( -84.9619, -20.8246, -82.6688, 0.83 ) }
    dend_49 { pt3dadd( -90.1982, -18.6872, -87.8405, 0.55 ) }
    dend_49 { pt3dadd( -92.8557, -17.4153, -90.4171, 0.55 ) }
    dend_49 { pt3dadd( -97.7298, -14.4386, -95.4828, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 41/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -68.2173, -27.7157, -37.9151, 0.55 ) }
    dend_48 { pt3dadd( -70.1144, -27.8651, -38.7886, 0.55 ) }
    dend_48 { pt3dadd( -74.9633, -28.3784, -41.1276, 0.55 ) }
    dend_48 { pt3dadd( -81.5529, -29.2623, -44.4744, 1.11 ) }
    dend_48 { pt3dadd( -83.1882, -29.5442, -45.3299, 0.55 ) }
    dend_48 { pt3dadd( -86.5618, -30.2762, -47.1599, 0.55 ) }
    dend_48 { pt3dadd( -89.7779, -31.0614, -48.8783, 0.55 ) }
    dend_48 { pt3dadd( -91.4225, -31.5139, -49.7027, 0.55 ) }
    dend_48 { pt3dadd( -92.2937, -31.8064, -50.1459, 0.55 ) }
    dend_48 { pt3dadd( -94.4339, -32.6413, -51.1911, 0.55 ) }
    dend_48 { pt3dadd( -98.3493, -34.0413, -52.9764, 0.28 ) }
    dend_48 { pt3dadd( -99.5838, -34.4648, -53.5396, 0.55 ) }
    dend_48 { pt3dadd( -104.262, -35.9068, -55.2889, 0.28 ) }
    dend_48 { pt3dadd( -105.493, -36.2599, -55.6989, 0.55 ) }
    dend_48 { pt3dadd( -108.442, -37.0358, -56.6145, 0.55 ) }
    dend_48 { pt3dadd( -110.248, -37.4719, -57.1385, 0.83 ) }
    dend_48 { pt3dadd( -113.565, -38.2468, -57.9835, 0.28 ) }
    dend_48 { pt3dadd( -116.698, -39.0279, -58.8138, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 59/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 30.0007, -79.8313, -59.65, 0.55 ) }
    dend_39 { pt3dadd( 29.9512, -83.5449, -64.2836, 0.55 ) }
    dend_39 { pt3dadd( 29.9434, -84.1339, -65.0185, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 62/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 30.0007, -79.8313, -59.65, 0.55 ) }
    dend_38 { pt3dadd( 30.6958, -84.1748, -56.0815, 0.28 ) }
    dend_38 { pt3dadd( 30.9109, -85.5189, -54.9773, 0.28 ) }
    dend_38 { pt3dadd( 31.1067, -86.7422, -53.9722, 0.83 ) }
    dend_38 { pt3dadd( 31.9145, -91.7896, -49.8255, 0.55 ) }
    dend_38 { pt3dadd( 32.1121, -93.0243, -48.8112, 0.55 ) }
    dend_38 { pt3dadd( 32.3897, -94.7587, -47.3862, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 69/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 53.7867, 28.6522, 29.4243, 0.83 ) }
    dend_26 { pt3dadd( 58.5628, 40.1598, 31.5533, 0.83 ) }
    dend_26 { pt3dadd( 62.5402, 51.5518, 35.34, 0.83 ) }
    dend_26 { pt3dadd( 66.5241, 62.8331, 39.4304, 0.83 ) }
    dend_26 { pt3dadd( 71.3433, 72.7104, 45.593, 0.83 ) }
    dend_26 { pt3dadd( 76.2135, 81.5038, 53.1346, 0.83 ) }
    dend_26 { pt3dadd( 78.7548, 90.6108, 61.4349, 0.83 ) }
    dend_26 { pt3dadd( 82.8537, 99.5583, 69.2603, 0.83 ) }
    dend_26 { pt3dadd( 87.127, 107.112, 78.2984, 0.83 ) }
    dend_26 { pt3dadd( 92.2096, 114.633, 86.932, 0.83 ) }
    dend_26 { pt3dadd( 98.3737, 122.478, 94.5187, 0.83 ) }
    dend_26 { pt3dadd( 103.588, 130.223, 102.882, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 53.7867, 28.6522, 29.4243, 0.83 ) }
    dend_25 { pt3dadd( 56.8876, 37.0602, 31.6314, 0.83 ) }
    dend_25 { pt3dadd( 61.0966, 45.0306, 33.501, 0.83 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 84/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -6.39604, 86.6618, -18.443, 1.11 ) }
    apic_16 { pt3dadd( -5.98701, 96.9927, -18.4797, 1.11 ) }
    apic_16 { pt3dadd( -6.20521, 103.506, -18.7156, 0.83 ) }
    apic_16 { pt3dadd( -6.42094, 106.539, -18.7135, 0.83 ) }
    apic_16 { pt3dadd( -6.81111, 112.971, -18.696, 0.83 ) }
    apic_16 { pt3dadd( -6.98893, 117.161, -18.8491, 0.83 ) }
    apic_16 { pt3dadd( -7.20446, 122.403, -19.0936, 0.83 ) }
    apic_16 { pt3dadd( -7.38036, 125.888, -19.3933, 0.83 ) }
    apic_16 { pt3dadd( -8.2844, 137.994, -20.452, 0.83 ) }
    apic_16 { pt3dadd( -8.58744, 141.104, -20.62, 0.83 ) }
    apic_16 { pt3dadd( -9.26241, 146.322, -20.5136, 0.83 ) }
    apic_16 { pt3dadd( -9.5831, 149.368, -20.4958, 0.83 ) }
    apic_16 { pt3dadd( -9.77543, 152.004, -20.4099, 0.83 ) }
    apic_16 { pt3dadd( -10.3238, 158.509, -20.283, 0.83 ) }
    apic_16 { pt3dadd( -10.8485, 163.736, -20.2441, 0.83 ) }
    apic_16 { pt3dadd( -12.0708, 174.988, -20.049, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_16 { pt3dadd( -12.7518, 182.838, -19.8935, 1.11 ) }
    apic_16 { pt3dadd( -13.4021, 192.44, -19.7778, 1.11 ) }
    apic_16 { pt3dadd( -13.6826, 199.238, -19.7296, 1.11 ) }
    apic_16 { pt3dadd( -13.8237, 204.525, -19.6333, 1.11 ) }
    apic_16 { pt3dadd( -13.853, 209.41, -19.5217, 1.11 ) }
    apic_16 { pt3dadd( -13.6168, 215.736, -19.3278, 1.11 ) }
    apic_16 { pt3dadd( -13.2746, 220.672, -19.0952, 1.11 ) }
    apic_16 { pt3dadd( -12.7293, 226.355, -18.8796, 1.11 ) }
    apic_16 { pt3dadd( -12.1003, 230.987, -18.6594, 1.11 ) }
    apic_16 { pt3dadd( -11.3998, 235.801, -18.4377, 1.11 ) }
    apic_16 { pt3dadd( -10.5111, 241.874, -18.1932, 1.11 ) }
    apic_16 { pt3dadd( -9.79306, 247.944, -18.0791, 1.11 ) }
    apic_16 { pt3dadd( -8.86407, 257.541, -18.0554, 0.83 ) }
    apic_16 { pt3dadd( -8.71122, 261.659, -17.9906, 0.83 ) }
    apic_16 { pt3dadd( -8.73115, 263.607, -17.937, 0.83 ) }
    apic_16 { pt3dadd( -8.98716, 267.627, -17.7288, 0.83 ) }
    apic_16 { pt3dadd( -9.85445, 273.649, -17.3097, 0.83 ) }
    apic_16 { pt3dadd( -10.9835, 278.546, -16.7532, 0.83 ) }
    apic_16 { pt3dadd( -12.0789, 282.517, -16.2868, 0.83 ) }
    apic_16 { pt3dadd( -13.2245, 286.701, -15.7552, 0.83 ) }
    apic_16 { pt3dadd( -14.1458, 290.479, -15.3688, 0.83 ) }
    apic_16 { pt3dadd( -15.6015, 296.452, -14.6776, 0.83 ) }
    apic_16 { pt3dadd( -16.6874, 300.6, -14.2214, 0.83 ) }
    apic_16 { pt3dadd( -17.5315, 304.108, -14.0061, 0.83 ) }
    apic_16 { pt3dadd( -18.3522, 307.323, -13.8811, 0.83 ) }
    apic_16 { pt3dadd( -19.3171, 311.402, -13.9183, 0.83 ) }
    apic_16 { pt3dadd( -20.3131, 316.601, -14.1579, 0.83 ) }
    apic_16 { pt3dadd( -21.036, 320.745, -14.4354, 0.83 ) }
    apic_16 { pt3dadd( -21.7307, 325.943, -14.9546, 0.83 ) }
    apic_16 { pt3dadd( -22.3715, 332.859, -15.5974, 0.83 ) }
    apic_16 { pt3dadd( -23.1765, 344.381, -16.4232, 0.83 ) }
    apic_16 { pt3dadd( -23.5295, 354.777, -17.2132, 0.83 ) }
    apic_16 { pt3dadd( -23.5109, 360.828, -17.7359, 0.83 ) }
    apic_16 { pt3dadd( -23.3432, 369.407, -18.3326, 0.83 ) }
    apic_16 { pt3dadd( -22.8859, 382.126, -19.028, 0.83 ) }
    apic_16 { pt3dadd( -22.5972, 386.603, -19.1664, 0.83 ) }
    apic_16 { pt3dadd( -22.2841, 391.565, -19.1998, 0.83 ) }
    apic_16 { pt3dadd( -21.9724, 395.956, -19.1979, 0.83 ) }
    apic_16 { pt3dadd( -21.5609, 401.381, -19.1708, 0.83 ) }
    apic_16 { pt3dadd( -21.1276, 408.768, -19.1414, 0.83 ) }
    apic_16 { pt3dadd( -20.8249, 413.039, -19.2238, 0.83 ) }
    apic_16 { pt3dadd( -20.5965, 419.457, -19.5686, 0.83 ) }
    apic_16 { pt3dadd( -20.5722, 421.771, -19.7193, 0.83 ) }
    apic_16 { pt3dadd( -20.6547, 428.297, -20.2044, 0.83 ) }
    apic_16 { pt3dadd( -20.8379, 432.967, -20.5617, 0.83 ) }
    apic_16 { pt3dadd( -21.0823, 435.854, -20.7629, 0.83 ) }
    apic_16 { pt3dadd( -21.9714, 443.676, -21.4605, 0.83 ) }
    apic_16 { pt3dadd( -22.8674, 450.478, -22.0601, 0.83 ) }
    apic_16 { pt3dadd( -24.346, 460.867, -23.3187, 0.83 ) }
    apic_16 { pt3dadd( -24.7308, 463.583, -23.6885, 0.83 ) }
    apic_16 { pt3dadd( -25.6185, 471.237, -24.7519, 0.83 ) }
    apic_16 { pt3dadd( -26.0105, 476.657, -25.5166, 0.83 ) }
    apic_16 { pt3dadd( -26.3152, 483.621, -26.4411, 0.83 ) }
    apic_16 { pt3dadd( -26.7126, 488.879, -27.2993, 0.83 ) }
    apic_16 { pt3dadd( -26.9529, 492.897, -27.922, 0.83 ) }
    apic_16 { pt3dadd( -27.1637, 496.513, -28.2265, 0.83 ) }
    apic_16 { pt3dadd( -27.2723, 497.876, -28.169, 0.83 ) }
    apic_16 { pt3dadd( -27.722, 502.026, -27.6336, 0.83 ) }
    apic_16 { pt3dadd( -28.3553, 506.411, -26.8713, 0.83 ) }
    apic_16 { pt3dadd( -29.1617, 514.282, -25.684, 0.83 ) }
    apic_16 { pt3dadd( -29.4978, 517.573, -25.4794, 0.83 ) }
    apic_16 { pt3dadd( -29.7661, 521.734, -25.4911, 0.83 ) }
    apic_16 { pt3dadd( -29.832, 526.518, -25.7283, 0.83 ) }
    apic_16 { pt3dadd( -29.7061, 529.577, -26.0695, 0.83 ) }
    apic_16 { pt3dadd( -29.1328, 538.72, -27.501, 0.83 ) }
    apic_16 { pt3dadd( -28.6207, 546.704, -29.0804, 0.83 ) }
    apic_16 { pt3dadd( -28.3642, 550.537, -29.7587, 0.83 ) }
    apic_16 { pt3dadd( -28.1928, 553.97, -30.244, 0.83 ) }
    apic_16 { pt3dadd( -28.1445, 559.253, -30.6925, 0.83 ) }
    apic_16 { pt3dadd( -28.3342, 565.595, -30.9688, 0.83 ) }
    apic_16 { pt3dadd( -28.4825, 568.995, -30.9243, 0.83 ) }
    apic_16 { pt3dadd( -28.9348, 581.407, -30.3813, 0.83 ) }
    apic_16 { pt3dadd( -29.0939, 584.527, -30.1278, 0.83 ) }
    apic_16 { pt3dadd( -29.3679, 588.819, -29.5546, 0.83 ) }
    apic_16 { pt3dadd( -29.4791, 590.594, -29.2462, 0.83 ) }
    apic_16 { pt3dadd( -29.8413, 597.233, -27.9043, 0.83 ) }
    apic_16 { pt3dadd( -30.0914, 601.941, -26.7378, 0.83 ) }
    apic_16 { pt3dadd( -30.31, 606.14, -25.4743, 0.83 ) }
    apic_16 { pt3dadd( -30.9271, 615.701, -22.9092, 0.83 ) }
    apic_16 { pt3dadd( -31.5514, 622.065, -21.284, 0.83 ) }
    apic_16 { pt3dadd( -32.1714, 626.507, -20.3126, 0.83 ) }
    apic_16 { pt3dadd( -32.8929, 630.195, -19.5354, 0.83 ) }
    apic_16 { pt3dadd( -33.4567, 633.129, -18.9861, 0.83 ) }
    apic_16 { pt3dadd( -34.9171, 640.39, -17.7473, 0.83 ) }
    apic_16 { pt3dadd( -36.426, 648.513, -16.5361, 0.83 ) }
    apic_16 { pt3dadd( -38.8432, 660.35, -14.7537, 0.83 ) }
    apic_16 { pt3dadd( -39.9153, 665.241, -14.1077, 0.83 ) }
    apic_16 { pt3dadd( -41.623, 672.84, -13.17, 0.83 ) }
    apic_16 { pt3dadd( -44.9405, 685.198, -11.582, 0.83 ) }
    apic_16 { pt3dadd( -47.1223, 692.571, -10.6854, 0.83 ) }
    apic_16 { pt3dadd( -48.8094, 697.756, -10.2852, 0.83 ) }
    apic_16 { pt3dadd( -51.5847, 705.259, -9.93842, 0.83 ) }
    apic_16 { pt3dadd( -52.7768, 708.172, -9.90762, 0.83 ) }
    apic_16 { pt3dadd( -56.3799, 715.684, -10.1213, 0.55 ) }
    apic_16 { pt3dadd( -58.954, 720.853, -10.5623, 0.55 ) }
    apic_16 { pt3dadd( -60.142, 723.343, -10.7212, 0.55 ) }
    apic_16 { pt3dadd( -62.6742, 729.617, -11.2562, 0.55 ) }
    apic_16 { pt3dadd( -64.2019, 733.666, -11.599, 0.55 ) }
    apic_16 { pt3dadd( -65.9614, 738.401, -11.9124, 0.55 ) }
    apic_16 { pt3dadd( -68.228, 745.156, -12.2488, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_16 { pt3dadd( -71.5377, 753.956, -12.402, 0.55 ) }
    apic_16 { pt3dadd( -74.3363, 761.018, -12.4404, 0.55 ) }
    apic_16 { pt3dadd( -75.5874, 764.092, -12.4084, 0.55 ) }
    apic_16 { pt3dadd( -78.298, 770.84, -12.1894, 0.55 ) }
    apic_16 { pt3dadd( -79.6802, 774.032, -11.8962, 0.55 ) }
    apic_16 { pt3dadd( -82.2729, 780.227, -10.8761, 0.55 ) }
    apic_16 { pt3dadd( -84.6163, 785.8, -9.68877, 0.55 ) }
    apic_16 { pt3dadd( -86.0598, 789.506, -8.79139, 0.55 ) }
    apic_16 { pt3dadd( -87.1442, 792.542, -8.04761, 0.55 ) }
    apic_16 { pt3dadd( -88.0119, 795.057, -7.45081, 0.55 ) }
    apic_16 { pt3dadd( -91.7188, 806.889, -5.09222, 0.55 ) }
    apic_16 { pt3dadd( -93.0195, 811.483, -4.35759, 0.55 ) }
    apic_16 { pt3dadd( -95.3535, 819.554, -3.38165, 0.55 ) }
    apic_16 { pt3dadd( -96.8444, 824.888, -3.07869, 0.55 ) }
    apic_16 { pt3dadd( -97.6476, 827.753, -2.97602, 0.55 ) }
    apic_16 { pt3dadd( -101.381, 841.22, -2.86852, 0.55 ) }
    apic_16 { pt3dadd( -102.609, 845.423, -2.98849, 0.55 ) }
    apic_16 { pt3dadd( -104.371, 852.053, -3.2739, 0.55 ) }
    apic_16 { pt3dadd( -106.269, 858.706, -3.87502, 0.28 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 19/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -6.39604, 86.6618, -18.443, 1.11 ) }
    apic_15 { pt3dadd( -4.10853, 85.9791, -21.0959, 0.83 ) }
    apic_15 { pt3dadd( -0.882446, 84.5262, -25.0771, 0.55 ) }
    apic_15 { pt3dadd( 1.31758, 83.3787, -27.913, 0.55 ) }
    apic_15 { pt3dadd( 5.17591, 81.1623, -33.0024, 0.55 ) }
    apic_15 { pt3dadd( 6.97623, 80.0371, -35.4127, 0.55 ) }
    apic_15 { pt3dadd( 8.12582, 79.2609, -36.9569, 0.55 ) }
    apic_15 { pt3dadd( 10.4377, 77.2742, -40.511, 0.55 ) }
    apic_15 { pt3dadd( 11.7395, 75.9203, -42.5632, 0.55 ) }
    apic_15 { pt3dadd( 13.2161, 74.4012, -44.8323, 0.55 ) }
    apic_15 { pt3dadd( 14.155, 73.4253, -46.2358, 0.55 ) }
    apic_15 { pt3dadd( 17.5567, 70.2435, -50.8428, 0.55 ) }
    apic_15 { pt3dadd( 19.4997, 68.6231, -53.3926, 0.55 ) }
    apic_15 { pt3dadd( 23.1535, 66.0316, -57.9968, 0.55 ) }
    apic_15 { pt3dadd( 24.8263, 65.0121, -60.0044, 0.55 ) }
    apic_15 { pt3dadd( 25.9843, 64.3702, -61.3912, 0.55 ) }
    apic_15 { pt3dadd( 26.9612, 63.8928, -62.548, 0.55 ) }
    apic_15 { pt3dadd( 28.6633, 63.2495, -64.5716, 0.55 ) }
    apic_15 { pt3dadd( 31.1652, 62.5165, -67.6453, 0.55 ) }
    apic_15 { pt3dadd( 32.4912, 62.2021, -69.516, 0.55 ) }
    apic_15 { pt3dadd( 34.4586, 61.6075, -72.7783, 0.55 ) }
    apic_15 { pt3dadd( 35.4061, 61.3469, -74.4312, 0.55 ) }
    apic_15 { pt3dadd( 36.9148, 60.9662, -77.2673, 0.55 ) }
    apic_15 { pt3dadd( 38.2435, 60.7142, -79.8885, 0.55 ) }
    apic_15 { pt3dadd( 39.0725, 60.6006, -81.7115, 0.55 ) }
    apic_15 { pt3dadd( 40.7642, 60.5581, -85.4805, 0.55 ) }
    apic_15 { pt3dadd( 41.8019, 60.6969, -87.7131, 0.55 ) }
    apic_15 { pt3dadd( 43.3751, 60.9568, -91.2051, 0.55 ) }
    apic_15 { pt3dadd( 44.3397, 61.0957, -93.3491, 0.55 ) }
    apic_15 { pt3dadd( 45.3305, 61.3343, -95.5359, 0.55 ) }
    apic_15 { pt3dadd( 46.201, 61.6782, -97.4784, 0.28 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 50/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -36.6736, 130.814, 46.565, 0.55 ) }
    apic_13 { pt3dadd( -38.5654, 131.516, 48.1113, 0.55 ) }
    apic_13 { pt3dadd( -40.2169, 132.129, 49.4613, 0.55 ) }
    apic_13 { pt3dadd( -41.2666, 132.518, 50.3193, 0.28 ) }
    apic_13 { pt3dadd( -42.1182, 132.834, 51.0154, 0.28 ) }
    apic_13 { pt3dadd( -45.4054, 134.054, 53.7023, 0.28 ) }
    apic_13 { pt3dadd( -46.8914, 134.605, 54.917, 0.28 ) }
    apic_13 { pt3dadd( -54.8478, 138.415, 62.1923, 0.28 ) }
    apic_13 { pt3dadd( -62.949, 140.851, 69.8476, 0.28 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 59/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -36.6736, 130.814, 46.565, 0.55 ) }
    apic_12 { pt3dadd( -35.9177, 133.595, 46.5056, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_41 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    dend_45 ModelViewParmSubset_7.append()
    dend_42 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    dend_47 ModelViewParmSubset_7.append()
    dend_46 ModelViewParmSubset_7.append()
    dend_44 ModelViewParmSubset_7.append()
    dend_43 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    dend_49 ModelViewParmSubset_7.append()
    dend_48 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_31, dend_28, dend_11, dend_0, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_33 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_41 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_45 ModelViewParmSubset_8.append()
    dend_42 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_47 ModelViewParmSubset_8.append()
    dend_46 ModelViewParmSubset_8.append()
    dend_44 ModelViewParmSubset_8.append()
    dend_43 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_49 ModelViewParmSubset_8.append()
    dend_48 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    apic_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    apic_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    apic_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    apic_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_2 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_4 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_59 = new SectionList()
    apic_14 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_69 = new SectionList()
    apic_13 OneSecGrp_SectionRef_69.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_12, dend_12, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 3
    apic_1 nseg = 5
    dend_32 nseg = 7
    dend_30 nseg = 5
    dend_29 nseg = 9
    apic_3 nseg = 7
    dend_34 nseg = 3
    dend_27 nseg = 5
    dend_16 nseg = 3
    dend_13 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_42 nseg = 3
    dend_35 nseg = 5
    dend_21 nseg = 7
    dend_18 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 7
    dend_10 nseg = 7
    dend_9 nseg = 5
    dend_7 nseg = 5
    dend_6 nseg = 3
    apic_9 nseg = 3
    apic_7 nseg = 5
    apic_6 nseg = 7
    dend_47 nseg = 3
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 5
    dend_23 nseg = 5
    apic_11 nseg = 5
    dend_49 nseg = 5
    dend_48 nseg = 3
    dend_26 nseg = 7
    apic_16 nseg = 39
    apic_15 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_SP_274e5a90fb_0_0


