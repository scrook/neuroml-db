// Cell: cACint209_L6_MC_62cf39b45d_0_0
/*
{
  "id" : "cACint209_L6_MC_62cf39b45d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.10769, -14.5581, -1.28568, 3.47159", "0.97266, -13.1566, -1.15776, 5.7463", "0.837634, -11.7551, -1.02984, 7.24579", "0.702608, -10.3536, -0.901916, 8.48761", "0.567581, -8.95209, -0.773994, 10.1714", "0.432555, -7.55059, -0.646072, 11.9512", "0.297528, -6.14909, -0.518149, 13.6591", "0.162502, -4.74759, -0.390227, 14.521", "0.0274756, -3.34609, -0.262305, 15.3268", "-0.107551, -1.94459, -0.134383, 15.6875", "-0.242577, -0.543095, -0.00646127, 15.6148", "-0.377604, 0.858404, 0.121461, 15.2713", "-0.51263, 2.2599, 0.249383, 14.3032", "-0.647656, 3.6614, 0.377305, 13.4674", "-0.782683, 5.0629, 0.505227, 12.0636", "-0.917709, 6.4644, 0.633149, 10.8584", "-1.05274, 7.8659, 0.761071, 9.75206", "-1.18776, 9.2674, 0.888993, 8.24243", "-1.32279, 10.6689, 1.01692, 6.68054", "-1.45781, 12.0704, 1.14484, 5.41959", "-1.59284, 13.4719, 1.27276, 3.12647" ]
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.72433, 12.3101, 0.328394, 5.16", "-2.17433, 12.6801, 0.328394, 5.16" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000035582915904
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.404331, -15.2599, -11.2916, 4.64", "-0.404331, -15.2599, -11.2916, 4.64", "-1.87871, -18.5913, -12.0807, 3.24", "-2.69627, -20.4387, -12.5182, 3.02", "-3.7073, -22.7231, -13.0593, 2.87", "-4.92637, -25.4777, -13.7118, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000035582915904
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.59284, 13.4719, 1.27276, 0.694734", "-3.03134, 28.4028, 1.27276, 0.694734", "-4.46985, 43.3336, 1.27276, 0.694734" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-2.17433, 12.6801, 0.328394, 2.8", "-2.65917, 15.8169, 0.328394, 2.8", "-2.83626, 16.9642, 0.328394, 2.8", "-3.17767, 19.1761, 0.328394, 3.02", "-3.42358, 20.7693, 0.328394, 3.02", "-3.47126, 21.0782, 0.328394, 3.02", "-3.62123, 22.0499, 0.328394, 2.43", "-3.74211, 22.8168, 0.328394, 2.43" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-2.17433, 12.6801, 0.328394, 1.77", "-3.46166, 13.8435, 1.58772, 1.77", "-4.0941, 14.4016, 2.09461, 0.88", "-6.81308, 16.7391, 3.95877, 0.74", "-7.50317, 17.3535, 4.38499, 0.74", "-8.55227, 18.3187, 4.89861, 0.96", "-9.18228, 18.9058, 5.12518, 0.66", "-9.72404, 19.4025, 5.16348, 0.74", "-10.1128, 19.7498, 5.05546, 0.81", "-10.6063, 20.1752, 4.72611, 0.81", "-11.5357, 20.9453, 3.99359, 0.81", "-12.0521, 21.3784, 3.52135, 0.96", "-12.6867, 21.9538, 2.84129, 0.96", "-12.8427, 22.1184, 2.6436, 1.33", "-13.458, 22.8999, 1.71417, 1.33", "-13.7439, 23.4202, 0.914268, 0.52", "-13.8823, 23.8018, 0.299352, 0.52", "-13.9921, 24.2481, -0.420662, 0.52", "-14.0741, 24.7188, -1.17105, 1.11", "-14.145, 25.1934, -1.92758, 1.4", "-14.5089, 27.6167, -5.75919, 0.52", "-14.5545, 27.8388, -6.13468, 0.66", "-14.6246, 28.0412, -6.49342, 0.81", "-14.7061, 28.1879, -6.75583, 0.81", "-15.1942, 28.7681, -7.77893, 0.81", "-15.4821, 29.0129, -8.15693, 1.11", "-16.2795, 29.5102, -8.67116, 1.11", "-16.8625, 29.8653, -9.04062, 0.44", "-17.1895, 30.0641, -9.24075, 0.44", "-17.8506, 30.4865, -9.62386, 0.52", "-18.1907, 30.7549, -9.89362, 0.37", "-18.3513, 30.9418, -10.1078, 0.37", "-18.5557, 31.2787, -10.4502, 0.37", "-18.6211, 31.3845, -10.5528, 0.52", "-18.7988, 31.6437, -10.7947, 0.81", "-19.9932, 33.2096, -12.1407, 0.52", "-20.1396, 33.3922, -12.2907, 0.52", "-20.9817, 34.3802, -13.0571, 0.37", "-21.5597, 34.9712, -13.4783, 0.29", "-22.098, 35.4795, -13.8331, 0.29", "-22.5332, 35.8585, -14.0726, 0.29", "-22.8635, 36.1343, -14.2014, 0.29", "-23.0172, 36.2616, -14.2734, 0.29", "-23.5668, 36.699, -14.776, 0.29", "-24.2042, 37.2013, -15.4977, 0.96", "-24.2515, 37.2351, -15.5535, 1.11", "-24.7112, 37.5277, -16.1193, 0.44", "-25.2474, 37.8251, -16.7618, 0.44", "-26.8319, 38.6426, -18.5871, 0.44", "-27.214, 38.8331, -19.009, 0.96", "-27.4175, 38.9241, -19.2379, 0.96", "-27.9944, 39.1228, -19.9001, 0.44", "-28.3322, 39.2054, -20.3596, 0.44", "-28.6069, 39.2631, -20.8149, 0.44", "-28.7452, 39.2813, -21.0946, 0.44", "-29.6807, 39.338, -23.2721, 0.59", "-29.9819, 39.334, -24.0274, 0.59", "-30.9122, 39.2875, -26.4597, 0.59", "-31.4819, 39.2491, -28.0476, 0.59", "-32.2702, 39.1657, -30.2496, 0.88", "-32.6154, 39.1148, -31.2246, 0.59", "-32.992, 39.0534, -32.2251, 0.22", "-33.1239, 39.0351, -32.5602, 0.22", "-33.9928, 38.9162, -34.4137, 0.81", "-34.2801, 38.8952, -34.9296, 1.55", "-35.8746, 38.9379, -37.4015, 0.52", "-36.1922, 38.9608, -37.8685, 0.52", "-36.4234, 38.978, -38.1857, 0.44", "-36.9748, 39.008, -38.864, 0.37", "-37.5073, 39.0382, -39.4305, 0.37", "-37.6029, 39.0423, -39.5442, 0.59", "-38.2639, 39.0125, -40.354, 0.59", "-38.5317, 38.9709, -40.7242, 0.59", "-38.838, 38.8858, -41.1543, 0.59", "-40.1226, 38.4057, -42.9606, 0.59", "-40.8716, 38.1185, -44.0575, 0.96", "-41.2445, 37.9719, -44.62, 0.59", "-41.5079, 37.8529, -45.0786, 0.22", "-41.937, 37.6426, -45.8724, 0.22", "-42.2876, 37.4665, -46.6193, 0.29", "-42.987, 37.1079, -48.387, 0.81", "-43.0994, 37.0486, -48.6929, 1.4", "-43.9568, 36.5529, -51.311, 0.59", "-44.1096, 36.446, -51.8675, 0.96", "-45.1252, 35.6143, -55.9515, 1.33", "-45.9902, 34.7748, -59.5402, 0.59", "-46.118, 34.6284, -60.0581, 0.44", "-46.2861, 34.4124, -60.7048, 0.44", "-46.9359, 33.3662, -63.18, 0.44", "-47.0953, 33.0749, -63.7735, 0.44", "-47.2509, 32.7674, -64.3265, 0.44", "-47.6868, 31.9905, -65.754, 0.44", "-47.9616, 31.5528, -66.7511, 0.44", "-48.6701, 30.5019, -69.3726, 0.44", "-48.9496, 30.0917, -70.4637, 0.88", "-49.5707, 29.136, -73.5428, 0.59", "-49.6148, 29.0675, -73.7899, 0.59", "-50.2025, 28.1346, -77.5126, 0.22", "-50.2734, 28.0179, -77.99, 0.52", "-50.3187, 27.9402, -78.277, 0.52", "-51.218, 26.3264, -83.6685, 0.52", "-51.298, 26.1874, -84.0913, 0.88", "-51.926, 25.1717, -87.1051, 0.37", "-52.0192, 25.0298, -87.4914, 0.37", "-52.421, 24.4266, -89.0456, 0.44", "-53.309, 23.1009, -92.0213, 0.52", "-53.8089, 22.3365, -93.19, 0.59", "-53.9922, 22.0398, -93.5822, 0.22", "-54.209, 21.6593, -93.9652, 0.22", "-54.4174, 21.2371, -94.3594, 0.22", "-54.6172, 20.7613, -94.7675, 0.22", "-54.9801, 19.8039, -95.2386, 0.22", "-55.1247, 19.4106, -95.4003, 0.66", "-55.2078, 19.1788, -95.4839, 0.66", "-55.6726, 17.965, -95.8577, 0.66", "-56.0101, 17.1558, -96.0582, 0.29", "-56.2979, 16.5074, -96.1929, 0.29", "-56.7432, 15.5502, -96.3422, 0.29", "-57.0623, 14.873, -96.4334, 1.25", "-57.7204, 13.4669, -96.6017, 0.37", "-58.127, 12.6095, -96.6763, 0.37", "-58.545, 11.6704, -96.8408, 0.37", "-58.8739, 10.8796, -97.0694, 0.37", "-59.1911, 10.0384, -97.4078, 0.96", "-59.5037, 9.19254, -97.8587, 0.52", "-59.6077, 8.94481, -98.0305, 0.52", "-60.3048, 7.57318, -99.3224, 0.52", "-60.4279, 7.38999, -99.529, 0.52", "-60.7756, 6.99236, -100.055, 0.52", "-61.3759, 6.41114, -100.912, 0.52", "-62.167, 5.7455, -102.009, 0.52", "-63.193, 4.94333, -103.349, 0.52", "-63.7865, 4.51021, -104.122, 0.29", "-64.4189, 4.04891, -104.981, 0.44", "-64.8738, 3.70464, -105.649, 0.44", "-65.8156, 2.94337, -107.083, 0.07", "-66.1098, 2.68804, -107.555, 0.96", "-67.1546, 1.74468, -109.194, 0.29", "-67.5269, 1.39056, -109.809, 0.29", "-68.1205, 0.804559, -110.802, 0.74", "-68.4552, 0.445064, -111.33, 0.74", "-69.2305, -0.477836, -112.5, 0.07", "-69.4861, -0.79931, -112.994, 0.07", "-69.5477, -0.878673, -113.12, 0.74", "-70.0672, -1.5056, -114.282, 0.22", "-70.6112, -2.07298, -115.475, 0.29", "-70.9647, -2.39401, -116.258, 1.11", "-72.8344, -3.82308, -120.349, 0.15", "-73.0858, -3.99198, -120.917, 0.15", "-73.7001, -4.37351, -122.412, 0.15", "-74.162, -4.62278, -123.559, 0.15", "-74.5959, -4.82389, -124.671, 0.74", "-75.3628, -5.157, -126.62, 0.44", "-75.9975, -5.41564, -128.137, 0.44", "-77.1849, -5.93748, -131.245, 0.44", "-77.3021, -6.00587, -131.59, 0.74" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-4.92637, -25.4777, -13.7118, 1.47", "-5.24596, -27.3175, -14.5952, 1.47", "-5.24356, -28.7523, -15.3527, 1.47", "-5.02163, -30.1312, -16.2713, 1.25", "-4.67883, -31.5572, -17.2412, 1.4", "-4.39859, -32.3409, -17.9182, 1.4", "-3.97709, -33.3495, -18.8659, 1.18", "-3.40529, -34.3104, -19.8829, 1.18", "-2.49992, -35.4838, -21.3103, 1.18", "-1.97203, -36.0382, -22.074, 1.18", "-0.00370187, -37.7761, -24.8819, 1.62", "0.351189, -38.068, -25.4378, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.92637, -25.4777, -13.7118, 2.06", "-3.54242, -27.9938, -14.1776, 2.06", "-2.73389, -29.4637, -14.4497, 1.99", "-2.21858, -30.4005, -14.6232, 1.99", "-1.29998, -32.0706, -14.9324, 1.99", "-0.341163, -33.8137, -15.2551, 2.65", "0.165127, -34.7342, -15.4256, 2.95" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.46985, 43.3336, 1.27276, 0.332378", "-5.90835, 58.2645, 1.27276, 0.332378", "-7.34685, 73.1954, 1.27276, 0.332378" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-3.74211, 22.8168, 0.328394, 1.92", "-4.15982, 23.7523, -0.139089, 1.92", "-5.02404, 25.6422, -0.987671, 1.77", "-5.93703, 27.4588, -1.67825, 1.77", "-6.3924, 28.3606, -1.92505, 1.62", "-6.59744, 28.7641, -2.01258, 1.62", "-7.16458, 29.88, -2.2547, 1.62", "-7.72935, 31.0092, -2.43505, 1.62", "-8.61908, 32.7013, -2.49089, 1.84", "-9.42064, 34.1074, -2.46959, 1.84", "-9.58708, 34.3913, -2.44363, 1.84" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-3.74211, 22.8168, 0.328394, 1.92", "-3.91042, 23.5484, -0.0085088, 1.92", "-4.16732, 24.6065, -0.54835, 0.52", "-4.44321, 25.7224, -1.18166, 0.52", "-4.63254, 26.6598, -1.72947, 0.52", "-4.76032, 27.5563, -2.24058, 0.52", "-4.83885, 28.5211, -2.7572, 0.52", "-4.81529, 29.4452, -3.23758, 0.52", "-4.77303, 29.9017, -3.46108, 0.52", "-4.6393, 30.6045, -3.74, 0.59", "-4.47975, 31.3645, -3.95445, 0.59", "-4.32504, 32.1593, -4.16987, 0.59", "-4.23631, 32.939, -4.43673, 0.59", "-4.28529, 33.4688, -4.67806, 0.59", "-4.52304, 34.1651, -5.07324, 0.66", "-4.92512, 34.9138, -5.56512, 0.66", "-5.37301, 35.5951, -6.05995, 0.88", "-6.0105, 36.4829, -6.75165, 0.81", "-6.52388, 37.172, -7.31239, 0.66", "-6.92552, 37.7936, -7.91511, 0.66", "-7.0917, 38.1939, -8.35844, 0.66", "-7.04315, 38.5195, -8.77702, 0.66", "-6.76897, 38.8399, -9.21137, 0.88", "-6.54486, 39.0049, -9.43555, 0.88", "-5.10368, 39.9392, -10.6609, 0.59", "-4.71588, 40.2008, -10.988, 0.59", "-4.13567, 40.6465, -11.4916, 0.59", "-3.59782, 41.1434, -11.9904, 0.59", "-3.09036, 41.75, -12.5536, 0.59", "-2.90886, 42.0195, -12.7702, 0.59", "-2.48881, 42.7686, -13.2558, 0.81", "-2.23838, 43.232, -13.5659, 0.81", "-1.93721, 43.7715, -13.9506, 0.74", "-1.25875, 44.8002, -14.8684, 0.88", "-0.932789, 44.9707, -15.2305, 0.88", "-0.586626, 45.0142, -15.558, 0.59", "-0.192093, 45.0203, -15.9154, 0.59", "0.434413, 45.0519, -16.5165, 0.59", "1.10002, 45.1733, -17.2804, 0.59", "2.72855, 45.6101, -19.2158, 0.59", "3.06805, 45.7129, -19.6274, 0.59", "3.81794, 45.9691, -20.5766, 0.44", "4.46289, 46.2147, -21.3986, 0.44", "5.62032, 46.7424, -22.9578, 0.52", "6.14311, 47.0104, -23.6805, 0.52", "6.6327, 47.2461, -24.386, 0.52", "7.33503, 47.5035, -25.3318, 0.74", "7.97631, 47.6784, -26.0931, 1.33", "9.21156, 47.9917, -27.4659, 0.88", "9.49202, 48.0812, -27.7795, 0.88", "10.0502, 48.3411, -28.4788, 0.37", "10.7118, 48.7487, -29.3326, 0.37", "11.1557, 49.048, -29.8976, 0.37", "11.7814, 49.4886, -30.685, 0.66", "12.3648, 49.8845, -31.3762, 0.66", "13.057, 50.3656, -32.2309, 0.22", "13.7557, 50.894, -33.125, 0.37", "14.309, 51.378, -34.0048, 0.52" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-3.74211, 22.8168, 0.328394, 0.52", "-1.66104, 24.9135, 2.12172, 0.52", "-0.721437, 25.9205, 2.81333, 1.62", "-0.235446, 26.4582, 3.13256, 1.55", "0.357832, 27.1275, 3.48114, 1.18", "0.92544, 27.7746, 3.79228, 1.18", "0.962897, 27.8174, 3.81134, 1.18", "1.41699, 28.3101, 4.03307, 1.18", "2.03206, 29.0416, 4.57122, 1.33", "2.36412, 29.4289, 4.9185, 1.69", "2.42613, 29.4981, 4.99514, 1.69", "2.64928, 29.7349, 5.30996, 1.69", "4.30394, 31.4267, 7.84867, 2.21", "4.49889, 31.6108, 8.19982, 2.21" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "0.351189, -38.068, -25.4378, 1.03", "-0.277814, -38.9071, -26.096, 1.03", "-1.68671, -40.664, -27.2578, 0.66", "-2.55466, -41.7075, -27.9521, 0.66", "-3.10984, -42.3282, -28.4319, 0.96", "-3.72467, -42.9462, -28.9895, 0.96", "-4.42273, -43.5799, -29.6042, 0.96", "-5.15235, -44.1765, -30.2505, 1.11", "-6.25979, -45.0595, -31.1625, 0.88", "-7.28387, -45.9596, -32.1411, 1.18", "-8.08335, -46.7014, -32.9365, 0.66", "-8.58672, -47.1867, -33.4524, 0.66", "-9.45531, -48.0498, -34.347, 0.66", "-10.022, -48.6218, -34.9111, 0.81", "-10.7181, -49.3125, -35.4725, 0.81", "-11.1648, -49.7692, -35.7867, 1.03", "-11.6926, -50.3082, -36.1387, 1.03", "-12.3474, -50.938, -36.5502, 0.96", "-13.0119, -51.5102, -36.9176, 1.18", "-13.877, -52.2026, -37.3404, 1.18", "-14.9752, -53.0404, -37.8403, 1.33", "-15.9312, -53.7423, -38.2565, 1.33", "-17.0456, -54.5415, -38.7124, 1.25", "-17.9291, -55.1394, -39.053, 1.25", "-19.314, -55.9969, -39.5687, 1.25", "-20.4853, -56.6164, -39.9768, 1.25", "-21.209, -56.9434, -40.2192, 0.88", "-21.7702, -57.1706, -40.4047, 0.88", "-22.5872, -57.4791, -40.6735, 0.66", "-23.1794, -57.7139, -40.878, 0.66", "-24.0389, -58.1272, -41.2375, 0.88", "-24.7184, -58.5302, -41.5218, 0.88", "-25.3885, -58.9822, -41.7982, 0.88", "-26.0746, -59.4779, -42.063, 1.03", "-26.5819, -59.858, -42.2374, 1.03", "-27.6943, -60.7625, -42.6336, 0.96", "-28.7205, -61.6602, -42.9888, 0.96", "-29.5198, -62.3978, -43.3004, 1.03", "-29.849, -62.7185, -43.4518, 1.25", "-30.1446, -63.0116, -43.6283, 1.25", "-30.9972, -63.8602, -44.1449, 0.74", "-31.5261, -64.4221, -44.4988, 0.74", "-32.0606, -65.0722, -44.9756, 1.18", "-32.6793, -65.892, -45.6519, 1.18", "-33.5822, -67.0977, -46.7392, 1.33" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.351189, -38.068, -25.4378, 0.96", "1.25936, -39.613, -25.7405, 0.96", "1.86636, -40.7074, -25.914, 0.59", "2.58206, -42.0698, -26.0949, 0.59", "3.2404, -43.5151, -26.2575, 0.81", "3.65315, -44.5545, -26.414, 0.88", "3.88881, -45.226, -26.5761, 0.88", "4.01221, -45.7842, -26.6972, 0.37", "4.10819, -46.327, -26.8216, 0.37", "4.25918, -47.2229, -27.1066, 0.37", "4.48829, -48.5189, -27.5726, 0.96", "4.75475, -49.999, -28.1896, 0.96", "5.11338, -51.9185, -29.0315, 0.88", "5.28991, -52.8212, -29.4221, 0.88", "5.81507, -55.0958, -30.3503, 1.18", "5.94122, -55.533, -30.5065, 0.29", "6.23033, -56.4855, -30.7643, 0.37", "6.39924, -57.0478, -30.8894, 0.37", "6.61846, -57.9115, -31.1345, 0.37", "6.69267, -58.3334, -31.2394, 0.37", "6.78313, -59.1731, -31.4835, 0.37", "6.81023, -59.7144, -31.7051, 0.37", "6.81697, -60.393, -32.0258, 0.52", "6.79917, -61.5696, -32.6901, 0.81", "6.72137, -62.7571, -33.4105, 0.96", "6.59179, -64.4146, -34.4115, 0.96", "6.53606, -65.279, -34.9318, 0.59", "6.52992, -66.386, -35.5402, 0.59", "6.66715, -67.8951, -36.2289, 0.88", "6.85231, -68.8544, -36.5529, 0.88", "7.13395, -69.9116, -36.8043, 0.59", "7.32362, -70.5481, -36.9065, 0.59", "7.8646, -72.2021, -37.2538, 0.59", "8.45074, -73.8114, -37.6264, 0.59", "8.79503, -74.6736, -37.8936, 0.59", "9.20312, -75.6929, -38.3453, 1.03", "9.41398, -76.2626, -38.6903, 1.03", "10.0749, -78.1129, -39.9904, 0.96", "10.4359, -79.1201, -40.8303, 0.96", "11.1283, -81.0513, -42.5749, 0.96", "11.6443, -82.4368, -43.8529, 1.18", "12.4108, -84.337, -45.6037, 1.18", "12.7188, -85.03, -46.2058, 1.18", "13.4798, -86.6097, -47.5028, 0.52", "13.7511, -87.1472, -47.9184, 0.52", "14.106, -87.7621, -48.3385, 0.81", "15.0474, -89.1444, -49.2901, 0.81", "15.9969, -90.4854, -50.2366, 0.81", "17.0249, -91.9644, -51.3251, 1.11", "17.5665, -92.7646, -51.9447, 1.11", "18.5286, -94.29, -53.2063, 1.11", "19.3803, -95.7957, -54.4869, 0.81", "19.9868, -97.0689, -55.6059, 0.81", "20.156, -97.5189, -56.0001, 0.81", "20.5187, -98.6767, -56.9778, 0.22", "20.6641, -99.2769, -57.4947, 0.22", "20.7305, -99.9692, -58.0353, 0.22", "20.7473, -101.444, -58.9799, 0.88", "20.783, -102.386, -59.5435, 2.5" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.165127, -34.7342, -15.4256, 1.18", "-0.828725, -36.2522, -15.0602, 1.18", "-1.73365, -37.5534, -14.7277, 1.18", "-2.64993, -38.7583, -14.4362, 1.18", "-3.3636, -39.6156, -14.2402, 1.03", "-4.38975, -40.7541, -13.8491, 0.81", "-5.16799, -41.5558, -13.5134, 0.81", "-5.90055, -42.1832, -13.1074, 1.25", "-7.33958, -43.1166, -12.1906, 1.11", "-8.24189, -43.5509, -11.5552, 1.4", "-10.3109, -44.1913, -10.1028, 0.96", "-10.7403, -44.2724, -9.83067, 0.96", "-11.6617, -44.3808, -9.29236, 0.81", "-12.7815, -44.487, -8.64199, 0.88", "-13.2483, -44.5402, -8.39319, 1.18", "-14.2749, -44.7284, -7.90869, 0.96", "-16.4636, -45.3328, -6.90467, 0.66", "-17.2694, -45.6237, -6.40215, 0.66", "-18.684, -46.2704, -5.37527, 0.96", "-19.5163, -46.7119, -4.70267, 0.96", "-20.4076, -47.2272, -3.92234, 1.11", "-21.7828, -48.0952, -2.59393, 1.11", "-23.7043, -49.3413, -0.772867, 1.11", "-24.3081, -49.7424, -0.276736, 0.88", "-25.1626, -50.3284, 0.294233, 0.81", "-26.0906, -50.9929, 0.803798, 0.81", "-27.7694, -52.2337, 1.44207, 0.81", "-29.2934, -53.3106, 1.74699, 0.96", "-30.3925, -54.0425, 1.81426, 0.96", "-31.0165, -54.4197, 1.82642, 0.96", "-31.7805, -54.8499, 1.80448, 0.74", "-32.3943, -55.1628, 1.72581, 0.74", "-33.3866, -55.6028, 1.46517, 0.74", "-34.3485, -55.9724, 1.18068, 0.59", "-35.2721, -56.2668, 0.879071, 0.59", "-36.4584, -56.5944, 0.4843, 0.59", "-37.6976, -56.9099, 0.0770692, 0.59", "-38.7194, -57.1631, -0.236831, 0.59", "-39.4941, -57.3751, -0.526239, 0.74", "-40.3737, -57.6238, -0.880149, 0.74", "-40.9689, -57.8135, -1.12581, 0.74", "-41.7447, -58.0979, -1.44559, 0.74", "-42.8089, -58.5421, -1.87343, 0.74", "-44.8228, -59.462, -2.69346, 0.74", "-45.5264, -59.7881, -2.99568, 0.74", "-46.572, -60.2343, -3.45032, 0.74", "-47.3508, -60.5461, -3.76614, 0.74", "-48.5189, -61.0377, -4.18393, 0.59", "-49.3701, -61.3856, -4.43251, 0.59", "-49.9187, -61.5949, -4.56167, 0.59", "-51.2618, -62.0735, -4.90577, 0.59", "-52.4637, -62.4796, -5.21083, 0.52", "-53.6642, -62.8897, -5.50614, 0.52", "-54.7344, -63.2995, -5.74732, 0.81", "-55.8895, -63.7803, -5.9902, 1.18", "-57.002, -64.2519, -6.14438, 1.4", "-58.0895, -64.6976, -6.22357, 0.96", "-58.9674, -65.0231, -6.24576, 0.59", "-59.8367, -65.3093, -6.22313, 0.29", "-61.5174, -65.852, -6.07996, 0.29", "-63.1973, -66.3534, -5.85463, 0.81", "-63.8113, -66.527, -5.76648, 1.03", "-64.0897, -66.6015, -5.72841, 1.03", "-64.8884, -66.7821, -5.63076, 0.66", "-65.5941, -66.9094, -5.59503, 0.52", "-66.521, -67.0366, -5.62682, 0.52", "-67.4055, -67.1242, -5.72683, 0.52", "-68.2643, -67.1852, -5.85655, 0.52", "-69.3501, -67.2616, -6.03895, 0.52", "-70.4581, -67.3647, -6.24154, 0.88", "-71.3668, -67.4396, -6.41216, 1.03", "-72.0207, -67.5054, -6.52698, 1.03", "-73.8603, -67.7536, -6.87865, 0.44", "-74.8743, -67.9421, -7.10325, 0.44", "-75.3736, -68.0593, -7.22876, 0.44", "-76.2676, -68.288, -7.45781, 0.44", "-77.9967, -68.7779, -7.92991, 0.44", "-79.5536, -69.2413, -8.36588, 0.44", "-81.0222, -69.6841, -8.75953, 0.44", "-82.0263, -69.9943, -9.01741, 1.11", "-82.9987, -70.3006, -9.24174, 1.11", "-83.483, -70.4677, -9.33933, 0.81", "-83.9621, -70.6409, -9.42269, 0.37", "-85.4056, -71.2367, -9.58542, 0.37", "-86.4532, -71.7447, -9.66794, 0.37", "-87.2461, -72.1975, -9.72884, 0.88", "-87.6847, -72.483, -9.76729, 0.88", "-88.6577, -73.1374, -9.90218, 0.37", "-89.5995, -73.7945, -10.0692, 0.37", "-90.7483, -74.619, -10.3379, 0.37", "-91.1466, -74.8942, -10.46, 0.81", "-91.7677, -75.3168, -10.6928, 0.88", "-93.3398, -76.333, -11.3345, 0.37", "-93.8383, -76.6295, -11.5472, 0.59", "-94.7589, -77.1653, -11.9505, 1.03", "-95.6385, -77.6778, -12.2928, 1.18", "-96.3586, -78.1184, -12.5086, 0.66", "-97.0092, -78.5489, -12.6564, 0.66", "-97.7783, -79.1019, -12.8055, 0.44", "-99.219, -80.1641, -13.0612, 0.44", "-101.029, -81.5211, -13.3303, 0.44", "-103.031, -83.0473, -13.6039, 0.59", "-104.051, -83.8213, -13.7469, 0.59", "-105.338, -84.7778, -13.9399, 1.03", "-106.012, -85.2612, -14.0454, 1.55", "-106.75, -85.7568, -14.1696, 1.92", "-107.647, -86.3395, -14.3417, 0.37", "-108.241, -86.733, -14.4518, 0.37", "-109.561, -87.6482, -14.6575, 0.37", "-110.058, -88.0177, -14.7127, 0.59", "-110.739, -88.5826, -14.7859, 0.59", "-111.352, -89.1357, -14.8652, 0.29", "-113.06, -90.752, -15.0937, 0.29", "-113.488, -91.1715, -15.1566, 0.29", "-114.069, -91.729, -15.2577, 1.33", "-114.713, -92.3166, -15.3747, 1.77", "-115.856, -93.2848, -15.5783, 0.37", "-117.085, -94.2498, -15.7833, 0.37", "-118.03, -94.9177, -15.9441, 0.44", "-119.706, -96.0763, -16.2124, 0.44", "-119.948, -96.2457, -16.2481, 1.03", "-120.512, -96.6315, -16.3157, 1.77", "-121.007, -96.9739, -16.3592, 1.92", "-121.819, -97.5713, -16.4327, 0.44", "-122.585, -98.1893, -16.4133, 0.37", "-122.95, -98.509, -16.3567, 0.37", "-123.749, -99.2317, -16.1875, 0.37", "-124.64, -100.078, -15.9545, 1.92", "-125.058, -100.492, -15.8257, 2.14", "-126.336, -101.852, -15.3663, 0.29", "-126.94, -102.572, -15.0163, 0.29", "-127.136, -102.838, -14.868, 0.29", "-127.487, -103.43, -14.4856, 0.29", "-127.663, -103.758, -14.2545, 0.44", "-127.878, -104.162, -13.9747, 0.66", "-128.893, -106.081, -12.6942, 0.66", "-129.249, -106.741, -12.2473, 0.74", "-129.711, -107.531, -11.7303, 0.22", "-130.043, -108.077, -11.3993, 0.22", "-130.394, -108.641, -11.0773, 0.59", "-130.995, -109.593, -10.6099, 0.22", "-131.446, -110.328, -10.344, 0.22", "-131.829, -111.024, -10.1185, 1.11", "-132.151, -111.685, -9.90178, 1.84", "-132.762, -113.117, -9.2962, 0.37", "-133.062, -113.928, -8.90781, 0.37", "-133.272, -114.589, -8.57751, 0.37", "-133.533, -115.486, -8.09897, 0.37", "-133.839, -116.615, -7.45711, 0.96", "-134.201, -117.96, -6.65175, 0.29", "-134.41, -118.798, -6.14541, 0.29", "-134.555, -119.386, -5.73725, 0.29", "-134.637, -119.679, -5.50881, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.165127, -34.7342, -15.4256, 2.06", "1.41176, -36.9586, -14.6184, 2.06", "2.18305, -38.5058, -14.1357, 2.06", "2.87906, -39.9976, -13.6994, 2.06", "4.40994, -43.279, -12.7395, 1.84", "5.08773, -44.7318, -12.3146, 1.92", "5.97208, -46.6273, -11.7601, 2.06", "6.75981, -48.6214, -11.0053, 2.28", "6.82764, -48.811, -10.9289, 2.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-9.58708, 34.3913, -2.44363, 0.66", "-8.16172, 34.8896, -7.22658, 0.66", "-7.90738, 34.9785, -8.08005, 0.96" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.58708, 34.3913, -2.44363, 1.84", "-9.86394, 34.5388, -2.43401, 1.84", "-11.0899, 35.2133, -2.40736, 1.47", "-12.1481, 35.7623, -2.33929, 1.47", "-12.7787, 36.0603, -2.23862, 1.47", "-13.6195, 36.4441, -2.06542, 1.47", "-14.5529, 36.8702, -1.87313, 1.4", "-16.0565, 37.5255, -1.54431, 1.4", "-17.2591, 38.0321, -1.24673, 1.4", "-18.828, 38.6735, -0.777482, 1.4", "-19.6999, 39.0195, -0.467042, 1.25" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "14.309, 51.378, -34.0048, 0.29", "15.3902, 51.5949, -34.4268, 0.29", "16.5341, 51.7321, -34.8605, 0.29", "17.4878, 51.7872, -35.2418, 0.29", "18.3149, 51.7812, -35.571, 0.29", "19.3506, 51.6949, -35.985, 0.52", "19.9507, 51.5996, -36.2159, 0.52", "20.3441, 51.4634, -36.4022, 0.52", "20.8213, 51.2154, -36.6158, 0.22", "21.3009, 50.9221, -36.8077, 0.22", "21.8322, 50.5803, -37.0283, 0.22", "22.4741, 50.2363, -37.2511, 0.22", "23.4496, 49.8157, -37.5632, 0.66", "24.1785, 49.5552, -37.7679, 0.66", "24.9187, 49.3249, -37.9465, 0.37", "25.2931, 49.2152, -38.0358, 0.37", "26.662, 48.857, -38.3376, 0.22", "27.206, 48.7186, -38.465, 0.29", "27.709, 48.5972, -38.5899, 0.29", "27.9788, 48.5309, -38.6868, 0.29", "29.0573, 48.2383, -39.1686, 0.29", "29.4899, 48.0857, -39.3828, 0.29", "30.1422, 47.7658, -39.8075, 0.66", "30.9749, 47.2505, -40.5528, 1.77", "31.6508, 46.7763, -41.2578, 1.11", "31.9675, 46.535, -41.6613, 0.44", "32.5326, 46.0636, -42.4612, 0.44", "33.2733, 45.3904, -43.5569, 1.33", "34.2785, 44.4275, -45.1122, 1.92", "34.7722, 43.9488, -45.8955, 0.44", "35.9194, 42.897, -47.6367, 0.44", "36.2955, 42.5869, -48.1694, 0.96", "36.5465, 42.404, -48.4868, 1.11", "37.5212, 41.7484, -49.4304, 0.29", "37.8903, 41.5006, -49.6927, 0.29", "38.404, 41.1314, -49.9885, 0.29", "38.8879, 40.7646, -50.2033, 0.29", "39.3849, 40.3787, -50.4192, 0.29", "40.1021, 39.8112, -50.7249, 0.29", "41.1911, 38.9426, -51.1627, 1.18", "41.7374, 38.5048, -51.3898, 1.4", "42.3406, 38.0199, -51.6509, 0.44", "42.8965, 37.5729, -51.892, 0.44", "43.944, 36.7059, -52.3335, 0.44", "44.5669, 36.1713, -52.6025, 1.11", "45.3757, 35.465, -52.9264, 1.55", "46.0175, 34.8744, -53.1838, 0.44", "46.528, 34.3713, -53.368, 0.44", "47.0437, 33.7896, -53.5591, 0.44", "47.614, 33.081, -53.8356, 0.66", "47.8425, 32.7921, -53.9917, 0.96", "48.2663, 32.2915, -54.3215, 1.03", "48.6859, 31.8325, -54.6476, 0.22", "49.448, 31.0522, -55.2461, 0.22", "50.5691, 29.9933, -56.0776, 0.37", "51.3726, 29.2564, -56.5979, 0.66", "52.053, 28.6318, -57.002, 0.44", "52.5879, 28.1633, -57.2837, 0.44", "52.8743, 27.8903, -57.4007, 0.44", "53.2776, 27.4701, -57.4644, 1.03", "53.9213, 26.695, -57.4239, 1.18", "54.3291, 26.1886, -57.3639, 0.44", "54.5151, 25.9651, -57.3368, 0.44", "55.6967, 24.6363, -57.2259, 0.44", "56.4199, 23.8664, -57.2461, 0.44", "56.9731, 23.3002, -57.3175, 0.44", "57.9812, 22.3369, -57.583, 0.44", "58.6261, 21.7638, -57.808, 0.59", "59.3808, 21.0958, -58.1273, 1.11", "60.5418, 20.105, -58.7011, 1.33", "61.0553, 19.6517, -58.9699, 1.33", "61.8683, 18.9241, -59.3485, 0.59", "62.4852, 18.3788, -59.6337, 0.59", "63.2464, 17.742, -59.9522, 0.59", "64.7597, 16.5803, -60.4693, 0.37", "65.698, 15.9311, -60.7462, 0.37", "67.2115, 14.9605, -61.1651, 0.37", "68.2779, 14.2928, -61.4541, 0.44", "68.7737, 13.9988, -61.5934, 0.81", "69.4864, 13.6025, -61.8015, 1.03", "70.0375, 13.2925, -61.9637, 0.29", "71.2402, 12.5815, -62.3819, 0.29", "72.1607, 11.9756, -62.7558, 0.29", "73.2279, 11.1678, -63.2404, 0.29", "73.6426, 10.8056, -63.4693, 0.66", "74.0041, 10.4414, -63.7585, 0.96", "74.593, 9.66717, -64.4304, 0.96", "74.9633, 9.0301, -65.0068, 0.37", "75.2784, 8.32286, -65.6341, 0.37", "75.4486, 7.83974, -66.0481, 0.37", "75.9129, 6.31198, -67.5163, 0.37", "76.3068, 4.94526, -68.8524, 0.37", "76.4911, 4.28833, -69.4903, 0.52", "76.8104, 3.18208, -70.5699, 0.29", "76.9116, 2.85407, -70.9098, 1.18", "77.6476, 0.602147, -73.3507, 0.37", "77.8961, -0.225706, -74.2434, 0.37", "78.0784, -0.888294, -75.0937, 0.44", "78.1432, -1.19453, -75.519, 0.44", "78.3558, -2.53304, -77.3886, 0.44", "78.3713, -2.73362, -77.657, 0.81", "78.3509, -3.19291, -78.242, 0.81", "78.1221, -4.59838, -80.2001, 0.29", "78.0485, -4.89212, -80.6047, 0.29", "77.9378, -5.30401, -81.1448, 0.29", "77.7805, -5.93859, -81.8826, 0.29", "77.558, -7.14704, -83.1845, 1.11", "77.4468, -7.97576, -84.0169, 0.29", "77.4001, -8.42865, -84.3986, 0.29", "77.3568, -9.25896, -85.1348, 0.29", "77.3522, -9.68935, -85.5087, 0.29", "77.4242, -10.5162, -86.1327, 0.29", "77.5425, -11.2885, -86.6153, 0.81", "77.6468, -11.854, -86.9418, 0.81", "77.8826, -13.1196, -87.6588, 0.96", "77.9433, -13.5722, -87.8901, 0.29", "78.0643, -14.5822, -88.3424, 0.29", "78.1307, -15.2418, -88.5739, 0.52", "78.147, -15.6885, -88.6771, 0.52", "78.1453, -16.131, -88.7441, 0.22", "78.0878, -16.9988, -88.7918, 0.22", "78.0185, -17.7147, -88.8043, 0.22", "77.9662, -18.0916, -88.7878, 0.37", "77.8228, -19.1002, -88.6884, 0.37", "77.7641, -19.6459, -88.6266, 0.66", "77.6868, -20.2768, -88.5704, 0.66", "77.6169, -20.8882, -88.5352, 0.22", "77.5517, -21.5546, -88.5183, 0.22", "77.4913, -22.9016, -88.5185, 0.22", "77.4896, -24.2456, -88.5802, 0.22", "77.5181, -25.1683, -88.6794, 0.44", "77.5772, -25.8789, -88.7926, 0.44", "77.753, -26.9962, -89.0226, 0.44", "77.9779, -27.8971, -89.2515, 0.44", "78.304, -28.8139, -89.5591, 1.11", "78.6626, -29.6274, -89.8578, 0.44", "78.882, -30.04, -90.0253, 0.44", "79.4475, -30.9915, -90.4541, 0.44", "79.7357, -31.4421, -90.6711, 0.44", "80.5288, -32.6451, -91.2599, 0.44", "81.332, -33.8079, -91.7978, 0.44", "82.1294, -34.933, -92.3486, 0.44", "82.4976, -35.4303, -92.6057, 0.66", "82.7009, -35.6978, -92.7456, 0.66", "83.2151, -36.3849, -93.0621, 0.29", "83.7015, -37.0443, -93.3426, 0.29", "84.3623, -38.0058, -93.7224, 0.29", "85.0002, -39.0269, -94.0917, 0.29", "85.2374, -39.4114, -94.2286, 0.29", "85.8972, -40.4796, -94.6043, 0.29", "86.2169, -41.0261, -94.7822, 0.59", "86.6428, -41.8197, -95.0323, 0.59", "87.1352, -42.8, -95.3073, 0.29", "87.4736, -43.4965, -95.5166, 0.29", "88.0896, -44.7575, -96.01, 0.29", "88.3534, -45.2838, -96.2501, 0.29", "88.6486, -45.9307, -96.5613, 0.59", "88.8957, -46.5468, -96.8586, 1.03", "89.0247, -46.9243, -97.0531, 1.03", "89.465, -48.5065, -97.9189, 0.37", "89.7057, -49.5167, -98.4831, 0.37", "89.8483, -50.1813, -98.8805, 0.37", "89.9965, -50.9968, -99.3726, 0.37", "90.236, -52.3196, -100.156, 0.29", "90.3493, -52.914, -100.466, 0.29", "90.4281, -53.2965, -100.629, 0.29", "90.6612, -54.4018, -101.083, 0.37", "90.7708, -54.8849, -101.258, 0.37", "90.9693, -55.784, -101.527, 0.22", "91.3181, -57.2494, -101.804, 0.22", "91.4074, -57.588, -101.856, 0.66", "91.5479, -58.0748, -101.918, 0.74", "91.6752, -58.4756, -101.952, 0.22", "91.8478, -58.9817, -102.03, 0.22", "92.104, -59.7718, -102.195, 0.37", "92.2846, -60.2693, -102.337, 0.37", "92.7107, -61.3451, -102.724, 0.37", "93.019, -62.0421, -103.01, 0.37", "93.469, -62.9679, -103.428, 0.37", "93.6885, -63.3994, -103.619, 0.44", "93.9391, -63.876, -103.814, 0.44", "94.2208, -64.3898, -103.989, 0.44", "94.6565, -65.1589, -104.179, 0.44", "94.7422, -65.3067, -104.204, 0.59", "95.4723, -66.5278, -104.3, 0.44", "95.8623, -67.2056, -104.328, 0.44", "96.262, -67.9358, -104.275, 0.59", "96.4381, -68.272, -104.225, 0.59", "96.7481, -68.8893, -104.091, 0.37", "96.9393, -69.2854, -103.983, 0.37", "97.293, -70.0198, -103.735, 0.37", "97.8425, -71.2147, -103.282, 0.52", "97.9375, -71.4133, -103.203, 0.52", "98.2371, -71.9878, -102.969, 0.15", "98.5514, -72.524, -102.754, 0.15", "98.7112, -72.7631, -102.669, 0.44", "98.9567, -73.0885, -102.606, 0.74", "99.4611, -73.7382, -102.627, 0.15", "99.6476, -73.9686, -102.641, 0.15", "99.8694, -74.2528, -102.677, 0.15", "100.199, -74.6652, -102.736, 0.66", "100.798, -75.3802, -102.871, 0.29", "101.237, -75.8811, -103.006, 0.29", "101.684, -76.4087, -103.181, 0.29", "102.358, -77.2189, -103.46, 0.29", "102.913, -77.884, -103.724, 0.29", "103.342, -78.4009, -103.95, 0.52", "103.715, -78.8358, -104.189, 0.29", "104.321, -79.5908, -104.673, 0.29", "104.754, -80.1296, -105.057, 0.29", "105.481, -81.0666, -105.752, 0.29", "105.841, -81.5785, -106.13, 0.29", "106.611, -82.7186, -106.953, 0.29", "106.991, -83.2773, -107.365, 0.29", "107.268, -83.672, -107.689, 0.29", "107.596, -84.1597, -108.12, 0.29", "107.75, -84.4115, -108.33, 0.29" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "14.309, 51.378, -34.0048, 0.52", "15.2249, 51.4103, -34.0826, 0.52", "16.3794, 51.6482, -34.2053, 0.52", "17.2249, 51.9782, -34.4102, 0.29", "17.9382, 52.4499, -34.6845, 0.29", "18.1891, 52.7131, -34.9154, 0.29", "18.4611, 53.1006, -35.2849, 0.59", "18.741, 53.7914, -35.9386, 0.59", "18.9892, 54.7435, -36.8142, 0.29", "19.0899, 55.2786, -37.3433, 0.29", "19.3676, 56.7752, -38.9314, 0.66", "19.453, 57.16, -39.3451, 0.66", "19.5472, 57.5019, -39.7089, 0.88", "19.6359, 57.7415, -39.9633, 0.88", "19.9479, 58.3333, -40.5163, 0.15", "20.2511, 58.7679, -40.9185, 0.15", "20.5093, 59.0561, -41.1194, 0.15", "20.8141, 59.2974, -41.4025, 0.15", "20.8141, 59.2974, -41.4025, 0.29", "21.5337, 59.6309, -42.1362, 0.29", "21.8309, 59.7797, -42.4329, 0.29", "22.2815, 60.0147, -42.8736, 0.29", "23.2157, 60.567, -43.9672, 0.66", "23.5676, 60.8033, -44.392, 0.66", "23.9831, 61.1059, -44.91, 0.29", "24.6214, 61.6034, -45.703, 0.29", "24.9715, 61.8995, -46.1385, 0.29", "26.1269, 62.9411, -47.5423, 0.37", "26.5775, 63.3569, -48.0673, 1.33", "27.0423, 63.7819, -48.607, 0.44", "27.2796, 63.9807, -48.8697, 0.44", "27.5606, 64.197, -49.2449, 0.44", "27.7842, 64.3851, -49.5716, 0.44", "28.4342, 64.9626, -50.4888, 0.44", "28.701, 65.2287, -50.9415, 0.44", "28.9463, 65.497, -51.4002, 0.44", "29.9415, 66.5409, -53.2806, 0.74", "30.1723, 66.763, -53.6907, 1.18", "30.3683, 66.9269, -53.994, 1.33", "30.9885, 67.3953, -54.8502, 0.52", "31.2428, 67.5756, -55.2187, 0.29", "31.7122, 67.8823, -55.8635, 0.29", "32.0935, 68.1134, -56.3349, 0.81", "32.9389, 68.6041, -57.4378, 0.15", "33.5496, 68.9966, -58.2573, 0.81", "34.5874, 69.7495, -59.7527, 0.37", "34.7699, 69.8977, -60.0369, 0.37", "35.0989, 70.1998, -60.5758, 0.37", "35.6104, 70.7041, -61.467, 0.37", "36.0468, 71.1799, -62.2361, 0.29", "36.7677, 71.998, -63.3909, 0.29", "37.0249, 72.3087, -63.7606, 1.03", "37.3347, 72.7152, -64.2618, 1.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "4.49889, 31.6108, 8.19982, 1.11", "7.16163, 31.303, 11.4924, 1.11", "8.08936, 31.2176, 12.448, 1.11", "8.17271, 31.2186, 12.5225, 1.11", "8.31835, 31.2411, 12.6489, 1.11", "8.88321, 31.4044, 13.1315, 1.25", "8.98698, 31.4448, 13.2169, 1.25", "9.63537, 31.9103, 13.5757, 1.03", "10.7941, 32.9173, 14.2795, 0.88", "11.4774, 33.5254, 14.6604, 0.81", "11.9654, 33.9852, 14.9193, 0.81", "12.294, 34.296, 15.083, 0.81", "12.7258, 34.6775, 15.2541, 0.81", "13.2692, 35.0825, 15.3882, 0.88", "13.9353, 35.4345, 15.5476, 0.96", "14.3392, 35.5768, 15.6743, 0.96", "14.8947, 35.7253, 15.884, 0.96", "15.3566, 35.8381, 16.0779, 1.11", "16.1104, 36.0183, 16.4116, 1.11", "18.3091, 36.5434, 17.4382, 1.11", "19.0678, 36.7357, 17.8065, 1.11", "19.7744, 36.9425, 18.1404, 0.88", "20.4954, 37.2154, 18.4674, 0.88", "21.0645, 37.4748, 18.7343, 1.03", "21.1218, 37.5057, 18.76, 1.03", "21.7958, 37.9031, 18.9949, 1.03", "22.2568, 38.1785, 19.2858, 0.96", "22.9568, 38.5764, 19.8798, 0.96", "23.758, 39.0046, 20.6418, 1.33", "23.8114, 39.0319, 20.6948, 1.33", "24.1088, 39.179, 20.9853, 1.33", "25.6114, 39.879, 22.5496, 1.33", "26.0959, 40.0887, 23.0845, 0.81", "26.6279, 40.3029, 23.6824, 0.81", "26.8202, 40.3847, 23.8782, 1.11", "27.1231, 40.5216, 24.1807, 1.25" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "4.49889, 31.6108, 8.19982, 1.55", "5.50789, 32.887, 9.50282, 1.55", "6.22076, 33.659, 10.2283, 0.81", "6.31372, 33.7546, 10.3103, 0.81", "6.78975, 34.2676, 10.7721, 0.81", "7.16768, 34.703, 11.1559, 0.88", "7.71503, 35.4138, 11.7772, 0.88", "8.29523, 36.2773, 12.3884, 1.03", "8.49046, 36.6577, 12.6285, 0.88", "8.96789, 37.9092, 13.3735, 1.11", "9.06288, 38.2917, 13.5927, 0.96", "9.2018, 39.1887, 14.0863, 0.66", "9.27302, 40.0992, 14.5276, 0.52", "9.27281, 40.7378, 14.7614, 0.66", "9.2442, 41.217, 14.9334, 0.66", "9.14193, 42.098, 15.2122, 0.66", "9.13455, 42.1457, 15.2287, 0.66", "8.93535, 43.0872, 15.5704, 0.37", "8.69644, 43.8498, 15.8722, 0.37", "8.25711, 44.7834, 16.2347, 0.37", "8.01095, 45.172, 16.3699, 0.37", "7.97242, 45.2179, 16.3807, 0.37", "7.81199, 45.3958, 16.5337, 0.37", "7.4825, 45.745, 17.0622, 0.88", "7.31941, 45.9697, 17.4738, 1.11", "7.3009, 46.0085, 17.5442, 1.11", "7.21701, 46.3298, 18.1285, 1.33", "7.02414, 47.9598, 21.1146, 0.88", "7.03257, 48.0806, 21.3223, 0.88", "7.08587, 48.329, 21.7419, 0.59", "7.14728, 48.5296, 22.0353, 0.37", "7.29556, 48.9703, 22.5561, 0.29", "7.31888, 49.0363, 22.6161, 0.29", "7.55935, 49.9716, 23.0459, 0.29", "7.56927, 50.0449, 23.0824, 0.29", "7.59809, 50.826, 23.4726, 0.29", "7.58626, 51.1097, 23.6118, 0.29", "7.44679, 52.4316, 24.198, 0.66", "7.41765, 52.7396, 24.3196, 0.88", "7.32091, 53.5448, 24.6301, 0.44", "7.2768, 53.9549, 24.7835, 0.59", "7.24114, 54.411, 24.9448, 0.59", "7.18997, 55.2711, 25.1662, 0.52", "7.1711, 55.7252, 25.1838, 0.52" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-33.5822, -67.0977, -46.7392, 0.88", "-34.9069, -67.7322, -47.0808, 0.88", "-35.3082, -67.9511, -47.1829, 0.88", "-36.5722, -68.7089, -47.6086, 0.52", "-37.5, -69.2876, -47.9408, 0.52", "-38.5972, -69.9514, -48.374, 0.74", "-39.5029, -70.4806, -48.7332, 0.74", "-40.2753, -70.9137, -49.0899, 0.74", "-41.3185, -71.4953, -49.5681, 0.74", "-42.1068, -71.9529, -49.9151, 0.74", "-43.2375, -72.6152, -50.4133, 0.74", "-44.0251, -73.0517, -50.7422, 0.88", "-44.8372, -73.5168, -51.1153, 0.66", "-45.3035, -73.78, -51.3461, 0.59", "-45.9626, -74.1687, -51.6723, 0.59", "-46.7746, -74.7211, -52.1106, 0.59", "-47.2196, -75.0705, -52.3745, 0.59", "-48.0829, -75.7913, -52.8987, 0.88", "-49.2215, -76.7354, -53.5414, 0.88", "-49.605, -77.0412, -53.738, 0.88", "-50.3437, -77.5712, -54.0625, 0.88", "-51.3252, -78.1867, -54.3924, 1.03", "-52.4074, -78.8164, -54.7145, 0.88", "-53.1969, -79.2649, -54.9105, 0.88", "-53.9559, -79.7192, -55.0841, 0.88", "-54.6502, -80.1228, -55.2632, 0.59", "-55.2747, -80.4716, -55.5091, 0.59", "-56.3727, -81.1252, -56.0473, 0.66", "-56.9814, -81.5193, -56.4334, 1.18", "-57.7162, -82.0327, -56.9687, 1.18", "-58.5899, -82.6735, -57.6471, 1.18", "-60.391, -84.0114, -59.0526, 1.18", "-60.7922, -84.2926, -59.3677, 1.18", "-61.7391, -84.9004, -60.0902, 0.52", "-62.3505, -85.2649, -60.5626, 0.59", "-62.7945, -85.5388, -60.9001, 0.66", "-63.286, -85.8797, -61.2371, 0.66", "-64.2568, -86.6571, -61.8871, 0.74", "-64.6638, -87.0056, -62.1902, 0.81", "-64.8022, -87.134, -62.3035, 0.81", "-65.4518, -87.7294, -62.8481, 0.37", "-65.8596, -88.1132, -63.2042, 0.59", "-66.9526, -89.1918, -64.2055, 1.18", "-67.2355, -89.4791, -64.4554, 1.18", "-67.7771, -90.0338, -64.9313, 0.29", "-68.3407, -90.6261, -65.4168, 0.29", "-68.9704, -91.2781, -65.9149, 0.44", "-69.8456, -92.1952, -66.5204, 0.88", "-70.2032, -92.5916, -66.7393, 1.4", "-70.8788, -93.4109, -67.1676, 1.47", "-71.354, -94.0451, -67.4795, 0.74", "-71.8556, -94.7586, -67.8251, 1.18", "-72.3992, -95.4674, -68.1577, 1.4", "-73.2394, -96.4362, -68.6028, 0.74", "-73.5828, -96.8029, -68.7729, 0.74", "-74.2186, -97.4509, -69.0527, 0.74", "-74.7813, -97.9868, -69.2869, 0.74", "-75.4933, -98.6308, -69.5671, 0.52", "-76.3369, -99.3624, -69.8674, 0.37", "-77.0029, -99.9191, -70.0933, 0.37", "-77.6994, -100.509, -70.3903, 0.37", "-78.3727, -101.102, -70.7174, 0.37", "-79.1023, -101.774, -71.1171, 0.37", "-79.9104, -102.563, -71.6264, 0.37", "-80.6995, -103.331, -72.199, 0.96", "-81.5494, -104.125, -72.8411, 0.52", "-81.9362, -104.486, -73.1328, 0.52", "-82.354, -104.884, -73.4192, 0.52", "-83.2235, -105.657, -73.9104, 0.52", "-84.1057, -106.369, -74.2999, 0.52", "-84.8087, -106.901, -74.5208, 0.52", "-85.4356, -107.365, -74.6694, 0.52", "-86.2462, -107.964, -74.8587, 0.29", "-87.1595, -108.627, -75.0507, 0.29", "-87.4742, -108.853, -75.1027, 0.59", "-88.0109, -109.235, -75.1842, 0.74", "-88.9302, -109.911, -75.2637, 0.74", "-89.8908, -110.633, -75.3957, 1.18", "-90.3728, -111.003, -75.5198, 1.55", "-90.8811, -111.393, -75.692, 1.55", "-91.6565, -111.985, -75.9865, 0.37", "-93.1124, -113.106, -76.6217, 0.37", "-94.6325, -114.338, -77.3201, 0.37", "-95.5169, -115.099, -77.7583, 0.37", "-96.1075, -115.614, -78.0702, 0.37", "-96.6436, -116.085, -78.3544, 0.37", "-97.1914, -116.582, -78.6382, 0.37", "-97.9015, -117.228, -79.045, 0.37", "-98.4256, -117.718, -79.2832, 0.37", "-99.0744, -118.349, -79.5718, 0.88", "-99.6134, -118.885, -79.8506, 0.88", "-100.046, -119.319, -80.0843, 0.44", "-100.93, -120.222, -80.611, 0.59", "-101.66, -121.003, -81.0938, 0.29", "-102.119, -121.509, -81.4107, 0.29", "-102.817, -122.29, -81.9363, 1.18", "-103.386, -122.922, -82.3824, 1.33", "-104.175, -123.8, -82.9824, 0.44", "-104.46, -124.114, -83.1823, 0.44", "-105.439, -125.209, -83.9428, 0.44", "-106.3, -126.113, -84.6221, 0.81", "-106.585, -126.391, -84.8371, 1.4", "-107.17, -126.925, -85.2323, 1.62", "-107.423, -127.134, -85.3725, 1.62", "-108.664, -128.102, -85.9384, 0.37", "-109.314, -128.585, -86.1613, 0.37", "-109.881, -128.979, -86.3213, 0.37", "-111.055, -129.72, -86.7396, 0.37", "-111.629, -130.046, -86.9498, 0.37", "-113.386, -130.98, -87.58, 0.37", "-114.221, -131.41, -87.8563, 0.37", "-115.119, -131.869, -88.1704, 0.66", "-116.97, -132.771, -88.863, 0.66", "-118.026, -133.233, -89.2832, 0.66", "-118.29, -133.337, -89.387, 0.66", "-119.352, -133.658, -89.7907, 0.29", "-119.932, -133.827, -89.9991, 0.29", "-120.819, -134.108, -90.2955, 0.44", "-121.735, -134.473, -90.5822, 0.44", "-122.356, -134.744, -90.8747, 0.44", "-122.829, -134.956, -91.1335, 0.66", "-123.729, -135.38, -91.7528, 0.81", "-124.64, -135.878, -92.4467, 0.29", "-125.397, -136.334, -93.0501, 0.29", "-126.731, -137.218, -94.1823, 0.52", "-127.291, -137.622, -94.6814, 0.81", "-128.302, -138.331, -95.5446, 0.81", "-129.027, -138.817, -96.1242, 0.81", "-129.512, -139.138, -96.4666, 0.81", "-130.15, -139.567, -96.8508, 0.29", "-130.427, -139.795, -96.9758, 0.29", "-131.156, -140.415, -97.3874, 0.29", "-131.567, -140.711, -97.6164, 0.29", "-132.024, -140.973, -97.9364, 0.29", "-132.298, -141.1, -98.136, 0.44", "-132.96, -141.365, -98.6016, 0.59", "-134.543, -141.931, -99.806, 0.66", "-135.314, -142.224, -100.437, 0.81", "-136.228, -142.584, -101.184, 0.81", "-136.746, -142.784, -101.571, 0.81", "-137.353, -143.031, -101.975, 0.81", "-138.271, -143.463, -102.484, 0.81", "-138.879, -143.819, -102.733, 0.81", "-139.339, -144.121, -102.919, 0.81", "-140.339, -144.804, -103.509, 0.37", "-140.694, -145.057, -103.779, 0.74", "-141.344, -145.507, -104.325, 0.29", "-141.899, -145.91, -104.785, 0.29", "-142.482, -146.335, -105.349, 0.66", "-144.267, -147.7, -107.232, 0.66", "-144.489, -147.874, -107.481, 0.66", "-144.962, -148.232, -107.988, 0.52", "-145.915, -148.927, -108.969, 0.52", "-147.18, -149.848, -110.155, 0.59", "-147.646, -150.199, -110.519, 0.81", "-148.595, -150.875, -111.073, 0.81", "-149.208, -151.273, -111.432, 0.81", "-150.055, -151.789, -111.918, 0.44", "-150.789, -152.174, -112.195, 0.44", "-151.525, -152.53, -112.25, 0.44", "-152.406, -152.922, -112.142, 0.44", "-153.836, -153.496, -111.74, 0.74", "-154.198, -153.625, -111.63, 0.74", "-157.644, -154.666, -110.573, 0.74", "-158.195, -154.809, -110.46, 0.74", "-159.811, -155.226, -110.345, 0.74", "-161.011, -155.605, -110.474, 0.59", "-162.166, -156.037, -110.785, 0.52", "-163.057, -156.434, -111.199, 0.52", "-164.347, -157.12, -112.12, 1.25", "-165.247, -157.645, -112.875, 0.66", "-166.269, -158.294, -113.906, 0.66", "-166.744, -158.63, -114.426, 1.03", "-167.695, -159.343, -115.518, 1.03", "-169.067, -160.469, -117.113, 1.03", "-170.098, -161.334, -118.203, 0.66", "-171.657, -162.666, -119.749, 0.74", "-172.289, -163.221, -120.347, 0.88", "-172.949, -163.867, -120.956, 0.52", "-173.686, -164.683, -121.582, 0.52", "-174.825, -166.075, -122.385, 0.52", "-175.617, -167.155, -122.85, 0.74", "-176.102, -167.855, -123.08, 0.74", "-177.078, -169.319, -123.523, 0.74", "-177.395, -169.817, -123.652, 1.03", "-177.999, -170.784, -123.889, 0.81", "-178.92, -172.36, -124.216, 0.81", "-179.767, -173.821, -124.449, 0.81", "-180.259, -174.677, -124.596, 0.52", "-180.545, -175.18, -124.689, 0.52", "-180.878, -175.83, -124.819, 0.52", "-181.202, -176.545, -124.99, 0.52", "-181.557, -177.314, -125.202, 0.52", "-182.256, -178.672, -125.595, 0.59", "-182.568, -179.217, -125.76, 0.88", "-183.291, -180.517, -126.135, 0.52", "-183.854, -181.747, -126.424, 0.52", "-184.075, -182.336, -126.54, 0.81", "-184.275, -182.92, -126.631, 1.11", "-184.67, -184.236, -126.772, 0.74", "-185.036, -185.494, -126.888, 0.74", "-185.723, -187.931, -127.225, 0.74", "-186.099, -189.249, -127.434, 0.74", "-186.466, -190.395, -127.649, 0.88", "-186.819, -191.355, -127.865, 0.88", "-187.311, -192.46, -128.157, 0.74", "-188.488, -194.535, -128.779, 0.37", "-189.242, -195.643, -129.199, 0.37", "-189.971, -196.723, -129.634, 0.37", "-190.233, -197.142, -129.815, 0.37", "-190.621, -197.776, -130.096, 0.37", "-191.039, -198.521, -130.408, 0.37", "-191.709, -199.796, -130.891, 0.37", "-192.258, -201.01, -131.361, 0.44", "-192.659, -201.947, -131.696, 0.44", "-192.902, -202.523, -131.874, 1.25", "-193.169, -203.13, -132.042, 1.25", "-193.659, -204.209, -132.286, 0.44", "-194.363, -205.58, -132.501, 0.44", "-195.011, -206.718, -132.655, 0.44", "-195.473, -207.515, -132.729, 0.44", "-195.882, -208.224, -132.776, 0.81", "-196.069, -208.545, -132.785, 1.11", "-196.492, -209.289, -132.77, 0.66", "-196.838, -209.943, -132.753, 0.44", "-197.108, -210.547, -132.737, 0.44", "-197.401, -211.311, -132.716, 0.44", "-197.711, -212.132, -132.699, 0.44", "-197.809, -212.375, -132.696, 0.88", "-198.018, -212.894, -132.691, 0.88", "-198.241, -213.393, -132.688, 0.37", "-198.743, -214.423, -132.688, 0.37", "-199.758, -216.366, -132.688, 0.37", "-200.454, -217.642, -132.688, 0.37", "-200.824, -218.304, -132.688, 0.37", "-201.616, -219.62, -132.688, 0.37", "-202.165, -220.494, -132.688, 0.96", "-202.479, -220.991, -132.688, 1.4", "-202.892, -221.694, -132.688, 0.37", "-203.394, -222.512, -132.747, 0.37", "-203.991, -223.481, -132.87, 0.37", "-204.671, -224.612, -133.062, 0.37", "-205.471, -225.915, -133.321, 0.59", "-205.768, -226.391, -133.424, 0.74", "-206.895, -228.178, -133.841, 0.44", "-207.326, -228.878, -134.024, 0.44", "-207.955, -229.897, -134.324, 0.44", "-208.277, -230.388, -134.49, 0.96", "-208.552, -230.78, -134.621, 1.18", "-208.89, -231.25, -134.769, 1.18", "-209.855, -232.548, -135.119, 0.44", "-211.836, -235.022, -135.786, 0.44", "-212.45, -235.772, -135.982, 0.44", "-213.736, -237.346, -136.357, 0.44", "-213.946, -237.595, -136.408, 0.44", "-215.206, -239.059, -136.636, 0.44", "-215.881, -239.81, -136.716, 0.44", "-216.433, -240.419, -136.735, 0.59", "-217.166, -241.258, -136.734, 0.37", "-218.322, -242.683, -136.72, 0.37", "-219.209, -243.853, -136.7, 0.37", "-220.923, -246.376, -136.645, 0.37", "-221.81, -247.785, -136.61, 0.66", "-222.339, -248.692, -136.585, 0.66", "-222.86, -249.714, -136.555, 0.81", "-223.392, -251.008, -136.514, 0.81", "-223.847, -252.415, -136.565, 0.81", "-224.057, -253.268, -136.68, 0.59", "-224.454, -254.793, -137.056, 0.59", "-224.709, -255.639, -137.32, 0.59", "-224.94, -256.284, -137.559, 0.59", "-225.869, -258.43, -138.48, 0.59", "-226.48, -259.547, -139.024, 0.59", "-227.147, -260.493, -139.517, 0.59", "-227.843, -261.221, -139.902, 0.59", "-228.527, -261.808, -140.173, 0.59", "-229.125, -262.227, -140.314, 0.59", "-229.68, -262.53, -140.342, 0.59", "-230.527, -262.92, -140.342, 0.44", "-231.608, -263.345, -140.342, 0.44", "-232.187, -263.568, -140.3, 0.74", "-232.747, -263.798, -140.225, 0.29", "-233.673, -264.203, -140.069, 0.29", "-234.238, -264.466, -139.937, 0.59", "-234.919, -264.816, -139.748, 0.96", "-236.201, -265.55, -139.359, 0.44", "-237.574, -266.402, -138.931, 0.44", "-239.121, -267.449, -138.452, 0.44", "-240.118, -268.158, -138.168, 0.44", "-240.888, -268.717, -137.991, 0.44", "-241.576, -269.217, -137.842, 0.88", "-242.079, -269.586, -137.768, 0.88", "-242.9, -270.236, -137.663, 0.44", "-244.071, -271.195, -137.557, 0.44", "-245.685, -272.532, -137.453, 0.44", "-246.504, -273.216, -137.392, 0.44", "-247.447, -274.01, -137.316, 0.44", "-248.004, -274.477, -137.215, 0.59", "-248.767, -275.154, -137.003, 0.74", "-249.489, -275.761, -136.749, 0.74", "-250.212, -276.279, -136.467, 0.44", "-251.258, -276.862, -135.842, 0.44", "-252.771, -277.519, -134.347, 0.44", "-253.299, -277.717, -133.693, 0.44", "-253.874, -277.903, -132.845, 0.44", "-254.338, -278.037, -132.107, 0.66", "-256.149, -278.513, -128.907, 0.66", "-257.19, -278.788, -126.821, 0.66", "-257.461, -278.864, -126.236, 0.66", "-258.097, -279.041, -124.757, 0.88", "-258.661, -279.286, -123.249, 0.88" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-33.5822, -67.0977, -46.7392, 0.59", "-34.2048, -66.9489, -47.3513, 0.59", "-34.7165, -66.7988, -47.9842, 0.59", "-35.8471, -66.5045, -49.3857, 0.59", "-36.2714, -66.4147, -49.9175, 0.59", "-36.9553, -66.2627, -50.7071, 0.59", "-37.2745, -66.1923, -51.0508, 0.59", "-38.3144, -66.0265, -52.2329, 0.59", "-38.7706, -65.9659, -52.7431, 0.59", "-39.5006, -65.8759, -53.5231, 0.59", "-40.2276, -65.8185, -54.2924, 0.59", "-40.4806, -65.8147, -54.5492, 0.59", "-41.3834, -65.9107, -55.4982, 0.59", "-41.9314, -66.004, -56.0467, 0.59", "-42.6379, -66.1371, -56.7777, 0.59", "-43.0817, -66.2452, -57.2531, 0.59", "-43.6946, -66.4449, -57.9613, 0.59", "-44.5787, -66.7501, -58.9773, 0.59", "-45.0062, -66.9058, -59.4178, 0.59", "-45.3534, -67.0562, -59.7657, 0.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "20.783, -102.386, -59.5435, 0.81", "21.9466, -103.526, -61.1106, 0.81", "22.5015, -103.995, -61.6409, 0.37", "22.9395, -104.325, -61.9337, 0.37", "23.4768, -104.716, -62.2284, 1.11", "25.4488, -106.113, -63.1619, 1.55", "26.268, -106.665, -63.4945, 1.18", "27.6739, -107.489, -63.8247, 0.37", "29.1492, -108.286, -64.0616, 0.37", "29.5665, -108.493, -64.111, 0.37", "29.9726, -108.689, -64.134, 1.03", "30.9293, -109.08, -64.1175, 1.47", "32.1381, -109.487, -64.1919, 1.84", "32.4367, -109.567, -64.2303, 1.99", "33.5194, -109.799, -64.3969, 0.52", "35.6691, -110.201, -64.7424, 0.52", "37.3981, -110.479, -65.0651, 0.52", "38.838, -110.667, -65.3538, 0.66", "39.7371, -110.751, -65.5364, 0.88", "40.8385, -110.827, -65.7588, 1.18", "42.2029, -110.887, -66.0534, 1.92", "43.6207, -110.924, -66.4305, 0.59", "44.6382, -110.971, -66.7255, 0.44", "45.5852, -111.004, -67.0001, 0.44", "46.6973, -111.019, -67.3515, 0.44", "47.7445, -111.019, -67.6972, 0.44", "49.0392, -111.023, -68.114, 0.96", "49.5485, -111.037, -68.2614, 1.03", "50.682, -111.102, -68.5703, 0.37", "51.7997, -111.198, -68.8291, 0.37", "52.5247, -111.271, -68.9823, 1.03", "53.5147, -111.382, -69.1568, 1.03", "54.5147, -111.501, -69.3525, 0.37", "55.082, -111.58, -69.4871, 0.37", "55.9673, -111.721, -69.742, 0.37", "57.1526, -111.914, -70.1133, 0.88", "58.1728, -112.058, -70.48, 0.52", "59.5495, -112.245, -71.0146, 0.52", "60.383, -112.371, -71.3431, 1.11", "61.3028, -112.53, -71.6901, 0.44", "62.8035, -112.807, -72.215, 0.44", "63.9923, -113.024, -72.5742, 0.44", "64.4142, -113.097, -72.6924, 0.44", "65.2766, -113.227, -72.888, 0.44", "66.38, -113.345, -73.1126, 0.44", "66.9789, -113.395, -73.2067, 0.44", "67.9009, -113.441, -73.3494, 0.44", "68.5791, -113.477, -73.4553, 0.44", "69.2481, -113.498, -73.6181, 0.96", "69.7156, -113.505, -73.7604, 1.33", "70.2805, -113.536, -73.9584, 1.33", "71.5473, -113.706, -74.4217, 0.52", "72.5954, -113.927, -74.8, 0.29", "73.8759, -114.238, -75.3807, 0.29", "74.2946, -114.35, -75.5931, 0.29", "74.8445, -114.505, -75.8746, 0.59", "75.8793, -114.801, -76.3761, 0.59", "76.7834, -115.085, -76.7639, 0.59", "78.5919, -115.719, -77.5238, 1.03", "79.129, -115.919, -77.7425, 1.03", "79.7957, -116.152, -78.0141, 0.37", "80.7596, -116.444, -78.3918, 0.37", "81.4166, -116.607, -78.6595, 0.37", "82.5113, -116.858, -79.0994, 0.37", "82.9522, -116.963, -79.2454, 0.37", "83.5165, -117.08, -79.4798, 0.37", "83.8747, -117.145, -79.6458, 0.74", "85.0908, -117.317, -80.2476, 0.29", "86.0777, -117.44, -80.7511, 0.29", "87.1332, -117.599, -81.2513, 0.29", "88.1889, -117.793, -81.7312, 0.74", "88.7585, -117.915, -81.9803, 0.96", "89.8288, -118.181, -82.4064, 1.11", "90.8288, -118.442, -82.7483, 0.44", "92.2072, -118.782, -83.1737, 0.44", "92.9887, -118.976, -83.3943, 0.44", "94.2979, -119.305, -83.6954, 0.44", "95.218, -119.531, -83.8826, 0.44", "95.947, -119.697, -83.9988, 0.44", "96.5235, -119.803, -84.0727, 0.44", "97.9531, -119.989, -84.2414, 0.44", "98.8719, -120.096, -84.3259, 0.59", "99.2656, -120.135, -84.3484, 0.59", "99.8873, -120.202, -84.3759, 0.59", "100.937, -120.346, -84.419, 0.59", "101.797, -120.476, -84.4474, 0.59", "102.696, -120.605, -84.4644, 0.66", "103.356, -120.699, -84.4603, 0.81", "104.502, -120.885, -84.4285, 0.81", "105.466, -121.085, -84.3835, 0.37", "106.106, -121.252, -84.3433, 0.37", "106.636, -121.416, -84.3216, 0.37", "107.551, -121.733, -84.3029, 0.37", "108.382, -122.044, -84.3374, 0.37", "109.466, -122.48, -84.4353, 0.88", "110.162, -122.764, -84.5236, 1.18", "111.64, -123.355, -84.7686, 0.37", "112.584, -123.72, -84.9568, 0.37", "113.709, -124.1, -85.2711, 0.66", "114.144, -124.228, -85.4062, 0.44", "114.809, -124.398, -85.6303, 0.44", "115.238, -124.497, -85.7731, 0.44", "116.044, -124.67, -86.018, 0.44", "117.504, -124.987, -86.4086, 1.11", "118.349, -125.195, -86.639, 1.4", "119.16, -125.414, -86.8807, 0.81", "119.859, -125.62, -87.1185, 0.59", "120.643, -125.893, -87.4326, 0.59", "121.545, -126.282, -87.8646, 0.59", "122.535, -126.825, -88.6075, 0.59", "122.922, -127.083, -88.999, 0.59", "123.477, -127.558, -89.6661, 0.74", "124.162, -128.31, -90.677, 0.88", "124.574, -128.882, -91.3867, 1.03", "125.659, -130.768, -93.4437, 0.81", "125.945, -131.353, -93.9802, 0.81", "126.439, -132.438, -94.8205, 0.81", "126.925, -133.485, -95.5268, 1.4", "127.213, -134.055, -95.8609, 1.77", "127.747, -135.018, -96.3208, 1.25", "128.218, -135.751, -96.6119, 0.96", "128.925, -136.656, -97.1487, 0.66", "129.865, -137.612, -97.9861, 0.22", "130.039, -137.762, -98.1603, 0.22", "130.378, -138.038, -98.5327, 0.96", "131.261, -138.756, -99.5196, 1.55", "132.574, -139.856, -100.983, 1.84", "133.631, -140.789, -102.052, 0.88", "134.398, -141.483, -102.687, 0.88", "135.198, -142.203, -103.254, 0.88", "136.161, -143.06, -103.787, 0.37", "136.599, -143.439, -103.937, 0.37", "138.04, -144.595, -104.043, 0.37", "138.892, -145.193, -103.978, 0.37", "139.526, -145.583, -103.892, 0.37", "140.499, -146.111, -103.753, 0.66", "141.44, -146.581, -103.618, 0.66", "143.266, -147.479, -103.333, 0.37", "144.608, -148.125, -103.107, 0.37", "145.865, -148.744, -102.92, 0.37", "146.506, -149.072, -102.84, 0.59", "147.088, -149.384, -102.799, 0.81", "147.808, -149.792, -102.824, 1.11", "148.45, -150.178, -102.926, 0.59", "149.546, -150.874, -103.138, 0.59", "150.443, -151.477, -103.327, 0.59", "151.233, -152.019, -103.49, 0.59", "152.233, -152.736, -103.682, 0.52", "153.421, -153.616, -103.881, 0.52", "154.113, -154.145, -103.979, 0.52", "155.55, -155.238, -104.207, 0.52", "156.582, -156.032, -104.394, 0.52", "157.616, -156.844, -104.589, 0.52", "158.893, -157.914, -104.93, 0.81", "159.268, -158.25, -105.067, 0.96", "160.412, -159.341, -105.578, 0.59", "160.981, -159.92, -105.86, 0.81", "161.678, -160.645, -106.204, 0.81", "163.379, -162.371, -106.973, 0.52", "164.351, -163.331, -107.332, 0.52", "164.794, -163.747, -107.452, 0.52", "166.22, -165.0, -107.676, 0.52", "167.428, -165.974, -107.792, 0.52", "168.417, -166.743, -107.816, 0.52", "169.279, -167.381, -107.76, 0.44", "170.059, -167.967, -107.708, 0.44", "171.086, -168.803, -107.64, 0.74", "171.42, -169.117, -107.609, 0.74", "172.402, -170.236, -107.496, 0.74", "172.791, -170.758, -107.446, 0.74", "173.719, -172.148, -107.316, 0.74", "174.301, -173.076, -107.215, 0.74", "174.858, -173.97, -107.107, 0.74", "175.433, -174.805, -106.997, 0.74", "175.984, -175.504, -106.898, 0.44", "176.409, -175.967, -106.834, 0.52", "177.035, -176.495, -106.767, 0.52", "177.467, -176.784, -106.746, 0.29", "178.352, -177.294, -106.746, 0.29", "178.95, -177.601, -106.754, 0.37", "180.074, -178.124, -106.784, 0.37", "180.866, -178.476, -106.767, 0.66", "181.832, -178.913, -106.661, 0.37", "182.616, -179.278, -106.521, 0.37", "183.029, -179.483, -106.41, 0.52", "183.563, -179.77, -106.201, 0.66", "184.859, -180.523, -105.58, 0.29", "185.956, -181.21, -105.003, 0.29", "186.521, -181.576, -104.7, 0.29", "187.688, -182.386, -104.09, 0.29", "188.581, -183.083, -103.552, 0.37", "189.329, -183.741, -103.062, 0.37", "189.779, -184.192, -102.718, 0.37", "190.371, -184.871, -102.204, 0.59", "190.716, -185.306, -101.855, 0.59", "192.036, -187.123, -100.398, 0.59", "192.306, -187.534, -100.072, 0.59", "193.012, -188.726, -99.1369, 0.37", "193.825, -190.099, -98.0302, 0.37", "194.563, -191.383, -96.994, 0.37", "194.825, -191.833, -96.6421, 0.37", "195.681, -193.255, -95.6479, 0.37", "196.443, -194.468, -94.7871, 0.37", "197.235, -195.712, -93.9449, 0.37" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "20.783, -102.386, -59.5435, 0.88", "19.6154, -103.508, -60.2925, 0.88", "19.0859, -104.022, -60.5858, 0.74", "18.3176, -104.786, -60.9831, 0.74", "17.0674, -106.048, -61.5795, 0.74", "15.8233, -107.332, -62.1593, 0.52", "14.4079, -108.821, -62.8017, 0.52", "13.3057, -110.075, -63.3569, 0.52", "12.4254, -111.142, -63.8231, 0.37", "11.7525, -112.049, -64.2156, 0.37", "11.1512, -112.95, -64.5703, 1.47", "10.8334, -113.492, -64.7744, 1.47", "9.98379, -115.186, -65.4801, 0.37", "9.59615, -116.069, -65.8507, 0.37", "8.94938, -117.76, -66.5805, 0.37", "8.66788, -118.567, -66.9312, 0.37", "8.47245, -119.113, -67.1569, 1.11", "8.1705, -119.907, -67.4719, 0.44", "7.80762, -120.751, -67.759, 0.44", "7.0761, -122.248, -68.2448, 0.44", "6.81802, -122.681, -68.3648, 0.44", "6.34306, -123.412, -68.5521, 0.44", "5.88253, -124.115, -68.7058, 0.96", "5.24842, -125.017, -68.8744, 0.96", "4.59403, -125.876, -69.0039, 0.37", "3.85755, -126.758, -69.1987, 0.37", "3.37357, -127.312, -69.3662, 0.37", "2.85522, -127.871, -69.5686, 1.03", "1.49803, -129.18, -70.2345, 0.37", "0.623248, -129.95, -70.7289, 0.37", "-1.06542, -131.401, -71.8648, 0.74", "-1.79026, -132.021, -72.3798, 1.25", "-2.41105, -132.564, -72.84, 0.81", "-3.74986, -133.81, -73.9307, 0.81", "-4.08656, -134.161, -74.2287, 0.81", "-5.16114, -135.376, -75.1502, 0.15", "-6.26949, -136.743, -76.0098, 0.15", "-7.22007, -137.973, -76.7254, 0.29", "-8.05087, -139.074, -77.2858, 1.62", "-8.7078, -139.915, -77.633, 0.52", "-9.82546, -141.239, -78.133, 0.44", "-10.342, -141.808, -78.3203, 0.44", "-10.7003, -142.186, -78.4375, 0.44", "-11.8902, -143.324, -78.6844, 0.44", "-12.7115, -144.043, -78.7702, 0.59", "-13.239, -144.473, -78.8248, 0.59" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.82764, -48.811, -10.9289, 0.74", "7.30185, -51.1748, -10.6939, 0.74", "7.52733, -52.2134, -10.6211, 0.74", "7.76762, -53.0591, -10.5775, 0.88", "8.27218, -54.5296, -10.5296, 0.88", "8.88336, -56.1244, -10.4957, 1.03", "9.53443, -57.6775, -10.4364, 1.03", "10.0214, -58.8717, -10.4251, 1.03", "10.7944, -60.7659, -10.2835, 0.81", "11.3216, -62.0035, -10.0533, 0.81", "11.724, -62.9359, -9.74934, 1.03", "12.3188, -64.3586, -9.10428, 1.18", "12.6811, -65.2994, -8.5537, 1.18", "13.1937, -66.9296, -7.47009, 1.18", "13.5752, -68.5399, -6.25998, 1.03", "13.7888, -69.6315, -5.43808, 0.88", "13.9717, -70.618, -4.72355, 0.88", "14.1568, -71.5653, -4.07102, 0.88", "14.3574, -72.395, -3.5456, 0.88", "14.7543, -73.9049, -2.7674, 0.96", "15.0769, -75.1949, -2.19463, 0.96", "15.4219, -76.7395, -1.6009, 0.96", "15.7172, -78.3519, -1.07348, 0.96", "15.9046, -79.3699, -0.830621, 0.96", "16.1566, -80.6202, -0.613678, 0.96", "16.4186, -81.6302, -0.496222, 0.96", "16.8647, -83.0027, -0.22531, 0.96", "17.2319, -83.9546, 0.0959727, 0.96", "17.9525, -85.751, 0.910475, 0.96", "18.3014, -86.6915, 1.437, 0.96", "18.8624, -88.3511, 2.50324, 0.96", "19.718, -90.938, 4.309, 0.96", "20.3673, -92.927, 5.78044, 0.81", "20.6358, -93.8197, 6.46852, 0.66", "20.8703, -94.8594, 7.28665, 0.66", "20.9753, -95.6265, 7.82568, 0.66", "20.9808, -96.2241, 8.13042, 0.66", "20.9631, -97.1475, 8.35273, 0.74", "21.0015, -98.221, 8.52423, 1.03", "21.0559, -98.6074, 8.59902, 1.03", "21.2654, -99.5238, 8.78807, 0.81", "21.4455, -100.235, 8.9376, 0.81", "21.6554, -101.122, 9.12483, 0.59", "21.9291, -102.356, 9.37369, 0.59", "22.0755, -103.019, 9.48924, 0.59", "22.353, -104.04, 9.68101, 0.88", "22.4066, -104.188, 9.71322, 1.03" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.82764, -48.811, -10.9289, 2.28", "7.2644, -51.47, -11.4923, 2.28", "7.51877, -53.0186, -11.8205, 2.14", "7.8181, -54.8409, -12.2067, 2.14", "8.13375, -56.7625, -12.6139, 2.14", "8.51052, -59.0563, -13.0999, 2.36", "8.63591, -59.8196, -13.2617, 2.87" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-19.6999, 39.0195, -0.467042, 0.59", "-20.847, 39.3922, -1.40308, 0.59", "-21.3395, 39.574, -1.7557, 0.59", "-22.3488, 39.9372, -2.63975, 0.37", "-22.774, 40.0928, -3.02429, 0.37", "-23.7887, 40.4782, -3.9287, 0.59", "-24.374, 40.6998, -4.45419, 0.59", "-25.229, 41.0876, -5.21633, 0.59", "-26.8885, 41.8328, -6.62264, 0.59", "-27.5405, 42.1006, -7.11547, 0.74", "-27.9472, 42.2503, -7.39188, 0.74", "-29.0593, 42.6143, -8.0238, 0.74", "-29.5745, 42.7808, -8.28555, 0.74", "-30.5526, 43.1466, -8.66422, 0.29", "-31.1962, 43.4122, -8.82535, 0.52", "-31.6178, 43.5989, -8.92298, 1.03", "-32.0504, 43.8027, -9.01287, 1.03", "-33.3999, 44.4603, -9.2333, 0.29", "-33.8476, 44.7008, -9.33287, 0.66", "-34.4613, 45.0785, -9.4984, 0.52", "-35.1797, 45.553, -9.70366, 0.52", "-35.6663, 45.8905, -9.88202, 0.22", "-36.2307, 46.2882, -10.1198, 0.22", "-37.0715, 46.8615, -10.4962, 0.22", "-37.638, 47.2202, -10.7913, 0.22", "-38.0522, 47.4793, -11.0312, 0.22", "-39.1634, 48.1841, -11.7164, 0.52", "-39.4901, 48.4043, -11.9255, 1.18", "-39.8733, 48.672, -12.1656, 1.18", "-40.8306, 49.2862, -12.7293, 0.37", "-41.0644, 49.4316, -12.8676, 0.37", "-41.7544, 49.8391, -13.2406, 0.37", "-42.5085, 50.235, -13.5599, 0.37", "-42.8314, 50.3743, -13.6814, 0.88", "-43.49, 50.6044, -13.8779, 0.59", "-43.9154, 50.7189, -13.9745, 0.59", "-44.3631, 50.8199, -14.1182, 0.29", "-44.9948, 50.9312, -14.3818, 0.29", "-45.602, 51.0463, -14.6634, 0.29", "-46.2592, 51.2283, -15.0038, 0.29", "-46.9246, 51.4874, -15.4134, 0.59", "-48.1045, 52.0498, -16.258, 0.81", "-48.6737, 52.3532, -16.7061, 0.22", "-49.1023, 52.6024, -17.0896, 0.22", "-49.6075, 52.8954, -17.5442, 0.22", "-50.2827, 53.2955, -18.1813, 0.29", "-50.4444, 53.3883, -18.3626, 0.52", "-50.8113, 53.5647, -18.7717, 0.52", "-51.2932, 53.7513, -19.3321, 0.52", "-51.9154, 53.9426, -20.0437, 0.52", "-52.6334, 54.1103, -20.8168, 0.52", "-54.1754, 54.4742, -22.4503, 0.52", "-54.7123, 54.6006, -22.9943, 1.18", "-55.4873, 54.7709, -23.6873, 1.92", "-55.9753, 54.8595, -24.0441, 1.92", "-57.0018, 55.0039, -24.732, 0.37", "-57.6173, 55.0593, -25.0524, 0.22", "-58.4314, 55.1218, -25.4553, 0.22", "-59.5725, 55.2145, -26.0733, 0.22", "-60.3212, 55.2797, -26.4715, 0.22", "-61.2622, 55.3626, -26.9648, 0.81", "-62.2083, 55.4523, -27.4153, 0.81", "-63.9684, 55.6292, -28.1765, 0.66", "-64.8742, 55.7368, -28.5258, 0.66", "-65.4824, 55.8156, -28.7081, 0.37", "-66.2109, 55.9211, -28.8778, 0.37", "-67.1538, 56.0633, -29.0133, 0.29", "-67.7548, 56.147, -29.0682, 0.44", "-68.6405, 56.2622, -29.0854, 0.44", "-69.5829, 56.3747, -29.1304, 0.44", "-70.6716, 56.5004, -29.2093, 1.25", "-71.2675, 56.5773, -29.2611, 1.25", "-71.9336, 56.666, -29.3591, 0.29", "-73.0603, 56.8365, -29.6608, 0.29", "-73.6305, 56.9361, -29.8687, 1.4", "-74.3056, 57.0498, -30.1429, 1.99", "-74.719, 57.1254, -30.3099, 1.99", "-76.1799, 57.4267, -31.0037, 0.44", "-77.6081, 57.7563, -31.7446, 0.59", "-77.6081, 57.7563, -31.7446, 0.59", "-78.4051, 57.9277, -32.1507, 0.29", "-79.4783, 58.1729, -32.5976, 0.29", "-80.5433, 58.4175, -32.9022, 0.74", "-81.2119, 58.5689, -33.0015, 1.03", "-81.6901, 58.6596, -33.03, 1.03", "-82.4112, 58.7726, -33.0621, 0.22", "-83.95, 58.9655, -33.1623, 0.22", "-84.8209, 59.0774, -33.2247, 0.22", "-85.5598, 59.173, -33.2744, 0.29", "-86.6009, 59.2936, -33.3689, 1.84", "-87.6244, 59.3804, -33.5284, 1.84", "-88.9433, 59.447, -33.8073, 0.29", "-90.7942, 59.4514, -34.2794, 0.29", "-91.4252, 59.4411, -34.4645, 0.29", "-92.1283, 59.4246, -34.7048, 1.11", "-93.5954, 59.384, -35.2503, 0.29", "-94.4374, 59.3591, -35.615, 0.29", "-95.2201, 59.3436, -35.974, 0.37", "-95.8637, 59.3565, -36.3089, 0.37", "-96.7219, 59.4554, -36.7515, 0.37", "-98.3658, 59.7928, -37.5958, 0.37", "-99.6637, 60.1461, -38.2487, 1.69", "-100.373, 60.3567, -38.6064, 1.69", "-101.67, 60.7776, -39.2544, 0.37", "-102.785, 61.1586, -39.797, 0.37", "-104.033, 61.5837, -40.4012, 0.37", "-104.89, 61.8811, -40.8232, 0.37", "-105.611, 62.1151, -41.163, 0.37", "-106.38, 62.3402, -41.5295, 0.37", "-106.907, 62.4837, -41.79, 1.03", "-107.973, 62.7621, -42.3672, 0.44", "-109.33, 63.1032, -43.1495, 0.44", "-110.011, 63.2672, -43.5537, 0.59", "-110.528, 63.3984, -43.8946, 0.59", "-111.471, 63.628, -44.5333, 1.03", "-112.325, 63.8209, -45.1739, 1.03", "-113.056, 63.9694, -45.7717, 0.37", "-113.721, 64.0678, -46.3433, 0.37", "-114.843, 64.1866, -47.3052, 0.37", "-115.267, 64.2189, -47.6862, 0.37", "-116.412, 64.3033, -48.6918, 1.33", "-117.344, 64.4042, -49.5319, 0.37", "-117.777, 64.4803, -49.9335, 0.37", "-118.012, 64.5407, -50.149, 0.37", "-118.886, 64.8088, -50.9221, 0.37", "-119.472, 65.0422, -51.427, 0.37", "-120.321, 65.4399, -52.1851, 0.37", "-121.05, 65.8283, -52.8583, 0.37", "-121.71, 66.2145, -53.4774, 0.88", "-122.754, 66.8461, -54.3634, 0.22", "-123.296, 67.1646, -54.7614, 0.22", "-124.443, 67.8325, -55.5128, 0.74", "-125.017, 68.1796, -55.8306, 0.74", "-125.433, 68.4425, -56.0221, 0.22", "-126.762, 69.3581, -56.5442, 0.22", "-127.367, 69.8207, -56.7327, 0.22", "-127.82, 70.1834, -56.8604, 0.22", "-128.366, 70.6491, -56.9787, 0.66", "-128.842, 71.0747, -57.1021, 0.66", "-129.027, 71.2539, -57.1656, 0.66", "-129.724, 71.9867, -57.4459, 0.29", "-130.015, 72.302, -57.5597, 0.29", "-130.376, 72.6982, -57.6936, 0.66", "-130.642, 72.9764, -57.7801, 0.66", "-131.139, 73.4752, -57.9245, 0.22", "-132.234, 74.5271, -58.1795, 0.22", "-132.574, 74.853, -58.2383, 0.22", "-132.769, 75.0423, -58.2794, 0.59", "-133.389, 75.6345, -58.4171, 0.37", "-133.918, 76.1287, -58.558, 0.37", "-134.515, 76.6703, -58.7462, 0.37", "-134.749, 76.872, -58.8496, 1.11", "-136.393, 78.1429, -59.6404, 0.29", "-136.834, 78.4562, -59.8558, 0.29", "-137.546, 78.9519, -60.2333, 0.29", "-138.163, 79.3591, -60.5663, 1.18", "-139.171, 79.9723, -61.106, 0.29", "-139.97, 80.4361, -61.5557, 0.29", "-140.609, 80.7916, -61.9227, 0.29", "-141.121, 81.1103, -62.2429, 0.29", "-141.751, 81.5589, -62.6626, 0.37", "-141.951, 81.7251, -62.8449, 0.37", "-142.676, 82.4154, -63.6728, 0.37", "-143.04, 82.7982, -64.1218, 0.37", "-143.631, 83.4279, -64.8417, 0.44", "-144.004, 83.8114, -65.2728, 0.44", "-145.185, 84.9879, -66.5706, 0.81", "-145.495, 85.2794, -66.8677, 0.81", "-146.707, 86.2649, -67.7672, 0.29", "-147.181, 86.5939, -68.0382, 0.66", "-147.83, 86.9745, -68.302, 1.11", "-148.247, 87.1953, -68.4225, 1.11", "-148.909, 87.5235, -68.5639, 0.29", "-149.924, 87.9762, -68.8561, 0.29", "-150.83, 88.3132, -69.2017, 0.29", "-151.809, 88.6495, -69.602, 0.44", "-152.387, 88.8286, -69.8746, 0.44", "-153.153, 89.0454, -70.2887, 0.52", "-154.618, 89.4358, -71.1523, 0.22", "-155.804, 89.7541, -71.9201, 0.22", "-156.817, 90.0316, -72.6105, 0.22", "-158.027, 90.4199, -73.4161, 0.22", "-158.605, 90.6404, -73.7962, 0.96", "-159.116, 90.8873, -74.1336, 0.96", "-160.194, 91.6474, -74.9514, 0.29", "-160.76, 92.2086, -75.4502, 0.29", "-161.552, 93.2486, -76.28, 0.29", "-161.666, 93.4333, -76.404, 0.52", "-162.095, 94.2615, -76.9129, 0.52", "-162.621, 95.5265, -77.7232, 0.22", "-162.853, 96.2095, -78.1463, 0.22", "-163.043, 96.8626, -78.6026, 0.22", "-163.239, 97.5584, -79.1411, 0.22", "-163.38, 98.0091, -79.5337, 0.22", "-163.759, 99.0897, -80.5605, 0.52", "-164.019, 99.709, -81.194, 0.52", "-164.484, 100.63, -82.2481, 0.52", "-164.685, 100.955, -82.6494, 0.52", "-165.413, 101.928, -83.886, 0.52", "-166.232, 102.827, -85.0193, 0.15", "-166.657, 103.229, -85.4844, 0.15", "-167.425, 103.892, -86.2111, 0.15", "-167.974, 104.33, -86.6425, 0.37", "-168.573, 104.812, -87.0985, 0.37", "-168.849, 105.046, -87.3006, 0.37", "-169.207, 105.398, -87.6092, 0.59", "-169.436, 105.687, -87.86, 0.59", "-169.731, 106.166, -88.2364, 1.11", "-170.137, 106.959, -88.8815, 1.11", "-170.534, 107.809, -89.5706, 0.37", "-170.75, 108.3, -89.9756, 0.37", "-170.889, 108.618, -90.2425, 0.37", "-171.096, 109.073, -90.6069, 0.37", "-171.453, 109.752, -91.0719, 0.37", "-171.987, 110.671, -91.5938, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-19.6999, 39.0195, -0.467042, 1.18", "-20.1195, 39.8924, -0.119486, 1.18", "-20.7033, 41.0173, 0.361971, 1.11", "-21.1596, 41.862, 0.725085, 1.11", "-21.6028, 42.6826, 1.07779, 1.18", "-22.0729, 43.5531, 1.45197, 1.18", "-22.8232, 44.9422, 2.0491, 1.18", "-23.1518, 45.563, 2.33467, 1.18", "-23.3686, 45.9502, 2.51812, 1.18" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "27.1231, 40.5216, 24.1807, 0.74", "27.855, 40.5182, 24.1807, 0.74", "28.1476, 40.5081, 24.1812, 0.66", "30.0923, 40.3221, 24.1859, 0.22", "30.6736, 40.227, 24.1876, 0.29", "31.1897, 40.1155, 24.1893, 0.29", "31.2761, 40.0922, 24.1896, 0.29", "31.942, 39.8274, 24.2393, 0.29", "32.4135, 39.475, 24.3267, 0.29", "32.6644, 39.1138, 24.4302, 0.37", "32.864, 38.8453, 24.5139, 0.37", "33.0402, 38.6838, 24.6013, 0.66", "33.8178, 38.2932, 25.0052, 0.66", "34.2652, 38.2314, 25.2727, 0.44", "34.623, 38.2391, 25.4927, 0.29", "35.3029, 38.3212, 25.903, 0.29", "36.5022, 38.5587, 26.603, 0.29", "36.5788, 38.5804, 26.646, 0.29", "37.405, 38.8912, 27.1001, 0.29", "37.4711, 38.918, 27.1377, 0.29", "38.0615, 39.1441, 27.4757, 0.29", "38.7439, 39.3253, 27.8515, 0.66", "39.0915, 39.3585, 28.0084, 0.74", "39.7471, 39.3728, 28.2654, 0.74", "40.0728, 39.3553, 28.3614, 0.66", "40.3598, 39.3236, 28.4323, 0.52", "41.2529, 39.1567, 28.6003, 0.44", "41.7019, 39.0513, 28.6613, 0.59", "42.0569, 38.9659, 28.696, 0.52", "42.7878, 38.7975, 28.8041, 0.29", "43.436, 38.6858, 28.946, 0.22", "43.9461, 38.625, 29.0821, 0.29", "44.5218, 38.5839, 29.2466, 0.29", "45.3483, 38.5278, 29.5119, 0.37", "46.5209, 38.4301, 29.9422, 0.29", "47.114, 38.3721, 30.2043, 0.37", "47.3059, 38.3549, 30.3073, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "27.1231, 40.5216, 24.1807, 0.66", "27.9072, 41.2066, 24.2002, 0.66", "28.378, 41.6144, 24.2434, 0.66", "28.8569, 42.001, 24.3004, 1.18", "29.2121, 42.2646, 24.3394, 1.18", "30.5749, 43.2095, 24.4739, 0.81", "31.1437, 43.5918, 24.5192, 0.81", "31.6469, 43.8963, 24.5604, 0.96", "32.2189, 44.2367, 24.611, 0.96", "32.6919, 44.5242, 24.6526, 0.96", "33.3012, 44.8795, 24.7019, 0.96", "33.8747, 45.2385, 24.7436, 0.88", "34.4177, 45.6082, 24.8381, 0.88", "34.8244, 45.9099, 24.9061, 0.96", "35.5056, 46.4764, 25.0606, 1.03", "35.8571, 46.7999, 25.1716, 1.03", "36.1619, 47.1054, 25.3007, 0.88", "37.1681, 48.2019, 25.8917, 0.88" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "7.1711, 55.7252, 25.1838, 0.66", "7.8331, 57.5478, 28.3447, 0.66", "8.00125, 58.0253, 29.0568, 0.74", "8.08586, 58.291, 29.3805, 0.74", "8.1326, 58.4683, 29.5444, 0.74", "8.26112, 59.2405, 29.9597, 0.74", "8.27565, 59.6359, 30.2871, 0.74", "8.2455, 59.7277, 30.3589, 0.74", "8.01984, 60.0595, 30.9142, 0.74", "7.71061, 60.4053, 31.7232, 0.74", "7.57925, 60.5304, 32.0832, 0.74", "6.62125, 61.3192, 34.8572, 0.59", "6.21817, 61.5952, 36.1413, 0.52" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.1711, 55.7252, 25.1838, 1.18", "8.02426, 56.7947, 25.5101, 1.18", "8.77076, 57.9298, 25.5392, 0.44", "9.18358, 58.5981, 25.4438, 0.15", "9.58326, 59.3386, 25.28, 0.07", "9.84533, 59.9279, 25.1275, 0.07", "10.2047, 60.736, 24.9183, 0.07", "10.5226, 61.6615, 24.5142, 0.07", "10.6691, 62.1914, 24.2107, 0.22", "10.7761, 62.7133, 23.9023, 0.22", "10.8594, 63.262, 23.5676, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-258.661, -279.286, -123.249, 0.29", "-259.359, -280.557, -122.985, 0.29", "-259.717, -281.099, -122.881, 0.29", "-260.348, -281.993, -122.725, 0.29", "-261.29, -283.131, -122.474, 0.44", "-262.18, -284.129, -122.247, 0.44", "-263.019, -285.009, -121.985, 0.44", "-263.919, -285.842, -121.68, 0.44", "-264.407, -286.257, -121.51, 0.44", "-266.264, -287.679, -120.884, 0.44", "-267.486, -288.576, -120.495, 0.44", "-269.198, -289.794, -119.837, 0.52", "-269.37, -289.918, -119.762, 0.74", "-269.789, -290.236, -119.57, 0.74", "-271.196, -291.334, -118.845, 0.37", "-271.754, -291.843, -118.539, 0.37", "-272.904, -292.976, -117.899, 0.74", "-273.339, -293.435, -117.674, 0.74", "-274.484, -294.621, -117.115, 0.44", "-275.717, -295.894, -116.557, 0.74", "-277.13, -297.376, -115.963, 0.29", "-277.58, -297.8, -115.823, 0.74", "-278.05, -298.204, -115.734, 0.74", "-279.199, -299.124, -115.57, 0.44", "-279.979, -299.72, -115.505, 0.74", "-280.278, -299.937, -115.508, 0.74", "-281.628, -300.839, -115.525, 0.52", "-282.624, -301.524, -115.54, 0.44", "-283.135, -301.895, -115.55, 0.88", "-283.365, -302.073, -115.555, 0.88", "-285.497, -303.673, -115.617, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-258.661, -279.286, -123.249, 0.44", "-259.992, -277.88, -122.809, 0.44", "-260.278, -277.618, -122.595, 0.44", "-261.342, -276.802, -121.507, 0.44", "-261.83, -276.454, -120.991, 0.44", "-262.216, -276.183, -120.526, 0.44", "-262.688, -275.851, -119.958, 0.44", "-264.686, -274.509, -117.412, 0.44", "-265.651, -273.922, -116.053, 0.44", "-266.073, -273.71, -115.38, 0.59", "-267.171, -273.189, -113.452, 0.59" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "197.235, -195.712, -93.9449, 0.37", "198.627, -196.983, -93.3716, 0.37", "199.736, -197.958, -92.9897, 0.37", "200.572, -198.663, -92.7495, 0.37", "201.678, -199.582, -92.4779, 0.37", "202.99, -200.654, -92.1976, 0.37", "203.745, -201.26, -92.055, 0.37", "204.522, -201.838, -91.9602, 0.37", "205.461, -202.531, -91.9123, 0.37", "206.308, -203.169, -91.8777, 0.37", "207.01, -203.708, -91.8621, 0.37", "207.654, -204.204, -91.8754, 0.37", "208.385, -204.767, -91.8864, 0.37", "209.027, -205.268, -91.8864, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "197.235, -195.712, -93.9449, 0.37", "197.976, -194.799, -93.5061, 0.37", "198.427, -194.185, -93.2326, 0.37", "199.413, -192.55, -92.6025, 0.37", "199.736, -191.858, -92.3662, 0.37", "199.98, -191.241, -92.1767, 0.37", "200.312, -190.303, -91.8945, 0.37", "200.637, -189.16, -91.5538, 0.37", "200.939, -187.894, -91.1742, 0.37", "201.233, -186.463, -90.7507, 0.37", "201.427, -185.547, -90.453, 0.37", "201.745, -184.091, -89.9239, 0.52", "202.049, -182.896, -89.4566, 0.29", "202.486, -181.504, -88.8567, 0.29", "202.728, -180.879, -88.5607, 0.29", "202.969, -180.316, -88.2858, 0.52", "203.359, -179.433, -87.8545, 0.22", "203.797, -178.473, -87.3952, 0.22", "204.367, -177.27, -86.8365, 0.22", "204.666, -176.664, -86.5689, 0.22", "204.941, -176.094, -86.3274, 0.22", "205.37, -175.164, -85.9316, 0.22" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-13.239, -144.473, -78.8248, 0.44", "-14.6041, -145.346, -80.1521, 0.44", "-15.3054, -145.833, -80.8079, 0.44", "-16.1078, -146.463, -81.5062, 0.59", "-17.3364, -147.512, -82.6293, 0.15", "-17.8516, -147.967, -83.0927, 0.59", "-18.6898, -148.729, -83.8609, 0.66", "-19.6095, -149.588, -84.6735, 0.29", "-20.4273, -150.416, -85.4433, 0.29", "-21.269, -151.36, -86.232, 0.59", "-21.7323, -151.954, -86.6754, 1.4", "-22.5869, -153.176, -87.5897, 1.18", "-23.2068, -154.202, -88.2993, 0.52", "-23.4139, -154.595, -88.5724, 0.37", "-23.7889, -155.375, -89.1089, 0.37", "-24.1183, -156.131, -89.5895, 0.37", "-24.7878, -157.963, -90.7163, 0.37", "-25.0505, -158.787, -91.187, 0.37", "-25.3856, -159.92, -91.8176, 0.52", "-25.5319, -160.41, -92.0914, 0.66", "-25.7596, -161.194, -92.6254, 0.29", "-26.1898, -162.57, -93.6427, 0.29", "-26.5649, -163.881, -94.7203, 0.29", "-26.6512, -164.189, -95.0083, 0.44", "-26.8368, -164.887, -95.6964, 0.44", "-27.4989, -167.36, -98.4412, 0.52", "-27.6143, -167.773, -98.9542, 0.74", "-27.9413, -168.845, -100.435, 0.81", "-28.2616, -169.938, -101.96, 0.81", "-28.314, -170.14, -102.254, 0.81", "-28.4875, -170.999, -103.504, 0.81", "-28.6205, -171.808, -104.575, 0.81", "-28.6431, -172.042, -104.848, 0.44", "-28.7246, -172.942, -105.794, 0.44", "-28.9992, -175.202, -108.447, 0.44", "-29.0538, -175.53, -108.852, 1.11", "-29.1764, -176.008, -109.511, 0.37", "-29.4969, -177.006, -111.031, 0.37", "-29.8104, -177.769, -112.343, 0.52", "-30.6056, -179.202, -114.998, 0.52", "-30.8442, -179.558, -115.622, 0.52", "-31.5237, -180.491, -117.205, 0.52", "-31.7882, -180.841, -117.767, 0.52", "-32.5364, -181.808, -119.121, 0.52", "-32.9492, -182.422, -119.728, 0.29", "-33.5068, -183.314, -120.36, 0.29", "-34.0362, -184.148, -120.878, 0.29", "-34.8149, -185.36, -121.472, 0.29", "-35.2773, -186.032, -121.837, 0.29", "-35.5814, -186.466, -122.071, 0.74", "-36.1603, -187.278, -122.545, 0.37", "-36.5501, -187.805, -122.867, 0.37", "-36.9137, -188.307, -123.184, 0.74", "-38.0003, -189.912, -124.187, 0.22", "-38.407, -190.576, -124.597, 0.29", "-38.8961, -191.485, -125.045, 0.29", "-38.9924, -191.687, -125.115, 0.52", "-39.3083, -192.414, -125.33, 0.52", "-39.6064, -193.225, -125.47, 0.52", "-39.8056, -193.892, -125.416, 0.52", "-40.1292, -195.533, -125.196, 0.52", "-40.1583, -195.885, -125.116, 0.52" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-13.239, -144.473, -78.8248, 0.59", "-15.0804, -143.679, -81.8153, 0.59", "-15.6577, -143.528, -82.7349, 0.59", "-15.9982, -143.486, -83.293, 0.59", "-16.7961, -143.388, -84.6007, 0.44", "-17.2672, -143.33, -85.3727, 0.44", "-17.941, -143.247, -86.477, 0.44", "-18.4245, -143.3, -87.0987, 0.44", "-19.2725, -143.571, -88.3763, 0.44" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "22.4066, -104.188, 9.71322, 0.74", "23.2234, -105.819, 9.84462, 0.74", "23.5399, -106.453, 9.82761, 0.74", "24.1739, -107.647, 9.73931, 0.74", "24.6286, -108.433, 9.63091, 0.74", "25.2266, -109.377, 9.4705, 0.74", "25.7917, -110.22, 9.31296, 0.74", "26.4429, -111.144, 9.05126, 0.96", "26.9816, -111.859, 8.84551, 0.96", "27.7637, -112.766, 8.55992, 0.74", "28.3555, -113.386, 8.36769, 0.74", "28.5177, -113.544, 8.31554, 0.74", "29.2665, -114.206, 8.05504, 0.74", "30.0388, -114.842, 7.79104, 0.74", "31.1941, -115.769, 7.38927, 0.59", "31.8114, -116.256, 7.1888, 0.59", "32.4041, -116.705, 6.99241, 0.66", "33.4581, -117.468, 6.66074, 0.66", "34.0159, -117.846, 6.49822, 0.66", "35.1269, -118.577, 6.19582, 0.66", "35.8948, -119.08, 6.01606, 0.66", "37.0621, -119.852, 5.77667, 0.59", "37.938, -120.44, 5.63849, 0.88", "38.5446, -120.855, 5.56686, 0.81", "39.274, -121.356, 5.48743, 0.52", "39.8151, -121.748, 5.42536, 0.52", "40.5344, -122.304, 5.34686, 0.74", "41.299, -122.943, 5.27675, 1.03", "42.299, -123.788, 5.14081, 0.66", "42.9577, -124.335, 5.0364, 0.52", "44.3748, -125.472, 4.79792, 0.52", "45.0569, -125.995, 4.66332, 0.66", "45.58, -126.372, 4.551, 0.66", "47.0573, -127.365, 4.2232, 0.66", "47.9744, -127.94, 4.01898, 1.11", "48.3685, -128.169, 3.93965, 1.11", "49.2461, -128.644, 3.79939, 0.59", "50.3104, -129.197, 3.66677, 0.59", "51.0995, -129.592, 3.59166, 0.59", "51.4984, -129.793, 3.56977, 0.74", "52.4307, -130.26, 3.5199, 0.74", "53.6768, -130.888, 3.41665, 0.44", "54.8199, -131.459, 3.29894, 0.44", "55.6036, -131.849, 3.19505, 1.11", "56.1282, -132.115, 3.11365, 1.33", "56.7088, -132.408, 3.01276, 1.33", "57.8425, -132.975, 2.77932, 0.52", "58.4061, -133.269, 2.63632, 0.44", "58.8375, -133.526, 2.50578, 0.44", "59.3233, -133.843, 2.35185, 0.44" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.4066, -104.188, 9.71322, 0.59", "22.2024, -106.004, 10.1096, 0.59", "22.1948, -107.104, 10.2686, 0.59", "22.2068, -108.206, 10.3887, 0.59", "22.1983, -108.655, 10.429, 0.59", "22.095, -110.501, 10.5719, 0.59", "22.0062, -111.483, 10.6377, 0.74", "21.9914, -112.096, 10.6147, 0.66", "22.013, -112.627, 10.592, 0.29", "22.0456, -113.293, 10.5787, 0.29", "22.0326, -113.725, 10.5859, 0.29", "21.9462, -114.232, 10.6184, 0.29", "21.8159, -114.945, 10.6916, 0.29", "21.7802, -115.407, 10.7492, 0.29", "21.8131, -116.122, 10.8328, 0.29", "21.9466, -117.151, 10.9468, 0.37", "22.0337, -117.716, 11.01, 0.37", "22.1439, -118.401, 11.086, 0.37", "22.2858, -119.407, 11.1909, 0.37", "22.4257, -120.396, 11.2742, 0.37", "22.5355, -120.951, 11.2946, 0.37" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "8.63591, -59.8196, -13.2617, 1.33", "8.23923, -61.9204, -12.9126, 1.33", "7.97252, -63.2205, -12.7182, 1.33", "7.58234, -65.0651, -12.4691, 1.18", "7.44943, -65.8084, -12.3784, 1.33", "7.32306, -66.8053, -12.2689, 1.25", "7.22321, -68.1258, -12.1731, 1.25", "7.20867, -69.1071, -12.109, 1.18", "7.20847, -69.8879, -12.1258, 0.96", "7.20201, -70.9034, -12.2408, 1.11", "7.1523, -72.0218, -12.3862, 1.11", "7.07836, -73.2207, -12.5748, 1.03", "7.02111, -74.2986, -12.7772, 1.03", "6.97394, -75.3016, -12.9839, 1.25", "6.93231, -76.3832, -13.2051, 1.33", "6.8973, -77.6105, -13.452, 1.33", "6.89465, -78.9633, -13.7057, 1.33", "6.93528, -80.4236, -13.9207, 1.33", "7.03469, -82.0767, -14.1574, 1.18", "7.13905, -83.4697, -14.3642, 1.18", "7.25537, -84.9241, -14.6174, 1.18", "7.34313, -86.1447, -14.8445, 1.18", "7.37999, -87.3307, -15.0693, 1.18", "7.35057, -88.6979, -15.282, 1.11", "7.25422, -90.0171, -15.4545, 1.11", "7.0848, -91.3887, -15.5975, 1.11", "6.89255, -92.5657, -15.6747, 1.25", "6.70197, -93.6351, -15.7089, 1.18", "6.45284, -95.241, -15.7038, 0.88", "6.39137, -95.747, -15.6699, 0.88", "6.26504, -96.9791, -15.5611, 1.18", "6.15334, -97.9397, -15.4821, 1.25", "6.0066, -99.1111, -15.4638, 1.25", "5.84724, -100.417, -15.532, 1.25", "5.7068, -101.63, -15.6786, 1.03", "5.58233, -102.644, -15.8698, 1.03", "5.38044, -103.904, -16.1738, 1.03", "5.18543, -105.001, -16.4726, 1.18", "4.98639, -106.053, -16.7838, 1.18", "4.73767, -107.256, -17.1437, 1.18", "4.38119, -108.903, -17.6346, 0.96", "4.04668, -110.468, -18.0879, 0.88", "3.84805, -111.494, -18.3819, 0.88", "3.6198, -112.68, -18.6946, 0.88", "3.4037, -113.745, -18.9792, 0.88", "3.15778, -114.866, -19.2604, 0.96", "2.99123, -115.638, -19.3873, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.63591, -59.8196, -13.2617, 1.03", "10.1811, -60.9177, -13.5934, 1.03", "10.9465, -61.4485, -13.7326, 1.03", "11.9744, -62.1382, -13.891, 1.03", "14.1607, -63.55, -14.1731, 1.03", "15.9606, -64.6804, -14.3754, 1.03", "17.7845, -65.826, -14.5804, 1.03", "19.2397, -66.7102, -14.7246, 1.03", "20.5606, -67.486, -14.8414, 1.03", "22.4251, -68.5442, -14.9595, 1.18", "23.4679, -69.1168, -14.9609, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-23.3686, 45.9502, 2.51812, 0.88", "-23.9785, 46.2211, 2.53774, 0.88", "-24.9234, 46.6409, 2.56814, 1.4", "-24.9234, 46.6409, 2.56814, 1.4" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-23.3686, 45.9502, 2.51812, 1.25", "-23.6971, 46.3758, 2.51812, 1.25", "-24.1856, 47.0725, 2.51812, 1.4", "-24.2846, 47.228, 2.51937, 1.4", "-24.9137, 48.3434, 2.49466, 0.88", "-25.1302, 48.7831, 2.47842, 0.88", "-25.2316, 49.0267, 2.46759, 0.88", "-25.4249, 49.7313, 2.43009, 0.81", "-25.4978, 50.2257, 2.38461, 0.81", "-25.5578, 50.894, 2.30252, 0.81", "-25.5785, 51.3288, 2.21554, 0.81", "-25.6116, 51.8287, 2.09104, 0.74", "-25.6508, 52.1766, 2.02146, 0.74", "-25.7941, 52.8482, 1.94862, 0.74", "-25.9628, 53.3315, 2.01552, 0.74", "-26.2213, 53.943, 2.22083, 0.74", "-26.4009, 54.3484, 2.41438, 0.74", "-26.8349, 55.3311, 2.96019, 0.74", "-27.0646, 55.8666, 3.31355, 0.88", "-27.4683, 56.822, 4.00927, 0.96", "-27.7894, 57.5996, 4.60757, 0.96", "-28.0086, 58.1338, 5.02633, 0.81", "-28.177, 58.5416, 5.32663, 0.81", "-28.5435, 59.355, 5.83721, 0.81", "-28.7536, 59.7524, 6.09173, 0.74", "-29.0821, 60.2882, 6.42505, 0.66", "-29.2754, 60.5716, 6.57758, 0.52", "-29.4375, 60.8082, 6.66826, 0.52", "-29.743, 61.2752, 6.96131, 0.96", "-30.2989, 62.2043, 7.69492, 0.81", "-30.5369, 62.6503, 8.10469, 0.81", "-30.9819, 63.605, 9.01435, 0.96", "-31.0684, 63.8149, 9.21674, 0.96", "-31.8905, 66.1059, 11.4036, 0.81", "-31.9699, 66.3507, 11.6435, 0.44", "-32.0961, 66.7436, 12.0076, 0.44", "-32.2317, 67.1324, 12.3709, 0.44", "-32.343, 67.4369, 12.6744, 0.44", "-32.4839, 67.7706, 12.9166, 0.74", "-32.513, 67.8321, 12.9331, 0.74", "-32.7753, 68.2921, 13.2476, 0.74", "-32.9899, 68.6037, 13.5514, 0.74", "-33.6643, 69.4332, 14.5743, 0.59", "-33.9139, 69.6938, 14.9315, 0.52", "-34.2125, 69.97, 15.2766, 0.52", "-35.5476, 71.1143, 16.6336, 0.52", "-35.881, 71.3774, 16.9372, 0.59", "-36.3062, 71.6952, 17.2613, 0.74", "-36.7781, 72.0252, 17.5202, 0.52", "-38.1788, 72.9459, 18.1501, 0.52", "-38.3463, 73.0473, 18.197, 0.74", "-38.5464, 73.1616, 18.2226, 1.03", "-39.0285, 73.4436, 18.3292, 1.03", "-39.0285, 73.4436, 18.3292, 1.25", "-39.1541, 73.5252, 18.3857, 1.25", "-39.5664, 73.7809, 18.6235, 0.96", "-40.4816, 74.3254, 19.1142, 0.59", "-41.0441, 74.6273, 19.372, 0.29", "-41.2387, 74.7195, 19.447, 0.37", "-41.6765, 74.8995, 19.5831, 0.59", "-41.8989, 74.9777, 19.6326, 0.59", "-42.465, 75.1457, 19.6878, 0.59", "-42.9563, 75.2837, 19.6592, 0.59", "-43.1925, 75.3565, 19.6417, 0.52", "-43.6033, 75.5319, 19.6262, 0.37", "-43.8568, 75.6999, 19.6306, 0.29", "-44.1021, 75.9444, 19.9151, 0.29", "-44.223, 76.0756, 20.1716, 0.29", "-44.352, 76.1949, 20.4808, 0.88", "-44.5148, 76.3201, 20.8988, 0.81", "-44.6531, 76.4032, 21.2465, 0.81", "-45.9535, 76.9367, 24.2636, 0.81", "-46.1157, 76.9779, 24.6001, 0.81", "-46.3717, 77.0216, 25.0551, 0.81", "-46.4605, 77.0321, 25.1897, 0.81", "-46.7789, 77.0637, 25.6061, 0.52", "-47.0042, 77.1457, 25.9686, 0.52", "-47.1757, 77.3407, 26.2821, 0.52", "-47.3377, 77.604, 26.6876, 0.52", "-47.4148, 77.7665, 26.9286, 0.66", "-47.4959, 77.9688, 27.2167, 0.88", "-48.0634, 79.5249, 29.5309, 0.88", "-48.1334, 79.727, 29.8444, 0.59", "-48.2094, 79.9281, 30.1705, 0.44", "-48.279, 80.0808, 30.4264, 0.44", "-48.3909, 80.2692, 30.719, 0.52", "-48.8282, 80.8819, 31.4225, 0.59", "-48.8507, 80.9137, 31.4362, 0.59", "-49.0125, 81.1667, 31.5351, 0.74", "-49.1068, 81.3407, 31.5892, 0.88", "-49.3338, 81.8052, 31.7261, 0.59", "-49.5791, 82.3442, 31.8651, 0.44", "-49.8237, 82.8959, 31.966, 0.44", "-49.8632, 82.9738, 31.9878, 0.44", "-50.1157, 83.3938, 32.1382, 0.44", "-50.5013, 83.9809, 32.3757, 0.44", "-50.547, 84.0432, 32.4044, 0.44", "-50.8379, 84.431, 32.5852, 0.44", "-51.3325, 85.1248, 32.877, 0.44", "-51.6319, 85.6151, 33.0371, 0.44", "-51.9257, 86.1734, 33.1669, 0.44", "-51.9525, 86.2274, 33.1744, 0.44", "-52.3095, 86.965, 33.2416, 0.88", "-52.5389, 87.4674, 33.2803, 1.25", "-52.8933, 88.2535, 33.3174, 1.25", "-53.2636, 88.9888, 33.3647, 1.25", "-53.5106, 89.383, 33.3965, 0.96", "-53.8071, 89.8224, 33.4358, 0.52", "-54.1291, 90.2167, 33.4812, 0.37", "-54.4312, 90.5144, 33.5326, 0.22", "-54.7949, 90.7503, 33.6107, 0.07", "-55.1489, 90.8976, 33.7135, 0.07" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "37.1681, 48.2019, 25.8917, 0.66", "38.8134, 49.1313, 22.7521, 0.66", "39.0469, 49.2681, 22.3586, 0.66", "39.2828, 49.4125, 22.0269, 0.66", "39.3439, 49.4544, 21.9402, 0.66", "39.9763, 49.9375, 21.0391, 0.66", "40.1439, 50.0769, 20.8062, 0.66", "40.5614, 50.4649, 20.3745, 0.66", "41.0352, 50.9506, 19.9615, 0.66", "42.0503, 52.0842, 19.3196, 0.66", "42.2802, 52.3585, 19.2809, 0.66", "42.6781, 52.8668, 19.421, 0.66", "43.0078, 53.2882, 19.6718, 0.66", "44.467, 55.195, 21.0807, 0.66", "44.5533, 55.3138, 21.1757, 1.18", "44.9659, 55.9197, 21.67, 1.99", "45.2171, 56.3105, 21.9581, 1.99", "45.7206, 57.2037, 22.5019, 1.84", "46.0461, 57.887, 22.7542, 1.25", "46.3453, 58.5574, 22.8166, 0.66", "46.611, 59.1494, 22.8598, 0.66", "46.6568, 59.2382, 22.864, 0.66", "46.9348, 59.6714, 22.8703, 0.66", "47.4279, 60.2536, 22.8507, 0.66", "48.0848, 60.8125, 22.8635, 0.37", "48.5215, 61.0923, 22.8814, 0.22", "49.359, 61.5679, 22.9288, 0.22", "49.8651, 61.8551, 22.9645, 0.22", "50.3259, 62.1171, 23.0039, 0.37", "50.7444, 62.3826, 23.0496, 0.29", "50.9473, 62.6219, 23.0859, 0.59", "51.081, 63.2895, 23.1653, 0.52", "51.0585, 63.8241, 23.2169, 0.37", "50.996, 64.338, 23.3374, 0.29", "50.9248, 64.7575, 23.4767, 0.37", "50.872, 65.0986, 23.6161, 0.52", "50.8672, 65.1526, 23.6417, 0.52", "50.8772, 65.4098, 23.7971, 0.52", "51.0538, 66.5775, 24.5671, 0.52", "51.0714, 66.6457, 24.6222, 0.52", "51.2072, 67.0793, 25.0008, 0.44", "51.2318, 67.1525, 25.0674, 0.44", "51.3548, 67.5004, 25.3756, 0.44", "51.4794, 67.8245, 25.6363, 0.44", "51.8444, 68.7291, 26.031, 0.37" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "37.1681, 48.2019, 25.8917, 0.74", "37.671, 49.0356, 25.6978, 0.74", "38.0455, 49.537, 25.5036, 0.52", "38.0778, 49.5742, 25.4904, 0.52", "38.3866, 49.895, 25.3914, 0.52", "38.8341, 50.3435, 25.264, 0.59", "39.6552, 51.1314, 25.0633, 0.66", "39.9563, 51.365, 25.0026, 0.59", "40.4716, 51.7496, 24.9021, 0.59", "40.8354, 52.0325, 24.8448, 0.44", "40.8919, 52.078, 24.8393, 0.44", "41.3061, 52.4553, 24.8292, 0.44", "41.6832, 52.8177, 24.8609, 0.44", "41.9794, 53.1348, 24.9041, 0.52", "42.0579, 53.2247, 24.9202, 0.52", "42.3905, 53.615, 25.018, 0.52", "42.7106, 53.9893, 25.1306, 0.52", "42.7595, 54.0502, 25.1507, 0.52", "43.4002, 54.8777, 25.3452, 0.74", "43.7901, 55.3734, 25.5105, 0.74", "43.8369, 55.4315, 25.5258, 0.74", "44.2147, 55.9095, 25.6185, 0.74", "44.62, 56.4149, 25.7071, 0.74", "45.1403, 57.0749, 25.7717, 0.74", "46.0084, 58.1925, 25.6914, 0.74", "46.6577, 59.0654, 25.594, 0.74", "46.9587, 59.4693, 25.5458, 0.74" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-285.497, -303.673, -115.617, 0.74", "-287.286, -304.921, -116.032, 0.74", "-288.091, -305.582, -116.197, 0.74", "-288.898, -306.325, -116.31, 0.74", "-289.233, -306.66, -116.343, 0.59", "-289.798, -307.248, -116.364, 0.59", "-290.287, -307.728, -116.284, 0.59", "-290.789, -308.2, -116.091, 0.37", "-292.253, -309.451, -115.443, 0.37", "-293.304, -310.198, -114.834, 0.37", "-293.934, -310.569, -114.451, 0.37", "-296.179, -311.609, -112.971, 0.37", "-297.081, -311.961, -112.354, 0.37", "-298.196, -312.337, -111.577, 0.37", "-300.659, -312.974, -109.741, 0.37", "-301.913, -313.197, -108.834, 0.37", "-304.091, -313.459, -107.344, 0.37", "-304.727, -313.498, -106.887, 0.37", "-305.549, -313.519, -106.265, 0.37", "-307.552, -313.471, -104.693, 0.37", "-308.927, -313.354, -103.671, 0.37", "-309.255, -313.293, -103.396, 0.37", "-311.192, -312.694, -101.707, 0.37" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-285.497, -303.673, -115.617, 0.22", "-285.127, -305.266, -115.478, 0.22", "-284.905, -306.498, -115.362, 0.22", "-284.8, -307.458, -115.276, 0.22", "-284.76, -308.266, -115.208, 0.22", "-284.695, -309.565, -115.098, 0.29", "-284.671, -310.059, -115.056, 0.66", "-284.687, -310.732, -114.987, 0.37", "-284.856, -312.147, -114.826, 0.37", "-284.961, -312.686, -114.765, 0.59" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "59.3233, -133.843, 2.35185, 0.52", "60.3857, -134.239, 2.36752, 0.52", "61.2134, -134.577, 2.41609, 0.52", "62.0171, -134.934, 2.47877, 0.52", "64.1458, -135.916, 2.70721, 0.52", "65.4243, -136.506, 2.86359, 0.52", "66.7361, -137.115, 3.03307, 0.52", "67.7357, -137.607, 3.17176, 0.52", "68.8589, -138.178, 3.33688, 0.52", "69.4965, -138.514, 3.43402, 0.66", "70.0007, -138.793, 3.51085, 0.66", "70.8366, -139.267, 3.61393, 0.66", "71.4828, -139.625, 3.69809, 0.66", "72.4686, -140.132, 3.86873, 0.37", "73.1203, -140.491, 4.01489, 0.37", "73.8625, -140.946, 4.20192, 0.37", "74.7655, -141.521, 4.45927, 0.37", "76.0602, -142.356, 4.88752, 0.37", "77.3117, -143.173, 5.3681, 0.52", "78.325, -143.837, 5.81839, 0.52", "78.9652, -144.267, 6.14065, 0.52" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "59.3233, -133.843, 2.35185, 0.59", "60.1913, -134.643, 2.25589, 0.59", "60.7425, -135.152, 2.19495, 0.59", "61.3959, -135.754, 2.12272, 0.59", "62.5111, -136.782, 1.99943, 0.59", "63.1121, -137.336, 1.93299, 0.59", "63.5152, -137.707, 1.88843, 0.59" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.99123, -115.638, -19.3873, 0.88", "3.26028, -116.533, -19.3047, 0.88", "3.50782, -117.388, -19.3381, 0.59", "3.7185, -118.17, -19.3776, 0.66", "3.94204, -118.976, -19.498, 0.66", "4.18889, -119.838, -19.665, 0.88", "4.42085, -120.645, -19.8065, 0.88", "4.7846, -122.0, -20.0479, 0.96", "5.06731, -123.091, -20.2401, 0.88", "5.43234, -124.626, -20.4912, 1.18", "5.60013, -125.437, -20.6069, 0.96", "5.79224, -126.525, -20.7614, 0.96", "5.91115, -127.42, -20.8507, 0.96", "5.9719, -128.209, -20.8925, 0.96", "5.99602, -129.195, -20.9453, 0.96", "5.97276, -130.24, -20.973, 0.96", "5.90158, -131.375, -20.9784, 0.96", "5.80961, -132.461, -20.9718, 0.96", "5.71786, -133.877, -20.9142, 0.96", "5.65417, -135.006, -20.8459, 1.18", "5.64109, -135.306, -20.8228, 1.18", "5.59804, -136.908, -20.6791, 0.66", "5.59227, -137.639, -20.6048, 0.66", "5.60952, -139.47, -20.4964, 0.66", "5.64349, -140.982, -20.4995, 1.11", "5.69724, -142.163, -20.5692, 0.81", "5.77647, -143.369, -20.7072, 0.81", "5.82743, -144.026, -20.8248, 0.81", "5.91184, -145.242, -21.0636, 0.81", "5.95646, -146.309, -21.2895, 0.81", "6.01007, -147.014, -21.4363, 0.81", "6.13396, -147.993, -21.6273, 0.81", "6.32189, -149.009, -21.7899, 0.81", "6.4238, -149.476, -21.8366, 0.52", "6.61384, -150.272, -21.8571, 0.52", "6.82672, -151.14, -21.8571, 0.52", "6.99993, -151.814, -21.8571, 0.81", "7.24707, -152.663, -21.8595, 1.03", "7.57887, -153.778, -21.865, 1.03", "7.89003, -154.888, -21.8696, 0.81", "8.17456, -156.042, -21.8732, 0.81", "8.32756, -156.916, -21.8774, 0.81", "8.4061, -157.535, -21.864, 0.81", "8.46907, -158.491, -21.8207, 0.44", "8.48336, -158.858, -21.7977, 0.44", "8.50379, -159.776, -21.7335, 0.59", "8.50543, -160.783, -21.6293, 0.59", "8.48745, -161.907, -21.4918, 0.66", "8.45268, -163.336, -21.3539, 0.74", "8.44294, -165.105, -21.2568, 0.74", "8.48355, -166.664, -21.2295, 0.96", "8.54187, -167.752, -21.2496, 0.88", "8.61244, -168.509, -21.3027, 1.03", "8.80689, -169.948, -21.4905, 0.96", "9.02725, -171.113, -21.6907, 0.96", "9.2299, -172.021, -21.8838, 0.96", "9.4578, -172.907, -22.0958, 0.96", "9.71217, -173.846, -22.3235, 0.74", "9.87828, -174.431, -22.4331, 0.74", "10.0639, -175.026, -22.4918, 0.52", "10.251, -175.622, -22.5269, 0.52", "10.4257, -176.185, -22.5511, 0.52", "10.6242, -176.858, -22.5652, 0.52", "10.7703, -177.426, -22.5624, 0.52", "10.9638, -178.366, -22.5525, 0.52", "11.068, -178.99, -22.5432, 0.52", "11.2014, -179.888, -22.6173, 0.52", "11.3302, -180.694, -22.745, 0.81", "11.4357, -181.323, -22.8794, 0.81", "11.6139, -182.353, -23.1353, 0.52", "11.7129, -182.893, -23.2805, 0.52", "12.0965, -184.621, -23.7414, 0.81", "12.3207, -185.348, -23.9036, 1.18", "12.6193, -186.159, -24.0676, 0.88", "12.8779, -186.809, -24.183, 0.74", "13.1628, -187.526, -24.2862, 0.59", "13.6298, -188.802, -24.4309, 0.59", "14.3263, -190.934, -24.5818, 0.59", "14.8129, -192.65, -24.6838, 0.59", "15.0127, -193.451, -24.7252, 0.59", "15.2556, -194.656, -24.7779, 0.81", "15.4548, -195.934, -24.8322, 0.81", "15.7447, -198.506, -24.9323, 0.81", "15.8128, -199.681, -24.9676, 0.81", "15.83, -200.111, -24.9714, 0.81", "15.8825, -201.216, -25.0067, 0.66", "15.9573, -202.337, -25.0677, 0.66", "15.9951, -202.763, -25.1007, 0.81", "16.1083, -203.733, -25.2249, 0.74", "16.2408, -204.43, -25.3354, 0.74", "16.5311, -205.593, -25.5115, 0.52", "16.6979, -206.141, -25.5874, 0.52", "16.8876, -206.73, -25.6536, 0.74", "17.0102, -207.244, -25.697, 0.88", "17.1671, -208.157, -25.7493, 1.03", "17.2987, -209.02, -25.7742, 0.74", "17.4048, -209.695, -25.7742, 0.59", "17.5324, -210.462, -25.7559, 0.37", "17.8921, -212.52, -25.631, 0.37", "18.0282, -213.297, -25.5624, 0.37", "18.2404, -214.561, -25.4149, 0.37", "18.398, -215.563, -25.28, 0.37", "18.5429, -216.553, -25.1371, 0.44", "18.6781, -217.5, -24.9976, 0.74", "18.762, -218.008, -24.9233, 0.74", "19.0241, -219.659, -24.7146, 0.74", "19.2085, -220.824, -24.5961, 0.74", "19.391, -221.784, -24.4968, 0.74", "19.6552, -222.946, -24.3769, 0.74", "19.8892, -223.839, -24.2782, 0.74", "20.3076, -225.235, -24.0808, 0.74", "20.6517, -226.241, -23.9195, 0.74", "21.1797, -227.598, -23.6659, 0.74", "21.579, -228.539, -23.4605, 0.74", "21.9034, -229.273, -23.27, 1.03", "22.2477, -230.084, -23.0229, 1.03" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.99123, -115.638, -19.3873, 0.88", "1.50112, -116.102, -19.7807, 0.88", "0.298283, -116.624, -20.0958, 0.52", "-1.33073, -117.48, -20.4567, 0.52", "-2.0763, -117.963, -20.5951, 0.81", "-2.65739, -118.373, -20.6962, 0.96", "-3.22209, -118.765, -20.8226, 0.81", "-3.89157, -119.298, -21.0186, 0.52", "-4.42108, -119.745, -21.167, 0.59", "-5.1757, -120.398, -21.4055, 0.59", "-5.81996, -120.91, -21.5953, 0.74", "-7.07658, -121.795, -21.9773, 0.81", "-7.66394, -122.167, -22.1678, 0.81", "-8.34046, -122.586, -22.3948, 0.52", "-9.33217, -123.118, -22.6962, 0.52", "-10.0148, -123.464, -22.8693, 1.11", "-10.3749, -123.66, -22.9388, 0.96", "-11.102, -124.091, -23.0433, 0.44", "-11.9021, -124.58, -23.1719, 0.37", "-13.6348, -125.661, -23.4508, 0.37", "-14.7024, -126.351, -23.6414, 0.37", "-15.4778, -126.882, -23.7802, 0.74", "-16.2744, -127.43, -23.9139, 0.96", "-16.8712, -127.84, -24.0089, 0.96", "-17.8775, -128.553, -24.2073, 0.52", "-18.598, -129.13, -24.3757, 0.52", "-19.3522, -129.672, -24.5532, 0.66", "-20.028, -130.133, -24.7222, 0.66", "-20.7006, -130.598, -24.8916, 0.52", "-21.4637, -131.156, -25.0833, 0.66", "-21.9836, -131.557, -25.2223, 0.66", "-23.5608, -132.863, -25.7307, 0.81", "-24.1918, -133.436, -25.966, 0.59", "-24.7085, -133.946, -26.1792, 0.59", "-25.1065, -134.333, -26.34, 0.59", "-25.517, -134.71, -26.4954, 0.59", "-26.3752, -135.507, -26.8414, 0.74", "-26.807, -135.976, -27.0518, 0.52", "-27.2863, -136.526, -27.2883, 0.52", "-27.832, -137.189, -27.5605, 0.37", "-28.112, -137.561, -27.7092, 0.37", "-28.368, -137.938, -27.8434, 0.37", "-28.909, -138.732, -28.0662, 0.59", "-29.3916, -139.462, -28.2649, 0.96", "-29.6418, -139.84, -28.3581, 1.03", "-30.1317, -140.52, -28.5684, 0.88", "-30.3399, -140.753, -28.6536, 0.66", "-31.0844, -141.42, -28.941, 0.44", "-31.5501, -141.769, -29.1031, 0.59", "-32.033, -142.117, -29.2983, 0.88", "-32.8462, -142.718, -29.6428, 0.52", "-33.3903, -143.15, -29.9171, 0.52", "-34.3924, -143.972, -30.4885, 0.52", "-34.8263, -144.347, -30.7755, 0.88", "-35.6712, -145.156, -31.4422, 0.52", "-36.1099, -145.631, -31.8342, 0.52", "-36.7669, -146.43, -32.4517, 0.52", "-37.1392, -146.923, -32.8506, 0.52", "-37.562, -147.518, -33.3177, 0.52", "-38.1913, -148.427, -33.9809, 0.59", "-38.4298, -148.768, -34.2051, 0.59", "-38.8212, -149.328, -34.5375, 0.59", "-39.2788, -150.011, -34.8618, 0.74", "-39.792, -150.867, -35.2732, 0.74", "-40.2215, -151.669, -35.6324, 0.52", "-40.6284, -152.562, -36.073, 0.66", "-40.8067, -153.054, -36.3459, 0.66", "-41.0611, -153.894, -36.8448, 0.66", "-41.3398, -155.099, -37.6179, 0.52", "-41.459, -155.781, -38.0909, 0.52", "-41.6168, -157.008, -38.9365, 0.74", "-41.6535, -157.28, -39.1166, 0.74", "-41.8182, -158.04, -39.6253, 0.74", "-42.086, -158.889, -40.1259, 0.74", "-42.2949, -159.42, -40.3554, 0.74", "-42.4652, -159.827, -40.5183, 0.52", "-42.7196, -160.489, -40.7397, 0.52", "-43.0964, -161.535, -41.0802, 0.52", "-43.4478, -162.549, -41.4011, 0.88", "-43.7023, -163.231, -41.5856, 0.88", "-44.1236, -164.398, -41.8747, 0.88", "-44.3121, -164.896, -41.9683, 1.03", "-44.6169, -165.677, -42.0528, 0.52", "-44.9601, -166.464, -42.0631, 0.52", "-45.3676, -167.25, -42.0305, 0.52", "-45.7321, -167.879, -41.9716, 0.66", "-46.2781, -168.75, -41.804, 0.88", "-46.6757, -169.349, -41.6671, 0.88", "-47.2246, -170.182, -41.4596, 1.03", "-47.6007, -170.732, -41.3269, 0.66", "-48.1445, -171.483, -41.1953, 0.66", "-48.8229, -172.401, -41.086, 0.81", "-49.0881, -172.769, -41.071, 0.81", "-49.618, -173.571, -41.0736, 0.81", "-50.5729, -175.137, -41.1372, 0.66", "-51.2244, -176.282, -41.2208, 0.66", "-51.8786, -177.512, -41.373, 0.66", "-52.2644, -178.294, -41.4835, 0.52", "-52.7856, -179.471, -41.6527, 0.52", "-53.0988, -180.279, -41.8049, 0.59", "-53.3374, -181.027, -41.9831, 0.59", "-53.5916, -181.947, -42.2243, 0.81", "-53.8728, -182.944, -42.5205, 0.88", "-54.1228, -183.697, -42.7539, 1.03", "-54.6833, -185.094, -43.2428, 1.11", "-55.09, -186.027, -43.5778, 0.81", "-55.32, -186.508, -43.7352, 0.81", "-55.6072, -187.039, -43.8706, 0.37", "-55.9835, -187.667, -44.0179, 0.44", "-56.2614, -188.108, -44.0751, 0.81", "-56.6446, -188.717, -44.1537, 0.81", "-57.0067, -189.303, -44.2634, 0.44", "-57.5317, -190.234, -44.4835, 0.44", "-57.9737, -191.121, -44.7185, 0.66", "-58.3541, -191.901, -44.9378, 1.18", "-58.9656, -193.111, -45.3386, 0.52", "-59.3279, -193.797, -45.5935, 0.44", "-59.5646, -194.221, -45.7631, 0.44", "-59.7765, -194.602, -45.9044, 0.44", "-60.3938, -195.687, -46.231, 0.44", "-60.6262, -196.183, -46.4396, 0.66", "-60.8492, -196.825, -46.7352, 0.66", "-60.9687, -197.274, -46.966, 0.88", "-61.1258, -197.956, -47.3397, 0.88", "-61.176, -198.218, -47.4862, 0.88", "-61.5333, -200.67, -48.818, 0.66", "-61.6346, -201.238, -49.0975, 0.81", "-61.8826, -202.354, -49.63, 0.88", "-62.0468, -202.943, -49.8764, 0.96", "-62.1892, -203.342, -50.0006, 0.96", "-62.4545, -203.942, -50.093, 0.44", "-62.9631, -204.83, -50.0655, 0.44", "-63.2168, -205.24, -50.0424, 0.44", "-63.8136, -206.196, -49.9686, 0.44", "-64.2217, -206.847, -49.9123, 0.66", "-64.8054, -207.772, -49.8456, 0.81", "-65.178, -208.31, -49.8166, 0.81", "-65.989, -209.35, -49.7775, 0.81", "-66.5926, -210.041, -49.7628, 0.66", "-67.5388, -211.059, -49.7605, 0.66", "-68.955, -212.533, -49.733, 0.66", "-69.9706, -213.591, -49.6831, 0.52", "-70.9334, -214.611, -49.6089, 0.52", "-71.4685, -215.175, -49.5525, 0.52", "-72.1419, -215.914, -49.464, 1.92", "-73.0852, -217.057, -49.3058, 0.52", "-73.4083, -217.52, -49.2695, 0.52", "-73.802, -218.222, -49.2656, 0.52", "-74.0322, -218.681, -49.2958, 0.59", "-74.309, -219.161, -49.3488, 0.44", "-74.9112, -220.093, -49.4854, 0.44", "-75.6771, -221.264, -49.7398, 0.44", "-76.2002, -222.03, -49.9135, 0.59", "-76.7779, -222.865, -50.1071, 0.59", "-77.7125, -224.195, -50.4107, 0.37", "-78.3068, -225.031, -50.5875, 0.37", "-78.8517, -225.81, -50.7269, 0.59", "-79.2718, -226.404, -50.7753, 0.74" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "23.4679, -69.1168, -14.9609, 0.07", "25.452, -71.5187, -5.59334, 0.07", "25.5209, -71.5997, -5.34594, 0.52", "25.8831, -72.022, -4.33239, 0.37", "26.3181, -72.5246, -3.35095, 0.37", "26.6502, -72.9052, -2.7315, 0.22", "27.0338, -73.3433, -2.12674, 0.22", "27.8549, -74.2214, -1.92715, 0.44", "28.4936, -74.8985, -1.76968, 0.44", "28.9057, -75.3595, -1.66687, 0.52", "29.2985, -75.8226, -1.56807, 0.52", "29.7467, -76.3514, -1.46725, 0.52", "30.2719, -76.9578, -1.32703, 0.52", "30.9618, -77.7699, -1.11741, 0.52", "31.7235, -78.6695, -0.834087, 0.52", "32.2287, -79.281, -0.609688, 0.52", "32.6407, -79.8332, -0.392218, 0.66", "33.3488, -80.9113, 0.0861483, 0.52", "33.7172, -81.5351, 0.393809, 0.52", "33.8659, -81.7962, 0.537571, 0.52", "34.2407, -82.4354, 0.894504, 0.29", "34.7454, -83.2636, 1.31622, 0.29", "35.1506, -83.9269, 1.65159, 0.29", "35.4747, -84.4671, 1.88651, 0.29", "35.9238, -85.1986, 2.23319, 0.29", "36.4229, -85.9541, 2.63409, 0.29", "36.7601, -86.3945, 2.87411, 0.29", "37.7198, -87.4921, 3.47476, 0.44", "38.4466, -88.2893, 3.87816, 0.44", "39.0067, -88.9008, 4.20648, 0.52", "39.6312, -89.5829, 4.57747, 0.52", "40.6386, -90.718, 5.18222, 0.52", "41.1406, -91.3006, 5.4622, 0.52", "41.5586, -91.7873, 5.64972, 0.52", "42.1563, -92.5174, 5.88541, 0.66", "42.4039, -92.8516, 5.96205, 0.66", "42.843, -93.5115, 6.07524, 0.37", "43.1992, -94.0694, 6.20463, 0.37", "43.5634, -94.6061, 6.33799, 0.37", "43.8355, -94.9869, 6.42948, 0.37", "44.4401, -95.8561, 6.61208, 0.44", "44.9629, -96.7041, 6.82309, 0.59", "45.6849, -98.0581, 7.1876, 0.59", "46.1301, -99.0865, 7.4637, 0.88", "46.4683, -100.044, 7.70953, 0.74", "46.7344, -100.981, 7.93234, 0.74", "47.0173, -102.501, 8.28688, 0.74", "47.1157, -103.277, 8.46105, 0.74", "47.2177, -104.283, 8.65776, 0.44", "47.3072, -105.114, 8.85708, 0.44", "47.426, -105.824, 9.04905, 0.44", "47.7691, -107.155, 9.41751, 0.59", "48.143, -108.264, 9.71665, 0.59", "48.536, -109.244, 9.99201, 0.59", "48.9992, -110.254, 10.2899, 0.96", "49.4432, -111.125, 10.5404, 0.29", "50.2928, -112.576, 10.9217, 0.29", "50.4761, -112.85, 10.9694, 0.29", "50.8544, -113.393, 11.0588, 0.52", "51.3245, -114.071, 11.1472, 0.22", "51.8233, -114.777, 11.1942, 0.22", "52.1952, -115.31, 11.2241, 0.44", "52.8094, -116.099, 11.2537, 0.66", "53.533, -116.999, 11.3587, 0.66", "54.0926, -117.671, 11.4769, 0.66", "54.7113, -118.377, 11.6334, 0.59", "55.3839, -119.178, 11.8393, 0.59", "56.2267, -120.239, 12.1345, 0.59", "57.1311, -121.431, 12.4627, 0.59", "57.443, -121.844, 12.5482, 0.59", "57.8809, -122.413, 12.6521, 0.44", "58.5009, -123.304, 12.7733, 0.44", "58.8826, -123.873, 12.8217, 0.44", "59.2622, -124.459, 12.837, 0.44", "59.6303, -125.015, 12.8183, 0.44", "60.1605, -125.818, 12.8096, 0.44", "60.6033, -126.471, 12.815, 0.44", "61.346, -127.533, 12.8411, 0.52", "61.7012, -128.053, 12.848, 0.52", "62.669, -129.482, 12.8593, 0.52", "63.4614, -130.63, 12.8543, 0.52", "64.2306, -131.682, 12.8385, 0.52", "64.8938, -132.514, 12.8171, 0.52", "66.4112, -134.289, 12.7198, 0.37", "67.3204, -135.266, 12.6514, 0.37", "68.55, -136.463, 12.5359, 0.37", "69.3787, -137.21, 12.4479, 0.37", "70.2762, -137.981, 12.3441, 0.37", "71.3509, -138.888, 12.2494, 0.37", "72.3293, -139.704, 12.2006, 0.37", "73.13, -140.402, 12.1849, 0.59", "73.6314, -140.858, 12.2036, 0.59", "74.0137, -141.212, 12.2655, 0.88", "75.0066, -142.062, 12.5238, 0.44", "75.6641, -142.558, 12.7633, 0.44", "76.6674, -143.287, 13.1732, 0.44", "77.4181, -143.806, 13.5069, 0.44", "78.8403, -144.731, 14.1462, 0.44", "79.9008, -145.356, 14.6083, 0.44", "81.2712, -146.051, 15.1506, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "23.4679, -69.1168, -14.9609, 1.18", "23.7606, -69.2921, -15.011, 1.18", "24.5783, -69.7768, -15.1261, 1.18", "25.8347, -70.5235, -15.3467, 0.66", "26.3606, -70.8556, -15.4429, 0.66", "27.427, -71.5589, -15.6659, 0.66", "28.7021, -72.4289, -15.9426, 0.66", "29.9444, -73.3024, -16.2164, 0.66", "30.9663, -74.0352, -16.4674, 0.66", "32.101, -74.85, -16.7542, 0.66", "33.1422, -75.5708, -17.0198, 0.74", "34.0202, -76.1534, -17.2435, 0.88", "34.9934, -76.7829, -17.4907, 0.88", "35.9734, -77.3976, -17.7194, 0.66", "36.9052, -77.9485, -17.895, 0.66", "37.6147, -78.3426, -18.0114, 0.66", "38.5904, -78.8879, -18.1301, 0.96", "39.4398, -79.3755, -18.2428, 1.47", "39.9988, -79.7086, -18.34, 1.99", "40.5202, -80.0258, -18.4495, 1.92", "41.2912, -80.4647, -18.6481, 1.25", "42.2187, -80.9362, -18.9047, 1.03", "43.4608, -81.5136, -19.293, 1.03", "44.6847, -82.0529, -19.7057, 0.88", "45.3962, -82.3724, -19.9688, 1.03", "46.3904, -82.8127, -20.3749, 0.74", "47.3788, -83.2483, -20.7971, 0.74", "48.2834, -83.6475, -21.1955, 1.18", "48.978, -83.9435, -21.4794, 1.18", "50.4627, -84.6037, -22.0725, 0.81", "51.8653, -85.2873, -22.6545, 0.81", "52.3511, -85.5473, -22.8607, 0.81", "53.4664, -86.1645, -23.2649, 0.52", "54.7174, -86.853, -23.6174, 0.52", "56.1242, -87.606, -23.9731, 0.52", "57.1297, -88.1287, -24.1719, 0.59", "57.994, -88.5962, -24.3044, 0.74", "59.436, -89.4007, -24.5544, 1.18", "60.1243, -89.7983, -24.6888, 1.18", "61.4343, -90.5533, -24.9754, 0.66", "62.4765, -91.1066, -25.1979, 0.88", "64.0727, -91.8928, -25.5466, 0.66", "65.6028, -92.6098, -25.8956, 0.96", "66.7329, -93.1327, -26.1874, 1.11", "67.8542, -93.6487, -26.4493, 1.11", "68.9162, -94.1478, -26.6812, 0.88", "69.8518, -94.5949, -26.8888, 0.96", "70.7756, -95.0311, -27.0623, 1.18", "71.9896, -95.6074, -27.2387, 0.88", "73.1077, -96.1426, -27.3853, 0.88", "74.7512, -96.9569, -27.5954, 0.88", "76.3272, -97.7713, -27.7839, 0.74", "78.1541, -98.761, -27.9657, 0.74", "78.701, -99.0741, -28.0056, 0.74", "79.447, -99.5275, -28.0262, 0.74", "80.3987, -100.137, -28.0185, 0.59", "81.2353, -100.706, -27.9711, 0.52", "82.2655, -101.464, -27.9085, 0.52", "82.8257, -101.913, -27.8763, 0.52", "83.8951, -102.795, -27.8089, 0.52", "84.4731, -103.269, -27.7476, 0.52", "85.1789, -103.823, -27.6478, 0.52", "85.604, -104.134, -27.5781, 0.96", "86.1622, -104.517, -27.4811, 1.33", "87.0745, -105.107, -27.2755, 1.62", "88.1127, -105.774, -27.0068, 0.66", "88.4117, -105.969, -26.944, 0.66", "89.2564, -106.515, -26.7198, 0.44", "90.0594, -107.034, -26.4873, 0.44", "91.5593, -108.011, -26.0668, 0.44", "92.0763, -108.358, -25.9343, 0.44", "93.328, -109.237, -25.707, 1.03", "94.8966, -110.428, -25.4925, 0.74", "95.8252, -111.157, -25.4352, 0.74", "96.9486, -112.059, -25.4542, 0.59", "97.8812, -112.846, -25.5523, 0.59", "98.8999, -113.736, -25.6898, 0.96", "99.8, -114.574, -25.8429, 0.96", "100.587, -115.35, -26.0447, 0.52", "101.1, -115.868, -26.1925, 0.52", "101.827, -116.596, -26.4255, 0.52", "102.619, -117.38, -26.681, 0.52", "103.415, -118.14, -26.937, 0.74", "104.198, -118.88, -27.2415, 0.74", "105.158, -119.798, -27.6518, 0.74", "105.921, -120.524, -28.0427, 0.37", "106.926, -121.464, -28.6773, 0.37", "107.423, -121.946, -29.0349, 0.37", "108.109, -122.623, -29.5345, 0.66", "108.577, -123.099, -29.8712, 0.66", "109.187, -123.73, -30.2815, 0.59", "109.996, -124.565, -30.8168, 0.59", "110.806, -125.373, -31.3308, 0.37", "111.759, -126.309, -31.8897, 0.37", "113.137, -127.597, -32.604, 0.37", "113.382, -127.82, -32.7314, 0.37", "113.611, -128.013, -32.846, 0.37", "114.076, -128.382, -33.1069, 0.37", "115.248, -129.269, -33.8476, 0.37", "115.833, -129.721, -34.23, 0.44", "116.76, -130.472, -34.8518, 0.52", "117.954, -131.492, -35.6691, 0.52", "118.983, -132.382, -36.3523, 1.03", "119.451, -132.812, -36.647, 1.47", "120.282, -133.631, -37.1429, 1.92", "121.435, -134.857, -37.8048, 0.59", "122.033, -135.528, -38.1068, 0.44", "122.62, -136.234, -38.3591, 0.44", "123.704, -137.587, -38.7436, 0.44", "124.559, -138.658, -39.0212, 1.33", "124.929, -139.16, -39.1214, 1.47", "125.423, -139.904, -39.1864, 0.37", "126.145, -141.093, -39.2277, 0.37", "126.486, -141.705, -39.2266, 0.37", "126.696, -142.094, -39.2119, 0.37", "127.608, -143.852, -39.1272, 0.37", "128.414, -145.441, -39.0712, 0.37", "128.726, -146.075, -39.0813, 0.59", "129.403, -147.491, -39.1287, 0.59", "129.926, -148.59, -39.1817, 0.59", "130.375, -149.5, -39.2564, 0.59", "130.799, -150.277, -39.3724, 0.88", "131.479, -151.527, -39.6269, 0.88", "132.233, -152.976, -40.0078, 0.59", "132.736, -153.974, -40.3003, 0.59", "133.158, -154.87, -40.5615, 0.59", "133.714, -156.119, -40.898, 1.18", "133.965, -156.728, -41.0563, 1.99", "134.798, -158.967, -41.6008, 0.59", "135.308, -160.515, -41.9952, 0.59", "135.58, -161.555, -42.1879, 0.96", "135.802, -162.71, -42.3141, 1.33", "135.986, -164.044, -42.2917, 0.37", "136.074, -164.716, -42.1883, 0.37", "136.214, -165.818, -41.8103, 0.37", "136.435, -167.355, -41.1472, 0.81", "136.556, -167.979, -40.8185, 0.81", "136.998, -169.695, -39.8011, 0.81", "137.426, -171.095, -38.939, 0.44", "137.943, -172.533, -38.0626, 0.44", "138.378, -173.618, -37.4186, 0.44", "138.98, -175.022, -36.6589, 0.59", "139.282, -175.769, -36.3023, 0.59", "139.705, -176.933, -35.8315, 0.59", "139.935, -177.668, -35.5625, 0.74", "140.041, -178.06, -35.4089, 0.74", "140.171, -178.542, -35.2059, 0.37", "140.438, -179.598, -34.7866, 0.37", "140.736, -180.684, -34.3009, 0.37", "141.123, -181.813, -33.7615, 0.37", "141.62, -183.099, -33.1085, 0.37", "142.127, -184.276, -32.5049, 0.37", "142.611, -185.382, -31.968, 0.37", "143.122, -186.498, -31.4742, 0.96", "143.436, -187.249, -31.1618, 0.96", "143.751, -188.02, -30.8549, 0.96", "144.143, -188.933, -30.5032, 0.44", "144.614, -190.079, -30.0342, 0.44", "145.214, -191.571, -29.4215, 0.44", "145.984, -193.525, -28.6575, 0.44", "146.611, -195.136, -28.0474, 0.44", "147.39, -197.172, -27.3383, 0.44", "147.739, -198.067, -27.0334, 0.44", "147.915, -198.491, -26.9017, 0.44", "148.238, -199.332, -26.6956, 0.44", "148.568, -200.292, -26.5651, 0.44", "148.915, -201.551, -26.4491, 0.44", "149.017, -202.03, -26.4279, 0.44", "149.274, -203.361, -26.3812, 0.44", "149.41, -204.18, -26.3521, 0.44", "149.759, -206.403, -26.2726, 0.44", "150.154, -208.496, -26.21, 0.44", "150.392, -209.583, -26.184, 0.44", "150.731, -211.014, -26.1582, 0.44", "151.076, -212.362, -26.1419, 0.66", "151.617, -214.201, -26.1484, 0.15", "152.132, -215.702, -26.1967, 0.29", "152.659, -217.105, -26.33, 0.29", "152.98, -217.864, -26.4329, 0.29", "153.292, -218.58, -26.5563, 0.44", "153.727, -219.618, -26.7766, 0.44", "154.29, -221.077, -27.1247, 0.44", "154.834, -222.612, -27.5028, 0.44", "155.2, -223.576, -27.7579, 0.44", "155.497, -224.283, -27.9145, 0.44", "156.178, -225.756, -28.166, 0.59", "156.647, -226.673, -28.2475, 0.59", "156.938, -227.224, -28.2479, 0.59", "157.672, -228.601, -28.1727, 0.59", "158.538, -230.293, -28.0593, 0.37", "159.102, -231.325, -28.0276, 0.37", "159.564, -232.112, -28.0295, 0.74", "160.208, -233.186, -28.0875, 0.74", "160.771, -234.169, -28.1929, 0.44", "161.073, -234.749, -28.2893, 0.44", "161.866, -236.228, -28.6531, 0.59", "162.424, -237.23, -28.9018, 0.59", "162.61, -237.538, -28.9747, 0.59", "163.217, -238.368, -29.1338, 0.37", "163.935, -239.213, -29.2384, 0.37", "165.156, -240.502, -29.431, 0.37", "165.859, -241.198, -29.5312, 0.37", "166.628, -241.906, -29.6789, 0.37", "167.461, -242.625, -29.8909, 0.37", "168.299, -243.281, -30.1362, 0.37", "169.793, -244.432, -30.6204, 0.44", "170.461, -244.994, -30.8596, 0.59", "171.384, -245.839, -31.2055, 0.59", "172.129, -246.651, -31.5095, 0.59", "172.843, -247.564, -31.8025, 0.52", "173.509, -248.601, -32.059, 0.52", "174.058, -249.619, -32.2201, 0.52", "174.242, -250.029, -32.2744, 0.52", "174.739, -251.258, -32.4944, 0.52", "175.119, -252.221, -32.7029, 0.52", "175.578, -253.389, -33.0173, 0.52", "175.904, -254.186, -33.2645, 0.52", "176.088, -254.625, -33.4263, 0.52", "176.779, -256.455, -34.148, 0.52", "177.314, -258.219, -34.945, 0.52", "177.456, -259.006, -35.3194, 0.52", "177.493, -259.47, -35.555, 0.52", "177.458, -260.429, -35.9609, 0.52", "177.329, -261.457, -36.2592, 0.52", "177.103, -262.607, -36.4278, 0.37", "176.794, -263.912, -36.5749, 0.37", "176.524, -265.196, -36.6594, 0.59", "176.206, -267.104, -36.6894, 0.59", "176.026, -268.589, -36.6318, 0.59", "175.955, -269.607, -36.5391, 0.59", "175.92, -270.36, -36.4295, 0.29", "175.891, -271.48, -36.2979, 0.29", "175.871, -272.53, -36.2205, 0.29", "175.864, -273.122, -36.22, 0.52", "175.859, -273.843, -36.2044, 0.52", "175.899, -274.557, -36.1395, 0.52", "176.051, -275.689, -35.915, 0.52", "176.252, -276.697, -35.656, 0.52", "176.444, -277.477, -35.4356, 0.52", "176.826, -278.839, -35.0433, 0.52", "177.39, -280.612, -34.5698, 0.52", "177.926, -282.104, -34.1666, 0.52", "178.158, -282.682, -34.0113, 0.52", "178.424, -283.299, -33.8693, 0.52", "178.756, -284.057, -33.7838, 0.52", "179.211, -285.061, -33.8255, 0.52", "179.592, -285.898, -33.9843, 0.52", "180.05, -286.845, -34.2464, 0.52", "180.861, -288.408, -34.7848, 0.52", "181.663, -289.848, -35.3516, 0.52", "182.368, -291.122, -35.8886, 0.52", "182.773, -291.869, -36.2364, 0.52", "182.998, -292.292, -36.4457, 0.52", "183.658, -293.576, -37.0671, 0.52", "184.025, -294.286, -37.3921, 0.52", "184.586, -295.38, -37.7636, 0.52", "185.206, -296.637, -38.0915, 0.52", "185.565, -297.493, -38.286, 0.52", "185.878, -298.395, -38.4697, 0.52", "185.984, -298.751, -38.5366, 0.74", "186.155, -299.368, -38.6642, 0.74", "186.334, -300.008, -38.8124, 0.74", "186.797, -301.817, -39.2247, 0.37", "187.073, -302.97, -39.5571, 0.44", "187.293, -303.923, -39.8546, 0.44", "187.413, -304.419, -39.9755, 0.66", "187.622, -305.275, -40.1307, 0.66", "187.893, -306.43, -40.2815, 0.66", "188.234, -307.901, -40.3808, 0.44", "188.505, -309.397, -40.3835, 0.44", "188.756, -311.362, -40.2955, 0.44", "188.834, -312.27, -40.2605, 0.52", "188.823, -313.205, -40.2375, 0.59", "188.721, -313.99, -40.2387, 0.59", "188.556, -314.734, -40.2872, 0.59", "188.219, -315.946, -40.5268, 0.59", "187.872, -317.155, -40.8897, 0.59", "187.419, -318.905, -41.5496, 0.59", "187.262, -319.67, -41.8661, 0.59", "187.087, -321.26, -42.566, 0.59", "187.058, -322.382, -43.08, 0.59", "187.112, -323.189, -43.4341, 0.59", "187.417, -324.714, -44.017, 0.44", "187.852, -325.913, -44.4164, 0.44", "188.562, -327.422, -44.8103, 0.44", "188.775, -327.803, -44.8696, 0.74", "189.281, -328.597, -44.9299, 0.74", "189.886, -329.481, -44.9369, 0.74", "190.397, -330.217, -44.886, 0.52", "191.018, -331.14, -44.8141, 0.44", "191.639, -332.194, -44.7332, 0.44", "192.002, -332.853, -44.7018, 0.44", "192.467, -333.789, -44.6868, 0.44", "192.809, -334.572, -44.6897, 0.74", "193.031, -335.187, -44.7035, 0.37", "193.361, -336.365, -44.7279, 0.37", "193.57, -337.311, -44.7631, 0.37", "193.685, -337.866, -44.7911, 0.37", "193.913, -338.885, -44.8835, 0.37", "194.265, -340.222, -45.0276, 0.37", "194.523, -341.093, -45.1276, 0.37", "194.868, -342.138, -45.2816, 0.37", "195.14, -342.999, -45.4163, 0.37", "195.352, -343.758, -45.5485, 0.37", "195.525, -344.541, -45.7148, 0.37", "195.803, -345.73, -45.9875, 0.37", "196.182, -347.457, -46.4057, 0.37", "196.394, -348.647, -46.6809, 0.37", "196.5, -349.462, -46.8636, 0.37", "196.651, -351.093, -47.1948, 0.37", "196.744, -353.09, -47.622, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-24.9234, 46.6409, 2.56814, 1.4", "-25.8434, 47.0509, 2.56814, 1.4" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "78.9652, -144.267, 6.14065, 0.44", "79.6678, -145.302, 6.24409, 0.44", "80.3774, -146.257, 6.32493, 0.44", "81.0113, -147.062, 6.38208, 0.44", "81.8187, -148.081, 6.44064, 0.44", "82.5829, -148.993, 6.48451, 0.44", "83.12, -149.592, 6.5094, 0.44", "83.7406, -150.215, 6.51138, 0.44", "84.5107, -150.949, 6.51138, 0.44", "85.5298, -151.864, 6.51138, 0.44", "86.5401, -152.706, 6.51138, 0.44", "87.4153, -153.41, 6.51138, 0.44", "87.718, -153.657, 6.51138, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "78.9652, -144.267, 6.14065, 0.59", "80.0393, -145.91, 6.34818, 0.59", "80.4301, -146.529, 6.48188, 0.59", "81.0, -147.454, 6.70595, 0.59", "81.3856, -148.064, 6.85744, 0.59", "82.0056, -149.083, 7.10406, 0.44", "82.4648, -149.87, 7.28544, 0.44", "83.1983, -151.305, 7.57259, 0.44", "83.4764, -151.868, 7.69916, 0.44", "83.8109, -152.527, 7.86742, 0.44", "84.1205, -153.095, 8.03007, 0.44", "84.4575, -153.651, 8.21037, 0.44", "85.3676, -155.161, 8.6585, 0.44", "85.5414, -155.492, 8.7174, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "22.2477, -230.084, -23.0229, 0.37", "22.1093, -231.126, -23.192, 0.37", "22.0753, -231.749, -23.2789, 0.52", "22.0668, -232.778, -23.4068, 0.52", "22.0718, -233.853, -23.5245, 0.52", "22.0562, -234.725, -23.5946, 0.52", "22.0033, -235.718, -23.6553, 0.52", "21.9563, -236.584, -23.6783, 0.52", "21.9153, -237.096, -23.6803, 0.52", "21.8421, -237.92, -23.6854, 0.66", "21.7382, -238.915, -23.7217, 0.66", "21.6407, -239.657, -23.7827, 0.66", "21.5081, -240.454, -23.8777, 0.52", "21.3484, -241.228, -23.9929, 0.52", "21.0888, -242.309, -24.2212, 0.52", "20.8177, -243.484, -24.5083, 0.52", "20.7217, -243.996, -24.6368, 0.52", "20.6034, -244.769, -24.8159, 0.52", "20.5198, -245.39, -24.9503, 0.52", "20.3953, -246.734, -25.1899, 0.52", "20.3335, -248.087, -25.4026, 0.52", "20.341, -249.476, -25.6434, 0.52", "20.3826, -250.285, -25.813, 0.52", "20.4924, -251.429, -26.0764, 0.59", "20.7011, -253.131, -26.487, 0.59", "20.8421, -254.279, -26.7664, 0.74", "20.9152, -254.997, -26.9604, 0.96", "20.9575, -255.696, -27.1525, 0.96", "20.9768, -256.854, -27.469, 0.59", "20.9345, -257.894, -27.722, 0.37", "20.8471, -258.692, -27.8522, 0.37", "20.7057, -259.567, -27.9187, 0.37", "20.5843, -260.22, -27.9312, 0.37", "20.3054, -261.728, -27.9109, 0.37", "20.0252, -263.133, -27.8748, 0.52", "19.6996, -264.712, -27.8065, 0.81", "19.3924, -266.174, -27.7236, 0.81", "19.2545, -266.779, -27.6768, 1.11", "19.0766, -267.614, -27.5829, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "22.2477, -230.084, -23.0229, 0.81", "23.0438, -230.293, -22.7976, 0.81", "23.6633, -230.454, -22.6286, 0.81", "25.4903, -230.903, -21.9973, 0.81", "26.6993, -231.202, -21.5251, 0.52", "27.8357, -231.489, -21.0697, 0.44", "29.2342, -231.85, -20.5072, 0.44", "29.955, -232.038, -20.2023, 0.44", "31.6318, -232.508, -19.4331, 0.44", "32.8846, -232.901, -18.7989, 0.44", "33.5911, -233.134, -18.4338, 0.44", "33.8993, -233.249, -18.2792, 0.44", "34.813, -233.643, -17.771, 0.37", "36.0062, -234.192, -17.1039, 0.37", "36.9692, -234.661, -16.601, 0.37", "38.1346, -235.222, -15.9573, 0.37", "38.983, -235.647, -15.4833, 0.37", "40.2204, -236.296, -14.7788, 0.37", "40.7548, -236.577, -14.487, 0.37", "41.3777, -236.914, -14.1691, 0.37", "42.3407, -237.444, -13.6953, 0.37", "43.4312, -238.06, -13.1705, 0.37", "44.9231, -238.885, -12.4554, 0.37", "45.7324, -239.343, -12.1071, 0.37", "46.4687, -239.781, -11.7733, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-79.2718, -226.404, -50.7753, 0.66", "-79.9688, -226.869, -50.8713, 0.66", "-80.8215, -227.508, -51.0209, 0.66", "-81.5204, -228.076, -51.1081, 0.66", "-82.1657, -228.682, -51.1698, 1.03", "-82.6573, -229.211, -51.2129, 1.11", "-83.1821, -229.832, -51.2555, 0.81", "-83.7503, -230.6, -51.277, 0.44", "-84.2238, -231.381, -51.2922, 0.44", "-84.6412, -232.229, -51.3064, 0.44", "-84.9789, -233.142, -51.3166, 0.88", "-85.1268, -233.7, -51.3022, 0.59", "-85.2796, -234.455, -51.2698, 0.44", "-85.3917, -235.124, -51.2333, 0.44", "-85.4779, -235.753, -51.2066, 0.29", "-85.596, -236.641, -51.1431, 0.29", "-85.7558, -238.092, -51.0096, 0.37", "-85.8523, -239.047, -50.9505, 0.22", "-85.9371, -239.796, -50.9226, 0.37", "-86.1086, -240.895, -50.9197, 0.52", "-86.304, -241.822, -50.947, 0.22", "-86.5191, -242.591, -51.0026, 0.37", "-86.9134, -243.727, -51.15, 0.74", "-87.2151, -244.45, -51.2607, 0.59", "-87.5286, -245.046, -51.3643, 0.66", "-87.8581, -245.536, -51.4694, 0.66", "-88.1244, -245.854, -51.5452, 0.37", "-88.7199, -246.419, -51.6669, 0.37", "-89.2857, -246.872, -51.7345, 0.81", "-89.704, -247.187, -51.7778, 0.59", "-90.125, -247.509, -51.8373, 0.29", "-90.6022, -247.915, -51.9299, 0.29", "-91.1284, -248.401, -52.0584, 0.29", "-91.6562, -248.932, -52.1787, 0.29", "-91.9662, -249.252, -52.239, 0.66", "-92.6639, -249.966, -52.3422, 0.81", "-93.4503, -250.745, -52.4202, 0.81", "-94.0525, -251.323, -52.4629, 0.44", "-94.7201, -251.938, -52.4884, 0.37", "-95.2265, -252.392, -52.4871, 0.37", "-95.7412, -252.85, -52.4616, 0.59", "-96.0993, -253.185, -52.421, 0.52", "-96.5244, -253.598, -52.3788, 0.29", "-96.7611, -253.862, -52.3616, 0.59", "-97.3639, -254.655, -52.3547, 0.81", "-97.6626, -255.112, -52.3527, 0.29", "-98.0231, -255.744, -52.3264, 0.29", "-98.3684, -256.422, -52.2774, 0.29", "-98.7241, -257.156, -52.2058, 0.29", "-98.8627, -257.444, -52.1729, 0.74", "-99.0481, -257.839, -52.1212, 0.74", "-99.3909, -258.638, -52.037, 0.29", "-99.581, -259.206, -51.995, 0.44", "-99.7664, -259.92, -51.9626, 0.81", "-99.9616, -260.76, -51.946, 0.96", "-100.021, -261.013, -51.9539, 0.96", "-100.212, -262.067, -52.0228, 0.37", "-100.364, -263.188, -52.1835, 0.37", "-100.423, -263.846, -52.2995, 0.52", "-100.465, -264.662, -52.459, 0.52", "-100.532, -266.453, -52.8251, 0.37", "-100.595, -268.189, -53.2029, 0.37", "-100.609, -269.586, -53.5156, 0.37", "-100.598, -270.266, -53.673, 0.52", "-100.549, -270.985, -53.8426, 0.96", "-100.439, -271.844, -54.0276, 0.59", "-100.307, -272.577, -54.1573, 0.59", "-100.144, -273.579, -54.2925, 0.66", "-100.028, -274.286, -54.3419, 0.66", "-99.9422, -274.848, -54.3757, 0.59", "-99.7445, -276.202, -54.4389, 0.22", "-99.7077, -276.661, -54.4519, 0.52", "-99.7197, -277.294, -54.4246, 0.96", "-99.8126, -278.008, -54.361, 1.25", "-99.9972, -278.775, -54.2646, 0.52", "-100.175, -279.333, -54.2113, 0.44", "-100.596, -280.476, -54.1436, 0.44", "-100.964, -281.565, -54.1188, 0.44", "-101.16, -282.252, -54.154, 0.44", "-101.327, -283.026, -54.2702, 0.44", "-101.497, -284.234, -54.5582, 0.74", "-101.537, -284.639, -54.6805, 0.74", "-101.596, -285.668, -55.0497, 0.74", "-101.654, -286.583, -55.4083, 0.59", "-101.692, -287.27, -55.6337, 0.44", "-101.73, -287.993, -55.8144, 0.44", "-101.813, -288.942, -55.9612, 0.44", "-101.879, -289.88, -56.0576, 0.88", "-101.939, -290.576, -56.0896, 0.88", "-102.043, -291.497, -56.0787, 0.52", "-102.108, -292.07, -56.0585, 0.29", "-102.174, -292.708, -56.0364, 0.29", "-102.302, -294.205, -55.9865, 0.29", "-102.417, -295.24, -55.9649, 0.37", "-102.488, -295.83, -55.9679, 0.37", "-102.597, -296.648, -55.9945, 0.37", "-102.692, -297.466, -56.0236, 0.37", "-102.756, -298.141, -56.0486, 0.66", "-102.805, -299.122, -56.084, 0.81", "-102.789, -300.014, -56.113, 1.03", "-102.763, -300.635, -56.13, 1.11", "-102.703, -301.824, -56.1513, 0.37", "-102.673, -302.716, -56.1606, 0.37", "-102.654, -303.812, -56.1626, 0.29", "-102.646, -304.433, -56.1579, 0.29", "-102.668, -305.265, -56.1694, 0.29", "-102.738, -306.256, -56.197, 0.29", "-102.863, -307.199, -56.235, 0.29", "-103.082, -308.384, -56.2941, 0.29", "-103.262, -309.152, -56.3391, 0.44", "-103.56, -310.277, -56.4157, 0.59", "-103.777, -310.973, -56.4678, 0.59", "-104.097, -311.815, -56.5557, 0.29", "-104.272, -312.296, -56.612, 0.29", "-104.356, -312.548, -56.6498, 0.29", "-104.531, -313.161, -56.7622, 0.59", "-104.821, -314.281, -56.9797, 0.59", "-105.107, -315.427, -57.2557, 0.74", "-105.439, -316.802, -57.6175, 0.44", "-105.665, -317.796, -57.881, 0.74", "-105.848, -318.65, -58.1183, 0.37", "-106.078, -319.828, -58.4478, 0.37", "-106.231, -320.616, -58.6397, 1.11", "-106.435, -321.552, -58.8185, 1.11", "-106.69, -322.439, -58.9461, 0.81", "-106.87, -323.043, -58.9899, 0.37", "-107.128, -324.0, -59.0271, 0.22", "-107.362, -325.023, -59.0491, 0.22", "-107.432, -325.318, -59.0486, 0.37", "-107.697, -326.301, -59.0528, 0.37", "-107.987, -327.242, -59.0603, 0.37", "-108.226, -327.924, -59.0738, 0.81", "-108.491, -328.595, -59.1062, 0.37", "-108.838, -329.391, -59.1811, 0.37", "-109.447, -330.685, -59.3162, 0.37", "-109.904, -331.586, -59.4163, 0.37", "-110.61, -332.793, -59.5566, 0.37", "-110.993, -333.389, -59.6362, 0.37", "-111.525, -334.167, -59.764, 0.22", "-111.836, -334.616, -59.8508, 0.37", "-112.05, -334.91, -59.9151, 0.37", "-112.437, -335.435, -60.0332, 0.37", "-112.994, -336.205, -60.1895, 0.37", "-113.243, -336.537, -60.2485, 0.37", "-113.916, -337.419, -60.3689, 0.37", "-114.345, -337.932, -60.435, 0.37", "-115.251, -338.996, -60.5751, 0.59", "-115.775, -339.606, -60.6488, 0.59", "-116.19, -340.082, -60.6987, 0.81", "-116.808, -340.809, -60.7772, 0.37", "-117.679, -341.891, -60.8803, 0.37", "-118.719, -343.346, -60.9909, 0.37", "-119.435, -344.476, -61.052, 0.52", "-119.841, -345.24, -61.0971, 0.52", "-119.951, -345.507, -61.1128, 0.52", "-120.16, -346.223, -61.15, 0.59", "-120.287, -347.08, -61.2033, 0.29", "-120.324, -347.754, -61.2546, 0.29", "-120.327, -348.855, -61.3711, 0.29", "-120.331, -349.568, -61.4594, 0.44", "-120.329, -350.305, -61.5596, 0.59", "-120.317, -351.252, -61.7836, 0.29", "-120.319, -352.171, -62.0658, 0.29", "-120.323, -352.652, -62.234, 0.44", "-120.329, -353.056, -62.4072, 0.44", "-120.341, -353.629, -62.6844, 0.44", "-120.367, -355.245, -63.513, 0.52", "-120.376, -355.893, -63.8411, 0.52", "-120.369, -356.734, -64.2517, 0.52", "-120.358, -358.038, -64.794, 0.29", "-120.344, -358.588, -64.9627, 0.29", "-120.322, -359.054, -65.0431, 0.52", "-120.296, -359.532, -65.0544, 0.59", "-120.257, -360.306, -65.0334, 0.59", "-120.224, -361.425, -64.9462, 0.88", "-120.217, -362.252, -64.8504, 0.29", "-120.215, -363.15, -64.7454, 0.29", "-120.218, -364.387, -64.6047, 0.29", "-120.222, -365.109, -64.5297, 0.44", "-120.242, -365.935, -64.4531, 0.44", "-120.267, -366.892, -64.3888, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-79.2718, -226.404, -50.7753, 0.29", "-77.6854, -226.92, -50.8304, 0.29", "-76.7092, -227.228, -50.8593, 0.29", "-74.2383, -228.091, -50.9211, 0.29", "-72.5808, -228.73, -50.956, 0.29", "-71.4411, -229.223, -50.9765, 0.29", "-70.6046, -229.614, -51.0022, 0.29", "-70.1186, -229.862, -51.0143, 0.29", "-68.6544, -230.693, -51.0699, 0.29", "-67.4849, -231.446, -51.1313, 0.29", "-66.285, -232.298, -51.2172, 0.29", "-64.7443, -233.441, -51.3405, 0.29", "-63.5151, -234.375, -51.4487, 0.29", "-63.0474, -234.733, -51.4941, 0.29", "-62.3244, -235.263, -51.5747, 0.44", "-61.6437, -235.757, -51.6599, 0.52" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-25.8434, 47.0509, 2.56814, 1.03", "-26.0803, 47.2073, 2.63159, 1.03", "-26.7518, 47.7195, 2.73406, 0.81", "-27.4166, 48.2732, 2.78737, 0.81", "-27.9781, 48.757, 2.80982, 0.81", "-28.4003, 49.118, 2.81673, 0.88", "-28.9666, 49.5826, 2.81903, 0.88", "-29.6732, 50.1501, 2.83358, 0.88", "-30.3358, 50.6798, 2.85923, 0.74", "-30.9098, 51.0976, 2.93468, 0.74", "-31.6315, 51.5495, 3.1049, 1.03", "-32.0625, 51.7842, 3.24365, 1.03", "-32.9051, 52.1681, 3.64827, 1.03", "-33.295, 52.3248, 3.82552, 1.03", "-34.5346, 52.7763, 4.33232, 1.03", "-35.1952, 53.0106, 4.61743, 0.88", "-35.6787, 53.1808, 4.82309, 0.88", "-36.9521, 53.6397, 5.3385, 0.88", "-40.5502, 54.9881, 6.6663, 0.66", "-41.392, 55.3092, 6.9349, 0.66", "-42.6804, 55.8268, 7.26439, 0.59", "-43.4232, 56.1376, 7.43329, 0.59", "-43.8981, 56.3456, 7.51893, 0.59", "-44.4888, 56.6366, 7.56788, 0.59", "-45.3966, 57.213, 7.52137, 0.74", "-45.802, 57.5199, 7.43276, 0.74", "-45.9982, 57.689, 7.35908, 0.74", "-46.358, 58.0416, 7.21491, 0.74", "-46.5102, 58.2051, 7.15926, 0.88", "-47.232, 59.064, 6.95531, 0.81", "-47.6808, 59.6538, 6.86546, 0.81", "-48.0574, 60.1637, 6.81813, 0.81", "-48.35, 60.559, 6.80189, 0.88", "-48.8352, 61.215, 6.8087, 0.96", "-49.5219, 62.1268, 6.86268, 0.96", "-49.8936, 62.6124, 6.91852, 0.88", "-50.4216, 63.2801, 6.99798, 0.88", "-50.7054, 63.6245, 7.03835, 0.96", "-51.3556, 64.3953, 7.10288, 0.96", "-51.8313, 64.9351, 7.15353, 0.96", "-52.2098, 65.3542, 7.19669, 0.81", "-52.5808, 65.7646, 7.23673, 0.74", "-52.9555, 66.1866, 7.28549, 0.74", "-53.3844, 66.7131, 7.39843, 0.74", "-53.9585, 67.4873, 7.62604, 0.74", "-54.385, 68.1088, 7.86461, 0.74", "-54.7335, 68.6333, 8.10122, 0.74", "-55.1871, 69.3229, 8.44837, 0.74", "-55.7438, 70.1841, 8.91369, 0.74", "-56.0872, 70.6851, 9.23494, 0.52", "-56.5862, 71.3577, 9.68911, 0.59", "-56.7478, 71.5556, 9.83624, 0.74", "-56.9438, 71.7773, 9.98498, 0.74", "-57.1724, 72.0097, 10.1077, 0.74", "-58.1348, 72.9241, 10.4497, 0.81", "-58.5312, 73.3191, 10.5501, 1.4", "-58.799, 73.6142, 10.5855, 1.4", "-59.4536, 74.423, 10.6054, 0.88", "-59.7263, 74.7924, 10.5841, 0.59", "-60.0393, 75.2491, 10.5221, 0.52", "-60.3385, 75.7452, 10.3926, 0.52", "-60.4957, 76.0169, 10.3208, 0.52", "-60.7859, 76.5105, 10.1995, 0.52", "-61.0129, 76.9009, 10.148, 0.52" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "19.0766, -267.614, -27.5829, 0.37", "18.6084, -268.211, -27.3217, 0.37", "17.8927, -269.132, -26.9212, 0.37", "17.5707, -269.564, -26.7543, 0.37", "16.6293, -270.878, -26.3224, 0.37", "16.2826, -271.366, -26.1791, 0.37", "15.8741, -271.939, -26.0318, 0.37", "15.7122, -272.165, -25.9813, 0.37", "15.0549, -273.122, -25.8206, 0.37", "14.443, -274.031, -25.726, 0.37", "14.1801, -274.417, -25.7211, 0.37", "13.5409, -275.316, -25.7269, 0.37", "13.0353, -275.979, -25.7446, 0.37", "12.4209, -276.755, -25.7689, 0.37", "12.0855, -277.163, -25.7831, 0.37", "11.2378, -278.19, -25.7686, 0.52", "10.8684, -278.65, -25.7455, 0.52", "10.1842, -279.548, -25.6713, 0.52", "9.59677, -280.293, -25.5905, 0.52", "8.94488, -281.08, -25.4901, 0.52", "8.256, -281.876, -25.4154, 0.66", "7.98099, -282.212, -25.3973, 0.66", "7.08439, -283.282, -25.402, 0.37", "6.27139, -284.236, -25.4488, 0.37", "5.64855, -284.985, -25.4962, 0.37", "4.98788, -285.835, -25.5471, 1.03", "4.24059, -286.864, -25.6099, 0.44", "2.78703, -289.015, -25.6737, 0.44", "2.22481, -289.949, -25.6713, 0.44", "1.76417, -290.869, -25.637, 0.44", "1.38055, -291.776, -25.5691, 0.52", "1.27283, -292.107, -25.5324, 0.66", "1.14316, -292.61, -25.5078, 0.66", "1.03611, -293.259, -25.5277, 0.37", "0.91671, -294.009, -25.608, 0.37", "0.680396, -295.379, -25.8463, 0.37", "0.453746, -296.735, -26.1328, 0.37", "0.23535, -298.082, -26.4629, 0.37", "0.141018, -298.713, -26.6257, 0.37", "0.0040396, -299.652, -26.8825, 0.37", "-0.0818, -300.13, -27.0086, 0.37", "-0.235177, -300.818, -27.1807, 0.37", "-0.437193, -301.602, -27.3449, 0.59", "-0.761668, -302.797, -27.5136, 0.59", "-0.896344, -303.257, -27.5724, 0.59", "-1.35551, -304.708, -27.7642, 0.59", "-1.67343, -305.672, -27.8849, 0.37", "-1.87769, -306.264, -27.9508, 0.37", "-2.16734, -307.117, -28.022, 0.37", "-2.56275, -308.32, -28.1021, 0.37", "-2.93815, -309.522, -28.1601, 0.52", "-3.19516, -310.395, -28.2034, 0.52", "-3.42753, -311.156, -28.2385, 0.37", "-4.08544, -313.122, -28.3395, 0.37", "-4.4618, -314.149, -28.3957, 0.88", "-4.77815, -314.918, -28.4307, 1.03", "-5.00432, -315.411, -28.4443, 1.03", "-5.35597, -316.103, -28.5006, 0.44", "-5.78588, -316.878, -28.5818, 0.44", "-6.26836, -317.605, -28.6935, 0.44", "-6.61175, -318.068, -28.7849, 0.44", "-6.93147, -318.474, -28.8694, 0.44", "-7.71017, -319.471, -29.0583, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "19.0766, -267.614, -27.5829, 0.52", "19.9641, -268.083, -27.2642, 0.52", "20.7219, -268.474, -26.999, 0.37", "22.1757, -269.239, -26.5538, 0.59", "23.0572, -269.729, -26.3133, 0.59", "24.0597, -270.322, -26.0642, 0.52", "24.5011, -270.598, -25.9624, 0.52", "25.4273, -271.239, -25.7722, 0.37", "26.7036, -272.223, -25.5614, 0.37", "27.6124, -273.029, -25.4726, 0.37", "28.2179, -273.629, -25.4169, 0.37", "28.6639, -274.118, -25.3829, 0.37", "29.3368, -274.927, -25.3484, 0.37", "29.6537, -275.352, -25.3185, 0.37", "30.3363, -276.414, -25.2189, 0.37", "30.8828, -277.383, -25.1155, 0.37", "31.4759, -278.571, -24.9993, 0.37", "32.061, -279.902, -24.8816, 0.37", "32.5746, -281.274, -24.7753, 0.37", "32.9496, -282.46, -24.6971, 0.37", "33.1271, -283.261, -24.6561, 0.37", "33.2415, -284.031, -24.6327, 0.37", "33.3085, -284.649, -24.6309, 0.44", "33.3893, -285.354, -24.6554, 0.44", "33.5111, -286.067, -24.7128, 0.44", "33.6788, -286.742, -24.7445, 0.44", "34.0172, -287.665, -24.7675, 0.44", "34.367, -288.349, -24.7675, 0.52", "34.6387, -288.788, -24.7675, 0.52", "34.9065, -289.171, -24.7675, 0.52", "35.4024, -289.856, -24.7675, 0.52", "36.2751, -291.051, -24.7675, 0.52", "37.0314, -292.16, -24.7675, 0.66", "37.2056, -292.421, -24.7611, 0.37", "37.4324, -292.779, -24.7446, 0.37", "37.7767, -293.383, -24.7109, 0.37", "38.0808, -293.987, -24.673, 0.37", "38.458, -294.842, -24.6169, 0.52", "38.6485, -295.299, -24.5892, 0.52", "38.9754, -296.093, -24.5775, 0.52", "39.3731, -297.023, -24.608, 0.44", "39.6946, -297.734, -24.6725, 0.44", "40.0197, -298.503, -24.7776, 0.88", "40.4023, -299.421, -24.9378, 0.88", "40.9115, -300.724, -25.1612, 0.88", "41.2824, -301.728, -25.3083, 0.88", "41.4717, -302.267, -25.3687, 0.66", "41.76, -303.127, -25.4527, 0.52", "42.0371, -303.984, -25.5165, 0.52", "42.4332, -305.155, -25.5919, 0.37", "42.7776, -306.246, -25.6381, 0.37", "43.0361, -307.102, -25.6739, 0.66", "43.1567, -307.488, -25.691, 0.66", "43.3929, -308.182, -25.7397, 0.66", "43.688, -309.077, -25.7933, 0.44", "44.2041, -310.476, -25.8692, 0.37", "44.388, -310.972, -25.8906, 0.37", "44.5777, -311.5, -25.9041, 0.37", "44.8146, -312.152, -25.9108, 0.37", "45.1307, -312.991, -25.9154, 0.37", "45.4209, -313.801, -25.9098, 0.37", "45.7761, -314.859, -25.9333, 0.59", "45.851, -315.14, -25.9479, 0.59", "46.0006, -315.784, -26.0083, 0.29", "46.1109, -316.222, -26.0637, 0.29", "46.3512, -317.111, -26.1874, 0.29", "46.4811, -317.573, -26.2311, 0.52", "46.7453, -318.363, -26.2737, 0.52", "46.9371, -318.894, -26.2963, 0.44", "47.2558, -319.831, -26.324, 0.37", "47.7185, -321.318, -26.3636, 0.37", "48.0262, -322.358, -26.3698, 0.37", "48.195, -322.991, -26.3628, 0.37", "48.3991, -323.745, -26.342, 0.37", "48.5938, -324.528, -26.2957, 0.37", "48.7861, -325.312, -26.2354, 0.37", "49.1784, -326.788, -26.0999, 0.37", "49.2894, -327.183, -26.0614, 0.37", "49.7882, -328.791, -25.9107, 0.37", "50.1649, -329.831, -25.8202, 0.37", "50.5631, -330.795, -25.6883, 0.37", "50.7438, -331.22, -25.6145, 0.52", "51.0208, -331.937, -25.4726, 0.52", "51.3058, -332.826, -25.2518, 0.37", "51.5228, -333.702, -25.0006, 0.37", "51.8366, -335.186, -24.5649, 0.37", "51.9544, -335.864, -24.3685, 0.66", "52.0725, -336.617, -24.1608, 0.66", "52.2468, -337.656, -23.8989, 0.66", "52.4058, -338.554, -23.7022, 0.52", "52.5845, -339.444, -23.5492, 0.52", "52.9623, -341.124, -23.3743, 0.52", "53.0693, -341.586, -23.3428, 0.37", "53.3177, -342.715, -23.3157, 0.37", "53.4124, -343.213, -23.3366, 0.52", "53.4557, -343.48, -23.3226, 0.52", "53.5753, -344.384, -23.183, 0.59", "53.6608, -345.277, -22.9602, 0.88", "53.7176, -346.117, -22.6842, 0.88", "53.7217, -346.807, -22.4351, 0.88", "53.6534, -349.241, -21.5328, 0.59", "53.6146, -349.793, -21.3177, 0.52", "53.5233, -350.886, -20.8498, 0.52", "53.4411, -352.187, -20.2727, 0.44", "53.3696, -353.397, -19.7183, 0.44", "53.3381, -354.063, -19.4265, 0.44", "53.2724, -355.486, -18.9167, 0.44", "53.2435, -356.38, -18.5813, 0.44", "53.2322, -357.192, -18.2085, 0.44", "53.2694, -358.206, -17.7057, 0.59", "53.3086, -358.754, -17.429, 0.59", "53.377, -359.458, -17.1021, 0.59", "53.4735, -360.507, -16.6856, 0.59", "53.5528, -362.034, -16.1857, 0.59", "53.5758, -363.106, -15.8987, 0.59", "53.5926, -363.987, -15.7387, 0.59", "53.5932, -364.902, -15.6146, 0.74", "53.614, -366.274, -15.495, 0.44", "53.6617, -367.443, -15.4558, 0.44", "53.7424, -368.801, -15.4496, 0.44", "53.8409, -369.97, -15.4527, 0.44", "53.9594, -370.984, -15.4627, 0.44", "54.1096, -372.129, -15.4832, 0.59", "54.3243, -373.303, -15.5148, 0.59", "54.5969, -374.475, -15.561, 0.59", "54.8228, -375.311, -15.5994, 0.59", "55.0744, -376.29, -15.6433, 0.59", "55.2483, -377.115, -15.7109, 0.52", "55.4426, -378.42, -15.8593, 0.52", "55.5377, -379.336, -15.9476, 0.52", "55.5913, -380.225, -16.0161, 0.37", "55.6331, -381.394, -16.0801, 0.37", "55.6802, -382.878, -16.1674, 0.37", "55.6935, -383.245, -16.188, 0.37", "55.7388, -384.543, -16.2919, 0.37", "55.8067, -385.553, -16.3623, 0.37", "55.9451, -386.789, -16.4597, 0.37", "56.0791, -387.617, -16.5299, 0.37", "56.2157, -388.574, -16.63, 0.37", "56.2959, -389.532, -16.7543, 0.37", "56.3538, -390.526, -16.9355, 0.37", "56.39, -391.295, -17.0686, 0.37", "56.3971, -391.827, -17.1609, 0.37", "56.3834, -393.272, -17.4187, 0.37", "56.3889, -394.67, -17.6806, 0.37", "56.4147, -396.552, -18.0454, 0.37", "56.446, -397.422, -18.2455, 0.37", "56.6179, -400.223, -18.9876, 0.37", "56.7698, -401.754, -19.4264, 0.37", "56.9056, -402.728, -19.7354, 0.37", "57.1237, -404.053, -20.1936, 0.37", "57.385, -405.608, -20.7428, 0.37", "57.6386, -406.727, -21.1431, 0.59", "57.8236, -407.491, -21.4229, 0.81", "58.0409, -408.417, -21.77, 0.96", "58.2223, -409.289, -22.0682, 0.96", "58.4305, -410.335, -22.3772, 0.44", "58.7398, -412.108, -22.8473, 0.44", "59.191, -414.998, -23.55, 0.44", "59.4092, -416.529, -23.9025, 0.44", "59.6093, -418.051, -24.2175, 0.44", "59.8092, -419.819, -24.6127, 0.44", "59.8972, -420.744, -24.8204, 0.74", "59.9426, -421.417, -24.9668, 0.81", "60.0323, -422.587, -25.1851, 0.52", "60.1182, -423.902, -25.4565, 0.37", "60.2465, -425.673, -25.8663, 0.37", "60.4151, -427.135, -26.2687, 0.37", "60.6995, -428.905, -26.7863, 0.37", "60.8203, -429.572, -26.9929, 0.37", "61.1378, -431.219, -27.5574, 0.37", "61.3626, -432.366, -27.9639, 0.37", "61.6376, -433.986, -28.5571, 0.37", "61.7215, -434.801, -28.8846, 0.37", "61.7565, -435.819, -29.2779, 0.37", "61.7441, -436.573, -29.577, 0.59", "61.6455, -437.598, -29.9513, 0.59", "61.4959, -438.612, -30.3329, 0.59", "61.2657, -439.765, -30.7372, 0.59", "60.9518, -441.303, -31.2935, 0.59", "60.621, -443.054, -31.9311, 0.59", "60.4345, -444.174, -32.3182, 0.59", "60.229, -445.68, -32.8524, 0.59", "60.0869, -446.915, -33.2695, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-120.267, -366.892, -64.3888, 0.44", "-120.377, -367.405, -64.6348, 0.44", "-120.53, -368.145, -65.1168, 0.44", "-120.668, -368.974, -65.681, 0.44", "-120.768, -369.699, -66.0974, 0.44", "-120.937, -370.819, -66.6244, 0.52", "-121.109, -371.758, -67.0332, 0.52", "-121.49, -373.42, -67.6711, 0.74", "-121.674, -374.095, -67.9276, 0.81", "-122.089, -375.486, -68.4202, 1.11", "-122.443, -376.598, -68.8653, 0.59", "-122.874, -377.844, -69.3657, 0.44", "-123.33, -379.093, -69.8848, 0.44", "-123.876, -380.506, -70.4498, 0.44", "-124.108, -381.07, -70.6972, 0.44", "-124.744, -382.587, -71.4073, 0.44", "-125.111, -383.491, -71.7851, 0.74", "-125.303, -383.961, -71.9414, 1.03", "-125.588, -384.613, -72.1167, 0.59", "-126.046, -385.604, -72.2811, 0.37", "-126.48, -386.528, -72.38, 0.37", "-127.007, -387.609, -72.4093, 0.37", "-127.302, -388.206, -72.4231, 0.52", "-127.582, -388.73, -72.4391, 0.52", "-127.773, -389.067, -72.4511, 0.52", "-128.38, -390.076, -72.5442, 0.52", "-129.288, -391.394, -72.734, 0.52", "-129.595, -391.823, -72.8014, 0.52", "-130.39, -392.894, -73.0004, 0.29", "-130.659, -393.242, -73.0784, 0.29", "-131.478, -394.189, -73.3529, 0.66", "-132.115, -394.762, -73.5986, 0.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-120.267, -366.892, -64.3888, 0.29", "-118.25, -365.05, -65.1558, 0.29", "-117.55, -364.433, -65.372, 0.29", "-116.746, -363.724, -65.6206, 0.29", "-115.932, -363.006, -65.872, 0.29", "-115.444, -362.575, -66.0229, 0.29", "-114.868, -362.067, -66.2007, 0.29", "-114.33, -361.628, -66.2007, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-61.0129, 76.9009, 10.148, 0.59", "-62.356, 77.5499, 7.81588, 0.59", "-62.6977, 77.7307, 7.40292, 0.59", "-63.7202, 78.352, 6.55835, 0.81", "-64.1257, 78.6237, 6.28438, 0.66", "-64.8678, 79.183, 5.7933, 0.52", "-65.4242, 79.6468, 5.39599, 0.52", "-66.2932, 80.4954, 4.92726, 0.52", "-66.9758, 81.2521, 4.54887, 0.52", "-67.4833, 81.8589, 4.27547, 0.52", "-68.0146, 82.4861, 3.98272, 0.52", "-68.8671, 83.4959, 3.51438, 0.52", "-69.1469, 83.8323, 3.34412, 0.52", "-69.4597, 84.2496, 3.08609, 0.74", "-69.9722, 84.9178, 2.62757, 0.22", "-70.4752, 85.5574, 2.20451, 0.22", "-70.7982, 85.9335, 1.9706, 0.22", "-70.836, 85.977, 1.94455, 0.59", "-71.6899, 86.9807, 1.20126, 0.52", "-71.9698, 87.3568, 0.841933, 0.52", "-72.0721, 87.5969, 0.55149, 0.52" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-61.0129, 76.9009, 10.148, 0.52", "-61.3749, 77.3004, 11.0054, 0.52", "-62.6009, 78.522, 13.349, 0.74", "-62.6345, 78.5535, 13.4017, 1.03", "-62.7974, 78.7043, 13.6181, 0.96", "-63.6817, 79.5217, 14.6382, 0.74", "-64.0582, 79.8679, 15.0225, 0.74", "-64.4734, 80.2345, 15.3947, 0.74", "-65.2553, 80.9309, 15.826, 0.74", "-65.7753, 81.3826, 16.0896, 0.74", "-66.1961, 81.73, 16.2716, 0.74", "-67.0642, 82.438, 16.4844, 0.96" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.71017, -319.471, -29.0583, 0.44", "-8.22353, -320.776, -27.0244, 0.44", "-8.40163, -321.228, -26.3187, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.71017, -319.471, -29.0583, 0.44", "-8.42413, -319.72, -29.0583, 0.44", "-9.4522, -320.225, -29.0583, 0.44", "-10.335, -320.659, -29.0583, 0.44", "-11.2317, -321.1, -29.0583, 0.44", "-12.4218, -321.685, -29.0583, 0.44", "-13.2687, -322.102, -29.0583, 0.44", "-13.6703, -322.389, -29.0583, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "60.0869, -446.915, -33.2695, 0.37", "60.2262, -448.084, -33.3782, 0.37", "60.3947, -449.572, -33.6056, 0.37", "60.4552, -451.001, -33.8553, 0.37", "60.4276, -452.647, -34.145, 0.37", "60.3834, -453.515, -34.3157, 0.59", "60.3356, -454.171, -34.446, 0.59", "60.2083, -455.314, -34.6734, 0.59", "59.9103, -457.15, -35.0469, 0.59", "59.6821, -458.386, -35.2927, 0.88", "59.5572, -459.31, -35.4865, 0.81", "59.3103, -460.847, -35.7761, 0.44", "59.0974, -462.012, -35.9725, 0.44", "58.9242, -462.868, -36.0853, 0.44", "58.8085, -463.382, -36.1373, 0.74", "58.1584, -465.189, -36.2061, 0.29", "57.2454, -467.086, -36.1689, 0.29", "56.7685, -467.841, -36.1375, 0.29", "56.459, -468.279, -36.1132, 0.59", "55.7046, -469.37, -36.0209, 0.29", "54.7236, -470.838, -35.8673, 0.22", "54.295, -471.461, -35.7884, 1.11", "53.7923, -472.334, -35.697, 0.52", "53.2919, -473.226, -35.6071, 0.52", "52.8771, -474.029, -35.5398, 0.52", "52.5768, -474.657, -35.5185, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "60.0869, -446.915, -33.2695, 0.37", "59.144, -446.159, -33.3559, 0.37", "57.6639, -445.205, -33.4673, 0.37", "56.9778, -444.858, -33.5121, 0.37", "55.392, -444.271, -33.6043, 0.37", "54.1876, -443.924, -33.6719, 0.37", "53.2615, -443.593, -33.6971, 0.37", "52.3293, -442.985, -33.4929, 0.37", "52.7674, -443.773, -33.7997, 0.37", "53.073, -444.714, -34.1601, 0.37", "53.5588, -446.345, -34.7816, 0.37", "54.6499, -448.89, -35.8169, 0.37", "55.0432, -449.498, -36.1088, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-132.115, -394.762, -73.5986, 0.37", "-132.575, -395.21, -73.7477, 0.37", "-133.212, -395.879, -73.9815, 0.37", "-133.608, -396.335, -74.1326, 0.37", "-134.321, -397.211, -74.3988, 0.37", "-135.106, -398.202, -74.6679, 0.66", "-135.726, -398.994, -74.8627, 0.66", "-136.16, -399.604, -74.9978, 0.66", "-136.534, -400.173, -75.164, 0.66", "-136.889, -400.772, -75.3543, 0.66", "-137.388, -401.663, -75.6414, 0.66", "-137.935, -402.574, -75.9497, 0.66", "-138.466, -403.422, -76.2684, 0.96", "-139.466, -404.906, -76.8461, 0.37", "-140.113, -405.814, -77.208, 0.37", "-140.586, -406.446, -77.4581, 0.37", "-140.987, -406.975, -77.6532, 0.29", "-141.601, -407.772, -77.903, 0.29", "-142.119, -408.459, -78.0371, 0.29", "-142.59, -409.189, -78.0625, 0.29", "-142.86, -409.68, -78.0609, 0.29", "-143.155, -410.31, -78.0368, 0.29", "-143.352, -410.786, -77.9648, 0.66", "-143.703, -411.701, -77.7663, 0.29", "-144.022, -412.569, -77.5368, 0.29", "-144.324, -413.301, -77.3289, 0.29", "-144.723, -414.197, -77.0421, 0.29", "-145.405, -415.609, -76.5543, 0.29", "-145.76, -416.287, -76.3199, 0.74", "-145.935, -416.6, -76.2174, 0.81", "-146.476, -417.525, -75.9217, 0.44", "-146.941, -418.314, -75.696, 0.44", "-147.172, -418.728, -75.6039, 0.59", "-147.653, -419.614, -75.4853, 0.59", "-147.97, -420.2, -75.41, 0.81", "-148.259, -420.711, -75.3493, 0.44", "-148.87, -421.66, -75.2508, 0.44", "-149.308, -422.179, -75.2198, 0.44", "-149.686, -422.535, -75.2001, 0.66", "-150.201, -422.953, -75.1799, 0.66", "-150.839, -423.436, -75.1704, 0.44", "-151.672, -424.07, -75.1766, 0.44", "-152.611, -424.806, -75.2039, 0.44", "-153.461, -425.528, -75.2329, 0.44", "-153.881, -425.918, -75.2718, 0.44", "-154.368, -426.419, -75.3383, 0.52", "-155.142, -427.289, -75.4693, 0.52", "-155.924, -428.239, -75.6171, 0.52", "-156.406, -428.831, -75.7117, 0.52", "-157.709, -430.372, -75.9456, 0.29", "-158.461, -431.18, -76.0574, 0.29", "-159.11, -431.816, -76.1778, 0.44", "-159.754, -432.395, -76.3121, 0.44", "-160.822, -433.292, -76.5439, 0.44", "-162.265, -434.444, -76.7998, 0.44", "-163.491, -435.405, -76.9649, 0.44", "-164.799, -436.413, -77.0757, 0.44", "-165.936, -437.253, -77.1142, 0.44", "-166.448, -437.606, -77.1099, 0.59", "-168.271, -438.789, -77.0188, 0.37", "-169.227, -439.376, -76.9317, 0.37", "-170.594, -440.222, -76.7477, 0.37", "-172.429, -441.366, -76.419, 0.37", "-173.178, -441.851, -76.2914, 0.52", "-173.858, -442.324, -76.188, 0.74", "-174.344, -442.716, -76.1185, 0.52", "-174.954, -443.337, -76.0167, 0.37", "-175.445, -444.067, -75.9247, 0.37", "-175.711, -444.732, -75.8245, 0.37", "-175.92, -445.389, -75.7526, 0.37", "-176.212, -446.554, -75.6659, 0.37", "-176.39, -447.299, -75.6338, 0.37", "-176.55, -447.948, -75.6246, 0.66", "-176.882, -449.142, -75.6979, 0.66", "-177.193, -450.082, -75.8184, 0.52", "-177.529, -451.006, -75.9928, 0.52", "-177.823, -451.805, -76.2024, 0.44", "-178.011, -452.346, -76.3471, 0.52", "-178.333, -453.403, -76.6098, 0.37", "-178.411, -453.69, -76.672, 0.37", "-178.623, -454.465, -76.7999, 0.37", "-178.82, -455.136, -76.898, 0.37", "-179.13, -456.215, -77.0246, 0.37", "-179.41, -457.167, -77.049, 0.37", "-179.624, -457.848, -76.9989, 0.37", "-179.817, -458.4, -76.9186, 0.37", "-180.06, -459.012, -76.7888, 0.37", "-180.236, -459.391, -76.685, 0.74", "-180.763, -460.406, -76.3709, 0.59", "-181.116, -461.002, -76.1345, 0.37", "-181.657, -461.839, -75.7754, 0.29", "-182.165, -462.572, -75.4387, 0.29", "-182.49, -463.005, -75.2377, 0.29", "-183.204, -463.915, -74.8373, 0.29", "-183.977, -464.807, -74.4839, 0.29", "-184.758, -465.63, -74.1645, 0.29", "-185.496, -466.342, -73.9112, 0.52", "-185.947, -466.749, -73.7777, 0.52", "-186.348, -467.091, -73.6894, 0.52", "-187.086, -467.644, -73.598, 0.52", "-187.669, -468.069, -73.5867, 0.52", "-188.167, -468.386, -73.5934, 0.29", "-188.68, -468.668, -73.6167, 0.29", "-189.628, -469.069, -73.6532, 0.29", "-190.147, -469.268, -73.6714, 0.29", "-190.778, -469.495, -73.6894, 0.29", "-191.722, -469.774, -73.7031, 0.22", "-192.493, -469.945, -73.7152, 0.22", "-193.59, -470.106, -73.7335, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-132.115, -394.762, -73.5986, 0.37", "-133.025, -394.318, -73.5884, 0.37", "-134.165, -393.611, -73.4909, 0.37", "-135.593, -392.628, -73.3286, 0.15", "-136.212, -392.142, -73.2982, 0.15", "-137.599, -391.002, -73.2839, 0.15", "-138.381, -390.356, -73.2906, 0.15", "-139.398, -389.514, -73.2873, 0.15", "-140.402, -388.643, -73.2572, 0.15", "-141.854, -387.259, -73.262, 0.15", "-143.231, -385.931, -73.3452, 0.15", "-144.088, -385.131, -73.4878, 0.15", "-144.483, -384.797, -73.5716, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-72.0721, 87.5969, 0.55149, 0.59", "-71.8676, 87.7775, 0.774597, 0.59", "-70.9053, 88.5199, 1.59545, 0.29", "-70.6011, 88.7154, 1.78547, 0.29", "-70.1557, 89.0018, 2.02347, 0.15", "-69.4242, 89.4607, 2.37797, 0.07", "-68.9245, 89.7461, 2.59801, 0.07", "-68.3651, 90.0214, 2.78217, 0.07", "-67.474, 90.4056, 2.99044, 0.07", "-66.04, 90.9697, 3.36162, 0.07", "-65.7011, 91.0968, 3.45308, 0.07", "-65.0633, 91.3283, 3.61846, 0.07", "-64.3704, 91.5927, 3.82761, 0.07", "-64.1255, 91.6947, 3.90833, 0.37", "-63.2271, 92.0592, 4.19971, 0.15", "-62.7549, 92.2341, 4.33741, 0.15", "-62.2173, 92.483, 4.50107, 0.15", "-61.7495, 92.7317, 4.65056, 0.15", "-61.1881, 93.045, 4.82901, 0.15", "-60.4759, 93.4249, 5.02291, 0.15", "-60.1889, 93.5622, 5.06966, 0.15", "-59.5072, 93.8364, 5.18233, 0.15" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-72.0721, 87.5969, 0.55149, 0.37", "-72.6798, 87.7078, 0.391933, 0.37", "-73.1116, 87.7888, 0.312824, 0.37", "-73.6924, 87.9086, 0.232675, 0.44", "-74.0738, 87.9942, 0.00421548, 0.66", "-74.4546, 88.0796, -0.223854, 0.66", "-75.0253, 88.2076, -0.565673, 0.52", "-75.7928, 88.3804, -1.08599, 0.29", "-76.2266, 88.4812, -1.4479, 0.37", "-78.5789, 89.0667, -3.92792, 0.37" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-67.0642, 82.438, 16.4844, 0.96", "-67.7116, 82.652, 16.5797, 0.66", "-68.1606, 82.7961, 16.6498, 0.66", "-68.6777, 82.9517, 16.7294, 0.59", "-69.3821, 83.145, 16.8508, 0.52", "-71.3019, 83.6167, 17.1886, 0.52", "-72.17, 83.8075, 17.3368, 0.59", "-72.5667, 83.8924, 17.4142, 0.81", "-73.0849, 83.9327, 17.5199, 0.52", "-73.669, 83.9015, 17.6479, 0.52", "-74.4348, 83.7572, 17.7779, 0.52", "-75.2218, 83.5035, 17.8651, 0.52", "-76.102, 83.1883, 17.9116, 0.52", "-78.152, 82.464, 17.9005, 0.52", "-78.7701, 82.2541, 17.864, 0.52", "-79.9079, 81.9042, 17.728, 0.59", "-80.5818, 81.7341, 17.6087, 0.74", "-80.8131, 81.6985, 17.5526, 0.88", "-81.6525, 81.7213, 17.2941, 0.88", "-81.9838, 81.8195, 17.1893, 0.74", "-82.4274, 82.0139, 17.0797, 0.59", "-82.9819, 82.2952, 16.9857, 0.37", "-83.3851, 82.5122, 16.9578, 0.29", "-83.9434, 82.8043, 16.9403, 0.37", "-84.6588, 83.1593, 16.9489, 0.52", "-86.216, 83.8694, 17.0735, 0.52", "-86.7528, 84.0809, 17.151, 0.59", "-88.0095, 84.4677, 17.4072, 0.66", "-88.981, 84.6758, 17.6468, 0.66", "-89.4032, 84.7229, 17.7683, 0.66", "-90.4108, 84.7477, 18.1232, 0.66", "-91.0693, 84.7214, 18.3558, 0.66", "-91.6295, 84.7225, 18.5179, 0.66", "-91.9602, 84.7376, 18.596, 0.66", "-92.4639, 84.767, 18.7299, 0.66", "-93.4401, 84.8076, 18.9461, 0.66", "-94.2179, 84.8382, 19.0978, 0.66", "-95.1055, 84.8702, 19.2771, 0.66", "-95.8673, 84.8881, 19.4259, 0.66", "-96.8067, 84.9059, 19.5865, 0.59", "-98.0385, 84.8969, 19.7151, 0.59", "-98.9009, 84.8676, 19.7544, 0.66", "-99.8792, 84.8146, 19.7849, 0.66", "-100.206, 84.7946, 19.7859, 0.66", "-101.852, 84.7106, 19.7034, 0.66", "-102.945, 84.7054, 19.5865, 0.96", "-103.192, 84.719, 19.5408, 0.96" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-67.0642, 82.438, 16.4844, 0.52", "-67.2379, 83.5176, 16.4863, 0.52", "-67.4594, 84.7352, 16.438, 0.37", "-67.5866, 85.2615, 16.4076, 0.37", "-67.8931, 86.2323, 16.3831, 0.29", "-68.1047, 86.7941, 16.3818, 0.52", "-68.3127, 87.2917, 16.3796, 0.52", "-68.861, 88.326, 16.3549, 0.29", "-69.3155, 89.0727, 16.3259, 0.22", "-69.8457, 89.8075, 16.264, 0.22", "-70.2929, 90.3147, 16.1972, 0.22", "-70.5501, 90.5848, 16.1523, 0.37", "-71.0012, 91.0458, 16.0667, 0.59", "-71.3419, 91.4076, 15.999, 0.44", "-71.7154, 91.8648, 15.9118, 0.29", "-72.0705, 92.3575, 15.8216, 0.29", "-72.4393, 92.8822, 15.7551, 0.29", "-72.917, 93.5686, 15.7116, 0.29", "-73.189, 93.9423, 15.7066, 0.29", "-73.708, 94.5734, 15.7827, 0.22", "-74.076, 94.9813, 15.8886, 0.15", "-74.4415, 95.3415, 16.0082, 0.59", "-74.6218, 95.4992, 16.0825, 0.59", "-75.3314, 96.0733, 16.3761, 0.15", "-76.4085, 96.9049, 16.7999, 0.29", "-76.7986, 97.1933, 16.9323, 0.44", "-77.8533, 97.971, 17.2506, 0.29", "-78.5793, 98.523, 17.4455, 0.37", "-79.5421, 99.2669, 17.6688, 0.15", "-80.0313, 99.6523, 17.7597, 0.15", "-80.8705, 100.32, 17.8953, 0.15", "-81.1113, 100.507, 17.9443, 0.29", "-81.8401, 101.053, 18.1183, 0.29", "-82.7751, 101.724, 18.3407, 0.29", "-83.0916, 101.944, 18.4326, 0.52", "-83.935, 102.527, 18.6979, 0.37", "-84.7243, 103.101, 18.9612, 0.29", "-85.2788, 103.508, 19.1454, 0.22", "-85.8032, 103.892, 19.3112, 0.22", "-86.0863, 104.106, 19.393, 0.22", "-86.4689, 104.397, 19.4863, 0.22", "-87.0516, 104.86, 19.5419, 0.29" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.40163, -321.228, -26.3187, 0.44", "-8.45146, -321.897, -26.4057, 0.44", "-8.48859, -322.915, -26.5178, 0.44", "-8.52814, -323.952, -26.5519, 0.59", "-8.59192, -324.819, -26.541, 0.81", "-8.66077, -325.465, -26.5173, 0.81", "-8.79308, -326.365, -26.4708, 0.37", "-8.96811, -327.139, -26.4048, 0.37", "-9.2756, -328.138, -26.2866, 0.59", "-9.62496, -329.001, -26.115, 0.74", "-9.76548, -329.295, -26.05, 0.52", "-10.076, -329.877, -25.9192, 0.37", "-10.5057, -330.616, -25.7381, 0.37", "-11.1755, -331.739, -25.4743, 0.37", "-11.7857, -332.797, -25.2508, 0.29", "-12.4127, -333.969, -25.0039, 0.29", "-12.6383, -334.409, -24.9147, 0.88", "-13.1587, -335.436, -24.7217, 0.44", "-13.7328, -336.546, -24.5442, 0.44", "-13.9686, -336.996, -24.4903, 0.44", "-14.4521, -337.897, -24.431, 0.44", "-14.7501, -338.418, -24.4056, 0.44", "-15.35, -339.437, -24.4044, 0.44", "-16.0446, -340.555, -24.46, 0.44", "-16.5021, -341.246, -24.5072, 0.44", "-17.0132, -341.992, -24.5422, 0.44", "-17.6526, -342.907, -24.5641, 0.44", "-18.1051, -343.588, -24.5276, 0.37", "-18.7726, -344.666, -24.4745, 0.37", "-19.1344, -345.318, -24.3975, 0.59", "-19.6565, -346.358, -24.2231, 0.59", "-20.3882, -347.925, -23.9642, 0.59", "-20.9509, -349.191, -23.7566, 0.59", "-21.6175, -350.817, -23.5082, 0.44", "-22.2928, -352.804, -23.2914, 0.44", "-22.396, -353.173, -23.2601, 0.44", "-22.7135, -354.74, -23.1858, 0.66", "-22.7929, -355.399, -23.1641, 0.66", "-22.8815, -356.798, -23.1452, 0.59", "-22.8644, -358.156, -23.0833, 0.59", "-22.7821, -359.03, -23.0739, 0.59", "-22.6186, -360.136, -23.0356, 0.59", "-22.3702, -361.373, -22.9595, 0.44", "-22.1858, -362.284, -22.9112, 0.44", "-22.0047, -363.262, -22.8718, 0.44", "-21.8256, -364.6, -22.8232, 0.44", "-21.8025, -365.061, -22.811, 0.74", "-21.8647, -366.381, -22.7633, 0.37", "-21.9505, -367.118, -22.7319, 0.37", "-22.1148, -368.145, -22.6836, 0.37", "-22.4109, -369.77, -22.6035, 0.29", "-22.5983, -370.937, -22.5456, 0.29", "-22.6717, -371.88, -22.5113, 0.29", "-22.629, -373.312, -22.483, 0.29", "-22.5669, -373.748, -22.482, 0.66", "-22.3272, -374.604, -22.4961, 0.66", "-21.8967, -375.608, -22.5386, 0.29", "-21.2082, -376.855, -22.5997, 0.29", "-20.422, -378.085, -22.6651, 0.29", "-19.8097, -378.974, -22.7134, 0.29", "-19.0715, -379.991, -22.7978, 0.29", "-18.3848, -380.865, -22.8906, 0.29", "-17.8716, -381.473, -22.9993, 0.44", "-17.1778, -382.238, -23.1812, 0.44", "-16.3507, -383.078, -23.4262, 0.44", "-15.462, -383.95, -23.7074, 0.44", "-14.4282, -384.999, -24.0228, 0.44", "-13.3011, -386.207, -24.339, 0.44", "-12.7969, -386.809, -24.4813, 0.44", "-12.0831, -387.733, -24.671, 0.44", "-11.6877, -388.313, -24.762, 0.44", "-10.9733, -389.601, -24.9075, 0.44", "-10.5854, -390.511, -25.0271, 0.44", "-10.105, -391.815, -25.2185, 0.29", "-9.89661, -392.458, -25.3464, 0.96", "-9.66204, -393.292, -25.5646, 0.44", "-9.35192, -394.561, -25.9654, 0.44", "-8.94762, -396.135, -26.8008, 0.44", "-8.76793, -396.709, -27.2122, 0.66", "-8.6536, -396.981, -27.4774, 0.66", "-8.32107, -397.553, -28.2781, 0.44", "-8.1254, -397.784, -28.7665, 0.44", "-7.02749, -398.817, -31.4957, 0.44", "-6.83538, -398.963, -31.9723, 0.44", "-6.29815, -399.353, -33.3477, 0.44", "-5.60622, -399.763, -35.0871, 0.44", "-4.79291, -400.121, -37.0925, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.40163, -321.228, -26.3187, 0.44", "-9.43602, -321.357, -26.3187, 0.44", "-10.8381, -321.531, -26.3187, 0.44", "-11.583, -321.624, -26.3187, 0.44", "-12.6394, -321.755, -26.3187, 0.44", "-13.3048, -321.838, -26.3187, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "52.5768, -474.657, -35.5185, 0.44", "52.9423, -476.501, -35.828, 0.44", "53.0464, -477.128, -35.9414, 0.44", "53.24, -478.538, -36.2273, 0.44", "53.4947, -480.373, -36.6121, 0.44", "53.6361, -481.399, -36.8365, 0.44", "53.8232, -482.766, -37.1354, 0.44", "54.0387, -484.35, -37.503, 0.44", "54.1474, -485.115, -37.6947, 0.44", "54.2645, -485.844, -37.8976, 0.66", "54.4098, -486.658, -38.13, 0.29", "54.8386, -488.918, -38.6684, 0.29", "54.9625, -489.545, -38.7944, 0.29", "55.2335, -490.834, -38.9779, 0.29", "55.3583, -491.61, -39.0461, 0.37", "55.4204, -492.387, -39.0849, 0.66", "55.397, -493.751, -39.0823, 0.22", "55.2052, -494.71, -39.0272, 0.22", "54.8313, -495.716, -38.8986, 0.22", "54.2467, -496.961, -38.6844, 0.22", "53.9138, -497.553, -38.5709, 0.22", "53.4565, -498.223, -38.4592, 0.22", "52.5467, -499.287, -38.3554, 0.22", "51.7497, -500.016, -38.2566, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "52.5768, -474.657, -35.5185, 0.44", "51.8862, -475.692, -35.565, 0.44", "50.8446, -477.191, -35.6913, 0.44", "50.0146, -478.374, -35.9208, 0.44", "48.9405, -479.801, -36.3395, 0.44", "48.1453, -480.858, -36.6495, 0.44", "47.308, -481.97, -36.9759, 0.44", "46.5542, -482.93, -37.3275, 0.44", "45.4039, -484.282, -37.9979, 0.44", "44.652, -485.093, -38.5516, 0.44" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-103.192, 84.719, 19.5408, 0.59", "-104.167, 84.9553, 19.2644, 0.59", "-104.714, 85.0934, 19.1144, 0.59", "-105.464, 85.274, 18.9332, 0.52", "-106.805, 85.5832, 18.6486, 0.52", "-108.174, 85.8647, 18.3853, 0.52", "-109.633, 86.123, 18.1315, 0.52", "-109.974, 86.1785, 18.0873, 0.52", "-111.097, 86.3857, 17.9203, 0.52", "-112.045, 86.5889, 17.7699, 0.52", "-112.616, 86.6999, 17.68, 0.52", "-113.407, 86.8531, 17.5416, 0.59", "-113.577, 86.8861, 17.5124, 0.59", "-115.322, 87.1735, 17.1858, 0.44", "-115.989, 87.2611, 17.0462, 0.44", "-116.434, 87.2785, 16.9551, 0.66", "-117.094, 87.2252, 16.8724, 0.66", "-117.77, 87.0735, 16.8508, 0.66", "-118.454, 86.8114, 16.8904, 0.81", "-118.786, 86.6243, 16.9307, 0.96", "-119.487, 86.1665, 17.0207, 0.96", "-120.341, 85.56, 17.1336, 0.81", "-120.69, 85.2878, 17.1793, 0.81", "-121.882, 84.1767, 17.3301, 0.29", "-122.86, 83.101, 17.504, 0.22", "-123.177, 82.7109, 17.5711, 0.52", "-123.584, 82.1438, 17.6678, 0.52", "-123.888, 81.6621, 17.7428, 0.52", "-124.647, 80.3417, 17.9741, 0.29", "-125.166, 79.351, 18.1593, 0.29", "-125.537, 78.6946, 18.2866, 0.29", "-125.692, 78.4674, 18.3273, 0.29", "-125.978, 78.1405, 18.364, 0.52", "-126.213, 77.9531, 18.3611, 0.52", "-126.875, 77.6043, 18.2768, 0.52", "-127.256, 77.4431, 18.1983, 0.52", "-127.758, 77.2605, 18.0985, 0.52", "-128.381, 77.0212, 17.9875, 0.52", "-129.01, 76.7645, 17.9079, 0.44", "-129.652, 76.4946, 17.9113, 0.52", "-130.138, 76.2925, 17.968, 0.52", "-130.599, 76.1123, 18.0522, 0.29", "-131.431, 75.8072, 18.2931, 0.29", "-132.321, 75.4939, 18.5613, 0.52", "-133.464, 75.0671, 18.8859, 0.37", "-133.922, 74.8839, 19.002, 0.29", "-134.919, 74.4737, 19.2284, 0.29", "-135.939, 74.0586, 19.4343, 0.37", "-139.136, 72.8266, 19.9818, 0.29", "-140.25, 72.3977, 20.1252, 0.66", "-141.094, 72.072, 20.1913, 0.59", "-141.309, 71.9834, 20.2044, 0.59", "-141.827, 71.7488, 20.2213, 0.44", "-142.409, 71.4822, 20.2344, 0.59", "-142.963, 71.2504, 20.2809, 0.44", "-143.815, 70.95, 20.3321, 0.44", "-144.93, 70.5781, 20.3471, 0.37", "-145.385, 70.436, 20.3151, 0.37", "-146.502, 70.1185, 20.1604, 0.52", "-147.473, 69.8621, 19.9822, 0.52", "-148.581, 69.5857, 19.7673, 0.52", "-149.698, 69.3264, 19.5389, 0.52", "-150.727, 69.1175, 19.3085, 0.44", "-151.495, 68.9618, 19.1274, 0.44", "-152.461, 68.7218, 18.8724, 0.44", "-153.369, 68.4293, 18.6697, 0.59", "-153.76, 68.2675, 18.6125, 0.59", "-154.2, 68.0344, 18.563, 0.74", "-154.581, 67.7779, 18.5312, 0.88", "-155.359, 67.1502, 18.431, 0.37", "-155.961, 66.5753, 18.3293, 0.29", "-156.397, 66.1145, 18.246, 0.74", "-156.81, 65.6354, 18.1759, 0.74", "-157.169, 65.1907, 18.1275, 0.74", "-157.569, 64.682, 18.0817, 0.66", "-158.2, 63.8637, 18.0308, 0.66", "-158.581, 63.3439, 18.0079, 0.66", "-158.864, 62.931, 17.9959, 0.74", "-159.146, 62.515, 17.9902, 0.44", "-159.468, 62.057, 18.0061, 0.44", "-159.924, 61.4702, 18.0561, 0.44", "-160.477, 60.8351, 18.1442, 0.44", "-160.897, 60.413, 18.2183, 0.44", "-161.443, 59.9274, 18.3163, 0.44", "-162.363, 59.1612, 18.4982, 0.44", "-162.9, 58.7246, 18.6175, 0.44", "-163.674, 58.1142, 18.7973, 0.44", "-164.404, 57.524, 18.9709, 0.59", "-164.809, 57.1718, 19.0721, 0.88", "-165.416, 56.5959, 19.222, 0.44", "-165.973, 56.0137, 19.3477, 0.44", "-166.38, 55.5469, 19.4427, 0.44", "-166.66, 55.1942, 19.5033, 0.44", "-166.981, 54.7344, 19.5811, 0.44", "-167.29, 54.2722, 19.6493, 0.44", "-167.591, 53.8691, 19.6783, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-103.192, 84.719, 19.5408, 0.52", "-103.513, 84.5044, 20.066, 0.52", "-104.524, 84.104, 21.3395, 0.37", "-106.479, 83.6215, 23.212, 0.37", "-106.835, 83.5455, 23.5008, 0.37", "-107.574, 83.3757, 24.0272, 0.37", "-108.179, 83.2157, 24.4521, 0.22", "-109.093, 83.0503, 25.0373, 0.22", "-109.834, 82.9739, 25.4368, 0.22", "-111.051, 82.7828, 25.8092, 0.37", "-111.77, 82.6654, 26.0427, 0.37", "-112.446, 82.5205, 26.2836, 0.37" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_0", "dend_53", "dend_52", "dend_36", "dend_1", "dend_66", "dend_63", "dend_54", "dend_44", "dend_37", "dend_35", "dend_2", "dend_82", "dend_67", "dend_65", "dend_64", "dend_58", "dend_55", "dend_46", "dend_45", "dend_41", "dend_38", "dend_28", "dend_3", "dend_81", "dend_68", "dend_62", "dend_59", "dend_57", "dend_56", "dend_48", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_30", "dend_29", "dend_7", "dend_4", "dend_70", "dend_69", "dend_61", "dend_60", "dend_50", "dend_49", "dend_32", "dend_31", "dend_15", "dend_8", "dend_6", "dend_5", "dend_71", "dend_34", "dend_33", "dend_17", "dend_16", "dend_10", "dend_9", "dend_72", "dend_23", "dend_18", "dend_12", "dend_11", "dend_78", "dend_73", "dend_25", "dend_24", "dend_20", "dend_19", "dend_14", "dend_13", "dend_80", "dend_79", "dend_75", "dend_74", "dend_27", "dend_26", "dend_22", "dend_21", "dend_77", "dend_76" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_51", "dend_0", "dend_53", "dend_52", "dend_36", "dend_1", "dend_66", "dend_63", "dend_54", "dend_44", "dend_37", "dend_35", "dend_2", "dend_82", "dend_67", "dend_65", "dend_64", "dend_58", "dend_55", "dend_46", "dend_45", "dend_41", "dend_38", "dend_28", "dend_3", "dend_81", "dend_68", "dend_62", "dend_59", "dend_57", "dend_56", "dend_48", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_30", "dend_29", "dend_7", "dend_4", "dend_70", "dend_69", "dend_61", "dend_60", "dend_50", "dend_49", "dend_32", "dend_31", "dend_15", "dend_8", "dend_6", "dend_5", "dend_71", "dend_34", "dend_33", "dend_17", "dend_16", "dend_10", "dend_9", "dend_72", "dend_23", "dend_18", "dend_12", "dend_11", "dend_78", "dend_73", "dend_25", "dend_24", "dend_20", "dend_19", "dend_14", "dend_13", "dend_80", "dend_79", "dend_75", "dend_74", "dend_27", "dend_26", "dend_22", "dend_21", "dend_77", "dend_76" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_0", "axon_0", "dend_53", "dend_52", "dend_36", "dend_1", "axon_1", "dend_66", "dend_63", "dend_54", "dend_44", "dend_37", "dend_35", "dend_2", "dend_82", "dend_67", "dend_65", "dend_64", "dend_58", "dend_55", "dend_46", "dend_45", "dend_41", "dend_38", "dend_28", "dend_3", "dend_81", "dend_68", "dend_62", "dend_59", "dend_57", "dend_56", "dend_48", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_30", "dend_29", "dend_7", "dend_4", "dend_70", "dend_69", "dend_61", "dend_60", "dend_50", "dend_49", "dend_32", "dend_31", "dend_15", "dend_8", "dend_6", "dend_5", "dend_71", "dend_34", "dend_33", "dend_17", "dend_16", "dend_10", "dend_9", "dend_72", "dend_23", "dend_18", "dend_12", "dend_11", "dend_78", "dend_73", "dend_25", "dend_24", "dend_20", "dend_19", "dend_14", "dend_13", "dend_80", "dend_79", "dend_75", "dend_74", "dend_27", "dend_26", "dend_22", "dend_21", "dend_77", "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_51", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_82", "dend_82", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_71", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_MC_62cf39b45d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_36, id: dend_36, parent: dend_0
create dend_36
public dend_36
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_53
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_53
create dend_63
public dend_63
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_1
create dend_35
public dend_35
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_82, id: dend_82, parent: dend_66
create dend_82
public dend_82
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_28, id: dend_28, parent: dend_2
create dend_28
public dend_28
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_81, id: dend_81, parent: dend_67
create dend_81
public dend_81
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_78, id: dend_78, parent: dend_72
create dend_78
public dend_78
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_0, dend_53, dend_52, dend_36, dend_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_0, dend_53, dend_52, dend_36, dend_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_51, dend_0, axon_0, dend_53, dend_52, dend_36, dend_1, axon_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_83
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_82, dend_82, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_71, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_51(0), soma_0(0.45000035582915904)
    connect dend_0(0), soma_0(0.45000035582915904)
    connect axon_0(0), soma_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_36(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_53(1.0)
    connect dend_63(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_82(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_28(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_81(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_78(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.10769, -14.5581, -1.28568, 3.47159 ) }
    soma_0 { pt3dadd( 0.97266, -13.1566, -1.15776, 5.7463 ) }
    soma_0 { pt3dadd( 0.837634, -11.7551, -1.02984, 7.24579 ) }
    soma_0 { pt3dadd( 0.702608, -10.3536, -0.901916, 8.48761 ) }
    soma_0 { pt3dadd( 0.567581, -8.95209, -0.773994, 10.1714 ) }
    soma_0 { pt3dadd( 0.432555, -7.55059, -0.646072, 11.9512 ) }
    soma_0 { pt3dadd( 0.297528, -6.14909, -0.518149, 13.6591 ) }
    soma_0 { pt3dadd( 0.162502, -4.74759, -0.390227, 14.521 ) }
    soma_0 { pt3dadd( 0.0274756, -3.34609, -0.262305, 15.3268 ) }
    soma_0 { pt3dadd( -0.107551, -1.94459, -0.134383, 15.6875 ) }
    soma_0 { pt3dadd( -0.242577, -0.543095, -0.00646127, 15.6148 ) }
    soma_0 { pt3dadd( -0.377604, 0.858404, 0.121461, 15.2713 ) }
    soma_0 { pt3dadd( -0.51263, 2.2599, 0.249383, 14.3032 ) }
    soma_0 { pt3dadd( -0.647656, 3.6614, 0.377305, 13.4674 ) }
    soma_0 { pt3dadd( -0.782683, 5.0629, 0.505227, 12.0636 ) }
    soma_0 { pt3dadd( -0.917709, 6.4644, 0.633149, 10.8584 ) }
    soma_0 { pt3dadd( -1.05274, 7.8659, 0.761071, 9.75206 ) }
    soma_0 { pt3dadd( -1.18776, 9.2674, 0.888993, 8.24243 ) }
    soma_0 { pt3dadd( -1.32279, 10.6689, 1.01692, 6.68054 ) }
    soma_0 { pt3dadd( -1.45781, 12.0704, 1.14484, 5.41959 ) }
    soma_0 { pt3dadd( -1.59284, 13.4719, 1.27276, 3.12647 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.72433, 12.3101, 0.328394, 5.16 ) }
    dend_51 { pt3dadd( -2.17433, 12.6801, 0.328394, 5.16 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 23/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.404331, -15.2599, -11.2916, 4.64 ) }
    dend_0 { pt3dadd( -0.404331, -15.2599, -11.2916, 4.64 ) }
    dend_0 { pt3dadd( -1.87871, -18.5913, -12.0807, 3.24 ) }
    dend_0 { pt3dadd( -2.69627, -20.4387, -12.5182, 3.02 ) }
    dend_0 { pt3dadd( -3.7073, -22.7231, -13.0593, 2.87 ) }
    dend_0 { pt3dadd( -4.92637, -25.4777, -13.7118, 2.87 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 29/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.59284, 13.4719, 1.27276, 0.694734 ) }
    axon_0 { pt3dadd( -3.03134, 28.4028, 1.27276, 0.694734 ) }
    axon_0 { pt3dadd( -4.46985, 43.3336, 1.27276, 0.694734 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -2.17433, 12.6801, 0.328394, 2.8 ) }
    dend_53 { pt3dadd( -2.65917, 15.8169, 0.328394, 2.8 ) }
    dend_53 { pt3dadd( -2.83626, 16.9642, 0.328394, 2.8 ) }
    dend_53 { pt3dadd( -3.17767, 19.1761, 0.328394, 3.02 ) }
    dend_53 { pt3dadd( -3.42358, 20.7693, 0.328394, 3.02 ) }
    dend_53 { pt3dadd( -3.47126, 21.0782, 0.328394, 3.02 ) }
    dend_53 { pt3dadd( -3.62123, 22.0499, 0.328394, 2.43 ) }
    dend_53 { pt3dadd( -3.74211, 22.8168, 0.328394, 2.43 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 40/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -2.17433, 12.6801, 0.328394, 1.77 ) }
    dend_52 { pt3dadd( -3.46166, 13.8435, 1.58772, 1.77 ) }
    dend_52 { pt3dadd( -4.0941, 14.4016, 2.09461, 0.88 ) }
    dend_52 { pt3dadd( -6.81308, 16.7391, 3.95877, 0.74 ) }
    dend_52 { pt3dadd( -7.50317, 17.3535, 4.38499, 0.74 ) }
    dend_52 { pt3dadd( -8.55227, 18.3187, 4.89861, 0.96 ) }
    dend_52 { pt3dadd( -9.18228, 18.9058, 5.12518, 0.66 ) }
    dend_52 { pt3dadd( -9.72404, 19.4025, 5.16348, 0.74 ) }
    dend_52 { pt3dadd( -10.1128, 19.7498, 5.05546, 0.81 ) }
    dend_52 { pt3dadd( -10.6063, 20.1752, 4.72611, 0.81 ) }
    dend_52 { pt3dadd( -11.5357, 20.9453, 3.99359, 0.81 ) }
    dend_52 { pt3dadd( -12.0521, 21.3784, 3.52135, 0.96 ) }
    dend_52 { pt3dadd( -12.6867, 21.9538, 2.84129, 0.96 ) }
    dend_52 { pt3dadd( -12.8427, 22.1184, 2.6436, 1.33 ) }
    dend_52 { pt3dadd( -13.458, 22.8999, 1.71417, 1.33 ) }
    dend_52 { pt3dadd( -13.7439, 23.4202, 0.914268, 0.52 ) }
    dend_52 { pt3dadd( -13.8823, 23.8018, 0.299352, 0.52 ) }
    dend_52 { pt3dadd( -13.9921, 24.2481, -0.420662, 0.52 ) }
    dend_52 { pt3dadd( -14.0741, 24.7188, -1.17105, 1.11 ) }
    dend_52 { pt3dadd( -14.145, 25.1934, -1.92758, 1.4 ) }
    dend_52 { pt3dadd( -14.5089, 27.6167, -5.75919, 0.52 ) }
    dend_52 { pt3dadd( -14.5545, 27.8388, -6.13468, 0.66 ) }
    dend_52 { pt3dadd( -14.6246, 28.0412, -6.49342, 0.81 ) }
    dend_52 { pt3dadd( -14.7061, 28.1879, -6.75583, 0.81 ) }
    dend_52 { pt3dadd( -15.1942, 28.7681, -7.77893, 0.81 ) }
    dend_52 { pt3dadd( -15.4821, 29.0129, -8.15693, 1.11 ) }
    dend_52 { pt3dadd( -16.2795, 29.5102, -8.67116, 1.11 ) }
    dend_52 { pt3dadd( -16.8625, 29.8653, -9.04062, 0.44 ) }
    dend_52 { pt3dadd( -17.1895, 30.0641, -9.24075, 0.44 ) }
    dend_52 { pt3dadd( -17.8506, 30.4865, -9.62386, 0.52 ) }
    dend_52 { pt3dadd( -18.1907, 30.7549, -9.89362, 0.37 ) }
    dend_52 { pt3dadd( -18.3513, 30.9418, -10.1078, 0.37 ) }
    dend_52 { pt3dadd( -18.5557, 31.2787, -10.4502, 0.37 ) }
    dend_52 { pt3dadd( -18.6211, 31.3845, -10.5528, 0.52 ) }
    dend_52 { pt3dadd( -18.7988, 31.6437, -10.7947, 0.81 ) }
    dend_52 { pt3dadd( -19.9932, 33.2096, -12.1407, 0.52 ) }
    dend_52 { pt3dadd( -20.1396, 33.3922, -12.2907, 0.52 ) }
    dend_52 { pt3dadd( -20.9817, 34.3802, -13.0571, 0.37 ) }
    dend_52 { pt3dadd( -21.5597, 34.9712, -13.4783, 0.29 ) }
    dend_52 { pt3dadd( -22.098, 35.4795, -13.8331, 0.29 ) }
    dend_52 { pt3dadd( -22.5332, 35.8585, -14.0726, 0.29 ) }
    dend_52 { pt3dadd( -22.8635, 36.1343, -14.2014, 0.29 ) }
    dend_52 { pt3dadd( -23.0172, 36.2616, -14.2734, 0.29 ) }
    dend_52 { pt3dadd( -23.5668, 36.699, -14.776, 0.29 ) }
    dend_52 { pt3dadd( -24.2042, 37.2013, -15.4977, 0.96 ) }
    dend_52 { pt3dadd( -24.2515, 37.2351, -15.5535, 1.11 ) }
    dend_52 { pt3dadd( -24.7112, 37.5277, -16.1193, 0.44 ) }
    dend_52 { pt3dadd( -25.2474, 37.8251, -16.7618, 0.44 ) }
    dend_52 { pt3dadd( -26.8319, 38.6426, -18.5871, 0.44 ) }
    dend_52 { pt3dadd( -27.214, 38.8331, -19.009, 0.96 ) }
    dend_52 { pt3dadd( -27.4175, 38.9241, -19.2379, 0.96 ) }
    dend_52 { pt3dadd( -27.9944, 39.1228, -19.9001, 0.44 ) }
    dend_52 { pt3dadd( -28.3322, 39.2054, -20.3596, 0.44 ) }
    dend_52 { pt3dadd( -28.6069, 39.2631, -20.8149, 0.44 ) }
    dend_52 { pt3dadd( -28.7452, 39.2813, -21.0946, 0.44 ) }
    dend_52 { pt3dadd( -29.6807, 39.338, -23.2721, 0.59 ) }
    dend_52 { pt3dadd( -29.9819, 39.334, -24.0274, 0.59 ) }
    dend_52 { pt3dadd( -30.9122, 39.2875, -26.4597, 0.59 ) }
    dend_52 { pt3dadd( -31.4819, 39.2491, -28.0476, 0.59 ) }
    dend_52 { pt3dadd( -32.2702, 39.1657, -30.2496, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_52 { pt3dadd( -32.6154, 39.1148, -31.2246, 0.59 ) }
    dend_52 { pt3dadd( -32.992, 39.0534, -32.2251, 0.22 ) }
    dend_52 { pt3dadd( -33.1239, 39.0351, -32.5602, 0.22 ) }
    dend_52 { pt3dadd( -33.9928, 38.9162, -34.4137, 0.81 ) }
    dend_52 { pt3dadd( -34.2801, 38.8952, -34.9296, 1.55 ) }
    dend_52 { pt3dadd( -35.8746, 38.9379, -37.4015, 0.52 ) }
    dend_52 { pt3dadd( -36.1922, 38.9608, -37.8685, 0.52 ) }
    dend_52 { pt3dadd( -36.4234, 38.978, -38.1857, 0.44 ) }
    dend_52 { pt3dadd( -36.9748, 39.008, -38.864, 0.37 ) }
    dend_52 { pt3dadd( -37.5073, 39.0382, -39.4305, 0.37 ) }
    dend_52 { pt3dadd( -37.6029, 39.0423, -39.5442, 0.59 ) }
    dend_52 { pt3dadd( -38.2639, 39.0125, -40.354, 0.59 ) }
    dend_52 { pt3dadd( -38.5317, 38.9709, -40.7242, 0.59 ) }
    dend_52 { pt3dadd( -38.838, 38.8858, -41.1543, 0.59 ) }
    dend_52 { pt3dadd( -40.1226, 38.4057, -42.9606, 0.59 ) }
    dend_52 { pt3dadd( -40.8716, 38.1185, -44.0575, 0.96 ) }
    dend_52 { pt3dadd( -41.2445, 37.9719, -44.62, 0.59 ) }
    dend_52 { pt3dadd( -41.5079, 37.8529, -45.0786, 0.22 ) }
    dend_52 { pt3dadd( -41.937, 37.6426, -45.8724, 0.22 ) }
    dend_52 { pt3dadd( -42.2876, 37.4665, -46.6193, 0.29 ) }
    dend_52 { pt3dadd( -42.987, 37.1079, -48.387, 0.81 ) }
    dend_52 { pt3dadd( -43.0994, 37.0486, -48.6929, 1.4 ) }
    dend_52 { pt3dadd( -43.9568, 36.5529, -51.311, 0.59 ) }
    dend_52 { pt3dadd( -44.1096, 36.446, -51.8675, 0.96 ) }
    dend_52 { pt3dadd( -45.1252, 35.6143, -55.9515, 1.33 ) }
    dend_52 { pt3dadd( -45.9902, 34.7748, -59.5402, 0.59 ) }
    dend_52 { pt3dadd( -46.118, 34.6284, -60.0581, 0.44 ) }
    dend_52 { pt3dadd( -46.2861, 34.4124, -60.7048, 0.44 ) }
    dend_52 { pt3dadd( -46.9359, 33.3662, -63.18, 0.44 ) }
    dend_52 { pt3dadd( -47.0953, 33.0749, -63.7735, 0.44 ) }
    dend_52 { pt3dadd( -47.2509, 32.7674, -64.3265, 0.44 ) }
    dend_52 { pt3dadd( -47.6868, 31.9905, -65.754, 0.44 ) }
    dend_52 { pt3dadd( -47.9616, 31.5528, -66.7511, 0.44 ) }
    dend_52 { pt3dadd( -48.6701, 30.5019, -69.3726, 0.44 ) }
    dend_52 { pt3dadd( -48.9496, 30.0917, -70.4637, 0.88 ) }
    dend_52 { pt3dadd( -49.5707, 29.136, -73.5428, 0.59 ) }
    dend_52 { pt3dadd( -49.6148, 29.0675, -73.7899, 0.59 ) }
    dend_52 { pt3dadd( -50.2025, 28.1346, -77.5126, 0.22 ) }
    dend_52 { pt3dadd( -50.2734, 28.0179, -77.99, 0.52 ) }
    dend_52 { pt3dadd( -50.3187, 27.9402, -78.277, 0.52 ) }
    dend_52 { pt3dadd( -51.218, 26.3264, -83.6685, 0.52 ) }
    dend_52 { pt3dadd( -51.298, 26.1874, -84.0913, 0.88 ) }
    dend_52 { pt3dadd( -51.926, 25.1717, -87.1051, 0.37 ) }
    dend_52 { pt3dadd( -52.0192, 25.0298, -87.4914, 0.37 ) }
    dend_52 { pt3dadd( -52.421, 24.4266, -89.0456, 0.44 ) }
    dend_52 { pt3dadd( -53.309, 23.1009, -92.0213, 0.52 ) }
    dend_52 { pt3dadd( -53.8089, 22.3365, -93.19, 0.59 ) }
    dend_52 { pt3dadd( -53.9922, 22.0398, -93.5822, 0.22 ) }
    dend_52 { pt3dadd( -54.209, 21.6593, -93.9652, 0.22 ) }
    dend_52 { pt3dadd( -54.4174, 21.2371, -94.3594, 0.22 ) }
    dend_52 { pt3dadd( -54.6172, 20.7613, -94.7675, 0.22 ) }
    dend_52 { pt3dadd( -54.9801, 19.8039, -95.2386, 0.22 ) }
    dend_52 { pt3dadd( -55.1247, 19.4106, -95.4003, 0.66 ) }
    dend_52 { pt3dadd( -55.2078, 19.1788, -95.4839, 0.66 ) }
    dend_52 { pt3dadd( -55.6726, 17.965, -95.8577, 0.66 ) }
    dend_52 { pt3dadd( -56.0101, 17.1558, -96.0582, 0.29 ) }
    dend_52 { pt3dadd( -56.2979, 16.5074, -96.1929, 0.29 ) }
    dend_52 { pt3dadd( -56.7432, 15.5502, -96.3422, 0.29 ) }
    dend_52 { pt3dadd( -57.0623, 14.873, -96.4334, 1.25 ) }
    dend_52 { pt3dadd( -57.7204, 13.4669, -96.6017, 0.37 ) }
    dend_52 { pt3dadd( -58.127, 12.6095, -96.6763, 0.37 ) }
    dend_52 { pt3dadd( -58.545, 11.6704, -96.8408, 0.37 ) }
    dend_52 { pt3dadd( -58.8739, 10.8796, -97.0694, 0.37 ) }
    dend_52 { pt3dadd( -59.1911, 10.0384, -97.4078, 0.96 ) }
    dend_52 { pt3dadd( -59.5037, 9.19254, -97.8587, 0.52 ) }
    dend_52 { pt3dadd( -59.6077, 8.94481, -98.0305, 0.52 ) }
    dend_52 { pt3dadd( -60.3048, 7.57318, -99.3224, 0.52 ) }
    dend_52 { pt3dadd( -60.4279, 7.38999, -99.529, 0.52 ) }
    dend_52 { pt3dadd( -60.7756, 6.99236, -100.055, 0.52 ) }
    dend_52 { pt3dadd( -61.3759, 6.41114, -100.912, 0.52 ) }
    dend_52 { pt3dadd( -62.167, 5.7455, -102.009, 0.52 ) }
    dend_52 { pt3dadd( -63.193, 4.94333, -103.349, 0.52 ) }
    dend_52 { pt3dadd( -63.7865, 4.51021, -104.122, 0.29 ) }
    dend_52 { pt3dadd( -64.4189, 4.04891, -104.981, 0.44 ) }
    dend_52 { pt3dadd( -64.8738, 3.70464, -105.649, 0.44 ) }
    dend_52 { pt3dadd( -65.8156, 2.94337, -107.083, 0.07 ) }
    dend_52 { pt3dadd( -66.1098, 2.68804, -107.555, 0.96 ) }
    dend_52 { pt3dadd( -67.1546, 1.74468, -109.194, 0.29 ) }
    dend_52 { pt3dadd( -67.5269, 1.39056, -109.809, 0.29 ) }
    dend_52 { pt3dadd( -68.1205, 0.804559, -110.802, 0.74 ) }
    dend_52 { pt3dadd( -68.4552, 0.445064, -111.33, 0.74 ) }
    dend_52 { pt3dadd( -69.2305, -0.477836, -112.5, 0.07 ) }
    dend_52 { pt3dadd( -69.4861, -0.79931, -112.994, 0.07 ) }
    dend_52 { pt3dadd( -69.5477, -0.878673, -113.12, 0.74 ) }
    dend_52 { pt3dadd( -70.0672, -1.5056, -114.282, 0.22 ) }
    dend_52 { pt3dadd( -70.6112, -2.07298, -115.475, 0.29 ) }
    dend_52 { pt3dadd( -70.9647, -2.39401, -116.258, 1.11 ) }
    dend_52 { pt3dadd( -72.8344, -3.82308, -120.349, 0.15 ) }
    dend_52 { pt3dadd( -73.0858, -3.99198, -120.917, 0.15 ) }
    dend_52 { pt3dadd( -73.7001, -4.37351, -122.412, 0.15 ) }
    dend_52 { pt3dadd( -74.162, -4.62278, -123.559, 0.15 ) }
    dend_52 { pt3dadd( -74.5959, -4.82389, -124.671, 0.74 ) }
    dend_52 { pt3dadd( -75.3628, -5.157, -126.62, 0.44 ) }
    dend_52 { pt3dadd( -75.9975, -5.41564, -128.137, 0.44 ) }
    dend_52 { pt3dadd( -77.1849, -5.93748, -131.245, 0.44 ) }
    dend_52 { pt3dadd( -77.3021, -6.00587, -131.59, 0.74 ) }
    // Section: dend_36, id: dend_36, parent: dend_0 (entry count 96/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -4.92637, -25.4777, -13.7118, 1.47 ) }
    dend_36 { pt3dadd( -5.24596, -27.3175, -14.5952, 1.47 ) }
    dend_36 { pt3dadd( -5.24356, -28.7523, -15.3527, 1.47 ) }
    dend_36 { pt3dadd( -5.02163, -30.1312, -16.2713, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -4.67883, -31.5572, -17.2412, 1.4 ) }
    dend_36 { pt3dadd( -4.39859, -32.3409, -17.9182, 1.4 ) }
    dend_36 { pt3dadd( -3.97709, -33.3495, -18.8659, 1.18 ) }
    dend_36 { pt3dadd( -3.40529, -34.3104, -19.8829, 1.18 ) }
    dend_36 { pt3dadd( -2.49992, -35.4838, -21.3103, 1.18 ) }
    dend_36 { pt3dadd( -1.97203, -36.0382, -22.074, 1.18 ) }
    dend_36 { pt3dadd( -0.00370187, -37.7761, -24.8819, 1.62 ) }
    dend_36 { pt3dadd( 0.351189, -38.068, -25.4378, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 8/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.92637, -25.4777, -13.7118, 2.06 ) }
    dend_1 { pt3dadd( -3.54242, -27.9938, -14.1776, 2.06 ) }
    dend_1 { pt3dadd( -2.73389, -29.4637, -14.4497, 1.99 ) }
    dend_1 { pt3dadd( -2.21858, -30.4005, -14.6232, 1.99 ) }
    dend_1 { pt3dadd( -1.29998, -32.0706, -14.9324, 1.99 ) }
    dend_1 { pt3dadd( -0.341163, -33.8137, -15.2551, 2.65 ) }
    dend_1 { pt3dadd( 0.165127, -34.7342, -15.4256, 2.95 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 15/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.46985, 43.3336, 1.27276, 0.332378 ) }
    axon_1 { pt3dadd( -5.90835, 58.2645, 1.27276, 0.332378 ) }
    axon_1 { pt3dadd( -7.34685, 73.1954, 1.27276, 0.332378 ) }
    // Section: dend_66, id: dend_66, parent: dend_53 (entry count 18/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -3.74211, 22.8168, 0.328394, 1.92 ) }
    dend_66 { pt3dadd( -4.15982, 23.7523, -0.139089, 1.92 ) }
    dend_66 { pt3dadd( -5.02404, 25.6422, -0.987671, 1.77 ) }
    dend_66 { pt3dadd( -5.93703, 27.4588, -1.67825, 1.77 ) }
    dend_66 { pt3dadd( -6.3924, 28.3606, -1.92505, 1.62 ) }
    dend_66 { pt3dadd( -6.59744, 28.7641, -2.01258, 1.62 ) }
    dend_66 { pt3dadd( -7.16458, 29.88, -2.2547, 1.62 ) }
    dend_66 { pt3dadd( -7.72935, 31.0092, -2.43505, 1.62 ) }
    dend_66 { pt3dadd( -8.61908, 32.7013, -2.49089, 1.84 ) }
    dend_66 { pt3dadd( -9.42064, 34.1074, -2.46959, 1.84 ) }
    dend_66 { pt3dadd( -9.58708, 34.3913, -2.44363, 1.84 ) }
    // Section: dend_63, id: dend_63, parent: dend_53 (entry count 29/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -3.74211, 22.8168, 0.328394, 1.92 ) }
    dend_63 { pt3dadd( -3.91042, 23.5484, -0.0085088, 1.92 ) }
    dend_63 { pt3dadd( -4.16732, 24.6065, -0.54835, 0.52 ) }
    dend_63 { pt3dadd( -4.44321, 25.7224, -1.18166, 0.52 ) }
    dend_63 { pt3dadd( -4.63254, 26.6598, -1.72947, 0.52 ) }
    dend_63 { pt3dadd( -4.76032, 27.5563, -2.24058, 0.52 ) }
    dend_63 { pt3dadd( -4.83885, 28.5211, -2.7572, 0.52 ) }
    dend_63 { pt3dadd( -4.81529, 29.4452, -3.23758, 0.52 ) }
    dend_63 { pt3dadd( -4.77303, 29.9017, -3.46108, 0.52 ) }
    dend_63 { pt3dadd( -4.6393, 30.6045, -3.74, 0.59 ) }
    dend_63 { pt3dadd( -4.47975, 31.3645, -3.95445, 0.59 ) }
    dend_63 { pt3dadd( -4.32504, 32.1593, -4.16987, 0.59 ) }
    dend_63 { pt3dadd( -4.23631, 32.939, -4.43673, 0.59 ) }
    dend_63 { pt3dadd( -4.28529, 33.4688, -4.67806, 0.59 ) }
    dend_63 { pt3dadd( -4.52304, 34.1651, -5.07324, 0.66 ) }
    dend_63 { pt3dadd( -4.92512, 34.9138, -5.56512, 0.66 ) }
    dend_63 { pt3dadd( -5.37301, 35.5951, -6.05995, 0.88 ) }
    dend_63 { pt3dadd( -6.0105, 36.4829, -6.75165, 0.81 ) }
    dend_63 { pt3dadd( -6.52388, 37.172, -7.31239, 0.66 ) }
    dend_63 { pt3dadd( -6.92552, 37.7936, -7.91511, 0.66 ) }
    dend_63 { pt3dadd( -7.0917, 38.1939, -8.35844, 0.66 ) }
    dend_63 { pt3dadd( -7.04315, 38.5195, -8.77702, 0.66 ) }
    dend_63 { pt3dadd( -6.76897, 38.8399, -9.21137, 0.88 ) }
    dend_63 { pt3dadd( -6.54486, 39.0049, -9.43555, 0.88 ) }
    dend_63 { pt3dadd( -5.10368, 39.9392, -10.6609, 0.59 ) }
    dend_63 { pt3dadd( -4.71588, 40.2008, -10.988, 0.59 ) }
    dend_63 { pt3dadd( -4.13567, 40.6465, -11.4916, 0.59 ) }
    dend_63 { pt3dadd( -3.59782, 41.1434, -11.9904, 0.59 ) }
    dend_63 { pt3dadd( -3.09036, 41.75, -12.5536, 0.59 ) }
    dend_63 { pt3dadd( -2.90886, 42.0195, -12.7702, 0.59 ) }
    dend_63 { pt3dadd( -2.48881, 42.7686, -13.2558, 0.81 ) }
    dend_63 { pt3dadd( -2.23838, 43.232, -13.5659, 0.81 ) }
    dend_63 { pt3dadd( -1.93721, 43.7715, -13.9506, 0.74 ) }
    dend_63 { pt3dadd( -1.25875, 44.8002, -14.8684, 0.88 ) }
    dend_63 { pt3dadd( -0.932789, 44.9707, -15.2305, 0.88 ) }
    dend_63 { pt3dadd( -0.586626, 45.0142, -15.558, 0.59 ) }
    dend_63 { pt3dadd( -0.192093, 45.0203, -15.9154, 0.59 ) }
    dend_63 { pt3dadd( 0.434413, 45.0519, -16.5165, 0.59 ) }
    dend_63 { pt3dadd( 1.10002, 45.1733, -17.2804, 0.59 ) }
    dend_63 { pt3dadd( 2.72855, 45.6101, -19.2158, 0.59 ) }
    dend_63 { pt3dadd( 3.06805, 45.7129, -19.6274, 0.59 ) }
    dend_63 { pt3dadd( 3.81794, 45.9691, -20.5766, 0.44 ) }
    dend_63 { pt3dadd( 4.46289, 46.2147, -21.3986, 0.44 ) }
    dend_63 { pt3dadd( 5.62032, 46.7424, -22.9578, 0.52 ) }
    dend_63 { pt3dadd( 6.14311, 47.0104, -23.6805, 0.52 ) }
    dend_63 { pt3dadd( 6.6327, 47.2461, -24.386, 0.52 ) }
    dend_63 { pt3dadd( 7.33503, 47.5035, -25.3318, 0.74 ) }
    dend_63 { pt3dadd( 7.97631, 47.6784, -26.0931, 1.33 ) }
    dend_63 { pt3dadd( 9.21156, 47.9917, -27.4659, 0.88 ) }
    dend_63 { pt3dadd( 9.49202, 48.0812, -27.7795, 0.88 ) }
    dend_63 { pt3dadd( 10.0502, 48.3411, -28.4788, 0.37 ) }
    dend_63 { pt3dadd( 10.7118, 48.7487, -29.3326, 0.37 ) }
    dend_63 { pt3dadd( 11.1557, 49.048, -29.8976, 0.37 ) }
    dend_63 { pt3dadd( 11.7814, 49.4886, -30.685, 0.66 ) }
    dend_63 { pt3dadd( 12.3648, 49.8845, -31.3762, 0.66 ) }
    dend_63 { pt3dadd( 13.057, 50.3656, -32.2309, 0.22 ) }
    dend_63 { pt3dadd( 13.7557, 50.894, -33.125, 0.37 ) }
    dend_63 { pt3dadd( 14.309, 51.378, -34.0048, 0.52 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 87/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -3.74211, 22.8168, 0.328394, 0.52 ) }
    dend_54 { pt3dadd( -1.66104, 24.9135, 2.12172, 0.52 ) }
    dend_54 { pt3dadd( -0.721437, 25.9205, 2.81333, 1.62 ) }
    dend_54 { pt3dadd( -0.235446, 26.4582, 3.13256, 1.55 ) }
    dend_54 { pt3dadd( 0.357832, 27.1275, 3.48114, 1.18 ) }
    dend_54 { pt3dadd( 0.92544, 27.7746, 3.79228, 1.18 ) }
    dend_54 { pt3dadd( 0.962897, 27.8174, 3.81134, 1.18 ) }
    dend_54 { pt3dadd( 1.41699, 28.3101, 4.03307, 1.18 ) }
    dend_54 { pt3dadd( 2.03206, 29.0416, 4.57122, 1.33 ) }
    dend_54 { pt3dadd( 2.36412, 29.4289, 4.9185, 1.69 ) }
    dend_54 { pt3dadd( 2.42613, 29.4981, 4.99514, 1.69 ) }
    dend_54 { pt3dadd( 2.64928, 29.7349, 5.30996, 1.69 ) }
    dend_54 { pt3dadd( 4.30394, 31.4267, 7.84867, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_54 { pt3dadd( 4.49889, 31.6108, 8.19982, 2.21 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 1/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 0.351189, -38.068, -25.4378, 1.03 ) }
    dend_44 { pt3dadd( -0.277814, -38.9071, -26.096, 1.03 ) }
    dend_44 { pt3dadd( -1.68671, -40.664, -27.2578, 0.66 ) }
    dend_44 { pt3dadd( -2.55466, -41.7075, -27.9521, 0.66 ) }
    dend_44 { pt3dadd( -3.10984, -42.3282, -28.4319, 0.96 ) }
    dend_44 { pt3dadd( -3.72467, -42.9462, -28.9895, 0.96 ) }
    dend_44 { pt3dadd( -4.42273, -43.5799, -29.6042, 0.96 ) }
    dend_44 { pt3dadd( -5.15235, -44.1765, -30.2505, 1.11 ) }
    dend_44 { pt3dadd( -6.25979, -45.0595, -31.1625, 0.88 ) }
    dend_44 { pt3dadd( -7.28387, -45.9596, -32.1411, 1.18 ) }
    dend_44 { pt3dadd( -8.08335, -46.7014, -32.9365, 0.66 ) }
    dend_44 { pt3dadd( -8.58672, -47.1867, -33.4524, 0.66 ) }
    dend_44 { pt3dadd( -9.45531, -48.0498, -34.347, 0.66 ) }
    dend_44 { pt3dadd( -10.022, -48.6218, -34.9111, 0.81 ) }
    dend_44 { pt3dadd( -10.7181, -49.3125, -35.4725, 0.81 ) }
    dend_44 { pt3dadd( -11.1648, -49.7692, -35.7867, 1.03 ) }
    dend_44 { pt3dadd( -11.6926, -50.3082, -36.1387, 1.03 ) }
    dend_44 { pt3dadd( -12.3474, -50.938, -36.5502, 0.96 ) }
    dend_44 { pt3dadd( -13.0119, -51.5102, -36.9176, 1.18 ) }
    dend_44 { pt3dadd( -13.877, -52.2026, -37.3404, 1.18 ) }
    dend_44 { pt3dadd( -14.9752, -53.0404, -37.8403, 1.33 ) }
    dend_44 { pt3dadd( -15.9312, -53.7423, -38.2565, 1.33 ) }
    dend_44 { pt3dadd( -17.0456, -54.5415, -38.7124, 1.25 ) }
    dend_44 { pt3dadd( -17.9291, -55.1394, -39.053, 1.25 ) }
    dend_44 { pt3dadd( -19.314, -55.9969, -39.5687, 1.25 ) }
    dend_44 { pt3dadd( -20.4853, -56.6164, -39.9768, 1.25 ) }
    dend_44 { pt3dadd( -21.209, -56.9434, -40.2192, 0.88 ) }
    dend_44 { pt3dadd( -21.7702, -57.1706, -40.4047, 0.88 ) }
    dend_44 { pt3dadd( -22.5872, -57.4791, -40.6735, 0.66 ) }
    dend_44 { pt3dadd( -23.1794, -57.7139, -40.878, 0.66 ) }
    dend_44 { pt3dadd( -24.0389, -58.1272, -41.2375, 0.88 ) }
    dend_44 { pt3dadd( -24.7184, -58.5302, -41.5218, 0.88 ) }
    dend_44 { pt3dadd( -25.3885, -58.9822, -41.7982, 0.88 ) }
    dend_44 { pt3dadd( -26.0746, -59.4779, -42.063, 1.03 ) }
    dend_44 { pt3dadd( -26.5819, -59.858, -42.2374, 1.03 ) }
    dend_44 { pt3dadd( -27.6943, -60.7625, -42.6336, 0.96 ) }
    dend_44 { pt3dadd( -28.7205, -61.6602, -42.9888, 0.96 ) }
    dend_44 { pt3dadd( -29.5198, -62.3978, -43.3004, 1.03 ) }
    dend_44 { pt3dadd( -29.849, -62.7185, -43.4518, 1.25 ) }
    dend_44 { pt3dadd( -30.1446, -63.0116, -43.6283, 1.25 ) }
    dend_44 { pt3dadd( -30.9972, -63.8602, -44.1449, 0.74 ) }
    dend_44 { pt3dadd( -31.5261, -64.4221, -44.4988, 0.74 ) }
    dend_44 { pt3dadd( -32.0606, -65.0722, -44.9756, 1.18 ) }
    dend_44 { pt3dadd( -32.6793, -65.892, -45.6519, 1.18 ) }
    dend_44 { pt3dadd( -33.5822, -67.0977, -46.7392, 1.33 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 46/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.351189, -38.068, -25.4378, 0.96 ) }
    dend_37 { pt3dadd( 1.25936, -39.613, -25.7405, 0.96 ) }
    dend_37 { pt3dadd( 1.86636, -40.7074, -25.914, 0.59 ) }
    dend_37 { pt3dadd( 2.58206, -42.0698, -26.0949, 0.59 ) }
    dend_37 { pt3dadd( 3.2404, -43.5151, -26.2575, 0.81 ) }
    dend_37 { pt3dadd( 3.65315, -44.5545, -26.414, 0.88 ) }
    dend_37 { pt3dadd( 3.88881, -45.226, -26.5761, 0.88 ) }
    dend_37 { pt3dadd( 4.01221, -45.7842, -26.6972, 0.37 ) }
    dend_37 { pt3dadd( 4.10819, -46.327, -26.8216, 0.37 ) }
    dend_37 { pt3dadd( 4.25918, -47.2229, -27.1066, 0.37 ) }
    dend_37 { pt3dadd( 4.48829, -48.5189, -27.5726, 0.96 ) }
    dend_37 { pt3dadd( 4.75475, -49.999, -28.1896, 0.96 ) }
    dend_37 { pt3dadd( 5.11338, -51.9185, -29.0315, 0.88 ) }
    dend_37 { pt3dadd( 5.28991, -52.8212, -29.4221, 0.88 ) }
    dend_37 { pt3dadd( 5.81507, -55.0958, -30.3503, 1.18 ) }
    dend_37 { pt3dadd( 5.94122, -55.533, -30.5065, 0.29 ) }
    dend_37 { pt3dadd( 6.23033, -56.4855, -30.7643, 0.37 ) }
    dend_37 { pt3dadd( 6.39924, -57.0478, -30.8894, 0.37 ) }
    dend_37 { pt3dadd( 6.61846, -57.9115, -31.1345, 0.37 ) }
    dend_37 { pt3dadd( 6.69267, -58.3334, -31.2394, 0.37 ) }
    dend_37 { pt3dadd( 6.78313, -59.1731, -31.4835, 0.37 ) }
    dend_37 { pt3dadd( 6.81023, -59.7144, -31.7051, 0.37 ) }
    dend_37 { pt3dadd( 6.81697, -60.393, -32.0258, 0.52 ) }
    dend_37 { pt3dadd( 6.79917, -61.5696, -32.6901, 0.81 ) }
    dend_37 { pt3dadd( 6.72137, -62.7571, -33.4105, 0.96 ) }
    dend_37 { pt3dadd( 6.59179, -64.4146, -34.4115, 0.96 ) }
    dend_37 { pt3dadd( 6.53606, -65.279, -34.9318, 0.59 ) }
    dend_37 { pt3dadd( 6.52992, -66.386, -35.5402, 0.59 ) }
    dend_37 { pt3dadd( 6.66715, -67.8951, -36.2289, 0.88 ) }
    dend_37 { pt3dadd( 6.85231, -68.8544, -36.5529, 0.88 ) }
    dend_37 { pt3dadd( 7.13395, -69.9116, -36.8043, 0.59 ) }
    dend_37 { pt3dadd( 7.32362, -70.5481, -36.9065, 0.59 ) }
    dend_37 { pt3dadd( 7.8646, -72.2021, -37.2538, 0.59 ) }
    dend_37 { pt3dadd( 8.45074, -73.8114, -37.6264, 0.59 ) }
    dend_37 { pt3dadd( 8.79503, -74.6736, -37.8936, 0.59 ) }
    dend_37 { pt3dadd( 9.20312, -75.6929, -38.3453, 1.03 ) }
    dend_37 { pt3dadd( 9.41398, -76.2626, -38.6903, 1.03 ) }
    dend_37 { pt3dadd( 10.0749, -78.1129, -39.9904, 0.96 ) }
    dend_37 { pt3dadd( 10.4359, -79.1201, -40.8303, 0.96 ) }
    dend_37 { pt3dadd( 11.1283, -81.0513, -42.5749, 0.96 ) }
    dend_37 { pt3dadd( 11.6443, -82.4368, -43.8529, 1.18 ) }
    dend_37 { pt3dadd( 12.4108, -84.337, -45.6037, 1.18 ) }
    dend_37 { pt3dadd( 12.7188, -85.03, -46.2058, 1.18 ) }
    dend_37 { pt3dadd( 13.4798, -86.6097, -47.5028, 0.52 ) }
    dend_37 { pt3dadd( 13.7511, -87.1472, -47.9184, 0.52 ) }
    dend_37 { pt3dadd( 14.106, -87.7621, -48.3385, 0.81 ) }
    dend_37 { pt3dadd( 15.0474, -89.1444, -49.2901, 0.81 ) }
    dend_37 { pt3dadd( 15.9969, -90.4854, -50.2366, 0.81 ) }
    dend_37 { pt3dadd( 17.0249, -91.9644, -51.3251, 1.11 ) }
    dend_37 { pt3dadd( 17.5665, -92.7646, -51.9447, 1.11 ) }
    dend_37 { pt3dadd( 18.5286, -94.29, -53.2063, 1.11 ) }
    dend_37 { pt3dadd( 19.3803, -95.7957, -54.4869, 0.81 ) }
    dend_37 { pt3dadd( 19.9868, -97.0689, -55.6059, 0.81 ) }
    dend_37 { pt3dadd( 20.156, -97.5189, -56.0001, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( 20.5187, -98.6767, -56.9778, 0.22 ) }
    dend_37 { pt3dadd( 20.6641, -99.2769, -57.4947, 0.22 ) }
    dend_37 { pt3dadd( 20.7305, -99.9692, -58.0353, 0.22 ) }
    dend_37 { pt3dadd( 20.7473, -101.444, -58.9799, 0.88 ) }
    dend_37 { pt3dadd( 20.783, -102.386, -59.5435, 2.5 ) }
    // Section: dend_35, id: dend_35, parent: dend_1 (entry count 5/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.165127, -34.7342, -15.4256, 1.18 ) }
    dend_35 { pt3dadd( -0.828725, -36.2522, -15.0602, 1.18 ) }
    dend_35 { pt3dadd( -1.73365, -37.5534, -14.7277, 1.18 ) }
    dend_35 { pt3dadd( -2.64993, -38.7583, -14.4362, 1.18 ) }
    dend_35 { pt3dadd( -3.3636, -39.6156, -14.2402, 1.03 ) }
    dend_35 { pt3dadd( -4.38975, -40.7541, -13.8491, 0.81 ) }
    dend_35 { pt3dadd( -5.16799, -41.5558, -13.5134, 0.81 ) }
    dend_35 { pt3dadd( -5.90055, -42.1832, -13.1074, 1.25 ) }
    dend_35 { pt3dadd( -7.33958, -43.1166, -12.1906, 1.11 ) }
    dend_35 { pt3dadd( -8.24189, -43.5509, -11.5552, 1.4 ) }
    dend_35 { pt3dadd( -10.3109, -44.1913, -10.1028, 0.96 ) }
    dend_35 { pt3dadd( -10.7403, -44.2724, -9.83067, 0.96 ) }
    dend_35 { pt3dadd( -11.6617, -44.3808, -9.29236, 0.81 ) }
    dend_35 { pt3dadd( -12.7815, -44.487, -8.64199, 0.88 ) }
    dend_35 { pt3dadd( -13.2483, -44.5402, -8.39319, 1.18 ) }
    dend_35 { pt3dadd( -14.2749, -44.7284, -7.90869, 0.96 ) }
    dend_35 { pt3dadd( -16.4636, -45.3328, -6.90467, 0.66 ) }
    dend_35 { pt3dadd( -17.2694, -45.6237, -6.40215, 0.66 ) }
    dend_35 { pt3dadd( -18.684, -46.2704, -5.37527, 0.96 ) }
    dend_35 { pt3dadd( -19.5163, -46.7119, -4.70267, 0.96 ) }
    dend_35 { pt3dadd( -20.4076, -47.2272, -3.92234, 1.11 ) }
    dend_35 { pt3dadd( -21.7828, -48.0952, -2.59393, 1.11 ) }
    dend_35 { pt3dadd( -23.7043, -49.3413, -0.772867, 1.11 ) }
    dend_35 { pt3dadd( -24.3081, -49.7424, -0.276736, 0.88 ) }
    dend_35 { pt3dadd( -25.1626, -50.3284, 0.294233, 0.81 ) }
    dend_35 { pt3dadd( -26.0906, -50.9929, 0.803798, 0.81 ) }
    dend_35 { pt3dadd( -27.7694, -52.2337, 1.44207, 0.81 ) }
    dend_35 { pt3dadd( -29.2934, -53.3106, 1.74699, 0.96 ) }
    dend_35 { pt3dadd( -30.3925, -54.0425, 1.81426, 0.96 ) }
    dend_35 { pt3dadd( -31.0165, -54.4197, 1.82642, 0.96 ) }
    dend_35 { pt3dadd( -31.7805, -54.8499, 1.80448, 0.74 ) }
    dend_35 { pt3dadd( -32.3943, -55.1628, 1.72581, 0.74 ) }
    dend_35 { pt3dadd( -33.3866, -55.6028, 1.46517, 0.74 ) }
    dend_35 { pt3dadd( -34.3485, -55.9724, 1.18068, 0.59 ) }
    dend_35 { pt3dadd( -35.2721, -56.2668, 0.879071, 0.59 ) }
    dend_35 { pt3dadd( -36.4584, -56.5944, 0.4843, 0.59 ) }
    dend_35 { pt3dadd( -37.6976, -56.9099, 0.0770692, 0.59 ) }
    dend_35 { pt3dadd( -38.7194, -57.1631, -0.236831, 0.59 ) }
    dend_35 { pt3dadd( -39.4941, -57.3751, -0.526239, 0.74 ) }
    dend_35 { pt3dadd( -40.3737, -57.6238, -0.880149, 0.74 ) }
    dend_35 { pt3dadd( -40.9689, -57.8135, -1.12581, 0.74 ) }
    dend_35 { pt3dadd( -41.7447, -58.0979, -1.44559, 0.74 ) }
    dend_35 { pt3dadd( -42.8089, -58.5421, -1.87343, 0.74 ) }
    dend_35 { pt3dadd( -44.8228, -59.462, -2.69346, 0.74 ) }
    dend_35 { pt3dadd( -45.5264, -59.7881, -2.99568, 0.74 ) }
    dend_35 { pt3dadd( -46.572, -60.2343, -3.45032, 0.74 ) }
    dend_35 { pt3dadd( -47.3508, -60.5461, -3.76614, 0.74 ) }
    dend_35 { pt3dadd( -48.5189, -61.0377, -4.18393, 0.59 ) }
    dend_35 { pt3dadd( -49.3701, -61.3856, -4.43251, 0.59 ) }
    dend_35 { pt3dadd( -49.9187, -61.5949, -4.56167, 0.59 ) }
    dend_35 { pt3dadd( -51.2618, -62.0735, -4.90577, 0.59 ) }
    dend_35 { pt3dadd( -52.4637, -62.4796, -5.21083, 0.52 ) }
    dend_35 { pt3dadd( -53.6642, -62.8897, -5.50614, 0.52 ) }
    dend_35 { pt3dadd( -54.7344, -63.2995, -5.74732, 0.81 ) }
    dend_35 { pt3dadd( -55.8895, -63.7803, -5.9902, 1.18 ) }
    dend_35 { pt3dadd( -57.002, -64.2519, -6.14438, 1.4 ) }
    dend_35 { pt3dadd( -58.0895, -64.6976, -6.22357, 0.96 ) }
    dend_35 { pt3dadd( -58.9674, -65.0231, -6.24576, 0.59 ) }
    dend_35 { pt3dadd( -59.8367, -65.3093, -6.22313, 0.29 ) }
    dend_35 { pt3dadd( -61.5174, -65.852, -6.07996, 0.29 ) }
    dend_35 { pt3dadd( -63.1973, -66.3534, -5.85463, 0.81 ) }
    dend_35 { pt3dadd( -63.8113, -66.527, -5.76648, 1.03 ) }
    dend_35 { pt3dadd( -64.0897, -66.6015, -5.72841, 1.03 ) }
    dend_35 { pt3dadd( -64.8884, -66.7821, -5.63076, 0.66 ) }
    dend_35 { pt3dadd( -65.5941, -66.9094, -5.59503, 0.52 ) }
    dend_35 { pt3dadd( -66.521, -67.0366, -5.62682, 0.52 ) }
    dend_35 { pt3dadd( -67.4055, -67.1242, -5.72683, 0.52 ) }
    dend_35 { pt3dadd( -68.2643, -67.1852, -5.85655, 0.52 ) }
    dend_35 { pt3dadd( -69.3501, -67.2616, -6.03895, 0.52 ) }
    dend_35 { pt3dadd( -70.4581, -67.3647, -6.24154, 0.88 ) }
    dend_35 { pt3dadd( -71.3668, -67.4396, -6.41216, 1.03 ) }
    dend_35 { pt3dadd( -72.0207, -67.5054, -6.52698, 1.03 ) }
    dend_35 { pt3dadd( -73.8603, -67.7536, -6.87865, 0.44 ) }
    dend_35 { pt3dadd( -74.8743, -67.9421, -7.10325, 0.44 ) }
    dend_35 { pt3dadd( -75.3736, -68.0593, -7.22876, 0.44 ) }
    dend_35 { pt3dadd( -76.2676, -68.288, -7.45781, 0.44 ) }
    dend_35 { pt3dadd( -77.9967, -68.7779, -7.92991, 0.44 ) }
    dend_35 { pt3dadd( -79.5536, -69.2413, -8.36588, 0.44 ) }
    dend_35 { pt3dadd( -81.0222, -69.6841, -8.75953, 0.44 ) }
    dend_35 { pt3dadd( -82.0263, -69.9943, -9.01741, 1.11 ) }
    dend_35 { pt3dadd( -82.9987, -70.3006, -9.24174, 1.11 ) }
    dend_35 { pt3dadd( -83.483, -70.4677, -9.33933, 0.81 ) }
    dend_35 { pt3dadd( -83.9621, -70.6409, -9.42269, 0.37 ) }
    dend_35 { pt3dadd( -85.4056, -71.2367, -9.58542, 0.37 ) }
    dend_35 { pt3dadd( -86.4532, -71.7447, -9.66794, 0.37 ) }
    dend_35 { pt3dadd( -87.2461, -72.1975, -9.72884, 0.88 ) }
    dend_35 { pt3dadd( -87.6847, -72.483, -9.76729, 0.88 ) }
    dend_35 { pt3dadd( -88.6577, -73.1374, -9.90218, 0.37 ) }
    dend_35 { pt3dadd( -89.5995, -73.7945, -10.0692, 0.37 ) }
    dend_35 { pt3dadd( -90.7483, -74.619, -10.3379, 0.37 ) }
    dend_35 { pt3dadd( -91.1466, -74.8942, -10.46, 0.81 ) }
    dend_35 { pt3dadd( -91.7677, -75.3168, -10.6928, 0.88 ) }
    dend_35 { pt3dadd( -93.3398, -76.333, -11.3345, 0.37 ) }
    dend_35 { pt3dadd( -93.8383, -76.6295, -11.5472, 0.59 ) }
    dend_35 { pt3dadd( -94.7589, -77.1653, -11.9505, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_35 { pt3dadd( -95.6385, -77.6778, -12.2928, 1.18 ) }
    dend_35 { pt3dadd( -96.3586, -78.1184, -12.5086, 0.66 ) }
    dend_35 { pt3dadd( -97.0092, -78.5489, -12.6564, 0.66 ) }
    dend_35 { pt3dadd( -97.7783, -79.1019, -12.8055, 0.44 ) }
    dend_35 { pt3dadd( -99.219, -80.1641, -13.0612, 0.44 ) }
    dend_35 { pt3dadd( -101.029, -81.5211, -13.3303, 0.44 ) }
    dend_35 { pt3dadd( -103.031, -83.0473, -13.6039, 0.59 ) }
    dend_35 { pt3dadd( -104.051, -83.8213, -13.7469, 0.59 ) }
    dend_35 { pt3dadd( -105.338, -84.7778, -13.9399, 1.03 ) }
    dend_35 { pt3dadd( -106.012, -85.2612, -14.0454, 1.55 ) }
    dend_35 { pt3dadd( -106.75, -85.7568, -14.1696, 1.92 ) }
    dend_35 { pt3dadd( -107.647, -86.3395, -14.3417, 0.37 ) }
    dend_35 { pt3dadd( -108.241, -86.733, -14.4518, 0.37 ) }
    dend_35 { pt3dadd( -109.561, -87.6482, -14.6575, 0.37 ) }
    dend_35 { pt3dadd( -110.058, -88.0177, -14.7127, 0.59 ) }
    dend_35 { pt3dadd( -110.739, -88.5826, -14.7859, 0.59 ) }
    dend_35 { pt3dadd( -111.352, -89.1357, -14.8652, 0.29 ) }
    dend_35 { pt3dadd( -113.06, -90.752, -15.0937, 0.29 ) }
    dend_35 { pt3dadd( -113.488, -91.1715, -15.1566, 0.29 ) }
    dend_35 { pt3dadd( -114.069, -91.729, -15.2577, 1.33 ) }
    dend_35 { pt3dadd( -114.713, -92.3166, -15.3747, 1.77 ) }
    dend_35 { pt3dadd( -115.856, -93.2848, -15.5783, 0.37 ) }
    dend_35 { pt3dadd( -117.085, -94.2498, -15.7833, 0.37 ) }
    dend_35 { pt3dadd( -118.03, -94.9177, -15.9441, 0.44 ) }
    dend_35 { pt3dadd( -119.706, -96.0763, -16.2124, 0.44 ) }
    dend_35 { pt3dadd( -119.948, -96.2457, -16.2481, 1.03 ) }
    dend_35 { pt3dadd( -120.512, -96.6315, -16.3157, 1.77 ) }
    dend_35 { pt3dadd( -121.007, -96.9739, -16.3592, 1.92 ) }
    dend_35 { pt3dadd( -121.819, -97.5713, -16.4327, 0.44 ) }
    dend_35 { pt3dadd( -122.585, -98.1893, -16.4133, 0.37 ) }
    dend_35 { pt3dadd( -122.95, -98.509, -16.3567, 0.37 ) }
    dend_35 { pt3dadd( -123.749, -99.2317, -16.1875, 0.37 ) }
    dend_35 { pt3dadd( -124.64, -100.078, -15.9545, 1.92 ) }
    dend_35 { pt3dadd( -125.058, -100.492, -15.8257, 2.14 ) }
    dend_35 { pt3dadd( -126.336, -101.852, -15.3663, 0.29 ) }
    dend_35 { pt3dadd( -126.94, -102.572, -15.0163, 0.29 ) }
    dend_35 { pt3dadd( -127.136, -102.838, -14.868, 0.29 ) }
    dend_35 { pt3dadd( -127.487, -103.43, -14.4856, 0.29 ) }
    dend_35 { pt3dadd( -127.663, -103.758, -14.2545, 0.44 ) }
    dend_35 { pt3dadd( -127.878, -104.162, -13.9747, 0.66 ) }
    dend_35 { pt3dadd( -128.893, -106.081, -12.6942, 0.66 ) }
    dend_35 { pt3dadd( -129.249, -106.741, -12.2473, 0.74 ) }
    dend_35 { pt3dadd( -129.711, -107.531, -11.7303, 0.22 ) }
    dend_35 { pt3dadd( -130.043, -108.077, -11.3993, 0.22 ) }
    dend_35 { pt3dadd( -130.394, -108.641, -11.0773, 0.59 ) }
    dend_35 { pt3dadd( -130.995, -109.593, -10.6099, 0.22 ) }
    dend_35 { pt3dadd( -131.446, -110.328, -10.344, 0.22 ) }
    dend_35 { pt3dadd( -131.829, -111.024, -10.1185, 1.11 ) }
    dend_35 { pt3dadd( -132.151, -111.685, -9.90178, 1.84 ) }
    dend_35 { pt3dadd( -132.762, -113.117, -9.2962, 0.37 ) }
    dend_35 { pt3dadd( -133.062, -113.928, -8.90781, 0.37 ) }
    dend_35 { pt3dadd( -133.272, -114.589, -8.57751, 0.37 ) }
    dend_35 { pt3dadd( -133.533, -115.486, -8.09897, 0.37 ) }
    dend_35 { pt3dadd( -133.839, -116.615, -7.45711, 0.96 ) }
    dend_35 { pt3dadd( -134.201, -117.96, -6.65175, 0.29 ) }
    dend_35 { pt3dadd( -134.41, -118.798, -6.14541, 0.29 ) }
    dend_35 { pt3dadd( -134.555, -119.386, -5.73725, 0.29 ) }
    dend_35 { pt3dadd( -134.637, -119.679, -5.50881, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 58/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.165127, -34.7342, -15.4256, 2.06 ) }
    dend_2 { pt3dadd( 1.41176, -36.9586, -14.6184, 2.06 ) }
    dend_2 { pt3dadd( 2.18305, -38.5058, -14.1357, 2.06 ) }
    dend_2 { pt3dadd( 2.87906, -39.9976, -13.6994, 2.06 ) }
    dend_2 { pt3dadd( 4.40994, -43.279, -12.7395, 1.84 ) }
    dend_2 { pt3dadd( 5.08773, -44.7318, -12.3146, 1.92 ) }
    dend_2 { pt3dadd( 5.97208, -46.6273, -11.7601, 2.06 ) }
    dend_2 { pt3dadd( 6.75981, -48.6214, -11.0053, 2.28 ) }
    dend_2 { pt3dadd( 6.82764, -48.811, -10.9289, 2.28 ) }
    // Section: dend_82, id: dend_82, parent: dend_66 (entry count 67/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -9.58708, 34.3913, -2.44363, 0.66 ) }
    dend_82 { pt3dadd( -8.16172, 34.8896, -7.22658, 0.66 ) }
    dend_82 { pt3dadd( -7.90738, 34.9785, -8.08005, 0.96 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 70/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.58708, 34.3913, -2.44363, 1.84 ) }
    dend_67 { pt3dadd( -9.86394, 34.5388, -2.43401, 1.84 ) }
    dend_67 { pt3dadd( -11.0899, 35.2133, -2.40736, 1.47 ) }
    dend_67 { pt3dadd( -12.1481, 35.7623, -2.33929, 1.47 ) }
    dend_67 { pt3dadd( -12.7787, 36.0603, -2.23862, 1.47 ) }
    dend_67 { pt3dadd( -13.6195, 36.4441, -2.06542, 1.47 ) }
    dend_67 { pt3dadd( -14.5529, 36.8702, -1.87313, 1.4 ) }
    dend_67 { pt3dadd( -16.0565, 37.5255, -1.54431, 1.4 ) }
    dend_67 { pt3dadd( -17.2591, 38.0321, -1.24673, 1.4 ) }
    dend_67 { pt3dadd( -18.828, 38.6735, -0.777482, 1.4 ) }
    dend_67 { pt3dadd( -19.6999, 39.0195, -0.467042, 1.25 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 81/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 14.309, 51.378, -34.0048, 0.29 ) }
    dend_65 { pt3dadd( 15.3902, 51.5949, -34.4268, 0.29 ) }
    dend_65 { pt3dadd( 16.5341, 51.7321, -34.8605, 0.29 ) }
    dend_65 { pt3dadd( 17.4878, 51.7872, -35.2418, 0.29 ) }
    dend_65 { pt3dadd( 18.3149, 51.7812, -35.571, 0.29 ) }
    dend_65 { pt3dadd( 19.3506, 51.6949, -35.985, 0.52 ) }
    dend_65 { pt3dadd( 19.9507, 51.5996, -36.2159, 0.52 ) }
    dend_65 { pt3dadd( 20.3441, 51.4634, -36.4022, 0.52 ) }
    dend_65 { pt3dadd( 20.8213, 51.2154, -36.6158, 0.22 ) }
    dend_65 { pt3dadd( 21.3009, 50.9221, -36.8077, 0.22 ) }
    dend_65 { pt3dadd( 21.8322, 50.5803, -37.0283, 0.22 ) }
    dend_65 { pt3dadd( 22.4741, 50.2363, -37.2511, 0.22 ) }
    dend_65 { pt3dadd( 23.4496, 49.8157, -37.5632, 0.66 ) }
    dend_65 { pt3dadd( 24.1785, 49.5552, -37.7679, 0.66 ) }
    dend_65 { pt3dadd( 24.9187, 49.3249, -37.9465, 0.37 ) }
    dend_65 { pt3dadd( 25.2931, 49.2152, -38.0358, 0.37 ) }
    dend_65 { pt3dadd( 26.662, 48.857, -38.3376, 0.22 ) }
    dend_65 { pt3dadd( 27.206, 48.7186, -38.465, 0.29 ) }
    dend_65 { pt3dadd( 27.709, 48.5972, -38.5899, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_65 { pt3dadd( 27.9788, 48.5309, -38.6868, 0.29 ) }
    dend_65 { pt3dadd( 29.0573, 48.2383, -39.1686, 0.29 ) }
    dend_65 { pt3dadd( 29.4899, 48.0857, -39.3828, 0.29 ) }
    dend_65 { pt3dadd( 30.1422, 47.7658, -39.8075, 0.66 ) }
    dend_65 { pt3dadd( 30.9749, 47.2505, -40.5528, 1.77 ) }
    dend_65 { pt3dadd( 31.6508, 46.7763, -41.2578, 1.11 ) }
    dend_65 { pt3dadd( 31.9675, 46.535, -41.6613, 0.44 ) }
    dend_65 { pt3dadd( 32.5326, 46.0636, -42.4612, 0.44 ) }
    dend_65 { pt3dadd( 33.2733, 45.3904, -43.5569, 1.33 ) }
    dend_65 { pt3dadd( 34.2785, 44.4275, -45.1122, 1.92 ) }
    dend_65 { pt3dadd( 34.7722, 43.9488, -45.8955, 0.44 ) }
    dend_65 { pt3dadd( 35.9194, 42.897, -47.6367, 0.44 ) }
    dend_65 { pt3dadd( 36.2955, 42.5869, -48.1694, 0.96 ) }
    dend_65 { pt3dadd( 36.5465, 42.404, -48.4868, 1.11 ) }
    dend_65 { pt3dadd( 37.5212, 41.7484, -49.4304, 0.29 ) }
    dend_65 { pt3dadd( 37.8903, 41.5006, -49.6927, 0.29 ) }
    dend_65 { pt3dadd( 38.404, 41.1314, -49.9885, 0.29 ) }
    dend_65 { pt3dadd( 38.8879, 40.7646, -50.2033, 0.29 ) }
    dend_65 { pt3dadd( 39.3849, 40.3787, -50.4192, 0.29 ) }
    dend_65 { pt3dadd( 40.1021, 39.8112, -50.7249, 0.29 ) }
    dend_65 { pt3dadd( 41.1911, 38.9426, -51.1627, 1.18 ) }
    dend_65 { pt3dadd( 41.7374, 38.5048, -51.3898, 1.4 ) }
    dend_65 { pt3dadd( 42.3406, 38.0199, -51.6509, 0.44 ) }
    dend_65 { pt3dadd( 42.8965, 37.5729, -51.892, 0.44 ) }
    dend_65 { pt3dadd( 43.944, 36.7059, -52.3335, 0.44 ) }
    dend_65 { pt3dadd( 44.5669, 36.1713, -52.6025, 1.11 ) }
    dend_65 { pt3dadd( 45.3757, 35.465, -52.9264, 1.55 ) }
    dend_65 { pt3dadd( 46.0175, 34.8744, -53.1838, 0.44 ) }
    dend_65 { pt3dadd( 46.528, 34.3713, -53.368, 0.44 ) }
    dend_65 { pt3dadd( 47.0437, 33.7896, -53.5591, 0.44 ) }
    dend_65 { pt3dadd( 47.614, 33.081, -53.8356, 0.66 ) }
    dend_65 { pt3dadd( 47.8425, 32.7921, -53.9917, 0.96 ) }
    dend_65 { pt3dadd( 48.2663, 32.2915, -54.3215, 1.03 ) }
    dend_65 { pt3dadd( 48.6859, 31.8325, -54.6476, 0.22 ) }
    dend_65 { pt3dadd( 49.448, 31.0522, -55.2461, 0.22 ) }
    dend_65 { pt3dadd( 50.5691, 29.9933, -56.0776, 0.37 ) }
    dend_65 { pt3dadd( 51.3726, 29.2564, -56.5979, 0.66 ) }
    dend_65 { pt3dadd( 52.053, 28.6318, -57.002, 0.44 ) }
    dend_65 { pt3dadd( 52.5879, 28.1633, -57.2837, 0.44 ) }
    dend_65 { pt3dadd( 52.8743, 27.8903, -57.4007, 0.44 ) }
    dend_65 { pt3dadd( 53.2776, 27.4701, -57.4644, 1.03 ) }
    dend_65 { pt3dadd( 53.9213, 26.695, -57.4239, 1.18 ) }
    dend_65 { pt3dadd( 54.3291, 26.1886, -57.3639, 0.44 ) }
    dend_65 { pt3dadd( 54.5151, 25.9651, -57.3368, 0.44 ) }
    dend_65 { pt3dadd( 55.6967, 24.6363, -57.2259, 0.44 ) }
    dend_65 { pt3dadd( 56.4199, 23.8664, -57.2461, 0.44 ) }
    dend_65 { pt3dadd( 56.9731, 23.3002, -57.3175, 0.44 ) }
    dend_65 { pt3dadd( 57.9812, 22.3369, -57.583, 0.44 ) }
    dend_65 { pt3dadd( 58.6261, 21.7638, -57.808, 0.59 ) }
    dend_65 { pt3dadd( 59.3808, 21.0958, -58.1273, 1.11 ) }
    dend_65 { pt3dadd( 60.5418, 20.105, -58.7011, 1.33 ) }
    dend_65 { pt3dadd( 61.0553, 19.6517, -58.9699, 1.33 ) }
    dend_65 { pt3dadd( 61.8683, 18.9241, -59.3485, 0.59 ) }
    dend_65 { pt3dadd( 62.4852, 18.3788, -59.6337, 0.59 ) }
    dend_65 { pt3dadd( 63.2464, 17.742, -59.9522, 0.59 ) }
    dend_65 { pt3dadd( 64.7597, 16.5803, -60.4693, 0.37 ) }
    dend_65 { pt3dadd( 65.698, 15.9311, -60.7462, 0.37 ) }
    dend_65 { pt3dadd( 67.2115, 14.9605, -61.1651, 0.37 ) }
    dend_65 { pt3dadd( 68.2779, 14.2928, -61.4541, 0.44 ) }
    dend_65 { pt3dadd( 68.7737, 13.9988, -61.5934, 0.81 ) }
    dend_65 { pt3dadd( 69.4864, 13.6025, -61.8015, 1.03 ) }
    dend_65 { pt3dadd( 70.0375, 13.2925, -61.9637, 0.29 ) }
    dend_65 { pt3dadd( 71.2402, 12.5815, -62.3819, 0.29 ) }
    dend_65 { pt3dadd( 72.1607, 11.9756, -62.7558, 0.29 ) }
    dend_65 { pt3dadd( 73.2279, 11.1678, -63.2404, 0.29 ) }
    dend_65 { pt3dadd( 73.6426, 10.8056, -63.4693, 0.66 ) }
    dend_65 { pt3dadd( 74.0041, 10.4414, -63.7585, 0.96 ) }
    dend_65 { pt3dadd( 74.593, 9.66717, -64.4304, 0.96 ) }
    dend_65 { pt3dadd( 74.9633, 9.0301, -65.0068, 0.37 ) }
    dend_65 { pt3dadd( 75.2784, 8.32286, -65.6341, 0.37 ) }
    dend_65 { pt3dadd( 75.4486, 7.83974, -66.0481, 0.37 ) }
    dend_65 { pt3dadd( 75.9129, 6.31198, -67.5163, 0.37 ) }
    dend_65 { pt3dadd( 76.3068, 4.94526, -68.8524, 0.37 ) }
    dend_65 { pt3dadd( 76.4911, 4.28833, -69.4903, 0.52 ) }
    dend_65 { pt3dadd( 76.8104, 3.18208, -70.5699, 0.29 ) }
    dend_65 { pt3dadd( 76.9116, 2.85407, -70.9098, 1.18 ) }
    dend_65 { pt3dadd( 77.6476, 0.602147, -73.3507, 0.37 ) }
    dend_65 { pt3dadd( 77.8961, -0.225706, -74.2434, 0.37 ) }
    dend_65 { pt3dadd( 78.0784, -0.888294, -75.0937, 0.44 ) }
    dend_65 { pt3dadd( 78.1432, -1.19453, -75.519, 0.44 ) }
    dend_65 { pt3dadd( 78.3558, -2.53304, -77.3886, 0.44 ) }
    dend_65 { pt3dadd( 78.3713, -2.73362, -77.657, 0.81 ) }
    dend_65 { pt3dadd( 78.3509, -3.19291, -78.242, 0.81 ) }
    dend_65 { pt3dadd( 78.1221, -4.59838, -80.2001, 0.29 ) }
    dend_65 { pt3dadd( 78.0485, -4.89212, -80.6047, 0.29 ) }
    dend_65 { pt3dadd( 77.9378, -5.30401, -81.1448, 0.29 ) }
    dend_65 { pt3dadd( 77.7805, -5.93859, -81.8826, 0.29 ) }
    dend_65 { pt3dadd( 77.558, -7.14704, -83.1845, 1.11 ) }
    dend_65 { pt3dadd( 77.4468, -7.97576, -84.0169, 0.29 ) }
    dend_65 { pt3dadd( 77.4001, -8.42865, -84.3986, 0.29 ) }
    dend_65 { pt3dadd( 77.3568, -9.25896, -85.1348, 0.29 ) }
    dend_65 { pt3dadd( 77.3522, -9.68935, -85.5087, 0.29 ) }
    dend_65 { pt3dadd( 77.4242, -10.5162, -86.1327, 0.29 ) }
    dend_65 { pt3dadd( 77.5425, -11.2885, -86.6153, 0.81 ) }
    dend_65 { pt3dadd( 77.6468, -11.854, -86.9418, 0.81 ) }
    dend_65 { pt3dadd( 77.8826, -13.1196, -87.6588, 0.96 ) }
    dend_65 { pt3dadd( 77.9433, -13.5722, -87.8901, 0.29 ) }
    dend_65 { pt3dadd( 78.0643, -14.5822, -88.3424, 0.29 ) }
    dend_65 { pt3dadd( 78.1307, -15.2418, -88.5739, 0.52 ) }
    dend_65 { pt3dadd( 78.147, -15.6885, -88.6771, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_65 { pt3dadd( 78.1453, -16.131, -88.7441, 0.22 ) }
    dend_65 { pt3dadd( 78.0878, -16.9988, -88.7918, 0.22 ) }
    dend_65 { pt3dadd( 78.0185, -17.7147, -88.8043, 0.22 ) }
    dend_65 { pt3dadd( 77.9662, -18.0916, -88.7878, 0.37 ) }
    dend_65 { pt3dadd( 77.8228, -19.1002, -88.6884, 0.37 ) }
    dend_65 { pt3dadd( 77.7641, -19.6459, -88.6266, 0.66 ) }
    dend_65 { pt3dadd( 77.6868, -20.2768, -88.5704, 0.66 ) }
    dend_65 { pt3dadd( 77.6169, -20.8882, -88.5352, 0.22 ) }
    dend_65 { pt3dadd( 77.5517, -21.5546, -88.5183, 0.22 ) }
    dend_65 { pt3dadd( 77.4913, -22.9016, -88.5185, 0.22 ) }
    dend_65 { pt3dadd( 77.4896, -24.2456, -88.5802, 0.22 ) }
    dend_65 { pt3dadd( 77.5181, -25.1683, -88.6794, 0.44 ) }
    dend_65 { pt3dadd( 77.5772, -25.8789, -88.7926, 0.44 ) }
    dend_65 { pt3dadd( 77.753, -26.9962, -89.0226, 0.44 ) }
    dend_65 { pt3dadd( 77.9779, -27.8971, -89.2515, 0.44 ) }
    dend_65 { pt3dadd( 78.304, -28.8139, -89.5591, 1.11 ) }
    dend_65 { pt3dadd( 78.6626, -29.6274, -89.8578, 0.44 ) }
    dend_65 { pt3dadd( 78.882, -30.04, -90.0253, 0.44 ) }
    dend_65 { pt3dadd( 79.4475, -30.9915, -90.4541, 0.44 ) }
    dend_65 { pt3dadd( 79.7357, -31.4421, -90.6711, 0.44 ) }
    dend_65 { pt3dadd( 80.5288, -32.6451, -91.2599, 0.44 ) }
    dend_65 { pt3dadd( 81.332, -33.8079, -91.7978, 0.44 ) }
    dend_65 { pt3dadd( 82.1294, -34.933, -92.3486, 0.44 ) }
    dend_65 { pt3dadd( 82.4976, -35.4303, -92.6057, 0.66 ) }
    dend_65 { pt3dadd( 82.7009, -35.6978, -92.7456, 0.66 ) }
    dend_65 { pt3dadd( 83.2151, -36.3849, -93.0621, 0.29 ) }
    dend_65 { pt3dadd( 83.7015, -37.0443, -93.3426, 0.29 ) }
    dend_65 { pt3dadd( 84.3623, -38.0058, -93.7224, 0.29 ) }
    dend_65 { pt3dadd( 85.0002, -39.0269, -94.0917, 0.29 ) }
    dend_65 { pt3dadd( 85.2374, -39.4114, -94.2286, 0.29 ) }
    dend_65 { pt3dadd( 85.8972, -40.4796, -94.6043, 0.29 ) }
    dend_65 { pt3dadd( 86.2169, -41.0261, -94.7822, 0.59 ) }
    dend_65 { pt3dadd( 86.6428, -41.8197, -95.0323, 0.59 ) }
    dend_65 { pt3dadd( 87.1352, -42.8, -95.3073, 0.29 ) }
    dend_65 { pt3dadd( 87.4736, -43.4965, -95.5166, 0.29 ) }
    dend_65 { pt3dadd( 88.0896, -44.7575, -96.01, 0.29 ) }
    dend_65 { pt3dadd( 88.3534, -45.2838, -96.2501, 0.29 ) }
    dend_65 { pt3dadd( 88.6486, -45.9307, -96.5613, 0.59 ) }
    dend_65 { pt3dadd( 88.8957, -46.5468, -96.8586, 1.03 ) }
    dend_65 { pt3dadd( 89.0247, -46.9243, -97.0531, 1.03 ) }
    dend_65 { pt3dadd( 89.465, -48.5065, -97.9189, 0.37 ) }
    dend_65 { pt3dadd( 89.7057, -49.5167, -98.4831, 0.37 ) }
    dend_65 { pt3dadd( 89.8483, -50.1813, -98.8805, 0.37 ) }
    dend_65 { pt3dadd( 89.9965, -50.9968, -99.3726, 0.37 ) }
    dend_65 { pt3dadd( 90.236, -52.3196, -100.156, 0.29 ) }
    dend_65 { pt3dadd( 90.3493, -52.914, -100.466, 0.29 ) }
    dend_65 { pt3dadd( 90.4281, -53.2965, -100.629, 0.29 ) }
    dend_65 { pt3dadd( 90.6612, -54.4018, -101.083, 0.37 ) }
    dend_65 { pt3dadd( 90.7708, -54.8849, -101.258, 0.37 ) }
    dend_65 { pt3dadd( 90.9693, -55.784, -101.527, 0.22 ) }
    dend_65 { pt3dadd( 91.3181, -57.2494, -101.804, 0.22 ) }
    dend_65 { pt3dadd( 91.4074, -57.588, -101.856, 0.66 ) }
    dend_65 { pt3dadd( 91.5479, -58.0748, -101.918, 0.74 ) }
    dend_65 { pt3dadd( 91.6752, -58.4756, -101.952, 0.22 ) }
    dend_65 { pt3dadd( 91.8478, -58.9817, -102.03, 0.22 ) }
    dend_65 { pt3dadd( 92.104, -59.7718, -102.195, 0.37 ) }
    dend_65 { pt3dadd( 92.2846, -60.2693, -102.337, 0.37 ) }
    dend_65 { pt3dadd( 92.7107, -61.3451, -102.724, 0.37 ) }
    dend_65 { pt3dadd( 93.019, -62.0421, -103.01, 0.37 ) }
    dend_65 { pt3dadd( 93.469, -62.9679, -103.428, 0.37 ) }
    dend_65 { pt3dadd( 93.6885, -63.3994, -103.619, 0.44 ) }
    dend_65 { pt3dadd( 93.9391, -63.876, -103.814, 0.44 ) }
    dend_65 { pt3dadd( 94.2208, -64.3898, -103.989, 0.44 ) }
    dend_65 { pt3dadd( 94.6565, -65.1589, -104.179, 0.44 ) }
    dend_65 { pt3dadd( 94.7422, -65.3067, -104.204, 0.59 ) }
    dend_65 { pt3dadd( 95.4723, -66.5278, -104.3, 0.44 ) }
    dend_65 { pt3dadd( 95.8623, -67.2056, -104.328, 0.44 ) }
    dend_65 { pt3dadd( 96.262, -67.9358, -104.275, 0.59 ) }
    dend_65 { pt3dadd( 96.4381, -68.272, -104.225, 0.59 ) }
    dend_65 { pt3dadd( 96.7481, -68.8893, -104.091, 0.37 ) }
    dend_65 { pt3dadd( 96.9393, -69.2854, -103.983, 0.37 ) }
    dend_65 { pt3dadd( 97.293, -70.0198, -103.735, 0.37 ) }
    dend_65 { pt3dadd( 97.8425, -71.2147, -103.282, 0.52 ) }
    dend_65 { pt3dadd( 97.9375, -71.4133, -103.203, 0.52 ) }
    dend_65 { pt3dadd( 98.2371, -71.9878, -102.969, 0.15 ) }
    dend_65 { pt3dadd( 98.5514, -72.524, -102.754, 0.15 ) }
    dend_65 { pt3dadd( 98.7112, -72.7631, -102.669, 0.44 ) }
    dend_65 { pt3dadd( 98.9567, -73.0885, -102.606, 0.74 ) }
    dend_65 { pt3dadd( 99.4611, -73.7382, -102.627, 0.15 ) }
    dend_65 { pt3dadd( 99.6476, -73.9686, -102.641, 0.15 ) }
    dend_65 { pt3dadd( 99.8694, -74.2528, -102.677, 0.15 ) }
    dend_65 { pt3dadd( 100.199, -74.6652, -102.736, 0.66 ) }
    dend_65 { pt3dadd( 100.798, -75.3802, -102.871, 0.29 ) }
    dend_65 { pt3dadd( 101.237, -75.8811, -103.006, 0.29 ) }
    dend_65 { pt3dadd( 101.684, -76.4087, -103.181, 0.29 ) }
    dend_65 { pt3dadd( 102.358, -77.2189, -103.46, 0.29 ) }
    dend_65 { pt3dadd( 102.913, -77.884, -103.724, 0.29 ) }
    dend_65 { pt3dadd( 103.342, -78.4009, -103.95, 0.52 ) }
    dend_65 { pt3dadd( 103.715, -78.8358, -104.189, 0.29 ) }
    dend_65 { pt3dadd( 104.321, -79.5908, -104.673, 0.29 ) }
    dend_65 { pt3dadd( 104.754, -80.1296, -105.057, 0.29 ) }
    dend_65 { pt3dadd( 105.481, -81.0666, -105.752, 0.29 ) }
    dend_65 { pt3dadd( 105.841, -81.5785, -106.13, 0.29 ) }
    dend_65 { pt3dadd( 106.611, -82.7186, -106.953, 0.29 ) }
    dend_65 { pt3dadd( 106.991, -83.2773, -107.365, 0.29 ) }
    dend_65 { pt3dadd( 107.268, -83.672, -107.689, 0.29 ) }
    dend_65 { pt3dadd( 107.596, -84.1597, -108.12, 0.29 ) }
    dend_65 { pt3dadd( 107.75, -84.4115, -108.33, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 98/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 14.309, 51.378, -34.0048, 0.52 ) }
    dend_64 { pt3dadd( 15.2249, 51.4103, -34.0826, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_64 { pt3dadd( 16.3794, 51.6482, -34.2053, 0.52 ) }
    dend_64 { pt3dadd( 17.2249, 51.9782, -34.4102, 0.29 ) }
    dend_64 { pt3dadd( 17.9382, 52.4499, -34.6845, 0.29 ) }
    dend_64 { pt3dadd( 18.1891, 52.7131, -34.9154, 0.29 ) }
    dend_64 { pt3dadd( 18.4611, 53.1006, -35.2849, 0.59 ) }
    dend_64 { pt3dadd( 18.741, 53.7914, -35.9386, 0.59 ) }
    dend_64 { pt3dadd( 18.9892, 54.7435, -36.8142, 0.29 ) }
    dend_64 { pt3dadd( 19.0899, 55.2786, -37.3433, 0.29 ) }
    dend_64 { pt3dadd( 19.3676, 56.7752, -38.9314, 0.66 ) }
    dend_64 { pt3dadd( 19.453, 57.16, -39.3451, 0.66 ) }
    dend_64 { pt3dadd( 19.5472, 57.5019, -39.7089, 0.88 ) }
    dend_64 { pt3dadd( 19.6359, 57.7415, -39.9633, 0.88 ) }
    dend_64 { pt3dadd( 19.9479, 58.3333, -40.5163, 0.15 ) }
    dend_64 { pt3dadd( 20.2511, 58.7679, -40.9185, 0.15 ) }
    dend_64 { pt3dadd( 20.5093, 59.0561, -41.1194, 0.15 ) }
    dend_64 { pt3dadd( 20.8141, 59.2974, -41.4025, 0.15 ) }
    dend_64 { pt3dadd( 20.8141, 59.2974, -41.4025, 0.29 ) }
    dend_64 { pt3dadd( 21.5337, 59.6309, -42.1362, 0.29 ) }
    dend_64 { pt3dadd( 21.8309, 59.7797, -42.4329, 0.29 ) }
    dend_64 { pt3dadd( 22.2815, 60.0147, -42.8736, 0.29 ) }
    dend_64 { pt3dadd( 23.2157, 60.567, -43.9672, 0.66 ) }
    dend_64 { pt3dadd( 23.5676, 60.8033, -44.392, 0.66 ) }
    dend_64 { pt3dadd( 23.9831, 61.1059, -44.91, 0.29 ) }
    dend_64 { pt3dadd( 24.6214, 61.6034, -45.703, 0.29 ) }
    dend_64 { pt3dadd( 24.9715, 61.8995, -46.1385, 0.29 ) }
    dend_64 { pt3dadd( 26.1269, 62.9411, -47.5423, 0.37 ) }
    dend_64 { pt3dadd( 26.5775, 63.3569, -48.0673, 1.33 ) }
    dend_64 { pt3dadd( 27.0423, 63.7819, -48.607, 0.44 ) }
    dend_64 { pt3dadd( 27.2796, 63.9807, -48.8697, 0.44 ) }
    dend_64 { pt3dadd( 27.5606, 64.197, -49.2449, 0.44 ) }
    dend_64 { pt3dadd( 27.7842, 64.3851, -49.5716, 0.44 ) }
    dend_64 { pt3dadd( 28.4342, 64.9626, -50.4888, 0.44 ) }
    dend_64 { pt3dadd( 28.701, 65.2287, -50.9415, 0.44 ) }
    dend_64 { pt3dadd( 28.9463, 65.497, -51.4002, 0.44 ) }
    dend_64 { pt3dadd( 29.9415, 66.5409, -53.2806, 0.74 ) }
    dend_64 { pt3dadd( 30.1723, 66.763, -53.6907, 1.18 ) }
    dend_64 { pt3dadd( 30.3683, 66.9269, -53.994, 1.33 ) }
    dend_64 { pt3dadd( 30.9885, 67.3953, -54.8502, 0.52 ) }
    dend_64 { pt3dadd( 31.2428, 67.5756, -55.2187, 0.29 ) }
    dend_64 { pt3dadd( 31.7122, 67.8823, -55.8635, 0.29 ) }
    dend_64 { pt3dadd( 32.0935, 68.1134, -56.3349, 0.81 ) }
    dend_64 { pt3dadd( 32.9389, 68.6041, -57.4378, 0.15 ) }
    dend_64 { pt3dadd( 33.5496, 68.9966, -58.2573, 0.81 ) }
    dend_64 { pt3dadd( 34.5874, 69.7495, -59.7527, 0.37 ) }
    dend_64 { pt3dadd( 34.7699, 69.8977, -60.0369, 0.37 ) }
    dend_64 { pt3dadd( 35.0989, 70.1998, -60.5758, 0.37 ) }
    dend_64 { pt3dadd( 35.6104, 70.7041, -61.467, 0.37 ) }
    dend_64 { pt3dadd( 36.0468, 71.1799, -62.2361, 0.29 ) }
    dend_64 { pt3dadd( 36.7677, 71.998, -63.3909, 0.29 ) }
    dend_64 { pt3dadd( 37.0249, 72.3087, -63.7606, 1.03 ) }
    dend_64 { pt3dadd( 37.3347, 72.7152, -64.2618, 1.33 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 51/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 4.49889, 31.6108, 8.19982, 1.11 ) }
    dend_58 { pt3dadd( 7.16163, 31.303, 11.4924, 1.11 ) }
    dend_58 { pt3dadd( 8.08936, 31.2176, 12.448, 1.11 ) }
    dend_58 { pt3dadd( 8.17271, 31.2186, 12.5225, 1.11 ) }
    dend_58 { pt3dadd( 8.31835, 31.2411, 12.6489, 1.11 ) }
    dend_58 { pt3dadd( 8.88321, 31.4044, 13.1315, 1.25 ) }
    dend_58 { pt3dadd( 8.98698, 31.4448, 13.2169, 1.25 ) }
    dend_58 { pt3dadd( 9.63537, 31.9103, 13.5757, 1.03 ) }
    dend_58 { pt3dadd( 10.7941, 32.9173, 14.2795, 0.88 ) }
    dend_58 { pt3dadd( 11.4774, 33.5254, 14.6604, 0.81 ) }
    dend_58 { pt3dadd( 11.9654, 33.9852, 14.9193, 0.81 ) }
    dend_58 { pt3dadd( 12.294, 34.296, 15.083, 0.81 ) }
    dend_58 { pt3dadd( 12.7258, 34.6775, 15.2541, 0.81 ) }
    dend_58 { pt3dadd( 13.2692, 35.0825, 15.3882, 0.88 ) }
    dend_58 { pt3dadd( 13.9353, 35.4345, 15.5476, 0.96 ) }
    dend_58 { pt3dadd( 14.3392, 35.5768, 15.6743, 0.96 ) }
    dend_58 { pt3dadd( 14.8947, 35.7253, 15.884, 0.96 ) }
    dend_58 { pt3dadd( 15.3566, 35.8381, 16.0779, 1.11 ) }
    dend_58 { pt3dadd( 16.1104, 36.0183, 16.4116, 1.11 ) }
    dend_58 { pt3dadd( 18.3091, 36.5434, 17.4382, 1.11 ) }
    dend_58 { pt3dadd( 19.0678, 36.7357, 17.8065, 1.11 ) }
    dend_58 { pt3dadd( 19.7744, 36.9425, 18.1404, 0.88 ) }
    dend_58 { pt3dadd( 20.4954, 37.2154, 18.4674, 0.88 ) }
    dend_58 { pt3dadd( 21.0645, 37.4748, 18.7343, 1.03 ) }
    dend_58 { pt3dadd( 21.1218, 37.5057, 18.76, 1.03 ) }
    dend_58 { pt3dadd( 21.7958, 37.9031, 18.9949, 1.03 ) }
    dend_58 { pt3dadd( 22.2568, 38.1785, 19.2858, 0.96 ) }
    dend_58 { pt3dadd( 22.9568, 38.5764, 19.8798, 0.96 ) }
    dend_58 { pt3dadd( 23.758, 39.0046, 20.6418, 1.33 ) }
    dend_58 { pt3dadd( 23.8114, 39.0319, 20.6948, 1.33 ) }
    dend_58 { pt3dadd( 24.1088, 39.179, 20.9853, 1.33 ) }
    dend_58 { pt3dadd( 25.6114, 39.879, 22.5496, 1.33 ) }
    dend_58 { pt3dadd( 26.0959, 40.0887, 23.0845, 0.81 ) }
    dend_58 { pt3dadd( 26.6279, 40.3029, 23.6824, 0.81 ) }
    dend_58 { pt3dadd( 26.8202, 40.3847, 23.8782, 1.11 ) }
    dend_58 { pt3dadd( 27.1231, 40.5216, 24.1807, 1.25 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 87/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 4.49889, 31.6108, 8.19982, 1.55 ) }
    dend_55 { pt3dadd( 5.50789, 32.887, 9.50282, 1.55 ) }
    dend_55 { pt3dadd( 6.22076, 33.659, 10.2283, 0.81 ) }
    dend_55 { pt3dadd( 6.31372, 33.7546, 10.3103, 0.81 ) }
    dend_55 { pt3dadd( 6.78975, 34.2676, 10.7721, 0.81 ) }
    dend_55 { pt3dadd( 7.16768, 34.703, 11.1559, 0.88 ) }
    dend_55 { pt3dadd( 7.71503, 35.4138, 11.7772, 0.88 ) }
    dend_55 { pt3dadd( 8.29523, 36.2773, 12.3884, 1.03 ) }
    dend_55 { pt3dadd( 8.49046, 36.6577, 12.6285, 0.88 ) }
    dend_55 { pt3dadd( 8.96789, 37.9092, 13.3735, 1.11 ) }
    dend_55 { pt3dadd( 9.06288, 38.2917, 13.5927, 0.96 ) }
    dend_55 { pt3dadd( 9.2018, 39.1887, 14.0863, 0.66 ) }
    dend_55 { pt3dadd( 9.27302, 40.0992, 14.5276, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 9.27281, 40.7378, 14.7614, 0.66 ) }
    dend_55 { pt3dadd( 9.2442, 41.217, 14.9334, 0.66 ) }
    dend_55 { pt3dadd( 9.14193, 42.098, 15.2122, 0.66 ) }
    dend_55 { pt3dadd( 9.13455, 42.1457, 15.2287, 0.66 ) }
    dend_55 { pt3dadd( 8.93535, 43.0872, 15.5704, 0.37 ) }
    dend_55 { pt3dadd( 8.69644, 43.8498, 15.8722, 0.37 ) }
    dend_55 { pt3dadd( 8.25711, 44.7834, 16.2347, 0.37 ) }
    dend_55 { pt3dadd( 8.01095, 45.172, 16.3699, 0.37 ) }
    dend_55 { pt3dadd( 7.97242, 45.2179, 16.3807, 0.37 ) }
    dend_55 { pt3dadd( 7.81199, 45.3958, 16.5337, 0.37 ) }
    dend_55 { pt3dadd( 7.4825, 45.745, 17.0622, 0.88 ) }
    dend_55 { pt3dadd( 7.31941, 45.9697, 17.4738, 1.11 ) }
    dend_55 { pt3dadd( 7.3009, 46.0085, 17.5442, 1.11 ) }
    dend_55 { pt3dadd( 7.21701, 46.3298, 18.1285, 1.33 ) }
    dend_55 { pt3dadd( 7.02414, 47.9598, 21.1146, 0.88 ) }
    dend_55 { pt3dadd( 7.03257, 48.0806, 21.3223, 0.88 ) }
    dend_55 { pt3dadd( 7.08587, 48.329, 21.7419, 0.59 ) }
    dend_55 { pt3dadd( 7.14728, 48.5296, 22.0353, 0.37 ) }
    dend_55 { pt3dadd( 7.29556, 48.9703, 22.5561, 0.29 ) }
    dend_55 { pt3dadd( 7.31888, 49.0363, 22.6161, 0.29 ) }
    dend_55 { pt3dadd( 7.55935, 49.9716, 23.0459, 0.29 ) }
    dend_55 { pt3dadd( 7.56927, 50.0449, 23.0824, 0.29 ) }
    dend_55 { pt3dadd( 7.59809, 50.826, 23.4726, 0.29 ) }
    dend_55 { pt3dadd( 7.58626, 51.1097, 23.6118, 0.29 ) }
    dend_55 { pt3dadd( 7.44679, 52.4316, 24.198, 0.66 ) }
    dend_55 { pt3dadd( 7.41765, 52.7396, 24.3196, 0.88 ) }
    dend_55 { pt3dadd( 7.32091, 53.5448, 24.6301, 0.44 ) }
    dend_55 { pt3dadd( 7.2768, 53.9549, 24.7835, 0.59 ) }
    dend_55 { pt3dadd( 7.24114, 54.411, 24.9448, 0.59 ) }
    dend_55 { pt3dadd( 7.18997, 55.2711, 25.1662, 0.52 ) }
    dend_55 { pt3dadd( 7.1711, 55.7252, 25.1838, 0.52 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -33.5822, -67.0977, -46.7392, 0.88 ) }
    dend_46 { pt3dadd( -34.9069, -67.7322, -47.0808, 0.88 ) }
    dend_46 { pt3dadd( -35.3082, -67.9511, -47.1829, 0.88 ) }
    dend_46 { pt3dadd( -36.5722, -68.7089, -47.6086, 0.52 ) }
    dend_46 { pt3dadd( -37.5, -69.2876, -47.9408, 0.52 ) }
    dend_46 { pt3dadd( -38.5972, -69.9514, -48.374, 0.74 ) }
    dend_46 { pt3dadd( -39.5029, -70.4806, -48.7332, 0.74 ) }
    dend_46 { pt3dadd( -40.2753, -70.9137, -49.0899, 0.74 ) }
    dend_46 { pt3dadd( -41.3185, -71.4953, -49.5681, 0.74 ) }
    dend_46 { pt3dadd( -42.1068, -71.9529, -49.9151, 0.74 ) }
    dend_46 { pt3dadd( -43.2375, -72.6152, -50.4133, 0.74 ) }
    dend_46 { pt3dadd( -44.0251, -73.0517, -50.7422, 0.88 ) }
    dend_46 { pt3dadd( -44.8372, -73.5168, -51.1153, 0.66 ) }
    dend_46 { pt3dadd( -45.3035, -73.78, -51.3461, 0.59 ) }
    dend_46 { pt3dadd( -45.9626, -74.1687, -51.6723, 0.59 ) }
    dend_46 { pt3dadd( -46.7746, -74.7211, -52.1106, 0.59 ) }
    dend_46 { pt3dadd( -47.2196, -75.0705, -52.3745, 0.59 ) }
    dend_46 { pt3dadd( -48.0829, -75.7913, -52.8987, 0.88 ) }
    dend_46 { pt3dadd( -49.2215, -76.7354, -53.5414, 0.88 ) }
    dend_46 { pt3dadd( -49.605, -77.0412, -53.738, 0.88 ) }
    dend_46 { pt3dadd( -50.3437, -77.5712, -54.0625, 0.88 ) }
    dend_46 { pt3dadd( -51.3252, -78.1867, -54.3924, 1.03 ) }
    dend_46 { pt3dadd( -52.4074, -78.8164, -54.7145, 0.88 ) }
    dend_46 { pt3dadd( -53.1969, -79.2649, -54.9105, 0.88 ) }
    dend_46 { pt3dadd( -53.9559, -79.7192, -55.0841, 0.88 ) }
    dend_46 { pt3dadd( -54.6502, -80.1228, -55.2632, 0.59 ) }
    dend_46 { pt3dadd( -55.2747, -80.4716, -55.5091, 0.59 ) }
    dend_46 { pt3dadd( -56.3727, -81.1252, -56.0473, 0.66 ) }
    dend_46 { pt3dadd( -56.9814, -81.5193, -56.4334, 1.18 ) }
    dend_46 { pt3dadd( -57.7162, -82.0327, -56.9687, 1.18 ) }
    dend_46 { pt3dadd( -58.5899, -82.6735, -57.6471, 1.18 ) }
    dend_46 { pt3dadd( -60.391, -84.0114, -59.0526, 1.18 ) }
    dend_46 { pt3dadd( -60.7922, -84.2926, -59.3677, 1.18 ) }
    dend_46 { pt3dadd( -61.7391, -84.9004, -60.0902, 0.52 ) }
    dend_46 { pt3dadd( -62.3505, -85.2649, -60.5626, 0.59 ) }
    dend_46 { pt3dadd( -62.7945, -85.5388, -60.9001, 0.66 ) }
    dend_46 { pt3dadd( -63.286, -85.8797, -61.2371, 0.66 ) }
    dend_46 { pt3dadd( -64.2568, -86.6571, -61.8871, 0.74 ) }
    dend_46 { pt3dadd( -64.6638, -87.0056, -62.1902, 0.81 ) }
    dend_46 { pt3dadd( -64.8022, -87.134, -62.3035, 0.81 ) }
    dend_46 { pt3dadd( -65.4518, -87.7294, -62.8481, 0.37 ) }
    dend_46 { pt3dadd( -65.8596, -88.1132, -63.2042, 0.59 ) }
    dend_46 { pt3dadd( -66.9526, -89.1918, -64.2055, 1.18 ) }
    dend_46 { pt3dadd( -67.2355, -89.4791, -64.4554, 1.18 ) }
    dend_46 { pt3dadd( -67.7771, -90.0338, -64.9313, 0.29 ) }
    dend_46 { pt3dadd( -68.3407, -90.6261, -65.4168, 0.29 ) }
    dend_46 { pt3dadd( -68.9704, -91.2781, -65.9149, 0.44 ) }
    dend_46 { pt3dadd( -69.8456, -92.1952, -66.5204, 0.88 ) }
    dend_46 { pt3dadd( -70.2032, -92.5916, -66.7393, 1.4 ) }
    dend_46 { pt3dadd( -70.8788, -93.4109, -67.1676, 1.47 ) }
    dend_46 { pt3dadd( -71.354, -94.0451, -67.4795, 0.74 ) }
    dend_46 { pt3dadd( -71.8556, -94.7586, -67.8251, 1.18 ) }
    dend_46 { pt3dadd( -72.3992, -95.4674, -68.1577, 1.4 ) }
    dend_46 { pt3dadd( -73.2394, -96.4362, -68.6028, 0.74 ) }
    dend_46 { pt3dadd( -73.5828, -96.8029, -68.7729, 0.74 ) }
    dend_46 { pt3dadd( -74.2186, -97.4509, -69.0527, 0.74 ) }
    dend_46 { pt3dadd( -74.7813, -97.9868, -69.2869, 0.74 ) }
    dend_46 { pt3dadd( -75.4933, -98.6308, -69.5671, 0.52 ) }
    dend_46 { pt3dadd( -76.3369, -99.3624, -69.8674, 0.37 ) }
    dend_46 { pt3dadd( -77.0029, -99.9191, -70.0933, 0.37 ) }
    dend_46 { pt3dadd( -77.6994, -100.509, -70.3903, 0.37 ) }
    dend_46 { pt3dadd( -78.3727, -101.102, -70.7174, 0.37 ) }
    dend_46 { pt3dadd( -79.1023, -101.774, -71.1171, 0.37 ) }
    dend_46 { pt3dadd( -79.9104, -102.563, -71.6264, 0.37 ) }
    dend_46 { pt3dadd( -80.6995, -103.331, -72.199, 0.96 ) }
    dend_46 { pt3dadd( -81.5494, -104.125, -72.8411, 0.52 ) }
    dend_46 { pt3dadd( -81.9362, -104.486, -73.1328, 0.52 ) }
    dend_46 { pt3dadd( -82.354, -104.884, -73.4192, 0.52 ) }
    dend_46 { pt3dadd( -83.2235, -105.657, -73.9104, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_46 { pt3dadd( -84.1057, -106.369, -74.2999, 0.52 ) }
    dend_46 { pt3dadd( -84.8087, -106.901, -74.5208, 0.52 ) }
    dend_46 { pt3dadd( -85.4356, -107.365, -74.6694, 0.52 ) }
    dend_46 { pt3dadd( -86.2462, -107.964, -74.8587, 0.29 ) }
    dend_46 { pt3dadd( -87.1595, -108.627, -75.0507, 0.29 ) }
    dend_46 { pt3dadd( -87.4742, -108.853, -75.1027, 0.59 ) }
    dend_46 { pt3dadd( -88.0109, -109.235, -75.1842, 0.74 ) }
    dend_46 { pt3dadd( -88.9302, -109.911, -75.2637, 0.74 ) }
    dend_46 { pt3dadd( -89.8908, -110.633, -75.3957, 1.18 ) }
    dend_46 { pt3dadd( -90.3728, -111.003, -75.5198, 1.55 ) }
    dend_46 { pt3dadd( -90.8811, -111.393, -75.692, 1.55 ) }
    dend_46 { pt3dadd( -91.6565, -111.985, -75.9865, 0.37 ) }
    dend_46 { pt3dadd( -93.1124, -113.106, -76.6217, 0.37 ) }
    dend_46 { pt3dadd( -94.6325, -114.338, -77.3201, 0.37 ) }
    dend_46 { pt3dadd( -95.5169, -115.099, -77.7583, 0.37 ) }
    dend_46 { pt3dadd( -96.1075, -115.614, -78.0702, 0.37 ) }
    dend_46 { pt3dadd( -96.6436, -116.085, -78.3544, 0.37 ) }
    dend_46 { pt3dadd( -97.1914, -116.582, -78.6382, 0.37 ) }
    dend_46 { pt3dadd( -97.9015, -117.228, -79.045, 0.37 ) }
    dend_46 { pt3dadd( -98.4256, -117.718, -79.2832, 0.37 ) }
    dend_46 { pt3dadd( -99.0744, -118.349, -79.5718, 0.88 ) }
    dend_46 { pt3dadd( -99.6134, -118.885, -79.8506, 0.88 ) }
    dend_46 { pt3dadd( -100.046, -119.319, -80.0843, 0.44 ) }
    dend_46 { pt3dadd( -100.93, -120.222, -80.611, 0.59 ) }
    dend_46 { pt3dadd( -101.66, -121.003, -81.0938, 0.29 ) }
    dend_46 { pt3dadd( -102.119, -121.509, -81.4107, 0.29 ) }
    dend_46 { pt3dadd( -102.817, -122.29, -81.9363, 1.18 ) }
    dend_46 { pt3dadd( -103.386, -122.922, -82.3824, 1.33 ) }
    dend_46 { pt3dadd( -104.175, -123.8, -82.9824, 0.44 ) }
    dend_46 { pt3dadd( -104.46, -124.114, -83.1823, 0.44 ) }
    dend_46 { pt3dadd( -105.439, -125.209, -83.9428, 0.44 ) }
    dend_46 { pt3dadd( -106.3, -126.113, -84.6221, 0.81 ) }
    dend_46 { pt3dadd( -106.585, -126.391, -84.8371, 1.4 ) }
    dend_46 { pt3dadd( -107.17, -126.925, -85.2323, 1.62 ) }
    dend_46 { pt3dadd( -107.423, -127.134, -85.3725, 1.62 ) }
    dend_46 { pt3dadd( -108.664, -128.102, -85.9384, 0.37 ) }
    dend_46 { pt3dadd( -109.314, -128.585, -86.1613, 0.37 ) }
    dend_46 { pt3dadd( -109.881, -128.979, -86.3213, 0.37 ) }
    dend_46 { pt3dadd( -111.055, -129.72, -86.7396, 0.37 ) }
    dend_46 { pt3dadd( -111.629, -130.046, -86.9498, 0.37 ) }
    dend_46 { pt3dadd( -113.386, -130.98, -87.58, 0.37 ) }
    dend_46 { pt3dadd( -114.221, -131.41, -87.8563, 0.37 ) }
    dend_46 { pt3dadd( -115.119, -131.869, -88.1704, 0.66 ) }
    dend_46 { pt3dadd( -116.97, -132.771, -88.863, 0.66 ) }
    dend_46 { pt3dadd( -118.026, -133.233, -89.2832, 0.66 ) }
    dend_46 { pt3dadd( -118.29, -133.337, -89.387, 0.66 ) }
    dend_46 { pt3dadd( -119.352, -133.658, -89.7907, 0.29 ) }
    dend_46 { pt3dadd( -119.932, -133.827, -89.9991, 0.29 ) }
    dend_46 { pt3dadd( -120.819, -134.108, -90.2955, 0.44 ) }
    dend_46 { pt3dadd( -121.735, -134.473, -90.5822, 0.44 ) }
    dend_46 { pt3dadd( -122.356, -134.744, -90.8747, 0.44 ) }
    dend_46 { pt3dadd( -122.829, -134.956, -91.1335, 0.66 ) }
    dend_46 { pt3dadd( -123.729, -135.38, -91.7528, 0.81 ) }
    dend_46 { pt3dadd( -124.64, -135.878, -92.4467, 0.29 ) }
    dend_46 { pt3dadd( -125.397, -136.334, -93.0501, 0.29 ) }
    dend_46 { pt3dadd( -126.731, -137.218, -94.1823, 0.52 ) }
    dend_46 { pt3dadd( -127.291, -137.622, -94.6814, 0.81 ) }
    dend_46 { pt3dadd( -128.302, -138.331, -95.5446, 0.81 ) }
    dend_46 { pt3dadd( -129.027, -138.817, -96.1242, 0.81 ) }
    dend_46 { pt3dadd( -129.512, -139.138, -96.4666, 0.81 ) }
    dend_46 { pt3dadd( -130.15, -139.567, -96.8508, 0.29 ) }
    dend_46 { pt3dadd( -130.427, -139.795, -96.9758, 0.29 ) }
    dend_46 { pt3dadd( -131.156, -140.415, -97.3874, 0.29 ) }
    dend_46 { pt3dadd( -131.567, -140.711, -97.6164, 0.29 ) }
    dend_46 { pt3dadd( -132.024, -140.973, -97.9364, 0.29 ) }
    dend_46 { pt3dadd( -132.298, -141.1, -98.136, 0.44 ) }
    dend_46 { pt3dadd( -132.96, -141.365, -98.6016, 0.59 ) }
    dend_46 { pt3dadd( -134.543, -141.931, -99.806, 0.66 ) }
    dend_46 { pt3dadd( -135.314, -142.224, -100.437, 0.81 ) }
    dend_46 { pt3dadd( -136.228, -142.584, -101.184, 0.81 ) }
    dend_46 { pt3dadd( -136.746, -142.784, -101.571, 0.81 ) }
    dend_46 { pt3dadd( -137.353, -143.031, -101.975, 0.81 ) }
    dend_46 { pt3dadd( -138.271, -143.463, -102.484, 0.81 ) }
    dend_46 { pt3dadd( -138.879, -143.819, -102.733, 0.81 ) }
    dend_46 { pt3dadd( -139.339, -144.121, -102.919, 0.81 ) }
    dend_46 { pt3dadd( -140.339, -144.804, -103.509, 0.37 ) }
    dend_46 { pt3dadd( -140.694, -145.057, -103.779, 0.74 ) }
    dend_46 { pt3dadd( -141.344, -145.507, -104.325, 0.29 ) }
    dend_46 { pt3dadd( -141.899, -145.91, -104.785, 0.29 ) }
    dend_46 { pt3dadd( -142.482, -146.335, -105.349, 0.66 ) }
    dend_46 { pt3dadd( -144.267, -147.7, -107.232, 0.66 ) }
    dend_46 { pt3dadd( -144.489, -147.874, -107.481, 0.66 ) }
    dend_46 { pt3dadd( -144.962, -148.232, -107.988, 0.52 ) }
    dend_46 { pt3dadd( -145.915, -148.927, -108.969, 0.52 ) }
    dend_46 { pt3dadd( -147.18, -149.848, -110.155, 0.59 ) }
    dend_46 { pt3dadd( -147.646, -150.199, -110.519, 0.81 ) }
    dend_46 { pt3dadd( -148.595, -150.875, -111.073, 0.81 ) }
    dend_46 { pt3dadd( -149.208, -151.273, -111.432, 0.81 ) }
    dend_46 { pt3dadd( -150.055, -151.789, -111.918, 0.44 ) }
    dend_46 { pt3dadd( -150.789, -152.174, -112.195, 0.44 ) }
    dend_46 { pt3dadd( -151.525, -152.53, -112.25, 0.44 ) }
    dend_46 { pt3dadd( -152.406, -152.922, -112.142, 0.44 ) }
    dend_46 { pt3dadd( -153.836, -153.496, -111.74, 0.74 ) }
    dend_46 { pt3dadd( -154.198, -153.625, -111.63, 0.74 ) }
    dend_46 { pt3dadd( -157.644, -154.666, -110.573, 0.74 ) }
    dend_46 { pt3dadd( -158.195, -154.809, -110.46, 0.74 ) }
    dend_46 { pt3dadd( -159.811, -155.226, -110.345, 0.74 ) }
    dend_46 { pt3dadd( -161.011, -155.605, -110.474, 0.59 ) }
    dend_46 { pt3dadd( -162.166, -156.037, -110.785, 0.52 ) }
    dend_46 { pt3dadd( -163.057, -156.434, -111.199, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_46 { pt3dadd( -164.347, -157.12, -112.12, 1.25 ) }
    dend_46 { pt3dadd( -165.247, -157.645, -112.875, 0.66 ) }
    dend_46 { pt3dadd( -166.269, -158.294, -113.906, 0.66 ) }
    dend_46 { pt3dadd( -166.744, -158.63, -114.426, 1.03 ) }
    dend_46 { pt3dadd( -167.695, -159.343, -115.518, 1.03 ) }
    dend_46 { pt3dadd( -169.067, -160.469, -117.113, 1.03 ) }
    dend_46 { pt3dadd( -170.098, -161.334, -118.203, 0.66 ) }
    dend_46 { pt3dadd( -171.657, -162.666, -119.749, 0.74 ) }
    dend_46 { pt3dadd( -172.289, -163.221, -120.347, 0.88 ) }
    dend_46 { pt3dadd( -172.949, -163.867, -120.956, 0.52 ) }
    dend_46 { pt3dadd( -173.686, -164.683, -121.582, 0.52 ) }
    dend_46 { pt3dadd( -174.825, -166.075, -122.385, 0.52 ) }
    dend_46 { pt3dadd( -175.617, -167.155, -122.85, 0.74 ) }
    dend_46 { pt3dadd( -176.102, -167.855, -123.08, 0.74 ) }
    dend_46 { pt3dadd( -177.078, -169.319, -123.523, 0.74 ) }
    dend_46 { pt3dadd( -177.395, -169.817, -123.652, 1.03 ) }
    dend_46 { pt3dadd( -177.999, -170.784, -123.889, 0.81 ) }
    dend_46 { pt3dadd( -178.92, -172.36, -124.216, 0.81 ) }
    dend_46 { pt3dadd( -179.767, -173.821, -124.449, 0.81 ) }
    dend_46 { pt3dadd( -180.259, -174.677, -124.596, 0.52 ) }
    dend_46 { pt3dadd( -180.545, -175.18, -124.689, 0.52 ) }
    dend_46 { pt3dadd( -180.878, -175.83, -124.819, 0.52 ) }
    dend_46 { pt3dadd( -181.202, -176.545, -124.99, 0.52 ) }
    dend_46 { pt3dadd( -181.557, -177.314, -125.202, 0.52 ) }
    dend_46 { pt3dadd( -182.256, -178.672, -125.595, 0.59 ) }
    dend_46 { pt3dadd( -182.568, -179.217, -125.76, 0.88 ) }
    dend_46 { pt3dadd( -183.291, -180.517, -126.135, 0.52 ) }
    dend_46 { pt3dadd( -183.854, -181.747, -126.424, 0.52 ) }
    dend_46 { pt3dadd( -184.075, -182.336, -126.54, 0.81 ) }
    dend_46 { pt3dadd( -184.275, -182.92, -126.631, 1.11 ) }
    dend_46 { pt3dadd( -184.67, -184.236, -126.772, 0.74 ) }
    dend_46 { pt3dadd( -185.036, -185.494, -126.888, 0.74 ) }
    dend_46 { pt3dadd( -185.723, -187.931, -127.225, 0.74 ) }
    dend_46 { pt3dadd( -186.099, -189.249, -127.434, 0.74 ) }
    dend_46 { pt3dadd( -186.466, -190.395, -127.649, 0.88 ) }
    dend_46 { pt3dadd( -186.819, -191.355, -127.865, 0.88 ) }
    dend_46 { pt3dadd( -187.311, -192.46, -128.157, 0.74 ) }
    dend_46 { pt3dadd( -188.488, -194.535, -128.779, 0.37 ) }
    dend_46 { pt3dadd( -189.242, -195.643, -129.199, 0.37 ) }
    dend_46 { pt3dadd( -189.971, -196.723, -129.634, 0.37 ) }
    dend_46 { pt3dadd( -190.233, -197.142, -129.815, 0.37 ) }
    dend_46 { pt3dadd( -190.621, -197.776, -130.096, 0.37 ) }
    dend_46 { pt3dadd( -191.039, -198.521, -130.408, 0.37 ) }
    dend_46 { pt3dadd( -191.709, -199.796, -130.891, 0.37 ) }
    dend_46 { pt3dadd( -192.258, -201.01, -131.361, 0.44 ) }
    dend_46 { pt3dadd( -192.659, -201.947, -131.696, 0.44 ) }
    dend_46 { pt3dadd( -192.902, -202.523, -131.874, 1.25 ) }
    dend_46 { pt3dadd( -193.169, -203.13, -132.042, 1.25 ) }
    dend_46 { pt3dadd( -193.659, -204.209, -132.286, 0.44 ) }
    dend_46 { pt3dadd( -194.363, -205.58, -132.501, 0.44 ) }
    dend_46 { pt3dadd( -195.011, -206.718, -132.655, 0.44 ) }
    dend_46 { pt3dadd( -195.473, -207.515, -132.729, 0.44 ) }
    dend_46 { pt3dadd( -195.882, -208.224, -132.776, 0.81 ) }
    dend_46 { pt3dadd( -196.069, -208.545, -132.785, 1.11 ) }
    dend_46 { pt3dadd( -196.492, -209.289, -132.77, 0.66 ) }
    dend_46 { pt3dadd( -196.838, -209.943, -132.753, 0.44 ) }
    dend_46 { pt3dadd( -197.108, -210.547, -132.737, 0.44 ) }
    dend_46 { pt3dadd( -197.401, -211.311, -132.716, 0.44 ) }
    dend_46 { pt3dadd( -197.711, -212.132, -132.699, 0.44 ) }
    dend_46 { pt3dadd( -197.809, -212.375, -132.696, 0.88 ) }
    dend_46 { pt3dadd( -198.018, -212.894, -132.691, 0.88 ) }
    dend_46 { pt3dadd( -198.241, -213.393, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -198.743, -214.423, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -199.758, -216.366, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -200.454, -217.642, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -200.824, -218.304, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -201.616, -219.62, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -202.165, -220.494, -132.688, 0.96 ) }
    dend_46 { pt3dadd( -202.479, -220.991, -132.688, 1.4 ) }
    dend_46 { pt3dadd( -202.892, -221.694, -132.688, 0.37 ) }
    dend_46 { pt3dadd( -203.394, -222.512, -132.747, 0.37 ) }
    dend_46 { pt3dadd( -203.991, -223.481, -132.87, 0.37 ) }
    dend_46 { pt3dadd( -204.671, -224.612, -133.062, 0.37 ) }
    dend_46 { pt3dadd( -205.471, -225.915, -133.321, 0.59 ) }
    dend_46 { pt3dadd( -205.768, -226.391, -133.424, 0.74 ) }
    dend_46 { pt3dadd( -206.895, -228.178, -133.841, 0.44 ) }
    dend_46 { pt3dadd( -207.326, -228.878, -134.024, 0.44 ) }
    dend_46 { pt3dadd( -207.955, -229.897, -134.324, 0.44 ) }
    dend_46 { pt3dadd( -208.277, -230.388, -134.49, 0.96 ) }
    dend_46 { pt3dadd( -208.552, -230.78, -134.621, 1.18 ) }
    dend_46 { pt3dadd( -208.89, -231.25, -134.769, 1.18 ) }
    dend_46 { pt3dadd( -209.855, -232.548, -135.119, 0.44 ) }
    dend_46 { pt3dadd( -211.836, -235.022, -135.786, 0.44 ) }
    dend_46 { pt3dadd( -212.45, -235.772, -135.982, 0.44 ) }
    dend_46 { pt3dadd( -213.736, -237.346, -136.357, 0.44 ) }
    dend_46 { pt3dadd( -213.946, -237.595, -136.408, 0.44 ) }
    dend_46 { pt3dadd( -215.206, -239.059, -136.636, 0.44 ) }
    dend_46 { pt3dadd( -215.881, -239.81, -136.716, 0.44 ) }
    dend_46 { pt3dadd( -216.433, -240.419, -136.735, 0.59 ) }
    dend_46 { pt3dadd( -217.166, -241.258, -136.734, 0.37 ) }
    dend_46 { pt3dadd( -218.322, -242.683, -136.72, 0.37 ) }
    dend_46 { pt3dadd( -219.209, -243.853, -136.7, 0.37 ) }
    dend_46 { pt3dadd( -220.923, -246.376, -136.645, 0.37 ) }
    dend_46 { pt3dadd( -221.81, -247.785, -136.61, 0.66 ) }
    dend_46 { pt3dadd( -222.339, -248.692, -136.585, 0.66 ) }
    dend_46 { pt3dadd( -222.86, -249.714, -136.555, 0.81 ) }
    dend_46 { pt3dadd( -223.392, -251.008, -136.514, 0.81 ) }
    dend_46 { pt3dadd( -223.847, -252.415, -136.565, 0.81 ) }
    dend_46 { pt3dadd( -224.057, -253.268, -136.68, 0.59 ) }
    dend_46 { pt3dadd( -224.454, -254.793, -137.056, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_46 { pt3dadd( -224.709, -255.639, -137.32, 0.59 ) }
    dend_46 { pt3dadd( -224.94, -256.284, -137.559, 0.59 ) }
    dend_46 { pt3dadd( -225.869, -258.43, -138.48, 0.59 ) }
    dend_46 { pt3dadd( -226.48, -259.547, -139.024, 0.59 ) }
    dend_46 { pt3dadd( -227.147, -260.493, -139.517, 0.59 ) }
    dend_46 { pt3dadd( -227.843, -261.221, -139.902, 0.59 ) }
    dend_46 { pt3dadd( -228.527, -261.808, -140.173, 0.59 ) }
    dend_46 { pt3dadd( -229.125, -262.227, -140.314, 0.59 ) }
    dend_46 { pt3dadd( -229.68, -262.53, -140.342, 0.59 ) }
    dend_46 { pt3dadd( -230.527, -262.92, -140.342, 0.44 ) }
    dend_46 { pt3dadd( -231.608, -263.345, -140.342, 0.44 ) }
    dend_46 { pt3dadd( -232.187, -263.568, -140.3, 0.74 ) }
    dend_46 { pt3dadd( -232.747, -263.798, -140.225, 0.29 ) }
    dend_46 { pt3dadd( -233.673, -264.203, -140.069, 0.29 ) }
    dend_46 { pt3dadd( -234.238, -264.466, -139.937, 0.59 ) }
    dend_46 { pt3dadd( -234.919, -264.816, -139.748, 0.96 ) }
    dend_46 { pt3dadd( -236.201, -265.55, -139.359, 0.44 ) }
    dend_46 { pt3dadd( -237.574, -266.402, -138.931, 0.44 ) }
    dend_46 { pt3dadd( -239.121, -267.449, -138.452, 0.44 ) }
    dend_46 { pt3dadd( -240.118, -268.158, -138.168, 0.44 ) }
    dend_46 { pt3dadd( -240.888, -268.717, -137.991, 0.44 ) }
    dend_46 { pt3dadd( -241.576, -269.217, -137.842, 0.88 ) }
    dend_46 { pt3dadd( -242.079, -269.586, -137.768, 0.88 ) }
    dend_46 { pt3dadd( -242.9, -270.236, -137.663, 0.44 ) }
    dend_46 { pt3dadd( -244.071, -271.195, -137.557, 0.44 ) }
    dend_46 { pt3dadd( -245.685, -272.532, -137.453, 0.44 ) }
    dend_46 { pt3dadd( -246.504, -273.216, -137.392, 0.44 ) }
    dend_46 { pt3dadd( -247.447, -274.01, -137.316, 0.44 ) }
    dend_46 { pt3dadd( -248.004, -274.477, -137.215, 0.59 ) }
    dend_46 { pt3dadd( -248.767, -275.154, -137.003, 0.74 ) }
    dend_46 { pt3dadd( -249.489, -275.761, -136.749, 0.74 ) }
    dend_46 { pt3dadd( -250.212, -276.279, -136.467, 0.44 ) }
    dend_46 { pt3dadd( -251.258, -276.862, -135.842, 0.44 ) }
    dend_46 { pt3dadd( -252.771, -277.519, -134.347, 0.44 ) }
    dend_46 { pt3dadd( -253.299, -277.717, -133.693, 0.44 ) }
    dend_46 { pt3dadd( -253.874, -277.903, -132.845, 0.44 ) }
    dend_46 { pt3dadd( -254.338, -278.037, -132.107, 0.66 ) }
    dend_46 { pt3dadd( -256.149, -278.513, -128.907, 0.66 ) }
    dend_46 { pt3dadd( -257.19, -278.788, -126.821, 0.66 ) }
    dend_46 { pt3dadd( -257.461, -278.864, -126.236, 0.66 ) }
    dend_46 { pt3dadd( -258.097, -279.041, -124.757, 0.88 ) }
    dend_46 { pt3dadd( -258.661, -279.286, -123.249, 0.88 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 42/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -33.5822, -67.0977, -46.7392, 0.59 ) }
    dend_45 { pt3dadd( -34.2048, -66.9489, -47.3513, 0.59 ) }
    dend_45 { pt3dadd( -34.7165, -66.7988, -47.9842, 0.59 ) }
    dend_45 { pt3dadd( -35.8471, -66.5045, -49.3857, 0.59 ) }
    dend_45 { pt3dadd( -36.2714, -66.4147, -49.9175, 0.59 ) }
    dend_45 { pt3dadd( -36.9553, -66.2627, -50.7071, 0.59 ) }
    dend_45 { pt3dadd( -37.2745, -66.1923, -51.0508, 0.59 ) }
    dend_45 { pt3dadd( -38.3144, -66.0265, -52.2329, 0.59 ) }
    dend_45 { pt3dadd( -38.7706, -65.9659, -52.7431, 0.59 ) }
    dend_45 { pt3dadd( -39.5006, -65.8759, -53.5231, 0.59 ) }
    dend_45 { pt3dadd( -40.2276, -65.8185, -54.2924, 0.59 ) }
    dend_45 { pt3dadd( -40.4806, -65.8147, -54.5492, 0.59 ) }
    dend_45 { pt3dadd( -41.3834, -65.9107, -55.4982, 0.59 ) }
    dend_45 { pt3dadd( -41.9314, -66.004, -56.0467, 0.59 ) }
    dend_45 { pt3dadd( -42.6379, -66.1371, -56.7777, 0.59 ) }
    dend_45 { pt3dadd( -43.0817, -66.2452, -57.2531, 0.59 ) }
    dend_45 { pt3dadd( -43.6946, -66.4449, -57.9613, 0.59 ) }
    dend_45 { pt3dadd( -44.5787, -66.7501, -58.9773, 0.59 ) }
    dend_45 { pt3dadd( -45.0062, -66.9058, -59.4178, 0.59 ) }
    dend_45 { pt3dadd( -45.3534, -67.0562, -59.7657, 0.59 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 62/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 20.783, -102.386, -59.5435, 0.81 ) }
    dend_41 { pt3dadd( 21.9466, -103.526, -61.1106, 0.81 ) }
    dend_41 { pt3dadd( 22.5015, -103.995, -61.6409, 0.37 ) }
    dend_41 { pt3dadd( 22.9395, -104.325, -61.9337, 0.37 ) }
    dend_41 { pt3dadd( 23.4768, -104.716, -62.2284, 1.11 ) }
    dend_41 { pt3dadd( 25.4488, -106.113, -63.1619, 1.55 ) }
    dend_41 { pt3dadd( 26.268, -106.665, -63.4945, 1.18 ) }
    dend_41 { pt3dadd( 27.6739, -107.489, -63.8247, 0.37 ) }
    dend_41 { pt3dadd( 29.1492, -108.286, -64.0616, 0.37 ) }
    dend_41 { pt3dadd( 29.5665, -108.493, -64.111, 0.37 ) }
    dend_41 { pt3dadd( 29.9726, -108.689, -64.134, 1.03 ) }
    dend_41 { pt3dadd( 30.9293, -109.08, -64.1175, 1.47 ) }
    dend_41 { pt3dadd( 32.1381, -109.487, -64.1919, 1.84 ) }
    dend_41 { pt3dadd( 32.4367, -109.567, -64.2303, 1.99 ) }
    dend_41 { pt3dadd( 33.5194, -109.799, -64.3969, 0.52 ) }
    dend_41 { pt3dadd( 35.6691, -110.201, -64.7424, 0.52 ) }
    dend_41 { pt3dadd( 37.3981, -110.479, -65.0651, 0.52 ) }
    dend_41 { pt3dadd( 38.838, -110.667, -65.3538, 0.66 ) }
    dend_41 { pt3dadd( 39.7371, -110.751, -65.5364, 0.88 ) }
    dend_41 { pt3dadd( 40.8385, -110.827, -65.7588, 1.18 ) }
    dend_41 { pt3dadd( 42.2029, -110.887, -66.0534, 1.92 ) }
    dend_41 { pt3dadd( 43.6207, -110.924, -66.4305, 0.59 ) }
    dend_41 { pt3dadd( 44.6382, -110.971, -66.7255, 0.44 ) }
    dend_41 { pt3dadd( 45.5852, -111.004, -67.0001, 0.44 ) }
    dend_41 { pt3dadd( 46.6973, -111.019, -67.3515, 0.44 ) }
    dend_41 { pt3dadd( 47.7445, -111.019, -67.6972, 0.44 ) }
    dend_41 { pt3dadd( 49.0392, -111.023, -68.114, 0.96 ) }
    dend_41 { pt3dadd( 49.5485, -111.037, -68.2614, 1.03 ) }
    dend_41 { pt3dadd( 50.682, -111.102, -68.5703, 0.37 ) }
    dend_41 { pt3dadd( 51.7997, -111.198, -68.8291, 0.37 ) }
    dend_41 { pt3dadd( 52.5247, -111.271, -68.9823, 1.03 ) }
    dend_41 { pt3dadd( 53.5147, -111.382, -69.1568, 1.03 ) }
    dend_41 { pt3dadd( 54.5147, -111.501, -69.3525, 0.37 ) }
    dend_41 { pt3dadd( 55.082, -111.58, -69.4871, 0.37 ) }
    dend_41 { pt3dadd( 55.9673, -111.721, -69.742, 0.37 ) }
    dend_41 { pt3dadd( 57.1526, -111.914, -70.1133, 0.88 ) }
    dend_41 { pt3dadd( 58.1728, -112.058, -70.48, 0.52 ) }
    dend_41 { pt3dadd( 59.5495, -112.245, -71.0146, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_41 { pt3dadd( 60.383, -112.371, -71.3431, 1.11 ) }
    dend_41 { pt3dadd( 61.3028, -112.53, -71.6901, 0.44 ) }
    dend_41 { pt3dadd( 62.8035, -112.807, -72.215, 0.44 ) }
    dend_41 { pt3dadd( 63.9923, -113.024, -72.5742, 0.44 ) }
    dend_41 { pt3dadd( 64.4142, -113.097, -72.6924, 0.44 ) }
    dend_41 { pt3dadd( 65.2766, -113.227, -72.888, 0.44 ) }
    dend_41 { pt3dadd( 66.38, -113.345, -73.1126, 0.44 ) }
    dend_41 { pt3dadd( 66.9789, -113.395, -73.2067, 0.44 ) }
    dend_41 { pt3dadd( 67.9009, -113.441, -73.3494, 0.44 ) }
    dend_41 { pt3dadd( 68.5791, -113.477, -73.4553, 0.44 ) }
    dend_41 { pt3dadd( 69.2481, -113.498, -73.6181, 0.96 ) }
    dend_41 { pt3dadd( 69.7156, -113.505, -73.7604, 1.33 ) }
    dend_41 { pt3dadd( 70.2805, -113.536, -73.9584, 1.33 ) }
    dend_41 { pt3dadd( 71.5473, -113.706, -74.4217, 0.52 ) }
    dend_41 { pt3dadd( 72.5954, -113.927, -74.8, 0.29 ) }
    dend_41 { pt3dadd( 73.8759, -114.238, -75.3807, 0.29 ) }
    dend_41 { pt3dadd( 74.2946, -114.35, -75.5931, 0.29 ) }
    dend_41 { pt3dadd( 74.8445, -114.505, -75.8746, 0.59 ) }
    dend_41 { pt3dadd( 75.8793, -114.801, -76.3761, 0.59 ) }
    dend_41 { pt3dadd( 76.7834, -115.085, -76.7639, 0.59 ) }
    dend_41 { pt3dadd( 78.5919, -115.719, -77.5238, 1.03 ) }
    dend_41 { pt3dadd( 79.129, -115.919, -77.7425, 1.03 ) }
    dend_41 { pt3dadd( 79.7957, -116.152, -78.0141, 0.37 ) }
    dend_41 { pt3dadd( 80.7596, -116.444, -78.3918, 0.37 ) }
    dend_41 { pt3dadd( 81.4166, -116.607, -78.6595, 0.37 ) }
    dend_41 { pt3dadd( 82.5113, -116.858, -79.0994, 0.37 ) }
    dend_41 { pt3dadd( 82.9522, -116.963, -79.2454, 0.37 ) }
    dend_41 { pt3dadd( 83.5165, -117.08, -79.4798, 0.37 ) }
    dend_41 { pt3dadd( 83.8747, -117.145, -79.6458, 0.74 ) }
    dend_41 { pt3dadd( 85.0908, -117.317, -80.2476, 0.29 ) }
    dend_41 { pt3dadd( 86.0777, -117.44, -80.7511, 0.29 ) }
    dend_41 { pt3dadd( 87.1332, -117.599, -81.2513, 0.29 ) }
    dend_41 { pt3dadd( 88.1889, -117.793, -81.7312, 0.74 ) }
    dend_41 { pt3dadd( 88.7585, -117.915, -81.9803, 0.96 ) }
    dend_41 { pt3dadd( 89.8288, -118.181, -82.4064, 1.11 ) }
    dend_41 { pt3dadd( 90.8288, -118.442, -82.7483, 0.44 ) }
    dend_41 { pt3dadd( 92.2072, -118.782, -83.1737, 0.44 ) }
    dend_41 { pt3dadd( 92.9887, -118.976, -83.3943, 0.44 ) }
    dend_41 { pt3dadd( 94.2979, -119.305, -83.6954, 0.44 ) }
    dend_41 { pt3dadd( 95.218, -119.531, -83.8826, 0.44 ) }
    dend_41 { pt3dadd( 95.947, -119.697, -83.9988, 0.44 ) }
    dend_41 { pt3dadd( 96.5235, -119.803, -84.0727, 0.44 ) }
    dend_41 { pt3dadd( 97.9531, -119.989, -84.2414, 0.44 ) }
    dend_41 { pt3dadd( 98.8719, -120.096, -84.3259, 0.59 ) }
    dend_41 { pt3dadd( 99.2656, -120.135, -84.3484, 0.59 ) }
    dend_41 { pt3dadd( 99.8873, -120.202, -84.3759, 0.59 ) }
    dend_41 { pt3dadd( 100.937, -120.346, -84.419, 0.59 ) }
    dend_41 { pt3dadd( 101.797, -120.476, -84.4474, 0.59 ) }
    dend_41 { pt3dadd( 102.696, -120.605, -84.4644, 0.66 ) }
    dend_41 { pt3dadd( 103.356, -120.699, -84.4603, 0.81 ) }
    dend_41 { pt3dadd( 104.502, -120.885, -84.4285, 0.81 ) }
    dend_41 { pt3dadd( 105.466, -121.085, -84.3835, 0.37 ) }
    dend_41 { pt3dadd( 106.106, -121.252, -84.3433, 0.37 ) }
    dend_41 { pt3dadd( 106.636, -121.416, -84.3216, 0.37 ) }
    dend_41 { pt3dadd( 107.551, -121.733, -84.3029, 0.37 ) }
    dend_41 { pt3dadd( 108.382, -122.044, -84.3374, 0.37 ) }
    dend_41 { pt3dadd( 109.466, -122.48, -84.4353, 0.88 ) }
    dend_41 { pt3dadd( 110.162, -122.764, -84.5236, 1.18 ) }
    dend_41 { pt3dadd( 111.64, -123.355, -84.7686, 0.37 ) }
    dend_41 { pt3dadd( 112.584, -123.72, -84.9568, 0.37 ) }
    dend_41 { pt3dadd( 113.709, -124.1, -85.2711, 0.66 ) }
    dend_41 { pt3dadd( 114.144, -124.228, -85.4062, 0.44 ) }
    dend_41 { pt3dadd( 114.809, -124.398, -85.6303, 0.44 ) }
    dend_41 { pt3dadd( 115.238, -124.497, -85.7731, 0.44 ) }
    dend_41 { pt3dadd( 116.044, -124.67, -86.018, 0.44 ) }
    dend_41 { pt3dadd( 117.504, -124.987, -86.4086, 1.11 ) }
    dend_41 { pt3dadd( 118.349, -125.195, -86.639, 1.4 ) }
    dend_41 { pt3dadd( 119.16, -125.414, -86.8807, 0.81 ) }
    dend_41 { pt3dadd( 119.859, -125.62, -87.1185, 0.59 ) }
    dend_41 { pt3dadd( 120.643, -125.893, -87.4326, 0.59 ) }
    dend_41 { pt3dadd( 121.545, -126.282, -87.8646, 0.59 ) }
    dend_41 { pt3dadd( 122.535, -126.825, -88.6075, 0.59 ) }
    dend_41 { pt3dadd( 122.922, -127.083, -88.999, 0.59 ) }
    dend_41 { pt3dadd( 123.477, -127.558, -89.6661, 0.74 ) }
    dend_41 { pt3dadd( 124.162, -128.31, -90.677, 0.88 ) }
    dend_41 { pt3dadd( 124.574, -128.882, -91.3867, 1.03 ) }
    dend_41 { pt3dadd( 125.659, -130.768, -93.4437, 0.81 ) }
    dend_41 { pt3dadd( 125.945, -131.353, -93.9802, 0.81 ) }
    dend_41 { pt3dadd( 126.439, -132.438, -94.8205, 0.81 ) }
    dend_41 { pt3dadd( 126.925, -133.485, -95.5268, 1.4 ) }
    dend_41 { pt3dadd( 127.213, -134.055, -95.8609, 1.77 ) }
    dend_41 { pt3dadd( 127.747, -135.018, -96.3208, 1.25 ) }
    dend_41 { pt3dadd( 128.218, -135.751, -96.6119, 0.96 ) }
    dend_41 { pt3dadd( 128.925, -136.656, -97.1487, 0.66 ) }
    dend_41 { pt3dadd( 129.865, -137.612, -97.9861, 0.22 ) }
    dend_41 { pt3dadd( 130.039, -137.762, -98.1603, 0.22 ) }
    dend_41 { pt3dadd( 130.378, -138.038, -98.5327, 0.96 ) }
    dend_41 { pt3dadd( 131.261, -138.756, -99.5196, 1.55 ) }
    dend_41 { pt3dadd( 132.574, -139.856, -100.983, 1.84 ) }
    dend_41 { pt3dadd( 133.631, -140.789, -102.052, 0.88 ) }
    dend_41 { pt3dadd( 134.398, -141.483, -102.687, 0.88 ) }
    dend_41 { pt3dadd( 135.198, -142.203, -103.254, 0.88 ) }
    dend_41 { pt3dadd( 136.161, -143.06, -103.787, 0.37 ) }
    dend_41 { pt3dadd( 136.599, -143.439, -103.937, 0.37 ) }
    dend_41 { pt3dadd( 138.04, -144.595, -104.043, 0.37 ) }
    dend_41 { pt3dadd( 138.892, -145.193, -103.978, 0.37 ) }
    dend_41 { pt3dadd( 139.526, -145.583, -103.892, 0.37 ) }
    dend_41 { pt3dadd( 140.499, -146.111, -103.753, 0.66 ) }
    dend_41 { pt3dadd( 141.44, -146.581, -103.618, 0.66 ) }
    dend_41 { pt3dadd( 143.266, -147.479, -103.333, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_41 { pt3dadd( 144.608, -148.125, -103.107, 0.37 ) }
    dend_41 { pt3dadd( 145.865, -148.744, -102.92, 0.37 ) }
    dend_41 { pt3dadd( 146.506, -149.072, -102.84, 0.59 ) }
    dend_41 { pt3dadd( 147.088, -149.384, -102.799, 0.81 ) }
    dend_41 { pt3dadd( 147.808, -149.792, -102.824, 1.11 ) }
    dend_41 { pt3dadd( 148.45, -150.178, -102.926, 0.59 ) }
    dend_41 { pt3dadd( 149.546, -150.874, -103.138, 0.59 ) }
    dend_41 { pt3dadd( 150.443, -151.477, -103.327, 0.59 ) }
    dend_41 { pt3dadd( 151.233, -152.019, -103.49, 0.59 ) }
    dend_41 { pt3dadd( 152.233, -152.736, -103.682, 0.52 ) }
    dend_41 { pt3dadd( 153.421, -153.616, -103.881, 0.52 ) }
    dend_41 { pt3dadd( 154.113, -154.145, -103.979, 0.52 ) }
    dend_41 { pt3dadd( 155.55, -155.238, -104.207, 0.52 ) }
    dend_41 { pt3dadd( 156.582, -156.032, -104.394, 0.52 ) }
    dend_41 { pt3dadd( 157.616, -156.844, -104.589, 0.52 ) }
    dend_41 { pt3dadd( 158.893, -157.914, -104.93, 0.81 ) }
    dend_41 { pt3dadd( 159.268, -158.25, -105.067, 0.96 ) }
    dend_41 { pt3dadd( 160.412, -159.341, -105.578, 0.59 ) }
    dend_41 { pt3dadd( 160.981, -159.92, -105.86, 0.81 ) }
    dend_41 { pt3dadd( 161.678, -160.645, -106.204, 0.81 ) }
    dend_41 { pt3dadd( 163.379, -162.371, -106.973, 0.52 ) }
    dend_41 { pt3dadd( 164.351, -163.331, -107.332, 0.52 ) }
    dend_41 { pt3dadd( 164.794, -163.747, -107.452, 0.52 ) }
    dend_41 { pt3dadd( 166.22, -165.0, -107.676, 0.52 ) }
    dend_41 { pt3dadd( 167.428, -165.974, -107.792, 0.52 ) }
    dend_41 { pt3dadd( 168.417, -166.743, -107.816, 0.52 ) }
    dend_41 { pt3dadd( 169.279, -167.381, -107.76, 0.44 ) }
    dend_41 { pt3dadd( 170.059, -167.967, -107.708, 0.44 ) }
    dend_41 { pt3dadd( 171.086, -168.803, -107.64, 0.74 ) }
    dend_41 { pt3dadd( 171.42, -169.117, -107.609, 0.74 ) }
    dend_41 { pt3dadd( 172.402, -170.236, -107.496, 0.74 ) }
    dend_41 { pt3dadd( 172.791, -170.758, -107.446, 0.74 ) }
    dend_41 { pt3dadd( 173.719, -172.148, -107.316, 0.74 ) }
    dend_41 { pt3dadd( 174.301, -173.076, -107.215, 0.74 ) }
    dend_41 { pt3dadd( 174.858, -173.97, -107.107, 0.74 ) }
    dend_41 { pt3dadd( 175.433, -174.805, -106.997, 0.74 ) }
    dend_41 { pt3dadd( 175.984, -175.504, -106.898, 0.44 ) }
    dend_41 { pt3dadd( 176.409, -175.967, -106.834, 0.52 ) }
    dend_41 { pt3dadd( 177.035, -176.495, -106.767, 0.52 ) }
    dend_41 { pt3dadd( 177.467, -176.784, -106.746, 0.29 ) }
    dend_41 { pt3dadd( 178.352, -177.294, -106.746, 0.29 ) }
    dend_41 { pt3dadd( 178.95, -177.601, -106.754, 0.37 ) }
    dend_41 { pt3dadd( 180.074, -178.124, -106.784, 0.37 ) }
    dend_41 { pt3dadd( 180.866, -178.476, -106.767, 0.66 ) }
    dend_41 { pt3dadd( 181.832, -178.913, -106.661, 0.37 ) }
    dend_41 { pt3dadd( 182.616, -179.278, -106.521, 0.37 ) }
    dend_41 { pt3dadd( 183.029, -179.483, -106.41, 0.52 ) }
    dend_41 { pt3dadd( 183.563, -179.77, -106.201, 0.66 ) }
    dend_41 { pt3dadd( 184.859, -180.523, -105.58, 0.29 ) }
    dend_41 { pt3dadd( 185.956, -181.21, -105.003, 0.29 ) }
    dend_41 { pt3dadd( 186.521, -181.576, -104.7, 0.29 ) }
    dend_41 { pt3dadd( 187.688, -182.386, -104.09, 0.29 ) }
    dend_41 { pt3dadd( 188.581, -183.083, -103.552, 0.37 ) }
    dend_41 { pt3dadd( 189.329, -183.741, -103.062, 0.37 ) }
    dend_41 { pt3dadd( 189.779, -184.192, -102.718, 0.37 ) }
    dend_41 { pt3dadd( 190.371, -184.871, -102.204, 0.59 ) }
    dend_41 { pt3dadd( 190.716, -185.306, -101.855, 0.59 ) }
    dend_41 { pt3dadd( 192.036, -187.123, -100.398, 0.59 ) }
    dend_41 { pt3dadd( 192.306, -187.534, -100.072, 0.59 ) }
    dend_41 { pt3dadd( 193.012, -188.726, -99.1369, 0.37 ) }
    dend_41 { pt3dadd( 193.825, -190.099, -98.0302, 0.37 ) }
    dend_41 { pt3dadd( 194.563, -191.383, -96.994, 0.37 ) }
    dend_41 { pt3dadd( 194.825, -191.833, -96.6421, 0.37 ) }
    dend_41 { pt3dadd( 195.681, -193.255, -95.6479, 0.37 ) }
    dend_41 { pt3dadd( 196.443, -194.468, -94.7871, 0.37 ) }
    dend_41 { pt3dadd( 197.235, -195.712, -93.9449, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 20.783, -102.386, -59.5435, 0.88 ) }
    dend_38 { pt3dadd( 19.6154, -103.508, -60.2925, 0.88 ) }
    dend_38 { pt3dadd( 19.0859, -104.022, -60.5858, 0.74 ) }
    dend_38 { pt3dadd( 18.3176, -104.786, -60.9831, 0.74 ) }
    dend_38 { pt3dadd( 17.0674, -106.048, -61.5795, 0.74 ) }
    dend_38 { pt3dadd( 15.8233, -107.332, -62.1593, 0.52 ) }
    dend_38 { pt3dadd( 14.4079, -108.821, -62.8017, 0.52 ) }
    dend_38 { pt3dadd( 13.3057, -110.075, -63.3569, 0.52 ) }
    dend_38 { pt3dadd( 12.4254, -111.142, -63.8231, 0.37 ) }
    dend_38 { pt3dadd( 11.7525, -112.049, -64.2156, 0.37 ) }
    dend_38 { pt3dadd( 11.1512, -112.95, -64.5703, 1.47 ) }
    dend_38 { pt3dadd( 10.8334, -113.492, -64.7744, 1.47 ) }
    dend_38 { pt3dadd( 9.98379, -115.186, -65.4801, 0.37 ) }
    dend_38 { pt3dadd( 9.59615, -116.069, -65.8507, 0.37 ) }
    dend_38 { pt3dadd( 8.94938, -117.76, -66.5805, 0.37 ) }
    dend_38 { pt3dadd( 8.66788, -118.567, -66.9312, 0.37 ) }
    dend_38 { pt3dadd( 8.47245, -119.113, -67.1569, 1.11 ) }
    dend_38 { pt3dadd( 8.1705, -119.907, -67.4719, 0.44 ) }
    dend_38 { pt3dadd( 7.80762, -120.751, -67.759, 0.44 ) }
    dend_38 { pt3dadd( 7.0761, -122.248, -68.2448, 0.44 ) }
    dend_38 { pt3dadd( 6.81802, -122.681, -68.3648, 0.44 ) }
    dend_38 { pt3dadd( 6.34306, -123.412, -68.5521, 0.44 ) }
    dend_38 { pt3dadd( 5.88253, -124.115, -68.7058, 0.96 ) }
    dend_38 { pt3dadd( 5.24842, -125.017, -68.8744, 0.96 ) }
    dend_38 { pt3dadd( 4.59403, -125.876, -69.0039, 0.37 ) }
    dend_38 { pt3dadd( 3.85755, -126.758, -69.1987, 0.37 ) }
    dend_38 { pt3dadd( 3.37357, -127.312, -69.3662, 0.37 ) }
    dend_38 { pt3dadd( 2.85522, -127.871, -69.5686, 1.03 ) }
    dend_38 { pt3dadd( 1.49803, -129.18, -70.2345, 0.37 ) }
    dend_38 { pt3dadd( 0.623248, -129.95, -70.7289, 0.37 ) }
    dend_38 { pt3dadd( -1.06542, -131.401, -71.8648, 0.74 ) }
    dend_38 { pt3dadd( -1.79026, -132.021, -72.3798, 1.25 ) }
    dend_38 { pt3dadd( -2.41105, -132.564, -72.84, 0.81 ) }
    dend_38 { pt3dadd( -3.74986, -133.81, -73.9307, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_38 { pt3dadd( -4.08656, -134.161, -74.2287, 0.81 ) }
    dend_38 { pt3dadd( -5.16114, -135.376, -75.1502, 0.15 ) }
    dend_38 { pt3dadd( -6.26949, -136.743, -76.0098, 0.15 ) }
    dend_38 { pt3dadd( -7.22007, -137.973, -76.7254, 0.29 ) }
    dend_38 { pt3dadd( -8.05087, -139.074, -77.2858, 1.62 ) }
    dend_38 { pt3dadd( -8.7078, -139.915, -77.633, 0.52 ) }
    dend_38 { pt3dadd( -9.82546, -141.239, -78.133, 0.44 ) }
    dend_38 { pt3dadd( -10.342, -141.808, -78.3203, 0.44 ) }
    dend_38 { pt3dadd( -10.7003, -142.186, -78.4375, 0.44 ) }
    dend_38 { pt3dadd( -11.8902, -143.324, -78.6844, 0.44 ) }
    dend_38 { pt3dadd( -12.7115, -144.043, -78.7702, 0.59 ) }
    dend_38 { pt3dadd( -13.239, -144.473, -78.8248, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_2 (entry count 12/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.82764, -48.811, -10.9289, 0.74 ) }
    dend_28 { pt3dadd( 7.30185, -51.1748, -10.6939, 0.74 ) }
    dend_28 { pt3dadd( 7.52733, -52.2134, -10.6211, 0.74 ) }
    dend_28 { pt3dadd( 7.76762, -53.0591, -10.5775, 0.88 ) }
    dend_28 { pt3dadd( 8.27218, -54.5296, -10.5296, 0.88 ) }
    dend_28 { pt3dadd( 8.88336, -56.1244, -10.4957, 1.03 ) }
    dend_28 { pt3dadd( 9.53443, -57.6775, -10.4364, 1.03 ) }
    dend_28 { pt3dadd( 10.0214, -58.8717, -10.4251, 1.03 ) }
    dend_28 { pt3dadd( 10.7944, -60.7659, -10.2835, 0.81 ) }
    dend_28 { pt3dadd( 11.3216, -62.0035, -10.0533, 0.81 ) }
    dend_28 { pt3dadd( 11.724, -62.9359, -9.74934, 1.03 ) }
    dend_28 { pt3dadd( 12.3188, -64.3586, -9.10428, 1.18 ) }
    dend_28 { pt3dadd( 12.6811, -65.2994, -8.5537, 1.18 ) }
    dend_28 { pt3dadd( 13.1937, -66.9296, -7.47009, 1.18 ) }
    dend_28 { pt3dadd( 13.5752, -68.5399, -6.25998, 1.03 ) }
    dend_28 { pt3dadd( 13.7888, -69.6315, -5.43808, 0.88 ) }
    dend_28 { pt3dadd( 13.9717, -70.618, -4.72355, 0.88 ) }
    dend_28 { pt3dadd( 14.1568, -71.5653, -4.07102, 0.88 ) }
    dend_28 { pt3dadd( 14.3574, -72.395, -3.5456, 0.88 ) }
    dend_28 { pt3dadd( 14.7543, -73.9049, -2.7674, 0.96 ) }
    dend_28 { pt3dadd( 15.0769, -75.1949, -2.19463, 0.96 ) }
    dend_28 { pt3dadd( 15.4219, -76.7395, -1.6009, 0.96 ) }
    dend_28 { pt3dadd( 15.7172, -78.3519, -1.07348, 0.96 ) }
    dend_28 { pt3dadd( 15.9046, -79.3699, -0.830621, 0.96 ) }
    dend_28 { pt3dadd( 16.1566, -80.6202, -0.613678, 0.96 ) }
    dend_28 { pt3dadd( 16.4186, -81.6302, -0.496222, 0.96 ) }
    dend_28 { pt3dadd( 16.8647, -83.0027, -0.22531, 0.96 ) }
    dend_28 { pt3dadd( 17.2319, -83.9546, 0.0959727, 0.96 ) }
    dend_28 { pt3dadd( 17.9525, -85.751, 0.910475, 0.96 ) }
    dend_28 { pt3dadd( 18.3014, -86.6915, 1.437, 0.96 ) }
    dend_28 { pt3dadd( 18.8624, -88.3511, 2.50324, 0.96 ) }
    dend_28 { pt3dadd( 19.718, -90.938, 4.309, 0.96 ) }
    dend_28 { pt3dadd( 20.3673, -92.927, 5.78044, 0.81 ) }
    dend_28 { pt3dadd( 20.6358, -93.8197, 6.46852, 0.66 ) }
    dend_28 { pt3dadd( 20.8703, -94.8594, 7.28665, 0.66 ) }
    dend_28 { pt3dadd( 20.9753, -95.6265, 7.82568, 0.66 ) }
    dend_28 { pt3dadd( 20.9808, -96.2241, 8.13042, 0.66 ) }
    dend_28 { pt3dadd( 20.9631, -97.1475, 8.35273, 0.74 ) }
    dend_28 { pt3dadd( 21.0015, -98.221, 8.52423, 1.03 ) }
    dend_28 { pt3dadd( 21.0559, -98.6074, 8.59902, 1.03 ) }
    dend_28 { pt3dadd( 21.2654, -99.5238, 8.78807, 0.81 ) }
    dend_28 { pt3dadd( 21.4455, -100.235, 8.9376, 0.81 ) }
    dend_28 { pt3dadd( 21.6554, -101.122, 9.12483, 0.59 ) }
    dend_28 { pt3dadd( 21.9291, -102.356, 9.37369, 0.59 ) }
    dend_28 { pt3dadd( 22.0755, -103.019, 9.48924, 0.59 ) }
    dend_28 { pt3dadd( 22.353, -104.04, 9.68101, 0.88 ) }
    dend_28 { pt3dadd( 22.4066, -104.188, 9.71322, 1.03 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.82764, -48.811, -10.9289, 2.28 ) }
    dend_3 { pt3dadd( 7.2644, -51.47, -11.4923, 2.28 ) }
    dend_3 { pt3dadd( 7.51877, -53.0186, -11.8205, 2.14 ) }
    dend_3 { pt3dadd( 7.8181, -54.8409, -12.2067, 2.14 ) }
    dend_3 { pt3dadd( 8.13375, -56.7625, -12.6139, 2.14 ) }
    dend_3 { pt3dadd( 8.51052, -59.0563, -13.0999, 2.36 ) }
    dend_3 { pt3dadd( 8.63591, -59.8196, -13.2617, 2.87 ) }
    // Section: dend_81, id: dend_81, parent: dend_67 (entry count 66/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -19.6999, 39.0195, -0.467042, 0.59 ) }
    dend_81 { pt3dadd( -20.847, 39.3922, -1.40308, 0.59 ) }
    dend_81 { pt3dadd( -21.3395, 39.574, -1.7557, 0.59 ) }
    dend_81 { pt3dadd( -22.3488, 39.9372, -2.63975, 0.37 ) }
    dend_81 { pt3dadd( -22.774, 40.0928, -3.02429, 0.37 ) }
    dend_81 { pt3dadd( -23.7887, 40.4782, -3.9287, 0.59 ) }
    dend_81 { pt3dadd( -24.374, 40.6998, -4.45419, 0.59 ) }
    dend_81 { pt3dadd( -25.229, 41.0876, -5.21633, 0.59 ) }
    dend_81 { pt3dadd( -26.8885, 41.8328, -6.62264, 0.59 ) }
    dend_81 { pt3dadd( -27.5405, 42.1006, -7.11547, 0.74 ) }
    dend_81 { pt3dadd( -27.9472, 42.2503, -7.39188, 0.74 ) }
    dend_81 { pt3dadd( -29.0593, 42.6143, -8.0238, 0.74 ) }
    dend_81 { pt3dadd( -29.5745, 42.7808, -8.28555, 0.74 ) }
    dend_81 { pt3dadd( -30.5526, 43.1466, -8.66422, 0.29 ) }
    dend_81 { pt3dadd( -31.1962, 43.4122, -8.82535, 0.52 ) }
    dend_81 { pt3dadd( -31.6178, 43.5989, -8.92298, 1.03 ) }
    dend_81 { pt3dadd( -32.0504, 43.8027, -9.01287, 1.03 ) }
    dend_81 { pt3dadd( -33.3999, 44.4603, -9.2333, 0.29 ) }
    dend_81 { pt3dadd( -33.8476, 44.7008, -9.33287, 0.66 ) }
    dend_81 { pt3dadd( -34.4613, 45.0785, -9.4984, 0.52 ) }
    dend_81 { pt3dadd( -35.1797, 45.553, -9.70366, 0.52 ) }
    dend_81 { pt3dadd( -35.6663, 45.8905, -9.88202, 0.22 ) }
    dend_81 { pt3dadd( -36.2307, 46.2882, -10.1198, 0.22 ) }
    dend_81 { pt3dadd( -37.0715, 46.8615, -10.4962, 0.22 ) }
    dend_81 { pt3dadd( -37.638, 47.2202, -10.7913, 0.22 ) }
    dend_81 { pt3dadd( -38.0522, 47.4793, -11.0312, 0.22 ) }
    dend_81 { pt3dadd( -39.1634, 48.1841, -11.7164, 0.52 ) }
    dend_81 { pt3dadd( -39.4901, 48.4043, -11.9255, 1.18 ) }
    dend_81 { pt3dadd( -39.8733, 48.672, -12.1656, 1.18 ) }
    dend_81 { pt3dadd( -40.8306, 49.2862, -12.7293, 0.37 ) }
    dend_81 { pt3dadd( -41.0644, 49.4316, -12.8676, 0.37 ) }
    dend_81 { pt3dadd( -41.7544, 49.8391, -13.2406, 0.37 ) }
    dend_81 { pt3dadd( -42.5085, 50.235, -13.5599, 0.37 ) }
    dend_81 { pt3dadd( -42.8314, 50.3743, -13.6814, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_81 { pt3dadd( -43.49, 50.6044, -13.8779, 0.59 ) }
    dend_81 { pt3dadd( -43.9154, 50.7189, -13.9745, 0.59 ) }
    dend_81 { pt3dadd( -44.3631, 50.8199, -14.1182, 0.29 ) }
    dend_81 { pt3dadd( -44.9948, 50.9312, -14.3818, 0.29 ) }
    dend_81 { pt3dadd( -45.602, 51.0463, -14.6634, 0.29 ) }
    dend_81 { pt3dadd( -46.2592, 51.2283, -15.0038, 0.29 ) }
    dend_81 { pt3dadd( -46.9246, 51.4874, -15.4134, 0.59 ) }
    dend_81 { pt3dadd( -48.1045, 52.0498, -16.258, 0.81 ) }
    dend_81 { pt3dadd( -48.6737, 52.3532, -16.7061, 0.22 ) }
    dend_81 { pt3dadd( -49.1023, 52.6024, -17.0896, 0.22 ) }
    dend_81 { pt3dadd( -49.6075, 52.8954, -17.5442, 0.22 ) }
    dend_81 { pt3dadd( -50.2827, 53.2955, -18.1813, 0.29 ) }
    dend_81 { pt3dadd( -50.4444, 53.3883, -18.3626, 0.52 ) }
    dend_81 { pt3dadd( -50.8113, 53.5647, -18.7717, 0.52 ) }
    dend_81 { pt3dadd( -51.2932, 53.7513, -19.3321, 0.52 ) }
    dend_81 { pt3dadd( -51.9154, 53.9426, -20.0437, 0.52 ) }
    dend_81 { pt3dadd( -52.6334, 54.1103, -20.8168, 0.52 ) }
    dend_81 { pt3dadd( -54.1754, 54.4742, -22.4503, 0.52 ) }
    dend_81 { pt3dadd( -54.7123, 54.6006, -22.9943, 1.18 ) }
    dend_81 { pt3dadd( -55.4873, 54.7709, -23.6873, 1.92 ) }
    dend_81 { pt3dadd( -55.9753, 54.8595, -24.0441, 1.92 ) }
    dend_81 { pt3dadd( -57.0018, 55.0039, -24.732, 0.37 ) }
    dend_81 { pt3dadd( -57.6173, 55.0593, -25.0524, 0.22 ) }
    dend_81 { pt3dadd( -58.4314, 55.1218, -25.4553, 0.22 ) }
    dend_81 { pt3dadd( -59.5725, 55.2145, -26.0733, 0.22 ) }
    dend_81 { pt3dadd( -60.3212, 55.2797, -26.4715, 0.22 ) }
    dend_81 { pt3dadd( -61.2622, 55.3626, -26.9648, 0.81 ) }
    dend_81 { pt3dadd( -62.2083, 55.4523, -27.4153, 0.81 ) }
    dend_81 { pt3dadd( -63.9684, 55.6292, -28.1765, 0.66 ) }
    dend_81 { pt3dadd( -64.8742, 55.7368, -28.5258, 0.66 ) }
    dend_81 { pt3dadd( -65.4824, 55.8156, -28.7081, 0.37 ) }
    dend_81 { pt3dadd( -66.2109, 55.9211, -28.8778, 0.37 ) }
    dend_81 { pt3dadd( -67.1538, 56.0633, -29.0133, 0.29 ) }
    dend_81 { pt3dadd( -67.7548, 56.147, -29.0682, 0.44 ) }
    dend_81 { pt3dadd( -68.6405, 56.2622, -29.0854, 0.44 ) }
    dend_81 { pt3dadd( -69.5829, 56.3747, -29.1304, 0.44 ) }
    dend_81 { pt3dadd( -70.6716, 56.5004, -29.2093, 1.25 ) }
    dend_81 { pt3dadd( -71.2675, 56.5773, -29.2611, 1.25 ) }
    dend_81 { pt3dadd( -71.9336, 56.666, -29.3591, 0.29 ) }
    dend_81 { pt3dadd( -73.0603, 56.8365, -29.6608, 0.29 ) }
    dend_81 { pt3dadd( -73.6305, 56.9361, -29.8687, 1.4 ) }
    dend_81 { pt3dadd( -74.3056, 57.0498, -30.1429, 1.99 ) }
    dend_81 { pt3dadd( -74.719, 57.1254, -30.3099, 1.99 ) }
    dend_81 { pt3dadd( -76.1799, 57.4267, -31.0037, 0.44 ) }
    dend_81 { pt3dadd( -77.6081, 57.7563, -31.7446, 0.59 ) }
    dend_81 { pt3dadd( -77.6081, 57.7563, -31.7446, 0.59 ) }
    dend_81 { pt3dadd( -78.4051, 57.9277, -32.1507, 0.29 ) }
    dend_81 { pt3dadd( -79.4783, 58.1729, -32.5976, 0.29 ) }
    dend_81 { pt3dadd( -80.5433, 58.4175, -32.9022, 0.74 ) }
    dend_81 { pt3dadd( -81.2119, 58.5689, -33.0015, 1.03 ) }
    dend_81 { pt3dadd( -81.6901, 58.6596, -33.03, 1.03 ) }
    dend_81 { pt3dadd( -82.4112, 58.7726, -33.0621, 0.22 ) }
    dend_81 { pt3dadd( -83.95, 58.9655, -33.1623, 0.22 ) }
    dend_81 { pt3dadd( -84.8209, 59.0774, -33.2247, 0.22 ) }
    dend_81 { pt3dadd( -85.5598, 59.173, -33.2744, 0.29 ) }
    dend_81 { pt3dadd( -86.6009, 59.2936, -33.3689, 1.84 ) }
    dend_81 { pt3dadd( -87.6244, 59.3804, -33.5284, 1.84 ) }
    dend_81 { pt3dadd( -88.9433, 59.447, -33.8073, 0.29 ) }
    dend_81 { pt3dadd( -90.7942, 59.4514, -34.2794, 0.29 ) }
    dend_81 { pt3dadd( -91.4252, 59.4411, -34.4645, 0.29 ) }
    dend_81 { pt3dadd( -92.1283, 59.4246, -34.7048, 1.11 ) }
    dend_81 { pt3dadd( -93.5954, 59.384, -35.2503, 0.29 ) }
    dend_81 { pt3dadd( -94.4374, 59.3591, -35.615, 0.29 ) }
    dend_81 { pt3dadd( -95.2201, 59.3436, -35.974, 0.37 ) }
    dend_81 { pt3dadd( -95.8637, 59.3565, -36.3089, 0.37 ) }
    dend_81 { pt3dadd( -96.7219, 59.4554, -36.7515, 0.37 ) }
    dend_81 { pt3dadd( -98.3658, 59.7928, -37.5958, 0.37 ) }
    dend_81 { pt3dadd( -99.6637, 60.1461, -38.2487, 1.69 ) }
    dend_81 { pt3dadd( -100.373, 60.3567, -38.6064, 1.69 ) }
    dend_81 { pt3dadd( -101.67, 60.7776, -39.2544, 0.37 ) }
    dend_81 { pt3dadd( -102.785, 61.1586, -39.797, 0.37 ) }
    dend_81 { pt3dadd( -104.033, 61.5837, -40.4012, 0.37 ) }
    dend_81 { pt3dadd( -104.89, 61.8811, -40.8232, 0.37 ) }
    dend_81 { pt3dadd( -105.611, 62.1151, -41.163, 0.37 ) }
    dend_81 { pt3dadd( -106.38, 62.3402, -41.5295, 0.37 ) }
    dend_81 { pt3dadd( -106.907, 62.4837, -41.79, 1.03 ) }
    dend_81 { pt3dadd( -107.973, 62.7621, -42.3672, 0.44 ) }
    dend_81 { pt3dadd( -109.33, 63.1032, -43.1495, 0.44 ) }
    dend_81 { pt3dadd( -110.011, 63.2672, -43.5537, 0.59 ) }
    dend_81 { pt3dadd( -110.528, 63.3984, -43.8946, 0.59 ) }
    dend_81 { pt3dadd( -111.471, 63.628, -44.5333, 1.03 ) }
    dend_81 { pt3dadd( -112.325, 63.8209, -45.1739, 1.03 ) }
    dend_81 { pt3dadd( -113.056, 63.9694, -45.7717, 0.37 ) }
    dend_81 { pt3dadd( -113.721, 64.0678, -46.3433, 0.37 ) }
    dend_81 { pt3dadd( -114.843, 64.1866, -47.3052, 0.37 ) }
    dend_81 { pt3dadd( -115.267, 64.2189, -47.6862, 0.37 ) }
    dend_81 { pt3dadd( -116.412, 64.3033, -48.6918, 1.33 ) }
    dend_81 { pt3dadd( -117.344, 64.4042, -49.5319, 0.37 ) }
    dend_81 { pt3dadd( -117.777, 64.4803, -49.9335, 0.37 ) }
    dend_81 { pt3dadd( -118.012, 64.5407, -50.149, 0.37 ) }
    dend_81 { pt3dadd( -118.886, 64.8088, -50.9221, 0.37 ) }
    dend_81 { pt3dadd( -119.472, 65.0422, -51.427, 0.37 ) }
    dend_81 { pt3dadd( -120.321, 65.4399, -52.1851, 0.37 ) }
    dend_81 { pt3dadd( -121.05, 65.8283, -52.8583, 0.37 ) }
    dend_81 { pt3dadd( -121.71, 66.2145, -53.4774, 0.88 ) }
    dend_81 { pt3dadd( -122.754, 66.8461, -54.3634, 0.22 ) }
    dend_81 { pt3dadd( -123.296, 67.1646, -54.7614, 0.22 ) }
    dend_81 { pt3dadd( -124.443, 67.8325, -55.5128, 0.74 ) }
    dend_81 { pt3dadd( -125.017, 68.1796, -55.8306, 0.74 ) }
    dend_81 { pt3dadd( -125.433, 68.4425, -56.0221, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_81 { pt3dadd( -126.762, 69.3581, -56.5442, 0.22 ) }
    dend_81 { pt3dadd( -127.367, 69.8207, -56.7327, 0.22 ) }
    dend_81 { pt3dadd( -127.82, 70.1834, -56.8604, 0.22 ) }
    dend_81 { pt3dadd( -128.366, 70.6491, -56.9787, 0.66 ) }
    dend_81 { pt3dadd( -128.842, 71.0747, -57.1021, 0.66 ) }
    dend_81 { pt3dadd( -129.027, 71.2539, -57.1656, 0.66 ) }
    dend_81 { pt3dadd( -129.724, 71.9867, -57.4459, 0.29 ) }
    dend_81 { pt3dadd( -130.015, 72.302, -57.5597, 0.29 ) }
    dend_81 { pt3dadd( -130.376, 72.6982, -57.6936, 0.66 ) }
    dend_81 { pt3dadd( -130.642, 72.9764, -57.7801, 0.66 ) }
    dend_81 { pt3dadd( -131.139, 73.4752, -57.9245, 0.22 ) }
    dend_81 { pt3dadd( -132.234, 74.5271, -58.1795, 0.22 ) }
    dend_81 { pt3dadd( -132.574, 74.853, -58.2383, 0.22 ) }
    dend_81 { pt3dadd( -132.769, 75.0423, -58.2794, 0.59 ) }
    dend_81 { pt3dadd( -133.389, 75.6345, -58.4171, 0.37 ) }
    dend_81 { pt3dadd( -133.918, 76.1287, -58.558, 0.37 ) }
    dend_81 { pt3dadd( -134.515, 76.6703, -58.7462, 0.37 ) }
    dend_81 { pt3dadd( -134.749, 76.872, -58.8496, 1.11 ) }
    dend_81 { pt3dadd( -136.393, 78.1429, -59.6404, 0.29 ) }
    dend_81 { pt3dadd( -136.834, 78.4562, -59.8558, 0.29 ) }
    dend_81 { pt3dadd( -137.546, 78.9519, -60.2333, 0.29 ) }
    dend_81 { pt3dadd( -138.163, 79.3591, -60.5663, 1.18 ) }
    dend_81 { pt3dadd( -139.171, 79.9723, -61.106, 0.29 ) }
    dend_81 { pt3dadd( -139.97, 80.4361, -61.5557, 0.29 ) }
    dend_81 { pt3dadd( -140.609, 80.7916, -61.9227, 0.29 ) }
    dend_81 { pt3dadd( -141.121, 81.1103, -62.2429, 0.29 ) }
    dend_81 { pt3dadd( -141.751, 81.5589, -62.6626, 0.37 ) }
    dend_81 { pt3dadd( -141.951, 81.7251, -62.8449, 0.37 ) }
    dend_81 { pt3dadd( -142.676, 82.4154, -63.6728, 0.37 ) }
    dend_81 { pt3dadd( -143.04, 82.7982, -64.1218, 0.37 ) }
    dend_81 { pt3dadd( -143.631, 83.4279, -64.8417, 0.44 ) }
    dend_81 { pt3dadd( -144.004, 83.8114, -65.2728, 0.44 ) }
    dend_81 { pt3dadd( -145.185, 84.9879, -66.5706, 0.81 ) }
    dend_81 { pt3dadd( -145.495, 85.2794, -66.8677, 0.81 ) }
    dend_81 { pt3dadd( -146.707, 86.2649, -67.7672, 0.29 ) }
    dend_81 { pt3dadd( -147.181, 86.5939, -68.0382, 0.66 ) }
    dend_81 { pt3dadd( -147.83, 86.9745, -68.302, 1.11 ) }
    dend_81 { pt3dadd( -148.247, 87.1953, -68.4225, 1.11 ) }
    dend_81 { pt3dadd( -148.909, 87.5235, -68.5639, 0.29 ) }
    dend_81 { pt3dadd( -149.924, 87.9762, -68.8561, 0.29 ) }
    dend_81 { pt3dadd( -150.83, 88.3132, -69.2017, 0.29 ) }
    dend_81 { pt3dadd( -151.809, 88.6495, -69.602, 0.44 ) }
    dend_81 { pt3dadd( -152.387, 88.8286, -69.8746, 0.44 ) }
    dend_81 { pt3dadd( -153.153, 89.0454, -70.2887, 0.52 ) }
    dend_81 { pt3dadd( -154.618, 89.4358, -71.1523, 0.22 ) }
    dend_81 { pt3dadd( -155.804, 89.7541, -71.9201, 0.22 ) }
    dend_81 { pt3dadd( -156.817, 90.0316, -72.6105, 0.22 ) }
    dend_81 { pt3dadd( -158.027, 90.4199, -73.4161, 0.22 ) }
    dend_81 { pt3dadd( -158.605, 90.6404, -73.7962, 0.96 ) }
    dend_81 { pt3dadd( -159.116, 90.8873, -74.1336, 0.96 ) }
    dend_81 { pt3dadd( -160.194, 91.6474, -74.9514, 0.29 ) }
    dend_81 { pt3dadd( -160.76, 92.2086, -75.4502, 0.29 ) }
    dend_81 { pt3dadd( -161.552, 93.2486, -76.28, 0.29 ) }
    dend_81 { pt3dadd( -161.666, 93.4333, -76.404, 0.52 ) }
    dend_81 { pt3dadd( -162.095, 94.2615, -76.9129, 0.52 ) }
    dend_81 { pt3dadd( -162.621, 95.5265, -77.7232, 0.22 ) }
    dend_81 { pt3dadd( -162.853, 96.2095, -78.1463, 0.22 ) }
    dend_81 { pt3dadd( -163.043, 96.8626, -78.6026, 0.22 ) }
    dend_81 { pt3dadd( -163.239, 97.5584, -79.1411, 0.22 ) }
    dend_81 { pt3dadd( -163.38, 98.0091, -79.5337, 0.22 ) }
    dend_81 { pt3dadd( -163.759, 99.0897, -80.5605, 0.52 ) }
    dend_81 { pt3dadd( -164.019, 99.709, -81.194, 0.52 ) }
    dend_81 { pt3dadd( -164.484, 100.63, -82.2481, 0.52 ) }
    dend_81 { pt3dadd( -164.685, 100.955, -82.6494, 0.52 ) }
    dend_81 { pt3dadd( -165.413, 101.928, -83.886, 0.52 ) }
    dend_81 { pt3dadd( -166.232, 102.827, -85.0193, 0.15 ) }
    dend_81 { pt3dadd( -166.657, 103.229, -85.4844, 0.15 ) }
    dend_81 { pt3dadd( -167.425, 103.892, -86.2111, 0.15 ) }
    dend_81 { pt3dadd( -167.974, 104.33, -86.6425, 0.37 ) }
    dend_81 { pt3dadd( -168.573, 104.812, -87.0985, 0.37 ) }
    dend_81 { pt3dadd( -168.849, 105.046, -87.3006, 0.37 ) }
    dend_81 { pt3dadd( -169.207, 105.398, -87.6092, 0.59 ) }
    dend_81 { pt3dadd( -169.436, 105.687, -87.86, 0.59 ) }
    dend_81 { pt3dadd( -169.731, 106.166, -88.2364, 1.11 ) }
    dend_81 { pt3dadd( -170.137, 106.959, -88.8815, 1.11 ) }
    dend_81 { pt3dadd( -170.534, 107.809, -89.5706, 0.37 ) }
    dend_81 { pt3dadd( -170.75, 108.3, -89.9756, 0.37 ) }
    dend_81 { pt3dadd( -170.889, 108.618, -90.2425, 0.37 ) }
    dend_81 { pt3dadd( -171.096, 109.073, -90.6069, 0.37 ) }
    dend_81 { pt3dadd( -171.453, 109.752, -91.0719, 0.37 ) }
    dend_81 { pt3dadd( -171.987, 110.671, -91.5938, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 81/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -19.6999, 39.0195, -0.467042, 1.18 ) }
    dend_68 { pt3dadd( -20.1195, 39.8924, -0.119486, 1.18 ) }
    dend_68 { pt3dadd( -20.7033, 41.0173, 0.361971, 1.11 ) }
    dend_68 { pt3dadd( -21.1596, 41.862, 0.725085, 1.11 ) }
    dend_68 { pt3dadd( -21.6028, 42.6826, 1.07779, 1.18 ) }
    dend_68 { pt3dadd( -22.0729, 43.5531, 1.45197, 1.18 ) }
    dend_68 { pt3dadd( -22.8232, 44.9422, 2.0491, 1.18 ) }
    dend_68 { pt3dadd( -23.1518, 45.563, 2.33467, 1.18 ) }
    dend_68 { pt3dadd( -23.3686, 45.9502, 2.51812, 1.18 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 90/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 27.1231, 40.5216, 24.1807, 0.74 ) }
    dend_62 { pt3dadd( 27.855, 40.5182, 24.1807, 0.74 ) }
    dend_62 { pt3dadd( 28.1476, 40.5081, 24.1812, 0.66 ) }
    dend_62 { pt3dadd( 30.0923, 40.3221, 24.1859, 0.22 ) }
    dend_62 { pt3dadd( 30.6736, 40.227, 24.1876, 0.29 ) }
    dend_62 { pt3dadd( 31.1897, 40.1155, 24.1893, 0.29 ) }
    dend_62 { pt3dadd( 31.2761, 40.0922, 24.1896, 0.29 ) }
    dend_62 { pt3dadd( 31.942, 39.8274, 24.2393, 0.29 ) }
    dend_62 { pt3dadd( 32.4135, 39.475, 24.3267, 0.29 ) }
    dend_62 { pt3dadd( 32.6644, 39.1138, 24.4302, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_62 { pt3dadd( 32.864, 38.8453, 24.5139, 0.37 ) }
    dend_62 { pt3dadd( 33.0402, 38.6838, 24.6013, 0.66 ) }
    dend_62 { pt3dadd( 33.8178, 38.2932, 25.0052, 0.66 ) }
    dend_62 { pt3dadd( 34.2652, 38.2314, 25.2727, 0.44 ) }
    dend_62 { pt3dadd( 34.623, 38.2391, 25.4927, 0.29 ) }
    dend_62 { pt3dadd( 35.3029, 38.3212, 25.903, 0.29 ) }
    dend_62 { pt3dadd( 36.5022, 38.5587, 26.603, 0.29 ) }
    dend_62 { pt3dadd( 36.5788, 38.5804, 26.646, 0.29 ) }
    dend_62 { pt3dadd( 37.405, 38.8912, 27.1001, 0.29 ) }
    dend_62 { pt3dadd( 37.4711, 38.918, 27.1377, 0.29 ) }
    dend_62 { pt3dadd( 38.0615, 39.1441, 27.4757, 0.29 ) }
    dend_62 { pt3dadd( 38.7439, 39.3253, 27.8515, 0.66 ) }
    dend_62 { pt3dadd( 39.0915, 39.3585, 28.0084, 0.74 ) }
    dend_62 { pt3dadd( 39.7471, 39.3728, 28.2654, 0.74 ) }
    dend_62 { pt3dadd( 40.0728, 39.3553, 28.3614, 0.66 ) }
    dend_62 { pt3dadd( 40.3598, 39.3236, 28.4323, 0.52 ) }
    dend_62 { pt3dadd( 41.2529, 39.1567, 28.6003, 0.44 ) }
    dend_62 { pt3dadd( 41.7019, 39.0513, 28.6613, 0.59 ) }
    dend_62 { pt3dadd( 42.0569, 38.9659, 28.696, 0.52 ) }
    dend_62 { pt3dadd( 42.7878, 38.7975, 28.8041, 0.29 ) }
    dend_62 { pt3dadd( 43.436, 38.6858, 28.946, 0.22 ) }
    dend_62 { pt3dadd( 43.9461, 38.625, 29.0821, 0.29 ) }
    dend_62 { pt3dadd( 44.5218, 38.5839, 29.2466, 0.29 ) }
    dend_62 { pt3dadd( 45.3483, 38.5278, 29.5119, 0.37 ) }
    dend_62 { pt3dadd( 46.5209, 38.4301, 29.9422, 0.29 ) }
    dend_62 { pt3dadd( 47.114, 38.3721, 30.2043, 0.37 ) }
    dend_62 { pt3dadd( 47.3059, 38.3549, 30.3073, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 27/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 27.1231, 40.5216, 24.1807, 0.66 ) }
    dend_59 { pt3dadd( 27.9072, 41.2066, 24.2002, 0.66 ) }
    dend_59 { pt3dadd( 28.378, 41.6144, 24.2434, 0.66 ) }
    dend_59 { pt3dadd( 28.8569, 42.001, 24.3004, 1.18 ) }
    dend_59 { pt3dadd( 29.2121, 42.2646, 24.3394, 1.18 ) }
    dend_59 { pt3dadd( 30.5749, 43.2095, 24.4739, 0.81 ) }
    dend_59 { pt3dadd( 31.1437, 43.5918, 24.5192, 0.81 ) }
    dend_59 { pt3dadd( 31.6469, 43.8963, 24.5604, 0.96 ) }
    dend_59 { pt3dadd( 32.2189, 44.2367, 24.611, 0.96 ) }
    dend_59 { pt3dadd( 32.6919, 44.5242, 24.6526, 0.96 ) }
    dend_59 { pt3dadd( 33.3012, 44.8795, 24.7019, 0.96 ) }
    dend_59 { pt3dadd( 33.8747, 45.2385, 24.7436, 0.88 ) }
    dend_59 { pt3dadd( 34.4177, 45.6082, 24.8381, 0.88 ) }
    dend_59 { pt3dadd( 34.8244, 45.9099, 24.9061, 0.96 ) }
    dend_59 { pt3dadd( 35.5056, 46.4764, 25.0606, 1.03 ) }
    dend_59 { pt3dadd( 35.8571, 46.7999, 25.1716, 1.03 ) }
    dend_59 { pt3dadd( 36.1619, 47.1054, 25.3007, 0.88 ) }
    dend_59 { pt3dadd( 37.1681, 48.2019, 25.8917, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 45/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 7.1711, 55.7252, 25.1838, 0.66 ) }
    dend_57 { pt3dadd( 7.8331, 57.5478, 28.3447, 0.66 ) }
    dend_57 { pt3dadd( 8.00125, 58.0253, 29.0568, 0.74 ) }
    dend_57 { pt3dadd( 8.08586, 58.291, 29.3805, 0.74 ) }
    dend_57 { pt3dadd( 8.1326, 58.4683, 29.5444, 0.74 ) }
    dend_57 { pt3dadd( 8.26112, 59.2405, 29.9597, 0.74 ) }
    dend_57 { pt3dadd( 8.27565, 59.6359, 30.2871, 0.74 ) }
    dend_57 { pt3dadd( 8.2455, 59.7277, 30.3589, 0.74 ) }
    dend_57 { pt3dadd( 8.01984, 60.0595, 30.9142, 0.74 ) }
    dend_57 { pt3dadd( 7.71061, 60.4053, 31.7232, 0.74 ) }
    dend_57 { pt3dadd( 7.57925, 60.5304, 32.0832, 0.74 ) }
    dend_57 { pt3dadd( 6.62125, 61.3192, 34.8572, 0.59 ) }
    dend_57 { pt3dadd( 6.21817, 61.5952, 36.1413, 0.52 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 58/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.1711, 55.7252, 25.1838, 1.18 ) }
    dend_56 { pt3dadd( 8.02426, 56.7947, 25.5101, 1.18 ) }
    dend_56 { pt3dadd( 8.77076, 57.9298, 25.5392, 0.44 ) }
    dend_56 { pt3dadd( 9.18358, 58.5981, 25.4438, 0.15 ) }
    dend_56 { pt3dadd( 9.58326, 59.3386, 25.28, 0.07 ) }
    dend_56 { pt3dadd( 9.84533, 59.9279, 25.1275, 0.07 ) }
    dend_56 { pt3dadd( 10.2047, 60.736, 24.9183, 0.07 ) }
    dend_56 { pt3dadd( 10.5226, 61.6615, 24.5142, 0.07 ) }
    dend_56 { pt3dadd( 10.6691, 62.1914, 24.2107, 0.22 ) }
    dend_56 { pt3dadd( 10.7761, 62.7133, 23.9023, 0.22 ) }
    dend_56 { pt3dadd( 10.8594, 63.262, 23.5676, 0.22 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 69/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -258.661, -279.286, -123.249, 0.29 ) }
    dend_48 { pt3dadd( -259.359, -280.557, -122.985, 0.29 ) }
    dend_48 { pt3dadd( -259.717, -281.099, -122.881, 0.29 ) }
    dend_48 { pt3dadd( -260.348, -281.993, -122.725, 0.29 ) }
    dend_48 { pt3dadd( -261.29, -283.131, -122.474, 0.44 ) }
    dend_48 { pt3dadd( -262.18, -284.129, -122.247, 0.44 ) }
    dend_48 { pt3dadd( -263.019, -285.009, -121.985, 0.44 ) }
    dend_48 { pt3dadd( -263.919, -285.842, -121.68, 0.44 ) }
    dend_48 { pt3dadd( -264.407, -286.257, -121.51, 0.44 ) }
    dend_48 { pt3dadd( -266.264, -287.679, -120.884, 0.44 ) }
    dend_48 { pt3dadd( -267.486, -288.576, -120.495, 0.44 ) }
    dend_48 { pt3dadd( -269.198, -289.794, -119.837, 0.52 ) }
    dend_48 { pt3dadd( -269.37, -289.918, -119.762, 0.74 ) }
    dend_48 { pt3dadd( -269.789, -290.236, -119.57, 0.74 ) }
    dend_48 { pt3dadd( -271.196, -291.334, -118.845, 0.37 ) }
    dend_48 { pt3dadd( -271.754, -291.843, -118.539, 0.37 ) }
    dend_48 { pt3dadd( -272.904, -292.976, -117.899, 0.74 ) }
    dend_48 { pt3dadd( -273.339, -293.435, -117.674, 0.74 ) }
    dend_48 { pt3dadd( -274.484, -294.621, -117.115, 0.44 ) }
    dend_48 { pt3dadd( -275.717, -295.894, -116.557, 0.74 ) }
    dend_48 { pt3dadd( -277.13, -297.376, -115.963, 0.29 ) }
    dend_48 { pt3dadd( -277.58, -297.8, -115.823, 0.74 ) }
    dend_48 { pt3dadd( -278.05, -298.204, -115.734, 0.74 ) }
    dend_48 { pt3dadd( -279.199, -299.124, -115.57, 0.44 ) }
    dend_48 { pt3dadd( -279.979, -299.72, -115.505, 0.74 ) }
    dend_48 { pt3dadd( -280.278, -299.937, -115.508, 0.74 ) }
    dend_48 { pt3dadd( -281.628, -300.839, -115.525, 0.52 ) }
    dend_48 { pt3dadd( -282.624, -301.524, -115.54, 0.44 ) }
    dend_48 { pt3dadd( -283.135, -301.895, -115.55, 0.88 ) }
    dend_48 { pt3dadd( -283.365, -302.073, -115.555, 0.88 ) }
    dend_48 { pt3dadd( -285.497, -303.673, -115.617, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 0/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -258.661, -279.286, -123.249, 0.44 ) }
    dend_47 { pt3dadd( -259.992, -277.88, -122.809, 0.44 ) }
    dend_47 { pt3dadd( -260.278, -277.618, -122.595, 0.44 ) }
    dend_47 { pt3dadd( -261.342, -276.802, -121.507, 0.44 ) }
    dend_47 { pt3dadd( -261.83, -276.454, -120.991, 0.44 ) }
    dend_47 { pt3dadd( -262.216, -276.183, -120.526, 0.44 ) }
    dend_47 { pt3dadd( -262.688, -275.851, -119.958, 0.44 ) }
    dend_47 { pt3dadd( -264.686, -274.509, -117.412, 0.44 ) }
    dend_47 { pt3dadd( -265.651, -273.922, -116.053, 0.44 ) }
    dend_47 { pt3dadd( -266.073, -273.71, -115.38, 0.59 ) }
    dend_47 { pt3dadd( -267.171, -273.189, -113.452, 0.59 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 197.235, -195.712, -93.9449, 0.37 ) }
    dend_43 { pt3dadd( 198.627, -196.983, -93.3716, 0.37 ) }
    dend_43 { pt3dadd( 199.736, -197.958, -92.9897, 0.37 ) }
    dend_43 { pt3dadd( 200.572, -198.663, -92.7495, 0.37 ) }
    dend_43 { pt3dadd( 201.678, -199.582, -92.4779, 0.37 ) }
    dend_43 { pt3dadd( 202.99, -200.654, -92.1976, 0.37 ) }
    dend_43 { pt3dadd( 203.745, -201.26, -92.055, 0.37 ) }
    dend_43 { pt3dadd( 204.522, -201.838, -91.9602, 0.37 ) }
    dend_43 { pt3dadd( 205.461, -202.531, -91.9123, 0.37 ) }
    dend_43 { pt3dadd( 206.308, -203.169, -91.8777, 0.37 ) }
    dend_43 { pt3dadd( 207.01, -203.708, -91.8621, 0.37 ) }
    dend_43 { pt3dadd( 207.654, -204.204, -91.8754, 0.37 ) }
    dend_43 { pt3dadd( 208.385, -204.767, -91.8864, 0.37 ) }
    dend_43 { pt3dadd( 209.027, -205.268, -91.8864, 0.66 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 25/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 197.235, -195.712, -93.9449, 0.37 ) }
    dend_42 { pt3dadd( 197.976, -194.799, -93.5061, 0.37 ) }
    dend_42 { pt3dadd( 198.427, -194.185, -93.2326, 0.37 ) }
    dend_42 { pt3dadd( 199.413, -192.55, -92.6025, 0.37 ) }
    dend_42 { pt3dadd( 199.736, -191.858, -92.3662, 0.37 ) }
    dend_42 { pt3dadd( 199.98, -191.241, -92.1767, 0.37 ) }
    dend_42 { pt3dadd( 200.312, -190.303, -91.8945, 0.37 ) }
    dend_42 { pt3dadd( 200.637, -189.16, -91.5538, 0.37 ) }
    dend_42 { pt3dadd( 200.939, -187.894, -91.1742, 0.37 ) }
    dend_42 { pt3dadd( 201.233, -186.463, -90.7507, 0.37 ) }
    dend_42 { pt3dadd( 201.427, -185.547, -90.453, 0.37 ) }
    dend_42 { pt3dadd( 201.745, -184.091, -89.9239, 0.52 ) }
    dend_42 { pt3dadd( 202.049, -182.896, -89.4566, 0.29 ) }
    dend_42 { pt3dadd( 202.486, -181.504, -88.8567, 0.29 ) }
    dend_42 { pt3dadd( 202.728, -180.879, -88.5607, 0.29 ) }
    dend_42 { pt3dadd( 202.969, -180.316, -88.2858, 0.52 ) }
    dend_42 { pt3dadd( 203.359, -179.433, -87.8545, 0.22 ) }
    dend_42 { pt3dadd( 203.797, -178.473, -87.3952, 0.22 ) }
    dend_42 { pt3dadd( 204.367, -177.27, -86.8365, 0.22 ) }
    dend_42 { pt3dadd( 204.666, -176.664, -86.5689, 0.22 ) }
    dend_42 { pt3dadd( 204.941, -176.094, -86.3274, 0.22 ) }
    dend_42 { pt3dadd( 205.37, -175.164, -85.9316, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 47/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -13.239, -144.473, -78.8248, 0.44 ) }
    dend_40 { pt3dadd( -14.6041, -145.346, -80.1521, 0.44 ) }
    dend_40 { pt3dadd( -15.3054, -145.833, -80.8079, 0.44 ) }
    dend_40 { pt3dadd( -16.1078, -146.463, -81.5062, 0.59 ) }
    dend_40 { pt3dadd( -17.3364, -147.512, -82.6293, 0.15 ) }
    dend_40 { pt3dadd( -17.8516, -147.967, -83.0927, 0.59 ) }
    dend_40 { pt3dadd( -18.6898, -148.729, -83.8609, 0.66 ) }
    dend_40 { pt3dadd( -19.6095, -149.588, -84.6735, 0.29 ) }
    dend_40 { pt3dadd( -20.4273, -150.416, -85.4433, 0.29 ) }
    dend_40 { pt3dadd( -21.269, -151.36, -86.232, 0.59 ) }
    dend_40 { pt3dadd( -21.7323, -151.954, -86.6754, 1.4 ) }
    dend_40 { pt3dadd( -22.5869, -153.176, -87.5897, 1.18 ) }
    dend_40 { pt3dadd( -23.2068, -154.202, -88.2993, 0.52 ) }
    dend_40 { pt3dadd( -23.4139, -154.595, -88.5724, 0.37 ) }
    dend_40 { pt3dadd( -23.7889, -155.375, -89.1089, 0.37 ) }
    dend_40 { pt3dadd( -24.1183, -156.131, -89.5895, 0.37 ) }
    dend_40 { pt3dadd( -24.7878, -157.963, -90.7163, 0.37 ) }
    dend_40 { pt3dadd( -25.0505, -158.787, -91.187, 0.37 ) }
    dend_40 { pt3dadd( -25.3856, -159.92, -91.8176, 0.52 ) }
    dend_40 { pt3dadd( -25.5319, -160.41, -92.0914, 0.66 ) }
    dend_40 { pt3dadd( -25.7596, -161.194, -92.6254, 0.29 ) }
    dend_40 { pt3dadd( -26.1898, -162.57, -93.6427, 0.29 ) }
    dend_40 { pt3dadd( -26.5649, -163.881, -94.7203, 0.29 ) }
    dend_40 { pt3dadd( -26.6512, -164.189, -95.0083, 0.44 ) }
    dend_40 { pt3dadd( -26.8368, -164.887, -95.6964, 0.44 ) }
    dend_40 { pt3dadd( -27.4989, -167.36, -98.4412, 0.52 ) }
    dend_40 { pt3dadd( -27.6143, -167.773, -98.9542, 0.74 ) }
    dend_40 { pt3dadd( -27.9413, -168.845, -100.435, 0.81 ) }
    dend_40 { pt3dadd( -28.2616, -169.938, -101.96, 0.81 ) }
    dend_40 { pt3dadd( -28.314, -170.14, -102.254, 0.81 ) }
    dend_40 { pt3dadd( -28.4875, -170.999, -103.504, 0.81 ) }
    dend_40 { pt3dadd( -28.6205, -171.808, -104.575, 0.81 ) }
    dend_40 { pt3dadd( -28.6431, -172.042, -104.848, 0.44 ) }
    dend_40 { pt3dadd( -28.7246, -172.942, -105.794, 0.44 ) }
    dend_40 { pt3dadd( -28.9992, -175.202, -108.447, 0.44 ) }
    dend_40 { pt3dadd( -29.0538, -175.53, -108.852, 1.11 ) }
    dend_40 { pt3dadd( -29.1764, -176.008, -109.511, 0.37 ) }
    dend_40 { pt3dadd( -29.4969, -177.006, -111.031, 0.37 ) }
    dend_40 { pt3dadd( -29.8104, -177.769, -112.343, 0.52 ) }
    dend_40 { pt3dadd( -30.6056, -179.202, -114.998, 0.52 ) }
    dend_40 { pt3dadd( -30.8442, -179.558, -115.622, 0.52 ) }
    dend_40 { pt3dadd( -31.5237, -180.491, -117.205, 0.52 ) }
    dend_40 { pt3dadd( -31.7882, -180.841, -117.767, 0.52 ) }
    dend_40 { pt3dadd( -32.5364, -181.808, -119.121, 0.52 ) }
    dend_40 { pt3dadd( -32.9492, -182.422, -119.728, 0.29 ) }
    dend_40 { pt3dadd( -33.5068, -183.314, -120.36, 0.29 ) }
    dend_40 { pt3dadd( -34.0362, -184.148, -120.878, 0.29 ) }
    dend_40 { pt3dadd( -34.8149, -185.36, -121.472, 0.29 ) }
    dend_40 { pt3dadd( -35.2773, -186.032, -121.837, 0.29 ) }
    dend_40 { pt3dadd( -35.5814, -186.466, -122.071, 0.74 ) }
    dend_40 { pt3dadd( -36.1603, -187.278, -122.545, 0.37 ) }
    dend_40 { pt3dadd( -36.5501, -187.805, -122.867, 0.37 ) }
    dend_40 { pt3dadd( -36.9137, -188.307, -123.184, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_40 { pt3dadd( -38.0003, -189.912, -124.187, 0.22 ) }
    dend_40 { pt3dadd( -38.407, -190.576, -124.597, 0.29 ) }
    dend_40 { pt3dadd( -38.8961, -191.485, -125.045, 0.29 ) }
    dend_40 { pt3dadd( -38.9924, -191.687, -125.115, 0.52 ) }
    dend_40 { pt3dadd( -39.3083, -192.414, -125.33, 0.52 ) }
    dend_40 { pt3dadd( -39.6064, -193.225, -125.47, 0.52 ) }
    dend_40 { pt3dadd( -39.8056, -193.892, -125.416, 0.52 ) }
    dend_40 { pt3dadd( -40.1292, -195.533, -125.196, 0.52 ) }
    dend_40 { pt3dadd( -40.1583, -195.885, -125.116, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -13.239, -144.473, -78.8248, 0.59 ) }
    dend_39 { pt3dadd( -15.0804, -143.679, -81.8153, 0.59 ) }
    dend_39 { pt3dadd( -15.6577, -143.528, -82.7349, 0.59 ) }
    dend_39 { pt3dadd( -15.9982, -143.486, -83.293, 0.59 ) }
    dend_39 { pt3dadd( -16.7961, -143.388, -84.6007, 0.44 ) }
    dend_39 { pt3dadd( -17.2672, -143.33, -85.3727, 0.44 ) }
    dend_39 { pt3dadd( -17.941, -143.247, -86.477, 0.44 ) }
    dend_39 { pt3dadd( -18.4245, -143.3, -87.0987, 0.44 ) }
    dend_39 { pt3dadd( -19.2725, -143.571, -88.3763, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 18/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 22.4066, -104.188, 9.71322, 0.74 ) }
    dend_30 { pt3dadd( 23.2234, -105.819, 9.84462, 0.74 ) }
    dend_30 { pt3dadd( 23.5399, -106.453, 9.82761, 0.74 ) }
    dend_30 { pt3dadd( 24.1739, -107.647, 9.73931, 0.74 ) }
    dend_30 { pt3dadd( 24.6286, -108.433, 9.63091, 0.74 ) }
    dend_30 { pt3dadd( 25.2266, -109.377, 9.4705, 0.74 ) }
    dend_30 { pt3dadd( 25.7917, -110.22, 9.31296, 0.74 ) }
    dend_30 { pt3dadd( 26.4429, -111.144, 9.05126, 0.96 ) }
    dend_30 { pt3dadd( 26.9816, -111.859, 8.84551, 0.96 ) }
    dend_30 { pt3dadd( 27.7637, -112.766, 8.55992, 0.74 ) }
    dend_30 { pt3dadd( 28.3555, -113.386, 8.36769, 0.74 ) }
    dend_30 { pt3dadd( 28.5177, -113.544, 8.31554, 0.74 ) }
    dend_30 { pt3dadd( 29.2665, -114.206, 8.05504, 0.74 ) }
    dend_30 { pt3dadd( 30.0388, -114.842, 7.79104, 0.74 ) }
    dend_30 { pt3dadd( 31.1941, -115.769, 7.38927, 0.59 ) }
    dend_30 { pt3dadd( 31.8114, -116.256, 7.1888, 0.59 ) }
    dend_30 { pt3dadd( 32.4041, -116.705, 6.99241, 0.66 ) }
    dend_30 { pt3dadd( 33.4581, -117.468, 6.66074, 0.66 ) }
    dend_30 { pt3dadd( 34.0159, -117.846, 6.49822, 0.66 ) }
    dend_30 { pt3dadd( 35.1269, -118.577, 6.19582, 0.66 ) }
    dend_30 { pt3dadd( 35.8948, -119.08, 6.01606, 0.66 ) }
    dend_30 { pt3dadd( 37.0621, -119.852, 5.77667, 0.59 ) }
    dend_30 { pt3dadd( 37.938, -120.44, 5.63849, 0.88 ) }
    dend_30 { pt3dadd( 38.5446, -120.855, 5.56686, 0.81 ) }
    dend_30 { pt3dadd( 39.274, -121.356, 5.48743, 0.52 ) }
    dend_30 { pt3dadd( 39.8151, -121.748, 5.42536, 0.52 ) }
    dend_30 { pt3dadd( 40.5344, -122.304, 5.34686, 0.74 ) }
    dend_30 { pt3dadd( 41.299, -122.943, 5.27675, 1.03 ) }
    dend_30 { pt3dadd( 42.299, -123.788, 5.14081, 0.66 ) }
    dend_30 { pt3dadd( 42.9577, -124.335, 5.0364, 0.52 ) }
    dend_30 { pt3dadd( 44.3748, -125.472, 4.79792, 0.52 ) }
    dend_30 { pt3dadd( 45.0569, -125.995, 4.66332, 0.66 ) }
    dend_30 { pt3dadd( 45.58, -126.372, 4.551, 0.66 ) }
    dend_30 { pt3dadd( 47.0573, -127.365, 4.2232, 0.66 ) }
    dend_30 { pt3dadd( 47.9744, -127.94, 4.01898, 1.11 ) }
    dend_30 { pt3dadd( 48.3685, -128.169, 3.93965, 1.11 ) }
    dend_30 { pt3dadd( 49.2461, -128.644, 3.79939, 0.59 ) }
    dend_30 { pt3dadd( 50.3104, -129.197, 3.66677, 0.59 ) }
    dend_30 { pt3dadd( 51.0995, -129.592, 3.59166, 0.59 ) }
    dend_30 { pt3dadd( 51.4984, -129.793, 3.56977, 0.74 ) }
    dend_30 { pt3dadd( 52.4307, -130.26, 3.5199, 0.74 ) }
    dend_30 { pt3dadd( 53.6768, -130.888, 3.41665, 0.44 ) }
    dend_30 { pt3dadd( 54.8199, -131.459, 3.29894, 0.44 ) }
    dend_30 { pt3dadd( 55.6036, -131.849, 3.19505, 1.11 ) }
    dend_30 { pt3dadd( 56.1282, -132.115, 3.11365, 1.33 ) }
    dend_30 { pt3dadd( 56.7088, -132.408, 3.01276, 1.33 ) }
    dend_30 { pt3dadd( 57.8425, -132.975, 2.77932, 0.52 ) }
    dend_30 { pt3dadd( 58.4061, -133.269, 2.63632, 0.44 ) }
    dend_30 { pt3dadd( 58.8375, -133.526, 2.50578, 0.44 ) }
    dend_30 { pt3dadd( 59.3233, -133.843, 2.35185, 0.44 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.4066, -104.188, 9.71322, 0.59 ) }
    dend_29 { pt3dadd( 22.2024, -106.004, 10.1096, 0.59 ) }
    dend_29 { pt3dadd( 22.1948, -107.104, 10.2686, 0.59 ) }
    dend_29 { pt3dadd( 22.2068, -108.206, 10.3887, 0.59 ) }
    dend_29 { pt3dadd( 22.1983, -108.655, 10.429, 0.59 ) }
    dend_29 { pt3dadd( 22.095, -110.501, 10.5719, 0.59 ) }
    dend_29 { pt3dadd( 22.0062, -111.483, 10.6377, 0.74 ) }
    dend_29 { pt3dadd( 21.9914, -112.096, 10.6147, 0.66 ) }
    dend_29 { pt3dadd( 22.013, -112.627, 10.592, 0.29 ) }
    dend_29 { pt3dadd( 22.0456, -113.293, 10.5787, 0.29 ) }
    dend_29 { pt3dadd( 22.0326, -113.725, 10.5859, 0.29 ) }
    dend_29 { pt3dadd( 21.9462, -114.232, 10.6184, 0.29 ) }
    dend_29 { pt3dadd( 21.8159, -114.945, 10.6916, 0.29 ) }
    dend_29 { pt3dadd( 21.7802, -115.407, 10.7492, 0.29 ) }
    dend_29 { pt3dadd( 21.8131, -116.122, 10.8328, 0.29 ) }
    dend_29 { pt3dadd( 21.9466, -117.151, 10.9468, 0.37 ) }
    dend_29 { pt3dadd( 22.0337, -117.716, 11.01, 0.37 ) }
    dend_29 { pt3dadd( 22.1439, -118.401, 11.086, 0.37 ) }
    dend_29 { pt3dadd( 22.2858, -119.407, 11.1909, 0.37 ) }
    dend_29 { pt3dadd( 22.4257, -120.396, 11.2742, 0.37 ) }
    dend_29 { pt3dadd( 22.5355, -120.951, 11.2946, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 89/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 8.63591, -59.8196, -13.2617, 1.33 ) }
    dend_7 { pt3dadd( 8.23923, -61.9204, -12.9126, 1.33 ) }
    dend_7 { pt3dadd( 7.97252, -63.2205, -12.7182, 1.33 ) }
    dend_7 { pt3dadd( 7.58234, -65.0651, -12.4691, 1.18 ) }
    dend_7 { pt3dadd( 7.44943, -65.8084, -12.3784, 1.33 ) }
    dend_7 { pt3dadd( 7.32306, -66.8053, -12.2689, 1.25 ) }
    dend_7 { pt3dadd( 7.22321, -68.1258, -12.1731, 1.25 ) }
    dend_7 { pt3dadd( 7.20867, -69.1071, -12.109, 1.18 ) }
    dend_7 { pt3dadd( 7.20847, -69.8879, -12.1258, 0.96 ) }
    dend_7 { pt3dadd( 7.20201, -70.9034, -12.2408, 1.11 ) }
    dend_7 { pt3dadd( 7.1523, -72.0218, -12.3862, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( 7.07836, -73.2207, -12.5748, 1.03 ) }
    dend_7 { pt3dadd( 7.02111, -74.2986, -12.7772, 1.03 ) }
    dend_7 { pt3dadd( 6.97394, -75.3016, -12.9839, 1.25 ) }
    dend_7 { pt3dadd( 6.93231, -76.3832, -13.2051, 1.33 ) }
    dend_7 { pt3dadd( 6.8973, -77.6105, -13.452, 1.33 ) }
    dend_7 { pt3dadd( 6.89465, -78.9633, -13.7057, 1.33 ) }
    dend_7 { pt3dadd( 6.93528, -80.4236, -13.9207, 1.33 ) }
    dend_7 { pt3dadd( 7.03469, -82.0767, -14.1574, 1.18 ) }
    dend_7 { pt3dadd( 7.13905, -83.4697, -14.3642, 1.18 ) }
    dend_7 { pt3dadd( 7.25537, -84.9241, -14.6174, 1.18 ) }
    dend_7 { pt3dadd( 7.34313, -86.1447, -14.8445, 1.18 ) }
    dend_7 { pt3dadd( 7.37999, -87.3307, -15.0693, 1.18 ) }
    dend_7 { pt3dadd( 7.35057, -88.6979, -15.282, 1.11 ) }
    dend_7 { pt3dadd( 7.25422, -90.0171, -15.4545, 1.11 ) }
    dend_7 { pt3dadd( 7.0848, -91.3887, -15.5975, 1.11 ) }
    dend_7 { pt3dadd( 6.89255, -92.5657, -15.6747, 1.25 ) }
    dend_7 { pt3dadd( 6.70197, -93.6351, -15.7089, 1.18 ) }
    dend_7 { pt3dadd( 6.45284, -95.241, -15.7038, 0.88 ) }
    dend_7 { pt3dadd( 6.39137, -95.747, -15.6699, 0.88 ) }
    dend_7 { pt3dadd( 6.26504, -96.9791, -15.5611, 1.18 ) }
    dend_7 { pt3dadd( 6.15334, -97.9397, -15.4821, 1.25 ) }
    dend_7 { pt3dadd( 6.0066, -99.1111, -15.4638, 1.25 ) }
    dend_7 { pt3dadd( 5.84724, -100.417, -15.532, 1.25 ) }
    dend_7 { pt3dadd( 5.7068, -101.63, -15.6786, 1.03 ) }
    dend_7 { pt3dadd( 5.58233, -102.644, -15.8698, 1.03 ) }
    dend_7 { pt3dadd( 5.38044, -103.904, -16.1738, 1.03 ) }
    dend_7 { pt3dadd( 5.18543, -105.001, -16.4726, 1.18 ) }
    dend_7 { pt3dadd( 4.98639, -106.053, -16.7838, 1.18 ) }
    dend_7 { pt3dadd( 4.73767, -107.256, -17.1437, 1.18 ) }
    dend_7 { pt3dadd( 4.38119, -108.903, -17.6346, 0.96 ) }
    dend_7 { pt3dadd( 4.04668, -110.468, -18.0879, 0.88 ) }
    dend_7 { pt3dadd( 3.84805, -111.494, -18.3819, 0.88 ) }
    dend_7 { pt3dadd( 3.6198, -112.68, -18.6946, 0.88 ) }
    dend_7 { pt3dadd( 3.4037, -113.745, -18.9792, 0.88 ) }
    dend_7 { pt3dadd( 3.15778, -114.866, -19.2604, 0.96 ) }
    dend_7 { pt3dadd( 2.99123, -115.638, -19.3873, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.63591, -59.8196, -13.2617, 1.03 ) }
    dend_4 { pt3dadd( 10.1811, -60.9177, -13.5934, 1.03 ) }
    dend_4 { pt3dadd( 10.9465, -61.4485, -13.7326, 1.03 ) }
    dend_4 { pt3dadd( 11.9744, -62.1382, -13.891, 1.03 ) }
    dend_4 { pt3dadd( 14.1607, -63.55, -14.1731, 1.03 ) }
    dend_4 { pt3dadd( 15.9606, -64.6804, -14.3754, 1.03 ) }
    dend_4 { pt3dadd( 17.7845, -65.826, -14.5804, 1.03 ) }
    dend_4 { pt3dadd( 19.2397, -66.7102, -14.7246, 1.03 ) }
    dend_4 { pt3dadd( 20.5606, -67.486, -14.8414, 1.03 ) }
    dend_4 { pt3dadd( 22.4251, -68.5442, -14.9595, 1.18 ) }
    dend_4 { pt3dadd( 23.4679, -69.1168, -14.9609, 1.18 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 47/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -23.3686, 45.9502, 2.51812, 0.88 ) }
    dend_70 { pt3dadd( -23.9785, 46.2211, 2.53774, 0.88 ) }
    dend_70 { pt3dadd( -24.9234, 46.6409, 2.56814, 1.4 ) }
    dend_70 { pt3dadd( -24.9234, 46.6409, 2.56814, 1.4 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 51/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -23.3686, 45.9502, 2.51812, 1.25 ) }
    dend_69 { pt3dadd( -23.6971, 46.3758, 2.51812, 1.25 ) }
    dend_69 { pt3dadd( -24.1856, 47.0725, 2.51812, 1.4 ) }
    dend_69 { pt3dadd( -24.2846, 47.228, 2.51937, 1.4 ) }
    dend_69 { pt3dadd( -24.9137, 48.3434, 2.49466, 0.88 ) }
    dend_69 { pt3dadd( -25.1302, 48.7831, 2.47842, 0.88 ) }
    dend_69 { pt3dadd( -25.2316, 49.0267, 2.46759, 0.88 ) }
    dend_69 { pt3dadd( -25.4249, 49.7313, 2.43009, 0.81 ) }
    dend_69 { pt3dadd( -25.4978, 50.2257, 2.38461, 0.81 ) }
    dend_69 { pt3dadd( -25.5578, 50.894, 2.30252, 0.81 ) }
    dend_69 { pt3dadd( -25.5785, 51.3288, 2.21554, 0.81 ) }
    dend_69 { pt3dadd( -25.6116, 51.8287, 2.09104, 0.74 ) }
    dend_69 { pt3dadd( -25.6508, 52.1766, 2.02146, 0.74 ) }
    dend_69 { pt3dadd( -25.7941, 52.8482, 1.94862, 0.74 ) }
    dend_69 { pt3dadd( -25.9628, 53.3315, 2.01552, 0.74 ) }
    dend_69 { pt3dadd( -26.2213, 53.943, 2.22083, 0.74 ) }
    dend_69 { pt3dadd( -26.4009, 54.3484, 2.41438, 0.74 ) }
    dend_69 { pt3dadd( -26.8349, 55.3311, 2.96019, 0.74 ) }
    dend_69 { pt3dadd( -27.0646, 55.8666, 3.31355, 0.88 ) }
    dend_69 { pt3dadd( -27.4683, 56.822, 4.00927, 0.96 ) }
    dend_69 { pt3dadd( -27.7894, 57.5996, 4.60757, 0.96 ) }
    dend_69 { pt3dadd( -28.0086, 58.1338, 5.02633, 0.81 ) }
    dend_69 { pt3dadd( -28.177, 58.5416, 5.32663, 0.81 ) }
    dend_69 { pt3dadd( -28.5435, 59.355, 5.83721, 0.81 ) }
    dend_69 { pt3dadd( -28.7536, 59.7524, 6.09173, 0.74 ) }
    dend_69 { pt3dadd( -29.0821, 60.2882, 6.42505, 0.66 ) }
    dend_69 { pt3dadd( -29.2754, 60.5716, 6.57758, 0.52 ) }
    dend_69 { pt3dadd( -29.4375, 60.8082, 6.66826, 0.52 ) }
    dend_69 { pt3dadd( -29.743, 61.2752, 6.96131, 0.96 ) }
    dend_69 { pt3dadd( -30.2989, 62.2043, 7.69492, 0.81 ) }
    dend_69 { pt3dadd( -30.5369, 62.6503, 8.10469, 0.81 ) }
    dend_69 { pt3dadd( -30.9819, 63.605, 9.01435, 0.96 ) }
    dend_69 { pt3dadd( -31.0684, 63.8149, 9.21674, 0.96 ) }
    dend_69 { pt3dadd( -31.8905, 66.1059, 11.4036, 0.81 ) }
    dend_69 { pt3dadd( -31.9699, 66.3507, 11.6435, 0.44 ) }
    dend_69 { pt3dadd( -32.0961, 66.7436, 12.0076, 0.44 ) }
    dend_69 { pt3dadd( -32.2317, 67.1324, 12.3709, 0.44 ) }
    dend_69 { pt3dadd( -32.343, 67.4369, 12.6744, 0.44 ) }
    dend_69 { pt3dadd( -32.4839, 67.7706, 12.9166, 0.74 ) }
    dend_69 { pt3dadd( -32.513, 67.8321, 12.9331, 0.74 ) }
    dend_69 { pt3dadd( -32.7753, 68.2921, 13.2476, 0.74 ) }
    dend_69 { pt3dadd( -32.9899, 68.6037, 13.5514, 0.74 ) }
    dend_69 { pt3dadd( -33.6643, 69.4332, 14.5743, 0.59 ) }
    dend_69 { pt3dadd( -33.9139, 69.6938, 14.9315, 0.52 ) }
    dend_69 { pt3dadd( -34.2125, 69.97, 15.2766, 0.52 ) }
    dend_69 { pt3dadd( -35.5476, 71.1143, 16.6336, 0.52 ) }
    dend_69 { pt3dadd( -35.881, 71.3774, 16.9372, 0.59 ) }
    dend_69 { pt3dadd( -36.3062, 71.6952, 17.2613, 0.74 ) }
    dend_69 { pt3dadd( -36.7781, 72.0252, 17.5202, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_69 { pt3dadd( -38.1788, 72.9459, 18.1501, 0.52 ) }
    dend_69 { pt3dadd( -38.3463, 73.0473, 18.197, 0.74 ) }
    dend_69 { pt3dadd( -38.5464, 73.1616, 18.2226, 1.03 ) }
    dend_69 { pt3dadd( -39.0285, 73.4436, 18.3292, 1.03 ) }
    dend_69 { pt3dadd( -39.0285, 73.4436, 18.3292, 1.25 ) }
    dend_69 { pt3dadd( -39.1541, 73.5252, 18.3857, 1.25 ) }
    dend_69 { pt3dadd( -39.5664, 73.7809, 18.6235, 0.96 ) }
    dend_69 { pt3dadd( -40.4816, 74.3254, 19.1142, 0.59 ) }
    dend_69 { pt3dadd( -41.0441, 74.6273, 19.372, 0.29 ) }
    dend_69 { pt3dadd( -41.2387, 74.7195, 19.447, 0.37 ) }
    dend_69 { pt3dadd( -41.6765, 74.8995, 19.5831, 0.59 ) }
    dend_69 { pt3dadd( -41.8989, 74.9777, 19.6326, 0.59 ) }
    dend_69 { pt3dadd( -42.465, 75.1457, 19.6878, 0.59 ) }
    dend_69 { pt3dadd( -42.9563, 75.2837, 19.6592, 0.59 ) }
    dend_69 { pt3dadd( -43.1925, 75.3565, 19.6417, 0.52 ) }
    dend_69 { pt3dadd( -43.6033, 75.5319, 19.6262, 0.37 ) }
    dend_69 { pt3dadd( -43.8568, 75.6999, 19.6306, 0.29 ) }
    dend_69 { pt3dadd( -44.1021, 75.9444, 19.9151, 0.29 ) }
    dend_69 { pt3dadd( -44.223, 76.0756, 20.1716, 0.29 ) }
    dend_69 { pt3dadd( -44.352, 76.1949, 20.4808, 0.88 ) }
    dend_69 { pt3dadd( -44.5148, 76.3201, 20.8988, 0.81 ) }
    dend_69 { pt3dadd( -44.6531, 76.4032, 21.2465, 0.81 ) }
    dend_69 { pt3dadd( -45.9535, 76.9367, 24.2636, 0.81 ) }
    dend_69 { pt3dadd( -46.1157, 76.9779, 24.6001, 0.81 ) }
    dend_69 { pt3dadd( -46.3717, 77.0216, 25.0551, 0.81 ) }
    dend_69 { pt3dadd( -46.4605, 77.0321, 25.1897, 0.81 ) }
    dend_69 { pt3dadd( -46.7789, 77.0637, 25.6061, 0.52 ) }
    dend_69 { pt3dadd( -47.0042, 77.1457, 25.9686, 0.52 ) }
    dend_69 { pt3dadd( -47.1757, 77.3407, 26.2821, 0.52 ) }
    dend_69 { pt3dadd( -47.3377, 77.604, 26.6876, 0.52 ) }
    dend_69 { pt3dadd( -47.4148, 77.7665, 26.9286, 0.66 ) }
    dend_69 { pt3dadd( -47.4959, 77.9688, 27.2167, 0.88 ) }
    dend_69 { pt3dadd( -48.0634, 79.5249, 29.5309, 0.88 ) }
    dend_69 { pt3dadd( -48.1334, 79.727, 29.8444, 0.59 ) }
    dend_69 { pt3dadd( -48.2094, 79.9281, 30.1705, 0.44 ) }
    dend_69 { pt3dadd( -48.279, 80.0808, 30.4264, 0.44 ) }
    dend_69 { pt3dadd( -48.3909, 80.2692, 30.719, 0.52 ) }
    dend_69 { pt3dadd( -48.8282, 80.8819, 31.4225, 0.59 ) }
    dend_69 { pt3dadd( -48.8507, 80.9137, 31.4362, 0.59 ) }
    dend_69 { pt3dadd( -49.0125, 81.1667, 31.5351, 0.74 ) }
    dend_69 { pt3dadd( -49.1068, 81.3407, 31.5892, 0.88 ) }
    dend_69 { pt3dadd( -49.3338, 81.8052, 31.7261, 0.59 ) }
    dend_69 { pt3dadd( -49.5791, 82.3442, 31.8651, 0.44 ) }
    dend_69 { pt3dadd( -49.8237, 82.8959, 31.966, 0.44 ) }
    dend_69 { pt3dadd( -49.8632, 82.9738, 31.9878, 0.44 ) }
    dend_69 { pt3dadd( -50.1157, 83.3938, 32.1382, 0.44 ) }
    dend_69 { pt3dadd( -50.5013, 83.9809, 32.3757, 0.44 ) }
    dend_69 { pt3dadd( -50.547, 84.0432, 32.4044, 0.44 ) }
    dend_69 { pt3dadd( -50.8379, 84.431, 32.5852, 0.44 ) }
    dend_69 { pt3dadd( -51.3325, 85.1248, 32.877, 0.44 ) }
    dend_69 { pt3dadd( -51.6319, 85.6151, 33.0371, 0.44 ) }
    dend_69 { pt3dadd( -51.9257, 86.1734, 33.1669, 0.44 ) }
    dend_69 { pt3dadd( -51.9525, 86.2274, 33.1744, 0.44 ) }
    dend_69 { pt3dadd( -52.3095, 86.965, 33.2416, 0.88 ) }
    dend_69 { pt3dadd( -52.5389, 87.4674, 33.2803, 1.25 ) }
    dend_69 { pt3dadd( -52.8933, 88.2535, 33.3174, 1.25 ) }
    dend_69 { pt3dadd( -53.2636, 88.9888, 33.3647, 1.25 ) }
    dend_69 { pt3dadd( -53.5106, 89.383, 33.3965, 0.96 ) }
    dend_69 { pt3dadd( -53.8071, 89.8224, 33.4358, 0.52 ) }
    dend_69 { pt3dadd( -54.1291, 90.2167, 33.4812, 0.37 ) }
    dend_69 { pt3dadd( -54.4312, 90.5144, 33.5326, 0.22 ) }
    dend_69 { pt3dadd( -54.7949, 90.7503, 33.6107, 0.07 ) }
    dend_69 { pt3dadd( -55.1489, 90.8976, 33.7135, 0.07 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 63/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 37.1681, 48.2019, 25.8917, 0.66 ) }
    dend_61 { pt3dadd( 38.8134, 49.1313, 22.7521, 0.66 ) }
    dend_61 { pt3dadd( 39.0469, 49.2681, 22.3586, 0.66 ) }
    dend_61 { pt3dadd( 39.2828, 49.4125, 22.0269, 0.66 ) }
    dend_61 { pt3dadd( 39.3439, 49.4544, 21.9402, 0.66 ) }
    dend_61 { pt3dadd( 39.9763, 49.9375, 21.0391, 0.66 ) }
    dend_61 { pt3dadd( 40.1439, 50.0769, 20.8062, 0.66 ) }
    dend_61 { pt3dadd( 40.5614, 50.4649, 20.3745, 0.66 ) }
    dend_61 { pt3dadd( 41.0352, 50.9506, 19.9615, 0.66 ) }
    dend_61 { pt3dadd( 42.0503, 52.0842, 19.3196, 0.66 ) }
    dend_61 { pt3dadd( 42.2802, 52.3585, 19.2809, 0.66 ) }
    dend_61 { pt3dadd( 42.6781, 52.8668, 19.421, 0.66 ) }
    dend_61 { pt3dadd( 43.0078, 53.2882, 19.6718, 0.66 ) }
    dend_61 { pt3dadd( 44.467, 55.195, 21.0807, 0.66 ) }
    dend_61 { pt3dadd( 44.5533, 55.3138, 21.1757, 1.18 ) }
    dend_61 { pt3dadd( 44.9659, 55.9197, 21.67, 1.99 ) }
    dend_61 { pt3dadd( 45.2171, 56.3105, 21.9581, 1.99 ) }
    dend_61 { pt3dadd( 45.7206, 57.2037, 22.5019, 1.84 ) }
    dend_61 { pt3dadd( 46.0461, 57.887, 22.7542, 1.25 ) }
    dend_61 { pt3dadd( 46.3453, 58.5574, 22.8166, 0.66 ) }
    dend_61 { pt3dadd( 46.611, 59.1494, 22.8598, 0.66 ) }
    dend_61 { pt3dadd( 46.6568, 59.2382, 22.864, 0.66 ) }
    dend_61 { pt3dadd( 46.9348, 59.6714, 22.8703, 0.66 ) }
    dend_61 { pt3dadd( 47.4279, 60.2536, 22.8507, 0.66 ) }
    dend_61 { pt3dadd( 48.0848, 60.8125, 22.8635, 0.37 ) }
    dend_61 { pt3dadd( 48.5215, 61.0923, 22.8814, 0.22 ) }
    dend_61 { pt3dadd( 49.359, 61.5679, 22.9288, 0.22 ) }
    dend_61 { pt3dadd( 49.8651, 61.8551, 22.9645, 0.22 ) }
    dend_61 { pt3dadd( 50.3259, 62.1171, 23.0039, 0.37 ) }
    dend_61 { pt3dadd( 50.7444, 62.3826, 23.0496, 0.29 ) }
    dend_61 { pt3dadd( 50.9473, 62.6219, 23.0859, 0.59 ) }
    dend_61 { pt3dadd( 51.081, 63.2895, 23.1653, 0.52 ) }
    dend_61 { pt3dadd( 51.0585, 63.8241, 23.2169, 0.37 ) }
    dend_61 { pt3dadd( 50.996, 64.338, 23.3374, 0.29 ) }
    dend_61 { pt3dadd( 50.9248, 64.7575, 23.4767, 0.37 ) }
    dend_61 { pt3dadd( 50.872, 65.0986, 23.6161, 0.52 ) }
    dend_61 { pt3dadd( 50.8672, 65.1526, 23.6417, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_61 { pt3dadd( 50.8772, 65.4098, 23.7971, 0.52 ) }
    dend_61 { pt3dadd( 51.0538, 66.5775, 24.5671, 0.52 ) }
    dend_61 { pt3dadd( 51.0714, 66.6457, 24.6222, 0.52 ) }
    dend_61 { pt3dadd( 51.2072, 67.0793, 25.0008, 0.44 ) }
    dend_61 { pt3dadd( 51.2318, 67.1525, 25.0674, 0.44 ) }
    dend_61 { pt3dadd( 51.3548, 67.5004, 25.3756, 0.44 ) }
    dend_61 { pt3dadd( 51.4794, 67.8245, 25.6363, 0.44 ) }
    dend_61 { pt3dadd( 51.8444, 68.7291, 26.031, 0.37 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 8/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 37.1681, 48.2019, 25.8917, 0.74 ) }
    dend_60 { pt3dadd( 37.671, 49.0356, 25.6978, 0.74 ) }
    dend_60 { pt3dadd( 38.0455, 49.537, 25.5036, 0.52 ) }
    dend_60 { pt3dadd( 38.0778, 49.5742, 25.4904, 0.52 ) }
    dend_60 { pt3dadd( 38.3866, 49.895, 25.3914, 0.52 ) }
    dend_60 { pt3dadd( 38.8341, 50.3435, 25.264, 0.59 ) }
    dend_60 { pt3dadd( 39.6552, 51.1314, 25.0633, 0.66 ) }
    dend_60 { pt3dadd( 39.9563, 51.365, 25.0026, 0.59 ) }
    dend_60 { pt3dadd( 40.4716, 51.7496, 24.9021, 0.59 ) }
    dend_60 { pt3dadd( 40.8354, 52.0325, 24.8448, 0.44 ) }
    dend_60 { pt3dadd( 40.8919, 52.078, 24.8393, 0.44 ) }
    dend_60 { pt3dadd( 41.3061, 52.4553, 24.8292, 0.44 ) }
    dend_60 { pt3dadd( 41.6832, 52.8177, 24.8609, 0.44 ) }
    dend_60 { pt3dadd( 41.9794, 53.1348, 24.9041, 0.52 ) }
    dend_60 { pt3dadd( 42.0579, 53.2247, 24.9202, 0.52 ) }
    dend_60 { pt3dadd( 42.3905, 53.615, 25.018, 0.52 ) }
    dend_60 { pt3dadd( 42.7106, 53.9893, 25.1306, 0.52 ) }
    dend_60 { pt3dadd( 42.7595, 54.0502, 25.1507, 0.52 ) }
    dend_60 { pt3dadd( 43.4002, 54.8777, 25.3452, 0.74 ) }
    dend_60 { pt3dadd( 43.7901, 55.3734, 25.5105, 0.74 ) }
    dend_60 { pt3dadd( 43.8369, 55.4315, 25.5258, 0.74 ) }
    dend_60 { pt3dadd( 44.2147, 55.9095, 25.6185, 0.74 ) }
    dend_60 { pt3dadd( 44.62, 56.4149, 25.7071, 0.74 ) }
    dend_60 { pt3dadd( 45.1403, 57.0749, 25.7717, 0.74 ) }
    dend_60 { pt3dadd( 46.0084, 58.1925, 25.6914, 0.74 ) }
    dend_60 { pt3dadd( 46.6577, 59.0654, 25.594, 0.74 ) }
    dend_60 { pt3dadd( 46.9587, 59.4693, 25.5458, 0.74 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 35/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -285.497, -303.673, -115.617, 0.74 ) }
    dend_50 { pt3dadd( -287.286, -304.921, -116.032, 0.74 ) }
    dend_50 { pt3dadd( -288.091, -305.582, -116.197, 0.74 ) }
    dend_50 { pt3dadd( -288.898, -306.325, -116.31, 0.74 ) }
    dend_50 { pt3dadd( -289.233, -306.66, -116.343, 0.59 ) }
    dend_50 { pt3dadd( -289.798, -307.248, -116.364, 0.59 ) }
    dend_50 { pt3dadd( -290.287, -307.728, -116.284, 0.59 ) }
    dend_50 { pt3dadd( -290.789, -308.2, -116.091, 0.37 ) }
    dend_50 { pt3dadd( -292.253, -309.451, -115.443, 0.37 ) }
    dend_50 { pt3dadd( -293.304, -310.198, -114.834, 0.37 ) }
    dend_50 { pt3dadd( -293.934, -310.569, -114.451, 0.37 ) }
    dend_50 { pt3dadd( -296.179, -311.609, -112.971, 0.37 ) }
    dend_50 { pt3dadd( -297.081, -311.961, -112.354, 0.37 ) }
    dend_50 { pt3dadd( -298.196, -312.337, -111.577, 0.37 ) }
    dend_50 { pt3dadd( -300.659, -312.974, -109.741, 0.37 ) }
    dend_50 { pt3dadd( -301.913, -313.197, -108.834, 0.37 ) }
    dend_50 { pt3dadd( -304.091, -313.459, -107.344, 0.37 ) }
    dend_50 { pt3dadd( -304.727, -313.498, -106.887, 0.37 ) }
    dend_50 { pt3dadd( -305.549, -313.519, -106.265, 0.37 ) }
    dend_50 { pt3dadd( -307.552, -313.471, -104.693, 0.37 ) }
    dend_50 { pt3dadd( -308.927, -313.354, -103.671, 0.37 ) }
    dend_50 { pt3dadd( -309.255, -313.293, -103.396, 0.37 ) }
    dend_50 { pt3dadd( -311.192, -312.694, -101.707, 0.37 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 58/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -285.497, -303.673, -115.617, 0.22 ) }
    dend_49 { pt3dadd( -285.127, -305.266, -115.478, 0.22 ) }
    dend_49 { pt3dadd( -284.905, -306.498, -115.362, 0.22 ) }
    dend_49 { pt3dadd( -284.8, -307.458, -115.276, 0.22 ) }
    dend_49 { pt3dadd( -284.76, -308.266, -115.208, 0.22 ) }
    dend_49 { pt3dadd( -284.695, -309.565, -115.098, 0.29 ) }
    dend_49 { pt3dadd( -284.671, -310.059, -115.056, 0.66 ) }
    dend_49 { pt3dadd( -284.687, -310.732, -114.987, 0.37 ) }
    dend_49 { pt3dadd( -284.856, -312.147, -114.826, 0.37 ) }
    dend_49 { pt3dadd( -284.961, -312.686, -114.765, 0.59 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 68/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 59.3233, -133.843, 2.35185, 0.52 ) }
    dend_32 { pt3dadd( 60.3857, -134.239, 2.36752, 0.52 ) }
    dend_32 { pt3dadd( 61.2134, -134.577, 2.41609, 0.52 ) }
    dend_32 { pt3dadd( 62.0171, -134.934, 2.47877, 0.52 ) }
    dend_32 { pt3dadd( 64.1458, -135.916, 2.70721, 0.52 ) }
    dend_32 { pt3dadd( 65.4243, -136.506, 2.86359, 0.52 ) }
    dend_32 { pt3dadd( 66.7361, -137.115, 3.03307, 0.52 ) }
    dend_32 { pt3dadd( 67.7357, -137.607, 3.17176, 0.52 ) }
    dend_32 { pt3dadd( 68.8589, -138.178, 3.33688, 0.52 ) }
    dend_32 { pt3dadd( 69.4965, -138.514, 3.43402, 0.66 ) }
    dend_32 { pt3dadd( 70.0007, -138.793, 3.51085, 0.66 ) }
    dend_32 { pt3dadd( 70.8366, -139.267, 3.61393, 0.66 ) }
    dend_32 { pt3dadd( 71.4828, -139.625, 3.69809, 0.66 ) }
    dend_32 { pt3dadd( 72.4686, -140.132, 3.86873, 0.37 ) }
    dend_32 { pt3dadd( 73.1203, -140.491, 4.01489, 0.37 ) }
    dend_32 { pt3dadd( 73.8625, -140.946, 4.20192, 0.37 ) }
    dend_32 { pt3dadd( 74.7655, -141.521, 4.45927, 0.37 ) }
    dend_32 { pt3dadd( 76.0602, -142.356, 4.88752, 0.37 ) }
    dend_32 { pt3dadd( 77.3117, -143.173, 5.3681, 0.52 ) }
    dend_32 { pt3dadd( 78.325, -143.837, 5.81839, 0.52 ) }
    dend_32 { pt3dadd( 78.9652, -144.267, 6.14065, 0.52 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 59.3233, -133.843, 2.35185, 0.59 ) }
    dend_31 { pt3dadd( 60.1913, -134.643, 2.25589, 0.59 ) }
    dend_31 { pt3dadd( 60.7425, -135.152, 2.19495, 0.59 ) }
    dend_31 { pt3dadd( 61.3959, -135.754, 2.12272, 0.59 ) }
    dend_31 { pt3dadd( 62.5111, -136.782, 1.99943, 0.59 ) }
    dend_31 { pt3dadd( 63.1121, -137.336, 1.93299, 0.59 ) }
    dend_31 { pt3dadd( 63.5152, -137.707, 1.88843, 0.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 96/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.99123, -115.638, -19.3873, 0.88 ) }
    dend_15 { pt3dadd( 3.26028, -116.533, -19.3047, 0.88 ) }
    dend_15 { pt3dadd( 3.50782, -117.388, -19.3381, 0.59 ) }
    dend_15 { pt3dadd( 3.7185, -118.17, -19.3776, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( 3.94204, -118.976, -19.498, 0.66 ) }
    dend_15 { pt3dadd( 4.18889, -119.838, -19.665, 0.88 ) }
    dend_15 { pt3dadd( 4.42085, -120.645, -19.8065, 0.88 ) }
    dend_15 { pt3dadd( 4.7846, -122.0, -20.0479, 0.96 ) }
    dend_15 { pt3dadd( 5.06731, -123.091, -20.2401, 0.88 ) }
    dend_15 { pt3dadd( 5.43234, -124.626, -20.4912, 1.18 ) }
    dend_15 { pt3dadd( 5.60013, -125.437, -20.6069, 0.96 ) }
    dend_15 { pt3dadd( 5.79224, -126.525, -20.7614, 0.96 ) }
    dend_15 { pt3dadd( 5.91115, -127.42, -20.8507, 0.96 ) }
    dend_15 { pt3dadd( 5.9719, -128.209, -20.8925, 0.96 ) }
    dend_15 { pt3dadd( 5.99602, -129.195, -20.9453, 0.96 ) }
    dend_15 { pt3dadd( 5.97276, -130.24, -20.973, 0.96 ) }
    dend_15 { pt3dadd( 5.90158, -131.375, -20.9784, 0.96 ) }
    dend_15 { pt3dadd( 5.80961, -132.461, -20.9718, 0.96 ) }
    dend_15 { pt3dadd( 5.71786, -133.877, -20.9142, 0.96 ) }
    dend_15 { pt3dadd( 5.65417, -135.006, -20.8459, 1.18 ) }
    dend_15 { pt3dadd( 5.64109, -135.306, -20.8228, 1.18 ) }
    dend_15 { pt3dadd( 5.59804, -136.908, -20.6791, 0.66 ) }
    dend_15 { pt3dadd( 5.59227, -137.639, -20.6048, 0.66 ) }
    dend_15 { pt3dadd( 5.60952, -139.47, -20.4964, 0.66 ) }
    dend_15 { pt3dadd( 5.64349, -140.982, -20.4995, 1.11 ) }
    dend_15 { pt3dadd( 5.69724, -142.163, -20.5692, 0.81 ) }
    dend_15 { pt3dadd( 5.77647, -143.369, -20.7072, 0.81 ) }
    dend_15 { pt3dadd( 5.82743, -144.026, -20.8248, 0.81 ) }
    dend_15 { pt3dadd( 5.91184, -145.242, -21.0636, 0.81 ) }
    dend_15 { pt3dadd( 5.95646, -146.309, -21.2895, 0.81 ) }
    dend_15 { pt3dadd( 6.01007, -147.014, -21.4363, 0.81 ) }
    dend_15 { pt3dadd( 6.13396, -147.993, -21.6273, 0.81 ) }
    dend_15 { pt3dadd( 6.32189, -149.009, -21.7899, 0.81 ) }
    dend_15 { pt3dadd( 6.4238, -149.476, -21.8366, 0.52 ) }
    dend_15 { pt3dadd( 6.61384, -150.272, -21.8571, 0.52 ) }
    dend_15 { pt3dadd( 6.82672, -151.14, -21.8571, 0.52 ) }
    dend_15 { pt3dadd( 6.99993, -151.814, -21.8571, 0.81 ) }
    dend_15 { pt3dadd( 7.24707, -152.663, -21.8595, 1.03 ) }
    dend_15 { pt3dadd( 7.57887, -153.778, -21.865, 1.03 ) }
    dend_15 { pt3dadd( 7.89003, -154.888, -21.8696, 0.81 ) }
    dend_15 { pt3dadd( 8.17456, -156.042, -21.8732, 0.81 ) }
    dend_15 { pt3dadd( 8.32756, -156.916, -21.8774, 0.81 ) }
    dend_15 { pt3dadd( 8.4061, -157.535, -21.864, 0.81 ) }
    dend_15 { pt3dadd( 8.46907, -158.491, -21.8207, 0.44 ) }
    dend_15 { pt3dadd( 8.48336, -158.858, -21.7977, 0.44 ) }
    dend_15 { pt3dadd( 8.50379, -159.776, -21.7335, 0.59 ) }
    dend_15 { pt3dadd( 8.50543, -160.783, -21.6293, 0.59 ) }
    dend_15 { pt3dadd( 8.48745, -161.907, -21.4918, 0.66 ) }
    dend_15 { pt3dadd( 8.45268, -163.336, -21.3539, 0.74 ) }
    dend_15 { pt3dadd( 8.44294, -165.105, -21.2568, 0.74 ) }
    dend_15 { pt3dadd( 8.48355, -166.664, -21.2295, 0.96 ) }
    dend_15 { pt3dadd( 8.54187, -167.752, -21.2496, 0.88 ) }
    dend_15 { pt3dadd( 8.61244, -168.509, -21.3027, 1.03 ) }
    dend_15 { pt3dadd( 8.80689, -169.948, -21.4905, 0.96 ) }
    dend_15 { pt3dadd( 9.02725, -171.113, -21.6907, 0.96 ) }
    dend_15 { pt3dadd( 9.2299, -172.021, -21.8838, 0.96 ) }
    dend_15 { pt3dadd( 9.4578, -172.907, -22.0958, 0.96 ) }
    dend_15 { pt3dadd( 9.71217, -173.846, -22.3235, 0.74 ) }
    dend_15 { pt3dadd( 9.87828, -174.431, -22.4331, 0.74 ) }
    dend_15 { pt3dadd( 10.0639, -175.026, -22.4918, 0.52 ) }
    dend_15 { pt3dadd( 10.251, -175.622, -22.5269, 0.52 ) }
    dend_15 { pt3dadd( 10.4257, -176.185, -22.5511, 0.52 ) }
    dend_15 { pt3dadd( 10.6242, -176.858, -22.5652, 0.52 ) }
    dend_15 { pt3dadd( 10.7703, -177.426, -22.5624, 0.52 ) }
    dend_15 { pt3dadd( 10.9638, -178.366, -22.5525, 0.52 ) }
    dend_15 { pt3dadd( 11.068, -178.99, -22.5432, 0.52 ) }
    dend_15 { pt3dadd( 11.2014, -179.888, -22.6173, 0.52 ) }
    dend_15 { pt3dadd( 11.3302, -180.694, -22.745, 0.81 ) }
    dend_15 { pt3dadd( 11.4357, -181.323, -22.8794, 0.81 ) }
    dend_15 { pt3dadd( 11.6139, -182.353, -23.1353, 0.52 ) }
    dend_15 { pt3dadd( 11.7129, -182.893, -23.2805, 0.52 ) }
    dend_15 { pt3dadd( 12.0965, -184.621, -23.7414, 0.81 ) }
    dend_15 { pt3dadd( 12.3207, -185.348, -23.9036, 1.18 ) }
    dend_15 { pt3dadd( 12.6193, -186.159, -24.0676, 0.88 ) }
    dend_15 { pt3dadd( 12.8779, -186.809, -24.183, 0.74 ) }
    dend_15 { pt3dadd( 13.1628, -187.526, -24.2862, 0.59 ) }
    dend_15 { pt3dadd( 13.6298, -188.802, -24.4309, 0.59 ) }
    dend_15 { pt3dadd( 14.3263, -190.934, -24.5818, 0.59 ) }
    dend_15 { pt3dadd( 14.8129, -192.65, -24.6838, 0.59 ) }
    dend_15 { pt3dadd( 15.0127, -193.451, -24.7252, 0.59 ) }
    dend_15 { pt3dadd( 15.2556, -194.656, -24.7779, 0.81 ) }
    dend_15 { pt3dadd( 15.4548, -195.934, -24.8322, 0.81 ) }
    dend_15 { pt3dadd( 15.7447, -198.506, -24.9323, 0.81 ) }
    dend_15 { pt3dadd( 15.8128, -199.681, -24.9676, 0.81 ) }
    dend_15 { pt3dadd( 15.83, -200.111, -24.9714, 0.81 ) }
    dend_15 { pt3dadd( 15.8825, -201.216, -25.0067, 0.66 ) }
    dend_15 { pt3dadd( 15.9573, -202.337, -25.0677, 0.66 ) }
    dend_15 { pt3dadd( 15.9951, -202.763, -25.1007, 0.81 ) }
    dend_15 { pt3dadd( 16.1083, -203.733, -25.2249, 0.74 ) }
    dend_15 { pt3dadd( 16.2408, -204.43, -25.3354, 0.74 ) }
    dend_15 { pt3dadd( 16.5311, -205.593, -25.5115, 0.52 ) }
    dend_15 { pt3dadd( 16.6979, -206.141, -25.5874, 0.52 ) }
    dend_15 { pt3dadd( 16.8876, -206.73, -25.6536, 0.74 ) }
    dend_15 { pt3dadd( 17.0102, -207.244, -25.697, 0.88 ) }
    dend_15 { pt3dadd( 17.1671, -208.157, -25.7493, 1.03 ) }
    dend_15 { pt3dadd( 17.2987, -209.02, -25.7742, 0.74 ) }
    dend_15 { pt3dadd( 17.4048, -209.695, -25.7742, 0.59 ) }
    dend_15 { pt3dadd( 17.5324, -210.462, -25.7559, 0.37 ) }
    dend_15 { pt3dadd( 17.8921, -212.52, -25.631, 0.37 ) }
    dend_15 { pt3dadd( 18.0282, -213.297, -25.5624, 0.37 ) }
    dend_15 { pt3dadd( 18.2404, -214.561, -25.4149, 0.37 ) }
    dend_15 { pt3dadd( 18.398, -215.563, -25.28, 0.37 ) }
    dend_15 { pt3dadd( 18.5429, -216.553, -25.1371, 0.44 ) }
    dend_15 { pt3dadd( 18.6781, -217.5, -24.9976, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_15 { pt3dadd( 18.762, -218.008, -24.9233, 0.74 ) }
    dend_15 { pt3dadd( 19.0241, -219.659, -24.7146, 0.74 ) }
    dend_15 { pt3dadd( 19.2085, -220.824, -24.5961, 0.74 ) }
    dend_15 { pt3dadd( 19.391, -221.784, -24.4968, 0.74 ) }
    dend_15 { pt3dadd( 19.6552, -222.946, -24.3769, 0.74 ) }
    dend_15 { pt3dadd( 19.8892, -223.839, -24.2782, 0.74 ) }
    dend_15 { pt3dadd( 20.3076, -225.235, -24.0808, 0.74 ) }
    dend_15 { pt3dadd( 20.6517, -226.241, -23.9195, 0.74 ) }
    dend_15 { pt3dadd( 21.1797, -227.598, -23.6659, 0.74 ) }
    dend_15 { pt3dadd( 21.579, -228.539, -23.4605, 0.74 ) }
    dend_15 { pt3dadd( 21.9034, -229.273, -23.27, 1.03 ) }
    dend_15 { pt3dadd( 22.2477, -230.084, -23.0229, 1.03 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 12/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.99123, -115.638, -19.3873, 0.88 ) }
    dend_8 { pt3dadd( 1.50112, -116.102, -19.7807, 0.88 ) }
    dend_8 { pt3dadd( 0.298283, -116.624, -20.0958, 0.52 ) }
    dend_8 { pt3dadd( -1.33073, -117.48, -20.4567, 0.52 ) }
    dend_8 { pt3dadd( -2.0763, -117.963, -20.5951, 0.81 ) }
    dend_8 { pt3dadd( -2.65739, -118.373, -20.6962, 0.96 ) }
    dend_8 { pt3dadd( -3.22209, -118.765, -20.8226, 0.81 ) }
    dend_8 { pt3dadd( -3.89157, -119.298, -21.0186, 0.52 ) }
    dend_8 { pt3dadd( -4.42108, -119.745, -21.167, 0.59 ) }
    dend_8 { pt3dadd( -5.1757, -120.398, -21.4055, 0.59 ) }
    dend_8 { pt3dadd( -5.81996, -120.91, -21.5953, 0.74 ) }
    dend_8 { pt3dadd( -7.07658, -121.795, -21.9773, 0.81 ) }
    dend_8 { pt3dadd( -7.66394, -122.167, -22.1678, 0.81 ) }
    dend_8 { pt3dadd( -8.34046, -122.586, -22.3948, 0.52 ) }
    dend_8 { pt3dadd( -9.33217, -123.118, -22.6962, 0.52 ) }
    dend_8 { pt3dadd( -10.0148, -123.464, -22.8693, 1.11 ) }
    dend_8 { pt3dadd( -10.3749, -123.66, -22.9388, 0.96 ) }
    dend_8 { pt3dadd( -11.102, -124.091, -23.0433, 0.44 ) }
    dend_8 { pt3dadd( -11.9021, -124.58, -23.1719, 0.37 ) }
    dend_8 { pt3dadd( -13.6348, -125.661, -23.4508, 0.37 ) }
    dend_8 { pt3dadd( -14.7024, -126.351, -23.6414, 0.37 ) }
    dend_8 { pt3dadd( -15.4778, -126.882, -23.7802, 0.74 ) }
    dend_8 { pt3dadd( -16.2744, -127.43, -23.9139, 0.96 ) }
    dend_8 { pt3dadd( -16.8712, -127.84, -24.0089, 0.96 ) }
    dend_8 { pt3dadd( -17.8775, -128.553, -24.2073, 0.52 ) }
    dend_8 { pt3dadd( -18.598, -129.13, -24.3757, 0.52 ) }
    dend_8 { pt3dadd( -19.3522, -129.672, -24.5532, 0.66 ) }
    dend_8 { pt3dadd( -20.028, -130.133, -24.7222, 0.66 ) }
    dend_8 { pt3dadd( -20.7006, -130.598, -24.8916, 0.52 ) }
    dend_8 { pt3dadd( -21.4637, -131.156, -25.0833, 0.66 ) }
    dend_8 { pt3dadd( -21.9836, -131.557, -25.2223, 0.66 ) }
    dend_8 { pt3dadd( -23.5608, -132.863, -25.7307, 0.81 ) }
    dend_8 { pt3dadd( -24.1918, -133.436, -25.966, 0.59 ) }
    dend_8 { pt3dadd( -24.7085, -133.946, -26.1792, 0.59 ) }
    dend_8 { pt3dadd( -25.1065, -134.333, -26.34, 0.59 ) }
    dend_8 { pt3dadd( -25.517, -134.71, -26.4954, 0.59 ) }
    dend_8 { pt3dadd( -26.3752, -135.507, -26.8414, 0.74 ) }
    dend_8 { pt3dadd( -26.807, -135.976, -27.0518, 0.52 ) }
    dend_8 { pt3dadd( -27.2863, -136.526, -27.2883, 0.52 ) }
    dend_8 { pt3dadd( -27.832, -137.189, -27.5605, 0.37 ) }
    dend_8 { pt3dadd( -28.112, -137.561, -27.7092, 0.37 ) }
    dend_8 { pt3dadd( -28.368, -137.938, -27.8434, 0.37 ) }
    dend_8 { pt3dadd( -28.909, -138.732, -28.0662, 0.59 ) }
    dend_8 { pt3dadd( -29.3916, -139.462, -28.2649, 0.96 ) }
    dend_8 { pt3dadd( -29.6418, -139.84, -28.3581, 1.03 ) }
    dend_8 { pt3dadd( -30.1317, -140.52, -28.5684, 0.88 ) }
    dend_8 { pt3dadd( -30.3399, -140.753, -28.6536, 0.66 ) }
    dend_8 { pt3dadd( -31.0844, -141.42, -28.941, 0.44 ) }
    dend_8 { pt3dadd( -31.5501, -141.769, -29.1031, 0.59 ) }
    dend_8 { pt3dadd( -32.033, -142.117, -29.2983, 0.88 ) }
    dend_8 { pt3dadd( -32.8462, -142.718, -29.6428, 0.52 ) }
    dend_8 { pt3dadd( -33.3903, -143.15, -29.9171, 0.52 ) }
    dend_8 { pt3dadd( -34.3924, -143.972, -30.4885, 0.52 ) }
    dend_8 { pt3dadd( -34.8263, -144.347, -30.7755, 0.88 ) }
    dend_8 { pt3dadd( -35.6712, -145.156, -31.4422, 0.52 ) }
    dend_8 { pt3dadd( -36.1099, -145.631, -31.8342, 0.52 ) }
    dend_8 { pt3dadd( -36.7669, -146.43, -32.4517, 0.52 ) }
    dend_8 { pt3dadd( -37.1392, -146.923, -32.8506, 0.52 ) }
    dend_8 { pt3dadd( -37.562, -147.518, -33.3177, 0.52 ) }
    dend_8 { pt3dadd( -38.1913, -148.427, -33.9809, 0.59 ) }
    dend_8 { pt3dadd( -38.4298, -148.768, -34.2051, 0.59 ) }
    dend_8 { pt3dadd( -38.8212, -149.328, -34.5375, 0.59 ) }
    dend_8 { pt3dadd( -39.2788, -150.011, -34.8618, 0.74 ) }
    dend_8 { pt3dadd( -39.792, -150.867, -35.2732, 0.74 ) }
    dend_8 { pt3dadd( -40.2215, -151.669, -35.6324, 0.52 ) }
    dend_8 { pt3dadd( -40.6284, -152.562, -36.073, 0.66 ) }
    dend_8 { pt3dadd( -40.8067, -153.054, -36.3459, 0.66 ) }
    dend_8 { pt3dadd( -41.0611, -153.894, -36.8448, 0.66 ) }
    dend_8 { pt3dadd( -41.3398, -155.099, -37.6179, 0.52 ) }
    dend_8 { pt3dadd( -41.459, -155.781, -38.0909, 0.52 ) }
    dend_8 { pt3dadd( -41.6168, -157.008, -38.9365, 0.74 ) }
    dend_8 { pt3dadd( -41.6535, -157.28, -39.1166, 0.74 ) }
    dend_8 { pt3dadd( -41.8182, -158.04, -39.6253, 0.74 ) }
    dend_8 { pt3dadd( -42.086, -158.889, -40.1259, 0.74 ) }
    dend_8 { pt3dadd( -42.2949, -159.42, -40.3554, 0.74 ) }
    dend_8 { pt3dadd( -42.4652, -159.827, -40.5183, 0.52 ) }
    dend_8 { pt3dadd( -42.7196, -160.489, -40.7397, 0.52 ) }
    dend_8 { pt3dadd( -43.0964, -161.535, -41.0802, 0.52 ) }
    dend_8 { pt3dadd( -43.4478, -162.549, -41.4011, 0.88 ) }
    dend_8 { pt3dadd( -43.7023, -163.231, -41.5856, 0.88 ) }
    dend_8 { pt3dadd( -44.1236, -164.398, -41.8747, 0.88 ) }
    dend_8 { pt3dadd( -44.3121, -164.896, -41.9683, 1.03 ) }
    dend_8 { pt3dadd( -44.6169, -165.677, -42.0528, 0.52 ) }
    dend_8 { pt3dadd( -44.9601, -166.464, -42.0631, 0.52 ) }
    dend_8 { pt3dadd( -45.3676, -167.25, -42.0305, 0.52 ) }
    dend_8 { pt3dadd( -45.7321, -167.879, -41.9716, 0.66 ) }
    dend_8 { pt3dadd( -46.2781, -168.75, -41.804, 0.88 ) }
    dend_8 { pt3dadd( -46.6757, -169.349, -41.6671, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_8 { pt3dadd( -47.2246, -170.182, -41.4596, 1.03 ) }
    dend_8 { pt3dadd( -47.6007, -170.732, -41.3269, 0.66 ) }
    dend_8 { pt3dadd( -48.1445, -171.483, -41.1953, 0.66 ) }
    dend_8 { pt3dadd( -48.8229, -172.401, -41.086, 0.81 ) }
    dend_8 { pt3dadd( -49.0881, -172.769, -41.071, 0.81 ) }
    dend_8 { pt3dadd( -49.618, -173.571, -41.0736, 0.81 ) }
    dend_8 { pt3dadd( -50.5729, -175.137, -41.1372, 0.66 ) }
    dend_8 { pt3dadd( -51.2244, -176.282, -41.2208, 0.66 ) }
    dend_8 { pt3dadd( -51.8786, -177.512, -41.373, 0.66 ) }
    dend_8 { pt3dadd( -52.2644, -178.294, -41.4835, 0.52 ) }
    dend_8 { pt3dadd( -52.7856, -179.471, -41.6527, 0.52 ) }
    dend_8 { pt3dadd( -53.0988, -180.279, -41.8049, 0.59 ) }
    dend_8 { pt3dadd( -53.3374, -181.027, -41.9831, 0.59 ) }
    dend_8 { pt3dadd( -53.5916, -181.947, -42.2243, 0.81 ) }
    dend_8 { pt3dadd( -53.8728, -182.944, -42.5205, 0.88 ) }
    dend_8 { pt3dadd( -54.1228, -183.697, -42.7539, 1.03 ) }
    dend_8 { pt3dadd( -54.6833, -185.094, -43.2428, 1.11 ) }
    dend_8 { pt3dadd( -55.09, -186.027, -43.5778, 0.81 ) }
    dend_8 { pt3dadd( -55.32, -186.508, -43.7352, 0.81 ) }
    dend_8 { pt3dadd( -55.6072, -187.039, -43.8706, 0.37 ) }
    dend_8 { pt3dadd( -55.9835, -187.667, -44.0179, 0.44 ) }
    dend_8 { pt3dadd( -56.2614, -188.108, -44.0751, 0.81 ) }
    dend_8 { pt3dadd( -56.6446, -188.717, -44.1537, 0.81 ) }
    dend_8 { pt3dadd( -57.0067, -189.303, -44.2634, 0.44 ) }
    dend_8 { pt3dadd( -57.5317, -190.234, -44.4835, 0.44 ) }
    dend_8 { pt3dadd( -57.9737, -191.121, -44.7185, 0.66 ) }
    dend_8 { pt3dadd( -58.3541, -191.901, -44.9378, 1.18 ) }
    dend_8 { pt3dadd( -58.9656, -193.111, -45.3386, 0.52 ) }
    dend_8 { pt3dadd( -59.3279, -193.797, -45.5935, 0.44 ) }
    dend_8 { pt3dadd( -59.5646, -194.221, -45.7631, 0.44 ) }
    dend_8 { pt3dadd( -59.7765, -194.602, -45.9044, 0.44 ) }
    dend_8 { pt3dadd( -60.3938, -195.687, -46.231, 0.44 ) }
    dend_8 { pt3dadd( -60.6262, -196.183, -46.4396, 0.66 ) }
    dend_8 { pt3dadd( -60.8492, -196.825, -46.7352, 0.66 ) }
    dend_8 { pt3dadd( -60.9687, -197.274, -46.966, 0.88 ) }
    dend_8 { pt3dadd( -61.1258, -197.956, -47.3397, 0.88 ) }
    dend_8 { pt3dadd( -61.176, -198.218, -47.4862, 0.88 ) }
    dend_8 { pt3dadd( -61.5333, -200.67, -48.818, 0.66 ) }
    dend_8 { pt3dadd( -61.6346, -201.238, -49.0975, 0.81 ) }
    dend_8 { pt3dadd( -61.8826, -202.354, -49.63, 0.88 ) }
    dend_8 { pt3dadd( -62.0468, -202.943, -49.8764, 0.96 ) }
    dend_8 { pt3dadd( -62.1892, -203.342, -50.0006, 0.96 ) }
    dend_8 { pt3dadd( -62.4545, -203.942, -50.093, 0.44 ) }
    dend_8 { pt3dadd( -62.9631, -204.83, -50.0655, 0.44 ) }
    dend_8 { pt3dadd( -63.2168, -205.24, -50.0424, 0.44 ) }
    dend_8 { pt3dadd( -63.8136, -206.196, -49.9686, 0.44 ) }
    dend_8 { pt3dadd( -64.2217, -206.847, -49.9123, 0.66 ) }
    dend_8 { pt3dadd( -64.8054, -207.772, -49.8456, 0.81 ) }
    dend_8 { pt3dadd( -65.178, -208.31, -49.8166, 0.81 ) }
    dend_8 { pt3dadd( -65.989, -209.35, -49.7775, 0.81 ) }
    dend_8 { pt3dadd( -66.5926, -210.041, -49.7628, 0.66 ) }
    dend_8 { pt3dadd( -67.5388, -211.059, -49.7605, 0.66 ) }
    dend_8 { pt3dadd( -68.955, -212.533, -49.733, 0.66 ) }
    dend_8 { pt3dadd( -69.9706, -213.591, -49.6831, 0.52 ) }
    dend_8 { pt3dadd( -70.9334, -214.611, -49.6089, 0.52 ) }
    dend_8 { pt3dadd( -71.4685, -215.175, -49.5525, 0.52 ) }
    dend_8 { pt3dadd( -72.1419, -215.914, -49.464, 1.92 ) }
    dend_8 { pt3dadd( -73.0852, -217.057, -49.3058, 0.52 ) }
    dend_8 { pt3dadd( -73.4083, -217.52, -49.2695, 0.52 ) }
    dend_8 { pt3dadd( -73.802, -218.222, -49.2656, 0.52 ) }
    dend_8 { pt3dadd( -74.0322, -218.681, -49.2958, 0.59 ) }
    dend_8 { pt3dadd( -74.309, -219.161, -49.3488, 0.44 ) }
    dend_8 { pt3dadd( -74.9112, -220.093, -49.4854, 0.44 ) }
    dend_8 { pt3dadd( -75.6771, -221.264, -49.7398, 0.44 ) }
    dend_8 { pt3dadd( -76.2002, -222.03, -49.9135, 0.59 ) }
    dend_8 { pt3dadd( -76.7779, -222.865, -50.1071, 0.59 ) }
    dend_8 { pt3dadd( -77.7125, -224.195, -50.4107, 0.37 ) }
    dend_8 { pt3dadd( -78.3068, -225.031, -50.5875, 0.37 ) }
    dend_8 { pt3dadd( -78.8517, -225.81, -50.7269, 0.59 ) }
    dend_8 { pt3dadd( -79.2718, -226.404, -50.7753, 0.74 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 70/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 23.4679, -69.1168, -14.9609, 0.07 ) }
    dend_6 { pt3dadd( 25.452, -71.5187, -5.59334, 0.07 ) }
    dend_6 { pt3dadd( 25.5209, -71.5997, -5.34594, 0.52 ) }
    dend_6 { pt3dadd( 25.8831, -72.022, -4.33239, 0.37 ) }
    dend_6 { pt3dadd( 26.3181, -72.5246, -3.35095, 0.37 ) }
    dend_6 { pt3dadd( 26.6502, -72.9052, -2.7315, 0.22 ) }
    dend_6 { pt3dadd( 27.0338, -73.3433, -2.12674, 0.22 ) }
    dend_6 { pt3dadd( 27.8549, -74.2214, -1.92715, 0.44 ) }
    dend_6 { pt3dadd( 28.4936, -74.8985, -1.76968, 0.44 ) }
    dend_6 { pt3dadd( 28.9057, -75.3595, -1.66687, 0.52 ) }
    dend_6 { pt3dadd( 29.2985, -75.8226, -1.56807, 0.52 ) }
    dend_6 { pt3dadd( 29.7467, -76.3514, -1.46725, 0.52 ) }
    dend_6 { pt3dadd( 30.2719, -76.9578, -1.32703, 0.52 ) }
    dend_6 { pt3dadd( 30.9618, -77.7699, -1.11741, 0.52 ) }
    dend_6 { pt3dadd( 31.7235, -78.6695, -0.834087, 0.52 ) }
    dend_6 { pt3dadd( 32.2287, -79.281, -0.609688, 0.52 ) }
    dend_6 { pt3dadd( 32.6407, -79.8332, -0.392218, 0.66 ) }
    dend_6 { pt3dadd( 33.3488, -80.9113, 0.0861483, 0.52 ) }
    dend_6 { pt3dadd( 33.7172, -81.5351, 0.393809, 0.52 ) }
    dend_6 { pt3dadd( 33.8659, -81.7962, 0.537571, 0.52 ) }
    dend_6 { pt3dadd( 34.2407, -82.4354, 0.894504, 0.29 ) }
    dend_6 { pt3dadd( 34.7454, -83.2636, 1.31622, 0.29 ) }
    dend_6 { pt3dadd( 35.1506, -83.9269, 1.65159, 0.29 ) }
    dend_6 { pt3dadd( 35.4747, -84.4671, 1.88651, 0.29 ) }
    dend_6 { pt3dadd( 35.9238, -85.1986, 2.23319, 0.29 ) }
    dend_6 { pt3dadd( 36.4229, -85.9541, 2.63409, 0.29 ) }
    dend_6 { pt3dadd( 36.7601, -86.3945, 2.87411, 0.29 ) }
    dend_6 { pt3dadd( 37.7198, -87.4921, 3.47476, 0.44 ) }
    dend_6 { pt3dadd( 38.4466, -88.2893, 3.87816, 0.44 ) }
    dend_6 { pt3dadd( 39.0067, -88.9008, 4.20648, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_6 { pt3dadd( 39.6312, -89.5829, 4.57747, 0.52 ) }
    dend_6 { pt3dadd( 40.6386, -90.718, 5.18222, 0.52 ) }
    dend_6 { pt3dadd( 41.1406, -91.3006, 5.4622, 0.52 ) }
    dend_6 { pt3dadd( 41.5586, -91.7873, 5.64972, 0.52 ) }
    dend_6 { pt3dadd( 42.1563, -92.5174, 5.88541, 0.66 ) }
    dend_6 { pt3dadd( 42.4039, -92.8516, 5.96205, 0.66 ) }
    dend_6 { pt3dadd( 42.843, -93.5115, 6.07524, 0.37 ) }
    dend_6 { pt3dadd( 43.1992, -94.0694, 6.20463, 0.37 ) }
    dend_6 { pt3dadd( 43.5634, -94.6061, 6.33799, 0.37 ) }
    dend_6 { pt3dadd( 43.8355, -94.9869, 6.42948, 0.37 ) }
    dend_6 { pt3dadd( 44.4401, -95.8561, 6.61208, 0.44 ) }
    dend_6 { pt3dadd( 44.9629, -96.7041, 6.82309, 0.59 ) }
    dend_6 { pt3dadd( 45.6849, -98.0581, 7.1876, 0.59 ) }
    dend_6 { pt3dadd( 46.1301, -99.0865, 7.4637, 0.88 ) }
    dend_6 { pt3dadd( 46.4683, -100.044, 7.70953, 0.74 ) }
    dend_6 { pt3dadd( 46.7344, -100.981, 7.93234, 0.74 ) }
    dend_6 { pt3dadd( 47.0173, -102.501, 8.28688, 0.74 ) }
    dend_6 { pt3dadd( 47.1157, -103.277, 8.46105, 0.74 ) }
    dend_6 { pt3dadd( 47.2177, -104.283, 8.65776, 0.44 ) }
    dend_6 { pt3dadd( 47.3072, -105.114, 8.85708, 0.44 ) }
    dend_6 { pt3dadd( 47.426, -105.824, 9.04905, 0.44 ) }
    dend_6 { pt3dadd( 47.7691, -107.155, 9.41751, 0.59 ) }
    dend_6 { pt3dadd( 48.143, -108.264, 9.71665, 0.59 ) }
    dend_6 { pt3dadd( 48.536, -109.244, 9.99201, 0.59 ) }
    dend_6 { pt3dadd( 48.9992, -110.254, 10.2899, 0.96 ) }
    dend_6 { pt3dadd( 49.4432, -111.125, 10.5404, 0.29 ) }
    dend_6 { pt3dadd( 50.2928, -112.576, 10.9217, 0.29 ) }
    dend_6 { pt3dadd( 50.4761, -112.85, 10.9694, 0.29 ) }
    dend_6 { pt3dadd( 50.8544, -113.393, 11.0588, 0.52 ) }
    dend_6 { pt3dadd( 51.3245, -114.071, 11.1472, 0.22 ) }
    dend_6 { pt3dadd( 51.8233, -114.777, 11.1942, 0.22 ) }
    dend_6 { pt3dadd( 52.1952, -115.31, 11.2241, 0.44 ) }
    dend_6 { pt3dadd( 52.8094, -116.099, 11.2537, 0.66 ) }
    dend_6 { pt3dadd( 53.533, -116.999, 11.3587, 0.66 ) }
    dend_6 { pt3dadd( 54.0926, -117.671, 11.4769, 0.66 ) }
    dend_6 { pt3dadd( 54.7113, -118.377, 11.6334, 0.59 ) }
    dend_6 { pt3dadd( 55.3839, -119.178, 11.8393, 0.59 ) }
    dend_6 { pt3dadd( 56.2267, -120.239, 12.1345, 0.59 ) }
    dend_6 { pt3dadd( 57.1311, -121.431, 12.4627, 0.59 ) }
    dend_6 { pt3dadd( 57.443, -121.844, 12.5482, 0.59 ) }
    dend_6 { pt3dadd( 57.8809, -122.413, 12.6521, 0.44 ) }
    dend_6 { pt3dadd( 58.5009, -123.304, 12.7733, 0.44 ) }
    dend_6 { pt3dadd( 58.8826, -123.873, 12.8217, 0.44 ) }
    dend_6 { pt3dadd( 59.2622, -124.459, 12.837, 0.44 ) }
    dend_6 { pt3dadd( 59.6303, -125.015, 12.8183, 0.44 ) }
    dend_6 { pt3dadd( 60.1605, -125.818, 12.8096, 0.44 ) }
    dend_6 { pt3dadd( 60.6033, -126.471, 12.815, 0.44 ) }
    dend_6 { pt3dadd( 61.346, -127.533, 12.8411, 0.52 ) }
    dend_6 { pt3dadd( 61.7012, -128.053, 12.848, 0.52 ) }
    dend_6 { pt3dadd( 62.669, -129.482, 12.8593, 0.52 ) }
    dend_6 { pt3dadd( 63.4614, -130.63, 12.8543, 0.52 ) }
    dend_6 { pt3dadd( 64.2306, -131.682, 12.8385, 0.52 ) }
    dend_6 { pt3dadd( 64.8938, -132.514, 12.8171, 0.52 ) }
    dend_6 { pt3dadd( 66.4112, -134.289, 12.7198, 0.37 ) }
    dend_6 { pt3dadd( 67.3204, -135.266, 12.6514, 0.37 ) }
    dend_6 { pt3dadd( 68.55, -136.463, 12.5359, 0.37 ) }
    dend_6 { pt3dadd( 69.3787, -137.21, 12.4479, 0.37 ) }
    dend_6 { pt3dadd( 70.2762, -137.981, 12.3441, 0.37 ) }
    dend_6 { pt3dadd( 71.3509, -138.888, 12.2494, 0.37 ) }
    dend_6 { pt3dadd( 72.3293, -139.704, 12.2006, 0.37 ) }
    dend_6 { pt3dadd( 73.13, -140.402, 12.1849, 0.59 ) }
    dend_6 { pt3dadd( 73.6314, -140.858, 12.2036, 0.59 ) }
    dend_6 { pt3dadd( 74.0137, -141.212, 12.2655, 0.88 ) }
    dend_6 { pt3dadd( 75.0066, -142.062, 12.5238, 0.44 ) }
    dend_6 { pt3dadd( 75.6641, -142.558, 12.7633, 0.44 ) }
    dend_6 { pt3dadd( 76.6674, -143.287, 13.1732, 0.44 ) }
    dend_6 { pt3dadd( 77.4181, -143.806, 13.5069, 0.44 ) }
    dend_6 { pt3dadd( 78.8403, -144.731, 14.1462, 0.44 ) }
    dend_6 { pt3dadd( 79.9008, -145.356, 14.6083, 0.44 ) }
    dend_6 { pt3dadd( 81.2712, -146.051, 15.1506, 0.44 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 70/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 23.4679, -69.1168, -14.9609, 1.18 ) }
    dend_5 { pt3dadd( 23.7606, -69.2921, -15.011, 1.18 ) }
    dend_5 { pt3dadd( 24.5783, -69.7768, -15.1261, 1.18 ) }
    dend_5 { pt3dadd( 25.8347, -70.5235, -15.3467, 0.66 ) }
    dend_5 { pt3dadd( 26.3606, -70.8556, -15.4429, 0.66 ) }
    dend_5 { pt3dadd( 27.427, -71.5589, -15.6659, 0.66 ) }
    dend_5 { pt3dadd( 28.7021, -72.4289, -15.9426, 0.66 ) }
    dend_5 { pt3dadd( 29.9444, -73.3024, -16.2164, 0.66 ) }
    dend_5 { pt3dadd( 30.9663, -74.0352, -16.4674, 0.66 ) }
    dend_5 { pt3dadd( 32.101, -74.85, -16.7542, 0.66 ) }
    dend_5 { pt3dadd( 33.1422, -75.5708, -17.0198, 0.74 ) }
    dend_5 { pt3dadd( 34.0202, -76.1534, -17.2435, 0.88 ) }
    dend_5 { pt3dadd( 34.9934, -76.7829, -17.4907, 0.88 ) }
    dend_5 { pt3dadd( 35.9734, -77.3976, -17.7194, 0.66 ) }
    dend_5 { pt3dadd( 36.9052, -77.9485, -17.895, 0.66 ) }
    dend_5 { pt3dadd( 37.6147, -78.3426, -18.0114, 0.66 ) }
    dend_5 { pt3dadd( 38.5904, -78.8879, -18.1301, 0.96 ) }
    dend_5 { pt3dadd( 39.4398, -79.3755, -18.2428, 1.47 ) }
    dend_5 { pt3dadd( 39.9988, -79.7086, -18.34, 1.99 ) }
    dend_5 { pt3dadd( 40.5202, -80.0258, -18.4495, 1.92 ) }
    dend_5 { pt3dadd( 41.2912, -80.4647, -18.6481, 1.25 ) }
    dend_5 { pt3dadd( 42.2187, -80.9362, -18.9047, 1.03 ) }
    dend_5 { pt3dadd( 43.4608, -81.5136, -19.293, 1.03 ) }
    dend_5 { pt3dadd( 44.6847, -82.0529, -19.7057, 0.88 ) }
    dend_5 { pt3dadd( 45.3962, -82.3724, -19.9688, 1.03 ) }
    dend_5 { pt3dadd( 46.3904, -82.8127, -20.3749, 0.74 ) }
    dend_5 { pt3dadd( 47.3788, -83.2483, -20.7971, 0.74 ) }
    dend_5 { pt3dadd( 48.2834, -83.6475, -21.1955, 1.18 ) }
    dend_5 { pt3dadd( 48.978, -83.9435, -21.4794, 1.18 ) }
    dend_5 { pt3dadd( 50.4627, -84.6037, -22.0725, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_5 { pt3dadd( 51.8653, -85.2873, -22.6545, 0.81 ) }
    dend_5 { pt3dadd( 52.3511, -85.5473, -22.8607, 0.81 ) }
    dend_5 { pt3dadd( 53.4664, -86.1645, -23.2649, 0.52 ) }
    dend_5 { pt3dadd( 54.7174, -86.853, -23.6174, 0.52 ) }
    dend_5 { pt3dadd( 56.1242, -87.606, -23.9731, 0.52 ) }
    dend_5 { pt3dadd( 57.1297, -88.1287, -24.1719, 0.59 ) }
    dend_5 { pt3dadd( 57.994, -88.5962, -24.3044, 0.74 ) }
    dend_5 { pt3dadd( 59.436, -89.4007, -24.5544, 1.18 ) }
    dend_5 { pt3dadd( 60.1243, -89.7983, -24.6888, 1.18 ) }
    dend_5 { pt3dadd( 61.4343, -90.5533, -24.9754, 0.66 ) }
    dend_5 { pt3dadd( 62.4765, -91.1066, -25.1979, 0.88 ) }
    dend_5 { pt3dadd( 64.0727, -91.8928, -25.5466, 0.66 ) }
    dend_5 { pt3dadd( 65.6028, -92.6098, -25.8956, 0.96 ) }
    dend_5 { pt3dadd( 66.7329, -93.1327, -26.1874, 1.11 ) }
    dend_5 { pt3dadd( 67.8542, -93.6487, -26.4493, 1.11 ) }
    dend_5 { pt3dadd( 68.9162, -94.1478, -26.6812, 0.88 ) }
    dend_5 { pt3dadd( 69.8518, -94.5949, -26.8888, 0.96 ) }
    dend_5 { pt3dadd( 70.7756, -95.0311, -27.0623, 1.18 ) }
    dend_5 { pt3dadd( 71.9896, -95.6074, -27.2387, 0.88 ) }
    dend_5 { pt3dadd( 73.1077, -96.1426, -27.3853, 0.88 ) }
    dend_5 { pt3dadd( 74.7512, -96.9569, -27.5954, 0.88 ) }
    dend_5 { pt3dadd( 76.3272, -97.7713, -27.7839, 0.74 ) }
    dend_5 { pt3dadd( 78.1541, -98.761, -27.9657, 0.74 ) }
    dend_5 { pt3dadd( 78.701, -99.0741, -28.0056, 0.74 ) }
    dend_5 { pt3dadd( 79.447, -99.5275, -28.0262, 0.74 ) }
    dend_5 { pt3dadd( 80.3987, -100.137, -28.0185, 0.59 ) }
    dend_5 { pt3dadd( 81.2353, -100.706, -27.9711, 0.52 ) }
    dend_5 { pt3dadd( 82.2655, -101.464, -27.9085, 0.52 ) }
    dend_5 { pt3dadd( 82.8257, -101.913, -27.8763, 0.52 ) }
    dend_5 { pt3dadd( 83.8951, -102.795, -27.8089, 0.52 ) }
    dend_5 { pt3dadd( 84.4731, -103.269, -27.7476, 0.52 ) }
    dend_5 { pt3dadd( 85.1789, -103.823, -27.6478, 0.52 ) }
    dend_5 { pt3dadd( 85.604, -104.134, -27.5781, 0.96 ) }
    dend_5 { pt3dadd( 86.1622, -104.517, -27.4811, 1.33 ) }
    dend_5 { pt3dadd( 87.0745, -105.107, -27.2755, 1.62 ) }
    dend_5 { pt3dadd( 88.1127, -105.774, -27.0068, 0.66 ) }
    dend_5 { pt3dadd( 88.4117, -105.969, -26.944, 0.66 ) }
    dend_5 { pt3dadd( 89.2564, -106.515, -26.7198, 0.44 ) }
    dend_5 { pt3dadd( 90.0594, -107.034, -26.4873, 0.44 ) }
    dend_5 { pt3dadd( 91.5593, -108.011, -26.0668, 0.44 ) }
    dend_5 { pt3dadd( 92.0763, -108.358, -25.9343, 0.44 ) }
    dend_5 { pt3dadd( 93.328, -109.237, -25.707, 1.03 ) }
    dend_5 { pt3dadd( 94.8966, -110.428, -25.4925, 0.74 ) }
    dend_5 { pt3dadd( 95.8252, -111.157, -25.4352, 0.74 ) }
    dend_5 { pt3dadd( 96.9486, -112.059, -25.4542, 0.59 ) }
    dend_5 { pt3dadd( 97.8812, -112.846, -25.5523, 0.59 ) }
    dend_5 { pt3dadd( 98.8999, -113.736, -25.6898, 0.96 ) }
    dend_5 { pt3dadd( 99.8, -114.574, -25.8429, 0.96 ) }
    dend_5 { pt3dadd( 100.587, -115.35, -26.0447, 0.52 ) }
    dend_5 { pt3dadd( 101.1, -115.868, -26.1925, 0.52 ) }
    dend_5 { pt3dadd( 101.827, -116.596, -26.4255, 0.52 ) }
    dend_5 { pt3dadd( 102.619, -117.38, -26.681, 0.52 ) }
    dend_5 { pt3dadd( 103.415, -118.14, -26.937, 0.74 ) }
    dend_5 { pt3dadd( 104.198, -118.88, -27.2415, 0.74 ) }
    dend_5 { pt3dadd( 105.158, -119.798, -27.6518, 0.74 ) }
    dend_5 { pt3dadd( 105.921, -120.524, -28.0427, 0.37 ) }
    dend_5 { pt3dadd( 106.926, -121.464, -28.6773, 0.37 ) }
    dend_5 { pt3dadd( 107.423, -121.946, -29.0349, 0.37 ) }
    dend_5 { pt3dadd( 108.109, -122.623, -29.5345, 0.66 ) }
    dend_5 { pt3dadd( 108.577, -123.099, -29.8712, 0.66 ) }
    dend_5 { pt3dadd( 109.187, -123.73, -30.2815, 0.59 ) }
    dend_5 { pt3dadd( 109.996, -124.565, -30.8168, 0.59 ) }
    dend_5 { pt3dadd( 110.806, -125.373, -31.3308, 0.37 ) }
    dend_5 { pt3dadd( 111.759, -126.309, -31.8897, 0.37 ) }
    dend_5 { pt3dadd( 113.137, -127.597, -32.604, 0.37 ) }
    dend_5 { pt3dadd( 113.382, -127.82, -32.7314, 0.37 ) }
    dend_5 { pt3dadd( 113.611, -128.013, -32.846, 0.37 ) }
    dend_5 { pt3dadd( 114.076, -128.382, -33.1069, 0.37 ) }
    dend_5 { pt3dadd( 115.248, -129.269, -33.8476, 0.37 ) }
    dend_5 { pt3dadd( 115.833, -129.721, -34.23, 0.44 ) }
    dend_5 { pt3dadd( 116.76, -130.472, -34.8518, 0.52 ) }
    dend_5 { pt3dadd( 117.954, -131.492, -35.6691, 0.52 ) }
    dend_5 { pt3dadd( 118.983, -132.382, -36.3523, 1.03 ) }
    dend_5 { pt3dadd( 119.451, -132.812, -36.647, 1.47 ) }
    dend_5 { pt3dadd( 120.282, -133.631, -37.1429, 1.92 ) }
    dend_5 { pt3dadd( 121.435, -134.857, -37.8048, 0.59 ) }
    dend_5 { pt3dadd( 122.033, -135.528, -38.1068, 0.44 ) }
    dend_5 { pt3dadd( 122.62, -136.234, -38.3591, 0.44 ) }
    dend_5 { pt3dadd( 123.704, -137.587, -38.7436, 0.44 ) }
    dend_5 { pt3dadd( 124.559, -138.658, -39.0212, 1.33 ) }
    dend_5 { pt3dadd( 124.929, -139.16, -39.1214, 1.47 ) }
    dend_5 { pt3dadd( 125.423, -139.904, -39.1864, 0.37 ) }
    dend_5 { pt3dadd( 126.145, -141.093, -39.2277, 0.37 ) }
    dend_5 { pt3dadd( 126.486, -141.705, -39.2266, 0.37 ) }
    dend_5 { pt3dadd( 126.696, -142.094, -39.2119, 0.37 ) }
    dend_5 { pt3dadd( 127.608, -143.852, -39.1272, 0.37 ) }
    dend_5 { pt3dadd( 128.414, -145.441, -39.0712, 0.37 ) }
    dend_5 { pt3dadd( 128.726, -146.075, -39.0813, 0.59 ) }
    dend_5 { pt3dadd( 129.403, -147.491, -39.1287, 0.59 ) }
    dend_5 { pt3dadd( 129.926, -148.59, -39.1817, 0.59 ) }
    dend_5 { pt3dadd( 130.375, -149.5, -39.2564, 0.59 ) }
    dend_5 { pt3dadd( 130.799, -150.277, -39.3724, 0.88 ) }
    dend_5 { pt3dadd( 131.479, -151.527, -39.6269, 0.88 ) }
    dend_5 { pt3dadd( 132.233, -152.976, -40.0078, 0.59 ) }
    dend_5 { pt3dadd( 132.736, -153.974, -40.3003, 0.59 ) }
    dend_5 { pt3dadd( 133.158, -154.87, -40.5615, 0.59 ) }
    dend_5 { pt3dadd( 133.714, -156.119, -40.898, 1.18 ) }
    dend_5 { pt3dadd( 133.965, -156.728, -41.0563, 1.99 ) }
    dend_5 { pt3dadd( 134.798, -158.967, -41.6008, 0.59 ) }
    dend_5 { pt3dadd( 135.308, -160.515, -41.9952, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_5 { pt3dadd( 135.58, -161.555, -42.1879, 0.96 ) }
    dend_5 { pt3dadd( 135.802, -162.71, -42.3141, 1.33 ) }
    dend_5 { pt3dadd( 135.986, -164.044, -42.2917, 0.37 ) }
    dend_5 { pt3dadd( 136.074, -164.716, -42.1883, 0.37 ) }
    dend_5 { pt3dadd( 136.214, -165.818, -41.8103, 0.37 ) }
    dend_5 { pt3dadd( 136.435, -167.355, -41.1472, 0.81 ) }
    dend_5 { pt3dadd( 136.556, -167.979, -40.8185, 0.81 ) }
    dend_5 { pt3dadd( 136.998, -169.695, -39.8011, 0.81 ) }
    dend_5 { pt3dadd( 137.426, -171.095, -38.939, 0.44 ) }
    dend_5 { pt3dadd( 137.943, -172.533, -38.0626, 0.44 ) }
    dend_5 { pt3dadd( 138.378, -173.618, -37.4186, 0.44 ) }
    dend_5 { pt3dadd( 138.98, -175.022, -36.6589, 0.59 ) }
    dend_5 { pt3dadd( 139.282, -175.769, -36.3023, 0.59 ) }
    dend_5 { pt3dadd( 139.705, -176.933, -35.8315, 0.59 ) }
    dend_5 { pt3dadd( 139.935, -177.668, -35.5625, 0.74 ) }
    dend_5 { pt3dadd( 140.041, -178.06, -35.4089, 0.74 ) }
    dend_5 { pt3dadd( 140.171, -178.542, -35.2059, 0.37 ) }
    dend_5 { pt3dadd( 140.438, -179.598, -34.7866, 0.37 ) }
    dend_5 { pt3dadd( 140.736, -180.684, -34.3009, 0.37 ) }
    dend_5 { pt3dadd( 141.123, -181.813, -33.7615, 0.37 ) }
    dend_5 { pt3dadd( 141.62, -183.099, -33.1085, 0.37 ) }
    dend_5 { pt3dadd( 142.127, -184.276, -32.5049, 0.37 ) }
    dend_5 { pt3dadd( 142.611, -185.382, -31.968, 0.37 ) }
    dend_5 { pt3dadd( 143.122, -186.498, -31.4742, 0.96 ) }
    dend_5 { pt3dadd( 143.436, -187.249, -31.1618, 0.96 ) }
    dend_5 { pt3dadd( 143.751, -188.02, -30.8549, 0.96 ) }
    dend_5 { pt3dadd( 144.143, -188.933, -30.5032, 0.44 ) }
    dend_5 { pt3dadd( 144.614, -190.079, -30.0342, 0.44 ) }
    dend_5 { pt3dadd( 145.214, -191.571, -29.4215, 0.44 ) }
    dend_5 { pt3dadd( 145.984, -193.525, -28.6575, 0.44 ) }
    dend_5 { pt3dadd( 146.611, -195.136, -28.0474, 0.44 ) }
    dend_5 { pt3dadd( 147.39, -197.172, -27.3383, 0.44 ) }
    dend_5 { pt3dadd( 147.739, -198.067, -27.0334, 0.44 ) }
    dend_5 { pt3dadd( 147.915, -198.491, -26.9017, 0.44 ) }
    dend_5 { pt3dadd( 148.238, -199.332, -26.6956, 0.44 ) }
    dend_5 { pt3dadd( 148.568, -200.292, -26.5651, 0.44 ) }
    dend_5 { pt3dadd( 148.915, -201.551, -26.4491, 0.44 ) }
    dend_5 { pt3dadd( 149.017, -202.03, -26.4279, 0.44 ) }
    dend_5 { pt3dadd( 149.274, -203.361, -26.3812, 0.44 ) }
    dend_5 { pt3dadd( 149.41, -204.18, -26.3521, 0.44 ) }
    dend_5 { pt3dadd( 149.759, -206.403, -26.2726, 0.44 ) }
    dend_5 { pt3dadd( 150.154, -208.496, -26.21, 0.44 ) }
    dend_5 { pt3dadd( 150.392, -209.583, -26.184, 0.44 ) }
    dend_5 { pt3dadd( 150.731, -211.014, -26.1582, 0.44 ) }
    dend_5 { pt3dadd( 151.076, -212.362, -26.1419, 0.66 ) }
    dend_5 { pt3dadd( 151.617, -214.201, -26.1484, 0.15 ) }
    dend_5 { pt3dadd( 152.132, -215.702, -26.1967, 0.29 ) }
    dend_5 { pt3dadd( 152.659, -217.105, -26.33, 0.29 ) }
    dend_5 { pt3dadd( 152.98, -217.864, -26.4329, 0.29 ) }
    dend_5 { pt3dadd( 153.292, -218.58, -26.5563, 0.44 ) }
    dend_5 { pt3dadd( 153.727, -219.618, -26.7766, 0.44 ) }
    dend_5 { pt3dadd( 154.29, -221.077, -27.1247, 0.44 ) }
    dend_5 { pt3dadd( 154.834, -222.612, -27.5028, 0.44 ) }
    dend_5 { pt3dadd( 155.2, -223.576, -27.7579, 0.44 ) }
    dend_5 { pt3dadd( 155.497, -224.283, -27.9145, 0.44 ) }
    dend_5 { pt3dadd( 156.178, -225.756, -28.166, 0.59 ) }
    dend_5 { pt3dadd( 156.647, -226.673, -28.2475, 0.59 ) }
    dend_5 { pt3dadd( 156.938, -227.224, -28.2479, 0.59 ) }
    dend_5 { pt3dadd( 157.672, -228.601, -28.1727, 0.59 ) }
    dend_5 { pt3dadd( 158.538, -230.293, -28.0593, 0.37 ) }
    dend_5 { pt3dadd( 159.102, -231.325, -28.0276, 0.37 ) }
    dend_5 { pt3dadd( 159.564, -232.112, -28.0295, 0.74 ) }
    dend_5 { pt3dadd( 160.208, -233.186, -28.0875, 0.74 ) }
    dend_5 { pt3dadd( 160.771, -234.169, -28.1929, 0.44 ) }
    dend_5 { pt3dadd( 161.073, -234.749, -28.2893, 0.44 ) }
    dend_5 { pt3dadd( 161.866, -236.228, -28.6531, 0.59 ) }
    dend_5 { pt3dadd( 162.424, -237.23, -28.9018, 0.59 ) }
    dend_5 { pt3dadd( 162.61, -237.538, -28.9747, 0.59 ) }
    dend_5 { pt3dadd( 163.217, -238.368, -29.1338, 0.37 ) }
    dend_5 { pt3dadd( 163.935, -239.213, -29.2384, 0.37 ) }
    dend_5 { pt3dadd( 165.156, -240.502, -29.431, 0.37 ) }
    dend_5 { pt3dadd( 165.859, -241.198, -29.5312, 0.37 ) }
    dend_5 { pt3dadd( 166.628, -241.906, -29.6789, 0.37 ) }
    dend_5 { pt3dadd( 167.461, -242.625, -29.8909, 0.37 ) }
    dend_5 { pt3dadd( 168.299, -243.281, -30.1362, 0.37 ) }
    dend_5 { pt3dadd( 169.793, -244.432, -30.6204, 0.44 ) }
    dend_5 { pt3dadd( 170.461, -244.994, -30.8596, 0.59 ) }
    dend_5 { pt3dadd( 171.384, -245.839, -31.2055, 0.59 ) }
    dend_5 { pt3dadd( 172.129, -246.651, -31.5095, 0.59 ) }
    dend_5 { pt3dadd( 172.843, -247.564, -31.8025, 0.52 ) }
    dend_5 { pt3dadd( 173.509, -248.601, -32.059, 0.52 ) }
    dend_5 { pt3dadd( 174.058, -249.619, -32.2201, 0.52 ) }
    dend_5 { pt3dadd( 174.242, -250.029, -32.2744, 0.52 ) }
    dend_5 { pt3dadd( 174.739, -251.258, -32.4944, 0.52 ) }
    dend_5 { pt3dadd( 175.119, -252.221, -32.7029, 0.52 ) }
    dend_5 { pt3dadd( 175.578, -253.389, -33.0173, 0.52 ) }
    dend_5 { pt3dadd( 175.904, -254.186, -33.2645, 0.52 ) }
    dend_5 { pt3dadd( 176.088, -254.625, -33.4263, 0.52 ) }
    dend_5 { pt3dadd( 176.779, -256.455, -34.148, 0.52 ) }
    dend_5 { pt3dadd( 177.314, -258.219, -34.945, 0.52 ) }
    dend_5 { pt3dadd( 177.456, -259.006, -35.3194, 0.52 ) }
    dend_5 { pt3dadd( 177.493, -259.47, -35.555, 0.52 ) }
    dend_5 { pt3dadd( 177.458, -260.429, -35.9609, 0.52 ) }
    dend_5 { pt3dadd( 177.329, -261.457, -36.2592, 0.52 ) }
    dend_5 { pt3dadd( 177.103, -262.607, -36.4278, 0.37 ) }
    dend_5 { pt3dadd( 176.794, -263.912, -36.5749, 0.37 ) }
    dend_5 { pt3dadd( 176.524, -265.196, -36.6594, 0.59 ) }
    dend_5 { pt3dadd( 176.206, -267.104, -36.6894, 0.59 ) }
    dend_5 { pt3dadd( 176.026, -268.589, -36.6318, 0.59 ) }
    dend_5 { pt3dadd( 175.955, -269.607, -36.5391, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_5 { pt3dadd( 175.92, -270.36, -36.4295, 0.29 ) }
    dend_5 { pt3dadd( 175.891, -271.48, -36.2979, 0.29 ) }
    dend_5 { pt3dadd( 175.871, -272.53, -36.2205, 0.29 ) }
    dend_5 { pt3dadd( 175.864, -273.122, -36.22, 0.52 ) }
    dend_5 { pt3dadd( 175.859, -273.843, -36.2044, 0.52 ) }
    dend_5 { pt3dadd( 175.899, -274.557, -36.1395, 0.52 ) }
    dend_5 { pt3dadd( 176.051, -275.689, -35.915, 0.52 ) }
    dend_5 { pt3dadd( 176.252, -276.697, -35.656, 0.52 ) }
    dend_5 { pt3dadd( 176.444, -277.477, -35.4356, 0.52 ) }
    dend_5 { pt3dadd( 176.826, -278.839, -35.0433, 0.52 ) }
    dend_5 { pt3dadd( 177.39, -280.612, -34.5698, 0.52 ) }
    dend_5 { pt3dadd( 177.926, -282.104, -34.1666, 0.52 ) }
    dend_5 { pt3dadd( 178.158, -282.682, -34.0113, 0.52 ) }
    dend_5 { pt3dadd( 178.424, -283.299, -33.8693, 0.52 ) }
    dend_5 { pt3dadd( 178.756, -284.057, -33.7838, 0.52 ) }
    dend_5 { pt3dadd( 179.211, -285.061, -33.8255, 0.52 ) }
    dend_5 { pt3dadd( 179.592, -285.898, -33.9843, 0.52 ) }
    dend_5 { pt3dadd( 180.05, -286.845, -34.2464, 0.52 ) }
    dend_5 { pt3dadd( 180.861, -288.408, -34.7848, 0.52 ) }
    dend_5 { pt3dadd( 181.663, -289.848, -35.3516, 0.52 ) }
    dend_5 { pt3dadd( 182.368, -291.122, -35.8886, 0.52 ) }
    dend_5 { pt3dadd( 182.773, -291.869, -36.2364, 0.52 ) }
    dend_5 { pt3dadd( 182.998, -292.292, -36.4457, 0.52 ) }
    dend_5 { pt3dadd( 183.658, -293.576, -37.0671, 0.52 ) }
    dend_5 { pt3dadd( 184.025, -294.286, -37.3921, 0.52 ) }
    dend_5 { pt3dadd( 184.586, -295.38, -37.7636, 0.52 ) }
    dend_5 { pt3dadd( 185.206, -296.637, -38.0915, 0.52 ) }
    dend_5 { pt3dadd( 185.565, -297.493, -38.286, 0.52 ) }
    dend_5 { pt3dadd( 185.878, -298.395, -38.4697, 0.52 ) }
    dend_5 { pt3dadd( 185.984, -298.751, -38.5366, 0.74 ) }
    dend_5 { pt3dadd( 186.155, -299.368, -38.6642, 0.74 ) }
    dend_5 { pt3dadd( 186.334, -300.008, -38.8124, 0.74 ) }
    dend_5 { pt3dadd( 186.797, -301.817, -39.2247, 0.37 ) }
    dend_5 { pt3dadd( 187.073, -302.97, -39.5571, 0.44 ) }
    dend_5 { pt3dadd( 187.293, -303.923, -39.8546, 0.44 ) }
    dend_5 { pt3dadd( 187.413, -304.419, -39.9755, 0.66 ) }
    dend_5 { pt3dadd( 187.622, -305.275, -40.1307, 0.66 ) }
    dend_5 { pt3dadd( 187.893, -306.43, -40.2815, 0.66 ) }
    dend_5 { pt3dadd( 188.234, -307.901, -40.3808, 0.44 ) }
    dend_5 { pt3dadd( 188.505, -309.397, -40.3835, 0.44 ) }
    dend_5 { pt3dadd( 188.756, -311.362, -40.2955, 0.44 ) }
    dend_5 { pt3dadd( 188.834, -312.27, -40.2605, 0.52 ) }
    dend_5 { pt3dadd( 188.823, -313.205, -40.2375, 0.59 ) }
    dend_5 { pt3dadd( 188.721, -313.99, -40.2387, 0.59 ) }
    dend_5 { pt3dadd( 188.556, -314.734, -40.2872, 0.59 ) }
    dend_5 { pt3dadd( 188.219, -315.946, -40.5268, 0.59 ) }
    dend_5 { pt3dadd( 187.872, -317.155, -40.8897, 0.59 ) }
    dend_5 { pt3dadd( 187.419, -318.905, -41.5496, 0.59 ) }
    dend_5 { pt3dadd( 187.262, -319.67, -41.8661, 0.59 ) }
    dend_5 { pt3dadd( 187.087, -321.26, -42.566, 0.59 ) }
    dend_5 { pt3dadd( 187.058, -322.382, -43.08, 0.59 ) }
    dend_5 { pt3dadd( 187.112, -323.189, -43.4341, 0.59 ) }
    dend_5 { pt3dadd( 187.417, -324.714, -44.017, 0.44 ) }
    dend_5 { pt3dadd( 187.852, -325.913, -44.4164, 0.44 ) }
    dend_5 { pt3dadd( 188.562, -327.422, -44.8103, 0.44 ) }
    dend_5 { pt3dadd( 188.775, -327.803, -44.8696, 0.74 ) }
    dend_5 { pt3dadd( 189.281, -328.597, -44.9299, 0.74 ) }
    dend_5 { pt3dadd( 189.886, -329.481, -44.9369, 0.74 ) }
    dend_5 { pt3dadd( 190.397, -330.217, -44.886, 0.52 ) }
    dend_5 { pt3dadd( 191.018, -331.14, -44.8141, 0.44 ) }
    dend_5 { pt3dadd( 191.639, -332.194, -44.7332, 0.44 ) }
    dend_5 { pt3dadd( 192.002, -332.853, -44.7018, 0.44 ) }
    dend_5 { pt3dadd( 192.467, -333.789, -44.6868, 0.44 ) }
    dend_5 { pt3dadd( 192.809, -334.572, -44.6897, 0.74 ) }
    dend_5 { pt3dadd( 193.031, -335.187, -44.7035, 0.37 ) }
    dend_5 { pt3dadd( 193.361, -336.365, -44.7279, 0.37 ) }
    dend_5 { pt3dadd( 193.57, -337.311, -44.7631, 0.37 ) }
    dend_5 { pt3dadd( 193.685, -337.866, -44.7911, 0.37 ) }
    dend_5 { pt3dadd( 193.913, -338.885, -44.8835, 0.37 ) }
    dend_5 { pt3dadd( 194.265, -340.222, -45.0276, 0.37 ) }
    dend_5 { pt3dadd( 194.523, -341.093, -45.1276, 0.37 ) }
    dend_5 { pt3dadd( 194.868, -342.138, -45.2816, 0.37 ) }
    dend_5 { pt3dadd( 195.14, -342.999, -45.4163, 0.37 ) }
    dend_5 { pt3dadd( 195.352, -343.758, -45.5485, 0.37 ) }
    dend_5 { pt3dadd( 195.525, -344.541, -45.7148, 0.37 ) }
    dend_5 { pt3dadd( 195.803, -345.73, -45.9875, 0.37 ) }
    dend_5 { pt3dadd( 196.182, -347.457, -46.4057, 0.37 ) }
    dend_5 { pt3dadd( 196.394, -348.647, -46.6809, 0.37 ) }
    dend_5 { pt3dadd( 196.5, -349.462, -46.8636, 0.37 ) }
    dend_5 { pt3dadd( 196.651, -351.093, -47.1948, 0.37 ) }
    dend_5 { pt3dadd( 196.744, -353.09, -47.622, 0.37 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 81/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -24.9234, 46.6409, 2.56814, 1.4 ) }
    dend_71 { pt3dadd( -25.8434, 47.0509, 2.56814, 1.4 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 78.9652, -144.267, 6.14065, 0.44 ) }
    dend_34 { pt3dadd( 79.6678, -145.302, 6.24409, 0.44 ) }
    dend_34 { pt3dadd( 80.3774, -146.257, 6.32493, 0.44 ) }
    dend_34 { pt3dadd( 81.0113, -147.062, 6.38208, 0.44 ) }
    dend_34 { pt3dadd( 81.8187, -148.081, 6.44064, 0.44 ) }
    dend_34 { pt3dadd( 82.5829, -148.993, 6.48451, 0.44 ) }
    dend_34 { pt3dadd( 83.12, -149.592, 6.5094, 0.44 ) }
    dend_34 { pt3dadd( 83.7406, -150.215, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 84.5107, -150.949, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 85.5298, -151.864, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 86.5401, -152.706, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 87.4153, -153.41, 6.51138, 0.44 ) }
    dend_34 { pt3dadd( 87.718, -153.657, 6.51138, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 96/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 78.9652, -144.267, 6.14065, 0.59 ) }
    dend_33 { pt3dadd( 80.0393, -145.91, 6.34818, 0.59 ) }
    dend_33 { pt3dadd( 80.4301, -146.529, 6.48188, 0.59 ) }
    dend_33 { pt3dadd( 81.0, -147.454, 6.70595, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_33 { pt3dadd( 81.3856, -148.064, 6.85744, 0.59 ) }
    dend_33 { pt3dadd( 82.0056, -149.083, 7.10406, 0.44 ) }
    dend_33 { pt3dadd( 82.4648, -149.87, 7.28544, 0.44 ) }
    dend_33 { pt3dadd( 83.1983, -151.305, 7.57259, 0.44 ) }
    dend_33 { pt3dadd( 83.4764, -151.868, 7.69916, 0.44 ) }
    dend_33 { pt3dadd( 83.8109, -152.527, 7.86742, 0.44 ) }
    dend_33 { pt3dadd( 84.1205, -153.095, 8.03007, 0.44 ) }
    dend_33 { pt3dadd( 84.4575, -153.651, 8.21037, 0.44 ) }
    dend_33 { pt3dadd( 85.3676, -155.161, 8.6585, 0.44 ) }
    dend_33 { pt3dadd( 85.5414, -155.492, 8.7174, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 10/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 22.2477, -230.084, -23.0229, 0.37 ) }
    dend_17 { pt3dadd( 22.1093, -231.126, -23.192, 0.37 ) }
    dend_17 { pt3dadd( 22.0753, -231.749, -23.2789, 0.52 ) }
    dend_17 { pt3dadd( 22.0668, -232.778, -23.4068, 0.52 ) }
    dend_17 { pt3dadd( 22.0718, -233.853, -23.5245, 0.52 ) }
    dend_17 { pt3dadd( 22.0562, -234.725, -23.5946, 0.52 ) }
    dend_17 { pt3dadd( 22.0033, -235.718, -23.6553, 0.52 ) }
    dend_17 { pt3dadd( 21.9563, -236.584, -23.6783, 0.52 ) }
    dend_17 { pt3dadd( 21.9153, -237.096, -23.6803, 0.52 ) }
    dend_17 { pt3dadd( 21.8421, -237.92, -23.6854, 0.66 ) }
    dend_17 { pt3dadd( 21.7382, -238.915, -23.7217, 0.66 ) }
    dend_17 { pt3dadd( 21.6407, -239.657, -23.7827, 0.66 ) }
    dend_17 { pt3dadd( 21.5081, -240.454, -23.8777, 0.52 ) }
    dend_17 { pt3dadd( 21.3484, -241.228, -23.9929, 0.52 ) }
    dend_17 { pt3dadd( 21.0888, -242.309, -24.2212, 0.52 ) }
    dend_17 { pt3dadd( 20.8177, -243.484, -24.5083, 0.52 ) }
    dend_17 { pt3dadd( 20.7217, -243.996, -24.6368, 0.52 ) }
    dend_17 { pt3dadd( 20.6034, -244.769, -24.8159, 0.52 ) }
    dend_17 { pt3dadd( 20.5198, -245.39, -24.9503, 0.52 ) }
    dend_17 { pt3dadd( 20.3953, -246.734, -25.1899, 0.52 ) }
    dend_17 { pt3dadd( 20.3335, -248.087, -25.4026, 0.52 ) }
    dend_17 { pt3dadd( 20.341, -249.476, -25.6434, 0.52 ) }
    dend_17 { pt3dadd( 20.3826, -250.285, -25.813, 0.52 ) }
    dend_17 { pt3dadd( 20.4924, -251.429, -26.0764, 0.59 ) }
    dend_17 { pt3dadd( 20.7011, -253.131, -26.487, 0.59 ) }
    dend_17 { pt3dadd( 20.8421, -254.279, -26.7664, 0.74 ) }
    dend_17 { pt3dadd( 20.9152, -254.997, -26.9604, 0.96 ) }
    dend_17 { pt3dadd( 20.9575, -255.696, -27.1525, 0.96 ) }
    dend_17 { pt3dadd( 20.9768, -256.854, -27.469, 0.59 ) }
    dend_17 { pt3dadd( 20.9345, -257.894, -27.722, 0.37 ) }
    dend_17 { pt3dadd( 20.8471, -258.692, -27.8522, 0.37 ) }
    dend_17 { pt3dadd( 20.7057, -259.567, -27.9187, 0.37 ) }
    dend_17 { pt3dadd( 20.5843, -260.22, -27.9312, 0.37 ) }
    dend_17 { pt3dadd( 20.3054, -261.728, -27.9109, 0.37 ) }
    dend_17 { pt3dadd( 20.0252, -263.133, -27.8748, 0.52 ) }
    dend_17 { pt3dadd( 19.6996, -264.712, -27.8065, 0.81 ) }
    dend_17 { pt3dadd( 19.3924, -266.174, -27.7236, 0.81 ) }
    dend_17 { pt3dadd( 19.2545, -266.779, -27.6768, 1.11 ) }
    dend_17 { pt3dadd( 19.0766, -267.614, -27.5829, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 49/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 22.2477, -230.084, -23.0229, 0.81 ) }
    dend_16 { pt3dadd( 23.0438, -230.293, -22.7976, 0.81 ) }
    dend_16 { pt3dadd( 23.6633, -230.454, -22.6286, 0.81 ) }
    dend_16 { pt3dadd( 25.4903, -230.903, -21.9973, 0.81 ) }
    dend_16 { pt3dadd( 26.6993, -231.202, -21.5251, 0.52 ) }
    dend_16 { pt3dadd( 27.8357, -231.489, -21.0697, 0.44 ) }
    dend_16 { pt3dadd( 29.2342, -231.85, -20.5072, 0.44 ) }
    dend_16 { pt3dadd( 29.955, -232.038, -20.2023, 0.44 ) }
    dend_16 { pt3dadd( 31.6318, -232.508, -19.4331, 0.44 ) }
    dend_16 { pt3dadd( 32.8846, -232.901, -18.7989, 0.44 ) }
    dend_16 { pt3dadd( 33.5911, -233.134, -18.4338, 0.44 ) }
    dend_16 { pt3dadd( 33.8993, -233.249, -18.2792, 0.44 ) }
    dend_16 { pt3dadd( 34.813, -233.643, -17.771, 0.37 ) }
    dend_16 { pt3dadd( 36.0062, -234.192, -17.1039, 0.37 ) }
    dend_16 { pt3dadd( 36.9692, -234.661, -16.601, 0.37 ) }
    dend_16 { pt3dadd( 38.1346, -235.222, -15.9573, 0.37 ) }
    dend_16 { pt3dadd( 38.983, -235.647, -15.4833, 0.37 ) }
    dend_16 { pt3dadd( 40.2204, -236.296, -14.7788, 0.37 ) }
    dend_16 { pt3dadd( 40.7548, -236.577, -14.487, 0.37 ) }
    dend_16 { pt3dadd( 41.3777, -236.914, -14.1691, 0.37 ) }
    dend_16 { pt3dadd( 42.3407, -237.444, -13.6953, 0.37 ) }
    dend_16 { pt3dadd( 43.4312, -238.06, -13.1705, 0.37 ) }
    dend_16 { pt3dadd( 44.9231, -238.885, -12.4554, 0.37 ) }
    dend_16 { pt3dadd( 45.7324, -239.343, -12.1071, 0.37 ) }
    dend_16 { pt3dadd( 46.4687, -239.781, -11.7733, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 74/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -79.2718, -226.404, -50.7753, 0.66 ) }
    dend_10 { pt3dadd( -79.9688, -226.869, -50.8713, 0.66 ) }
    dend_10 { pt3dadd( -80.8215, -227.508, -51.0209, 0.66 ) }
    dend_10 { pt3dadd( -81.5204, -228.076, -51.1081, 0.66 ) }
    dend_10 { pt3dadd( -82.1657, -228.682, -51.1698, 1.03 ) }
    dend_10 { pt3dadd( -82.6573, -229.211, -51.2129, 1.11 ) }
    dend_10 { pt3dadd( -83.1821, -229.832, -51.2555, 0.81 ) }
    dend_10 { pt3dadd( -83.7503, -230.6, -51.277, 0.44 ) }
    dend_10 { pt3dadd( -84.2238, -231.381, -51.2922, 0.44 ) }
    dend_10 { pt3dadd( -84.6412, -232.229, -51.3064, 0.44 ) }
    dend_10 { pt3dadd( -84.9789, -233.142, -51.3166, 0.88 ) }
    dend_10 { pt3dadd( -85.1268, -233.7, -51.3022, 0.59 ) }
    dend_10 { pt3dadd( -85.2796, -234.455, -51.2698, 0.44 ) }
    dend_10 { pt3dadd( -85.3917, -235.124, -51.2333, 0.44 ) }
    dend_10 { pt3dadd( -85.4779, -235.753, -51.2066, 0.29 ) }
    dend_10 { pt3dadd( -85.596, -236.641, -51.1431, 0.29 ) }
    dend_10 { pt3dadd( -85.7558, -238.092, -51.0096, 0.37 ) }
    dend_10 { pt3dadd( -85.8523, -239.047, -50.9505, 0.22 ) }
    dend_10 { pt3dadd( -85.9371, -239.796, -50.9226, 0.37 ) }
    dend_10 { pt3dadd( -86.1086, -240.895, -50.9197, 0.52 ) }
    dend_10 { pt3dadd( -86.304, -241.822, -50.947, 0.22 ) }
    dend_10 { pt3dadd( -86.5191, -242.591, -51.0026, 0.37 ) }
    dend_10 { pt3dadd( -86.9134, -243.727, -51.15, 0.74 ) }
    dend_10 { pt3dadd( -87.2151, -244.45, -51.2607, 0.59 ) }
    dend_10 { pt3dadd( -87.5286, -245.046, -51.3643, 0.66 ) }
    dend_10 { pt3dadd( -87.8581, -245.536, -51.4694, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( -88.1244, -245.854, -51.5452, 0.37 ) }
    dend_10 { pt3dadd( -88.7199, -246.419, -51.6669, 0.37 ) }
    dend_10 { pt3dadd( -89.2857, -246.872, -51.7345, 0.81 ) }
    dend_10 { pt3dadd( -89.704, -247.187, -51.7778, 0.59 ) }
    dend_10 { pt3dadd( -90.125, -247.509, -51.8373, 0.29 ) }
    dend_10 { pt3dadd( -90.6022, -247.915, -51.9299, 0.29 ) }
    dend_10 { pt3dadd( -91.1284, -248.401, -52.0584, 0.29 ) }
    dend_10 { pt3dadd( -91.6562, -248.932, -52.1787, 0.29 ) }
    dend_10 { pt3dadd( -91.9662, -249.252, -52.239, 0.66 ) }
    dend_10 { pt3dadd( -92.6639, -249.966, -52.3422, 0.81 ) }
    dend_10 { pt3dadd( -93.4503, -250.745, -52.4202, 0.81 ) }
    dend_10 { pt3dadd( -94.0525, -251.323, -52.4629, 0.44 ) }
    dend_10 { pt3dadd( -94.7201, -251.938, -52.4884, 0.37 ) }
    dend_10 { pt3dadd( -95.2265, -252.392, -52.4871, 0.37 ) }
    dend_10 { pt3dadd( -95.7412, -252.85, -52.4616, 0.59 ) }
    dend_10 { pt3dadd( -96.0993, -253.185, -52.421, 0.52 ) }
    dend_10 { pt3dadd( -96.5244, -253.598, -52.3788, 0.29 ) }
    dend_10 { pt3dadd( -96.7611, -253.862, -52.3616, 0.59 ) }
    dend_10 { pt3dadd( -97.3639, -254.655, -52.3547, 0.81 ) }
    dend_10 { pt3dadd( -97.6626, -255.112, -52.3527, 0.29 ) }
    dend_10 { pt3dadd( -98.0231, -255.744, -52.3264, 0.29 ) }
    dend_10 { pt3dadd( -98.3684, -256.422, -52.2774, 0.29 ) }
    dend_10 { pt3dadd( -98.7241, -257.156, -52.2058, 0.29 ) }
    dend_10 { pt3dadd( -98.8627, -257.444, -52.1729, 0.74 ) }
    dend_10 { pt3dadd( -99.0481, -257.839, -52.1212, 0.74 ) }
    dend_10 { pt3dadd( -99.3909, -258.638, -52.037, 0.29 ) }
    dend_10 { pt3dadd( -99.581, -259.206, -51.995, 0.44 ) }
    dend_10 { pt3dadd( -99.7664, -259.92, -51.9626, 0.81 ) }
    dend_10 { pt3dadd( -99.9616, -260.76, -51.946, 0.96 ) }
    dend_10 { pt3dadd( -100.021, -261.013, -51.9539, 0.96 ) }
    dend_10 { pt3dadd( -100.212, -262.067, -52.0228, 0.37 ) }
    dend_10 { pt3dadd( -100.364, -263.188, -52.1835, 0.37 ) }
    dend_10 { pt3dadd( -100.423, -263.846, -52.2995, 0.52 ) }
    dend_10 { pt3dadd( -100.465, -264.662, -52.459, 0.52 ) }
    dend_10 { pt3dadd( -100.532, -266.453, -52.8251, 0.37 ) }
    dend_10 { pt3dadd( -100.595, -268.189, -53.2029, 0.37 ) }
    dend_10 { pt3dadd( -100.609, -269.586, -53.5156, 0.37 ) }
    dend_10 { pt3dadd( -100.598, -270.266, -53.673, 0.52 ) }
    dend_10 { pt3dadd( -100.549, -270.985, -53.8426, 0.96 ) }
    dend_10 { pt3dadd( -100.439, -271.844, -54.0276, 0.59 ) }
    dend_10 { pt3dadd( -100.307, -272.577, -54.1573, 0.59 ) }
    dend_10 { pt3dadd( -100.144, -273.579, -54.2925, 0.66 ) }
    dend_10 { pt3dadd( -100.028, -274.286, -54.3419, 0.66 ) }
    dend_10 { pt3dadd( -99.9422, -274.848, -54.3757, 0.59 ) }
    dend_10 { pt3dadd( -99.7445, -276.202, -54.4389, 0.22 ) }
    dend_10 { pt3dadd( -99.7077, -276.661, -54.4519, 0.52 ) }
    dend_10 { pt3dadd( -99.7197, -277.294, -54.4246, 0.96 ) }
    dend_10 { pt3dadd( -99.8126, -278.008, -54.361, 1.25 ) }
    dend_10 { pt3dadd( -99.9972, -278.775, -54.2646, 0.52 ) }
    dend_10 { pt3dadd( -100.175, -279.333, -54.2113, 0.44 ) }
    dend_10 { pt3dadd( -100.596, -280.476, -54.1436, 0.44 ) }
    dend_10 { pt3dadd( -100.964, -281.565, -54.1188, 0.44 ) }
    dend_10 { pt3dadd( -101.16, -282.252, -54.154, 0.44 ) }
    dend_10 { pt3dadd( -101.327, -283.026, -54.2702, 0.44 ) }
    dend_10 { pt3dadd( -101.497, -284.234, -54.5582, 0.74 ) }
    dend_10 { pt3dadd( -101.537, -284.639, -54.6805, 0.74 ) }
    dend_10 { pt3dadd( -101.596, -285.668, -55.0497, 0.74 ) }
    dend_10 { pt3dadd( -101.654, -286.583, -55.4083, 0.59 ) }
    dend_10 { pt3dadd( -101.692, -287.27, -55.6337, 0.44 ) }
    dend_10 { pt3dadd( -101.73, -287.993, -55.8144, 0.44 ) }
    dend_10 { pt3dadd( -101.813, -288.942, -55.9612, 0.44 ) }
    dend_10 { pt3dadd( -101.879, -289.88, -56.0576, 0.88 ) }
    dend_10 { pt3dadd( -101.939, -290.576, -56.0896, 0.88 ) }
    dend_10 { pt3dadd( -102.043, -291.497, -56.0787, 0.52 ) }
    dend_10 { pt3dadd( -102.108, -292.07, -56.0585, 0.29 ) }
    dend_10 { pt3dadd( -102.174, -292.708, -56.0364, 0.29 ) }
    dend_10 { pt3dadd( -102.302, -294.205, -55.9865, 0.29 ) }
    dend_10 { pt3dadd( -102.417, -295.24, -55.9649, 0.37 ) }
    dend_10 { pt3dadd( -102.488, -295.83, -55.9679, 0.37 ) }
    dend_10 { pt3dadd( -102.597, -296.648, -55.9945, 0.37 ) }
    dend_10 { pt3dadd( -102.692, -297.466, -56.0236, 0.37 ) }
    dend_10 { pt3dadd( -102.756, -298.141, -56.0486, 0.66 ) }
    dend_10 { pt3dadd( -102.805, -299.122, -56.084, 0.81 ) }
    dend_10 { pt3dadd( -102.789, -300.014, -56.113, 1.03 ) }
    dend_10 { pt3dadd( -102.763, -300.635, -56.13, 1.11 ) }
    dend_10 { pt3dadd( -102.703, -301.824, -56.1513, 0.37 ) }
    dend_10 { pt3dadd( -102.673, -302.716, -56.1606, 0.37 ) }
    dend_10 { pt3dadd( -102.654, -303.812, -56.1626, 0.29 ) }
    dend_10 { pt3dadd( -102.646, -304.433, -56.1579, 0.29 ) }
    dend_10 { pt3dadd( -102.668, -305.265, -56.1694, 0.29 ) }
    dend_10 { pt3dadd( -102.738, -306.256, -56.197, 0.29 ) }
    dend_10 { pt3dadd( -102.863, -307.199, -56.235, 0.29 ) }
    dend_10 { pt3dadd( -103.082, -308.384, -56.2941, 0.29 ) }
    dend_10 { pt3dadd( -103.262, -309.152, -56.3391, 0.44 ) }
    dend_10 { pt3dadd( -103.56, -310.277, -56.4157, 0.59 ) }
    dend_10 { pt3dadd( -103.777, -310.973, -56.4678, 0.59 ) }
    dend_10 { pt3dadd( -104.097, -311.815, -56.5557, 0.29 ) }
    dend_10 { pt3dadd( -104.272, -312.296, -56.612, 0.29 ) }
    dend_10 { pt3dadd( -104.356, -312.548, -56.6498, 0.29 ) }
    dend_10 { pt3dadd( -104.531, -313.161, -56.7622, 0.59 ) }
    dend_10 { pt3dadd( -104.821, -314.281, -56.9797, 0.59 ) }
    dend_10 { pt3dadd( -105.107, -315.427, -57.2557, 0.74 ) }
    dend_10 { pt3dadd( -105.439, -316.802, -57.6175, 0.44 ) }
    dend_10 { pt3dadd( -105.665, -317.796, -57.881, 0.74 ) }
    dend_10 { pt3dadd( -105.848, -318.65, -58.1183, 0.37 ) }
    dend_10 { pt3dadd( -106.078, -319.828, -58.4478, 0.37 ) }
    dend_10 { pt3dadd( -106.231, -320.616, -58.6397, 1.11 ) }
    dend_10 { pt3dadd( -106.435, -321.552, -58.8185, 1.11 ) }
    dend_10 { pt3dadd( -106.69, -322.439, -58.9461, 0.81 ) }
    dend_10 { pt3dadd( -106.87, -323.043, -58.9899, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_10 { pt3dadd( -107.128, -324.0, -59.0271, 0.22 ) }
    dend_10 { pt3dadd( -107.362, -325.023, -59.0491, 0.22 ) }
    dend_10 { pt3dadd( -107.432, -325.318, -59.0486, 0.37 ) }
    dend_10 { pt3dadd( -107.697, -326.301, -59.0528, 0.37 ) }
    dend_10 { pt3dadd( -107.987, -327.242, -59.0603, 0.37 ) }
    dend_10 { pt3dadd( -108.226, -327.924, -59.0738, 0.81 ) }
    dend_10 { pt3dadd( -108.491, -328.595, -59.1062, 0.37 ) }
    dend_10 { pt3dadd( -108.838, -329.391, -59.1811, 0.37 ) }
    dend_10 { pt3dadd( -109.447, -330.685, -59.3162, 0.37 ) }
    dend_10 { pt3dadd( -109.904, -331.586, -59.4163, 0.37 ) }
    dend_10 { pt3dadd( -110.61, -332.793, -59.5566, 0.37 ) }
    dend_10 { pt3dadd( -110.993, -333.389, -59.6362, 0.37 ) }
    dend_10 { pt3dadd( -111.525, -334.167, -59.764, 0.22 ) }
    dend_10 { pt3dadd( -111.836, -334.616, -59.8508, 0.37 ) }
    dend_10 { pt3dadd( -112.05, -334.91, -59.9151, 0.37 ) }
    dend_10 { pt3dadd( -112.437, -335.435, -60.0332, 0.37 ) }
    dend_10 { pt3dadd( -112.994, -336.205, -60.1895, 0.37 ) }
    dend_10 { pt3dadd( -113.243, -336.537, -60.2485, 0.37 ) }
    dend_10 { pt3dadd( -113.916, -337.419, -60.3689, 0.37 ) }
    dend_10 { pt3dadd( -114.345, -337.932, -60.435, 0.37 ) }
    dend_10 { pt3dadd( -115.251, -338.996, -60.5751, 0.59 ) }
    dend_10 { pt3dadd( -115.775, -339.606, -60.6488, 0.59 ) }
    dend_10 { pt3dadd( -116.19, -340.082, -60.6987, 0.81 ) }
    dend_10 { pt3dadd( -116.808, -340.809, -60.7772, 0.37 ) }
    dend_10 { pt3dadd( -117.679, -341.891, -60.8803, 0.37 ) }
    dend_10 { pt3dadd( -118.719, -343.346, -60.9909, 0.37 ) }
    dend_10 { pt3dadd( -119.435, -344.476, -61.052, 0.52 ) }
    dend_10 { pt3dadd( -119.841, -345.24, -61.0971, 0.52 ) }
    dend_10 { pt3dadd( -119.951, -345.507, -61.1128, 0.52 ) }
    dend_10 { pt3dadd( -120.16, -346.223, -61.15, 0.59 ) }
    dend_10 { pt3dadd( -120.287, -347.08, -61.2033, 0.29 ) }
    dend_10 { pt3dadd( -120.324, -347.754, -61.2546, 0.29 ) }
    dend_10 { pt3dadd( -120.327, -348.855, -61.3711, 0.29 ) }
    dend_10 { pt3dadd( -120.331, -349.568, -61.4594, 0.44 ) }
    dend_10 { pt3dadd( -120.329, -350.305, -61.5596, 0.59 ) }
    dend_10 { pt3dadd( -120.317, -351.252, -61.7836, 0.29 ) }
    dend_10 { pt3dadd( -120.319, -352.171, -62.0658, 0.29 ) }
    dend_10 { pt3dadd( -120.323, -352.652, -62.234, 0.44 ) }
    dend_10 { pt3dadd( -120.329, -353.056, -62.4072, 0.44 ) }
    dend_10 { pt3dadd( -120.341, -353.629, -62.6844, 0.44 ) }
    dend_10 { pt3dadd( -120.367, -355.245, -63.513, 0.52 ) }
    dend_10 { pt3dadd( -120.376, -355.893, -63.8411, 0.52 ) }
    dend_10 { pt3dadd( -120.369, -356.734, -64.2517, 0.52 ) }
    dend_10 { pt3dadd( -120.358, -358.038, -64.794, 0.29 ) }
    dend_10 { pt3dadd( -120.344, -358.588, -64.9627, 0.29 ) }
    dend_10 { pt3dadd( -120.322, -359.054, -65.0431, 0.52 ) }
    dend_10 { pt3dadd( -120.296, -359.532, -65.0544, 0.59 ) }
    dend_10 { pt3dadd( -120.257, -360.306, -65.0334, 0.59 ) }
    dend_10 { pt3dadd( -120.224, -361.425, -64.9462, 0.88 ) }
    dend_10 { pt3dadd( -120.217, -362.252, -64.8504, 0.29 ) }
    dend_10 { pt3dadd( -120.215, -363.15, -64.7454, 0.29 ) }
    dend_10 { pt3dadd( -120.218, -364.387, -64.6047, 0.29 ) }
    dend_10 { pt3dadd( -120.222, -365.109, -64.5297, 0.44 ) }
    dend_10 { pt3dadd( -120.242, -365.935, -64.4531, 0.44 ) }
    dend_10 { pt3dadd( -120.267, -366.892, -64.3888, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 55/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -79.2718, -226.404, -50.7753, 0.29 ) }
    dend_9 { pt3dadd( -77.6854, -226.92, -50.8304, 0.29 ) }
    dend_9 { pt3dadd( -76.7092, -227.228, -50.8593, 0.29 ) }
    dend_9 { pt3dadd( -74.2383, -228.091, -50.9211, 0.29 ) }
    dend_9 { pt3dadd( -72.5808, -228.73, -50.956, 0.29 ) }
    dend_9 { pt3dadd( -71.4411, -229.223, -50.9765, 0.29 ) }
    dend_9 { pt3dadd( -70.6046, -229.614, -51.0022, 0.29 ) }
    dend_9 { pt3dadd( -70.1186, -229.862, -51.0143, 0.29 ) }
    dend_9 { pt3dadd( -68.6544, -230.693, -51.0699, 0.29 ) }
    dend_9 { pt3dadd( -67.4849, -231.446, -51.1313, 0.29 ) }
    dend_9 { pt3dadd( -66.285, -232.298, -51.2172, 0.29 ) }
    dend_9 { pt3dadd( -64.7443, -233.441, -51.3405, 0.29 ) }
    dend_9 { pt3dadd( -63.5151, -234.375, -51.4487, 0.29 ) }
    dend_9 { pt3dadd( -63.0474, -234.733, -51.4941, 0.29 ) }
    dend_9 { pt3dadd( -62.3244, -235.263, -51.5747, 0.44 ) }
    dend_9 { pt3dadd( -61.6437, -235.757, -51.6599, 0.52 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 71/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -25.8434, 47.0509, 2.56814, 1.03 ) }
    dend_72 { pt3dadd( -26.0803, 47.2073, 2.63159, 1.03 ) }
    dend_72 { pt3dadd( -26.7518, 47.7195, 2.73406, 0.81 ) }
    dend_72 { pt3dadd( -27.4166, 48.2732, 2.78737, 0.81 ) }
    dend_72 { pt3dadd( -27.9781, 48.757, 2.80982, 0.81 ) }
    dend_72 { pt3dadd( -28.4003, 49.118, 2.81673, 0.88 ) }
    dend_72 { pt3dadd( -28.9666, 49.5826, 2.81903, 0.88 ) }
    dend_72 { pt3dadd( -29.6732, 50.1501, 2.83358, 0.88 ) }
    dend_72 { pt3dadd( -30.3358, 50.6798, 2.85923, 0.74 ) }
    dend_72 { pt3dadd( -30.9098, 51.0976, 2.93468, 0.74 ) }
    dend_72 { pt3dadd( -31.6315, 51.5495, 3.1049, 1.03 ) }
    dend_72 { pt3dadd( -32.0625, 51.7842, 3.24365, 1.03 ) }
    dend_72 { pt3dadd( -32.9051, 52.1681, 3.64827, 1.03 ) }
    dend_72 { pt3dadd( -33.295, 52.3248, 3.82552, 1.03 ) }
    dend_72 { pt3dadd( -34.5346, 52.7763, 4.33232, 1.03 ) }
    dend_72 { pt3dadd( -35.1952, 53.0106, 4.61743, 0.88 ) }
    dend_72 { pt3dadd( -35.6787, 53.1808, 4.82309, 0.88 ) }
    dend_72 { pt3dadd( -36.9521, 53.6397, 5.3385, 0.88 ) }
    dend_72 { pt3dadd( -40.5502, 54.9881, 6.6663, 0.66 ) }
    dend_72 { pt3dadd( -41.392, 55.3092, 6.9349, 0.66 ) }
    dend_72 { pt3dadd( -42.6804, 55.8268, 7.26439, 0.59 ) }
    dend_72 { pt3dadd( -43.4232, 56.1376, 7.43329, 0.59 ) }
    dend_72 { pt3dadd( -43.8981, 56.3456, 7.51893, 0.59 ) }
    dend_72 { pt3dadd( -44.4888, 56.6366, 7.56788, 0.59 ) }
    dend_72 { pt3dadd( -45.3966, 57.213, 7.52137, 0.74 ) }
    dend_72 { pt3dadd( -45.802, 57.5199, 7.43276, 0.74 ) }
    dend_72 { pt3dadd( -45.9982, 57.689, 7.35908, 0.74 ) }
    dend_72 { pt3dadd( -46.358, 58.0416, 7.21491, 0.74 ) }
    dend_72 { pt3dadd( -46.5102, 58.2051, 7.15926, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_72 { pt3dadd( -47.232, 59.064, 6.95531, 0.81 ) }
    dend_72 { pt3dadd( -47.6808, 59.6538, 6.86546, 0.81 ) }
    dend_72 { pt3dadd( -48.0574, 60.1637, 6.81813, 0.81 ) }
    dend_72 { pt3dadd( -48.35, 60.559, 6.80189, 0.88 ) }
    dend_72 { pt3dadd( -48.8352, 61.215, 6.8087, 0.96 ) }
    dend_72 { pt3dadd( -49.5219, 62.1268, 6.86268, 0.96 ) }
    dend_72 { pt3dadd( -49.8936, 62.6124, 6.91852, 0.88 ) }
    dend_72 { pt3dadd( -50.4216, 63.2801, 6.99798, 0.88 ) }
    dend_72 { pt3dadd( -50.7054, 63.6245, 7.03835, 0.96 ) }
    dend_72 { pt3dadd( -51.3556, 64.3953, 7.10288, 0.96 ) }
    dend_72 { pt3dadd( -51.8313, 64.9351, 7.15353, 0.96 ) }
    dend_72 { pt3dadd( -52.2098, 65.3542, 7.19669, 0.81 ) }
    dend_72 { pt3dadd( -52.5808, 65.7646, 7.23673, 0.74 ) }
    dend_72 { pt3dadd( -52.9555, 66.1866, 7.28549, 0.74 ) }
    dend_72 { pt3dadd( -53.3844, 66.7131, 7.39843, 0.74 ) }
    dend_72 { pt3dadd( -53.9585, 67.4873, 7.62604, 0.74 ) }
    dend_72 { pt3dadd( -54.385, 68.1088, 7.86461, 0.74 ) }
    dend_72 { pt3dadd( -54.7335, 68.6333, 8.10122, 0.74 ) }
    dend_72 { pt3dadd( -55.1871, 69.3229, 8.44837, 0.74 ) }
    dend_72 { pt3dadd( -55.7438, 70.1841, 8.91369, 0.74 ) }
    dend_72 { pt3dadd( -56.0872, 70.6851, 9.23494, 0.52 ) }
    dend_72 { pt3dadd( -56.5862, 71.3577, 9.68911, 0.59 ) }
    dend_72 { pt3dadd( -56.7478, 71.5556, 9.83624, 0.74 ) }
    dend_72 { pt3dadd( -56.9438, 71.7773, 9.98498, 0.74 ) }
    dend_72 { pt3dadd( -57.1724, 72.0097, 10.1077, 0.74 ) }
    dend_72 { pt3dadd( -58.1348, 72.9241, 10.4497, 0.81 ) }
    dend_72 { pt3dadd( -58.5312, 73.3191, 10.5501, 1.4 ) }
    dend_72 { pt3dadd( -58.799, 73.6142, 10.5855, 1.4 ) }
    dend_72 { pt3dadd( -59.4536, 74.423, 10.6054, 0.88 ) }
    dend_72 { pt3dadd( -59.7263, 74.7924, 10.5841, 0.59 ) }
    dend_72 { pt3dadd( -60.0393, 75.2491, 10.5221, 0.52 ) }
    dend_72 { pt3dadd( -60.3385, 75.7452, 10.3926, 0.52 ) }
    dend_72 { pt3dadd( -60.4957, 76.0169, 10.3208, 0.52 ) }
    dend_72 { pt3dadd( -60.7859, 76.5105, 10.1995, 0.52 ) }
    dend_72 { pt3dadd( -61.0129, 76.9009, 10.148, 0.52 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 35/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 19.0766, -267.614, -27.5829, 0.37 ) }
    dend_23 { pt3dadd( 18.6084, -268.211, -27.3217, 0.37 ) }
    dend_23 { pt3dadd( 17.8927, -269.132, -26.9212, 0.37 ) }
    dend_23 { pt3dadd( 17.5707, -269.564, -26.7543, 0.37 ) }
    dend_23 { pt3dadd( 16.6293, -270.878, -26.3224, 0.37 ) }
    dend_23 { pt3dadd( 16.2826, -271.366, -26.1791, 0.37 ) }
    dend_23 { pt3dadd( 15.8741, -271.939, -26.0318, 0.37 ) }
    dend_23 { pt3dadd( 15.7122, -272.165, -25.9813, 0.37 ) }
    dend_23 { pt3dadd( 15.0549, -273.122, -25.8206, 0.37 ) }
    dend_23 { pt3dadd( 14.443, -274.031, -25.726, 0.37 ) }
    dend_23 { pt3dadd( 14.1801, -274.417, -25.7211, 0.37 ) }
    dend_23 { pt3dadd( 13.5409, -275.316, -25.7269, 0.37 ) }
    dend_23 { pt3dadd( 13.0353, -275.979, -25.7446, 0.37 ) }
    dend_23 { pt3dadd( 12.4209, -276.755, -25.7689, 0.37 ) }
    dend_23 { pt3dadd( 12.0855, -277.163, -25.7831, 0.37 ) }
    dend_23 { pt3dadd( 11.2378, -278.19, -25.7686, 0.52 ) }
    dend_23 { pt3dadd( 10.8684, -278.65, -25.7455, 0.52 ) }
    dend_23 { pt3dadd( 10.1842, -279.548, -25.6713, 0.52 ) }
    dend_23 { pt3dadd( 9.59677, -280.293, -25.5905, 0.52 ) }
    dend_23 { pt3dadd( 8.94488, -281.08, -25.4901, 0.52 ) }
    dend_23 { pt3dadd( 8.256, -281.876, -25.4154, 0.66 ) }
    dend_23 { pt3dadd( 7.98099, -282.212, -25.3973, 0.66 ) }
    dend_23 { pt3dadd( 7.08439, -283.282, -25.402, 0.37 ) }
    dend_23 { pt3dadd( 6.27139, -284.236, -25.4488, 0.37 ) }
    dend_23 { pt3dadd( 5.64855, -284.985, -25.4962, 0.37 ) }
    dend_23 { pt3dadd( 4.98788, -285.835, -25.5471, 1.03 ) }
    dend_23 { pt3dadd( 4.24059, -286.864, -25.6099, 0.44 ) }
    dend_23 { pt3dadd( 2.78703, -289.015, -25.6737, 0.44 ) }
    dend_23 { pt3dadd( 2.22481, -289.949, -25.6713, 0.44 ) }
    dend_23 { pt3dadd( 1.76417, -290.869, -25.637, 0.44 ) }
    dend_23 { pt3dadd( 1.38055, -291.776, -25.5691, 0.52 ) }
    dend_23 { pt3dadd( 1.27283, -292.107, -25.5324, 0.66 ) }
    dend_23 { pt3dadd( 1.14316, -292.61, -25.5078, 0.66 ) }
    dend_23 { pt3dadd( 1.03611, -293.259, -25.5277, 0.37 ) }
    dend_23 { pt3dadd( 0.91671, -294.009, -25.608, 0.37 ) }
    dend_23 { pt3dadd( 0.680396, -295.379, -25.8463, 0.37 ) }
    dend_23 { pt3dadd( 0.453746, -296.735, -26.1328, 0.37 ) }
    dend_23 { pt3dadd( 0.23535, -298.082, -26.4629, 0.37 ) }
    dend_23 { pt3dadd( 0.141018, -298.713, -26.6257, 0.37 ) }
    dend_23 { pt3dadd( 0.0040396, -299.652, -26.8825, 0.37 ) }
    dend_23 { pt3dadd( -0.0818, -300.13, -27.0086, 0.37 ) }
    dend_23 { pt3dadd( -0.235177, -300.818, -27.1807, 0.37 ) }
    dend_23 { pt3dadd( -0.437193, -301.602, -27.3449, 0.59 ) }
    dend_23 { pt3dadd( -0.761668, -302.797, -27.5136, 0.59 ) }
    dend_23 { pt3dadd( -0.896344, -303.257, -27.5724, 0.59 ) }
    dend_23 { pt3dadd( -1.35551, -304.708, -27.7642, 0.59 ) }
    dend_23 { pt3dadd( -1.67343, -305.672, -27.8849, 0.37 ) }
    dend_23 { pt3dadd( -1.87769, -306.264, -27.9508, 0.37 ) }
    dend_23 { pt3dadd( -2.16734, -307.117, -28.022, 0.37 ) }
    dend_23 { pt3dadd( -2.56275, -308.32, -28.1021, 0.37 ) }
    dend_23 { pt3dadd( -2.93815, -309.522, -28.1601, 0.52 ) }
    dend_23 { pt3dadd( -3.19516, -310.395, -28.2034, 0.52 ) }
    dend_23 { pt3dadd( -3.42753, -311.156, -28.2385, 0.37 ) }
    dend_23 { pt3dadd( -4.08544, -313.122, -28.3395, 0.37 ) }
    dend_23 { pt3dadd( -4.4618, -314.149, -28.3957, 0.88 ) }
    dend_23 { pt3dadd( -4.77815, -314.918, -28.4307, 1.03 ) }
    dend_23 { pt3dadd( -5.00432, -315.411, -28.4443, 1.03 ) }
    dend_23 { pt3dadd( -5.35597, -316.103, -28.5006, 0.44 ) }
    dend_23 { pt3dadd( -5.78588, -316.878, -28.5818, 0.44 ) }
    dend_23 { pt3dadd( -6.26836, -317.605, -28.6935, 0.44 ) }
    dend_23 { pt3dadd( -6.61175, -318.068, -28.7849, 0.44 ) }
    dend_23 { pt3dadd( -6.93147, -318.474, -28.8694, 0.44 ) }
    dend_23 { pt3dadd( -7.71017, -319.471, -29.0583, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 98/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 19.0766, -267.614, -27.5829, 0.52 ) }
    dend_18 { pt3dadd( 19.9641, -268.083, -27.2642, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_18 { pt3dadd( 20.7219, -268.474, -26.999, 0.37 ) }
    dend_18 { pt3dadd( 22.1757, -269.239, -26.5538, 0.59 ) }
    dend_18 { pt3dadd( 23.0572, -269.729, -26.3133, 0.59 ) }
    dend_18 { pt3dadd( 24.0597, -270.322, -26.0642, 0.52 ) }
    dend_18 { pt3dadd( 24.5011, -270.598, -25.9624, 0.52 ) }
    dend_18 { pt3dadd( 25.4273, -271.239, -25.7722, 0.37 ) }
    dend_18 { pt3dadd( 26.7036, -272.223, -25.5614, 0.37 ) }
    dend_18 { pt3dadd( 27.6124, -273.029, -25.4726, 0.37 ) }
    dend_18 { pt3dadd( 28.2179, -273.629, -25.4169, 0.37 ) }
    dend_18 { pt3dadd( 28.6639, -274.118, -25.3829, 0.37 ) }
    dend_18 { pt3dadd( 29.3368, -274.927, -25.3484, 0.37 ) }
    dend_18 { pt3dadd( 29.6537, -275.352, -25.3185, 0.37 ) }
    dend_18 { pt3dadd( 30.3363, -276.414, -25.2189, 0.37 ) }
    dend_18 { pt3dadd( 30.8828, -277.383, -25.1155, 0.37 ) }
    dend_18 { pt3dadd( 31.4759, -278.571, -24.9993, 0.37 ) }
    dend_18 { pt3dadd( 32.061, -279.902, -24.8816, 0.37 ) }
    dend_18 { pt3dadd( 32.5746, -281.274, -24.7753, 0.37 ) }
    dend_18 { pt3dadd( 32.9496, -282.46, -24.6971, 0.37 ) }
    dend_18 { pt3dadd( 33.1271, -283.261, -24.6561, 0.37 ) }
    dend_18 { pt3dadd( 33.2415, -284.031, -24.6327, 0.37 ) }
    dend_18 { pt3dadd( 33.3085, -284.649, -24.6309, 0.44 ) }
    dend_18 { pt3dadd( 33.3893, -285.354, -24.6554, 0.44 ) }
    dend_18 { pt3dadd( 33.5111, -286.067, -24.7128, 0.44 ) }
    dend_18 { pt3dadd( 33.6788, -286.742, -24.7445, 0.44 ) }
    dend_18 { pt3dadd( 34.0172, -287.665, -24.7675, 0.44 ) }
    dend_18 { pt3dadd( 34.367, -288.349, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 34.6387, -288.788, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 34.9065, -289.171, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 35.4024, -289.856, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 36.2751, -291.051, -24.7675, 0.52 ) }
    dend_18 { pt3dadd( 37.0314, -292.16, -24.7675, 0.66 ) }
    dend_18 { pt3dadd( 37.2056, -292.421, -24.7611, 0.37 ) }
    dend_18 { pt3dadd( 37.4324, -292.779, -24.7446, 0.37 ) }
    dend_18 { pt3dadd( 37.7767, -293.383, -24.7109, 0.37 ) }
    dend_18 { pt3dadd( 38.0808, -293.987, -24.673, 0.37 ) }
    dend_18 { pt3dadd( 38.458, -294.842, -24.6169, 0.52 ) }
    dend_18 { pt3dadd( 38.6485, -295.299, -24.5892, 0.52 ) }
    dend_18 { pt3dadd( 38.9754, -296.093, -24.5775, 0.52 ) }
    dend_18 { pt3dadd( 39.3731, -297.023, -24.608, 0.44 ) }
    dend_18 { pt3dadd( 39.6946, -297.734, -24.6725, 0.44 ) }
    dend_18 { pt3dadd( 40.0197, -298.503, -24.7776, 0.88 ) }
    dend_18 { pt3dadd( 40.4023, -299.421, -24.9378, 0.88 ) }
    dend_18 { pt3dadd( 40.9115, -300.724, -25.1612, 0.88 ) }
    dend_18 { pt3dadd( 41.2824, -301.728, -25.3083, 0.88 ) }
    dend_18 { pt3dadd( 41.4717, -302.267, -25.3687, 0.66 ) }
    dend_18 { pt3dadd( 41.76, -303.127, -25.4527, 0.52 ) }
    dend_18 { pt3dadd( 42.0371, -303.984, -25.5165, 0.52 ) }
    dend_18 { pt3dadd( 42.4332, -305.155, -25.5919, 0.37 ) }
    dend_18 { pt3dadd( 42.7776, -306.246, -25.6381, 0.37 ) }
    dend_18 { pt3dadd( 43.0361, -307.102, -25.6739, 0.66 ) }
    dend_18 { pt3dadd( 43.1567, -307.488, -25.691, 0.66 ) }
    dend_18 { pt3dadd( 43.3929, -308.182, -25.7397, 0.66 ) }
    dend_18 { pt3dadd( 43.688, -309.077, -25.7933, 0.44 ) }
    dend_18 { pt3dadd( 44.2041, -310.476, -25.8692, 0.37 ) }
    dend_18 { pt3dadd( 44.388, -310.972, -25.8906, 0.37 ) }
    dend_18 { pt3dadd( 44.5777, -311.5, -25.9041, 0.37 ) }
    dend_18 { pt3dadd( 44.8146, -312.152, -25.9108, 0.37 ) }
    dend_18 { pt3dadd( 45.1307, -312.991, -25.9154, 0.37 ) }
    dend_18 { pt3dadd( 45.4209, -313.801, -25.9098, 0.37 ) }
    dend_18 { pt3dadd( 45.7761, -314.859, -25.9333, 0.59 ) }
    dend_18 { pt3dadd( 45.851, -315.14, -25.9479, 0.59 ) }
    dend_18 { pt3dadd( 46.0006, -315.784, -26.0083, 0.29 ) }
    dend_18 { pt3dadd( 46.1109, -316.222, -26.0637, 0.29 ) }
    dend_18 { pt3dadd( 46.3512, -317.111, -26.1874, 0.29 ) }
    dend_18 { pt3dadd( 46.4811, -317.573, -26.2311, 0.52 ) }
    dend_18 { pt3dadd( 46.7453, -318.363, -26.2737, 0.52 ) }
    dend_18 { pt3dadd( 46.9371, -318.894, -26.2963, 0.44 ) }
    dend_18 { pt3dadd( 47.2558, -319.831, -26.324, 0.37 ) }
    dend_18 { pt3dadd( 47.7185, -321.318, -26.3636, 0.37 ) }
    dend_18 { pt3dadd( 48.0262, -322.358, -26.3698, 0.37 ) }
    dend_18 { pt3dadd( 48.195, -322.991, -26.3628, 0.37 ) }
    dend_18 { pt3dadd( 48.3991, -323.745, -26.342, 0.37 ) }
    dend_18 { pt3dadd( 48.5938, -324.528, -26.2957, 0.37 ) }
    dend_18 { pt3dadd( 48.7861, -325.312, -26.2354, 0.37 ) }
    dend_18 { pt3dadd( 49.1784, -326.788, -26.0999, 0.37 ) }
    dend_18 { pt3dadd( 49.2894, -327.183, -26.0614, 0.37 ) }
    dend_18 { pt3dadd( 49.7882, -328.791, -25.9107, 0.37 ) }
    dend_18 { pt3dadd( 50.1649, -329.831, -25.8202, 0.37 ) }
    dend_18 { pt3dadd( 50.5631, -330.795, -25.6883, 0.37 ) }
    dend_18 { pt3dadd( 50.7438, -331.22, -25.6145, 0.52 ) }
    dend_18 { pt3dadd( 51.0208, -331.937, -25.4726, 0.52 ) }
    dend_18 { pt3dadd( 51.3058, -332.826, -25.2518, 0.37 ) }
    dend_18 { pt3dadd( 51.5228, -333.702, -25.0006, 0.37 ) }
    dend_18 { pt3dadd( 51.8366, -335.186, -24.5649, 0.37 ) }
    dend_18 { pt3dadd( 51.9544, -335.864, -24.3685, 0.66 ) }
    dend_18 { pt3dadd( 52.0725, -336.617, -24.1608, 0.66 ) }
    dend_18 { pt3dadd( 52.2468, -337.656, -23.8989, 0.66 ) }
    dend_18 { pt3dadd( 52.4058, -338.554, -23.7022, 0.52 ) }
    dend_18 { pt3dadd( 52.5845, -339.444, -23.5492, 0.52 ) }
    dend_18 { pt3dadd( 52.9623, -341.124, -23.3743, 0.52 ) }
    dend_18 { pt3dadd( 53.0693, -341.586, -23.3428, 0.37 ) }
    dend_18 { pt3dadd( 53.3177, -342.715, -23.3157, 0.37 ) }
    dend_18 { pt3dadd( 53.4124, -343.213, -23.3366, 0.52 ) }
    dend_18 { pt3dadd( 53.4557, -343.48, -23.3226, 0.52 ) }
    dend_18 { pt3dadd( 53.5753, -344.384, -23.183, 0.59 ) }
    dend_18 { pt3dadd( 53.6608, -345.277, -22.9602, 0.88 ) }
    dend_18 { pt3dadd( 53.7176, -346.117, -22.6842, 0.88 ) }
    dend_18 { pt3dadd( 53.7217, -346.807, -22.4351, 0.88 ) }
    dend_18 { pt3dadd( 53.6534, -349.241, -21.5328, 0.59 ) }
    dend_18 { pt3dadd( 53.6146, -349.793, -21.3177, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_18 { pt3dadd( 53.5233, -350.886, -20.8498, 0.52 ) }
    dend_18 { pt3dadd( 53.4411, -352.187, -20.2727, 0.44 ) }
    dend_18 { pt3dadd( 53.3696, -353.397, -19.7183, 0.44 ) }
    dend_18 { pt3dadd( 53.3381, -354.063, -19.4265, 0.44 ) }
    dend_18 { pt3dadd( 53.2724, -355.486, -18.9167, 0.44 ) }
    dend_18 { pt3dadd( 53.2435, -356.38, -18.5813, 0.44 ) }
    dend_18 { pt3dadd( 53.2322, -357.192, -18.2085, 0.44 ) }
    dend_18 { pt3dadd( 53.2694, -358.206, -17.7057, 0.59 ) }
    dend_18 { pt3dadd( 53.3086, -358.754, -17.429, 0.59 ) }
    dend_18 { pt3dadd( 53.377, -359.458, -17.1021, 0.59 ) }
    dend_18 { pt3dadd( 53.4735, -360.507, -16.6856, 0.59 ) }
    dend_18 { pt3dadd( 53.5528, -362.034, -16.1857, 0.59 ) }
    dend_18 { pt3dadd( 53.5758, -363.106, -15.8987, 0.59 ) }
    dend_18 { pt3dadd( 53.5926, -363.987, -15.7387, 0.59 ) }
    dend_18 { pt3dadd( 53.5932, -364.902, -15.6146, 0.74 ) }
    dend_18 { pt3dadd( 53.614, -366.274, -15.495, 0.44 ) }
    dend_18 { pt3dadd( 53.6617, -367.443, -15.4558, 0.44 ) }
    dend_18 { pt3dadd( 53.7424, -368.801, -15.4496, 0.44 ) }
    dend_18 { pt3dadd( 53.8409, -369.97, -15.4527, 0.44 ) }
    dend_18 { pt3dadd( 53.9594, -370.984, -15.4627, 0.44 ) }
    dend_18 { pt3dadd( 54.1096, -372.129, -15.4832, 0.59 ) }
    dend_18 { pt3dadd( 54.3243, -373.303, -15.5148, 0.59 ) }
    dend_18 { pt3dadd( 54.5969, -374.475, -15.561, 0.59 ) }
    dend_18 { pt3dadd( 54.8228, -375.311, -15.5994, 0.59 ) }
    dend_18 { pt3dadd( 55.0744, -376.29, -15.6433, 0.59 ) }
    dend_18 { pt3dadd( 55.2483, -377.115, -15.7109, 0.52 ) }
    dend_18 { pt3dadd( 55.4426, -378.42, -15.8593, 0.52 ) }
    dend_18 { pt3dadd( 55.5377, -379.336, -15.9476, 0.52 ) }
    dend_18 { pt3dadd( 55.5913, -380.225, -16.0161, 0.37 ) }
    dend_18 { pt3dadd( 55.6331, -381.394, -16.0801, 0.37 ) }
    dend_18 { pt3dadd( 55.6802, -382.878, -16.1674, 0.37 ) }
    dend_18 { pt3dadd( 55.6935, -383.245, -16.188, 0.37 ) }
    dend_18 { pt3dadd( 55.7388, -384.543, -16.2919, 0.37 ) }
    dend_18 { pt3dadd( 55.8067, -385.553, -16.3623, 0.37 ) }
    dend_18 { pt3dadd( 55.9451, -386.789, -16.4597, 0.37 ) }
    dend_18 { pt3dadd( 56.0791, -387.617, -16.5299, 0.37 ) }
    dend_18 { pt3dadd( 56.2157, -388.574, -16.63, 0.37 ) }
    dend_18 { pt3dadd( 56.2959, -389.532, -16.7543, 0.37 ) }
    dend_18 { pt3dadd( 56.3538, -390.526, -16.9355, 0.37 ) }
    dend_18 { pt3dadd( 56.39, -391.295, -17.0686, 0.37 ) }
    dend_18 { pt3dadd( 56.3971, -391.827, -17.1609, 0.37 ) }
    dend_18 { pt3dadd( 56.3834, -393.272, -17.4187, 0.37 ) }
    dend_18 { pt3dadd( 56.3889, -394.67, -17.6806, 0.37 ) }
    dend_18 { pt3dadd( 56.4147, -396.552, -18.0454, 0.37 ) }
    dend_18 { pt3dadd( 56.446, -397.422, -18.2455, 0.37 ) }
    dend_18 { pt3dadd( 56.6179, -400.223, -18.9876, 0.37 ) }
    dend_18 { pt3dadd( 56.7698, -401.754, -19.4264, 0.37 ) }
    dend_18 { pt3dadd( 56.9056, -402.728, -19.7354, 0.37 ) }
    dend_18 { pt3dadd( 57.1237, -404.053, -20.1936, 0.37 ) }
    dend_18 { pt3dadd( 57.385, -405.608, -20.7428, 0.37 ) }
    dend_18 { pt3dadd( 57.6386, -406.727, -21.1431, 0.59 ) }
    dend_18 { pt3dadd( 57.8236, -407.491, -21.4229, 0.81 ) }
    dend_18 { pt3dadd( 58.0409, -408.417, -21.77, 0.96 ) }
    dend_18 { pt3dadd( 58.2223, -409.289, -22.0682, 0.96 ) }
    dend_18 { pt3dadd( 58.4305, -410.335, -22.3772, 0.44 ) }
    dend_18 { pt3dadd( 58.7398, -412.108, -22.8473, 0.44 ) }
    dend_18 { pt3dadd( 59.191, -414.998, -23.55, 0.44 ) }
    dend_18 { pt3dadd( 59.4092, -416.529, -23.9025, 0.44 ) }
    dend_18 { pt3dadd( 59.6093, -418.051, -24.2175, 0.44 ) }
    dend_18 { pt3dadd( 59.8092, -419.819, -24.6127, 0.44 ) }
    dend_18 { pt3dadd( 59.8972, -420.744, -24.8204, 0.74 ) }
    dend_18 { pt3dadd( 59.9426, -421.417, -24.9668, 0.81 ) }
    dend_18 { pt3dadd( 60.0323, -422.587, -25.1851, 0.52 ) }
    dend_18 { pt3dadd( 60.1182, -423.902, -25.4565, 0.37 ) }
    dend_18 { pt3dadd( 60.2465, -425.673, -25.8663, 0.37 ) }
    dend_18 { pt3dadd( 60.4151, -427.135, -26.2687, 0.37 ) }
    dend_18 { pt3dadd( 60.6995, -428.905, -26.7863, 0.37 ) }
    dend_18 { pt3dadd( 60.8203, -429.572, -26.9929, 0.37 ) }
    dend_18 { pt3dadd( 61.1378, -431.219, -27.5574, 0.37 ) }
    dend_18 { pt3dadd( 61.3626, -432.366, -27.9639, 0.37 ) }
    dend_18 { pt3dadd( 61.6376, -433.986, -28.5571, 0.37 ) }
    dend_18 { pt3dadd( 61.7215, -434.801, -28.8846, 0.37 ) }
    dend_18 { pt3dadd( 61.7565, -435.819, -29.2779, 0.37 ) }
    dend_18 { pt3dadd( 61.7441, -436.573, -29.577, 0.59 ) }
    dend_18 { pt3dadd( 61.6455, -437.598, -29.9513, 0.59 ) }
    dend_18 { pt3dadd( 61.4959, -438.612, -30.3329, 0.59 ) }
    dend_18 { pt3dadd( 61.2657, -439.765, -30.7372, 0.59 ) }
    dend_18 { pt3dadd( 60.9518, -441.303, -31.2935, 0.59 ) }
    dend_18 { pt3dadd( 60.621, -443.054, -31.9311, 0.59 ) }
    dend_18 { pt3dadd( 60.4345, -444.174, -32.3182, 0.59 ) }
    dend_18 { pt3dadd( 60.229, -445.68, -32.8524, 0.59 ) }
    dend_18 { pt3dadd( 60.0869, -446.915, -33.2695, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 82/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -120.267, -366.892, -64.3888, 0.44 ) }
    dend_12 { pt3dadd( -120.377, -367.405, -64.6348, 0.44 ) }
    dend_12 { pt3dadd( -120.53, -368.145, -65.1168, 0.44 ) }
    dend_12 { pt3dadd( -120.668, -368.974, -65.681, 0.44 ) }
    dend_12 { pt3dadd( -120.768, -369.699, -66.0974, 0.44 ) }
    dend_12 { pt3dadd( -120.937, -370.819, -66.6244, 0.52 ) }
    dend_12 { pt3dadd( -121.109, -371.758, -67.0332, 0.52 ) }
    dend_12 { pt3dadd( -121.49, -373.42, -67.6711, 0.74 ) }
    dend_12 { pt3dadd( -121.674, -374.095, -67.9276, 0.81 ) }
    dend_12 { pt3dadd( -122.089, -375.486, -68.4202, 1.11 ) }
    dend_12 { pt3dadd( -122.443, -376.598, -68.8653, 0.59 ) }
    dend_12 { pt3dadd( -122.874, -377.844, -69.3657, 0.44 ) }
    dend_12 { pt3dadd( -123.33, -379.093, -69.8848, 0.44 ) }
    dend_12 { pt3dadd( -123.876, -380.506, -70.4498, 0.44 ) }
    dend_12 { pt3dadd( -124.108, -381.07, -70.6972, 0.44 ) }
    dend_12 { pt3dadd( -124.744, -382.587, -71.4073, 0.44 ) }
    dend_12 { pt3dadd( -125.111, -383.491, -71.7851, 0.74 ) }
    dend_12 { pt3dadd( -125.303, -383.961, -71.9414, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_12 { pt3dadd( -125.588, -384.613, -72.1167, 0.59 ) }
    dend_12 { pt3dadd( -126.046, -385.604, -72.2811, 0.37 ) }
    dend_12 { pt3dadd( -126.48, -386.528, -72.38, 0.37 ) }
    dend_12 { pt3dadd( -127.007, -387.609, -72.4093, 0.37 ) }
    dend_12 { pt3dadd( -127.302, -388.206, -72.4231, 0.52 ) }
    dend_12 { pt3dadd( -127.582, -388.73, -72.4391, 0.52 ) }
    dend_12 { pt3dadd( -127.773, -389.067, -72.4511, 0.52 ) }
    dend_12 { pt3dadd( -128.38, -390.076, -72.5442, 0.52 ) }
    dend_12 { pt3dadd( -129.288, -391.394, -72.734, 0.52 ) }
    dend_12 { pt3dadd( -129.595, -391.823, -72.8014, 0.52 ) }
    dend_12 { pt3dadd( -130.39, -392.894, -73.0004, 0.29 ) }
    dend_12 { pt3dadd( -130.659, -393.242, -73.0784, 0.29 ) }
    dend_12 { pt3dadd( -131.478, -394.189, -73.3529, 0.66 ) }
    dend_12 { pt3dadd( -132.115, -394.762, -73.5986, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 14/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -120.267, -366.892, -64.3888, 0.29 ) }
    dend_11 { pt3dadd( -118.25, -365.05, -65.1558, 0.29 ) }
    dend_11 { pt3dadd( -117.55, -364.433, -65.372, 0.29 ) }
    dend_11 { pt3dadd( -116.746, -363.724, -65.6206, 0.29 ) }
    dend_11 { pt3dadd( -115.932, -363.006, -65.872, 0.29 ) }
    dend_11 { pt3dadd( -115.444, -362.575, -66.0229, 0.29 ) }
    dend_11 { pt3dadd( -114.868, -362.067, -66.2007, 0.29 ) }
    dend_11 { pt3dadd( -114.33, -361.628, -66.2007, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_72 (entry count 22/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -61.0129, 76.9009, 10.148, 0.59 ) }
    dend_78 { pt3dadd( -62.356, 77.5499, 7.81588, 0.59 ) }
    dend_78 { pt3dadd( -62.6977, 77.7307, 7.40292, 0.59 ) }
    dend_78 { pt3dadd( -63.7202, 78.352, 6.55835, 0.81 ) }
    dend_78 { pt3dadd( -64.1257, 78.6237, 6.28438, 0.66 ) }
    dend_78 { pt3dadd( -64.8678, 79.183, 5.7933, 0.52 ) }
    dend_78 { pt3dadd( -65.4242, 79.6468, 5.39599, 0.52 ) }
    dend_78 { pt3dadd( -66.2932, 80.4954, 4.92726, 0.52 ) }
    dend_78 { pt3dadd( -66.9758, 81.2521, 4.54887, 0.52 ) }
    dend_78 { pt3dadd( -67.4833, 81.8589, 4.27547, 0.52 ) }
    dend_78 { pt3dadd( -68.0146, 82.4861, 3.98272, 0.52 ) }
    dend_78 { pt3dadd( -68.8671, 83.4959, 3.51438, 0.52 ) }
    dend_78 { pt3dadd( -69.1469, 83.8323, 3.34412, 0.52 ) }
    dend_78 { pt3dadd( -69.4597, 84.2496, 3.08609, 0.74 ) }
    dend_78 { pt3dadd( -69.9722, 84.9178, 2.62757, 0.22 ) }
    dend_78 { pt3dadd( -70.4752, 85.5574, 2.20451, 0.22 ) }
    dend_78 { pt3dadd( -70.7982, 85.9335, 1.9706, 0.22 ) }
    dend_78 { pt3dadd( -70.836, 85.977, 1.94455, 0.59 ) }
    dend_78 { pt3dadd( -71.6899, 86.9807, 1.20126, 0.52 ) }
    dend_78 { pt3dadd( -71.9698, 87.3568, 0.841933, 0.52 ) }
    dend_78 { pt3dadd( -72.0721, 87.5969, 0.55149, 0.52 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 43/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -61.0129, 76.9009, 10.148, 0.52 ) }
    dend_73 { pt3dadd( -61.3749, 77.3004, 11.0054, 0.52 ) }
    dend_73 { pt3dadd( -62.6009, 78.522, 13.349, 0.74 ) }
    dend_73 { pt3dadd( -62.6345, 78.5535, 13.4017, 1.03 ) }
    dend_73 { pt3dadd( -62.7974, 78.7043, 13.6181, 0.96 ) }
    dend_73 { pt3dadd( -63.6817, 79.5217, 14.6382, 0.74 ) }
    dend_73 { pt3dadd( -64.0582, 79.8679, 15.0225, 0.74 ) }
    dend_73 { pt3dadd( -64.4734, 80.2345, 15.3947, 0.74 ) }
    dend_73 { pt3dadd( -65.2553, 80.9309, 15.826, 0.74 ) }
    dend_73 { pt3dadd( -65.7753, 81.3826, 16.0896, 0.74 ) }
    dend_73 { pt3dadd( -66.1961, 81.73, 16.2716, 0.74 ) }
    dend_73 { pt3dadd( -67.0642, 82.438, 16.4844, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 55/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.71017, -319.471, -29.0583, 0.44 ) }
    dend_25 { pt3dadd( -8.22353, -320.776, -27.0244, 0.44 ) }
    dend_25 { pt3dadd( -8.40163, -321.228, -26.3187, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.71017, -319.471, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -8.42413, -319.72, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -9.4522, -320.225, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -10.335, -320.659, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -11.2317, -321.1, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -12.4218, -321.685, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -13.2687, -322.102, -29.0583, 0.44 ) }
    dend_24 { pt3dadd( -13.6703, -322.389, -29.0583, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 66/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 60.0869, -446.915, -33.2695, 0.37 ) }
    dend_20 { pt3dadd( 60.2262, -448.084, -33.3782, 0.37 ) }
    dend_20 { pt3dadd( 60.3947, -449.572, -33.6056, 0.37 ) }
    dend_20 { pt3dadd( 60.4552, -451.001, -33.8553, 0.37 ) }
    dend_20 { pt3dadd( 60.4276, -452.647, -34.145, 0.37 ) }
    dend_20 { pt3dadd( 60.3834, -453.515, -34.3157, 0.59 ) }
    dend_20 { pt3dadd( 60.3356, -454.171, -34.446, 0.59 ) }
    dend_20 { pt3dadd( 60.2083, -455.314, -34.6734, 0.59 ) }
    dend_20 { pt3dadd( 59.9103, -457.15, -35.0469, 0.59 ) }
    dend_20 { pt3dadd( 59.6821, -458.386, -35.2927, 0.88 ) }
    dend_20 { pt3dadd( 59.5572, -459.31, -35.4865, 0.81 ) }
    dend_20 { pt3dadd( 59.3103, -460.847, -35.7761, 0.44 ) }
    dend_20 { pt3dadd( 59.0974, -462.012, -35.9725, 0.44 ) }
    dend_20 { pt3dadd( 58.9242, -462.868, -36.0853, 0.44 ) }
    dend_20 { pt3dadd( 58.8085, -463.382, -36.1373, 0.74 ) }
    dend_20 { pt3dadd( 58.1584, -465.189, -36.2061, 0.29 ) }
    dend_20 { pt3dadd( 57.2454, -467.086, -36.1689, 0.29 ) }
    dend_20 { pt3dadd( 56.7685, -467.841, -36.1375, 0.29 ) }
    dend_20 { pt3dadd( 56.459, -468.279, -36.1132, 0.59 ) }
    dend_20 { pt3dadd( 55.7046, -469.37, -36.0209, 0.29 ) }
    dend_20 { pt3dadd( 54.7236, -470.838, -35.8673, 0.22 ) }
    dend_20 { pt3dadd( 54.295, -471.461, -35.7884, 1.11 ) }
    dend_20 { pt3dadd( 53.7923, -472.334, -35.697, 0.52 ) }
    dend_20 { pt3dadd( 53.2919, -473.226, -35.6071, 0.52 ) }
    dend_20 { pt3dadd( 52.8771, -474.029, -35.5398, 0.52 ) }
    dend_20 { pt3dadd( 52.5768, -474.657, -35.5185, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 92/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 60.0869, -446.915, -33.2695, 0.37 ) }
    dend_19 { pt3dadd( 59.144, -446.159, -33.3559, 0.37 ) }
    dend_19 { pt3dadd( 57.6639, -445.205, -33.4673, 0.37 ) }
    dend_19 { pt3dadd( 56.9778, -444.858, -33.5121, 0.37 ) }
    dend_19 { pt3dadd( 55.392, -444.271, -33.6043, 0.37 ) }
    dend_19 { pt3dadd( 54.1876, -443.924, -33.6719, 0.37 ) }
    dend_19 { pt3dadd( 53.2615, -443.593, -33.6971, 0.37 ) }
    dend_19 { pt3dadd( 52.3293, -442.985, -33.4929, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_19 { pt3dadd( 52.7674, -443.773, -33.7997, 0.37 ) }
    dend_19 { pt3dadd( 53.073, -444.714, -34.1601, 0.37 ) }
    dend_19 { pt3dadd( 53.5588, -446.345, -34.7816, 0.37 ) }
    dend_19 { pt3dadd( 54.6499, -448.89, -35.8169, 0.37 ) }
    dend_19 { pt3dadd( 55.0432, -449.498, -36.1088, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 5/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -132.115, -394.762, -73.5986, 0.37 ) }
    dend_14 { pt3dadd( -132.575, -395.21, -73.7477, 0.37 ) }
    dend_14 { pt3dadd( -133.212, -395.879, -73.9815, 0.37 ) }
    dend_14 { pt3dadd( -133.608, -396.335, -74.1326, 0.37 ) }
    dend_14 { pt3dadd( -134.321, -397.211, -74.3988, 0.37 ) }
    dend_14 { pt3dadd( -135.106, -398.202, -74.6679, 0.66 ) }
    dend_14 { pt3dadd( -135.726, -398.994, -74.8627, 0.66 ) }
    dend_14 { pt3dadd( -136.16, -399.604, -74.9978, 0.66 ) }
    dend_14 { pt3dadd( -136.534, -400.173, -75.164, 0.66 ) }
    dend_14 { pt3dadd( -136.889, -400.772, -75.3543, 0.66 ) }
    dend_14 { pt3dadd( -137.388, -401.663, -75.6414, 0.66 ) }
    dend_14 { pt3dadd( -137.935, -402.574, -75.9497, 0.66 ) }
    dend_14 { pt3dadd( -138.466, -403.422, -76.2684, 0.96 ) }
    dend_14 { pt3dadd( -139.466, -404.906, -76.8461, 0.37 ) }
    dend_14 { pt3dadd( -140.113, -405.814, -77.208, 0.37 ) }
    dend_14 { pt3dadd( -140.586, -406.446, -77.4581, 0.37 ) }
    dend_14 { pt3dadd( -140.987, -406.975, -77.6532, 0.29 ) }
    dend_14 { pt3dadd( -141.601, -407.772, -77.903, 0.29 ) }
    dend_14 { pt3dadd( -142.119, -408.459, -78.0371, 0.29 ) }
    dend_14 { pt3dadd( -142.59, -409.189, -78.0625, 0.29 ) }
    dend_14 { pt3dadd( -142.86, -409.68, -78.0609, 0.29 ) }
    dend_14 { pt3dadd( -143.155, -410.31, -78.0368, 0.29 ) }
    dend_14 { pt3dadd( -143.352, -410.786, -77.9648, 0.66 ) }
    dend_14 { pt3dadd( -143.703, -411.701, -77.7663, 0.29 ) }
    dend_14 { pt3dadd( -144.022, -412.569, -77.5368, 0.29 ) }
    dend_14 { pt3dadd( -144.324, -413.301, -77.3289, 0.29 ) }
    dend_14 { pt3dadd( -144.723, -414.197, -77.0421, 0.29 ) }
    dend_14 { pt3dadd( -145.405, -415.609, -76.5543, 0.29 ) }
    dend_14 { pt3dadd( -145.76, -416.287, -76.3199, 0.74 ) }
    dend_14 { pt3dadd( -145.935, -416.6, -76.2174, 0.81 ) }
    dend_14 { pt3dadd( -146.476, -417.525, -75.9217, 0.44 ) }
    dend_14 { pt3dadd( -146.941, -418.314, -75.696, 0.44 ) }
    dend_14 { pt3dadd( -147.172, -418.728, -75.6039, 0.59 ) }
    dend_14 { pt3dadd( -147.653, -419.614, -75.4853, 0.59 ) }
    dend_14 { pt3dadd( -147.97, -420.2, -75.41, 0.81 ) }
    dend_14 { pt3dadd( -148.259, -420.711, -75.3493, 0.44 ) }
    dend_14 { pt3dadd( -148.87, -421.66, -75.2508, 0.44 ) }
    dend_14 { pt3dadd( -149.308, -422.179, -75.2198, 0.44 ) }
    dend_14 { pt3dadd( -149.686, -422.535, -75.2001, 0.66 ) }
    dend_14 { pt3dadd( -150.201, -422.953, -75.1799, 0.66 ) }
    dend_14 { pt3dadd( -150.839, -423.436, -75.1704, 0.44 ) }
    dend_14 { pt3dadd( -151.672, -424.07, -75.1766, 0.44 ) }
    dend_14 { pt3dadd( -152.611, -424.806, -75.2039, 0.44 ) }
    dend_14 { pt3dadd( -153.461, -425.528, -75.2329, 0.44 ) }
    dend_14 { pt3dadd( -153.881, -425.918, -75.2718, 0.44 ) }
    dend_14 { pt3dadd( -154.368, -426.419, -75.3383, 0.52 ) }
    dend_14 { pt3dadd( -155.142, -427.289, -75.4693, 0.52 ) }
    dend_14 { pt3dadd( -155.924, -428.239, -75.6171, 0.52 ) }
    dend_14 { pt3dadd( -156.406, -428.831, -75.7117, 0.52 ) }
    dend_14 { pt3dadd( -157.709, -430.372, -75.9456, 0.29 ) }
    dend_14 { pt3dadd( -158.461, -431.18, -76.0574, 0.29 ) }
    dend_14 { pt3dadd( -159.11, -431.816, -76.1778, 0.44 ) }
    dend_14 { pt3dadd( -159.754, -432.395, -76.3121, 0.44 ) }
    dend_14 { pt3dadd( -160.822, -433.292, -76.5439, 0.44 ) }
    dend_14 { pt3dadd( -162.265, -434.444, -76.7998, 0.44 ) }
    dend_14 { pt3dadd( -163.491, -435.405, -76.9649, 0.44 ) }
    dend_14 { pt3dadd( -164.799, -436.413, -77.0757, 0.44 ) }
    dend_14 { pt3dadd( -165.936, -437.253, -77.1142, 0.44 ) }
    dend_14 { pt3dadd( -166.448, -437.606, -77.1099, 0.59 ) }
    dend_14 { pt3dadd( -168.271, -438.789, -77.0188, 0.37 ) }
    dend_14 { pt3dadd( -169.227, -439.376, -76.9317, 0.37 ) }
    dend_14 { pt3dadd( -170.594, -440.222, -76.7477, 0.37 ) }
    dend_14 { pt3dadd( -172.429, -441.366, -76.419, 0.37 ) }
    dend_14 { pt3dadd( -173.178, -441.851, -76.2914, 0.52 ) }
    dend_14 { pt3dadd( -173.858, -442.324, -76.188, 0.74 ) }
    dend_14 { pt3dadd( -174.344, -442.716, -76.1185, 0.52 ) }
    dend_14 { pt3dadd( -174.954, -443.337, -76.0167, 0.37 ) }
    dend_14 { pt3dadd( -175.445, -444.067, -75.9247, 0.37 ) }
    dend_14 { pt3dadd( -175.711, -444.732, -75.8245, 0.37 ) }
    dend_14 { pt3dadd( -175.92, -445.389, -75.7526, 0.37 ) }
    dend_14 { pt3dadd( -176.212, -446.554, -75.6659, 0.37 ) }
    dend_14 { pt3dadd( -176.39, -447.299, -75.6338, 0.37 ) }
    dend_14 { pt3dadd( -176.55, -447.948, -75.6246, 0.66 ) }
    dend_14 { pt3dadd( -176.882, -449.142, -75.6979, 0.66 ) }
    dend_14 { pt3dadd( -177.193, -450.082, -75.8184, 0.52 ) }
    dend_14 { pt3dadd( -177.529, -451.006, -75.9928, 0.52 ) }
    dend_14 { pt3dadd( -177.823, -451.805, -76.2024, 0.44 ) }
    dend_14 { pt3dadd( -178.011, -452.346, -76.3471, 0.52 ) }
    dend_14 { pt3dadd( -178.333, -453.403, -76.6098, 0.37 ) }
    dend_14 { pt3dadd( -178.411, -453.69, -76.672, 0.37 ) }
    dend_14 { pt3dadd( -178.623, -454.465, -76.7999, 0.37 ) }
    dend_14 { pt3dadd( -178.82, -455.136, -76.898, 0.37 ) }
    dend_14 { pt3dadd( -179.13, -456.215, -77.0246, 0.37 ) }
    dend_14 { pt3dadd( -179.41, -457.167, -77.049, 0.37 ) }
    dend_14 { pt3dadd( -179.624, -457.848, -76.9989, 0.37 ) }
    dend_14 { pt3dadd( -179.817, -458.4, -76.9186, 0.37 ) }
    dend_14 { pt3dadd( -180.06, -459.012, -76.7888, 0.37 ) }
    dend_14 { pt3dadd( -180.236, -459.391, -76.685, 0.74 ) }
    dend_14 { pt3dadd( -180.763, -460.406, -76.3709, 0.59 ) }
    dend_14 { pt3dadd( -181.116, -461.002, -76.1345, 0.37 ) }
    dend_14 { pt3dadd( -181.657, -461.839, -75.7754, 0.29 ) }
    dend_14 { pt3dadd( -182.165, -462.572, -75.4387, 0.29 ) }
    dend_14 { pt3dadd( -182.49, -463.005, -75.2377, 0.29 ) }
    dend_14 { pt3dadd( -183.204, -463.915, -74.8373, 0.29 ) }
    dend_14 { pt3dadd( -183.977, -464.807, -74.4839, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_14 { pt3dadd( -184.758, -465.63, -74.1645, 0.29 ) }
    dend_14 { pt3dadd( -185.496, -466.342, -73.9112, 0.52 ) }
    dend_14 { pt3dadd( -185.947, -466.749, -73.7777, 0.52 ) }
    dend_14 { pt3dadd( -186.348, -467.091, -73.6894, 0.52 ) }
    dend_14 { pt3dadd( -187.086, -467.644, -73.598, 0.52 ) }
    dend_14 { pt3dadd( -187.669, -468.069, -73.5867, 0.52 ) }
    dend_14 { pt3dadd( -188.167, -468.386, -73.5934, 0.29 ) }
    dend_14 { pt3dadd( -188.68, -468.668, -73.6167, 0.29 ) }
    dend_14 { pt3dadd( -189.628, -469.069, -73.6532, 0.29 ) }
    dend_14 { pt3dadd( -190.147, -469.268, -73.6714, 0.29 ) }
    dend_14 { pt3dadd( -190.778, -469.495, -73.6894, 0.29 ) }
    dend_14 { pt3dadd( -191.722, -469.774, -73.7031, 0.22 ) }
    dend_14 { pt3dadd( -192.493, -469.945, -73.7152, 0.22 ) }
    dend_14 { pt3dadd( -193.59, -470.106, -73.7335, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 14/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -132.115, -394.762, -73.5986, 0.37 ) }
    dend_13 { pt3dadd( -133.025, -394.318, -73.5884, 0.37 ) }
    dend_13 { pt3dadd( -134.165, -393.611, -73.4909, 0.37 ) }
    dend_13 { pt3dadd( -135.593, -392.628, -73.3286, 0.15 ) }
    dend_13 { pt3dadd( -136.212, -392.142, -73.2982, 0.15 ) }
    dend_13 { pt3dadd( -137.599, -391.002, -73.2839, 0.15 ) }
    dend_13 { pt3dadd( -138.381, -390.356, -73.2906, 0.15 ) }
    dend_13 { pt3dadd( -139.398, -389.514, -73.2873, 0.15 ) }
    dend_13 { pt3dadd( -140.402, -388.643, -73.2572, 0.15 ) }
    dend_13 { pt3dadd( -141.854, -387.259, -73.262, 0.15 ) }
    dend_13 { pt3dadd( -143.231, -385.931, -73.3452, 0.15 ) }
    dend_13 { pt3dadd( -144.088, -385.131, -73.4878, 0.15 ) }
    dend_13 { pt3dadd( -144.483, -384.797, -73.5716, 0.15 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 27/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -72.0721, 87.5969, 0.55149, 0.59 ) }
    dend_80 { pt3dadd( -71.8676, 87.7775, 0.774597, 0.59 ) }
    dend_80 { pt3dadd( -70.9053, 88.5199, 1.59545, 0.29 ) }
    dend_80 { pt3dadd( -70.6011, 88.7154, 1.78547, 0.29 ) }
    dend_80 { pt3dadd( -70.1557, 89.0018, 2.02347, 0.15 ) }
    dend_80 { pt3dadd( -69.4242, 89.4607, 2.37797, 0.07 ) }
    dend_80 { pt3dadd( -68.9245, 89.7461, 2.59801, 0.07 ) }
    dend_80 { pt3dadd( -68.3651, 90.0214, 2.78217, 0.07 ) }
    dend_80 { pt3dadd( -67.474, 90.4056, 2.99044, 0.07 ) }
    dend_80 { pt3dadd( -66.04, 90.9697, 3.36162, 0.07 ) }
    dend_80 { pt3dadd( -65.7011, 91.0968, 3.45308, 0.07 ) }
    dend_80 { pt3dadd( -65.0633, 91.3283, 3.61846, 0.07 ) }
    dend_80 { pt3dadd( -64.3704, 91.5927, 3.82761, 0.07 ) }
    dend_80 { pt3dadd( -64.1255, 91.6947, 3.90833, 0.37 ) }
    dend_80 { pt3dadd( -63.2271, 92.0592, 4.19971, 0.15 ) }
    dend_80 { pt3dadd( -62.7549, 92.2341, 4.33741, 0.15 ) }
    dend_80 { pt3dadd( -62.2173, 92.483, 4.50107, 0.15 ) }
    dend_80 { pt3dadd( -61.7495, 92.7317, 4.65056, 0.15 ) }
    dend_80 { pt3dadd( -61.1881, 93.045, 4.82901, 0.15 ) }
    dend_80 { pt3dadd( -60.4759, 93.4249, 5.02291, 0.15 ) }
    dend_80 { pt3dadd( -60.1889, 93.5622, 5.06966, 0.15 ) }
    dend_80 { pt3dadd( -59.5072, 93.8364, 5.18233, 0.15 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 49/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -72.0721, 87.5969, 0.55149, 0.37 ) }
    dend_79 { pt3dadd( -72.6798, 87.7078, 0.391933, 0.37 ) }
    dend_79 { pt3dadd( -73.1116, 87.7888, 0.312824, 0.37 ) }
    dend_79 { pt3dadd( -73.6924, 87.9086, 0.232675, 0.44 ) }
    dend_79 { pt3dadd( -74.0738, 87.9942, 0.00421548, 0.66 ) }
    dend_79 { pt3dadd( -74.4546, 88.0796, -0.223854, 0.66 ) }
    dend_79 { pt3dadd( -75.0253, 88.2076, -0.565673, 0.52 ) }
    dend_79 { pt3dadd( -75.7928, 88.3804, -1.08599, 0.29 ) }
    dend_79 { pt3dadd( -76.2266, 88.4812, -1.4479, 0.37 ) }
    dend_79 { pt3dadd( -78.5789, 89.0667, -3.92792, 0.37 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 59/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -67.0642, 82.438, 16.4844, 0.96 ) }
    dend_75 { pt3dadd( -67.7116, 82.652, 16.5797, 0.66 ) }
    dend_75 { pt3dadd( -68.1606, 82.7961, 16.6498, 0.66 ) }
    dend_75 { pt3dadd( -68.6777, 82.9517, 16.7294, 0.59 ) }
    dend_75 { pt3dadd( -69.3821, 83.145, 16.8508, 0.52 ) }
    dend_75 { pt3dadd( -71.3019, 83.6167, 17.1886, 0.52 ) }
    dend_75 { pt3dadd( -72.17, 83.8075, 17.3368, 0.59 ) }
    dend_75 { pt3dadd( -72.5667, 83.8924, 17.4142, 0.81 ) }
    dend_75 { pt3dadd( -73.0849, 83.9327, 17.5199, 0.52 ) }
    dend_75 { pt3dadd( -73.669, 83.9015, 17.6479, 0.52 ) }
    dend_75 { pt3dadd( -74.4348, 83.7572, 17.7779, 0.52 ) }
    dend_75 { pt3dadd( -75.2218, 83.5035, 17.8651, 0.52 ) }
    dend_75 { pt3dadd( -76.102, 83.1883, 17.9116, 0.52 ) }
    dend_75 { pt3dadd( -78.152, 82.464, 17.9005, 0.52 ) }
    dend_75 { pt3dadd( -78.7701, 82.2541, 17.864, 0.52 ) }
    dend_75 { pt3dadd( -79.9079, 81.9042, 17.728, 0.59 ) }
    dend_75 { pt3dadd( -80.5818, 81.7341, 17.6087, 0.74 ) }
    dend_75 { pt3dadd( -80.8131, 81.6985, 17.5526, 0.88 ) }
    dend_75 { pt3dadd( -81.6525, 81.7213, 17.2941, 0.88 ) }
    dend_75 { pt3dadd( -81.9838, 81.8195, 17.1893, 0.74 ) }
    dend_75 { pt3dadd( -82.4274, 82.0139, 17.0797, 0.59 ) }
    dend_75 { pt3dadd( -82.9819, 82.2952, 16.9857, 0.37 ) }
    dend_75 { pt3dadd( -83.3851, 82.5122, 16.9578, 0.29 ) }
    dend_75 { pt3dadd( -83.9434, 82.8043, 16.9403, 0.37 ) }
    dend_75 { pt3dadd( -84.6588, 83.1593, 16.9489, 0.52 ) }
    dend_75 { pt3dadd( -86.216, 83.8694, 17.0735, 0.52 ) }
    dend_75 { pt3dadd( -86.7528, 84.0809, 17.151, 0.59 ) }
    dend_75 { pt3dadd( -88.0095, 84.4677, 17.4072, 0.66 ) }
    dend_75 { pt3dadd( -88.981, 84.6758, 17.6468, 0.66 ) }
    dend_75 { pt3dadd( -89.4032, 84.7229, 17.7683, 0.66 ) }
    dend_75 { pt3dadd( -90.4108, 84.7477, 18.1232, 0.66 ) }
    dend_75 { pt3dadd( -91.0693, 84.7214, 18.3558, 0.66 ) }
    dend_75 { pt3dadd( -91.6295, 84.7225, 18.5179, 0.66 ) }
    dend_75 { pt3dadd( -91.9602, 84.7376, 18.596, 0.66 ) }
    dend_75 { pt3dadd( -92.4639, 84.767, 18.7299, 0.66 ) }
    dend_75 { pt3dadd( -93.4401, 84.8076, 18.9461, 0.66 ) }
    dend_75 { pt3dadd( -94.2179, 84.8382, 19.0978, 0.66 ) }
    dend_75 { pt3dadd( -95.1055, 84.8702, 19.2771, 0.66 ) }
    dend_75 { pt3dadd( -95.8673, 84.8881, 19.4259, 0.66 ) }
    dend_75 { pt3dadd( -96.8067, 84.9059, 19.5865, 0.59 ) }
    dend_75 { pt3dadd( -98.0385, 84.8969, 19.7151, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_75 { pt3dadd( -98.9009, 84.8676, 19.7544, 0.66 ) }
    dend_75 { pt3dadd( -99.8792, 84.8146, 19.7849, 0.66 ) }
    dend_75 { pt3dadd( -100.206, 84.7946, 19.7859, 0.66 ) }
    dend_75 { pt3dadd( -101.852, 84.7106, 19.7034, 0.66 ) }
    dend_75 { pt3dadd( -102.945, 84.7054, 19.5865, 0.96 ) }
    dend_75 { pt3dadd( -103.192, 84.719, 19.5408, 0.96 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 6/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -67.0642, 82.438, 16.4844, 0.52 ) }
    dend_74 { pt3dadd( -67.2379, 83.5176, 16.4863, 0.52 ) }
    dend_74 { pt3dadd( -67.4594, 84.7352, 16.438, 0.37 ) }
    dend_74 { pt3dadd( -67.5866, 85.2615, 16.4076, 0.37 ) }
    dend_74 { pt3dadd( -67.8931, 86.2323, 16.3831, 0.29 ) }
    dend_74 { pt3dadd( -68.1047, 86.7941, 16.3818, 0.52 ) }
    dend_74 { pt3dadd( -68.3127, 87.2917, 16.3796, 0.52 ) }
    dend_74 { pt3dadd( -68.861, 88.326, 16.3549, 0.29 ) }
    dend_74 { pt3dadd( -69.3155, 89.0727, 16.3259, 0.22 ) }
    dend_74 { pt3dadd( -69.8457, 89.8075, 16.264, 0.22 ) }
    dend_74 { pt3dadd( -70.2929, 90.3147, 16.1972, 0.22 ) }
    dend_74 { pt3dadd( -70.5501, 90.5848, 16.1523, 0.37 ) }
    dend_74 { pt3dadd( -71.0012, 91.0458, 16.0667, 0.59 ) }
    dend_74 { pt3dadd( -71.3419, 91.4076, 15.999, 0.44 ) }
    dend_74 { pt3dadd( -71.7154, 91.8648, 15.9118, 0.29 ) }
    dend_74 { pt3dadd( -72.0705, 92.3575, 15.8216, 0.29 ) }
    dend_74 { pt3dadd( -72.4393, 92.8822, 15.7551, 0.29 ) }
    dend_74 { pt3dadd( -72.917, 93.5686, 15.7116, 0.29 ) }
    dend_74 { pt3dadd( -73.189, 93.9423, 15.7066, 0.29 ) }
    dend_74 { pt3dadd( -73.708, 94.5734, 15.7827, 0.22 ) }
    dend_74 { pt3dadd( -74.076, 94.9813, 15.8886, 0.15 ) }
    dend_74 { pt3dadd( -74.4415, 95.3415, 16.0082, 0.59 ) }
    dend_74 { pt3dadd( -74.6218, 95.4992, 16.0825, 0.59 ) }
    dend_74 { pt3dadd( -75.3314, 96.0733, 16.3761, 0.15 ) }
    dend_74 { pt3dadd( -76.4085, 96.9049, 16.7999, 0.29 ) }
    dend_74 { pt3dadd( -76.7986, 97.1933, 16.9323, 0.44 ) }
    dend_74 { pt3dadd( -77.8533, 97.971, 17.2506, 0.29 ) }
    dend_74 { pt3dadd( -78.5793, 98.523, 17.4455, 0.37 ) }
    dend_74 { pt3dadd( -79.5421, 99.2669, 17.6688, 0.15 ) }
    dend_74 { pt3dadd( -80.0313, 99.6523, 17.7597, 0.15 ) }
    dend_74 { pt3dadd( -80.8705, 100.32, 17.8953, 0.15 ) }
    dend_74 { pt3dadd( -81.1113, 100.507, 17.9443, 0.29 ) }
    dend_74 { pt3dadd( -81.8401, 101.053, 18.1183, 0.29 ) }
    dend_74 { pt3dadd( -82.7751, 101.724, 18.3407, 0.29 ) }
    dend_74 { pt3dadd( -83.0916, 101.944, 18.4326, 0.52 ) }
    dend_74 { pt3dadd( -83.935, 102.527, 18.6979, 0.37 ) }
    dend_74 { pt3dadd( -84.7243, 103.101, 18.9612, 0.29 ) }
    dend_74 { pt3dadd( -85.2788, 103.508, 19.1454, 0.22 ) }
    dend_74 { pt3dadd( -85.8032, 103.892, 19.3112, 0.22 ) }
    dend_74 { pt3dadd( -86.0863, 104.106, 19.393, 0.22 ) }
    dend_74 { pt3dadd( -86.4689, 104.397, 19.4863, 0.22 ) }
    dend_74 { pt3dadd( -87.0516, 104.86, 19.5419, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 48/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.40163, -321.228, -26.3187, 0.44 ) }
    dend_27 { pt3dadd( -8.45146, -321.897, -26.4057, 0.44 ) }
    dend_27 { pt3dadd( -8.48859, -322.915, -26.5178, 0.44 ) }
    dend_27 { pt3dadd( -8.52814, -323.952, -26.5519, 0.59 ) }
    dend_27 { pt3dadd( -8.59192, -324.819, -26.541, 0.81 ) }
    dend_27 { pt3dadd( -8.66077, -325.465, -26.5173, 0.81 ) }
    dend_27 { pt3dadd( -8.79308, -326.365, -26.4708, 0.37 ) }
    dend_27 { pt3dadd( -8.96811, -327.139, -26.4048, 0.37 ) }
    dend_27 { pt3dadd( -9.2756, -328.138, -26.2866, 0.59 ) }
    dend_27 { pt3dadd( -9.62496, -329.001, -26.115, 0.74 ) }
    dend_27 { pt3dadd( -9.76548, -329.295, -26.05, 0.52 ) }
    dend_27 { pt3dadd( -10.076, -329.877, -25.9192, 0.37 ) }
    dend_27 { pt3dadd( -10.5057, -330.616, -25.7381, 0.37 ) }
    dend_27 { pt3dadd( -11.1755, -331.739, -25.4743, 0.37 ) }
    dend_27 { pt3dadd( -11.7857, -332.797, -25.2508, 0.29 ) }
    dend_27 { pt3dadd( -12.4127, -333.969, -25.0039, 0.29 ) }
    dend_27 { pt3dadd( -12.6383, -334.409, -24.9147, 0.88 ) }
    dend_27 { pt3dadd( -13.1587, -335.436, -24.7217, 0.44 ) }
    dend_27 { pt3dadd( -13.7328, -336.546, -24.5442, 0.44 ) }
    dend_27 { pt3dadd( -13.9686, -336.996, -24.4903, 0.44 ) }
    dend_27 { pt3dadd( -14.4521, -337.897, -24.431, 0.44 ) }
    dend_27 { pt3dadd( -14.7501, -338.418, -24.4056, 0.44 ) }
    dend_27 { pt3dadd( -15.35, -339.437, -24.4044, 0.44 ) }
    dend_27 { pt3dadd( -16.0446, -340.555, -24.46, 0.44 ) }
    dend_27 { pt3dadd( -16.5021, -341.246, -24.5072, 0.44 ) }
    dend_27 { pt3dadd( -17.0132, -341.992, -24.5422, 0.44 ) }
    dend_27 { pt3dadd( -17.6526, -342.907, -24.5641, 0.44 ) }
    dend_27 { pt3dadd( -18.1051, -343.588, -24.5276, 0.37 ) }
    dend_27 { pt3dadd( -18.7726, -344.666, -24.4745, 0.37 ) }
    dend_27 { pt3dadd( -19.1344, -345.318, -24.3975, 0.59 ) }
    dend_27 { pt3dadd( -19.6565, -346.358, -24.2231, 0.59 ) }
    dend_27 { pt3dadd( -20.3882, -347.925, -23.9642, 0.59 ) }
    dend_27 { pt3dadd( -20.9509, -349.191, -23.7566, 0.59 ) }
    dend_27 { pt3dadd( -21.6175, -350.817, -23.5082, 0.44 ) }
    dend_27 { pt3dadd( -22.2928, -352.804, -23.2914, 0.44 ) }
    dend_27 { pt3dadd( -22.396, -353.173, -23.2601, 0.44 ) }
    dend_27 { pt3dadd( -22.7135, -354.74, -23.1858, 0.66 ) }
    dend_27 { pt3dadd( -22.7929, -355.399, -23.1641, 0.66 ) }
    dend_27 { pt3dadd( -22.8815, -356.798, -23.1452, 0.59 ) }
    dend_27 { pt3dadd( -22.8644, -358.156, -23.0833, 0.59 ) }
    dend_27 { pt3dadd( -22.7821, -359.03, -23.0739, 0.59 ) }
    dend_27 { pt3dadd( -22.6186, -360.136, -23.0356, 0.59 ) }
    dend_27 { pt3dadd( -22.3702, -361.373, -22.9595, 0.44 ) }
    dend_27 { pt3dadd( -22.1858, -362.284, -22.9112, 0.44 ) }
    dend_27 { pt3dadd( -22.0047, -363.262, -22.8718, 0.44 ) }
    dend_27 { pt3dadd( -21.8256, -364.6, -22.8232, 0.44 ) }
    dend_27 { pt3dadd( -21.8025, -365.061, -22.811, 0.74 ) }
    dend_27 { pt3dadd( -21.8647, -366.381, -22.7633, 0.37 ) }
    dend_27 { pt3dadd( -21.9505, -367.118, -22.7319, 0.37 ) }
    dend_27 { pt3dadd( -22.1148, -368.145, -22.6836, 0.37 ) }
    dend_27 { pt3dadd( -22.4109, -369.77, -22.6035, 0.29 ) }
    dend_27 { pt3dadd( -22.5983, -370.937, -22.5456, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_27 { pt3dadd( -22.6717, -371.88, -22.5113, 0.29 ) }
    dend_27 { pt3dadd( -22.629, -373.312, -22.483, 0.29 ) }
    dend_27 { pt3dadd( -22.5669, -373.748, -22.482, 0.66 ) }
    dend_27 { pt3dadd( -22.3272, -374.604, -22.4961, 0.66 ) }
    dend_27 { pt3dadd( -21.8967, -375.608, -22.5386, 0.29 ) }
    dend_27 { pt3dadd( -21.2082, -376.855, -22.5997, 0.29 ) }
    dend_27 { pt3dadd( -20.422, -378.085, -22.6651, 0.29 ) }
    dend_27 { pt3dadd( -19.8097, -378.974, -22.7134, 0.29 ) }
    dend_27 { pt3dadd( -19.0715, -379.991, -22.7978, 0.29 ) }
    dend_27 { pt3dadd( -18.3848, -380.865, -22.8906, 0.29 ) }
    dend_27 { pt3dadd( -17.8716, -381.473, -22.9993, 0.44 ) }
    dend_27 { pt3dadd( -17.1778, -382.238, -23.1812, 0.44 ) }
    dend_27 { pt3dadd( -16.3507, -383.078, -23.4262, 0.44 ) }
    dend_27 { pt3dadd( -15.462, -383.95, -23.7074, 0.44 ) }
    dend_27 { pt3dadd( -14.4282, -384.999, -24.0228, 0.44 ) }
    dend_27 { pt3dadd( -13.3011, -386.207, -24.339, 0.44 ) }
    dend_27 { pt3dadd( -12.7969, -386.809, -24.4813, 0.44 ) }
    dend_27 { pt3dadd( -12.0831, -387.733, -24.671, 0.44 ) }
    dend_27 { pt3dadd( -11.6877, -388.313, -24.762, 0.44 ) }
    dend_27 { pt3dadd( -10.9733, -389.601, -24.9075, 0.44 ) }
    dend_27 { pt3dadd( -10.5854, -390.511, -25.0271, 0.44 ) }
    dend_27 { pt3dadd( -10.105, -391.815, -25.2185, 0.29 ) }
    dend_27 { pt3dadd( -9.89661, -392.458, -25.3464, 0.96 ) }
    dend_27 { pt3dadd( -9.66204, -393.292, -25.5646, 0.44 ) }
    dend_27 { pt3dadd( -9.35192, -394.561, -25.9654, 0.44 ) }
    dend_27 { pt3dadd( -8.94762, -396.135, -26.8008, 0.44 ) }
    dend_27 { pt3dadd( -8.76793, -396.709, -27.2122, 0.66 ) }
    dend_27 { pt3dadd( -8.6536, -396.981, -27.4774, 0.66 ) }
    dend_27 { pt3dadd( -8.32107, -397.553, -28.2781, 0.44 ) }
    dend_27 { pt3dadd( -8.1254, -397.784, -28.7665, 0.44 ) }
    dend_27 { pt3dadd( -7.02749, -398.817, -31.4957, 0.44 ) }
    dend_27 { pt3dadd( -6.83538, -398.963, -31.9723, 0.44 ) }
    dend_27 { pt3dadd( -6.29815, -399.353, -33.3477, 0.44 ) }
    dend_27 { pt3dadd( -5.60622, -399.763, -35.0871, 0.44 ) }
    dend_27 { pt3dadd( -4.79291, -400.121, -37.0925, 0.44 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 35/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.40163, -321.228, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -9.43602, -321.357, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -10.8381, -321.531, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -11.583, -321.624, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -12.6394, -321.755, -26.3187, 0.44 ) }
    dend_26 { pt3dadd( -13.3048, -321.838, -26.3187, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 52.5768, -474.657, -35.5185, 0.44 ) }
    dend_22 { pt3dadd( 52.9423, -476.501, -35.828, 0.44 ) }
    dend_22 { pt3dadd( 53.0464, -477.128, -35.9414, 0.44 ) }
    dend_22 { pt3dadd( 53.24, -478.538, -36.2273, 0.44 ) }
    dend_22 { pt3dadd( 53.4947, -480.373, -36.6121, 0.44 ) }
    dend_22 { pt3dadd( 53.6361, -481.399, -36.8365, 0.44 ) }
    dend_22 { pt3dadd( 53.8232, -482.766, -37.1354, 0.44 ) }
    dend_22 { pt3dadd( 54.0387, -484.35, -37.503, 0.44 ) }
    dend_22 { pt3dadd( 54.1474, -485.115, -37.6947, 0.44 ) }
    dend_22 { pt3dadd( 54.2645, -485.844, -37.8976, 0.66 ) }
    dend_22 { pt3dadd( 54.4098, -486.658, -38.13, 0.29 ) }
    dend_22 { pt3dadd( 54.8386, -488.918, -38.6684, 0.29 ) }
    dend_22 { pt3dadd( 54.9625, -489.545, -38.7944, 0.29 ) }
    dend_22 { pt3dadd( 55.2335, -490.834, -38.9779, 0.29 ) }
    dend_22 { pt3dadd( 55.3583, -491.61, -39.0461, 0.37 ) }
    dend_22 { pt3dadd( 55.4204, -492.387, -39.0849, 0.66 ) }
    dend_22 { pt3dadd( 55.397, -493.751, -39.0823, 0.22 ) }
    dend_22 { pt3dadd( 55.2052, -494.71, -39.0272, 0.22 ) }
    dend_22 { pt3dadd( 54.8313, -495.716, -38.8986, 0.22 ) }
    dend_22 { pt3dadd( 54.2467, -496.961, -38.6844, 0.22 ) }
    dend_22 { pt3dadd( 53.9138, -497.553, -38.5709, 0.22 ) }
    dend_22 { pt3dadd( 53.4565, -498.223, -38.4592, 0.22 ) }
    dend_22 { pt3dadd( 52.5467, -499.287, -38.3554, 0.22 ) }
    dend_22 { pt3dadd( 51.7497, -500.016, -38.2566, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 52.5768, -474.657, -35.5185, 0.44 ) }
    dend_21 { pt3dadd( 51.8862, -475.692, -35.565, 0.44 ) }
    dend_21 { pt3dadd( 50.8446, -477.191, -35.6913, 0.44 ) }
    dend_21 { pt3dadd( 50.0146, -478.374, -35.9208, 0.44 ) }
    dend_21 { pt3dadd( 48.9405, -479.801, -36.3395, 0.44 ) }
    dend_21 { pt3dadd( 48.1453, -480.858, -36.6495, 0.44 ) }
    dend_21 { pt3dadd( 47.308, -481.97, -36.9759, 0.44 ) }
    dend_21 { pt3dadd( 46.5542, -482.93, -37.3275, 0.44 ) }
    dend_21 { pt3dadd( 45.4039, -484.282, -37.9979, 0.44 ) }
    dend_21 { pt3dadd( 44.652, -485.093, -38.5516, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 75/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -103.192, 84.719, 19.5408, 0.59 ) }
    dend_77 { pt3dadd( -104.167, 84.9553, 19.2644, 0.59 ) }
    dend_77 { pt3dadd( -104.714, 85.0934, 19.1144, 0.59 ) }
    dend_77 { pt3dadd( -105.464, 85.274, 18.9332, 0.52 ) }
    dend_77 { pt3dadd( -106.805, 85.5832, 18.6486, 0.52 ) }
    dend_77 { pt3dadd( -108.174, 85.8647, 18.3853, 0.52 ) }
    dend_77 { pt3dadd( -109.633, 86.123, 18.1315, 0.52 ) }
    dend_77 { pt3dadd( -109.974, 86.1785, 18.0873, 0.52 ) }
    dend_77 { pt3dadd( -111.097, 86.3857, 17.9203, 0.52 ) }
    dend_77 { pt3dadd( -112.045, 86.5889, 17.7699, 0.52 ) }
    dend_77 { pt3dadd( -112.616, 86.6999, 17.68, 0.52 ) }
    dend_77 { pt3dadd( -113.407, 86.8531, 17.5416, 0.59 ) }
    dend_77 { pt3dadd( -113.577, 86.8861, 17.5124, 0.59 ) }
    dend_77 { pt3dadd( -115.322, 87.1735, 17.1858, 0.44 ) }
    dend_77 { pt3dadd( -115.989, 87.2611, 17.0462, 0.44 ) }
    dend_77 { pt3dadd( -116.434, 87.2785, 16.9551, 0.66 ) }
    dend_77 { pt3dadd( -117.094, 87.2252, 16.8724, 0.66 ) }
    dend_77 { pt3dadd( -117.77, 87.0735, 16.8508, 0.66 ) }
    dend_77 { pt3dadd( -118.454, 86.8114, 16.8904, 0.81 ) }
    dend_77 { pt3dadd( -118.786, 86.6243, 16.9307, 0.96 ) }
    dend_77 { pt3dadd( -119.487, 86.1665, 17.0207, 0.96 ) }
    dend_77 { pt3dadd( -120.341, 85.56, 17.1336, 0.81 ) }
    dend_77 { pt3dadd( -120.69, 85.2878, 17.1793, 0.81 ) }
    dend_77 { pt3dadd( -121.882, 84.1767, 17.3301, 0.29 ) }
    dend_77 { pt3dadd( -122.86, 83.101, 17.504, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_77 { pt3dadd( -123.177, 82.7109, 17.5711, 0.52 ) }
    dend_77 { pt3dadd( -123.584, 82.1438, 17.6678, 0.52 ) }
    dend_77 { pt3dadd( -123.888, 81.6621, 17.7428, 0.52 ) }
    dend_77 { pt3dadd( -124.647, 80.3417, 17.9741, 0.29 ) }
    dend_77 { pt3dadd( -125.166, 79.351, 18.1593, 0.29 ) }
    dend_77 { pt3dadd( -125.537, 78.6946, 18.2866, 0.29 ) }
    dend_77 { pt3dadd( -125.692, 78.4674, 18.3273, 0.29 ) }
    dend_77 { pt3dadd( -125.978, 78.1405, 18.364, 0.52 ) }
    dend_77 { pt3dadd( -126.213, 77.9531, 18.3611, 0.52 ) }
    dend_77 { pt3dadd( -126.875, 77.6043, 18.2768, 0.52 ) }
    dend_77 { pt3dadd( -127.256, 77.4431, 18.1983, 0.52 ) }
    dend_77 { pt3dadd( -127.758, 77.2605, 18.0985, 0.52 ) }
    dend_77 { pt3dadd( -128.381, 77.0212, 17.9875, 0.52 ) }
    dend_77 { pt3dadd( -129.01, 76.7645, 17.9079, 0.44 ) }
    dend_77 { pt3dadd( -129.652, 76.4946, 17.9113, 0.52 ) }
    dend_77 { pt3dadd( -130.138, 76.2925, 17.968, 0.52 ) }
    dend_77 { pt3dadd( -130.599, 76.1123, 18.0522, 0.29 ) }
    dend_77 { pt3dadd( -131.431, 75.8072, 18.2931, 0.29 ) }
    dend_77 { pt3dadd( -132.321, 75.4939, 18.5613, 0.52 ) }
    dend_77 { pt3dadd( -133.464, 75.0671, 18.8859, 0.37 ) }
    dend_77 { pt3dadd( -133.922, 74.8839, 19.002, 0.29 ) }
    dend_77 { pt3dadd( -134.919, 74.4737, 19.2284, 0.29 ) }
    dend_77 { pt3dadd( -135.939, 74.0586, 19.4343, 0.37 ) }
    dend_77 { pt3dadd( -139.136, 72.8266, 19.9818, 0.29 ) }
    dend_77 { pt3dadd( -140.25, 72.3977, 20.1252, 0.66 ) }
    dend_77 { pt3dadd( -141.094, 72.072, 20.1913, 0.59 ) }
    dend_77 { pt3dadd( -141.309, 71.9834, 20.2044, 0.59 ) }
    dend_77 { pt3dadd( -141.827, 71.7488, 20.2213, 0.44 ) }
    dend_77 { pt3dadd( -142.409, 71.4822, 20.2344, 0.59 ) }
    dend_77 { pt3dadd( -142.963, 71.2504, 20.2809, 0.44 ) }
    dend_77 { pt3dadd( -143.815, 70.95, 20.3321, 0.44 ) }
    dend_77 { pt3dadd( -144.93, 70.5781, 20.3471, 0.37 ) }
    dend_77 { pt3dadd( -145.385, 70.436, 20.3151, 0.37 ) }
    dend_77 { pt3dadd( -146.502, 70.1185, 20.1604, 0.52 ) }
    dend_77 { pt3dadd( -147.473, 69.8621, 19.9822, 0.52 ) }
    dend_77 { pt3dadd( -148.581, 69.5857, 19.7673, 0.52 ) }
    dend_77 { pt3dadd( -149.698, 69.3264, 19.5389, 0.52 ) }
    dend_77 { pt3dadd( -150.727, 69.1175, 19.3085, 0.44 ) }
    dend_77 { pt3dadd( -151.495, 68.9618, 19.1274, 0.44 ) }
    dend_77 { pt3dadd( -152.461, 68.7218, 18.8724, 0.44 ) }
    dend_77 { pt3dadd( -153.369, 68.4293, 18.6697, 0.59 ) }
    dend_77 { pt3dadd( -153.76, 68.2675, 18.6125, 0.59 ) }
    dend_77 { pt3dadd( -154.2, 68.0344, 18.563, 0.74 ) }
    dend_77 { pt3dadd( -154.581, 67.7779, 18.5312, 0.88 ) }
    dend_77 { pt3dadd( -155.359, 67.1502, 18.431, 0.37 ) }
    dend_77 { pt3dadd( -155.961, 66.5753, 18.3293, 0.29 ) }
    dend_77 { pt3dadd( -156.397, 66.1145, 18.246, 0.74 ) }
    dend_77 { pt3dadd( -156.81, 65.6354, 18.1759, 0.74 ) }
    dend_77 { pt3dadd( -157.169, 65.1907, 18.1275, 0.74 ) }
    dend_77 { pt3dadd( -157.569, 64.682, 18.0817, 0.66 ) }
    dend_77 { pt3dadd( -158.2, 63.8637, 18.0308, 0.66 ) }
    dend_77 { pt3dadd( -158.581, 63.3439, 18.0079, 0.66 ) }
    dend_77 { pt3dadd( -158.864, 62.931, 17.9959, 0.74 ) }
    dend_77 { pt3dadd( -159.146, 62.515, 17.9902, 0.44 ) }
    dend_77 { pt3dadd( -159.468, 62.057, 18.0061, 0.44 ) }
    dend_77 { pt3dadd( -159.924, 61.4702, 18.0561, 0.44 ) }
    dend_77 { pt3dadd( -160.477, 60.8351, 18.1442, 0.44 ) }
    dend_77 { pt3dadd( -160.897, 60.413, 18.2183, 0.44 ) }
    dend_77 { pt3dadd( -161.443, 59.9274, 18.3163, 0.44 ) }
    dend_77 { pt3dadd( -162.363, 59.1612, 18.4982, 0.44 ) }
    dend_77 { pt3dadd( -162.9, 58.7246, 18.6175, 0.44 ) }
    dend_77 { pt3dadd( -163.674, 58.1142, 18.7973, 0.44 ) }
    dend_77 { pt3dadd( -164.404, 57.524, 18.9709, 0.59 ) }
    dend_77 { pt3dadd( -164.809, 57.1718, 19.0721, 0.88 ) }
    dend_77 { pt3dadd( -165.416, 56.5959, 19.222, 0.44 ) }
    dend_77 { pt3dadd( -165.973, 56.0137, 19.3477, 0.44 ) }
    dend_77 { pt3dadd( -166.38, 55.5469, 19.4427, 0.44 ) }
    dend_77 { pt3dadd( -166.66, 55.1942, 19.5033, 0.44 ) }
    dend_77 { pt3dadd( -166.981, 54.7344, 19.5811, 0.44 ) }
    dend_77 { pt3dadd( -167.29, 54.2722, 19.6493, 0.44 ) }
    dend_77 { pt3dadd( -167.591, 53.8691, 19.6783, 0.44 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 71/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -103.192, 84.719, 19.5408, 0.52 ) }
    dend_76 { pt3dadd( -103.513, 84.5044, 20.066, 0.52 ) }
    dend_76 { pt3dadd( -104.524, 84.104, 21.3395, 0.37 ) }
    dend_76 { pt3dadd( -106.479, 83.6215, 23.212, 0.37 ) }
    dend_76 { pt3dadd( -106.835, 83.5455, 23.5008, 0.37 ) }
    dend_76 { pt3dadd( -107.574, 83.3757, 24.0272, 0.37 ) }
    dend_76 { pt3dadd( -108.179, 83.2157, 24.4521, 0.22 ) }
    dend_76 { pt3dadd( -109.093, 83.0503, 25.0373, 0.22 ) }
    dend_76 { pt3dadd( -109.834, 82.9739, 25.4368, 0.22 ) }
    dend_76 { pt3dadd( -111.051, 82.7828, 25.8092, 0.37 ) }
    dend_76 { pt3dadd( -111.77, 82.6654, 26.0427, 0.37 ) }
    dend_76 { pt3dadd( -112.446, 82.5205, 26.2836, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_0, dend_53, dend_52, dend_36, dend_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
    ModelViewParmSubset_2 = new SectionList()
    dend_51 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_0, dend_53, dend_52, dend_36, dend_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_51, dend_0, axon_0, dend_53, dend_52, dend_36, dend_1, axon_1, dend_66, dend_63, dend_54, dend_44, dend_37, dend_35, dend_2, dend_82, dend_67, dend_65, dend_64, dend_58, dend_55, dend_46, dend_45, dend_41, dend_38, dend_28, dend_3, dend_81, dend_68, dend_62, dend_59, dend_57, dend_56, dend_48, dend_47, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_7, dend_4, dend_70, dend_69, dend_61, dend_60, dend_50, dend_49, dend_32, dend_31, dend_15, dend_8, dend_6, dend_5, dend_71, dend_34, dend_33, dend_17, dend_16, dend_10, dend_9, dend_72, dend_23, dend_18, dend_12, dend_11, dend_78, dend_73, dend_25, dend_24, dend_20, dend_19, dend_14, dend_13, dend_80, dend_79, dend_75, dend_74, dend_27, dend_26, dend_22, dend_21, dend_77, dend_76]}
    ModelViewParmSubset_5 = new SectionList()
    dend_51 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_68 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_52 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_63 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_44 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_37 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_35 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_65 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_64 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_46 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_41 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_38 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_28 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_81 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_40 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_30 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_69 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_8 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_10 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_72 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_23 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_14 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_27 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_77 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_51 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_53 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_66 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_54 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_82 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_36 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_67 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_68 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_70 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_71 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_56 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_59 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_57 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_62 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_60 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_45 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_61 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_73 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_78 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_29 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_79 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_80 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_74 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_75 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_31 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_76 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_32 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_39 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_34 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_33 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_16 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_17 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_9 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_25 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_24 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_26 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_43 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_11 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_12 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_47 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_13 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_48 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_19 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_49 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_20 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_21 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_50 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_22 OneSecGrp_SectionRef_83.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_82, dend_82, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_71, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_51 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_71 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_78 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_52 nseg = 9
    dend_63 nseg = 3
    dend_44 nseg = 3
    dend_37 nseg = 3
    dend_35 nseg = 9
    dend_65 nseg = 11
    dend_64 nseg = 3
    dend_46 nseg = 17
    dend_41 nseg = 11
    dend_38 nseg = 3
    dend_28 nseg = 3
    dend_81 nseg = 11
    dend_40 nseg = 3
    dend_30 nseg = 3
    dend_7 nseg = 3
    dend_69 nseg = 3
    dend_15 nseg = 5
    dend_8 nseg = 7
    dend_6 nseg = 5
    dend_5 nseg = 19
    dend_10 nseg = 7
    dend_72 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 9
    dend_14 nseg = 5
    dend_27 nseg = 5
    dend_77 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_MC_62cf39b45d_0_0


