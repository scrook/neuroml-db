// Cell: cADpyr231_L6_UTPC_9d28264fcd_0_0
/*
{
  "id" : "cADpyr231_L6_UTPC_9d28264fcd_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.12491, 4.54947, 0.014993, 2.64062", "-5.50711, 4.09677, 0.00563454, 4.44252", "-4.88931, 3.64407, -0.00372396, 5.94799", "-4.2715, 3.19136, -0.0130825, 7.13406", "-3.6537, 2.73866, -0.022441, 8.2655", "-3.03589, 2.28596, -0.0317995, 9.29453", "-2.41809, 1.83326, -0.041158, 10.3736", "-1.80029, 1.38056, -0.0505165, 11.0642", "-1.18248, 0.927855, -0.059875, 11.6512", "-0.56468, 0.475153, -0.0692335, 11.955", "0.0531242, 0.0224506, -0.078592, 12.1495", "0.670928, -0.430251, -0.0879505, 12.2302", "1.28873, -0.882953, -0.097309, 12.1321", "1.90654, -1.33566, -0.106668, 11.9546", "2.52434, -1.78836, -0.116026, 11.3256", "3.14214, -2.24106, -0.125385, 10.6359", "3.75995, -2.69376, -0.134743, 9.83304", "4.37775, -3.14646, -0.144102, 8.92143", "4.99555, -3.59917, -0.15346, 7.64149", "5.61336, -4.05187, -0.162819, 5.66644", "6.23116, -4.50457, -0.172177, 3.08284" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-3.16351, 6.05747, -2.8038, 1.8", "-3.64668, 7.0493, -3.28287, 1.8", "-3.96041, 8.20157, -3.58568, 1.8", "-4.24737, 9.33016, -3.90096, 1.8", "-4.68266, 11.1363, -4.40877, 1.68", "-5.00328, 12.5385, -4.79287, 1.56", "-5.20268, 13.4362, -5.04277, 1.56", "-5.62196, 15.2595, -5.69132, 1.32", "-5.79966, 16.0383, -5.98193, 1.32", "-5.89826, 16.4979, -6.1499, 1.56", "-6.01839, 17.2415, -6.36311, 1.56", "-6.18312, 18.739, -6.75938, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.08791, 1.2939, -6.53524, 0.24", "5.22589, 2.61393, -15.1904, 0.24", "4.19184, 5.54842, -16.7501, 0.12", "3.81719, 6.24718, -17.1435, 0.12", "3.71736, 6.38825, -17.2216, 0.12", "3.25278, 6.95094, -17.5203, 0.12", "3.13199, 7.07706, -17.5942, 0.12", "2.27683, 7.9474, -18.0555, 0.12", "2.19331, 8.02319, -18.128, 0.12", "1.49523, 8.65538, -18.8945, 0.12", "1.2988, 8.86193, -19.1447, 0.12", "0.245524, 10.1337, -20.7353, 0.12", "0.169078, 10.244, -20.8692, 0.12", "-0.83843, 11.8323, -22.6304, 0.12", "-0.903775, 11.9423, -22.7282, 0.12", "-1.39002, 12.6916, -23.377, 0.12", "-1.56719, 12.939, -23.583, 0.12", "-3.40537, 15.1548, -25.357, 0.12", "-4.42574, 16.3163, -26.2686, 0.12", "-6.27111, 18.1735, -27.7503, 0.12", "-7.82704, 19.526, -28.9633, 0.12", "-7.92022, 19.5913, -29.0342, 0.12", "-8.69232, 20.0374, -29.6, 0.12", "-8.82891, 20.0988, -29.7333, 0.12", "-9.95546, 20.5729, -31.2338, 0.12", "-10.0927, 20.6487, -31.4733, 0.12", "-10.6407, 21.1631, -32.6629, 0.12", "-10.7115, 21.2598, -32.8509, 0.12", "-11.9682, 23.5407, -36.7618, 0.12", "-12.0024, 23.6111, -36.8708, 0.12", "-12.3651, 24.5152, -38.1349, 0.12", "-12.388, 24.5687, -38.2023, 0.12", "-13.4087, 26.6387, -40.4358, 0.12", "-13.5295, 26.84, -40.6224, 0.12", "-14.0862, 27.5518, -41.2236, 0.12", "-14.1994, 27.6788, -41.3459, 0.12", "-15.2058, 28.6787, -42.4943, 0.12", "-15.9198, 29.383, -43.3595, 0.12", "-16.0053, 29.4899, -43.4737, 0.12", "-17.231, 31.5663, -45.3903, 0.12", "-17.3417, 31.8095, -45.5954, 0.12", "-17.7186, 32.8432, -46.3942, 0.12", "-17.7591, 32.9929, -46.5028, 0.12", "-18.2061, 35.3718, -48.1788, 0.12", "-18.4557, 36.8549, -49.2484, 0.12", "-18.4804, 37.0255, -49.3676, 0.12", "-18.6128, 37.9444, -50.0468, 0.12", "-18.6244, 38.0226, -50.1083, 0.12", "-18.9489, 40.2323, -51.97, 0.12", "-19.3067, 42.5296, -54.1459, 0.12", "-19.3183, 42.5895, -54.2108, 0.12", "-19.6163, 43.8581, -55.6789, 0.12", "-19.65, 43.9696, -55.8137, 0.12", "-20.2219, 45.4633, -57.689, 0.12", "-20.253, 45.5416, -57.7933, 0.12", "-20.815, 47.6187, -61.3585, 0.12", "-20.8481, 47.782, -61.6735, 0.12", "-20.9264, 48.2712, -62.6331, 0.12", "-20.9641, 48.5828, -63.2407, 0.12", "-21.1322, 50.7688, -67.3336, 0.12", "-21.2346, 53.8667, -72.7377, 0.12", "-21.234, 53.9066, -72.8046, 0.12", "-21.2158, 55.3695, -75.269, 0.12", "-21.2126, 55.5125, -75.5078, 0.12", "-21.2146, 57.4319, -78.627, 0.12", "-21.2248, 57.5423, -78.7939, 0.12", "-21.7787, 61.173, -83.652, 0.12", "-21.7896, 61.25, -83.7612, 0.12", "-21.8958, 62.1096, -85.0746, 0.12", "-21.9112, 62.218, -85.2294, 0.12", "-22.1167, 63.3947, -86.8806, 0.12", "-22.1298, 63.4499, -86.9632, 0.12", "-22.8017, 65.628, -90.322, 0.12", "-22.8286, 65.705, -90.4302, 0.12", "-23.2498, 66.8452, -92.1079, 0.12", "-23.5432, 67.663, -93.3286, 0.12", "-24.3876, 70.1897, -96.926, 0.12", "-24.415, 70.2693, -97.0305, 0.12", "-25.2447, 72.6021, -99.7298, 0.12", "-26.8092, 77.2277, -104.792, 0.12", "-26.8344, 77.3225, -104.883, 0.12", "-27.195, 78.9978, -106.191, 0.12", "-27.2882, 79.4912, -106.534, 0.12", "-27.5275, 80.9018, -107.505, 0.12", "-27.5373, 80.9753, -107.555, 0.12", "-28.4323, 88.4518, -111.359, 0.12", "-28.692, 90.6708, -112.552, 0.12" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.17376, 0.919378, -6.85126, 0.48", "2.84327, 1.80961, -14.3776, 0.48", "1.90793, 2.11431, -14.509, 0.48", "1.8093, 2.15394, -14.5597, 0.48", "1.08221, 2.46674, -15.0479, 0.36", "0.994408, 2.49901, -15.1281, 0.36", "0.247815, 2.75779, -16.006, 0.36", "0.170817, 2.78258, -16.0989, 0.36", "-1.69048, 3.33328, -18.3293, 0.36", "-1.72766, 3.34319, -18.3725, 0.36", "-3.02495, 3.65477, -19.7707, 0.36", "-3.16208, 3.68203, -19.9063, 0.36", "-4.13988, 3.78088, -20.8426, 0.36", "-4.77282, 3.81704, -21.3727, 0.36", "-4.84775, 3.81768, -21.4171, 0.36", "-5.76411, 3.82862, -21.9219, 0.36", "-5.81661, 3.83176, -21.9461, 0.36", "-7.25787, 3.78882, -23.1784, 0.36", "-7.33293, 3.77936, -23.2757, 0.36", "-7.67033, 3.70546, -23.8727, 0.36", "-7.72117, 3.69208, -23.9781, 0.36", "-8.06714, 3.60602, -24.7633, 0.36", "-9.36353, 3.35881, -27.7604, 0.24", "-9.43669, 3.35366, -27.9257, 0.24", "-10.2931, 3.35435, -29.7391, 0.24", "-10.4132, 3.35869, -29.9865, 0.24", "-10.8305, 3.37383, -30.7284, 0.24", "-10.9164, 3.37797, -30.8522, 0.24", "-11.6667, 3.48259, -31.4279, 0.24", "-12.2906, 3.54921, -31.8158, 0.24", "-12.3927, 3.54783, -31.8847, 0.24", "-12.9972, 3.44052, -32.4385, 0.24", "-13.0557, 3.4212, -32.5229, 0.24", "-13.4803, 3.25517, -33.2999, 0.24", "-13.5169, 3.23771, -33.377, 0.24", "-14.4405, 2.77668, -35.3163, 0.24", "-14.4947, 2.75064, -35.4238, 0.24", "-15.273, 2.39351, -36.9278, 0.24", "-15.3795, 2.34944, -37.1109, 0.24", "-15.7267, 2.22718, -37.6273, 0.24", "-16.2659, 2.06485, -38.2741, 0.24", "-16.5204, 2.01295, -38.4507, 0.24", "-16.5951, 2.00001, -38.4937, 0.24", "-17.8182, 1.82191, -39.0515, 0.24", "-17.8976, 1.81486, -39.0889, 0.24", "-18.5261, 1.80027, -39.402, 0.24", "-19.6141, 1.81053, -39.93, 0.24", "-20.6624, 1.81348, -40.4015, 0.24", "-20.8491, 1.80461, -40.4748, 0.24", "-21.5544, 1.73866, -40.6975, 0.24", "-21.6353, 1.73035, -40.7288, 0.24", "-22.1175, 1.676, -40.9707, 0.24", "-22.2212, 1.66472, -41.0362, 0.24", "-22.8178, 1.64669, -41.3777, 0.24", "-22.9603, 1.64969, -41.4685, 0.24", "-23.5927, 1.70357, -41.9513, 0.24", "-23.7031, 1.73038, -42.0765, 0.24", "-23.8706, 1.7906, -42.3204, 0.24", "-23.9354, 1.81763, -42.4214, 0.24", "-24.2051, 1.95052, -42.8856, 0.24", "-24.2328, 1.96274, -42.9349, 0.24", "-25.1592, 2.28882, -44.6521, 0.24", "-25.2964, 2.33712, -44.9189, 0.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.78247, 0.533684, -6.31588, 1.2", "8.31525, 1.05151, -17.5495, 1.2", "10.0294, 0.899693, -18.4434, 1.2", "13.5677, -0.036287, -20.1906, 1.2", "15.5341, -0.797162, -21.0299, 0.96", "16.9176, -1.39569, -21.5541, 0.96", "19.9259, -2.69716, -22.694, 0.96", "21.589, -3.59322, -23.3233, 0.96", "23.3679, -4.81206, -23.9194, 0.96", "25.5355, -6.72524, -24.4021, 0.84", "26.3747, -7.59807, -24.6028, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-0.724841, -2.10836, 6.64197, 1.32", "-0.807521, -2.79712, 8.42851, 1.32", "-0.450462, -3.15019, 9.14054, 0.84", "0.00248516, -3.5733, 10.0058, 0.84", "1.25969, -4.6115, 12.4918, 0.84", "1.85936, -5.14616, 13.8139, 1.56", "4.69443, -7.77499, 20.2225, 1.56", "5.49108, -8.43205, 21.9291, 1.32", "5.9233, -8.75025, 22.8341, 1.08", "8.74415, -10.4726, 29.5531, 1.08", "9.82841, -11.1012, 32.2696, 0.72", "10.1786, -11.3022, 33.2294, 0.72", "10.8195, -11.6698, 35.1473, 0.72", "11.1121, -11.8172, 36.1085, 0.72", "14.115, -12.9789, 46.7602, 0.72", "16.0879, -14.712, 54.3835, 0.72", "18.5053, -15.2002, 62.0599, 0.72", "19.8323, -16.145, 69.9566, 0.72", "20.7461, -17.5532, 77.8428, 0.72", "22.4323, -17.6995, 85.7261, 0.72", "25.9027, -17.7052, 93.0039, 0.72", "28.9473, -17.1846, 100.452, 0.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.28125, -0.221663, 2.41274, 1.2", "7.16735, -0.283843, 2.73541, 1.2", "9.33422, -0.943582, 3.0533, 0.96", "11.4582, -1.59028, 3.36491, 0.96", "13.6722, -2.26435, 3.68971, 0.84", "14.7439, -2.59065, 3.84694, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-4.24164, -3.93241, 4.12888, 0.84", "-4.74996, -4.47502, 4.66488, 0.84", "-5.25702, -5.94081, 5.62036, 0.72", "-6.17151, -8.03774, 6.99617, 0.72", "-6.58815, -8.8602, 7.54281, 0.72", "-7.40105, -10.3098, 8.53547, 0.72", "-8.05482, -11.3285, 9.32686, 0.6", "-8.64945, -12.0421, 9.99733, 0.6", "-9.24147, -12.5167, 10.5529, 0.6", "-9.88314, -12.9121, 11.0305, 0.6", "-10.2634, -13.1247, 11.2961, 0.6", "-11.6629, -13.9325, 12.1469, 0.6", "-12.3235, -14.3387, 12.5799, 0.6", "-12.8649, -14.6952, 12.9305, 0.6", "-13.8098, -15.3415, 13.5031, 0.6", "-14.4536, -15.8492, 13.8208, 0.6", "-15.3163, -16.7364, 14.0987, 0.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.74899, -4.85459, -3.46875, 0.84", "-3.93615, -5.13365, -3.65894, 0.84", "-4.19391, -6.69909, -3.67406, 0.84", "-4.3955, -7.92342, -3.6859, 0.84", "-4.71418, -9.85878, -3.7046, 0.84", "-5.01325, -11.6752, -3.72215, 0.84", "-5.25675, -13.154, -3.73644, 0.84", "-5.45981, -15.0868, -3.75642, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.15603, -6.26023, -1.11895, 1.68", "1.77394, -5.26111, -0.94625, 1.68", "0.901228, -6.43845, 0.450591, 1.32", "0.366787, -7.15943, 1.30599, 1.68", "-1.32635, -9.44356, 4.01596, 2.76", "-2.30558, -10.7646, 5.5833, 1.44", "-3.38278, -12.2178, 7.30741, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.23116, -4.50457, -0.172177, 0.572009", "18.3305, -13.3705, -0.172177, 0.572009", "30.4299, -22.2365, -0.172177, 0.572009" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-6.18312, 18.739, -6.75938, 1.56", "-6.73234, 20.4196, -7.38026, 1.32", "-7.88939, 23.2794, -8.29898, 1.2", "-8.93297, 25.5854, -8.95591, 1.2", "-9.65977, 27.0723, -9.34029, 1.2", "-10.5664, 28.9273, -9.8198, 0.96", "-11.7113, 31.2696, -10.4253, 0.96", "-12.5706, 32.8931, -10.7844, 0.96", "-13.3797, 34.1751, -10.9427, 0.96", "-14.1622, 35.2275, -11.0677, 1.8" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-6.18312, 18.739, -6.75938, 1.56", "-4.6069, 21.8065, -6.2352, 0.24", "-4.17496, 22.9303, -5.92374, 0.24", "-3.58826, 24.8604, -5.33203, 0.24", "-2.57444, 28.2936, -4.26723, 0.24", "-2.03916, 29.9912, -3.73597, 0.24", "-1.28158, 32.1189, -3.07108, 0.24", "-0.0975998, 35.2242, -1.846, 0.24", "0.602625, 36.7083, -1.28092, 0.24", "1.25154, 37.7724, -0.944908, 0.24", "1.94988, 38.6093, -0.813906, 0.24", "3.02979, 39.6518, -0.736061, 0.24", "3.6873, 40.1826, -0.736869, 0.24", "6.13939, 41.888, -0.823113, 0.24", "8.63188, 43.5001, -0.73715, 0.24", "10.485, 44.7707, -0.540605, 0.24", "12.8488, 46.4681, -0.130519, 0.24", "14.4645, 47.6674, 0.247113, 0.24", "15.5648, 48.499, 0.587798, 0.24", "18.5024, 50.687, 1.80134, 0.24", "20.0859, 51.8081, 2.611, 0.24", "21.8216, 53.0404, 3.64629, 0.24", "23.0122, 53.8839, 4.41946, 0.24", "24.49, 54.9823, 5.41181, 0.24", "26.341, 56.4097, 6.68869, 0.24", "27.8912, 57.5094, 7.7306, 0.24", "29.3465, 58.3975, 8.7005, 0.24", "30.8673, 59.3176, 9.64991, 0.24", "32.4645, 60.2796, 10.5186, 0.24", "33.5431, 60.9543, 11.0119, 0.24", "35.0324, 62.0408, 11.5082, 0.24", "36.5279, 63.2898, 11.8828, 0.24", "38.5464, 65.2212, 12.15, 0.24", "39.7641, 66.5835, 12.2148, 0.24", "41.395, 68.4622, 12.2826, 0.24", "44.831, 72.4381, 12.4317, 0.24", "46.729, 74.6984, 12.5516, 0.24", "49.0406, 77.285, 12.88, 0.24", "50.0042, 78.2417, 13.0757, 0.24", "52.7963, 80.7445, 13.6895, 0.24", "54.653, 82.1781, 14.1788, 0.24", "55.827, 82.9452, 14.6809, 0.24", "58.499, 84.5982, 16.0918, 0.24", "60.2744, 85.7207, 17.1228, 0.24", "61.8423, 86.8198, 17.9491, 0.24", "63.5898, 88.2275, 18.7017, 0.24", "66.6803, 90.7089, 19.6725, 0.24", "68.247, 91.9279, 19.9415, 0.24", "70.9993, 94.121, 19.8206, 0.12", "73.2467, 95.863, 19.3947, 0.24", "74.9487, 97.082, 18.7895, 0.24", "77.0036, 98.3562, 17.7691, 0.24", "79.3156, 99.4686, 16.4226, 0.24", "81.9078, 100.439, 14.4543, 0.24", "82.6318, 100.705, 13.7099, 0.24", "83.2917, 100.959, 12.9126, 0.24", "84.195, 101.44, 11.5864, 0.24", "85.0259, 102.099, 10.1009, 0.24", "87.6843, 105.052, 4.59647, 0.24", "88.7837, 106.432, 2.14224, 0.24", "89.5501, 107.568, 0.195115, 0.24", "90.3465, 109.041, -2.14392, 0.24", "90.8011, 110.155, -3.70954, 0.24", "91.283, 111.689, -5.52061, 0.12", "93.8147, 120.363, -14.1921, 0.12", "98.0446, 126.251, -24.4037, 0.12", "102.658, 132.284, -34.3608, 0.12", "106.665, 136.674, -45.3839, 0.12", "111.3, 138.908, -56.8013, 0.12", "116.463, 142.04, -67.7729, 0.12", "122.731, 143.893, -78.4549, 0.12" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "26.3747, -7.59807, -24.6028, 0.84", "28.1379, -8.06017, -24.6944, 0.48", "29.9233, -8.50145, -24.7814, 0.48", "32.0666, -8.93639, -24.8753, 0.48", "33.8553, -9.26201, -24.9463, 0.48", "36.5149, -9.74616, -25.0519, 0.36", "37.6482, -9.95248, -25.0969, 0.36", "39.9928, -10.3818, -25.1803, 0.36", "42.3622, -10.7654, -25.271, 0.36", "43.7938, -11.0171, -25.326, 0.36" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "26.3747, -7.59807, -24.6028, 0.84", "27.8804, -9.24152, -31.7477, 0.36", "28.5082, -9.91898, -34.3556, 0.36", "29.9779, -11.5507, -39.6376, 0.24", "30.4338, -12.1727, -41.1445, 0.36", "31.0531, -13.2455, -43.3921, 0.36", "31.2687, -13.6622, -44.2081, 0.36", "32.5562, -16.0534, -48.289, 0.36", "33.0942, -17.1264, -49.9525, 0.36", "34.5344, -20.6247, -54.8447, 0.36", "35.4723, -23.1157, -58.2931, 0.36", "36.0073, -24.6182, -60.2402, 0.24", "36.8255, -26.7359, -63.0331, 0.12", "37.1194, -27.281, -63.8366, 0.12", "37.4882, -27.85, -64.8009, 0.12", "38.8114, -29.1811, -67.7775, 0.12", "39.2559, -29.5354, -68.8209, 0.12", "39.8811, -29.995, -70.3506, 0.12", "41.5831, -31.1465, -74.8233, 0.12", "42.682, -31.7938, -77.7599, 0.12", "44.2106, -32.5892, -81.9791, 0.12", "45.7986, -33.4239, -86.971, 0.12" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "14.7439, -2.59065, 3.84694, 0.84", "16.0623, -1.526, 4.23292, 0.36", "17.912, -0.327411, 4.35113, 0.36", "20.1453, 0.728433, 4.28623, 0.36", "23.1856, 1.95555, 4.14242, 0.36", "24.3409, 2.39747, 4.09499, 0.36", "25.3592, 2.75797, 3.97523, 0.36", "26.2443, 3.00462, 3.88214, 0.36", "27.2656, 3.23696, 3.80057, 0.36", "27.9545, 3.38971, 3.77755, 0.36", "29.1613, 3.69342, 3.9063, 0.36", "30.0681, 4.07879, 4.06814, 0.36", "31.8955, 5.11855, 4.45285, 0.36", "32.7413, 5.67043, 4.64475, 0.36", "34.0332, 6.56057, 4.94528, 0.36", "35.1227, 7.29682, 5.19167, 0.36", "38.0822, 9.20291, 5.82492, 0.36", "38.6626, 9.57232, 5.94679, 0.36", "39.2243, 9.92814, 6.09569, 0.36", "40.1407, 10.4857, 6.39876, 0.36", "40.9891, 10.9672, 6.73719, 0.36", "41.807, 11.3915, 7.11607, 0.36", "42.3862, 11.6773, 7.42239, 0.36", "43.7824, 12.4966, 8.23254, 0.36", "44.8393, 13.22, 8.94538, 0.36", "45.3751, 13.6533, 9.3597, 0.36", "46.0967, 14.3398, 9.99471, 0.36", "46.7835, 15.0548, 10.6468, 0.36", "47.3934, 15.7016, 11.2184, 0.36", "48.3395, 16.6275, 12.1403, 0.36", "49.0672, 17.2795, 12.8785, 0.36", "50.1018, 18.1457, 13.9188, 0.36", "50.6351, 18.5768, 14.4453, 0.36", "51.8825, 19.5851, 15.628, 0.36", "53.5845, 21.0152, 17.1559, 0.36", "54.5542, 21.7926, 17.989, 0.36", "55.5053, 22.4523, 18.7678, 0.36", "56.2939, 22.93, 19.3796, 0.36", "57.2407, 23.4804, 20.0836, 0.36", "58.0958, 23.9759, 20.6848, 0.36", "59.7289, 24.9112, 21.727, 0.36", "60.8615, 25.4913, 22.3454, 0.36", "61.3734, 25.7467, 22.5822, 0.36", "63.058, 26.557, 23.2027, 0.36", "64.5042, 27.203, 23.7322, 0.36", "66.2332, 27.9793, 24.3737, 0.36", "68.2686, 28.998, 25.13, 0.36", "69.7653, 29.8065, 25.7324, 0.36", "71.6927, 30.8482, 26.5307, 0.36", "74.5121, 32.3074, 27.6974, 0.36", "75.5496, 32.8235, 28.1248, 0.36", "76.755, 33.4182, 28.6266, 0.36", "78.1445, 34.0928, 29.2605, 0.36", "80.1223, 35.037, 30.1444, 0.36", "81.6176, 35.7768, 30.839, 0.36", "82.7249, 36.3456, 31.3284, 0.36", "83.794, 36.8741, 31.83, 0.36", "85.2614, 37.5349, 32.5413, 0.36", "86.4064, 37.9858, 33.2339, 0.36", "87.9167, 38.5568, 34.3964, 0.36", "88.4654, 38.7574, 34.9094, 0.36", "89.4681, 39.1277, 35.9904, 0.36", "90.3564, 39.4622, 37.0734, 0.36", "92.3802, 40.3069, 39.7708, 0.36", "93.2733, 40.7336, 40.9742, 0.36", "94.4288, 41.3459, 42.3932, 0.36", "95.1576, 41.7757, 43.2139, 0.36", "95.931, 42.2903, 43.9886, 0.36", "97.0261, 43.0741, 44.8784, 0.36", "98.6331, 44.2347, 45.8181, 0.36", "100.702, 45.6409, 46.7624, 0.36", "102.017, 46.5123, 47.3146, 0.36", "103.364, 47.359, 47.8205, 0.36", "105.006, 48.3472, 48.3783, 0.36", "106.193, 49.051, 48.7648, 0.36", "107.796, 50.0612, 49.3478, 0.36", "109.215, 51.0647, 49.9554, 0.36" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "14.7439, -2.59065, 3.84694, 0.84", "15.1101, -3.38781, 6.08469, 0.84" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-15.3163, -16.7364, 14.0987, 0.6", "-16.7281, -18.0778, 14.3766, 0.48", "-18.1243, -19.2016, 14.7126, 0.48", "-19.2073, -19.9567, 15.006, 0.48", "-20.6283, -21.0076, 15.4534, 0.48", "-21.774, -21.9477, 15.8614, 0.48", "-23.1795, -23.1255, 16.4154, 0.48", "-24.0484, -23.8124, 16.7829, 0.48", "-25.2763, -24.7722, 17.3798, 0.48", "-26.8879, -26.0979, 18.3568, 0.48", "-28.0069, -27.0582, 19.1379, 0.48", "-28.6859, -27.6619, 19.6364, 0.48", "-29.6555, -28.5234, 20.3312, 0.48", "-30.1889, -28.9963, 20.7223, 0.48", "-31.6832, -30.2586, 21.8406, 0.48", "-32.8307, -31.1226, 22.738, 0.48", "-33.4632, -31.6027, 23.2928, 0.48", "-33.998, -32.0403, 23.7736, 0.48", "-35.3124, -33.1639, 24.9835, 0.48", "-36.0277, -33.8532, 25.67, 0.48", "-36.9834, -34.9192, 26.6332, 0.48", "-37.8604, -36.0291, 27.583, 0.48", "-38.8982, -37.3032, 28.6307, 0.48", "-39.1796, -37.6285, 28.879, 0.48", "-40.039, -38.4629, 29.4895, 0.48", "-41.2106, -39.4991, 30.2282, 0.48", "-42.3622, -40.433, 30.8379, 0.48", "-44.0295, -41.722, 31.6374, 0.48", "-45.1613, -42.5478, 32.1926, 0.48", "-46.4085, -43.3738, 32.7743, 0.48", "-47.0168, -43.7196, 33.0279, 0.48", "-48.1129, -44.2848, 33.4236, 0.48", "-49.1179, -44.7423, 33.7817, 0.48", "-55.9178, -50.5562, 38.2584, 0.48", "-62.5326, -57.6214, 40.7896, 0.48", "-70.4792, -63.601, 41.8736, 0.48", "-77.6793, -70.3657, 43.4479, 0.48", "-85.739, -75.5284, 46.3576, 0.48", "-94.4599, -79.8518, 48.6672, 0.48", "-102.901, -85.0636, 49.9608, 0.48", "-112.178, -88.8044, 49.8282, 0.48", "-121.856, -91.0105, 51.0741, 0.48", "-131.784, -92.2081, 50.7998, 0.48", "-141.361, -94.7777, 52.1304, 0.48", "-150.953, -96.8871, 54.0316, 0.48", "-160.127, -99.4306, 57.1057, 0.48", "-168.271, -103.444, 61.3072, 0.48", "-175.625, -108.353, 65.9869, 0.48", "-182.308, -112.134, 72.3992, 0.48", "-188.55, -115.74, 79.336, 0.48", "-194.487, -118.975, 86.7095, 0.48", "-201.272, -120.73, 93.8479, 0.48", "-208.018, -123.28, 100.781, 0.48", "-213.762, -127.057, 108.049, 0.48", "-221.424, -128.96, 114.193, 0.48", "-229.666, -131.824, 119.086, 0.48", "-236.974, -136.226, 124.312, 0.48", "-243.272, -142.493, 128.909, 0.48", "-250.114, -148.26, 133.382, 0.48", "-256.553, -153.116, 139.301, 0.48" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-15.3163, -16.7364, 14.0987, 0.6", "-16.2753, -16.4421, 14.9877, 0.6", "-16.8168, -16.2411, 15.5323, 0.6", "-17.5777, -15.9861, 16.2547, 0.6", "-18.2245, -15.7952, 16.8354, 0.48", "-19.9392, -15.2874, 18.2778, 0.48", "-20.1869, -15.2089, 18.4662, 0.48", "-20.8137, -15.0063, 18.9182, 0.48", "-21.5093, -14.8074, 19.3382, 0.48", "-21.8689, -14.7267, 19.5027, 0.48", "-22.4453, -14.6218, 19.7736, 0.48", "-23.4652, -14.4625, 20.2139, 0.48", "-24.449, -14.3171, 20.6866, 0.48", "-25.1268, -14.2246, 21.0288, 0.48", "-25.6984, -14.1597, 21.3216, 0.48", "-27.8826, -14.0892, 22.6057, 0.48", "-28.8083, -14.2077, 23.2902, 0.48", "-29.5151, -14.449, 23.9386, 0.48", "-30.1586, -14.8917, 24.7474, 0.48", "-30.4518, -15.234, 25.2768, 0.48", "-31.137, -16.3915, 26.8406, 0.48", "-31.7299, -17.6981, 28.3849, 0.48", "-31.9953, -18.2868, 29.0904, 0.48", "-32.5889, -19.4466, 30.5132, 0.48", "-33.3292, -20.531, 31.9639, 0.48", "-33.7192, -20.9004, 32.5076, 0.48", "-34.3451, -21.2613, 33.0784, 0.48", "-35.5252, -21.6942, 33.8397, 0.48", "-36.6191, -22.0214, 34.4005, 0.48", "-37.8883, -22.3671, 34.9048, 0.48", "-38.8146, -22.6151, 35.2229, 0.48", "-39.6484, -22.8514, 35.5185, 0.48", "-41.6672, -23.499, 36.2569, 0.48", "-43.0285, -24.0116, 36.7596, 0.48", "-43.6343, -24.2691, 36.9836, 0.48", "-49.4844, -25.1906, 41.4092, 0.48", "-55.7116, -26.8561, 45.0295, 0.48", "-62.1918, -29.068, 47.8174, 0.48", "-69.2056, -30.6316, 49.5555, 0.48", "-76.4032, -32.1538, 50.2879, 0.48", "-83.5229, -34.1315, 50.5277, 0.48", "-90.7561, -35.3964, 49.6677, 0.48", "-98.1445, -35.5804, 49.4775, 0.48", "-105.44, -36.2106, 48.4594, 0.48", "-112.453, -37.2272, 46.3508, 0.48", "-119.307, -38.4787, 43.8762, 0.48", "-125.462, -40.7599, 40.4763, 0.48", "-132.09, -41.3541, 37.2539, 0.48", "-138.267, -41.3528, 33.1922, 0.48", "-145.029, -39.8846, 30.587, 0.48", "-152.117, -39.3688, 28.5515, 0.48", "-159.375, -39.1081, 27.1676, 0.48", "-166.366, -39.0533, 24.762, 0.48", "-173.329, -38.3348, 22.3834, 0.48", "-180.311, -37.4958, 20.1027, 0.48", "-187.235, -36.7985, 17.6052, 0.48", "-194.407, -37.0625, 15.8312, 0.48", "-201.463, -36.67, 13.6575, 0.48", "-208.384, -36.4355, 11.0697, 0.48", "-215.627, -35.2953, 10.1217, 0.48", "-222.75, -34.6745, 8.2404, 0.48", "-229.864, -33.0499, 7.05324, 0.48", "-237.098, -32.4746, 5.64197, 0.48", "-243.839, -30.52, 3.31816, 0.48", "-250.798, -29.4804, 1.04742, 0.48" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-5.45981, -15.0868, -3.75642, 0.84", "-6.14073, -15.8715, -2.13765, 0.72", "-7.77724, -17.33, 1.16632, 0.48", "-8.31267, -17.7431, 2.12958, 0.48", "-9.49836, -18.6359, 4.1048, 0.48", "-10.3351, -19.2657, 5.43142, 0.48", "-10.8898, -19.635, 6.28026, 0.36", "-11.4763, -19.9846, 7.13015, 0.36", "-12.0657, -20.2835, 7.66227, 0.36", "-13.4299, -20.7911, 8.06153, 0.36", "-14.0283, -20.9855, 7.99957, 0.36", "-15.9812, -21.6813, 7.50682, 0.36", "-17.152, -22.0602, 7.12099, 0.36", "-23.6669, -23.801, 4.85466, 0.36", "-24.9549, -24.1059, 4.4033, 0.36", "-26.4149, -24.4363, 3.88667, 0.36", "-27.6918, -24.7368, 3.44903, 0.36", "-30.4518, -25.3653, 2.59954, 0.36", "-32.0435, -25.7585, 2.31625, 0.36", "-33.5367, -26.1676, 2.32227, 0.36", "-34.9982, -26.5186, 2.23204, 0.36", "-36.1881, -26.7592, 2.0912, 0.36", "-38.2797, -27.1902, 1.75555, 0.36", "-40.0064, -27.6257, 1.44513, 0.36", "-41.4056, -27.9724, 1.18539, 0.36", "-44.7755, -28.6057, 0.6692, 0.36", "-46.3989, -28.8951, 0.468338, 0.36", "-47.1916, -29.0484, 0.358323, 0.36", "-49.4408, -29.5161, 0.00244492, 0.36", "-50.8968, -29.7686, -0.213538, 0.36", "-53.0356, -30.0846, -0.412509, 0.36", "-54.4738, -30.338, -0.419146, 0.36", "-56.7652, -30.6702, -0.350503, 0.36", "-58.1911, -30.792, -0.388231, 0.36", "-59.4513, -30.878, -0.482451, 0.36", "-61.0691, -31.0206, -0.630158, 0.36", "-63.5156, -31.2844, -0.851064, 0.36", "-65.1556, -31.3915, -0.974964, 0.36", "-68.1879, -31.4785, -1.09193, 0.36", "-69.3398, -31.4794, -1.17192, 0.36", "-71.0196, -31.4954, -1.35415, 0.36", "-72.4843, -31.4838, -1.54762, 0.36", "-74.445, -31.4719, -2.09167, 0.36", "-76.1904, -31.6174, -2.73257, 0.36", "-77.5332, -31.8592, -3.34268, 0.36", "-78.9472, -32.2405, -4.18189, 0.36", "-79.6646, -32.5664, -4.71814, 0.36", "-82.8749, -34.7873, -7.62941, 0.36", "-84.1775, -35.9539, -8.98008, 0.36", "-85.1938, -36.9982, -10.0814, 0.36", "-86.0013, -37.8825, -10.9134, 0.36", "-87.0714, -39.072, -11.9384, 0.36", "-88.3616, -40.5196, -13.0322, 0.36", "-90.2456, -42.6736, -14.2357, 0.36", "-91.4146, -44.0927, -14.957, 0.36", "-92.8655, -45.9789, -15.8383, 0.36", "-94.0082, -47.58, -16.4827, 0.36", "-94.3899, -48.1289, -16.6739, 0.36", "-95.5779, -50.0488, -17.1283, 0.36", "-96.4057, -51.4632, -17.3245, 0.36", "-97.8279, -53.7628, -17.5336, 0.36", "-98.6444, -54.9134, -17.5809, 0.36", "-100.933, -57.4349, -17.84, 0.36", "-101.894, -58.2857, -17.989, 0.36", "-103.757, -59.6063, -18.3044, 0.36", "-105.466, -60.6461, -18.5175, 0.24", "-106.76, -61.3106, -18.6669, 0.24", "-109.748, -62.7068, -19.2285, 0.12", "-110.181, -62.9078, -19.3273, 0.12", "-111.507, -63.5287, -19.6663, 0.12", "-112.356, -63.9704, -19.9013, 0.12", "-114.334, -65.206, -20.4257, 0.12", "-115.598, -66.1404, -20.7119, 0.12", "-117.122, -67.3603, -20.9125, 0.12", "-118.877, -68.7516, -21.0871, 0.12", "-120.303, -69.9066, -21.1758, 0.12", "-121.486, -70.8981, -21.1798, 0.12", "-122.285, -71.6355, -21.1095, 0.12", "-123.592, -72.7903, -20.9154, 0.12", "-124.677, -73.7045, -20.7317, 0.12", "-125.817, -74.575, -20.5491, 0.12", "-126.915, -75.3014, -20.3747, 0.12", "-129.697, -76.9648, -19.9755, 0.12", "-131.734, -78.1079, -19.7501, 0.12", "-133.498, -79.0383, -19.6738, 0.12", "-135.226, -79.878, -19.6812, 0.12", "-136.473, -80.4198, -19.7441, 0.12", "-136.847, -80.5742, -19.7717, 0.12", "-139.065, -81.4717, -19.9249, 0.12", "-140.848, -82.3773, -19.9874, 0.12", "-141.625, -82.8513, -19.9328, 0.12", "-143.226, -83.9956, -19.735, 0.12", "-144.108, -84.7559, -19.5279, 0.12", "-145.225, -85.8694, -19.0963, 0.12", "-146.329, -87.147, -18.442, 0.12", "-147.527, -88.8714, -17.3934, 0.12", "-148.287, -90.2283, -16.5699, 0.12", "-149.402, -92.5933, -15.1666, 0.12", "-150.078, -94.143, -14.3098, 0.12", "-150.503, -95.1951, -13.7591, 0.12", "-151.409, -97.4993, -12.6041, 0.12", "-152.047, -99.202, -11.8611, 0.12", "-152.556, -100.441, -11.4073, 0.12", "-153.2, -101.754, -11.0395, 0.12", "-153.979, -103.153, -10.7146, 0.12", "-155.314, -105.18, -10.2876, 0.12", "-156.701, -106.939, -9.93066, 0.12", "-158.274, -108.788, -9.51711, 0.12", "-159.253, -109.898, -9.25605, 0.12", "-160.318, -111.029, -8.96537, 0.12", "-161.306, -111.995, -8.68686, 0.12", "-162.434, -112.992, -8.35488, 0.12", "-163.304, -113.613, -8.07646, 0.12" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.45981, -15.0868, -3.75642, 0.84", "-4.59856, -17.6791, -4.43392, 0.24", "-3.61423, -20.3809, -5.03425, 0.24", "-2.83351, -22.8194, -5.64798, 0.24", "-2.12259, -25.4186, -6.2856, 0.24", "-1.85118, -26.67, -6.56835, 0.24", "-1.4466, -28.8911, -7.03348, 0.24", "-1.14383, -30.9056, -7.49437, 0.24", "-0.948901, -32.7031, -7.92994, 0.24", "-0.766882, -34.6253, -8.45711, 0.24", "-0.451346, -37.0157, -9.09448, 0.24", "-0.299028, -38.186, -9.45984, 0.24", "-0.148321, -39.5174, -9.91434, 0.24", "0.131724, -41.7349, -10.6228, 0.24", "0.404382, -43.7791, -11.2946, 0.24", "0.509053, -44.6532, -11.5819, 0.24", "0.750948, -47.1147, -12.4734, 0.24", "0.854728, -48.8987, -13.1088, 0.24", "0.902378, -51.097, -13.8883, 0.24", "0.909678, -52.6664, -14.4327, 0.24", "0.905838, -55.1698, -15.2608, 0.24", "0.972328, -57.6698, -16.1961, 0.24", "1.10179, -59.2754, -16.8843, 0.24", "1.22633, -60.4287, -17.4633, 0.24", "1.3779, -61.6451, -18.2387, 0.24", "1.5413, -62.5596, -18.9317, 0.24", "1.8916, -64.1372, -20.5831, 0.24", "1.99156, -64.5831, -21.1358, 0.24", "2.10813, -65.0944, -21.9145, 0.24", "2.40371, -66.7205, -24.4823, 0.24", "2.4888, -67.6318, -25.8536, 0.24", "2.59127, -69.7688, -28.8578, 0.24", "2.63124, -70.7474, -30.0923, 0.24", "2.74909, -73.0846, -32.7866, 0.24", "2.75203, -74.2112, -34.032, 0.24", "2.71448, -75.4147, -35.2026, 0.24", "2.56349, -77.8081, -37.2447, 0.24", "2.52991, -79.2665, -38.3035, 0.24", "2.51249, -80.763, -39.4005, 0.24", "2.59435, -83.2255, -41.2579, 0.24", "2.64387, -84.3285, -42.2086, 0.24", "2.69709, -84.9967, -42.8535, 0.24", "2.88498, -86.8822, -44.6693, 0.24", "3.17051, -89.3412, -47.0996, 0.12", "3.37763, -91.0406, -48.8657, 0.12", "3.64551, -93.1973, -51.0633, 0.12", "3.79888, -94.7229, -52.7206, 0.12", "3.89425, -95.7685, -53.8365, 0.12", "3.98163, -96.8612, -54.953, 0.12", "4.24421, -98.9969, -57.0966, 0.12", "4.35985, -99.8457, -57.9263, 0.12", "4.74352, -102.0, -60.0821, 0.12", "4.96449, -103.386, -61.4697, 0.12", "5.45621, -106.413, -64.4546, 0.12", "5.76802, -107.993, -65.9286, 0.12", "5.93269, -108.784, -66.6294, 0.12", "6.46122, -111.386, -68.8698, 0.12", "6.78392, -113.002, -70.1207, 0.12", "7.09471, -114.618, -71.2854, 0.12", "7.32914, -115.796, -72.0246, 0.12", "7.87128, -118.437, -73.4869, 0.12", "8.07016, -119.368, -73.9423, 0.12", "8.41198, -121.144, -74.7809, 0.12", "8.73461, -123.135, -75.781, 0.12", "8.94711, -125.101, -76.8608, 0.12", "9.10638, -127.112, -78.032, 0.12", "9.24172, -128.805, -79.0761, 0.12", "9.40604, -131.59, -80.9198, 0.12", "9.44781, -133.114, -81.9744, 0.12", "9.52687, -134.922, -83.2295, 0.12", "9.58174, -136.268, -84.1415, 0.12", "9.64419, -137.174, -84.7428, 0.12", "9.82781, -138.466, -85.5585, 0.12", "10.0679, -139.476, -86.112, 0.12", "10.3352, -140.532, -86.7169, 0.12", "10.6404, -141.838, -87.4765, 0.12", "10.7977, -142.802, -88.0648, 0.12", "10.9062, -143.955, -88.7893, 0.12", "10.9516, -145.033, -89.4927, 0.12", "10.8811, -147.097, -91.0181, 0.12", "10.7475, -148.037, -91.8048, 0.12", "10.5572, -149.005, -92.7311, 0.12", "10.3121, -149.965, -93.679, 0.12", "10.0607, -150.803, -94.4932, 0.12", "9.4239, -152.878, -96.4684, 0.12", "8.95634, -154.555, -98.1363, 0.12", "8.60572, -155.909, -99.5201, 0.12", "8.4435, -156.749, -100.373, 0.12", "8.38688, -157.261, -100.869, 0.12", "8.35376, -158.158, -101.646, 0.12", "8.40606, -160.029, -102.927, 0.12", "8.44059, -161.035, -103.577, 0.12", "8.41892, -162.28, -104.459, 0.12", "8.3678, -163.396, -105.332, 0.12", "8.33112, -163.901, -105.761, 0.12", "8.27065, -164.548, -106.338, 0.12", "8.03833, -166.744, -108.242, 0.12", "7.87344, -168.311, -109.683, 0.12", "7.82846, -168.817, -110.178, 0.12", "7.78303, -170.199, -111.556, 0.12", "7.85122, -171.255, -112.559, 0.12", "7.98017, -172.021, -113.247, 0.12", "8.46268, -173.932, -114.836, 0.12", "8.8454, -175.227, -115.833, 0.12", "9.10654, -176.159, -116.598, 0.12", "9.36463, -177.351, -117.498, 0.12", "9.57311, -178.61, -118.437, 0.12", "9.96761, -181.697, -120.516, 0.12", "10.1199, -183.281, -121.464, 0.12", "10.2659, -185.694, -122.801, 0.12", "10.3764, -189.2, -124.673, 0.12", "10.3896, -191.733, -126.019, 0.12", "10.4407, -196.385, -127.967, 0.12", "10.4415, -198.639, -128.715, 0.12", "10.3959, -202.548, -129.782, 0.12", "10.3408, -204.766, -130.278, 0.12", "10.0929, -211.716, -131.446, 0.12", "9.67761, -218.309, -132.033, 0.12", "9.38242, -221.426, -132.113, 0.12", "9.19882, -223.071, -132.126, 0.12", "8.92462, -225.26, -132.052, 0.12", "8.48241, -228.31, -132.029, 0.12", "7.9048, -231.694, -132.209, 0.12", "7.51158, -233.953, -132.686, 0.12", "7.19778, -236.878, -133.451, 0.12", "7.19037, -238.738, -133.887, 0.12", "7.52947, -242.03, -134.375, 0.12", "7.95395, -244.566, -134.481, 0.12", "8.28565, -246.081, -134.367, 0.12", "8.90476, -248.789, -133.962, 0.12", "9.97741, -253.656, -132.972, 0.12", "10.9118, -258.259, -132.053, 0.12", "11.5715, -262.386, -131.349, 0.12", "11.8426, -265.417, -131.108, 0.12", "11.8505, -268.003, -131.081, 0.12", "11.6458, -269.644, -131.267, 0.12", "10.965, -272.537, -132.095, 0.12", "9.85741, -276.399, -133.585, 0.12", "8.89724, -279.251, -134.942, 0.12", "8.31282, -280.78, -135.737, 0.12", "6.03797, -286.108, -138.7, 0.12", "4.70205, -289.054, -140.399, 0.12" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.38278, -12.2178, 7.30741, 1.8", "-4.38994, -13.9444, 8.29821, 1.08", "-5.00341, -15.1237, 8.7536, 1.08", "-6.70779, -18.6293, 9.6005, 0.96", "-7.32294, -19.9229, 9.86197, 0.96", "-8.13684, -21.6702, 10.0926, 0.96", "-8.49611, -22.4812, 10.1545, 0.96", "-9.63461, -25.2913, 10.0177, 0.84", "-10.0642, -26.5088, 9.90249, 0.84", "-10.5058, -27.9336, 9.71374, 0.84", "-11.0163, -29.5708, 9.61423, 0.84", "-11.595, -31.3321, 9.64567, 0.84", "-12.1576, -33.0109, 9.80507, 0.84", "-12.7175, -34.7166, 10.0997, 0.84", "-13.2607, -36.4213, 10.4273, 0.84", "-13.692, -37.804, 10.686, 0.84", "-14.0956, -39.0799, 10.9998, 0.84", "-14.6977, -40.8976, 11.4507, 0.84", "-15.1451, -42.2711, 11.7331, 0.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.38278, -12.2178, 7.30741, 1.8", "-4.66921, -11.7021, 8.3676, 0.72", "-5.92895, -11.197, 9.40579, 0.72", "-7.0895, -10.7317, 10.3622, 1.2", "-8.34431, -10.2286, 11.3964, 0.96", "-9.5217, -9.75658, 12.3667, 0.96", "-10.0743, -9.53503, 12.8221, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "30.4299, -22.2365, -0.172177, 0.253454", "42.5293, -31.1024, -0.172177, 0.253454", "54.6287, -39.9684, -0.172177, 0.253454" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-14.1622, 35.2275, -11.0677, 1.8", "-14.2509, 37.0977, -11.4293, 1.2", "-14.3343, 38.8542, -11.769, 1.08", "-14.3777, 39.7674, -11.9455, 1.08", "-14.4392, 41.0628, -12.196, 1.08", "-14.5337, 43.0535, -12.5809, 1.8" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-14.1622, 35.2275, -11.0677, 1.8", "-16.0021, 36.8511, -11.5306, 0.12", "-16.1107, 36.9411, -11.5342, 0.24", "-16.9393, 37.5008, -11.4958, 0.24", "-17.5529, 37.8467, -11.454, 0.24", "-19.1829, 38.7065, -11.1265, 0.24", "-20.3901, 39.3642, -10.8074, 0.24", "-21.7657, 40.1347, -10.4737, 0.24", "-23.4284, 41.1005, -10.0077, 0.24", "-24.4822, 41.7039, -9.65032, 0.24", "-26.5526, 43.0961, -8.85096, 0.24", "-27.5471, 43.8785, -8.49096, 0.24", "-29.969, 45.9852, -7.12865, 0.24", "-32.2309, 48.0195, -5.60797, 0.24", "-33.5937, 49.3149, -4.49205, 0.24", "-35.1809, 50.9397, -2.90433, 0.24", "-36.3366, 52.1696, -1.49608, 0.24", "-39.509, 55.5191, 3.07662, 0.24", "-40.4688, 56.5957, 4.65538, 0.24", "-41.3206, 57.6476, 6.12059, 0.24", "-42.5324, 59.1505, 8.26909, 0.24", "-43.7958, 60.5925, 10.3433, 0.24", "-44.4479, 61.3155, 11.2239, 0.24", "-45.9735, 62.9925, 12.5662, 0.24", "-46.7554, 63.9284, 13.2421, 0.24", "-47.9656, 65.3348, 14.1854, 0.24", "-49.5359, 66.99, 15.2842, 0.24", "-51.2071, 68.6134, 16.4105, 0.24", "-52.3358, 69.616, 17.1882, 0.24", "-54.9225, 71.6303, 19.0763, 0.24", "-56.0796, 72.5478, 20.006, 0.24", "-57.6846, 74.0286, 21.6047, 0.24", "-58.4789, 74.8376, 22.5442, 0.24", "-59.1336, 75.4968, 23.2992, 0.24", "-60.2087, 76.4779, 24.2603, 0.24", "-61.6258, 77.6173, 25.1027, 0.24", "-63.1091, 78.8562, 25.7742, 0.24", "-64.1469, 79.7358, 26.1409, 0.24", "-65.2465, 80.6266, 26.4558, 0.24", "-66.8245, 81.8917, 26.7885, 0.24", "-68.9343, 83.4539, 27.0807, 0.24", "-70.8634, 84.7699, 27.2578, 0.24", "-72.3677, 85.7189, 27.3488, 0.24", "-73.5504, 86.426, 27.4174, 0.24", "-76.6558, 88.2899, 27.5908, 0.24", "-78.0818, 89.0507, 27.6609, 0.24", "-79.2776, 89.6492, 27.7267, 0.24", "-80.3434, 90.1836, 27.8025, 0.24", "-81.6943, 90.9164, 27.9109, 0.24", "-83.1769, 91.7291, 28.0148, 0.24", "-86.6307, 93.6257, 28.2017, 0.24", "-89.0781, 94.995, 28.2833, 0.24", "-91.0478, 96.1893, 28.3326, 0.24", "-92.881, 97.433, 28.3619, 0.24", "-94.2076, 98.3657, 28.3912, 0.24", "-95.4194, 99.1698, 28.3357, 0.24", "-97.0108, 100.141, 28.1459, 0.24", "-99.985, 101.661, 27.6077, 0.24", "-101.57, 102.327, 27.2648, 0.24", "-103.222, 103.025, 26.9013, 0.24", "-106.848, 104.592, 26.1426, 0.24", "-108.263, 105.183, 25.8665, 0.24", "-109.543, 105.774, 25.7517, 0.24", "-111.175, 106.602, 25.7497, 0.24", "-114.49, 108.336, 25.8151, 0.24", "-116.538, 109.561, 25.912, 0.24", "-118.982, 111.307, 26.018, 0.24", "-123.046, 114.626, 26.243, 0.24", "-125.347, 116.743, 26.3129, 0.24", "-127.638, 119.203, 26.2698, 0.24", "-128.964, 120.812, 26.1564, 0.24", "-131.304, 124.021, 25.6985, 0.24", "-133.138, 126.77, 24.9937, 0.24", "-134.489, 128.872, 24.0993, 0.24", "-135.397, 130.322, 23.4049, 0.24", "-136.007, 131.375, 22.9227, 0.24", "-137.102, 133.062, 22.01, 0.24", "-138.164, 134.668, 21.0699, 0.24", "-139.319, 136.571, 19.8325, 0.24", "-140.843, 139.328, 18.1026, 0.24", "-141.709, 141.166, 17.017, 0.12", "-142.324, 142.584, 16.243, 0.12", "-143.28, 145.185, 15.0171, 0.12", "-144.125, 147.493, 14.105, 0.12", "-144.411, 148.227, 13.8591, 0.12", "-145.129, 149.8, 13.5579, 0.12", "-146.392, 152.049, 13.3504, 0.12", "-147.508, 153.692, 13.3063, 0.12", "-149.369, 155.882, 13.4975, 0.12", "-150.352, 156.943, 13.6453, 0.12", "-153.955, 160.596, 14.2553, 0.12", "-155.696, 162.211, 14.5892, 0.12", "-157.351, 163.679, 14.969, 0.12", "-160.131, 165.811, 15.6454, 0.12" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "43.7938, -11.0171, -25.326, 0.36", "45.1131, -9.70571, -26.4275, 0.36", "47.4668, -7.60274, -27.9479, 0.36", "48.4266, -6.73294, -28.4216, 0.36", "49.96, -5.32941, -29.0733, 0.36", "51.7267, -3.62187, -29.7795, 0.36", "53.8436, -1.37854, -30.506, 0.36", "55.7689, 0.806268, -31.1288, 0.36", "57.7224, 3.13001, -31.7592, 0.36", "59.25, 5.01833, -32.2542, 0.36", "60.6923, 6.85451, -32.7194, 0.36", "62.035, 8.57576, -33.1611, 0.36", "63.2119, 10.2469, -33.6093, 0.36", "64.3104, 11.8654, -34.0743, 0.36", "65.786, 14.0111, -34.7623, 0.36", "67.3159, 16.2149, -35.4935, 0.36", "67.9512, 17.0947, -35.7933, 0.36", "68.6868, 18.053, -36.1265, 0.36", "69.736, 19.4008, -36.5969, 0.36", "71.4872, 21.5365, -37.3745, 0.36", "73.0317, 23.2985, -38.0365, 0.36", "73.8787, 24.2562, -38.4006, 0.36", "74.9597, 25.4404, -38.8503, 0.36", "75.6054, 26.1272, -39.1091, 0.36", "76.8631, 27.5508, -39.6211, 0.36", "78.0479, 29.0725, -40.1353, 0.24", "78.7973, 30.2609, -40.4822, 0.24", "79.7352, 32.1387, -41.0124, 0.24", "80.3415, 33.8463, -41.4813, 0.24", "80.7884, 35.4117, -41.9057, 0.24", "81.1342, 36.8453, -42.2923, 0.24", "81.6936, 39.4315, -42.9741, 0.24", "82.1597, 41.6769, -43.5596, 0.24", "82.652, 44.1923, -44.2032, 0.24", "82.9574, 45.7954, -44.5741, 0.24", "83.4705, 48.2915, -45.1082, 0.24", "83.8477, 49.8722, -45.4187, 0.24", "84.3137, 51.5222, -45.7159, 0.24", "84.9396, 53.3259, -46.0187, 0.24", "85.7218, 55.4338, -46.3597, 0.24", "86.1446, 56.6219, -46.557, 0.24", "86.5766, 57.8156, -46.7711, 0.24", "87.1926, 59.4384, -47.0769, 0.24", "87.7543, 60.9235, -47.394, 0.24", "88.3879, 62.5696, -47.8282, 0.24", "88.9842, 64.085, -48.298, 0.24", "89.5, 65.5684, -48.7287, 0.24", "89.8534, 66.8867, -49.0606, 0.24", "90.2506, 68.6812, -49.4342, 0.24", "90.5328, 70.0102, -49.6585, 0.24", "90.7476, 70.9876, -49.7916, 0.24", "91.14, 72.7414, -49.9921, 0.24", "91.5184, 74.22, -50.1412, 0.24", "91.8508, 75.4566, -50.347, 0.24", "92.226, 76.7609, -50.6553, 0.24", "92.5141, 77.6973, -51.042, 0.24", "92.9513, 79.0196, -51.7959, 0.24", "93.4878, 80.3752, -52.8372, 0.24", "94.3077, 82.498, -54.69, 0.24", "94.717, 83.7329, -55.8286, 0.24", "95.3597, 86.0622, -57.9978, 0.24", "95.6208, 87.3878, -59.1875, 0.24", "95.9679, 89.5719, -61.1865, 0.12", "96.1303, 90.9104, -62.4021, 0.12", "96.2546, 91.9164, -63.2332, 0.12", "96.3446, 93.0533, -64.0673, 0.12", "96.2859, 94.9916, -65.1176, 0.12" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "43.7938, -11.0171, -25.326, 0.36", "46.0432, -11.6957, -24.9187, 0.36", "49.0158, -12.1793, -24.4604, 0.36", "50.8844, -12.3732, -24.2182, 0.36", "52.8351, -12.5963, -24.0063, 0.36", "55.3386, -12.9261, -23.77, 0.36", "57.7457, -13.2047, -23.6365, 0.36", "59.2146, -13.3901, -23.6434, 0.36", "60.8479, -13.6563, -23.7426, 0.36", "62.5608, -14.041, -24.0408, 0.36", "63.3862, -14.2226, -24.2737, 0.36", "64.9086, -14.4751, -24.8071, 0.36", "67.5198, -14.8037, -25.9646, 0.36", "68.985, -14.9305, -26.6633, 0.36", "71.4288, -15.0116, -27.7904, 0.36", "73.8464, -14.927, -28.8915, 0.36", "75.8127, -14.7625, -29.6766, 0.24", "78.9933, -14.4478, -30.9851, 0.24", "80.9494, -14.2395, -31.7972, 0.24", "83.1152, -13.9701, -32.7241, 0.24", "84.5312, -13.7833, -33.3168, 0.24", "88.8289, -13.3513, -35.2287, 0.24", "92.7198, -13.0589, -37.0087, 0.24", "93.4361, -13.0167, -37.3348, 0.24", "94.7073, -13.0196, -37.9508, 0.24", "95.662, -13.1328, -38.3953, 0.24", "97.4157, -13.5212, -38.9756, 0.24", "99.4764, -14.2452, -39.2088, 0.24", "101.394, -15.0742, -39.008, 0.24", "102.869, -15.8603, -38.7219, 0.24", "104.997, -17.2604, -37.9131, 0.24", "108.052, -19.3983, -36.2506, 0.24", "109.418, -20.3144, -35.316, 0.24", "110.605, -21.0236, -34.3383, 0.24", "112.127, -21.8605, -32.9549, 0.24", "115.087, -23.4733, -30.186, 0.24", "116.767, -24.4249, -28.6286, 0.24", "118.356, -25.3313, -27.3022, 0.24", "121.348, -26.9252, -24.8894, 0.24", "122.316, -27.375, -24.1458, 0.24", "123.794, -27.9917, -23.1573, 0.24", "124.917, -28.4219, -22.5593, 0.24", "125.867, -28.823, -22.0901, 0.24", "127.411, -29.5152, -21.3862, 0.24", "131.031, -31.142, -19.9425, 0.24", "132.416, -31.7187, -19.4325, 0.24", "134.006, -32.2636, -18.7626, 0.24", "135.384, -32.7207, -18.1434, 0.24", "137.435, -33.3575, -17.185, 0.24", "138.509, -33.6677, -16.6679, 0.24", "140.754, -34.3461, -15.5875, 0.24", "144.635, -35.577, -13.5038, 0.24", "146.006, -36.0252, -12.6998, 0.24", "148.546, -36.836, -11.1984, 0.24", "150.586, -37.4604, -10.1355, 0.24", "152.337, -37.956, -9.32486, 0.24", "154.151, -38.3948, -8.52259, 0.24", "156.178, -38.8562, -7.75271, 0.24", "158.201, -39.3312, -6.84329, 0.24", "161.365, -40.1339, -5.35445, 0.24", "163.373, -40.6436, -4.39035, 0.24", "167.193, -41.4671, -2.57429, 0.24", "169.684, -41.9233, -1.38535, 0.24", "174.01, -42.6735, 0.689402, 0.24", "176.432, -43.1077, 1.91943, 0.24", "178.402, -43.532, 2.9427, 0.24", "180.232, -43.9907, 3.77584, 0.24", "182.294, -44.569, 4.47501, 0.24", "184.619, -45.1115, 5.15913, 0.24", "186.054, -45.3492, 5.51363, 0.24", "187.428, -45.5549, 5.95768, 0.24", "187.957, -45.6169, 6.16946, 0.24", "188.831, -45.7296, 6.63958, 0.24", "191.849, -46.1326, 8.51192, 0.24", "193.147, -46.3041, 9.40969, 0.24", "194.62, -46.5651, 10.5196, 0.24", "195.987, -46.9099, 11.6643, 0.24", "198.063, -47.5801, 13.4204, 0.12", "199.557, -48.1971, 14.6026, 0.12", "200.397, -48.6524, 15.1904, 0.12", "202.041, -49.6548, 16.2268, 0.12", "203.458, -50.6282, 17.0587, 0.12", "204.904, -51.6189, 17.7494, 0.12", "206.737, -52.7168, 18.4536, 0.12", "207.956, -53.3029, 18.8819, 0.12", "209.946, -54.0747, 19.5126, 0.12", "211.252, -54.4695, 19.8656, 0.12", "213.915, -55.2206, 20.5194, 0.12", "215.558, -55.6375, 20.9349, 0.12", "219.971, -56.5449, 22.0543, 0.12", "222.35, -56.9687, 22.654, 0.12", "224.26, -57.2108, 23.1463, 0.12", "227.349, -57.4875, 23.9864, 0.12", "229.42, -57.6606, 24.58, 0.12", "231.422, -57.8177, 25.1345, 0.12", "233.488, -57.9237, 25.5665, 0.12", "235.617, -57.9458, 25.9177, 0.12", "237.29, -57.8792, 25.9607, 0.12", "238.268, -57.7241, 25.7863, 0.12", "239.901, -57.2405, 24.638, 0.12", "242.087, -56.3825, 22.3349, 0.12", "243.067, -55.8872, 20.9225, 0.12", "245.208, -54.6318, 16.8608, 0.12", "245.775, -54.1905, 15.4585, 0.12", "246.898, -52.8807, 11.5939, 0.12", "259.136, -57.381, 12.0653, 0.12", "271.435, -61.2273, 14.1102, 0.12", "283.712, -65.4844, 15.2966, 0.12", "294.507, -72.6206, 16.9627, 0.12", "306.332, -77.9529, 18.3759, 0.12", "316.881, -85.4262, 20.1386, 0.12", "325.335, -95.3285, 20.9919, 0.12", "334.466, -104.548, 19.6221, 0.12", "343.783, -113.616, 18.5222, 0.12", "352.799, -123.045, 18.3078, 0.12", "363.114, -130.584, 15.6553, 0.12", "373.181, -138.312, 12.6282, 0.12", "383.321, -146.457, 11.5838, 0.12", "393.812, -154.211, 11.3341, 0.12", "405.687, -159.426, 9.90551, 0.12" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "109.215, 51.0647, 49.9554, 0.36", "110.122, 51.9078, 50.184, 0.36", "111.644, 53.148, 50.4305, 0.36", "112.345, 53.6561, 50.5195, 0.36", "113.03, 54.0767, 50.5874, 0.36", "114.326, 54.7854, 50.6923, 0.36", "116.731, 56.0997, 50.8869, 0.36", "118.031, 56.6939, 50.9173, 0.36", "118.91, 57.0411, 50.8771, 0.36", "120.086, 57.4209, 50.7799, 0.36", "120.793, 57.583, 50.7159, 0.36", "129.839, 63.8961, 52.7832, 0.36", "138.231, 70.1899, 56.7717, 0.36", "145.903, 76.8495, 61.5422, 0.36" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "109.215, 51.0647, 49.9554, 0.36", "111.521, 50.564, 50.3681, 0.36", "113.076, 50.2261, 50.6466, 0.36", "114.756, 49.8614, 50.9472, 0.36", "125.214, 47.1773, 49.8927, 0.36", "135.032, 43.0752, 47.7788, 0.36", "145.513, 41.0397, 45.8623, 0.36", "156.023, 38.6103, 44.7032, 0.36", "166.706, 37.5281, 43.1603, 0.36" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "15.1101, -3.38781, 6.08469, 0.84", "17.2257, -4.6294, 6.3714, 0.48", "18.7956, -5.75861, 6.49268, 0.48", "20.0739, -6.91091, 6.69535, 0.36", "22.0691, -9.13862, 7.11756, 0.36", "22.8419, -10.2234, 7.32176, 0.36", "23.7415, -11.7113, 7.56954, 0.36", "24.5814, -13.6116, 7.76786, 0.36", "25.7166, -16.839, 8.01358, 0.36", "26.3093, -18.8059, 8.05375, 0.36", "26.9965, -21.1945, 7.97191, 0.36", "27.3847, -22.4468, 7.84661, 0.36", "28.2507, -24.9957, 7.41579, 0.36", "28.9558, -26.7763, 6.96175, 0.36", "29.9382, -28.7933, 6.24296, 0.36", "30.9951, -30.5483, 5.49954, 0.36", "32.4186, -32.5605, 4.54375, 0.36", "33.2709, -33.665, 4.00729, 0.36", "33.8702, -34.3938, 3.64459, 0.36", "34.7208, -35.441, 3.15188, 0.36", "35.763, -36.8596, 2.57951, 0.36", "36.7962, -38.4964, 1.99053, 0.36", "37.4744, -39.7329, 1.57244, 0.36", "38.1065, -41.1254, 1.21048, 0.36", "38.9985, -43.5358, 0.855995, 0.36", "39.7461, -45.9228, 0.741022, 0.36", "40.2073, -47.5893, 0.798158, 0.36", "40.7659, -49.6955, 0.94146, 0.36", "41.6114, -52.8072, 1.25145, 0.36", "42.4302, -55.5873, 1.66274, 0.36", "43.0017, -57.1929, 2.02934, 0.36", "43.5543, -58.4283, 2.39682, 0.36", "44.3196, -59.9172, 2.91863, 0.36", "44.7358, -60.6303, 3.19209, 0.36", "45.5606, -61.8205, 3.57922, 0.36", "46.5888, -63.2309, 3.96795, 0.36", "47.3969, -64.4346, 4.30031, 0.36", "48.2224, -65.7868, 4.67245, 0.36", "48.9627, -67.1029, 5.00331, 0.36", "49.4604, -68.0562, 5.21119, 0.36", "50.5987, -70.3487, 5.62108, 0.36", "51.7315, -72.8367, 5.97002, 0.36", "52.1716, -73.8957, 6.10806, 0.36", "52.7001, -75.2558, 6.27729, 0.36", "53.5767, -77.7191, 6.58445, 0.36" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.1101, -3.38781, 6.08469, 0.84", "15.8312, -4.30109, 7.14498, 0.72", "16.7106, -5.64524, 8.47011, 0.72", "17.6669, -7.17388, 9.73037, 0.6", "18.3654, -8.29205, 10.5445, 0.6", "20.2487, -11.2128, 12.3788, 0.6", "20.9478, -12.2629, 12.9285, 0.6", "21.7478, -13.5243, 13.5258, 0.6", "22.4239, -14.6443, 14.0047, 0.48", "22.8391, -15.3563, 14.2465, 0.48", "23.7157, -16.803, 14.6735, 0.48", "24.9379, -18.5819, 15.0659, 0.48", "26.2067, -20.2481, 15.5159, 0.48", "26.5305, -20.6546, 15.6429, 0.48", "27.1166, -21.3649, 15.8922, 0.48", "28.6128, -23.0601, 16.5122, 0.48", "29.593, -24.0893, 16.9575, 0.48", "30.7251, -25.1298, 17.4412, 0.48", "31.5406, -25.8209, 17.7847, 0.48", "32.7709, -26.8572, 18.3308, 0.48", "33.5086, -27.4697, 18.6731, 0.48", "34.9675, -28.6192, 19.4222, 0.48", "35.7001, -29.1435, 19.8305, 0.48", "36.6071, -29.7208, 20.3713, 0.48", "37.2264, -30.0576, 20.7556, 0.48", "41.43, -36.3293, 25.4399, 0.48", "47.5013, -40.7508, 30.1874, 0.48", "53.3844, -45.5016, 34.8529, 0.48", "57.595, -50.2196, 41.0947, 0.48", "60.648, -56.4634, 46.6301, 0.48", "63.3933, -62.7578, 52.2687, 0.48", "65.7448, -68.4687, 58.6565, 0.48", "68.3074, -72.7046, 66.0347, 0.48", "70.3943, -78.108, 72.7724, 0.48", "74.2146, -84.0831, 78.1251, 0.48", "77.1572, -90.7956, 83.1482, 0.48", "78.1297, -97.3665, 89.0495, 0.48", "80.3429, -104.112, 94.3924, 0.48", "83.3867, -109.802, 100.501, 0.48", "86.2463, -115.995, 106.195, 0.48", "87.585, -122.441, 112.162, 0.48", "88.3915, -127.844, 119.169, 0.48", "91.2125, -133.832, 125.096, 0.48", "93.2901, -138.888, 132.101, 0.48", "95.8717, -143.807, 139.036, 0.48", "98.9881, -149.619, 144.991, 0.48", "102.158, -155.005, 151.306, 0.48", "105.824, -159.562, 157.996, 0.48", "108.768, -165.044, 164.337, 0.48", "112.556, -171.197, 169.509, 0.48", "115.559, -178.207, 174.068, 0.48", "119.964, -185.539, 176.472, 0.48", "124.996, -192.407, 179.015, 0.48", "128.823, -199.607, 182.544, 0.48" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-15.1451, -42.2711, 11.7331, 0.84", "-16.1146, -45.4257, 12.5799, 0.24", "-16.9834, -48.2371, 13.2104, 0.84", "-17.5774, -50.1565, 13.5838, 0.6", "-19.0355, -54.6076, 14.3891, 0.48", "-19.5991, -56.1395, 14.6483, 0.48", "-20.1893, -57.4557, 14.7758, 0.48", "-20.5997, -58.2364, 14.8072, 0.48", "-21.2092, -59.2175, 14.7949, 0.48", "-21.9438, -60.0858, 14.7002, 0.48", "-23.2785, -61.0199, 14.3925, 0.48", "-24.3742, -61.6195, 14.0901, 0.48", "-26.2687, -62.5403, 13.4771, 0.48", "-26.7731, -62.7815, 13.3021, 0.48", "-27.8704, -63.3145, 12.9149, 0.48", "-29.0412, -63.9644, 12.4968, 0.48", "-30.4273, -64.8428, 12.0274, 0.48", "-31.3963, -65.5195, 11.7405, 0.48", "-32.6378, -66.4835, 11.3227, 0.48", "-33.7302, -67.4243, 10.8707, 0.48", "-34.5196, -68.1453, 10.4961, 0.48", "-35.5815, -69.1342, 9.95855, 0.48", "-36.3804, -69.8584, 9.55418, 0.48", "-38.4251, -71.6311, 8.4915, 0.48", "-39.6637, -72.6509, 7.82501, 0.48", "-40.7216, -73.4852, 7.27484, 0.48", "-41.4871, -74.1055, 6.84418, 0.48", "-41.9984, -74.549, 6.55355, 0.48", "-42.6275, -75.1176, 6.22799, 0.48", "-43.4233, -75.8652, 5.90665, 0.48", "-44.3276, -76.8509, 5.53365, 0.48", "-45.7714, -78.6892, 4.90946, 0.48", "-46.4657, -79.6793, 4.59987, 0.48", "-46.9056, -80.3661, 4.40236, 0.48", "-47.3277, -81.0641, 4.2435, 0.48", "-48.074, -82.3378, 4.03221, 0.48", "-48.824, -83.6343, 3.92146, 0.48", "-49.5729, -84.8995, 3.92613, 0.48", "-49.8819, -85.4416, 3.93343, 0.48", "-50.6051, -86.714, 3.95887, 0.48", "-50.9868, -87.3466, 3.97462, 0.48", "-51.8377, -88.6129, 4.01102, 0.48", "-52.7326, -89.8696, 4.05481, 0.48", "-53.5135, -90.9292, 4.07667, 0.48", "-54.1939, -91.856, 4.07339, 0.48", "-54.9244, -92.93, 3.94769, 0.48", "-55.5182, -93.886, 3.75998, 0.48", "-56.1631, -94.9755, 3.47332, 0.48", "-56.8486, -96.2376, 3.02284, 0.48", "-57.2031, -96.9216, 2.72606, 0.48", "-58.2667, -99.077, 1.58313, 0.48", "-58.8163, -100.191, 0.88001, 0.48", "-59.1925, -100.863, 0.397694, 0.48", "-59.9264, -101.974, -0.489791, 0.48", "-60.5001, -102.719, -1.09704, 0.48", "-61.3144, -103.636, -1.93672, 0.48", "-62.0711, -104.391, -2.65784, 0.48", "-63.0117, -105.288, -3.62434, 0.48", "-63.6375, -105.92, -4.30639, 0.48", "-64.5197, -106.89, -5.29452, 0.48", "-66.2322, -108.968, -7.33661, 0.48", "-66.9393, -109.874, -8.16588, 0.48", "-67.6129, -110.78, -8.93739, 0.48", "-68.3952, -111.875, -9.7998, 0.48", "-69.396, -113.291, -10.7757, 0.48", "-70.0917, -114.311, -11.3403, 0.48", "-71.1182, -115.836, -11.8988, 0.48", "-71.7066, -116.78, -12.2167, 0.48", "-72.1646, -117.519, -12.4457, 0.48", "-72.8795, -118.672, -12.8193, 0.48", "-73.7171, -120.051, -13.2895, 0.48", "-74.4313, -121.242, -13.712, 0.48", "-76.5569, -124.887, -15.0544, 0.36", "-77.5479, -126.681, -15.6821, 0.36", "-78.3695, -128.195, -16.1322, 0.36", "-79.1816, -129.694, -16.5288, 0.36", "-79.9988, -131.175, -16.902, 0.36", "-80.6401, -132.33, -17.1497, 0.36", "-82.4491, -135.501, -17.4961, 0.36", "-83.5542, -137.549, -17.6126, 0.36", "-83.9992, -138.39, -17.5933, 0.36" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-15.1451, -42.2711, 11.7331, 0.84", "-17.7379, -43.0757, 13.021, 0.6", "-18.6085, -43.2755, 13.3878, 0.6", "-19.8212, -43.4899, 13.829, 0.6", "-22.9041, -43.9222, 14.8479, 0.36", "-23.7398, -44.0729, 15.0954, 0.36", "-24.5272, -44.2236, 15.3253, 0.36", "-25.4411, -44.3702, 15.5316, 0.36", "-25.9421, -44.4347, 15.6851, 0.36", "-27.1373, -44.5815, 16.0722, 0.36", "-28.7606, -44.855, 16.505, 0.36", "-30.2807, -45.1878, 16.9956, 0.24", "-31.0372, -45.3798, 17.284, 0.24", "-33.171, -45.9836, 18.1982, 0.24", "-41.1994, -47.7561, 20.3837, 0.24", "-48.8753, -49.2497, 23.7339, 0.24", "-56.1728, -51.9593, 27.1658, 0.24", "-64.2346, -53.6007, 29.3304, 0.24", "-72.0166, -56.4324, 31.2787, 0.24", "-79.1689, -60.3151, 33.7572, 0.24", "-86.0831, -64.2676, 36.7481, 0.24", "-91.5106, -70.1809, 39.5672, 0.24", "-96.1446, -76.9966, 41.6755, 0.24", "-100.083, -83.9862, 44.5057, 0.24", "-103.924, -89.9373, 49.218, 0.24", "-106.831, -96.1167, 54.2914, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.0743, -9.53503, 12.8221, 0.96", "-11.5293, -9.29234, 11.8611, 0.36", "-12.9321, -9.02488, 11.0118, 0.36", "-13.9477, -8.83286, 10.3977, 0.36", "-15.1036, -8.6305, 9.68892, 0.36", "-19.4361, -7.9546, 7.09944, 0.36", "-21.0179, -7.72107, 6.19299, 0.36", "-22.7888, -7.48092, 5.19165, 0.36", "-24.4153, -7.29381, 4.22599, 0.36", "-25.573, -7.19902, 3.54342, 0.36", "-27.0671, -7.1294, 2.75066, 0.36", "-28.1203, -7.15174, 2.32604, 0.36", "-29.9877, -7.13012, 1.64321, 0.36", "-31.5838, -7.05031, 1.1996, 0.36", "-32.3818, -6.94834, 1.10917, 0.36", "-34.6175, -6.49311, 1.20367, 0.36", "-35.5746, -6.22274, 1.36529, 0.36", "-37.8371, -5.5116, 1.90206, 0.36", "-39.4661, -4.93968, 2.39118, 0.36", "-42.1804, -3.96337, 3.29202, 0.36", "-43.7543, -3.43893, 3.81397, 0.36", "-45.3404, -2.96075, 4.32431, 0.36", "-46.7715, -2.56393, 4.74673, 0.36", "-48.2091, -2.26157, 5.10566, 0.36", "-49.4328, -2.05296, 5.32924, 0.36", "-50.3929, -1.91122, 5.39244, 0.36", "-51.8944, -1.68935, 5.43263, 0.36", "-53.2775, -1.5002, 5.40441, 0.36", "-54.6903, -1.26921, 5.34259, 0.36", "-56.354, -0.958532, 5.2175, 0.36", "-59.353, -0.386036, 4.93312, 0.36", "-61.0226, -0.0587018, 4.7651, 0.36", "-63.1106, 0.394072, 4.49916, 0.36", "-64.4792, 0.74466, 4.34578, 0.36", "-65.6435, 1.09406, 4.22408, 0.36", "-67.0143, 1.54743, 4.09207, 0.36", "-69.265, 2.30803, 3.95417, 0.36", "-70.7988, 2.89673, 3.67263, 0.36", "-72.4146, 3.539, 3.22345, 0.36", "-74.0509, 4.11699, 2.60797, 0.24", "-75.2761, 4.51605, 2.07482, 0.24", "-76.3596, 4.84294, 1.49971, 0.24", "-80.3466, 5.78848, -0.778422, 0.24", "-81.2549, 5.92992, -1.28113, 0.24", "-82.5594, 6.06913, -2.03319, 0.24", "-83.974, 6.17552, -2.79084, 0.24", "-86.0917, 6.28211, -3.84741, 0.12", "-87.9631, 6.35656, -4.67779, 0.12", "-89.0928, 6.40769, -5.12132, 0.12", "-91.1409, 6.58993, -6.07296, 0.12", "-92.2637, 6.72708, -6.63743, 0.12", "-93.3958, 6.82809, -7.3058, 0.12", "-94.399, 6.87501, -7.9744, 0.12", "-97.0923, 6.85477, -10.0526, 0.12", "-99.7076, 6.71916, -12.2185, 0.12", "-101.986, 6.46409, -14.1334, 0.12", "-105.64, 5.85693, -17.1892, 0.12", "-108.222, 5.31144, -19.237, 0.12", "-111.346, 4.56659, -21.5276, 0.12", "-113.398, 4.05206, -22.8481, 0.12", "-115.28, 3.62241, -23.8645, 0.12", "-117.87, 3.14357, -25.0109, 0.12", "-121.154, 2.79022, -25.9404, 0.12", "-123.467, 2.6653, -26.4097, 0.12", "-125.897, 2.62, -26.6962, 0.12", "-128.606, 2.65673, -26.9269, 0.12", "-129.665, 2.69931, -26.9948, 0.12", "-132.882, 2.83384, -27.0843, 0.12", "-134.998, 2.88189, -27.0671, 0.12", "-137.221, 2.83686, -27.0252, 0.12", "-138.367, 2.79487, -26.9978, 0.12", "-139.696, 2.75697, -26.9406, 0.12", "-140.966, 2.74985, -26.8974, 0.12", "-143.021, 2.74257, -26.8769, 0.12", "-144.583, 2.7335, -26.8779, 0.12", "-146.493, 2.71012, -26.9817, 0.12", "-148.909, 2.62369, -27.2233, 0.12", "-150.4, 2.54687, -27.4363, 0.12", "-152.977, 2.37832, -27.948, 0.12", "-155.29, 2.1846, -28.6334, 0.12", "-157.128, 2.06064, -29.5758, 0.12", "-158.909, 1.99389, -31.0545, 0.12", "-160.329, 1.96768, -32.4411, 0.12", "-161.843, 1.98389, -34.1541, 0.12", "-163.97, 2.11495, -37.2267, 0.12", "-166.99, 2.44459, -42.7955, 0.12" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-10.0743, -9.53503, 12.8221, 0.96", "-11.7583, -9.46002, 13.4843, 0.72", "-13.0538, -9.51697, 14.2179, 0.72", "-13.6273, -9.54218, 14.5426, 0.72", "-14.8075, -9.59406, 15.2109, 0.72", "-15.904, -9.64227, 15.8318, 0.72", "-16.8845, -9.68537, 16.387, 0.72", "-18.3363, -9.92578, 17.1376, 0.72" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-14.5337, 43.0535, -12.5809, 1.8", "-14.6201, 45.5455, -12.86, 1.08", "-14.769, 46.8149, -13.1021, 1.08", "-15.1066, 48.5355, -13.4678, 1.08", "-15.4835, 50.1145, -13.7907, 1.08", "-16.5478, 54.4412, -14.5861, 1.08", "-17.3873, 58.1978, -15.0995, 1.08", "-18.0501, 61.2502, -15.4387, 1.08", "-18.7564, 64.4698, -15.7899, 1.08", "-19.3918, 67.4067, -16.0815, 1.08", "-19.9926, 70.0815, -16.289, 1.08", "-20.8665, 73.7191, -16.3571, 1.08", "-21.2333, 75.487, -16.1611, 1.08" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-14.5337, 43.0535, -12.5809, 1.8", "-15.7791, 43.1786, -15.5317, 0.36", "-16.1244, 43.1848, -16.5512, 0.36", "-16.3599, 43.1271, -17.3837, 0.36", "-16.6931, 42.914, -19.0356, 0.36", "-16.8117, 42.8381, -19.6236, 0.36", "-16.9649, 42.7401, -20.3829, 0.36", "-17.3458, 42.2468, -22.8247, 0.48", "-17.4695, 41.9493, -24.2672, 0.48", "-17.5222, 41.4341, -26.5562, 0.48" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "53.5767, -77.7191, 6.58445, 0.36", "52.7755, -81.6109, 6.61653, 0.36", "52.7052, -83.3089, 6.61111, 0.36", "52.9078, -84.9951, 6.55173, 0.36", "53.5207, -87.5642, 6.32857, 0.36", "54.2285, -89.8357, 6.14098, 0.36", "54.8069, -91.5099, 6.01065, 0.36", "56.032, -94.2576, 5.9283, 0.36", "57.1994, -96.4339, 5.79551, 0.36", "58.581, -98.6187, 5.55574, 0.36", "59.3587, -99.7075, 5.31977, 0.36", "60.2589, -100.772, 5.06751, 0.36" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "53.5767, -77.7191, 6.58445, 0.36", "52.7327, -78.4613, 6.01829, 0.36", "52.4734, -78.6893, 5.84438, 0.36" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-83.9992, -138.39, -17.5933, 0.36", "-84.6729, -140.129, -17.6413, 0.24", "-85.2256, -141.432, -17.6826, 0.24", "-85.6705, -142.465, -17.6478, 0.24", "-86.448, -144.227, -17.5338, 0.24", "-86.875, -145.157, -17.4631, 0.24", "-87.571, -146.621, -17.3451, 0.24", "-87.9036, -147.293, -17.2797, 0.24", "-88.8856, -149.242, -17.0569, 0.24", "-89.3874, -150.199, -16.9393, 0.24", "-89.9258, -151.165, -16.8134, 0.24", "-90.3953, -151.999, -16.7137, 0.24", "-90.9581, -153.046, -16.5434, 0.24", "-91.6376, -154.267, -16.3128, 0.24", "-92.3157, -155.413, -16.0827, 0.24", "-92.906, -156.379, -15.8545, 0.24", "-93.6111, -157.495, -15.5697, 0.24", "-95.1447, -159.882, -14.97, 0.24", "-95.7609, -160.8, -14.7442, 0.24", "-96.3875, -161.737, -14.4995, 0.12", "-96.9962, -162.639, -14.3128, 0.12", "-97.8301, -163.871, -14.1497, 0.12", "-98.7801, -165.283, -14.1105, 0.12", "-99.1611, -165.862, -14.1769, 0.12", "-99.815, -166.968, -14.3473, 0.12", "-100.769, -168.738, -14.6619, 0.12", "-101.153, -169.557, -14.8174, 0.12", "-101.578, -170.676, -14.9883, 0.12", "-101.928, -171.796, -15.163, 0.12", "-102.142, -172.63, -15.2606, 0.12", "-102.341, -173.54, -15.2913, 0.12", "-102.527, -174.47, -15.1658, 0.12", "-102.769, -175.726, -14.9215, 0.12", "-103.0, -176.846, -14.628, 0.12", "-103.264, -177.901, -14.3041, 0.12", "-103.619, -179.042, -13.9287, 0.12", "-104.152, -180.351, -13.4725, 0.12", "-104.558, -181.134, -13.1828, 0.12", "-105.052, -181.943, -12.8903, 0.12", "-105.715, -182.901, -12.6054, 0.12", "-106.264, -183.63, -12.4554, 0.12", "-107.175, -184.77, -12.2856, 0.12", "-107.658, -185.381, -12.1995, 0.12", "-108.21, -186.137, -12.0584, 0.12", "-109.233, -187.699, -11.7052, 0.12", "-109.923, -188.86, -11.3822, 0.12", "-110.385, -189.689, -11.1158, 0.12", "-110.991, -190.824, -10.7059, 0.12", "-111.709, -192.179, -10.208, 0.12", "-112.191, -193.068, -9.86585, 0.12", "-112.759, -194.055, -9.48172, 0.12", "-113.22, -194.842, -9.25555, 0.12", "-113.546, -195.39, -9.13362, 0.12", "-114.056, -196.228, -8.99606, 0.12", "-114.601, -197.132, -8.89714, 0.12", "-115.122, -198.04, -8.8306, 0.12", "-115.893, -199.491, -8.89852, 0.12", "-116.353, -200.387, -9.00099, 0.12", "-116.787, -201.234, -9.1246, 0.12", "-117.235, -202.072, -9.24635, 0.12", "-117.649, -202.783, -9.41953, 0.12", "-118.928, -204.675, -10.1187, 0.12", "-119.452, -205.305, -10.4487, 0.12", "-120.271, -206.204, -11.0003, 0.12", "-120.826, -206.809, -11.3731, 0.12", "-121.552, -207.618, -11.8941, 0.12", "-122.14, -208.27, -12.2775, 0.12", "-122.988, -209.191, -12.7165, 0.12", "-123.433, -209.66, -12.9382, 0.12", "-124.367, -210.62, -13.3463, 0.12", "-125.265, -211.563, -13.6192, 0.12", "-126.369, -212.741, -13.8623, 0.12", "-127.224, -213.663, -14.0067, 0.12", "-128.086, -214.577, -14.1024, 0.12", "-128.824, -215.314, -14.1513, 0.12", "-129.838, -216.191, -14.1233, 0.12" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-83.9992, -138.39, -17.5933, 0.36", "-85.0678, -138.859, -17.624, 0.36", "-86.3414, -139.434, -17.6634, 0.36", "-87.6436, -140.035, -17.4481, 0.36", "-88.683, -140.519, -17.2053, 0.24", "-89.8679, -141.058, -16.9288, 0.24", "-90.9177, -141.527, -16.7002, 0.24", "-92.2167, -142.103, -16.411, 0.24", "-95.5511, -143.532, -15.5785, 0.24", "-97.694, -144.431, -14.9972, 0.24", "-100.354, -145.483, -14.2782, 0.24", "-102.239, -146.137, -13.7993, 0.24", "-104.489, -146.782, -13.283, 0.24", "-106.384, -147.211, -12.8964, 0.24", "-108.467, -147.553, -12.5257, 0.24", "-110.787, -147.78, -12.0231, 0.24", "-112.944, -147.866, -11.4245, 0.24", "-114.867, -147.858, -10.7786, 0.24", "-116.415, -147.802, -10.2226, 0.24", "-118.42, -147.735, -9.49447, 0.24", "-120.975, -147.722, -8.4735, 0.24", "-123.747, -147.934, -7.10134, 0.24", "-125.566, -148.232, -6.09627, 0.24", "-127.351, -148.659, -5.02633, 0.24", "-128.816, -149.128, -4.13071, 0.24", "-130.684, -149.876, -3.03711, 0.24", "-133.681, -151.354, -1.4465, 0.24", "-135.572, -152.444, -0.568076, 0.24", "-137.484, -153.627, 0.299218, 0.24", "-139.538, -154.969, 1.25179, 0.24", "-141.051, -155.949, 1.89808, 0.24", "-142.75, -157.022, 2.40612, 0.24", "-144.505, -158.119, 2.60415, 0.24", "-153.365, -160.15, 7.5736, 0.24", "-161.577, -163.162, 13.125, 0.24", "-169.403, -166.769, 18.8745, 0.24", "-176.095, -170.091, 26.0504, 0.24", "-184.554, -173.114, 31.2109, 0.24", "-194.195, -174.729, 34.6387, 0.24", "-203.064, -177.491, 39.225, 0.24", "-211.997, -178.859, 44.2893, 0.24", "-220.789, -180.177, 49.608, 0.24", "-228.211, -182.325, 56.5078, 0.24", "-234.266, -184.697, 64.5726, 0.24", "-240.137, -185.617, 73.0581, 0.24", "-245.211, -186.611, 82.0347, 0.24", "-250.576, -186.865, 90.8931, 0.24", "-257.008, -189.12, 98.6946, 0.24" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-18.3363, -9.92578, 17.1376, 0.72", "-19.2159, -10.9545, 18.8386, 0.36", "-19.6776, -11.4946, 19.7316, 0.36" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-18.3363, -9.92578, 17.1376, 0.72", "-20.1133, -8.12228, 17.5914, 0.72", "-21.2582, -7.18617, 18.0045, 0.72", "-22.3811, -6.41407, 18.5532, 0.72", "-22.9653, -6.0317, 18.8753, 0.6", "-23.9435, -5.3899, 19.4537, 0.6", "-24.6191, -4.93219, 19.8789, 0.6", "-26.2994, -3.92014, 21.0776, 0.6", "-27.6629, -3.21169, 22.0643, 0.6", "-28.5572, -2.82884, 22.688, 0.6", "-29.291, -2.5615, 23.1861, 0.6", "-30.4186, -2.23181, 23.9182, 0.6", "-31.7681, -2.03907, 24.8737, 0.6", "-32.6124, -2.08803, 25.4668, 0.6", "-33.719, -2.30884, 26.2517, 0.6", "-34.6464, -2.57776, 26.9298, 0.6", "-35.5672, -2.89384, 27.6075, 0.6", "-38.0951, -3.92011, 29.475, 0.6", "-38.7264, -4.19181, 29.9404, 0.6", "-39.2641, -4.40531, 30.3294, 0.48", "-39.8815, -4.61259, 30.7227, 0.48", "-40.5916, -4.79248, 31.0521, 0.48", "-41.3283, -4.87048, 31.2581, 0.48", "-42.5058, -4.79938, 31.5395, 0.48", "-43.6013, -4.60228, 31.8814, 0.48", "-44.5576, -4.38621, 32.2161, 0.48", "-45.7298, -4.13704, 32.6425, 0.48", "-47.9438, -3.74206, 33.4455, 0.48", "-50.2768, -3.38683, 34.2731, 0.48", "-51.5703, -3.20703, 34.7153, 0.48", "-52.7386, -3.04981, 35.0919, 0.48", "-54.6705, -2.77496, 35.646, 0.48", "-56.4571, -2.53482, 36.0889, 0.48", "-57.5958, -2.43692, 36.3273, 0.48", "-59.5403, -2.37627, 36.6431, 0.48", "-61.1195, -2.35205, 36.9035, 0.48", "-62.8536, -2.28695, 37.2037, 0.48", "-64.2043, -2.16411, 37.447, 0.48", "-65.3625, -2.03001, 37.6665, 0.48", "-66.8185, -1.92472, 37.9547, 0.48", "-67.9695, -2.02144, 38.1927, 0.48", "-69.6112, -2.46409, 38.5799, 0.48" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-21.2333, 75.487, -16.1611, 1.08", "-21.6554, 77.6562, -16.15, 0.96", "-21.9736, 79.4046, -16.123, 0.96", "-22.3118, 81.5906, -16.0648, 0.96", "-22.5233, 83.3741, -15.9887, 0.96", "-22.6476, 84.727, -15.9138, 0.96", "-22.8743, 87.1945, -15.7773, 0.96", "-22.9927, 88.6368, -15.6663, 0.96", "-23.0872, 90.5475, -15.4978, 0.96", "-23.1064, 92.6027, -15.3066, 0.84", "-23.0986, 94.1792, -15.149, 0.84" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-21.2333, 75.487, -16.1611, 1.08", "-19.1049, 78.2084, -18.6659, 0.24", "-18.0529, 79.625, -19.935, 0.24", "-17.2043, 80.7101, -20.866, 0.24", "-15.5109, 82.6924, -22.4311, 0.24", "-13.7902, 84.6204, -23.9721, 0.24", "-12.4727, 86.0094, -25.0736, 0.24", "-11.6735, 86.8728, -25.632, 0.24", "-10.4495, 88.2092, -26.4442, 0.24", "-9.18472, 89.6835, -27.2139, 0.24", "-7.35148, 91.8929, -28.1391, 0.24", "-6.06604, 93.6784, -28.8367, 0.24", "-4.65729, 95.7562, -29.6626, 0.24", "-3.48129, 97.7128, -30.4216, 0.24", "-2.45833, 99.8295, -31.3085, 0.24", "-1.65368, 101.882, -32.1783, 0.24", "-0.654075, 104.884, -33.3631, 0.24", "0.0917357, 107.473, -34.4049, 0.24", "0.734608, 110.124, -35.5657, 0.24", "1.38383, 113.221, -36.9385, 0.24", "1.6871, 114.853, -37.6338, 0.24", "2.06492, 116.882, -38.449, 0.24", "2.57718, 119.508, -39.4916, 0.24", "3.45385, 123.759, -41.2798, 0.24", "4.18085, 126.521, -42.5936, 0.24", "4.83761, 128.354, -43.5778, 0.24", "5.46539, 129.802, -44.5583, 0.24", "6.61193, 132.145, -46.5068, 0.24", "7.60327, 133.834, -48.2603, 0.24", "8.86231, 135.621, -50.4632, 0.24", "9.96291, 136.998, -52.391, 0.24", "11.4068, 138.547, -54.6507, 0.24", "12.3391, 139.498, -55.9656, 0.24", "13.636, 140.851, -57.6359, 0.24", "14.2307, 141.552, -58.3663, 0.24", "15.8425, 143.656, -60.104, 0.24", "17.2523, 145.681, -61.4815, 0.24", "18.3965, 147.388, -62.4402, 0.24", "20.0055, 149.912, -63.8102, 0.24", "21.1934, 151.908, -64.8566, 0.24", "22.3256, 153.876, -65.9309, 0.24", "22.8219, 154.845, -66.4653, 0.24", "23.1738, 155.564, -66.8581, 0.24", "24.2397, 157.519, -67.8991, 0.24", "25.3113, 159.155, -68.7482, 0.24", "26.0673, 160.209, -69.3108, 0.24", "26.9679, 161.447, -69.9179, 0.24", "27.772, 162.548, -70.4218, 0.24", "28.7042, 163.934, -71.0274, 0.24", "29.5527, 165.428, -71.7165, 0.24", "30.2206, 166.77, -72.4074, 0.24", "30.8789, 168.303, -73.2899, 0.24", "31.6167, 170.31, -74.5461, 0.24", "32.2241, 172.195, -75.8238, 0.24", "33.0889, 175.222, -78.0285, 0.24", "33.3818, 176.257, -78.8473, 0.24", "33.8386, 177.951, -80.3261, 0.12", "34.235, 179.395, -81.6335, 0.12", "34.7386, 181.407, -83.514, 0.12", "35.0187, 182.777, -84.7916, 0.12", "35.3081, 184.683, -86.5844, 0.12", "35.4861, 186.955, -88.7179, 0.12", "35.5509, 188.471, -90.0843, 0.12", "35.5963, 191.725, -92.8184, 0.12", "35.608, 193.699, -94.3667, 0.12", "35.6333, 195.613, -95.7128, 0.12", "35.7092, 197.408, -96.8191, 0.12", "35.8762, 198.9, -97.6381, 0.12", "36.2785, 202.066, -99.3243, 0.12", "36.5717, 204.118, -100.401, 0.12", "36.7376, 205.818, -101.525, 0.12", "36.8854, 207.992, -103.107, 0.12", "36.9527, 209.677, -104.392, 0.12", "37.0281, 214.048, -107.832, 0.12", "37.0369, 216.397, -109.704, 0.12", "37.1259, 222.425, -114.554, 0.12", "37.217, 224.472, -116.211, 0.12", "37.3832, 226.557, -117.859, 0.12", "37.793, 229.488, -120.02, 0.12", "38.3368, 231.847, -121.516, 0.12", "38.8648, 233.627, -122.463, 0.12", "39.9931, 236.447, -123.767, 0.12", "40.6038, 237.781, -124.505, 0.12", "41.7101, 240.037, -126.004, 0.12", "42.8329, 242.298, -127.57, 0.12", "43.3654, 243.348, -128.32, 0.12", "44.507, 245.618, -129.987, 0.12", "45.9568, 248.409, -132.202, 0.12", "48.0999, 252.563, -135.742, 0.12" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-17.5222, 41.4341, -26.5562, 0.48", "-16.4214, 41.3502, -30.0951, 0.48", "-15.7609, 41.6627, -32.9866, 0.48", "-15.5538, 41.8691, -34.0281, 0.48", "-14.9542, 42.7041, -37.9316, 0.36", "-14.8111, 42.9445, -38.8795, 0.36", "-14.496, 43.8775, -41.9319, 0.36", "-14.176, 45.34, -45.7263, 0.36", "-14.1022, 45.8285, -46.7425, 0.36", "-13.9646, 47.1341, -49.0456, 0.36", "-13.8165, 48.9509, -51.7171, 0.36", "-13.6337, 50.4704, -53.759, 0.36", "-13.4557, 51.6624, -55.2216, 0.36", "-13.0003, 54.0038, -58.2096, 0.24", "-12.833, 54.7917, -59.249, 0.24", "-12.5931, 55.8795, -60.8448, 0.24", "-12.4165, 56.8905, -62.5719, 0.24", "-12.272, 57.6794, -64.1032, 0.24", "-12.1223, 59.3701, -67.6841, 0.24", "-12.1508, 60.0584, -69.1438, 0.24", "-12.1649, 61.5135, -72.0594, 0.24", "-12.1444, 62.5901, -73.9624, 0.24", "-12.0102, 64.4273, -77.0047, 0.24", "-11.8003, 65.542, -78.7438, 0.24", "-11.5172, 66.6427, -80.2918, 0.24", "-10.282, 70.2578, -85.0072, 0.12", "-9.77152, 71.4554, -86.4447, 0.12", "-8.3564, 74.1141, -89.5617, 0.12", "-6.36252, 77.4538, -93.3383, 0.12", "-5.48511, 78.745, -94.7608, 0.12", "-4.37334, 80.252, -96.4335, 0.12", "-2.32104, 82.9101, -99.3209, 0.12", "-0.360007, 85.3242, -101.948, 0.12", "0.87938, 86.8416, -103.399, 0.12", "1.74421, 87.8619, -104.317, 0.12" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-17.5222, 41.4341, -26.5562, 0.48", "-19.1416, 41.8611, -27.7115, 0.24", "-19.9809, 42.2491, -28.9341, 0.24", "-20.3456, 42.3785, -29.548, 0.24", "-20.9649, 42.5063, -30.5897, 0.24", "-21.5095, 42.545, -31.4783, 0.24", "-23.3425, 42.5377, -34.3444, 0.24", "-24.0142, 42.5258, -35.6183, 0.24", "-24.6748, 42.5332, -36.9614, 0.24", "-25.1046, 42.5774, -37.9069, 0.24", "-25.5853, 42.6664, -39.0096, 0.24", "-26.0893, 42.7228, -40.2642, 0.24", "-26.736, 42.77, -42.0365, 0.24", "-27.3036, 42.8269, -43.8354, 0.24", "-27.9341, 42.9262, -45.959, 0.24", "-28.1048, 42.9744, -46.5535, 0.24", "-28.6996, 43.1771, -48.5974, 0.24", "-29.2007, 43.3341, -50.1582, 0.24", "-29.7357, 43.4252, -51.5597, 0.24", "-30.2013, 43.478, -52.7159, 0.24", "-30.8511, 43.5232, -54.2026, 0.24", "-31.516, 43.5668, -55.6401, 0.24", "-32.0114, 43.5892, -56.552, 0.24", "-32.6329, 43.5707, -57.5901, 0.24", "-33.6879, 43.4115, -59.2817, 0.24", "-34.6593, 43.0839, -60.8602, 0.24", "-35.1285, 42.8952, -61.5597, 0.24", "-36.2254, 42.4801, -62.9486, 0.24", "-37.2891, 42.0754, -64.1871, 0.24", "-38.444, 41.6441, -65.4571, 0.24", "-39.6593, 41.179, -66.6432, 0.24", "-41.0966, 40.6407, -67.9805, 0.24", "-42.2319, 40.2944, -68.9862, 0.24", "-43.6305, 40.0183, -70.1025, 0.24", "-44.906, 39.9781, -70.9036, 0.24", "-46.4877, 40.258, -71.5026, 0.24", "-47.3399, 40.576, -71.6447, 0.24", "-49.2457, 41.5994, -71.6992, 0.24", "-50.5737, 42.5549, -71.6979, 0.24", "-52.0767, 43.6597, -71.5497, 0.24", "-54.4361, 45.3537, -71.226, 0.24", "-55.6624, 46.1916, -71.0975, 0.24", "-56.8468, 46.9158, -71.0206, 0.24", "-58.9634, 47.9515, -71.0988, 0.24", "-61.9911, 49.1193, -71.632, 0.24", "-63.4286, 49.5757, -72.0939, 0.24", "-66.2589, 50.372, -73.3129, 0.24", "-66.9857, 50.5627, -73.6539, 0.24", "-69.0848, 51.1617, -74.8744, 0.24", "-70.3221, 51.585, -75.7526, 0.24", "-71.7236, 52.296, -77.1211, 0.24", "-72.0714, 52.5077, -77.518, 0.24", "-72.9824, 53.1034, -78.7131, 0.24", "-74.4275, 54.0043, -80.6676, 0.24", "-75.1059, 54.381, -81.5825, 0.24", "-76.6618, 54.9822, -83.8125, 0.24", "-77.1136, 55.0742, -84.4501, 0.24", "-77.8775, 55.1034, -85.4297, 0.24", "-78.9822, 54.9545, -86.8237, 0.24", "-79.7731, 54.7556, -87.9018, 0.24", "-80.508, 54.5423, -89.0684, 0.24", "-81.1878, 54.3821, -90.4284, 0.24", "-81.8516, 54.3571, -92.0624, 0.24", "-82.5563, 54.4866, -94.3298, 0.24", "-83.4795, 54.8574, -97.5383, 0.24", "-83.9191, 55.0758, -98.913, 0.24", "-84.7738, 55.5385, -101.352, 0.24", "-85.0931, 55.7066, -102.17, 0.24", "-86.2773, 56.2485, -104.333, 0.24", "-87.5088, 56.6719, -106.072, 0.24", "-89.0065, 56.9948, -107.824, 0.24", "-89.7865, 57.0823, -108.661, 0.24", "-90.7069, 57.1732, -109.518, 0.24", "-93.0453, 57.3839, -111.938, 0.24", "-94.8093, 57.5054, -113.892, 0.24", "-95.5263, 57.5013, -114.76, 0.24", "-96.4032, 57.4454, -115.823, 0.24", "-98.4611, 57.3041, -118.261, 0.24", "-101.073, 57.2096, -121.364, 0.24", "-102.331, 57.1744, -122.751, 0.24", "-104.01, 57.1992, -124.515, 0.24", "-105.55, 57.3134, -126.168, 0.24", "-107.49, 57.6009, -128.427, 0.24", "-108.388, 57.7981, -129.504, 0.24", "-109.608, 58.1568, -130.832, 0.24", "-111.546, 58.9222, -133.153, 0.24", "-112.409, 59.3698, -134.357, 0.24", "-113.662, 60.1357, -136.406, 0.24" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "60.2589, -100.772, 5.06751, 0.36", "61.1815, -102.025, 4.6531, 0.36", "62.3956, -103.856, 4.25324, 0.36", "63.3138, -105.299, 4.02103, 0.36", "64.0253, -106.465, 3.87048, 0.36", "65.0321, -108.086, 3.68303, 0.36", "66.143, -109.865, 3.4911, 0.36", "67.0294, -111.353, 3.39926, 0.36", "67.2822, -111.761, 3.39215, 0.36", "68.0289, -112.967, 3.36288, 0.36", "68.6269, -113.937, 3.3114, 0.36", "69.4535, -115.149, 3.20835, 0.36", "70.092, -116.058, 3.06199, 0.36", "70.6654, -116.835, 2.91069, 0.36", "71.351, -117.766, 2.71002, 0.36", "71.974, -118.619, 2.52509, 0.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "60.2589, -100.772, 5.06751, 0.36", "58.3632, -103.013, 5.18535, 0.36", "43.149, -125.835, 3.252, 0.36", "36.8072, -137.982, 1.63454, 0.36", "31.6147, -150.463, -1.12769, 0.36", "24.2063, -161.53, -4.73453, 0.36", "17.612, -173.571, -6.11503, 0.36", "10.4557, -184.866, -9.52158, 0.36", "2.43355, -195.322, -13.6056, 0.36", "-3.9789, -205.463, -20.4189, 0.36", "-11.3788, -215.922, -25.5405, 0.36", "-18.0102, -226.681, -31.0769, 0.36", "-23.0427, -238.527, -36.0476, 0.36", "-28.8692, -250.307, -40.2514, 0.36", "-34.607, -262.446, -43.4304, 0.36", "-38.7713, -275.424, -45.5762, 0.36", "-40.7898, -288.936, -47.5076, 0.36", "-42.52, -302.253, -50.6743, 0.36", "-42.6156, -314.819, -56.3715, 0.36", "-43.4209, -327.56, -61.6065, 0.36", "-45.7876, -339.583, -67.9485, 0.36", "-50.6371, -349.297, -76.4629, 0.36", "-55.7229, -359.421, -84.339, 0.36", "-58.9322, -369.767, -92.885, 0.36", "-60.8887, -381.184, -100.381, 0.36", "-60.924, -390.984, -110.094, 0.36", "-60.2109, -402.39, -117.826, 0.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "52.4734, -78.6893, 5.84438, 0.36", "53.2533, -80.0199, 6.06804, 0.24", "53.8539, -80.8338, 6.21613, 0.24", "54.9101, -82.127, 6.44376, 0.24", "55.4167, -82.7514, 6.56613, 0.24", "56.0819, -83.5703, 6.7684, 0.12", "56.7675, -84.4265, 6.99708, 0.12", "57.6325, -85.3687, 7.31999, 0.12", "58.0419, -85.7947, 7.48367, 0.12", "58.9065, -86.6963, 7.86031, 0.24", "60.0167, -87.8779, 8.40606, 0.24", "60.5056, -88.4456, 8.66156, 0.24", "61.0361, -89.17, 8.91054, 0.24", "61.6383, -90.2051, 9.18076, 0.24", "62.1939, -91.5004, 9.3396, 0.24", "62.474, -92.4773, 9.33615, 0.24", "62.7869, -94.019, 9.22126, 0.24", "63.0374, -95.9442, 8.98578, 0.12", "63.0965, -97.449, 8.70997, 0.12", "62.9467, -99.6048, 8.16482, 0.12", "62.8625, -100.061, 8.01623, 0.12", "66.6309, -106.145, 7.8156, 0.12", "70.453, -112.198, 7.72716, 0.12", "75.0458, -117.56, 6.54003, 0.12", "78.8898, -123.216, 4.42126, 0.12", "83.2424, -128.774, 3.22867, 0.12" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "52.4734, -78.6893, 5.84438, 0.36", "51.3595, -77.4258, 5.97372, 0.24", "50.4878, -76.4369, 6.07494, 0.24", "49.2614, -75.0459, 6.21732, 0.24", "46.8035, -72.2578, 6.50271, 0.24", "43.8304, -68.8853, 6.84791, 0.24", "38.2133, -60.5924, 7.46654, 0.24", "33.6265, -51.6668, 7.49887, 0.24" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-19.6776, -11.4946, 19.7316, 0.36", "-21.4729, -13.4054, 20.9009, 0.36", "-22.5785, -14.5821, 21.621, 0.36", "-23.9373, -16.0282, 22.506, 0.36", "-24.9858, -17.1442, 23.1889, 0.36", "-33.8091, -24.3507, 28.1006, 0.36", "-42.2336, -31.2312, 34.0668, 0.36", "-51.3093, -37.0653, 40.1907, 0.36", "-59.6595, -44.6506, 45.3527, 0.36", "-75.0146, -60.5297, 56.63, 0.36", "-84.1163, -67.2218, 61.7568, 0.36", "-93.7721, -71.3752, 68.3463, 0.36", "-103.772, -74.459, 75.0098, 0.36" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-19.6776, -11.4946, 19.7316, 0.36", "-20.1494, -10.0534, 22.8248, 0.36", "-20.4819, -9.03764, 25.0049, 0.36", "-22.8736, -5.11444, 35.2914, 0.36", "-24.9997, -1.42367, 45.7212, 0.36", "-27.3048, 2.36928, 56.0761, 0.36", "-30.9799, 6.49527, 65.8942, 0.36", "-33.4413, 9.27941, 76.5297, 0.36", "-38.0873, 12.41, 86.304, 0.36", "-41.9296, 15.9281, 96.2932, 0.36", "-45.9115, 20.3067, 105.879, 0.36", "-50.548, 22.022, 116.003, 0.36", "-52.9581, 24.1336, 126.804, 0.36", "-55.1427, 25.6735, 137.748, 0.36", "-56.084, 25.6459, 148.975, 0.36", "-56.7461, 26.8894, 160.152, 0.36", "-58.1161, 30.9571, 170.569, 0.36", "-57.6358, 34.6887, 181.188, 0.36", "-59.2174, 38.684, 191.602, 0.36", "-61.3473, 42.3978, 202.023, 0.36", "-62.7513, 44.7572, 212.95, 0.36", "-63.6344, 46.829, 223.988, 0.36", "-64.7902, 47.1982, 235.189, 0.36", "-66.8968, 47.107, 246.256, 0.36", "-70.0773, 46.1134, 257.018, 0.36", "-71.884, 45.9665, 268.137, 0.36", "-75.945, 46.8748, 278.606, 0.36", "-78.8891, 46.4138, 289.471, 0.36", "-82.4742, 44.0883, 299.895, 0.36", "-84.4711, 41.9723, 310.779, 0.36", "-85.3479, 38.6491, 321.508, 0.36", "-86.9558, 33.2137, 331.245, 0.36", "-89.7543, 27.0448, 340.247, 0.36", "-90.9375, 21.4514, 349.954, 0.36", "-90.4972, 14.9199, 359.123, 0.36" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-69.6112, -2.46409, 38.5799, 0.48", "-72.9094, -2.5913, 38.8253, 0.48", "-75.0586, -2.6742, 38.9852, 0.48", "-76.6277, -2.73472, 39.1019, 0.48", "-78.0256, -2.78863, 39.2059, 0.48", "-79.6662, -2.85191, 39.328, 0.48", "-82.4387, -2.95886, 39.5343, 0.48", "-92.75, -4.44133, 40.7296, 0.48", "-103.204, -5.2526, 40.7402, 0.48", "-113.613, -6.03548, 39.7457, 0.48", "-123.83, -8.22004, 38.855, 0.48", "-133.928, -10.5576, 37.2704, 0.48", "-144.255, -12.0254, 36.199, 0.48", "-154.72, -12.5541, 35.8073, 0.48", "-164.876, -15.1096, 35.2767, 0.48", "-175.112, -17.3211, 34.7589, 0.48", "-185.474, -18.6367, 35.6836, 0.48", "-195.611, -21.1265, 34.6931, 0.48", "-205.953, -22.8505, 34.8506, 0.48", "-216.007, -25.7691, 34.2559, 0.48", "-226.194, -27.3762, 32.3633, 0.48", "-236.635, -28.344, 32.2668, 0.48", "-247.021, -27.4124, 31.1749, 0.48", "-257.262, -25.1703, 30.9252, 0.48", "-267.589, -23.5269, 31.7004, 0.48", "-277.448, -21.1139, 34.3292, 0.48", "-286.587, -18.5903, 38.8082, 0.48", "-294.587, -14.6933, 44.3542, 0.48", "-301.302, -10.7552, 51.3791, 0.48", "-307.577, -5.80183, 58.164, 0.48", "-312.624, -0.397002, 65.5983, 0.48", "-318.154, 5.17655, 72.5484, 0.48", "-321.725, 11.2641, 80.3031, 0.48" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-69.6112, -2.46409, 38.5799, 0.48", "-72.4779, -1.82366, 39.179, 0.48", "-74.2568, -1.43847, 39.532, 0.48", "-76.4083, -0.972622, 39.9589, 0.48", "-79.0322, -0.404466, 40.4796, 0.48", "-80.4328, -0.101195, 40.7576, 0.48", "-83.452, 0.552554, 41.3567, 0.48", "-86.3827, 1.23639, 42.0766, 0.48", "-98.5621, 5.91274, 44.4631, 0.48", "-110.697, 11.1614, 45.5082, 0.48", "-123.458, 13.9192, 47.8439, 0.48", "-136.65, 15.2464, 48.1951, 0.48", "-149.746, 16.9613, 46.9861, 0.48", "-162.541, 18.3908, 43.8014, 0.48", "-174.869, 19.6322, 39.0713, 0.48", "-186.77, 22.3462, 33.884, 0.48", "-199.43, 24.2727, 30.4347, 0.48", "-212.301, 26.1741, 27.8621, 0.48", "-225.544, 25.6831, 27.3216, 0.48", "-238.502, 23.5954, 29.2303, 0.48", "-250.933, 22.0937, 33.6005, 0.48", "-262.803, 21.0212, 39.4193, 0.48", "-275.197, 19.3266, 43.826, 0.48", "-287.486, 15.0885, 46.4586, 0.48", "-300.033, 12.4851, 49.8762, 0.48", "-312.704, 10.798, 53.414, 0.48", "-325.415, 8.14178, 56.1108, 0.48", "-337.556, 4.06395, 59.5558, 0.48", "-349.994, -0.0302998, 61.6602, 0.48", "-361.525, -4.84237, 66.1083, 0.48", "-372.018, -10.3063, 72.1033, 0.48", "-383.719, -13.9331, 77.186, 0.48", "-394.736, -20.0769, 81.2812, 0.48" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-23.0986, 94.1792, -15.149, 0.84", "-23.7277, 96.6011, -15.4345, 0.84", "-24.2777, 99.3177, -15.6702, 0.84", "-24.7601, 102.666, -15.8498, 0.84", "-25.0011, 105.065, -15.9094, 0.84", "-25.2064, 107.615, -15.9247, 0.84", "-25.312, 108.956, -15.9183, 0.84", "-25.4069, 110.649, -15.8591, 0.84", "-25.4091, 112.064, -15.7448, 0.84", "-25.3201, 113.52, -15.5893, 0.84", "-25.2029, 115.058, -15.4148, 0.84", "-25.0348, 117.433, -15.1475, 0.84", "-24.969, 118.946, -14.9994, 0.84", "-24.958, 120.372, -14.8864, 0.84", "-24.9349, 122.398, -14.7265, 0.84", "-24.8709, 123.784, -14.6001, 0.84", "-24.747, 125.355, -14.4268, 0.84", "-24.6747, 126.36, -14.3102, 0.84", "-24.5906, 127.823, -14.1388, 0.84", "-24.487, 129.585, -13.908, 0.84", "-24.3774, 131.198, -13.7257, 0.84", "-24.2568, 133.178, -13.5373, 0.84", "-24.1553, 135.398, -13.3762, 0.84", "-24.095, 137.355, -13.3627, 0.84", "-24.0937, 139.416, -13.463, 0.84", "-24.1708, 141.208, -13.6319, 0.84", "-24.2898, 142.978, -13.8652, 0.84", "-24.3845, 144.19, -14.0662, 0.84", "-24.7072, 147.476, -14.7275, 0.84", "-25.0265, 149.647, -15.2802, 0.84", "-25.4476, 151.952, -15.9307, 0.84", "-25.6541, 153.336, -16.3477, 0.84", "-25.7932, 154.826, -16.7881, 0.84", "-25.8732, 156.575, -17.2938, 0.84", "-25.9561, 158.779, -17.842, 0.84", "-25.9542, 160.008, -18.1031, 0.84", "-25.8982, 162.993, -18.5854, 0.84", "-25.9141, 165.679, -18.8893, 0.84", "-25.964, 168.486, -19.0953, 0.84", "-26.0063, 170.37, -19.1839, 0.84", "-26.1413, 173.325, -19.2654, 0.84", "-26.3189, 175.676, -19.3718, 0.84", "-26.6292, 178.757, -19.5467, 0.84", "-26.8524, 180.792, -19.7875, 0.84", "-27.0588, 182.606, -20.0768, 0.84", "-27.2566, 184.701, -20.4861, 0.84", "-27.4032, 186.42, -20.8276, 0.84", "-27.5378, 188.984, -21.3739, 0.84", "-27.5914, 191.39, -21.8876, 0.84", "-27.6394, 193.369, -22.3068, 0.84", "-27.6675, 195.224, -22.6733, 0.84", "-27.6698, 196.552, -22.9263, 0.84", "-27.7574, 198.853, -23.2753, 0.84" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-23.0986, 94.1792, -15.149, 0.84", "-25.6734, 95.1063, -15.5522, 0.24", "-28.9284, 96.5328, -15.3238, 0.24", "-30.5919, 97.5252, -14.9833, 0.24", "-31.5379, 98.1821, -14.7834, 0.24", "-34.2842, 100.259, -14.2753, 0.24", "-37.1375, 102.609, -13.6843, 0.24", "-38.7812, 104.084, -13.3746, 0.24", "-40.8497, 106.193, -13.0195, 0.24", "-42.8054, 108.45, -12.7466, 0.24", "-44.4105, 110.461, -12.603, 0.24", "-45.7155, 112.154, -12.5921, 0.24", "-47.2214, 113.916, -12.6253, 0.24", "-49.0366, 115.749, -12.5963, 0.24", "-50.9427, 117.507, -12.4355, 0.24", "-52.1006, 118.541, -12.2548, 0.24", "-53.5256, 119.676, -12.0064, 0.24", "-56.8039, 122.089, -11.453, 0.24", "-59.3036, 123.782, -11.0941, 0.24", "-61.4738, 125.168, -10.7748, 0.24", "-62.7642, 125.999, -10.5598, 0.24", "-65.5908, 127.989, -10.0303, 0.24", "-67.1042, 129.187, -9.58367, 0.24", "-68.1752, 130.123, -9.20267, 0.24", "-70.4441, 132.324, -8.17108, 0.24", "-72.5711, 134.507, -6.91286, 0.24", "-75.4028, 137.495, -4.99694, 0.24", "-79.2298, 141.746, -2.09963, 0.24", "-80.9976, 143.771, -0.649753, 0.24", "-83.2361, 146.454, 1.24954, 0.24", "-86.3843, 150.254, 3.92107, 0.24", "-87.7822, 151.953, 5.09852, 0.24", "-89.1299, 153.583, 6.1968, 0.24", "-90.6416, 155.224, 7.28178, 0.24", "-93.3058, 157.747, 9.0622, 0.24", "-96.1477, 160.263, 10.8019, 0.24", "-98.3049, 162.122, 11.9729, 0.24", "-100.04, 163.531, 12.8672, 0.24", "-103.019, 165.819, 14.3203, 0.24", "-105.614, 167.777, 15.4368, 0.24", "-107.303, 169.134, 16.1015, 0.24", "-109.04, 170.7, 16.6946, 0.24", "-111.071, 172.692, 17.3213, 0.24", "-114.024, 175.924, 18.1411, 0.24", "-117.25, 180.07, 18.931, 0.12", "-118.991, 182.432, 19.2994, 0.12", "-120.49, 184.488, 19.4795, 0.12", "-121.304, 185.676, 19.4944, 0.12", "-121.919, 186.678, 19.4424, 0.12", "-122.548, 187.795, 19.3186, 0.12", "-123.918, 190.59, 18.9245, 0.12", "-125.75, 193.955, 18.3732, 0.12", "-127.882, 197.648, 17.8408, 0.12", "-129.64, 200.54, 17.4994, 0.12", "-131.152, 202.947, 17.2827, 0.12", "-132.769, 205.669, 17.1347, 0.12", "-135.11, 209.985, 17.0794, 0.12", "-136.216, 212.01, 17.1514, 0.12", "-137.478, 214.32, 17.2547, 0.12", "-138.956, 217.089, 17.3973, 0.12", "-140.393, 220.048, 17.5709, 0.12", "-141.448, 222.509, 17.8699, 0.12", "-142.224, 224.735, 18.2263, 0.12", "-143.242, 227.651, 18.7744, 0.12", "-144.726, 231.984, 19.8089, 0.12", "-145.437, 234.178, 20.4255, 0.12", "-146.776, 238.323, 21.6878, 0.12", "-147.698, 241.241, 22.6688, 0.12", "-148.189, 242.629, 23.1592, 0.12", "-149.026, 244.523, 23.8203, 0.12", "-150.464, 247.156, 24.6663, 0.12", "-152.053, 249.834, 25.3647, 0.12", "-153.248, 251.756, 25.7175, 0.12", "-156.243, 256.231, 26.4278, 0.12", "-158.228, 258.929, 26.7716, 0.12", "-159.523, 260.569, 26.9398, 0.12", "-161.339, 262.843, 27.1211, 0.12", "-162.411, 264.312, 27.2299, 0.12", "-163.452, 266.059, 27.2911, 0.12", "-165.389, 269.965, 27.3008, 0.12", "-166.438, 272.502, 27.3157, 0.12", "-167.506, 275.816, 27.372, 0.12", "-168.253, 278.935, 27.4789, 0.12", "-168.875, 282.787, 27.5552, 0.12", "-169.115, 284.869, 27.5475, 0.12", "-169.341, 287.201, 27.4877, 0.12", "-169.705, 290.298, 27.3241, 0.12", "-170.021, 292.891, 27.1369, 0.12", "-170.473, 297.0, 26.8273, 0.12", "-170.77, 299.43, 26.6929, 0.12", "-171.115, 302.598, 26.5508, 0.12", "-171.4, 305.187, 26.34, 0.12", "-171.891, 309.156, 25.988, 0.12", "-172.321, 313.168, 25.6615, 0.12", "-172.504, 316.058, 25.5353, 0.12", "-172.558, 318.363, 25.4595, 0.12", "-172.561, 322.472, 25.2765, 0.12" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "71.974, -118.619, 2.52509, 0.36", "72.8693, -119.481, 2.32224, 0.36", "73.5173, -120.144, 2.16303, 0.36", "74.3197, -120.857, 1.49391, 0.36", "75.1155, -121.426, 0.614571, 0.36", "75.7649, -121.89, -0.103031, 0.36", "76.5652, -122.461, -0.987365, 0.36", "77.0138, -122.765, -1.61692, 0.36", "79.511, -124.34, -6.01601, 0.36", "79.8851, -124.498, -6.86694, 0.36", "85.5715, -130.214, -12.3574, 0.36", "92.5488, -135.105, -17.1045, 0.36", "99.8463, -138.696, -22.49, 0.36", "108.402, -141.501, -26.2398, 0.36", "117.689, -143.219, -28.6824, 0.36", "127.049, -144.082, -31.2859, 0.36", "136.229, -143.898, -34.5793, 0.36", "144.869, -144.645, -39.0453, 0.36", "152.908, -145.53, -44.4976, 0.36", "160.255, -148.004, -50.4187, 0.36", "168.718, -148.436, -55.2485, 0.36", "176.887, -147.905, -60.5529, 0.36", "184.269, -146.999, -66.8643, 0.36", "192.491, -147.701, -72.0658, 0.36", "201.332, -150.123, -75.4007, 0.36", "209.475, -153.459, -79.6081, 0.36", "218.546, -156.168, -81.9585, 0.36", "227.426, -157.582, -85.7388, 0.36", "235.276, -160.21, -90.8976, 0.36", "243.484, -161.739, -95.9423, 0.36", "251.77, -165.221, -99.7307, 0.36", "260.333, -169.604, -101.351, 0.36" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "71.974, -118.619, 2.52509, 0.36", "70.28, -119.639, 2.82484, 0.36", "61.6935, -122.913, 5.63933, 0.36", "52.7462, -125.763, 7.68635, 0.36", "44.1833, -128.893, 10.7271, 0.36", "36.0829, -133.548, 12.9824, 0.36", "28.4166, -137.408, 17.306, 0.36", "20.4272, -140.345, 21.7681, 0.36", "11.6924, -142.203, 25.3206, 0.36" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-27.7574, 198.853, -23.2753, 0.84", "-28.4472, 202.268, -23.4673, 0.84", "-28.8775, 204.189, -23.5989, 0.84", "-29.353, 206.099, -23.7369, 0.84", "-29.9475, 208.364, -23.8814, 0.84", "-30.3625, 210.261, -24.0048, 0.84", "-30.6462, 211.63, -24.0951, 0.84", "-30.9661, 213.535, -24.1301, 0.84", "-31.4015, 216.221, -24.1742, 0.84", "-31.9193, 219.197, -24.2471, 0.84", "-32.6604, 223.48, -24.3248, 0.84", "-33.0204, 225.8, -24.3652, 0.84", "-33.7117, 231.102, -24.4885, 0.84", "-33.9397, 233.234, -24.5381, 0.84", "-34.126, 235.062, -24.5884, 0.84", "-34.3993, 237.624, -24.661, 0.84", "-34.7774, 240.587, -24.743, 0.84", "-35.1065, 243.271, -24.8227, 0.84", "-35.3267, 245.718, -24.9365, 0.84", "-35.5025, 248.896, -25.0583, 0.84", "-35.5925, 250.828, -25.1135, 0.84", "-35.6939, 252.351, -25.1558, 0.84", "-35.9023, 254.801, -25.1298, 0.84", "-36.038, 258.047, -25.0944, 0.84", "-36.0373, 258.155, -25.0956, 0.84" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-27.7574, 198.853, -23.2753, 0.84", "-26.7377, 199.496, -22.6855, 0.24", "-26.1563, 199.936, -22.1846, 0.24", "-25.4709, 200.54, -21.5191, 0.24", "-24.9312, 201.051, -20.9962, 0.24", "-23.846, 202.208, -19.9628, 0.24", "-22.9883, 203.166, -19.1842, 0.24", "-21.85, 204.571, -18.1264, 0.24", "-21.3834, 205.222, -17.6813, 0.24", "-20.8319, 206.06, -17.2047, 0.24", "-20.0677, 207.258, -16.6979, 0.24", "-19.3277, 208.476, -16.3681, 0.24", "-18.306, 210.34, -15.9695, 0.24", "-17.8524, 211.137, -15.8312, 0.24", "-17.1457, 212.351, -15.6749, 0.24", "-16.3778, 213.672, -15.5625, 0.24", "-15.3421, 215.481, -15.4924, 0.24", "-14.6507, 216.73, -15.5027, 0.24", "-13.6998, 218.374, -15.4819, 0.24", "-12.7451, 219.832, -15.3966, 0.24", "-12.23, 220.536, -15.2862, 0.24", "-11.6027, 221.286, -15.1446, 0.24", "-10.0543, 222.923, -14.8364, 0.24", "-8.77392, 224.238, -14.6055, 0.24", "-7.37501, 225.686, -14.2881, 0.24", "-6.45029, 226.594, -14.0562, 0.24", "-5.60269, 227.407, -13.8776, 0.24", "-4.98529, 228.003, -13.791, 0.24", "-4.20161, 228.76, -13.7615, 0.24", "-3.19935, 229.733, -13.8917, 0.24", "-2.0654, 230.9, -14.1308, 0.24", "-1.33768, 231.68, -14.3139, 0.24", "-0.133228, 232.972, -14.6022, 0.24", "1.10862, 234.253, -14.9109, 0.24", "2.61066, 235.837, -15.3267, 0.24", "3.65058, 237.068, -15.7084, 0.24", "4.42934, 238.104, -16.06, 0.24", "5.0069, 238.944, -16.3882, 0.24", "5.43931, 239.71, -16.718, 0.24", "6.01791, 241.109, -17.3396, 0.24", "6.58675, 242.74, -18.2044, 0.24", "6.95182, 243.944, -18.9481, 0.24", "7.27987, 245.279, -19.789, 0.24", "7.51933, 246.565, -20.6324, 0.24", "7.62239, 247.456, -21.2549, 0.24", "7.80501, 249.303, -22.5174, 0.24", "7.90914, 250.809, -23.4603, 0.24", "7.97556, 252.137, -24.3131, 0.24", "8.01777, 253.299, -25.0305, 0.24", "8.1291, 256.065, -26.6124, 0.12", "8.23546, 257.991, -27.6272, 0.12", "8.28978, 259.108, -28.1616, 0.12", "8.5739, 262.155, -29.6467, 0.12", "8.73409, 263.216, -30.1438, 0.12", "9.13859, 264.942, -30.8288, 0.12", "9.53244, 266.177, -31.2474, 0.12", "9.75171, 266.757, -31.4311, 0.12", "10.4205, 268.292, -31.8217, 0.12", "10.8586, 269.263, -31.9913, 0.12", "11.6992, 271.104, -32.2755, 0.12", "12.3519, 272.743, -32.5507, 0.12", "12.964, 274.644, -32.874, 0.12", "13.308, 275.922, -33.1034, 0.12", "13.5816, 277.188, -33.3664, 0.12", "14.0037, 279.296, -33.9055, 0.12", "14.4467, 281.466, -34.4378, 0.12", "14.8057, 282.968, -34.7663, 0.12", "15.372, 284.878, -35.2162, 0.12", "15.9563, 286.368, -35.5903, 0.12", "16.7521, 287.879, -35.9807, 0.12", "18.2729, 290.088, -36.3712, 0.12", "19.0078, 290.905, -36.4601, 0.12", "20.2483, 291.958, -36.4736, 0.12", "21.1563, 292.55, -36.3845, 0.12", "21.7752, 292.871, -36.2811, 0.12", "24.0008, 293.821, -35.7976, 0.12", "25.8197, 294.558, -35.297, 0.12", "27.625, 295.348, -34.6225, 0.12", "28.684, 295.842, -34.1411, 0.12", "29.3868, 296.185, -33.8117, 0.12", "30.7076, 296.86, -33.192, 0.12", "32.9156, 298.008, -32.1896, 0.12", "33.5152, 298.333, -31.893, 0.12", "34.1163, 298.668, -31.5954, 0.12", "35.261, 299.293, -31.0169, 0.12", "35.8405, 299.609, -30.7263, 0.12", "37.0104, 300.241, -30.1899, 0.12", "38.0339, 300.719, -29.7706, 0.12", "39.6851, 301.481, -29.0711, 0.12", "40.276, 301.752, -28.8061, 0.12", "41.1293, 302.131, -28.4046, 0.12", "42.0659, 302.545, -27.9746, 0.12", "43.3182, 303.087, -27.4272, 0.12" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-172.561, 322.472, 25.2765, 0.12", "-174.265, 322.28, 24.9977, 0.12", "-177.597, 321.905, 24.4523, 0.12" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-172.561, 322.472, 25.2765, 0.12", "-172.616, 325.003, 25.3102, 0.12", "-172.664, 326.947, 25.3283, 0.12", "-172.874, 329.875, 25.3506, 0.12", "-173.169, 333.131, 25.3711, 0.12", "-173.395, 335.443, 25.3832, 0.12", "-173.647, 337.52, 25.459, 0.12", "-174.331, 341.236, 25.6694, 0.12", "-174.853, 343.665, 25.8456, 0.12", "-175.375, 345.816, 26.0284, 0.12", "-175.996, 348.078, 26.2362, 0.12", "-176.682, 350.746, 26.4737, 0.12", "-177.212, 353.249, 26.6745, 0.12", "-177.669, 355.47, 26.855, 0.12", "-178.084, 357.881, 27.0328, 0.12", "-178.513, 360.517, 27.1838, 0.12", "-178.94, 363.834, 27.2578, 0.12", "-179.128, 367.153, 27.1244, 0.12" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "-36.0373, 258.155, -25.0956, 0.84", "-29.4811, 260.484, -31.9919, 0.48", "-28.1273, 260.893, -33.3102, 0.48", "-27.1883, 261.149, -34.1879, 0.48", "-27.0174, 261.2, -34.3416, 0.48", "-26.1825, 261.463, -35.0765, 0.48", "-25.9679, 261.533, -35.2561, 0.48", "-23.1928, 262.398, -36.7743, 0.48", "-23.0712, 262.438, -36.8407, 0.48", "-21.4732, 262.991, -37.6777, 0.48", "-21.3439, 263.041, -37.7414, 0.48", "-20.6156, 263.329, -38.0537, 0.48", "-20.4997, 263.372, -38.0851, 0.48", "-19.3438, 263.684, -38.1066, 0.48", "-18.4786, 263.81, -38.0763, 0.48", "-18.411, 263.812, -38.0714, 0.48", "-16.99, 263.851, -38.0416, 0.48", "-16.6425, 263.857, -38.0552, 0.48", "-15.44, 263.889, -38.0864, 0.48", "-14.648, 263.912, -38.1187, 0.48", "-14.3335, 263.93, -38.124, 0.48", "-13.0271, 264.068, -38.113, 0.48", "-12.524, 264.151, -38.088, 0.48", "-10.7943, 264.447, -37.946, 0.48", "-10.5127, 264.502, -37.9159, 0.48", "-9.26825, 264.718, -37.7698, 0.48", "-9.21163, 264.731, -37.7574, 0.48", "-8.17417, 265.046, -37.3943, 0.48", "-8.10987, 265.076, -37.3652, 0.48", "-7.32952, 265.583, -36.9485, 0.48", "-7.27028, 265.62, -36.9179, 0.48", "-5.88492, 266.52, -36.24, 0.48", "-5.83639, 266.546, -36.218, 0.48", "-5.08789, 266.908, -35.8647, 0.48", "-4.6674, 267.052, -35.6487, 0.48", "-3.48784, 267.33, -35.1727, 0.48", "-3.41628, 267.343, -35.1494, 0.48", "-2.32623, 267.58, -35.016, 0.48", "-1.92613, 267.72, -35.0145, 0.48", "-0.852781, 268.197, -35.0942, 0.48", "0.504231, 268.906, -35.4917, 0.48", "0.600122, 268.961, -35.5334, 0.48", "2.34694, 270.004, -36.7814, 0.36", "3.34678, 270.562, -37.7024, 0.36", "3.39739, 270.586, -37.7544, 0.36", "5.61707, 271.534, -40.1881, 0.36", "5.68375, 271.56, -40.2623, 0.36", "9.19976, 272.864, -44.2069, 0.36", "12.4161, 273.883, -47.7736, 0.36", "15.7343, 274.84, -51.407, 0.36", "15.7808, 274.853, -51.4547, 0.36", "16.7331, 275.109, -52.3512, 0.36", "17.5205, 275.319, -53.0297, 0.36", "20.8496, 276.246, -55.4208, 0.36", "21.3771, 276.425, -55.7445, 0.36", "23.7844, 277.382, -57.759, 0.36", "25.3465, 278.013, -59.2215, 0.36", "25.7445, 278.174, -59.5808, 0.36", "27.1664, 278.759, -60.8387, 0.36", "27.3202, 278.821, -60.9707, 0.36", "39.0635, 283.28, -70.9009, 0.36", "39.2202, 283.335, -71.0331, 0.36", "47.9677, 285.965, -78.2401, 0.36", "48.048, 285.985, -78.2999, 0.36", "50.7011, 286.513, -80.2604, 0.36", "51.2492, 286.624, -80.6258, 0.36", "52.9003, 286.991, -81.6401, 0.36", "53.1336, 287.043, -81.7687, 0.36", "57.4379, 287.971, -84.0749, 0.36", "57.9877, 288.093, -84.3708, 0.36", "60.1686, 288.636, -85.5575, 0.36", "65.1569, 289.922, -88.2298, 0.36", "65.2446, 289.945, -88.2771, 0.36", "66.4498, 290.269, -88.8972, 0.36", "66.77, 290.362, -89.0453, 0.36", "69.3281, 291.079, -90.2209, 0.36", "69.4166, 291.101, -90.2666, 0.36" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-36.0373, 258.155, -25.0956, 0.84", "-36.5201, 260.748, -25.4497, 0.84", "-36.9009, 263.434, -25.7557, 0.84", "-37.3847, 267.384, -26.146, 0.84", "-37.6853, 269.939, -26.3443, 0.84", "-38.1464, 273.318, -26.5923, 0.84", "-38.4835, 275.671, -26.8328, 0.84", "-38.8191, 278.336, -27.2002, 0.84", "-38.9692, 279.436, -27.3544, 0.84", "-39.3787, 281.981, -27.7603, 0.84", "-39.9874, 285.65, -28.4337, 0.84", "-40.6189, 289.004, -29.1146, 0.84", "-41.2315, 291.883, -29.7061, 0.84", "-41.8413, 294.978, -30.3682, 0.84", "-42.2272, 297.994, -31.0835, 0.84", "-42.3533, 300.1, -31.5871, 0.84", "-42.3958, 301.849, -31.9448, 0.84", "-42.388, 304.7, -32.4401, 0.84", "-42.2853, 307.908, -33.0149, 0.84", "-42.0657, 311.175, -33.6582, 0.84", "-41.7734, 314.962, -34.3457, 0.84", "-41.45, 319.3, -35.0801, 0.84", "-41.2566, 323.545, -35.7719, 0.84", "-41.2639, 326.779, -36.2963, 0.84", "-41.3479, 329.703, -36.7136, 0.84", "-41.3695, 331.177, -36.9181, 0.84", "-41.3222, 333.767, -37.3265, 0.84", "-41.2461, 336.282, -37.7499, 0.84", "-41.2535, 336.866, -37.8504, 0.84", "-41.2853, 339.751, -38.3421, 0.84", "-41.2327, 343.076, -38.8692, 0.84", "-41.104, 346.87, -39.3822, 0.84", "-41.0048, 349.641, -39.6875, 0.84", "-40.9278, 353.645, -39.9092, 0.84", "-40.9123, 357.145, -39.8923, 0.84", "-40.9586, 360.045, -39.7036, 0.84", "-41.0231, 363.066, -39.4044, 0.84", "-41.0769, 365.65, -39.1226, 0.84", "-41.1165, 368.674, -38.8392, 0.84", "-41.1566, 371.243, -38.6773, 0.84", "-41.2045, 372.299, -38.7135, 0.84", "-41.3956, 375.581, -39.2298, 0.84", "-41.6317, 378.401, -39.9343, 0.84", "-41.8878, 380.382, -40.5617, 0.84", "-42.1538, 382.024, -41.1232, 0.84", "-42.7617, 385.112, -42.0735, 0.84", "-43.0414, 386.422, -42.3891, 0.84", "-43.5593, 388.64, -42.7307, 0.84", "-43.9364, 390.193, -42.8726, 0.84", "-44.6857, 392.877, -42.9394, 0.84", "-45.1242, 394.32, -42.9189, 0.84", "-45.7128, 396.158, -42.8223, 0.84", "-46.3151, 398.182, -42.7104, 0.84", "-46.7492, 399.865, -42.6654, 0.84", "-47.3401, 401.997, -42.6657, 0.84", "-47.8513, 403.394, -42.7193, 0.84" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-47.8513, 403.394, -42.7193, 0.84", "-47.9186, 406.433, -43.2739, 0.84", "-47.897, 410.908, -43.9929, 0.84", "-47.8702, 414.08, -44.5127, 0.84", "-47.8564, 416.803, -44.98, 0.84", "-47.8318, 419.852, -45.4782, 0.84", "-47.8183, 422.372, -45.8685, 0.84", "-47.7927, 424.219, -46.1443, 0.84", "-47.6633, 426.825, -46.4084, 0.84", "-47.6281, 427.416, -46.4356, 0.84", "-47.5898, 429.367, -46.4337, 0.84", "-47.6233, 431.295, -46.3814, 0.84", "-47.673, 433.745, -46.3276, 0.72", "-47.748, 436.801, -46.1863, 0.72", "-47.8324, 439.395, -46.0559, 0.72", "-47.9187, 441.428, -46.0114, 0.72", "-48.0216, 443.543, -46.0188, 0.72", "-48.1425, 445.736, -46.0663, 0.72", "-48.2661, 447.507, -46.1453, 0.72", "-48.4892, 449.685, -46.3047, 0.72", "-48.6712, 451.348, -46.3978, 0.72", "-48.8972, 452.913, -46.3588, 0.72", "-49.1121, 454.338, -46.3045, 0.72", "-49.4422, 455.936, -46.286, 0.72", "-49.9526, 457.986, -46.3014, 0.72", "-50.633, 460.54, -46.3256, 0.72", "-51.3759, 463.981, -46.4849, 0.72", "-51.7849, 466.973, -46.749, 0.72", "-51.8447, 469.636, -47.0599, 0.72", "-51.6789, 471.166, -47.2619, 0.72", "-51.388, 472.521, -47.4858, 0.72", "-50.495, 475.605, -48.1335, 0.6", "-49.9343, 477.234, -48.4553, 0.6", "-49.6431, 478.349, -48.5096, 0.6", "-49.3912, 479.731, -48.4792, 0.6", "-49.2925, 481.126, -48.4174, 0.6", "-49.3911, 482.667, -48.3532, 0.6", "-49.582, 483.809, -48.3247, 0.6", "-50.6496, 488.099, -48.0413, 0.6", "-51.4159, 490.704, -47.8367, 0.6", "-51.8713, 492.11, -47.7182, 0.6", "-52.6124, 494.365, -47.4963, 0.6", "-53.1062, 495.862, -47.3245, 0.6", "-54.4482, 500.046, -46.7548, 0.6", "-55.2981, 502.796, -46.316, 0.6", "-56.1053, 505.491, -45.8626, 0.6", "-56.7699, 507.798, -45.4685, 0.6", "-57.5292, 510.514, -44.9523, 0.6", "-58.0315, 512.338, -44.617, 0.6", "-58.455, 513.844, -44.4089, 0.6", "-58.9707, 515.467, -44.1599, 0.6", "-59.3858, 516.736, -43.9587, 0.6", "-60.4069, 519.616, -43.5656, 0.6", "-61.1097, 521.499, -43.3601, 0.6", "-62.1471, 524.333, -43.0847, 0.6", "-62.9035, 526.491, -42.8854, 0.6", "-63.5944, 528.54, -42.7189, 0.6", "-64.3378, 530.727, -42.6032, 0.6", "-64.8994, 532.585, -42.6126, 0.6", "-65.5284, 534.952, -42.6882, 0.6", "-65.8323, 536.259, -42.7765, 0.6", "-66.271, 538.125, -42.9895, 0.6", "-66.6398, 539.733, -43.237, 0.6", "-67.2557, 543.364, -43.8094, 0.6", "-67.4408, 544.803, -44.0434, 0.6", "-67.5751, 546.158, -44.261, 0.6", "-67.6574, 547.37, -44.4042, 0.6", "-67.7326, 548.96, -44.5095, 0.6", "-67.8275, 551.179, -44.6027, 0.6", "-67.9159, 552.934, -44.6579, 0.6", "-68.0081, 554.658, -44.7106, 0.6", "-68.1233, 557.522, -44.7561, 0.6", "-68.2, 559.945, -44.867, 0.6", "-68.2966, 563.944, -45.1729, 0.6", "-68.2728, 567.134, -45.4285, 0.6", "-68.1616, 570.076, -45.6465, 0.6", "-68.0125, 573.15, -45.8584, 0.6", "-67.8291, 577.143, -46.0958, 0.6", "-67.6955, 579.8, -46.2268, 0.6", "-67.4054, 584.924, -46.3386, 0.48", "-67.285, 586.782, -46.3516, 0.48", "-67.1008, 589.9, -46.3572, 0.48", "-66.9964, 593.362, -46.3313, 0.48", "-66.9551, 596.215, -46.3118, 0.48", "-66.9528, 598.345, -46.3422, 0.48", "-66.9776, 600.156, -46.4206, 0.48", "-67.0146, 602.454, -46.5547, 0.48", "-67.0441, 604.614, -46.6847, 0.48", "-67.1584, 609.031, -46.9189, 0.48", "-67.3904, 613.534, -47.0977, 0.48", "-67.4507, 614.963, -47.1745, 0.36", "-67.488, 616.997, -47.2677, 0.36", "-67.4556, 618.598, -47.3205, 0.36", "-67.3679, 620.89, -47.3634, 0.36", "-67.2948, 622.916, -47.3446, 0.36", "-67.1637, 625.15, -47.3622, 0.36", "-67.045, 626.565, -47.3749, 0.36", "-66.8413, 628.764, -47.4881, 0.36", "-66.7216, 631.2, -47.6056, 0.36", "-66.6487, 634.089, -47.7568, 0.36", "-66.6987, 636.404, -47.8185, 0.36", "-66.9444, 639.261, -47.8443, 0.36", "-67.3623, 643.013, -47.8858, 0.36", "-67.8321, 646.949, -47.9628, 0.36", "-68.2066, 649.66, -47.9566, 0.36", "-68.6492, 652.412, -47.847, 0.36", "-68.9722, 654.522, -47.6918, 0.36", "-69.3963, 657.021, -47.3394, 0.36", "-69.8166, 659.339, -46.8822, 0.36", "-70.2322, 661.735, -46.4028, 0.36", "-70.6402, 664.016, -45.9102, 0.36", "-71.0871, 666.906, -45.4203, 0.36", "-71.496, 669.763, -44.9645, 0.36", "-71.783, 672.046, -44.6626, 0.36", "-72.1087, 675.324, -44.3579, 0.36", "-72.444, 679.481, -44.229, 0.36", "-72.7124, 683.257, -44.2506, 0.36", "-72.8508, 685.789, -44.3354, 0.36", "-72.8542, 688.804, -44.5145, 0.36", "-72.7676, 691.279, -44.6777, 0.36", "-72.593, 694.676, -44.9346, 0.36", "-72.4718, 696.684, -45.0662, 0.36", "-72.3155, 699.113, -45.192, 0.36", "-72.1813, 701.345, -45.3425, 0.36", "-72.151, 702.199, -45.4321, 0.36", "-71.9552, 704.222, -45.6556, 0.36", "-71.7677, 705.563, -45.8196, 0.36", "-71.5028, 707.731, -46.1089, 0.36", "-71.3291, 709.567, -46.3411, 0.36", "-70.9454, 713.25, -46.7624, 0.36", "-70.5624, 716.73, -47.0834, 0.36", "-70.3252, 718.903, -47.2423, 0.36", "-70.074, 721.493, -47.3656, 0.36", "-69.8512, 723.91, -47.409, 0.36", "-69.6237, 726.611, -47.3849, 0.36", "-69.4753, 729.07, -47.3089, 0.36", "-69.4096, 731.595, -47.2675, 0.36", "-69.3702, 734.05, -47.22, 0.36", "-69.3546, 736.906, -47.1627, 0.36", "-69.4006, 738.758, -47.1259, 0.36", "-69.4974, 740.809, -47.0588, 0.36", "-69.5779, 742.879, -46.9515, 0.36", "-69.7701, 745.915, -46.6881, 0.36", "-69.9468, 748.486, -46.5344, 0.36", "-70.1377, 750.567, -46.4871, 0.36", "-70.3071, 752.428, -46.5202, 0.36", "-70.4122, 754.177, -46.6792, 0.36", "-70.569, 756.769, -47.1109, 0.36", "-70.7518, 760.642, -47.946, 0.36", "-70.8237, 762.152, -48.3194, 0.36", "-70.8961, 763.884, -48.7632, 0.36", "-70.9463, 766.965, -49.6184, 0.36", "-70.8853, 770.21, -50.529, 0.36", "-70.7733, 772.991, -51.2721, 0.36", "-70.6381, 775.747, -51.8845, 0.36", "-70.4691, 778.357, -52.412, 0.36", "-70.272, 781.133, -52.9924, 0.36", "-70.1859, 782.823, -53.3435, 0.36", "-70.1578, 788.114, -54.4661, 0.36", "-70.1594, 790.822, -55.0627, 0.36", "-70.2071, 793.486, -55.6514, 0.36", "-70.4433, 798.012, -56.6356, 0.36", "-70.7075, 800.515, -57.1365, 0.36", "-71.3827, 805.273, -58.0955, 0.36" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-47.8513, 403.394, -42.7193, 0.84", "-50.6933, 406.101, -44.9497, 0.48", "-53.1082, 407.77, -46.8332, 0.48", "-53.8416, 408.188, -47.4365, 0.48", "-54.822, 408.651, -48.2059, 0.48", "-56.2651, 409.302, -49.3041, 0.48", "-57.2066, 409.644, -49.9202, 0.48", "-58.946, 410.237, -51.0662, 0.48", "-60.0028, 410.658, -51.7425, 0.48", "-61.9627, 411.652, -52.8976, 0.48", "-62.8905, 412.213, -53.4412, 0.48", "-64.5079, 413.259, -54.3581, 0.48", "-65.8505, 414.176, -55.1488, 0.48", "-67.4846, 415.397, -56.1333, 0.48", "-68.7337, 416.455, -56.9926, 0.48", "-70.0566, 417.65, -58.0201, 0.48", "-71.6192, 419.07, -59.3652, 0.48", "-73.6247, 420.935, -61.2618, 0.48", "-74.9205, 422.103, -62.5403, 0.48", "-76.0103, 423.033, -63.6496, 0.48", "-76.8414, 423.758, -64.4699, 0.48", "-77.8708, 424.638, -65.288, 0.48", "-78.8696, 425.415, -65.9009, 0.48", "-80.3416, 426.296, -66.5165, 0.36", "-81.2174, 426.687, -66.7845, 0.36", "-83.4415, 427.468, -67.1964, 0.36", "-86.4211, 428.373, -67.5426, 0.36", "-88.1157, 428.827, -67.741, 0.36", "-89.7576, 429.185, -67.9209, 0.36", "-91.3939, 429.497, -68.1177, 0.36", "-93.6026, 429.865, -68.3871, 0.36", "-94.6249, 430.036, -68.5051, 0.36", "-97.2344, 430.568, -68.7809, 0.36", "-99.7953, 431.166, -69.0223, 0.36", "-101.912, 431.686, -69.2405, 0.36", "-103.857, 432.171, -69.386, 0.36", "-106.333, 432.771, -69.4362, 0.36", "-108.025, 433.169, -69.3162, 0.36", "-109.574, 433.508, -69.1253, 0.36", "-111.609, 433.944, -68.9424, 0.36", "-113.607, 434.323, -68.8009, 0.36", "-115.426, 434.681, -68.5755, 0.36", "-116.765, 435.013, -68.3065, 0.36", "-119.017, 435.784, -67.5956, 0.36", "-120.482, 436.428, -66.9456, 0.36", "-121.818, 437.096, -66.2593, 0.36", "-124.921, 438.704, -64.6714, 0.36", "-126.167, 439.388, -64.0182, 0.36", "-127.517, 440.234, -63.2778, 0.36", "-129.228, 441.437, -62.273, 0.36", "-130.669, 442.489, -61.5659, 0.36", "-131.224, 442.856, -61.4167, 0.36", "-132.036, 443.313, -61.3989, 0.36", "-134.768, 444.692, -61.7185, 0.36", "-135.684, 445.143, -61.8757, 0.36", "-137.944, 446.26, -62.3611, 0.36", "-140.361, 447.42, -62.9333, 0.36", "-141.635, 448.021, -63.2378, 0.36", "-143.677, 448.957, -63.7383, 0.36", "-145.96, 450.004, -64.3638, 0.36", "-147.843, 450.93, -64.8638, 0.36", "-149.526, 451.86, -65.274, 0.36", "-150.849, 452.671, -65.5198, 0.36", "-152.034, 453.391, -65.6827, 0.36", "-154.036, 454.489, -65.8808, 0.36", "-156.016, 455.457, -66.0546, 0.36", "-157.295, 455.969, -66.0557, 0.36", "-159.735, 456.718, -65.9372, 0.36", "-161.413, 457.117, -65.8148, 0.36", "-163.536, 457.592, -65.5875, 0.36", "-164.821, 457.856, -65.4109, 0.36", "-167.015, 458.295, -65.2112, 0.36", "-169.05, 458.73, -65.2533, 0.36", "-170.628, 459.184, -65.5283, 0.36", "-172.311, 459.899, -66.0041, 0.36", "-173.504, 460.633, -66.5592, 0.36", "-174.581, 461.44, -67.2256, 0.36", "-175.571, 462.326, -67.9405, 0.36", "-177.261, 463.754, -68.9882, 0.36", "-178.702, 464.806, -69.7727, 0.36", "-181.146, 466.364, -70.9617, 0.36", "-182.089, 466.963, -71.3539, 0.36", "-185.207, 469.019, -72.3776, 0.36", "-188.401, 471.006, -73.0616, 0.36", "-190.452, 472.166, -73.3467, 0.36", "-192.209, 473.091, -73.4755, 0.36", "-194.22, 474.126, -73.5, 0.36", "-196.466, 475.242, -73.4714, 0.36", "-199.408, 476.521, -73.4322, 0.36", "-201.704, 477.469, -73.4939, 0.36", "-203.174, 477.984, -73.5439, 0.36", "-205.31, 478.646, -73.667, 0.36", "-207.396, 479.222, -73.8789, 0.36", "-209.091, 479.682, -74.11, 0.36", "-210.676, 480.21, -74.4114, 0.36", "-212.951, 481.067, -74.84, 0.36", "-214.538, 481.726, -75.1626, 0.36", "-215.952, 482.306, -75.4559, 0.36", "-218.234, 483.357, -76.0182, 0.36", "-219.558, 484.048, -76.3191, 0.36", "-221.31, 485.018, -76.6699, 0.36", "-222.492, 485.666, -76.9532, 0.36", "-224.882, 486.891, -77.5196, 0.36", "-226.493, 487.764, -77.8341, 0.36", "-228.587, 489.046, -78.0192, 0.36", "-229.753, 489.808, -77.9941, 0.36", "-231.832, 491.248, -77.8032, 0.36", "-233.589, 492.593, -77.5125, 0.36", "-235.447, 494.265, -77.0116, 0.36", "-237.682, 496.427, -76.1489, 0.36", "-239.262, 498.096, -75.5262, 0.36", "-240.241, 499.268, -75.1476, 0.36", "-241.024, 500.366, -74.8672, 0.36", "-242.377, 502.596, -74.6821, 0.36", "-243.13, 503.921, -74.8071, 0.36", "-244.487, 506.239, -75.4954, 0.36", "-245.69, 508.242, -76.5348, 0.36", "-246.516, 509.595, -77.3902, 0.36", "-247.456, 511.262, -78.7191, 0.36", "-248.265, 512.792, -80.1329, 0.36", "-249.211, 514.706, -82.056, 0.36", "-250.268, 516.984, -84.5091, 0.36", "-250.857, 518.293, -86.1, 0.36", "-252.023, 520.921, -89.8309, 0.36", "-252.399, 521.796, -91.2275, 0.36", "-252.864, 522.871, -93.4736, 0.36", "-253.125, 523.128, -94.8488, 0.36", "-253.448, 522.676, -96.1769, 0.36", "-254.107, 521.36, -98.4589, 0.36", "-255.018, 519.674, -100.61, 0.36", "-256.267, 517.774, -102.931, 0.36", "-257.258, 516.696, -104.345, 0.36", "-259.071, 515.743, -106.303, 0.36", "-260.489, 516.038, -107.331, 0.36", "-262.317, 517.498, -108.257, 0.36", "-263.972, 519.361, -108.949, 0.36", "-265.539, 521.647, -109.378, 0.36", "-266.65, 523.581, -109.596, 0.36", "-267.79, 525.69, -109.743, 0.36", "-269.167, 528.403, -109.936, 0.36", "-269.707, 529.497, -110.041, 0.36", "-271.188, 532.232, -110.41, 0.36", "-272.26, 533.866, -110.711, 0.36", "-273.735, 535.791, -111.157, 0.36", "-274.936, 537.262, -111.517, 0.36", "-276.013, 538.588, -111.847, 0.36", "-277.21, 540.212, -112.254, 0.36", "-278.654, 542.309, -112.787, 0.36", "-281.337, 546.683, -113.81, 0.36", "-283.026, 549.864, -114.461, 0.36", "-283.981, 551.831, -114.833, 0.36", "-284.932, 553.74, -115.189, 0.36", "-285.858, 555.471, -115.499, 0.36", "-287.004, 557.323, -115.836, 0.36", "-287.71, 558.241, -116.012, 0.36", "-289.066, 559.709, -116.328, 0.36", "-291.578, 561.915, -116.783, 0.36", "-293.334, 563.238, -117.029, 0.36", "-294.424, 564.108, -117.099, 0.36", "-295.907, 565.572, -117.066, 0.36", "-296.946, 566.803, -116.972, 0.36", "-298.322, 568.721, -116.635, 0.36", "-299.019, 569.838, -116.37, 0.36", "-301.452, 573.878, -115.208, 0.36", "-303.473, 577.044, -114.167, 0.36", "-304.381, 578.285, -113.741, 0.36", "-306.318, 580.585, -112.923, 0.36", "-307.573, 581.906, -112.47, 0.36", "-309.678, 583.781, -111.844, 0.36", "-310.979, 584.679, -111.564, 0.36", "-313.784, 586.281, -111.095, 0.36", "-316.493, 587.631, -110.776, 0.36", "-318.206, 588.334, -110.711, 0.36", "-320.9, 589.15, -110.709, 0.36", "-322.261, 589.513, -110.837, 0.36", "-323.745, 589.982, -111.122, 0.36", "-325.51, 590.639, -111.674, 0.36", "-327.147, 591.331, -112.388, 0.36", "-328.938, 592.206, -113.152, 0.36", "-332.335, 594.192, -114.48, 0.36", "-334.117, 595.541, -115.05, 0.36", "-336.01, 597.301, -115.42, 0.36", "-337.128, 598.502, -115.477, 0.36", "-339.626, 601.329, -115.322, 0.36", "-340.632, 602.5, -115.257, 0.36", "-342.666, 604.759, -115.082, 0.36", "-344.445, 606.822, -115.013, 0.36", "-345.494, 608.238, -115.071, 0.36", "-347.095, 610.803, -115.329, 0.36", "-348.883, 614.359, -115.882, 0.36", "-349.421, 615.618, -116.076, 0.36", "-350.358, 618.029, -116.441, 0.36", "-351.702, 621.724, -116.982, 0.36", "-352.488, 624.103, -117.229, 0.36", "-353.036, 625.697, -117.236, 0.36", "-354.25, 628.812, -117.041, 0.36", "-355.831, 632.327, -116.818, 0.36", "-356.978, 634.576, -116.68, 0.36", "-358.069, 636.483, -116.532, 0.36", "-360.91, 640.99, -116.175, 0.36", "-361.715, 642.23, -116.064, 0.36", "-362.731, 643.816, -115.905, 0.36", "-364.159, 645.973, -115.735, 0.36", "-365.538, 647.855, -115.689, 0.36", "-367.0, 649.729, -115.775, 0.36", "-368.613, 651.713, -115.897, 0.36", "-370.565, 653.945, -115.998, 0.36", "-372.945, 656.524, -116.093, 0.36", "-374.249, 657.85, -116.149, 0.36", "-375.619, 659.222, -116.234, 0.36", "-377.868, 661.433, -116.148, 0.36", "-379.068, 662.621, -116.002, 0.36", "-380.072, 663.645, -115.798, 0.36", "-381.202, 664.881, -115.462, 0.36", "-384.163, 668.151, -114.503, 0.36", "-386.21, 670.399, -113.854, 0.36", "-387.451, 671.81, -113.479, 0.36", "-388.554, 673.138, -113.153, 0.36", "-389.599, 674.373, -112.9, 0.36", "-391.074, 676.182, -112.646, 0.36", "-392.035, 677.501, -112.545, 0.36", "-393.209, 679.256, -112.618, 0.36", "-394.693, 681.69, -112.81, 0.36", "-395.781, 683.648, -113.037, 0.36", "-397.055, 686.297, -113.438, 0.36", "-397.888, 688.257, -113.764, 0.36", "-398.875, 690.569, -114.137, 0.36", "-400.528, 694.33, -114.705, 0.36", "-401.444, 696.313, -114.932, 0.36", "-402.563, 698.771, -115.093, 0.36", "-404.123, 702.082, -115.176, 0.36", "-405.159, 704.117, -115.166, 0.36", "-405.948, 705.479, -115.076, 0.36", "-407.962, 708.617, -114.673, 0.36", "-410.063, 711.531, -114.171, 0.36", "-410.872, 712.536, -113.975, 0.36", "-412.225, 714.18, -113.669, 0.36", "-414.638, 717.263, -113.227, 0.36", "-416.039, 719.081, -113.033, 0.36", "-417.54, 721.019, -112.979, 0.36", "-419.029, 722.926, -113.132, 0.36", "-420.559, 725.042, -113.437, 0.36", "-422.179, 727.689, -114.081, 0.36", "-423.079, 729.402, -114.68, 0.36", "-424.071, 731.479, -115.514, 0.36", "-424.907, 733.666, -116.453, 0.36", "-425.402, 735.424, -117.254, 0.36", "-425.854, 738.475, -118.832, 0.36", "-425.868, 739.551, -119.42, 0.36", "-425.75, 741.001, -120.202, 0.36", "-425.477, 742.728, -121.054, 0.36", "-425.056, 744.625, -121.905, 0.36", "-424.498, 747.135, -122.916, 0.36", "-424.315, 748.224, -123.293, 0.36", "-424.201, 749.664, -123.758, 0.36", "-424.206, 751.525, -124.278, 0.36", "-424.293, 753.106, -124.644, 0.36", "-424.43, 754.675, -124.945, 0.36", "-424.73, 757.41, -125.32, 0.36", "-425.017, 759.91, -125.625, 0.36", "-425.253, 762.022, -125.856, 0.36", "-425.594, 764.579, -126.099, 0.36", "-425.925, 767.063, -126.277, 0.36", "-426.3, 770.336, -126.397, 0.36", "-426.556, 772.943, -126.407, 0.36", "-426.858, 775.89, -126.486, 0.36", "-427.35, 779.39, -126.683, 0.36", "-427.83, 781.805, -126.908, 0.36", "-428.326, 783.99, -127.208, 0.36", "-428.611, 784.979, -127.4, 0.36", "-429.77, 788.073, -128.297, 0.36", "-430.588, 789.964, -129.063, 0.36", "-431.625, 792.364, -130.339, 0.36", "-432.605, 794.58, -131.722, 0.36", "-433.237, 796.031, -132.696, 0.36", "-434.11, 798.234, -134.176, 0.36", "-434.952, 800.758, -135.763, 0.36", "-435.469, 802.505, -136.931, 0.36", "-435.778, 803.512, -137.618, 0.36", "-436.241, 804.775, -138.497, 0.36", "-436.67, 805.705, -139.096, 0.36", "-437.347, 806.606, -139.544, 0.36", "-438.382, 807.617, -139.951, 0.36", "-440.797, 809.729, -140.792, 0.36", "-441.7, 810.426, -141.098, 0.36", "-443.374, 811.675, -141.731, 0.36", "-446.32, 813.905, -142.955, 0.36", "-448.817, 815.791, -144.099, 0.36", "-450.387, 817.051, -144.88, 0.36", "-452.694, 819.031, -146.186, 0.36", "-454.382, 820.527, -147.231, 0.36", "-455.694, 821.708, -148.122, 0.36", "-456.803, 822.77, -148.988, 0.36", "-458.235, 824.08, -149.927, 0.36", "-459.836, 825.573, -150.828, 0.36", "-461.391, 826.965, -151.558, 0.36", "-463.392, 828.557, -152.299, 0.36", "-465.413, 829.969, -152.887, 0.36", "-467.73, 831.447, -153.423, 0.36", "-469.479, 832.448, -153.627, 0.36", "-471.413, 833.427, -153.53, 0.24", "-473.512, 834.347, -153.259, 0.24", "-475.885, 835.266, -152.769, 0.24", "-476.633, 835.509, -152.527, 0.24", "-479.634, 836.448, -151.243, 0.24", "-482.866, 837.474, -149.306, 0.12", "-484.67, 838.127, -147.75, 0.12", "-486.341, 838.775, -145.949, 0.12", "-488.583, 839.877, -143.189, 0.12", "-489.373, 840.396, -142.136, 0.12", "-490.69, 841.678, -140.134, 0.12", "-492.741, 844.421, -136.77, 0.12", "-493.172, 845.06, -136.021, 0.12", "-494.126, 846.567, -134.542, 0.12", "-495.658, 849.278, -132.602, 0.12", "-497.049, 851.784, -131.153, 0.12", "-497.599, 853.013, -130.715, 0.12" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 37
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "-71.3827, 805.273, -58.0955, 0.36", "-71.3211, 806.849, -58.0703, 0.36", "-70.9984, 812.334, -58.321, 0.36", "-70.8216, 815.341, -58.4583, 0.24", "-70.6261, 818.662, -58.6101, 0.24", "-70.4656, 821.391, -58.7347, 0.24", "-70.2665, 823.53, -58.9349, 0.24" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "-71.3827, 805.273, -58.0955, 0.36", "-73.0675, 805.732, -60.5161, 0.24", "-73.9128, 805.902, -61.6843, 0.24", "-75.0732, 806.165, -63.2184, 0.24", "-76.3423, 806.513, -65.0069, 0.24", "-77.1383, 806.721, -66.1745, 0.24", "-78.2051, 806.961, -67.7801, 0.24", "-78.8769, 807.042, -68.7994, 0.24", "-79.4754, 807.152, -69.9145, 0.24", "-80.0089, 807.319, -71.1531, 0.24", "-80.3331, 807.473, -72.0107, 0.24", "-80.6339, 807.724, -73.0433, 0.24", "-80.9103, 808.21, -74.5186, 0.24", "-81.2292, 808.951, -76.5401, 0.24", "-81.3905, 809.342, -77.5666, 0.24", "-81.6465, 809.883, -78.8339, 0.24", "-81.8895, 810.54, -80.3433, 0.24", "-82.2943, 811.765, -83.2075, 0.24", "-82.4115, 812.111, -84.123, 0.24", "-82.6841, 812.774, -86.0514, 0.24", "-82.8832, 813.276, -87.6931, 0.24", "-83.196, 813.936, -90.358, 0.24", "-83.3769, 814.263, -92.0496, 0.24", "-83.5366, 814.514, -93.4367, 0.24", "-83.63, 814.709, -94.2958, 0.24", "-83.8458, 815.142, -95.8323, 0.24", "-84.0049, 815.406, -96.5778, 0.24", "-84.3229, 815.763, -97.4187, 0.24", "-84.7176, 816.262, -98.4934, 0.24", "-85.0227, 816.709, -99.2843, 0.24", "-85.5473, 817.505, -100.595, 0.24", "-85.9898, 818.158, -101.672, 0.24", "-86.6032, 818.984, -103.147, 0.24", "-87.1639, 819.913, -104.864, 0.24", "-87.5704, 820.637, -106.33, 0.24", "-87.787, 821.054, -107.197, 0.24", "-87.9117, 821.36, -107.79, 0.24", "-88.0965, 821.992, -108.827, 0.24", "-88.299, 823.72, -111.174, 0.24", "-88.2878, 824.572, -112.239, 0.24", "-88.1381, 825.383, -113.187, 0.24", "-87.9519, 826.073, -113.811, 0.24", "-87.6981, 826.976, -114.474, 0.24", "-87.2012, 828.885, -115.631, 0.24", "-86.8952, 830.41, -116.441, 0.24", "-86.6902, 831.593, -117.016, 0.24", "-86.4263, 833.556, -118.025, 0.24", "-86.3484, 834.667, -118.66, 0.24", "-86.3504, 835.911, -119.412, 0.24", "-86.4609, 837.205, -120.242, 0.24", "-86.5936, 838.098, -120.902, 0.24", "-86.8637, 839.265, -121.951, 0.24", "-87.2032, 840.44, -123.187, 0.24", "-87.5058, 841.431, -124.267, 0.24", "-87.7895, 842.394, -125.322, 0.24", "-88.0666, 843.385, -126.381, 0.24", "-88.3644, 844.543, -127.668, 0.24", "-88.656, 845.641, -129.01, 0.12", "-88.9141, 846.435, -130.209, 0.12", "-89.1186, 846.944, -131.126, 0.12", "-89.2902, 847.329, -131.879, 0.12", "-89.7045, 848.119, -133.444, 0.12", "-90.2159, 848.889, -135.036, 0.12", "-90.7481, 849.425, -136.312, 0.12", "-91.378, 849.905, -137.508, 0.12", "-92.3222, 850.561, -138.971, 0.12", "-93.5608, 851.434, -140.563, 0.12", "-94.2415, 851.939, -141.273, 0.12", "-94.9065, 852.467, -141.875, 0.12", "-95.8128, 853.235, -142.621, 0.12", "-96.7302, 853.968, -143.226, 0.12", "-97.0713, 854.264, -143.46, 0.12", "-97.8676, 855.138, -144.152, 0.12", "-98.1321, 855.602, -144.492, 0.12", "-98.4477, 856.481, -145.08, 0.12", "-98.7983, 858.089, -146.123, 0.12", "-99.0791, 860.72, -147.753, 0.12", "-99.1148, 861.809, -148.375, 0.12", "-99.0641, 863.474, -149.379, 0.12", "-98.9794, 864.578, -150.088, 0.12", "-98.8746, 865.686, -150.828, 0.12", "-98.7083, 867.231, -151.812, 0.12", "-98.673, 868.196, -152.369, 0.12", "-98.5682, 870.179, -153.65, 0.12", "-98.4857, 871.395, -154.521, 0.12", "-98.4149, 872.48, -155.32, 0.12", "-98.3338, 873.639, -156.14, 0.12", "-98.2438, 874.89, -157.046, 0.12", "-98.1478, 876.913, -158.525, 0.12", "-98.0798, 878.03, -159.306, 0.12", "-97.9332, 879.855, -160.574, 0.12", "-97.7733, 881.669, -161.832, 0.12", "-97.666, 883.411, -163.059, 0.12", "-97.6216, 884.819, -164.009, 0.12", "-97.6866, 886.365, -164.993, 0.12", "-97.8031, 887.622, -165.881, 0.12", "-97.9828, 888.929, -166.874, 0.12", "-98.2041, 890.131, -167.781, 0.12", "-98.5807, 892.025, -169.133, 0.12", "-98.8929, 893.342, -170.124, 0.12", "-99.3183, 894.652, -171.229, 0.12", "-99.6371, 895.644, -172.095, 0.12", "-100.028, 896.963, -173.256, 0.12", "-100.246, 897.677, -173.916, 0.12", "-100.53, 898.744, -174.964, 0.12", "-100.671, 899.345, -175.576, 0.12", "-101.092, 900.959, -177.217, 0.12", "-101.258, 901.551, -177.843, 0.12", "-101.526, 902.501, -178.884, 0.12", "-101.915, 904.394, -180.843, 0.12", "-102.024, 905.228, -181.625, 0.12", "-102.128, 906.022, -182.383, 0.12", "-102.262, 906.843, -183.177, 0.12", "-102.442, 907.936, -184.173, 0.12", "-102.752, 909.72, -185.81, 0.12", "-102.91, 910.412, -186.473, 0.12", "-103.136, 911.577, -187.643, 0.12", "-103.482, 913.349, -189.513, 0.12", "-103.533, 913.586, -189.768, 0.12", "-103.7, 914.418, -190.629, 0.12", "-103.892, 915.298, -191.614, 0.12", "-104.212, 916.719, -193.327, 0.12", "-104.357, 917.478, -194.276, 0.12", "-104.599, 919.274, -196.713, 0.12", "-104.692, 920.083, -197.865, 0.12", "-104.883, 921.435, -199.915, 0.12", "-105.01, 922.221, -201.216, 0.12", "-105.164, 923.067, -202.616, 0.12", "-105.348, 924.105, -204.318, 0.12", "-105.681, 925.873, -207.118, 0.12", "-105.855, 926.58, -208.114, 0.12", "-105.953, 926.984, -208.578, 0.12", "-106.221, 928.107, -209.597, 0.12", "-106.677, 929.966, -210.973, 0.12", "-106.956, 931.234, -211.727, 0.12", "-107.23, 933.248, -212.674, 0.12", "-107.299, 934.406, -213.135, 0.12", "-107.343, 936.589, -213.837, 0.12", "-107.274, 938.414, -214.256, 0.12", "-107.087, 940.079, -214.48, 0.12", "-106.814, 941.677, -214.6, 0.12", "-106.441, 943.231, -214.614, 0.12", "-105.756, 945.86, -214.587, 0.12", "-105.21, 947.788, -214.506, 0.12", "-104.865, 948.975, -214.369, 0.12", "-104.52, 950.173, -214.181, 0.12", "-104.181, 951.4, -213.962, 0.12" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "-70.2665, 823.53, -58.9349, 0.24", "-71.0601, 825.904, -57.8829, 0.24", "-72.0033, 829.196, -56.4836, 0.24", "-72.9671, 832.56, -55.0539, 0.24", "-73.6581, 834.972, -54.0288, 0.24", "-74.4436, 837.714, -52.8635, 0.24", "-75.0197, 839.725, -52.0089, 0.24", "-75.3531, 841.22, -51.3857, 0.24" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "-70.2665, 823.53, -58.9349, 0.24", "-69.4872, 826.302, -58.4292, 0.24", "-68.744, 829.316, -57.8574, 0.24", "-68.4244, 831.079, -57.5499, 0.24", "-67.94, 834.089, -57.0024, 0.24", "-67.4652, 837.075, -56.5786, 0.24", "-67.0873, 839.482, -56.3049, 0.24", "-66.64, 841.953, -56.2688, 0.24", "-66.0469, 844.992, -56.461, 0.24", "-65.4205, 847.887, -56.8663, 0.24", "-64.8014, 850.903, -57.4197, 0.24", "-64.1786, 853.315, -58.0268, 0.24", "-62.5546, 858.488, -59.4594, 0.24", "-61.5578, 861.218, -60.2173, 0.24", "-60.2437, 863.981, -61.0322, 0.24", "-58.4369, 867.117, -62.0178, 0.24", "-55.7358, 871.11, -63.2026, 0.24", "-53.5868, 873.841, -64.0656, 0.24", "-51.6413, 876.129, -64.7548, 0.24", "-46.7906, 881.355, -66.7041, 0.24", "-43.232, 884.949, -68.2434, 0.24", "-40.0468, 887.918, -69.734, 0.24", "-36.6914, 890.987, -71.4095, 0.12", "-34.5376, 893.006, -72.5924, 0.12", "-28.6793, 898.663, -75.8712, 0.24", "-28.0076, 899.349, -76.2305, 0.24", "-25.681, 901.636, -77.4102, 0.24", "-24.6771, 902.621, -77.8778, 0.24", "-23.0005, 904.195, -78.4793, 0.24", "-19.7477, 906.902, -79.2736, 0.24", "-17.1167, 908.995, -79.511, 0.24", "-13.7053, 911.601, -79.6926, 0.24", "-11.8175, 913.026, -79.7794, 0.24", "-10.3823, 914.119, -79.9143, 0.24", "-6.96972, 916.836, -80.3246, 0.24", "-4.35217, 919.073, -80.7521, 0.24", "-2.4372, 920.819, -81.0576, 0.24", "0.434669, 923.62, -81.7299, 0.12", "2.73638, 925.974, -82.5864, 0.12", "3.99855, 927.379, -83.2614, 0.12", "5.72308, 929.46, -84.5115, 0.12", "7.22541, 931.422, -85.9558, 0.12", "10.1038, 935.177, -89.024, 0.12", "11.9177, 937.423, -90.8614, 0.12", "13.1735, 938.903, -91.9783, 0.12", "13.7733, 939.662, -92.4935, 0.12", "15.9214, 942.605, -94.2379, 0.12", "19.9791, 948.625, -96.9712, 0.12", "22.8381, 953.375, -98.3402, 0.12", "25.2786, 957.782, -99.0835, 0.12", "26.9941, 961.132, -99.3218, 0.12", "28.3849, 963.956, -99.2635, 0.12", "30.524, 968.835, -98.6342, 0.12", "31.3332, 971.262, -98.1635, 0.12", "31.9978, 973.428, -97.7349, 0.12", "32.6545, 975.281, -97.4501, 0.12", "33.6253, 977.293, -97.1933, 0.12", "34.7239, 979.344, -96.9473, 0.12", "36.484, 982.295, -96.9188, 0.12", "37.6715, 984.404, -96.9592, 0.12", "38.4496, 985.863, -97.0035, 0.12", "39.7143, 988.161, -97.1272, 0.12", "41.2965, 991.513, -97.2863, 0.12", "42.5481, 993.853, -97.2572, 0.12", "43.4488, 995.276, -97.2529, 0.12", "45.326, 997.886, -97.4079, 0.12", "47.0019, 1000.11, -97.5972, 0.12", "50.4028, 1004.19, -98.1321, 0.12", "53.1548, 1007.14, -98.4996, 0.12", "56.7247, 1010.73, -98.6197, 0.12", "59.729, 1013.53, -98.6835, 0.12", "61.2193, 1014.92, -98.776, 0.12", "62.9434, 1016.47, -98.9679, 0.12", "64.8899, 1017.95, -99.217, 0.12", "67.8708, 1020.29, -99.6316, 0.12", "71.5403, 1023.12, -100.241, 0.12", "74.6741, 1025.7, -101.033, 0.12", "76.2687, 1027.09, -101.623, 0.12", "78.7762, 1029.45, -102.732, 0.12", "80.4141, 1031.07, -103.657, 0.12", "82.4414, 1033.19, -104.914, 0.12", "83.9077, 1034.78, -105.779, 0.12", "86.4251, 1037.49, -107.189, 0.12", "88.0451, 1039.17, -108.046, 0.12", "91.2174, 1042.45, -109.722, 0.12", "92.4371, 1043.5, -110.247, 0.12", "96.4985, 1046.61, -111.743, 0.12", "97.7333, 1047.5, -112.189, 0.12", "100.864, 1049.76, -113.329, 0.12", "102.829, 1051.15, -114.034, 0.12", "107.304, 1054.37, -115.712, 0.12", "111.168, 1057.33, -117.329, 0.12", "112.913, 1058.9, -118.115, 0.12", "115.294, 1061.41, -119.286, 0.12", "116.089, 1062.41, -119.663, 0.12", "118.436, 1065.78, -120.587, 0.12", "119.447, 1067.67, -120.822, 0.12", "121.67, 1072.29, -120.712, 0.12", "122.681, 1074.49, -120.533, 0.12", "124.154, 1077.95, -120.038, 0.12", "125.033, 1080.06, -119.619, 0.12", "126.749, 1084.0, -118.338, 0.12", "127.556, 1085.76, -117.637, 0.12" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "-75.3531, 841.22, -51.3857, 0.24", "-75.4023, 841.374, -51.4083, 0.24", "-75.998, 843.289, -51.6244, 0.24", "-76.7598, 845.881, -51.7518, 0.24", "-77.4164, 848.149, -51.8564, 0.24", "-77.981, 850.169, -51.9268, 0.24", "-78.328, 851.539, -51.9505, 0.24", "-78.6323, 852.834, -51.9495, 0.24", "-79.3479, 856.138, -51.8337, 0.24", "-79.8883, 858.766, -51.7125, 0.24", "-80.1277, 860.016, -51.6605, 0.24", "-80.7418, 863.309, -51.4926, 0.24", "-81.0945, 865.302, -51.3825, 0.24", "-81.4513, 867.465, -51.2922, 0.24", "-81.8323, 869.874, -51.228, 0.24", "-82.211, 872.038, -51.1716, 0.24", "-82.5742, 873.851, -51.1329, 0.24", "-83.1424, 876.402, -51.0911, 0.24", "-83.7892, 879.282, -51.0395, 0.12", "-84.3675, 881.651, -51.0109, 0.12", "-84.9408, 883.649, -50.9867, 0.12", "-86.2036, 887.444, -50.9705, 0.12", "-86.8302, 889.093, -50.9871, 0.12", "-87.174, 889.91, -50.9963, 0.12", "-88.0942, 892.031, -51.0252, 0.12", "-89.0031, 894.196, -51.0691, 0.12", "-89.759, 896.11, -51.1432, 0.12", "-90.9027, 899.04, -51.341, 0.12", "-91.4744, 900.568, -51.4495, 0.12", "-92.7459, 904.175, -51.6864, 0.12", "-93.4192, 906.31, -51.815, 0.12", "-94.2352, 909.179, -51.9007, 0.12", "-94.7571, 911.014, -51.8579, 0.12", "-95.259, 912.766, -51.7509, 0.12", "-95.6962, 914.281, -51.6251, 0.12", "-96.2647, 916.242, -51.4208, 0.12", "-97.1899, 919.422, -51.0635, 0.12", "-98.2914, 923.004, -50.6788, 0.12", "-99.1174, 925.611, -50.4431, 0.12", "-100.043, 928.477, -50.2543, 0.12", "-100.683, 930.441, -50.1561, 0.12", "-101.377, 932.462, -50.0733, 0.12", "-102.855, 936.636, -49.9572, 0.12", "-104.167, 940.297, -49.8933, 0.12", "-105.301, 943.448, -49.7555, 0.12", "-105.827, 944.932, -49.6335, 0.12", "-106.893, 947.98, -49.3076, 0.12", "-107.771, 950.568, -48.9769, 0.12", "-108.349, 952.347, -48.6936, 0.12", "-109.361, 955.591, -48.1537, 0.12", "-109.848, 957.232, -47.8959, 0.12", "-110.703, 960.307, -47.46, 0.12", "-111.589, 963.624, -47.0535, 0.12", "-112.439, 966.725, -46.7154, 0.12", "-113.275, 969.723, -46.452, 0.12", "-113.89, 971.877, -46.3513, 0.12", "-114.81, 975.107, -46.2441, 0.12", "-115.41, 977.273, -46.1578, 0.12", "-115.947, 979.252, -46.0363, 0.12", "-116.472, 981.019, -45.8712, 0.12", "-116.949, 982.474, -45.6522, 0.12", "-117.872, 985.017, -45.0625, 0.12", "-118.492, 986.62, -44.5416, 0.12", "-119.486, 989.119, -43.5657, 0.12", "-120.298, 991.141, -42.6701, 0.12", "-120.934, 992.532, -41.9784, 0.12", "-122.046, 994.765, -40.8082, 0.12", "-122.672, 995.844, -40.2413, 0.12", "-123.593, 997.359, -39.4293, 0.12", "-124.715, 999.147, -38.4868, 0.12", "-126.111, 1001.47, -37.2775, 0.12", "-126.992, 1002.86, -36.5702, 0.12", "-128.42, 1005.07, -35.5626, 0.12", "-129.202, 1006.14, -35.064, 0.12" ],
    "parent" : "apic_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "-75.3531, 841.22, -51.3857, 0.24", "-75.5843, 843.044, -49.3443, 0.24", "-75.8501, 845.783, -45.8362, 0.24", "-75.9948, 847.106, -44.0535, 0.24", "-76.0441, 849.277, -40.8911, 0.24", "-75.9695, 851.079, -38.0176, 0.24", "-75.7078, 852.89, -35.0202, 0.24", "-75.369, 853.938, -33.0173, 0.24", "-74.8912, 854.846, -31.0632, 0.24", "-73.9818, 856.12, -28.2921, 0.24", "-73.1516, 857.217, -26.0825, 0.24", "-72.0364, 858.802, -22.9934, 0.24", "-71.2984, 860.073, -20.6257, 0.24", "-70.9014, 860.858, -19.1918, 0.24", "-70.2694, 862.733, -16.0181, 0.24", "-69.9999, 864.555, -13.2971, 0.12", "-69.9221, 865.701, -11.7451, 0.12", "-70.0778, 867.591, -9.39871, 0.12", "-70.4167, 869.51, -7.28939, 0.12", "-71.0661, 872.29, -4.54579, 0.12", "-71.4645, 873.739, -3.24962, 0.12", "-72.0251, 875.422, -1.90528, 0.12", "-73.155, 878.318, 0.0708489, 0.12", "-73.9931, 879.813, 0.985411, 0.12", "-75.394, 882.027, 2.23359, 0.12", "-76.2032, 883.137, 2.84485, 0.12", "-77.6855, 884.893, 3.82431, 0.12", "-78.7358, 885.963, 4.40075, 0.12", "-82.1007, 889.191, 6.15219, 0.12" ],
    "parent" : "apic_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_2", "apic_1", "axon_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_43", "dend_42", "dend_37", "dend_36", "dend_21", "dend_18", "dend_15", "dend_0", "apic_2", "apic_1", "dend_39", "dend_38", "dend_33", "dend_22", "dend_20", "dend_19", "dend_17", "dend_16", "dend_10", "dend_1", "apic_4", "apic_3", "dend_41", "dend_40", "dend_35", "dend_34", "dend_24", "dend_23", "dend_12", "dend_11", "dend_9", "dend_2", "apic_8", "apic_5", "dend_28", "dend_25", "dend_14", "dend_13", "dend_6", "dend_3", "apic_10", "apic_9", "apic_7", "apic_6", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_5", "dend_4", "apic_14", "apic_11", "dend_32", "dend_31", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_43", "dend_42", "dend_37", "dend_36", "dend_21", "dend_18", "dend_15", "dend_0", "apic_2", "apic_1", "dend_39", "dend_38", "dend_33", "dend_22", "dend_20", "dend_19", "dend_17", "dend_16", "dend_10", "dend_1", "apic_4", "apic_3", "dend_41", "dend_40", "dend_35", "dend_34", "dend_24", "dend_23", "dend_12", "dend_11", "dend_9", "dend_2", "apic_8", "apic_5", "dend_28", "dend_25", "dend_14", "dend_13", "dend_6", "dend_3", "apic_10", "apic_9", "apic_7", "apic_6", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_5", "dend_4", "apic_14", "apic_11", "dend_32", "dend_31", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_42", "dend_37", "dend_36", "dend_21", "dend_18", "dend_15", "dend_0", "dend_39", "dend_38", "dend_33", "dend_22", "dend_20", "dend_19", "dend_17", "dend_16", "dend_10", "dend_1", "dend_41", "dend_40", "dend_35", "dend_34", "dend_24", "dend_23", "dend_12", "dend_11", "dend_9", "dend_2", "dend_28", "dend_25", "dend_14", "dend_13", "dend_6", "dend_3", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_5", "dend_4", "dend_32", "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "apic_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "apic_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "apic_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "apic_23" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22", "apic_23", "apic_24", "apic_25", "apic_26" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.025689999",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039763",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.288755",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.029455999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "6.71E-4",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098377",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.957198",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "1.936176",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.072928995",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0038689997",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.97688496",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "6.8399997E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "6.9999996E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "4.59E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0055919997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_231_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_231_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr231_L6_UTPC_9d28264fcd_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_2, id: apic_2, parent: apic_0
create apic_2
public apic_2
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_21
create dend_33
public dend_33
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_14, id: apic_14, parent: apic_10
create apic_14
public apic_14
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_26, id: apic_26, parent: apic_16
create apic_26
public apic_26
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_23, id: apic_23, parent: apic_21
create apic_23
public apic_23
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_25, id: apic_25, parent: apic_23
create apic_25
public apic_25
// Section: apic_24, id: apic_24, parent: apic_23
create apic_24
public apic_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, apic_2, apic_1, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, apic_4, apic_3, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, apic_8, apic_5, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, apic_10, apic_9, apic_7, apic_6, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, apic_14, apic_11, dend_32, dend_31, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, apic_2, apic_1, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, apic_4, apic_3, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, apic_8, apic_5, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, apic_10, apic_9, apic_7, apic_6, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, apic_14, apic_11, dend_32, dend_31, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, dend_32, dend_31]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[apic_26]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_25]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[apic_24]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_23]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_231_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_231_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999999347301206)
    connect dend_43(0), soma_0(0.4999999347301206)
    connect dend_42(0), soma_0(0.4999999347301206)
    connect dend_37(0), soma_0(0.4999999347301206)
    connect dend_36(0), soma_0(0.4999999347301206)
    connect dend_21(0), soma_0(0.4999999347301206)
    connect dend_18(0), soma_0(0.4999999347301206)
    connect dend_15(0), soma_0(0.4999999347301206)
    connect dend_0(0), soma_0(0.4999999347301206)
    connect axon_0(0), soma_0(1.0)
    connect apic_2(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_33(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_14(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_26(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_23(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_25(0), apic_23(1.0)
    connect apic_24(0), apic_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.12491, 4.54947, 0.014993, 2.64062 ) }
    soma_0 { pt3dadd( -5.50711, 4.09677, 0.00563454, 4.44252 ) }
    soma_0 { pt3dadd( -4.88931, 3.64407, -0.00372396, 5.94799 ) }
    soma_0 { pt3dadd( -4.2715, 3.19136, -0.0130825, 7.13406 ) }
    soma_0 { pt3dadd( -3.6537, 2.73866, -0.022441, 8.2655 ) }
    soma_0 { pt3dadd( -3.03589, 2.28596, -0.0317995, 9.29453 ) }
    soma_0 { pt3dadd( -2.41809, 1.83326, -0.041158, 10.3736 ) }
    soma_0 { pt3dadd( -1.80029, 1.38056, -0.0505165, 11.0642 ) }
    soma_0 { pt3dadd( -1.18248, 0.927855, -0.059875, 11.6512 ) }
    soma_0 { pt3dadd( -0.56468, 0.475153, -0.0692335, 11.955 ) }
    soma_0 { pt3dadd( 0.0531242, 0.0224506, -0.078592, 12.1495 ) }
    soma_0 { pt3dadd( 0.670928, -0.430251, -0.0879505, 12.2302 ) }
    soma_0 { pt3dadd( 1.28873, -0.882953, -0.097309, 12.1321 ) }
    soma_0 { pt3dadd( 1.90654, -1.33566, -0.106668, 11.9546 ) }
    soma_0 { pt3dadd( 2.52434, -1.78836, -0.116026, 11.3256 ) }
    soma_0 { pt3dadd( 3.14214, -2.24106, -0.125385, 10.6359 ) }
    soma_0 { pt3dadd( 3.75995, -2.69376, -0.134743, 9.83304 ) }
    soma_0 { pt3dadd( 4.37775, -3.14646, -0.144102, 8.92143 ) }
    soma_0 { pt3dadd( 4.99555, -3.59917, -0.15346, 7.64149 ) }
    soma_0 { pt3dadd( 5.61336, -4.05187, -0.162819, 5.66644 ) }
    soma_0 { pt3dadd( 6.23116, -4.50457, -0.172177, 3.08284 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -3.16351, 6.05747, -2.8038, 1.8 ) }
    apic_0 { pt3dadd( -3.64668, 7.0493, -3.28287, 1.8 ) }
    apic_0 { pt3dadd( -3.96041, 8.20157, -3.58568, 1.8 ) }
    apic_0 { pt3dadd( -4.24737, 9.33016, -3.90096, 1.8 ) }
    apic_0 { pt3dadd( -4.68266, 11.1363, -4.40877, 1.68 ) }
    apic_0 { pt3dadd( -5.00328, 12.5385, -4.79287, 1.56 ) }
    apic_0 { pt3dadd( -5.20268, 13.4362, -5.04277, 1.56 ) }
    apic_0 { pt3dadd( -5.62196, 15.2595, -5.69132, 1.32 ) }
    apic_0 { pt3dadd( -5.79966, 16.0383, -5.98193, 1.32 ) }
    apic_0 { pt3dadd( -5.89826, 16.4979, -6.1499, 1.56 ) }
    apic_0 { pt3dadd( -6.01839, 17.2415, -6.36311, 1.56 ) }
    apic_0 { pt3dadd( -6.18312, 18.739, -6.75938, 1.56 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 33/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.08791, 1.2939, -6.53524, 0.24 ) }
    dend_43 { pt3dadd( 5.22589, 2.61393, -15.1904, 0.24 ) }
    dend_43 { pt3dadd( 4.19184, 5.54842, -16.7501, 0.12 ) }
    dend_43 { pt3dadd( 3.81719, 6.24718, -17.1435, 0.12 ) }
    dend_43 { pt3dadd( 3.71736, 6.38825, -17.2216, 0.12 ) }
    dend_43 { pt3dadd( 3.25278, 6.95094, -17.5203, 0.12 ) }
    dend_43 { pt3dadd( 3.13199, 7.07706, -17.5942, 0.12 ) }
    dend_43 { pt3dadd( 2.27683, 7.9474, -18.0555, 0.12 ) }
    dend_43 { pt3dadd( 2.19331, 8.02319, -18.128, 0.12 ) }
    dend_43 { pt3dadd( 1.49523, 8.65538, -18.8945, 0.12 ) }
    dend_43 { pt3dadd( 1.2988, 8.86193, -19.1447, 0.12 ) }
    dend_43 { pt3dadd( 0.245524, 10.1337, -20.7353, 0.12 ) }
    dend_43 { pt3dadd( 0.169078, 10.244, -20.8692, 0.12 ) }
    dend_43 { pt3dadd( -0.83843, 11.8323, -22.6304, 0.12 ) }
    dend_43 { pt3dadd( -0.903775, 11.9423, -22.7282, 0.12 ) }
    dend_43 { pt3dadd( -1.39002, 12.6916, -23.377, 0.12 ) }
    dend_43 { pt3dadd( -1.56719, 12.939, -23.583, 0.12 ) }
    dend_43 { pt3dadd( -3.40537, 15.1548, -25.357, 0.12 ) }
    dend_43 { pt3dadd( -4.42574, 16.3163, -26.2686, 0.12 ) }
    dend_43 { pt3dadd( -6.27111, 18.1735, -27.7503, 0.12 ) }
    dend_43 { pt3dadd( -7.82704, 19.526, -28.9633, 0.12 ) }
    dend_43 { pt3dadd( -7.92022, 19.5913, -29.0342, 0.12 ) }
    dend_43 { pt3dadd( -8.69232, 20.0374, -29.6, 0.12 ) }
    dend_43 { pt3dadd( -8.82891, 20.0988, -29.7333, 0.12 ) }
    dend_43 { pt3dadd( -9.95546, 20.5729, -31.2338, 0.12 ) }
    dend_43 { pt3dadd( -10.0927, 20.6487, -31.4733, 0.12 ) }
    dend_43 { pt3dadd( -10.6407, 21.1631, -32.6629, 0.12 ) }
    dend_43 { pt3dadd( -10.7115, 21.2598, -32.8509, 0.12 ) }
    dend_43 { pt3dadd( -11.9682, 23.5407, -36.7618, 0.12 ) }
    dend_43 { pt3dadd( -12.0024, 23.6111, -36.8708, 0.12 ) }
    dend_43 { pt3dadd( -12.3651, 24.5152, -38.1349, 0.12 ) }
    dend_43 { pt3dadd( -12.388, 24.5687, -38.2023, 0.12 ) }
    dend_43 { pt3dadd( -13.4087, 26.6387, -40.4358, 0.12 ) }
    dend_43 { pt3dadd( -13.5295, 26.84, -40.6224, 0.12 ) }
    dend_43 { pt3dadd( -14.0862, 27.5518, -41.2236, 0.12 ) }
    dend_43 { pt3dadd( -14.1994, 27.6788, -41.3459, 0.12 ) }
    dend_43 { pt3dadd( -15.2058, 28.6787, -42.4943, 0.12 ) }
    dend_43 { pt3dadd( -15.9198, 29.383, -43.3595, 0.12 ) }
    dend_43 { pt3dadd( -16.0053, 29.4899, -43.4737, 0.12 ) }
    dend_43 { pt3dadd( -17.231, 31.5663, -45.3903, 0.12 ) }
    dend_43 { pt3dadd( -17.3417, 31.8095, -45.5954, 0.12 ) }
    dend_43 { pt3dadd( -17.7186, 32.8432, -46.3942, 0.12 ) }
    dend_43 { pt3dadd( -17.7591, 32.9929, -46.5028, 0.12 ) }
    dend_43 { pt3dadd( -18.2061, 35.3718, -48.1788, 0.12 ) }
    dend_43 { pt3dadd( -18.4557, 36.8549, -49.2484, 0.12 ) }
    dend_43 { pt3dadd( -18.4804, 37.0255, -49.3676, 0.12 ) }
    dend_43 { pt3dadd( -18.6128, 37.9444, -50.0468, 0.12 ) }
    dend_43 { pt3dadd( -18.6244, 38.0226, -50.1083, 0.12 ) }
    dend_43 { pt3dadd( -18.9489, 40.2323, -51.97, 0.12 ) }
    dend_43 { pt3dadd( -19.3067, 42.5296, -54.1459, 0.12 ) }
    dend_43 { pt3dadd( -19.3183, 42.5895, -54.2108, 0.12 ) }
    dend_43 { pt3dadd( -19.6163, 43.8581, -55.6789, 0.12 ) }
    dend_43 { pt3dadd( -19.65, 43.9696, -55.8137, 0.12 ) }
    dend_43 { pt3dadd( -20.2219, 45.4633, -57.689, 0.12 ) }
    dend_43 { pt3dadd( -20.253, 45.5416, -57.7933, 0.12 ) }
    dend_43 { pt3dadd( -20.815, 47.6187, -61.3585, 0.12 ) }
    dend_43 { pt3dadd( -20.8481, 47.782, -61.6735, 0.12 ) }
    dend_43 { pt3dadd( -20.9264, 48.2712, -62.6331, 0.12 ) }
    dend_43 { pt3dadd( -20.9641, 48.5828, -63.2407, 0.12 ) }
    dend_43 { pt3dadd( -21.1322, 50.7688, -67.3336, 0.12 ) }
    dend_43 { pt3dadd( -21.2346, 53.8667, -72.7377, 0.12 ) }
    dend_43 { pt3dadd( -21.234, 53.9066, -72.8046, 0.12 ) }
    dend_43 { pt3dadd( -21.2158, 55.3695, -75.269, 0.12 ) }
    dend_43 { pt3dadd( -21.2126, 55.5125, -75.5078, 0.12 ) }
    dend_43 { pt3dadd( -21.2146, 57.4319, -78.627, 0.12 ) }
    dend_43 { pt3dadd( -21.2248, 57.5423, -78.7939, 0.12 ) }
    dend_43 { pt3dadd( -21.7787, 61.173, -83.652, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( -21.7896, 61.25, -83.7612, 0.12 ) }
    dend_43 { pt3dadd( -21.8958, 62.1096, -85.0746, 0.12 ) }
    dend_43 { pt3dadd( -21.9112, 62.218, -85.2294, 0.12 ) }
    dend_43 { pt3dadd( -22.1167, 63.3947, -86.8806, 0.12 ) }
    dend_43 { pt3dadd( -22.1298, 63.4499, -86.9632, 0.12 ) }
    dend_43 { pt3dadd( -22.8017, 65.628, -90.322, 0.12 ) }
    dend_43 { pt3dadd( -22.8286, 65.705, -90.4302, 0.12 ) }
    dend_43 { pt3dadd( -23.2498, 66.8452, -92.1079, 0.12 ) }
    dend_43 { pt3dadd( -23.5432, 67.663, -93.3286, 0.12 ) }
    dend_43 { pt3dadd( -24.3876, 70.1897, -96.926, 0.12 ) }
    dend_43 { pt3dadd( -24.415, 70.2693, -97.0305, 0.12 ) }
    dend_43 { pt3dadd( -25.2447, 72.6021, -99.7298, 0.12 ) }
    dend_43 { pt3dadd( -26.8092, 77.2277, -104.792, 0.12 ) }
    dend_43 { pt3dadd( -26.8344, 77.3225, -104.883, 0.12 ) }
    dend_43 { pt3dadd( -27.195, 78.9978, -106.191, 0.12 ) }
    dend_43 { pt3dadd( -27.2882, 79.4912, -106.534, 0.12 ) }
    dend_43 { pt3dadd( -27.5275, 80.9018, -107.505, 0.12 ) }
    dend_43 { pt3dadd( -27.5373, 80.9753, -107.555, 0.12 ) }
    dend_43 { pt3dadd( -28.4323, 88.4518, -111.359, 0.12 ) }
    dend_43 { pt3dadd( -28.692, 90.6708, -112.552, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 20/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.17376, 0.919378, -6.85126, 0.48 ) }
    dend_42 { pt3dadd( 2.84327, 1.80961, -14.3776, 0.48 ) }
    dend_42 { pt3dadd( 1.90793, 2.11431, -14.509, 0.48 ) }
    dend_42 { pt3dadd( 1.8093, 2.15394, -14.5597, 0.48 ) }
    dend_42 { pt3dadd( 1.08221, 2.46674, -15.0479, 0.36 ) }
    dend_42 { pt3dadd( 0.994408, 2.49901, -15.1281, 0.36 ) }
    dend_42 { pt3dadd( 0.247815, 2.75779, -16.006, 0.36 ) }
    dend_42 { pt3dadd( 0.170817, 2.78258, -16.0989, 0.36 ) }
    dend_42 { pt3dadd( -1.69048, 3.33328, -18.3293, 0.36 ) }
    dend_42 { pt3dadd( -1.72766, 3.34319, -18.3725, 0.36 ) }
    dend_42 { pt3dadd( -3.02495, 3.65477, -19.7707, 0.36 ) }
    dend_42 { pt3dadd( -3.16208, 3.68203, -19.9063, 0.36 ) }
    dend_42 { pt3dadd( -4.13988, 3.78088, -20.8426, 0.36 ) }
    dend_42 { pt3dadd( -4.77282, 3.81704, -21.3727, 0.36 ) }
    dend_42 { pt3dadd( -4.84775, 3.81768, -21.4171, 0.36 ) }
    dend_42 { pt3dadd( -5.76411, 3.82862, -21.9219, 0.36 ) }
    dend_42 { pt3dadd( -5.81661, 3.83176, -21.9461, 0.36 ) }
    dend_42 { pt3dadd( -7.25787, 3.78882, -23.1784, 0.36 ) }
    dend_42 { pt3dadd( -7.33293, 3.77936, -23.2757, 0.36 ) }
    dend_42 { pt3dadd( -7.67033, 3.70546, -23.8727, 0.36 ) }
    dend_42 { pt3dadd( -7.72117, 3.69208, -23.9781, 0.36 ) }
    dend_42 { pt3dadd( -8.06714, 3.60602, -24.7633, 0.36 ) }
    dend_42 { pt3dadd( -9.36353, 3.35881, -27.7604, 0.24 ) }
    dend_42 { pt3dadd( -9.43669, 3.35366, -27.9257, 0.24 ) }
    dend_42 { pt3dadd( -10.2931, 3.35435, -29.7391, 0.24 ) }
    dend_42 { pt3dadd( -10.4132, 3.35869, -29.9865, 0.24 ) }
    dend_42 { pt3dadd( -10.8305, 3.37383, -30.7284, 0.24 ) }
    dend_42 { pt3dadd( -10.9164, 3.37797, -30.8522, 0.24 ) }
    dend_42 { pt3dadd( -11.6667, 3.48259, -31.4279, 0.24 ) }
    dend_42 { pt3dadd( -12.2906, 3.54921, -31.8158, 0.24 ) }
    dend_42 { pt3dadd( -12.3927, 3.54783, -31.8847, 0.24 ) }
    dend_42 { pt3dadd( -12.9972, 3.44052, -32.4385, 0.24 ) }
    dend_42 { pt3dadd( -13.0557, 3.4212, -32.5229, 0.24 ) }
    dend_42 { pt3dadd( -13.4803, 3.25517, -33.2999, 0.24 ) }
    dend_42 { pt3dadd( -13.5169, 3.23771, -33.377, 0.24 ) }
    dend_42 { pt3dadd( -14.4405, 2.77668, -35.3163, 0.24 ) }
    dend_42 { pt3dadd( -14.4947, 2.75064, -35.4238, 0.24 ) }
    dend_42 { pt3dadd( -15.273, 2.39351, -36.9278, 0.24 ) }
    dend_42 { pt3dadd( -15.3795, 2.34944, -37.1109, 0.24 ) }
    dend_42 { pt3dadd( -15.7267, 2.22718, -37.6273, 0.24 ) }
    dend_42 { pt3dadd( -16.2659, 2.06485, -38.2741, 0.24 ) }
    dend_42 { pt3dadd( -16.5204, 2.01295, -38.4507, 0.24 ) }
    dend_42 { pt3dadd( -16.5951, 2.00001, -38.4937, 0.24 ) }
    dend_42 { pt3dadd( -17.8182, 1.82191, -39.0515, 0.24 ) }
    dend_42 { pt3dadd( -17.8976, 1.81486, -39.0889, 0.24 ) }
    dend_42 { pt3dadd( -18.5261, 1.80027, -39.402, 0.24 ) }
    dend_42 { pt3dadd( -19.6141, 1.81053, -39.93, 0.24 ) }
    dend_42 { pt3dadd( -20.6624, 1.81348, -40.4015, 0.24 ) }
    dend_42 { pt3dadd( -20.8491, 1.80461, -40.4748, 0.24 ) }
    dend_42 { pt3dadd( -21.5544, 1.73866, -40.6975, 0.24 ) }
    dend_42 { pt3dadd( -21.6353, 1.73035, -40.7288, 0.24 ) }
    dend_42 { pt3dadd( -22.1175, 1.676, -40.9707, 0.24 ) }
    dend_42 { pt3dadd( -22.2212, 1.66472, -41.0362, 0.24 ) }
    dend_42 { pt3dadd( -22.8178, 1.64669, -41.3777, 0.24 ) }
    dend_42 { pt3dadd( -22.9603, 1.64969, -41.4685, 0.24 ) }
    dend_42 { pt3dadd( -23.5927, 1.70357, -41.9513, 0.24 ) }
    dend_42 { pt3dadd( -23.7031, 1.73038, -42.0765, 0.24 ) }
    dend_42 { pt3dadd( -23.8706, 1.7906, -42.3204, 0.24 ) }
    dend_42 { pt3dadd( -23.9354, 1.81763, -42.4214, 0.24 ) }
    dend_42 { pt3dadd( -24.2051, 1.95052, -42.8856, 0.24 ) }
    dend_42 { pt3dadd( -24.2328, 1.96274, -42.9349, 0.24 ) }
    dend_42 { pt3dadd( -25.1592, 2.28882, -44.6521, 0.24 ) }
    dend_42 { pt3dadd( -25.2964, 2.33712, -44.9189, 0.24 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 83/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.78247, 0.533684, -6.31588, 1.2 ) }
    dend_37 { pt3dadd( 8.31525, 1.05151, -17.5495, 1.2 ) }
    dend_37 { pt3dadd( 10.0294, 0.899693, -18.4434, 1.2 ) }
    dend_37 { pt3dadd( 13.5677, -0.036287, -20.1906, 1.2 ) }
    dend_37 { pt3dadd( 15.5341, -0.797162, -21.0299, 0.96 ) }
    dend_37 { pt3dadd( 16.9176, -1.39569, -21.5541, 0.96 ) }
    dend_37 { pt3dadd( 19.9259, -2.69716, -22.694, 0.96 ) }
    dend_37 { pt3dadd( 21.589, -3.59322, -23.3233, 0.96 ) }
    dend_37 { pt3dadd( 23.3679, -4.81206, -23.9194, 0.96 ) }
    dend_37 { pt3dadd( 25.5355, -6.72524, -24.4021, 0.84 ) }
    dend_37 { pt3dadd( 26.3747, -7.59807, -24.6028, 0.84 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 94/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -0.724841, -2.10836, 6.64197, 1.32 ) }
    dend_36 { pt3dadd( -0.807521, -2.79712, 8.42851, 1.32 ) }
    dend_36 { pt3dadd( -0.450462, -3.15019, 9.14054, 0.84 ) }
    dend_36 { pt3dadd( 0.00248516, -3.5733, 10.0058, 0.84 ) }
    dend_36 { pt3dadd( 1.25969, -4.6115, 12.4918, 0.84 ) }
    dend_36 { pt3dadd( 1.85936, -5.14616, 13.8139, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( 4.69443, -7.77499, 20.2225, 1.56 ) }
    dend_36 { pt3dadd( 5.49108, -8.43205, 21.9291, 1.32 ) }
    dend_36 { pt3dadd( 5.9233, -8.75025, 22.8341, 1.08 ) }
    dend_36 { pt3dadd( 8.74415, -10.4726, 29.5531, 1.08 ) }
    dend_36 { pt3dadd( 9.82841, -11.1012, 32.2696, 0.72 ) }
    dend_36 { pt3dadd( 10.1786, -11.3022, 33.2294, 0.72 ) }
    dend_36 { pt3dadd( 10.8195, -11.6698, 35.1473, 0.72 ) }
    dend_36 { pt3dadd( 11.1121, -11.8172, 36.1085, 0.72 ) }
    dend_36 { pt3dadd( 14.115, -12.9789, 46.7602, 0.72 ) }
    dend_36 { pt3dadd( 16.0879, -14.712, 54.3835, 0.72 ) }
    dend_36 { pt3dadd( 18.5053, -15.2002, 62.0599, 0.72 ) }
    dend_36 { pt3dadd( 19.8323, -16.145, 69.9566, 0.72 ) }
    dend_36 { pt3dadd( 20.7461, -17.5532, 77.8428, 0.72 ) }
    dend_36 { pt3dadd( 22.4323, -17.6995, 85.7261, 0.72 ) }
    dend_36 { pt3dadd( 25.9027, -17.7052, 93.0039, 0.72 ) }
    dend_36 { pt3dadd( 28.9473, -17.1846, 100.452, 0.72 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 16/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.28125, -0.221663, 2.41274, 1.2 ) }
    dend_21 { pt3dadd( 7.16735, -0.283843, 2.73541, 1.2 ) }
    dend_21 { pt3dadd( 9.33422, -0.943582, 3.0533, 0.96 ) }
    dend_21 { pt3dadd( 11.4582, -1.59028, 3.36491, 0.96 ) }
    dend_21 { pt3dadd( 13.6722, -2.26435, 3.68971, 0.84 ) }
    dend_21 { pt3dadd( 14.7439, -2.59065, 3.84694, 0.84 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -4.24164, -3.93241, 4.12888, 0.84 ) }
    dend_18 { pt3dadd( -4.74996, -4.47502, 4.66488, 0.84 ) }
    dend_18 { pt3dadd( -5.25702, -5.94081, 5.62036, 0.72 ) }
    dend_18 { pt3dadd( -6.17151, -8.03774, 6.99617, 0.72 ) }
    dend_18 { pt3dadd( -6.58815, -8.8602, 7.54281, 0.72 ) }
    dend_18 { pt3dadd( -7.40105, -10.3098, 8.53547, 0.72 ) }
    dend_18 { pt3dadd( -8.05482, -11.3285, 9.32686, 0.6 ) }
    dend_18 { pt3dadd( -8.64945, -12.0421, 9.99733, 0.6 ) }
    dend_18 { pt3dadd( -9.24147, -12.5167, 10.5529, 0.6 ) }
    dend_18 { pt3dadd( -9.88314, -12.9121, 11.0305, 0.6 ) }
    dend_18 { pt3dadd( -10.2634, -13.1247, 11.2961, 0.6 ) }
    dend_18 { pt3dadd( -11.6629, -13.9325, 12.1469, 0.6 ) }
    dend_18 { pt3dadd( -12.3235, -14.3387, 12.5799, 0.6 ) }
    dend_18 { pt3dadd( -12.8649, -14.6952, 12.9305, 0.6 ) }
    dend_18 { pt3dadd( -13.8098, -15.3415, 13.5031, 0.6 ) }
    dend_18 { pt3dadd( -14.4536, -15.8492, 13.8208, 0.6 ) }
    dend_18 { pt3dadd( -15.3163, -16.7364, 14.0987, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 39/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.74899, -4.85459, -3.46875, 0.84 ) }
    dend_15 { pt3dadd( -3.93615, -5.13365, -3.65894, 0.84 ) }
    dend_15 { pt3dadd( -4.19391, -6.69909, -3.67406, 0.84 ) }
    dend_15 { pt3dadd( -4.3955, -7.92342, -3.6859, 0.84 ) }
    dend_15 { pt3dadd( -4.71418, -9.85878, -3.7046, 0.84 ) }
    dend_15 { pt3dadd( -5.01325, -11.6752, -3.72215, 0.84 ) }
    dend_15 { pt3dadd( -5.25675, -13.154, -3.73644, 0.84 ) }
    dend_15 { pt3dadd( -5.45981, -15.0868, -3.75642, 0.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 47/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.15603, -6.26023, -1.11895, 1.68 ) }
    dend_0 { pt3dadd( 1.77394, -5.26111, -0.94625, 1.68 ) }
    dend_0 { pt3dadd( 0.901228, -6.43845, 0.450591, 1.32 ) }
    dend_0 { pt3dadd( 0.366787, -7.15943, 1.30599, 1.68 ) }
    dend_0 { pt3dadd( -1.32635, -9.44356, 4.01596, 2.76 ) }
    dend_0 { pt3dadd( -2.30558, -10.7646, 5.5833, 1.44 ) }
    dend_0 { pt3dadd( -3.38278, -12.2178, 7.30741, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 54/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.23116, -4.50457, -0.172177, 0.572009 ) }
    axon_0 { pt3dadd( 18.3305, -13.3705, -0.172177, 0.572009 ) }
    axon_0 { pt3dadd( 30.4299, -22.2365, -0.172177, 0.572009 ) }
    // Section: apic_2, id: apic_2, parent: apic_0 (entry count 57/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -6.18312, 18.739, -6.75938, 1.56 ) }
    apic_2 { pt3dadd( -6.73234, 20.4196, -7.38026, 1.32 ) }
    apic_2 { pt3dadd( -7.88939, 23.2794, -8.29898, 1.2 ) }
    apic_2 { pt3dadd( -8.93297, 25.5854, -8.95591, 1.2 ) }
    apic_2 { pt3dadd( -9.65977, 27.0723, -9.34029, 1.2 ) }
    apic_2 { pt3dadd( -10.5664, 28.9273, -9.8198, 0.96 ) }
    apic_2 { pt3dadd( -11.7113, 31.2696, -10.4253, 0.96 ) }
    apic_2 { pt3dadd( -12.5706, 32.8931, -10.7844, 0.96 ) }
    apic_2 { pt3dadd( -13.3797, 34.1751, -10.9427, 0.96 ) }
    apic_2 { pt3dadd( -14.1622, 35.2275, -11.0677, 1.8 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 67/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -6.18312, 18.739, -6.75938, 1.56 ) }
    apic_1 { pt3dadd( -4.6069, 21.8065, -6.2352, 0.24 ) }
    apic_1 { pt3dadd( -4.17496, 22.9303, -5.92374, 0.24 ) }
    apic_1 { pt3dadd( -3.58826, 24.8604, -5.33203, 0.24 ) }
    apic_1 { pt3dadd( -2.57444, 28.2936, -4.26723, 0.24 ) }
    apic_1 { pt3dadd( -2.03916, 29.9912, -3.73597, 0.24 ) }
    apic_1 { pt3dadd( -1.28158, 32.1189, -3.07108, 0.24 ) }
    apic_1 { pt3dadd( -0.0975998, 35.2242, -1.846, 0.24 ) }
    apic_1 { pt3dadd( 0.602625, 36.7083, -1.28092, 0.24 ) }
    apic_1 { pt3dadd( 1.25154, 37.7724, -0.944908, 0.24 ) }
    apic_1 { pt3dadd( 1.94988, 38.6093, -0.813906, 0.24 ) }
    apic_1 { pt3dadd( 3.02979, 39.6518, -0.736061, 0.24 ) }
    apic_1 { pt3dadd( 3.6873, 40.1826, -0.736869, 0.24 ) }
    apic_1 { pt3dadd( 6.13939, 41.888, -0.823113, 0.24 ) }
    apic_1 { pt3dadd( 8.63188, 43.5001, -0.73715, 0.24 ) }
    apic_1 { pt3dadd( 10.485, 44.7707, -0.540605, 0.24 ) }
    apic_1 { pt3dadd( 12.8488, 46.4681, -0.130519, 0.24 ) }
    apic_1 { pt3dadd( 14.4645, 47.6674, 0.247113, 0.24 ) }
    apic_1 { pt3dadd( 15.5648, 48.499, 0.587798, 0.24 ) }
    apic_1 { pt3dadd( 18.5024, 50.687, 1.80134, 0.24 ) }
    apic_1 { pt3dadd( 20.0859, 51.8081, 2.611, 0.24 ) }
    apic_1 { pt3dadd( 21.8216, 53.0404, 3.64629, 0.24 ) }
    apic_1 { pt3dadd( 23.0122, 53.8839, 4.41946, 0.24 ) }
    apic_1 { pt3dadd( 24.49, 54.9823, 5.41181, 0.24 ) }
    apic_1 { pt3dadd( 26.341, 56.4097, 6.68869, 0.24 ) }
    apic_1 { pt3dadd( 27.8912, 57.5094, 7.7306, 0.24 ) }
    apic_1 { pt3dadd( 29.3465, 58.3975, 8.7005, 0.24 ) }
    apic_1 { pt3dadd( 30.8673, 59.3176, 9.64991, 0.24 ) }
    apic_1 { pt3dadd( 32.4645, 60.2796, 10.5186, 0.24 ) }
    apic_1 { pt3dadd( 33.5431, 60.9543, 11.0119, 0.24 ) }
    apic_1 { pt3dadd( 35.0324, 62.0408, 11.5082, 0.24 ) }
    apic_1 { pt3dadd( 36.5279, 63.2898, 11.8828, 0.24 ) }
    apic_1 { pt3dadd( 38.5464, 65.2212, 12.15, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_1 { pt3dadd( 39.7641, 66.5835, 12.2148, 0.24 ) }
    apic_1 { pt3dadd( 41.395, 68.4622, 12.2826, 0.24 ) }
    apic_1 { pt3dadd( 44.831, 72.4381, 12.4317, 0.24 ) }
    apic_1 { pt3dadd( 46.729, 74.6984, 12.5516, 0.24 ) }
    apic_1 { pt3dadd( 49.0406, 77.285, 12.88, 0.24 ) }
    apic_1 { pt3dadd( 50.0042, 78.2417, 13.0757, 0.24 ) }
    apic_1 { pt3dadd( 52.7963, 80.7445, 13.6895, 0.24 ) }
    apic_1 { pt3dadd( 54.653, 82.1781, 14.1788, 0.24 ) }
    apic_1 { pt3dadd( 55.827, 82.9452, 14.6809, 0.24 ) }
    apic_1 { pt3dadd( 58.499, 84.5982, 16.0918, 0.24 ) }
    apic_1 { pt3dadd( 60.2744, 85.7207, 17.1228, 0.24 ) }
    apic_1 { pt3dadd( 61.8423, 86.8198, 17.9491, 0.24 ) }
    apic_1 { pt3dadd( 63.5898, 88.2275, 18.7017, 0.24 ) }
    apic_1 { pt3dadd( 66.6803, 90.7089, 19.6725, 0.24 ) }
    apic_1 { pt3dadd( 68.247, 91.9279, 19.9415, 0.24 ) }
    apic_1 { pt3dadd( 70.9993, 94.121, 19.8206, 0.12 ) }
    apic_1 { pt3dadd( 73.2467, 95.863, 19.3947, 0.24 ) }
    apic_1 { pt3dadd( 74.9487, 97.082, 18.7895, 0.24 ) }
    apic_1 { pt3dadd( 77.0036, 98.3562, 17.7691, 0.24 ) }
    apic_1 { pt3dadd( 79.3156, 99.4686, 16.4226, 0.24 ) }
    apic_1 { pt3dadd( 81.9078, 100.439, 14.4543, 0.24 ) }
    apic_1 { pt3dadd( 82.6318, 100.705, 13.7099, 0.24 ) }
    apic_1 { pt3dadd( 83.2917, 100.959, 12.9126, 0.24 ) }
    apic_1 { pt3dadd( 84.195, 101.44, 11.5864, 0.24 ) }
    apic_1 { pt3dadd( 85.0259, 102.099, 10.1009, 0.24 ) }
    apic_1 { pt3dadd( 87.6843, 105.052, 4.59647, 0.24 ) }
    apic_1 { pt3dadd( 88.7837, 106.432, 2.14224, 0.24 ) }
    apic_1 { pt3dadd( 89.5501, 107.568, 0.195115, 0.24 ) }
    apic_1 { pt3dadd( 90.3465, 109.041, -2.14392, 0.24 ) }
    apic_1 { pt3dadd( 90.8011, 110.155, -3.70954, 0.24 ) }
    apic_1 { pt3dadd( 91.283, 111.689, -5.52061, 0.12 ) }
    apic_1 { pt3dadd( 93.8147, 120.363, -14.1921, 0.12 ) }
    apic_1 { pt3dadd( 98.0446, 126.251, -24.4037, 0.12 ) }
    apic_1 { pt3dadd( 102.658, 132.284, -34.3608, 0.12 ) }
    apic_1 { pt3dadd( 106.665, 136.674, -45.3839, 0.12 ) }
    apic_1 { pt3dadd( 111.3, 138.908, -56.8013, 0.12 ) }
    apic_1 { pt3dadd( 116.463, 142.04, -67.7729, 0.12 ) }
    apic_1 { pt3dadd( 122.731, 143.893, -78.4549, 0.12 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 38/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 26.3747, -7.59807, -24.6028, 0.84 ) }
    dend_39 { pt3dadd( 28.1379, -8.06017, -24.6944, 0.48 ) }
    dend_39 { pt3dadd( 29.9233, -8.50145, -24.7814, 0.48 ) }
    dend_39 { pt3dadd( 32.0666, -8.93639, -24.8753, 0.48 ) }
    dend_39 { pt3dadd( 33.8553, -9.26201, -24.9463, 0.48 ) }
    dend_39 { pt3dadd( 36.5149, -9.74616, -25.0519, 0.36 ) }
    dend_39 { pt3dadd( 37.6482, -9.95248, -25.0969, 0.36 ) }
    dend_39 { pt3dadd( 39.9928, -10.3818, -25.1803, 0.36 ) }
    dend_39 { pt3dadd( 42.3622, -10.7654, -25.271, 0.36 ) }
    dend_39 { pt3dadd( 43.7938, -11.0171, -25.326, 0.36 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 48/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 26.3747, -7.59807, -24.6028, 0.84 ) }
    dend_38 { pt3dadd( 27.8804, -9.24152, -31.7477, 0.36 ) }
    dend_38 { pt3dadd( 28.5082, -9.91898, -34.3556, 0.36 ) }
    dend_38 { pt3dadd( 29.9779, -11.5507, -39.6376, 0.24 ) }
    dend_38 { pt3dadd( 30.4338, -12.1727, -41.1445, 0.36 ) }
    dend_38 { pt3dadd( 31.0531, -13.2455, -43.3921, 0.36 ) }
    dend_38 { pt3dadd( 31.2687, -13.6622, -44.2081, 0.36 ) }
    dend_38 { pt3dadd( 32.5562, -16.0534, -48.289, 0.36 ) }
    dend_38 { pt3dadd( 33.0942, -17.1264, -49.9525, 0.36 ) }
    dend_38 { pt3dadd( 34.5344, -20.6247, -54.8447, 0.36 ) }
    dend_38 { pt3dadd( 35.4723, -23.1157, -58.2931, 0.36 ) }
    dend_38 { pt3dadd( 36.0073, -24.6182, -60.2402, 0.24 ) }
    dend_38 { pt3dadd( 36.8255, -26.7359, -63.0331, 0.12 ) }
    dend_38 { pt3dadd( 37.1194, -27.281, -63.8366, 0.12 ) }
    dend_38 { pt3dadd( 37.4882, -27.85, -64.8009, 0.12 ) }
    dend_38 { pt3dadd( 38.8114, -29.1811, -67.7775, 0.12 ) }
    dend_38 { pt3dadd( 39.2559, -29.5354, -68.8209, 0.12 ) }
    dend_38 { pt3dadd( 39.8811, -29.995, -70.3506, 0.12 ) }
    dend_38 { pt3dadd( 41.5831, -31.1465, -74.8233, 0.12 ) }
    dend_38 { pt3dadd( 42.682, -31.7938, -77.7599, 0.12 ) }
    dend_38 { pt3dadd( 44.2106, -32.5892, -81.9791, 0.12 ) }
    dend_38 { pt3dadd( 45.7986, -33.4239, -86.971, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_21 (entry count 70/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 14.7439, -2.59065, 3.84694, 0.84 ) }
    dend_33 { pt3dadd( 16.0623, -1.526, 4.23292, 0.36 ) }
    dend_33 { pt3dadd( 17.912, -0.327411, 4.35113, 0.36 ) }
    dend_33 { pt3dadd( 20.1453, 0.728433, 4.28623, 0.36 ) }
    dend_33 { pt3dadd( 23.1856, 1.95555, 4.14242, 0.36 ) }
    dend_33 { pt3dadd( 24.3409, 2.39747, 4.09499, 0.36 ) }
    dend_33 { pt3dadd( 25.3592, 2.75797, 3.97523, 0.36 ) }
    dend_33 { pt3dadd( 26.2443, 3.00462, 3.88214, 0.36 ) }
    dend_33 { pt3dadd( 27.2656, 3.23696, 3.80057, 0.36 ) }
    dend_33 { pt3dadd( 27.9545, 3.38971, 3.77755, 0.36 ) }
    dend_33 { pt3dadd( 29.1613, 3.69342, 3.9063, 0.36 ) }
    dend_33 { pt3dadd( 30.0681, 4.07879, 4.06814, 0.36 ) }
    dend_33 { pt3dadd( 31.8955, 5.11855, 4.45285, 0.36 ) }
    dend_33 { pt3dadd( 32.7413, 5.67043, 4.64475, 0.36 ) }
    dend_33 { pt3dadd( 34.0332, 6.56057, 4.94528, 0.36 ) }
    dend_33 { pt3dadd( 35.1227, 7.29682, 5.19167, 0.36 ) }
    dend_33 { pt3dadd( 38.0822, 9.20291, 5.82492, 0.36 ) }
    dend_33 { pt3dadd( 38.6626, 9.57232, 5.94679, 0.36 ) }
    dend_33 { pt3dadd( 39.2243, 9.92814, 6.09569, 0.36 ) }
    dend_33 { pt3dadd( 40.1407, 10.4857, 6.39876, 0.36 ) }
    dend_33 { pt3dadd( 40.9891, 10.9672, 6.73719, 0.36 ) }
    dend_33 { pt3dadd( 41.807, 11.3915, 7.11607, 0.36 ) }
    dend_33 { pt3dadd( 42.3862, 11.6773, 7.42239, 0.36 ) }
    dend_33 { pt3dadd( 43.7824, 12.4966, 8.23254, 0.36 ) }
    dend_33 { pt3dadd( 44.8393, 13.22, 8.94538, 0.36 ) }
    dend_33 { pt3dadd( 45.3751, 13.6533, 9.3597, 0.36 ) }
    dend_33 { pt3dadd( 46.0967, 14.3398, 9.99471, 0.36 ) }
    dend_33 { pt3dadd( 46.7835, 15.0548, 10.6468, 0.36 ) }
    dend_33 { pt3dadd( 47.3934, 15.7016, 11.2184, 0.36 ) }
    dend_33 { pt3dadd( 48.3395, 16.6275, 12.1403, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( 49.0672, 17.2795, 12.8785, 0.36 ) }
    dend_33 { pt3dadd( 50.1018, 18.1457, 13.9188, 0.36 ) }
    dend_33 { pt3dadd( 50.6351, 18.5768, 14.4453, 0.36 ) }
    dend_33 { pt3dadd( 51.8825, 19.5851, 15.628, 0.36 ) }
    dend_33 { pt3dadd( 53.5845, 21.0152, 17.1559, 0.36 ) }
    dend_33 { pt3dadd( 54.5542, 21.7926, 17.989, 0.36 ) }
    dend_33 { pt3dadd( 55.5053, 22.4523, 18.7678, 0.36 ) }
    dend_33 { pt3dadd( 56.2939, 22.93, 19.3796, 0.36 ) }
    dend_33 { pt3dadd( 57.2407, 23.4804, 20.0836, 0.36 ) }
    dend_33 { pt3dadd( 58.0958, 23.9759, 20.6848, 0.36 ) }
    dend_33 { pt3dadd( 59.7289, 24.9112, 21.727, 0.36 ) }
    dend_33 { pt3dadd( 60.8615, 25.4913, 22.3454, 0.36 ) }
    dend_33 { pt3dadd( 61.3734, 25.7467, 22.5822, 0.36 ) }
    dend_33 { pt3dadd( 63.058, 26.557, 23.2027, 0.36 ) }
    dend_33 { pt3dadd( 64.5042, 27.203, 23.7322, 0.36 ) }
    dend_33 { pt3dadd( 66.2332, 27.9793, 24.3737, 0.36 ) }
    dend_33 { pt3dadd( 68.2686, 28.998, 25.13, 0.36 ) }
    dend_33 { pt3dadd( 69.7653, 29.8065, 25.7324, 0.36 ) }
    dend_33 { pt3dadd( 71.6927, 30.8482, 26.5307, 0.36 ) }
    dend_33 { pt3dadd( 74.5121, 32.3074, 27.6974, 0.36 ) }
    dend_33 { pt3dadd( 75.5496, 32.8235, 28.1248, 0.36 ) }
    dend_33 { pt3dadd( 76.755, 33.4182, 28.6266, 0.36 ) }
    dend_33 { pt3dadd( 78.1445, 34.0928, 29.2605, 0.36 ) }
    dend_33 { pt3dadd( 80.1223, 35.037, 30.1444, 0.36 ) }
    dend_33 { pt3dadd( 81.6176, 35.7768, 30.839, 0.36 ) }
    dend_33 { pt3dadd( 82.7249, 36.3456, 31.3284, 0.36 ) }
    dend_33 { pt3dadd( 83.794, 36.8741, 31.83, 0.36 ) }
    dend_33 { pt3dadd( 85.2614, 37.5349, 32.5413, 0.36 ) }
    dend_33 { pt3dadd( 86.4064, 37.9858, 33.2339, 0.36 ) }
    dend_33 { pt3dadd( 87.9167, 38.5568, 34.3964, 0.36 ) }
    dend_33 { pt3dadd( 88.4654, 38.7574, 34.9094, 0.36 ) }
    dend_33 { pt3dadd( 89.4681, 39.1277, 35.9904, 0.36 ) }
    dend_33 { pt3dadd( 90.3564, 39.4622, 37.0734, 0.36 ) }
    dend_33 { pt3dadd( 92.3802, 40.3069, 39.7708, 0.36 ) }
    dend_33 { pt3dadd( 93.2733, 40.7336, 40.9742, 0.36 ) }
    dend_33 { pt3dadd( 94.4288, 41.3459, 42.3932, 0.36 ) }
    dend_33 { pt3dadd( 95.1576, 41.7757, 43.2139, 0.36 ) }
    dend_33 { pt3dadd( 95.931, 42.2903, 43.9886, 0.36 ) }
    dend_33 { pt3dadd( 97.0261, 43.0741, 44.8784, 0.36 ) }
    dend_33 { pt3dadd( 98.6331, 44.2347, 45.8181, 0.36 ) }
    dend_33 { pt3dadd( 100.702, 45.6409, 46.7624, 0.36 ) }
    dend_33 { pt3dadd( 102.017, 46.5123, 47.3146, 0.36 ) }
    dend_33 { pt3dadd( 103.364, 47.359, 47.8205, 0.36 ) }
    dend_33 { pt3dadd( 105.006, 48.3472, 48.3783, 0.36 ) }
    dend_33 { pt3dadd( 106.193, 49.051, 48.7648, 0.36 ) }
    dend_33 { pt3dadd( 107.796, 50.0612, 49.3478, 0.36 ) }
    dend_33 { pt3dadd( 109.215, 51.0647, 49.9554, 0.36 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 47/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 14.7439, -2.59065, 3.84694, 0.84 ) }
    dend_22 { pt3dadd( 15.1101, -3.38781, 6.08469, 0.84 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -15.3163, -16.7364, 14.0987, 0.6 ) }
    dend_20 { pt3dadd( -16.7281, -18.0778, 14.3766, 0.48 ) }
    dend_20 { pt3dadd( -18.1243, -19.2016, 14.7126, 0.48 ) }
    dend_20 { pt3dadd( -19.2073, -19.9567, 15.006, 0.48 ) }
    dend_20 { pt3dadd( -20.6283, -21.0076, 15.4534, 0.48 ) }
    dend_20 { pt3dadd( -21.774, -21.9477, 15.8614, 0.48 ) }
    dend_20 { pt3dadd( -23.1795, -23.1255, 16.4154, 0.48 ) }
    dend_20 { pt3dadd( -24.0484, -23.8124, 16.7829, 0.48 ) }
    dend_20 { pt3dadd( -25.2763, -24.7722, 17.3798, 0.48 ) }
    dend_20 { pt3dadd( -26.8879, -26.0979, 18.3568, 0.48 ) }
    dend_20 { pt3dadd( -28.0069, -27.0582, 19.1379, 0.48 ) }
    dend_20 { pt3dadd( -28.6859, -27.6619, 19.6364, 0.48 ) }
    dend_20 { pt3dadd( -29.6555, -28.5234, 20.3312, 0.48 ) }
    dend_20 { pt3dadd( -30.1889, -28.9963, 20.7223, 0.48 ) }
    dend_20 { pt3dadd( -31.6832, -30.2586, 21.8406, 0.48 ) }
    dend_20 { pt3dadd( -32.8307, -31.1226, 22.738, 0.48 ) }
    dend_20 { pt3dadd( -33.4632, -31.6027, 23.2928, 0.48 ) }
    dend_20 { pt3dadd( -33.998, -32.0403, 23.7736, 0.48 ) }
    dend_20 { pt3dadd( -35.3124, -33.1639, 24.9835, 0.48 ) }
    dend_20 { pt3dadd( -36.0277, -33.8532, 25.67, 0.48 ) }
    dend_20 { pt3dadd( -36.9834, -34.9192, 26.6332, 0.48 ) }
    dend_20 { pt3dadd( -37.8604, -36.0291, 27.583, 0.48 ) }
    dend_20 { pt3dadd( -38.8982, -37.3032, 28.6307, 0.48 ) }
    dend_20 { pt3dadd( -39.1796, -37.6285, 28.879, 0.48 ) }
    dend_20 { pt3dadd( -40.039, -38.4629, 29.4895, 0.48 ) }
    dend_20 { pt3dadd( -41.2106, -39.4991, 30.2282, 0.48 ) }
    dend_20 { pt3dadd( -42.3622, -40.433, 30.8379, 0.48 ) }
    dend_20 { pt3dadd( -44.0295, -41.722, 31.6374, 0.48 ) }
    dend_20 { pt3dadd( -45.1613, -42.5478, 32.1926, 0.48 ) }
    dend_20 { pt3dadd( -46.4085, -43.3738, 32.7743, 0.48 ) }
    dend_20 { pt3dadd( -47.0168, -43.7196, 33.0279, 0.48 ) }
    dend_20 { pt3dadd( -48.1129, -44.2848, 33.4236, 0.48 ) }
    dend_20 { pt3dadd( -49.1179, -44.7423, 33.7817, 0.48 ) }
    dend_20 { pt3dadd( -55.9178, -50.5562, 38.2584, 0.48 ) }
    dend_20 { pt3dadd( -62.5326, -57.6214, 40.7896, 0.48 ) }
    dend_20 { pt3dadd( -70.4792, -63.601, 41.8736, 0.48 ) }
    dend_20 { pt3dadd( -77.6793, -70.3657, 43.4479, 0.48 ) }
    dend_20 { pt3dadd( -85.739, -75.5284, 46.3576, 0.48 ) }
    dend_20 { pt3dadd( -94.4599, -79.8518, 48.6672, 0.48 ) }
    dend_20 { pt3dadd( -102.901, -85.0636, 49.9608, 0.48 ) }
    dend_20 { pt3dadd( -112.178, -88.8044, 49.8282, 0.48 ) }
    dend_20 { pt3dadd( -121.856, -91.0105, 51.0741, 0.48 ) }
    dend_20 { pt3dadd( -131.784, -92.2081, 50.7998, 0.48 ) }
    dend_20 { pt3dadd( -141.361, -94.7777, 52.1304, 0.48 ) }
    dend_20 { pt3dadd( -150.953, -96.8871, 54.0316, 0.48 ) }
    dend_20 { pt3dadd( -160.127, -99.4306, 57.1057, 0.48 ) }
    dend_20 { pt3dadd( -168.271, -103.444, 61.3072, 0.48 ) }
    dend_20 { pt3dadd( -175.625, -108.353, 65.9869, 0.48 ) }
    dend_20 { pt3dadd( -182.308, -112.134, 72.3992, 0.48 ) }
    dend_20 { pt3dadd( -188.55, -115.74, 79.336, 0.48 ) }
    dend_20 { pt3dadd( -194.487, -118.975, 86.7095, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_20 { pt3dadd( -201.272, -120.73, 93.8479, 0.48 ) }
    dend_20 { pt3dadd( -208.018, -123.28, 100.781, 0.48 ) }
    dend_20 { pt3dadd( -213.762, -127.057, 108.049, 0.48 ) }
    dend_20 { pt3dadd( -221.424, -128.96, 114.193, 0.48 ) }
    dend_20 { pt3dadd( -229.666, -131.824, 119.086, 0.48 ) }
    dend_20 { pt3dadd( -236.974, -136.226, 124.312, 0.48 ) }
    dend_20 { pt3dadd( -243.272, -142.493, 128.909, 0.48 ) }
    dend_20 { pt3dadd( -250.114, -148.26, 133.382, 0.48 ) }
    dend_20 { pt3dadd( -256.553, -153.116, 139.301, 0.48 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -15.3163, -16.7364, 14.0987, 0.6 ) }
    dend_19 { pt3dadd( -16.2753, -16.4421, 14.9877, 0.6 ) }
    dend_19 { pt3dadd( -16.8168, -16.2411, 15.5323, 0.6 ) }
    dend_19 { pt3dadd( -17.5777, -15.9861, 16.2547, 0.6 ) }
    dend_19 { pt3dadd( -18.2245, -15.7952, 16.8354, 0.48 ) }
    dend_19 { pt3dadd( -19.9392, -15.2874, 18.2778, 0.48 ) }
    dend_19 { pt3dadd( -20.1869, -15.2089, 18.4662, 0.48 ) }
    dend_19 { pt3dadd( -20.8137, -15.0063, 18.9182, 0.48 ) }
    dend_19 { pt3dadd( -21.5093, -14.8074, 19.3382, 0.48 ) }
    dend_19 { pt3dadd( -21.8689, -14.7267, 19.5027, 0.48 ) }
    dend_19 { pt3dadd( -22.4453, -14.6218, 19.7736, 0.48 ) }
    dend_19 { pt3dadd( -23.4652, -14.4625, 20.2139, 0.48 ) }
    dend_19 { pt3dadd( -24.449, -14.3171, 20.6866, 0.48 ) }
    dend_19 { pt3dadd( -25.1268, -14.2246, 21.0288, 0.48 ) }
    dend_19 { pt3dadd( -25.6984, -14.1597, 21.3216, 0.48 ) }
    dend_19 { pt3dadd( -27.8826, -14.0892, 22.6057, 0.48 ) }
    dend_19 { pt3dadd( -28.8083, -14.2077, 23.2902, 0.48 ) }
    dend_19 { pt3dadd( -29.5151, -14.449, 23.9386, 0.48 ) }
    dend_19 { pt3dadd( -30.1586, -14.8917, 24.7474, 0.48 ) }
    dend_19 { pt3dadd( -30.4518, -15.234, 25.2768, 0.48 ) }
    dend_19 { pt3dadd( -31.137, -16.3915, 26.8406, 0.48 ) }
    dend_19 { pt3dadd( -31.7299, -17.6981, 28.3849, 0.48 ) }
    dend_19 { pt3dadd( -31.9953, -18.2868, 29.0904, 0.48 ) }
    dend_19 { pt3dadd( -32.5889, -19.4466, 30.5132, 0.48 ) }
    dend_19 { pt3dadd( -33.3292, -20.531, 31.9639, 0.48 ) }
    dend_19 { pt3dadd( -33.7192, -20.9004, 32.5076, 0.48 ) }
    dend_19 { pt3dadd( -34.3451, -21.2613, 33.0784, 0.48 ) }
    dend_19 { pt3dadd( -35.5252, -21.6942, 33.8397, 0.48 ) }
    dend_19 { pt3dadd( -36.6191, -22.0214, 34.4005, 0.48 ) }
    dend_19 { pt3dadd( -37.8883, -22.3671, 34.9048, 0.48 ) }
    dend_19 { pt3dadd( -38.8146, -22.6151, 35.2229, 0.48 ) }
    dend_19 { pt3dadd( -39.6484, -22.8514, 35.5185, 0.48 ) }
    dend_19 { pt3dadd( -41.6672, -23.499, 36.2569, 0.48 ) }
    dend_19 { pt3dadd( -43.0285, -24.0116, 36.7596, 0.48 ) }
    dend_19 { pt3dadd( -43.6343, -24.2691, 36.9836, 0.48 ) }
    dend_19 { pt3dadd( -49.4844, -25.1906, 41.4092, 0.48 ) }
    dend_19 { pt3dadd( -55.7116, -26.8561, 45.0295, 0.48 ) }
    dend_19 { pt3dadd( -62.1918, -29.068, 47.8174, 0.48 ) }
    dend_19 { pt3dadd( -69.2056, -30.6316, 49.5555, 0.48 ) }
    dend_19 { pt3dadd( -76.4032, -32.1538, 50.2879, 0.48 ) }
    dend_19 { pt3dadd( -83.5229, -34.1315, 50.5277, 0.48 ) }
    dend_19 { pt3dadd( -90.7561, -35.3964, 49.6677, 0.48 ) }
    dend_19 { pt3dadd( -98.1445, -35.5804, 49.4775, 0.48 ) }
    dend_19 { pt3dadd( -105.44, -36.2106, 48.4594, 0.48 ) }
    dend_19 { pt3dadd( -112.453, -37.2272, 46.3508, 0.48 ) }
    dend_19 { pt3dadd( -119.307, -38.4787, 43.8762, 0.48 ) }
    dend_19 { pt3dadd( -125.462, -40.7599, 40.4763, 0.48 ) }
    dend_19 { pt3dadd( -132.09, -41.3541, 37.2539, 0.48 ) }
    dend_19 { pt3dadd( -138.267, -41.3528, 33.1922, 0.48 ) }
    dend_19 { pt3dadd( -145.029, -39.8846, 30.587, 0.48 ) }
    dend_19 { pt3dadd( -152.117, -39.3688, 28.5515, 0.48 ) }
    dend_19 { pt3dadd( -159.375, -39.1081, 27.1676, 0.48 ) }
    dend_19 { pt3dadd( -166.366, -39.0533, 24.762, 0.48 ) }
    dend_19 { pt3dadd( -173.329, -38.3348, 22.3834, 0.48 ) }
    dend_19 { pt3dadd( -180.311, -37.4958, 20.1027, 0.48 ) }
    dend_19 { pt3dadd( -187.235, -36.7985, 17.6052, 0.48 ) }
    dend_19 { pt3dadd( -194.407, -37.0625, 15.8312, 0.48 ) }
    dend_19 { pt3dadd( -201.463, -36.67, 13.6575, 0.48 ) }
    dend_19 { pt3dadd( -208.384, -36.4355, 11.0697, 0.48 ) }
    dend_19 { pt3dadd( -215.627, -35.2953, 10.1217, 0.48 ) }
    dend_19 { pt3dadd( -222.75, -34.6745, 8.2404, 0.48 ) }
    dend_19 { pt3dadd( -229.864, -33.0499, 7.05324, 0.48 ) }
    dend_19 { pt3dadd( -237.098, -32.4746, 5.64197, 0.48 ) }
    dend_19 { pt3dadd( -243.839, -30.52, 3.31816, 0.48 ) }
    dend_19 { pt3dadd( -250.798, -29.4804, 1.04742, 0.48 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 74/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -5.45981, -15.0868, -3.75642, 0.84 ) }
    dend_17 { pt3dadd( -6.14073, -15.8715, -2.13765, 0.72 ) }
    dend_17 { pt3dadd( -7.77724, -17.33, 1.16632, 0.48 ) }
    dend_17 { pt3dadd( -8.31267, -17.7431, 2.12958, 0.48 ) }
    dend_17 { pt3dadd( -9.49836, -18.6359, 4.1048, 0.48 ) }
    dend_17 { pt3dadd( -10.3351, -19.2657, 5.43142, 0.48 ) }
    dend_17 { pt3dadd( -10.8898, -19.635, 6.28026, 0.36 ) }
    dend_17 { pt3dadd( -11.4763, -19.9846, 7.13015, 0.36 ) }
    dend_17 { pt3dadd( -12.0657, -20.2835, 7.66227, 0.36 ) }
    dend_17 { pt3dadd( -13.4299, -20.7911, 8.06153, 0.36 ) }
    dend_17 { pt3dadd( -14.0283, -20.9855, 7.99957, 0.36 ) }
    dend_17 { pt3dadd( -15.9812, -21.6813, 7.50682, 0.36 ) }
    dend_17 { pt3dadd( -17.152, -22.0602, 7.12099, 0.36 ) }
    dend_17 { pt3dadd( -23.6669, -23.801, 4.85466, 0.36 ) }
    dend_17 { pt3dadd( -24.9549, -24.1059, 4.4033, 0.36 ) }
    dend_17 { pt3dadd( -26.4149, -24.4363, 3.88667, 0.36 ) }
    dend_17 { pt3dadd( -27.6918, -24.7368, 3.44903, 0.36 ) }
    dend_17 { pt3dadd( -30.4518, -25.3653, 2.59954, 0.36 ) }
    dend_17 { pt3dadd( -32.0435, -25.7585, 2.31625, 0.36 ) }
    dend_17 { pt3dadd( -33.5367, -26.1676, 2.32227, 0.36 ) }
    dend_17 { pt3dadd( -34.9982, -26.5186, 2.23204, 0.36 ) }
    dend_17 { pt3dadd( -36.1881, -26.7592, 2.0912, 0.36 ) }
    dend_17 { pt3dadd( -38.2797, -27.1902, 1.75555, 0.36 ) }
    dend_17 { pt3dadd( -40.0064, -27.6257, 1.44513, 0.36 ) }
    dend_17 { pt3dadd( -41.4056, -27.9724, 1.18539, 0.36 ) }
    dend_17 { pt3dadd( -44.7755, -28.6057, 0.6692, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_17 { pt3dadd( -46.3989, -28.8951, 0.468338, 0.36 ) }
    dend_17 { pt3dadd( -47.1916, -29.0484, 0.358323, 0.36 ) }
    dend_17 { pt3dadd( -49.4408, -29.5161, 0.00244492, 0.36 ) }
    dend_17 { pt3dadd( -50.8968, -29.7686, -0.213538, 0.36 ) }
    dend_17 { pt3dadd( -53.0356, -30.0846, -0.412509, 0.36 ) }
    dend_17 { pt3dadd( -54.4738, -30.338, -0.419146, 0.36 ) }
    dend_17 { pt3dadd( -56.7652, -30.6702, -0.350503, 0.36 ) }
    dend_17 { pt3dadd( -58.1911, -30.792, -0.388231, 0.36 ) }
    dend_17 { pt3dadd( -59.4513, -30.878, -0.482451, 0.36 ) }
    dend_17 { pt3dadd( -61.0691, -31.0206, -0.630158, 0.36 ) }
    dend_17 { pt3dadd( -63.5156, -31.2844, -0.851064, 0.36 ) }
    dend_17 { pt3dadd( -65.1556, -31.3915, -0.974964, 0.36 ) }
    dend_17 { pt3dadd( -68.1879, -31.4785, -1.09193, 0.36 ) }
    dend_17 { pt3dadd( -69.3398, -31.4794, -1.17192, 0.36 ) }
    dend_17 { pt3dadd( -71.0196, -31.4954, -1.35415, 0.36 ) }
    dend_17 { pt3dadd( -72.4843, -31.4838, -1.54762, 0.36 ) }
    dend_17 { pt3dadd( -74.445, -31.4719, -2.09167, 0.36 ) }
    dend_17 { pt3dadd( -76.1904, -31.6174, -2.73257, 0.36 ) }
    dend_17 { pt3dadd( -77.5332, -31.8592, -3.34268, 0.36 ) }
    dend_17 { pt3dadd( -78.9472, -32.2405, -4.18189, 0.36 ) }
    dend_17 { pt3dadd( -79.6646, -32.5664, -4.71814, 0.36 ) }
    dend_17 { pt3dadd( -82.8749, -34.7873, -7.62941, 0.36 ) }
    dend_17 { pt3dadd( -84.1775, -35.9539, -8.98008, 0.36 ) }
    dend_17 { pt3dadd( -85.1938, -36.9982, -10.0814, 0.36 ) }
    dend_17 { pt3dadd( -86.0013, -37.8825, -10.9134, 0.36 ) }
    dend_17 { pt3dadd( -87.0714, -39.072, -11.9384, 0.36 ) }
    dend_17 { pt3dadd( -88.3616, -40.5196, -13.0322, 0.36 ) }
    dend_17 { pt3dadd( -90.2456, -42.6736, -14.2357, 0.36 ) }
    dend_17 { pt3dadd( -91.4146, -44.0927, -14.957, 0.36 ) }
    dend_17 { pt3dadd( -92.8655, -45.9789, -15.8383, 0.36 ) }
    dend_17 { pt3dadd( -94.0082, -47.58, -16.4827, 0.36 ) }
    dend_17 { pt3dadd( -94.3899, -48.1289, -16.6739, 0.36 ) }
    dend_17 { pt3dadd( -95.5779, -50.0488, -17.1283, 0.36 ) }
    dend_17 { pt3dadd( -96.4057, -51.4632, -17.3245, 0.36 ) }
    dend_17 { pt3dadd( -97.8279, -53.7628, -17.5336, 0.36 ) }
    dend_17 { pt3dadd( -98.6444, -54.9134, -17.5809, 0.36 ) }
    dend_17 { pt3dadd( -100.933, -57.4349, -17.84, 0.36 ) }
    dend_17 { pt3dadd( -101.894, -58.2857, -17.989, 0.36 ) }
    dend_17 { pt3dadd( -103.757, -59.6063, -18.3044, 0.36 ) }
    dend_17 { pt3dadd( -105.466, -60.6461, -18.5175, 0.24 ) }
    dend_17 { pt3dadd( -106.76, -61.3106, -18.6669, 0.24 ) }
    dend_17 { pt3dadd( -109.748, -62.7068, -19.2285, 0.12 ) }
    dend_17 { pt3dadd( -110.181, -62.9078, -19.3273, 0.12 ) }
    dend_17 { pt3dadd( -111.507, -63.5287, -19.6663, 0.12 ) }
    dend_17 { pt3dadd( -112.356, -63.9704, -19.9013, 0.12 ) }
    dend_17 { pt3dadd( -114.334, -65.206, -20.4257, 0.12 ) }
    dend_17 { pt3dadd( -115.598, -66.1404, -20.7119, 0.12 ) }
    dend_17 { pt3dadd( -117.122, -67.3603, -20.9125, 0.12 ) }
    dend_17 { pt3dadd( -118.877, -68.7516, -21.0871, 0.12 ) }
    dend_17 { pt3dadd( -120.303, -69.9066, -21.1758, 0.12 ) }
    dend_17 { pt3dadd( -121.486, -70.8981, -21.1798, 0.12 ) }
    dend_17 { pt3dadd( -122.285, -71.6355, -21.1095, 0.12 ) }
    dend_17 { pt3dadd( -123.592, -72.7903, -20.9154, 0.12 ) }
    dend_17 { pt3dadd( -124.677, -73.7045, -20.7317, 0.12 ) }
    dend_17 { pt3dadd( -125.817, -74.575, -20.5491, 0.12 ) }
    dend_17 { pt3dadd( -126.915, -75.3014, -20.3747, 0.12 ) }
    dend_17 { pt3dadd( -129.697, -76.9648, -19.9755, 0.12 ) }
    dend_17 { pt3dadd( -131.734, -78.1079, -19.7501, 0.12 ) }
    dend_17 { pt3dadd( -133.498, -79.0383, -19.6738, 0.12 ) }
    dend_17 { pt3dadd( -135.226, -79.878, -19.6812, 0.12 ) }
    dend_17 { pt3dadd( -136.473, -80.4198, -19.7441, 0.12 ) }
    dend_17 { pt3dadd( -136.847, -80.5742, -19.7717, 0.12 ) }
    dend_17 { pt3dadd( -139.065, -81.4717, -19.9249, 0.12 ) }
    dend_17 { pt3dadd( -140.848, -82.3773, -19.9874, 0.12 ) }
    dend_17 { pt3dadd( -141.625, -82.8513, -19.9328, 0.12 ) }
    dend_17 { pt3dadd( -143.226, -83.9956, -19.735, 0.12 ) }
    dend_17 { pt3dadd( -144.108, -84.7559, -19.5279, 0.12 ) }
    dend_17 { pt3dadd( -145.225, -85.8694, -19.0963, 0.12 ) }
    dend_17 { pt3dadd( -146.329, -87.147, -18.442, 0.12 ) }
    dend_17 { pt3dadd( -147.527, -88.8714, -17.3934, 0.12 ) }
    dend_17 { pt3dadd( -148.287, -90.2283, -16.5699, 0.12 ) }
    dend_17 { pt3dadd( -149.402, -92.5933, -15.1666, 0.12 ) }
    dend_17 { pt3dadd( -150.078, -94.143, -14.3098, 0.12 ) }
    dend_17 { pt3dadd( -150.503, -95.1951, -13.7591, 0.12 ) }
    dend_17 { pt3dadd( -151.409, -97.4993, -12.6041, 0.12 ) }
    dend_17 { pt3dadd( -152.047, -99.202, -11.8611, 0.12 ) }
    dend_17 { pt3dadd( -152.556, -100.441, -11.4073, 0.12 ) }
    dend_17 { pt3dadd( -153.2, -101.754, -11.0395, 0.12 ) }
    dend_17 { pt3dadd( -153.979, -103.153, -10.7146, 0.12 ) }
    dend_17 { pt3dadd( -155.314, -105.18, -10.2876, 0.12 ) }
    dend_17 { pt3dadd( -156.701, -106.939, -9.93066, 0.12 ) }
    dend_17 { pt3dadd( -158.274, -108.788, -9.51711, 0.12 ) }
    dend_17 { pt3dadd( -159.253, -109.898, -9.25605, 0.12 ) }
    dend_17 { pt3dadd( -160.318, -111.029, -8.96537, 0.12 ) }
    dend_17 { pt3dadd( -161.306, -111.995, -8.68686, 0.12 ) }
    dend_17 { pt3dadd( -162.434, -112.992, -8.35488, 0.12 ) }
    dend_17 { pt3dadd( -163.304, -113.613, -8.07646, 0.12 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 87/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.45981, -15.0868, -3.75642, 0.84 ) }
    dend_16 { pt3dadd( -4.59856, -17.6791, -4.43392, 0.24 ) }
    dend_16 { pt3dadd( -3.61423, -20.3809, -5.03425, 0.24 ) }
    dend_16 { pt3dadd( -2.83351, -22.8194, -5.64798, 0.24 ) }
    dend_16 { pt3dadd( -2.12259, -25.4186, -6.2856, 0.24 ) }
    dend_16 { pt3dadd( -1.85118, -26.67, -6.56835, 0.24 ) }
    dend_16 { pt3dadd( -1.4466, -28.8911, -7.03348, 0.24 ) }
    dend_16 { pt3dadd( -1.14383, -30.9056, -7.49437, 0.24 ) }
    dend_16 { pt3dadd( -0.948901, -32.7031, -7.92994, 0.24 ) }
    dend_16 { pt3dadd( -0.766882, -34.6253, -8.45711, 0.24 ) }
    dend_16 { pt3dadd( -0.451346, -37.0157, -9.09448, 0.24 ) }
    dend_16 { pt3dadd( -0.299028, -38.186, -9.45984, 0.24 ) }
    dend_16 { pt3dadd( -0.148321, -39.5174, -9.91434, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( 0.131724, -41.7349, -10.6228, 0.24 ) }
    dend_16 { pt3dadd( 0.404382, -43.7791, -11.2946, 0.24 ) }
    dend_16 { pt3dadd( 0.509053, -44.6532, -11.5819, 0.24 ) }
    dend_16 { pt3dadd( 0.750948, -47.1147, -12.4734, 0.24 ) }
    dend_16 { pt3dadd( 0.854728, -48.8987, -13.1088, 0.24 ) }
    dend_16 { pt3dadd( 0.902378, -51.097, -13.8883, 0.24 ) }
    dend_16 { pt3dadd( 0.909678, -52.6664, -14.4327, 0.24 ) }
    dend_16 { pt3dadd( 0.905838, -55.1698, -15.2608, 0.24 ) }
    dend_16 { pt3dadd( 0.972328, -57.6698, -16.1961, 0.24 ) }
    dend_16 { pt3dadd( 1.10179, -59.2754, -16.8843, 0.24 ) }
    dend_16 { pt3dadd( 1.22633, -60.4287, -17.4633, 0.24 ) }
    dend_16 { pt3dadd( 1.3779, -61.6451, -18.2387, 0.24 ) }
    dend_16 { pt3dadd( 1.5413, -62.5596, -18.9317, 0.24 ) }
    dend_16 { pt3dadd( 1.8916, -64.1372, -20.5831, 0.24 ) }
    dend_16 { pt3dadd( 1.99156, -64.5831, -21.1358, 0.24 ) }
    dend_16 { pt3dadd( 2.10813, -65.0944, -21.9145, 0.24 ) }
    dend_16 { pt3dadd( 2.40371, -66.7205, -24.4823, 0.24 ) }
    dend_16 { pt3dadd( 2.4888, -67.6318, -25.8536, 0.24 ) }
    dend_16 { pt3dadd( 2.59127, -69.7688, -28.8578, 0.24 ) }
    dend_16 { pt3dadd( 2.63124, -70.7474, -30.0923, 0.24 ) }
    dend_16 { pt3dadd( 2.74909, -73.0846, -32.7866, 0.24 ) }
    dend_16 { pt3dadd( 2.75203, -74.2112, -34.032, 0.24 ) }
    dend_16 { pt3dadd( 2.71448, -75.4147, -35.2026, 0.24 ) }
    dend_16 { pt3dadd( 2.56349, -77.8081, -37.2447, 0.24 ) }
    dend_16 { pt3dadd( 2.52991, -79.2665, -38.3035, 0.24 ) }
    dend_16 { pt3dadd( 2.51249, -80.763, -39.4005, 0.24 ) }
    dend_16 { pt3dadd( 2.59435, -83.2255, -41.2579, 0.24 ) }
    dend_16 { pt3dadd( 2.64387, -84.3285, -42.2086, 0.24 ) }
    dend_16 { pt3dadd( 2.69709, -84.9967, -42.8535, 0.24 ) }
    dend_16 { pt3dadd( 2.88498, -86.8822, -44.6693, 0.24 ) }
    dend_16 { pt3dadd( 3.17051, -89.3412, -47.0996, 0.12 ) }
    dend_16 { pt3dadd( 3.37763, -91.0406, -48.8657, 0.12 ) }
    dend_16 { pt3dadd( 3.64551, -93.1973, -51.0633, 0.12 ) }
    dend_16 { pt3dadd( 3.79888, -94.7229, -52.7206, 0.12 ) }
    dend_16 { pt3dadd( 3.89425, -95.7685, -53.8365, 0.12 ) }
    dend_16 { pt3dadd( 3.98163, -96.8612, -54.953, 0.12 ) }
    dend_16 { pt3dadd( 4.24421, -98.9969, -57.0966, 0.12 ) }
    dend_16 { pt3dadd( 4.35985, -99.8457, -57.9263, 0.12 ) }
    dend_16 { pt3dadd( 4.74352, -102.0, -60.0821, 0.12 ) }
    dend_16 { pt3dadd( 4.96449, -103.386, -61.4697, 0.12 ) }
    dend_16 { pt3dadd( 5.45621, -106.413, -64.4546, 0.12 ) }
    dend_16 { pt3dadd( 5.76802, -107.993, -65.9286, 0.12 ) }
    dend_16 { pt3dadd( 5.93269, -108.784, -66.6294, 0.12 ) }
    dend_16 { pt3dadd( 6.46122, -111.386, -68.8698, 0.12 ) }
    dend_16 { pt3dadd( 6.78392, -113.002, -70.1207, 0.12 ) }
    dend_16 { pt3dadd( 7.09471, -114.618, -71.2854, 0.12 ) }
    dend_16 { pt3dadd( 7.32914, -115.796, -72.0246, 0.12 ) }
    dend_16 { pt3dadd( 7.87128, -118.437, -73.4869, 0.12 ) }
    dend_16 { pt3dadd( 8.07016, -119.368, -73.9423, 0.12 ) }
    dend_16 { pt3dadd( 8.41198, -121.144, -74.7809, 0.12 ) }
    dend_16 { pt3dadd( 8.73461, -123.135, -75.781, 0.12 ) }
    dend_16 { pt3dadd( 8.94711, -125.101, -76.8608, 0.12 ) }
    dend_16 { pt3dadd( 9.10638, -127.112, -78.032, 0.12 ) }
    dend_16 { pt3dadd( 9.24172, -128.805, -79.0761, 0.12 ) }
    dend_16 { pt3dadd( 9.40604, -131.59, -80.9198, 0.12 ) }
    dend_16 { pt3dadd( 9.44781, -133.114, -81.9744, 0.12 ) }
    dend_16 { pt3dadd( 9.52687, -134.922, -83.2295, 0.12 ) }
    dend_16 { pt3dadd( 9.58174, -136.268, -84.1415, 0.12 ) }
    dend_16 { pt3dadd( 9.64419, -137.174, -84.7428, 0.12 ) }
    dend_16 { pt3dadd( 9.82781, -138.466, -85.5585, 0.12 ) }
    dend_16 { pt3dadd( 10.0679, -139.476, -86.112, 0.12 ) }
    dend_16 { pt3dadd( 10.3352, -140.532, -86.7169, 0.12 ) }
    dend_16 { pt3dadd( 10.6404, -141.838, -87.4765, 0.12 ) }
    dend_16 { pt3dadd( 10.7977, -142.802, -88.0648, 0.12 ) }
    dend_16 { pt3dadd( 10.9062, -143.955, -88.7893, 0.12 ) }
    dend_16 { pt3dadd( 10.9516, -145.033, -89.4927, 0.12 ) }
    dend_16 { pt3dadd( 10.8811, -147.097, -91.0181, 0.12 ) }
    dend_16 { pt3dadd( 10.7475, -148.037, -91.8048, 0.12 ) }
    dend_16 { pt3dadd( 10.5572, -149.005, -92.7311, 0.12 ) }
    dend_16 { pt3dadd( 10.3121, -149.965, -93.679, 0.12 ) }
    dend_16 { pt3dadd( 10.0607, -150.803, -94.4932, 0.12 ) }
    dend_16 { pt3dadd( 9.4239, -152.878, -96.4684, 0.12 ) }
    dend_16 { pt3dadd( 8.95634, -154.555, -98.1363, 0.12 ) }
    dend_16 { pt3dadd( 8.60572, -155.909, -99.5201, 0.12 ) }
    dend_16 { pt3dadd( 8.4435, -156.749, -100.373, 0.12 ) }
    dend_16 { pt3dadd( 8.38688, -157.261, -100.869, 0.12 ) }
    dend_16 { pt3dadd( 8.35376, -158.158, -101.646, 0.12 ) }
    dend_16 { pt3dadd( 8.40606, -160.029, -102.927, 0.12 ) }
    dend_16 { pt3dadd( 8.44059, -161.035, -103.577, 0.12 ) }
    dend_16 { pt3dadd( 8.41892, -162.28, -104.459, 0.12 ) }
    dend_16 { pt3dadd( 8.3678, -163.396, -105.332, 0.12 ) }
    dend_16 { pt3dadd( 8.33112, -163.901, -105.761, 0.12 ) }
    dend_16 { pt3dadd( 8.27065, -164.548, -106.338, 0.12 ) }
    dend_16 { pt3dadd( 8.03833, -166.744, -108.242, 0.12 ) }
    dend_16 { pt3dadd( 7.87344, -168.311, -109.683, 0.12 ) }
    dend_16 { pt3dadd( 7.82846, -168.817, -110.178, 0.12 ) }
    dend_16 { pt3dadd( 7.78303, -170.199, -111.556, 0.12 ) }
    dend_16 { pt3dadd( 7.85122, -171.255, -112.559, 0.12 ) }
    dend_16 { pt3dadd( 7.98017, -172.021, -113.247, 0.12 ) }
    dend_16 { pt3dadd( 8.46268, -173.932, -114.836, 0.12 ) }
    dend_16 { pt3dadd( 8.8454, -175.227, -115.833, 0.12 ) }
    dend_16 { pt3dadd( 9.10654, -176.159, -116.598, 0.12 ) }
    dend_16 { pt3dadd( 9.36463, -177.351, -117.498, 0.12 ) }
    dend_16 { pt3dadd( 9.57311, -178.61, -118.437, 0.12 ) }
    dend_16 { pt3dadd( 9.96761, -181.697, -120.516, 0.12 ) }
    dend_16 { pt3dadd( 10.1199, -183.281, -121.464, 0.12 ) }
    dend_16 { pt3dadd( 10.2659, -185.694, -122.801, 0.12 ) }
    dend_16 { pt3dadd( 10.3764, -189.2, -124.673, 0.12 ) }
    dend_16 { pt3dadd( 10.3896, -191.733, -126.019, 0.12 ) }
    dend_16 { pt3dadd( 10.4407, -196.385, -127.967, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( 10.4415, -198.639, -128.715, 0.12 ) }
    dend_16 { pt3dadd( 10.3959, -202.548, -129.782, 0.12 ) }
    dend_16 { pt3dadd( 10.3408, -204.766, -130.278, 0.12 ) }
    dend_16 { pt3dadd( 10.0929, -211.716, -131.446, 0.12 ) }
    dend_16 { pt3dadd( 9.67761, -218.309, -132.033, 0.12 ) }
    dend_16 { pt3dadd( 9.38242, -221.426, -132.113, 0.12 ) }
    dend_16 { pt3dadd( 9.19882, -223.071, -132.126, 0.12 ) }
    dend_16 { pt3dadd( 8.92462, -225.26, -132.052, 0.12 ) }
    dend_16 { pt3dadd( 8.48241, -228.31, -132.029, 0.12 ) }
    dend_16 { pt3dadd( 7.9048, -231.694, -132.209, 0.12 ) }
    dend_16 { pt3dadd( 7.51158, -233.953, -132.686, 0.12 ) }
    dend_16 { pt3dadd( 7.19778, -236.878, -133.451, 0.12 ) }
    dend_16 { pt3dadd( 7.19037, -238.738, -133.887, 0.12 ) }
    dend_16 { pt3dadd( 7.52947, -242.03, -134.375, 0.12 ) }
    dend_16 { pt3dadd( 7.95395, -244.566, -134.481, 0.12 ) }
    dend_16 { pt3dadd( 8.28565, -246.081, -134.367, 0.12 ) }
    dend_16 { pt3dadd( 8.90476, -248.789, -133.962, 0.12 ) }
    dend_16 { pt3dadd( 9.97741, -253.656, -132.972, 0.12 ) }
    dend_16 { pt3dadd( 10.9118, -258.259, -132.053, 0.12 ) }
    dend_16 { pt3dadd( 11.5715, -262.386, -131.349, 0.12 ) }
    dend_16 { pt3dadd( 11.8426, -265.417, -131.108, 0.12 ) }
    dend_16 { pt3dadd( 11.8505, -268.003, -131.081, 0.12 ) }
    dend_16 { pt3dadd( 11.6458, -269.644, -131.267, 0.12 ) }
    dend_16 { pt3dadd( 10.965, -272.537, -132.095, 0.12 ) }
    dend_16 { pt3dadd( 9.85741, -276.399, -133.585, 0.12 ) }
    dend_16 { pt3dadd( 8.89724, -279.251, -134.942, 0.12 ) }
    dend_16 { pt3dadd( 8.31282, -280.78, -135.737, 0.12 ) }
    dend_16 { pt3dadd( 6.03797, -286.108, -138.7, 0.12 ) }
    dend_16 { pt3dadd( 4.70205, -289.054, -140.399, 0.12 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 29/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.38278, -12.2178, 7.30741, 1.8 ) }
    dend_10 { pt3dadd( -4.38994, -13.9444, 8.29821, 1.08 ) }
    dend_10 { pt3dadd( -5.00341, -15.1237, 8.7536, 1.08 ) }
    dend_10 { pt3dadd( -6.70779, -18.6293, 9.6005, 0.96 ) }
    dend_10 { pt3dadd( -7.32294, -19.9229, 9.86197, 0.96 ) }
    dend_10 { pt3dadd( -8.13684, -21.6702, 10.0926, 0.96 ) }
    dend_10 { pt3dadd( -8.49611, -22.4812, 10.1545, 0.96 ) }
    dend_10 { pt3dadd( -9.63461, -25.2913, 10.0177, 0.84 ) }
    dend_10 { pt3dadd( -10.0642, -26.5088, 9.90249, 0.84 ) }
    dend_10 { pt3dadd( -10.5058, -27.9336, 9.71374, 0.84 ) }
    dend_10 { pt3dadd( -11.0163, -29.5708, 9.61423, 0.84 ) }
    dend_10 { pt3dadd( -11.595, -31.3321, 9.64567, 0.84 ) }
    dend_10 { pt3dadd( -12.1576, -33.0109, 9.80507, 0.84 ) }
    dend_10 { pt3dadd( -12.7175, -34.7166, 10.0997, 0.84 ) }
    dend_10 { pt3dadd( -13.2607, -36.4213, 10.4273, 0.84 ) }
    dend_10 { pt3dadd( -13.692, -37.804, 10.686, 0.84 ) }
    dend_10 { pt3dadd( -14.0956, -39.0799, 10.9998, 0.84 ) }
    dend_10 { pt3dadd( -14.6977, -40.8976, 11.4507, 0.84 ) }
    dend_10 { pt3dadd( -15.1451, -42.2711, 11.7331, 0.84 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 48/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.38278, -12.2178, 7.30741, 1.8 ) }
    dend_1 { pt3dadd( -4.66921, -11.7021, 8.3676, 0.72 ) }
    dend_1 { pt3dadd( -5.92895, -11.197, 9.40579, 0.72 ) }
    dend_1 { pt3dadd( -7.0895, -10.7317, 10.3622, 1.2 ) }
    dend_1 { pt3dadd( -8.34431, -10.2286, 11.3964, 0.96 ) }
    dend_1 { pt3dadd( -9.5217, -9.75658, 12.3667, 0.96 ) }
    dend_1 { pt3dadd( -10.0743, -9.53503, 12.8221, 0.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 30.4299, -22.2365, -0.172177, 0.253454 ) }
    axon_1 { pt3dadd( 42.5293, -31.1024, -0.172177, 0.253454 ) }
    axon_1 { pt3dadd( 54.6287, -39.9684, -0.172177, 0.253454 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 58/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -14.1622, 35.2275, -11.0677, 1.8 ) }
    apic_4 { pt3dadd( -14.2509, 37.0977, -11.4293, 1.2 ) }
    apic_4 { pt3dadd( -14.3343, 38.8542, -11.769, 1.08 ) }
    apic_4 { pt3dadd( -14.3777, 39.7674, -11.9455, 1.08 ) }
    apic_4 { pt3dadd( -14.4392, 41.0628, -12.196, 1.08 ) }
    apic_4 { pt3dadd( -14.5337, 43.0535, -12.5809, 1.8 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 64/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -14.1622, 35.2275, -11.0677, 1.8 ) }
    apic_3 { pt3dadd( -16.0021, 36.8511, -11.5306, 0.12 ) }
    apic_3 { pt3dadd( -16.1107, 36.9411, -11.5342, 0.24 ) }
    apic_3 { pt3dadd( -16.9393, 37.5008, -11.4958, 0.24 ) }
    apic_3 { pt3dadd( -17.5529, 37.8467, -11.454, 0.24 ) }
    apic_3 { pt3dadd( -19.1829, 38.7065, -11.1265, 0.24 ) }
    apic_3 { pt3dadd( -20.3901, 39.3642, -10.8074, 0.24 ) }
    apic_3 { pt3dadd( -21.7657, 40.1347, -10.4737, 0.24 ) }
    apic_3 { pt3dadd( -23.4284, 41.1005, -10.0077, 0.24 ) }
    apic_3 { pt3dadd( -24.4822, 41.7039, -9.65032, 0.24 ) }
    apic_3 { pt3dadd( -26.5526, 43.0961, -8.85096, 0.24 ) }
    apic_3 { pt3dadd( -27.5471, 43.8785, -8.49096, 0.24 ) }
    apic_3 { pt3dadd( -29.969, 45.9852, -7.12865, 0.24 ) }
    apic_3 { pt3dadd( -32.2309, 48.0195, -5.60797, 0.24 ) }
    apic_3 { pt3dadd( -33.5937, 49.3149, -4.49205, 0.24 ) }
    apic_3 { pt3dadd( -35.1809, 50.9397, -2.90433, 0.24 ) }
    apic_3 { pt3dadd( -36.3366, 52.1696, -1.49608, 0.24 ) }
    apic_3 { pt3dadd( -39.509, 55.5191, 3.07662, 0.24 ) }
    apic_3 { pt3dadd( -40.4688, 56.5957, 4.65538, 0.24 ) }
    apic_3 { pt3dadd( -41.3206, 57.6476, 6.12059, 0.24 ) }
    apic_3 { pt3dadd( -42.5324, 59.1505, 8.26909, 0.24 ) }
    apic_3 { pt3dadd( -43.7958, 60.5925, 10.3433, 0.24 ) }
    apic_3 { pt3dadd( -44.4479, 61.3155, 11.2239, 0.24 ) }
    apic_3 { pt3dadd( -45.9735, 62.9925, 12.5662, 0.24 ) }
    apic_3 { pt3dadd( -46.7554, 63.9284, 13.2421, 0.24 ) }
    apic_3 { pt3dadd( -47.9656, 65.3348, 14.1854, 0.24 ) }
    apic_3 { pt3dadd( -49.5359, 66.99, 15.2842, 0.24 ) }
    apic_3 { pt3dadd( -51.2071, 68.6134, 16.4105, 0.24 ) }
    apic_3 { pt3dadd( -52.3358, 69.616, 17.1882, 0.24 ) }
    apic_3 { pt3dadd( -54.9225, 71.6303, 19.0763, 0.24 ) }
    apic_3 { pt3dadd( -56.0796, 72.5478, 20.006, 0.24 ) }
    apic_3 { pt3dadd( -57.6846, 74.0286, 21.6047, 0.24 ) }
    apic_3 { pt3dadd( -58.4789, 74.8376, 22.5442, 0.24 ) }
    apic_3 { pt3dadd( -59.1336, 75.4968, 23.2992, 0.24 ) }
    apic_3 { pt3dadd( -60.2087, 76.4779, 24.2603, 0.24 ) }
    apic_3 { pt3dadd( -61.6258, 77.6173, 25.1027, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_3 { pt3dadd( -63.1091, 78.8562, 25.7742, 0.24 ) }
    apic_3 { pt3dadd( -64.1469, 79.7358, 26.1409, 0.24 ) }
    apic_3 { pt3dadd( -65.2465, 80.6266, 26.4558, 0.24 ) }
    apic_3 { pt3dadd( -66.8245, 81.8917, 26.7885, 0.24 ) }
    apic_3 { pt3dadd( -68.9343, 83.4539, 27.0807, 0.24 ) }
    apic_3 { pt3dadd( -70.8634, 84.7699, 27.2578, 0.24 ) }
    apic_3 { pt3dadd( -72.3677, 85.7189, 27.3488, 0.24 ) }
    apic_3 { pt3dadd( -73.5504, 86.426, 27.4174, 0.24 ) }
    apic_3 { pt3dadd( -76.6558, 88.2899, 27.5908, 0.24 ) }
    apic_3 { pt3dadd( -78.0818, 89.0507, 27.6609, 0.24 ) }
    apic_3 { pt3dadd( -79.2776, 89.6492, 27.7267, 0.24 ) }
    apic_3 { pt3dadd( -80.3434, 90.1836, 27.8025, 0.24 ) }
    apic_3 { pt3dadd( -81.6943, 90.9164, 27.9109, 0.24 ) }
    apic_3 { pt3dadd( -83.1769, 91.7291, 28.0148, 0.24 ) }
    apic_3 { pt3dadd( -86.6307, 93.6257, 28.2017, 0.24 ) }
    apic_3 { pt3dadd( -89.0781, 94.995, 28.2833, 0.24 ) }
    apic_3 { pt3dadd( -91.0478, 96.1893, 28.3326, 0.24 ) }
    apic_3 { pt3dadd( -92.881, 97.433, 28.3619, 0.24 ) }
    apic_3 { pt3dadd( -94.2076, 98.3657, 28.3912, 0.24 ) }
    apic_3 { pt3dadd( -95.4194, 99.1698, 28.3357, 0.24 ) }
    apic_3 { pt3dadd( -97.0108, 100.141, 28.1459, 0.24 ) }
    apic_3 { pt3dadd( -99.985, 101.661, 27.6077, 0.24 ) }
    apic_3 { pt3dadd( -101.57, 102.327, 27.2648, 0.24 ) }
    apic_3 { pt3dadd( -103.222, 103.025, 26.9013, 0.24 ) }
    apic_3 { pt3dadd( -106.848, 104.592, 26.1426, 0.24 ) }
    apic_3 { pt3dadd( -108.263, 105.183, 25.8665, 0.24 ) }
    apic_3 { pt3dadd( -109.543, 105.774, 25.7517, 0.24 ) }
    apic_3 { pt3dadd( -111.175, 106.602, 25.7497, 0.24 ) }
    apic_3 { pt3dadd( -114.49, 108.336, 25.8151, 0.24 ) }
    apic_3 { pt3dadd( -116.538, 109.561, 25.912, 0.24 ) }
    apic_3 { pt3dadd( -118.982, 111.307, 26.018, 0.24 ) }
    apic_3 { pt3dadd( -123.046, 114.626, 26.243, 0.24 ) }
    apic_3 { pt3dadd( -125.347, 116.743, 26.3129, 0.24 ) }
    apic_3 { pt3dadd( -127.638, 119.203, 26.2698, 0.24 ) }
    apic_3 { pt3dadd( -128.964, 120.812, 26.1564, 0.24 ) }
    apic_3 { pt3dadd( -131.304, 124.021, 25.6985, 0.24 ) }
    apic_3 { pt3dadd( -133.138, 126.77, 24.9937, 0.24 ) }
    apic_3 { pt3dadd( -134.489, 128.872, 24.0993, 0.24 ) }
    apic_3 { pt3dadd( -135.397, 130.322, 23.4049, 0.24 ) }
    apic_3 { pt3dadd( -136.007, 131.375, 22.9227, 0.24 ) }
    apic_3 { pt3dadd( -137.102, 133.062, 22.01, 0.24 ) }
    apic_3 { pt3dadd( -138.164, 134.668, 21.0699, 0.24 ) }
    apic_3 { pt3dadd( -139.319, 136.571, 19.8325, 0.24 ) }
    apic_3 { pt3dadd( -140.843, 139.328, 18.1026, 0.24 ) }
    apic_3 { pt3dadd( -141.709, 141.166, 17.017, 0.12 ) }
    apic_3 { pt3dadd( -142.324, 142.584, 16.243, 0.12 ) }
    apic_3 { pt3dadd( -143.28, 145.185, 15.0171, 0.12 ) }
    apic_3 { pt3dadd( -144.125, 147.493, 14.105, 0.12 ) }
    apic_3 { pt3dadd( -144.411, 148.227, 13.8591, 0.12 ) }
    apic_3 { pt3dadd( -145.129, 149.8, 13.5579, 0.12 ) }
    apic_3 { pt3dadd( -146.392, 152.049, 13.3504, 0.12 ) }
    apic_3 { pt3dadd( -147.508, 153.692, 13.3063, 0.12 ) }
    apic_3 { pt3dadd( -149.369, 155.882, 13.4975, 0.12 ) }
    apic_3 { pt3dadd( -150.352, 156.943, 13.6453, 0.12 ) }
    apic_3 { pt3dadd( -153.955, 160.596, 14.2553, 0.12 ) }
    apic_3 { pt3dadd( -155.696, 162.211, 14.5892, 0.12 ) }
    apic_3 { pt3dadd( -157.351, 163.679, 14.969, 0.12 ) }
    apic_3 { pt3dadd( -160.131, 165.811, 15.6454, 0.12 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 58/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 43.7938, -11.0171, -25.326, 0.36 ) }
    dend_41 { pt3dadd( 45.1131, -9.70571, -26.4275, 0.36 ) }
    dend_41 { pt3dadd( 47.4668, -7.60274, -27.9479, 0.36 ) }
    dend_41 { pt3dadd( 48.4266, -6.73294, -28.4216, 0.36 ) }
    dend_41 { pt3dadd( 49.96, -5.32941, -29.0733, 0.36 ) }
    dend_41 { pt3dadd( 51.7267, -3.62187, -29.7795, 0.36 ) }
    dend_41 { pt3dadd( 53.8436, -1.37854, -30.506, 0.36 ) }
    dend_41 { pt3dadd( 55.7689, 0.806268, -31.1288, 0.36 ) }
    dend_41 { pt3dadd( 57.7224, 3.13001, -31.7592, 0.36 ) }
    dend_41 { pt3dadd( 59.25, 5.01833, -32.2542, 0.36 ) }
    dend_41 { pt3dadd( 60.6923, 6.85451, -32.7194, 0.36 ) }
    dend_41 { pt3dadd( 62.035, 8.57576, -33.1611, 0.36 ) }
    dend_41 { pt3dadd( 63.2119, 10.2469, -33.6093, 0.36 ) }
    dend_41 { pt3dadd( 64.3104, 11.8654, -34.0743, 0.36 ) }
    dend_41 { pt3dadd( 65.786, 14.0111, -34.7623, 0.36 ) }
    dend_41 { pt3dadd( 67.3159, 16.2149, -35.4935, 0.36 ) }
    dend_41 { pt3dadd( 67.9512, 17.0947, -35.7933, 0.36 ) }
    dend_41 { pt3dadd( 68.6868, 18.053, -36.1265, 0.36 ) }
    dend_41 { pt3dadd( 69.736, 19.4008, -36.5969, 0.36 ) }
    dend_41 { pt3dadd( 71.4872, 21.5365, -37.3745, 0.36 ) }
    dend_41 { pt3dadd( 73.0317, 23.2985, -38.0365, 0.36 ) }
    dend_41 { pt3dadd( 73.8787, 24.2562, -38.4006, 0.36 ) }
    dend_41 { pt3dadd( 74.9597, 25.4404, -38.8503, 0.36 ) }
    dend_41 { pt3dadd( 75.6054, 26.1272, -39.1091, 0.36 ) }
    dend_41 { pt3dadd( 76.8631, 27.5508, -39.6211, 0.36 ) }
    dend_41 { pt3dadd( 78.0479, 29.0725, -40.1353, 0.24 ) }
    dend_41 { pt3dadd( 78.7973, 30.2609, -40.4822, 0.24 ) }
    dend_41 { pt3dadd( 79.7352, 32.1387, -41.0124, 0.24 ) }
    dend_41 { pt3dadd( 80.3415, 33.8463, -41.4813, 0.24 ) }
    dend_41 { pt3dadd( 80.7884, 35.4117, -41.9057, 0.24 ) }
    dend_41 { pt3dadd( 81.1342, 36.8453, -42.2923, 0.24 ) }
    dend_41 { pt3dadd( 81.6936, 39.4315, -42.9741, 0.24 ) }
    dend_41 { pt3dadd( 82.1597, 41.6769, -43.5596, 0.24 ) }
    dend_41 { pt3dadd( 82.652, 44.1923, -44.2032, 0.24 ) }
    dend_41 { pt3dadd( 82.9574, 45.7954, -44.5741, 0.24 ) }
    dend_41 { pt3dadd( 83.4705, 48.2915, -45.1082, 0.24 ) }
    dend_41 { pt3dadd( 83.8477, 49.8722, -45.4187, 0.24 ) }
    dend_41 { pt3dadd( 84.3137, 51.5222, -45.7159, 0.24 ) }
    dend_41 { pt3dadd( 84.9396, 53.3259, -46.0187, 0.24 ) }
    dend_41 { pt3dadd( 85.7218, 55.4338, -46.3597, 0.24 ) }
    dend_41 { pt3dadd( 86.1446, 56.6219, -46.557, 0.24 ) }
    dend_41 { pt3dadd( 86.5766, 57.8156, -46.7711, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_41 { pt3dadd( 87.1926, 59.4384, -47.0769, 0.24 ) }
    dend_41 { pt3dadd( 87.7543, 60.9235, -47.394, 0.24 ) }
    dend_41 { pt3dadd( 88.3879, 62.5696, -47.8282, 0.24 ) }
    dend_41 { pt3dadd( 88.9842, 64.085, -48.298, 0.24 ) }
    dend_41 { pt3dadd( 89.5, 65.5684, -48.7287, 0.24 ) }
    dend_41 { pt3dadd( 89.8534, 66.8867, -49.0606, 0.24 ) }
    dend_41 { pt3dadd( 90.2506, 68.6812, -49.4342, 0.24 ) }
    dend_41 { pt3dadd( 90.5328, 70.0102, -49.6585, 0.24 ) }
    dend_41 { pt3dadd( 90.7476, 70.9876, -49.7916, 0.24 ) }
    dend_41 { pt3dadd( 91.14, 72.7414, -49.9921, 0.24 ) }
    dend_41 { pt3dadd( 91.5184, 74.22, -50.1412, 0.24 ) }
    dend_41 { pt3dadd( 91.8508, 75.4566, -50.347, 0.24 ) }
    dend_41 { pt3dadd( 92.226, 76.7609, -50.6553, 0.24 ) }
    dend_41 { pt3dadd( 92.5141, 77.6973, -51.042, 0.24 ) }
    dend_41 { pt3dadd( 92.9513, 79.0196, -51.7959, 0.24 ) }
    dend_41 { pt3dadd( 93.4878, 80.3752, -52.8372, 0.24 ) }
    dend_41 { pt3dadd( 94.3077, 82.498, -54.69, 0.24 ) }
    dend_41 { pt3dadd( 94.717, 83.7329, -55.8286, 0.24 ) }
    dend_41 { pt3dadd( 95.3597, 86.0622, -57.9978, 0.24 ) }
    dend_41 { pt3dadd( 95.6208, 87.3878, -59.1875, 0.24 ) }
    dend_41 { pt3dadd( 95.9679, 89.5719, -61.1865, 0.12 ) }
    dend_41 { pt3dadd( 96.1303, 90.9104, -62.4021, 0.12 ) }
    dend_41 { pt3dadd( 96.2546, 91.9164, -63.2332, 0.12 ) }
    dend_41 { pt3dadd( 96.3446, 93.0533, -64.0673, 0.12 ) }
    dend_41 { pt3dadd( 96.2859, 94.9916, -65.1176, 0.12 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 25/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 43.7938, -11.0171, -25.326, 0.36 ) }
    dend_40 { pt3dadd( 46.0432, -11.6957, -24.9187, 0.36 ) }
    dend_40 { pt3dadd( 49.0158, -12.1793, -24.4604, 0.36 ) }
    dend_40 { pt3dadd( 50.8844, -12.3732, -24.2182, 0.36 ) }
    dend_40 { pt3dadd( 52.8351, -12.5963, -24.0063, 0.36 ) }
    dend_40 { pt3dadd( 55.3386, -12.9261, -23.77, 0.36 ) }
    dend_40 { pt3dadd( 57.7457, -13.2047, -23.6365, 0.36 ) }
    dend_40 { pt3dadd( 59.2146, -13.3901, -23.6434, 0.36 ) }
    dend_40 { pt3dadd( 60.8479, -13.6563, -23.7426, 0.36 ) }
    dend_40 { pt3dadd( 62.5608, -14.041, -24.0408, 0.36 ) }
    dend_40 { pt3dadd( 63.3862, -14.2226, -24.2737, 0.36 ) }
    dend_40 { pt3dadd( 64.9086, -14.4751, -24.8071, 0.36 ) }
    dend_40 { pt3dadd( 67.5198, -14.8037, -25.9646, 0.36 ) }
    dend_40 { pt3dadd( 68.985, -14.9305, -26.6633, 0.36 ) }
    dend_40 { pt3dadd( 71.4288, -15.0116, -27.7904, 0.36 ) }
    dend_40 { pt3dadd( 73.8464, -14.927, -28.8915, 0.36 ) }
    dend_40 { pt3dadd( 75.8127, -14.7625, -29.6766, 0.24 ) }
    dend_40 { pt3dadd( 78.9933, -14.4478, -30.9851, 0.24 ) }
    dend_40 { pt3dadd( 80.9494, -14.2395, -31.7972, 0.24 ) }
    dend_40 { pt3dadd( 83.1152, -13.9701, -32.7241, 0.24 ) }
    dend_40 { pt3dadd( 84.5312, -13.7833, -33.3168, 0.24 ) }
    dend_40 { pt3dadd( 88.8289, -13.3513, -35.2287, 0.24 ) }
    dend_40 { pt3dadd( 92.7198, -13.0589, -37.0087, 0.24 ) }
    dend_40 { pt3dadd( 93.4361, -13.0167, -37.3348, 0.24 ) }
    dend_40 { pt3dadd( 94.7073, -13.0196, -37.9508, 0.24 ) }
    dend_40 { pt3dadd( 95.662, -13.1328, -38.3953, 0.24 ) }
    dend_40 { pt3dadd( 97.4157, -13.5212, -38.9756, 0.24 ) }
    dend_40 { pt3dadd( 99.4764, -14.2452, -39.2088, 0.24 ) }
    dend_40 { pt3dadd( 101.394, -15.0742, -39.008, 0.24 ) }
    dend_40 { pt3dadd( 102.869, -15.8603, -38.7219, 0.24 ) }
    dend_40 { pt3dadd( 104.997, -17.2604, -37.9131, 0.24 ) }
    dend_40 { pt3dadd( 108.052, -19.3983, -36.2506, 0.24 ) }
    dend_40 { pt3dadd( 109.418, -20.3144, -35.316, 0.24 ) }
    dend_40 { pt3dadd( 110.605, -21.0236, -34.3383, 0.24 ) }
    dend_40 { pt3dadd( 112.127, -21.8605, -32.9549, 0.24 ) }
    dend_40 { pt3dadd( 115.087, -23.4733, -30.186, 0.24 ) }
    dend_40 { pt3dadd( 116.767, -24.4249, -28.6286, 0.24 ) }
    dend_40 { pt3dadd( 118.356, -25.3313, -27.3022, 0.24 ) }
    dend_40 { pt3dadd( 121.348, -26.9252, -24.8894, 0.24 ) }
    dend_40 { pt3dadd( 122.316, -27.375, -24.1458, 0.24 ) }
    dend_40 { pt3dadd( 123.794, -27.9917, -23.1573, 0.24 ) }
    dend_40 { pt3dadd( 124.917, -28.4219, -22.5593, 0.24 ) }
    dend_40 { pt3dadd( 125.867, -28.823, -22.0901, 0.24 ) }
    dend_40 { pt3dadd( 127.411, -29.5152, -21.3862, 0.24 ) }
    dend_40 { pt3dadd( 131.031, -31.142, -19.9425, 0.24 ) }
    dend_40 { pt3dadd( 132.416, -31.7187, -19.4325, 0.24 ) }
    dend_40 { pt3dadd( 134.006, -32.2636, -18.7626, 0.24 ) }
    dend_40 { pt3dadd( 135.384, -32.7207, -18.1434, 0.24 ) }
    dend_40 { pt3dadd( 137.435, -33.3575, -17.185, 0.24 ) }
    dend_40 { pt3dadd( 138.509, -33.6677, -16.6679, 0.24 ) }
    dend_40 { pt3dadd( 140.754, -34.3461, -15.5875, 0.24 ) }
    dend_40 { pt3dadd( 144.635, -35.577, -13.5038, 0.24 ) }
    dend_40 { pt3dadd( 146.006, -36.0252, -12.6998, 0.24 ) }
    dend_40 { pt3dadd( 148.546, -36.836, -11.1984, 0.24 ) }
    dend_40 { pt3dadd( 150.586, -37.4604, -10.1355, 0.24 ) }
    dend_40 { pt3dadd( 152.337, -37.956, -9.32486, 0.24 ) }
    dend_40 { pt3dadd( 154.151, -38.3948, -8.52259, 0.24 ) }
    dend_40 { pt3dadd( 156.178, -38.8562, -7.75271, 0.24 ) }
    dend_40 { pt3dadd( 158.201, -39.3312, -6.84329, 0.24 ) }
    dend_40 { pt3dadd( 161.365, -40.1339, -5.35445, 0.24 ) }
    dend_40 { pt3dadd( 163.373, -40.6436, -4.39035, 0.24 ) }
    dend_40 { pt3dadd( 167.193, -41.4671, -2.57429, 0.24 ) }
    dend_40 { pt3dadd( 169.684, -41.9233, -1.38535, 0.24 ) }
    dend_40 { pt3dadd( 174.01, -42.6735, 0.689402, 0.24 ) }
    dend_40 { pt3dadd( 176.432, -43.1077, 1.91943, 0.24 ) }
    dend_40 { pt3dadd( 178.402, -43.532, 2.9427, 0.24 ) }
    dend_40 { pt3dadd( 180.232, -43.9907, 3.77584, 0.24 ) }
    dend_40 { pt3dadd( 182.294, -44.569, 4.47501, 0.24 ) }
    dend_40 { pt3dadd( 184.619, -45.1115, 5.15913, 0.24 ) }
    dend_40 { pt3dadd( 186.054, -45.3492, 5.51363, 0.24 ) }
    dend_40 { pt3dadd( 187.428, -45.5549, 5.95768, 0.24 ) }
    dend_40 { pt3dadd( 187.957, -45.6169, 6.16946, 0.24 ) }
    dend_40 { pt3dadd( 188.831, -45.7296, 6.63958, 0.24 ) }
    dend_40 { pt3dadd( 191.849, -46.1326, 8.51192, 0.24 ) }
    dend_40 { pt3dadd( 193.147, -46.3041, 9.40969, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_40 { pt3dadd( 194.62, -46.5651, 10.5196, 0.24 ) }
    dend_40 { pt3dadd( 195.987, -46.9099, 11.6643, 0.24 ) }
    dend_40 { pt3dadd( 198.063, -47.5801, 13.4204, 0.12 ) }
    dend_40 { pt3dadd( 199.557, -48.1971, 14.6026, 0.12 ) }
    dend_40 { pt3dadd( 200.397, -48.6524, 15.1904, 0.12 ) }
    dend_40 { pt3dadd( 202.041, -49.6548, 16.2268, 0.12 ) }
    dend_40 { pt3dadd( 203.458, -50.6282, 17.0587, 0.12 ) }
    dend_40 { pt3dadd( 204.904, -51.6189, 17.7494, 0.12 ) }
    dend_40 { pt3dadd( 206.737, -52.7168, 18.4536, 0.12 ) }
    dend_40 { pt3dadd( 207.956, -53.3029, 18.8819, 0.12 ) }
    dend_40 { pt3dadd( 209.946, -54.0747, 19.5126, 0.12 ) }
    dend_40 { pt3dadd( 211.252, -54.4695, 19.8656, 0.12 ) }
    dend_40 { pt3dadd( 213.915, -55.2206, 20.5194, 0.12 ) }
    dend_40 { pt3dadd( 215.558, -55.6375, 20.9349, 0.12 ) }
    dend_40 { pt3dadd( 219.971, -56.5449, 22.0543, 0.12 ) }
    dend_40 { pt3dadd( 222.35, -56.9687, 22.654, 0.12 ) }
    dend_40 { pt3dadd( 224.26, -57.2108, 23.1463, 0.12 ) }
    dend_40 { pt3dadd( 227.349, -57.4875, 23.9864, 0.12 ) }
    dend_40 { pt3dadd( 229.42, -57.6606, 24.58, 0.12 ) }
    dend_40 { pt3dadd( 231.422, -57.8177, 25.1345, 0.12 ) }
    dend_40 { pt3dadd( 233.488, -57.9237, 25.5665, 0.12 ) }
    dend_40 { pt3dadd( 235.617, -57.9458, 25.9177, 0.12 ) }
    dend_40 { pt3dadd( 237.29, -57.8792, 25.9607, 0.12 ) }
    dend_40 { pt3dadd( 238.268, -57.7241, 25.7863, 0.12 ) }
    dend_40 { pt3dadd( 239.901, -57.2405, 24.638, 0.12 ) }
    dend_40 { pt3dadd( 242.087, -56.3825, 22.3349, 0.12 ) }
    dend_40 { pt3dadd( 243.067, -55.8872, 20.9225, 0.12 ) }
    dend_40 { pt3dadd( 245.208, -54.6318, 16.8608, 0.12 ) }
    dend_40 { pt3dadd( 245.775, -54.1905, 15.4585, 0.12 ) }
    dend_40 { pt3dadd( 246.898, -52.8807, 11.5939, 0.12 ) }
    dend_40 { pt3dadd( 259.136, -57.381, 12.0653, 0.12 ) }
    dend_40 { pt3dadd( 271.435, -61.2273, 14.1102, 0.12 ) }
    dend_40 { pt3dadd( 283.712, -65.4844, 15.2966, 0.12 ) }
    dend_40 { pt3dadd( 294.507, -72.6206, 16.9627, 0.12 ) }
    dend_40 { pt3dadd( 306.332, -77.9529, 18.3759, 0.12 ) }
    dend_40 { pt3dadd( 316.881, -85.4262, 20.1386, 0.12 ) }
    dend_40 { pt3dadd( 325.335, -95.3285, 20.9919, 0.12 ) }
    dend_40 { pt3dadd( 334.466, -104.548, 19.6221, 0.12 ) }
    dend_40 { pt3dadd( 343.783, -113.616, 18.5222, 0.12 ) }
    dend_40 { pt3dadd( 352.799, -123.045, 18.3078, 0.12 ) }
    dend_40 { pt3dadd( 363.114, -130.584, 15.6553, 0.12 ) }
    dend_40 { pt3dadd( 373.181, -138.312, 12.6282, 0.12 ) }
    dend_40 { pt3dadd( 383.321, -146.457, 11.5838, 0.12 ) }
    dend_40 { pt3dadd( 393.812, -154.211, 11.3341, 0.12 ) }
    dend_40 { pt3dadd( 405.687, -159.426, 9.90551, 0.12 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 45/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 109.215, 51.0647, 49.9554, 0.36 ) }
    dend_35 { pt3dadd( 110.122, 51.9078, 50.184, 0.36 ) }
    dend_35 { pt3dadd( 111.644, 53.148, 50.4305, 0.36 ) }
    dend_35 { pt3dadd( 112.345, 53.6561, 50.5195, 0.36 ) }
    dend_35 { pt3dadd( 113.03, 54.0767, 50.5874, 0.36 ) }
    dend_35 { pt3dadd( 114.326, 54.7854, 50.6923, 0.36 ) }
    dend_35 { pt3dadd( 116.731, 56.0997, 50.8869, 0.36 ) }
    dend_35 { pt3dadd( 118.031, 56.6939, 50.9173, 0.36 ) }
    dend_35 { pt3dadd( 118.91, 57.0411, 50.8771, 0.36 ) }
    dend_35 { pt3dadd( 120.086, 57.4209, 50.7799, 0.36 ) }
    dend_35 { pt3dadd( 120.793, 57.583, 50.7159, 0.36 ) }
    dend_35 { pt3dadd( 129.839, 63.8961, 52.7832, 0.36 ) }
    dend_35 { pt3dadd( 138.231, 70.1899, 56.7717, 0.36 ) }
    dend_35 { pt3dadd( 145.903, 76.8495, 61.5422, 0.36 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 109.215, 51.0647, 49.9554, 0.36 ) }
    dend_34 { pt3dadd( 111.521, 50.564, 50.3681, 0.36 ) }
    dend_34 { pt3dadd( 113.076, 50.2261, 50.6466, 0.36 ) }
    dend_34 { pt3dadd( 114.756, 49.8614, 50.9472, 0.36 ) }
    dend_34 { pt3dadd( 125.214, 47.1773, 49.8927, 0.36 ) }
    dend_34 { pt3dadd( 135.032, 43.0752, 47.7788, 0.36 ) }
    dend_34 { pt3dadd( 145.513, 41.0397, 45.8623, 0.36 ) }
    dend_34 { pt3dadd( 156.023, 38.6103, 44.7032, 0.36 ) }
    dend_34 { pt3dadd( 166.706, 37.5281, 43.1603, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 68/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 15.1101, -3.38781, 6.08469, 0.84 ) }
    dend_24 { pt3dadd( 17.2257, -4.6294, 6.3714, 0.48 ) }
    dend_24 { pt3dadd( 18.7956, -5.75861, 6.49268, 0.48 ) }
    dend_24 { pt3dadd( 20.0739, -6.91091, 6.69535, 0.36 ) }
    dend_24 { pt3dadd( 22.0691, -9.13862, 7.11756, 0.36 ) }
    dend_24 { pt3dadd( 22.8419, -10.2234, 7.32176, 0.36 ) }
    dend_24 { pt3dadd( 23.7415, -11.7113, 7.56954, 0.36 ) }
    dend_24 { pt3dadd( 24.5814, -13.6116, 7.76786, 0.36 ) }
    dend_24 { pt3dadd( 25.7166, -16.839, 8.01358, 0.36 ) }
    dend_24 { pt3dadd( 26.3093, -18.8059, 8.05375, 0.36 ) }
    dend_24 { pt3dadd( 26.9965, -21.1945, 7.97191, 0.36 ) }
    dend_24 { pt3dadd( 27.3847, -22.4468, 7.84661, 0.36 ) }
    dend_24 { pt3dadd( 28.2507, -24.9957, 7.41579, 0.36 ) }
    dend_24 { pt3dadd( 28.9558, -26.7763, 6.96175, 0.36 ) }
    dend_24 { pt3dadd( 29.9382, -28.7933, 6.24296, 0.36 ) }
    dend_24 { pt3dadd( 30.9951, -30.5483, 5.49954, 0.36 ) }
    dend_24 { pt3dadd( 32.4186, -32.5605, 4.54375, 0.36 ) }
    dend_24 { pt3dadd( 33.2709, -33.665, 4.00729, 0.36 ) }
    dend_24 { pt3dadd( 33.8702, -34.3938, 3.64459, 0.36 ) }
    dend_24 { pt3dadd( 34.7208, -35.441, 3.15188, 0.36 ) }
    dend_24 { pt3dadd( 35.763, -36.8596, 2.57951, 0.36 ) }
    dend_24 { pt3dadd( 36.7962, -38.4964, 1.99053, 0.36 ) }
    dend_24 { pt3dadd( 37.4744, -39.7329, 1.57244, 0.36 ) }
    dend_24 { pt3dadd( 38.1065, -41.1254, 1.21048, 0.36 ) }
    dend_24 { pt3dadd( 38.9985, -43.5358, 0.855995, 0.36 ) }
    dend_24 { pt3dadd( 39.7461, -45.9228, 0.741022, 0.36 ) }
    dend_24 { pt3dadd( 40.2073, -47.5893, 0.798158, 0.36 ) }
    dend_24 { pt3dadd( 40.7659, -49.6955, 0.94146, 0.36 ) }
    dend_24 { pt3dadd( 41.6114, -52.8072, 1.25145, 0.36 ) }
    dend_24 { pt3dadd( 42.4302, -55.5873, 1.66274, 0.36 ) }
    dend_24 { pt3dadd( 43.0017, -57.1929, 2.02934, 0.36 ) }
    dend_24 { pt3dadd( 43.5543, -58.4283, 2.39682, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_24 { pt3dadd( 44.3196, -59.9172, 2.91863, 0.36 ) }
    dend_24 { pt3dadd( 44.7358, -60.6303, 3.19209, 0.36 ) }
    dend_24 { pt3dadd( 45.5606, -61.8205, 3.57922, 0.36 ) }
    dend_24 { pt3dadd( 46.5888, -63.2309, 3.96795, 0.36 ) }
    dend_24 { pt3dadd( 47.3969, -64.4346, 4.30031, 0.36 ) }
    dend_24 { pt3dadd( 48.2224, -65.7868, 4.67245, 0.36 ) }
    dend_24 { pt3dadd( 48.9627, -67.1029, 5.00331, 0.36 ) }
    dend_24 { pt3dadd( 49.4604, -68.0562, 5.21119, 0.36 ) }
    dend_24 { pt3dadd( 50.5987, -70.3487, 5.62108, 0.36 ) }
    dend_24 { pt3dadd( 51.7315, -72.8367, 5.97002, 0.36 ) }
    dend_24 { pt3dadd( 52.1716, -73.8957, 6.10806, 0.36 ) }
    dend_24 { pt3dadd( 52.7001, -75.2558, 6.27729, 0.36 ) }
    dend_24 { pt3dadd( 53.5767, -77.7191, 6.58445, 0.36 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 13/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.1101, -3.38781, 6.08469, 0.84 ) }
    dend_23 { pt3dadd( 15.8312, -4.30109, 7.14498, 0.72 ) }
    dend_23 { pt3dadd( 16.7106, -5.64524, 8.47011, 0.72 ) }
    dend_23 { pt3dadd( 17.6669, -7.17388, 9.73037, 0.6 ) }
    dend_23 { pt3dadd( 18.3654, -8.29205, 10.5445, 0.6 ) }
    dend_23 { pt3dadd( 20.2487, -11.2128, 12.3788, 0.6 ) }
    dend_23 { pt3dadd( 20.9478, -12.2629, 12.9285, 0.6 ) }
    dend_23 { pt3dadd( 21.7478, -13.5243, 13.5258, 0.6 ) }
    dend_23 { pt3dadd( 22.4239, -14.6443, 14.0047, 0.48 ) }
    dend_23 { pt3dadd( 22.8391, -15.3563, 14.2465, 0.48 ) }
    dend_23 { pt3dadd( 23.7157, -16.803, 14.6735, 0.48 ) }
    dend_23 { pt3dadd( 24.9379, -18.5819, 15.0659, 0.48 ) }
    dend_23 { pt3dadd( 26.2067, -20.2481, 15.5159, 0.48 ) }
    dend_23 { pt3dadd( 26.5305, -20.6546, 15.6429, 0.48 ) }
    dend_23 { pt3dadd( 27.1166, -21.3649, 15.8922, 0.48 ) }
    dend_23 { pt3dadd( 28.6128, -23.0601, 16.5122, 0.48 ) }
    dend_23 { pt3dadd( 29.593, -24.0893, 16.9575, 0.48 ) }
    dend_23 { pt3dadd( 30.7251, -25.1298, 17.4412, 0.48 ) }
    dend_23 { pt3dadd( 31.5406, -25.8209, 17.7847, 0.48 ) }
    dend_23 { pt3dadd( 32.7709, -26.8572, 18.3308, 0.48 ) }
    dend_23 { pt3dadd( 33.5086, -27.4697, 18.6731, 0.48 ) }
    dend_23 { pt3dadd( 34.9675, -28.6192, 19.4222, 0.48 ) }
    dend_23 { pt3dadd( 35.7001, -29.1435, 19.8305, 0.48 ) }
    dend_23 { pt3dadd( 36.6071, -29.7208, 20.3713, 0.48 ) }
    dend_23 { pt3dadd( 37.2264, -30.0576, 20.7556, 0.48 ) }
    dend_23 { pt3dadd( 41.43, -36.3293, 25.4399, 0.48 ) }
    dend_23 { pt3dadd( 47.5013, -40.7508, 30.1874, 0.48 ) }
    dend_23 { pt3dadd( 53.3844, -45.5016, 34.8529, 0.48 ) }
    dend_23 { pt3dadd( 57.595, -50.2196, 41.0947, 0.48 ) }
    dend_23 { pt3dadd( 60.648, -56.4634, 46.6301, 0.48 ) }
    dend_23 { pt3dadd( 63.3933, -62.7578, 52.2687, 0.48 ) }
    dend_23 { pt3dadd( 65.7448, -68.4687, 58.6565, 0.48 ) }
    dend_23 { pt3dadd( 68.3074, -72.7046, 66.0347, 0.48 ) }
    dend_23 { pt3dadd( 70.3943, -78.108, 72.7724, 0.48 ) }
    dend_23 { pt3dadd( 74.2146, -84.0831, 78.1251, 0.48 ) }
    dend_23 { pt3dadd( 77.1572, -90.7956, 83.1482, 0.48 ) }
    dend_23 { pt3dadd( 78.1297, -97.3665, 89.0495, 0.48 ) }
    dend_23 { pt3dadd( 80.3429, -104.112, 94.3924, 0.48 ) }
    dend_23 { pt3dadd( 83.3867, -109.802, 100.501, 0.48 ) }
    dend_23 { pt3dadd( 86.2463, -115.995, 106.195, 0.48 ) }
    dend_23 { pt3dadd( 87.585, -122.441, 112.162, 0.48 ) }
    dend_23 { pt3dadd( 88.3915, -127.844, 119.169, 0.48 ) }
    dend_23 { pt3dadd( 91.2125, -133.832, 125.096, 0.48 ) }
    dend_23 { pt3dadd( 93.2901, -138.888, 132.101, 0.48 ) }
    dend_23 { pt3dadd( 95.8717, -143.807, 139.036, 0.48 ) }
    dend_23 { pt3dadd( 98.9881, -149.619, 144.991, 0.48 ) }
    dend_23 { pt3dadd( 102.158, -155.005, 151.306, 0.48 ) }
    dend_23 { pt3dadd( 105.824, -159.562, 157.996, 0.48 ) }
    dend_23 { pt3dadd( 108.768, -165.044, 164.337, 0.48 ) }
    dend_23 { pt3dadd( 112.556, -171.197, 169.509, 0.48 ) }
    dend_23 { pt3dadd( 115.559, -178.207, 174.068, 0.48 ) }
    dend_23 { pt3dadd( 119.964, -185.539, 176.472, 0.48 ) }
    dend_23 { pt3dadd( 124.996, -192.407, 179.015, 0.48 ) }
    dend_23 { pt3dadd( 128.823, -199.607, 182.544, 0.48 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 67/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -15.1451, -42.2711, 11.7331, 0.84 ) }
    dend_12 { pt3dadd( -16.1146, -45.4257, 12.5799, 0.24 ) }
    dend_12 { pt3dadd( -16.9834, -48.2371, 13.2104, 0.84 ) }
    dend_12 { pt3dadd( -17.5774, -50.1565, 13.5838, 0.6 ) }
    dend_12 { pt3dadd( -19.0355, -54.6076, 14.3891, 0.48 ) }
    dend_12 { pt3dadd( -19.5991, -56.1395, 14.6483, 0.48 ) }
    dend_12 { pt3dadd( -20.1893, -57.4557, 14.7758, 0.48 ) }
    dend_12 { pt3dadd( -20.5997, -58.2364, 14.8072, 0.48 ) }
    dend_12 { pt3dadd( -21.2092, -59.2175, 14.7949, 0.48 ) }
    dend_12 { pt3dadd( -21.9438, -60.0858, 14.7002, 0.48 ) }
    dend_12 { pt3dadd( -23.2785, -61.0199, 14.3925, 0.48 ) }
    dend_12 { pt3dadd( -24.3742, -61.6195, 14.0901, 0.48 ) }
    dend_12 { pt3dadd( -26.2687, -62.5403, 13.4771, 0.48 ) }
    dend_12 { pt3dadd( -26.7731, -62.7815, 13.3021, 0.48 ) }
    dend_12 { pt3dadd( -27.8704, -63.3145, 12.9149, 0.48 ) }
    dend_12 { pt3dadd( -29.0412, -63.9644, 12.4968, 0.48 ) }
    dend_12 { pt3dadd( -30.4273, -64.8428, 12.0274, 0.48 ) }
    dend_12 { pt3dadd( -31.3963, -65.5195, 11.7405, 0.48 ) }
    dend_12 { pt3dadd( -32.6378, -66.4835, 11.3227, 0.48 ) }
    dend_12 { pt3dadd( -33.7302, -67.4243, 10.8707, 0.48 ) }
    dend_12 { pt3dadd( -34.5196, -68.1453, 10.4961, 0.48 ) }
    dend_12 { pt3dadd( -35.5815, -69.1342, 9.95855, 0.48 ) }
    dend_12 { pt3dadd( -36.3804, -69.8584, 9.55418, 0.48 ) }
    dend_12 { pt3dadd( -38.4251, -71.6311, 8.4915, 0.48 ) }
    dend_12 { pt3dadd( -39.6637, -72.6509, 7.82501, 0.48 ) }
    dend_12 { pt3dadd( -40.7216, -73.4852, 7.27484, 0.48 ) }
    dend_12 { pt3dadd( -41.4871, -74.1055, 6.84418, 0.48 ) }
    dend_12 { pt3dadd( -41.9984, -74.549, 6.55355, 0.48 ) }
    dend_12 { pt3dadd( -42.6275, -75.1176, 6.22799, 0.48 ) }
    dend_12 { pt3dadd( -43.4233, -75.8652, 5.90665, 0.48 ) }
    dend_12 { pt3dadd( -44.3276, -76.8509, 5.53365, 0.48 ) }
    dend_12 { pt3dadd( -45.7714, -78.6892, 4.90946, 0.48 ) }
    dend_12 { pt3dadd( -46.4657, -79.6793, 4.59987, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -46.9056, -80.3661, 4.40236, 0.48 ) }
    dend_12 { pt3dadd( -47.3277, -81.0641, 4.2435, 0.48 ) }
    dend_12 { pt3dadd( -48.074, -82.3378, 4.03221, 0.48 ) }
    dend_12 { pt3dadd( -48.824, -83.6343, 3.92146, 0.48 ) }
    dend_12 { pt3dadd( -49.5729, -84.8995, 3.92613, 0.48 ) }
    dend_12 { pt3dadd( -49.8819, -85.4416, 3.93343, 0.48 ) }
    dend_12 { pt3dadd( -50.6051, -86.714, 3.95887, 0.48 ) }
    dend_12 { pt3dadd( -50.9868, -87.3466, 3.97462, 0.48 ) }
    dend_12 { pt3dadd( -51.8377, -88.6129, 4.01102, 0.48 ) }
    dend_12 { pt3dadd( -52.7326, -89.8696, 4.05481, 0.48 ) }
    dend_12 { pt3dadd( -53.5135, -90.9292, 4.07667, 0.48 ) }
    dend_12 { pt3dadd( -54.1939, -91.856, 4.07339, 0.48 ) }
    dend_12 { pt3dadd( -54.9244, -92.93, 3.94769, 0.48 ) }
    dend_12 { pt3dadd( -55.5182, -93.886, 3.75998, 0.48 ) }
    dend_12 { pt3dadd( -56.1631, -94.9755, 3.47332, 0.48 ) }
    dend_12 { pt3dadd( -56.8486, -96.2376, 3.02284, 0.48 ) }
    dend_12 { pt3dadd( -57.2031, -96.9216, 2.72606, 0.48 ) }
    dend_12 { pt3dadd( -58.2667, -99.077, 1.58313, 0.48 ) }
    dend_12 { pt3dadd( -58.8163, -100.191, 0.88001, 0.48 ) }
    dend_12 { pt3dadd( -59.1925, -100.863, 0.397694, 0.48 ) }
    dend_12 { pt3dadd( -59.9264, -101.974, -0.489791, 0.48 ) }
    dend_12 { pt3dadd( -60.5001, -102.719, -1.09704, 0.48 ) }
    dend_12 { pt3dadd( -61.3144, -103.636, -1.93672, 0.48 ) }
    dend_12 { pt3dadd( -62.0711, -104.391, -2.65784, 0.48 ) }
    dend_12 { pt3dadd( -63.0117, -105.288, -3.62434, 0.48 ) }
    dend_12 { pt3dadd( -63.6375, -105.92, -4.30639, 0.48 ) }
    dend_12 { pt3dadd( -64.5197, -106.89, -5.29452, 0.48 ) }
    dend_12 { pt3dadd( -66.2322, -108.968, -7.33661, 0.48 ) }
    dend_12 { pt3dadd( -66.9393, -109.874, -8.16588, 0.48 ) }
    dend_12 { pt3dadd( -67.6129, -110.78, -8.93739, 0.48 ) }
    dend_12 { pt3dadd( -68.3952, -111.875, -9.7998, 0.48 ) }
    dend_12 { pt3dadd( -69.396, -113.291, -10.7757, 0.48 ) }
    dend_12 { pt3dadd( -70.0917, -114.311, -11.3403, 0.48 ) }
    dend_12 { pt3dadd( -71.1182, -115.836, -11.8988, 0.48 ) }
    dend_12 { pt3dadd( -71.7066, -116.78, -12.2167, 0.48 ) }
    dend_12 { pt3dadd( -72.1646, -117.519, -12.4457, 0.48 ) }
    dend_12 { pt3dadd( -72.8795, -118.672, -12.8193, 0.48 ) }
    dend_12 { pt3dadd( -73.7171, -120.051, -13.2895, 0.48 ) }
    dend_12 { pt3dadd( -74.4313, -121.242, -13.712, 0.48 ) }
    dend_12 { pt3dadd( -76.5569, -124.887, -15.0544, 0.36 ) }
    dend_12 { pt3dadd( -77.5479, -126.681, -15.6821, 0.36 ) }
    dend_12 { pt3dadd( -78.3695, -128.195, -16.1322, 0.36 ) }
    dend_12 { pt3dadd( -79.1816, -129.694, -16.5288, 0.36 ) }
    dend_12 { pt3dadd( -79.9988, -131.175, -16.902, 0.36 ) }
    dend_12 { pt3dadd( -80.6401, -132.33, -17.1497, 0.36 ) }
    dend_12 { pt3dadd( -82.4491, -135.501, -17.4961, 0.36 ) }
    dend_12 { pt3dadd( -83.5542, -137.549, -17.6126, 0.36 ) }
    dend_12 { pt3dadd( -83.9992, -138.39, -17.5933, 0.36 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 48/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -15.1451, -42.2711, 11.7331, 0.84 ) }
    dend_11 { pt3dadd( -17.7379, -43.0757, 13.021, 0.6 ) }
    dend_11 { pt3dadd( -18.6085, -43.2755, 13.3878, 0.6 ) }
    dend_11 { pt3dadd( -19.8212, -43.4899, 13.829, 0.6 ) }
    dend_11 { pt3dadd( -22.9041, -43.9222, 14.8479, 0.36 ) }
    dend_11 { pt3dadd( -23.7398, -44.0729, 15.0954, 0.36 ) }
    dend_11 { pt3dadd( -24.5272, -44.2236, 15.3253, 0.36 ) }
    dend_11 { pt3dadd( -25.4411, -44.3702, 15.5316, 0.36 ) }
    dend_11 { pt3dadd( -25.9421, -44.4347, 15.6851, 0.36 ) }
    dend_11 { pt3dadd( -27.1373, -44.5815, 16.0722, 0.36 ) }
    dend_11 { pt3dadd( -28.7606, -44.855, 16.505, 0.36 ) }
    dend_11 { pt3dadd( -30.2807, -45.1878, 16.9956, 0.24 ) }
    dend_11 { pt3dadd( -31.0372, -45.3798, 17.284, 0.24 ) }
    dend_11 { pt3dadd( -33.171, -45.9836, 18.1982, 0.24 ) }
    dend_11 { pt3dadd( -41.1994, -47.7561, 20.3837, 0.24 ) }
    dend_11 { pt3dadd( -48.8753, -49.2497, 23.7339, 0.24 ) }
    dend_11 { pt3dadd( -56.1728, -51.9593, 27.1658, 0.24 ) }
    dend_11 { pt3dadd( -64.2346, -53.6007, 29.3304, 0.24 ) }
    dend_11 { pt3dadd( -72.0166, -56.4324, 31.2787, 0.24 ) }
    dend_11 { pt3dadd( -79.1689, -60.3151, 33.7572, 0.24 ) }
    dend_11 { pt3dadd( -86.0831, -64.2676, 36.7481, 0.24 ) }
    dend_11 { pt3dadd( -91.5106, -70.1809, 39.5672, 0.24 ) }
    dend_11 { pt3dadd( -96.1446, -76.9966, 41.6755, 0.24 ) }
    dend_11 { pt3dadd( -100.083, -83.9862, 44.5057, 0.24 ) }
    dend_11 { pt3dadd( -103.924, -89.9373, 49.218, 0.24 ) }
    dend_11 { pt3dadd( -106.831, -96.1167, 54.2914, 0.24 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 74/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.0743, -9.53503, 12.8221, 0.96 ) }
    dend_9 { pt3dadd( -11.5293, -9.29234, 11.8611, 0.36 ) }
    dend_9 { pt3dadd( -12.9321, -9.02488, 11.0118, 0.36 ) }
    dend_9 { pt3dadd( -13.9477, -8.83286, 10.3977, 0.36 ) }
    dend_9 { pt3dadd( -15.1036, -8.6305, 9.68892, 0.36 ) }
    dend_9 { pt3dadd( -19.4361, -7.9546, 7.09944, 0.36 ) }
    dend_9 { pt3dadd( -21.0179, -7.72107, 6.19299, 0.36 ) }
    dend_9 { pt3dadd( -22.7888, -7.48092, 5.19165, 0.36 ) }
    dend_9 { pt3dadd( -24.4153, -7.29381, 4.22599, 0.36 ) }
    dend_9 { pt3dadd( -25.573, -7.19902, 3.54342, 0.36 ) }
    dend_9 { pt3dadd( -27.0671, -7.1294, 2.75066, 0.36 ) }
    dend_9 { pt3dadd( -28.1203, -7.15174, 2.32604, 0.36 ) }
    dend_9 { pt3dadd( -29.9877, -7.13012, 1.64321, 0.36 ) }
    dend_9 { pt3dadd( -31.5838, -7.05031, 1.1996, 0.36 ) }
    dend_9 { pt3dadd( -32.3818, -6.94834, 1.10917, 0.36 ) }
    dend_9 { pt3dadd( -34.6175, -6.49311, 1.20367, 0.36 ) }
    dend_9 { pt3dadd( -35.5746, -6.22274, 1.36529, 0.36 ) }
    dend_9 { pt3dadd( -37.8371, -5.5116, 1.90206, 0.36 ) }
    dend_9 { pt3dadd( -39.4661, -4.93968, 2.39118, 0.36 ) }
    dend_9 { pt3dadd( -42.1804, -3.96337, 3.29202, 0.36 ) }
    dend_9 { pt3dadd( -43.7543, -3.43893, 3.81397, 0.36 ) }
    dend_9 { pt3dadd( -45.3404, -2.96075, 4.32431, 0.36 ) }
    dend_9 { pt3dadd( -46.7715, -2.56393, 4.74673, 0.36 ) }
    dend_9 { pt3dadd( -48.2091, -2.26157, 5.10566, 0.36 ) }
    dend_9 { pt3dadd( -49.4328, -2.05296, 5.32924, 0.36 ) }
    dend_9 { pt3dadd( -50.3929, -1.91122, 5.39244, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_9 { pt3dadd( -51.8944, -1.68935, 5.43263, 0.36 ) }
    dend_9 { pt3dadd( -53.2775, -1.5002, 5.40441, 0.36 ) }
    dend_9 { pt3dadd( -54.6903, -1.26921, 5.34259, 0.36 ) }
    dend_9 { pt3dadd( -56.354, -0.958532, 5.2175, 0.36 ) }
    dend_9 { pt3dadd( -59.353, -0.386036, 4.93312, 0.36 ) }
    dend_9 { pt3dadd( -61.0226, -0.0587018, 4.7651, 0.36 ) }
    dend_9 { pt3dadd( -63.1106, 0.394072, 4.49916, 0.36 ) }
    dend_9 { pt3dadd( -64.4792, 0.74466, 4.34578, 0.36 ) }
    dend_9 { pt3dadd( -65.6435, 1.09406, 4.22408, 0.36 ) }
    dend_9 { pt3dadd( -67.0143, 1.54743, 4.09207, 0.36 ) }
    dend_9 { pt3dadd( -69.265, 2.30803, 3.95417, 0.36 ) }
    dend_9 { pt3dadd( -70.7988, 2.89673, 3.67263, 0.36 ) }
    dend_9 { pt3dadd( -72.4146, 3.539, 3.22345, 0.36 ) }
    dend_9 { pt3dadd( -74.0509, 4.11699, 2.60797, 0.24 ) }
    dend_9 { pt3dadd( -75.2761, 4.51605, 2.07482, 0.24 ) }
    dend_9 { pt3dadd( -76.3596, 4.84294, 1.49971, 0.24 ) }
    dend_9 { pt3dadd( -80.3466, 5.78848, -0.778422, 0.24 ) }
    dend_9 { pt3dadd( -81.2549, 5.92992, -1.28113, 0.24 ) }
    dend_9 { pt3dadd( -82.5594, 6.06913, -2.03319, 0.24 ) }
    dend_9 { pt3dadd( -83.974, 6.17552, -2.79084, 0.24 ) }
    dend_9 { pt3dadd( -86.0917, 6.28211, -3.84741, 0.12 ) }
    dend_9 { pt3dadd( -87.9631, 6.35656, -4.67779, 0.12 ) }
    dend_9 { pt3dadd( -89.0928, 6.40769, -5.12132, 0.12 ) }
    dend_9 { pt3dadd( -91.1409, 6.58993, -6.07296, 0.12 ) }
    dend_9 { pt3dadd( -92.2637, 6.72708, -6.63743, 0.12 ) }
    dend_9 { pt3dadd( -93.3958, 6.82809, -7.3058, 0.12 ) }
    dend_9 { pt3dadd( -94.399, 6.87501, -7.9744, 0.12 ) }
    dend_9 { pt3dadd( -97.0923, 6.85477, -10.0526, 0.12 ) }
    dend_9 { pt3dadd( -99.7076, 6.71916, -12.2185, 0.12 ) }
    dend_9 { pt3dadd( -101.986, 6.46409, -14.1334, 0.12 ) }
    dend_9 { pt3dadd( -105.64, 5.85693, -17.1892, 0.12 ) }
    dend_9 { pt3dadd( -108.222, 5.31144, -19.237, 0.12 ) }
    dend_9 { pt3dadd( -111.346, 4.56659, -21.5276, 0.12 ) }
    dend_9 { pt3dadd( -113.398, 4.05206, -22.8481, 0.12 ) }
    dend_9 { pt3dadd( -115.28, 3.62241, -23.8645, 0.12 ) }
    dend_9 { pt3dadd( -117.87, 3.14357, -25.0109, 0.12 ) }
    dend_9 { pt3dadd( -121.154, 2.79022, -25.9404, 0.12 ) }
    dend_9 { pt3dadd( -123.467, 2.6653, -26.4097, 0.12 ) }
    dend_9 { pt3dadd( -125.897, 2.62, -26.6962, 0.12 ) }
    dend_9 { pt3dadd( -128.606, 2.65673, -26.9269, 0.12 ) }
    dend_9 { pt3dadd( -129.665, 2.69931, -26.9948, 0.12 ) }
    dend_9 { pt3dadd( -132.882, 2.83384, -27.0843, 0.12 ) }
    dend_9 { pt3dadd( -134.998, 2.88189, -27.0671, 0.12 ) }
    dend_9 { pt3dadd( -137.221, 2.83686, -27.0252, 0.12 ) }
    dend_9 { pt3dadd( -138.367, 2.79487, -26.9978, 0.12 ) }
    dend_9 { pt3dadd( -139.696, 2.75697, -26.9406, 0.12 ) }
    dend_9 { pt3dadd( -140.966, 2.74985, -26.8974, 0.12 ) }
    dend_9 { pt3dadd( -143.021, 2.74257, -26.8769, 0.12 ) }
    dend_9 { pt3dadd( -144.583, 2.7335, -26.8779, 0.12 ) }
    dend_9 { pt3dadd( -146.493, 2.71012, -26.9817, 0.12 ) }
    dend_9 { pt3dadd( -148.909, 2.62369, -27.2233, 0.12 ) }
    dend_9 { pt3dadd( -150.4, 2.54687, -27.4363, 0.12 ) }
    dend_9 { pt3dadd( -152.977, 2.37832, -27.948, 0.12 ) }
    dend_9 { pt3dadd( -155.29, 2.1846, -28.6334, 0.12 ) }
    dend_9 { pt3dadd( -157.128, 2.06064, -29.5758, 0.12 ) }
    dend_9 { pt3dadd( -158.909, 1.99389, -31.0545, 0.12 ) }
    dend_9 { pt3dadd( -160.329, 1.96768, -32.4411, 0.12 ) }
    dend_9 { pt3dadd( -161.843, 1.98389, -34.1541, 0.12 ) }
    dend_9 { pt3dadd( -163.97, 2.11495, -37.2267, 0.12 ) }
    dend_9 { pt3dadd( -166.99, 2.44459, -42.7955, 0.12 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 60/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -10.0743, -9.53503, 12.8221, 0.96 ) }
    dend_2 { pt3dadd( -11.7583, -9.46002, 13.4843, 0.72 ) }
    dend_2 { pt3dadd( -13.0538, -9.51697, 14.2179, 0.72 ) }
    dend_2 { pt3dadd( -13.6273, -9.54218, 14.5426, 0.72 ) }
    dend_2 { pt3dadd( -14.8075, -9.59406, 15.2109, 0.72 ) }
    dend_2 { pt3dadd( -15.904, -9.64227, 15.8318, 0.72 ) }
    dend_2 { pt3dadd( -16.8845, -9.68537, 16.387, 0.72 ) }
    dend_2 { pt3dadd( -18.3363, -9.92578, 17.1376, 0.72 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 68/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -14.5337, 43.0535, -12.5809, 1.8 ) }
    apic_8 { pt3dadd( -14.6201, 45.5455, -12.86, 1.08 ) }
    apic_8 { pt3dadd( -14.769, 46.8149, -13.1021, 1.08 ) }
    apic_8 { pt3dadd( -15.1066, 48.5355, -13.4678, 1.08 ) }
    apic_8 { pt3dadd( -15.4835, 50.1145, -13.7907, 1.08 ) }
    apic_8 { pt3dadd( -16.5478, 54.4412, -14.5861, 1.08 ) }
    apic_8 { pt3dadd( -17.3873, 58.1978, -15.0995, 1.08 ) }
    apic_8 { pt3dadd( -18.0501, 61.2502, -15.4387, 1.08 ) }
    apic_8 { pt3dadd( -18.7564, 64.4698, -15.7899, 1.08 ) }
    apic_8 { pt3dadd( -19.3918, 67.4067, -16.0815, 1.08 ) }
    apic_8 { pt3dadd( -19.9926, 70.0815, -16.289, 1.08 ) }
    apic_8 { pt3dadd( -20.8665, 73.7191, -16.3571, 1.08 ) }
    apic_8 { pt3dadd( -21.2333, 75.487, -16.1611, 1.08 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 81/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -14.5337, 43.0535, -12.5809, 1.8 ) }
    apic_5 { pt3dadd( -15.7791, 43.1786, -15.5317, 0.36 ) }
    apic_5 { pt3dadd( -16.1244, 43.1848, -16.5512, 0.36 ) }
    apic_5 { pt3dadd( -16.3599, 43.1271, -17.3837, 0.36 ) }
    apic_5 { pt3dadd( -16.6931, 42.914, -19.0356, 0.36 ) }
    apic_5 { pt3dadd( -16.8117, 42.8381, -19.6236, 0.36 ) }
    apic_5 { pt3dadd( -16.9649, 42.7401, -20.3829, 0.36 ) }
    apic_5 { pt3dadd( -17.3458, 42.2468, -22.8247, 0.48 ) }
    apic_5 { pt3dadd( -17.4695, 41.9493, -24.2672, 0.48 ) }
    apic_5 { pt3dadd( -17.5222, 41.4341, -26.5562, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 91/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 53.5767, -77.7191, 6.58445, 0.36 ) }
    dend_28 { pt3dadd( 52.7755, -81.6109, 6.61653, 0.36 ) }
    dend_28 { pt3dadd( 52.7052, -83.3089, 6.61111, 0.36 ) }
    dend_28 { pt3dadd( 52.9078, -84.9951, 6.55173, 0.36 ) }
    dend_28 { pt3dadd( 53.5207, -87.5642, 6.32857, 0.36 ) }
    dend_28 { pt3dadd( 54.2285, -89.8357, 6.14098, 0.36 ) }
    dend_28 { pt3dadd( 54.8069, -91.5099, 6.01065, 0.36 ) }
    dend_28 { pt3dadd( 56.032, -94.2576, 5.9283, 0.36 ) }
    dend_28 { pt3dadd( 57.1994, -96.4339, 5.79551, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_28 { pt3dadd( 58.581, -98.6187, 5.55574, 0.36 ) }
    dend_28 { pt3dadd( 59.3587, -99.7075, 5.31977, 0.36 ) }
    dend_28 { pt3dadd( 60.2589, -100.772, 5.06751, 0.36 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 3/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 53.5767, -77.7191, 6.58445, 0.36 ) }
    dend_25 { pt3dadd( 52.7327, -78.4613, 6.01829, 0.36 ) }
    dend_25 { pt3dadd( 52.4734, -78.6893, 5.84438, 0.36 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 6/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -83.9992, -138.39, -17.5933, 0.36 ) }
    dend_14 { pt3dadd( -84.6729, -140.129, -17.6413, 0.24 ) }
    dend_14 { pt3dadd( -85.2256, -141.432, -17.6826, 0.24 ) }
    dend_14 { pt3dadd( -85.6705, -142.465, -17.6478, 0.24 ) }
    dend_14 { pt3dadd( -86.448, -144.227, -17.5338, 0.24 ) }
    dend_14 { pt3dadd( -86.875, -145.157, -17.4631, 0.24 ) }
    dend_14 { pt3dadd( -87.571, -146.621, -17.3451, 0.24 ) }
    dend_14 { pt3dadd( -87.9036, -147.293, -17.2797, 0.24 ) }
    dend_14 { pt3dadd( -88.8856, -149.242, -17.0569, 0.24 ) }
    dend_14 { pt3dadd( -89.3874, -150.199, -16.9393, 0.24 ) }
    dend_14 { pt3dadd( -89.9258, -151.165, -16.8134, 0.24 ) }
    dend_14 { pt3dadd( -90.3953, -151.999, -16.7137, 0.24 ) }
    dend_14 { pt3dadd( -90.9581, -153.046, -16.5434, 0.24 ) }
    dend_14 { pt3dadd( -91.6376, -154.267, -16.3128, 0.24 ) }
    dend_14 { pt3dadd( -92.3157, -155.413, -16.0827, 0.24 ) }
    dend_14 { pt3dadd( -92.906, -156.379, -15.8545, 0.24 ) }
    dend_14 { pt3dadd( -93.6111, -157.495, -15.5697, 0.24 ) }
    dend_14 { pt3dadd( -95.1447, -159.882, -14.97, 0.24 ) }
    dend_14 { pt3dadd( -95.7609, -160.8, -14.7442, 0.24 ) }
    dend_14 { pt3dadd( -96.3875, -161.737, -14.4995, 0.12 ) }
    dend_14 { pt3dadd( -96.9962, -162.639, -14.3128, 0.12 ) }
    dend_14 { pt3dadd( -97.8301, -163.871, -14.1497, 0.12 ) }
    dend_14 { pt3dadd( -98.7801, -165.283, -14.1105, 0.12 ) }
    dend_14 { pt3dadd( -99.1611, -165.862, -14.1769, 0.12 ) }
    dend_14 { pt3dadd( -99.815, -166.968, -14.3473, 0.12 ) }
    dend_14 { pt3dadd( -100.769, -168.738, -14.6619, 0.12 ) }
    dend_14 { pt3dadd( -101.153, -169.557, -14.8174, 0.12 ) }
    dend_14 { pt3dadd( -101.578, -170.676, -14.9883, 0.12 ) }
    dend_14 { pt3dadd( -101.928, -171.796, -15.163, 0.12 ) }
    dend_14 { pt3dadd( -102.142, -172.63, -15.2606, 0.12 ) }
    dend_14 { pt3dadd( -102.341, -173.54, -15.2913, 0.12 ) }
    dend_14 { pt3dadd( -102.527, -174.47, -15.1658, 0.12 ) }
    dend_14 { pt3dadd( -102.769, -175.726, -14.9215, 0.12 ) }
    dend_14 { pt3dadd( -103.0, -176.846, -14.628, 0.12 ) }
    dend_14 { pt3dadd( -103.264, -177.901, -14.3041, 0.12 ) }
    dend_14 { pt3dadd( -103.619, -179.042, -13.9287, 0.12 ) }
    dend_14 { pt3dadd( -104.152, -180.351, -13.4725, 0.12 ) }
    dend_14 { pt3dadd( -104.558, -181.134, -13.1828, 0.12 ) }
    dend_14 { pt3dadd( -105.052, -181.943, -12.8903, 0.12 ) }
    dend_14 { pt3dadd( -105.715, -182.901, -12.6054, 0.12 ) }
    dend_14 { pt3dadd( -106.264, -183.63, -12.4554, 0.12 ) }
    dend_14 { pt3dadd( -107.175, -184.77, -12.2856, 0.12 ) }
    dend_14 { pt3dadd( -107.658, -185.381, -12.1995, 0.12 ) }
    dend_14 { pt3dadd( -108.21, -186.137, -12.0584, 0.12 ) }
    dend_14 { pt3dadd( -109.233, -187.699, -11.7052, 0.12 ) }
    dend_14 { pt3dadd( -109.923, -188.86, -11.3822, 0.12 ) }
    dend_14 { pt3dadd( -110.385, -189.689, -11.1158, 0.12 ) }
    dend_14 { pt3dadd( -110.991, -190.824, -10.7059, 0.12 ) }
    dend_14 { pt3dadd( -111.709, -192.179, -10.208, 0.12 ) }
    dend_14 { pt3dadd( -112.191, -193.068, -9.86585, 0.12 ) }
    dend_14 { pt3dadd( -112.759, -194.055, -9.48172, 0.12 ) }
    dend_14 { pt3dadd( -113.22, -194.842, -9.25555, 0.12 ) }
    dend_14 { pt3dadd( -113.546, -195.39, -9.13362, 0.12 ) }
    dend_14 { pt3dadd( -114.056, -196.228, -8.99606, 0.12 ) }
    dend_14 { pt3dadd( -114.601, -197.132, -8.89714, 0.12 ) }
    dend_14 { pt3dadd( -115.122, -198.04, -8.8306, 0.12 ) }
    dend_14 { pt3dadd( -115.893, -199.491, -8.89852, 0.12 ) }
    dend_14 { pt3dadd( -116.353, -200.387, -9.00099, 0.12 ) }
    dend_14 { pt3dadd( -116.787, -201.234, -9.1246, 0.12 ) }
    dend_14 { pt3dadd( -117.235, -202.072, -9.24635, 0.12 ) }
    dend_14 { pt3dadd( -117.649, -202.783, -9.41953, 0.12 ) }
    dend_14 { pt3dadd( -118.928, -204.675, -10.1187, 0.12 ) }
    dend_14 { pt3dadd( -119.452, -205.305, -10.4487, 0.12 ) }
    dend_14 { pt3dadd( -120.271, -206.204, -11.0003, 0.12 ) }
    dend_14 { pt3dadd( -120.826, -206.809, -11.3731, 0.12 ) }
    dend_14 { pt3dadd( -121.552, -207.618, -11.8941, 0.12 ) }
    dend_14 { pt3dadd( -122.14, -208.27, -12.2775, 0.12 ) }
    dend_14 { pt3dadd( -122.988, -209.191, -12.7165, 0.12 ) }
    dend_14 { pt3dadd( -123.433, -209.66, -12.9382, 0.12 ) }
    dend_14 { pt3dadd( -124.367, -210.62, -13.3463, 0.12 ) }
    dend_14 { pt3dadd( -125.265, -211.563, -13.6192, 0.12 ) }
    dend_14 { pt3dadd( -126.369, -212.741, -13.8623, 0.12 ) }
    dend_14 { pt3dadd( -127.224, -213.663, -14.0067, 0.12 ) }
    dend_14 { pt3dadd( -128.086, -214.577, -14.1024, 0.12 ) }
    dend_14 { pt3dadd( -128.824, -215.314, -14.1513, 0.12 ) }
    dend_14 { pt3dadd( -129.838, -216.191, -14.1233, 0.12 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 82/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -83.9992, -138.39, -17.5933, 0.36 ) }
    dend_13 { pt3dadd( -85.0678, -138.859, -17.624, 0.36 ) }
    dend_13 { pt3dadd( -86.3414, -139.434, -17.6634, 0.36 ) }
    dend_13 { pt3dadd( -87.6436, -140.035, -17.4481, 0.36 ) }
    dend_13 { pt3dadd( -88.683, -140.519, -17.2053, 0.24 ) }
    dend_13 { pt3dadd( -89.8679, -141.058, -16.9288, 0.24 ) }
    dend_13 { pt3dadd( -90.9177, -141.527, -16.7002, 0.24 ) }
    dend_13 { pt3dadd( -92.2167, -142.103, -16.411, 0.24 ) }
    dend_13 { pt3dadd( -95.5511, -143.532, -15.5785, 0.24 ) }
    dend_13 { pt3dadd( -97.694, -144.431, -14.9972, 0.24 ) }
    dend_13 { pt3dadd( -100.354, -145.483, -14.2782, 0.24 ) }
    dend_13 { pt3dadd( -102.239, -146.137, -13.7993, 0.24 ) }
    dend_13 { pt3dadd( -104.489, -146.782, -13.283, 0.24 ) }
    dend_13 { pt3dadd( -106.384, -147.211, -12.8964, 0.24 ) }
    dend_13 { pt3dadd( -108.467, -147.553, -12.5257, 0.24 ) }
    dend_13 { pt3dadd( -110.787, -147.78, -12.0231, 0.24 ) }
    dend_13 { pt3dadd( -112.944, -147.866, -11.4245, 0.24 ) }
    dend_13 { pt3dadd( -114.867, -147.858, -10.7786, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_13 { pt3dadd( -116.415, -147.802, -10.2226, 0.24 ) }
    dend_13 { pt3dadd( -118.42, -147.735, -9.49447, 0.24 ) }
    dend_13 { pt3dadd( -120.975, -147.722, -8.4735, 0.24 ) }
    dend_13 { pt3dadd( -123.747, -147.934, -7.10134, 0.24 ) }
    dend_13 { pt3dadd( -125.566, -148.232, -6.09627, 0.24 ) }
    dend_13 { pt3dadd( -127.351, -148.659, -5.02633, 0.24 ) }
    dend_13 { pt3dadd( -128.816, -149.128, -4.13071, 0.24 ) }
    dend_13 { pt3dadd( -130.684, -149.876, -3.03711, 0.24 ) }
    dend_13 { pt3dadd( -133.681, -151.354, -1.4465, 0.24 ) }
    dend_13 { pt3dadd( -135.572, -152.444, -0.568076, 0.24 ) }
    dend_13 { pt3dadd( -137.484, -153.627, 0.299218, 0.24 ) }
    dend_13 { pt3dadd( -139.538, -154.969, 1.25179, 0.24 ) }
    dend_13 { pt3dadd( -141.051, -155.949, 1.89808, 0.24 ) }
    dend_13 { pt3dadd( -142.75, -157.022, 2.40612, 0.24 ) }
    dend_13 { pt3dadd( -144.505, -158.119, 2.60415, 0.24 ) }
    dend_13 { pt3dadd( -153.365, -160.15, 7.5736, 0.24 ) }
    dend_13 { pt3dadd( -161.577, -163.162, 13.125, 0.24 ) }
    dend_13 { pt3dadd( -169.403, -166.769, 18.8745, 0.24 ) }
    dend_13 { pt3dadd( -176.095, -170.091, 26.0504, 0.24 ) }
    dend_13 { pt3dadd( -184.554, -173.114, 31.2109, 0.24 ) }
    dend_13 { pt3dadd( -194.195, -174.729, 34.6387, 0.24 ) }
    dend_13 { pt3dadd( -203.064, -177.491, 39.225, 0.24 ) }
    dend_13 { pt3dadd( -211.997, -178.859, 44.2893, 0.24 ) }
    dend_13 { pt3dadd( -220.789, -180.177, 49.608, 0.24 ) }
    dend_13 { pt3dadd( -228.211, -182.325, 56.5078, 0.24 ) }
    dend_13 { pt3dadd( -234.266, -184.697, 64.5726, 0.24 ) }
    dend_13 { pt3dadd( -240.137, -185.617, 73.0581, 0.24 ) }
    dend_13 { pt3dadd( -245.211, -186.611, 82.0347, 0.24 ) }
    dend_13 { pt3dadd( -250.576, -186.865, 90.8931, 0.24 ) }
    dend_13 { pt3dadd( -257.008, -189.12, 98.6946, 0.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 30/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -18.3363, -9.92578, 17.1376, 0.72 ) }
    dend_6 { pt3dadd( -19.2159, -10.9545, 18.8386, 0.36 ) }
    dend_6 { pt3dadd( -19.6776, -11.4946, 19.7316, 0.36 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -18.3363, -9.92578, 17.1376, 0.72 ) }
    dend_3 { pt3dadd( -20.1133, -8.12228, 17.5914, 0.72 ) }
    dend_3 { pt3dadd( -21.2582, -7.18617, 18.0045, 0.72 ) }
    dend_3 { pt3dadd( -22.3811, -6.41407, 18.5532, 0.72 ) }
    dend_3 { pt3dadd( -22.9653, -6.0317, 18.8753, 0.6 ) }
    dend_3 { pt3dadd( -23.9435, -5.3899, 19.4537, 0.6 ) }
    dend_3 { pt3dadd( -24.6191, -4.93219, 19.8789, 0.6 ) }
    dend_3 { pt3dadd( -26.2994, -3.92014, 21.0776, 0.6 ) }
    dend_3 { pt3dadd( -27.6629, -3.21169, 22.0643, 0.6 ) }
    dend_3 { pt3dadd( -28.5572, -2.82884, 22.688, 0.6 ) }
    dend_3 { pt3dadd( -29.291, -2.5615, 23.1861, 0.6 ) }
    dend_3 { pt3dadd( -30.4186, -2.23181, 23.9182, 0.6 ) }
    dend_3 { pt3dadd( -31.7681, -2.03907, 24.8737, 0.6 ) }
    dend_3 { pt3dadd( -32.6124, -2.08803, 25.4668, 0.6 ) }
    dend_3 { pt3dadd( -33.719, -2.30884, 26.2517, 0.6 ) }
    dend_3 { pt3dadd( -34.6464, -2.57776, 26.9298, 0.6 ) }
    dend_3 { pt3dadd( -35.5672, -2.89384, 27.6075, 0.6 ) }
    dend_3 { pt3dadd( -38.0951, -3.92011, 29.475, 0.6 ) }
    dend_3 { pt3dadd( -38.7264, -4.19181, 29.9404, 0.6 ) }
    dend_3 { pt3dadd( -39.2641, -4.40531, 30.3294, 0.48 ) }
    dend_3 { pt3dadd( -39.8815, -4.61259, 30.7227, 0.48 ) }
    dend_3 { pt3dadd( -40.5916, -4.79248, 31.0521, 0.48 ) }
    dend_3 { pt3dadd( -41.3283, -4.87048, 31.2581, 0.48 ) }
    dend_3 { pt3dadd( -42.5058, -4.79938, 31.5395, 0.48 ) }
    dend_3 { pt3dadd( -43.6013, -4.60228, 31.8814, 0.48 ) }
    dend_3 { pt3dadd( -44.5576, -4.38621, 32.2161, 0.48 ) }
    dend_3 { pt3dadd( -45.7298, -4.13704, 32.6425, 0.48 ) }
    dend_3 { pt3dadd( -47.9438, -3.74206, 33.4455, 0.48 ) }
    dend_3 { pt3dadd( -50.2768, -3.38683, 34.2731, 0.48 ) }
    dend_3 { pt3dadd( -51.5703, -3.20703, 34.7153, 0.48 ) }
    dend_3 { pt3dadd( -52.7386, -3.04981, 35.0919, 0.48 ) }
    dend_3 { pt3dadd( -54.6705, -2.77496, 35.646, 0.48 ) }
    dend_3 { pt3dadd( -56.4571, -2.53482, 36.0889, 0.48 ) }
    dend_3 { pt3dadd( -57.5958, -2.43692, 36.3273, 0.48 ) }
    dend_3 { pt3dadd( -59.5403, -2.37627, 36.6431, 0.48 ) }
    dend_3 { pt3dadd( -61.1195, -2.35205, 36.9035, 0.48 ) }
    dend_3 { pt3dadd( -62.8536, -2.28695, 37.2037, 0.48 ) }
    dend_3 { pt3dadd( -64.2043, -2.16411, 37.447, 0.48 ) }
    dend_3 { pt3dadd( -65.3625, -2.03001, 37.6665, 0.48 ) }
    dend_3 { pt3dadd( -66.8185, -1.92472, 37.9547, 0.48 ) }
    dend_3 { pt3dadd( -67.9695, -2.02144, 38.1927, 0.48 ) }
    dend_3 { pt3dadd( -69.6112, -2.46409, 38.5799, 0.48 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 75/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -21.2333, 75.487, -16.1611, 1.08 ) }
    apic_10 { pt3dadd( -21.6554, 77.6562, -16.15, 0.96 ) }
    apic_10 { pt3dadd( -21.9736, 79.4046, -16.123, 0.96 ) }
    apic_10 { pt3dadd( -22.3118, 81.5906, -16.0648, 0.96 ) }
    apic_10 { pt3dadd( -22.5233, 83.3741, -15.9887, 0.96 ) }
    apic_10 { pt3dadd( -22.6476, 84.727, -15.9138, 0.96 ) }
    apic_10 { pt3dadd( -22.8743, 87.1945, -15.7773, 0.96 ) }
    apic_10 { pt3dadd( -22.9927, 88.6368, -15.6663, 0.96 ) }
    apic_10 { pt3dadd( -23.0872, 90.5475, -15.4978, 0.96 ) }
    apic_10 { pt3dadd( -23.1064, 92.6027, -15.3066, 0.84 ) }
    apic_10 { pt3dadd( -23.0986, 94.1792, -15.149, 0.84 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 86/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -21.2333, 75.487, -16.1611, 1.08 ) }
    apic_9 { pt3dadd( -19.1049, 78.2084, -18.6659, 0.24 ) }
    apic_9 { pt3dadd( -18.0529, 79.625, -19.935, 0.24 ) }
    apic_9 { pt3dadd( -17.2043, 80.7101, -20.866, 0.24 ) }
    apic_9 { pt3dadd( -15.5109, 82.6924, -22.4311, 0.24 ) }
    apic_9 { pt3dadd( -13.7902, 84.6204, -23.9721, 0.24 ) }
    apic_9 { pt3dadd( -12.4727, 86.0094, -25.0736, 0.24 ) }
    apic_9 { pt3dadd( -11.6735, 86.8728, -25.632, 0.24 ) }
    apic_9 { pt3dadd( -10.4495, 88.2092, -26.4442, 0.24 ) }
    apic_9 { pt3dadd( -9.18472, 89.6835, -27.2139, 0.24 ) }
    apic_9 { pt3dadd( -7.35148, 91.8929, -28.1391, 0.24 ) }
    apic_9 { pt3dadd( -6.06604, 93.6784, -28.8367, 0.24 ) }
    apic_9 { pt3dadd( -4.65729, 95.7562, -29.6626, 0.24 ) }
    apic_9 { pt3dadd( -3.48129, 97.7128, -30.4216, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_9 { pt3dadd( -2.45833, 99.8295, -31.3085, 0.24 ) }
    apic_9 { pt3dadd( -1.65368, 101.882, -32.1783, 0.24 ) }
    apic_9 { pt3dadd( -0.654075, 104.884, -33.3631, 0.24 ) }
    apic_9 { pt3dadd( 0.0917357, 107.473, -34.4049, 0.24 ) }
    apic_9 { pt3dadd( 0.734608, 110.124, -35.5657, 0.24 ) }
    apic_9 { pt3dadd( 1.38383, 113.221, -36.9385, 0.24 ) }
    apic_9 { pt3dadd( 1.6871, 114.853, -37.6338, 0.24 ) }
    apic_9 { pt3dadd( 2.06492, 116.882, -38.449, 0.24 ) }
    apic_9 { pt3dadd( 2.57718, 119.508, -39.4916, 0.24 ) }
    apic_9 { pt3dadd( 3.45385, 123.759, -41.2798, 0.24 ) }
    apic_9 { pt3dadd( 4.18085, 126.521, -42.5936, 0.24 ) }
    apic_9 { pt3dadd( 4.83761, 128.354, -43.5778, 0.24 ) }
    apic_9 { pt3dadd( 5.46539, 129.802, -44.5583, 0.24 ) }
    apic_9 { pt3dadd( 6.61193, 132.145, -46.5068, 0.24 ) }
    apic_9 { pt3dadd( 7.60327, 133.834, -48.2603, 0.24 ) }
    apic_9 { pt3dadd( 8.86231, 135.621, -50.4632, 0.24 ) }
    apic_9 { pt3dadd( 9.96291, 136.998, -52.391, 0.24 ) }
    apic_9 { pt3dadd( 11.4068, 138.547, -54.6507, 0.24 ) }
    apic_9 { pt3dadd( 12.3391, 139.498, -55.9656, 0.24 ) }
    apic_9 { pt3dadd( 13.636, 140.851, -57.6359, 0.24 ) }
    apic_9 { pt3dadd( 14.2307, 141.552, -58.3663, 0.24 ) }
    apic_9 { pt3dadd( 15.8425, 143.656, -60.104, 0.24 ) }
    apic_9 { pt3dadd( 17.2523, 145.681, -61.4815, 0.24 ) }
    apic_9 { pt3dadd( 18.3965, 147.388, -62.4402, 0.24 ) }
    apic_9 { pt3dadd( 20.0055, 149.912, -63.8102, 0.24 ) }
    apic_9 { pt3dadd( 21.1934, 151.908, -64.8566, 0.24 ) }
    apic_9 { pt3dadd( 22.3256, 153.876, -65.9309, 0.24 ) }
    apic_9 { pt3dadd( 22.8219, 154.845, -66.4653, 0.24 ) }
    apic_9 { pt3dadd( 23.1738, 155.564, -66.8581, 0.24 ) }
    apic_9 { pt3dadd( 24.2397, 157.519, -67.8991, 0.24 ) }
    apic_9 { pt3dadd( 25.3113, 159.155, -68.7482, 0.24 ) }
    apic_9 { pt3dadd( 26.0673, 160.209, -69.3108, 0.24 ) }
    apic_9 { pt3dadd( 26.9679, 161.447, -69.9179, 0.24 ) }
    apic_9 { pt3dadd( 27.772, 162.548, -70.4218, 0.24 ) }
    apic_9 { pt3dadd( 28.7042, 163.934, -71.0274, 0.24 ) }
    apic_9 { pt3dadd( 29.5527, 165.428, -71.7165, 0.24 ) }
    apic_9 { pt3dadd( 30.2206, 166.77, -72.4074, 0.24 ) }
    apic_9 { pt3dadd( 30.8789, 168.303, -73.2899, 0.24 ) }
    apic_9 { pt3dadd( 31.6167, 170.31, -74.5461, 0.24 ) }
    apic_9 { pt3dadd( 32.2241, 172.195, -75.8238, 0.24 ) }
    apic_9 { pt3dadd( 33.0889, 175.222, -78.0285, 0.24 ) }
    apic_9 { pt3dadd( 33.3818, 176.257, -78.8473, 0.24 ) }
    apic_9 { pt3dadd( 33.8386, 177.951, -80.3261, 0.12 ) }
    apic_9 { pt3dadd( 34.235, 179.395, -81.6335, 0.12 ) }
    apic_9 { pt3dadd( 34.7386, 181.407, -83.514, 0.12 ) }
    apic_9 { pt3dadd( 35.0187, 182.777, -84.7916, 0.12 ) }
    apic_9 { pt3dadd( 35.3081, 184.683, -86.5844, 0.12 ) }
    apic_9 { pt3dadd( 35.4861, 186.955, -88.7179, 0.12 ) }
    apic_9 { pt3dadd( 35.5509, 188.471, -90.0843, 0.12 ) }
    apic_9 { pt3dadd( 35.5963, 191.725, -92.8184, 0.12 ) }
    apic_9 { pt3dadd( 35.608, 193.699, -94.3667, 0.12 ) }
    apic_9 { pt3dadd( 35.6333, 195.613, -95.7128, 0.12 ) }
    apic_9 { pt3dadd( 35.7092, 197.408, -96.8191, 0.12 ) }
    apic_9 { pt3dadd( 35.8762, 198.9, -97.6381, 0.12 ) }
    apic_9 { pt3dadd( 36.2785, 202.066, -99.3243, 0.12 ) }
    apic_9 { pt3dadd( 36.5717, 204.118, -100.401, 0.12 ) }
    apic_9 { pt3dadd( 36.7376, 205.818, -101.525, 0.12 ) }
    apic_9 { pt3dadd( 36.8854, 207.992, -103.107, 0.12 ) }
    apic_9 { pt3dadd( 36.9527, 209.677, -104.392, 0.12 ) }
    apic_9 { pt3dadd( 37.0281, 214.048, -107.832, 0.12 ) }
    apic_9 { pt3dadd( 37.0369, 216.397, -109.704, 0.12 ) }
    apic_9 { pt3dadd( 37.1259, 222.425, -114.554, 0.12 ) }
    apic_9 { pt3dadd( 37.217, 224.472, -116.211, 0.12 ) }
    apic_9 { pt3dadd( 37.3832, 226.557, -117.859, 0.12 ) }
    apic_9 { pt3dadd( 37.793, 229.488, -120.02, 0.12 ) }
    apic_9 { pt3dadd( 38.3368, 231.847, -121.516, 0.12 ) }
    apic_9 { pt3dadd( 38.8648, 233.627, -122.463, 0.12 ) }
    apic_9 { pt3dadd( 39.9931, 236.447, -123.767, 0.12 ) }
    apic_9 { pt3dadd( 40.6038, 237.781, -124.505, 0.12 ) }
    apic_9 { pt3dadd( 41.7101, 240.037, -126.004, 0.12 ) }
    apic_9 { pt3dadd( 42.8329, 242.298, -127.57, 0.12 ) }
    apic_9 { pt3dadd( 43.3654, 243.348, -128.32, 0.12 ) }
    apic_9 { pt3dadd( 44.507, 245.618, -129.987, 0.12 ) }
    apic_9 { pt3dadd( 45.9568, 248.409, -132.202, 0.12 ) }
    apic_9 { pt3dadd( 48.0999, 252.563, -135.742, 0.12 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 75/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -17.5222, 41.4341, -26.5562, 0.48 ) }
    apic_7 { pt3dadd( -16.4214, 41.3502, -30.0951, 0.48 ) }
    apic_7 { pt3dadd( -15.7609, 41.6627, -32.9866, 0.48 ) }
    apic_7 { pt3dadd( -15.5538, 41.8691, -34.0281, 0.48 ) }
    apic_7 { pt3dadd( -14.9542, 42.7041, -37.9316, 0.36 ) }
    apic_7 { pt3dadd( -14.8111, 42.9445, -38.8795, 0.36 ) }
    apic_7 { pt3dadd( -14.496, 43.8775, -41.9319, 0.36 ) }
    apic_7 { pt3dadd( -14.176, 45.34, -45.7263, 0.36 ) }
    apic_7 { pt3dadd( -14.1022, 45.8285, -46.7425, 0.36 ) }
    apic_7 { pt3dadd( -13.9646, 47.1341, -49.0456, 0.36 ) }
    apic_7 { pt3dadd( -13.8165, 48.9509, -51.7171, 0.36 ) }
    apic_7 { pt3dadd( -13.6337, 50.4704, -53.759, 0.36 ) }
    apic_7 { pt3dadd( -13.4557, 51.6624, -55.2216, 0.36 ) }
    apic_7 { pt3dadd( -13.0003, 54.0038, -58.2096, 0.24 ) }
    apic_7 { pt3dadd( -12.833, 54.7917, -59.249, 0.24 ) }
    apic_7 { pt3dadd( -12.5931, 55.8795, -60.8448, 0.24 ) }
    apic_7 { pt3dadd( -12.4165, 56.8905, -62.5719, 0.24 ) }
    apic_7 { pt3dadd( -12.272, 57.6794, -64.1032, 0.24 ) }
    apic_7 { pt3dadd( -12.1223, 59.3701, -67.6841, 0.24 ) }
    apic_7 { pt3dadd( -12.1508, 60.0584, -69.1438, 0.24 ) }
    apic_7 { pt3dadd( -12.1649, 61.5135, -72.0594, 0.24 ) }
    apic_7 { pt3dadd( -12.1444, 62.5901, -73.9624, 0.24 ) }
    apic_7 { pt3dadd( -12.0102, 64.4273, -77.0047, 0.24 ) }
    apic_7 { pt3dadd( -11.8003, 65.542, -78.7438, 0.24 ) }
    apic_7 { pt3dadd( -11.5172, 66.6427, -80.2918, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_7 { pt3dadd( -10.282, 70.2578, -85.0072, 0.12 ) }
    apic_7 { pt3dadd( -9.77152, 71.4554, -86.4447, 0.12 ) }
    apic_7 { pt3dadd( -8.3564, 74.1141, -89.5617, 0.12 ) }
    apic_7 { pt3dadd( -6.36252, 77.4538, -93.3383, 0.12 ) }
    apic_7 { pt3dadd( -5.48511, 78.745, -94.7608, 0.12 ) }
    apic_7 { pt3dadd( -4.37334, 80.252, -96.4335, 0.12 ) }
    apic_7 { pt3dadd( -2.32104, 82.9101, -99.3209, 0.12 ) }
    apic_7 { pt3dadd( -0.360007, 85.3242, -101.948, 0.12 ) }
    apic_7 { pt3dadd( 0.87938, 86.8416, -103.399, 0.12 ) }
    apic_7 { pt3dadd( 1.74421, 87.8619, -104.317, 0.12 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 10/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -17.5222, 41.4341, -26.5562, 0.48 ) }
    apic_6 { pt3dadd( -19.1416, 41.8611, -27.7115, 0.24 ) }
    apic_6 { pt3dadd( -19.9809, 42.2491, -28.9341, 0.24 ) }
    apic_6 { pt3dadd( -20.3456, 42.3785, -29.548, 0.24 ) }
    apic_6 { pt3dadd( -20.9649, 42.5063, -30.5897, 0.24 ) }
    apic_6 { pt3dadd( -21.5095, 42.545, -31.4783, 0.24 ) }
    apic_6 { pt3dadd( -23.3425, 42.5377, -34.3444, 0.24 ) }
    apic_6 { pt3dadd( -24.0142, 42.5258, -35.6183, 0.24 ) }
    apic_6 { pt3dadd( -24.6748, 42.5332, -36.9614, 0.24 ) }
    apic_6 { pt3dadd( -25.1046, 42.5774, -37.9069, 0.24 ) }
    apic_6 { pt3dadd( -25.5853, 42.6664, -39.0096, 0.24 ) }
    apic_6 { pt3dadd( -26.0893, 42.7228, -40.2642, 0.24 ) }
    apic_6 { pt3dadd( -26.736, 42.77, -42.0365, 0.24 ) }
    apic_6 { pt3dadd( -27.3036, 42.8269, -43.8354, 0.24 ) }
    apic_6 { pt3dadd( -27.9341, 42.9262, -45.959, 0.24 ) }
    apic_6 { pt3dadd( -28.1048, 42.9744, -46.5535, 0.24 ) }
    apic_6 { pt3dadd( -28.6996, 43.1771, -48.5974, 0.24 ) }
    apic_6 { pt3dadd( -29.2007, 43.3341, -50.1582, 0.24 ) }
    apic_6 { pt3dadd( -29.7357, 43.4252, -51.5597, 0.24 ) }
    apic_6 { pt3dadd( -30.2013, 43.478, -52.7159, 0.24 ) }
    apic_6 { pt3dadd( -30.8511, 43.5232, -54.2026, 0.24 ) }
    apic_6 { pt3dadd( -31.516, 43.5668, -55.6401, 0.24 ) }
    apic_6 { pt3dadd( -32.0114, 43.5892, -56.552, 0.24 ) }
    apic_6 { pt3dadd( -32.6329, 43.5707, -57.5901, 0.24 ) }
    apic_6 { pt3dadd( -33.6879, 43.4115, -59.2817, 0.24 ) }
    apic_6 { pt3dadd( -34.6593, 43.0839, -60.8602, 0.24 ) }
    apic_6 { pt3dadd( -35.1285, 42.8952, -61.5597, 0.24 ) }
    apic_6 { pt3dadd( -36.2254, 42.4801, -62.9486, 0.24 ) }
    apic_6 { pt3dadd( -37.2891, 42.0754, -64.1871, 0.24 ) }
    apic_6 { pt3dadd( -38.444, 41.6441, -65.4571, 0.24 ) }
    apic_6 { pt3dadd( -39.6593, 41.179, -66.6432, 0.24 ) }
    apic_6 { pt3dadd( -41.0966, 40.6407, -67.9805, 0.24 ) }
    apic_6 { pt3dadd( -42.2319, 40.2944, -68.9862, 0.24 ) }
    apic_6 { pt3dadd( -43.6305, 40.0183, -70.1025, 0.24 ) }
    apic_6 { pt3dadd( -44.906, 39.9781, -70.9036, 0.24 ) }
    apic_6 { pt3dadd( -46.4877, 40.258, -71.5026, 0.24 ) }
    apic_6 { pt3dadd( -47.3399, 40.576, -71.6447, 0.24 ) }
    apic_6 { pt3dadd( -49.2457, 41.5994, -71.6992, 0.24 ) }
    apic_6 { pt3dadd( -50.5737, 42.5549, -71.6979, 0.24 ) }
    apic_6 { pt3dadd( -52.0767, 43.6597, -71.5497, 0.24 ) }
    apic_6 { pt3dadd( -54.4361, 45.3537, -71.226, 0.24 ) }
    apic_6 { pt3dadd( -55.6624, 46.1916, -71.0975, 0.24 ) }
    apic_6 { pt3dadd( -56.8468, 46.9158, -71.0206, 0.24 ) }
    apic_6 { pt3dadd( -58.9634, 47.9515, -71.0988, 0.24 ) }
    apic_6 { pt3dadd( -61.9911, 49.1193, -71.632, 0.24 ) }
    apic_6 { pt3dadd( -63.4286, 49.5757, -72.0939, 0.24 ) }
    apic_6 { pt3dadd( -66.2589, 50.372, -73.3129, 0.24 ) }
    apic_6 { pt3dadd( -66.9857, 50.5627, -73.6539, 0.24 ) }
    apic_6 { pt3dadd( -69.0848, 51.1617, -74.8744, 0.24 ) }
    apic_6 { pt3dadd( -70.3221, 51.585, -75.7526, 0.24 ) }
    apic_6 { pt3dadd( -71.7236, 52.296, -77.1211, 0.24 ) }
    apic_6 { pt3dadd( -72.0714, 52.5077, -77.518, 0.24 ) }
    apic_6 { pt3dadd( -72.9824, 53.1034, -78.7131, 0.24 ) }
    apic_6 { pt3dadd( -74.4275, 54.0043, -80.6676, 0.24 ) }
    apic_6 { pt3dadd( -75.1059, 54.381, -81.5825, 0.24 ) }
    apic_6 { pt3dadd( -76.6618, 54.9822, -83.8125, 0.24 ) }
    apic_6 { pt3dadd( -77.1136, 55.0742, -84.4501, 0.24 ) }
    apic_6 { pt3dadd( -77.8775, 55.1034, -85.4297, 0.24 ) }
    apic_6 { pt3dadd( -78.9822, 54.9545, -86.8237, 0.24 ) }
    apic_6 { pt3dadd( -79.7731, 54.7556, -87.9018, 0.24 ) }
    apic_6 { pt3dadd( -80.508, 54.5423, -89.0684, 0.24 ) }
    apic_6 { pt3dadd( -81.1878, 54.3821, -90.4284, 0.24 ) }
    apic_6 { pt3dadd( -81.8516, 54.3571, -92.0624, 0.24 ) }
    apic_6 { pt3dadd( -82.5563, 54.4866, -94.3298, 0.24 ) }
    apic_6 { pt3dadd( -83.4795, 54.8574, -97.5383, 0.24 ) }
    apic_6 { pt3dadd( -83.9191, 55.0758, -98.913, 0.24 ) }
    apic_6 { pt3dadd( -84.7738, 55.5385, -101.352, 0.24 ) }
    apic_6 { pt3dadd( -85.0931, 55.7066, -102.17, 0.24 ) }
    apic_6 { pt3dadd( -86.2773, 56.2485, -104.333, 0.24 ) }
    apic_6 { pt3dadd( -87.5088, 56.6719, -106.072, 0.24 ) }
    apic_6 { pt3dadd( -89.0065, 56.9948, -107.824, 0.24 ) }
    apic_6 { pt3dadd( -89.7865, 57.0823, -108.661, 0.24 ) }
    apic_6 { pt3dadd( -90.7069, 57.1732, -109.518, 0.24 ) }
    apic_6 { pt3dadd( -93.0453, 57.3839, -111.938, 0.24 ) }
    apic_6 { pt3dadd( -94.8093, 57.5054, -113.892, 0.24 ) }
    apic_6 { pt3dadd( -95.5263, 57.5013, -114.76, 0.24 ) }
    apic_6 { pt3dadd( -96.4032, 57.4454, -115.823, 0.24 ) }
    apic_6 { pt3dadd( -98.4611, 57.3041, -118.261, 0.24 ) }
    apic_6 { pt3dadd( -101.073, 57.2096, -121.364, 0.24 ) }
    apic_6 { pt3dadd( -102.331, 57.1744, -122.751, 0.24 ) }
    apic_6 { pt3dadd( -104.01, 57.1992, -124.515, 0.24 ) }
    apic_6 { pt3dadd( -105.55, 57.3134, -126.168, 0.24 ) }
    apic_6 { pt3dadd( -107.49, 57.6009, -128.427, 0.24 ) }
    apic_6 { pt3dadd( -108.388, 57.7981, -129.504, 0.24 ) }
    apic_6 { pt3dadd( -109.608, 58.1568, -130.832, 0.24 ) }
    apic_6 { pt3dadd( -111.546, 58.9222, -133.153, 0.24 ) }
    apic_6 { pt3dadd( -112.409, 59.3698, -134.357, 0.24 ) }
    apic_6 { pt3dadd( -113.662, 60.1357, -136.406, 0.24 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 60.2589, -100.772, 5.06751, 0.36 ) }
    dend_30 { pt3dadd( 61.1815, -102.025, 4.6531, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_30 { pt3dadd( 62.3956, -103.856, 4.25324, 0.36 ) }
    dend_30 { pt3dadd( 63.3138, -105.299, 4.02103, 0.36 ) }
    dend_30 { pt3dadd( 64.0253, -106.465, 3.87048, 0.36 ) }
    dend_30 { pt3dadd( 65.0321, -108.086, 3.68303, 0.36 ) }
    dend_30 { pt3dadd( 66.143, -109.865, 3.4911, 0.36 ) }
    dend_30 { pt3dadd( 67.0294, -111.353, 3.39926, 0.36 ) }
    dend_30 { pt3dadd( 67.2822, -111.761, 3.39215, 0.36 ) }
    dend_30 { pt3dadd( 68.0289, -112.967, 3.36288, 0.36 ) }
    dend_30 { pt3dadd( 68.6269, -113.937, 3.3114, 0.36 ) }
    dend_30 { pt3dadd( 69.4535, -115.149, 3.20835, 0.36 ) }
    dend_30 { pt3dadd( 70.092, -116.058, 3.06199, 0.36 ) }
    dend_30 { pt3dadd( 70.6654, -116.835, 2.91069, 0.36 ) }
    dend_30 { pt3dadd( 71.351, -117.766, 2.71002, 0.36 ) }
    dend_30 { pt3dadd( 71.974, -118.619, 2.52509, 0.36 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 14/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 60.2589, -100.772, 5.06751, 0.36 ) }
    dend_29 { pt3dadd( 58.3632, -103.013, 5.18535, 0.36 ) }
    dend_29 { pt3dadd( 43.149, -125.835, 3.252, 0.36 ) }
    dend_29 { pt3dadd( 36.8072, -137.982, 1.63454, 0.36 ) }
    dend_29 { pt3dadd( 31.6147, -150.463, -1.12769, 0.36 ) }
    dend_29 { pt3dadd( 24.2063, -161.53, -4.73453, 0.36 ) }
    dend_29 { pt3dadd( 17.612, -173.571, -6.11503, 0.36 ) }
    dend_29 { pt3dadd( 10.4557, -184.866, -9.52158, 0.36 ) }
    dend_29 { pt3dadd( 2.43355, -195.322, -13.6056, 0.36 ) }
    dend_29 { pt3dadd( -3.9789, -205.463, -20.4189, 0.36 ) }
    dend_29 { pt3dadd( -11.3788, -215.922, -25.5405, 0.36 ) }
    dend_29 { pt3dadd( -18.0102, -226.681, -31.0769, 0.36 ) }
    dend_29 { pt3dadd( -23.0427, -238.527, -36.0476, 0.36 ) }
    dend_29 { pt3dadd( -28.8692, -250.307, -40.2514, 0.36 ) }
    dend_29 { pt3dadd( -34.607, -262.446, -43.4304, 0.36 ) }
    dend_29 { pt3dadd( -38.7713, -275.424, -45.5762, 0.36 ) }
    dend_29 { pt3dadd( -40.7898, -288.936, -47.5076, 0.36 ) }
    dend_29 { pt3dadd( -42.52, -302.253, -50.6743, 0.36 ) }
    dend_29 { pt3dadd( -42.6156, -314.819, -56.3715, 0.36 ) }
    dend_29 { pt3dadd( -43.4209, -327.56, -61.6065, 0.36 ) }
    dend_29 { pt3dadd( -45.7876, -339.583, -67.9485, 0.36 ) }
    dend_29 { pt3dadd( -50.6371, -349.297, -76.4629, 0.36 ) }
    dend_29 { pt3dadd( -55.7229, -359.421, -84.339, 0.36 ) }
    dend_29 { pt3dadd( -58.9322, -369.767, -92.885, 0.36 ) }
    dend_29 { pt3dadd( -60.8887, -381.184, -100.381, 0.36 ) }
    dend_29 { pt3dadd( -60.924, -390.984, -110.094, 0.36 ) }
    dend_29 { pt3dadd( -60.2109, -402.39, -117.826, 0.36 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 41/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 52.4734, -78.6893, 5.84438, 0.36 ) }
    dend_27 { pt3dadd( 53.2533, -80.0199, 6.06804, 0.24 ) }
    dend_27 { pt3dadd( 53.8539, -80.8338, 6.21613, 0.24 ) }
    dend_27 { pt3dadd( 54.9101, -82.127, 6.44376, 0.24 ) }
    dend_27 { pt3dadd( 55.4167, -82.7514, 6.56613, 0.24 ) }
    dend_27 { pt3dadd( 56.0819, -83.5703, 6.7684, 0.12 ) }
    dend_27 { pt3dadd( 56.7675, -84.4265, 6.99708, 0.12 ) }
    dend_27 { pt3dadd( 57.6325, -85.3687, 7.31999, 0.12 ) }
    dend_27 { pt3dadd( 58.0419, -85.7947, 7.48367, 0.12 ) }
    dend_27 { pt3dadd( 58.9065, -86.6963, 7.86031, 0.24 ) }
    dend_27 { pt3dadd( 60.0167, -87.8779, 8.40606, 0.24 ) }
    dend_27 { pt3dadd( 60.5056, -88.4456, 8.66156, 0.24 ) }
    dend_27 { pt3dadd( 61.0361, -89.17, 8.91054, 0.24 ) }
    dend_27 { pt3dadd( 61.6383, -90.2051, 9.18076, 0.24 ) }
    dend_27 { pt3dadd( 62.1939, -91.5004, 9.3396, 0.24 ) }
    dend_27 { pt3dadd( 62.474, -92.4773, 9.33615, 0.24 ) }
    dend_27 { pt3dadd( 62.7869, -94.019, 9.22126, 0.24 ) }
    dend_27 { pt3dadd( 63.0374, -95.9442, 8.98578, 0.12 ) }
    dend_27 { pt3dadd( 63.0965, -97.449, 8.70997, 0.12 ) }
    dend_27 { pt3dadd( 62.9467, -99.6048, 8.16482, 0.12 ) }
    dend_27 { pt3dadd( 62.8625, -100.061, 8.01623, 0.12 ) }
    dend_27 { pt3dadd( 66.6309, -106.145, 7.8156, 0.12 ) }
    dend_27 { pt3dadd( 70.453, -112.198, 7.72716, 0.12 ) }
    dend_27 { pt3dadd( 75.0458, -117.56, 6.54003, 0.12 ) }
    dend_27 { pt3dadd( 78.8898, -123.216, 4.42126, 0.12 ) }
    dend_27 { pt3dadd( 83.2424, -128.774, 3.22867, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 67/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 52.4734, -78.6893, 5.84438, 0.36 ) }
    dend_26 { pt3dadd( 51.3595, -77.4258, 5.97372, 0.24 ) }
    dend_26 { pt3dadd( 50.4878, -76.4369, 6.07494, 0.24 ) }
    dend_26 { pt3dadd( 49.2614, -75.0459, 6.21732, 0.24 ) }
    dend_26 { pt3dadd( 46.8035, -72.2578, 6.50271, 0.24 ) }
    dend_26 { pt3dadd( 43.8304, -68.8853, 6.84791, 0.24 ) }
    dend_26 { pt3dadd( 38.2133, -60.5924, 7.46654, 0.24 ) }
    dend_26 { pt3dadd( 33.6265, -51.6668, 7.49887, 0.24 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 75/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -19.6776, -11.4946, 19.7316, 0.36 ) }
    dend_8 { pt3dadd( -21.4729, -13.4054, 20.9009, 0.36 ) }
    dend_8 { pt3dadd( -22.5785, -14.5821, 21.621, 0.36 ) }
    dend_8 { pt3dadd( -23.9373, -16.0282, 22.506, 0.36 ) }
    dend_8 { pt3dadd( -24.9858, -17.1442, 23.1889, 0.36 ) }
    dend_8 { pt3dadd( -33.8091, -24.3507, 28.1006, 0.36 ) }
    dend_8 { pt3dadd( -42.2336, -31.2312, 34.0668, 0.36 ) }
    dend_8 { pt3dadd( -51.3093, -37.0653, 40.1907, 0.36 ) }
    dend_8 { pt3dadd( -59.6595, -44.6506, 45.3527, 0.36 ) }
    dend_8 { pt3dadd( -75.0146, -60.5297, 56.63, 0.36 ) }
    dend_8 { pt3dadd( -84.1163, -67.2218, 61.7568, 0.36 ) }
    dend_8 { pt3dadd( -93.7721, -71.3752, 68.3463, 0.36 ) }
    dend_8 { pt3dadd( -103.772, -74.459, 75.0098, 0.36 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -19.6776, -11.4946, 19.7316, 0.36 ) }
    dend_7 { pt3dadd( -20.1494, -10.0534, 22.8248, 0.36 ) }
    dend_7 { pt3dadd( -20.4819, -9.03764, 25.0049, 0.36 ) }
    dend_7 { pt3dadd( -22.8736, -5.11444, 35.2914, 0.36 ) }
    dend_7 { pt3dadd( -24.9997, -1.42367, 45.7212, 0.36 ) }
    dend_7 { pt3dadd( -27.3048, 2.36928, 56.0761, 0.36 ) }
    dend_7 { pt3dadd( -30.9799, 6.49527, 65.8942, 0.36 ) }
    dend_7 { pt3dadd( -33.4413, 9.27941, 76.5297, 0.36 ) }
    dend_7 { pt3dadd( -38.0873, 12.41, 86.304, 0.36 ) }
    dend_7 { pt3dadd( -41.9296, 15.9281, 96.2932, 0.36 ) }
    dend_7 { pt3dadd( -45.9115, 20.3067, 105.879, 0.36 ) }
    dend_7 { pt3dadd( -50.548, 22.022, 116.003, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_7 { pt3dadd( -52.9581, 24.1336, 126.804, 0.36 ) }
    dend_7 { pt3dadd( -55.1427, 25.6735, 137.748, 0.36 ) }
    dend_7 { pt3dadd( -56.084, 25.6459, 148.975, 0.36 ) }
    dend_7 { pt3dadd( -56.7461, 26.8894, 160.152, 0.36 ) }
    dend_7 { pt3dadd( -58.1161, 30.9571, 170.569, 0.36 ) }
    dend_7 { pt3dadd( -57.6358, 34.6887, 181.188, 0.36 ) }
    dend_7 { pt3dadd( -59.2174, 38.684, 191.602, 0.36 ) }
    dend_7 { pt3dadd( -61.3473, 42.3978, 202.023, 0.36 ) }
    dend_7 { pt3dadd( -62.7513, 44.7572, 212.95, 0.36 ) }
    dend_7 { pt3dadd( -63.6344, 46.829, 223.988, 0.36 ) }
    dend_7 { pt3dadd( -64.7902, 47.1982, 235.189, 0.36 ) }
    dend_7 { pt3dadd( -66.8968, 47.107, 246.256, 0.36 ) }
    dend_7 { pt3dadd( -70.0773, 46.1134, 257.018, 0.36 ) }
    dend_7 { pt3dadd( -71.884, 45.9665, 268.137, 0.36 ) }
    dend_7 { pt3dadd( -75.945, 46.8748, 278.606, 0.36 ) }
    dend_7 { pt3dadd( -78.8891, 46.4138, 289.471, 0.36 ) }
    dend_7 { pt3dadd( -82.4742, 44.0883, 299.895, 0.36 ) }
    dend_7 { pt3dadd( -84.4711, 41.9723, 310.779, 0.36 ) }
    dend_7 { pt3dadd( -85.3479, 38.6491, 321.508, 0.36 ) }
    dend_7 { pt3dadd( -86.9558, 33.2137, 331.245, 0.36 ) }
    dend_7 { pt3dadd( -89.7543, 27.0448, 340.247, 0.36 ) }
    dend_7 { pt3dadd( -90.9375, 21.4514, 349.954, 0.36 ) }
    dend_7 { pt3dadd( -90.4972, 14.9199, 359.123, 0.36 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 23/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -69.6112, -2.46409, 38.5799, 0.48 ) }
    dend_5 { pt3dadd( -72.9094, -2.5913, 38.8253, 0.48 ) }
    dend_5 { pt3dadd( -75.0586, -2.6742, 38.9852, 0.48 ) }
    dend_5 { pt3dadd( -76.6277, -2.73472, 39.1019, 0.48 ) }
    dend_5 { pt3dadd( -78.0256, -2.78863, 39.2059, 0.48 ) }
    dend_5 { pt3dadd( -79.6662, -2.85191, 39.328, 0.48 ) }
    dend_5 { pt3dadd( -82.4387, -2.95886, 39.5343, 0.48 ) }
    dend_5 { pt3dadd( -92.75, -4.44133, 40.7296, 0.48 ) }
    dend_5 { pt3dadd( -103.204, -5.2526, 40.7402, 0.48 ) }
    dend_5 { pt3dadd( -113.613, -6.03548, 39.7457, 0.48 ) }
    dend_5 { pt3dadd( -123.83, -8.22004, 38.855, 0.48 ) }
    dend_5 { pt3dadd( -133.928, -10.5576, 37.2704, 0.48 ) }
    dend_5 { pt3dadd( -144.255, -12.0254, 36.199, 0.48 ) }
    dend_5 { pt3dadd( -154.72, -12.5541, 35.8073, 0.48 ) }
    dend_5 { pt3dadd( -164.876, -15.1096, 35.2767, 0.48 ) }
    dend_5 { pt3dadd( -175.112, -17.3211, 34.7589, 0.48 ) }
    dend_5 { pt3dadd( -185.474, -18.6367, 35.6836, 0.48 ) }
    dend_5 { pt3dadd( -195.611, -21.1265, 34.6931, 0.48 ) }
    dend_5 { pt3dadd( -205.953, -22.8505, 34.8506, 0.48 ) }
    dend_5 { pt3dadd( -216.007, -25.7691, 34.2559, 0.48 ) }
    dend_5 { pt3dadd( -226.194, -27.3762, 32.3633, 0.48 ) }
    dend_5 { pt3dadd( -236.635, -28.344, 32.2668, 0.48 ) }
    dend_5 { pt3dadd( -247.021, -27.4124, 31.1749, 0.48 ) }
    dend_5 { pt3dadd( -257.262, -25.1703, 30.9252, 0.48 ) }
    dend_5 { pt3dadd( -267.589, -23.5269, 31.7004, 0.48 ) }
    dend_5 { pt3dadd( -277.448, -21.1139, 34.3292, 0.48 ) }
    dend_5 { pt3dadd( -286.587, -18.5903, 38.8082, 0.48 ) }
    dend_5 { pt3dadd( -294.587, -14.6933, 44.3542, 0.48 ) }
    dend_5 { pt3dadd( -301.302, -10.7552, 51.3791, 0.48 ) }
    dend_5 { pt3dadd( -307.577, -5.80183, 58.164, 0.48 ) }
    dend_5 { pt3dadd( -312.624, -0.397002, 65.5983, 0.48 ) }
    dend_5 { pt3dadd( -318.154, 5.17655, 72.5484, 0.48 ) }
    dend_5 { pt3dadd( -321.725, 11.2641, 80.3031, 0.48 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 56/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -69.6112, -2.46409, 38.5799, 0.48 ) }
    dend_4 { pt3dadd( -72.4779, -1.82366, 39.179, 0.48 ) }
    dend_4 { pt3dadd( -74.2568, -1.43847, 39.532, 0.48 ) }
    dend_4 { pt3dadd( -76.4083, -0.972622, 39.9589, 0.48 ) }
    dend_4 { pt3dadd( -79.0322, -0.404466, 40.4796, 0.48 ) }
    dend_4 { pt3dadd( -80.4328, -0.101195, 40.7576, 0.48 ) }
    dend_4 { pt3dadd( -83.452, 0.552554, 41.3567, 0.48 ) }
    dend_4 { pt3dadd( -86.3827, 1.23639, 42.0766, 0.48 ) }
    dend_4 { pt3dadd( -98.5621, 5.91274, 44.4631, 0.48 ) }
    dend_4 { pt3dadd( -110.697, 11.1614, 45.5082, 0.48 ) }
    dend_4 { pt3dadd( -123.458, 13.9192, 47.8439, 0.48 ) }
    dend_4 { pt3dadd( -136.65, 15.2464, 48.1951, 0.48 ) }
    dend_4 { pt3dadd( -149.746, 16.9613, 46.9861, 0.48 ) }
    dend_4 { pt3dadd( -162.541, 18.3908, 43.8014, 0.48 ) }
    dend_4 { pt3dadd( -174.869, 19.6322, 39.0713, 0.48 ) }
    dend_4 { pt3dadd( -186.77, 22.3462, 33.884, 0.48 ) }
    dend_4 { pt3dadd( -199.43, 24.2727, 30.4347, 0.48 ) }
    dend_4 { pt3dadd( -212.301, 26.1741, 27.8621, 0.48 ) }
    dend_4 { pt3dadd( -225.544, 25.6831, 27.3216, 0.48 ) }
    dend_4 { pt3dadd( -238.502, 23.5954, 29.2303, 0.48 ) }
    dend_4 { pt3dadd( -250.933, 22.0937, 33.6005, 0.48 ) }
    dend_4 { pt3dadd( -262.803, 21.0212, 39.4193, 0.48 ) }
    dend_4 { pt3dadd( -275.197, 19.3266, 43.826, 0.48 ) }
    dend_4 { pt3dadd( -287.486, 15.0885, 46.4586, 0.48 ) }
    dend_4 { pt3dadd( -300.033, 12.4851, 49.8762, 0.48 ) }
    dend_4 { pt3dadd( -312.704, 10.798, 53.414, 0.48 ) }
    dend_4 { pt3dadd( -325.415, 8.14178, 56.1108, 0.48 ) }
    dend_4 { pt3dadd( -337.556, 4.06395, 59.5558, 0.48 ) }
    dend_4 { pt3dadd( -349.994, -0.0302998, 61.6602, 0.48 ) }
    dend_4 { pt3dadd( -361.525, -4.84237, 66.1083, 0.48 ) }
    dend_4 { pt3dadd( -372.018, -10.3063, 72.1033, 0.48 ) }
    dend_4 { pt3dadd( -383.719, -13.9331, 77.186, 0.48 ) }
    dend_4 { pt3dadd( -394.736, -20.0769, 81.2812, 0.48 ) }
    // Section: apic_14, id: apic_14, parent: apic_10 (entry count 89/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -23.0986, 94.1792, -15.149, 0.84 ) }
    apic_14 { pt3dadd( -23.7277, 96.6011, -15.4345, 0.84 ) }
    apic_14 { pt3dadd( -24.2777, 99.3177, -15.6702, 0.84 ) }
    apic_14 { pt3dadd( -24.7601, 102.666, -15.8498, 0.84 ) }
    apic_14 { pt3dadd( -25.0011, 105.065, -15.9094, 0.84 ) }
    apic_14 { pt3dadd( -25.2064, 107.615, -15.9247, 0.84 ) }
    apic_14 { pt3dadd( -25.312, 108.956, -15.9183, 0.84 ) }
    apic_14 { pt3dadd( -25.4069, 110.649, -15.8591, 0.84 ) }
    apic_14 { pt3dadd( -25.4091, 112.064, -15.7448, 0.84 ) }
    apic_14 { pt3dadd( -25.3201, 113.52, -15.5893, 0.84 ) }
    apic_14 { pt3dadd( -25.2029, 115.058, -15.4148, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_14 { pt3dadd( -25.0348, 117.433, -15.1475, 0.84 ) }
    apic_14 { pt3dadd( -24.969, 118.946, -14.9994, 0.84 ) }
    apic_14 { pt3dadd( -24.958, 120.372, -14.8864, 0.84 ) }
    apic_14 { pt3dadd( -24.9349, 122.398, -14.7265, 0.84 ) }
    apic_14 { pt3dadd( -24.8709, 123.784, -14.6001, 0.84 ) }
    apic_14 { pt3dadd( -24.747, 125.355, -14.4268, 0.84 ) }
    apic_14 { pt3dadd( -24.6747, 126.36, -14.3102, 0.84 ) }
    apic_14 { pt3dadd( -24.5906, 127.823, -14.1388, 0.84 ) }
    apic_14 { pt3dadd( -24.487, 129.585, -13.908, 0.84 ) }
    apic_14 { pt3dadd( -24.3774, 131.198, -13.7257, 0.84 ) }
    apic_14 { pt3dadd( -24.2568, 133.178, -13.5373, 0.84 ) }
    apic_14 { pt3dadd( -24.1553, 135.398, -13.3762, 0.84 ) }
    apic_14 { pt3dadd( -24.095, 137.355, -13.3627, 0.84 ) }
    apic_14 { pt3dadd( -24.0937, 139.416, -13.463, 0.84 ) }
    apic_14 { pt3dadd( -24.1708, 141.208, -13.6319, 0.84 ) }
    apic_14 { pt3dadd( -24.2898, 142.978, -13.8652, 0.84 ) }
    apic_14 { pt3dadd( -24.3845, 144.19, -14.0662, 0.84 ) }
    apic_14 { pt3dadd( -24.7072, 147.476, -14.7275, 0.84 ) }
    apic_14 { pt3dadd( -25.0265, 149.647, -15.2802, 0.84 ) }
    apic_14 { pt3dadd( -25.4476, 151.952, -15.9307, 0.84 ) }
    apic_14 { pt3dadd( -25.6541, 153.336, -16.3477, 0.84 ) }
    apic_14 { pt3dadd( -25.7932, 154.826, -16.7881, 0.84 ) }
    apic_14 { pt3dadd( -25.8732, 156.575, -17.2938, 0.84 ) }
    apic_14 { pt3dadd( -25.9561, 158.779, -17.842, 0.84 ) }
    apic_14 { pt3dadd( -25.9542, 160.008, -18.1031, 0.84 ) }
    apic_14 { pt3dadd( -25.8982, 162.993, -18.5854, 0.84 ) }
    apic_14 { pt3dadd( -25.9141, 165.679, -18.8893, 0.84 ) }
    apic_14 { pt3dadd( -25.964, 168.486, -19.0953, 0.84 ) }
    apic_14 { pt3dadd( -26.0063, 170.37, -19.1839, 0.84 ) }
    apic_14 { pt3dadd( -26.1413, 173.325, -19.2654, 0.84 ) }
    apic_14 { pt3dadd( -26.3189, 175.676, -19.3718, 0.84 ) }
    apic_14 { pt3dadd( -26.6292, 178.757, -19.5467, 0.84 ) }
    apic_14 { pt3dadd( -26.8524, 180.792, -19.7875, 0.84 ) }
    apic_14 { pt3dadd( -27.0588, 182.606, -20.0768, 0.84 ) }
    apic_14 { pt3dadd( -27.2566, 184.701, -20.4861, 0.84 ) }
    apic_14 { pt3dadd( -27.4032, 186.42, -20.8276, 0.84 ) }
    apic_14 { pt3dadd( -27.5378, 188.984, -21.3739, 0.84 ) }
    apic_14 { pt3dadd( -27.5914, 191.39, -21.8876, 0.84 ) }
    apic_14 { pt3dadd( -27.6394, 193.369, -22.3068, 0.84 ) }
    apic_14 { pt3dadd( -27.6675, 195.224, -22.6733, 0.84 ) }
    apic_14 { pt3dadd( -27.6698, 196.552, -22.9263, 0.84 ) }
    apic_14 { pt3dadd( -27.7574, 198.853, -23.2753, 0.84 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 42/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -23.0986, 94.1792, -15.149, 0.84 ) }
    apic_11 { pt3dadd( -25.6734, 95.1063, -15.5522, 0.24 ) }
    apic_11 { pt3dadd( -28.9284, 96.5328, -15.3238, 0.24 ) }
    apic_11 { pt3dadd( -30.5919, 97.5252, -14.9833, 0.24 ) }
    apic_11 { pt3dadd( -31.5379, 98.1821, -14.7834, 0.24 ) }
    apic_11 { pt3dadd( -34.2842, 100.259, -14.2753, 0.24 ) }
    apic_11 { pt3dadd( -37.1375, 102.609, -13.6843, 0.24 ) }
    apic_11 { pt3dadd( -38.7812, 104.084, -13.3746, 0.24 ) }
    apic_11 { pt3dadd( -40.8497, 106.193, -13.0195, 0.24 ) }
    apic_11 { pt3dadd( -42.8054, 108.45, -12.7466, 0.24 ) }
    apic_11 { pt3dadd( -44.4105, 110.461, -12.603, 0.24 ) }
    apic_11 { pt3dadd( -45.7155, 112.154, -12.5921, 0.24 ) }
    apic_11 { pt3dadd( -47.2214, 113.916, -12.6253, 0.24 ) }
    apic_11 { pt3dadd( -49.0366, 115.749, -12.5963, 0.24 ) }
    apic_11 { pt3dadd( -50.9427, 117.507, -12.4355, 0.24 ) }
    apic_11 { pt3dadd( -52.1006, 118.541, -12.2548, 0.24 ) }
    apic_11 { pt3dadd( -53.5256, 119.676, -12.0064, 0.24 ) }
    apic_11 { pt3dadd( -56.8039, 122.089, -11.453, 0.24 ) }
    apic_11 { pt3dadd( -59.3036, 123.782, -11.0941, 0.24 ) }
    apic_11 { pt3dadd( -61.4738, 125.168, -10.7748, 0.24 ) }
    apic_11 { pt3dadd( -62.7642, 125.999, -10.5598, 0.24 ) }
    apic_11 { pt3dadd( -65.5908, 127.989, -10.0303, 0.24 ) }
    apic_11 { pt3dadd( -67.1042, 129.187, -9.58367, 0.24 ) }
    apic_11 { pt3dadd( -68.1752, 130.123, -9.20267, 0.24 ) }
    apic_11 { pt3dadd( -70.4441, 132.324, -8.17108, 0.24 ) }
    apic_11 { pt3dadd( -72.5711, 134.507, -6.91286, 0.24 ) }
    apic_11 { pt3dadd( -75.4028, 137.495, -4.99694, 0.24 ) }
    apic_11 { pt3dadd( -79.2298, 141.746, -2.09963, 0.24 ) }
    apic_11 { pt3dadd( -80.9976, 143.771, -0.649753, 0.24 ) }
    apic_11 { pt3dadd( -83.2361, 146.454, 1.24954, 0.24 ) }
    apic_11 { pt3dadd( -86.3843, 150.254, 3.92107, 0.24 ) }
    apic_11 { pt3dadd( -87.7822, 151.953, 5.09852, 0.24 ) }
    apic_11 { pt3dadd( -89.1299, 153.583, 6.1968, 0.24 ) }
    apic_11 { pt3dadd( -90.6416, 155.224, 7.28178, 0.24 ) }
    apic_11 { pt3dadd( -93.3058, 157.747, 9.0622, 0.24 ) }
    apic_11 { pt3dadd( -96.1477, 160.263, 10.8019, 0.24 ) }
    apic_11 { pt3dadd( -98.3049, 162.122, 11.9729, 0.24 ) }
    apic_11 { pt3dadd( -100.04, 163.531, 12.8672, 0.24 ) }
    apic_11 { pt3dadd( -103.019, 165.819, 14.3203, 0.24 ) }
    apic_11 { pt3dadd( -105.614, 167.777, 15.4368, 0.24 ) }
    apic_11 { pt3dadd( -107.303, 169.134, 16.1015, 0.24 ) }
    apic_11 { pt3dadd( -109.04, 170.7, 16.6946, 0.24 ) }
    apic_11 { pt3dadd( -111.071, 172.692, 17.3213, 0.24 ) }
    apic_11 { pt3dadd( -114.024, 175.924, 18.1411, 0.24 ) }
    apic_11 { pt3dadd( -117.25, 180.07, 18.931, 0.12 ) }
    apic_11 { pt3dadd( -118.991, 182.432, 19.2994, 0.12 ) }
    apic_11 { pt3dadd( -120.49, 184.488, 19.4795, 0.12 ) }
    apic_11 { pt3dadd( -121.304, 185.676, 19.4944, 0.12 ) }
    apic_11 { pt3dadd( -121.919, 186.678, 19.4424, 0.12 ) }
    apic_11 { pt3dadd( -122.548, 187.795, 19.3186, 0.12 ) }
    apic_11 { pt3dadd( -123.918, 190.59, 18.9245, 0.12 ) }
    apic_11 { pt3dadd( -125.75, 193.955, 18.3732, 0.12 ) }
    apic_11 { pt3dadd( -127.882, 197.648, 17.8408, 0.12 ) }
    apic_11 { pt3dadd( -129.64, 200.54, 17.4994, 0.12 ) }
    apic_11 { pt3dadd( -131.152, 202.947, 17.2827, 0.12 ) }
    apic_11 { pt3dadd( -132.769, 205.669, 17.1347, 0.12 ) }
    apic_11 { pt3dadd( -135.11, 209.985, 17.0794, 0.12 ) }
    apic_11 { pt3dadd( -136.216, 212.01, 17.1514, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_11 { pt3dadd( -137.478, 214.32, 17.2547, 0.12 ) }
    apic_11 { pt3dadd( -138.956, 217.089, 17.3973, 0.12 ) }
    apic_11 { pt3dadd( -140.393, 220.048, 17.5709, 0.12 ) }
    apic_11 { pt3dadd( -141.448, 222.509, 17.8699, 0.12 ) }
    apic_11 { pt3dadd( -142.224, 224.735, 18.2263, 0.12 ) }
    apic_11 { pt3dadd( -143.242, 227.651, 18.7744, 0.12 ) }
    apic_11 { pt3dadd( -144.726, 231.984, 19.8089, 0.12 ) }
    apic_11 { pt3dadd( -145.437, 234.178, 20.4255, 0.12 ) }
    apic_11 { pt3dadd( -146.776, 238.323, 21.6878, 0.12 ) }
    apic_11 { pt3dadd( -147.698, 241.241, 22.6688, 0.12 ) }
    apic_11 { pt3dadd( -148.189, 242.629, 23.1592, 0.12 ) }
    apic_11 { pt3dadd( -149.026, 244.523, 23.8203, 0.12 ) }
    apic_11 { pt3dadd( -150.464, 247.156, 24.6663, 0.12 ) }
    apic_11 { pt3dadd( -152.053, 249.834, 25.3647, 0.12 ) }
    apic_11 { pt3dadd( -153.248, 251.756, 25.7175, 0.12 ) }
    apic_11 { pt3dadd( -156.243, 256.231, 26.4278, 0.12 ) }
    apic_11 { pt3dadd( -158.228, 258.929, 26.7716, 0.12 ) }
    apic_11 { pt3dadd( -159.523, 260.569, 26.9398, 0.12 ) }
    apic_11 { pt3dadd( -161.339, 262.843, 27.1211, 0.12 ) }
    apic_11 { pt3dadd( -162.411, 264.312, 27.2299, 0.12 ) }
    apic_11 { pt3dadd( -163.452, 266.059, 27.2911, 0.12 ) }
    apic_11 { pt3dadd( -165.389, 269.965, 27.3008, 0.12 ) }
    apic_11 { pt3dadd( -166.438, 272.502, 27.3157, 0.12 ) }
    apic_11 { pt3dadd( -167.506, 275.816, 27.372, 0.12 ) }
    apic_11 { pt3dadd( -168.253, 278.935, 27.4789, 0.12 ) }
    apic_11 { pt3dadd( -168.875, 282.787, 27.5552, 0.12 ) }
    apic_11 { pt3dadd( -169.115, 284.869, 27.5475, 0.12 ) }
    apic_11 { pt3dadd( -169.341, 287.201, 27.4877, 0.12 ) }
    apic_11 { pt3dadd( -169.705, 290.298, 27.3241, 0.12 ) }
    apic_11 { pt3dadd( -170.021, 292.891, 27.1369, 0.12 ) }
    apic_11 { pt3dadd( -170.473, 297.0, 26.8273, 0.12 ) }
    apic_11 { pt3dadd( -170.77, 299.43, 26.6929, 0.12 ) }
    apic_11 { pt3dadd( -171.115, 302.598, 26.5508, 0.12 ) }
    apic_11 { pt3dadd( -171.4, 305.187, 26.34, 0.12 ) }
    apic_11 { pt3dadd( -171.891, 309.156, 25.988, 0.12 ) }
    apic_11 { pt3dadd( -172.321, 313.168, 25.6615, 0.12 ) }
    apic_11 { pt3dadd( -172.504, 316.058, 25.5353, 0.12 ) }
    apic_11 { pt3dadd( -172.558, 318.363, 25.4595, 0.12 ) }
    apic_11 { pt3dadd( -172.561, 322.472, 25.2765, 0.12 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 39/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 71.974, -118.619, 2.52509, 0.36 ) }
    dend_32 { pt3dadd( 72.8693, -119.481, 2.32224, 0.36 ) }
    dend_32 { pt3dadd( 73.5173, -120.144, 2.16303, 0.36 ) }
    dend_32 { pt3dadd( 74.3197, -120.857, 1.49391, 0.36 ) }
    dend_32 { pt3dadd( 75.1155, -121.426, 0.614571, 0.36 ) }
    dend_32 { pt3dadd( 75.7649, -121.89, -0.103031, 0.36 ) }
    dend_32 { pt3dadd( 76.5652, -122.461, -0.987365, 0.36 ) }
    dend_32 { pt3dadd( 77.0138, -122.765, -1.61692, 0.36 ) }
    dend_32 { pt3dadd( 79.511, -124.34, -6.01601, 0.36 ) }
    dend_32 { pt3dadd( 79.8851, -124.498, -6.86694, 0.36 ) }
    dend_32 { pt3dadd( 85.5715, -130.214, -12.3574, 0.36 ) }
    dend_32 { pt3dadd( 92.5488, -135.105, -17.1045, 0.36 ) }
    dend_32 { pt3dadd( 99.8463, -138.696, -22.49, 0.36 ) }
    dend_32 { pt3dadd( 108.402, -141.501, -26.2398, 0.36 ) }
    dend_32 { pt3dadd( 117.689, -143.219, -28.6824, 0.36 ) }
    dend_32 { pt3dadd( 127.049, -144.082, -31.2859, 0.36 ) }
    dend_32 { pt3dadd( 136.229, -143.898, -34.5793, 0.36 ) }
    dend_32 { pt3dadd( 144.869, -144.645, -39.0453, 0.36 ) }
    dend_32 { pt3dadd( 152.908, -145.53, -44.4976, 0.36 ) }
    dend_32 { pt3dadd( 160.255, -148.004, -50.4187, 0.36 ) }
    dend_32 { pt3dadd( 168.718, -148.436, -55.2485, 0.36 ) }
    dend_32 { pt3dadd( 176.887, -147.905, -60.5529, 0.36 ) }
    dend_32 { pt3dadd( 184.269, -146.999, -66.8643, 0.36 ) }
    dend_32 { pt3dadd( 192.491, -147.701, -72.0658, 0.36 ) }
    dend_32 { pt3dadd( 201.332, -150.123, -75.4007, 0.36 ) }
    dend_32 { pt3dadd( 209.475, -153.459, -79.6081, 0.36 ) }
    dend_32 { pt3dadd( 218.546, -156.168, -81.9585, 0.36 ) }
    dend_32 { pt3dadd( 227.426, -157.582, -85.7388, 0.36 ) }
    dend_32 { pt3dadd( 235.276, -160.21, -90.8976, 0.36 ) }
    dend_32 { pt3dadd( 243.484, -161.739, -95.9423, 0.36 ) }
    dend_32 { pt3dadd( 251.77, -165.221, -99.7307, 0.36 ) }
    dend_32 { pt3dadd( 260.333, -169.604, -101.351, 0.36 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 71/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 71.974, -118.619, 2.52509, 0.36 ) }
    dend_31 { pt3dadd( 70.28, -119.639, 2.82484, 0.36 ) }
    dend_31 { pt3dadd( 61.6935, -122.913, 5.63933, 0.36 ) }
    dend_31 { pt3dadd( 52.7462, -125.763, 7.68635, 0.36 ) }
    dend_31 { pt3dadd( 44.1833, -128.893, 10.7271, 0.36 ) }
    dend_31 { pt3dadd( 36.0829, -133.548, 12.9824, 0.36 ) }
    dend_31 { pt3dadd( 28.4166, -137.408, 17.306, 0.36 ) }
    dend_31 { pt3dadd( 20.4272, -140.345, 21.7681, 0.36 ) }
    dend_31 { pt3dadd( 11.6924, -142.203, 25.3206, 0.36 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 80/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -27.7574, 198.853, -23.2753, 0.84 ) }
    apic_16 { pt3dadd( -28.4472, 202.268, -23.4673, 0.84 ) }
    apic_16 { pt3dadd( -28.8775, 204.189, -23.5989, 0.84 ) }
    apic_16 { pt3dadd( -29.353, 206.099, -23.7369, 0.84 ) }
    apic_16 { pt3dadd( -29.9475, 208.364, -23.8814, 0.84 ) }
    apic_16 { pt3dadd( -30.3625, 210.261, -24.0048, 0.84 ) }
    apic_16 { pt3dadd( -30.6462, 211.63, -24.0951, 0.84 ) }
    apic_16 { pt3dadd( -30.9661, 213.535, -24.1301, 0.84 ) }
    apic_16 { pt3dadd( -31.4015, 216.221, -24.1742, 0.84 ) }
    apic_16 { pt3dadd( -31.9193, 219.197, -24.2471, 0.84 ) }
    apic_16 { pt3dadd( -32.6604, 223.48, -24.3248, 0.84 ) }
    apic_16 { pt3dadd( -33.0204, 225.8, -24.3652, 0.84 ) }
    apic_16 { pt3dadd( -33.7117, 231.102, -24.4885, 0.84 ) }
    apic_16 { pt3dadd( -33.9397, 233.234, -24.5381, 0.84 ) }
    apic_16 { pt3dadd( -34.126, 235.062, -24.5884, 0.84 ) }
    apic_16 { pt3dadd( -34.3993, 237.624, -24.661, 0.84 ) }
    apic_16 { pt3dadd( -34.7774, 240.587, -24.743, 0.84 ) }
    apic_16 { pt3dadd( -35.1065, 243.271, -24.8227, 0.84 ) }
    apic_16 { pt3dadd( -35.3267, 245.718, -24.9365, 0.84 ) }
    apic_16 { pt3dadd( -35.5025, 248.896, -25.0583, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_16 { pt3dadd( -35.5925, 250.828, -25.1135, 0.84 ) }
    apic_16 { pt3dadd( -35.6939, 252.351, -25.1558, 0.84 ) }
    apic_16 { pt3dadd( -35.9023, 254.801, -25.1298, 0.84 ) }
    apic_16 { pt3dadd( -36.038, 258.047, -25.0944, 0.84 ) }
    apic_16 { pt3dadd( -36.0373, 258.155, -25.0956, 0.84 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 5/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -27.7574, 198.853, -23.2753, 0.84 ) }
    apic_15 { pt3dadd( -26.7377, 199.496, -22.6855, 0.24 ) }
    apic_15 { pt3dadd( -26.1563, 199.936, -22.1846, 0.24 ) }
    apic_15 { pt3dadd( -25.4709, 200.54, -21.5191, 0.24 ) }
    apic_15 { pt3dadd( -24.9312, 201.051, -20.9962, 0.24 ) }
    apic_15 { pt3dadd( -23.846, 202.208, -19.9628, 0.24 ) }
    apic_15 { pt3dadd( -22.9883, 203.166, -19.1842, 0.24 ) }
    apic_15 { pt3dadd( -21.85, 204.571, -18.1264, 0.24 ) }
    apic_15 { pt3dadd( -21.3834, 205.222, -17.6813, 0.24 ) }
    apic_15 { pt3dadd( -20.8319, 206.06, -17.2047, 0.24 ) }
    apic_15 { pt3dadd( -20.0677, 207.258, -16.6979, 0.24 ) }
    apic_15 { pt3dadd( -19.3277, 208.476, -16.3681, 0.24 ) }
    apic_15 { pt3dadd( -18.306, 210.34, -15.9695, 0.24 ) }
    apic_15 { pt3dadd( -17.8524, 211.137, -15.8312, 0.24 ) }
    apic_15 { pt3dadd( -17.1457, 212.351, -15.6749, 0.24 ) }
    apic_15 { pt3dadd( -16.3778, 213.672, -15.5625, 0.24 ) }
    apic_15 { pt3dadd( -15.3421, 215.481, -15.4924, 0.24 ) }
    apic_15 { pt3dadd( -14.6507, 216.73, -15.5027, 0.24 ) }
    apic_15 { pt3dadd( -13.6998, 218.374, -15.4819, 0.24 ) }
    apic_15 { pt3dadd( -12.7451, 219.832, -15.3966, 0.24 ) }
    apic_15 { pt3dadd( -12.23, 220.536, -15.2862, 0.24 ) }
    apic_15 { pt3dadd( -11.6027, 221.286, -15.1446, 0.24 ) }
    apic_15 { pt3dadd( -10.0543, 222.923, -14.8364, 0.24 ) }
    apic_15 { pt3dadd( -8.77392, 224.238, -14.6055, 0.24 ) }
    apic_15 { pt3dadd( -7.37501, 225.686, -14.2881, 0.24 ) }
    apic_15 { pt3dadd( -6.45029, 226.594, -14.0562, 0.24 ) }
    apic_15 { pt3dadd( -5.60269, 227.407, -13.8776, 0.24 ) }
    apic_15 { pt3dadd( -4.98529, 228.003, -13.791, 0.24 ) }
    apic_15 { pt3dadd( -4.20161, 228.76, -13.7615, 0.24 ) }
    apic_15 { pt3dadd( -3.19935, 229.733, -13.8917, 0.24 ) }
    apic_15 { pt3dadd( -2.0654, 230.9, -14.1308, 0.24 ) }
    apic_15 { pt3dadd( -1.33768, 231.68, -14.3139, 0.24 ) }
    apic_15 { pt3dadd( -0.133228, 232.972, -14.6022, 0.24 ) }
    apic_15 { pt3dadd( 1.10862, 234.253, -14.9109, 0.24 ) }
    apic_15 { pt3dadd( 2.61066, 235.837, -15.3267, 0.24 ) }
    apic_15 { pt3dadd( 3.65058, 237.068, -15.7084, 0.24 ) }
    apic_15 { pt3dadd( 4.42934, 238.104, -16.06, 0.24 ) }
    apic_15 { pt3dadd( 5.0069, 238.944, -16.3882, 0.24 ) }
    apic_15 { pt3dadd( 5.43931, 239.71, -16.718, 0.24 ) }
    apic_15 { pt3dadd( 6.01791, 241.109, -17.3396, 0.24 ) }
    apic_15 { pt3dadd( 6.58675, 242.74, -18.2044, 0.24 ) }
    apic_15 { pt3dadd( 6.95182, 243.944, -18.9481, 0.24 ) }
    apic_15 { pt3dadd( 7.27987, 245.279, -19.789, 0.24 ) }
    apic_15 { pt3dadd( 7.51933, 246.565, -20.6324, 0.24 ) }
    apic_15 { pt3dadd( 7.62239, 247.456, -21.2549, 0.24 ) }
    apic_15 { pt3dadd( 7.80501, 249.303, -22.5174, 0.24 ) }
    apic_15 { pt3dadd( 7.90914, 250.809, -23.4603, 0.24 ) }
    apic_15 { pt3dadd( 7.97556, 252.137, -24.3131, 0.24 ) }
    apic_15 { pt3dadd( 8.01777, 253.299, -25.0305, 0.24 ) }
    apic_15 { pt3dadd( 8.1291, 256.065, -26.6124, 0.12 ) }
    apic_15 { pt3dadd( 8.23546, 257.991, -27.6272, 0.12 ) }
    apic_15 { pt3dadd( 8.28978, 259.108, -28.1616, 0.12 ) }
    apic_15 { pt3dadd( 8.5739, 262.155, -29.6467, 0.12 ) }
    apic_15 { pt3dadd( 8.73409, 263.216, -30.1438, 0.12 ) }
    apic_15 { pt3dadd( 9.13859, 264.942, -30.8288, 0.12 ) }
    apic_15 { pt3dadd( 9.53244, 266.177, -31.2474, 0.12 ) }
    apic_15 { pt3dadd( 9.75171, 266.757, -31.4311, 0.12 ) }
    apic_15 { pt3dadd( 10.4205, 268.292, -31.8217, 0.12 ) }
    apic_15 { pt3dadd( 10.8586, 269.263, -31.9913, 0.12 ) }
    apic_15 { pt3dadd( 11.6992, 271.104, -32.2755, 0.12 ) }
    apic_15 { pt3dadd( 12.3519, 272.743, -32.5507, 0.12 ) }
    apic_15 { pt3dadd( 12.964, 274.644, -32.874, 0.12 ) }
    apic_15 { pt3dadd( 13.308, 275.922, -33.1034, 0.12 ) }
    apic_15 { pt3dadd( 13.5816, 277.188, -33.3664, 0.12 ) }
    apic_15 { pt3dadd( 14.0037, 279.296, -33.9055, 0.12 ) }
    apic_15 { pt3dadd( 14.4467, 281.466, -34.4378, 0.12 ) }
    apic_15 { pt3dadd( 14.8057, 282.968, -34.7663, 0.12 ) }
    apic_15 { pt3dadd( 15.372, 284.878, -35.2162, 0.12 ) }
    apic_15 { pt3dadd( 15.9563, 286.368, -35.5903, 0.12 ) }
    apic_15 { pt3dadd( 16.7521, 287.879, -35.9807, 0.12 ) }
    apic_15 { pt3dadd( 18.2729, 290.088, -36.3712, 0.12 ) }
    apic_15 { pt3dadd( 19.0078, 290.905, -36.4601, 0.12 ) }
    apic_15 { pt3dadd( 20.2483, 291.958, -36.4736, 0.12 ) }
    apic_15 { pt3dadd( 21.1563, 292.55, -36.3845, 0.12 ) }
    apic_15 { pt3dadd( 21.7752, 292.871, -36.2811, 0.12 ) }
    apic_15 { pt3dadd( 24.0008, 293.821, -35.7976, 0.12 ) }
    apic_15 { pt3dadd( 25.8197, 294.558, -35.297, 0.12 ) }
    apic_15 { pt3dadd( 27.625, 295.348, -34.6225, 0.12 ) }
    apic_15 { pt3dadd( 28.684, 295.842, -34.1411, 0.12 ) }
    apic_15 { pt3dadd( 29.3868, 296.185, -33.8117, 0.12 ) }
    apic_15 { pt3dadd( 30.7076, 296.86, -33.192, 0.12 ) }
    apic_15 { pt3dadd( 32.9156, 298.008, -32.1896, 0.12 ) }
    apic_15 { pt3dadd( 33.5152, 298.333, -31.893, 0.12 ) }
    apic_15 { pt3dadd( 34.1163, 298.668, -31.5954, 0.12 ) }
    apic_15 { pt3dadd( 35.261, 299.293, -31.0169, 0.12 ) }
    apic_15 { pt3dadd( 35.8405, 299.609, -30.7263, 0.12 ) }
    apic_15 { pt3dadd( 37.0104, 300.241, -30.1899, 0.12 ) }
    apic_15 { pt3dadd( 38.0339, 300.719, -29.7706, 0.12 ) }
    apic_15 { pt3dadd( 39.6851, 301.481, -29.0711, 0.12 ) }
    apic_15 { pt3dadd( 40.276, 301.752, -28.8061, 0.12 ) }
    apic_15 { pt3dadd( 41.1293, 302.131, -28.4046, 0.12 ) }
    apic_15 { pt3dadd( 42.0659, 302.545, -27.9746, 0.12 ) }
    apic_15 { pt3dadd( 43.3182, 303.087, -27.4272, 0.12 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 98/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -172.561, 322.472, 25.2765, 0.12 ) }
    apic_13 { pt3dadd( -174.265, 322.28, 24.9977, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_13 { pt3dadd( -177.597, 321.905, 24.4523, 0.12 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 1/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -172.561, 322.472, 25.2765, 0.12 ) }
    apic_12 { pt3dadd( -172.616, 325.003, 25.3102, 0.12 ) }
    apic_12 { pt3dadd( -172.664, 326.947, 25.3283, 0.12 ) }
    apic_12 { pt3dadd( -172.874, 329.875, 25.3506, 0.12 ) }
    apic_12 { pt3dadd( -173.169, 333.131, 25.3711, 0.12 ) }
    apic_12 { pt3dadd( -173.395, 335.443, 25.3832, 0.12 ) }
    apic_12 { pt3dadd( -173.647, 337.52, 25.459, 0.12 ) }
    apic_12 { pt3dadd( -174.331, 341.236, 25.6694, 0.12 ) }
    apic_12 { pt3dadd( -174.853, 343.665, 25.8456, 0.12 ) }
    apic_12 { pt3dadd( -175.375, 345.816, 26.0284, 0.12 ) }
    apic_12 { pt3dadd( -175.996, 348.078, 26.2362, 0.12 ) }
    apic_12 { pt3dadd( -176.682, 350.746, 26.4737, 0.12 ) }
    apic_12 { pt3dadd( -177.212, 353.249, 26.6745, 0.12 ) }
    apic_12 { pt3dadd( -177.669, 355.47, 26.855, 0.12 ) }
    apic_12 { pt3dadd( -178.084, 357.881, 27.0328, 0.12 ) }
    apic_12 { pt3dadd( -178.513, 360.517, 27.1838, 0.12 ) }
    apic_12 { pt3dadd( -178.94, 363.834, 27.2578, 0.12 ) }
    apic_12 { pt3dadd( -179.128, 367.153, 27.1244, 0.12 ) }
    // Section: apic_26, id: apic_26, parent: apic_16 (entry count 19/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( -36.0373, 258.155, -25.0956, 0.84 ) }
    apic_26 { pt3dadd( -29.4811, 260.484, -31.9919, 0.48 ) }
    apic_26 { pt3dadd( -28.1273, 260.893, -33.3102, 0.48 ) }
    apic_26 { pt3dadd( -27.1883, 261.149, -34.1879, 0.48 ) }
    apic_26 { pt3dadd( -27.0174, 261.2, -34.3416, 0.48 ) }
    apic_26 { pt3dadd( -26.1825, 261.463, -35.0765, 0.48 ) }
    apic_26 { pt3dadd( -25.9679, 261.533, -35.2561, 0.48 ) }
    apic_26 { pt3dadd( -23.1928, 262.398, -36.7743, 0.48 ) }
    apic_26 { pt3dadd( -23.0712, 262.438, -36.8407, 0.48 ) }
    apic_26 { pt3dadd( -21.4732, 262.991, -37.6777, 0.48 ) }
    apic_26 { pt3dadd( -21.3439, 263.041, -37.7414, 0.48 ) }
    apic_26 { pt3dadd( -20.6156, 263.329, -38.0537, 0.48 ) }
    apic_26 { pt3dadd( -20.4997, 263.372, -38.0851, 0.48 ) }
    apic_26 { pt3dadd( -19.3438, 263.684, -38.1066, 0.48 ) }
    apic_26 { pt3dadd( -18.4786, 263.81, -38.0763, 0.48 ) }
    apic_26 { pt3dadd( -18.411, 263.812, -38.0714, 0.48 ) }
    apic_26 { pt3dadd( -16.99, 263.851, -38.0416, 0.48 ) }
    apic_26 { pt3dadd( -16.6425, 263.857, -38.0552, 0.48 ) }
    apic_26 { pt3dadd( -15.44, 263.889, -38.0864, 0.48 ) }
    apic_26 { pt3dadd( -14.648, 263.912, -38.1187, 0.48 ) }
    apic_26 { pt3dadd( -14.3335, 263.93, -38.124, 0.48 ) }
    apic_26 { pt3dadd( -13.0271, 264.068, -38.113, 0.48 ) }
    apic_26 { pt3dadd( -12.524, 264.151, -38.088, 0.48 ) }
    apic_26 { pt3dadd( -10.7943, 264.447, -37.946, 0.48 ) }
    apic_26 { pt3dadd( -10.5127, 264.502, -37.9159, 0.48 ) }
    apic_26 { pt3dadd( -9.26825, 264.718, -37.7698, 0.48 ) }
    apic_26 { pt3dadd( -9.21163, 264.731, -37.7574, 0.48 ) }
    apic_26 { pt3dadd( -8.17417, 265.046, -37.3943, 0.48 ) }
    apic_26 { pt3dadd( -8.10987, 265.076, -37.3652, 0.48 ) }
    apic_26 { pt3dadd( -7.32952, 265.583, -36.9485, 0.48 ) }
    apic_26 { pt3dadd( -7.27028, 265.62, -36.9179, 0.48 ) }
    apic_26 { pt3dadd( -5.88492, 266.52, -36.24, 0.48 ) }
    apic_26 { pt3dadd( -5.83639, 266.546, -36.218, 0.48 ) }
    apic_26 { pt3dadd( -5.08789, 266.908, -35.8647, 0.48 ) }
    apic_26 { pt3dadd( -4.6674, 267.052, -35.6487, 0.48 ) }
    apic_26 { pt3dadd( -3.48784, 267.33, -35.1727, 0.48 ) }
    apic_26 { pt3dadd( -3.41628, 267.343, -35.1494, 0.48 ) }
    apic_26 { pt3dadd( -2.32623, 267.58, -35.016, 0.48 ) }
    apic_26 { pt3dadd( -1.92613, 267.72, -35.0145, 0.48 ) }
    apic_26 { pt3dadd( -0.852781, 268.197, -35.0942, 0.48 ) }
    apic_26 { pt3dadd( 0.504231, 268.906, -35.4917, 0.48 ) }
    apic_26 { pt3dadd( 0.600122, 268.961, -35.5334, 0.48 ) }
    apic_26 { pt3dadd( 2.34694, 270.004, -36.7814, 0.36 ) }
    apic_26 { pt3dadd( 3.34678, 270.562, -37.7024, 0.36 ) }
    apic_26 { pt3dadd( 3.39739, 270.586, -37.7544, 0.36 ) }
    apic_26 { pt3dadd( 5.61707, 271.534, -40.1881, 0.36 ) }
    apic_26 { pt3dadd( 5.68375, 271.56, -40.2623, 0.36 ) }
    apic_26 { pt3dadd( 9.19976, 272.864, -44.2069, 0.36 ) }
    apic_26 { pt3dadd( 12.4161, 273.883, -47.7736, 0.36 ) }
    apic_26 { pt3dadd( 15.7343, 274.84, -51.407, 0.36 ) }
    apic_26 { pt3dadd( 15.7808, 274.853, -51.4547, 0.36 ) }
    apic_26 { pt3dadd( 16.7331, 275.109, -52.3512, 0.36 ) }
    apic_26 { pt3dadd( 17.5205, 275.319, -53.0297, 0.36 ) }
    apic_26 { pt3dadd( 20.8496, 276.246, -55.4208, 0.36 ) }
    apic_26 { pt3dadd( 21.3771, 276.425, -55.7445, 0.36 ) }
    apic_26 { pt3dadd( 23.7844, 277.382, -57.759, 0.36 ) }
    apic_26 { pt3dadd( 25.3465, 278.013, -59.2215, 0.36 ) }
    apic_26 { pt3dadd( 25.7445, 278.174, -59.5808, 0.36 ) }
    apic_26 { pt3dadd( 27.1664, 278.759, -60.8387, 0.36 ) }
    apic_26 { pt3dadd( 27.3202, 278.821, -60.9707, 0.36 ) }
    apic_26 { pt3dadd( 39.0635, 283.28, -70.9009, 0.36 ) }
    apic_26 { pt3dadd( 39.2202, 283.335, -71.0331, 0.36 ) }
    apic_26 { pt3dadd( 47.9677, 285.965, -78.2401, 0.36 ) }
    apic_26 { pt3dadd( 48.048, 285.985, -78.2999, 0.36 ) }
    apic_26 { pt3dadd( 50.7011, 286.513, -80.2604, 0.36 ) }
    apic_26 { pt3dadd( 51.2492, 286.624, -80.6258, 0.36 ) }
    apic_26 { pt3dadd( 52.9003, 286.991, -81.6401, 0.36 ) }
    apic_26 { pt3dadd( 53.1336, 287.043, -81.7687, 0.36 ) }
    apic_26 { pt3dadd( 57.4379, 287.971, -84.0749, 0.36 ) }
    apic_26 { pt3dadd( 57.9877, 288.093, -84.3708, 0.36 ) }
    apic_26 { pt3dadd( 60.1686, 288.636, -85.5575, 0.36 ) }
    apic_26 { pt3dadd( 65.1569, 289.922, -88.2298, 0.36 ) }
    apic_26 { pt3dadd( 65.2446, 289.945, -88.2771, 0.36 ) }
    apic_26 { pt3dadd( 66.4498, 290.269, -88.8972, 0.36 ) }
    apic_26 { pt3dadd( 66.77, 290.362, -89.0453, 0.36 ) }
    apic_26 { pt3dadd( 69.3281, 291.079, -90.2209, 0.36 ) }
    apic_26 { pt3dadd( 69.4166, 291.101, -90.2666, 0.36 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 96/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -36.0373, 258.155, -25.0956, 0.84 ) }
    apic_17 { pt3dadd( -36.5201, 260.748, -25.4497, 0.84 ) }
    apic_17 { pt3dadd( -36.9009, 263.434, -25.7557, 0.84 ) }
    apic_17 { pt3dadd( -37.3847, 267.384, -26.146, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_17 { pt3dadd( -37.6853, 269.939, -26.3443, 0.84 ) }
    apic_17 { pt3dadd( -38.1464, 273.318, -26.5923, 0.84 ) }
    apic_17 { pt3dadd( -38.4835, 275.671, -26.8328, 0.84 ) }
    apic_17 { pt3dadd( -38.8191, 278.336, -27.2002, 0.84 ) }
    apic_17 { pt3dadd( -38.9692, 279.436, -27.3544, 0.84 ) }
    apic_17 { pt3dadd( -39.3787, 281.981, -27.7603, 0.84 ) }
    apic_17 { pt3dadd( -39.9874, 285.65, -28.4337, 0.84 ) }
    apic_17 { pt3dadd( -40.6189, 289.004, -29.1146, 0.84 ) }
    apic_17 { pt3dadd( -41.2315, 291.883, -29.7061, 0.84 ) }
    apic_17 { pt3dadd( -41.8413, 294.978, -30.3682, 0.84 ) }
    apic_17 { pt3dadd( -42.2272, 297.994, -31.0835, 0.84 ) }
    apic_17 { pt3dadd( -42.3533, 300.1, -31.5871, 0.84 ) }
    apic_17 { pt3dadd( -42.3958, 301.849, -31.9448, 0.84 ) }
    apic_17 { pt3dadd( -42.388, 304.7, -32.4401, 0.84 ) }
    apic_17 { pt3dadd( -42.2853, 307.908, -33.0149, 0.84 ) }
    apic_17 { pt3dadd( -42.0657, 311.175, -33.6582, 0.84 ) }
    apic_17 { pt3dadd( -41.7734, 314.962, -34.3457, 0.84 ) }
    apic_17 { pt3dadd( -41.45, 319.3, -35.0801, 0.84 ) }
    apic_17 { pt3dadd( -41.2566, 323.545, -35.7719, 0.84 ) }
    apic_17 { pt3dadd( -41.2639, 326.779, -36.2963, 0.84 ) }
    apic_17 { pt3dadd( -41.3479, 329.703, -36.7136, 0.84 ) }
    apic_17 { pt3dadd( -41.3695, 331.177, -36.9181, 0.84 ) }
    apic_17 { pt3dadd( -41.3222, 333.767, -37.3265, 0.84 ) }
    apic_17 { pt3dadd( -41.2461, 336.282, -37.7499, 0.84 ) }
    apic_17 { pt3dadd( -41.2535, 336.866, -37.8504, 0.84 ) }
    apic_17 { pt3dadd( -41.2853, 339.751, -38.3421, 0.84 ) }
    apic_17 { pt3dadd( -41.2327, 343.076, -38.8692, 0.84 ) }
    apic_17 { pt3dadd( -41.104, 346.87, -39.3822, 0.84 ) }
    apic_17 { pt3dadd( -41.0048, 349.641, -39.6875, 0.84 ) }
    apic_17 { pt3dadd( -40.9278, 353.645, -39.9092, 0.84 ) }
    apic_17 { pt3dadd( -40.9123, 357.145, -39.8923, 0.84 ) }
    apic_17 { pt3dadd( -40.9586, 360.045, -39.7036, 0.84 ) }
    apic_17 { pt3dadd( -41.0231, 363.066, -39.4044, 0.84 ) }
    apic_17 { pt3dadd( -41.0769, 365.65, -39.1226, 0.84 ) }
    apic_17 { pt3dadd( -41.1165, 368.674, -38.8392, 0.84 ) }
    apic_17 { pt3dadd( -41.1566, 371.243, -38.6773, 0.84 ) }
    apic_17 { pt3dadd( -41.2045, 372.299, -38.7135, 0.84 ) }
    apic_17 { pt3dadd( -41.3956, 375.581, -39.2298, 0.84 ) }
    apic_17 { pt3dadd( -41.6317, 378.401, -39.9343, 0.84 ) }
    apic_17 { pt3dadd( -41.8878, 380.382, -40.5617, 0.84 ) }
    apic_17 { pt3dadd( -42.1538, 382.024, -41.1232, 0.84 ) }
    apic_17 { pt3dadd( -42.7617, 385.112, -42.0735, 0.84 ) }
    apic_17 { pt3dadd( -43.0414, 386.422, -42.3891, 0.84 ) }
    apic_17 { pt3dadd( -43.5593, 388.64, -42.7307, 0.84 ) }
    apic_17 { pt3dadd( -43.9364, 390.193, -42.8726, 0.84 ) }
    apic_17 { pt3dadd( -44.6857, 392.877, -42.9394, 0.84 ) }
    apic_17 { pt3dadd( -45.1242, 394.32, -42.9189, 0.84 ) }
    apic_17 { pt3dadd( -45.7128, 396.158, -42.8223, 0.84 ) }
    apic_17 { pt3dadd( -46.3151, 398.182, -42.7104, 0.84 ) }
    apic_17 { pt3dadd( -46.7492, 399.865, -42.6654, 0.84 ) }
    apic_17 { pt3dadd( -47.3401, 401.997, -42.6657, 0.84 ) }
    apic_17 { pt3dadd( -47.8513, 403.394, -42.7193, 0.84 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 52/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -47.8513, 403.394, -42.7193, 0.84 ) }
    apic_19 { pt3dadd( -47.9186, 406.433, -43.2739, 0.84 ) }
    apic_19 { pt3dadd( -47.897, 410.908, -43.9929, 0.84 ) }
    apic_19 { pt3dadd( -47.8702, 414.08, -44.5127, 0.84 ) }
    apic_19 { pt3dadd( -47.8564, 416.803, -44.98, 0.84 ) }
    apic_19 { pt3dadd( -47.8318, 419.852, -45.4782, 0.84 ) }
    apic_19 { pt3dadd( -47.8183, 422.372, -45.8685, 0.84 ) }
    apic_19 { pt3dadd( -47.7927, 424.219, -46.1443, 0.84 ) }
    apic_19 { pt3dadd( -47.6633, 426.825, -46.4084, 0.84 ) }
    apic_19 { pt3dadd( -47.6281, 427.416, -46.4356, 0.84 ) }
    apic_19 { pt3dadd( -47.5898, 429.367, -46.4337, 0.84 ) }
    apic_19 { pt3dadd( -47.6233, 431.295, -46.3814, 0.84 ) }
    apic_19 { pt3dadd( -47.673, 433.745, -46.3276, 0.72 ) }
    apic_19 { pt3dadd( -47.748, 436.801, -46.1863, 0.72 ) }
    apic_19 { pt3dadd( -47.8324, 439.395, -46.0559, 0.72 ) }
    apic_19 { pt3dadd( -47.9187, 441.428, -46.0114, 0.72 ) }
    apic_19 { pt3dadd( -48.0216, 443.543, -46.0188, 0.72 ) }
    apic_19 { pt3dadd( -48.1425, 445.736, -46.0663, 0.72 ) }
    apic_19 { pt3dadd( -48.2661, 447.507, -46.1453, 0.72 ) }
    apic_19 { pt3dadd( -48.4892, 449.685, -46.3047, 0.72 ) }
    apic_19 { pt3dadd( -48.6712, 451.348, -46.3978, 0.72 ) }
    apic_19 { pt3dadd( -48.8972, 452.913, -46.3588, 0.72 ) }
    apic_19 { pt3dadd( -49.1121, 454.338, -46.3045, 0.72 ) }
    apic_19 { pt3dadd( -49.4422, 455.936, -46.286, 0.72 ) }
    apic_19 { pt3dadd( -49.9526, 457.986, -46.3014, 0.72 ) }
    apic_19 { pt3dadd( -50.633, 460.54, -46.3256, 0.72 ) }
    apic_19 { pt3dadd( -51.3759, 463.981, -46.4849, 0.72 ) }
    apic_19 { pt3dadd( -51.7849, 466.973, -46.749, 0.72 ) }
    apic_19 { pt3dadd( -51.8447, 469.636, -47.0599, 0.72 ) }
    apic_19 { pt3dadd( -51.6789, 471.166, -47.2619, 0.72 ) }
    apic_19 { pt3dadd( -51.388, 472.521, -47.4858, 0.72 ) }
    apic_19 { pt3dadd( -50.495, 475.605, -48.1335, 0.6 ) }
    apic_19 { pt3dadd( -49.9343, 477.234, -48.4553, 0.6 ) }
    apic_19 { pt3dadd( -49.6431, 478.349, -48.5096, 0.6 ) }
    apic_19 { pt3dadd( -49.3912, 479.731, -48.4792, 0.6 ) }
    apic_19 { pt3dadd( -49.2925, 481.126, -48.4174, 0.6 ) }
    apic_19 { pt3dadd( -49.3911, 482.667, -48.3532, 0.6 ) }
    apic_19 { pt3dadd( -49.582, 483.809, -48.3247, 0.6 ) }
    apic_19 { pt3dadd( -50.6496, 488.099, -48.0413, 0.6 ) }
    apic_19 { pt3dadd( -51.4159, 490.704, -47.8367, 0.6 ) }
    apic_19 { pt3dadd( -51.8713, 492.11, -47.7182, 0.6 ) }
    apic_19 { pt3dadd( -52.6124, 494.365, -47.4963, 0.6 ) }
    apic_19 { pt3dadd( -53.1062, 495.862, -47.3245, 0.6 ) }
    apic_19 { pt3dadd( -54.4482, 500.046, -46.7548, 0.6 ) }
    apic_19 { pt3dadd( -55.2981, 502.796, -46.316, 0.6 ) }
    apic_19 { pt3dadd( -56.1053, 505.491, -45.8626, 0.6 ) }
    apic_19 { pt3dadd( -56.7699, 507.798, -45.4685, 0.6 ) }
    apic_19 { pt3dadd( -57.5292, 510.514, -44.9523, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_19 { pt3dadd( -58.0315, 512.338, -44.617, 0.6 ) }
    apic_19 { pt3dadd( -58.455, 513.844, -44.4089, 0.6 ) }
    apic_19 { pt3dadd( -58.9707, 515.467, -44.1599, 0.6 ) }
    apic_19 { pt3dadd( -59.3858, 516.736, -43.9587, 0.6 ) }
    apic_19 { pt3dadd( -60.4069, 519.616, -43.5656, 0.6 ) }
    apic_19 { pt3dadd( -61.1097, 521.499, -43.3601, 0.6 ) }
    apic_19 { pt3dadd( -62.1471, 524.333, -43.0847, 0.6 ) }
    apic_19 { pt3dadd( -62.9035, 526.491, -42.8854, 0.6 ) }
    apic_19 { pt3dadd( -63.5944, 528.54, -42.7189, 0.6 ) }
    apic_19 { pt3dadd( -64.3378, 530.727, -42.6032, 0.6 ) }
    apic_19 { pt3dadd( -64.8994, 532.585, -42.6126, 0.6 ) }
    apic_19 { pt3dadd( -65.5284, 534.952, -42.6882, 0.6 ) }
    apic_19 { pt3dadd( -65.8323, 536.259, -42.7765, 0.6 ) }
    apic_19 { pt3dadd( -66.271, 538.125, -42.9895, 0.6 ) }
    apic_19 { pt3dadd( -66.6398, 539.733, -43.237, 0.6 ) }
    apic_19 { pt3dadd( -67.2557, 543.364, -43.8094, 0.6 ) }
    apic_19 { pt3dadd( -67.4408, 544.803, -44.0434, 0.6 ) }
    apic_19 { pt3dadd( -67.5751, 546.158, -44.261, 0.6 ) }
    apic_19 { pt3dadd( -67.6574, 547.37, -44.4042, 0.6 ) }
    apic_19 { pt3dadd( -67.7326, 548.96, -44.5095, 0.6 ) }
    apic_19 { pt3dadd( -67.8275, 551.179, -44.6027, 0.6 ) }
    apic_19 { pt3dadd( -67.9159, 552.934, -44.6579, 0.6 ) }
    apic_19 { pt3dadd( -68.0081, 554.658, -44.7106, 0.6 ) }
    apic_19 { pt3dadd( -68.1233, 557.522, -44.7561, 0.6 ) }
    apic_19 { pt3dadd( -68.2, 559.945, -44.867, 0.6 ) }
    apic_19 { pt3dadd( -68.2966, 563.944, -45.1729, 0.6 ) }
    apic_19 { pt3dadd( -68.2728, 567.134, -45.4285, 0.6 ) }
    apic_19 { pt3dadd( -68.1616, 570.076, -45.6465, 0.6 ) }
    apic_19 { pt3dadd( -68.0125, 573.15, -45.8584, 0.6 ) }
    apic_19 { pt3dadd( -67.8291, 577.143, -46.0958, 0.6 ) }
    apic_19 { pt3dadd( -67.6955, 579.8, -46.2268, 0.6 ) }
    apic_19 { pt3dadd( -67.4054, 584.924, -46.3386, 0.48 ) }
    apic_19 { pt3dadd( -67.285, 586.782, -46.3516, 0.48 ) }
    apic_19 { pt3dadd( -67.1008, 589.9, -46.3572, 0.48 ) }
    apic_19 { pt3dadd( -66.9964, 593.362, -46.3313, 0.48 ) }
    apic_19 { pt3dadd( -66.9551, 596.215, -46.3118, 0.48 ) }
    apic_19 { pt3dadd( -66.9528, 598.345, -46.3422, 0.48 ) }
    apic_19 { pt3dadd( -66.9776, 600.156, -46.4206, 0.48 ) }
    apic_19 { pt3dadd( -67.0146, 602.454, -46.5547, 0.48 ) }
    apic_19 { pt3dadd( -67.0441, 604.614, -46.6847, 0.48 ) }
    apic_19 { pt3dadd( -67.1584, 609.031, -46.9189, 0.48 ) }
    apic_19 { pt3dadd( -67.3904, 613.534, -47.0977, 0.48 ) }
    apic_19 { pt3dadd( -67.4507, 614.963, -47.1745, 0.36 ) }
    apic_19 { pt3dadd( -67.488, 616.997, -47.2677, 0.36 ) }
    apic_19 { pt3dadd( -67.4556, 618.598, -47.3205, 0.36 ) }
    apic_19 { pt3dadd( -67.3679, 620.89, -47.3634, 0.36 ) }
    apic_19 { pt3dadd( -67.2948, 622.916, -47.3446, 0.36 ) }
    apic_19 { pt3dadd( -67.1637, 625.15, -47.3622, 0.36 ) }
    apic_19 { pt3dadd( -67.045, 626.565, -47.3749, 0.36 ) }
    apic_19 { pt3dadd( -66.8413, 628.764, -47.4881, 0.36 ) }
    apic_19 { pt3dadd( -66.7216, 631.2, -47.6056, 0.36 ) }
    apic_19 { pt3dadd( -66.6487, 634.089, -47.7568, 0.36 ) }
    apic_19 { pt3dadd( -66.6987, 636.404, -47.8185, 0.36 ) }
    apic_19 { pt3dadd( -66.9444, 639.261, -47.8443, 0.36 ) }
    apic_19 { pt3dadd( -67.3623, 643.013, -47.8858, 0.36 ) }
    apic_19 { pt3dadd( -67.8321, 646.949, -47.9628, 0.36 ) }
    apic_19 { pt3dadd( -68.2066, 649.66, -47.9566, 0.36 ) }
    apic_19 { pt3dadd( -68.6492, 652.412, -47.847, 0.36 ) }
    apic_19 { pt3dadd( -68.9722, 654.522, -47.6918, 0.36 ) }
    apic_19 { pt3dadd( -69.3963, 657.021, -47.3394, 0.36 ) }
    apic_19 { pt3dadd( -69.8166, 659.339, -46.8822, 0.36 ) }
    apic_19 { pt3dadd( -70.2322, 661.735, -46.4028, 0.36 ) }
    apic_19 { pt3dadd( -70.6402, 664.016, -45.9102, 0.36 ) }
    apic_19 { pt3dadd( -71.0871, 666.906, -45.4203, 0.36 ) }
    apic_19 { pt3dadd( -71.496, 669.763, -44.9645, 0.36 ) }
    apic_19 { pt3dadd( -71.783, 672.046, -44.6626, 0.36 ) }
    apic_19 { pt3dadd( -72.1087, 675.324, -44.3579, 0.36 ) }
    apic_19 { pt3dadd( -72.444, 679.481, -44.229, 0.36 ) }
    apic_19 { pt3dadd( -72.7124, 683.257, -44.2506, 0.36 ) }
    apic_19 { pt3dadd( -72.8508, 685.789, -44.3354, 0.36 ) }
    apic_19 { pt3dadd( -72.8542, 688.804, -44.5145, 0.36 ) }
    apic_19 { pt3dadd( -72.7676, 691.279, -44.6777, 0.36 ) }
    apic_19 { pt3dadd( -72.593, 694.676, -44.9346, 0.36 ) }
    apic_19 { pt3dadd( -72.4718, 696.684, -45.0662, 0.36 ) }
    apic_19 { pt3dadd( -72.3155, 699.113, -45.192, 0.36 ) }
    apic_19 { pt3dadd( -72.1813, 701.345, -45.3425, 0.36 ) }
    apic_19 { pt3dadd( -72.151, 702.199, -45.4321, 0.36 ) }
    apic_19 { pt3dadd( -71.9552, 704.222, -45.6556, 0.36 ) }
    apic_19 { pt3dadd( -71.7677, 705.563, -45.8196, 0.36 ) }
    apic_19 { pt3dadd( -71.5028, 707.731, -46.1089, 0.36 ) }
    apic_19 { pt3dadd( -71.3291, 709.567, -46.3411, 0.36 ) }
    apic_19 { pt3dadd( -70.9454, 713.25, -46.7624, 0.36 ) }
    apic_19 { pt3dadd( -70.5624, 716.73, -47.0834, 0.36 ) }
    apic_19 { pt3dadd( -70.3252, 718.903, -47.2423, 0.36 ) }
    apic_19 { pt3dadd( -70.074, 721.493, -47.3656, 0.36 ) }
    apic_19 { pt3dadd( -69.8512, 723.91, -47.409, 0.36 ) }
    apic_19 { pt3dadd( -69.6237, 726.611, -47.3849, 0.36 ) }
    apic_19 { pt3dadd( -69.4753, 729.07, -47.3089, 0.36 ) }
    apic_19 { pt3dadd( -69.4096, 731.595, -47.2675, 0.36 ) }
    apic_19 { pt3dadd( -69.3702, 734.05, -47.22, 0.36 ) }
    apic_19 { pt3dadd( -69.3546, 736.906, -47.1627, 0.36 ) }
    apic_19 { pt3dadd( -69.4006, 738.758, -47.1259, 0.36 ) }
    apic_19 { pt3dadd( -69.4974, 740.809, -47.0588, 0.36 ) }
    apic_19 { pt3dadd( -69.5779, 742.879, -46.9515, 0.36 ) }
    apic_19 { pt3dadd( -69.7701, 745.915, -46.6881, 0.36 ) }
    apic_19 { pt3dadd( -69.9468, 748.486, -46.5344, 0.36 ) }
    apic_19 { pt3dadd( -70.1377, 750.567, -46.4871, 0.36 ) }
    apic_19 { pt3dadd( -70.3071, 752.428, -46.5202, 0.36 ) }
    apic_19 { pt3dadd( -70.4122, 754.177, -46.6792, 0.36 ) }
    apic_19 { pt3dadd( -70.569, 756.769, -47.1109, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_19 { pt3dadd( -70.7518, 760.642, -47.946, 0.36 ) }
    apic_19 { pt3dadd( -70.8237, 762.152, -48.3194, 0.36 ) }
    apic_19 { pt3dadd( -70.8961, 763.884, -48.7632, 0.36 ) }
    apic_19 { pt3dadd( -70.9463, 766.965, -49.6184, 0.36 ) }
    apic_19 { pt3dadd( -70.8853, 770.21, -50.529, 0.36 ) }
    apic_19 { pt3dadd( -70.7733, 772.991, -51.2721, 0.36 ) }
    apic_19 { pt3dadd( -70.6381, 775.747, -51.8845, 0.36 ) }
    apic_19 { pt3dadd( -70.4691, 778.357, -52.412, 0.36 ) }
    apic_19 { pt3dadd( -70.272, 781.133, -52.9924, 0.36 ) }
    apic_19 { pt3dadd( -70.1859, 782.823, -53.3435, 0.36 ) }
    apic_19 { pt3dadd( -70.1578, 788.114, -54.4661, 0.36 ) }
    apic_19 { pt3dadd( -70.1594, 790.822, -55.0627, 0.36 ) }
    apic_19 { pt3dadd( -70.2071, 793.486, -55.6514, 0.36 ) }
    apic_19 { pt3dadd( -70.4433, 798.012, -56.6356, 0.36 ) }
    apic_19 { pt3dadd( -70.7075, 800.515, -57.1365, 0.36 ) }
    apic_19 { pt3dadd( -71.3827, 805.273, -58.0955, 0.36 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 16/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -47.8513, 403.394, -42.7193, 0.84 ) }
    apic_18 { pt3dadd( -50.6933, 406.101, -44.9497, 0.48 ) }
    apic_18 { pt3dadd( -53.1082, 407.77, -46.8332, 0.48 ) }
    apic_18 { pt3dadd( -53.8416, 408.188, -47.4365, 0.48 ) }
    apic_18 { pt3dadd( -54.822, 408.651, -48.2059, 0.48 ) }
    apic_18 { pt3dadd( -56.2651, 409.302, -49.3041, 0.48 ) }
    apic_18 { pt3dadd( -57.2066, 409.644, -49.9202, 0.48 ) }
    apic_18 { pt3dadd( -58.946, 410.237, -51.0662, 0.48 ) }
    apic_18 { pt3dadd( -60.0028, 410.658, -51.7425, 0.48 ) }
    apic_18 { pt3dadd( -61.9627, 411.652, -52.8976, 0.48 ) }
    apic_18 { pt3dadd( -62.8905, 412.213, -53.4412, 0.48 ) }
    apic_18 { pt3dadd( -64.5079, 413.259, -54.3581, 0.48 ) }
    apic_18 { pt3dadd( -65.8505, 414.176, -55.1488, 0.48 ) }
    apic_18 { pt3dadd( -67.4846, 415.397, -56.1333, 0.48 ) }
    apic_18 { pt3dadd( -68.7337, 416.455, -56.9926, 0.48 ) }
    apic_18 { pt3dadd( -70.0566, 417.65, -58.0201, 0.48 ) }
    apic_18 { pt3dadd( -71.6192, 419.07, -59.3652, 0.48 ) }
    apic_18 { pt3dadd( -73.6247, 420.935, -61.2618, 0.48 ) }
    apic_18 { pt3dadd( -74.9205, 422.103, -62.5403, 0.48 ) }
    apic_18 { pt3dadd( -76.0103, 423.033, -63.6496, 0.48 ) }
    apic_18 { pt3dadd( -76.8414, 423.758, -64.4699, 0.48 ) }
    apic_18 { pt3dadd( -77.8708, 424.638, -65.288, 0.48 ) }
    apic_18 { pt3dadd( -78.8696, 425.415, -65.9009, 0.48 ) }
    apic_18 { pt3dadd( -80.3416, 426.296, -66.5165, 0.36 ) }
    apic_18 { pt3dadd( -81.2174, 426.687, -66.7845, 0.36 ) }
    apic_18 { pt3dadd( -83.4415, 427.468, -67.1964, 0.36 ) }
    apic_18 { pt3dadd( -86.4211, 428.373, -67.5426, 0.36 ) }
    apic_18 { pt3dadd( -88.1157, 428.827, -67.741, 0.36 ) }
    apic_18 { pt3dadd( -89.7576, 429.185, -67.9209, 0.36 ) }
    apic_18 { pt3dadd( -91.3939, 429.497, -68.1177, 0.36 ) }
    apic_18 { pt3dadd( -93.6026, 429.865, -68.3871, 0.36 ) }
    apic_18 { pt3dadd( -94.6249, 430.036, -68.5051, 0.36 ) }
    apic_18 { pt3dadd( -97.2344, 430.568, -68.7809, 0.36 ) }
    apic_18 { pt3dadd( -99.7953, 431.166, -69.0223, 0.36 ) }
    apic_18 { pt3dadd( -101.912, 431.686, -69.2405, 0.36 ) }
    apic_18 { pt3dadd( -103.857, 432.171, -69.386, 0.36 ) }
    apic_18 { pt3dadd( -106.333, 432.771, -69.4362, 0.36 ) }
    apic_18 { pt3dadd( -108.025, 433.169, -69.3162, 0.36 ) }
    apic_18 { pt3dadd( -109.574, 433.508, -69.1253, 0.36 ) }
    apic_18 { pt3dadd( -111.609, 433.944, -68.9424, 0.36 ) }
    apic_18 { pt3dadd( -113.607, 434.323, -68.8009, 0.36 ) }
    apic_18 { pt3dadd( -115.426, 434.681, -68.5755, 0.36 ) }
    apic_18 { pt3dadd( -116.765, 435.013, -68.3065, 0.36 ) }
    apic_18 { pt3dadd( -119.017, 435.784, -67.5956, 0.36 ) }
    apic_18 { pt3dadd( -120.482, 436.428, -66.9456, 0.36 ) }
    apic_18 { pt3dadd( -121.818, 437.096, -66.2593, 0.36 ) }
    apic_18 { pt3dadd( -124.921, 438.704, -64.6714, 0.36 ) }
    apic_18 { pt3dadd( -126.167, 439.388, -64.0182, 0.36 ) }
    apic_18 { pt3dadd( -127.517, 440.234, -63.2778, 0.36 ) }
    apic_18 { pt3dadd( -129.228, 441.437, -62.273, 0.36 ) }
    apic_18 { pt3dadd( -130.669, 442.489, -61.5659, 0.36 ) }
    apic_18 { pt3dadd( -131.224, 442.856, -61.4167, 0.36 ) }
    apic_18 { pt3dadd( -132.036, 443.313, -61.3989, 0.36 ) }
    apic_18 { pt3dadd( -134.768, 444.692, -61.7185, 0.36 ) }
    apic_18 { pt3dadd( -135.684, 445.143, -61.8757, 0.36 ) }
    apic_18 { pt3dadd( -137.944, 446.26, -62.3611, 0.36 ) }
    apic_18 { pt3dadd( -140.361, 447.42, -62.9333, 0.36 ) }
    apic_18 { pt3dadd( -141.635, 448.021, -63.2378, 0.36 ) }
    apic_18 { pt3dadd( -143.677, 448.957, -63.7383, 0.36 ) }
    apic_18 { pt3dadd( -145.96, 450.004, -64.3638, 0.36 ) }
    apic_18 { pt3dadd( -147.843, 450.93, -64.8638, 0.36 ) }
    apic_18 { pt3dadd( -149.526, 451.86, -65.274, 0.36 ) }
    apic_18 { pt3dadd( -150.849, 452.671, -65.5198, 0.36 ) }
    apic_18 { pt3dadd( -152.034, 453.391, -65.6827, 0.36 ) }
    apic_18 { pt3dadd( -154.036, 454.489, -65.8808, 0.36 ) }
    apic_18 { pt3dadd( -156.016, 455.457, -66.0546, 0.36 ) }
    apic_18 { pt3dadd( -157.295, 455.969, -66.0557, 0.36 ) }
    apic_18 { pt3dadd( -159.735, 456.718, -65.9372, 0.36 ) }
    apic_18 { pt3dadd( -161.413, 457.117, -65.8148, 0.36 ) }
    apic_18 { pt3dadd( -163.536, 457.592, -65.5875, 0.36 ) }
    apic_18 { pt3dadd( -164.821, 457.856, -65.4109, 0.36 ) }
    apic_18 { pt3dadd( -167.015, 458.295, -65.2112, 0.36 ) }
    apic_18 { pt3dadd( -169.05, 458.73, -65.2533, 0.36 ) }
    apic_18 { pt3dadd( -170.628, 459.184, -65.5283, 0.36 ) }
    apic_18 { pt3dadd( -172.311, 459.899, -66.0041, 0.36 ) }
    apic_18 { pt3dadd( -173.504, 460.633, -66.5592, 0.36 ) }
    apic_18 { pt3dadd( -174.581, 461.44, -67.2256, 0.36 ) }
    apic_18 { pt3dadd( -175.571, 462.326, -67.9405, 0.36 ) }
    apic_18 { pt3dadd( -177.261, 463.754, -68.9882, 0.36 ) }
    apic_18 { pt3dadd( -178.702, 464.806, -69.7727, 0.36 ) }
    apic_18 { pt3dadd( -181.146, 466.364, -70.9617, 0.36 ) }
    apic_18 { pt3dadd( -182.089, 466.963, -71.3539, 0.36 ) }
    apic_18 { pt3dadd( -185.207, 469.019, -72.3776, 0.36 ) }
    apic_18 { pt3dadd( -188.401, 471.006, -73.0616, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_18 { pt3dadd( -190.452, 472.166, -73.3467, 0.36 ) }
    apic_18 { pt3dadd( -192.209, 473.091, -73.4755, 0.36 ) }
    apic_18 { pt3dadd( -194.22, 474.126, -73.5, 0.36 ) }
    apic_18 { pt3dadd( -196.466, 475.242, -73.4714, 0.36 ) }
    apic_18 { pt3dadd( -199.408, 476.521, -73.4322, 0.36 ) }
    apic_18 { pt3dadd( -201.704, 477.469, -73.4939, 0.36 ) }
    apic_18 { pt3dadd( -203.174, 477.984, -73.5439, 0.36 ) }
    apic_18 { pt3dadd( -205.31, 478.646, -73.667, 0.36 ) }
    apic_18 { pt3dadd( -207.396, 479.222, -73.8789, 0.36 ) }
    apic_18 { pt3dadd( -209.091, 479.682, -74.11, 0.36 ) }
    apic_18 { pt3dadd( -210.676, 480.21, -74.4114, 0.36 ) }
    apic_18 { pt3dadd( -212.951, 481.067, -74.84, 0.36 ) }
    apic_18 { pt3dadd( -214.538, 481.726, -75.1626, 0.36 ) }
    apic_18 { pt3dadd( -215.952, 482.306, -75.4559, 0.36 ) }
    apic_18 { pt3dadd( -218.234, 483.357, -76.0182, 0.36 ) }
    apic_18 { pt3dadd( -219.558, 484.048, -76.3191, 0.36 ) }
    apic_18 { pt3dadd( -221.31, 485.018, -76.6699, 0.36 ) }
    apic_18 { pt3dadd( -222.492, 485.666, -76.9532, 0.36 ) }
    apic_18 { pt3dadd( -224.882, 486.891, -77.5196, 0.36 ) }
    apic_18 { pt3dadd( -226.493, 487.764, -77.8341, 0.36 ) }
    apic_18 { pt3dadd( -228.587, 489.046, -78.0192, 0.36 ) }
    apic_18 { pt3dadd( -229.753, 489.808, -77.9941, 0.36 ) }
    apic_18 { pt3dadd( -231.832, 491.248, -77.8032, 0.36 ) }
    apic_18 { pt3dadd( -233.589, 492.593, -77.5125, 0.36 ) }
    apic_18 { pt3dadd( -235.447, 494.265, -77.0116, 0.36 ) }
    apic_18 { pt3dadd( -237.682, 496.427, -76.1489, 0.36 ) }
    apic_18 { pt3dadd( -239.262, 498.096, -75.5262, 0.36 ) }
    apic_18 { pt3dadd( -240.241, 499.268, -75.1476, 0.36 ) }
    apic_18 { pt3dadd( -241.024, 500.366, -74.8672, 0.36 ) }
    apic_18 { pt3dadd( -242.377, 502.596, -74.6821, 0.36 ) }
    apic_18 { pt3dadd( -243.13, 503.921, -74.8071, 0.36 ) }
    apic_18 { pt3dadd( -244.487, 506.239, -75.4954, 0.36 ) }
    apic_18 { pt3dadd( -245.69, 508.242, -76.5348, 0.36 ) }
    apic_18 { pt3dadd( -246.516, 509.595, -77.3902, 0.36 ) }
    apic_18 { pt3dadd( -247.456, 511.262, -78.7191, 0.36 ) }
    apic_18 { pt3dadd( -248.265, 512.792, -80.1329, 0.36 ) }
    apic_18 { pt3dadd( -249.211, 514.706, -82.056, 0.36 ) }
    apic_18 { pt3dadd( -250.268, 516.984, -84.5091, 0.36 ) }
    apic_18 { pt3dadd( -250.857, 518.293, -86.1, 0.36 ) }
    apic_18 { pt3dadd( -252.023, 520.921, -89.8309, 0.36 ) }
    apic_18 { pt3dadd( -252.399, 521.796, -91.2275, 0.36 ) }
    apic_18 { pt3dadd( -252.864, 522.871, -93.4736, 0.36 ) }
    apic_18 { pt3dadd( -253.125, 523.128, -94.8488, 0.36 ) }
    apic_18 { pt3dadd( -253.448, 522.676, -96.1769, 0.36 ) }
    apic_18 { pt3dadd( -254.107, 521.36, -98.4589, 0.36 ) }
    apic_18 { pt3dadd( -255.018, 519.674, -100.61, 0.36 ) }
    apic_18 { pt3dadd( -256.267, 517.774, -102.931, 0.36 ) }
    apic_18 { pt3dadd( -257.258, 516.696, -104.345, 0.36 ) }
    apic_18 { pt3dadd( -259.071, 515.743, -106.303, 0.36 ) }
    apic_18 { pt3dadd( -260.489, 516.038, -107.331, 0.36 ) }
    apic_18 { pt3dadd( -262.317, 517.498, -108.257, 0.36 ) }
    apic_18 { pt3dadd( -263.972, 519.361, -108.949, 0.36 ) }
    apic_18 { pt3dadd( -265.539, 521.647, -109.378, 0.36 ) }
    apic_18 { pt3dadd( -266.65, 523.581, -109.596, 0.36 ) }
    apic_18 { pt3dadd( -267.79, 525.69, -109.743, 0.36 ) }
    apic_18 { pt3dadd( -269.167, 528.403, -109.936, 0.36 ) }
    apic_18 { pt3dadd( -269.707, 529.497, -110.041, 0.36 ) }
    apic_18 { pt3dadd( -271.188, 532.232, -110.41, 0.36 ) }
    apic_18 { pt3dadd( -272.26, 533.866, -110.711, 0.36 ) }
    apic_18 { pt3dadd( -273.735, 535.791, -111.157, 0.36 ) }
    apic_18 { pt3dadd( -274.936, 537.262, -111.517, 0.36 ) }
    apic_18 { pt3dadd( -276.013, 538.588, -111.847, 0.36 ) }
    apic_18 { pt3dadd( -277.21, 540.212, -112.254, 0.36 ) }
    apic_18 { pt3dadd( -278.654, 542.309, -112.787, 0.36 ) }
    apic_18 { pt3dadd( -281.337, 546.683, -113.81, 0.36 ) }
    apic_18 { pt3dadd( -283.026, 549.864, -114.461, 0.36 ) }
    apic_18 { pt3dadd( -283.981, 551.831, -114.833, 0.36 ) }
    apic_18 { pt3dadd( -284.932, 553.74, -115.189, 0.36 ) }
    apic_18 { pt3dadd( -285.858, 555.471, -115.499, 0.36 ) }
    apic_18 { pt3dadd( -287.004, 557.323, -115.836, 0.36 ) }
    apic_18 { pt3dadd( -287.71, 558.241, -116.012, 0.36 ) }
    apic_18 { pt3dadd( -289.066, 559.709, -116.328, 0.36 ) }
    apic_18 { pt3dadd( -291.578, 561.915, -116.783, 0.36 ) }
    apic_18 { pt3dadd( -293.334, 563.238, -117.029, 0.36 ) }
    apic_18 { pt3dadd( -294.424, 564.108, -117.099, 0.36 ) }
    apic_18 { pt3dadd( -295.907, 565.572, -117.066, 0.36 ) }
    apic_18 { pt3dadd( -296.946, 566.803, -116.972, 0.36 ) }
    apic_18 { pt3dadd( -298.322, 568.721, -116.635, 0.36 ) }
    apic_18 { pt3dadd( -299.019, 569.838, -116.37, 0.36 ) }
    apic_18 { pt3dadd( -301.452, 573.878, -115.208, 0.36 ) }
    apic_18 { pt3dadd( -303.473, 577.044, -114.167, 0.36 ) }
    apic_18 { pt3dadd( -304.381, 578.285, -113.741, 0.36 ) }
    apic_18 { pt3dadd( -306.318, 580.585, -112.923, 0.36 ) }
    apic_18 { pt3dadd( -307.573, 581.906, -112.47, 0.36 ) }
    apic_18 { pt3dadd( -309.678, 583.781, -111.844, 0.36 ) }
    apic_18 { pt3dadd( -310.979, 584.679, -111.564, 0.36 ) }
    apic_18 { pt3dadd( -313.784, 586.281, -111.095, 0.36 ) }
    apic_18 { pt3dadd( -316.493, 587.631, -110.776, 0.36 ) }
    apic_18 { pt3dadd( -318.206, 588.334, -110.711, 0.36 ) }
    apic_18 { pt3dadd( -320.9, 589.15, -110.709, 0.36 ) }
    apic_18 { pt3dadd( -322.261, 589.513, -110.837, 0.36 ) }
    apic_18 { pt3dadd( -323.745, 589.982, -111.122, 0.36 ) }
    apic_18 { pt3dadd( -325.51, 590.639, -111.674, 0.36 ) }
    apic_18 { pt3dadd( -327.147, 591.331, -112.388, 0.36 ) }
    apic_18 { pt3dadd( -328.938, 592.206, -113.152, 0.36 ) }
    apic_18 { pt3dadd( -332.335, 594.192, -114.48, 0.36 ) }
    apic_18 { pt3dadd( -334.117, 595.541, -115.05, 0.36 ) }
    apic_18 { pt3dadd( -336.01, 597.301, -115.42, 0.36 ) }
    apic_18 { pt3dadd( -337.128, 598.502, -115.477, 0.36 ) }
    apic_18 { pt3dadd( -339.626, 601.329, -115.322, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    apic_18 { pt3dadd( -340.632, 602.5, -115.257, 0.36 ) }
    apic_18 { pt3dadd( -342.666, 604.759, -115.082, 0.36 ) }
    apic_18 { pt3dadd( -344.445, 606.822, -115.013, 0.36 ) }
    apic_18 { pt3dadd( -345.494, 608.238, -115.071, 0.36 ) }
    apic_18 { pt3dadd( -347.095, 610.803, -115.329, 0.36 ) }
    apic_18 { pt3dadd( -348.883, 614.359, -115.882, 0.36 ) }
    apic_18 { pt3dadd( -349.421, 615.618, -116.076, 0.36 ) }
    apic_18 { pt3dadd( -350.358, 618.029, -116.441, 0.36 ) }
    apic_18 { pt3dadd( -351.702, 621.724, -116.982, 0.36 ) }
    apic_18 { pt3dadd( -352.488, 624.103, -117.229, 0.36 ) }
    apic_18 { pt3dadd( -353.036, 625.697, -117.236, 0.36 ) }
    apic_18 { pt3dadd( -354.25, 628.812, -117.041, 0.36 ) }
    apic_18 { pt3dadd( -355.831, 632.327, -116.818, 0.36 ) }
    apic_18 { pt3dadd( -356.978, 634.576, -116.68, 0.36 ) }
    apic_18 { pt3dadd( -358.069, 636.483, -116.532, 0.36 ) }
    apic_18 { pt3dadd( -360.91, 640.99, -116.175, 0.36 ) }
    apic_18 { pt3dadd( -361.715, 642.23, -116.064, 0.36 ) }
    apic_18 { pt3dadd( -362.731, 643.816, -115.905, 0.36 ) }
    apic_18 { pt3dadd( -364.159, 645.973, -115.735, 0.36 ) }
    apic_18 { pt3dadd( -365.538, 647.855, -115.689, 0.36 ) }
    apic_18 { pt3dadd( -367.0, 649.729, -115.775, 0.36 ) }
    apic_18 { pt3dadd( -368.613, 651.713, -115.897, 0.36 ) }
    apic_18 { pt3dadd( -370.565, 653.945, -115.998, 0.36 ) }
    apic_18 { pt3dadd( -372.945, 656.524, -116.093, 0.36 ) }
    apic_18 { pt3dadd( -374.249, 657.85, -116.149, 0.36 ) }
    apic_18 { pt3dadd( -375.619, 659.222, -116.234, 0.36 ) }
    apic_18 { pt3dadd( -377.868, 661.433, -116.148, 0.36 ) }
    apic_18 { pt3dadd( -379.068, 662.621, -116.002, 0.36 ) }
    apic_18 { pt3dadd( -380.072, 663.645, -115.798, 0.36 ) }
    apic_18 { pt3dadd( -381.202, 664.881, -115.462, 0.36 ) }
    apic_18 { pt3dadd( -384.163, 668.151, -114.503, 0.36 ) }
    apic_18 { pt3dadd( -386.21, 670.399, -113.854, 0.36 ) }
    apic_18 { pt3dadd( -387.451, 671.81, -113.479, 0.36 ) }
    apic_18 { pt3dadd( -388.554, 673.138, -113.153, 0.36 ) }
    apic_18 { pt3dadd( -389.599, 674.373, -112.9, 0.36 ) }
    apic_18 { pt3dadd( -391.074, 676.182, -112.646, 0.36 ) }
    apic_18 { pt3dadd( -392.035, 677.501, -112.545, 0.36 ) }
    apic_18 { pt3dadd( -393.209, 679.256, -112.618, 0.36 ) }
    apic_18 { pt3dadd( -394.693, 681.69, -112.81, 0.36 ) }
    apic_18 { pt3dadd( -395.781, 683.648, -113.037, 0.36 ) }
    apic_18 { pt3dadd( -397.055, 686.297, -113.438, 0.36 ) }
    apic_18 { pt3dadd( -397.888, 688.257, -113.764, 0.36 ) }
    apic_18 { pt3dadd( -398.875, 690.569, -114.137, 0.36 ) }
    apic_18 { pt3dadd( -400.528, 694.33, -114.705, 0.36 ) }
    apic_18 { pt3dadd( -401.444, 696.313, -114.932, 0.36 ) }
    apic_18 { pt3dadd( -402.563, 698.771, -115.093, 0.36 ) }
    apic_18 { pt3dadd( -404.123, 702.082, -115.176, 0.36 ) }
    apic_18 { pt3dadd( -405.159, 704.117, -115.166, 0.36 ) }
    apic_18 { pt3dadd( -405.948, 705.479, -115.076, 0.36 ) }
    apic_18 { pt3dadd( -407.962, 708.617, -114.673, 0.36 ) }
    apic_18 { pt3dadd( -410.063, 711.531, -114.171, 0.36 ) }
    apic_18 { pt3dadd( -410.872, 712.536, -113.975, 0.36 ) }
    apic_18 { pt3dadd( -412.225, 714.18, -113.669, 0.36 ) }
    apic_18 { pt3dadd( -414.638, 717.263, -113.227, 0.36 ) }
    apic_18 { pt3dadd( -416.039, 719.081, -113.033, 0.36 ) }
    apic_18 { pt3dadd( -417.54, 721.019, -112.979, 0.36 ) }
    apic_18 { pt3dadd( -419.029, 722.926, -113.132, 0.36 ) }
    apic_18 { pt3dadd( -420.559, 725.042, -113.437, 0.36 ) }
    apic_18 { pt3dadd( -422.179, 727.689, -114.081, 0.36 ) }
    apic_18 { pt3dadd( -423.079, 729.402, -114.68, 0.36 ) }
    apic_18 { pt3dadd( -424.071, 731.479, -115.514, 0.36 ) }
    apic_18 { pt3dadd( -424.907, 733.666, -116.453, 0.36 ) }
    apic_18 { pt3dadd( -425.402, 735.424, -117.254, 0.36 ) }
    apic_18 { pt3dadd( -425.854, 738.475, -118.832, 0.36 ) }
    apic_18 { pt3dadd( -425.868, 739.551, -119.42, 0.36 ) }
    apic_18 { pt3dadd( -425.75, 741.001, -120.202, 0.36 ) }
    apic_18 { pt3dadd( -425.477, 742.728, -121.054, 0.36 ) }
    apic_18 { pt3dadd( -425.056, 744.625, -121.905, 0.36 ) }
    apic_18 { pt3dadd( -424.498, 747.135, -122.916, 0.36 ) }
    apic_18 { pt3dadd( -424.315, 748.224, -123.293, 0.36 ) }
    apic_18 { pt3dadd( -424.201, 749.664, -123.758, 0.36 ) }
    apic_18 { pt3dadd( -424.206, 751.525, -124.278, 0.36 ) }
    apic_18 { pt3dadd( -424.293, 753.106, -124.644, 0.36 ) }
    apic_18 { pt3dadd( -424.43, 754.675, -124.945, 0.36 ) }
    apic_18 { pt3dadd( -424.73, 757.41, -125.32, 0.36 ) }
    apic_18 { pt3dadd( -425.017, 759.91, -125.625, 0.36 ) }
    apic_18 { pt3dadd( -425.253, 762.022, -125.856, 0.36 ) }
    apic_18 { pt3dadd( -425.594, 764.579, -126.099, 0.36 ) }
    apic_18 { pt3dadd( -425.925, 767.063, -126.277, 0.36 ) }
    apic_18 { pt3dadd( -426.3, 770.336, -126.397, 0.36 ) }
    apic_18 { pt3dadd( -426.556, 772.943, -126.407, 0.36 ) }
    apic_18 { pt3dadd( -426.858, 775.89, -126.486, 0.36 ) }
    apic_18 { pt3dadd( -427.35, 779.39, -126.683, 0.36 ) }
    apic_18 { pt3dadd( -427.83, 781.805, -126.908, 0.36 ) }
    apic_18 { pt3dadd( -428.326, 783.99, -127.208, 0.36 ) }
    apic_18 { pt3dadd( -428.611, 784.979, -127.4, 0.36 ) }
    apic_18 { pt3dadd( -429.77, 788.073, -128.297, 0.36 ) }
    apic_18 { pt3dadd( -430.588, 789.964, -129.063, 0.36 ) }
    apic_18 { pt3dadd( -431.625, 792.364, -130.339, 0.36 ) }
    apic_18 { pt3dadd( -432.605, 794.58, -131.722, 0.36 ) }
    apic_18 { pt3dadd( -433.237, 796.031, -132.696, 0.36 ) }
    apic_18 { pt3dadd( -434.11, 798.234, -134.176, 0.36 ) }
    apic_18 { pt3dadd( -434.952, 800.758, -135.763, 0.36 ) }
    apic_18 { pt3dadd( -435.469, 802.505, -136.931, 0.36 ) }
    apic_18 { pt3dadd( -435.778, 803.512, -137.618, 0.36 ) }
    apic_18 { pt3dadd( -436.241, 804.775, -138.497, 0.36 ) }
    apic_18 { pt3dadd( -436.67, 805.705, -139.096, 0.36 ) }
    apic_18 { pt3dadd( -437.347, 806.606, -139.544, 0.36 ) }
    apic_18 { pt3dadd( -438.382, 807.617, -139.951, 0.36 ) }
    apic_18 { pt3dadd( -440.797, 809.729, -140.792, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    apic_18 { pt3dadd( -441.7, 810.426, -141.098, 0.36 ) }
    apic_18 { pt3dadd( -443.374, 811.675, -141.731, 0.36 ) }
    apic_18 { pt3dadd( -446.32, 813.905, -142.955, 0.36 ) }
    apic_18 { pt3dadd( -448.817, 815.791, -144.099, 0.36 ) }
    apic_18 { pt3dadd( -450.387, 817.051, -144.88, 0.36 ) }
    apic_18 { pt3dadd( -452.694, 819.031, -146.186, 0.36 ) }
    apic_18 { pt3dadd( -454.382, 820.527, -147.231, 0.36 ) }
    apic_18 { pt3dadd( -455.694, 821.708, -148.122, 0.36 ) }
    apic_18 { pt3dadd( -456.803, 822.77, -148.988, 0.36 ) }
    apic_18 { pt3dadd( -458.235, 824.08, -149.927, 0.36 ) }
    apic_18 { pt3dadd( -459.836, 825.573, -150.828, 0.36 ) }
    apic_18 { pt3dadd( -461.391, 826.965, -151.558, 0.36 ) }
    apic_18 { pt3dadd( -463.392, 828.557, -152.299, 0.36 ) }
    apic_18 { pt3dadd( -465.413, 829.969, -152.887, 0.36 ) }
    apic_18 { pt3dadd( -467.73, 831.447, -153.423, 0.36 ) }
    apic_18 { pt3dadd( -469.479, 832.448, -153.627, 0.36 ) }
    apic_18 { pt3dadd( -471.413, 833.427, -153.53, 0.24 ) }
    apic_18 { pt3dadd( -473.512, 834.347, -153.259, 0.24 ) }
    apic_18 { pt3dadd( -475.885, 835.266, -152.769, 0.24 ) }
    apic_18 { pt3dadd( -476.633, 835.509, -152.527, 0.24 ) }
    apic_18 { pt3dadd( -479.634, 836.448, -151.243, 0.24 ) }
    apic_18 { pt3dadd( -482.866, 837.474, -149.306, 0.12 ) }
    apic_18 { pt3dadd( -484.67, 838.127, -147.75, 0.12 ) }
    apic_18 { pt3dadd( -486.341, 838.775, -145.949, 0.12 ) }
    apic_18 { pt3dadd( -488.583, 839.877, -143.189, 0.12 ) }
    apic_18 { pt3dadd( -489.373, 840.396, -142.136, 0.12 ) }
    apic_18 { pt3dadd( -490.69, 841.678, -140.134, 0.12 ) }
    apic_18 { pt3dadd( -492.741, 844.421, -136.77, 0.12 ) }
    apic_18 { pt3dadd( -493.172, 845.06, -136.021, 0.12 ) }
    apic_18 { pt3dadd( -494.126, 846.567, -134.542, 0.12 ) }
    apic_18 { pt3dadd( -495.658, 849.278, -132.602, 0.12 ) }
    apic_18 { pt3dadd( -497.049, 851.784, -131.153, 0.12 ) }
    apic_18 { pt3dadd( -497.599, 853.013, -130.715, 0.12 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 33/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( -71.3827, 805.273, -58.0955, 0.36 ) }
    apic_21 { pt3dadd( -71.3211, 806.849, -58.0703, 0.36 ) }
    apic_21 { pt3dadd( -70.9984, 812.334, -58.321, 0.36 ) }
    apic_21 { pt3dadd( -70.8216, 815.341, -58.4583, 0.24 ) }
    apic_21 { pt3dadd( -70.6261, 818.662, -58.6101, 0.24 ) }
    apic_21 { pt3dadd( -70.4656, 821.391, -58.7347, 0.24 ) }
    apic_21 { pt3dadd( -70.2665, 823.53, -58.9349, 0.24 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 40/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( -71.3827, 805.273, -58.0955, 0.36 ) }
    apic_20 { pt3dadd( -73.0675, 805.732, -60.5161, 0.24 ) }
    apic_20 { pt3dadd( -73.9128, 805.902, -61.6843, 0.24 ) }
    apic_20 { pt3dadd( -75.0732, 806.165, -63.2184, 0.24 ) }
    apic_20 { pt3dadd( -76.3423, 806.513, -65.0069, 0.24 ) }
    apic_20 { pt3dadd( -77.1383, 806.721, -66.1745, 0.24 ) }
    apic_20 { pt3dadd( -78.2051, 806.961, -67.7801, 0.24 ) }
    apic_20 { pt3dadd( -78.8769, 807.042, -68.7994, 0.24 ) }
    apic_20 { pt3dadd( -79.4754, 807.152, -69.9145, 0.24 ) }
    apic_20 { pt3dadd( -80.0089, 807.319, -71.1531, 0.24 ) }
    apic_20 { pt3dadd( -80.3331, 807.473, -72.0107, 0.24 ) }
    apic_20 { pt3dadd( -80.6339, 807.724, -73.0433, 0.24 ) }
    apic_20 { pt3dadd( -80.9103, 808.21, -74.5186, 0.24 ) }
    apic_20 { pt3dadd( -81.2292, 808.951, -76.5401, 0.24 ) }
    apic_20 { pt3dadd( -81.3905, 809.342, -77.5666, 0.24 ) }
    apic_20 { pt3dadd( -81.6465, 809.883, -78.8339, 0.24 ) }
    apic_20 { pt3dadd( -81.8895, 810.54, -80.3433, 0.24 ) }
    apic_20 { pt3dadd( -82.2943, 811.765, -83.2075, 0.24 ) }
    apic_20 { pt3dadd( -82.4115, 812.111, -84.123, 0.24 ) }
    apic_20 { pt3dadd( -82.6841, 812.774, -86.0514, 0.24 ) }
    apic_20 { pt3dadd( -82.8832, 813.276, -87.6931, 0.24 ) }
    apic_20 { pt3dadd( -83.196, 813.936, -90.358, 0.24 ) }
    apic_20 { pt3dadd( -83.3769, 814.263, -92.0496, 0.24 ) }
    apic_20 { pt3dadd( -83.5366, 814.514, -93.4367, 0.24 ) }
    apic_20 { pt3dadd( -83.63, 814.709, -94.2958, 0.24 ) }
    apic_20 { pt3dadd( -83.8458, 815.142, -95.8323, 0.24 ) }
    apic_20 { pt3dadd( -84.0049, 815.406, -96.5778, 0.24 ) }
    apic_20 { pt3dadd( -84.3229, 815.763, -97.4187, 0.24 ) }
    apic_20 { pt3dadd( -84.7176, 816.262, -98.4934, 0.24 ) }
    apic_20 { pt3dadd( -85.0227, 816.709, -99.2843, 0.24 ) }
    apic_20 { pt3dadd( -85.5473, 817.505, -100.595, 0.24 ) }
    apic_20 { pt3dadd( -85.9898, 818.158, -101.672, 0.24 ) }
    apic_20 { pt3dadd( -86.6032, 818.984, -103.147, 0.24 ) }
    apic_20 { pt3dadd( -87.1639, 819.913, -104.864, 0.24 ) }
    apic_20 { pt3dadd( -87.5704, 820.637, -106.33, 0.24 ) }
    apic_20 { pt3dadd( -87.787, 821.054, -107.197, 0.24 ) }
    apic_20 { pt3dadd( -87.9117, 821.36, -107.79, 0.24 ) }
    apic_20 { pt3dadd( -88.0965, 821.992, -108.827, 0.24 ) }
    apic_20 { pt3dadd( -88.299, 823.72, -111.174, 0.24 ) }
    apic_20 { pt3dadd( -88.2878, 824.572, -112.239, 0.24 ) }
    apic_20 { pt3dadd( -88.1381, 825.383, -113.187, 0.24 ) }
    apic_20 { pt3dadd( -87.9519, 826.073, -113.811, 0.24 ) }
    apic_20 { pt3dadd( -87.6981, 826.976, -114.474, 0.24 ) }
    apic_20 { pt3dadd( -87.2012, 828.885, -115.631, 0.24 ) }
    apic_20 { pt3dadd( -86.8952, 830.41, -116.441, 0.24 ) }
    apic_20 { pt3dadd( -86.6902, 831.593, -117.016, 0.24 ) }
    apic_20 { pt3dadd( -86.4263, 833.556, -118.025, 0.24 ) }
    apic_20 { pt3dadd( -86.3484, 834.667, -118.66, 0.24 ) }
    apic_20 { pt3dadd( -86.3504, 835.911, -119.412, 0.24 ) }
    apic_20 { pt3dadd( -86.4609, 837.205, -120.242, 0.24 ) }
    apic_20 { pt3dadd( -86.5936, 838.098, -120.902, 0.24 ) }
    apic_20 { pt3dadd( -86.8637, 839.265, -121.951, 0.24 ) }
    apic_20 { pt3dadd( -87.2032, 840.44, -123.187, 0.24 ) }
    apic_20 { pt3dadd( -87.5058, 841.431, -124.267, 0.24 ) }
    apic_20 { pt3dadd( -87.7895, 842.394, -125.322, 0.24 ) }
    apic_20 { pt3dadd( -88.0666, 843.385, -126.381, 0.24 ) }
    apic_20 { pt3dadd( -88.3644, 844.543, -127.668, 0.24 ) }
    apic_20 { pt3dadd( -88.656, 845.641, -129.01, 0.12 ) }
    apic_20 { pt3dadd( -88.9141, 846.435, -130.209, 0.12 ) }
    apic_20 { pt3dadd( -89.1186, 846.944, -131.126, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    apic_20 { pt3dadd( -89.2902, 847.329, -131.879, 0.12 ) }
    apic_20 { pt3dadd( -89.7045, 848.119, -133.444, 0.12 ) }
    apic_20 { pt3dadd( -90.2159, 848.889, -135.036, 0.12 ) }
    apic_20 { pt3dadd( -90.7481, 849.425, -136.312, 0.12 ) }
    apic_20 { pt3dadd( -91.378, 849.905, -137.508, 0.12 ) }
    apic_20 { pt3dadd( -92.3222, 850.561, -138.971, 0.12 ) }
    apic_20 { pt3dadd( -93.5608, 851.434, -140.563, 0.12 ) }
    apic_20 { pt3dadd( -94.2415, 851.939, -141.273, 0.12 ) }
    apic_20 { pt3dadd( -94.9065, 852.467, -141.875, 0.12 ) }
    apic_20 { pt3dadd( -95.8128, 853.235, -142.621, 0.12 ) }
    apic_20 { pt3dadd( -96.7302, 853.968, -143.226, 0.12 ) }
    apic_20 { pt3dadd( -97.0713, 854.264, -143.46, 0.12 ) }
    apic_20 { pt3dadd( -97.8676, 855.138, -144.152, 0.12 ) }
    apic_20 { pt3dadd( -98.1321, 855.602, -144.492, 0.12 ) }
    apic_20 { pt3dadd( -98.4477, 856.481, -145.08, 0.12 ) }
    apic_20 { pt3dadd( -98.7983, 858.089, -146.123, 0.12 ) }
    apic_20 { pt3dadd( -99.0791, 860.72, -147.753, 0.12 ) }
    apic_20 { pt3dadd( -99.1148, 861.809, -148.375, 0.12 ) }
    apic_20 { pt3dadd( -99.0641, 863.474, -149.379, 0.12 ) }
    apic_20 { pt3dadd( -98.9794, 864.578, -150.088, 0.12 ) }
    apic_20 { pt3dadd( -98.8746, 865.686, -150.828, 0.12 ) }
    apic_20 { pt3dadd( -98.7083, 867.231, -151.812, 0.12 ) }
    apic_20 { pt3dadd( -98.673, 868.196, -152.369, 0.12 ) }
    apic_20 { pt3dadd( -98.5682, 870.179, -153.65, 0.12 ) }
    apic_20 { pt3dadd( -98.4857, 871.395, -154.521, 0.12 ) }
    apic_20 { pt3dadd( -98.4149, 872.48, -155.32, 0.12 ) }
    apic_20 { pt3dadd( -98.3338, 873.639, -156.14, 0.12 ) }
    apic_20 { pt3dadd( -98.2438, 874.89, -157.046, 0.12 ) }
    apic_20 { pt3dadd( -98.1478, 876.913, -158.525, 0.12 ) }
    apic_20 { pt3dadd( -98.0798, 878.03, -159.306, 0.12 ) }
    apic_20 { pt3dadd( -97.9332, 879.855, -160.574, 0.12 ) }
    apic_20 { pt3dadd( -97.7733, 881.669, -161.832, 0.12 ) }
    apic_20 { pt3dadd( -97.666, 883.411, -163.059, 0.12 ) }
    apic_20 { pt3dadd( -97.6216, 884.819, -164.009, 0.12 ) }
    apic_20 { pt3dadd( -97.6866, 886.365, -164.993, 0.12 ) }
    apic_20 { pt3dadd( -97.8031, 887.622, -165.881, 0.12 ) }
    apic_20 { pt3dadd( -97.9828, 888.929, -166.874, 0.12 ) }
    apic_20 { pt3dadd( -98.2041, 890.131, -167.781, 0.12 ) }
    apic_20 { pt3dadd( -98.5807, 892.025, -169.133, 0.12 ) }
    apic_20 { pt3dadd( -98.8929, 893.342, -170.124, 0.12 ) }
    apic_20 { pt3dadd( -99.3183, 894.652, -171.229, 0.12 ) }
    apic_20 { pt3dadd( -99.6371, 895.644, -172.095, 0.12 ) }
    apic_20 { pt3dadd( -100.028, 896.963, -173.256, 0.12 ) }
    apic_20 { pt3dadd( -100.246, 897.677, -173.916, 0.12 ) }
    apic_20 { pt3dadd( -100.53, 898.744, -174.964, 0.12 ) }
    apic_20 { pt3dadd( -100.671, 899.345, -175.576, 0.12 ) }
    apic_20 { pt3dadd( -101.092, 900.959, -177.217, 0.12 ) }
    apic_20 { pt3dadd( -101.258, 901.551, -177.843, 0.12 ) }
    apic_20 { pt3dadd( -101.526, 902.501, -178.884, 0.12 ) }
    apic_20 { pt3dadd( -101.915, 904.394, -180.843, 0.12 ) }
    apic_20 { pt3dadd( -102.024, 905.228, -181.625, 0.12 ) }
    apic_20 { pt3dadd( -102.128, 906.022, -182.383, 0.12 ) }
    apic_20 { pt3dadd( -102.262, 906.843, -183.177, 0.12 ) }
    apic_20 { pt3dadd( -102.442, 907.936, -184.173, 0.12 ) }
    apic_20 { pt3dadd( -102.752, 909.72, -185.81, 0.12 ) }
    apic_20 { pt3dadd( -102.91, 910.412, -186.473, 0.12 ) }
    apic_20 { pt3dadd( -103.136, 911.577, -187.643, 0.12 ) }
    apic_20 { pt3dadd( -103.482, 913.349, -189.513, 0.12 ) }
    apic_20 { pt3dadd( -103.533, 913.586, -189.768, 0.12 ) }
    apic_20 { pt3dadd( -103.7, 914.418, -190.629, 0.12 ) }
    apic_20 { pt3dadd( -103.892, 915.298, -191.614, 0.12 ) }
    apic_20 { pt3dadd( -104.212, 916.719, -193.327, 0.12 ) }
    apic_20 { pt3dadd( -104.357, 917.478, -194.276, 0.12 ) }
    apic_20 { pt3dadd( -104.599, 919.274, -196.713, 0.12 ) }
    apic_20 { pt3dadd( -104.692, 920.083, -197.865, 0.12 ) }
    apic_20 { pt3dadd( -104.883, 921.435, -199.915, 0.12 ) }
    apic_20 { pt3dadd( -105.01, 922.221, -201.216, 0.12 ) }
    apic_20 { pt3dadd( -105.164, 923.067, -202.616, 0.12 ) }
    apic_20 { pt3dadd( -105.348, 924.105, -204.318, 0.12 ) }
    apic_20 { pt3dadd( -105.681, 925.873, -207.118, 0.12 ) }
    apic_20 { pt3dadd( -105.855, 926.58, -208.114, 0.12 ) }
    apic_20 { pt3dadd( -105.953, 926.984, -208.578, 0.12 ) }
    apic_20 { pt3dadd( -106.221, 928.107, -209.597, 0.12 ) }
    apic_20 { pt3dadd( -106.677, 929.966, -210.973, 0.12 ) }
    apic_20 { pt3dadd( -106.956, 931.234, -211.727, 0.12 ) }
    apic_20 { pt3dadd( -107.23, 933.248, -212.674, 0.12 ) }
    apic_20 { pt3dadd( -107.299, 934.406, -213.135, 0.12 ) }
    apic_20 { pt3dadd( -107.343, 936.589, -213.837, 0.12 ) }
    apic_20 { pt3dadd( -107.274, 938.414, -214.256, 0.12 ) }
    apic_20 { pt3dadd( -107.087, 940.079, -214.48, 0.12 ) }
    apic_20 { pt3dadd( -106.814, 941.677, -214.6, 0.12 ) }
    apic_20 { pt3dadd( -106.441, 943.231, -214.614, 0.12 ) }
    apic_20 { pt3dadd( -105.756, 945.86, -214.587, 0.12 ) }
    apic_20 { pt3dadd( -105.21, 947.788, -214.506, 0.12 ) }
    apic_20 { pt3dadd( -104.865, 948.975, -214.369, 0.12 ) }
    apic_20 { pt3dadd( -104.52, 950.173, -214.181, 0.12 ) }
    apic_20 { pt3dadd( -104.181, 951.4, -213.962, 0.12 ) }
    // Section: apic_23, id: apic_23, parent: apic_21 (entry count 87/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( -70.2665, 823.53, -58.9349, 0.24 ) }
    apic_23 { pt3dadd( -71.0601, 825.904, -57.8829, 0.24 ) }
    apic_23 { pt3dadd( -72.0033, 829.196, -56.4836, 0.24 ) }
    apic_23 { pt3dadd( -72.9671, 832.56, -55.0539, 0.24 ) }
    apic_23 { pt3dadd( -73.6581, 834.972, -54.0288, 0.24 ) }
    apic_23 { pt3dadd( -74.4436, 837.714, -52.8635, 0.24 ) }
    apic_23 { pt3dadd( -75.0197, 839.725, -52.0089, 0.24 ) }
    apic_23 { pt3dadd( -75.3531, 841.22, -51.3857, 0.24 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 95/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( -70.2665, 823.53, -58.9349, 0.24 ) }
    apic_22 { pt3dadd( -69.4872, 826.302, -58.4292, 0.24 ) }
    apic_22 { pt3dadd( -68.744, 829.316, -57.8574, 0.24 ) }
    apic_22 { pt3dadd( -68.4244, 831.079, -57.5499, 0.24 ) }
    apic_22 { pt3dadd( -67.94, 834.089, -57.0024, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    apic_22 { pt3dadd( -67.4652, 837.075, -56.5786, 0.24 ) }
    apic_22 { pt3dadd( -67.0873, 839.482, -56.3049, 0.24 ) }
    apic_22 { pt3dadd( -66.64, 841.953, -56.2688, 0.24 ) }
    apic_22 { pt3dadd( -66.0469, 844.992, -56.461, 0.24 ) }
    apic_22 { pt3dadd( -65.4205, 847.887, -56.8663, 0.24 ) }
    apic_22 { pt3dadd( -64.8014, 850.903, -57.4197, 0.24 ) }
    apic_22 { pt3dadd( -64.1786, 853.315, -58.0268, 0.24 ) }
    apic_22 { pt3dadd( -62.5546, 858.488, -59.4594, 0.24 ) }
    apic_22 { pt3dadd( -61.5578, 861.218, -60.2173, 0.24 ) }
    apic_22 { pt3dadd( -60.2437, 863.981, -61.0322, 0.24 ) }
    apic_22 { pt3dadd( -58.4369, 867.117, -62.0178, 0.24 ) }
    apic_22 { pt3dadd( -55.7358, 871.11, -63.2026, 0.24 ) }
    apic_22 { pt3dadd( -53.5868, 873.841, -64.0656, 0.24 ) }
    apic_22 { pt3dadd( -51.6413, 876.129, -64.7548, 0.24 ) }
    apic_22 { pt3dadd( -46.7906, 881.355, -66.7041, 0.24 ) }
    apic_22 { pt3dadd( -43.232, 884.949, -68.2434, 0.24 ) }
    apic_22 { pt3dadd( -40.0468, 887.918, -69.734, 0.24 ) }
    apic_22 { pt3dadd( -36.6914, 890.987, -71.4095, 0.12 ) }
    apic_22 { pt3dadd( -34.5376, 893.006, -72.5924, 0.12 ) }
    apic_22 { pt3dadd( -28.6793, 898.663, -75.8712, 0.24 ) }
    apic_22 { pt3dadd( -28.0076, 899.349, -76.2305, 0.24 ) }
    apic_22 { pt3dadd( -25.681, 901.636, -77.4102, 0.24 ) }
    apic_22 { pt3dadd( -24.6771, 902.621, -77.8778, 0.24 ) }
    apic_22 { pt3dadd( -23.0005, 904.195, -78.4793, 0.24 ) }
    apic_22 { pt3dadd( -19.7477, 906.902, -79.2736, 0.24 ) }
    apic_22 { pt3dadd( -17.1167, 908.995, -79.511, 0.24 ) }
    apic_22 { pt3dadd( -13.7053, 911.601, -79.6926, 0.24 ) }
    apic_22 { pt3dadd( -11.8175, 913.026, -79.7794, 0.24 ) }
    apic_22 { pt3dadd( -10.3823, 914.119, -79.9143, 0.24 ) }
    apic_22 { pt3dadd( -6.96972, 916.836, -80.3246, 0.24 ) }
    apic_22 { pt3dadd( -4.35217, 919.073, -80.7521, 0.24 ) }
    apic_22 { pt3dadd( -2.4372, 920.819, -81.0576, 0.24 ) }
    apic_22 { pt3dadd( 0.434669, 923.62, -81.7299, 0.12 ) }
    apic_22 { pt3dadd( 2.73638, 925.974, -82.5864, 0.12 ) }
    apic_22 { pt3dadd( 3.99855, 927.379, -83.2614, 0.12 ) }
    apic_22 { pt3dadd( 5.72308, 929.46, -84.5115, 0.12 ) }
    apic_22 { pt3dadd( 7.22541, 931.422, -85.9558, 0.12 ) }
    apic_22 { pt3dadd( 10.1038, 935.177, -89.024, 0.12 ) }
    apic_22 { pt3dadd( 11.9177, 937.423, -90.8614, 0.12 ) }
    apic_22 { pt3dadd( 13.1735, 938.903, -91.9783, 0.12 ) }
    apic_22 { pt3dadd( 13.7733, 939.662, -92.4935, 0.12 ) }
    apic_22 { pt3dadd( 15.9214, 942.605, -94.2379, 0.12 ) }
    apic_22 { pt3dadd( 19.9791, 948.625, -96.9712, 0.12 ) }
    apic_22 { pt3dadd( 22.8381, 953.375, -98.3402, 0.12 ) }
    apic_22 { pt3dadd( 25.2786, 957.782, -99.0835, 0.12 ) }
    apic_22 { pt3dadd( 26.9941, 961.132, -99.3218, 0.12 ) }
    apic_22 { pt3dadd( 28.3849, 963.956, -99.2635, 0.12 ) }
    apic_22 { pt3dadd( 30.524, 968.835, -98.6342, 0.12 ) }
    apic_22 { pt3dadd( 31.3332, 971.262, -98.1635, 0.12 ) }
    apic_22 { pt3dadd( 31.9978, 973.428, -97.7349, 0.12 ) }
    apic_22 { pt3dadd( 32.6545, 975.281, -97.4501, 0.12 ) }
    apic_22 { pt3dadd( 33.6253, 977.293, -97.1933, 0.12 ) }
    apic_22 { pt3dadd( 34.7239, 979.344, -96.9473, 0.12 ) }
    apic_22 { pt3dadd( 36.484, 982.295, -96.9188, 0.12 ) }
    apic_22 { pt3dadd( 37.6715, 984.404, -96.9592, 0.12 ) }
    apic_22 { pt3dadd( 38.4496, 985.863, -97.0035, 0.12 ) }
    apic_22 { pt3dadd( 39.7143, 988.161, -97.1272, 0.12 ) }
    apic_22 { pt3dadd( 41.2965, 991.513, -97.2863, 0.12 ) }
    apic_22 { pt3dadd( 42.5481, 993.853, -97.2572, 0.12 ) }
    apic_22 { pt3dadd( 43.4488, 995.276, -97.2529, 0.12 ) }
    apic_22 { pt3dadd( 45.326, 997.886, -97.4079, 0.12 ) }
    apic_22 { pt3dadd( 47.0019, 1000.11, -97.5972, 0.12 ) }
    apic_22 { pt3dadd( 50.4028, 1004.19, -98.1321, 0.12 ) }
    apic_22 { pt3dadd( 53.1548, 1007.14, -98.4996, 0.12 ) }
    apic_22 { pt3dadd( 56.7247, 1010.73, -98.6197, 0.12 ) }
    apic_22 { pt3dadd( 59.729, 1013.53, -98.6835, 0.12 ) }
    apic_22 { pt3dadd( 61.2193, 1014.92, -98.776, 0.12 ) }
    apic_22 { pt3dadd( 62.9434, 1016.47, -98.9679, 0.12 ) }
    apic_22 { pt3dadd( 64.8899, 1017.95, -99.217, 0.12 ) }
    apic_22 { pt3dadd( 67.8708, 1020.29, -99.6316, 0.12 ) }
    apic_22 { pt3dadd( 71.5403, 1023.12, -100.241, 0.12 ) }
    apic_22 { pt3dadd( 74.6741, 1025.7, -101.033, 0.12 ) }
    apic_22 { pt3dadd( 76.2687, 1027.09, -101.623, 0.12 ) }
    apic_22 { pt3dadd( 78.7762, 1029.45, -102.732, 0.12 ) }
    apic_22 { pt3dadd( 80.4141, 1031.07, -103.657, 0.12 ) }
    apic_22 { pt3dadd( 82.4414, 1033.19, -104.914, 0.12 ) }
    apic_22 { pt3dadd( 83.9077, 1034.78, -105.779, 0.12 ) }
    apic_22 { pt3dadd( 86.4251, 1037.49, -107.189, 0.12 ) }
    apic_22 { pt3dadd( 88.0451, 1039.17, -108.046, 0.12 ) }
    apic_22 { pt3dadd( 91.2174, 1042.45, -109.722, 0.12 ) }
    apic_22 { pt3dadd( 92.4371, 1043.5, -110.247, 0.12 ) }
    apic_22 { pt3dadd( 96.4985, 1046.61, -111.743, 0.12 ) }
    apic_22 { pt3dadd( 97.7333, 1047.5, -112.189, 0.12 ) }
    apic_22 { pt3dadd( 100.864, 1049.76, -113.329, 0.12 ) }
    apic_22 { pt3dadd( 102.829, 1051.15, -114.034, 0.12 ) }
    apic_22 { pt3dadd( 107.304, 1054.37, -115.712, 0.12 ) }
    apic_22 { pt3dadd( 111.168, 1057.33, -117.329, 0.12 ) }
    apic_22 { pt3dadd( 112.913, 1058.9, -118.115, 0.12 ) }
    apic_22 { pt3dadd( 115.294, 1061.41, -119.286, 0.12 ) }
    apic_22 { pt3dadd( 116.089, 1062.41, -119.663, 0.12 ) }
    apic_22 { pt3dadd( 118.436, 1065.78, -120.587, 0.12 ) }
    apic_22 { pt3dadd( 119.447, 1067.67, -120.822, 0.12 ) }
    apic_22 { pt3dadd( 121.67, 1072.29, -120.712, 0.12 ) }
    apic_22 { pt3dadd( 122.681, 1074.49, -120.533, 0.12 ) }
    apic_22 { pt3dadd( 124.154, 1077.95, -120.038, 0.12 ) }
    apic_22 { pt3dadd( 125.033, 1080.06, -119.619, 0.12 ) }
    apic_22 { pt3dadd( 126.749, 1084.0, -118.338, 0.12 ) }
    apic_22 { pt3dadd( 127.556, 1085.76, -117.637, 0.12 ) }
    // Section: apic_25, id: apic_25, parent: apic_23 (entry count 98/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( -75.3531, 841.22, -51.3857, 0.24 ) }
    apic_25 { pt3dadd( -75.4023, 841.374, -51.4083, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    apic_25 { pt3dadd( -75.998, 843.289, -51.6244, 0.24 ) }
    apic_25 { pt3dadd( -76.7598, 845.881, -51.7518, 0.24 ) }
    apic_25 { pt3dadd( -77.4164, 848.149, -51.8564, 0.24 ) }
    apic_25 { pt3dadd( -77.981, 850.169, -51.9268, 0.24 ) }
    apic_25 { pt3dadd( -78.328, 851.539, -51.9505, 0.24 ) }
    apic_25 { pt3dadd( -78.6323, 852.834, -51.9495, 0.24 ) }
    apic_25 { pt3dadd( -79.3479, 856.138, -51.8337, 0.24 ) }
    apic_25 { pt3dadd( -79.8883, 858.766, -51.7125, 0.24 ) }
    apic_25 { pt3dadd( -80.1277, 860.016, -51.6605, 0.24 ) }
    apic_25 { pt3dadd( -80.7418, 863.309, -51.4926, 0.24 ) }
    apic_25 { pt3dadd( -81.0945, 865.302, -51.3825, 0.24 ) }
    apic_25 { pt3dadd( -81.4513, 867.465, -51.2922, 0.24 ) }
    apic_25 { pt3dadd( -81.8323, 869.874, -51.228, 0.24 ) }
    apic_25 { pt3dadd( -82.211, 872.038, -51.1716, 0.24 ) }
    apic_25 { pt3dadd( -82.5742, 873.851, -51.1329, 0.24 ) }
    apic_25 { pt3dadd( -83.1424, 876.402, -51.0911, 0.24 ) }
    apic_25 { pt3dadd( -83.7892, 879.282, -51.0395, 0.12 ) }
    apic_25 { pt3dadd( -84.3675, 881.651, -51.0109, 0.12 ) }
    apic_25 { pt3dadd( -84.9408, 883.649, -50.9867, 0.12 ) }
    apic_25 { pt3dadd( -86.2036, 887.444, -50.9705, 0.12 ) }
    apic_25 { pt3dadd( -86.8302, 889.093, -50.9871, 0.12 ) }
    apic_25 { pt3dadd( -87.174, 889.91, -50.9963, 0.12 ) }
    apic_25 { pt3dadd( -88.0942, 892.031, -51.0252, 0.12 ) }
    apic_25 { pt3dadd( -89.0031, 894.196, -51.0691, 0.12 ) }
    apic_25 { pt3dadd( -89.759, 896.11, -51.1432, 0.12 ) }
    apic_25 { pt3dadd( -90.9027, 899.04, -51.341, 0.12 ) }
    apic_25 { pt3dadd( -91.4744, 900.568, -51.4495, 0.12 ) }
    apic_25 { pt3dadd( -92.7459, 904.175, -51.6864, 0.12 ) }
    apic_25 { pt3dadd( -93.4192, 906.31, -51.815, 0.12 ) }
    apic_25 { pt3dadd( -94.2352, 909.179, -51.9007, 0.12 ) }
    apic_25 { pt3dadd( -94.7571, 911.014, -51.8579, 0.12 ) }
    apic_25 { pt3dadd( -95.259, 912.766, -51.7509, 0.12 ) }
    apic_25 { pt3dadd( -95.6962, 914.281, -51.6251, 0.12 ) }
    apic_25 { pt3dadd( -96.2647, 916.242, -51.4208, 0.12 ) }
    apic_25 { pt3dadd( -97.1899, 919.422, -51.0635, 0.12 ) }
    apic_25 { pt3dadd( -98.2914, 923.004, -50.6788, 0.12 ) }
    apic_25 { pt3dadd( -99.1174, 925.611, -50.4431, 0.12 ) }
    apic_25 { pt3dadd( -100.043, 928.477, -50.2543, 0.12 ) }
    apic_25 { pt3dadd( -100.683, 930.441, -50.1561, 0.12 ) }
    apic_25 { pt3dadd( -101.377, 932.462, -50.0733, 0.12 ) }
    apic_25 { pt3dadd( -102.855, 936.636, -49.9572, 0.12 ) }
    apic_25 { pt3dadd( -104.167, 940.297, -49.8933, 0.12 ) }
    apic_25 { pt3dadd( -105.301, 943.448, -49.7555, 0.12 ) }
    apic_25 { pt3dadd( -105.827, 944.932, -49.6335, 0.12 ) }
    apic_25 { pt3dadd( -106.893, 947.98, -49.3076, 0.12 ) }
    apic_25 { pt3dadd( -107.771, 950.568, -48.9769, 0.12 ) }
    apic_25 { pt3dadd( -108.349, 952.347, -48.6936, 0.12 ) }
    apic_25 { pt3dadd( -109.361, 955.591, -48.1537, 0.12 ) }
    apic_25 { pt3dadd( -109.848, 957.232, -47.8959, 0.12 ) }
    apic_25 { pt3dadd( -110.703, 960.307, -47.46, 0.12 ) }
    apic_25 { pt3dadd( -111.589, 963.624, -47.0535, 0.12 ) }
    apic_25 { pt3dadd( -112.439, 966.725, -46.7154, 0.12 ) }
    apic_25 { pt3dadd( -113.275, 969.723, -46.452, 0.12 ) }
    apic_25 { pt3dadd( -113.89, 971.877, -46.3513, 0.12 ) }
    apic_25 { pt3dadd( -114.81, 975.107, -46.2441, 0.12 ) }
    apic_25 { pt3dadd( -115.41, 977.273, -46.1578, 0.12 ) }
    apic_25 { pt3dadd( -115.947, 979.252, -46.0363, 0.12 ) }
    apic_25 { pt3dadd( -116.472, 981.019, -45.8712, 0.12 ) }
    apic_25 { pt3dadd( -116.949, 982.474, -45.6522, 0.12 ) }
    apic_25 { pt3dadd( -117.872, 985.017, -45.0625, 0.12 ) }
    apic_25 { pt3dadd( -118.492, 986.62, -44.5416, 0.12 ) }
    apic_25 { pt3dadd( -119.486, 989.119, -43.5657, 0.12 ) }
    apic_25 { pt3dadd( -120.298, 991.141, -42.6701, 0.12 ) }
    apic_25 { pt3dadd( -120.934, 992.532, -41.9784, 0.12 ) }
    apic_25 { pt3dadd( -122.046, 994.765, -40.8082, 0.12 ) }
    apic_25 { pt3dadd( -122.672, 995.844, -40.2413, 0.12 ) }
    apic_25 { pt3dadd( -123.593, 997.359, -39.4293, 0.12 ) }
    apic_25 { pt3dadd( -124.715, 999.147, -38.4868, 0.12 ) }
    apic_25 { pt3dadd( -126.111, 1001.47, -37.2775, 0.12 ) }
    apic_25 { pt3dadd( -126.992, 1002.86, -36.5702, 0.12 ) }
    apic_25 { pt3dadd( -128.42, 1005.07, -35.5626, 0.12 ) }
    apic_25 { pt3dadd( -129.202, 1006.14, -35.064, 0.12 ) }
    // Section: apic_24, id: apic_24, parent: apic_23 (entry count 72/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( -75.3531, 841.22, -51.3857, 0.24 ) }
    apic_24 { pt3dadd( -75.5843, 843.044, -49.3443, 0.24 ) }
    apic_24 { pt3dadd( -75.8501, 845.783, -45.8362, 0.24 ) }
    apic_24 { pt3dadd( -75.9948, 847.106, -44.0535, 0.24 ) }
    apic_24 { pt3dadd( -76.0441, 849.277, -40.8911, 0.24 ) }
    apic_24 { pt3dadd( -75.9695, 851.079, -38.0176, 0.24 ) }
    apic_24 { pt3dadd( -75.7078, 852.89, -35.0202, 0.24 ) }
    apic_24 { pt3dadd( -75.369, 853.938, -33.0173, 0.24 ) }
    apic_24 { pt3dadd( -74.8912, 854.846, -31.0632, 0.24 ) }
    apic_24 { pt3dadd( -73.9818, 856.12, -28.2921, 0.24 ) }
    apic_24 { pt3dadd( -73.1516, 857.217, -26.0825, 0.24 ) }
    apic_24 { pt3dadd( -72.0364, 858.802, -22.9934, 0.24 ) }
    apic_24 { pt3dadd( -71.2984, 860.073, -20.6257, 0.24 ) }
    apic_24 { pt3dadd( -70.9014, 860.858, -19.1918, 0.24 ) }
    apic_24 { pt3dadd( -70.2694, 862.733, -16.0181, 0.24 ) }
    apic_24 { pt3dadd( -69.9999, 864.555, -13.2971, 0.12 ) }
    apic_24 { pt3dadd( -69.9221, 865.701, -11.7451, 0.12 ) }
    apic_24 { pt3dadd( -70.0778, 867.591, -9.39871, 0.12 ) }
    apic_24 { pt3dadd( -70.4167, 869.51, -7.28939, 0.12 ) }
    apic_24 { pt3dadd( -71.0661, 872.29, -4.54579, 0.12 ) }
    apic_24 { pt3dadd( -71.4645, 873.739, -3.24962, 0.12 ) }
    apic_24 { pt3dadd( -72.0251, 875.422, -1.90528, 0.12 ) }
    apic_24 { pt3dadd( -73.155, 878.318, 0.0708489, 0.12 ) }
    apic_24 { pt3dadd( -73.9931, 879.813, 0.985411, 0.12 ) }
    apic_24 { pt3dadd( -75.394, 882.027, 2.23359, 0.12 ) }
    apic_24 { pt3dadd( -76.2032, 883.137, 2.84485, 0.12 ) }
    apic_24 { pt3dadd( -77.6855, 884.893, 3.82431, 0.12 ) }
    apic_24 { pt3dadd( -78.7358, 885.963, 4.40075, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    apic_24 { pt3dadd( -82.1007, 889.191, 6.15219, 0.12 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()
    apic_26 ModelViewParmSubset_1.append()
    apic_17 ModelViewParmSubset_1.append()
    apic_19 ModelViewParmSubset_1.append()
    apic_18 ModelViewParmSubset_1.append()
    apic_21 ModelViewParmSubset_1.append()
    apic_20 ModelViewParmSubset_1.append()
    apic_23 ModelViewParmSubset_1.append()
    apic_22 ModelViewParmSubset_1.append()
    apic_25 ModelViewParmSubset_1.append()
    apic_24 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, apic_2, apic_1, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, apic_4, apic_3, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, apic_8, apic_5, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, apic_10, apic_9, apic_7, apic_6, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, apic_14, apic_11, dend_32, dend_31, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()
    apic_26 ModelViewParmSubset_3.append()
    apic_17 ModelViewParmSubset_3.append()
    apic_19 ModelViewParmSubset_3.append()
    apic_18 ModelViewParmSubset_3.append()
    apic_21 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_20 ModelViewParmSubset_3.append()
    apic_23 ModelViewParmSubset_3.append()
    apic_22 ModelViewParmSubset_3.append()
    apic_25 ModelViewParmSubset_3.append()
    apic_24 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_26 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_23 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_25 ModelViewParmSubset_4.append()
    apic_24 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()
    apic_26 ModelViewParmSubset_6.append()
    apic_17 ModelViewParmSubset_6.append()
    apic_19 ModelViewParmSubset_6.append()
    apic_18 ModelViewParmSubset_6.append()
    apic_21 ModelViewParmSubset_6.append()
    apic_20 ModelViewParmSubset_6.append()
    apic_23 ModelViewParmSubset_6.append()
    apic_22 ModelViewParmSubset_6.append()
    apic_25 ModelViewParmSubset_6.append()
    apic_24 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, apic_2, apic_1, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, apic_4, apic_3, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, apic_8, apic_5, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, apic_10, apic_9, apic_7, apic_6, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, apic_14, apic_11, dend_32, dend_31, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_43 ModelViewParmSubset_7.append()
    dend_42 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_41 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()
    apic_26 ModelViewParmSubset_7.append()
    apic_17 ModelViewParmSubset_7.append()
    apic_19 ModelViewParmSubset_7.append()
    apic_18 ModelViewParmSubset_7.append()
    apic_21 ModelViewParmSubset_7.append()
    apic_20 ModelViewParmSubset_7.append()
    apic_23 ModelViewParmSubset_7.append()
    apic_22 ModelViewParmSubset_7.append()
    apic_25 ModelViewParmSubset_7.append()
    apic_24 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, dend_32, dend_31]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_43 ModelViewParmSubset_8.append()
    dend_42 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()
    dend_33 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_41 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_13 = new SectionList()
    apic_1 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_9 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_7 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_6 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_57 = new SectionList()
    apic_14 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    apic_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_61 = new SectionList()
    apic_16 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_62 = new SectionList()
    apic_15 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_64 = new SectionList()
    apic_12 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[apic_26]}
    OneSecGrp_SectionRef_65 = new SectionList()
    apic_26 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_66 = new SectionList()
    apic_17 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_67 = new SectionList()
    apic_19 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_68 = new SectionList()
    apic_18 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_20 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_72 = new SectionList()
    apic_22 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_25]}
    OneSecGrp_SectionRef_73 = new SectionList()
    apic_25 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[apic_24]}
    OneSecGrp_SectionRef_74 = new SectionList()
    apic_24 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    apic_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_4 OneSecGrp_SectionRef_25.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_5 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_63 = new SectionList()
    apic_13 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_69 = new SectionList()
    apic_21 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_23]}
    OneSecGrp_SectionRef_71 = new SectionList()
    apic_23 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()
    apic_23 apical.append()
    apic_24 apical.append()
    apic_25 apical.append()
    apic_26 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.025689999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039763  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.288755  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.029455999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 6.71E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.098377  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.957198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 1.936176  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.072928995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0038689997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.97688496  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 6.8399997E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 6.9999996E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 4.59E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0055919997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_231_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_231_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_231_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_231_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 7
    dend_42 nseg = 3
    dend_36 nseg = 5
    apic_1 nseg = 13
    dend_38 nseg = 3
    dend_33 nseg = 7
    dend_20 nseg = 15
    dend_19 nseg = 13
    dend_17 nseg = 11
    dend_16 nseg = 17
    apic_3 nseg = 11
    dend_41 nseg = 7
    dend_40 nseg = 21
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_24 nseg = 5
    dend_23 nseg = 15
    dend_12 nseg = 7
    dend_11 nseg = 7
    dend_9 nseg = 9
    dend_14 nseg = 5
    dend_13 nseg = 11
    dend_3 nseg = 3
    apic_9 nseg = 11
    apic_7 nseg = 5
    apic_6 nseg = 7
    dend_29 nseg = 19
    dend_27 nseg = 3
    dend_8 nseg = 7
    dend_7 nseg = 19
    dend_5 nseg = 15
    dend_4 nseg = 17
    apic_14 nseg = 5
    apic_11 nseg = 15
    dend_32 nseg = 11
    dend_31 nseg = 3
    apic_16 nseg = 3
    apic_15 nseg = 7
    apic_12 nseg = 3
    apic_26 nseg = 7
    apic_17 nseg = 7
    apic_19 nseg = 21
    apic_18 nseg = 37
    apic_20 nseg = 11
    apic_22 nseg = 17
    apic_25 nseg = 9
    apic_24 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr231_L6_UTPC_9d28264fcd_0_0


