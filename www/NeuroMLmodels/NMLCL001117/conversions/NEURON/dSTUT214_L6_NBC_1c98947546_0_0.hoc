// Cell: dSTUT214_L6_NBC_1c98947546_0_0
/*
{
  "id" : "dSTUT214_L6_NBC_1c98947546_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.47614, -8.41033, 1.41903, 3.98524", "-7.69742, -7.5116, 1.27705, 6.91431", "-6.9187, -6.61288, 1.13506, 10.5717", "-6.13998, -5.71415, 0.993075, 11.4108", "-5.36126, -4.81542, 0.851088, 12.9455", "-4.58254, -3.9167, 0.709102, 14.3822", "-3.80382, -3.01797, 0.567115, 17.7461", "-3.0251, -2.11925, 0.425128, 19.1269", "-2.24638, -1.22052, 0.283142, 19.8374", "-1.46766, -0.321792, 0.141155, 20.315", "-0.688937, 0.576934, -8.31366E-4, 20.3008", "0.0897826, 1.47566, -0.142818, 20.2673", "0.868503, 2.37439, -0.284805, 20.201", "1.64722, 3.27311, -0.426791, 19.9171", "2.42594, 4.17184, -0.568778, 19.4209", "3.20466, 5.07057, -0.710764, 18.1336", "3.98338, 5.96929, -0.852751, 16.68", "4.7621, 6.86802, -0.994738, 14.9484", "5.54082, 7.76675, -1.13672, 12.9099", "6.31954, 8.66547, -1.27871, 7.73682", "7.09826, 9.5642, -1.4207, 4.34608" ]
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-11.4502, -2.60248, 0.989666, 1.47", "-11.4502, -2.60248, 0.989666, 1.47", "-12.0986, -2.93969, 1.19289, 1.47", "-13.169, -3.51785, 1.5751, 1.11", "-14.2225, -4.11294, 2.1119, 1.11", "-15.4467, -4.82342, 2.84398, 1.11", "-16.4691, -5.45567, 3.61132, 1.11", "-17.3726, -6.05542, 4.44474, 1.4", "-17.6041, -6.2209, 4.72884, 1.4", "-18.685, -6.99049, 6.36001, 1.4", "-18.7292, -7.02181, 6.4362, 1.4", "-19.6431, -7.637, 8.21384, 1.4", "-19.6761, -7.65502, 8.27384, 1.4", "-20.803, -8.22581, 9.97688, 1.4", "-21.6694, -8.68595, 11.0714, 1.4", "-21.7091, -8.70949, 11.1112, 1.4", "-22.9215, -9.49092, 12.1605, 0.88", "-23.6735, -10.0064, 12.7038, 0.88", "-24.5688, -10.6707, 13.3294, 0.74", "-25.6718, -11.5362, 13.9726, 0.74", "-26.6204, -12.2719, 14.442, 0.74", "-26.6983, -12.3292, 14.4754, 0.74", "-27.5696, -12.9085, 14.7852, 0.74", "-28.8791, -13.7324, 15.2438, 1.11", "-30.4744, -14.6653, 15.7493, 1.11", "-32.0611, -15.5872, 16.1464, 1.11", "-32.9396, -16.1368, 16.3214, 1.11", "-33.8193, -16.7689, 16.4894, 1.47", "-34.403, -17.2556, 16.5862, 1.47", "-35.5088, -18.3341, 16.7594, 0.81", "-36.4782, -19.463, 17.0202, 0.81", "-37.4489, -20.6752, 17.347, 0.81", "-38.4203, -21.8851, 17.6876, 1.11", "-38.905, -22.4799, 17.8609, 1.47", "-39.5375, -23.1988, 18.0997, 1.47", "-40.8766, -24.6467, 18.6167, 0.74", "-42.0918, -25.9002, 19.0549, 0.74", "-43.1766, -26.9817, 19.3653, 0.74", "-43.2267, -27.0321, 19.3781, 0.74", "-44.0154, -27.8603, 19.5675, 1.03", "-45.0171, -28.953, 19.7922, 1.03", "-45.9667, -30.056, 19.9671, 1.18", "-46.9041, -31.2193, 20.1427, 1.18", "-48.149, -32.8239, 20.3847, 0.88", "-49.4422, -34.5143, 20.6222, 0.88", "-49.4859, -34.572, 20.6291, 0.88", "-50.8547, -36.3746, 20.8351, 0.88", "-50.8992, -36.4319, 20.8411, 0.88", "-51.8073, -37.5672, 20.9433, 1.62", "-52.4256, -38.3204, 20.9952, 1.99", "-53.4499, -39.5696, 21.0752, 1.99", "-55.1553, -41.7153, 21.2948, 2.21", "-56.6198, -43.5699, 21.5922, 2.21", "-57.4425, -44.6011, 21.8485, 2.5", "-57.9835, -45.2657, 22.0617, 2.5", "-59.1929, -46.7301, 22.6345, 1.84", "-60.6715, -48.4932, 23.4621, 1.47", "-61.7883, -49.8485, 24.1965, 1.25", "-63.0595, -51.4191, 25.1229, 0.29", "-63.6491, -52.2098, 25.6055, 0.29", "-64.3634, -53.2227, 26.2337, 0.29", "-64.4211, -53.3066, 26.2913, 0.29", "-64.9532, -54.1296, 26.8487, 0.29", "-65.0186, -54.2466, 26.9275, 0.29", "-65.7655, -55.7224, 27.9393, 0.29", "-65.794, -55.7725, 27.9829, 0.29", "-66.6568, -56.9817, 29.1704, 0.29", "-66.8752, -57.2372, 29.428, 0.74", "-67.108, -57.4741, 29.6606, 1.03", "-67.3968, -57.7622, 29.929, 1.03", "-68.1376, -58.5202, 30.5051, 0.66", "-68.7353, -59.2152, 30.9406, 0.66", "-69.3218, -59.9889, 31.295, 0.88", "-69.7905, -60.6098, 31.5483, 0.88", "-70.561, -61.6208, 31.9466, 0.52", "-71.4445, -62.7498, 32.3576, 0.52", "-71.4937, -62.8135, 32.3778, 0.52", "-72.3942, -63.973, 32.721, 0.81", "-72.9209, -64.6313, 32.881, 0.81", "-73.9346, -65.8905, 33.1542, 0.29", "-74.6696, -66.8043, 33.3098, 0.37", "-75.0876, -67.3388, 33.4053, 1.03", "-75.8011, -68.352, 33.5743, 0.22", "-76.7529, -69.7783, 33.8131, 0.22", "-76.8432, -69.9238, 33.8354, 0.59", "-77.4402, -70.9457, 33.9559, 0.59", "-77.9787, -71.8954, 34.067, 0.44", "-78.631, -73.0084, 34.1885, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "9.20986, 1.38751, 4.05967, 1.84", "9.4882, 1.28006, 4.1198, 1.62", "10.7516, 0.792307, 4.39276, 1.62", "10.8086, 0.770308, 4.40507, 1.62", "12.326, 0.184558, 4.73287, 1.62", "12.3911, 0.159416, 4.74694, 1.62", "12.7412, 0.0242453, 4.82259, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.70014, 10.05, 5.17967, 2.8", "-1.70014, 10.05, 5.17967, 2.8", "-1.23209, 11.5903, 5.40814, 1.84", "-0.762125, 13.0126, 5.64857, 1.84", "-0.158067, 14.5961, 5.91387, 1.84", "-0.119918, 14.684, 5.92796, 1.84", "0.778922, 16.5044, 6.20211, 1.84", "2.00647, 18.6189, 6.50221, 1.84", "2.10133, 18.7565, 6.52076, 1.84", "3.36883, 20.4617, 6.71566, 2.28", "4.20676, 21.5994, 6.90995, 2.28", "5.13099, 22.9283, 7.17312, 1.62", "5.88713, 24.1238, 7.47282, 1.62", "6.90336, 25.8854, 7.96473, 1.62", "7.66516, 27.3922, 8.50332, 1.62", "8.7395, 29.7601, 9.45594, 1.84", "9.3303, 31.2509, 10.1155, 2.06", "10.0914, 33.5495, 11.2388, 2.06", "10.1082, 33.6112, 11.2723, 2.06", "10.5297, 35.6798, 12.5321, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-11.9802, -3.14849, 0.929666, 1.92", "-11.9802, -3.14849, 0.929666, 1.92", "-13.1483, -3.16903, 0.64454, 1.55", "-14.8871, -3.19388, 0.195556, 1.55", "-16.7038, -3.20931, -0.269264, 1.4", "-18.4061, -3.22138, -0.75285, 1.4", "-18.4837, -3.22207, -0.777795, 1.4", "-20.0972, -3.22483, -1.35151, 1.4", "-20.2377, -3.22303, -1.41176, 1.4", "-21.182, -3.19567, -1.87503, 1.33", "-22.656, -3.12524, -2.67513, 1.33", "-23.6616, -3.05437, -3.26985, 1.33", "-24.15, -3.01308, -3.57164, 1.4", "-25.5106, -2.87134, -4.41635, 1.4", "-25.5802, -2.86322, -4.45811, 1.4", "-26.5561, -2.7354, -5.01479, 1.25", "-27.8854, -2.53967, -5.65764, 1.11", "-27.9785, -2.5258, -5.69438, 1.11", "-28.9107, -2.4008, -6.00653, 1.11", "-29.6356, -2.30359, -6.19261, 0.88", "-30.07, -2.25004, -6.2918, 0.74", "-30.29, -2.23159, -6.33116, 0.66", "-31.1257, -2.21848, -6.41055, 0.66", "-31.2774, -2.23023, -6.42607, 0.66", "-31.912, -2.35945, -6.49402, 0.88", "-32.6338, -2.58902, -6.56501, 0.88", "-33.1369, -2.77938, -6.61507, 0.96", "-33.6828, -2.99679, -6.66402, 0.96", "-34.5034, -3.31645, -6.72573, 0.96", "-35.2657, -3.58285, -6.81509, 0.37", "-36.0338, -3.80059, -6.92276, 0.37", "-36.513, -3.88732, -7.00763, 1.11", "-37.6235, -3.94673, -7.22751, 1.77", "-38.4414, -3.8882, -7.40019, 2.06", "-39.4968, -3.68688, -7.63152, 2.06", "-40.3226, -3.43866, -7.80791, 1.69", "-40.9158, -3.21158, -7.92474, 1.33", "-41.728, -2.86622, -8.05882, 1.11", "-42.2115, -2.62974, -8.12168, 1.03", "-42.6043, -2.42701, -8.15072, 1.03", "-43.2301, -2.0989, -8.19987, 0.81", "-43.656, -1.87542, -8.26295, 0.81", "-44.1206, -1.63452, -8.35414, 0.29", "-44.7729, -1.29377, -8.50504, 0.29", "-45.1566, -1.0959, -8.60366, 1.03", "-46.349, -0.483981, -8.94508, 1.33", "-46.9023, -0.199417, -9.12462, 1.62", "-47.7005, 0.224066, -9.41247, 1.62", "-47.998, 0.385912, -9.53124, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "2.58986, 11.331, -3.07033, 4.86", "2.58986, 11.331, -3.07033, 4.86", "3.43903, 13.1316, -3.07033, 3.83", "4.05055, 14.2296, -3.07033, 3.83", "4.96366, 15.7052, -3.07033, 3.83", "6.33795, 17.7225, -3.07033, 3.83", "6.75313, 18.288, -3.07033, 3.83", "7.74714, 19.544, -3.07033, 2.36", "8.46921, 20.3184, -3.07033, 2.06", "9.08208, 20.8833, -3.07033, 1.84", "9.78006, 21.3757, -3.07033, 1.62", "10.1712, 21.5806, -3.07033, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.28986, -8.87099, -0.0103344, 2.5", "2.28986, -8.87099, -0.0103344, 2.5", "2.24502, -11.3834, -0.0103344, 2.21", "2.24478, -12.639, -0.0103344, 1.62", "2.25341, -13.8635, -0.0067364, 1.62", "2.26895, -15.6717, 0.0017113, 1.84", "2.29297, -17.4029, -0.0038439, 1.92", "2.31821, -18.4731, -0.0131806, 2.06", "2.38751, -20.8161, 0.0182277, 2.06", "2.39137, -20.9085, 0.0210238, 2.06", "2.4959, -22.941, 0.107909, 2.06", "2.64968, -25.1841, 0.226824, 2.06", "2.80019, -27.2027, 0.388121, 1.84", "2.94391, -29.0691, 0.577281, 1.55", "3.06663, -30.5855, 0.759752, 1.4", "3.24665, -32.4858, 1.0377, 1.4", "3.27816, -32.7696, 1.08885, 1.4", "3.5165, -34.5926, 1.48236, 1.25", "3.53128, -34.6947, 1.50428, 1.25", "3.76202, -36.1151, 1.77955, 1.25", "4.16645, -38.6181, 2.22915, 1.25", "4.18138, -38.708, 2.24364, 1.25", "4.80725, -42.5657, 2.77696, 1.25", "5.03394, -44.0035, 2.93961, 1.62", "5.35809, -46.0875, 3.14626, 1.62", "5.75876, -48.7482, 3.36339, 1.62", "5.93284, -50.0038, 3.4368, 1.62", "6.1213, -51.6473, 3.5111, 1.69", "6.20139, -52.705, 3.53542, 1.92", "6.26188, -54.2102, 3.568, 1.92", "6.26369, -55.4689, 3.59179, 1.4", "6.23517, -56.5316, 3.61235, 1.33", "6.14593, -58.5852, 3.6476, 1.33", "6.05352, -60.141, 3.66977, 1.47", "5.99016, -61.5019, 3.6826, 1.55", "5.97942, -61.8068, 3.68444, 1.55", "5.96806, -62.679, 3.68703, 1.33", "5.99539, -64.4199, 3.68703, 1.33", "5.99979, -64.5123, 3.68703, 1.33", "6.53067, -71.3512, 3.78191, 1.18", "6.66564, -72.6018, 3.81193, 1.33", "6.89596, -74.3389, 3.8898, 1.62", "7.15285, -75.9967, 3.99316, 1.77", "7.45074, -77.6179, 4.12344, 1.77", "7.8465, -79.3762, 4.29541, 1.62", "8.3619, -81.1437, 4.56634, 1.62", "8.88076, -82.8259, 4.85727, 1.47", "8.90779, -82.9124, 4.87296, 1.4", "9.34019, -84.3408, 5.12121, 1.55", "9.82284, -86.1238, 5.3903, 1.47", "10.1526, -87.5501, 5.55499, 1.4", "10.4645, -89.1012, 5.67791, 1.25", "10.7741, -90.7452, 5.74808, 1.25", "11.0538, -92.4051, 5.78538, 1.69", "11.4205, -94.7744, 5.80152, 1.92", "11.7139, -96.7728, 5.78212, 1.92", "11.9766, -98.5092, 5.73688, 1.55", "12.2985, -100.626, 5.68187, 1.47", "12.9077, -104.441, 5.55178, 1.47", "12.9237, -104.532, 5.54969, 1.47", "13.1513, -105.707, 5.53706, 1.11", "13.9749, -109.673, 5.55887, 1.11", "14.2094, -110.74, 5.62118, 1.33", "14.5308, -112.057, 5.75506, 1.47", "15.01, -113.705, 5.99457, 1.47", "15.5907, -115.516, 6.30216, 1.47", "15.6261, -115.613, 6.3237, 1.47", "16.4266, -117.53, 6.85052, 1.33", "17.0798, -119.014, 7.27821, 1.4", "17.6949, -120.377, 7.64583, 1.62", "18.1124, -121.304, 7.85724, 1.62", "18.8459, -122.99, 8.18336, 1.03", "19.413, -124.451, 8.41438, 0.96", "19.4418, -124.537, 8.42622, 0.96", "20.1599, -127.059, 8.81295, 0.96", "20.1848, -127.16, 8.82899, 0.96", "20.6142, -129.116, 9.191, 0.96", "21.0203, -131.224, 9.60765, 0.74", "21.4048, -133.499, 10.103, 0.74", "21.5256, -134.542, 10.3221, 0.96", "21.5737, -135.305, 10.4694, 0.96", "21.6591, -136.879, 10.7243, 0.74", "21.7027, -137.838, 10.8529, 0.52", "21.7694, -139.559, 11.019, 0.52", "21.9011, -142.717, 11.2283, 0.52", "22.033, -145.514, 11.371, 0.52", "22.1591, -147.59, 11.421, 0.52", "22.2187, -148.42, 11.4138, 0.74", "22.3416, -149.673, 11.3942, 0.74", "22.5016, -150.932, 11.3441, 0.66", "22.6698, -151.972, 11.2742, 1.25", "22.8613, -153.242, 11.1574, 1.62", "22.9969, -154.296, 11.0483, 1.62", "23.125, -155.406, 10.9317, 1.47", "23.3288, -157.339, 10.7383, 1.03", "23.4271, -158.391, 10.6455, 1.03", "23.4765, -159.068, 10.6052, 1.03", "23.5341, -160.265, 10.5687, 1.03", "23.5649, -161.431, 10.5602, 0.66", "23.5673, -163.072, 10.5872, 0.66", "23.5621, -164.423, 10.6069, 1.03", "23.5523, -165.523, 10.5942, 1.25", "23.5512, -165.615, 10.5909, 1.25", "23.5324, -167.058, 10.499, 1.25", "23.5328, -167.137, 10.4914, 1.25", "23.5953, -168.899, 10.2221, 0.88", "23.6596, -169.51, 10.1092, 0.66", "23.6743, -169.6, 10.0923, 0.66", "23.925, -170.733, 9.9072, 0.52", "23.9591, -170.858, 9.89024, 0.52", "24.2623, -171.811, 9.83202, 0.37", "24.8559, -173.541, 9.80037, 0.37", "25.2216, -174.545, 9.78635, 0.96", "25.6101, -175.578, 9.77946, 1.77", "25.9111, -176.335, 9.78575, 1.99", "26.4015, -177.546, 9.82539, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.78014, -9.63749, 2.67967, 1.18", "-6.78014, -9.63749, 2.67967, 1.18", "-6.77405, -10.5993, 3.03748, 1.18", "-6.7719, -10.6672, 3.06244, 1.18", "-6.64483, -11.9869, 3.49755, 1.03", "-6.46685, -13.3064, 4.10758, 1.03", "-6.27738, -14.6875, 4.8594, 1.03", "-6.08885, -15.9985, 5.68416, 1.03", "-6.08009, -16.0557, 5.72605, 1.03", "-5.89009, -17.4723, 7.01959, 1.03", "-5.78603, -19.2781, 9.31246, 1.03", "-5.87275, -19.6703, 10.159, 1.03", "-5.98447, -19.7482, 10.5792, 1.03", "-6.12894, -19.7719, 10.9151, 1.03", "-6.83575, -19.8681, 12.1242, 1.03", "-7.43158, -19.9723, 12.8982, 1.03", "-7.47945, -19.9955, 12.9432, 1.03", "-8.47941, -20.638, 13.8668, 1.03", "-8.83513, -20.9242, 14.201, 1.25", "-9.32662, -21.3918, 14.6854, 1.25", "-10.2919, -22.4683, 15.5985, 1.25", "-11.1097, -23.5106, 16.5448, 1.25", "-11.1427, -23.5575, 16.5863, 1.25", "-11.9211, -24.8228, 17.672, 1.25", "-12.359, -25.5871, 18.3815, 1.4", "-12.8309, -26.4098, 19.1655, 1.4", "-13.7452, -28.0206, 20.7078, 1.18", "-13.9623, -28.3672, 21.0555, 1.18", "-14.5289, -29.1235, 21.8144, 0.88", "-15.4421, -30.1207, 22.8547, 0.88", "-16.1694, -30.7939, 23.5807, 0.88", "-16.7586, -31.2403, 24.0918, 0.88", "-17.6506, -31.7695, 24.6575, 1.18", "-18.417, -32.1172, 25.1375, 1.4", "-19.3039, -32.3814, 25.6478, 1.4", "-19.3552, -32.3896, 25.6767, 1.4", "-19.9443, -32.3915, 26.0386, 0.96", "-20.7073, -32.241, 26.5871, 0.96", "-21.5785, -31.8129, 27.6469, 0.81", "-21.8165, -31.6107, 28.0694, 0.81", "-21.8451, -31.5763, 28.1356, 0.81", "-22.0394, -31.2462, 28.7873, 0.66", "-22.1929, -30.6336, 30.0874, 1.18", "-22.0447, -30.1917, 31.7726, 0.96", "-22.0228, -30.2138, 31.8457, 0.96", "-21.8942, -30.5012, 32.2733, 1.03", "-21.8812, -30.5546, 32.3326, 1.03", "-21.7805, -31.3428, 33.0189, 1.03", "-21.716, -33.0448, 34.185, 0.88", "-21.7301, -34.1787, 34.866, 0.66", "-21.7312, -34.903, 35.3571, 0.66", "-21.7142, -35.6235, 35.9205, 0.52", "-21.6589, -35.9461, 36.2059, 0.52", "-21.6266, -35.9927, 36.2631, 0.52", "-21.1457, -36.0733, 36.4801, 0.52", "-19.9002, -36.2154, 36.886, 0.37", "-19.0273, -36.2911, 37.1424, 0.37", "-17.572, -36.3791, 37.4978, 0.37", "-17.4949, -36.382, 37.5158, 0.37", "-17.0406, -36.4022, 37.615, 0.37", "-16.8948, -36.4143, 37.6409, 0.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.64014, -10.7715, 1.67967, 2.5", "-5.64014, -10.7715, 1.67967, 2.5", "-5.46107, -13.175, 1.53744, 2.21", "-5.23945, -16.6182, 1.33146, 1.99", "-5.06764, -19.793, 1.14836, 2.06", "-4.86502, -23.6694, 0.932577, 2.21", "-4.76491, -25.5846, 0.825967, 2.21", "-4.68598, -27.3733, 0.723722, 2.28", "-4.6266, -29.666, 0.584994, 2.5", "-4.62696, -31.7597, 0.458264, 2.5", "-4.64159, -32.705, 0.417177, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-9.68014, 5.59801, -0.320334, 2.21", "-9.68014, 5.59801, -0.320334, 2.21", "-10.9786, 6.23755, -0.15823, 1.55", "-12.1602, 6.85059, 0.0636157, 1.4", "-13.4354, 7.53997, 0.323017, 1.4", "-14.7176, 8.26406, 0.56813, 1.4", "-15.6502, 8.80233, 0.734057, 1.4", "-15.7121, 8.83807, 0.744451, 1.4", "-17.1772, 9.66474, 0.971276, 1.18", "-19.2871, 10.7879, 1.24857, 1.18", "-21.3645, 11.8702, 1.48584, 1.18", "-22.4485, 12.4219, 1.6056, 1.55", "-23.4667, 12.9281, 1.70521, 1.99", "-25.0078, 13.6625, 1.81525, 1.99", "-26.3436, 14.2421, 1.82448, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.09826, 9.5642, -1.4207, 1.02533", "16.9209, 20.9006, -1.4207, 1.02533", "26.7436, 32.2371, -1.4207, 1.02533" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-78.631, -73.0084, 34.1885, 0.96", "-78.1237, -73.5485, 34.222, 0.96", "-77.5803, -74.1274, 34.2578, 0.96", "-77.5129, -74.1991, 34.2623, 0.96", "-76.8778, -74.8755, 34.3041, 0.96", "-75.8867, -75.9311, 34.3695, 0.37", "-75.4804, -76.3638, 34.3963, 0.37", "-67.7006, -82.4479, 34.1561, 0.37", "-59.3948, -87.6778, 33.5419, 0.37", "-51.1512, -92.9212, 32.4061, 0.37", "-42.3046, -96.0409, 29.7344, 0.37", "-33.656, -98.4735, 25.9823, 0.37" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-78.631, -73.0084, 34.1885, 0.29", "-79.146, -73.5119, 34.3095, 0.29", "-79.9009, -74.2501, 34.4868, 0.29", "-83.5205, -78.4335, 35.7347, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "12.7412, 0.0242453, 4.82259, 1.62", "13.5435, 0.167859, 4.95066, 1.62", "13.8327, 0.190736, 6.1469, 1.62", "14.1834, 0.200839, 7.95805, 1.47", "14.1995, 0.199449, 8.02741, 1.47", "14.4455, 0.171419, 8.83955, 1.47", "14.4688, 0.1685, 8.90682, 1.47", "17.3246, -0.340327, 17.1876, 1.18", "17.3563, -0.347965, 17.283, 1.18", "17.8226, -0.486843, 18.569, 1.18", "18.4491, -0.682965, 20.0053, 1.18", "18.4846, -0.693546, 20.0662, 1.18", "19.541, -0.890768, 21.0156, 1.18", "19.6899, -0.9029, 21.0465, 1.18", "21.1418, -0.972198, 21.4101, 1.18", "21.3069, -0.973106, 21.4614, 1.18", "22.9955, -0.962351, 22.0507, 1.18", "23.8174, -0.949484, 22.3503, 1.03", "25.9349, -0.884859, 23.2242, 1.03", "26.0005, -0.882722, 23.2517, 1.03", "26.9966, -0.878567, 23.7272, 1.03", "27.6045, -0.898796, 24.0225, 1.55", "27.6684, -0.904186, 24.0535, 1.55", "29.1602, -1.08514, 24.9121, 1.55", "29.9637, -1.19001, 25.4614, 1.55", "31.8614, -1.46084, 26.7936, 1.55", "32.434, -1.53786, 27.2238, 1.55", "32.5972, -1.55794, 27.3525, 1.55", "33.9484, -1.67115, 28.478, 1.47", "35.4437, -1.78194, 29.6345, 1.25", "36.4332, -1.82637, 30.357, 0.88", "38.0778, -1.79593, 31.1043, 0.88", "38.1205, -1.79223, 31.0608, 0.88", "39.0532, -1.66389, 29.763, 0.74", "42.5722, -0.977186, 23.8126, 0.66", "42.7215, -0.938504, 23.5075, 0.66", "42.973, -0.862187, 22.8541, 0.37", "43.1624, -0.806283, 22.2518, 0.37", "43.1845, -0.800609, 22.1736, 0.37", "43.243, -0.794287, 21.8844, 0.52", "43.7695, -0.279015, 21.9507, 0.74" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "12.7412, 0.0242453, 4.82259, 0.29", "12.7858, -0.64416, 4.73983, 0.29", "12.8032, -1.3522, 4.6519, 0.29", "12.7971, -1.44327, 4.64052, 0.29", "12.7288, -2.46485, 4.51284, 0.29", "12.7235, -2.54454, 4.50288, 0.29", "12.6797, -3.199, 4.42108, 0.29", "12.6733, -3.2786, 4.41113, 0.29", "12.4979, -4.1218, 4.3047, 0.29", "13.7016, -15.5536, 4.25106, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "10.5297, 35.6798, 12.5321, 1.03", "10.4491, 37.6249, 12.7195, 1.03", "10.4161, 39.2486, 12.8333, 1.03", "10.3975, 40.6187, 12.9657, 1.03", "10.3959, 40.7721, 12.9825, 1.03", "10.4225, 43.3212, 13.2119, 1.03", "10.4511, 44.5215, 13.3035, 0.74", "10.4618, 45.7335, 13.538, 0.59", "10.4593, 46.922, 13.9423, 0.59", "10.4586, 46.9922, 13.9728, 0.59", "10.4498, 48.0068, 14.523, 1.18", "10.4502, 48.0604, 14.5598, 1.18", "10.4957, 52.0011, 17.3618, 0.74", "10.5114, 52.7938, 17.899, 1.18", "10.543, 53.7291, 18.4907, 1.18", "10.5476, 53.8026, 18.5368, 1.18", "10.6253, 54.7755, 19.1469, 0.88", "10.72, 55.6352, 19.6292, 0.66", "10.9501, 56.7701, 20.0812, 0.66", "10.9741, 56.8869, 20.1356, 0.66", "11.2231, 58.1903, 20.8017, 0.66", "11.2356, 58.2984, 20.8651, 0.66", "11.2575, 59.2914, 21.4925, 0.96", "11.2362, 59.7831, 21.7774, 1.11", "11.2151, 60.5953, 22.11, 1.11", "11.2115, 60.7597, 22.1596, 1.11", "11.1875, 62.3096, 22.4646, 0.96", "11.1772, 63.4287, 22.6658, 0.88", "11.167, 64.8562, 22.8762, 0.88", "11.1173, 67.031, 23.1686, 0.88", "11.1125, 67.2632, 23.1954, 0.88", "11.1058, 68.4718, 23.2972, 0.88", "11.12, 69.7559, 23.3378, 0.59", "11.1251, 70.6712, 23.3585, 0.59", "11.1228, 71.1647, 23.3643, 1.18", "11.119, 71.8971, 23.3523, 1.18", "11.1298, 72.9442, 23.2945, 1.18", "11.1693, 74.7214, 23.1309, 0.66", "11.2623, 76.7999, 22.8645, 0.66", "11.2702, 76.9717, 22.8476, 0.66", "11.3625, 79.0729, 22.6867, 0.66", "11.41, 80.2317, 22.6191, 0.66", "11.4132, 80.3089, 22.6169, 0.66", "11.4697, 81.5931, 22.6208, 0.66", "11.5519, 83.6558, 22.6865, 1.18", "11.5737, 84.1401, 22.7132, 1.69", "11.5819, 84.2936, 22.7277, 1.69", "11.697, 85.8477, 22.8727, 1.69", "11.7579, 86.5744, 22.9381, 1.69", "11.8477, 87.4417, 23.004, 0.22", "11.8722, 87.6226, 23.0114, 0.37", "11.9155, 87.913, 23.0249, 0.37", "12.2552, 90.2239, 23.1759, 0.37", "12.3617, 90.9527, 23.2343, 0.74", "12.4541, 91.6045, 23.2931, 0.74", "12.5405, 92.253, 23.3511, 0.37", "12.6368, 93.3746, 23.4961, 0.37", "12.68, 94.1819, 23.6142, 0.29", "12.7055, 94.7479, 23.6994, 0.29", "12.744, 95.4627, 23.7927, 0.81", "12.7993, 96.4231, 23.9176, 1.03", "12.9863, 98.5977, 24.195, 1.03", "13.183, 100.253, 24.4552, 1.47", "13.395, 101.763, 24.7413, 3.02", "13.5653, 102.856, 24.9847, 3.02", "13.5801, 102.94, 25.0057, 3.02", "13.8295, 104.175, 25.3436, 2.65", "14.178, 105.617, 25.7402, 2.65", "14.5337, 107.314, 26.2554, 0.52", "14.5459, 107.387, 26.2765, 0.52", "14.5655, 107.55, 26.3157, 0.66", "14.5719, 107.625, 26.3311, 0.66", "14.5891, 108.909, 26.4825, 0.66", "14.5755, 110.061, 26.391, 0.66", "14.5727, 110.514, 26.2942, 0.59", "14.5658, 110.801, 26.2316, 0.59" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "10.5297, 35.6798, 12.5321, 1.18", "10.1912, 36.3631, 13.352, 1.18", "9.52291, 37.8059, 14.9007, 0.88", "9.28827, 38.3497, 15.4381, 0.88", "9.2584, 38.4299, 15.5091, 0.88", "8.95637, 39.3715, 16.2617, 0.88", "8.94342, 39.4224, 16.2985, 0.88", "8.8766, 40.0745, 16.6291, 0.88", "8.89435, 40.2811, 16.6858, 0.88", "9.01118, 40.9007, 16.8339, 0.88", "9.12369, 41.2068, 16.9352, 0.88", "9.38814, 41.6834, 17.1125, 0.88", "9.42013, 41.7342, 17.1353, 0.88", "9.68263, 42.103, 17.3168, 0.88", "9.71764, 42.1505, 17.3416, 0.88", "10.8212, 43.5697, 18.1181, 1.33", "11.2572, 44.116, 18.4207, 1.33", "11.2902, 44.1605, 18.4524, 1.33", "11.679, 44.7192, 18.9028, 1.47", "11.7063, 44.7646, 18.9384, 1.47", "11.8999, 45.1162, 19.2041, 1.47", "11.9238, 45.1684, 19.2491, 1.47", "12.5916, 46.677, 20.6191, 1.47", "12.6331, 46.7679, 20.6986, 1.47", "13.0886, 47.7769, 21.5616, 1.47", "13.1178, 47.8418, 21.6172, 1.47", "13.7005, 49.2027, 22.7627, 1.47", "14.032, 49.9728, 23.3881, 0.74", "14.279, 50.5594, 23.8077, 0.74", "14.319, 50.6642, 23.8869, 1.18", "14.6907, 51.773, 24.7735, 1.18", "14.8407, 52.3955, 25.2227, 0.96", "14.8446, 52.4434, 25.2503, 0.96", "14.7487, 53.2115, 25.7956, 0.96", "14.5611, 53.901, 26.3917, 0.96", "14.53, 54.0095, 26.4917, 0.96", "14.38, 54.5933, 27.0426, 1.33", "14.2473, 55.2228, 27.6784, 1.33", "14.0852, 56.8255, 29.3662, 1.33", "14.0936, 57.7971, 30.4715, 0.52", "14.1908, 58.3565, 31.0498, 0.52", "14.3963, 58.9766, 31.632, 0.52", "14.4197, 59.0235, 31.6687, 0.52", "14.8804, 59.8303, 32.1076, 0.52", "14.9079, 59.887, 32.1227, 0.52", "15.2728, 61.1236, 32.3579, 0.52", "15.2921, 61.7647, 32.4854, 1.77", "15.1702, 62.4958, 32.6344, 1.77", "14.9889, 63.0327, 32.7436, 1.77", "14.4808, 63.9629, 32.9344, 0.66", "14.0925, 64.4459, 33.0758, 0.66", "13.5839, 64.8504, 33.248, 0.66", "13.46, 64.9265, 33.2803, 0.66", "13.0462, 65.1504, 33.3629, 0.52", "12.9372, 65.2277, 33.3845, 0.52", "12.0238, 66.0392, 33.5452, 0.52", "11.9282, 66.1347, 33.5645, 0.52", "11.3197, 66.8141, 33.6968, 0.22", "10.6824, 67.5763, 33.8316, 0.22", "9.67254, 68.9456, 34.0294, 0.22", "9.52298, 69.1746, 34.0501, 0.88", "10.2402, 76.8845, 39.0228, 0.88", "9.65953, 84.7943, 43.715, 0.88", "10.3429, 92.2042, 49.0892, 0.88", "11.0807, 99.5489, 54.5368, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-47.998, 0.385912, -9.53124, 0.81", "-48.2498, 0.302809, -9.78605, 0.81", "-49.136, 0.0222853, -10.7413, 0.74", "-49.9363, -0.183444, -11.5546, 0.74", "-51.8557, -0.546654, -13.281, 1.69", "-52.4819, -0.624663, -13.83, 2.14", "-52.8631, -0.657461, -14.1539, 2.14", "-55.2116, -0.710821, -16.1625, 0.66", "-55.988, -0.698919, -16.8588, 0.52", "-57.1123, -0.638625, -17.8767, 0.52", "-58.4881, -0.508711, -19.0723, 0.52", "-58.8356, -0.464219, -19.4345, 1.33", "-59.8567, -0.296218, -20.6444, 1.84", "-61.023, 0.0224943, -22.1787, 0.29", "-62.0516, 0.391311, -23.7314, 0.29", "-62.0901, 0.411003, -23.7978, 0.29", "-63.4544, 1.33231, -26.2316, 0.29", "-63.4885, 1.36314, -26.2967, 0.29", "-64.0258, 2.00564, -27.3597, 0.22", "-64.2493, 2.39258, -27.8518, 0.22", "-64.4706, 2.95259, -28.5254, 1.4", "-64.4945, 3.00675, -28.5806, 1.4", "-65.3565, 4.58267, -29.4613, 2.58" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-47.998, 0.385912, -9.53124, 0.52", "-48.681, 0.910444, -9.76982, 0.52", "-48.7466, 0.958784, -9.78698, 0.52", "-49.1131, 1.22226, -9.87136, 0.52", "-49.1638, 1.25744, -9.88186, 0.52", "-50.0299, 1.83394, -10.0432, 0.52", "-50.1273, 1.89681, -10.0601, 0.52", "-50.7888, 2.28109, -10.1098, 0.52", "-50.8434, 2.30985, -10.1184, 0.52", "-51.0491, 2.40092, -10.1737, 0.81", "-51.3693, 2.53097, -10.2767, 1.03", "-51.4243, 2.55105, -10.2972, 1.03", "-52.0609, 2.77588, -10.5411, 1.03", "-52.8107, 3.02844, -10.8307, 0.44", "-53.4268, 3.23328, -11.0562, 0.29", "-54.7259, 3.64553, -11.5017, 0.22", "-55.4605, 3.8776, -11.7521, 1.33", "-55.5028, 3.89095, -11.7659, 1.33", "-55.9224, 4.02228, -11.8892, 2.06", "-56.4832, 4.19907, -11.995, 2.28", "-56.8617, 4.31654, -12.044, 2.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "10.1712, 21.5806, -3.07033, 0.88", "10.5936, 22.2173, -3.22901, 0.88", "11.0884, 22.8951, -3.47282, 0.81", "11.1538, 22.9548, -3.50035, 0.81", "11.7421, 23.4004, -3.73124, 0.81", "11.7958, 23.4314, -3.76166, 0.81", "12.6707, 23.9121, -4.30654, 1.25", "12.777, 23.9634, -4.39275, 1.25", "13.6887, 24.4886, -5.21372, 1.25", "13.7255, 24.5156, -5.25328, 1.25", "14.7659, 25.4819, -6.51759, 0.66", "15.0991, 25.8591, -6.93958, 0.66", "15.7442, 26.7423, -7.80275, 1.03", "16.3377, 27.7533, -8.65833, 1.03", "16.8184, 28.7907, -9.4308, 0.88", "17.0741, 29.4224, -9.82407, 0.66", "17.2623, 29.9769, -10.0803, 0.66", "17.2792, 30.0311, -10.1053, 0.66", "17.7641, 31.7425, -10.8222, 0.66", "17.7776, 31.797, -10.8488, 0.66", "17.9189, 32.4907, -11.1845, 1.25", "18.0316, 33.2143, -11.5576, 1.69", "18.1842, 34.7138, -12.301, 1.84", "18.2105, 35.1304, -12.4891, 1.84", "18.186, 36.3611, -12.9727, 1.4", "18.1514, 36.9134, -13.1843, 0.96", "18.0751, 37.5845, -13.422, 0.81", "17.9099, 38.644, -13.7309, 0.66", "17.7627, 39.4668, -13.8951, 0.59", "17.5846, 40.5017, -14.0643, 0.59", "17.4019, 41.7556, -14.2138, 0.59", "17.3053, 42.6379, -14.3121, 1.33", "17.2317, 43.619, -14.4521, 2.06", "17.1964, 44.7907, -14.6658, 2.73", "17.2316, 46.1769, -14.9415, 3.17", "17.3136, 47.3174, -15.1754, 3.17", "17.4228, 48.4189, -15.3908, 2.5", "17.6416, 50.121, -15.7583, 0.88", "17.8687, 51.4637, -16.07, 0.52", "18.1126, 52.6381, -16.3608, 0.44", "18.1275, 52.6965, -16.3769, 0.44", "18.418, 53.6648, -16.6627, 0.44", "18.4637, 53.8003, -16.6988, 0.44", "18.7705, 54.7011, -16.8928, 0.44", "18.7959, 54.7894, -16.9159, 0.44", "18.9948, 55.7673, -17.2225, 0.44", "19.0006, 55.8251, -17.2452, 0.44", "18.9996, 57.0995, -17.7695, 0.44", "18.8843, 58.3366, -18.285, 1.18", "18.7606, 59.1182, -18.6157, 1.77", "18.6483, 59.6896, -18.9101, 2.06", "18.2627, 61.3661, -19.8472, 0.37", "17.992, 62.5458, -20.5511, 0.37", "17.6808, 63.8564, -21.3863, 0.37", "17.6709, 63.9008, -21.4135, 0.37", "17.2183, 66.2157, -22.7987, 1.77", "17.0861, 67.0505, -23.2967, 2.36", "17.0181, 67.6239, -23.6136, 1.55", "16.9943, 68.0656, -23.8379, 0.29", "17.0358, 69.3455, -24.2819, 0.29", "17.0917, 70.1349, -24.4566, 0.96", "17.0998, 70.206, -24.4616, 0.96", "17.2166, 71.0482, -24.5124, 0.96", "17.3582, 71.8739, -24.6401, 0.15", "17.6567, 73.5339, -25.0261, 0.15", "17.668, 73.6014, -25.0464, 0.66", "17.6851, 73.7192, -25.0842, 0.66", "17.7285, 74.2374, -25.3537, 0.66", "17.7548, 76.1219, -26.5071, 0.22", "17.6666, 78.2986, -27.9973, 0.22", "17.6131, 79.0146, -28.5264, 1.4", "17.5567, 79.6415, -28.9837, 1.69", "17.2673, 82.4313, -31.003, 0.22", "17.0848, 84.0176, -32.1546, 0.22", "16.9366, 85.3721, -33.0721, 0.29", "16.8965, 85.9778, -33.5278, 1.47", "16.8885, 86.6043, -33.9891, 1.69", "16.8923, 86.6543, -34.0251, 1.69", "17.0951, 87.6876, -34.6667, 0.15", "17.474, 88.8537, -35.5567, 0.15", "17.8397, 89.8016, -36.2763, 0.15", "17.8397, 89.8016, -36.2763, 1.03", "18.1871, 90.7794, -36.9608, 1.84", "18.2022, 90.8303, -36.9925, 1.84", "18.4955, 92.1368, -37.6691, 1.84", "18.5915, 93.0328, -38.0561, 0.15", "18.5944, 93.0835, -38.0732, 0.15", "18.6869, 95.3037, -38.7124, 0.15", "18.6895, 95.3901, -38.7317, 0.74", "18.72, 96.1666, -38.8782, 0.74", "18.8672, 98.834, -39.2526, 0.22", "18.9388, 99.3045, -39.3775, 0.74", "19.0101, 99.5157, -39.4568, 0.74", "19.3621, 100.164, -39.8056, 0.22", "19.693, 100.656, -40.1089, 0.96", "20.0237, 101.04, -40.4058, 1.18", "21.8323, 102.835, -42.0715, 0.15", "23.1306, 104.153, -43.3513, 0.15", "23.5586, 104.586, -43.7883, 0.88", "23.9383, 104.969, -44.1862, 0.88", "25.029, 106.094, -45.3486, 0.22", "25.3827, 106.511, -45.7528, 0.88", "25.727, 106.995, -46.1558, 1.11", "25.7575, 107.042, -46.1976, 1.11", "25.9631, 107.391, -46.4678, 1.11", "25.9877, 107.436, -46.5007, 1.11", "27.1545, 109.833, -48.1044, 0.15", "27.1777, 109.88, -48.1366, 0.15", "27.4186, 110.359, -48.485, 0.74", "27.7032, 110.937, -48.9114, 0.74", "27.7253, 110.982, -48.9462, 0.74", "28.1933, 112.017, -49.706, 0.74", "28.2097, 112.069, -49.7353, 0.74" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "10.1712, 21.5806, -3.07033, 1.4", "10.2741, 21.423, -3.24383, 1.4", "10.9261, 20.4416, -4.18003, 1.4", "11.1991, 19.9911, -4.53593, 0.96", "11.5918, 19.2294, -5.02842, 0.96", "11.6154, 19.1704, -5.06976, 0.96", "11.8514, 18.4191, -5.65152, 0.96", "11.9881, 17.8777, -6.06872, 0.96", "12.158, 17.0041, -6.88641, 0.96", "12.289, 16.1274, -7.9144, 0.96", "12.4422, 15.0301, -9.42346, 1.25", "12.56, 14.3529, -10.4471, 1.25", "12.6473, 13.9308, -11.1598, 1.25", "12.9831, 12.7335, -13.3303, 1.03", "13.2428, 12.0887, -14.5744, 1.03", "13.4552, 11.7045, -15.3345, 1.03", "13.7481, 11.2933, -16.107, 1.25", "14.2295, 10.7332, -17.1312, 1.25", "14.5608, 10.3597, -17.8407, 1.25", "14.8449, 10.0021, -18.4217, 1.25", "14.8625, 9.96702, -18.4852, 1.25", "14.9342, 9.36835, -19.6028, 1.25", "14.8263, 8.85435, -20.4979, 0.88", "14.4987, 7.96437, -21.9647, 1.33", "14.2894, 7.52134, -22.6764, 1.33", "13.7354, 6.43594, -24.3808, 1.03", "13.4666, 5.90363, -25.1673, 0.74", "13.2243, 5.36929, -25.9369, 0.74", "13.0429, 4.74417, -26.8968, 0.74", "13.0583, 4.71838, -26.9545, 0.74", "13.3147, 4.5504, -27.5197, 1.03", "13.372, 4.52175, -27.6422, 1.03", "13.9414, 4.27776, -29.1013, 1.03", "14.248, 4.16032, -29.9239, 1.25", "14.7266, 3.93787, -31.3476, 1.33", "15.2344, 3.64526, -33.0166, 1.33", "15.6467, 3.31482, -34.6485, 1.33", "15.8729, 3.07067, -35.7579, 1.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.1712, 21.5806, -3.07033, 1.55", "10.5517, 21.7521, -3.02971, 1.55", "11.4261, 22.1461, -2.9364, 1.55", "12.752, 22.7436, -2.7949, 1.33", "13.7544, 23.1953, -2.68791, 1.62", "14.8275, 23.6788, -2.57339, 1.84", "14.8821, 23.7035, -2.56756, 1.84" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "26.4015, -177.546, 9.82539, 0.22", "26.5695, -179.427, 7.56205, 0.22", "26.5751, -179.47, 7.52233, 0.22", "26.7023, -180.156, 7.02078, 0.22", "26.764, -180.42, 6.87105, 0.22", "26.836, -180.701, 6.74532, 0.96", "27.0548, -181.5, 6.44621, 1.03", "27.2108, -181.988, 6.36602, 1.4", "27.3934, -182.537, 6.26925, 1.69", "27.6343, -183.242, 6.14247, 1.47", "27.8354, -183.834, 6.03461, 0.88", "28.0764, -184.601, 5.90956, 0.66", "28.4541, -185.868, 5.73038, 0.52", "28.4702, -185.925, 5.72253, 0.52", "28.6639, -186.669, 5.62586, 0.52", "29.0175, -188.152, 5.45231, 0.52", "29.3364, -189.62, 5.30831, 0.29", "29.4482, -190.187, 5.26769, 0.74", "29.5581, -190.815, 5.23887, 1.18", "29.6582, -191.434, 5.21694, 1.55", "29.7483, -192.183, 5.20125, 1.84", "29.7887, -192.808, 5.20055, 1.99", "29.8028, -193.404, 5.19957, 1.62", "29.7986, -194.282, 5.19981, 0.66", "29.775, -195.165, 5.20137, 0.44", "29.7279, -196.323, 5.20498, 0.37", "29.6582, -197.52, 5.20498, 0.29", "29.6156, -198.074, 5.2033, 0.29", "29.5854, -198.394, 5.19216, 0.44", "29.5514, -198.709, 5.16971, 0.44", "29.5048, -199.143, 5.1087, 0.81", "29.4735, -199.543, 5.02289, 0.81", "29.4348, -199.898, 4.93566, 0.81", "29.3296, -200.649, 4.75692, 0.59", "29.244, -201.085, 4.66171, 0.52", "29.096, -201.684, 4.5452, 0.15", "28.8952, -202.392, 4.42637, 0.15", "28.5332, -203.531, 4.24258, 0.15", "28.3448, -204.08, 4.16463, 0.74", "28.1132, -204.799, 4.08898, 1.25", "27.9715, -205.289, 4.03186, 1.47", "27.8797, -205.647, 3.98936, 1.33", "27.7211, -206.429, 3.88426, 0.22", "27.5711, -207.565, 3.72118, 0.22", "27.4534, -209.049, 3.50917, 0.22", "27.4439, -209.582, 3.43983, 0.74", "27.4548, -210.021, 3.39001, 0.96", "27.4929, -210.597, 3.33842, 0.96", "27.5537, -211.102, 3.31091, 0.81", "27.6237, -211.537, 3.29186, 0.22", "27.8221, -212.648, 3.26547, 0.22", "27.8784, -212.968, 3.26557, 1.03", "27.995, -213.61, 3.27839, 1.55", "28.0875, -214.076, 3.29299, 1.92", "28.1514, -214.386, 3.30479, 1.92", "28.2601, -214.886, 3.327, 1.92", "28.473, -215.804, 3.37053, 0.22", "28.8509, -217.389, 3.44462, 0.22", "29.2341, -218.979, 3.51753, 0.22", "29.248, -219.037, 3.51875, 0.22", "29.5138, -220.118, 3.51909, 0.22", "29.7844, -221.152, 3.49993, 2.21", "29.987, -221.9, 3.47313, 2.73", "30.086, -222.267, 3.45328, 2.73", "30.527, -223.922, 3.36965, 0.22", "30.7954, -224.955, 3.32239, 0.22", "31.1606, -226.425, 3.26115, 0.22", "31.4958, -227.843, 3.21466, 0.22", "31.5084, -227.902, 3.21543, 0.22", "31.6276, -228.577, 3.26125, 0.22", "31.6619, -228.851, 3.30047, 1.03", "31.7007, -229.544, 3.42895, 1.47", "31.6974, -229.845, 3.49551, 1.47", "31.6475, -231.007, 3.76541, 0.15", "31.5898, -231.987, 3.9768, 0.15", "31.5418, -232.54, 4.09763, 0.15", "31.5153, -232.875, 4.16741, 0.74", "31.4937, -233.363, 4.25223, 0.74", "31.5046, -233.812, 4.31367, 0.88", "31.5327, -234.205, 4.3705, 0.88", "31.616, -234.958, 4.49984, 0.15", "31.7665, -236.008, 4.69171, 0.15", "32.0316, -237.512, 4.97186, 0.15", "32.3979, -239.268, 5.30443, 0.15", "32.601, -240.097, 5.47716, 0.88", "32.7659, -240.703, 5.61055, 1.18", "32.9241, -241.224, 5.72512, 1.33", "33.0401, -241.617, 5.81189, 1.47", "33.1668, -242.064, 5.90577, 1.18", "33.3533, -242.846, 6.03294, 0.44", "33.465, -243.39, 6.09773, 0.22", "33.6364, -244.387, 6.20659, 0.22", "33.8666, -245.925, 6.3973, 0.22", "33.8785, -246.008, 6.40795, 0.22", "34.0518, -247.18, 6.5753, 0.22", "34.102, -247.503, 6.62182, 0.52", "34.2255, -248.189, 6.72708, 0.52", "34.3918, -249.03, 6.86417, 1.25", "34.5273, -249.624, 6.95986, 1.84", "34.7174, -250.414, 7.06632, 2.21", "34.8706, -250.958, 7.11979, 1.99", "35.163, -251.928, 7.18656, 0.52", "35.33, -252.47, 7.2106, 0.52", "35.5161, -253.068, 7.21258, 0.22", "35.8258, -254.069, 7.20001, 0.22", "36.3096, -255.613, 7.13849, 0.22", "36.4389, -255.999, 7.12774, 1.25" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "26.4015, -177.546, 9.82539, 0.52", "26.9182, -177.66, 10.0184, 0.52", "27.7796, -177.825, 10.346, 0.52", "28.9659, -178.037, 10.7976, 0.52", "29.8074, -178.195, 11.1058, 0.74", "30.6451, -178.356, 11.4072, 0.74", "31.6567, -178.567, 11.7993, 0.44", "32.4281, -178.736, 12.1159, 0.44", "32.4878, -178.752, 12.141, 0.44", "33.0382, -178.963, 12.3575, 0.37", "33.0939, -178.99, 12.3832, 0.37", "33.8771, -179.433, 12.7116, 0.59", "34.4377, -179.818, 12.885, 0.88", "34.6787, -180.01, 12.9542, 1.11", "35.0938, -180.366, 13.0589, 1.25", "35.1437, -180.411, 13.0691, 1.25", "35.5644, -180.803, 13.1319, 1.25", "36.0478, -181.242, 13.173, 0.88", "36.5764, -181.7, 13.2683, 0.59", "36.9562, -182.025, 13.3863, 0.52", "37.5183, -182.498, 13.6086, 0.29", "38.0684, -182.963, 13.8539, 0.29", "39.1546, -183.891, 14.3916, 0.29", "39.993, -184.609, 14.8943, 1.11", "40.6826, -185.216, 15.3554, 1.47", "41.0511, -185.544, 15.6101, 1.84", "41.56, -186.014, 16.0083, 1.99", "42.1053, -186.529, 16.4577, 1.47", "42.9632, -187.373, 17.1817, 0.88", "43.4225, -187.799, 17.5178, 0.88", "44.0444, -188.338, 17.9388, 0.88", "44.9561, -189.025, 18.6005, 0.29", "45.3833, -189.297, 18.9206, 0.29", "45.4384, -189.325, 18.9656, 0.29", "46.0094, -189.561, 19.4302, 0.29", "46.0583, -189.578, 19.4721, 0.29", "47.0973, -189.93, 20.3512, 0.29", "47.2084, -189.969, 20.4321, 0.29", "48.147, -190.364, 21.1212, 0.44", "48.6616, -190.596, 21.4732, 1.03", "49.0963, -190.823, 21.7477, 1.33", "49.5365, -191.072, 21.9845, 1.33", "50.1607, -191.467, 22.2446, 0.88", "50.9365, -191.983, 22.5195, 0.29", "51.5075, -192.39, 22.669, 0.22", "51.9408, -192.739, 22.782, 0.22", "52.2376, -193.004, 22.8565, 0.44", "52.4847, -193.251, 22.9108, 0.66", "52.7956, -193.585, 22.9588, 0.66", "53.1221, -193.941, 22.9809, 0.66", "53.6245, -194.474, 23.015, 0.29", "53.6797, -194.526, 23.0302, 0.29", "54.0621, -194.885, 23.2194, 0.22", "54.596, -195.383, 23.5676, 0.22", "54.6826, -195.464, 23.6336, 0.22", "55.2676, -196.006, 24.1109, 0.22", "56.3038, -197.001, 24.9475, 1.18", "56.8154, -197.519, 25.3576, 1.62", "56.9427, -197.657, 25.4681, 1.84", "57.1989, -197.959, 25.7053, 1.84", "57.5995, -198.427, 26.0371, 1.55", "58.1597, -199.089, 26.4415, 0.44", "58.2025, -199.136, 26.4651, 0.44", "58.8405, -199.813, 26.8226, 0.44", "58.8845, -199.86, 26.845, 0.44", "59.8903, -200.952, 27.3208, 0.29", "60.8212, -201.972, 27.7178, 0.29", "61.499, -202.725, 27.9656, 0.22", "61.581, -202.819, 27.9894, 0.22", "62.3319, -203.723, 28.1242, 0.22", "62.6184, -204.109, 28.1571, 0.66", "62.8734, -204.502, 28.1641, 0.96", "63.084, -204.86, 28.1575, 0.52", "63.2712, -205.212, 28.1587, 0.29", "63.6575, -205.989, 28.23, 0.29", "64.0668, -206.923, 28.3814, 0.29", "64.2001, -207.268, 28.4377, 0.59", "64.4092, -207.911, 28.5357, 0.59", "64.5742, -208.475, 28.6187, 0.59", "64.9244, -209.9, 28.813, 0.15", "65.2144, -211.355, 29.0003, 0.15", "65.3858, -212.433, 29.1268, 0.15", "65.5104, -213.51, 29.2322, 0.15", "65.5133, -213.589, 29.2382, 0.15", "65.4333, -214.368, 29.2593, 0.15", "65.3848, -214.525, 29.2664, 0.44", "65.3571, -214.588, 29.2725, 0.44", "65.2922, -214.72, 29.2897, 0.44", "64.7855, -215.732, 29.441, 0.22", "64.0676, -217.42, 29.6333, 0.22", "63.4643, -219.444, 29.7968, 0.22", "63.4567, -219.513, 29.8006, 0.22", "63.4614, -219.882, 29.8147, 1.03", "63.5451, -220.302, 29.8183, 1.33", "64.3012, -222.012, 29.7889, 0.22", "65.2787, -223.57, 29.7221, 0.22", "66.6976, -225.44, 29.5938, 0.22", "66.7402, -225.493, 29.5903, 0.22", "68.0254, -226.999, 29.501, 0.22", "69.272, -228.316, 29.4411, 0.22", "69.3232, -228.36, 29.4409, 0.22", "69.8167, -228.721, 29.4335, 1.47", "76.2584, -235.822, 31.1878, 1.47" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-16.8948, -36.4143, 37.6409, 0.22", "-17.4314, -36.9535, 37.4839, 0.22", "-18.1459, -37.7608, 37.296, 0.22", "-18.2495, -37.8779, 37.2688, 0.22", "-18.6836, -38.3684, 37.1546, 0.22", "-18.7324, -38.4235, 37.1418, 0.22", "-18.8948, -38.607, 37.0991, 0.44", "-19.2591, -39.1047, 36.9943, 0.44", "-26.0371, -45.4623, 36.556, 0.44" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-16.8948, -36.4143, 37.6409, 0.29", "-16.1733, -36.0517, 37.538, 0.29", "-14.9669, -35.4455, 37.366, 0.29", "-14.8679, -35.3957, 37.3519, 0.29", "-13.8076, -34.8629, 37.2007, 0.29", "-13.4353, -34.6758, 37.1477, 0.66", "-12.7677, -34.3403, 37.0525, 0.66", "-2.2637, -30.3711, 36.4745, 0.66", "7.70925, -25.2389, 35.1272, 0.66", "16.42, -18.3436, 32.6589, 0.66", "26.3742, -13.4168, 30.683, 0.66", "34.5015, -6.08637, 27.5115, 0.66", "42.5899, 0.350711, 22.8825, 0.66", "51.2809, 6.64695, 19.2389, 0.66", "60.8877, 12.0768, 16.7945, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.64159, -32.705, 0.417177, 1.18", "-4.06684, -33.5722, 0.631909, 1.18", "-3.38462, -34.6329, 0.906435, 0.66", "-2.95789, -35.3131, 1.07998, 0.66", "-2.74264, -35.6628, 1.16803, 0.81", "-2.32449, -36.352, 1.336, 0.74", "-1.66386, -37.4553, 1.59807, 0.74", "-1.63537, -37.5059, 1.61219, 0.74", "-1.43667, -37.8499, 1.72302, 0.96", "-1.4021, -37.9063, 1.7398, 0.96", "-1.20495, -38.1968, 1.81681, 0.96", "-1.16591, -38.251, 1.83006, 0.96", "-0.396946, -39.2753, 2.0728, 0.74", "-0.367791, -39.3162, 2.08187, 0.74", "0.0748931, -39.9554, 2.21803, 0.74", "0.793609, -41.0672, 2.455, 0.88", "0.960568, -41.3518, 2.50926, 0.88", "0.983798, -41.3972, 2.51633, 0.88", "1.28133, -42.0914, 2.59198, 0.66", "1.30194, -42.1478, 2.59747, 0.66", "1.61745, -43.2022, 2.70227, 0.52", "1.84553, -44.1397, 2.78161, 0.52", "1.96912, -44.687, 2.81521, 0.88", "2.09115, -45.2758, 2.84377, 1.11", "2.27249, -46.2167, 2.91183, 1.11", "2.3773, -46.8121, 2.96245, 0.52", "2.5697, -48.1259, 3.05817, 0.52", "2.69854, -49.0884, 3.09707, 0.52", "2.78115, -49.7154, 3.10527, 0.88", "2.89508, -50.5838, 3.11134, 1.03", "3.10198, -52.061, 3.1052, 0.81", "3.34786, -53.5207, 3.14642, 0.66", "3.58829, -54.8118, 3.21514, 0.52", "3.77628, -55.7429, 3.2777, 0.52", "4.29146, -57.9648, 3.54567, 0.52", "4.40917, -58.4224, 3.61972, 0.52", "4.99809, -60.4591, 4.09195, 0.44", "5.38957, -61.6694, 4.46362, 1.62", "5.58425, -62.225, 4.66457, 1.99", "6.17079, -63.8436, 5.2332, 1.25", "6.29843, -64.2065, 5.34076, 0.29", "6.53257, -64.9409, 5.51201, 0.29", "6.55072, -65.007, 5.52098, 0.29", "6.84099, -66.1528, 5.62559, 0.29", "7.19741, -67.8332, 5.76631, 0.29", "7.43605, -69.3443, 5.96965, 0.29", "7.45447, -69.4853, 5.99782, 1.47", "7.5518, -70.3442, 6.20923, 1.92", "7.57823, -70.5909, 6.27834, 1.92", "7.71603, -71.9384, 6.73984, 0.37", "8.13306, -75.0136, 7.9375, 0.29", "8.22718, -75.5893, 8.17649, 1.4", "8.2849, -75.8988, 8.31229, 1.62", "8.38333, -76.3504, 8.5119, 1.62", "8.6645, -77.4434, 8.99384, 0.29", "8.95292, -78.3175, 9.35003, 0.29", "8.97756, -78.3766, 9.3743, 0.29", "9.50264, -79.6036, 9.97423, 0.29", "9.86152, -80.4533, 10.3902, 0.29", "10.1987, -81.276, 10.7832, 1.47", "10.4535, -81.9204, 11.074, 1.77", "10.5955, -82.3055, 11.2383, 1.77", "11.1002, -83.686, 11.7667, 0.22", "11.6488, -85.1775, 12.2566, 0.22", "11.8171, -85.6817, 12.4133, 0.22", "11.8841, -85.9239, 12.4737, 0.81", "12.0553, -86.5935, 12.5989, 1.03", "12.1295, -86.9025, 12.6347, 1.03", "12.1437, -86.9613, 12.6362, 1.03", "12.2176, -87.2695, 12.6441, 0.15", "12.5055, -88.4009, 12.6675, 0.15", "12.9632, -90.0326, 12.7367, 0.15", "13.0944, -90.4716, 12.7633, 1.25", "13.2748, -91.0729, 12.7996, 1.62", "13.312, -91.1967, 12.8071, 1.62", "13.3491, -91.3205, 12.8145, 1.62", "13.6095, -92.2289, 12.8652, 0.22", "13.8793, -93.3021, 12.9542, 0.22", "14.3806, -95.3779, 13.1509, 0.22", "14.3937, -95.4366, 13.1568, 0.22", "14.461, -95.745, 13.1875, 0.74", "14.6076, -96.4392, 13.2525, 0.74", "14.8184, -97.5408, 13.3389, 0.15", "14.8299, -97.6, 13.344, 0.15", "14.9393, -98.0658, 13.3842, 0.44", "15.0388, -98.4384, 13.4076, 0.44", "15.168, -98.8784, 13.4288, 0.15", "15.3437, -99.4235, 13.437, 0.15", "15.4867, -99.8268, 13.4148, 1.18", "15.7443, -100.544, 13.374, 1.62", "15.8109, -100.721, 13.3629, 1.62", "19.3101, -108.57, 13.6589, 1.62" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.64159, -32.705, 0.417177, 1.77", "-5.26213, -34.1536, 0.0509867, 1.77", "-5.96147, -35.9137, -0.402682, 1.77", "-6.695, -37.8445, -0.878965, 1.69", "-7.50742, -40.0656, -1.3896, 1.55", "-8.36337, -42.5184, -1.91955, 1.55", "-9.20836, -45.0131, -2.43444, 1.33", "-9.71594, -46.6411, -2.75602, 1.47", "-10.194, -48.2603, -3.05328, 2.06", "-10.6507, -49.9388, -3.33566, 2.36", "-10.8775, -50.85, -3.48011, 2.28", "-10.9753, -51.2588, -3.52106, 2.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-26.3436, 14.2421, 1.82448, 1.03", "-26.3786, 14.2726, 1.84823, 1.03", "-26.9784, 14.7922, 2.22291, 0.88", "-27.5406, 15.2782, 2.5442, 0.88", "-28.0898, 15.7483, 2.83995, 0.88", "-29.1945, 16.6803, 3.38422, 0.88", "-29.8287, 17.217, 3.6773, 0.96", "-30.2911, 17.6066, 3.86838, 0.66", "-30.7396, 17.9676, 4.03606, 0.59", "-30.8316, 18.0401, 4.06908, 0.59", "-31.4746, 18.5684, 4.28707, 0.59", "-31.8419, 18.9024, 4.41543, 0.59", "-32.1725, 19.2561, 4.57162, 0.88", "-32.6249, 19.8381, 4.84504, 1.03", "-32.9499, 20.3164, 5.07707, 1.11", "-33.1523, 20.6678, 5.24531, 1.11", "-33.3881, 21.1734, 5.48039, 0.66", "-33.8495, 22.2793, 5.96621, 0.66", "-34.0518, 22.8344, 6.19348, 0.96", "-34.0684, 22.8866, 6.21329, 0.96", "-34.3331, 23.7899, 6.55785, 0.96", "-34.6218, 24.821, 6.94989, 0.96", "-34.7437, 25.2975, 7.13135, 0.74", "-35.0132, 26.4278, 7.56649, 0.52", "-35.1312, 26.9832, 7.78386, 0.52", "-35.3954, 28.4594, 8.3736, 0.52", "-35.4041, 28.5206, 8.39859, 0.52", "-35.4772, 29.2503, 8.70414, 0.52", "-35.4986, 29.6438, 8.87457, 1.11", "-35.5003, 30.201, 9.12717, 1.47", "-35.4773, 30.7627, 9.39242, 1.33", "-35.472, 30.8224, 9.42178, 1.33", "-35.4333, 31.3073, 9.66059, 1.33", "-35.3966, 31.7613, 9.88585, 0.88", "-35.3652, 32.1718, 10.0893, 0.88", "-35.3289, 32.7805, 10.3875, 0.52", "-35.3047, 33.3315, 10.6538, 0.52", "-35.289, 33.8829, 10.9181, 0.96", "-35.2886, 33.9356, 10.9432, 0.96", "-35.2964, 34.4353, 11.1744, 1.11", "-35.3136, 34.9278, 11.4005, 1.11", "-35.3149, 34.9882, 11.429, 1.11", "-35.3144, 35.2674, 11.5636, 0.81", "-35.307, 35.6002, 11.7259, 0.66", "-35.2932, 36.1002, 11.9683, 0.66", "-35.291, 36.1452, 11.9901, 0.66", "-35.2601, 36.5955, 12.2043, 0.88", "-35.259, 37.0449, 12.4052, 0.88", "-35.2826, 37.4921, 12.5973, 0.66", "-35.3266, 37.9979, 12.81, 0.44", "-35.4161, 38.795, 13.1418, 0.22", "-35.448, 39.0299, 13.2378, 0.22", "-35.7004, 40.5884, 13.8666, 0.22", "-35.7834, 41.0421, 14.0479, 0.22", "-35.9205, 41.7145, 14.3141, 0.22", "-35.9744, 41.9339, 14.3991, 0.59", "-36.0064, 42.0466, 14.4419, 0.59", "-36.1294, 42.4823, 14.6086, 0.74", "-36.2791, 43.1182, 14.8161, 1.25", "-36.4181, 43.7538, 14.9985, 1.99", "-36.5676, 44.4513, 15.1813, 2.43", "-36.6227, 44.7509, 15.2615, 2.43", "-36.7319, 45.4399, 15.4572, 2.28", "-36.9027, 46.5454, 15.7793, 0.74", "-36.9123, 46.6084, 15.799, 0.74", "-37.0243, 47.3597, 16.0505, 0.66", "-37.2217, 48.7766, 16.5594, 0.66", "-37.4175, 50.0846, 17.0546, 0.66", "-37.5008, 50.5868, 17.2573, 0.66", "-37.6469, 51.3444, 17.6245, 0.66", "-37.7495, 51.8184, 17.872, 1.11", "-37.9121, 52.4969, 18.2442, 1.11", "-37.9268, 52.5535, 18.2759, 1.11", "-38.0608, 53.0785, 18.5743, 0.96", "-38.2728, 53.967, 19.0663, 0.22", "-38.93, 56.7461, 20.5569, 0.15", "-39.0605, 57.2964, 20.845, 2.06", "-39.3039, 58.3288, 21.3711, 2.73", "-39.5032, 59.2046, 21.8022, 0.22", "-39.8585, 60.8417, 22.5631, 0.22", "-39.965, 61.3902, 22.7928, 0.66", "-40.0669, 61.9557, 23.0283, 1.03", "-40.132, 62.3496, 23.1853, 0.88", "-40.1926, 62.7469, 23.3357, 0.52", "-40.2277, 62.9941, 23.424, 0.15", "-40.382, 64.253, 23.8678, 0.15", "-40.508, 65.3602, 24.2676, 0.15", "-40.6015, 66.0719, 24.5315, 1.33", "-40.6967, 66.686, 24.7825, 2.21", "-40.7741, 67.1298, 24.9795, 2.21", "-40.8486, 67.5051, 25.1641, 2.21", "-41.0197, 68.2627, 25.5684, 0.15", "-41.5102, 70.099, 26.6468, 0.15", "-41.7196, 70.7894, 27.0834, 0.15", "-41.904, 71.3339, 27.4397, 1.69", "-42.1052, 71.9206, 27.8138, 2.06", "-42.2895, 72.4253, 28.148, 2.06", "-42.4927, 72.977, 28.522, 1.69", "-42.5097, 73.023, 28.5532, 1.69", "-42.7124, 73.6218, 28.9304, 0.15", "-43.2911, 75.5591, 30.0775, 0.15", "-43.4679, 76.2491, 30.4508, 0.81", "-43.5646, 76.6726, 30.6698, 1.18", "-43.6771, 77.2335, 30.9458, 0.88", "-43.7602, 77.6731, 31.1577, 0.15", "-43.9964, 79.1, 31.8283, 0.15", "-44.1758, 80.7393, 32.5638, 0.15", "-44.1961, 81.0202, 32.6833, 0.81", "-44.2145, 81.4107, 32.851, 0.96", "-44.2178, 81.6464, 32.9535, 0.96", "-44.2103, 82.1455, 33.1732, 0.22", "-44.0696, 84.2834, 34.1352, 0.22", "-44.063, 84.3437, 34.1629, 0.22", "-44.0103, 84.8073, 34.3687, 0.96", "-43.9779, 85.086, 34.4899, 1.25", "-43.9448, 85.3679, 34.6107, 1.25", "-43.892, 85.8112, 34.7963, 0.81", "-43.8116, 86.4245, 35.0748, 0.15", "-43.5627, 88.1211, 35.9157, 0.15", "-43.4594, 88.6693, 36.1875, 1.99", "-43.3451, 89.1843, 36.4427, 2.95", "-43.3324, 89.2351, 36.468, 2.95", "-43.1121, 89.9915, 36.8014, 2.95", "-42.8254, 90.9302, 37.1628, 0.22", "-42.4114, 92.3203, 37.64, 0.22", "-42.2752, 92.8332, 37.7996, 1.25", "-42.1606, 93.2979, 37.9243, 1.69", "-41.8991, 94.4208, 38.1887, 0.15", "-41.5454, 96.0578, 38.5163, 0.15", "-41.3356, 97.1149, 38.7283, 0.15", "-41.1932, 98.1491, 39.088, 2.14", "-41.15, 98.5806, 39.3092, 2.14", "-41.1458, 98.6568, 39.3643, 2.14", "-41.1511, 99.3167, 40.037, 0.15", "-41.1689, 99.6058, 40.4273, 0.15", "-41.3125, 101.162, 42.8232, 0.15", "-41.3384, 101.413, 43.2035, 0.88", "-41.3598, 101.71, 43.584, 1.03", "-41.362, 101.747, 43.6278, 1.03", "-41.378, 102.13, 44.0179, 0.29", "-41.3731, 102.746, 44.527, 0.15", "-41.3093, 103.635, 45.0506, 0.15", "-41.1741, 104.692, 45.6652, 0.15", "-41.0789, 105.184, 45.9522, 0.74", "-40.9606, 105.647, 46.2229, 0.74", "-40.8877, 105.868, 46.354, 0.15", "-40.4839, 106.876, 46.9426, 0.15", "-39.5659, 108.28, 47.8229, 0.15", "-38.9655, 108.958, 48.2746, 0.15", "-38.6105, 109.307, 48.5206, 1.77", "-38.2163, 109.655, 48.7817, 2.28", "-37.965, 109.861, 48.9427, 2.14", "-34.6403, 112.297, 50.9714, 0.15", "-33.1073, 113.309, 51.877, 0.15", "-32.7537, 113.531, 52.0823, 0.59", "-32.7167, 113.554, 52.1039, 0.59", "-34.7358, 120.478, 56.2415, 0.59", "-37.7521, 127.12, 60.171, 0.59", "-40.5212, 134.069, 63.7631, 0.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-26.3436, 14.2421, 1.82448, 0.66", "-27.8076, 13.6459, 1.31203, 0.66", "-29.0352, 13.1415, 0.813765, 0.66", "-30.7614, 12.4396, 0.067963, 0.81", "-32.7935, 11.594, -0.87917, 1.03", "-35.113, 10.6182, -1.98509, 1.03", "-36.7689, 9.91552, -2.77215, 0.88", "-38.0438, 9.38569, -3.41327, 0.52", "-38.943, 9.00703, -3.87589, 0.81", "-40.1627, 8.49092, -4.48978, 1.33", "-41.0525, 8.12099, -4.91608, 1.33", "-42.0055, 7.76262, -5.27709, 1.11", "-42.8879, 7.47842, -5.54598, 0.88", "-44.0192, 7.15692, -5.83591, 0.59", "-46.1362, 6.60792, -6.41879, 0.59", "-47.0723, 6.37835, -6.68581, 0.81", "-48.9018, 5.91301, -7.25218, 0.81", "-49.8145, 5.67168, -7.54045, 0.81", "-50.7777, 5.40297, -7.84714, 0.81", "-52.5973, 4.83944, -8.45593, 0.81", "-53.5037, 4.51144, -8.77745, 0.52", "-54.6661, 4.00751, -9.17204, 0.52", "-56.1752, 3.23601, -9.6879, 0.52", "-56.2475, 3.19594, -9.71078, 0.52", "-57.2565, 2.6176, -9.99102, 1.11", "-58.126, 2.10074, -10.1763, 1.25", "-59.5593, 1.23708, -10.4896, 1.25", "-60.3629, 0.69702, -10.6735, 0.74", "-60.932, 0.27125, -10.8063, 0.52", "-61.0721, 0.154102, -10.8376, 0.52", "-61.6701, -0.415875, -10.9571, 0.52", "-61.7949, -0.552685, -10.9793, 0.52", "-62.4657, -1.4167, -11.1126, 0.52", "-62.519, -1.48512, -11.1232, 0.52", "-63.3237, -2.41734, -11.2716, 0.52", "-63.3854, -2.47752, -11.2817, 0.52", "-64.1677, -3.14963, -11.4046, 0.52", "-64.8229, -3.65359, -11.4997, 0.74", "-65.6577, -4.22437, -11.6119, 0.81", "-66.5606, -4.83198, -11.7315, 0.81", "-67.8986, -5.7212, -11.9066, 0.37", "-68.9949, -6.49209, -12.0044, 1.18", "-70.1529, -7.38728, -12.0727, 2.06", "-71.0759, -8.1687, -12.1102, 2.58", "-71.8997, -8.9262, -12.1343, 2.58", "-72.5871, -9.59181, -12.1503, 1.99", "-73.9751, -10.9469, -12.181, 0.52", "-75.6208, -12.501, -12.2216, 0.52", "-76.9453, -13.7094, -12.1869, 0.52", "-77.8303, -14.4591, -12.1317, 0.96", "-79.0218, -15.3738, -12.0159, 1.47", "-80.321, -16.259, -11.8679, 1.69", "-81.1954, -16.7869, -11.7474, 1.69", "-82.9235, -17.7174, -11.4258, 1.69", "-83.8773, -18.2021, -11.2166, 1.18", "-84.9151, -18.7175, -10.9622, 0.88", "-86.1517, -19.3248, -10.6515, 0.44", "-87.7052, -20.1002, -10.2825, 0.44", "-88.813, -20.6445, -10.071, 0.44", "-88.8902, -20.68, -10.0623, 0.44", "-90.0542, -21.1658, -9.90004, 0.44", "-91.2756, -21.5859, -9.71851, 0.44", "-91.5833, -21.6719, -9.66821, 0.88", "-92.5564, -21.8669, -9.54024, 1.18", "-93.4193, -22.0213, -9.4177, 1.18", "-94.6584, -22.2375, -9.24523, 0.81", "-95.3564, -22.3728, -9.16501, 0.52", "-95.9155, -22.4958, -9.10518, 0.29", "-98.1139, -23.0512, -8.90549, 0.29", "-99.0702, -23.3378, -8.83906, 0.22", "-99.1507, -23.3655, -8.83618, 0.22", "-101.073, -24.0739, -8.8975, 0.22", "-101.194, -24.119, -8.90453, 0.22", "-101.682, -24.3039, -8.95627, 0.37", "-102.239, -24.5197, -9.04651, 1.03", "-103.032, -24.807, -9.20845, 1.4", "-103.882, -25.0929, -9.4183, 1.4", "-104.878, -25.4192, -9.69719, 1.4", "-105.968, -25.8235, -10.0154, 0.22", "-106.909, -26.2062, -10.2953, 0.15", "-108.151, -26.7605, -10.6669, 0.15", "-109.199, -27.2841, -10.9752, 0.15", "-109.997, -27.7414, -11.1992, 0.15", "-111.158, -28.4817, -11.5149, 0.15", "-111.875, -28.9731, -11.6898, 0.29", "-112.4, -29.3552, -11.801, 1.03", "-113.194, -29.9582, -11.9435, 1.55", "-113.908, -30.5078, -12.0517, 1.55", "-114.944, -31.2938, -12.2061, 0.15", "-116.144, -32.1895, -12.3818, 0.15", "-118.371, -33.8656, -12.7068, 0.15", "-119.246, -34.521, -12.8323, 1.33", "-120.208, -35.2331, -12.9654, 2.73", "-121.002, -35.8089, -13.074, 3.39", "-121.086, -35.8709, -13.0856, 3.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "26.7436, 32.2371, -1.4207, 0.975718", "36.5663, 43.5735, -1.4207, 0.975718", "46.389, 54.91, -1.4207, 0.975718" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "43.7695, -0.279015, 21.9507, 0.15", "44.9332, -0.912156, 23.021, 0.15", "45.5139, -1.15631, 23.6196, 0.15", "45.7655, -1.23769, 23.8966, 0.15", "45.8023, -1.2428, 23.9406, 0.15", "45.9641, -1.23092, 24.1642, 0.15", "45.9896, -1.21104, 24.2125, 0.15", "45.9217, -0.497549, 24.5932, 0.15", "45.9057, -0.381224, 24.6473, 0.15", "45.8015, 0.185259, 24.9006, 0.15", "45.6881, 0.709855, 25.1224, 0.15", "45.5409, 1.28113, 25.3421, 1.03", "45.3792, 1.86465, 25.5287, 1.4", "45.2865, 2.16403, 25.5895, 1.4", "47.0769, 5.71955, 32.9334, 1.4", "47.6357, 8.46245, 40.7753, 1.4" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "43.7695, -0.279015, 21.9507, 0.29", "43.5903, 0.123816, 22.0168, 0.29", "43.5664, 0.177412, 22.0256, 0.29", "43.3927, 0.5679, 22.0897, 0.29", "43.0541, 1.32899, 22.2145, 0.29", "40.1062, 9.2737, 22.0651, 0.29", "38.626, 17.6056, 22.9937, 0.29", "36.3411, 25.7647, 22.552, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "14.5658, 110.801, 26.2316, 0.52", "14.3081, 111.828, 26.4448, 0.52", "14.1248, 112.652, 26.5756, 0.52", "14.11, 112.75, 26.5906, 0.52", "14.0346, 113.681, 26.7029, 0.52", "14.0277, 113.95, 26.7571, 0.52", "14.0262, 114.922, 26.9863, 0.52", "14.0307, 115.104, 27.027, 0.52", "14.0623, 116.069, 27.3005, 0.44", "14.1056, 117.462, 27.7519, 0.44", "14.0864, 118.865, 28.3056, 0.22", "14.0812, 118.944, 28.3408, 0.22", "14.0059, 119.786, 28.7558, 0.22", "13.9054, 120.581, 29.1687, 0.22", "13.8876, 120.665, 29.2165, 0.22", "13.4129, 122.119, 30.1402, 0.22", "13.3483, 122.272, 30.2215, 0.22", "12.4979, 132.905, 36.3855, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "14.5658, 110.801, 26.2316, 0.15", "15.2659, 112.179, 28.7853, 0.15", "15.5414, 112.655, 29.3247, 0.15", "15.569, 112.701, 29.3643, 0.15", "15.7838, 113.088, 29.6165, 0.88", "16.0, 113.504, 29.8113, 1.33", "16.2212, 113.93, 29.9832, 1.4", "16.6145, 114.646, 30.0704, 0.29", "16.6508, 114.703, 30.0726, 0.29", "17.3913, 115.717, 30.0387, 0.22", "18.2207, 116.697, 29.9365, 0.22", "18.3934, 116.879, 29.8905, 0.52", "18.9863, 117.441, 29.5763, 0.59", "19.6809, 118.043, 29.0305, 0.29", "20.0455, 118.345, 28.6036, 0.29", "20.3651, 118.621, 28.1014, 0.29", "20.748, 119.086, 27.3387, 0.66", "21.234, 119.984, 26.2242, 0.66", "21.2565, 120.037, 26.1739, 0.66", "21.6026, 120.961, 25.4733, 0.37", "21.9683, 121.932, 24.859, 0.37", "22.4267, 123.063, 24.29, 0.29", "23.0003, 124.313, 23.8525, 0.22", "23.4752, 125.24, 23.6675, 0.22", "23.8205, 125.86, 23.598, 1.33", "24.1642, 126.43, 23.5924, 1.4", "24.44, 126.858, 23.6127, 1.4", "24.8385, 127.458, 23.7271, 0.81", "25.3572, 128.316, 24.0117, 0.59", "25.6859, 128.961, 24.2596, 0.22", "25.7409, 129.084, 24.3121, 0.22", "26.0718, 130.041, 24.8185, 0.22", "26.3427, 131.092, 25.4146, 0.52", "26.367, 131.216, 25.497, 0.52", "26.4404, 131.665, 25.8173, 0.52", "26.4482, 131.726, 25.8628, 0.52", "26.6108, 133.227, 26.9117, 0.52", "26.6705, 133.813, 27.2982, 0.81", "26.8127, 135.077, 27.9851, 1.33", "26.8361, 135.259, 28.0762, 1.33", "26.9087, 135.817, 28.3516, 1.33", "27.0168, 136.658, 28.7177, 1.33", "27.052, 136.949, 28.7921, 1.33", "27.1127, 137.596, 28.9011, 1.03", "27.1303, 137.951, 28.8812, 0.81", "29.6531, 147.308, 29.9459, 0.81", "31.3906, 156.926, 30.0552, 0.81", "32.2502, 166.638, 29.2727, 0.81", "32.5905, 176.387, 29.8989, 0.81" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "14.5658, 110.801, 26.2316, 0.22", "13.9927, 110.72, 26.2362, 0.22", "13.7916, 110.692, 26.2378, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "11.0807, 99.5489, 54.5368, 0.29", "11.6924, 106.197, 59.8305, 0.29", "13.6107, 112.856, 64.7985, 0.29", "15.6753, 118.841, 70.4409, 0.29", "19.2071, 123.686, 76.3481, 0.29", "23.5126, 129.073, 81.2349, 0.29", "28.933, 134.798, 84.3579, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "11.0807, 99.5489, 54.5368, 0.15", "9.99325, 109.458, 59.3498, 0.29", "6.75859, 118.27, 65.0427, 0.29", "2.24728, 127.265, 69.4667, 0.29", "-0.531679, 137.26, 73.3418, 0.29", "-2.21088, 147.921, 76.0889, 0.29", "-3.28633, 158.926, 77.6799, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-56.8617, 4.31654, -12.044, 0.52", "-57.8046, 3.31919, -11.9799, 0.52", "-58.5822, 2.75224, -11.9695, 0.52", "-58.6409, 2.70947, -11.9688, 0.52", "-58.9468, 2.48643, -11.9647, 0.88", "-59.5429, 2.05183, -11.9567, 0.22", "-60.2744, 1.51851, -11.947, 1.18", "-61.07, 1.20536, -11.9414, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-56.8617, 4.31654, -12.044, 0.22", "-58.4285, 5.23354, -12.6748, 0.22", "-60.2705, 6.29335, -13.3552, 0.22", "-60.5738, 6.46386, -13.4758, 0.22", "-61.4663, 6.96602, -13.8386, 0.22", "-61.638, 7.06037, -13.9068, 0.22", "-63.4896, 8.06518, -14.6299, 0.22", "-63.5839, 8.11379, -14.6603, 0.22", "-64.9811, 8.69481, -15.1172, 1.62", "-66.034, 9.06792, -15.4469, 2.06", "-66.7977, 9.27888, -15.646, 2.06", "-67.0133, 9.32908, -15.6954, 2.06", "-68.7747, 9.64839, -16.0421, 0.15", "-70.8838, 9.97762, -16.3933, 0.15", "-72.2707, 10.152, -16.5709, 0.15", "-75.3705, 10.4561, -16.9134, 0.15", "-75.4655, 10.4642, -16.9227, 0.15", "-76.017, 10.5032, -16.9626, 0.88", "-76.8295, 10.5471, -16.9926, 1.11", "-77.5399, 10.5749, -16.9738, 1.11", "-78.2662, 10.6043, -16.9552, 0.22", "-78.3617, 10.6103, -16.9535, 0.22", "-80.1776, 10.7419, -17.0027, 0.22", "-80.2725, 10.7525, -17.0099, 0.22", "-80.5816, 10.7987, -17.0469, 0.44", "-81.0956, 10.8954, -17.1246, 0.44", "-82.5621, 11.1962, -17.4099, 0.22", "-83.438, 11.3959, -17.5976, 0.88", "-84.4143, 11.6361, -17.8237, 1.55", "-85.2347, 11.839, -17.9988, 1.84", "-86.4, 12.1324, -18.2359, 0.29", "-87.0131, 12.2938, -18.3513, 0.22", "-89.2891, 12.9326, -18.8094, 0.22", "-89.574, 13.0147, -18.8651, 0.22", "-91.4945, 13.5683, -19.2563, 0.22", "-91.6404, 13.6114, -19.2869, 0.22", "-93.2107, 14.0771, -19.6591, 0.22", "-94.1447, 14.336, -19.8732, 1.18", "-94.5332, 14.4323, -19.9675, 1.62", "-95.3575, 14.6102, -20.1681, 1.92", "-95.9426, 14.7292, -20.2473, 1.92", "-97.0331, 14.9571, -20.3363, 0.22", "-99.8941, 15.5797, -20.4555, 0.22", "-100.001, 15.6042, -20.4568, 0.22", "-100.374, 15.7133, -20.4309, 0.59", "-104.232, 17.0603, -19.9459, 0.22", "-105.444, 17.5145, -19.7555, 1.11", "-106.151, 17.7992, -19.625, 1.84", "-106.889, 18.1103, -19.4806, 1.84", "-109.747, 19.3154, -18.9415, 0.22", "-112.784, 20.5137, -18.416, 0.15", "-115.234, 21.3871, -18.0372, 0.15", "-115.435, 21.449, -17.9991, 0.44", "-115.721, 21.5229, -17.9439, 0.44", "-116.303, 21.6407, -17.8419, 0.44", "-118.726, 21.9086, -17.563, 0.15", "-118.82, 21.9141, -17.5446, 0.15", "-120.694, 21.9912, -17.0649, 1.47", "-121.479, 22.0169, -16.8472, 2.14", "-121.972, 22.0353, -16.6955, 2.43" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "14.8821, 23.7035, -2.56756, 1.03", "15.5546, 24.8842, -2.08922, 1.03", "15.9076, 25.4799, -1.83781, 0.96", "16.3957, 26.2741, -1.46205, 0.81", "16.8784, 27.0481, -1.09511, 0.81", "17.6127, 28.2658, -0.546599, 0.81", "18.2585, 29.3364, -0.0296489, 0.81", "18.3487, 29.4899, 0.0488293, 0.81", "18.8401, 30.3319, 0.498407, 1.11", "19.2927, 31.1143, 0.903561, 1.25", "19.8463, 32.0725, 1.40575, 1.25", "20.5611, 33.3077, 2.05539, 1.03", "21.22, 34.4297, 2.66366, 0.81", "22.1096, 35.9106, 3.43763, 0.81", "22.819, 37.0554, 3.99042, 0.81", "22.8645, 37.1256, 4.02273, 0.81", "23.3524, 37.8704, 4.31272, 1.18", "23.5804, 38.2427, 4.41854, 1.18", "23.9692, 38.9616, 4.58211, 1.18", "24.5398, 40.1773, 4.86584, 1.47", "24.9762, 41.2716, 5.19127, 1.18", "25.4184, 42.4981, 5.6002, 0.74", "25.72, 43.4966, 5.96659, 0.74", "26.0796, 45.1922, 6.67599, 0.74", "26.319, 46.7348, 7.3867, 0.88", "26.5664, 49.0082, 8.58385, 0.88", "26.575, 49.1374, 8.65749, 0.88", "26.6489, 50.9576, 9.7645, 0.88", "26.7035, 53.5026, 11.3792, 0.88", "26.7045, 53.5905, 11.4368, 0.88", "26.72, 54.9522, 12.2834, 0.66", "26.754, 55.8409, 12.8322, 0.66", "26.8525, 57.0198, 13.5333, 0.66", "26.8661, 57.0954, 13.5805, 0.66", "27.2116, 58.0999, 14.2956, 1.03", "27.5174, 58.8505, 14.8676, 1.4", "27.8, 59.4046, 15.3294, 1.55", "28.1153, 59.9304, 15.7886, 1.69", "28.7455, 60.9459, 16.6408, 1.47", "29.5497, 62.1158, 17.684, 1.33", "29.5976, 62.1811, 17.749, 1.33", "30.2367, 63.0016, 18.6546, 0.81", "30.9649, 64.0106, 19.8303, 0.66", "31.3475, 64.7016, 20.6027, 0.66", "31.9445, 66.2016, 22.1441, 0.66", "32.108, 66.7668, 22.7058, 0.66", "32.1411, 66.9023, 22.84, 0.66", "32.3217, 67.9211, 23.8752, 0.66", "32.517, 69.2758, 25.1916, 0.66", "32.5351, 69.413, 25.3057, 0.66", "32.6884, 70.4202, 25.8769, 0.88", "32.9156, 71.3593, 26.2477, 1.03", "32.9485, 71.4705, 26.2813, 1.03", "33.4681, 72.8471, 26.5533, 1.03", "33.5144, 72.9573, 26.5679, 1.03", "34.0789, 74.3362, 26.6792, 1.03", "34.9077, 76.41, 26.7774, 1.03", "34.9462, 76.5079, 26.7813, 1.03", "35.6428, 78.3053, 26.8428, 0.66", "36.7971, 81.2564, 26.9175, 0.66", "37.2514, 82.4003, 26.9449, 0.66", "37.2917, 82.4974, 26.9464, 0.66", "37.6852, 83.3866, 26.9505, 0.88", "38.0139, 84.1138, 26.9638, 1.18", "38.5013, 85.139, 26.9945, 1.4", "38.9384, 85.9974, 27.0423, 1.4", "39.2485, 86.615, 27.1043, 1.4", "39.7426, 87.6324, 27.2147, 0.81", "40.1044, 88.4886, 27.3635, 0.66", "40.3938, 89.1884, 27.5987, 0.52", "40.5055, 89.4761, 27.7181, 0.52", "41.0224, 90.8071, 28.3183, 0.52", "41.0579, 90.8973, 28.3592, 0.52", "41.7936, 92.7125, 29.0792, 0.52", "42.7003, 94.7977, 29.7064, 0.44", "43.2848, 96.0791, 30.0173, 0.66", "43.6177, 96.7805, 30.1426, 0.81", "44.2968, 98.1434, 30.299, 0.81", "45.0238, 99.5313, 30.355, 0.66", "46.1041, 101.459, 30.2304, 0.52", "46.1539, 101.55, 30.2188, 0.52", "46.8751, 102.81, 30.0977, 0.52", "46.9272, 102.9, 30.0896, 0.52", "47.4998, 103.871, 30.0157, 0.88", "48.0885, 104.875, 29.9765, 1.18", "48.1413, 104.965, 29.9726, 1.18", "48.7165, 105.948, 29.9299, 1.18", "49.2892, 106.939, 29.8899, 0.74", "49.9009, 108.036, 29.8564, 0.37", "50.847, 109.753, 29.812, 0.37", "51.2369, 110.405, 29.7839, 0.37", "51.4586, 110.734, 29.7598, 0.74", "51.9669, 111.379, 29.6845, 1.03", "52.0464, 111.465, 29.6704, 1.03", "52.8781, 112.237, 29.4898, 1.25", "53.9217, 113.101, 29.2374, 1.25", "54.4323, 113.539, 29.1177, 1.47", "54.8496, 113.937, 29.0297, 1.47", "55.0024, 114.096, 29.0064, 1.47", "55.6028, 114.811, 28.9617, 1.25", "56.2441, 115.687, 28.9633, 1.03", "56.8931, 116.669, 29.0259, 0.88", "58.027, 118.499, 29.2036, 0.59", "58.6884, 119.617, 29.329, 0.37", "59.4303, 120.854, 29.5402, 0.37", "59.9627, 121.729, 29.7317, 0.52", "60.3834, 122.405, 29.9059, 0.66", "61.0091, 123.375, 30.1833, 0.66", "62.1356, 125.066, 30.7133, 0.66", "63.0963, 126.49, 31.1524, 0.66", "63.1529, 126.574, 31.1782, 0.66", "63.6451, 127.345, 31.4099, 1.25", "64.1081, 128.136, 31.6317, 1.69", "64.5912, 129.117, 31.9016, 1.84", "64.7838, 129.605, 32.0382, 1.99", "65.0718, 130.53, 32.2677, 1.11", "65.1882, 130.94, 32.3689, 0.88", "65.2619, 131.254, 32.4488, 0.66", "65.4581, 132.194, 32.7135, 0.44", "65.7769, 133.867, 33.2044, 0.29", "66.0079, 135.122, 33.5777, 0.29", "66.6479, 138.65, 34.6661, 0.29", "66.9823, 140.477, 35.2326, 0.22", "67.1512, 141.32, 35.5235, 0.29", "67.3046, 142.027, 35.786, 0.44", "67.65, 143.543, 36.3754, 0.44", "67.9802, 144.786, 36.9087, 0.44", "68.1854, 145.428, 37.2146, 1.11", "68.9152, 147.111, 38.0651, 1.77", "69.3351, 147.943, 38.4665, 1.92", "69.8845, 148.751, 38.9616, 2.14", "70.2477, 149.202, 39.25, 1.99", "70.6257, 149.627, 39.512, 1.99", "71.9974, 151.132, 40.3781, 0.37", "73.0384, 152.267, 40.9694, 0.37", "75.7818, 155.21, 42.4453, 0.29", "76.6371, 156.109, 42.9202, 1.11", "77.2653, 156.728, 43.3839, 1.92", "77.864, 157.307, 43.8975, 2.28", "78.1997, 157.616, 44.1976, 2.43", "78.9243, 158.184, 44.9117, 2.43", "80.1707, 159.139, 46.2853, 2.43", "83.2011, 161.353, 49.9126, 0.37", "83.7911, 161.794, 50.6691, 0.37", "84.5121, 162.371, 51.6452, 0.37", "85.5969, 163.376, 53.2066, 0.59", "86.2227, 164.149, 54.2076, 0.81", "86.2916, 164.319, 54.3367, 0.81", "86.4352, 165.509, 54.7987, 0.81", "86.516, 166.809, 55.236, 0.81", "86.5405, 167.77, 55.5199, 0.59", "86.561, 168.944, 55.8053, 0.44", "86.6283, 170.886, 56.2574, 0.44", "86.7317, 173.243, 56.7965, 0.44", "86.8218, 174.761, 57.1329, 1.03", "86.8769, 175.623, 57.3247, 1.62", "86.8806, 175.741, 57.3493, 1.62", "86.8758, 176.962, 57.5913, 2.14", "86.8612, 177.273, 57.6489, 2.36", "86.7533, 178.248, 57.8219, 2.36", "86.5335, 179.557, 58.0558, 1.77", "86.2006, 181.077, 58.3587, 0.52", "86.1797, 181.163, 58.376, 0.52", "86.0638, 181.575, 58.4575, 0.37", "85.829, 182.309, 58.6079, 0.37", "85.7188, 182.588, 58.6704, 0.29", "85.0779, 183.977, 59.0519, 0.29", "91.9171, 197.161, 61.2286, 0.29", "97.2439, 210.982, 63.966, 0.29", "101.982, 225.266, 64.4927, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "14.8821, 23.7035, -2.56756, 1.33", "15.8984, 23.2441, -2.88365, 1.33", "16.9893, 22.7514, -3.2035, 0.96", "18.2089, 22.1831, -3.55505, 0.88", "18.2621, 22.1572, -3.57046, 0.88", "19.5794, 21.4935, -3.95836, 0.88", "20.8351, 20.8502, -4.33148, 0.81", "20.8878, 20.8234, -4.34689, 0.81", "21.562, 20.4714, -4.54392, 0.81", "22.2333, 20.1326, -4.7443, 0.81", "22.9847, 19.7665, -4.97472, 0.81", "23.0384, 19.7429, -4.99186, 0.81", "24.0217, 19.362, -5.32442, 0.81", "24.2641, 19.2797, -5.40425, 0.81", "25.2342, 19.0001, -5.71498, 0.81", "25.8212, 18.8525, -5.91782, 0.66", "26.8862, 18.6052, -6.30985, 0.66", "27.5388, 18.4588, -6.56376, 0.88", "28.1149, 18.3401, -6.7999, 0.88", "28.472, 18.2744, -6.95616, 0.88", "29.1789, 18.1759, -7.30927, 0.74", "29.4044, 18.1522, -7.43391, 0.74", "29.9498, 18.1062, -7.77617, 0.66", "30.534, 18.069, -8.16435, 0.37", "31.2859, 18.0194, -8.70461, 0.29", "31.9834, 17.9759, -9.21848, 0.29", "32.0321, 17.9727, -9.25451, 0.29", "32.4504, 17.9438, -9.59009, 0.44", "32.9375, 17.8966, -10.0055, 0.44", "33.5679, 17.802, -10.5559, 0.44", "33.8134, 17.751, -10.7568, 1.03", "33.8605, 17.7382, -10.7932, 1.03", "34.5608, 17.5408, -11.3061, 1.55", "35.004, 17.4146, -11.6016, 1.84", "35.2644, 17.3414, -11.7658, 1.84", "35.7593, 17.2029, -12.0486, 1.55", "36.4938, 16.9942, -12.4551, 0.59", "36.8834, 16.8875, -12.658, 0.37", "37.5547, 16.6956, -12.9786, 0.22", "37.7839, 16.6325, -13.0856, 0.44", "38.1895, 16.518, -13.2653, 0.88", "38.2427, 16.5015, -13.2897, 0.88", "38.5879, 16.4003, -13.4437, 1.11", "38.898, 16.312, -13.5959, 1.11", "39.0633, 16.2683, -13.6815, 1.11", "39.6293, 16.1321, -13.9124, 0.52", "40.229, 15.9938, -14.0873, 0.22", "40.8671, 15.8437, -14.2247, 0.22", "41.066, 15.7982, -14.2557, 0.52", "41.6369, 15.6741, -14.318, 0.96", "42.6973, 15.4401, -14.3854, 1.25", "43.3438, 15.2989, -14.3888, 1.55", "43.6108, 15.2375, -14.3763, 1.69", "44.0402, 15.1315, -14.357, 1.33", "44.2353, 15.0866, -14.3495, 1.03", "44.3035, 15.0735, -14.3518, 1.03", "44.4896, 15.0421, -14.38, 0.88", "44.8008, 14.9898, -14.4389, 0.88", "45.1701, 14.9241, -14.5101, 0.52", "45.733, 14.8208, -14.6211, 0.29", "46.7278, 14.6409, -14.8242, 0.29", "47.0611, 14.5798, -14.8961, 0.88", "47.5632, 14.4772, -15.0163, 1.33", "47.6198, 14.4651, -15.0348, 1.33", "48.0315, 14.3755, -15.1972, 1.33", "48.2555, 14.3257, -15.301, 1.55", "48.6044, 14.2465, -15.473, 1.55", "49.4805, 14.0044, -15.9044, 0.22", "50.4667, 13.6873, -16.4417, 0.29", "50.5172, 13.6693, -16.4706, 0.29", "51.1611, 13.4142, -16.8516, 0.29", "51.2099, 13.3926, -16.8811, 0.29", "52.5214, 12.7466, -17.6837, 0.29", "53.1996, 12.3788, -18.0969, 1.11", "53.5034, 12.1908, -18.2865, 1.62", "53.8669, 11.9401, -18.5734, 1.84", "54.0981, 11.76, -18.8, 2.06", "54.3137, 11.5663, -19.0436, 1.84", "54.4455, 11.4271, -19.2234, 1.55", "54.8357, 11.004, -19.7027, 1.11", "55.5206, 10.2636, -20.5575, 0.29", "55.7044, 10.0694, -20.7816, 0.15", "56.2625, 9.51507, -21.4114, 0.15", "56.3397, 9.44188, -21.4898, 0.15", "57.2299, 8.61553, -22.2653, 0.15", "57.6929, 8.21344, -22.6117, 0.88", "57.9799, 7.97789, -22.7948, 1.69", "58.3664, 7.66675, -23.0419, 1.99", "58.8002, 7.33165, -23.3153, 1.99", "59.3068, 6.94789, -23.6245, 0.88", "59.9075, 6.50692, -23.9736, 0.22", "60.9954, 5.69546, -24.6265, 0.22", "61.2924, 5.48074, -24.8167, 0.59", "61.5996, 5.25671, -25.0221, 0.96", "61.8846, 5.05248, -25.2174, 1.11", "62.1584, 4.86322, -25.3961, 1.11", "63.0045, 4.2592, -25.9659, 0.15", "63.4089, 3.96395, -26.258, 0.15", "64.1051, 3.4447, -26.7666, 0.15", "64.1459, 3.41269, -26.7998, 0.15", "65.2802, 2.4636, -27.7678, 0.15", "65.8075, 2.00163, -28.2163, 1.25", "66.2181, 1.63046, -28.5547, 1.62", "66.4731, 1.3862, -28.7724, 1.62", "67.2253, 0.653631, -29.4247, 0.15", "68.0788, -0.219826, -30.1708, 0.15", "68.3157, -0.48604, -30.3732, 0.66", "68.5409, -0.742118, -30.5443, 1.03", "68.7838, -1.02976, -30.7241, 1.03", "68.923, -1.1965, -30.8177, 1.03", "69.3034, -1.66377, -31.0298, 0.15", "70.0473, -2.6258, -31.4876, 0.15", "70.0934, -2.68646, -31.5181, 0.52", "70.1928, -2.82394, -31.5863, 0.52", "70.4767, -3.23202, -31.7849, 0.59", "70.6163, -3.43752, -31.8805, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "36.4389, -255.999, 7.12774, 0.81", "37.267, -256.624, 7.22631, 0.81", "38.4489, -257.594, 7.35964, 0.52", "40.5461, -259.371, 7.59643, 0.44", "42.1119, -260.731, 7.77254, 0.44", "42.7518, -261.303, 7.84613, 0.81", "43.8182, -262.268, 7.97224, 0.15", "46.8737, -265.105, 8.12864, 0.15", "47.1122, -265.335, 8.1257, 0.44", "47.2908, -265.511, 8.1141, 0.44", "47.929, -266.128, 8.03842, 0.96", "48.1099, -266.3, 8.01252, 0.96", "49.7205, -267.827, 7.82341, 0.96", "49.8203, -267.914, 7.80547, 0.96", "50.6837, -268.671, 7.69203, 0.96", "51.595, -269.471, 7.61683, 0.96", "52.5909, -270.371, 7.59968, 0.29", "53.7007, -271.445, 7.71459, 0.29", "53.7829, -271.528, 7.72925, 0.29", "54.2183, -271.968, 7.79113, 0.52", "54.341, -272.097, 7.80367, 0.52", "54.8816, -272.668, 7.84547, 0.52", "56.4862, -274.379, 7.96336, 0.22", "57.1199, -275.106, 7.986, 0.37", "57.2, -275.214, 7.99071, 0.37", "57.5592, -275.766, 8.02278, 0.37", "57.6968, -276.001, 8.04141, 0.37", "57.8816, -276.35, 8.07629, 0.37", "58.3889, -277.409, 8.21077, 0.22", "59.5046, -279.782, 8.58984, 0.22", "59.7923, -280.4, 8.68829, 1.55", "60.3562, -281.607, 8.88391, 2.06", "60.3987, -281.698, 8.89883, 2.06", "60.6235, -282.169, 8.97986, 2.58", "61.1625, -283.237, 9.18497, 2.87", "72.4255, -295.172, 12.4591, 2.87" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "36.4389, -255.999, 7.12774, 0.96", "36.4254, -256.726, 7.11508, 0.96", "36.4179, -257.446, 7.1021, 0.66", "36.418, -258.273, 7.01332, 0.52", "36.3989, -259.299, 6.85504, 0.37", "36.3783, -260.36, 6.68573, 0.37", "36.3667, -261.395, 6.52406, 0.74", "36.3637, -262.203, 6.39614, 0.74", "36.4195, -263.646, 6.02303, 0.15", "36.5265, -265.117, 5.55304, 0.15", "36.7256, -267.524, 4.6756, 0.15", "36.8044, -268.207, 4.39008, 0.88", "36.9315, -269.147, 3.97372, 0.96", "37.4173, -272.343, 2.5451, 0.15", "37.6676, -273.824, 1.88294, 0.15", "37.8496, -274.774, 1.42502, 0.15", "38.4719, -277.562, 0.122212, 0.15", "38.6821, -278.303, -0.204112, 1.11", "38.9576, -279.122, -0.526698, 1.11", "39.1355, -279.556, -0.648088, 0.15", "39.179, -279.64, -0.671616, 0.15", "40.6492, -281.995, -1.2417, 0.15", "41.9915, -283.928, -1.63998, 0.15", "42.0565, -284.016, -1.65908, 0.15", "43.2419, -285.523, -1.99563, 0.15", "43.9506, -286.398, -2.18719, 1.84", "44.8539, -287.486, -2.43802, 2.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "19.3101, -108.57, 13.6589, 0.59", "21.828, -115.911, 20.2132, 0.59", "24.7338, -121.997, 27.7071, 0.59", "27.3364, -128.783, 34.7525, 0.59", "30.1077, -136.197, 41.1299, 0.59", "31.1872, -144.565, 46.9094, 0.59", "32.857, -152.833, 52.6823, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.3101, -108.57, 13.6589, 0.52", "19.4041, -122.323, 8.47804, 0.59", "20.4093, -135.411, 2.00393, 0.59", "19.3082, -148.037, -5.24594, 0.59", "17.4785, -161.769, -10.1599, 0.59", "16.8827, -174.266, -17.6671, 0.59", "14.8871, -186.58, -25.2104, 0.59", "11.8998, -198.516, -32.9777, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.9753, -51.2588, -3.52106, 1.4", "-11.9002, -53.4525, -5.91814, 1.4", "-12.2442, -54.3199, -6.58432, 0.52", "-12.2677, -54.3771, -6.61974, 0.52", "-12.7193, -55.3928, -7.17285, 0.81", "-13.0362, -56.0209, -7.5426, 1.03", "-13.5008, -56.8264, -8.12785, 1.25", "-14.1555, -57.8241, -8.74146, 0.66", "-14.5791, -58.3969, -9.16658, 0.66", "-14.9084, -58.7761, -9.51778, 0.66", "-15.5923, -59.3949, -10.3654, 0.66", "-16.4737, -60.041, -11.574, 0.66", "-16.5091, -60.0652, -11.6288, 0.66", "-16.8543, -60.3386, -12.2055, 0.66", "-16.8762, -60.3712, -12.2525, 0.66", "-17.1976, -61.2624, -13.02, 0.44", "-17.2104, -61.3161, -13.0497, 0.44", "-17.451, -62.2289, -13.4046, 0.44", "-17.7043, -63.0417, -13.7416, 0.59", "-18.1184, -64.2992, -14.2815, 0.88", "-18.4205, -65.13, -14.629, 0.88", "-18.4417, -65.1845, -14.6518, 0.88", "-19.0283, -66.5954, -15.3246, 0.88", "-19.5945, -67.7928, -15.965, 0.66", "-19.9642, -68.4835, -16.3586, 0.59", "-20.1965, -68.9068, -16.588, 0.59", "-20.6713, -69.7979, -17.1179, 0.59", "-21.0762, -70.5949, -17.5922, 0.22", "-21.3106, -71.0912, -17.8816, 0.22", "-21.5888, -71.6795, -18.2441, 0.22", "-21.997, -72.5544, -18.8099, 0.22", "-22.5039, -73.6899, -19.5679, 1.47", "-22.7366, -74.2671, -19.9797, 2.28", "-22.8882, -74.6835, -20.2756, 2.28", "-23.4552, -76.4378, -21.605, 0.59", "-23.653, -77.1457, -22.1988, 0.59", "-23.6638, -77.1882, -22.2425, 0.59", "-23.9506, -78.2226, -23.2798, 0.59", "-24.2211, -79.1308, -24.2114, 0.44", "-24.4486, -79.8758, -24.9783, 1.55", "-24.7983, -81.0124, -26.1054, 1.55", "-25.3428, -82.7537, -27.9059, 0.29", "-25.9238, -84.4707, -29.6197, 0.22", "-25.9395, -84.5137, -29.6613, 0.22", "-26.1052, -84.9574, -30.0867, 1.18", "-26.2389, -85.2886, -30.3703, 1.4", "-26.7622, -86.472, -31.2687, 0.22", "-27.3513, -87.8501, -32.3173, 0.22", "-27.3713, -87.9044, -32.3587, 0.22", "-27.5846, -88.4831, -32.7586, 1.84", "-27.7131, -88.8219, -32.9666, 1.84", "-27.7353, -88.8812, -32.9997, 1.84", "-28.3658, -90.6592, -33.9581, 0.22", "-29.1788, -92.9117, -35.0979, 0.22", "-29.2566, -93.1185, -35.1942, 0.96", "-29.4823, -93.7033, -35.441, 0.96", "-29.5037, -93.7584, -35.4622, 0.96", "-30.0586, -95.1379, -35.9236, 0.22", "-31.263, -98.0312, -36.5658, 0.22", "-31.4278, -98.4322, -36.6479, 1.55", "-31.6322, -98.935, -36.7249, 1.84", "-31.8558, -99.4885, -36.789, 1.11", "-32.0543, -99.9819, -36.8264, 0.22", "-33.194, -102.897, -36.8842, 0.22", "-33.2186, -102.965, -36.8845, 0.22", "-34.0542, -105.463, -36.8811, 0.22", "-34.0759, -105.532, -36.8804, 0.22", "-34.2115, -105.993, -36.8711, 1.25", "-34.3605, -106.571, -36.8541, 1.25", "-34.5311, -107.401, -36.8185, 0.15", "-34.9237, -109.862, -36.8713, 0.15", "-34.9306, -109.925, -36.8758, 0.15", "-34.964, -110.263, -36.911, 0.96", "-35.0143, -110.848, -36.9905, 0.96", "-35.0499, -111.437, -37.1102, 0.15", "-35.1413, -114.036, -37.7838, 0.15", "-35.1449, -114.417, -37.8971, 1.11", "-35.1457, -114.928, -38.0485, 1.25", "-35.1466, -114.989, -38.0653, 1.25", "-35.2362, -117.87, -38.885, 0.15", "-35.2391, -117.931, -38.9019, 0.15", "-35.2591, -118.24, -39.0013, 0.37", "-35.3168, -118.685, -39.151, 0.37", "-35.6332, -120.451, -39.8601, 0.22", "-35.8967, -121.695, -40.4007, 1.47", "-36.0251, -122.217, -40.6357, 1.47", "-36.3933, -123.645, -41.3067, 0.15", "-37.1963, -126.622, -42.7665, 0.15", "-37.9454, -129.197, -44.0692, 0.15", "-37.9619, -129.251, -44.0972, 0.15", "-38.2618, -130.177, -44.5681, 0.15", "-38.6364, -131.158, -45.0006, 1.62", "-38.6601, -131.213, -45.0202, 1.62", "-38.9725, -131.856, -45.2384, 1.62", "-39.002, -131.909, -45.2519, 1.62", "-39.4626, -132.713, -45.4405, 0.15", "-41.7576, -136.336, -46.3123, 0.15", "-41.8095, -136.414, -46.3295, 0.52", "-41.8448, -136.464, -46.3408, 0.52", "-42.1904, -136.934, -46.4478, 0.52", "-42.3042, -137.078, -46.4802, 0.15", "-43.9679, -138.987, -46.8858, 0.15", "-44.2118, -139.24, -47.0147, 0.81", "-44.5861, -139.652, -47.2753, 0.81", "-44.6197, -139.693, -47.3078, 0.81", "-44.7642, -139.871, -47.4746, 0.15", "-44.796, -139.907, -47.5129, 0.15", "-46.432, -141.442, -49.252, 0.15", "-46.432, -141.442, -49.252, 0.44", "-47.0778, -141.955, -49.8148, 0.22", "-47.975, -142.65, -50.5682, 0.22", "-49.4973, -143.792, -51.7771, 0.22", "-51.6033, -145.278, -53.2754, 0.22", "-51.9008, -145.465, -53.4428, 0.81", "-52.3038, -145.712, -53.6592, 0.81" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.9753, -51.2588, -3.52106, 2.28", "-10.8991, -51.7039, -3.42508, 2.28", "-10.8833, -51.7917, -3.40843, 2.28", "-10.6226, -53.3148, -3.15412, 1.62", "-10.3151, -55.2441, -2.88892, 1.4", "-10.029, -57.0108, -2.68734, 1.55", "-9.77172, -58.5941, -2.52228, 1.55", "-9.58005, -59.6898, -2.42823, 1.55", "-9.36103, -60.8998, -2.34133, 1.33", "-8.8822, -63.4233, -2.20731, 1.18", "-8.36482, -66.2934, -2.08752, 1.18", "-8.34997, -66.383, -2.0834, 1.18", "-7.84582, -69.6409, -1.91798, 1.18", "-7.83379, -69.7307, -1.9113, 1.18", "-7.58192, -71.9538, -1.70552, 0.88", "-7.17835, -76.8816, -1.17667, 0.88", "-7.13224, -77.913, -1.05719, 1.18", "-7.10769, -79.3319, -0.888969, 1.4", "-7.14247, -81.3389, -0.637918, 1.4", "-7.19528, -83.0425, -0.429419, 1.47", "-7.2616, -84.387, -0.270522, 1.77", "-7.31133, -85.72, -0.146112, 1.77", "-7.33581, -87.1453, -0.0384153, 1.92", "-7.33407, -87.2361, -0.033648, 1.92", "-7.22546, -88.6611, 0.00123714, 1.55", "-6.96594, -90.4463, 0.0554168, 1.47", "-6.3341, -93.4386, 0.158953, 1.11", "-6.30755, -93.5387, 0.162914, 1.11", "-5.96522, -94.6687, 0.211412, 0.96", "-5.5624, -95.8917, 0.243781, 1.18", "-5.01173, -97.373, 0.258877, 1.47", "-4.20869, -99.3712, 0.206036, 0.96", "-3.68617, -100.654, 0.125088, 1.11", "-3.65468, -100.738, 0.117783, 1.11", "-3.23744, -102.033, -0.0229205, 1.4", "-2.81988, -103.731, -0.165232, 1.84", "-2.59917, -105.044, -0.229059, 2.14", "-2.49851, -106.002, -0.241743, 2.14", "-2.45442, -106.949, -0.195045, 1.99", "-2.47468, -108.285, -0.0775926, 1.18", "-2.69885, -110.56, 0.183901, 1.03", "-3.0217, -112.701, 0.437476, 0.88", "-3.31084, -114.577, 0.646461, 0.74", "-3.61958, -116.706, 0.854033, 0.59", "-3.88855, -119.074, 1.03769, 0.59", "-4.05422, -121.682, 1.18053, 0.59", "-4.08712, -124.33, 1.31975, 0.59", "-3.93287, -126.669, 1.47386, 0.59", "-3.7997, -127.586, 1.54021, 1.18", "-3.2094, -130.34, 1.71957, 1.18", "-2.51587, -132.83, 1.90661, 0.88", "-1.95041, -134.575, 2.05962, 1.25", "-0.44353, -139.16, 2.49657, 1.25", "0.182023, -141.168, 2.68847, 0.81", "0.557698, -142.46, 2.79918, 1.47", "0.948528, -143.945, 2.90739, 1.84", "1.18928, -144.983, 2.9619, 2.14", "1.45383, -146.482, 2.99253, 0.74", "1.73008, -149.909, 3.06595, 0.52", "1.75245, -151.531, 3.10232, 0.52", "1.74477, -152.252, 3.12009, 0.88", "1.72607, -152.921, 3.13132, 1.18", "1.6262, -155.181, 3.14884, 1.18", "1.53401, -157.248, 3.16483, 0.66", "1.4145, -159.731, 3.18357, 0.59", "1.33848, -162.388, 3.20634, 0.88", "1.34389, -163.059, 3.21338, 1.33", "1.42269, -165.103, 3.23812, 1.33", "1.64964, -167.874, 3.24711, 1.33", "1.83809, -169.579, 3.23567, 1.62", "2.06378, -171.464, 3.20476, 1.62", "2.31283, -173.228, 3.12312, 1.55", "2.32983, -173.33, 3.11606, 1.55", "2.58826, -174.669, 2.99746, 1.11", "3.07622, -177.117, 2.73054, 0.66", "3.52559, -179.433, 2.42252, 0.66", "3.78059, -180.962, 2.20045, 1.47", "3.79249, -181.064, 2.18596, 1.47", "3.95741, -182.942, 1.93468, 1.47", "3.96292, -183.032, 1.92112, 1.47", "4.01676, -185.019, 1.57875, 1.77", "4.05559, -186.597, 1.25713, 2.21", "4.09126, -188.197, 0.933354, 2.21", "4.09339, -188.274, 0.918675, 2.21", "4.19446, -190.82, 0.501133, 2.36", "4.29973, -193.1, 0.190911, 2.36", "4.3988, -195.315, -0.0608684, 1.99", "4.46915, -196.917, -0.214892, 1.03", "4.58679, -200.804, -0.504057, 0.66", "4.65687, -205.282, -0.728085, 0.66", "4.65927, -207.181, -0.766435, 0.81", "4.65356, -208.449, -0.772096, 0.96", "4.62877, -209.694, -0.722068, 0.74", "4.58577, -212.249, -0.564908, 0.74", "4.56714, -213.573, -0.451523, 1.11", "4.56651, -213.677, -0.442645, 1.11", "4.58669, -215.197, -0.350557, 1.4", "4.67569, -218.241, -0.235156, 1.4", "4.80439, -221.486, -0.185333, 1.18", "4.80911, -221.577, -0.185631, 1.18", "4.97449, -224.683, -0.355844, 0.74", "5.04547, -225.852, -0.468763, 1.18", "5.12731, -226.904, -0.639679, 1.62", "5.27263, -228.453, -1.0359, 1.77", "5.43578, -229.988, -1.48279, 1.77", "5.69242, -232.118, -2.10782, 0.59", "6.15074, -235.374, -3.09406, 0.59", "6.58857, -238.285, -3.95893, 0.59", "6.93917, -240.51, -4.60034, 0.59", "7.11736, -241.65, -4.92087, 1.62", "7.36449, -243.413, -5.37974, 1.77", "7.83859, -247.204, -6.23076, 1.77", "7.98452, -248.529, -6.50501, 1.03", "8.20452, -250.97, -6.90061, 0.66", "8.38758, -253.361, -7.19306, 0.29", "8.47529, -254.945, -7.35127, 0.29", "8.51135, -256.036, -7.42828, 0.29", "8.50917, -256.79, -7.43642, 1.03", "8.48307, -257.938, -7.42449, 1.25", "8.39603, -259.482, -7.3602, 1.25", "8.30005, -260.79, -7.25544, 0.37", "8.29289, -260.894, -7.2476, 0.37", "8.06867, -263.389, -7.09522, 0.29", "8.05862, -263.492, -7.09423, 0.29", "7.98222, -264.295, -7.11537, 1.33", "7.83149, -265.809, -7.18245, 2.21", "7.64098, -267.889, -7.31979, 2.21", "7.43145, -270.389, -7.50046, 1.84", "7.25829, -272.732, -7.69952, 1.4", "7.12151, -274.707, -7.87939, 1.4" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-121.086, -35.8709, -13.0856, 0.66", "-121.877, -36.5581, -12.2542, 0.66", "-121.9, -36.5793, -12.2277, 0.66", "-122.144, -36.8564, -11.8506, 0.22", "-122.257, -36.9532, -11.6184, 0.22", "-122.452, -37.0983, -11.2363, 0.22", "-122.47, -37.1109, -11.2018, 0.22", "-122.673, -37.2423, -10.8216, 1.11", "-123.043, -37.477, -10.1066, 2.06", "-123.793, -38.0557, -8.50743, 0.22", "-123.958, -38.1897, -8.15211, 0.22", "-123.974, -38.2034, -8.11693, 0.22", "-124.054, -38.288, -7.93655, 0.22", "-124.069, -38.3113, -7.89852, 0.22", "-124.249, -38.883, -7.21337, 0.22", "-124.249, -38.9174, -7.18878, 0.22", "-124.248, -39.2126, -6.95306, 0.66", "-124.258, -39.3828, -6.78777, 0.66", "-124.263, -39.4151, -6.7528, 0.66", "-124.414, -39.9343, -6.1592, 0.22", "-124.607, -40.3543, -5.66199, 0.22", "-124.619, -40.386, -5.63707, 0.22", "-124.776, -40.819, -5.32527, 0.74", "-124.879, -41.132, -5.1144, 1.03", "-124.925, -41.2932, -5.01056, 1.03", "-124.966, -41.5365, -4.87468, 0.15", "-125.07, -42.7034, -4.23067, 0.15", "-125.095, -43.4269, -3.8113, 1.03", "-125.093, -43.7714, -3.60824, 1.47", "-125.069, -44.1687, -3.35847, 0.22", "-124.964, -45.1839, -2.6938, 0.22", "-124.956, -45.2327, -2.66023, 0.22", "-124.831, -45.8035, -2.14408, 0.22", "-124.825, -45.8334, -2.11529, 0.22", "-124.786, -46.0734, -1.83578, 1.11", "-124.775, -46.1766, -1.69766, 1.11", "-124.774, -46.2257, -1.62334, 1.11", "-124.735, -47.1373, -0.553819, 0.22", "-124.719, -47.4962, -0.168425, 0.22", "-124.715, -47.5625, -0.0933307, 0.81", "-124.708, -47.7457, 0.11551, 0.81", "-124.708, -48.0959, 0.528706, 0.15", "-124.737, -48.6577, 1.16752, 0.15", "-124.765, -49.0443, 1.57801, 0.88", "-124.848, -49.7181, 2.3463, 1.55", "-124.9, -49.9473, 2.62774, 1.92", "-125.116, -50.4408, 3.48759, 0.15", "-125.203, -50.5708, 3.78754, 0.15", "-125.239, -50.6207, 3.9018, 0.59", "-125.265, -50.6613, 3.98655, 0.59", "-125.498, -51.0234, 4.74474, 0.59", "-125.945, -51.9517, 6.50451, 0.22", "-125.953, -51.9722, 6.5398, 0.22", "-126.123, -52.6797, 7.67634, 0.22", "-126.128, -52.7054, 7.71599, 0.52", "-126.131, -52.7296, 7.74975, 0.52", "-126.122, -53.5362, 8.58073, 0.15", "-126.119, -53.5726, 8.60231, 0.15", "-126.062, -54.303, 9.09552, 1.18", "-127.595, -57.9853, 13.5296, 1.18", "-129.193, -60.4545, 18.6424, 1.18", "-130.238, -63.3929, 23.6773, 1.18", "-132.311, -67.1623, 27.8135, 1.18", "-135.086, -71.3911, 31.0222, 1.18", "-136.686, -76.0977, 34.4284, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-121.086, -35.8709, -13.0856, 0.22", "-122.452, -36.492, -13.3563, 0.22", "-122.517, -36.5225, -13.3685, 0.22", "-123.712, -37.0595, -13.5721, 0.22", "-124.096, -37.2268, -13.6338, 0.81", "-124.553, -37.4115, -13.6933, 0.81", "-124.636, -37.4442, -13.7061, 0.81", "-124.902, -37.539, -13.7444, 0.81", "-125.546, -37.7649, -13.8464, 0.15", "-125.675, -37.8087, -13.8681, 0.15", "-128.216, -38.7016, -14.2855, 0.15", "-128.748, -38.8918, -14.3805, 0.81", "-129.127, -39.027, -14.4505, 0.96", "-129.462, -39.1474, -14.5146, 0.96", "-130.323, -39.4639, -14.6815, 0.15", "-132.013, -40.1435, -14.9814, 0.15", "-132.38, -40.3029, -15.0184, 0.74", "-132.823, -40.4993, -15.0366, 1.11", "-133.018, -40.588, -15.0387, 1.11", "-133.664, -40.8767, -14.9969, 0.22", "-136.129, -41.8235, -14.6897, 0.15", "-137.249, -42.1729, -14.5087, 1.33", "-137.634, -42.2674, -14.4455, 1.62", "-137.705, -42.2796, -14.4334, 1.62", "-138.983, -42.4134, -14.2167, 0.15", "-141.37, -42.4879, -13.821, 0.15", "-142.186, -42.4467, -13.7048, 0.66", "-143.262, -42.3871, -13.6099, 0.66", "-144.27, -42.3363, -13.5416, 1.69", "-144.879, -42.3069, -13.5155, 2.14", "-145.142, -42.2976, -13.5165, 2.14", "-146.234, -42.3012, -13.5127, 0.15", "-147.325, -42.3645, -13.5183, 0.15", "-147.523, -42.39, -13.5308, 0.81", "-147.575, -42.4032, -13.539, 0.81", "-148.107, -42.5819, -13.6671, 1.11", "-148.537, -42.7577, -13.7941, 0.66", "-148.656, -42.8153, -13.8348, 0.66", "-149.253, -43.146, -14.0539, 0.15", "-151.082, -44.2088, -14.7054, 0.15", "-151.88, -44.6903, -14.9835, 1.62", "-152.273, -44.937, -15.1149, 2.06", "-152.544, -45.1119, -15.2083, 1.99", "-153.305, -45.585, -15.46, 0.15", "-153.935, -45.9494, -15.6698, 0.29", "-154.092, -46.0346, -15.7291, 0.59", "-154.511, -46.2421, -15.8804, 0.59", "-155.181, -46.5495, -16.1262, 0.22", "-155.811, -46.824, -16.406, 0.22", "-157.511, -47.5506, -17.2086, 0.15", "-157.875, -47.7065, -17.3859, 0.74", "-158.327, -47.8985, -17.6031, 0.74", "-158.634, -48.0283, -17.7464, 0.74", "-159.733, -48.5053, -18.2231, 0.15", "-161.41, -49.2616, -19.0577, 0.15", "-161.47, -49.2882, -19.0906, 0.15", "-161.751, -49.4051, -19.2521, 0.59", "-161.976, -49.4926, -19.384, 0.88", "-162.361, -49.6171, -19.5779, 1.18", "-163.426, -49.9092, -19.9334, 1.18", "-163.485, -49.9231, -19.9527, 1.18", "-164.12, -50.0774, -20.1322, 0.15", "-164.18, -50.0923, -20.1469, 0.15", "-165.52, -50.4345, -20.4292, 0.15", "-166.959, -50.9382, -20.6507, 0.15", "-167.027, -50.9656, -20.6577, 0.15", "-167.348, -51.1111, -20.6929, 0.66", "-167.601, -51.2406, -20.7223, 0.66", "-167.818, -51.3641, -20.7482, 0.22", "-169.943, -52.773, -21.0119, 0.22", "-169.995, -52.8105, -21.0184, 0.22", "-170.304, -53.0479, -21.0538, 0.74", "-170.609, -53.301, -21.1005, 1.03", "-170.934, -53.5848, -21.159, 1.03", "-171.155, -53.7884, -21.2038, 1.03", "-171.566, -54.1783, -21.3201, 0.15", "-172.799, -55.3455, -21.6844, 0.15", "-173.3, -55.8132, -21.8654, 0.37", "-173.609, -56.0956, -21.9879, 0.37", "-173.763, -56.231, -22.0513, 0.37", "-174.793, -57.1333, -22.4827, 0.15", "-175.648, -57.8811, -22.8714, 0.15", "-176.324, -58.499, -23.1861, 0.15", "-176.787, -58.9531, -23.4022, 1.4", "-177.047, -59.2301, -23.5309, 1.77", "-177.529, -59.7966, -23.7795, 2.06", "-178.119, -60.6626, -24.0891, 0.15", "-178.672, -61.6442, -24.4208, 0.15", "-178.874, -62.0706, -24.5443, 0.59", "-179.013, -62.4046, -24.6396, 0.74", "-179.141, -62.7386, -24.7311, 0.74", "-179.638, -64.1022, -25.2353, 0.15", "-179.928, -64.8409, -25.5486, 1.25", "-180.182, -65.4433, -25.8448, 1.62", "-180.288, -65.6743, -25.9876, 1.62", "-180.415, -65.9306, -26.1722, 0.15", "-181.283, -67.5403, -27.4608, 0.15", "-181.963, -68.7314, -28.4139, 0.15", "-181.986, -68.7715, -28.4455, 0.15", "-182.637, -69.895, -29.3326, 1.4", "-182.904, -70.3641, -29.6861, 1.69", "-183.248, -70.9702, -30.0551, 0.22", "-184.22, -72.5679, -30.6527, 0.22", "-185.02, -73.8096, -30.9222, 0.15", "-185.281, -74.2079, -30.9766, 1.33", "-185.561, -74.6261, -30.9734, 1.55", "-186.964, -76.6266, -30.7949, 0.22", "-187.852, -77.7793, -30.4586, 0.22", "-188.285, -78.2264, -30.0922, 1.84" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "36.3411, 25.7647, 22.552, 0.22", "35.0176, 31.6924, 12.7611, 0.22", "35.2397, 37.2658, 2.69876, 0.22", "35.9343, 42.9033, -7.30688, 0.22", "34.7149, 48.8569, -17.0961, 0.22", "35.9086, 55.9081, -26.1741, 0.22", "37.6866, 62.6777, -35.3528, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "36.3411, 25.7647, 22.552, 0.29", "34.8414, 29.386, 28.7722, 0.22", "33.4535, 32.8218, 35.1108, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "13.7916, 110.692, 26.2378, 0.37", "13.7779, 110.076, 26.4923, 0.37", "13.7653, 109.506, 26.7277, 0.37", "13.7637, 109.434, 26.7573, 0.37", "12.1283, 100.067, 32.3691, 0.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "13.7916, 110.692, 26.2378, 0.29", "13.511, 111.087, 25.9827, 0.29", "13.2232, 111.492, 25.721, 0.22", "13.1001, 111.666, 25.6091, 0.22", "12.8641, 111.998, 25.3945, 0.22", "12.7269, 112.191, 25.2698, 0.22", "12.3827, 112.676, 24.9568, 0.22", "7.73033, 119.768, 22.0659, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-121.972, 22.0353, -16.6955, 0.29", "-121.95, 21.0141, -15.6647, 0.29", "-121.95, 20.9582, -15.603, 0.29", "-122.003, 19.3562, -13.762, 0.29", "-122.079, 18.3514, -12.5805, 0.29", "-122.084, 18.3112, -12.5327, 0.29", "-122.425, 16.3326, -9.97784, 0.22", "-122.447, 16.2667, -9.88348, 0.22", "-122.716, 15.6353, -8.93132, 0.22", "-122.831, 15.4252, -8.58397, 1.55", "-122.969, 15.201, -8.20374, 1.55", "-123.744, 13.9951, -6.21445, 0.22", "-124.878, 12.4065, -3.75428, 0.15", "-124.919, 12.3478, -3.66227, 0.59" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-121.972, 22.0353, -16.6955, 0.22", "-123.416, 23.459, -17.7546, 0.22", "-125.37, 25.4618, -19.038, 0.22", "-126.364, 26.506, -19.6463, 0.22", "-126.419, 26.5639, -19.6777, 0.22", "-126.489, 26.6368, -19.7151, 0.59", "-126.865, 27.0166, -19.8995, 0.59", "-128.068, 28.031, -20.3453, 0.15", "-128.119, 28.0682, -20.3474, 0.15", "-128.599, 28.3728, -20.3142, 1.11", "-128.655, 28.4011, -20.3075, 1.11", "-129.608, 28.7426, -20.1433, 2.06", "-130.402, 28.9478, -19.9746, 2.36", "-131.855, 29.2785, -19.5696, 0.15", "-131.992, 29.3122, -19.5249, 0.15", "-133.353, 29.6454, -19.0454, 0.15", "-134.668, 29.9891, -18.6117, 0.15", "-134.747, 30.0111, -18.5914, 0.15", "-136.026, 30.4287, -18.3162, 0.74", "-136.895, 30.7236, -18.1737, 0.74", "-137.684, 31.0097, -18.0664, 0.15", "-139.666, 31.7878, -17.8737, 0.15", "-142.169, 32.9117, -17.667, 0.15", "-143.362, 33.4741, -17.5783, 1.4", "-143.923, 33.7436, -17.5526, 1.77", "-144.473, 34.0346, -17.5257, 1.77", "-145.451, 34.5971, -17.474, 0.22", "-146.956, 35.4974, -17.4214, 0.22", "-147.028, 35.5415, -17.4201, 0.22", "-148.67, 36.521, -17.4136, 0.22", "-148.849, 36.6294, -17.4123, 0.88", "-149.461, 36.9975, -17.4114, 1.03", "-151.208, 37.9558, -17.4467, 0.22", "-151.265, 37.983, -17.4493, 0.22", "-151.942, 38.3159, -17.4793, 0.22", "-152.231, 38.4658, -17.4905, 0.44", "-152.528, 38.6201, -17.5063, 0.44", "-153.951, 39.2784, -17.7488, 0.15", "-154.046, 39.3148, -17.7765, 0.44", "-154.56, 39.4441, -17.9794, 0.44", "-154.848, 39.4905, -18.1086, 0.44", "-154.915, 39.4991, -18.1402, 0.15", "-156.548, 39.6839, -18.932, 0.15", "-156.604, 39.6895, -18.9606, 0.15", "-158.02, 39.8961, -19.6587, 0.15", "-158.644, 39.9805, -19.9742, 1.03", "-159.146, 40.0526, -20.2306, 1.33", "-159.959, 40.1867, -20.6333, 0.15", "-160.024, 40.1968, -20.6675, 0.15", "-161.416, 40.398, -21.4562, 0.15", "-162.226, 40.5298, -21.9664, 0.66", "-162.566, 40.5778, -22.2007, 0.81", "-163.144, 40.6277, -22.6461, 0.15", "-164.191, 40.6952, -23.5737, 0.15", "-164.278, 40.7002, -23.6582, 0.15", "-164.991, 40.6908, -24.5997, 0.15", "-165.045, 40.6953, -24.6916, 0.15", "-165.451, 40.7648, -25.5932, 0.66", "-165.649, 40.8298, -26.1241, 0.66", "-165.674, 40.845, -26.1946, 0.66", "-166.288, 41.2888, -27.6831, 0.15", "-166.682, 41.6036, -28.4754, 1.47", "-166.986, 41.8554, -28.9855, 1.92", "-167.263, 42.0938, -29.3766, 1.92", "-167.772, 42.5113, -29.9874, 0.15", "-168.715, 43.2232, -30.8436, 0.15", "-169.464, 43.7675, -31.3961, 0.15", "-169.77, 43.9683, -31.5925, 0.88", "-170.194, 44.2333, -31.8454, 1.11", "-170.6, 44.4786, -32.0754, 0.15", "-173.271, 46.0044, -33.4586, 0.15", "-173.342, 46.0388, -33.4911, 0.15", "-174.304, 46.4522, -33.8922, 0.15", "-174.748, 46.6252, -34.063, 0.88", "-175.194, 46.7819, -34.2239, 1.18", "-175.758, 46.977, -34.4267, 0.15", "-177.719, 47.6476, -35.1393, 0.15", "-178.224, 47.8346, -35.334, 0.81", "-178.709, 48.0381, -35.5425, 1.03", "-179.158, 48.2418, -35.746, 0.15", "-181.953, 49.6204, -37.0928, 0.15", "-182.399, 49.8651, -37.3252, 0.74", "-182.917, 50.1936, -37.6124, 0.96", "-184.3, 51.0966, -38.4101, 0.15", "-184.487, 51.2222, -38.522, 0.44", "-184.596, 51.2989, -38.5909, 0.44", "-184.719, 51.3992, -38.6828, 0.44", "-184.963, 51.5994, -38.8629, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "44.8539, -287.486, -2.43802, 0.15", "45.7746, -288.409, -2.21985, 0.15", "47.1335, -289.797, -1.8819, 0.15", "47.1815, -289.846, -1.86964, 0.15", "49.1113, -291.901, -1.41138, 0.15", "49.5628, -292.413, -1.31125, 0.15", "49.6013, -292.46, -1.30329, 0.15", "49.8953, -292.874, -1.24942, 1.25", "50.0523, -293.1, -1.25091, 1.25", "50.4964, -293.69, -1.36545, 0.22", "51.0398, -294.404, -1.62489, 0.22", "51.8177, -295.4, -2.03348, 0.22", "52.3943, -296.122, -2.35389, 0.22", "53.2525, -297.16, -2.88429, 1.03", "53.9575, -297.949, -3.34707, 1.18" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "44.8539, -287.486, -2.43802, 0.15", "44.912, -288.332, -2.456, 0.15", "45.0127, -289.799, -2.48716, 0.15", "45.0185, -289.883, -2.48895, 0.15", "45.0569, -290.443, -2.50085, 1.03" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "7.12151, -274.707, -7.87939, 0.59", "7.59711, -276.582, -8.17024, 0.59", "8.22921, -279.005, -8.50997, 0.59", "8.2588, -279.111, -8.52224, 0.59", "8.91498, -281.295, -8.72704, 0.44", "9.63695, -283.618, -8.91869, 0.44", "9.67039, -283.723, -8.92668, 0.44", "9.93525, -284.49, -8.94971, 1.03", "10.6186, -286.36, -9.04325, 1.03", "11.1676, -287.936, -9.13824, 0.66", "11.3965, -288.638, -9.18345, 0.37", "11.4236, -288.73, -9.19087, 0.37", "11.9658, -290.795, -9.3587, 0.37", "12.2352, -291.997, -9.49641, 1.03", "12.4634, -293.218, -9.67236, 1.62", "12.6504, -294.424, -9.86053, 1.62", "12.823, -296.016, -10.0993, 1.25", "12.9323, -297.442, -10.3064, 1.03", "13.0353, -299.259, -10.653, 0.88", "13.069, -300.062, -10.8544, 0.66", "13.0837, -301.134, -11.1895, 0.66", "13.0685, -303.027, -11.9455, 0.66", "13.0661, -303.114, -11.9856, 0.66", "12.9518, -306.09, -13.395, 0.59", "12.889, -307.655, -14.165, 1.4", "12.8297, -308.957, -14.7919, 1.84", "12.7668, -310.414, -15.4934, 2.14", "12.7285, -311.413, -15.9594, 2.14", "12.6414, -313.021, -16.5999, 0.66", "12.5847, -313.934, -16.8825, 0.22", "12.4894, -316.325, -17.4992, 0.22", "12.4872, -316.406, -17.5184, 0.22", "12.4752, -317.147, -17.6523, 1.03", "12.4674, -318.443, -17.8775, 1.03", "12.4729, -320.485, -18.1949, 1.11", "12.4991, -321.304, -18.2922, 0.59", "12.5269, -321.896, -18.3531, 0.15", "12.6252, -324.32, -18.6229, 0.15", "12.6297, -324.417, -18.6334, 0.15", "12.6749, -325.23, -18.7172, 0.15", "12.7157, -326.309, -18.8887, 0.15", "12.7667, -327.971, -19.2318, 0.15", "12.8024, -329.318, -19.5355, 1.4", "12.8414, -331.12, -19.9738, 2.28", "12.9027, -332.607, -20.3467, 2.65", "13.1077, -335.376, -21.1417, 0.22", "13.2423, -336.822, -21.5923, 0.22", "13.4911, -338.918, -22.2676, 0.22", "13.5043, -339.023, -22.3001, 0.22", "13.8421, -341.509, -23.1047, 0.22", "14.115, -343.162, -23.603, 0.22", "14.2349, -343.721, -23.7626, 0.96", "14.4461, -344.546, -24.0929, 1.11", "14.6736, -345.303, -24.4978, 1.11", "14.9697, -346.3, -25.048, 0.15", "15.3352, -347.548, -25.7592, 0.15", "15.7311, -348.841, -26.4431, 0.74", "16.3816, -350.762, -27.488, 0.74", "16.6806, -351.599, -27.9348, 0.15", "17.5347, -353.891, -29.1085, 0.15", "17.7678, -354.603, -29.4041, 1.47", "18.1812, -356.131, -29.89, 2.28", "18.4733, -357.574, -30.198, 2.43", "18.666, -358.827, -30.3825, 2.43", "18.8804, -360.702, -30.605, 0.15", "19.1277, -364.21, -31.0708, 0.15", "19.1759, -366.011, -31.3099, 0.15", "19.0386, -368.168, -31.5746, 0.15", "18.9727, -368.682, -31.6291, 0.88", "18.7613, -369.802, -31.7643, 1.25", "18.3752, -371.34, -31.9614, 0.44", "18.203, -371.915, -32.0539, 0.15", "16.7594, -376.348, -32.8259, 0.15", "16.7287, -376.439, -32.8397, 0.15", "16.4645, -377.141, -32.9193, 0.81", "16.0797, -378.09, -32.9753, 0.81", "16.0419, -378.179, -32.974, 0.81", "15.5913, -379.165, -32.933, 0.81", "15.0734, -380.195, -32.8473, 0.15", "14.3075, -381.718, -32.657, 0.15", "13.9367, -382.458, -32.5459, 1.18", "13.5725, -383.187, -32.4373, 1.62", "13.2571, -383.841, -32.3645, 1.62", "12.6902, -385.182, -32.28, 0.22", "11.6723, -387.84, -32.2247, 0.22", "11.3701, -388.734, -32.2868, 0.81", "11.0555, -389.812, -32.4352, 1.03", "10.6975, -391.237, -32.7229, 0.15", "9.94645, -395.034, -33.7104, 0.15", "9.85786, -395.687, -33.9242, 0.88", "9.72049, -398.379, -35.111, 0.22", "9.80221, -399.989, -35.8606, 0.22", "9.88005, -400.526, -36.1206, 0.66", "10.0347, -401.1, -36.3723, 0.96", "10.0682, -401.182, -36.4072, 0.96", "10.6974, -402.746, -36.9096, 0.15", "11.7995, -405.564, -37.521, 0.15", "11.9076, -405.854, -37.5899, 0.52", "12.6797, -408.16, -38.083, 0.15", "13.1057, -409.527, -38.3597, 1.18", "13.5322, -410.977, -38.6298, 1.84", "13.8128, -412.016, -38.7985, 1.84", "14.2359, -413.802, -39.1271, 0.15", "14.9571, -417.075, -39.7246, 0.15", "15.0396, -417.489, -39.8065, 0.59", "15.1355, -417.982, -39.9003, 0.74", "15.2129, -418.381, -39.9718, 0.15", "15.8644, -422.138, -40.6041, 0.15", "16.0311, -423.321, -40.7079, 1.03", "16.1901, -424.68, -40.7826, 1.77", "16.3041, -425.799, -40.8066, 1.77", "16.419, -427.126, -40.7884, 0.81", "16.4887, -428.137, -40.7079, 0.15", "16.6903, -432.183, -40.0895, 0.15", "16.6931, -432.278, -40.0714, 0.15", "16.7032, -432.964, -39.9077, 1.18", "16.7159, -434.335, -39.5579, 1.62", "16.7362, -435.615, -39.2205, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "7.12151, -274.707, -7.87939, 0.52", "6.40033, -276.052, -8.90883, 0.52", "5.99433, -276.809, -9.48836, 0.52", "5.68561, -277.384, -9.92904, 0.52", "5.55879, -277.621, -10.11, 0.81", "5.52772, -277.679, -10.1544, 0.81", "5.27135, -278.157, -10.5203, 0.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "37.6866, 62.6777, -35.3528, 0.37", "37.2394, 68.8912, -43.9719, 0.37", "35.4855, 76.5757, -51.2298, 0.37", "32.9531, 83.583, -58.8832, 0.37", "31.9637, 90.6867, -66.7935, 0.37", "29.3032, 97.2462, -74.7635, 0.37" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "37.6866, 62.6777, -35.3528, 0.29", "39.6589, 67.6464, -45.6616, 0.37", "42.7728, 74.9343, -54.256, 0.37", "47.4576, 82.5436, -61.8113, 0.37", "52.0721, 90.4464, -69.1284, 0.37" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "12.1283, 100.067, 32.3691, 0.22", "13.3222, 93.5311, 35.7785, 0.22", "15.9823, 87.9529, 39.8464, 0.22", "18.1803, 82.7784, 44.613, 0.22", "20.1053, 77.3183, 49.205, 0.22", "21.9804, 72.9194, 54.7504, 0.22", "23.3093, 68.5663, 60.482, 0.22", "24.2642, 65.1605, 66.8335, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "12.1283, 100.067, 32.3691, 0.29", "12.4221, 93.8448, 35.8287, 0.22", "12.0633, 88.665, 40.5929, 0.22", "12.6617, 83.2179, 45.0572, 0.22", "12.913, 78.145, 49.934, 0.22", "13.5107, 72.3944, 54.0383, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "7.73033, 119.768, 22.0659, 0.37", "3.67218, 127.994, 16.9969, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "7.73033, 119.768, 22.0659, 0.29", "1.95294, 127.89, 18.6231, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "16.7362, -435.615, -39.2205, 0.29", "16.3033, -436.504, -39.1074, 0.29", "15.6409, -437.716, -38.9445, 0.29", "14.5954, -439.463, -38.7211, 0.29", "14.3114, -439.913, -38.6651, 0.74", "13.9285, -440.462, -38.57, 1.11", "13.3434, -441.107, -38.4792, 1.11", "12.9021, -441.482, -38.4172, 0.88", "12.5623, -441.701, -38.3951, 0.52", "12.5112, -441.729, -38.3958, 0.52", "11.445, -442.273, -38.4532, 0.22", "8.90367, -443.526, -38.6565, 0.15", "8.66562, -443.655, -38.691, 0.44", "8.31137, -443.864, -38.7518, 0.66", "8.26312, -443.895, -38.7618, 0.66", "7.95329, -444.118, -38.8427, 0.66", "7.82783, -444.225, -38.8881, 0.15", "6.48885, -445.645, -39.3659, 0.15", "6.4497, -445.686, -39.3797, 0.15", "6.24834, -445.905, -39.4504, 0.74", "5.88296, -446.305, -39.5786, 1.11", "5.45808, -446.78, -39.7277, 0.88", "5.41518, -446.83, -39.7428, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.7362, -435.615, -39.2205, 0.15", "16.7016, -437.063, -38.8903, 0.15", "16.488, -440.247, -38.2961, 0.15", "16.4455, -440.949, -38.202, 0.44", "16.4054, -441.715, -38.1156, 0.44", "16.3462, -443.196, -37.9831, 0.15", "16.2722, -445.594, -37.801, 0.15", "16.2647, -447.069, -37.7606, 0.15", "16.2423, -448.337, -37.7424, 0.74", "16.2367, -449.25, -37.7319, 1.33", "16.2472, -450.236, -37.7461, 0.74", "16.2676, -450.664, -37.7787, 0.15", "16.4536, -453.337, -38.0367, 0.15", "16.4746, -453.582, -38.0722, 0.44", "16.4597, -455.246, -38.456, 0.15", "16.454, -455.337, -38.4788, 0.15", "16.3415, -456.444, -38.7651, 0.66", "16.2959, -456.778, -38.8517, 0.88", "16.1031, -457.886, -39.1447, 0.15", "15.2127, -463.009, -40.2563, 0.15", "15.1249, -463.927, -40.3605, 1.03", "15.0986, -464.441, -40.3841, 1.03", "15.0988, -464.944, -40.3585, 0.22", "15.1047, -465.014, -40.3492, 0.22", "15.5538, -467.378, -39.785, 0.22", "17.1208, -470.889, -38.3924, 0.22", "17.1591, -470.954, -38.3634, 0.22", "18.0671, -472.144, -37.7217, 0.22", "18.7897, -472.81, -37.1926, 0.96", "19.1176, -472.994, -36.94, 0.15", "21.0706, -473.324, -35.3593, 0.15", "21.367, -473.29, -35.1117, 0.66", "21.6535, -473.24, -34.8753, 0.15", "23.4536, -472.775, -33.4004, 0.15", "23.7567, -472.681, -33.1345, 0.44", "23.9929, -472.598, -32.9101, 0.15", "24.8527, -472.279, -31.9429, 0.15", "25.2305, -472.149, -31.5127, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "29.3032, 97.2462, -74.7635, 0.22", "27.4749, 103.798, -81.1348, 0.22", "27.5393, 111.743, -86.1889, 0.22", "27.6203, 118.698, -92.4321, 0.22", "27.9792, 126.059, -98.2246, 0.22", "27.577, 133.024, -104.442, 0.22", "25.9326, 140.246, -110.164, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "29.3032, 97.2462, -74.7635, 0.29", "27.4344, 103.555, -80.2523, 0.22", "24.7459, 109.159, -86.0988, 0.22", "21.0705, 115.239, -90.8668, 0.22", "17.7521, 122.673, -93.7947, 0.22", "14.4913, 129.799, -97.3943, 0.22", "12.7226, 138.087, -99.5203, 0.22", "12.0932, 146.474, -101.941, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "52.0721, 90.4464, -69.1284, 0.22", "54.901, 94.6912, -74.6061, 0.22", "56.5496, 98.6579, -80.7308, 0.22", "57.313, 102.949, -86.8342, 0.22", "57.4319, 107.262, -92.9759, 0.22", "56.1288, 111.293, -99.1719, 0.22", "55.3382, 115.583, -105.288, 0.22", "54.7029, 120.513, -110.964, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "52.0721, 90.4464, -69.1284, 0.29", "54.8807, 96.1407, -76.0025, 0.22", "58.4038, 101.053, -83.0995, 0.22", "60.2496, 105.973, -90.8112, 0.22", "61.6108, 111.831, -98.0045, 0.22", "64.1647, 116.517, -105.645, 0.22", "67.9698, 120.883, -112.927, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_66", "dend_53", "dend_39", "dend_32", "dend_26", "dend_19", "dend_16", "dend_5", "dend_0", "dend_68", "dend_67", "dend_55", "dend_54", "dend_43", "dend_40", "dend_38", "dend_33", "dend_31", "dend_30", "dend_27", "dend_21", "dend_20", "dend_18", "dend_17", "dend_13", "dend_6", "dend_4", "dend_1", "dend_65", "dend_56", "dend_52", "dend_51", "dend_44", "dend_42", "dend_41", "dend_37", "dend_34", "dend_29", "dend_28", "dend_25", "dend_22", "dend_15", "dend_14", "dend_12", "dend_7", "dend_3", "dend_2", "dend_58", "dend_57", "dend_48", "dend_45", "dend_36", "dend_35", "dend_24", "dend_23", "dend_9", "dend_8", "dend_62", "dend_59", "dend_50", "dend_49", "dend_47", "dend_46", "dend_11", "dend_10", "dend_64", "dend_63", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_66", "dend_53", "dend_39", "dend_32", "dend_26", "dend_19", "dend_16", "dend_5", "dend_0", "dend_68", "dend_67", "dend_55", "dend_54", "dend_43", "dend_40", "dend_38", "dend_33", "dend_31", "dend_30", "dend_27", "dend_21", "dend_20", "dend_18", "dend_17", "dend_13", "dend_6", "dend_4", "dend_1", "dend_65", "dend_56", "dend_52", "dend_51", "dend_44", "dend_42", "dend_41", "dend_37", "dend_34", "dend_29", "dend_28", "dend_25", "dend_22", "dend_15", "dend_14", "dend_12", "dend_7", "dend_3", "dend_2", "dend_58", "dend_57", "dend_48", "dend_45", "dend_36", "dend_35", "dend_24", "dend_23", "dend_9", "dend_8", "dend_62", "dend_59", "dend_50", "dend_49", "dend_47", "dend_46", "dend_11", "dend_10", "dend_64", "dend_63", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_46", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L6_NBC_1c98947546_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_66, id: dend_66, parent: soma_0
create dend_66
public dend_66
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_26
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_65, id: dend_65, parent: dend_55
create dend_65
public dend_65
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_43
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_43
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_67
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_46, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_66(0), soma_0(0.44999996701105516)
    connect dend_53(0), soma_0(0.44999996701105516)
    connect dend_39(0), soma_0(0.44999996701105516)
    connect dend_32(0), soma_0(0.44999996701105516)
    connect dend_26(0), soma_0(0.44999996701105516)
    connect dend_19(0), soma_0(0.44999996701105516)
    connect dend_16(0), soma_0(0.44999996701105516)
    connect dend_5(0), soma_0(0.44999996701105516)
    connect dend_0(0), soma_0(0.44999996701105516)
    connect axon_0(0), soma_0(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_26(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_65(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_43(1.0)
    connect dend_51(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.47614, -8.41033, 1.41903, 3.98524 ) }
    soma_0 { pt3dadd( -7.69742, -7.5116, 1.27705, 6.91431 ) }
    soma_0 { pt3dadd( -6.9187, -6.61288, 1.13506, 10.5717 ) }
    soma_0 { pt3dadd( -6.13998, -5.71415, 0.993075, 11.4108 ) }
    soma_0 { pt3dadd( -5.36126, -4.81542, 0.851088, 12.9455 ) }
    soma_0 { pt3dadd( -4.58254, -3.9167, 0.709102, 14.3822 ) }
    soma_0 { pt3dadd( -3.80382, -3.01797, 0.567115, 17.7461 ) }
    soma_0 { pt3dadd( -3.0251, -2.11925, 0.425128, 19.1269 ) }
    soma_0 { pt3dadd( -2.24638, -1.22052, 0.283142, 19.8374 ) }
    soma_0 { pt3dadd( -1.46766, -0.321792, 0.141155, 20.315 ) }
    soma_0 { pt3dadd( -0.688937, 0.576934, -8.31366E-4, 20.3008 ) }
    soma_0 { pt3dadd( 0.0897826, 1.47566, -0.142818, 20.2673 ) }
    soma_0 { pt3dadd( 0.868503, 2.37439, -0.284805, 20.201 ) }
    soma_0 { pt3dadd( 1.64722, 3.27311, -0.426791, 19.9171 ) }
    soma_0 { pt3dadd( 2.42594, 4.17184, -0.568778, 19.4209 ) }
    soma_0 { pt3dadd( 3.20466, 5.07057, -0.710764, 18.1336 ) }
    soma_0 { pt3dadd( 3.98338, 5.96929, -0.852751, 16.68 ) }
    soma_0 { pt3dadd( 4.7621, 6.86802, -0.994738, 14.9484 ) }
    soma_0 { pt3dadd( 5.54082, 7.76675, -1.13672, 12.9099 ) }
    soma_0 { pt3dadd( 6.31954, 8.66547, -1.27871, 7.73682 ) }
    soma_0 { pt3dadd( 7.09826, 9.5642, -1.4207, 4.34608 ) }
    // Section: dend_66, id: dend_66, parent: soma_0 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -11.4502, -2.60248, 0.989666, 1.47 ) }
    dend_66 { pt3dadd( -11.4502, -2.60248, 0.989666, 1.47 ) }
    dend_66 { pt3dadd( -12.0986, -2.93969, 1.19289, 1.47 ) }
    dend_66 { pt3dadd( -13.169, -3.51785, 1.5751, 1.11 ) }
    dend_66 { pt3dadd( -14.2225, -4.11294, 2.1119, 1.11 ) }
    dend_66 { pt3dadd( -15.4467, -4.82342, 2.84398, 1.11 ) }
    dend_66 { pt3dadd( -16.4691, -5.45567, 3.61132, 1.11 ) }
    dend_66 { pt3dadd( -17.3726, -6.05542, 4.44474, 1.4 ) }
    dend_66 { pt3dadd( -17.6041, -6.2209, 4.72884, 1.4 ) }
    dend_66 { pt3dadd( -18.685, -6.99049, 6.36001, 1.4 ) }
    dend_66 { pt3dadd( -18.7292, -7.02181, 6.4362, 1.4 ) }
    dend_66 { pt3dadd( -19.6431, -7.637, 8.21384, 1.4 ) }
    dend_66 { pt3dadd( -19.6761, -7.65502, 8.27384, 1.4 ) }
    dend_66 { pt3dadd( -20.803, -8.22581, 9.97688, 1.4 ) }
    dend_66 { pt3dadd( -21.6694, -8.68595, 11.0714, 1.4 ) }
    dend_66 { pt3dadd( -21.7091, -8.70949, 11.1112, 1.4 ) }
    dend_66 { pt3dadd( -22.9215, -9.49092, 12.1605, 0.88 ) }
    dend_66 { pt3dadd( -23.6735, -10.0064, 12.7038, 0.88 ) }
    dend_66 { pt3dadd( -24.5688, -10.6707, 13.3294, 0.74 ) }
    dend_66 { pt3dadd( -25.6718, -11.5362, 13.9726, 0.74 ) }
    dend_66 { pt3dadd( -26.6204, -12.2719, 14.442, 0.74 ) }
    dend_66 { pt3dadd( -26.6983, -12.3292, 14.4754, 0.74 ) }
    dend_66 { pt3dadd( -27.5696, -12.9085, 14.7852, 0.74 ) }
    dend_66 { pt3dadd( -28.8791, -13.7324, 15.2438, 1.11 ) }
    dend_66 { pt3dadd( -30.4744, -14.6653, 15.7493, 1.11 ) }
    dend_66 { pt3dadd( -32.0611, -15.5872, 16.1464, 1.11 ) }
    dend_66 { pt3dadd( -32.9396, -16.1368, 16.3214, 1.11 ) }
    dend_66 { pt3dadd( -33.8193, -16.7689, 16.4894, 1.47 ) }
    dend_66 { pt3dadd( -34.403, -17.2556, 16.5862, 1.47 ) }
    dend_66 { pt3dadd( -35.5088, -18.3341, 16.7594, 0.81 ) }
    dend_66 { pt3dadd( -36.4782, -19.463, 17.0202, 0.81 ) }
    dend_66 { pt3dadd( -37.4489, -20.6752, 17.347, 0.81 ) }
    dend_66 { pt3dadd( -38.4203, -21.8851, 17.6876, 1.11 ) }
    dend_66 { pt3dadd( -38.905, -22.4799, 17.8609, 1.47 ) }
    dend_66 { pt3dadd( -39.5375, -23.1988, 18.0997, 1.47 ) }
    dend_66 { pt3dadd( -40.8766, -24.6467, 18.6167, 0.74 ) }
    dend_66 { pt3dadd( -42.0918, -25.9002, 19.0549, 0.74 ) }
    dend_66 { pt3dadd( -43.1766, -26.9817, 19.3653, 0.74 ) }
    dend_66 { pt3dadd( -43.2267, -27.0321, 19.3781, 0.74 ) }
    dend_66 { pt3dadd( -44.0154, -27.8603, 19.5675, 1.03 ) }
    dend_66 { pt3dadd( -45.0171, -28.953, 19.7922, 1.03 ) }
    dend_66 { pt3dadd( -45.9667, -30.056, 19.9671, 1.18 ) }
    dend_66 { pt3dadd( -46.9041, -31.2193, 20.1427, 1.18 ) }
    dend_66 { pt3dadd( -48.149, -32.8239, 20.3847, 0.88 ) }
    dend_66 { pt3dadd( -49.4422, -34.5143, 20.6222, 0.88 ) }
    dend_66 { pt3dadd( -49.4859, -34.572, 20.6291, 0.88 ) }
    dend_66 { pt3dadd( -50.8547, -36.3746, 20.8351, 0.88 ) }
    dend_66 { pt3dadd( -50.8992, -36.4319, 20.8411, 0.88 ) }
    dend_66 { pt3dadd( -51.8073, -37.5672, 20.9433, 1.62 ) }
    dend_66 { pt3dadd( -52.4256, -38.3204, 20.9952, 1.99 ) }
    dend_66 { pt3dadd( -53.4499, -39.5696, 21.0752, 1.99 ) }
    dend_66 { pt3dadd( -55.1553, -41.7153, 21.2948, 2.21 ) }
    dend_66 { pt3dadd( -56.6198, -43.5699, 21.5922, 2.21 ) }
    dend_66 { pt3dadd( -57.4425, -44.6011, 21.8485, 2.5 ) }
    dend_66 { pt3dadd( -57.9835, -45.2657, 22.0617, 2.5 ) }
    dend_66 { pt3dadd( -59.1929, -46.7301, 22.6345, 1.84 ) }
    dend_66 { pt3dadd( -60.6715, -48.4932, 23.4621, 1.47 ) }
    dend_66 { pt3dadd( -61.7883, -49.8485, 24.1965, 1.25 ) }
    dend_66 { pt3dadd( -63.0595, -51.4191, 25.1229, 0.29 ) }
    dend_66 { pt3dadd( -63.6491, -52.2098, 25.6055, 0.29 ) }
    dend_66 { pt3dadd( -64.3634, -53.2227, 26.2337, 0.29 ) }
    dend_66 { pt3dadd( -64.4211, -53.3066, 26.2913, 0.29 ) }
    dend_66 { pt3dadd( -64.9532, -54.1296, 26.8487, 0.29 ) }
    dend_66 { pt3dadd( -65.0186, -54.2466, 26.9275, 0.29 ) }
    dend_66 { pt3dadd( -65.7655, -55.7224, 27.9393, 0.29 ) }
    dend_66 { pt3dadd( -65.794, -55.7725, 27.9829, 0.29 ) }
    dend_66 { pt3dadd( -66.6568, -56.9817, 29.1704, 0.29 ) }
    dend_66 { pt3dadd( -66.8752, -57.2372, 29.428, 0.74 ) }
    dend_66 { pt3dadd( -67.108, -57.4741, 29.6606, 1.03 ) }
    dend_66 { pt3dadd( -67.3968, -57.7622, 29.929, 1.03 ) }
    dend_66 { pt3dadd( -68.1376, -58.5202, 30.5051, 0.66 ) }
    dend_66 { pt3dadd( -68.7353, -59.2152, 30.9406, 0.66 ) }
    dend_66 { pt3dadd( -69.3218, -59.9889, 31.295, 0.88 ) }
    dend_66 { pt3dadd( -69.7905, -60.6098, 31.5483, 0.88 ) }
    dend_66 { pt3dadd( -70.561, -61.6208, 31.9466, 0.52 ) }
    dend_66 { pt3dadd( -71.4445, -62.7498, 32.3576, 0.52 ) }
    dend_66 { pt3dadd( -71.4937, -62.8135, 32.3778, 0.52 ) }
    dend_66 { pt3dadd( -72.3942, -63.973, 32.721, 0.81 ) }
    dend_66 { pt3dadd( -72.9209, -64.6313, 32.881, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_66 { pt3dadd( -73.9346, -65.8905, 33.1542, 0.29 ) }
    dend_66 { pt3dadd( -74.6696, -66.8043, 33.3098, 0.37 ) }
    dend_66 { pt3dadd( -75.0876, -67.3388, 33.4053, 1.03 ) }
    dend_66 { pt3dadd( -75.8011, -68.352, 33.5743, 0.22 ) }
    dend_66 { pt3dadd( -76.7529, -69.7783, 33.8131, 0.22 ) }
    dend_66 { pt3dadd( -76.8432, -69.9238, 33.8354, 0.59 ) }
    dend_66 { pt3dadd( -77.4402, -70.9457, 33.9559, 0.59 ) }
    dend_66 { pt3dadd( -77.9787, -71.8954, 34.067, 0.44 ) }
    dend_66 { pt3dadd( -78.631, -73.0084, 34.1885, 0.81 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 9/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 9.20986, 1.38751, 4.05967, 1.84 ) }
    dend_53 { pt3dadd( 9.4882, 1.28006, 4.1198, 1.62 ) }
    dend_53 { pt3dadd( 10.7516, 0.792307, 4.39276, 1.62 ) }
    dend_53 { pt3dadd( 10.8086, 0.770308, 4.40507, 1.62 ) }
    dend_53 { pt3dadd( 12.326, 0.184558, 4.73287, 1.62 ) }
    dend_53 { pt3dadd( 12.3911, 0.159416, 4.74694, 1.62 ) }
    dend_53 { pt3dadd( 12.7412, 0.0242453, 4.82259, 1.62 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 16/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.70014, 10.05, 5.17967, 2.8 ) }
    dend_39 { pt3dadd( -1.70014, 10.05, 5.17967, 2.8 ) }
    dend_39 { pt3dadd( -1.23209, 11.5903, 5.40814, 1.84 ) }
    dend_39 { pt3dadd( -0.762125, 13.0126, 5.64857, 1.84 ) }
    dend_39 { pt3dadd( -0.158067, 14.5961, 5.91387, 1.84 ) }
    dend_39 { pt3dadd( -0.119918, 14.684, 5.92796, 1.84 ) }
    dend_39 { pt3dadd( 0.778922, 16.5044, 6.20211, 1.84 ) }
    dend_39 { pt3dadd( 2.00647, 18.6189, 6.50221, 1.84 ) }
    dend_39 { pt3dadd( 2.10133, 18.7565, 6.52076, 1.84 ) }
    dend_39 { pt3dadd( 3.36883, 20.4617, 6.71566, 2.28 ) }
    dend_39 { pt3dadd( 4.20676, 21.5994, 6.90995, 2.28 ) }
    dend_39 { pt3dadd( 5.13099, 22.9283, 7.17312, 1.62 ) }
    dend_39 { pt3dadd( 5.88713, 24.1238, 7.47282, 1.62 ) }
    dend_39 { pt3dadd( 6.90336, 25.8854, 7.96473, 1.62 ) }
    dend_39 { pt3dadd( 7.66516, 27.3922, 8.50332, 1.62 ) }
    dend_39 { pt3dadd( 8.7395, 29.7601, 9.45594, 1.84 ) }
    dend_39 { pt3dadd( 9.3303, 31.2509, 10.1155, 2.06 ) }
    dend_39 { pt3dadd( 10.0914, 33.5495, 11.2388, 2.06 ) }
    dend_39 { pt3dadd( 10.1082, 33.6112, 11.2723, 2.06 ) }
    dend_39 { pt3dadd( 10.5297, 35.6798, 12.5321, 2.36 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 36/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -11.9802, -3.14849, 0.929666, 1.92 ) }
    dend_32 { pt3dadd( -11.9802, -3.14849, 0.929666, 1.92 ) }
    dend_32 { pt3dadd( -13.1483, -3.16903, 0.64454, 1.55 ) }
    dend_32 { pt3dadd( -14.8871, -3.19388, 0.195556, 1.55 ) }
    dend_32 { pt3dadd( -16.7038, -3.20931, -0.269264, 1.4 ) }
    dend_32 { pt3dadd( -18.4061, -3.22138, -0.75285, 1.4 ) }
    dend_32 { pt3dadd( -18.4837, -3.22207, -0.777795, 1.4 ) }
    dend_32 { pt3dadd( -20.0972, -3.22483, -1.35151, 1.4 ) }
    dend_32 { pt3dadd( -20.2377, -3.22303, -1.41176, 1.4 ) }
    dend_32 { pt3dadd( -21.182, -3.19567, -1.87503, 1.33 ) }
    dend_32 { pt3dadd( -22.656, -3.12524, -2.67513, 1.33 ) }
    dend_32 { pt3dadd( -23.6616, -3.05437, -3.26985, 1.33 ) }
    dend_32 { pt3dadd( -24.15, -3.01308, -3.57164, 1.4 ) }
    dend_32 { pt3dadd( -25.5106, -2.87134, -4.41635, 1.4 ) }
    dend_32 { pt3dadd( -25.5802, -2.86322, -4.45811, 1.4 ) }
    dend_32 { pt3dadd( -26.5561, -2.7354, -5.01479, 1.25 ) }
    dend_32 { pt3dadd( -27.8854, -2.53967, -5.65764, 1.11 ) }
    dend_32 { pt3dadd( -27.9785, -2.5258, -5.69438, 1.11 ) }
    dend_32 { pt3dadd( -28.9107, -2.4008, -6.00653, 1.11 ) }
    dend_32 { pt3dadd( -29.6356, -2.30359, -6.19261, 0.88 ) }
    dend_32 { pt3dadd( -30.07, -2.25004, -6.2918, 0.74 ) }
    dend_32 { pt3dadd( -30.29, -2.23159, -6.33116, 0.66 ) }
    dend_32 { pt3dadd( -31.1257, -2.21848, -6.41055, 0.66 ) }
    dend_32 { pt3dadd( -31.2774, -2.23023, -6.42607, 0.66 ) }
    dend_32 { pt3dadd( -31.912, -2.35945, -6.49402, 0.88 ) }
    dend_32 { pt3dadd( -32.6338, -2.58902, -6.56501, 0.88 ) }
    dend_32 { pt3dadd( -33.1369, -2.77938, -6.61507, 0.96 ) }
    dend_32 { pt3dadd( -33.6828, -2.99679, -6.66402, 0.96 ) }
    dend_32 { pt3dadd( -34.5034, -3.31645, -6.72573, 0.96 ) }
    dend_32 { pt3dadd( -35.2657, -3.58285, -6.81509, 0.37 ) }
    dend_32 { pt3dadd( -36.0338, -3.80059, -6.92276, 0.37 ) }
    dend_32 { pt3dadd( -36.513, -3.88732, -7.00763, 1.11 ) }
    dend_32 { pt3dadd( -37.6235, -3.94673, -7.22751, 1.77 ) }
    dend_32 { pt3dadd( -38.4414, -3.8882, -7.40019, 2.06 ) }
    dend_32 { pt3dadd( -39.4968, -3.68688, -7.63152, 2.06 ) }
    dend_32 { pt3dadd( -40.3226, -3.43866, -7.80791, 1.69 ) }
    dend_32 { pt3dadd( -40.9158, -3.21158, -7.92474, 1.33 ) }
    dend_32 { pt3dadd( -41.728, -2.86622, -8.05882, 1.11 ) }
    dend_32 { pt3dadd( -42.2115, -2.62974, -8.12168, 1.03 ) }
    dend_32 { pt3dadd( -42.6043, -2.42701, -8.15072, 1.03 ) }
    dend_32 { pt3dadd( -43.2301, -2.0989, -8.19987, 0.81 ) }
    dend_32 { pt3dadd( -43.656, -1.87542, -8.26295, 0.81 ) }
    dend_32 { pt3dadd( -44.1206, -1.63452, -8.35414, 0.29 ) }
    dend_32 { pt3dadd( -44.7729, -1.29377, -8.50504, 0.29 ) }
    dend_32 { pt3dadd( -45.1566, -1.0959, -8.60366, 1.03 ) }
    dend_32 { pt3dadd( -46.349, -0.483981, -8.94508, 1.33 ) }
    dend_32 { pt3dadd( -46.9023, -0.199417, -9.12462, 1.62 ) }
    dend_32 { pt3dadd( -47.7005, 0.224066, -9.41247, 1.62 ) }
    dend_32 { pt3dadd( -47.998, 0.385912, -9.53124, 1.62 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 2.58986, 11.331, -3.07033, 4.86 ) }
    dend_26 { pt3dadd( 2.58986, 11.331, -3.07033, 4.86 ) }
    dend_26 { pt3dadd( 3.43903, 13.1316, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 4.05055, 14.2296, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 4.96366, 15.7052, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 6.33795, 17.7225, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 6.75313, 18.288, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 7.74714, 19.544, -3.07033, 2.36 ) }
    dend_26 { pt3dadd( 8.46921, 20.3184, -3.07033, 2.06 ) }
    dend_26 { pt3dadd( 9.08208, 20.8833, -3.07033, 1.84 ) }
    dend_26 { pt3dadd( 9.78006, 21.3757, -3.07033, 1.62 ) }
    dend_26 { pt3dadd( 10.1712, 21.5806, -3.07033, 1.62 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.28986, -8.87099, -0.0103344, 2.5 ) }
    dend_19 { pt3dadd( 2.28986, -8.87099, -0.0103344, 2.5 ) }
    dend_19 { pt3dadd( 2.24502, -11.3834, -0.0103344, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_19 { pt3dadd( 2.24478, -12.639, -0.0103344, 1.62 ) }
    dend_19 { pt3dadd( 2.25341, -13.8635, -0.0067364, 1.62 ) }
    dend_19 { pt3dadd( 2.26895, -15.6717, 0.0017113, 1.84 ) }
    dend_19 { pt3dadd( 2.29297, -17.4029, -0.0038439, 1.92 ) }
    dend_19 { pt3dadd( 2.31821, -18.4731, -0.0131806, 2.06 ) }
    dend_19 { pt3dadd( 2.38751, -20.8161, 0.0182277, 2.06 ) }
    dend_19 { pt3dadd( 2.39137, -20.9085, 0.0210238, 2.06 ) }
    dend_19 { pt3dadd( 2.4959, -22.941, 0.107909, 2.06 ) }
    dend_19 { pt3dadd( 2.64968, -25.1841, 0.226824, 2.06 ) }
    dend_19 { pt3dadd( 2.80019, -27.2027, 0.388121, 1.84 ) }
    dend_19 { pt3dadd( 2.94391, -29.0691, 0.577281, 1.55 ) }
    dend_19 { pt3dadd( 3.06663, -30.5855, 0.759752, 1.4 ) }
    dend_19 { pt3dadd( 3.24665, -32.4858, 1.0377, 1.4 ) }
    dend_19 { pt3dadd( 3.27816, -32.7696, 1.08885, 1.4 ) }
    dend_19 { pt3dadd( 3.5165, -34.5926, 1.48236, 1.25 ) }
    dend_19 { pt3dadd( 3.53128, -34.6947, 1.50428, 1.25 ) }
    dend_19 { pt3dadd( 3.76202, -36.1151, 1.77955, 1.25 ) }
    dend_19 { pt3dadd( 4.16645, -38.6181, 2.22915, 1.25 ) }
    dend_19 { pt3dadd( 4.18138, -38.708, 2.24364, 1.25 ) }
    dend_19 { pt3dadd( 4.80725, -42.5657, 2.77696, 1.25 ) }
    dend_19 { pt3dadd( 5.03394, -44.0035, 2.93961, 1.62 ) }
    dend_19 { pt3dadd( 5.35809, -46.0875, 3.14626, 1.62 ) }
    dend_19 { pt3dadd( 5.75876, -48.7482, 3.36339, 1.62 ) }
    dend_19 { pt3dadd( 5.93284, -50.0038, 3.4368, 1.62 ) }
    dend_19 { pt3dadd( 6.1213, -51.6473, 3.5111, 1.69 ) }
    dend_19 { pt3dadd( 6.20139, -52.705, 3.53542, 1.92 ) }
    dend_19 { pt3dadd( 6.26188, -54.2102, 3.568, 1.92 ) }
    dend_19 { pt3dadd( 6.26369, -55.4689, 3.59179, 1.4 ) }
    dend_19 { pt3dadd( 6.23517, -56.5316, 3.61235, 1.33 ) }
    dend_19 { pt3dadd( 6.14593, -58.5852, 3.6476, 1.33 ) }
    dend_19 { pt3dadd( 6.05352, -60.141, 3.66977, 1.47 ) }
    dend_19 { pt3dadd( 5.99016, -61.5019, 3.6826, 1.55 ) }
    dend_19 { pt3dadd( 5.97942, -61.8068, 3.68444, 1.55 ) }
    dend_19 { pt3dadd( 5.96806, -62.679, 3.68703, 1.33 ) }
    dend_19 { pt3dadd( 5.99539, -64.4199, 3.68703, 1.33 ) }
    dend_19 { pt3dadd( 5.99979, -64.5123, 3.68703, 1.33 ) }
    dend_19 { pt3dadd( 6.53067, -71.3512, 3.78191, 1.18 ) }
    dend_19 { pt3dadd( 6.66564, -72.6018, 3.81193, 1.33 ) }
    dend_19 { pt3dadd( 6.89596, -74.3389, 3.8898, 1.62 ) }
    dend_19 { pt3dadd( 7.15285, -75.9967, 3.99316, 1.77 ) }
    dend_19 { pt3dadd( 7.45074, -77.6179, 4.12344, 1.77 ) }
    dend_19 { pt3dadd( 7.8465, -79.3762, 4.29541, 1.62 ) }
    dend_19 { pt3dadd( 8.3619, -81.1437, 4.56634, 1.62 ) }
    dend_19 { pt3dadd( 8.88076, -82.8259, 4.85727, 1.47 ) }
    dend_19 { pt3dadd( 8.90779, -82.9124, 4.87296, 1.4 ) }
    dend_19 { pt3dadd( 9.34019, -84.3408, 5.12121, 1.55 ) }
    dend_19 { pt3dadd( 9.82284, -86.1238, 5.3903, 1.47 ) }
    dend_19 { pt3dadd( 10.1526, -87.5501, 5.55499, 1.4 ) }
    dend_19 { pt3dadd( 10.4645, -89.1012, 5.67791, 1.25 ) }
    dend_19 { pt3dadd( 10.7741, -90.7452, 5.74808, 1.25 ) }
    dend_19 { pt3dadd( 11.0538, -92.4051, 5.78538, 1.69 ) }
    dend_19 { pt3dadd( 11.4205, -94.7744, 5.80152, 1.92 ) }
    dend_19 { pt3dadd( 11.7139, -96.7728, 5.78212, 1.92 ) }
    dend_19 { pt3dadd( 11.9766, -98.5092, 5.73688, 1.55 ) }
    dend_19 { pt3dadd( 12.2985, -100.626, 5.68187, 1.47 ) }
    dend_19 { pt3dadd( 12.9077, -104.441, 5.55178, 1.47 ) }
    dend_19 { pt3dadd( 12.9237, -104.532, 5.54969, 1.47 ) }
    dend_19 { pt3dadd( 13.1513, -105.707, 5.53706, 1.11 ) }
    dend_19 { pt3dadd( 13.9749, -109.673, 5.55887, 1.11 ) }
    dend_19 { pt3dadd( 14.2094, -110.74, 5.62118, 1.33 ) }
    dend_19 { pt3dadd( 14.5308, -112.057, 5.75506, 1.47 ) }
    dend_19 { pt3dadd( 15.01, -113.705, 5.99457, 1.47 ) }
    dend_19 { pt3dadd( 15.5907, -115.516, 6.30216, 1.47 ) }
    dend_19 { pt3dadd( 15.6261, -115.613, 6.3237, 1.47 ) }
    dend_19 { pt3dadd( 16.4266, -117.53, 6.85052, 1.33 ) }
    dend_19 { pt3dadd( 17.0798, -119.014, 7.27821, 1.4 ) }
    dend_19 { pt3dadd( 17.6949, -120.377, 7.64583, 1.62 ) }
    dend_19 { pt3dadd( 18.1124, -121.304, 7.85724, 1.62 ) }
    dend_19 { pt3dadd( 18.8459, -122.99, 8.18336, 1.03 ) }
    dend_19 { pt3dadd( 19.413, -124.451, 8.41438, 0.96 ) }
    dend_19 { pt3dadd( 19.4418, -124.537, 8.42622, 0.96 ) }
    dend_19 { pt3dadd( 20.1599, -127.059, 8.81295, 0.96 ) }
    dend_19 { pt3dadd( 20.1848, -127.16, 8.82899, 0.96 ) }
    dend_19 { pt3dadd( 20.6142, -129.116, 9.191, 0.96 ) }
    dend_19 { pt3dadd( 21.0203, -131.224, 9.60765, 0.74 ) }
    dend_19 { pt3dadd( 21.4048, -133.499, 10.103, 0.74 ) }
    dend_19 { pt3dadd( 21.5256, -134.542, 10.3221, 0.96 ) }
    dend_19 { pt3dadd( 21.5737, -135.305, 10.4694, 0.96 ) }
    dend_19 { pt3dadd( 21.6591, -136.879, 10.7243, 0.74 ) }
    dend_19 { pt3dadd( 21.7027, -137.838, 10.8529, 0.52 ) }
    dend_19 { pt3dadd( 21.7694, -139.559, 11.019, 0.52 ) }
    dend_19 { pt3dadd( 21.9011, -142.717, 11.2283, 0.52 ) }
    dend_19 { pt3dadd( 22.033, -145.514, 11.371, 0.52 ) }
    dend_19 { pt3dadd( 22.1591, -147.59, 11.421, 0.52 ) }
    dend_19 { pt3dadd( 22.2187, -148.42, 11.4138, 0.74 ) }
    dend_19 { pt3dadd( 22.3416, -149.673, 11.3942, 0.74 ) }
    dend_19 { pt3dadd( 22.5016, -150.932, 11.3441, 0.66 ) }
    dend_19 { pt3dadd( 22.6698, -151.972, 11.2742, 1.25 ) }
    dend_19 { pt3dadd( 22.8613, -153.242, 11.1574, 1.62 ) }
    dend_19 { pt3dadd( 22.9969, -154.296, 11.0483, 1.62 ) }
    dend_19 { pt3dadd( 23.125, -155.406, 10.9317, 1.47 ) }
    dend_19 { pt3dadd( 23.3288, -157.339, 10.7383, 1.03 ) }
    dend_19 { pt3dadd( 23.4271, -158.391, 10.6455, 1.03 ) }
    dend_19 { pt3dadd( 23.4765, -159.068, 10.6052, 1.03 ) }
    dend_19 { pt3dadd( 23.5341, -160.265, 10.5687, 1.03 ) }
    dend_19 { pt3dadd( 23.5649, -161.431, 10.5602, 0.66 ) }
    dend_19 { pt3dadd( 23.5673, -163.072, 10.5872, 0.66 ) }
    dend_19 { pt3dadd( 23.5621, -164.423, 10.6069, 1.03 ) }
    dend_19 { pt3dadd( 23.5523, -165.523, 10.5942, 1.25 ) }
    dend_19 { pt3dadd( 23.5512, -165.615, 10.5909, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 23.5324, -167.058, 10.499, 1.25 ) }
    dend_19 { pt3dadd( 23.5328, -167.137, 10.4914, 1.25 ) }
    dend_19 { pt3dadd( 23.5953, -168.899, 10.2221, 0.88 ) }
    dend_19 { pt3dadd( 23.6596, -169.51, 10.1092, 0.66 ) }
    dend_19 { pt3dadd( 23.6743, -169.6, 10.0923, 0.66 ) }
    dend_19 { pt3dadd( 23.925, -170.733, 9.9072, 0.52 ) }
    dend_19 { pt3dadd( 23.9591, -170.858, 9.89024, 0.52 ) }
    dend_19 { pt3dadd( 24.2623, -171.811, 9.83202, 0.37 ) }
    dend_19 { pt3dadd( 24.8559, -173.541, 9.80037, 0.37 ) }
    dend_19 { pt3dadd( 25.2216, -174.545, 9.78635, 0.96 ) }
    dend_19 { pt3dadd( 25.6101, -175.578, 9.77946, 1.77 ) }
    dend_19 { pt3dadd( 25.9111, -176.335, 9.78575, 1.99 ) }
    dend_19 { pt3dadd( 26.4015, -177.546, 9.82539, 1.99 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.78014, -9.63749, 2.67967, 1.18 ) }
    dend_16 { pt3dadd( -6.78014, -9.63749, 2.67967, 1.18 ) }
    dend_16 { pt3dadd( -6.77405, -10.5993, 3.03748, 1.18 ) }
    dend_16 { pt3dadd( -6.7719, -10.6672, 3.06244, 1.18 ) }
    dend_16 { pt3dadd( -6.64483, -11.9869, 3.49755, 1.03 ) }
    dend_16 { pt3dadd( -6.46685, -13.3064, 4.10758, 1.03 ) }
    dend_16 { pt3dadd( -6.27738, -14.6875, 4.8594, 1.03 ) }
    dend_16 { pt3dadd( -6.08885, -15.9985, 5.68416, 1.03 ) }
    dend_16 { pt3dadd( -6.08009, -16.0557, 5.72605, 1.03 ) }
    dend_16 { pt3dadd( -5.89009, -17.4723, 7.01959, 1.03 ) }
    dend_16 { pt3dadd( -5.78603, -19.2781, 9.31246, 1.03 ) }
    dend_16 { pt3dadd( -5.87275, -19.6703, 10.159, 1.03 ) }
    dend_16 { pt3dadd( -5.98447, -19.7482, 10.5792, 1.03 ) }
    dend_16 { pt3dadd( -6.12894, -19.7719, 10.9151, 1.03 ) }
    dend_16 { pt3dadd( -6.83575, -19.8681, 12.1242, 1.03 ) }
    dend_16 { pt3dadd( -7.43158, -19.9723, 12.8982, 1.03 ) }
    dend_16 { pt3dadd( -7.47945, -19.9955, 12.9432, 1.03 ) }
    dend_16 { pt3dadd( -8.47941, -20.638, 13.8668, 1.03 ) }
    dend_16 { pt3dadd( -8.83513, -20.9242, 14.201, 1.25 ) }
    dend_16 { pt3dadd( -9.32662, -21.3918, 14.6854, 1.25 ) }
    dend_16 { pt3dadd( -10.2919, -22.4683, 15.5985, 1.25 ) }
    dend_16 { pt3dadd( -11.1097, -23.5106, 16.5448, 1.25 ) }
    dend_16 { pt3dadd( -11.1427, -23.5575, 16.5863, 1.25 ) }
    dend_16 { pt3dadd( -11.9211, -24.8228, 17.672, 1.25 ) }
    dend_16 { pt3dadd( -12.359, -25.5871, 18.3815, 1.4 ) }
    dend_16 { pt3dadd( -12.8309, -26.4098, 19.1655, 1.4 ) }
    dend_16 { pt3dadd( -13.7452, -28.0206, 20.7078, 1.18 ) }
    dend_16 { pt3dadd( -13.9623, -28.3672, 21.0555, 1.18 ) }
    dend_16 { pt3dadd( -14.5289, -29.1235, 21.8144, 0.88 ) }
    dend_16 { pt3dadd( -15.4421, -30.1207, 22.8547, 0.88 ) }
    dend_16 { pt3dadd( -16.1694, -30.7939, 23.5807, 0.88 ) }
    dend_16 { pt3dadd( -16.7586, -31.2403, 24.0918, 0.88 ) }
    dend_16 { pt3dadd( -17.6506, -31.7695, 24.6575, 1.18 ) }
    dend_16 { pt3dadd( -18.417, -32.1172, 25.1375, 1.4 ) }
    dend_16 { pt3dadd( -19.3039, -32.3814, 25.6478, 1.4 ) }
    dend_16 { pt3dadd( -19.3552, -32.3896, 25.6767, 1.4 ) }
    dend_16 { pt3dadd( -19.9443, -32.3915, 26.0386, 0.96 ) }
    dend_16 { pt3dadd( -20.7073, -32.241, 26.5871, 0.96 ) }
    dend_16 { pt3dadd( -21.5785, -31.8129, 27.6469, 0.81 ) }
    dend_16 { pt3dadd( -21.8165, -31.6107, 28.0694, 0.81 ) }
    dend_16 { pt3dadd( -21.8451, -31.5763, 28.1356, 0.81 ) }
    dend_16 { pt3dadd( -22.0394, -31.2462, 28.7873, 0.66 ) }
    dend_16 { pt3dadd( -22.1929, -30.6336, 30.0874, 1.18 ) }
    dend_16 { pt3dadd( -22.0447, -30.1917, 31.7726, 0.96 ) }
    dend_16 { pt3dadd( -22.0228, -30.2138, 31.8457, 0.96 ) }
    dend_16 { pt3dadd( -21.8942, -30.5012, 32.2733, 1.03 ) }
    dend_16 { pt3dadd( -21.8812, -30.5546, 32.3326, 1.03 ) }
    dend_16 { pt3dadd( -21.7805, -31.3428, 33.0189, 1.03 ) }
    dend_16 { pt3dadd( -21.716, -33.0448, 34.185, 0.88 ) }
    dend_16 { pt3dadd( -21.7301, -34.1787, 34.866, 0.66 ) }
    dend_16 { pt3dadd( -21.7312, -34.903, 35.3571, 0.66 ) }
    dend_16 { pt3dadd( -21.7142, -35.6235, 35.9205, 0.52 ) }
    dend_16 { pt3dadd( -21.6589, -35.9461, 36.2059, 0.52 ) }
    dend_16 { pt3dadd( -21.6266, -35.9927, 36.2631, 0.52 ) }
    dend_16 { pt3dadd( -21.1457, -36.0733, 36.4801, 0.52 ) }
    dend_16 { pt3dadd( -19.9002, -36.2154, 36.886, 0.37 ) }
    dend_16 { pt3dadd( -19.0273, -36.2911, 37.1424, 0.37 ) }
    dend_16 { pt3dadd( -17.572, -36.3791, 37.4978, 0.37 ) }
    dend_16 { pt3dadd( -17.4949, -36.382, 37.5158, 0.37 ) }
    dend_16 { pt3dadd( -17.0406, -36.4022, 37.615, 0.37 ) }
    dend_16 { pt3dadd( -16.8948, -36.4143, 37.6409, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.64014, -10.7715, 1.67967, 2.5 ) }
    dend_5 { pt3dadd( -5.64014, -10.7715, 1.67967, 2.5 ) }
    dend_5 { pt3dadd( -5.46107, -13.175, 1.53744, 2.21 ) }
    dend_5 { pt3dadd( -5.23945, -16.6182, 1.33146, 1.99 ) }
    dend_5 { pt3dadd( -5.06764, -19.793, 1.14836, 2.06 ) }
    dend_5 { pt3dadd( -4.86502, -23.6694, 0.932577, 2.21 ) }
    dend_5 { pt3dadd( -4.76491, -25.5846, 0.825967, 2.21 ) }
    dend_5 { pt3dadd( -4.68598, -27.3733, 0.723722, 2.28 ) }
    dend_5 { pt3dadd( -4.6266, -29.666, 0.584994, 2.5 ) }
    dend_5 { pt3dadd( -4.62696, -31.7597, 0.458264, 2.5 ) }
    dend_5 { pt3dadd( -4.64159, -32.705, 0.417177, 2.5 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 85/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -9.68014, 5.59801, -0.320334, 2.21 ) }
    dend_0 { pt3dadd( -9.68014, 5.59801, -0.320334, 2.21 ) }
    dend_0 { pt3dadd( -10.9786, 6.23755, -0.15823, 1.55 ) }
    dend_0 { pt3dadd( -12.1602, 6.85059, 0.0636157, 1.4 ) }
    dend_0 { pt3dadd( -13.4354, 7.53997, 0.323017, 1.4 ) }
    dend_0 { pt3dadd( -14.7176, 8.26406, 0.56813, 1.4 ) }
    dend_0 { pt3dadd( -15.6502, 8.80233, 0.734057, 1.4 ) }
    dend_0 { pt3dadd( -15.7121, 8.83807, 0.744451, 1.4 ) }
    dend_0 { pt3dadd( -17.1772, 9.66474, 0.971276, 1.18 ) }
    dend_0 { pt3dadd( -19.2871, 10.7879, 1.24857, 1.18 ) }
    dend_0 { pt3dadd( -21.3645, 11.8702, 1.48584, 1.18 ) }
    dend_0 { pt3dadd( -22.4485, 12.4219, 1.6056, 1.55 ) }
    dend_0 { pt3dadd( -23.4667, 12.9281, 1.70521, 1.99 ) }
    dend_0 { pt3dadd( -25.0078, 13.6625, 1.81525, 1.99 ) }
    dend_0 { pt3dadd( -26.3436, 14.2421, 1.82448, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 0/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.09826, 9.5642, -1.4207, 1.02533 ) }
    axon_0 { pt3dadd( 16.9209, 20.9006, -1.4207, 1.02533 ) }
    axon_0 { pt3dadd( 26.7436, 32.2371, -1.4207, 1.02533 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 3/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -78.631, -73.0084, 34.1885, 0.96 ) }
    dend_68 { pt3dadd( -78.1237, -73.5485, 34.222, 0.96 ) }
    dend_68 { pt3dadd( -77.5803, -74.1274, 34.2578, 0.96 ) }
    dend_68 { pt3dadd( -77.5129, -74.1991, 34.2623, 0.96 ) }
    dend_68 { pt3dadd( -76.8778, -74.8755, 34.3041, 0.96 ) }
    dend_68 { pt3dadd( -75.8867, -75.9311, 34.3695, 0.37 ) }
    dend_68 { pt3dadd( -75.4804, -76.3638, 34.3963, 0.37 ) }
    dend_68 { pt3dadd( -67.7006, -82.4479, 34.1561, 0.37 ) }
    dend_68 { pt3dadd( -59.3948, -87.6778, 33.5419, 0.37 ) }
    dend_68 { pt3dadd( -51.1512, -92.9212, 32.4061, 0.37 ) }
    dend_68 { pt3dadd( -42.3046, -96.0409, 29.7344, 0.37 ) }
    dend_68 { pt3dadd( -33.656, -98.4735, 25.9823, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 15/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -78.631, -73.0084, 34.1885, 0.29 ) }
    dend_67 { pt3dadd( -79.146, -73.5119, 34.3095, 0.29 ) }
    dend_67 { pt3dadd( -79.9009, -74.2501, 34.4868, 0.29 ) }
    dend_67 { pt3dadd( -83.5205, -78.4335, 35.7347, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 19/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 12.7412, 0.0242453, 4.82259, 1.62 ) }
    dend_55 { pt3dadd( 13.5435, 0.167859, 4.95066, 1.62 ) }
    dend_55 { pt3dadd( 13.8327, 0.190736, 6.1469, 1.62 ) }
    dend_55 { pt3dadd( 14.1834, 0.200839, 7.95805, 1.47 ) }
    dend_55 { pt3dadd( 14.1995, 0.199449, 8.02741, 1.47 ) }
    dend_55 { pt3dadd( 14.4455, 0.171419, 8.83955, 1.47 ) }
    dend_55 { pt3dadd( 14.4688, 0.1685, 8.90682, 1.47 ) }
    dend_55 { pt3dadd( 17.3246, -0.340327, 17.1876, 1.18 ) }
    dend_55 { pt3dadd( 17.3563, -0.347965, 17.283, 1.18 ) }
    dend_55 { pt3dadd( 17.8226, -0.486843, 18.569, 1.18 ) }
    dend_55 { pt3dadd( 18.4491, -0.682965, 20.0053, 1.18 ) }
    dend_55 { pt3dadd( 18.4846, -0.693546, 20.0662, 1.18 ) }
    dend_55 { pt3dadd( 19.541, -0.890768, 21.0156, 1.18 ) }
    dend_55 { pt3dadd( 19.6899, -0.9029, 21.0465, 1.18 ) }
    dend_55 { pt3dadd( 21.1418, -0.972198, 21.4101, 1.18 ) }
    dend_55 { pt3dadd( 21.3069, -0.973106, 21.4614, 1.18 ) }
    dend_55 { pt3dadd( 22.9955, -0.962351, 22.0507, 1.18 ) }
    dend_55 { pt3dadd( 23.8174, -0.949484, 22.3503, 1.03 ) }
    dend_55 { pt3dadd( 25.9349, -0.884859, 23.2242, 1.03 ) }
    dend_55 { pt3dadd( 26.0005, -0.882722, 23.2517, 1.03 ) }
    dend_55 { pt3dadd( 26.9966, -0.878567, 23.7272, 1.03 ) }
    dend_55 { pt3dadd( 27.6045, -0.898796, 24.0225, 1.55 ) }
    dend_55 { pt3dadd( 27.6684, -0.904186, 24.0535, 1.55 ) }
    dend_55 { pt3dadd( 29.1602, -1.08514, 24.9121, 1.55 ) }
    dend_55 { pt3dadd( 29.9637, -1.19001, 25.4614, 1.55 ) }
    dend_55 { pt3dadd( 31.8614, -1.46084, 26.7936, 1.55 ) }
    dend_55 { pt3dadd( 32.434, -1.53786, 27.2238, 1.55 ) }
    dend_55 { pt3dadd( 32.5972, -1.55794, 27.3525, 1.55 ) }
    dend_55 { pt3dadd( 33.9484, -1.67115, 28.478, 1.47 ) }
    dend_55 { pt3dadd( 35.4437, -1.78194, 29.6345, 1.25 ) }
    dend_55 { pt3dadd( 36.4332, -1.82637, 30.357, 0.88 ) }
    dend_55 { pt3dadd( 38.0778, -1.79593, 31.1043, 0.88 ) }
    dend_55 { pt3dadd( 38.1205, -1.79223, 31.0608, 0.88 ) }
    dend_55 { pt3dadd( 39.0532, -1.66389, 29.763, 0.74 ) }
    dend_55 { pt3dadd( 42.5722, -0.977186, 23.8126, 0.66 ) }
    dend_55 { pt3dadd( 42.7215, -0.938504, 23.5075, 0.66 ) }
    dend_55 { pt3dadd( 42.973, -0.862187, 22.8541, 0.37 ) }
    dend_55 { pt3dadd( 43.1624, -0.806283, 22.2518, 0.37 ) }
    dend_55 { pt3dadd( 43.1845, -0.800609, 22.1736, 0.37 ) }
    dend_55 { pt3dadd( 43.243, -0.794287, 21.8844, 0.52 ) }
    dend_55 { pt3dadd( 43.7695, -0.279015, 21.9507, 0.74 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 60/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 12.7412, 0.0242453, 4.82259, 0.29 ) }
    dend_54 { pt3dadd( 12.7858, -0.64416, 4.73983, 0.29 ) }
    dend_54 { pt3dadd( 12.8032, -1.3522, 4.6519, 0.29 ) }
    dend_54 { pt3dadd( 12.7971, -1.44327, 4.64052, 0.29 ) }
    dend_54 { pt3dadd( 12.7288, -2.46485, 4.51284, 0.29 ) }
    dend_54 { pt3dadd( 12.7235, -2.54454, 4.50288, 0.29 ) }
    dend_54 { pt3dadd( 12.6797, -3.199, 4.42108, 0.29 ) }
    dend_54 { pt3dadd( 12.6733, -3.2786, 4.41113, 0.29 ) }
    dend_54 { pt3dadd( 12.4979, -4.1218, 4.3047, 0.29 ) }
    dend_54 { pt3dadd( 13.7016, -15.5536, 4.25106, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 70/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 10.5297, 35.6798, 12.5321, 1.03 ) }
    dend_43 { pt3dadd( 10.4491, 37.6249, 12.7195, 1.03 ) }
    dend_43 { pt3dadd( 10.4161, 39.2486, 12.8333, 1.03 ) }
    dend_43 { pt3dadd( 10.3975, 40.6187, 12.9657, 1.03 ) }
    dend_43 { pt3dadd( 10.3959, 40.7721, 12.9825, 1.03 ) }
    dend_43 { pt3dadd( 10.4225, 43.3212, 13.2119, 1.03 ) }
    dend_43 { pt3dadd( 10.4511, 44.5215, 13.3035, 0.74 ) }
    dend_43 { pt3dadd( 10.4618, 45.7335, 13.538, 0.59 ) }
    dend_43 { pt3dadd( 10.4593, 46.922, 13.9423, 0.59 ) }
    dend_43 { pt3dadd( 10.4586, 46.9922, 13.9728, 0.59 ) }
    dend_43 { pt3dadd( 10.4498, 48.0068, 14.523, 1.18 ) }
    dend_43 { pt3dadd( 10.4502, 48.0604, 14.5598, 1.18 ) }
    dend_43 { pt3dadd( 10.4957, 52.0011, 17.3618, 0.74 ) }
    dend_43 { pt3dadd( 10.5114, 52.7938, 17.899, 1.18 ) }
    dend_43 { pt3dadd( 10.543, 53.7291, 18.4907, 1.18 ) }
    dend_43 { pt3dadd( 10.5476, 53.8026, 18.5368, 1.18 ) }
    dend_43 { pt3dadd( 10.6253, 54.7755, 19.1469, 0.88 ) }
    dend_43 { pt3dadd( 10.72, 55.6352, 19.6292, 0.66 ) }
    dend_43 { pt3dadd( 10.9501, 56.7701, 20.0812, 0.66 ) }
    dend_43 { pt3dadd( 10.9741, 56.8869, 20.1356, 0.66 ) }
    dend_43 { pt3dadd( 11.2231, 58.1903, 20.8017, 0.66 ) }
    dend_43 { pt3dadd( 11.2356, 58.2984, 20.8651, 0.66 ) }
    dend_43 { pt3dadd( 11.2575, 59.2914, 21.4925, 0.96 ) }
    dend_43 { pt3dadd( 11.2362, 59.7831, 21.7774, 1.11 ) }
    dend_43 { pt3dadd( 11.2151, 60.5953, 22.11, 1.11 ) }
    dend_43 { pt3dadd( 11.2115, 60.7597, 22.1596, 1.11 ) }
    dend_43 { pt3dadd( 11.1875, 62.3096, 22.4646, 0.96 ) }
    dend_43 { pt3dadd( 11.1772, 63.4287, 22.6658, 0.88 ) }
    dend_43 { pt3dadd( 11.167, 64.8562, 22.8762, 0.88 ) }
    dend_43 { pt3dadd( 11.1173, 67.031, 23.1686, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( 11.1125, 67.2632, 23.1954, 0.88 ) }
    dend_43 { pt3dadd( 11.1058, 68.4718, 23.2972, 0.88 ) }
    dend_43 { pt3dadd( 11.12, 69.7559, 23.3378, 0.59 ) }
    dend_43 { pt3dadd( 11.1251, 70.6712, 23.3585, 0.59 ) }
    dend_43 { pt3dadd( 11.1228, 71.1647, 23.3643, 1.18 ) }
    dend_43 { pt3dadd( 11.119, 71.8971, 23.3523, 1.18 ) }
    dend_43 { pt3dadd( 11.1298, 72.9442, 23.2945, 1.18 ) }
    dend_43 { pt3dadd( 11.1693, 74.7214, 23.1309, 0.66 ) }
    dend_43 { pt3dadd( 11.2623, 76.7999, 22.8645, 0.66 ) }
    dend_43 { pt3dadd( 11.2702, 76.9717, 22.8476, 0.66 ) }
    dend_43 { pt3dadd( 11.3625, 79.0729, 22.6867, 0.66 ) }
    dend_43 { pt3dadd( 11.41, 80.2317, 22.6191, 0.66 ) }
    dend_43 { pt3dadd( 11.4132, 80.3089, 22.6169, 0.66 ) }
    dend_43 { pt3dadd( 11.4697, 81.5931, 22.6208, 0.66 ) }
    dend_43 { pt3dadd( 11.5519, 83.6558, 22.6865, 1.18 ) }
    dend_43 { pt3dadd( 11.5737, 84.1401, 22.7132, 1.69 ) }
    dend_43 { pt3dadd( 11.5819, 84.2936, 22.7277, 1.69 ) }
    dend_43 { pt3dadd( 11.697, 85.8477, 22.8727, 1.69 ) }
    dend_43 { pt3dadd( 11.7579, 86.5744, 22.9381, 1.69 ) }
    dend_43 { pt3dadd( 11.8477, 87.4417, 23.004, 0.22 ) }
    dend_43 { pt3dadd( 11.8722, 87.6226, 23.0114, 0.37 ) }
    dend_43 { pt3dadd( 11.9155, 87.913, 23.0249, 0.37 ) }
    dend_43 { pt3dadd( 12.2552, 90.2239, 23.1759, 0.37 ) }
    dend_43 { pt3dadd( 12.3617, 90.9527, 23.2343, 0.74 ) }
    dend_43 { pt3dadd( 12.4541, 91.6045, 23.2931, 0.74 ) }
    dend_43 { pt3dadd( 12.5405, 92.253, 23.3511, 0.37 ) }
    dend_43 { pt3dadd( 12.6368, 93.3746, 23.4961, 0.37 ) }
    dend_43 { pt3dadd( 12.68, 94.1819, 23.6142, 0.29 ) }
    dend_43 { pt3dadd( 12.7055, 94.7479, 23.6994, 0.29 ) }
    dend_43 { pt3dadd( 12.744, 95.4627, 23.7927, 0.81 ) }
    dend_43 { pt3dadd( 12.7993, 96.4231, 23.9176, 1.03 ) }
    dend_43 { pt3dadd( 12.9863, 98.5977, 24.195, 1.03 ) }
    dend_43 { pt3dadd( 13.183, 100.253, 24.4552, 1.47 ) }
    dend_43 { pt3dadd( 13.395, 101.763, 24.7413, 3.02 ) }
    dend_43 { pt3dadd( 13.5653, 102.856, 24.9847, 3.02 ) }
    dend_43 { pt3dadd( 13.5801, 102.94, 25.0057, 3.02 ) }
    dend_43 { pt3dadd( 13.8295, 104.175, 25.3436, 2.65 ) }
    dend_43 { pt3dadd( 14.178, 105.617, 25.7402, 2.65 ) }
    dend_43 { pt3dadd( 14.5337, 107.314, 26.2554, 0.52 ) }
    dend_43 { pt3dadd( 14.5459, 107.387, 26.2765, 0.52 ) }
    dend_43 { pt3dadd( 14.5655, 107.55, 26.3157, 0.66 ) }
    dend_43 { pt3dadd( 14.5719, 107.625, 26.3311, 0.66 ) }
    dend_43 { pt3dadd( 14.5891, 108.909, 26.4825, 0.66 ) }
    dend_43 { pt3dadd( 14.5755, 110.061, 26.391, 0.66 ) }
    dend_43 { pt3dadd( 14.5727, 110.514, 26.2942, 0.59 ) }
    dend_43 { pt3dadd( 14.5658, 110.801, 26.2316, 0.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 10.5297, 35.6798, 12.5321, 1.18 ) }
    dend_40 { pt3dadd( 10.1912, 36.3631, 13.352, 1.18 ) }
    dend_40 { pt3dadd( 9.52291, 37.8059, 14.9007, 0.88 ) }
    dend_40 { pt3dadd( 9.28827, 38.3497, 15.4381, 0.88 ) }
    dend_40 { pt3dadd( 9.2584, 38.4299, 15.5091, 0.88 ) }
    dend_40 { pt3dadd( 8.95637, 39.3715, 16.2617, 0.88 ) }
    dend_40 { pt3dadd( 8.94342, 39.4224, 16.2985, 0.88 ) }
    dend_40 { pt3dadd( 8.8766, 40.0745, 16.6291, 0.88 ) }
    dend_40 { pt3dadd( 8.89435, 40.2811, 16.6858, 0.88 ) }
    dend_40 { pt3dadd( 9.01118, 40.9007, 16.8339, 0.88 ) }
    dend_40 { pt3dadd( 9.12369, 41.2068, 16.9352, 0.88 ) }
    dend_40 { pt3dadd( 9.38814, 41.6834, 17.1125, 0.88 ) }
    dend_40 { pt3dadd( 9.42013, 41.7342, 17.1353, 0.88 ) }
    dend_40 { pt3dadd( 9.68263, 42.103, 17.3168, 0.88 ) }
    dend_40 { pt3dadd( 9.71764, 42.1505, 17.3416, 0.88 ) }
    dend_40 { pt3dadd( 10.8212, 43.5697, 18.1181, 1.33 ) }
    dend_40 { pt3dadd( 11.2572, 44.116, 18.4207, 1.33 ) }
    dend_40 { pt3dadd( 11.2902, 44.1605, 18.4524, 1.33 ) }
    dend_40 { pt3dadd( 11.679, 44.7192, 18.9028, 1.47 ) }
    dend_40 { pt3dadd( 11.7063, 44.7646, 18.9384, 1.47 ) }
    dend_40 { pt3dadd( 11.8999, 45.1162, 19.2041, 1.47 ) }
    dend_40 { pt3dadd( 11.9238, 45.1684, 19.2491, 1.47 ) }
    dend_40 { pt3dadd( 12.5916, 46.677, 20.6191, 1.47 ) }
    dend_40 { pt3dadd( 12.6331, 46.7679, 20.6986, 1.47 ) }
    dend_40 { pt3dadd( 13.0886, 47.7769, 21.5616, 1.47 ) }
    dend_40 { pt3dadd( 13.1178, 47.8418, 21.6172, 1.47 ) }
    dend_40 { pt3dadd( 13.7005, 49.2027, 22.7627, 1.47 ) }
    dend_40 { pt3dadd( 14.032, 49.9728, 23.3881, 0.74 ) }
    dend_40 { pt3dadd( 14.279, 50.5594, 23.8077, 0.74 ) }
    dend_40 { pt3dadd( 14.319, 50.6642, 23.8869, 1.18 ) }
    dend_40 { pt3dadd( 14.6907, 51.773, 24.7735, 1.18 ) }
    dend_40 { pt3dadd( 14.8407, 52.3955, 25.2227, 0.96 ) }
    dend_40 { pt3dadd( 14.8446, 52.4434, 25.2503, 0.96 ) }
    dend_40 { pt3dadd( 14.7487, 53.2115, 25.7956, 0.96 ) }
    dend_40 { pt3dadd( 14.5611, 53.901, 26.3917, 0.96 ) }
    dend_40 { pt3dadd( 14.53, 54.0095, 26.4917, 0.96 ) }
    dend_40 { pt3dadd( 14.38, 54.5933, 27.0426, 1.33 ) }
    dend_40 { pt3dadd( 14.2473, 55.2228, 27.6784, 1.33 ) }
    dend_40 { pt3dadd( 14.0852, 56.8255, 29.3662, 1.33 ) }
    dend_40 { pt3dadd( 14.0936, 57.7971, 30.4715, 0.52 ) }
    dend_40 { pt3dadd( 14.1908, 58.3565, 31.0498, 0.52 ) }
    dend_40 { pt3dadd( 14.3963, 58.9766, 31.632, 0.52 ) }
    dend_40 { pt3dadd( 14.4197, 59.0235, 31.6687, 0.52 ) }
    dend_40 { pt3dadd( 14.8804, 59.8303, 32.1076, 0.52 ) }
    dend_40 { pt3dadd( 14.9079, 59.887, 32.1227, 0.52 ) }
    dend_40 { pt3dadd( 15.2728, 61.1236, 32.3579, 0.52 ) }
    dend_40 { pt3dadd( 15.2921, 61.7647, 32.4854, 1.77 ) }
    dend_40 { pt3dadd( 15.1702, 62.4958, 32.6344, 1.77 ) }
    dend_40 { pt3dadd( 14.9889, 63.0327, 32.7436, 1.77 ) }
    dend_40 { pt3dadd( 14.4808, 63.9629, 32.9344, 0.66 ) }
    dend_40 { pt3dadd( 14.0925, 64.4459, 33.0758, 0.66 ) }
    dend_40 { pt3dadd( 13.5839, 64.8504, 33.248, 0.66 ) }
    dend_40 { pt3dadd( 13.46, 64.9265, 33.2803, 0.66 ) }
    dend_40 { pt3dadd( 13.0462, 65.1504, 33.3629, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_40 { pt3dadd( 12.9372, 65.2277, 33.3845, 0.52 ) }
    dend_40 { pt3dadd( 12.0238, 66.0392, 33.5452, 0.52 ) }
    dend_40 { pt3dadd( 11.9282, 66.1347, 33.5645, 0.52 ) }
    dend_40 { pt3dadd( 11.3197, 66.8141, 33.6968, 0.22 ) }
    dend_40 { pt3dadd( 10.6824, 67.5763, 33.8316, 0.22 ) }
    dend_40 { pt3dadd( 9.67254, 68.9456, 34.0294, 0.22 ) }
    dend_40 { pt3dadd( 9.52298, 69.1746, 34.0501, 0.88 ) }
    dend_40 { pt3dadd( 10.2402, 76.8845, 39.0228, 0.88 ) }
    dend_40 { pt3dadd( 9.65953, 84.7943, 43.715, 0.88 ) }
    dend_40 { pt3dadd( 10.3429, 92.2042, 49.0892, 0.88 ) }
    dend_40 { pt3dadd( 11.0807, 99.5489, 54.5368, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 11/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -47.998, 0.385912, -9.53124, 0.81 ) }
    dend_38 { pt3dadd( -48.2498, 0.302809, -9.78605, 0.81 ) }
    dend_38 { pt3dadd( -49.136, 0.0222853, -10.7413, 0.74 ) }
    dend_38 { pt3dadd( -49.9363, -0.183444, -11.5546, 0.74 ) }
    dend_38 { pt3dadd( -51.8557, -0.546654, -13.281, 1.69 ) }
    dend_38 { pt3dadd( -52.4819, -0.624663, -13.83, 2.14 ) }
    dend_38 { pt3dadd( -52.8631, -0.657461, -14.1539, 2.14 ) }
    dend_38 { pt3dadd( -55.2116, -0.710821, -16.1625, 0.66 ) }
    dend_38 { pt3dadd( -55.988, -0.698919, -16.8588, 0.52 ) }
    dend_38 { pt3dadd( -57.1123, -0.638625, -17.8767, 0.52 ) }
    dend_38 { pt3dadd( -58.4881, -0.508711, -19.0723, 0.52 ) }
    dend_38 { pt3dadd( -58.8356, -0.464219, -19.4345, 1.33 ) }
    dend_38 { pt3dadd( -59.8567, -0.296218, -20.6444, 1.84 ) }
    dend_38 { pt3dadd( -61.023, 0.0224943, -22.1787, 0.29 ) }
    dend_38 { pt3dadd( -62.0516, 0.391311, -23.7314, 0.29 ) }
    dend_38 { pt3dadd( -62.0901, 0.411003, -23.7978, 0.29 ) }
    dend_38 { pt3dadd( -63.4544, 1.33231, -26.2316, 0.29 ) }
    dend_38 { pt3dadd( -63.4885, 1.36314, -26.2967, 0.29 ) }
    dend_38 { pt3dadd( -64.0258, 2.00564, -27.3597, 0.22 ) }
    dend_38 { pt3dadd( -64.2493, 2.39258, -27.8518, 0.22 ) }
    dend_38 { pt3dadd( -64.4706, 2.95259, -28.5254, 1.4 ) }
    dend_38 { pt3dadd( -64.4945, 3.00675, -28.5806, 1.4 ) }
    dend_38 { pt3dadd( -65.3565, 4.58267, -29.4613, 2.58 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -47.998, 0.385912, -9.53124, 0.52 ) }
    dend_33 { pt3dadd( -48.681, 0.910444, -9.76982, 0.52 ) }
    dend_33 { pt3dadd( -48.7466, 0.958784, -9.78698, 0.52 ) }
    dend_33 { pt3dadd( -49.1131, 1.22226, -9.87136, 0.52 ) }
    dend_33 { pt3dadd( -49.1638, 1.25744, -9.88186, 0.52 ) }
    dend_33 { pt3dadd( -50.0299, 1.83394, -10.0432, 0.52 ) }
    dend_33 { pt3dadd( -50.1273, 1.89681, -10.0601, 0.52 ) }
    dend_33 { pt3dadd( -50.7888, 2.28109, -10.1098, 0.52 ) }
    dend_33 { pt3dadd( -50.8434, 2.30985, -10.1184, 0.52 ) }
    dend_33 { pt3dadd( -51.0491, 2.40092, -10.1737, 0.81 ) }
    dend_33 { pt3dadd( -51.3693, 2.53097, -10.2767, 1.03 ) }
    dend_33 { pt3dadd( -51.4243, 2.55105, -10.2972, 1.03 ) }
    dend_33 { pt3dadd( -52.0609, 2.77588, -10.5411, 1.03 ) }
    dend_33 { pt3dadd( -52.8107, 3.02844, -10.8307, 0.44 ) }
    dend_33 { pt3dadd( -53.4268, 3.23328, -11.0562, 0.29 ) }
    dend_33 { pt3dadd( -54.7259, 3.64553, -11.5017, 0.22 ) }
    dend_33 { pt3dadd( -55.4605, 3.8776, -11.7521, 1.33 ) }
    dend_33 { pt3dadd( -55.5028, 3.89095, -11.7659, 1.33 ) }
    dend_33 { pt3dadd( -55.9224, 4.02228, -11.8892, 2.06 ) }
    dend_33 { pt3dadd( -56.4832, 4.19907, -11.995, 2.28 ) }
    dend_33 { pt3dadd( -56.8617, 4.31654, -12.044, 2.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_26 (entry count 55/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 10.1712, 21.5806, -3.07033, 0.88 ) }
    dend_31 { pt3dadd( 10.5936, 22.2173, -3.22901, 0.88 ) }
    dend_31 { pt3dadd( 11.0884, 22.8951, -3.47282, 0.81 ) }
    dend_31 { pt3dadd( 11.1538, 22.9548, -3.50035, 0.81 ) }
    dend_31 { pt3dadd( 11.7421, 23.4004, -3.73124, 0.81 ) }
    dend_31 { pt3dadd( 11.7958, 23.4314, -3.76166, 0.81 ) }
    dend_31 { pt3dadd( 12.6707, 23.9121, -4.30654, 1.25 ) }
    dend_31 { pt3dadd( 12.777, 23.9634, -4.39275, 1.25 ) }
    dend_31 { pt3dadd( 13.6887, 24.4886, -5.21372, 1.25 ) }
    dend_31 { pt3dadd( 13.7255, 24.5156, -5.25328, 1.25 ) }
    dend_31 { pt3dadd( 14.7659, 25.4819, -6.51759, 0.66 ) }
    dend_31 { pt3dadd( 15.0991, 25.8591, -6.93958, 0.66 ) }
    dend_31 { pt3dadd( 15.7442, 26.7423, -7.80275, 1.03 ) }
    dend_31 { pt3dadd( 16.3377, 27.7533, -8.65833, 1.03 ) }
    dend_31 { pt3dadd( 16.8184, 28.7907, -9.4308, 0.88 ) }
    dend_31 { pt3dadd( 17.0741, 29.4224, -9.82407, 0.66 ) }
    dend_31 { pt3dadd( 17.2623, 29.9769, -10.0803, 0.66 ) }
    dend_31 { pt3dadd( 17.2792, 30.0311, -10.1053, 0.66 ) }
    dend_31 { pt3dadd( 17.7641, 31.7425, -10.8222, 0.66 ) }
    dend_31 { pt3dadd( 17.7776, 31.797, -10.8488, 0.66 ) }
    dend_31 { pt3dadd( 17.9189, 32.4907, -11.1845, 1.25 ) }
    dend_31 { pt3dadd( 18.0316, 33.2143, -11.5576, 1.69 ) }
    dend_31 { pt3dadd( 18.1842, 34.7138, -12.301, 1.84 ) }
    dend_31 { pt3dadd( 18.2105, 35.1304, -12.4891, 1.84 ) }
    dend_31 { pt3dadd( 18.186, 36.3611, -12.9727, 1.4 ) }
    dend_31 { pt3dadd( 18.1514, 36.9134, -13.1843, 0.96 ) }
    dend_31 { pt3dadd( 18.0751, 37.5845, -13.422, 0.81 ) }
    dend_31 { pt3dadd( 17.9099, 38.644, -13.7309, 0.66 ) }
    dend_31 { pt3dadd( 17.7627, 39.4668, -13.8951, 0.59 ) }
    dend_31 { pt3dadd( 17.5846, 40.5017, -14.0643, 0.59 ) }
    dend_31 { pt3dadd( 17.4019, 41.7556, -14.2138, 0.59 ) }
    dend_31 { pt3dadd( 17.3053, 42.6379, -14.3121, 1.33 ) }
    dend_31 { pt3dadd( 17.2317, 43.619, -14.4521, 2.06 ) }
    dend_31 { pt3dadd( 17.1964, 44.7907, -14.6658, 2.73 ) }
    dend_31 { pt3dadd( 17.2316, 46.1769, -14.9415, 3.17 ) }
    dend_31 { pt3dadd( 17.3136, 47.3174, -15.1754, 3.17 ) }
    dend_31 { pt3dadd( 17.4228, 48.4189, -15.3908, 2.5 ) }
    dend_31 { pt3dadd( 17.6416, 50.121, -15.7583, 0.88 ) }
    dend_31 { pt3dadd( 17.8687, 51.4637, -16.07, 0.52 ) }
    dend_31 { pt3dadd( 18.1126, 52.6381, -16.3608, 0.44 ) }
    dend_31 { pt3dadd( 18.1275, 52.6965, -16.3769, 0.44 ) }
    dend_31 { pt3dadd( 18.418, 53.6648, -16.6627, 0.44 ) }
    dend_31 { pt3dadd( 18.4637, 53.8003, -16.6988, 0.44 ) }
    dend_31 { pt3dadd( 18.7705, 54.7011, -16.8928, 0.44 ) }
    dend_31 { pt3dadd( 18.7959, 54.7894, -16.9159, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_31 { pt3dadd( 18.9948, 55.7673, -17.2225, 0.44 ) }
    dend_31 { pt3dadd( 19.0006, 55.8251, -17.2452, 0.44 ) }
    dend_31 { pt3dadd( 18.9996, 57.0995, -17.7695, 0.44 ) }
    dend_31 { pt3dadd( 18.8843, 58.3366, -18.285, 1.18 ) }
    dend_31 { pt3dadd( 18.7606, 59.1182, -18.6157, 1.77 ) }
    dend_31 { pt3dadd( 18.6483, 59.6896, -18.9101, 2.06 ) }
    dend_31 { pt3dadd( 18.2627, 61.3661, -19.8472, 0.37 ) }
    dend_31 { pt3dadd( 17.992, 62.5458, -20.5511, 0.37 ) }
    dend_31 { pt3dadd( 17.6808, 63.8564, -21.3863, 0.37 ) }
    dend_31 { pt3dadd( 17.6709, 63.9008, -21.4135, 0.37 ) }
    dend_31 { pt3dadd( 17.2183, 66.2157, -22.7987, 1.77 ) }
    dend_31 { pt3dadd( 17.0861, 67.0505, -23.2967, 2.36 ) }
    dend_31 { pt3dadd( 17.0181, 67.6239, -23.6136, 1.55 ) }
    dend_31 { pt3dadd( 16.9943, 68.0656, -23.8379, 0.29 ) }
    dend_31 { pt3dadd( 17.0358, 69.3455, -24.2819, 0.29 ) }
    dend_31 { pt3dadd( 17.0917, 70.1349, -24.4566, 0.96 ) }
    dend_31 { pt3dadd( 17.0998, 70.206, -24.4616, 0.96 ) }
    dend_31 { pt3dadd( 17.2166, 71.0482, -24.5124, 0.96 ) }
    dend_31 { pt3dadd( 17.3582, 71.8739, -24.6401, 0.15 ) }
    dend_31 { pt3dadd( 17.6567, 73.5339, -25.0261, 0.15 ) }
    dend_31 { pt3dadd( 17.668, 73.6014, -25.0464, 0.66 ) }
    dend_31 { pt3dadd( 17.6851, 73.7192, -25.0842, 0.66 ) }
    dend_31 { pt3dadd( 17.7285, 74.2374, -25.3537, 0.66 ) }
    dend_31 { pt3dadd( 17.7548, 76.1219, -26.5071, 0.22 ) }
    dend_31 { pt3dadd( 17.6666, 78.2986, -27.9973, 0.22 ) }
    dend_31 { pt3dadd( 17.6131, 79.0146, -28.5264, 1.4 ) }
    dend_31 { pt3dadd( 17.5567, 79.6415, -28.9837, 1.69 ) }
    dend_31 { pt3dadd( 17.2673, 82.4313, -31.003, 0.22 ) }
    dend_31 { pt3dadd( 17.0848, 84.0176, -32.1546, 0.22 ) }
    dend_31 { pt3dadd( 16.9366, 85.3721, -33.0721, 0.29 ) }
    dend_31 { pt3dadd( 16.8965, 85.9778, -33.5278, 1.47 ) }
    dend_31 { pt3dadd( 16.8885, 86.6043, -33.9891, 1.69 ) }
    dend_31 { pt3dadd( 16.8923, 86.6543, -34.0251, 1.69 ) }
    dend_31 { pt3dadd( 17.0951, 87.6876, -34.6667, 0.15 ) }
    dend_31 { pt3dadd( 17.474, 88.8537, -35.5567, 0.15 ) }
    dend_31 { pt3dadd( 17.8397, 89.8016, -36.2763, 0.15 ) }
    dend_31 { pt3dadd( 17.8397, 89.8016, -36.2763, 1.03 ) }
    dend_31 { pt3dadd( 18.1871, 90.7794, -36.9608, 1.84 ) }
    dend_31 { pt3dadd( 18.2022, 90.8303, -36.9925, 1.84 ) }
    dend_31 { pt3dadd( 18.4955, 92.1368, -37.6691, 1.84 ) }
    dend_31 { pt3dadd( 18.5915, 93.0328, -38.0561, 0.15 ) }
    dend_31 { pt3dadd( 18.5944, 93.0835, -38.0732, 0.15 ) }
    dend_31 { pt3dadd( 18.6869, 95.3037, -38.7124, 0.15 ) }
    dend_31 { pt3dadd( 18.6895, 95.3901, -38.7317, 0.74 ) }
    dend_31 { pt3dadd( 18.72, 96.1666, -38.8782, 0.74 ) }
    dend_31 { pt3dadd( 18.8672, 98.834, -39.2526, 0.22 ) }
    dend_31 { pt3dadd( 18.9388, 99.3045, -39.3775, 0.74 ) }
    dend_31 { pt3dadd( 19.0101, 99.5157, -39.4568, 0.74 ) }
    dend_31 { pt3dadd( 19.3621, 100.164, -39.8056, 0.22 ) }
    dend_31 { pt3dadd( 19.693, 100.656, -40.1089, 0.96 ) }
    dend_31 { pt3dadd( 20.0237, 101.04, -40.4058, 1.18 ) }
    dend_31 { pt3dadd( 21.8323, 102.835, -42.0715, 0.15 ) }
    dend_31 { pt3dadd( 23.1306, 104.153, -43.3513, 0.15 ) }
    dend_31 { pt3dadd( 23.5586, 104.586, -43.7883, 0.88 ) }
    dend_31 { pt3dadd( 23.9383, 104.969, -44.1862, 0.88 ) }
    dend_31 { pt3dadd( 25.029, 106.094, -45.3486, 0.22 ) }
    dend_31 { pt3dadd( 25.3827, 106.511, -45.7528, 0.88 ) }
    dend_31 { pt3dadd( 25.727, 106.995, -46.1558, 1.11 ) }
    dend_31 { pt3dadd( 25.7575, 107.042, -46.1976, 1.11 ) }
    dend_31 { pt3dadd( 25.9631, 107.391, -46.4678, 1.11 ) }
    dend_31 { pt3dadd( 25.9877, 107.436, -46.5007, 1.11 ) }
    dend_31 { pt3dadd( 27.1545, 109.833, -48.1044, 0.15 ) }
    dend_31 { pt3dadd( 27.1777, 109.88, -48.1366, 0.15 ) }
    dend_31 { pt3dadd( 27.4186, 110.359, -48.485, 0.74 ) }
    dend_31 { pt3dadd( 27.7032, 110.937, -48.9114, 0.74 ) }
    dend_31 { pt3dadd( 27.7253, 110.982, -48.9462, 0.74 ) }
    dend_31 { pt3dadd( 28.1933, 112.017, -49.706, 0.74 ) }
    dend_31 { pt3dadd( 28.2097, 112.069, -49.7353, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 68/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 10.1712, 21.5806, -3.07033, 1.4 ) }
    dend_30 { pt3dadd( 10.2741, 21.423, -3.24383, 1.4 ) }
    dend_30 { pt3dadd( 10.9261, 20.4416, -4.18003, 1.4 ) }
    dend_30 { pt3dadd( 11.1991, 19.9911, -4.53593, 0.96 ) }
    dend_30 { pt3dadd( 11.5918, 19.2294, -5.02842, 0.96 ) }
    dend_30 { pt3dadd( 11.6154, 19.1704, -5.06976, 0.96 ) }
    dend_30 { pt3dadd( 11.8514, 18.4191, -5.65152, 0.96 ) }
    dend_30 { pt3dadd( 11.9881, 17.8777, -6.06872, 0.96 ) }
    dend_30 { pt3dadd( 12.158, 17.0041, -6.88641, 0.96 ) }
    dend_30 { pt3dadd( 12.289, 16.1274, -7.9144, 0.96 ) }
    dend_30 { pt3dadd( 12.4422, 15.0301, -9.42346, 1.25 ) }
    dend_30 { pt3dadd( 12.56, 14.3529, -10.4471, 1.25 ) }
    dend_30 { pt3dadd( 12.6473, 13.9308, -11.1598, 1.25 ) }
    dend_30 { pt3dadd( 12.9831, 12.7335, -13.3303, 1.03 ) }
    dend_30 { pt3dadd( 13.2428, 12.0887, -14.5744, 1.03 ) }
    dend_30 { pt3dadd( 13.4552, 11.7045, -15.3345, 1.03 ) }
    dend_30 { pt3dadd( 13.7481, 11.2933, -16.107, 1.25 ) }
    dend_30 { pt3dadd( 14.2295, 10.7332, -17.1312, 1.25 ) }
    dend_30 { pt3dadd( 14.5608, 10.3597, -17.8407, 1.25 ) }
    dend_30 { pt3dadd( 14.8449, 10.0021, -18.4217, 1.25 ) }
    dend_30 { pt3dadd( 14.8625, 9.96702, -18.4852, 1.25 ) }
    dend_30 { pt3dadd( 14.9342, 9.36835, -19.6028, 1.25 ) }
    dend_30 { pt3dadd( 14.8263, 8.85435, -20.4979, 0.88 ) }
    dend_30 { pt3dadd( 14.4987, 7.96437, -21.9647, 1.33 ) }
    dend_30 { pt3dadd( 14.2894, 7.52134, -22.6764, 1.33 ) }
    dend_30 { pt3dadd( 13.7354, 6.43594, -24.3808, 1.03 ) }
    dend_30 { pt3dadd( 13.4666, 5.90363, -25.1673, 0.74 ) }
    dend_30 { pt3dadd( 13.2243, 5.36929, -25.9369, 0.74 ) }
    dend_30 { pt3dadd( 13.0429, 4.74417, -26.8968, 0.74 ) }
    dend_30 { pt3dadd( 13.0583, 4.71838, -26.9545, 0.74 ) }
    dend_30 { pt3dadd( 13.3147, 4.5504, -27.5197, 1.03 ) }
    dend_30 { pt3dadd( 13.372, 4.52175, -27.6422, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( 13.9414, 4.27776, -29.1013, 1.03 ) }
    dend_30 { pt3dadd( 14.248, 4.16032, -29.9239, 1.25 ) }
    dend_30 { pt3dadd( 14.7266, 3.93787, -31.3476, 1.33 ) }
    dend_30 { pt3dadd( 15.2344, 3.64526, -33.0166, 1.33 ) }
    dend_30 { pt3dadd( 15.6467, 3.31482, -34.6485, 1.33 ) }
    dend_30 { pt3dadd( 15.8729, 3.07067, -35.7579, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 6/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.1712, 21.5806, -3.07033, 1.55 ) }
    dend_27 { pt3dadd( 10.5517, 21.7521, -3.02971, 1.55 ) }
    dend_27 { pt3dadd( 11.4261, 22.1461, -2.9364, 1.55 ) }
    dend_27 { pt3dadd( 12.752, 22.7436, -2.7949, 1.33 ) }
    dend_27 { pt3dadd( 13.7544, 23.1953, -2.68791, 1.62 ) }
    dend_27 { pt3dadd( 14.8275, 23.6788, -2.57339, 1.84 ) }
    dend_27 { pt3dadd( 14.8821, 23.7035, -2.56756, 1.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 26.4015, -177.546, 9.82539, 0.22 ) }
    dend_21 { pt3dadd( 26.5695, -179.427, 7.56205, 0.22 ) }
    dend_21 { pt3dadd( 26.5751, -179.47, 7.52233, 0.22 ) }
    dend_21 { pt3dadd( 26.7023, -180.156, 7.02078, 0.22 ) }
    dend_21 { pt3dadd( 26.764, -180.42, 6.87105, 0.22 ) }
    dend_21 { pt3dadd( 26.836, -180.701, 6.74532, 0.96 ) }
    dend_21 { pt3dadd( 27.0548, -181.5, 6.44621, 1.03 ) }
    dend_21 { pt3dadd( 27.2108, -181.988, 6.36602, 1.4 ) }
    dend_21 { pt3dadd( 27.3934, -182.537, 6.26925, 1.69 ) }
    dend_21 { pt3dadd( 27.6343, -183.242, 6.14247, 1.47 ) }
    dend_21 { pt3dadd( 27.8354, -183.834, 6.03461, 0.88 ) }
    dend_21 { pt3dadd( 28.0764, -184.601, 5.90956, 0.66 ) }
    dend_21 { pt3dadd( 28.4541, -185.868, 5.73038, 0.52 ) }
    dend_21 { pt3dadd( 28.4702, -185.925, 5.72253, 0.52 ) }
    dend_21 { pt3dadd( 28.6639, -186.669, 5.62586, 0.52 ) }
    dend_21 { pt3dadd( 29.0175, -188.152, 5.45231, 0.52 ) }
    dend_21 { pt3dadd( 29.3364, -189.62, 5.30831, 0.29 ) }
    dend_21 { pt3dadd( 29.4482, -190.187, 5.26769, 0.74 ) }
    dend_21 { pt3dadd( 29.5581, -190.815, 5.23887, 1.18 ) }
    dend_21 { pt3dadd( 29.6582, -191.434, 5.21694, 1.55 ) }
    dend_21 { pt3dadd( 29.7483, -192.183, 5.20125, 1.84 ) }
    dend_21 { pt3dadd( 29.7887, -192.808, 5.20055, 1.99 ) }
    dend_21 { pt3dadd( 29.8028, -193.404, 5.19957, 1.62 ) }
    dend_21 { pt3dadd( 29.7986, -194.282, 5.19981, 0.66 ) }
    dend_21 { pt3dadd( 29.775, -195.165, 5.20137, 0.44 ) }
    dend_21 { pt3dadd( 29.7279, -196.323, 5.20498, 0.37 ) }
    dend_21 { pt3dadd( 29.6582, -197.52, 5.20498, 0.29 ) }
    dend_21 { pt3dadd( 29.6156, -198.074, 5.2033, 0.29 ) }
    dend_21 { pt3dadd( 29.5854, -198.394, 5.19216, 0.44 ) }
    dend_21 { pt3dadd( 29.5514, -198.709, 5.16971, 0.44 ) }
    dend_21 { pt3dadd( 29.5048, -199.143, 5.1087, 0.81 ) }
    dend_21 { pt3dadd( 29.4735, -199.543, 5.02289, 0.81 ) }
    dend_21 { pt3dadd( 29.4348, -199.898, 4.93566, 0.81 ) }
    dend_21 { pt3dadd( 29.3296, -200.649, 4.75692, 0.59 ) }
    dend_21 { pt3dadd( 29.244, -201.085, 4.66171, 0.52 ) }
    dend_21 { pt3dadd( 29.096, -201.684, 4.5452, 0.15 ) }
    dend_21 { pt3dadd( 28.8952, -202.392, 4.42637, 0.15 ) }
    dend_21 { pt3dadd( 28.5332, -203.531, 4.24258, 0.15 ) }
    dend_21 { pt3dadd( 28.3448, -204.08, 4.16463, 0.74 ) }
    dend_21 { pt3dadd( 28.1132, -204.799, 4.08898, 1.25 ) }
    dend_21 { pt3dadd( 27.9715, -205.289, 4.03186, 1.47 ) }
    dend_21 { pt3dadd( 27.8797, -205.647, 3.98936, 1.33 ) }
    dend_21 { pt3dadd( 27.7211, -206.429, 3.88426, 0.22 ) }
    dend_21 { pt3dadd( 27.5711, -207.565, 3.72118, 0.22 ) }
    dend_21 { pt3dadd( 27.4534, -209.049, 3.50917, 0.22 ) }
    dend_21 { pt3dadd( 27.4439, -209.582, 3.43983, 0.74 ) }
    dend_21 { pt3dadd( 27.4548, -210.021, 3.39001, 0.96 ) }
    dend_21 { pt3dadd( 27.4929, -210.597, 3.33842, 0.96 ) }
    dend_21 { pt3dadd( 27.5537, -211.102, 3.31091, 0.81 ) }
    dend_21 { pt3dadd( 27.6237, -211.537, 3.29186, 0.22 ) }
    dend_21 { pt3dadd( 27.8221, -212.648, 3.26547, 0.22 ) }
    dend_21 { pt3dadd( 27.8784, -212.968, 3.26557, 1.03 ) }
    dend_21 { pt3dadd( 27.995, -213.61, 3.27839, 1.55 ) }
    dend_21 { pt3dadd( 28.0875, -214.076, 3.29299, 1.92 ) }
    dend_21 { pt3dadd( 28.1514, -214.386, 3.30479, 1.92 ) }
    dend_21 { pt3dadd( 28.2601, -214.886, 3.327, 1.92 ) }
    dend_21 { pt3dadd( 28.473, -215.804, 3.37053, 0.22 ) }
    dend_21 { pt3dadd( 28.8509, -217.389, 3.44462, 0.22 ) }
    dend_21 { pt3dadd( 29.2341, -218.979, 3.51753, 0.22 ) }
    dend_21 { pt3dadd( 29.248, -219.037, 3.51875, 0.22 ) }
    dend_21 { pt3dadd( 29.5138, -220.118, 3.51909, 0.22 ) }
    dend_21 { pt3dadd( 29.7844, -221.152, 3.49993, 2.21 ) }
    dend_21 { pt3dadd( 29.987, -221.9, 3.47313, 2.73 ) }
    dend_21 { pt3dadd( 30.086, -222.267, 3.45328, 2.73 ) }
    dend_21 { pt3dadd( 30.527, -223.922, 3.36965, 0.22 ) }
    dend_21 { pt3dadd( 30.7954, -224.955, 3.32239, 0.22 ) }
    dend_21 { pt3dadd( 31.1606, -226.425, 3.26115, 0.22 ) }
    dend_21 { pt3dadd( 31.4958, -227.843, 3.21466, 0.22 ) }
    dend_21 { pt3dadd( 31.5084, -227.902, 3.21543, 0.22 ) }
    dend_21 { pt3dadd( 31.6276, -228.577, 3.26125, 0.22 ) }
    dend_21 { pt3dadd( 31.6619, -228.851, 3.30047, 1.03 ) }
    dend_21 { pt3dadd( 31.7007, -229.544, 3.42895, 1.47 ) }
    dend_21 { pt3dadd( 31.6974, -229.845, 3.49551, 1.47 ) }
    dend_21 { pt3dadd( 31.6475, -231.007, 3.76541, 0.15 ) }
    dend_21 { pt3dadd( 31.5898, -231.987, 3.9768, 0.15 ) }
    dend_21 { pt3dadd( 31.5418, -232.54, 4.09763, 0.15 ) }
    dend_21 { pt3dadd( 31.5153, -232.875, 4.16741, 0.74 ) }
    dend_21 { pt3dadd( 31.4937, -233.363, 4.25223, 0.74 ) }
    dend_21 { pt3dadd( 31.5046, -233.812, 4.31367, 0.88 ) }
    dend_21 { pt3dadd( 31.5327, -234.205, 4.3705, 0.88 ) }
    dend_21 { pt3dadd( 31.616, -234.958, 4.49984, 0.15 ) }
    dend_21 { pt3dadd( 31.7665, -236.008, 4.69171, 0.15 ) }
    dend_21 { pt3dadd( 32.0316, -237.512, 4.97186, 0.15 ) }
    dend_21 { pt3dadd( 32.3979, -239.268, 5.30443, 0.15 ) }
    dend_21 { pt3dadd( 32.601, -240.097, 5.47716, 0.88 ) }
    dend_21 { pt3dadd( 32.7659, -240.703, 5.61055, 1.18 ) }
    dend_21 { pt3dadd( 32.9241, -241.224, 5.72512, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 33.0401, -241.617, 5.81189, 1.47 ) }
    dend_21 { pt3dadd( 33.1668, -242.064, 5.90577, 1.18 ) }
    dend_21 { pt3dadd( 33.3533, -242.846, 6.03294, 0.44 ) }
    dend_21 { pt3dadd( 33.465, -243.39, 6.09773, 0.22 ) }
    dend_21 { pt3dadd( 33.6364, -244.387, 6.20659, 0.22 ) }
    dend_21 { pt3dadd( 33.8666, -245.925, 6.3973, 0.22 ) }
    dend_21 { pt3dadd( 33.8785, -246.008, 6.40795, 0.22 ) }
    dend_21 { pt3dadd( 34.0518, -247.18, 6.5753, 0.22 ) }
    dend_21 { pt3dadd( 34.102, -247.503, 6.62182, 0.52 ) }
    dend_21 { pt3dadd( 34.2255, -248.189, 6.72708, 0.52 ) }
    dend_21 { pt3dadd( 34.3918, -249.03, 6.86417, 1.25 ) }
    dend_21 { pt3dadd( 34.5273, -249.624, 6.95986, 1.84 ) }
    dend_21 { pt3dadd( 34.7174, -250.414, 7.06632, 2.21 ) }
    dend_21 { pt3dadd( 34.8706, -250.958, 7.11979, 1.99 ) }
    dend_21 { pt3dadd( 35.163, -251.928, 7.18656, 0.52 ) }
    dend_21 { pt3dadd( 35.33, -252.47, 7.2106, 0.52 ) }
    dend_21 { pt3dadd( 35.5161, -253.068, 7.21258, 0.22 ) }
    dend_21 { pt3dadd( 35.8258, -254.069, 7.20001, 0.22 ) }
    dend_21 { pt3dadd( 36.3096, -255.613, 7.13849, 0.22 ) }
    dend_21 { pt3dadd( 36.4389, -255.999, 7.12774, 1.25 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 20/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 26.4015, -177.546, 9.82539, 0.52 ) }
    dend_20 { pt3dadd( 26.9182, -177.66, 10.0184, 0.52 ) }
    dend_20 { pt3dadd( 27.7796, -177.825, 10.346, 0.52 ) }
    dend_20 { pt3dadd( 28.9659, -178.037, 10.7976, 0.52 ) }
    dend_20 { pt3dadd( 29.8074, -178.195, 11.1058, 0.74 ) }
    dend_20 { pt3dadd( 30.6451, -178.356, 11.4072, 0.74 ) }
    dend_20 { pt3dadd( 31.6567, -178.567, 11.7993, 0.44 ) }
    dend_20 { pt3dadd( 32.4281, -178.736, 12.1159, 0.44 ) }
    dend_20 { pt3dadd( 32.4878, -178.752, 12.141, 0.44 ) }
    dend_20 { pt3dadd( 33.0382, -178.963, 12.3575, 0.37 ) }
    dend_20 { pt3dadd( 33.0939, -178.99, 12.3832, 0.37 ) }
    dend_20 { pt3dadd( 33.8771, -179.433, 12.7116, 0.59 ) }
    dend_20 { pt3dadd( 34.4377, -179.818, 12.885, 0.88 ) }
    dend_20 { pt3dadd( 34.6787, -180.01, 12.9542, 1.11 ) }
    dend_20 { pt3dadd( 35.0938, -180.366, 13.0589, 1.25 ) }
    dend_20 { pt3dadd( 35.1437, -180.411, 13.0691, 1.25 ) }
    dend_20 { pt3dadd( 35.5644, -180.803, 13.1319, 1.25 ) }
    dend_20 { pt3dadd( 36.0478, -181.242, 13.173, 0.88 ) }
    dend_20 { pt3dadd( 36.5764, -181.7, 13.2683, 0.59 ) }
    dend_20 { pt3dadd( 36.9562, -182.025, 13.3863, 0.52 ) }
    dend_20 { pt3dadd( 37.5183, -182.498, 13.6086, 0.29 ) }
    dend_20 { pt3dadd( 38.0684, -182.963, 13.8539, 0.29 ) }
    dend_20 { pt3dadd( 39.1546, -183.891, 14.3916, 0.29 ) }
    dend_20 { pt3dadd( 39.993, -184.609, 14.8943, 1.11 ) }
    dend_20 { pt3dadd( 40.6826, -185.216, 15.3554, 1.47 ) }
    dend_20 { pt3dadd( 41.0511, -185.544, 15.6101, 1.84 ) }
    dend_20 { pt3dadd( 41.56, -186.014, 16.0083, 1.99 ) }
    dend_20 { pt3dadd( 42.1053, -186.529, 16.4577, 1.47 ) }
    dend_20 { pt3dadd( 42.9632, -187.373, 17.1817, 0.88 ) }
    dend_20 { pt3dadd( 43.4225, -187.799, 17.5178, 0.88 ) }
    dend_20 { pt3dadd( 44.0444, -188.338, 17.9388, 0.88 ) }
    dend_20 { pt3dadd( 44.9561, -189.025, 18.6005, 0.29 ) }
    dend_20 { pt3dadd( 45.3833, -189.297, 18.9206, 0.29 ) }
    dend_20 { pt3dadd( 45.4384, -189.325, 18.9656, 0.29 ) }
    dend_20 { pt3dadd( 46.0094, -189.561, 19.4302, 0.29 ) }
    dend_20 { pt3dadd( 46.0583, -189.578, 19.4721, 0.29 ) }
    dend_20 { pt3dadd( 47.0973, -189.93, 20.3512, 0.29 ) }
    dend_20 { pt3dadd( 47.2084, -189.969, 20.4321, 0.29 ) }
    dend_20 { pt3dadd( 48.147, -190.364, 21.1212, 0.44 ) }
    dend_20 { pt3dadd( 48.6616, -190.596, 21.4732, 1.03 ) }
    dend_20 { pt3dadd( 49.0963, -190.823, 21.7477, 1.33 ) }
    dend_20 { pt3dadd( 49.5365, -191.072, 21.9845, 1.33 ) }
    dend_20 { pt3dadd( 50.1607, -191.467, 22.2446, 0.88 ) }
    dend_20 { pt3dadd( 50.9365, -191.983, 22.5195, 0.29 ) }
    dend_20 { pt3dadd( 51.5075, -192.39, 22.669, 0.22 ) }
    dend_20 { pt3dadd( 51.9408, -192.739, 22.782, 0.22 ) }
    dend_20 { pt3dadd( 52.2376, -193.004, 22.8565, 0.44 ) }
    dend_20 { pt3dadd( 52.4847, -193.251, 22.9108, 0.66 ) }
    dend_20 { pt3dadd( 52.7956, -193.585, 22.9588, 0.66 ) }
    dend_20 { pt3dadd( 53.1221, -193.941, 22.9809, 0.66 ) }
    dend_20 { pt3dadd( 53.6245, -194.474, 23.015, 0.29 ) }
    dend_20 { pt3dadd( 53.6797, -194.526, 23.0302, 0.29 ) }
    dend_20 { pt3dadd( 54.0621, -194.885, 23.2194, 0.22 ) }
    dend_20 { pt3dadd( 54.596, -195.383, 23.5676, 0.22 ) }
    dend_20 { pt3dadd( 54.6826, -195.464, 23.6336, 0.22 ) }
    dend_20 { pt3dadd( 55.2676, -196.006, 24.1109, 0.22 ) }
    dend_20 { pt3dadd( 56.3038, -197.001, 24.9475, 1.18 ) }
    dend_20 { pt3dadd( 56.8154, -197.519, 25.3576, 1.62 ) }
    dend_20 { pt3dadd( 56.9427, -197.657, 25.4681, 1.84 ) }
    dend_20 { pt3dadd( 57.1989, -197.959, 25.7053, 1.84 ) }
    dend_20 { pt3dadd( 57.5995, -198.427, 26.0371, 1.55 ) }
    dend_20 { pt3dadd( 58.1597, -199.089, 26.4415, 0.44 ) }
    dend_20 { pt3dadd( 58.2025, -199.136, 26.4651, 0.44 ) }
    dend_20 { pt3dadd( 58.8405, -199.813, 26.8226, 0.44 ) }
    dend_20 { pt3dadd( 58.8845, -199.86, 26.845, 0.44 ) }
    dend_20 { pt3dadd( 59.8903, -200.952, 27.3208, 0.29 ) }
    dend_20 { pt3dadd( 60.8212, -201.972, 27.7178, 0.29 ) }
    dend_20 { pt3dadd( 61.499, -202.725, 27.9656, 0.22 ) }
    dend_20 { pt3dadd( 61.581, -202.819, 27.9894, 0.22 ) }
    dend_20 { pt3dadd( 62.3319, -203.723, 28.1242, 0.22 ) }
    dend_20 { pt3dadd( 62.6184, -204.109, 28.1571, 0.66 ) }
    dend_20 { pt3dadd( 62.8734, -204.502, 28.1641, 0.96 ) }
    dend_20 { pt3dadd( 63.084, -204.86, 28.1575, 0.52 ) }
    dend_20 { pt3dadd( 63.2712, -205.212, 28.1587, 0.29 ) }
    dend_20 { pt3dadd( 63.6575, -205.989, 28.23, 0.29 ) }
    dend_20 { pt3dadd( 64.0668, -206.923, 28.3814, 0.29 ) }
    dend_20 { pt3dadd( 64.2001, -207.268, 28.4377, 0.59 ) }
    dend_20 { pt3dadd( 64.4092, -207.911, 28.5357, 0.59 ) }
    dend_20 { pt3dadd( 64.5742, -208.475, 28.6187, 0.59 ) }
    dend_20 { pt3dadd( 64.9244, -209.9, 28.813, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 65.2144, -211.355, 29.0003, 0.15 ) }
    dend_20 { pt3dadd( 65.3858, -212.433, 29.1268, 0.15 ) }
    dend_20 { pt3dadd( 65.5104, -213.51, 29.2322, 0.15 ) }
    dend_20 { pt3dadd( 65.5133, -213.589, 29.2382, 0.15 ) }
    dend_20 { pt3dadd( 65.4333, -214.368, 29.2593, 0.15 ) }
    dend_20 { pt3dadd( 65.3848, -214.525, 29.2664, 0.44 ) }
    dend_20 { pt3dadd( 65.3571, -214.588, 29.2725, 0.44 ) }
    dend_20 { pt3dadd( 65.2922, -214.72, 29.2897, 0.44 ) }
    dend_20 { pt3dadd( 64.7855, -215.732, 29.441, 0.22 ) }
    dend_20 { pt3dadd( 64.0676, -217.42, 29.6333, 0.22 ) }
    dend_20 { pt3dadd( 63.4643, -219.444, 29.7968, 0.22 ) }
    dend_20 { pt3dadd( 63.4567, -219.513, 29.8006, 0.22 ) }
    dend_20 { pt3dadd( 63.4614, -219.882, 29.8147, 1.03 ) }
    dend_20 { pt3dadd( 63.5451, -220.302, 29.8183, 1.33 ) }
    dend_20 { pt3dadd( 64.3012, -222.012, 29.7889, 0.22 ) }
    dend_20 { pt3dadd( 65.2787, -223.57, 29.7221, 0.22 ) }
    dend_20 { pt3dadd( 66.6976, -225.44, 29.5938, 0.22 ) }
    dend_20 { pt3dadd( 66.7402, -225.493, 29.5903, 0.22 ) }
    dend_20 { pt3dadd( 68.0254, -226.999, 29.501, 0.22 ) }
    dend_20 { pt3dadd( 69.272, -228.316, 29.4411, 0.22 ) }
    dend_20 { pt3dadd( 69.3232, -228.36, 29.4409, 0.22 ) }
    dend_20 { pt3dadd( 69.8167, -228.721, 29.4335, 1.47 ) }
    dend_20 { pt3dadd( 76.2584, -235.822, 31.1878, 1.47 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -16.8948, -36.4143, 37.6409, 0.22 ) }
    dend_18 { pt3dadd( -17.4314, -36.9535, 37.4839, 0.22 ) }
    dend_18 { pt3dadd( -18.1459, -37.7608, 37.296, 0.22 ) }
    dend_18 { pt3dadd( -18.2495, -37.8779, 37.2688, 0.22 ) }
    dend_18 { pt3dadd( -18.6836, -38.3684, 37.1546, 0.22 ) }
    dend_18 { pt3dadd( -18.7324, -38.4235, 37.1418, 0.22 ) }
    dend_18 { pt3dadd( -18.8948, -38.607, 37.0991, 0.44 ) }
    dend_18 { pt3dadd( -19.2591, -39.1047, 36.9943, 0.44 ) }
    dend_18 { pt3dadd( -26.0371, -45.4623, 36.556, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 32/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -16.8948, -36.4143, 37.6409, 0.29 ) }
    dend_17 { pt3dadd( -16.1733, -36.0517, 37.538, 0.29 ) }
    dend_17 { pt3dadd( -14.9669, -35.4455, 37.366, 0.29 ) }
    dend_17 { pt3dadd( -14.8679, -35.3957, 37.3519, 0.29 ) }
    dend_17 { pt3dadd( -13.8076, -34.8629, 37.2007, 0.29 ) }
    dend_17 { pt3dadd( -13.4353, -34.6758, 37.1477, 0.66 ) }
    dend_17 { pt3dadd( -12.7677, -34.3403, 37.0525, 0.66 ) }
    dend_17 { pt3dadd( -2.2637, -30.3711, 36.4745, 0.66 ) }
    dend_17 { pt3dadd( 7.70925, -25.2389, 35.1272, 0.66 ) }
    dend_17 { pt3dadd( 16.42, -18.3436, 32.6589, 0.66 ) }
    dend_17 { pt3dadd( 26.3742, -13.4168, 30.683, 0.66 ) }
    dend_17 { pt3dadd( 34.5015, -6.08637, 27.5115, 0.66 ) }
    dend_17 { pt3dadd( 42.5899, 0.350711, 22.8825, 0.66 ) }
    dend_17 { pt3dadd( 51.2809, 6.64695, 19.2389, 0.66 ) }
    dend_17 { pt3dadd( 60.8877, 12.0768, 16.7945, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.64159, -32.705, 0.417177, 1.18 ) }
    dend_13 { pt3dadd( -4.06684, -33.5722, 0.631909, 1.18 ) }
    dend_13 { pt3dadd( -3.38462, -34.6329, 0.906435, 0.66 ) }
    dend_13 { pt3dadd( -2.95789, -35.3131, 1.07998, 0.66 ) }
    dend_13 { pt3dadd( -2.74264, -35.6628, 1.16803, 0.81 ) }
    dend_13 { pt3dadd( -2.32449, -36.352, 1.336, 0.74 ) }
    dend_13 { pt3dadd( -1.66386, -37.4553, 1.59807, 0.74 ) }
    dend_13 { pt3dadd( -1.63537, -37.5059, 1.61219, 0.74 ) }
    dend_13 { pt3dadd( -1.43667, -37.8499, 1.72302, 0.96 ) }
    dend_13 { pt3dadd( -1.4021, -37.9063, 1.7398, 0.96 ) }
    dend_13 { pt3dadd( -1.20495, -38.1968, 1.81681, 0.96 ) }
    dend_13 { pt3dadd( -1.16591, -38.251, 1.83006, 0.96 ) }
    dend_13 { pt3dadd( -0.396946, -39.2753, 2.0728, 0.74 ) }
    dend_13 { pt3dadd( -0.367791, -39.3162, 2.08187, 0.74 ) }
    dend_13 { pt3dadd( 0.0748931, -39.9554, 2.21803, 0.74 ) }
    dend_13 { pt3dadd( 0.793609, -41.0672, 2.455, 0.88 ) }
    dend_13 { pt3dadd( 0.960568, -41.3518, 2.50926, 0.88 ) }
    dend_13 { pt3dadd( 0.983798, -41.3972, 2.51633, 0.88 ) }
    dend_13 { pt3dadd( 1.28133, -42.0914, 2.59198, 0.66 ) }
    dend_13 { pt3dadd( 1.30194, -42.1478, 2.59747, 0.66 ) }
    dend_13 { pt3dadd( 1.61745, -43.2022, 2.70227, 0.52 ) }
    dend_13 { pt3dadd( 1.84553, -44.1397, 2.78161, 0.52 ) }
    dend_13 { pt3dadd( 1.96912, -44.687, 2.81521, 0.88 ) }
    dend_13 { pt3dadd( 2.09115, -45.2758, 2.84377, 1.11 ) }
    dend_13 { pt3dadd( 2.27249, -46.2167, 2.91183, 1.11 ) }
    dend_13 { pt3dadd( 2.3773, -46.8121, 2.96245, 0.52 ) }
    dend_13 { pt3dadd( 2.5697, -48.1259, 3.05817, 0.52 ) }
    dend_13 { pt3dadd( 2.69854, -49.0884, 3.09707, 0.52 ) }
    dend_13 { pt3dadd( 2.78115, -49.7154, 3.10527, 0.88 ) }
    dend_13 { pt3dadd( 2.89508, -50.5838, 3.11134, 1.03 ) }
    dend_13 { pt3dadd( 3.10198, -52.061, 3.1052, 0.81 ) }
    dend_13 { pt3dadd( 3.34786, -53.5207, 3.14642, 0.66 ) }
    dend_13 { pt3dadd( 3.58829, -54.8118, 3.21514, 0.52 ) }
    dend_13 { pt3dadd( 3.77628, -55.7429, 3.2777, 0.52 ) }
    dend_13 { pt3dadd( 4.29146, -57.9648, 3.54567, 0.52 ) }
    dend_13 { pt3dadd( 4.40917, -58.4224, 3.61972, 0.52 ) }
    dend_13 { pt3dadd( 4.99809, -60.4591, 4.09195, 0.44 ) }
    dend_13 { pt3dadd( 5.38957, -61.6694, 4.46362, 1.62 ) }
    dend_13 { pt3dadd( 5.58425, -62.225, 4.66457, 1.99 ) }
    dend_13 { pt3dadd( 6.17079, -63.8436, 5.2332, 1.25 ) }
    dend_13 { pt3dadd( 6.29843, -64.2065, 5.34076, 0.29 ) }
    dend_13 { pt3dadd( 6.53257, -64.9409, 5.51201, 0.29 ) }
    dend_13 { pt3dadd( 6.55072, -65.007, 5.52098, 0.29 ) }
    dend_13 { pt3dadd( 6.84099, -66.1528, 5.62559, 0.29 ) }
    dend_13 { pt3dadd( 7.19741, -67.8332, 5.76631, 0.29 ) }
    dend_13 { pt3dadd( 7.43605, -69.3443, 5.96965, 0.29 ) }
    dend_13 { pt3dadd( 7.45447, -69.4853, 5.99782, 1.47 ) }
    dend_13 { pt3dadd( 7.5518, -70.3442, 6.20923, 1.92 ) }
    dend_13 { pt3dadd( 7.57823, -70.5909, 6.27834, 1.92 ) }
    dend_13 { pt3dadd( 7.71603, -71.9384, 6.73984, 0.37 ) }
    dend_13 { pt3dadd( 8.13306, -75.0136, 7.9375, 0.29 ) }
    dend_13 { pt3dadd( 8.22718, -75.5893, 8.17649, 1.4 ) }
    dend_13 { pt3dadd( 8.2849, -75.8988, 8.31229, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 8.38333, -76.3504, 8.5119, 1.62 ) }
    dend_13 { pt3dadd( 8.6645, -77.4434, 8.99384, 0.29 ) }
    dend_13 { pt3dadd( 8.95292, -78.3175, 9.35003, 0.29 ) }
    dend_13 { pt3dadd( 8.97756, -78.3766, 9.3743, 0.29 ) }
    dend_13 { pt3dadd( 9.50264, -79.6036, 9.97423, 0.29 ) }
    dend_13 { pt3dadd( 9.86152, -80.4533, 10.3902, 0.29 ) }
    dend_13 { pt3dadd( 10.1987, -81.276, 10.7832, 1.47 ) }
    dend_13 { pt3dadd( 10.4535, -81.9204, 11.074, 1.77 ) }
    dend_13 { pt3dadd( 10.5955, -82.3055, 11.2383, 1.77 ) }
    dend_13 { pt3dadd( 11.1002, -83.686, 11.7667, 0.22 ) }
    dend_13 { pt3dadd( 11.6488, -85.1775, 12.2566, 0.22 ) }
    dend_13 { pt3dadd( 11.8171, -85.6817, 12.4133, 0.22 ) }
    dend_13 { pt3dadd( 11.8841, -85.9239, 12.4737, 0.81 ) }
    dend_13 { pt3dadd( 12.0553, -86.5935, 12.5989, 1.03 ) }
    dend_13 { pt3dadd( 12.1295, -86.9025, 12.6347, 1.03 ) }
    dend_13 { pt3dadd( 12.1437, -86.9613, 12.6362, 1.03 ) }
    dend_13 { pt3dadd( 12.2176, -87.2695, 12.6441, 0.15 ) }
    dend_13 { pt3dadd( 12.5055, -88.4009, 12.6675, 0.15 ) }
    dend_13 { pt3dadd( 12.9632, -90.0326, 12.7367, 0.15 ) }
    dend_13 { pt3dadd( 13.0944, -90.4716, 12.7633, 1.25 ) }
    dend_13 { pt3dadd( 13.2748, -91.0729, 12.7996, 1.62 ) }
    dend_13 { pt3dadd( 13.312, -91.1967, 12.8071, 1.62 ) }
    dend_13 { pt3dadd( 13.3491, -91.3205, 12.8145, 1.62 ) }
    dend_13 { pt3dadd( 13.6095, -92.2289, 12.8652, 0.22 ) }
    dend_13 { pt3dadd( 13.8793, -93.3021, 12.9542, 0.22 ) }
    dend_13 { pt3dadd( 14.3806, -95.3779, 13.1509, 0.22 ) }
    dend_13 { pt3dadd( 14.3937, -95.4366, 13.1568, 0.22 ) }
    dend_13 { pt3dadd( 14.461, -95.745, 13.1875, 0.74 ) }
    dend_13 { pt3dadd( 14.6076, -96.4392, 13.2525, 0.74 ) }
    dend_13 { pt3dadd( 14.8184, -97.5408, 13.3389, 0.15 ) }
    dend_13 { pt3dadd( 14.8299, -97.6, 13.344, 0.15 ) }
    dend_13 { pt3dadd( 14.9393, -98.0658, 13.3842, 0.44 ) }
    dend_13 { pt3dadd( 15.0388, -98.4384, 13.4076, 0.44 ) }
    dend_13 { pt3dadd( 15.168, -98.8784, 13.4288, 0.15 ) }
    dend_13 { pt3dadd( 15.3437, -99.4235, 13.437, 0.15 ) }
    dend_13 { pt3dadd( 15.4867, -99.8268, 13.4148, 1.18 ) }
    dend_13 { pt3dadd( 15.7443, -100.544, 13.374, 1.62 ) }
    dend_13 { pt3dadd( 15.8109, -100.721, 13.3629, 1.62 ) }
    dend_13 { pt3dadd( 19.3101, -108.57, 13.6589, 1.62 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 39/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.64159, -32.705, 0.417177, 1.77 ) }
    dend_6 { pt3dadd( -5.26213, -34.1536, 0.0509867, 1.77 ) }
    dend_6 { pt3dadd( -5.96147, -35.9137, -0.402682, 1.77 ) }
    dend_6 { pt3dadd( -6.695, -37.8445, -0.878965, 1.69 ) }
    dend_6 { pt3dadd( -7.50742, -40.0656, -1.3896, 1.55 ) }
    dend_6 { pt3dadd( -8.36337, -42.5184, -1.91955, 1.55 ) }
    dend_6 { pt3dadd( -9.20836, -45.0131, -2.43444, 1.33 ) }
    dend_6 { pt3dadd( -9.71594, -46.6411, -2.75602, 1.47 ) }
    dend_6 { pt3dadd( -10.194, -48.2603, -3.05328, 2.06 ) }
    dend_6 { pt3dadd( -10.6507, -49.9388, -3.33566, 2.36 ) }
    dend_6 { pt3dadd( -10.8775, -50.85, -3.48011, 2.28 ) }
    dend_6 { pt3dadd( -10.9753, -51.2588, -3.52106, 2.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 51/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -26.3436, 14.2421, 1.82448, 1.03 ) }
    dend_4 { pt3dadd( -26.3786, 14.2726, 1.84823, 1.03 ) }
    dend_4 { pt3dadd( -26.9784, 14.7922, 2.22291, 0.88 ) }
    dend_4 { pt3dadd( -27.5406, 15.2782, 2.5442, 0.88 ) }
    dend_4 { pt3dadd( -28.0898, 15.7483, 2.83995, 0.88 ) }
    dend_4 { pt3dadd( -29.1945, 16.6803, 3.38422, 0.88 ) }
    dend_4 { pt3dadd( -29.8287, 17.217, 3.6773, 0.96 ) }
    dend_4 { pt3dadd( -30.2911, 17.6066, 3.86838, 0.66 ) }
    dend_4 { pt3dadd( -30.7396, 17.9676, 4.03606, 0.59 ) }
    dend_4 { pt3dadd( -30.8316, 18.0401, 4.06908, 0.59 ) }
    dend_4 { pt3dadd( -31.4746, 18.5684, 4.28707, 0.59 ) }
    dend_4 { pt3dadd( -31.8419, 18.9024, 4.41543, 0.59 ) }
    dend_4 { pt3dadd( -32.1725, 19.2561, 4.57162, 0.88 ) }
    dend_4 { pt3dadd( -32.6249, 19.8381, 4.84504, 1.03 ) }
    dend_4 { pt3dadd( -32.9499, 20.3164, 5.07707, 1.11 ) }
    dend_4 { pt3dadd( -33.1523, 20.6678, 5.24531, 1.11 ) }
    dend_4 { pt3dadd( -33.3881, 21.1734, 5.48039, 0.66 ) }
    dend_4 { pt3dadd( -33.8495, 22.2793, 5.96621, 0.66 ) }
    dend_4 { pt3dadd( -34.0518, 22.8344, 6.19348, 0.96 ) }
    dend_4 { pt3dadd( -34.0684, 22.8866, 6.21329, 0.96 ) }
    dend_4 { pt3dadd( -34.3331, 23.7899, 6.55785, 0.96 ) }
    dend_4 { pt3dadd( -34.6218, 24.821, 6.94989, 0.96 ) }
    dend_4 { pt3dadd( -34.7437, 25.2975, 7.13135, 0.74 ) }
    dend_4 { pt3dadd( -35.0132, 26.4278, 7.56649, 0.52 ) }
    dend_4 { pt3dadd( -35.1312, 26.9832, 7.78386, 0.52 ) }
    dend_4 { pt3dadd( -35.3954, 28.4594, 8.3736, 0.52 ) }
    dend_4 { pt3dadd( -35.4041, 28.5206, 8.39859, 0.52 ) }
    dend_4 { pt3dadd( -35.4772, 29.2503, 8.70414, 0.52 ) }
    dend_4 { pt3dadd( -35.4986, 29.6438, 8.87457, 1.11 ) }
    dend_4 { pt3dadd( -35.5003, 30.201, 9.12717, 1.47 ) }
    dend_4 { pt3dadd( -35.4773, 30.7627, 9.39242, 1.33 ) }
    dend_4 { pt3dadd( -35.472, 30.8224, 9.42178, 1.33 ) }
    dend_4 { pt3dadd( -35.4333, 31.3073, 9.66059, 1.33 ) }
    dend_4 { pt3dadd( -35.3966, 31.7613, 9.88585, 0.88 ) }
    dend_4 { pt3dadd( -35.3652, 32.1718, 10.0893, 0.88 ) }
    dend_4 { pt3dadd( -35.3289, 32.7805, 10.3875, 0.52 ) }
    dend_4 { pt3dadd( -35.3047, 33.3315, 10.6538, 0.52 ) }
    dend_4 { pt3dadd( -35.289, 33.8829, 10.9181, 0.96 ) }
    dend_4 { pt3dadd( -35.2886, 33.9356, 10.9432, 0.96 ) }
    dend_4 { pt3dadd( -35.2964, 34.4353, 11.1744, 1.11 ) }
    dend_4 { pt3dadd( -35.3136, 34.9278, 11.4005, 1.11 ) }
    dend_4 { pt3dadd( -35.3149, 34.9882, 11.429, 1.11 ) }
    dend_4 { pt3dadd( -35.3144, 35.2674, 11.5636, 0.81 ) }
    dend_4 { pt3dadd( -35.307, 35.6002, 11.7259, 0.66 ) }
    dend_4 { pt3dadd( -35.2932, 36.1002, 11.9683, 0.66 ) }
    dend_4 { pt3dadd( -35.291, 36.1452, 11.9901, 0.66 ) }
    dend_4 { pt3dadd( -35.2601, 36.5955, 12.2043, 0.88 ) }
    dend_4 { pt3dadd( -35.259, 37.0449, 12.4052, 0.88 ) }
    dend_4 { pt3dadd( -35.2826, 37.4921, 12.5973, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( -35.3266, 37.9979, 12.81, 0.44 ) }
    dend_4 { pt3dadd( -35.4161, 38.795, 13.1418, 0.22 ) }
    dend_4 { pt3dadd( -35.448, 39.0299, 13.2378, 0.22 ) }
    dend_4 { pt3dadd( -35.7004, 40.5884, 13.8666, 0.22 ) }
    dend_4 { pt3dadd( -35.7834, 41.0421, 14.0479, 0.22 ) }
    dend_4 { pt3dadd( -35.9205, 41.7145, 14.3141, 0.22 ) }
    dend_4 { pt3dadd( -35.9744, 41.9339, 14.3991, 0.59 ) }
    dend_4 { pt3dadd( -36.0064, 42.0466, 14.4419, 0.59 ) }
    dend_4 { pt3dadd( -36.1294, 42.4823, 14.6086, 0.74 ) }
    dend_4 { pt3dadd( -36.2791, 43.1182, 14.8161, 1.25 ) }
    dend_4 { pt3dadd( -36.4181, 43.7538, 14.9985, 1.99 ) }
    dend_4 { pt3dadd( -36.5676, 44.4513, 15.1813, 2.43 ) }
    dend_4 { pt3dadd( -36.6227, 44.7509, 15.2615, 2.43 ) }
    dend_4 { pt3dadd( -36.7319, 45.4399, 15.4572, 2.28 ) }
    dend_4 { pt3dadd( -36.9027, 46.5454, 15.7793, 0.74 ) }
    dend_4 { pt3dadd( -36.9123, 46.6084, 15.799, 0.74 ) }
    dend_4 { pt3dadd( -37.0243, 47.3597, 16.0505, 0.66 ) }
    dend_4 { pt3dadd( -37.2217, 48.7766, 16.5594, 0.66 ) }
    dend_4 { pt3dadd( -37.4175, 50.0846, 17.0546, 0.66 ) }
    dend_4 { pt3dadd( -37.5008, 50.5868, 17.2573, 0.66 ) }
    dend_4 { pt3dadd( -37.6469, 51.3444, 17.6245, 0.66 ) }
    dend_4 { pt3dadd( -37.7495, 51.8184, 17.872, 1.11 ) }
    dend_4 { pt3dadd( -37.9121, 52.4969, 18.2442, 1.11 ) }
    dend_4 { pt3dadd( -37.9268, 52.5535, 18.2759, 1.11 ) }
    dend_4 { pt3dadd( -38.0608, 53.0785, 18.5743, 0.96 ) }
    dend_4 { pt3dadd( -38.2728, 53.967, 19.0663, 0.22 ) }
    dend_4 { pt3dadd( -38.93, 56.7461, 20.5569, 0.15 ) }
    dend_4 { pt3dadd( -39.0605, 57.2964, 20.845, 2.06 ) }
    dend_4 { pt3dadd( -39.3039, 58.3288, 21.3711, 2.73 ) }
    dend_4 { pt3dadd( -39.5032, 59.2046, 21.8022, 0.22 ) }
    dend_4 { pt3dadd( -39.8585, 60.8417, 22.5631, 0.22 ) }
    dend_4 { pt3dadd( -39.965, 61.3902, 22.7928, 0.66 ) }
    dend_4 { pt3dadd( -40.0669, 61.9557, 23.0283, 1.03 ) }
    dend_4 { pt3dadd( -40.132, 62.3496, 23.1853, 0.88 ) }
    dend_4 { pt3dadd( -40.1926, 62.7469, 23.3357, 0.52 ) }
    dend_4 { pt3dadd( -40.2277, 62.9941, 23.424, 0.15 ) }
    dend_4 { pt3dadd( -40.382, 64.253, 23.8678, 0.15 ) }
    dend_4 { pt3dadd( -40.508, 65.3602, 24.2676, 0.15 ) }
    dend_4 { pt3dadd( -40.6015, 66.0719, 24.5315, 1.33 ) }
    dend_4 { pt3dadd( -40.6967, 66.686, 24.7825, 2.21 ) }
    dend_4 { pt3dadd( -40.7741, 67.1298, 24.9795, 2.21 ) }
    dend_4 { pt3dadd( -40.8486, 67.5051, 25.1641, 2.21 ) }
    dend_4 { pt3dadd( -41.0197, 68.2627, 25.5684, 0.15 ) }
    dend_4 { pt3dadd( -41.5102, 70.099, 26.6468, 0.15 ) }
    dend_4 { pt3dadd( -41.7196, 70.7894, 27.0834, 0.15 ) }
    dend_4 { pt3dadd( -41.904, 71.3339, 27.4397, 1.69 ) }
    dend_4 { pt3dadd( -42.1052, 71.9206, 27.8138, 2.06 ) }
    dend_4 { pt3dadd( -42.2895, 72.4253, 28.148, 2.06 ) }
    dend_4 { pt3dadd( -42.4927, 72.977, 28.522, 1.69 ) }
    dend_4 { pt3dadd( -42.5097, 73.023, 28.5532, 1.69 ) }
    dend_4 { pt3dadd( -42.7124, 73.6218, 28.9304, 0.15 ) }
    dend_4 { pt3dadd( -43.2911, 75.5591, 30.0775, 0.15 ) }
    dend_4 { pt3dadd( -43.4679, 76.2491, 30.4508, 0.81 ) }
    dend_4 { pt3dadd( -43.5646, 76.6726, 30.6698, 1.18 ) }
    dend_4 { pt3dadd( -43.6771, 77.2335, 30.9458, 0.88 ) }
    dend_4 { pt3dadd( -43.7602, 77.6731, 31.1577, 0.15 ) }
    dend_4 { pt3dadd( -43.9964, 79.1, 31.8283, 0.15 ) }
    dend_4 { pt3dadd( -44.1758, 80.7393, 32.5638, 0.15 ) }
    dend_4 { pt3dadd( -44.1961, 81.0202, 32.6833, 0.81 ) }
    dend_4 { pt3dadd( -44.2145, 81.4107, 32.851, 0.96 ) }
    dend_4 { pt3dadd( -44.2178, 81.6464, 32.9535, 0.96 ) }
    dend_4 { pt3dadd( -44.2103, 82.1455, 33.1732, 0.22 ) }
    dend_4 { pt3dadd( -44.0696, 84.2834, 34.1352, 0.22 ) }
    dend_4 { pt3dadd( -44.063, 84.3437, 34.1629, 0.22 ) }
    dend_4 { pt3dadd( -44.0103, 84.8073, 34.3687, 0.96 ) }
    dend_4 { pt3dadd( -43.9779, 85.086, 34.4899, 1.25 ) }
    dend_4 { pt3dadd( -43.9448, 85.3679, 34.6107, 1.25 ) }
    dend_4 { pt3dadd( -43.892, 85.8112, 34.7963, 0.81 ) }
    dend_4 { pt3dadd( -43.8116, 86.4245, 35.0748, 0.15 ) }
    dend_4 { pt3dadd( -43.5627, 88.1211, 35.9157, 0.15 ) }
    dend_4 { pt3dadd( -43.4594, 88.6693, 36.1875, 1.99 ) }
    dend_4 { pt3dadd( -43.3451, 89.1843, 36.4427, 2.95 ) }
    dend_4 { pt3dadd( -43.3324, 89.2351, 36.468, 2.95 ) }
    dend_4 { pt3dadd( -43.1121, 89.9915, 36.8014, 2.95 ) }
    dend_4 { pt3dadd( -42.8254, 90.9302, 37.1628, 0.22 ) }
    dend_4 { pt3dadd( -42.4114, 92.3203, 37.64, 0.22 ) }
    dend_4 { pt3dadd( -42.2752, 92.8332, 37.7996, 1.25 ) }
    dend_4 { pt3dadd( -42.1606, 93.2979, 37.9243, 1.69 ) }
    dend_4 { pt3dadd( -41.8991, 94.4208, 38.1887, 0.15 ) }
    dend_4 { pt3dadd( -41.5454, 96.0578, 38.5163, 0.15 ) }
    dend_4 { pt3dadd( -41.3356, 97.1149, 38.7283, 0.15 ) }
    dend_4 { pt3dadd( -41.1932, 98.1491, 39.088, 2.14 ) }
    dend_4 { pt3dadd( -41.15, 98.5806, 39.3092, 2.14 ) }
    dend_4 { pt3dadd( -41.1458, 98.6568, 39.3643, 2.14 ) }
    dend_4 { pt3dadd( -41.1511, 99.3167, 40.037, 0.15 ) }
    dend_4 { pt3dadd( -41.1689, 99.6058, 40.4273, 0.15 ) }
    dend_4 { pt3dadd( -41.3125, 101.162, 42.8232, 0.15 ) }
    dend_4 { pt3dadd( -41.3384, 101.413, 43.2035, 0.88 ) }
    dend_4 { pt3dadd( -41.3598, 101.71, 43.584, 1.03 ) }
    dend_4 { pt3dadd( -41.362, 101.747, 43.6278, 1.03 ) }
    dend_4 { pt3dadd( -41.378, 102.13, 44.0179, 0.29 ) }
    dend_4 { pt3dadd( -41.3731, 102.746, 44.527, 0.15 ) }
    dend_4 { pt3dadd( -41.3093, 103.635, 45.0506, 0.15 ) }
    dend_4 { pt3dadd( -41.1741, 104.692, 45.6652, 0.15 ) }
    dend_4 { pt3dadd( -41.0789, 105.184, 45.9522, 0.74 ) }
    dend_4 { pt3dadd( -40.9606, 105.647, 46.2229, 0.74 ) }
    dend_4 { pt3dadd( -40.8877, 105.868, 46.354, 0.15 ) }
    dend_4 { pt3dadd( -40.4839, 106.876, 46.9426, 0.15 ) }
    dend_4 { pt3dadd( -39.5659, 108.28, 47.8229, 0.15 ) }
    dend_4 { pt3dadd( -38.9655, 108.958, 48.2746, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( -38.6105, 109.307, 48.5206, 1.77 ) }
    dend_4 { pt3dadd( -38.2163, 109.655, 48.7817, 2.28 ) }
    dend_4 { pt3dadd( -37.965, 109.861, 48.9427, 2.14 ) }
    dend_4 { pt3dadd( -34.6403, 112.297, 50.9714, 0.15 ) }
    dend_4 { pt3dadd( -33.1073, 113.309, 51.877, 0.15 ) }
    dend_4 { pt3dadd( -32.7537, 113.531, 52.0823, 0.59 ) }
    dend_4 { pt3dadd( -32.7167, 113.554, 52.1039, 0.59 ) }
    dend_4 { pt3dadd( -34.7358, 120.478, 56.2415, 0.59 ) }
    dend_4 { pt3dadd( -37.7521, 127.12, 60.171, 0.59 ) }
    dend_4 { pt3dadd( -40.5212, 134.069, 63.7631, 0.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -26.3436, 14.2421, 1.82448, 0.66 ) }
    dend_1 { pt3dadd( -27.8076, 13.6459, 1.31203, 0.66 ) }
    dend_1 { pt3dadd( -29.0352, 13.1415, 0.813765, 0.66 ) }
    dend_1 { pt3dadd( -30.7614, 12.4396, 0.067963, 0.81 ) }
    dend_1 { pt3dadd( -32.7935, 11.594, -0.87917, 1.03 ) }
    dend_1 { pt3dadd( -35.113, 10.6182, -1.98509, 1.03 ) }
    dend_1 { pt3dadd( -36.7689, 9.91552, -2.77215, 0.88 ) }
    dend_1 { pt3dadd( -38.0438, 9.38569, -3.41327, 0.52 ) }
    dend_1 { pt3dadd( -38.943, 9.00703, -3.87589, 0.81 ) }
    dend_1 { pt3dadd( -40.1627, 8.49092, -4.48978, 1.33 ) }
    dend_1 { pt3dadd( -41.0525, 8.12099, -4.91608, 1.33 ) }
    dend_1 { pt3dadd( -42.0055, 7.76262, -5.27709, 1.11 ) }
    dend_1 { pt3dadd( -42.8879, 7.47842, -5.54598, 0.88 ) }
    dend_1 { pt3dadd( -44.0192, 7.15692, -5.83591, 0.59 ) }
    dend_1 { pt3dadd( -46.1362, 6.60792, -6.41879, 0.59 ) }
    dend_1 { pt3dadd( -47.0723, 6.37835, -6.68581, 0.81 ) }
    dend_1 { pt3dadd( -48.9018, 5.91301, -7.25218, 0.81 ) }
    dend_1 { pt3dadd( -49.8145, 5.67168, -7.54045, 0.81 ) }
    dend_1 { pt3dadd( -50.7777, 5.40297, -7.84714, 0.81 ) }
    dend_1 { pt3dadd( -52.5973, 4.83944, -8.45593, 0.81 ) }
    dend_1 { pt3dadd( -53.5037, 4.51144, -8.77745, 0.52 ) }
    dend_1 { pt3dadd( -54.6661, 4.00751, -9.17204, 0.52 ) }
    dend_1 { pt3dadd( -56.1752, 3.23601, -9.6879, 0.52 ) }
    dend_1 { pt3dadd( -56.2475, 3.19594, -9.71078, 0.52 ) }
    dend_1 { pt3dadd( -57.2565, 2.6176, -9.99102, 1.11 ) }
    dend_1 { pt3dadd( -58.126, 2.10074, -10.1763, 1.25 ) }
    dend_1 { pt3dadd( -59.5593, 1.23708, -10.4896, 1.25 ) }
    dend_1 { pt3dadd( -60.3629, 0.69702, -10.6735, 0.74 ) }
    dend_1 { pt3dadd( -60.932, 0.27125, -10.8063, 0.52 ) }
    dend_1 { pt3dadd( -61.0721, 0.154102, -10.8376, 0.52 ) }
    dend_1 { pt3dadd( -61.6701, -0.415875, -10.9571, 0.52 ) }
    dend_1 { pt3dadd( -61.7949, -0.552685, -10.9793, 0.52 ) }
    dend_1 { pt3dadd( -62.4657, -1.4167, -11.1126, 0.52 ) }
    dend_1 { pt3dadd( -62.519, -1.48512, -11.1232, 0.52 ) }
    dend_1 { pt3dadd( -63.3237, -2.41734, -11.2716, 0.52 ) }
    dend_1 { pt3dadd( -63.3854, -2.47752, -11.2817, 0.52 ) }
    dend_1 { pt3dadd( -64.1677, -3.14963, -11.4046, 0.52 ) }
    dend_1 { pt3dadd( -64.8229, -3.65359, -11.4997, 0.74 ) }
    dend_1 { pt3dadd( -65.6577, -4.22437, -11.6119, 0.81 ) }
    dend_1 { pt3dadd( -66.5606, -4.83198, -11.7315, 0.81 ) }
    dend_1 { pt3dadd( -67.8986, -5.7212, -11.9066, 0.37 ) }
    dend_1 { pt3dadd( -68.9949, -6.49209, -12.0044, 1.18 ) }
    dend_1 { pt3dadd( -70.1529, -7.38728, -12.0727, 2.06 ) }
    dend_1 { pt3dadd( -71.0759, -8.1687, -12.1102, 2.58 ) }
    dend_1 { pt3dadd( -71.8997, -8.9262, -12.1343, 2.58 ) }
    dend_1 { pt3dadd( -72.5871, -9.59181, -12.1503, 1.99 ) }
    dend_1 { pt3dadd( -73.9751, -10.9469, -12.181, 0.52 ) }
    dend_1 { pt3dadd( -75.6208, -12.501, -12.2216, 0.52 ) }
    dend_1 { pt3dadd( -76.9453, -13.7094, -12.1869, 0.52 ) }
    dend_1 { pt3dadd( -77.8303, -14.4591, -12.1317, 0.96 ) }
    dend_1 { pt3dadd( -79.0218, -15.3738, -12.0159, 1.47 ) }
    dend_1 { pt3dadd( -80.321, -16.259, -11.8679, 1.69 ) }
    dend_1 { pt3dadd( -81.1954, -16.7869, -11.7474, 1.69 ) }
    dend_1 { pt3dadd( -82.9235, -17.7174, -11.4258, 1.69 ) }
    dend_1 { pt3dadd( -83.8773, -18.2021, -11.2166, 1.18 ) }
    dend_1 { pt3dadd( -84.9151, -18.7175, -10.9622, 0.88 ) }
    dend_1 { pt3dadd( -86.1517, -19.3248, -10.6515, 0.44 ) }
    dend_1 { pt3dadd( -87.7052, -20.1002, -10.2825, 0.44 ) }
    dend_1 { pt3dadd( -88.813, -20.6445, -10.071, 0.44 ) }
    dend_1 { pt3dadd( -88.8902, -20.68, -10.0623, 0.44 ) }
    dend_1 { pt3dadd( -90.0542, -21.1658, -9.90004, 0.44 ) }
    dend_1 { pt3dadd( -91.2756, -21.5859, -9.71851, 0.44 ) }
    dend_1 { pt3dadd( -91.5833, -21.6719, -9.66821, 0.88 ) }
    dend_1 { pt3dadd( -92.5564, -21.8669, -9.54024, 1.18 ) }
    dend_1 { pt3dadd( -93.4193, -22.0213, -9.4177, 1.18 ) }
    dend_1 { pt3dadd( -94.6584, -22.2375, -9.24523, 0.81 ) }
    dend_1 { pt3dadd( -95.3564, -22.3728, -9.16501, 0.52 ) }
    dend_1 { pt3dadd( -95.9155, -22.4958, -9.10518, 0.29 ) }
    dend_1 { pt3dadd( -98.1139, -23.0512, -8.90549, 0.29 ) }
    dend_1 { pt3dadd( -99.0702, -23.3378, -8.83906, 0.22 ) }
    dend_1 { pt3dadd( -99.1507, -23.3655, -8.83618, 0.22 ) }
    dend_1 { pt3dadd( -101.073, -24.0739, -8.8975, 0.22 ) }
    dend_1 { pt3dadd( -101.194, -24.119, -8.90453, 0.22 ) }
    dend_1 { pt3dadd( -101.682, -24.3039, -8.95627, 0.37 ) }
    dend_1 { pt3dadd( -102.239, -24.5197, -9.04651, 1.03 ) }
    dend_1 { pt3dadd( -103.032, -24.807, -9.20845, 1.4 ) }
    dend_1 { pt3dadd( -103.882, -25.0929, -9.4183, 1.4 ) }
    dend_1 { pt3dadd( -104.878, -25.4192, -9.69719, 1.4 ) }
    dend_1 { pt3dadd( -105.968, -25.8235, -10.0154, 0.22 ) }
    dend_1 { pt3dadd( -106.909, -26.2062, -10.2953, 0.15 ) }
    dend_1 { pt3dadd( -108.151, -26.7605, -10.6669, 0.15 ) }
    dend_1 { pt3dadd( -109.199, -27.2841, -10.9752, 0.15 ) }
    dend_1 { pt3dadd( -109.997, -27.7414, -11.1992, 0.15 ) }
    dend_1 { pt3dadd( -111.158, -28.4817, -11.5149, 0.15 ) }
    dend_1 { pt3dadd( -111.875, -28.9731, -11.6898, 0.29 ) }
    dend_1 { pt3dadd( -112.4, -29.3552, -11.801, 1.03 ) }
    dend_1 { pt3dadd( -113.194, -29.9582, -11.9435, 1.55 ) }
    dend_1 { pt3dadd( -113.908, -30.5078, -12.0517, 1.55 ) }
    dend_1 { pt3dadd( -114.944, -31.2938, -12.2061, 0.15 ) }
    dend_1 { pt3dadd( -116.144, -32.1895, -12.3818, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_1 { pt3dadd( -118.371, -33.8656, -12.7068, 0.15 ) }
    dend_1 { pt3dadd( -119.246, -34.521, -12.8323, 1.33 ) }
    dend_1 { pt3dadd( -120.208, -35.2331, -12.9654, 2.73 ) }
    dend_1 { pt3dadd( -121.002, -35.8089, -13.074, 3.39 ) }
    dend_1 { pt3dadd( -121.086, -35.8709, -13.0856, 3.39 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 5/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 26.7436, 32.2371, -1.4207, 0.975718 ) }
    axon_1 { pt3dadd( 36.5663, 43.5735, -1.4207, 0.975718 ) }
    axon_1 { pt3dadd( 46.389, 54.91, -1.4207, 0.975718 ) }
    // Section: dend_65, id: dend_65, parent: dend_55 (entry count 8/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 43.7695, -0.279015, 21.9507, 0.15 ) }
    dend_65 { pt3dadd( 44.9332, -0.912156, 23.021, 0.15 ) }
    dend_65 { pt3dadd( 45.5139, -1.15631, 23.6196, 0.15 ) }
    dend_65 { pt3dadd( 45.7655, -1.23769, 23.8966, 0.15 ) }
    dend_65 { pt3dadd( 45.8023, -1.2428, 23.9406, 0.15 ) }
    dend_65 { pt3dadd( 45.9641, -1.23092, 24.1642, 0.15 ) }
    dend_65 { pt3dadd( 45.9896, -1.21104, 24.2125, 0.15 ) }
    dend_65 { pt3dadd( 45.9217, -0.497549, 24.5932, 0.15 ) }
    dend_65 { pt3dadd( 45.9057, -0.381224, 24.6473, 0.15 ) }
    dend_65 { pt3dadd( 45.8015, 0.185259, 24.9006, 0.15 ) }
    dend_65 { pt3dadd( 45.6881, 0.709855, 25.1224, 0.15 ) }
    dend_65 { pt3dadd( 45.5409, 1.28113, 25.3421, 1.03 ) }
    dend_65 { pt3dadd( 45.3792, 1.86465, 25.5287, 1.4 ) }
    dend_65 { pt3dadd( 45.2865, 2.16403, 25.5895, 1.4 ) }
    dend_65 { pt3dadd( 47.0769, 5.71955, 32.9334, 1.4 ) }
    dend_65 { pt3dadd( 47.6357, 8.46245, 40.7753, 1.4 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 24/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 43.7695, -0.279015, 21.9507, 0.29 ) }
    dend_56 { pt3dadd( 43.5903, 0.123816, 22.0168, 0.29 ) }
    dend_56 { pt3dadd( 43.5664, 0.177412, 22.0256, 0.29 ) }
    dend_56 { pt3dadd( 43.3927, 0.5679, 22.0897, 0.29 ) }
    dend_56 { pt3dadd( 43.0541, 1.32899, 22.2145, 0.29 ) }
    dend_56 { pt3dadd( 40.1062, 9.2737, 22.0651, 0.29 ) }
    dend_56 { pt3dadd( 38.626, 17.6056, 22.9937, 0.29 ) }
    dend_56 { pt3dadd( 36.3411, 25.7647, 22.552, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_43 (entry count 32/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 14.5658, 110.801, 26.2316, 0.52 ) }
    dend_52 { pt3dadd( 14.3081, 111.828, 26.4448, 0.52 ) }
    dend_52 { pt3dadd( 14.1248, 112.652, 26.5756, 0.52 ) }
    dend_52 { pt3dadd( 14.11, 112.75, 26.5906, 0.52 ) }
    dend_52 { pt3dadd( 14.0346, 113.681, 26.7029, 0.52 ) }
    dend_52 { pt3dadd( 14.0277, 113.95, 26.7571, 0.52 ) }
    dend_52 { pt3dadd( 14.0262, 114.922, 26.9863, 0.52 ) }
    dend_52 { pt3dadd( 14.0307, 115.104, 27.027, 0.52 ) }
    dend_52 { pt3dadd( 14.0623, 116.069, 27.3005, 0.44 ) }
    dend_52 { pt3dadd( 14.1056, 117.462, 27.7519, 0.44 ) }
    dend_52 { pt3dadd( 14.0864, 118.865, 28.3056, 0.22 ) }
    dend_52 { pt3dadd( 14.0812, 118.944, 28.3408, 0.22 ) }
    dend_52 { pt3dadd( 14.0059, 119.786, 28.7558, 0.22 ) }
    dend_52 { pt3dadd( 13.9054, 120.581, 29.1687, 0.22 ) }
    dend_52 { pt3dadd( 13.8876, 120.665, 29.2165, 0.22 ) }
    dend_52 { pt3dadd( 13.4129, 122.119, 30.1402, 0.22 ) }
    dend_52 { pt3dadd( 13.3483, 122.272, 30.2215, 0.22 ) }
    dend_52 { pt3dadd( 12.4979, 132.905, 36.3855, 0.22 ) }
    // Section: dend_51, id: dend_51, parent: dend_43 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 14.5658, 110.801, 26.2316, 0.15 ) }
    dend_51 { pt3dadd( 15.2659, 112.179, 28.7853, 0.15 ) }
    dend_51 { pt3dadd( 15.5414, 112.655, 29.3247, 0.15 ) }
    dend_51 { pt3dadd( 15.569, 112.701, 29.3643, 0.15 ) }
    dend_51 { pt3dadd( 15.7838, 113.088, 29.6165, 0.88 ) }
    dend_51 { pt3dadd( 16.0, 113.504, 29.8113, 1.33 ) }
    dend_51 { pt3dadd( 16.2212, 113.93, 29.9832, 1.4 ) }
    dend_51 { pt3dadd( 16.6145, 114.646, 30.0704, 0.29 ) }
    dend_51 { pt3dadd( 16.6508, 114.703, 30.0726, 0.29 ) }
    dend_51 { pt3dadd( 17.3913, 115.717, 30.0387, 0.22 ) }
    dend_51 { pt3dadd( 18.2207, 116.697, 29.9365, 0.22 ) }
    dend_51 { pt3dadd( 18.3934, 116.879, 29.8905, 0.52 ) }
    dend_51 { pt3dadd( 18.9863, 117.441, 29.5763, 0.59 ) }
    dend_51 { pt3dadd( 19.6809, 118.043, 29.0305, 0.29 ) }
    dend_51 { pt3dadd( 20.0455, 118.345, 28.6036, 0.29 ) }
    dend_51 { pt3dadd( 20.3651, 118.621, 28.1014, 0.29 ) }
    dend_51 { pt3dadd( 20.748, 119.086, 27.3387, 0.66 ) }
    dend_51 { pt3dadd( 21.234, 119.984, 26.2242, 0.66 ) }
    dend_51 { pt3dadd( 21.2565, 120.037, 26.1739, 0.66 ) }
    dend_51 { pt3dadd( 21.6026, 120.961, 25.4733, 0.37 ) }
    dend_51 { pt3dadd( 21.9683, 121.932, 24.859, 0.37 ) }
    dend_51 { pt3dadd( 22.4267, 123.063, 24.29, 0.29 ) }
    dend_51 { pt3dadd( 23.0003, 124.313, 23.8525, 0.22 ) }
    dend_51 { pt3dadd( 23.4752, 125.24, 23.6675, 0.22 ) }
    dend_51 { pt3dadd( 23.8205, 125.86, 23.598, 1.33 ) }
    dend_51 { pt3dadd( 24.1642, 126.43, 23.5924, 1.4 ) }
    dend_51 { pt3dadd( 24.44, 126.858, 23.6127, 1.4 ) }
    dend_51 { pt3dadd( 24.8385, 127.458, 23.7271, 0.81 ) }
    dend_51 { pt3dadd( 25.3572, 128.316, 24.0117, 0.59 ) }
    dend_51 { pt3dadd( 25.6859, 128.961, 24.2596, 0.22 ) }
    dend_51 { pt3dadd( 25.7409, 129.084, 24.3121, 0.22 ) }
    dend_51 { pt3dadd( 26.0718, 130.041, 24.8185, 0.22 ) }
    dend_51 { pt3dadd( 26.3427, 131.092, 25.4146, 0.52 ) }
    dend_51 { pt3dadd( 26.367, 131.216, 25.497, 0.52 ) }
    dend_51 { pt3dadd( 26.4404, 131.665, 25.8173, 0.52 ) }
    dend_51 { pt3dadd( 26.4482, 131.726, 25.8628, 0.52 ) }
    dend_51 { pt3dadd( 26.6108, 133.227, 26.9117, 0.52 ) }
    dend_51 { pt3dadd( 26.6705, 133.813, 27.2982, 0.81 ) }
    dend_51 { pt3dadd( 26.8127, 135.077, 27.9851, 1.33 ) }
    dend_51 { pt3dadd( 26.8361, 135.259, 28.0762, 1.33 ) }
    dend_51 { pt3dadd( 26.9087, 135.817, 28.3516, 1.33 ) }
    dend_51 { pt3dadd( 27.0168, 136.658, 28.7177, 1.33 ) }
    dend_51 { pt3dadd( 27.052, 136.949, 28.7921, 1.33 ) }
    dend_51 { pt3dadd( 27.1127, 137.596, 28.9011, 1.03 ) }
    dend_51 { pt3dadd( 27.1303, 137.951, 28.8812, 0.81 ) }
    dend_51 { pt3dadd( 29.6531, 147.308, 29.9459, 0.81 ) }
    dend_51 { pt3dadd( 31.3906, 156.926, 30.0552, 0.81 ) }
    dend_51 { pt3dadd( 32.2502, 166.638, 29.2727, 0.81 ) }
    dend_51 { pt3dadd( 32.5905, 176.387, 29.8989, 0.81 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 99/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 14.5658, 110.801, 26.2316, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_44 { pt3dadd( 13.9927, 110.72, 26.2362, 0.22 ) }
    dend_44 { pt3dadd( 13.7916, 110.692, 26.2378, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 11.0807, 99.5489, 54.5368, 0.29 ) }
    dend_42 { pt3dadd( 11.6924, 106.197, 59.8305, 0.29 ) }
    dend_42 { pt3dadd( 13.6107, 112.856, 64.7985, 0.29 ) }
    dend_42 { pt3dadd( 15.6753, 118.841, 70.4409, 0.29 ) }
    dend_42 { pt3dadd( 19.2071, 123.686, 76.3481, 0.29 ) }
    dend_42 { pt3dadd( 23.5126, 129.073, 81.2349, 0.29 ) }
    dend_42 { pt3dadd( 28.933, 134.798, 84.3579, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 9/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 11.0807, 99.5489, 54.5368, 0.15 ) }
    dend_41 { pt3dadd( 9.99325, 109.458, 59.3498, 0.29 ) }
    dend_41 { pt3dadd( 6.75859, 118.27, 65.0427, 0.29 ) }
    dend_41 { pt3dadd( 2.24728, 127.265, 69.4667, 0.29 ) }
    dend_41 { pt3dadd( -0.531679, 137.26, 73.3418, 0.29 ) }
    dend_41 { pt3dadd( -2.21088, 147.921, 76.0889, 0.29 ) }
    dend_41 { pt3dadd( -3.28633, 158.926, 77.6799, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 16/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -56.8617, 4.31654, -12.044, 0.52 ) }
    dend_37 { pt3dadd( -57.8046, 3.31919, -11.9799, 0.52 ) }
    dend_37 { pt3dadd( -58.5822, 2.75224, -11.9695, 0.52 ) }
    dend_37 { pt3dadd( -58.6409, 2.70947, -11.9688, 0.52 ) }
    dend_37 { pt3dadd( -58.9468, 2.48643, -11.9647, 0.88 ) }
    dend_37 { pt3dadd( -59.5429, 2.05183, -11.9567, 0.22 ) }
    dend_37 { pt3dadd( -60.2744, 1.51851, -11.947, 1.18 ) }
    dend_37 { pt3dadd( -61.07, 1.20536, -11.9414, 1.18 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 24/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -56.8617, 4.31654, -12.044, 0.22 ) }
    dend_34 { pt3dadd( -58.4285, 5.23354, -12.6748, 0.22 ) }
    dend_34 { pt3dadd( -60.2705, 6.29335, -13.3552, 0.22 ) }
    dend_34 { pt3dadd( -60.5738, 6.46386, -13.4758, 0.22 ) }
    dend_34 { pt3dadd( -61.4663, 6.96602, -13.8386, 0.22 ) }
    dend_34 { pt3dadd( -61.638, 7.06037, -13.9068, 0.22 ) }
    dend_34 { pt3dadd( -63.4896, 8.06518, -14.6299, 0.22 ) }
    dend_34 { pt3dadd( -63.5839, 8.11379, -14.6603, 0.22 ) }
    dend_34 { pt3dadd( -64.9811, 8.69481, -15.1172, 1.62 ) }
    dend_34 { pt3dadd( -66.034, 9.06792, -15.4469, 2.06 ) }
    dend_34 { pt3dadd( -66.7977, 9.27888, -15.646, 2.06 ) }
    dend_34 { pt3dadd( -67.0133, 9.32908, -15.6954, 2.06 ) }
    dend_34 { pt3dadd( -68.7747, 9.64839, -16.0421, 0.15 ) }
    dend_34 { pt3dadd( -70.8838, 9.97762, -16.3933, 0.15 ) }
    dend_34 { pt3dadd( -72.2707, 10.152, -16.5709, 0.15 ) }
    dend_34 { pt3dadd( -75.3705, 10.4561, -16.9134, 0.15 ) }
    dend_34 { pt3dadd( -75.4655, 10.4642, -16.9227, 0.15 ) }
    dend_34 { pt3dadd( -76.017, 10.5032, -16.9626, 0.88 ) }
    dend_34 { pt3dadd( -76.8295, 10.5471, -16.9926, 1.11 ) }
    dend_34 { pt3dadd( -77.5399, 10.5749, -16.9738, 1.11 ) }
    dend_34 { pt3dadd( -78.2662, 10.6043, -16.9552, 0.22 ) }
    dend_34 { pt3dadd( -78.3617, 10.6103, -16.9535, 0.22 ) }
    dend_34 { pt3dadd( -80.1776, 10.7419, -17.0027, 0.22 ) }
    dend_34 { pt3dadd( -80.2725, 10.7525, -17.0099, 0.22 ) }
    dend_34 { pt3dadd( -80.5816, 10.7987, -17.0469, 0.44 ) }
    dend_34 { pt3dadd( -81.0956, 10.8954, -17.1246, 0.44 ) }
    dend_34 { pt3dadd( -82.5621, 11.1962, -17.4099, 0.22 ) }
    dend_34 { pt3dadd( -83.438, 11.3959, -17.5976, 0.88 ) }
    dend_34 { pt3dadd( -84.4143, 11.6361, -17.8237, 1.55 ) }
    dend_34 { pt3dadd( -85.2347, 11.839, -17.9988, 1.84 ) }
    dend_34 { pt3dadd( -86.4, 12.1324, -18.2359, 0.29 ) }
    dend_34 { pt3dadd( -87.0131, 12.2938, -18.3513, 0.22 ) }
    dend_34 { pt3dadd( -89.2891, 12.9326, -18.8094, 0.22 ) }
    dend_34 { pt3dadd( -89.574, 13.0147, -18.8651, 0.22 ) }
    dend_34 { pt3dadd( -91.4945, 13.5683, -19.2563, 0.22 ) }
    dend_34 { pt3dadd( -91.6404, 13.6114, -19.2869, 0.22 ) }
    dend_34 { pt3dadd( -93.2107, 14.0771, -19.6591, 0.22 ) }
    dend_34 { pt3dadd( -94.1447, 14.336, -19.8732, 1.18 ) }
    dend_34 { pt3dadd( -94.5332, 14.4323, -19.9675, 1.62 ) }
    dend_34 { pt3dadd( -95.3575, 14.6102, -20.1681, 1.92 ) }
    dend_34 { pt3dadd( -95.9426, 14.7292, -20.2473, 1.92 ) }
    dend_34 { pt3dadd( -97.0331, 14.9571, -20.3363, 0.22 ) }
    dend_34 { pt3dadd( -99.8941, 15.5797, -20.4555, 0.22 ) }
    dend_34 { pt3dadd( -100.001, 15.6042, -20.4568, 0.22 ) }
    dend_34 { pt3dadd( -100.374, 15.7133, -20.4309, 0.59 ) }
    dend_34 { pt3dadd( -104.232, 17.0603, -19.9459, 0.22 ) }
    dend_34 { pt3dadd( -105.444, 17.5145, -19.7555, 1.11 ) }
    dend_34 { pt3dadd( -106.151, 17.7992, -19.625, 1.84 ) }
    dend_34 { pt3dadd( -106.889, 18.1103, -19.4806, 1.84 ) }
    dend_34 { pt3dadd( -109.747, 19.3154, -18.9415, 0.22 ) }
    dend_34 { pt3dadd( -112.784, 20.5137, -18.416, 0.15 ) }
    dend_34 { pt3dadd( -115.234, 21.3871, -18.0372, 0.15 ) }
    dend_34 { pt3dadd( -115.435, 21.449, -17.9991, 0.44 ) }
    dend_34 { pt3dadd( -115.721, 21.5229, -17.9439, 0.44 ) }
    dend_34 { pt3dadd( -116.303, 21.6407, -17.8419, 0.44 ) }
    dend_34 { pt3dadd( -118.726, 21.9086, -17.563, 0.15 ) }
    dend_34 { pt3dadd( -118.82, 21.9141, -17.5446, 0.15 ) }
    dend_34 { pt3dadd( -120.694, 21.9912, -17.0649, 1.47 ) }
    dend_34 { pt3dadd( -121.479, 22.0169, -16.8472, 2.14 ) }
    dend_34 { pt3dadd( -121.972, 22.0353, -16.6955, 2.43 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 84/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 14.8821, 23.7035, -2.56756, 1.03 ) }
    dend_29 { pt3dadd( 15.5546, 24.8842, -2.08922, 1.03 ) }
    dend_29 { pt3dadd( 15.9076, 25.4799, -1.83781, 0.96 ) }
    dend_29 { pt3dadd( 16.3957, 26.2741, -1.46205, 0.81 ) }
    dend_29 { pt3dadd( 16.8784, 27.0481, -1.09511, 0.81 ) }
    dend_29 { pt3dadd( 17.6127, 28.2658, -0.546599, 0.81 ) }
    dend_29 { pt3dadd( 18.2585, 29.3364, -0.0296489, 0.81 ) }
    dend_29 { pt3dadd( 18.3487, 29.4899, 0.0488293, 0.81 ) }
    dend_29 { pt3dadd( 18.8401, 30.3319, 0.498407, 1.11 ) }
    dend_29 { pt3dadd( 19.2927, 31.1143, 0.903561, 1.25 ) }
    dend_29 { pt3dadd( 19.8463, 32.0725, 1.40575, 1.25 ) }
    dend_29 { pt3dadd( 20.5611, 33.3077, 2.05539, 1.03 ) }
    dend_29 { pt3dadd( 21.22, 34.4297, 2.66366, 0.81 ) }
    dend_29 { pt3dadd( 22.1096, 35.9106, 3.43763, 0.81 ) }
    dend_29 { pt3dadd( 22.819, 37.0554, 3.99042, 0.81 ) }
    dend_29 { pt3dadd( 22.8645, 37.1256, 4.02273, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_29 { pt3dadd( 23.3524, 37.8704, 4.31272, 1.18 ) }
    dend_29 { pt3dadd( 23.5804, 38.2427, 4.41854, 1.18 ) }
    dend_29 { pt3dadd( 23.9692, 38.9616, 4.58211, 1.18 ) }
    dend_29 { pt3dadd( 24.5398, 40.1773, 4.86584, 1.47 ) }
    dend_29 { pt3dadd( 24.9762, 41.2716, 5.19127, 1.18 ) }
    dend_29 { pt3dadd( 25.4184, 42.4981, 5.6002, 0.74 ) }
    dend_29 { pt3dadd( 25.72, 43.4966, 5.96659, 0.74 ) }
    dend_29 { pt3dadd( 26.0796, 45.1922, 6.67599, 0.74 ) }
    dend_29 { pt3dadd( 26.319, 46.7348, 7.3867, 0.88 ) }
    dend_29 { pt3dadd( 26.5664, 49.0082, 8.58385, 0.88 ) }
    dend_29 { pt3dadd( 26.575, 49.1374, 8.65749, 0.88 ) }
    dend_29 { pt3dadd( 26.6489, 50.9576, 9.7645, 0.88 ) }
    dend_29 { pt3dadd( 26.7035, 53.5026, 11.3792, 0.88 ) }
    dend_29 { pt3dadd( 26.7045, 53.5905, 11.4368, 0.88 ) }
    dend_29 { pt3dadd( 26.72, 54.9522, 12.2834, 0.66 ) }
    dend_29 { pt3dadd( 26.754, 55.8409, 12.8322, 0.66 ) }
    dend_29 { pt3dadd( 26.8525, 57.0198, 13.5333, 0.66 ) }
    dend_29 { pt3dadd( 26.8661, 57.0954, 13.5805, 0.66 ) }
    dend_29 { pt3dadd( 27.2116, 58.0999, 14.2956, 1.03 ) }
    dend_29 { pt3dadd( 27.5174, 58.8505, 14.8676, 1.4 ) }
    dend_29 { pt3dadd( 27.8, 59.4046, 15.3294, 1.55 ) }
    dend_29 { pt3dadd( 28.1153, 59.9304, 15.7886, 1.69 ) }
    dend_29 { pt3dadd( 28.7455, 60.9459, 16.6408, 1.47 ) }
    dend_29 { pt3dadd( 29.5497, 62.1158, 17.684, 1.33 ) }
    dend_29 { pt3dadd( 29.5976, 62.1811, 17.749, 1.33 ) }
    dend_29 { pt3dadd( 30.2367, 63.0016, 18.6546, 0.81 ) }
    dend_29 { pt3dadd( 30.9649, 64.0106, 19.8303, 0.66 ) }
    dend_29 { pt3dadd( 31.3475, 64.7016, 20.6027, 0.66 ) }
    dend_29 { pt3dadd( 31.9445, 66.2016, 22.1441, 0.66 ) }
    dend_29 { pt3dadd( 32.108, 66.7668, 22.7058, 0.66 ) }
    dend_29 { pt3dadd( 32.1411, 66.9023, 22.84, 0.66 ) }
    dend_29 { pt3dadd( 32.3217, 67.9211, 23.8752, 0.66 ) }
    dend_29 { pt3dadd( 32.517, 69.2758, 25.1916, 0.66 ) }
    dend_29 { pt3dadd( 32.5351, 69.413, 25.3057, 0.66 ) }
    dend_29 { pt3dadd( 32.6884, 70.4202, 25.8769, 0.88 ) }
    dend_29 { pt3dadd( 32.9156, 71.3593, 26.2477, 1.03 ) }
    dend_29 { pt3dadd( 32.9485, 71.4705, 26.2813, 1.03 ) }
    dend_29 { pt3dadd( 33.4681, 72.8471, 26.5533, 1.03 ) }
    dend_29 { pt3dadd( 33.5144, 72.9573, 26.5679, 1.03 ) }
    dend_29 { pt3dadd( 34.0789, 74.3362, 26.6792, 1.03 ) }
    dend_29 { pt3dadd( 34.9077, 76.41, 26.7774, 1.03 ) }
    dend_29 { pt3dadd( 34.9462, 76.5079, 26.7813, 1.03 ) }
    dend_29 { pt3dadd( 35.6428, 78.3053, 26.8428, 0.66 ) }
    dend_29 { pt3dadd( 36.7971, 81.2564, 26.9175, 0.66 ) }
    dend_29 { pt3dadd( 37.2514, 82.4003, 26.9449, 0.66 ) }
    dend_29 { pt3dadd( 37.2917, 82.4974, 26.9464, 0.66 ) }
    dend_29 { pt3dadd( 37.6852, 83.3866, 26.9505, 0.88 ) }
    dend_29 { pt3dadd( 38.0139, 84.1138, 26.9638, 1.18 ) }
    dend_29 { pt3dadd( 38.5013, 85.139, 26.9945, 1.4 ) }
    dend_29 { pt3dadd( 38.9384, 85.9974, 27.0423, 1.4 ) }
    dend_29 { pt3dadd( 39.2485, 86.615, 27.1043, 1.4 ) }
    dend_29 { pt3dadd( 39.7426, 87.6324, 27.2147, 0.81 ) }
    dend_29 { pt3dadd( 40.1044, 88.4886, 27.3635, 0.66 ) }
    dend_29 { pt3dadd( 40.3938, 89.1884, 27.5987, 0.52 ) }
    dend_29 { pt3dadd( 40.5055, 89.4761, 27.7181, 0.52 ) }
    dend_29 { pt3dadd( 41.0224, 90.8071, 28.3183, 0.52 ) }
    dend_29 { pt3dadd( 41.0579, 90.8973, 28.3592, 0.52 ) }
    dend_29 { pt3dadd( 41.7936, 92.7125, 29.0792, 0.52 ) }
    dend_29 { pt3dadd( 42.7003, 94.7977, 29.7064, 0.44 ) }
    dend_29 { pt3dadd( 43.2848, 96.0791, 30.0173, 0.66 ) }
    dend_29 { pt3dadd( 43.6177, 96.7805, 30.1426, 0.81 ) }
    dend_29 { pt3dadd( 44.2968, 98.1434, 30.299, 0.81 ) }
    dend_29 { pt3dadd( 45.0238, 99.5313, 30.355, 0.66 ) }
    dend_29 { pt3dadd( 46.1041, 101.459, 30.2304, 0.52 ) }
    dend_29 { pt3dadd( 46.1539, 101.55, 30.2188, 0.52 ) }
    dend_29 { pt3dadd( 46.8751, 102.81, 30.0977, 0.52 ) }
    dend_29 { pt3dadd( 46.9272, 102.9, 30.0896, 0.52 ) }
    dend_29 { pt3dadd( 47.4998, 103.871, 30.0157, 0.88 ) }
    dend_29 { pt3dadd( 48.0885, 104.875, 29.9765, 1.18 ) }
    dend_29 { pt3dadd( 48.1413, 104.965, 29.9726, 1.18 ) }
    dend_29 { pt3dadd( 48.7165, 105.948, 29.9299, 1.18 ) }
    dend_29 { pt3dadd( 49.2892, 106.939, 29.8899, 0.74 ) }
    dend_29 { pt3dadd( 49.9009, 108.036, 29.8564, 0.37 ) }
    dend_29 { pt3dadd( 50.847, 109.753, 29.812, 0.37 ) }
    dend_29 { pt3dadd( 51.2369, 110.405, 29.7839, 0.37 ) }
    dend_29 { pt3dadd( 51.4586, 110.734, 29.7598, 0.74 ) }
    dend_29 { pt3dadd( 51.9669, 111.379, 29.6845, 1.03 ) }
    dend_29 { pt3dadd( 52.0464, 111.465, 29.6704, 1.03 ) }
    dend_29 { pt3dadd( 52.8781, 112.237, 29.4898, 1.25 ) }
    dend_29 { pt3dadd( 53.9217, 113.101, 29.2374, 1.25 ) }
    dend_29 { pt3dadd( 54.4323, 113.539, 29.1177, 1.47 ) }
    dend_29 { pt3dadd( 54.8496, 113.937, 29.0297, 1.47 ) }
    dend_29 { pt3dadd( 55.0024, 114.096, 29.0064, 1.47 ) }
    dend_29 { pt3dadd( 55.6028, 114.811, 28.9617, 1.25 ) }
    dend_29 { pt3dadd( 56.2441, 115.687, 28.9633, 1.03 ) }
    dend_29 { pt3dadd( 56.8931, 116.669, 29.0259, 0.88 ) }
    dend_29 { pt3dadd( 58.027, 118.499, 29.2036, 0.59 ) }
    dend_29 { pt3dadd( 58.6884, 119.617, 29.329, 0.37 ) }
    dend_29 { pt3dadd( 59.4303, 120.854, 29.5402, 0.37 ) }
    dend_29 { pt3dadd( 59.9627, 121.729, 29.7317, 0.52 ) }
    dend_29 { pt3dadd( 60.3834, 122.405, 29.9059, 0.66 ) }
    dend_29 { pt3dadd( 61.0091, 123.375, 30.1833, 0.66 ) }
    dend_29 { pt3dadd( 62.1356, 125.066, 30.7133, 0.66 ) }
    dend_29 { pt3dadd( 63.0963, 126.49, 31.1524, 0.66 ) }
    dend_29 { pt3dadd( 63.1529, 126.574, 31.1782, 0.66 ) }
    dend_29 { pt3dadd( 63.6451, 127.345, 31.4099, 1.25 ) }
    dend_29 { pt3dadd( 64.1081, 128.136, 31.6317, 1.69 ) }
    dend_29 { pt3dadd( 64.5912, 129.117, 31.9016, 1.84 ) }
    dend_29 { pt3dadd( 64.7838, 129.605, 32.0382, 1.99 ) }
    dend_29 { pt3dadd( 65.0718, 130.53, 32.2677, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_29 { pt3dadd( 65.1882, 130.94, 32.3689, 0.88 ) }
    dend_29 { pt3dadd( 65.2619, 131.254, 32.4488, 0.66 ) }
    dend_29 { pt3dadd( 65.4581, 132.194, 32.7135, 0.44 ) }
    dend_29 { pt3dadd( 65.7769, 133.867, 33.2044, 0.29 ) }
    dend_29 { pt3dadd( 66.0079, 135.122, 33.5777, 0.29 ) }
    dend_29 { pt3dadd( 66.6479, 138.65, 34.6661, 0.29 ) }
    dend_29 { pt3dadd( 66.9823, 140.477, 35.2326, 0.22 ) }
    dend_29 { pt3dadd( 67.1512, 141.32, 35.5235, 0.29 ) }
    dend_29 { pt3dadd( 67.3046, 142.027, 35.786, 0.44 ) }
    dend_29 { pt3dadd( 67.65, 143.543, 36.3754, 0.44 ) }
    dend_29 { pt3dadd( 67.9802, 144.786, 36.9087, 0.44 ) }
    dend_29 { pt3dadd( 68.1854, 145.428, 37.2146, 1.11 ) }
    dend_29 { pt3dadd( 68.9152, 147.111, 38.0651, 1.77 ) }
    dend_29 { pt3dadd( 69.3351, 147.943, 38.4665, 1.92 ) }
    dend_29 { pt3dadd( 69.8845, 148.751, 38.9616, 2.14 ) }
    dend_29 { pt3dadd( 70.2477, 149.202, 39.25, 1.99 ) }
    dend_29 { pt3dadd( 70.6257, 149.627, 39.512, 1.99 ) }
    dend_29 { pt3dadd( 71.9974, 151.132, 40.3781, 0.37 ) }
    dend_29 { pt3dadd( 73.0384, 152.267, 40.9694, 0.37 ) }
    dend_29 { pt3dadd( 75.7818, 155.21, 42.4453, 0.29 ) }
    dend_29 { pt3dadd( 76.6371, 156.109, 42.9202, 1.11 ) }
    dend_29 { pt3dadd( 77.2653, 156.728, 43.3839, 1.92 ) }
    dend_29 { pt3dadd( 77.864, 157.307, 43.8975, 2.28 ) }
    dend_29 { pt3dadd( 78.1997, 157.616, 44.1976, 2.43 ) }
    dend_29 { pt3dadd( 78.9243, 158.184, 44.9117, 2.43 ) }
    dend_29 { pt3dadd( 80.1707, 159.139, 46.2853, 2.43 ) }
    dend_29 { pt3dadd( 83.2011, 161.353, 49.9126, 0.37 ) }
    dend_29 { pt3dadd( 83.7911, 161.794, 50.6691, 0.37 ) }
    dend_29 { pt3dadd( 84.5121, 162.371, 51.6452, 0.37 ) }
    dend_29 { pt3dadd( 85.5969, 163.376, 53.2066, 0.59 ) }
    dend_29 { pt3dadd( 86.2227, 164.149, 54.2076, 0.81 ) }
    dend_29 { pt3dadd( 86.2916, 164.319, 54.3367, 0.81 ) }
    dend_29 { pt3dadd( 86.4352, 165.509, 54.7987, 0.81 ) }
    dend_29 { pt3dadd( 86.516, 166.809, 55.236, 0.81 ) }
    dend_29 { pt3dadd( 86.5405, 167.77, 55.5199, 0.59 ) }
    dend_29 { pt3dadd( 86.561, 168.944, 55.8053, 0.44 ) }
    dend_29 { pt3dadd( 86.6283, 170.886, 56.2574, 0.44 ) }
    dend_29 { pt3dadd( 86.7317, 173.243, 56.7965, 0.44 ) }
    dend_29 { pt3dadd( 86.8218, 174.761, 57.1329, 1.03 ) }
    dend_29 { pt3dadd( 86.8769, 175.623, 57.3247, 1.62 ) }
    dend_29 { pt3dadd( 86.8806, 175.741, 57.3493, 1.62 ) }
    dend_29 { pt3dadd( 86.8758, 176.962, 57.5913, 2.14 ) }
    dend_29 { pt3dadd( 86.8612, 177.273, 57.6489, 2.36 ) }
    dend_29 { pt3dadd( 86.7533, 178.248, 57.8219, 2.36 ) }
    dend_29 { pt3dadd( 86.5335, 179.557, 58.0558, 1.77 ) }
    dend_29 { pt3dadd( 86.2006, 181.077, 58.3587, 0.52 ) }
    dend_29 { pt3dadd( 86.1797, 181.163, 58.376, 0.52 ) }
    dend_29 { pt3dadd( 86.0638, 181.575, 58.4575, 0.37 ) }
    dend_29 { pt3dadd( 85.829, 182.309, 58.6079, 0.37 ) }
    dend_29 { pt3dadd( 85.7188, 182.588, 58.6704, 0.29 ) }
    dend_29 { pt3dadd( 85.0779, 183.977, 59.0519, 0.29 ) }
    dend_29 { pt3dadd( 91.9171, 197.161, 61.2286, 0.29 ) }
    dend_29 { pt3dadd( 97.2439, 210.982, 63.966, 0.29 ) }
    dend_29 { pt3dadd( 101.982, 225.266, 64.4927, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 54/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 14.8821, 23.7035, -2.56756, 1.33 ) }
    dend_28 { pt3dadd( 15.8984, 23.2441, -2.88365, 1.33 ) }
    dend_28 { pt3dadd( 16.9893, 22.7514, -3.2035, 0.96 ) }
    dend_28 { pt3dadd( 18.2089, 22.1831, -3.55505, 0.88 ) }
    dend_28 { pt3dadd( 18.2621, 22.1572, -3.57046, 0.88 ) }
    dend_28 { pt3dadd( 19.5794, 21.4935, -3.95836, 0.88 ) }
    dend_28 { pt3dadd( 20.8351, 20.8502, -4.33148, 0.81 ) }
    dend_28 { pt3dadd( 20.8878, 20.8234, -4.34689, 0.81 ) }
    dend_28 { pt3dadd( 21.562, 20.4714, -4.54392, 0.81 ) }
    dend_28 { pt3dadd( 22.2333, 20.1326, -4.7443, 0.81 ) }
    dend_28 { pt3dadd( 22.9847, 19.7665, -4.97472, 0.81 ) }
    dend_28 { pt3dadd( 23.0384, 19.7429, -4.99186, 0.81 ) }
    dend_28 { pt3dadd( 24.0217, 19.362, -5.32442, 0.81 ) }
    dend_28 { pt3dadd( 24.2641, 19.2797, -5.40425, 0.81 ) }
    dend_28 { pt3dadd( 25.2342, 19.0001, -5.71498, 0.81 ) }
    dend_28 { pt3dadd( 25.8212, 18.8525, -5.91782, 0.66 ) }
    dend_28 { pt3dadd( 26.8862, 18.6052, -6.30985, 0.66 ) }
    dend_28 { pt3dadd( 27.5388, 18.4588, -6.56376, 0.88 ) }
    dend_28 { pt3dadd( 28.1149, 18.3401, -6.7999, 0.88 ) }
    dend_28 { pt3dadd( 28.472, 18.2744, -6.95616, 0.88 ) }
    dend_28 { pt3dadd( 29.1789, 18.1759, -7.30927, 0.74 ) }
    dend_28 { pt3dadd( 29.4044, 18.1522, -7.43391, 0.74 ) }
    dend_28 { pt3dadd( 29.9498, 18.1062, -7.77617, 0.66 ) }
    dend_28 { pt3dadd( 30.534, 18.069, -8.16435, 0.37 ) }
    dend_28 { pt3dadd( 31.2859, 18.0194, -8.70461, 0.29 ) }
    dend_28 { pt3dadd( 31.9834, 17.9759, -9.21848, 0.29 ) }
    dend_28 { pt3dadd( 32.0321, 17.9727, -9.25451, 0.29 ) }
    dend_28 { pt3dadd( 32.4504, 17.9438, -9.59009, 0.44 ) }
    dend_28 { pt3dadd( 32.9375, 17.8966, -10.0055, 0.44 ) }
    dend_28 { pt3dadd( 33.5679, 17.802, -10.5559, 0.44 ) }
    dend_28 { pt3dadd( 33.8134, 17.751, -10.7568, 1.03 ) }
    dend_28 { pt3dadd( 33.8605, 17.7382, -10.7932, 1.03 ) }
    dend_28 { pt3dadd( 34.5608, 17.5408, -11.3061, 1.55 ) }
    dend_28 { pt3dadd( 35.004, 17.4146, -11.6016, 1.84 ) }
    dend_28 { pt3dadd( 35.2644, 17.3414, -11.7658, 1.84 ) }
    dend_28 { pt3dadd( 35.7593, 17.2029, -12.0486, 1.55 ) }
    dend_28 { pt3dadd( 36.4938, 16.9942, -12.4551, 0.59 ) }
    dend_28 { pt3dadd( 36.8834, 16.8875, -12.658, 0.37 ) }
    dend_28 { pt3dadd( 37.5547, 16.6956, -12.9786, 0.22 ) }
    dend_28 { pt3dadd( 37.7839, 16.6325, -13.0856, 0.44 ) }
    dend_28 { pt3dadd( 38.1895, 16.518, -13.2653, 0.88 ) }
    dend_28 { pt3dadd( 38.2427, 16.5015, -13.2897, 0.88 ) }
    dend_28 { pt3dadd( 38.5879, 16.4003, -13.4437, 1.11 ) }
    dend_28 { pt3dadd( 38.898, 16.312, -13.5959, 1.11 ) }
    dend_28 { pt3dadd( 39.0633, 16.2683, -13.6815, 1.11 ) }
    dend_28 { pt3dadd( 39.6293, 16.1321, -13.9124, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_28 { pt3dadd( 40.229, 15.9938, -14.0873, 0.22 ) }
    dend_28 { pt3dadd( 40.8671, 15.8437, -14.2247, 0.22 ) }
    dend_28 { pt3dadd( 41.066, 15.7982, -14.2557, 0.52 ) }
    dend_28 { pt3dadd( 41.6369, 15.6741, -14.318, 0.96 ) }
    dend_28 { pt3dadd( 42.6973, 15.4401, -14.3854, 1.25 ) }
    dend_28 { pt3dadd( 43.3438, 15.2989, -14.3888, 1.55 ) }
    dend_28 { pt3dadd( 43.6108, 15.2375, -14.3763, 1.69 ) }
    dend_28 { pt3dadd( 44.0402, 15.1315, -14.357, 1.33 ) }
    dend_28 { pt3dadd( 44.2353, 15.0866, -14.3495, 1.03 ) }
    dend_28 { pt3dadd( 44.3035, 15.0735, -14.3518, 1.03 ) }
    dend_28 { pt3dadd( 44.4896, 15.0421, -14.38, 0.88 ) }
    dend_28 { pt3dadd( 44.8008, 14.9898, -14.4389, 0.88 ) }
    dend_28 { pt3dadd( 45.1701, 14.9241, -14.5101, 0.52 ) }
    dend_28 { pt3dadd( 45.733, 14.8208, -14.6211, 0.29 ) }
    dend_28 { pt3dadd( 46.7278, 14.6409, -14.8242, 0.29 ) }
    dend_28 { pt3dadd( 47.0611, 14.5798, -14.8961, 0.88 ) }
    dend_28 { pt3dadd( 47.5632, 14.4772, -15.0163, 1.33 ) }
    dend_28 { pt3dadd( 47.6198, 14.4651, -15.0348, 1.33 ) }
    dend_28 { pt3dadd( 48.0315, 14.3755, -15.1972, 1.33 ) }
    dend_28 { pt3dadd( 48.2555, 14.3257, -15.301, 1.55 ) }
    dend_28 { pt3dadd( 48.6044, 14.2465, -15.473, 1.55 ) }
    dend_28 { pt3dadd( 49.4805, 14.0044, -15.9044, 0.22 ) }
    dend_28 { pt3dadd( 50.4667, 13.6873, -16.4417, 0.29 ) }
    dend_28 { pt3dadd( 50.5172, 13.6693, -16.4706, 0.29 ) }
    dend_28 { pt3dadd( 51.1611, 13.4142, -16.8516, 0.29 ) }
    dend_28 { pt3dadd( 51.2099, 13.3926, -16.8811, 0.29 ) }
    dend_28 { pt3dadd( 52.5214, 12.7466, -17.6837, 0.29 ) }
    dend_28 { pt3dadd( 53.1996, 12.3788, -18.0969, 1.11 ) }
    dend_28 { pt3dadd( 53.5034, 12.1908, -18.2865, 1.62 ) }
    dend_28 { pt3dadd( 53.8669, 11.9401, -18.5734, 1.84 ) }
    dend_28 { pt3dadd( 54.0981, 11.76, -18.8, 2.06 ) }
    dend_28 { pt3dadd( 54.3137, 11.5663, -19.0436, 1.84 ) }
    dend_28 { pt3dadd( 54.4455, 11.4271, -19.2234, 1.55 ) }
    dend_28 { pt3dadd( 54.8357, 11.004, -19.7027, 1.11 ) }
    dend_28 { pt3dadd( 55.5206, 10.2636, -20.5575, 0.29 ) }
    dend_28 { pt3dadd( 55.7044, 10.0694, -20.7816, 0.15 ) }
    dend_28 { pt3dadd( 56.2625, 9.51507, -21.4114, 0.15 ) }
    dend_28 { pt3dadd( 56.3397, 9.44188, -21.4898, 0.15 ) }
    dend_28 { pt3dadd( 57.2299, 8.61553, -22.2653, 0.15 ) }
    dend_28 { pt3dadd( 57.6929, 8.21344, -22.6117, 0.88 ) }
    dend_28 { pt3dadd( 57.9799, 7.97789, -22.7948, 1.69 ) }
    dend_28 { pt3dadd( 58.3664, 7.66675, -23.0419, 1.99 ) }
    dend_28 { pt3dadd( 58.8002, 7.33165, -23.3153, 1.99 ) }
    dend_28 { pt3dadd( 59.3068, 6.94789, -23.6245, 0.88 ) }
    dend_28 { pt3dadd( 59.9075, 6.50692, -23.9736, 0.22 ) }
    dend_28 { pt3dadd( 60.9954, 5.69546, -24.6265, 0.22 ) }
    dend_28 { pt3dadd( 61.2924, 5.48074, -24.8167, 0.59 ) }
    dend_28 { pt3dadd( 61.5996, 5.25671, -25.0221, 0.96 ) }
    dend_28 { pt3dadd( 61.8846, 5.05248, -25.2174, 1.11 ) }
    dend_28 { pt3dadd( 62.1584, 4.86322, -25.3961, 1.11 ) }
    dend_28 { pt3dadd( 63.0045, 4.2592, -25.9659, 0.15 ) }
    dend_28 { pt3dadd( 63.4089, 3.96395, -26.258, 0.15 ) }
    dend_28 { pt3dadd( 64.1051, 3.4447, -26.7666, 0.15 ) }
    dend_28 { pt3dadd( 64.1459, 3.41269, -26.7998, 0.15 ) }
    dend_28 { pt3dadd( 65.2802, 2.4636, -27.7678, 0.15 ) }
    dend_28 { pt3dadd( 65.8075, 2.00163, -28.2163, 1.25 ) }
    dend_28 { pt3dadd( 66.2181, 1.63046, -28.5547, 1.62 ) }
    dend_28 { pt3dadd( 66.4731, 1.3862, -28.7724, 1.62 ) }
    dend_28 { pt3dadd( 67.2253, 0.653631, -29.4247, 0.15 ) }
    dend_28 { pt3dadd( 68.0788, -0.219826, -30.1708, 0.15 ) }
    dend_28 { pt3dadd( 68.3157, -0.48604, -30.3732, 0.66 ) }
    dend_28 { pt3dadd( 68.5409, -0.742118, -30.5443, 1.03 ) }
    dend_28 { pt3dadd( 68.7838, -1.02976, -30.7241, 1.03 ) }
    dend_28 { pt3dadd( 68.923, -1.1965, -30.8177, 1.03 ) }
    dend_28 { pt3dadd( 69.3034, -1.66377, -31.0298, 0.15 ) }
    dend_28 { pt3dadd( 70.0473, -2.6258, -31.4876, 0.15 ) }
    dend_28 { pt3dadd( 70.0934, -2.68646, -31.5181, 0.52 ) }
    dend_28 { pt3dadd( 70.1928, -2.82394, -31.5863, 0.52 ) }
    dend_28 { pt3dadd( 70.4767, -3.23202, -31.7849, 0.59 ) }
    dend_28 { pt3dadd( 70.6163, -3.43752, -31.8805, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 70/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 36.4389, -255.999, 7.12774, 0.81 ) }
    dend_25 { pt3dadd( 37.267, -256.624, 7.22631, 0.81 ) }
    dend_25 { pt3dadd( 38.4489, -257.594, 7.35964, 0.52 ) }
    dend_25 { pt3dadd( 40.5461, -259.371, 7.59643, 0.44 ) }
    dend_25 { pt3dadd( 42.1119, -260.731, 7.77254, 0.44 ) }
    dend_25 { pt3dadd( 42.7518, -261.303, 7.84613, 0.81 ) }
    dend_25 { pt3dadd( 43.8182, -262.268, 7.97224, 0.15 ) }
    dend_25 { pt3dadd( 46.8737, -265.105, 8.12864, 0.15 ) }
    dend_25 { pt3dadd( 47.1122, -265.335, 8.1257, 0.44 ) }
    dend_25 { pt3dadd( 47.2908, -265.511, 8.1141, 0.44 ) }
    dend_25 { pt3dadd( 47.929, -266.128, 8.03842, 0.96 ) }
    dend_25 { pt3dadd( 48.1099, -266.3, 8.01252, 0.96 ) }
    dend_25 { pt3dadd( 49.7205, -267.827, 7.82341, 0.96 ) }
    dend_25 { pt3dadd( 49.8203, -267.914, 7.80547, 0.96 ) }
    dend_25 { pt3dadd( 50.6837, -268.671, 7.69203, 0.96 ) }
    dend_25 { pt3dadd( 51.595, -269.471, 7.61683, 0.96 ) }
    dend_25 { pt3dadd( 52.5909, -270.371, 7.59968, 0.29 ) }
    dend_25 { pt3dadd( 53.7007, -271.445, 7.71459, 0.29 ) }
    dend_25 { pt3dadd( 53.7829, -271.528, 7.72925, 0.29 ) }
    dend_25 { pt3dadd( 54.2183, -271.968, 7.79113, 0.52 ) }
    dend_25 { pt3dadd( 54.341, -272.097, 7.80367, 0.52 ) }
    dend_25 { pt3dadd( 54.8816, -272.668, 7.84547, 0.52 ) }
    dend_25 { pt3dadd( 56.4862, -274.379, 7.96336, 0.22 ) }
    dend_25 { pt3dadd( 57.1199, -275.106, 7.986, 0.37 ) }
    dend_25 { pt3dadd( 57.2, -275.214, 7.99071, 0.37 ) }
    dend_25 { pt3dadd( 57.5592, -275.766, 8.02278, 0.37 ) }
    dend_25 { pt3dadd( 57.6968, -276.001, 8.04141, 0.37 ) }
    dend_25 { pt3dadd( 57.8816, -276.35, 8.07629, 0.37 ) }
    dend_25 { pt3dadd( 58.3889, -277.409, 8.21077, 0.22 ) }
    dend_25 { pt3dadd( 59.5046, -279.782, 8.58984, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_25 { pt3dadd( 59.7923, -280.4, 8.68829, 1.55 ) }
    dend_25 { pt3dadd( 60.3562, -281.607, 8.88391, 2.06 ) }
    dend_25 { pt3dadd( 60.3987, -281.698, 8.89883, 2.06 ) }
    dend_25 { pt3dadd( 60.6235, -282.169, 8.97986, 2.58 ) }
    dend_25 { pt3dadd( 61.1625, -283.237, 9.18497, 2.87 ) }
    dend_25 { pt3dadd( 72.4255, -295.172, 12.4591, 2.87 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 6/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 36.4389, -255.999, 7.12774, 0.96 ) }
    dend_22 { pt3dadd( 36.4254, -256.726, 7.11508, 0.96 ) }
    dend_22 { pt3dadd( 36.4179, -257.446, 7.1021, 0.66 ) }
    dend_22 { pt3dadd( 36.418, -258.273, 7.01332, 0.52 ) }
    dend_22 { pt3dadd( 36.3989, -259.299, 6.85504, 0.37 ) }
    dend_22 { pt3dadd( 36.3783, -260.36, 6.68573, 0.37 ) }
    dend_22 { pt3dadd( 36.3667, -261.395, 6.52406, 0.74 ) }
    dend_22 { pt3dadd( 36.3637, -262.203, 6.39614, 0.74 ) }
    dend_22 { pt3dadd( 36.4195, -263.646, 6.02303, 0.15 ) }
    dend_22 { pt3dadd( 36.5265, -265.117, 5.55304, 0.15 ) }
    dend_22 { pt3dadd( 36.7256, -267.524, 4.6756, 0.15 ) }
    dend_22 { pt3dadd( 36.8044, -268.207, 4.39008, 0.88 ) }
    dend_22 { pt3dadd( 36.9315, -269.147, 3.97372, 0.96 ) }
    dend_22 { pt3dadd( 37.4173, -272.343, 2.5451, 0.15 ) }
    dend_22 { pt3dadd( 37.6676, -273.824, 1.88294, 0.15 ) }
    dend_22 { pt3dadd( 37.8496, -274.774, 1.42502, 0.15 ) }
    dend_22 { pt3dadd( 38.4719, -277.562, 0.122212, 0.15 ) }
    dend_22 { pt3dadd( 38.6821, -278.303, -0.204112, 1.11 ) }
    dend_22 { pt3dadd( 38.9576, -279.122, -0.526698, 1.11 ) }
    dend_22 { pt3dadd( 39.1355, -279.556, -0.648088, 0.15 ) }
    dend_22 { pt3dadd( 39.179, -279.64, -0.671616, 0.15 ) }
    dend_22 { pt3dadd( 40.6492, -281.995, -1.2417, 0.15 ) }
    dend_22 { pt3dadd( 41.9915, -283.928, -1.63998, 0.15 ) }
    dend_22 { pt3dadd( 42.0565, -284.016, -1.65908, 0.15 ) }
    dend_22 { pt3dadd( 43.2419, -285.523, -1.99563, 0.15 ) }
    dend_22 { pt3dadd( 43.9506, -286.398, -2.18719, 1.84 ) }
    dend_22 { pt3dadd( 44.8539, -287.486, -2.43802, 2.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 19.3101, -108.57, 13.6589, 0.59 ) }
    dend_15 { pt3dadd( 21.828, -115.911, 20.2132, 0.59 ) }
    dend_15 { pt3dadd( 24.7338, -121.997, 27.7071, 0.59 ) }
    dend_15 { pt3dadd( 27.3364, -128.783, 34.7525, 0.59 ) }
    dend_15 { pt3dadd( 30.1077, -136.197, 41.1299, 0.59 ) }
    dend_15 { pt3dadd( 31.1872, -144.565, 46.9094, 0.59 ) }
    dend_15 { pt3dadd( 32.857, -152.833, 52.6823, 0.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.3101, -108.57, 13.6589, 0.52 ) }
    dend_14 { pt3dadd( 19.4041, -122.323, 8.47804, 0.59 ) }
    dend_14 { pt3dadd( 20.4093, -135.411, 2.00393, 0.59 ) }
    dend_14 { pt3dadd( 19.3082, -148.037, -5.24594, 0.59 ) }
    dend_14 { pt3dadd( 17.4785, -161.769, -10.1599, 0.59 ) }
    dend_14 { pt3dadd( 16.8827, -174.266, -17.6671, 0.59 ) }
    dend_14 { pt3dadd( 14.8871, -186.58, -25.2104, 0.59 ) }
    dend_14 { pt3dadd( 11.8998, -198.516, -32.9777, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 48/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.9753, -51.2588, -3.52106, 1.4 ) }
    dend_12 { pt3dadd( -11.9002, -53.4525, -5.91814, 1.4 ) }
    dend_12 { pt3dadd( -12.2442, -54.3199, -6.58432, 0.52 ) }
    dend_12 { pt3dadd( -12.2677, -54.3771, -6.61974, 0.52 ) }
    dend_12 { pt3dadd( -12.7193, -55.3928, -7.17285, 0.81 ) }
    dend_12 { pt3dadd( -13.0362, -56.0209, -7.5426, 1.03 ) }
    dend_12 { pt3dadd( -13.5008, -56.8264, -8.12785, 1.25 ) }
    dend_12 { pt3dadd( -14.1555, -57.8241, -8.74146, 0.66 ) }
    dend_12 { pt3dadd( -14.5791, -58.3969, -9.16658, 0.66 ) }
    dend_12 { pt3dadd( -14.9084, -58.7761, -9.51778, 0.66 ) }
    dend_12 { pt3dadd( -15.5923, -59.3949, -10.3654, 0.66 ) }
    dend_12 { pt3dadd( -16.4737, -60.041, -11.574, 0.66 ) }
    dend_12 { pt3dadd( -16.5091, -60.0652, -11.6288, 0.66 ) }
    dend_12 { pt3dadd( -16.8543, -60.3386, -12.2055, 0.66 ) }
    dend_12 { pt3dadd( -16.8762, -60.3712, -12.2525, 0.66 ) }
    dend_12 { pt3dadd( -17.1976, -61.2624, -13.02, 0.44 ) }
    dend_12 { pt3dadd( -17.2104, -61.3161, -13.0497, 0.44 ) }
    dend_12 { pt3dadd( -17.451, -62.2289, -13.4046, 0.44 ) }
    dend_12 { pt3dadd( -17.7043, -63.0417, -13.7416, 0.59 ) }
    dend_12 { pt3dadd( -18.1184, -64.2992, -14.2815, 0.88 ) }
    dend_12 { pt3dadd( -18.4205, -65.13, -14.629, 0.88 ) }
    dend_12 { pt3dadd( -18.4417, -65.1845, -14.6518, 0.88 ) }
    dend_12 { pt3dadd( -19.0283, -66.5954, -15.3246, 0.88 ) }
    dend_12 { pt3dadd( -19.5945, -67.7928, -15.965, 0.66 ) }
    dend_12 { pt3dadd( -19.9642, -68.4835, -16.3586, 0.59 ) }
    dend_12 { pt3dadd( -20.1965, -68.9068, -16.588, 0.59 ) }
    dend_12 { pt3dadd( -20.6713, -69.7979, -17.1179, 0.59 ) }
    dend_12 { pt3dadd( -21.0762, -70.5949, -17.5922, 0.22 ) }
    dend_12 { pt3dadd( -21.3106, -71.0912, -17.8816, 0.22 ) }
    dend_12 { pt3dadd( -21.5888, -71.6795, -18.2441, 0.22 ) }
    dend_12 { pt3dadd( -21.997, -72.5544, -18.8099, 0.22 ) }
    dend_12 { pt3dadd( -22.5039, -73.6899, -19.5679, 1.47 ) }
    dend_12 { pt3dadd( -22.7366, -74.2671, -19.9797, 2.28 ) }
    dend_12 { pt3dadd( -22.8882, -74.6835, -20.2756, 2.28 ) }
    dend_12 { pt3dadd( -23.4552, -76.4378, -21.605, 0.59 ) }
    dend_12 { pt3dadd( -23.653, -77.1457, -22.1988, 0.59 ) }
    dend_12 { pt3dadd( -23.6638, -77.1882, -22.2425, 0.59 ) }
    dend_12 { pt3dadd( -23.9506, -78.2226, -23.2798, 0.59 ) }
    dend_12 { pt3dadd( -24.2211, -79.1308, -24.2114, 0.44 ) }
    dend_12 { pt3dadd( -24.4486, -79.8758, -24.9783, 1.55 ) }
    dend_12 { pt3dadd( -24.7983, -81.0124, -26.1054, 1.55 ) }
    dend_12 { pt3dadd( -25.3428, -82.7537, -27.9059, 0.29 ) }
    dend_12 { pt3dadd( -25.9238, -84.4707, -29.6197, 0.22 ) }
    dend_12 { pt3dadd( -25.9395, -84.5137, -29.6613, 0.22 ) }
    dend_12 { pt3dadd( -26.1052, -84.9574, -30.0867, 1.18 ) }
    dend_12 { pt3dadd( -26.2389, -85.2886, -30.3703, 1.4 ) }
    dend_12 { pt3dadd( -26.7622, -86.472, -31.2687, 0.22 ) }
    dend_12 { pt3dadd( -27.3513, -87.8501, -32.3173, 0.22 ) }
    dend_12 { pt3dadd( -27.3713, -87.9044, -32.3587, 0.22 ) }
    dend_12 { pt3dadd( -27.5846, -88.4831, -32.7586, 1.84 ) }
    dend_12 { pt3dadd( -27.7131, -88.8219, -32.9666, 1.84 ) }
    dend_12 { pt3dadd( -27.7353, -88.8812, -32.9997, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -28.3658, -90.6592, -33.9581, 0.22 ) }
    dend_12 { pt3dadd( -29.1788, -92.9117, -35.0979, 0.22 ) }
    dend_12 { pt3dadd( -29.2566, -93.1185, -35.1942, 0.96 ) }
    dend_12 { pt3dadd( -29.4823, -93.7033, -35.441, 0.96 ) }
    dend_12 { pt3dadd( -29.5037, -93.7584, -35.4622, 0.96 ) }
    dend_12 { pt3dadd( -30.0586, -95.1379, -35.9236, 0.22 ) }
    dend_12 { pt3dadd( -31.263, -98.0312, -36.5658, 0.22 ) }
    dend_12 { pt3dadd( -31.4278, -98.4322, -36.6479, 1.55 ) }
    dend_12 { pt3dadd( -31.6322, -98.935, -36.7249, 1.84 ) }
    dend_12 { pt3dadd( -31.8558, -99.4885, -36.789, 1.11 ) }
    dend_12 { pt3dadd( -32.0543, -99.9819, -36.8264, 0.22 ) }
    dend_12 { pt3dadd( -33.194, -102.897, -36.8842, 0.22 ) }
    dend_12 { pt3dadd( -33.2186, -102.965, -36.8845, 0.22 ) }
    dend_12 { pt3dadd( -34.0542, -105.463, -36.8811, 0.22 ) }
    dend_12 { pt3dadd( -34.0759, -105.532, -36.8804, 0.22 ) }
    dend_12 { pt3dadd( -34.2115, -105.993, -36.8711, 1.25 ) }
    dend_12 { pt3dadd( -34.3605, -106.571, -36.8541, 1.25 ) }
    dend_12 { pt3dadd( -34.5311, -107.401, -36.8185, 0.15 ) }
    dend_12 { pt3dadd( -34.9237, -109.862, -36.8713, 0.15 ) }
    dend_12 { pt3dadd( -34.9306, -109.925, -36.8758, 0.15 ) }
    dend_12 { pt3dadd( -34.964, -110.263, -36.911, 0.96 ) }
    dend_12 { pt3dadd( -35.0143, -110.848, -36.9905, 0.96 ) }
    dend_12 { pt3dadd( -35.0499, -111.437, -37.1102, 0.15 ) }
    dend_12 { pt3dadd( -35.1413, -114.036, -37.7838, 0.15 ) }
    dend_12 { pt3dadd( -35.1449, -114.417, -37.8971, 1.11 ) }
    dend_12 { pt3dadd( -35.1457, -114.928, -38.0485, 1.25 ) }
    dend_12 { pt3dadd( -35.1466, -114.989, -38.0653, 1.25 ) }
    dend_12 { pt3dadd( -35.2362, -117.87, -38.885, 0.15 ) }
    dend_12 { pt3dadd( -35.2391, -117.931, -38.9019, 0.15 ) }
    dend_12 { pt3dadd( -35.2591, -118.24, -39.0013, 0.37 ) }
    dend_12 { pt3dadd( -35.3168, -118.685, -39.151, 0.37 ) }
    dend_12 { pt3dadd( -35.6332, -120.451, -39.8601, 0.22 ) }
    dend_12 { pt3dadd( -35.8967, -121.695, -40.4007, 1.47 ) }
    dend_12 { pt3dadd( -36.0251, -122.217, -40.6357, 1.47 ) }
    dend_12 { pt3dadd( -36.3933, -123.645, -41.3067, 0.15 ) }
    dend_12 { pt3dadd( -37.1963, -126.622, -42.7665, 0.15 ) }
    dend_12 { pt3dadd( -37.9454, -129.197, -44.0692, 0.15 ) }
    dend_12 { pt3dadd( -37.9619, -129.251, -44.0972, 0.15 ) }
    dend_12 { pt3dadd( -38.2618, -130.177, -44.5681, 0.15 ) }
    dend_12 { pt3dadd( -38.6364, -131.158, -45.0006, 1.62 ) }
    dend_12 { pt3dadd( -38.6601, -131.213, -45.0202, 1.62 ) }
    dend_12 { pt3dadd( -38.9725, -131.856, -45.2384, 1.62 ) }
    dend_12 { pt3dadd( -39.002, -131.909, -45.2519, 1.62 ) }
    dend_12 { pt3dadd( -39.4626, -132.713, -45.4405, 0.15 ) }
    dend_12 { pt3dadd( -41.7576, -136.336, -46.3123, 0.15 ) }
    dend_12 { pt3dadd( -41.8095, -136.414, -46.3295, 0.52 ) }
    dend_12 { pt3dadd( -41.8448, -136.464, -46.3408, 0.52 ) }
    dend_12 { pt3dadd( -42.1904, -136.934, -46.4478, 0.52 ) }
    dend_12 { pt3dadd( -42.3042, -137.078, -46.4802, 0.15 ) }
    dend_12 { pt3dadd( -43.9679, -138.987, -46.8858, 0.15 ) }
    dend_12 { pt3dadd( -44.2118, -139.24, -47.0147, 0.81 ) }
    dend_12 { pt3dadd( -44.5861, -139.652, -47.2753, 0.81 ) }
    dend_12 { pt3dadd( -44.6197, -139.693, -47.3078, 0.81 ) }
    dend_12 { pt3dadd( -44.7642, -139.871, -47.4746, 0.15 ) }
    dend_12 { pt3dadd( -44.796, -139.907, -47.5129, 0.15 ) }
    dend_12 { pt3dadd( -46.432, -141.442, -49.252, 0.15 ) }
    dend_12 { pt3dadd( -46.432, -141.442, -49.252, 0.44 ) }
    dend_12 { pt3dadd( -47.0778, -141.955, -49.8148, 0.22 ) }
    dend_12 { pt3dadd( -47.975, -142.65, -50.5682, 0.22 ) }
    dend_12 { pt3dadd( -49.4973, -143.792, -51.7771, 0.22 ) }
    dend_12 { pt3dadd( -51.6033, -145.278, -53.2754, 0.22 ) }
    dend_12 { pt3dadd( -51.9008, -145.465, -53.4428, 0.81 ) }
    dend_12 { pt3dadd( -52.3038, -145.712, -53.6592, 0.81 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.9753, -51.2588, -3.52106, 2.28 ) }
    dend_7 { pt3dadd( -10.8991, -51.7039, -3.42508, 2.28 ) }
    dend_7 { pt3dadd( -10.8833, -51.7917, -3.40843, 2.28 ) }
    dend_7 { pt3dadd( -10.6226, -53.3148, -3.15412, 1.62 ) }
    dend_7 { pt3dadd( -10.3151, -55.2441, -2.88892, 1.4 ) }
    dend_7 { pt3dadd( -10.029, -57.0108, -2.68734, 1.55 ) }
    dend_7 { pt3dadd( -9.77172, -58.5941, -2.52228, 1.55 ) }
    dend_7 { pt3dadd( -9.58005, -59.6898, -2.42823, 1.55 ) }
    dend_7 { pt3dadd( -9.36103, -60.8998, -2.34133, 1.33 ) }
    dend_7 { pt3dadd( -8.8822, -63.4233, -2.20731, 1.18 ) }
    dend_7 { pt3dadd( -8.36482, -66.2934, -2.08752, 1.18 ) }
    dend_7 { pt3dadd( -8.34997, -66.383, -2.0834, 1.18 ) }
    dend_7 { pt3dadd( -7.84582, -69.6409, -1.91798, 1.18 ) }
    dend_7 { pt3dadd( -7.83379, -69.7307, -1.9113, 1.18 ) }
    dend_7 { pt3dadd( -7.58192, -71.9538, -1.70552, 0.88 ) }
    dend_7 { pt3dadd( -7.17835, -76.8816, -1.17667, 0.88 ) }
    dend_7 { pt3dadd( -7.13224, -77.913, -1.05719, 1.18 ) }
    dend_7 { pt3dadd( -7.10769, -79.3319, -0.888969, 1.4 ) }
    dend_7 { pt3dadd( -7.14247, -81.3389, -0.637918, 1.4 ) }
    dend_7 { pt3dadd( -7.19528, -83.0425, -0.429419, 1.47 ) }
    dend_7 { pt3dadd( -7.2616, -84.387, -0.270522, 1.77 ) }
    dend_7 { pt3dadd( -7.31133, -85.72, -0.146112, 1.77 ) }
    dend_7 { pt3dadd( -7.33581, -87.1453, -0.0384153, 1.92 ) }
    dend_7 { pt3dadd( -7.33407, -87.2361, -0.033648, 1.92 ) }
    dend_7 { pt3dadd( -7.22546, -88.6611, 0.00123714, 1.55 ) }
    dend_7 { pt3dadd( -6.96594, -90.4463, 0.0554168, 1.47 ) }
    dend_7 { pt3dadd( -6.3341, -93.4386, 0.158953, 1.11 ) }
    dend_7 { pt3dadd( -6.30755, -93.5387, 0.162914, 1.11 ) }
    dend_7 { pt3dadd( -5.96522, -94.6687, 0.211412, 0.96 ) }
    dend_7 { pt3dadd( -5.5624, -95.8917, 0.243781, 1.18 ) }
    dend_7 { pt3dadd( -5.01173, -97.373, 0.258877, 1.47 ) }
    dend_7 { pt3dadd( -4.20869, -99.3712, 0.206036, 0.96 ) }
    dend_7 { pt3dadd( -3.68617, -100.654, 0.125088, 1.11 ) }
    dend_7 { pt3dadd( -3.65468, -100.738, 0.117783, 1.11 ) }
    dend_7 { pt3dadd( -3.23744, -102.033, -0.0229205, 1.4 ) }
    dend_7 { pt3dadd( -2.81988, -103.731, -0.165232, 1.84 ) }
    dend_7 { pt3dadd( -2.59917, -105.044, -0.229059, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( -2.49851, -106.002, -0.241743, 2.14 ) }
    dend_7 { pt3dadd( -2.45442, -106.949, -0.195045, 1.99 ) }
    dend_7 { pt3dadd( -2.47468, -108.285, -0.0775926, 1.18 ) }
    dend_7 { pt3dadd( -2.69885, -110.56, 0.183901, 1.03 ) }
    dend_7 { pt3dadd( -3.0217, -112.701, 0.437476, 0.88 ) }
    dend_7 { pt3dadd( -3.31084, -114.577, 0.646461, 0.74 ) }
    dend_7 { pt3dadd( -3.61958, -116.706, 0.854033, 0.59 ) }
    dend_7 { pt3dadd( -3.88855, -119.074, 1.03769, 0.59 ) }
    dend_7 { pt3dadd( -4.05422, -121.682, 1.18053, 0.59 ) }
    dend_7 { pt3dadd( -4.08712, -124.33, 1.31975, 0.59 ) }
    dend_7 { pt3dadd( -3.93287, -126.669, 1.47386, 0.59 ) }
    dend_7 { pt3dadd( -3.7997, -127.586, 1.54021, 1.18 ) }
    dend_7 { pt3dadd( -3.2094, -130.34, 1.71957, 1.18 ) }
    dend_7 { pt3dadd( -2.51587, -132.83, 1.90661, 0.88 ) }
    dend_7 { pt3dadd( -1.95041, -134.575, 2.05962, 1.25 ) }
    dend_7 { pt3dadd( -0.44353, -139.16, 2.49657, 1.25 ) }
    dend_7 { pt3dadd( 0.182023, -141.168, 2.68847, 0.81 ) }
    dend_7 { pt3dadd( 0.557698, -142.46, 2.79918, 1.47 ) }
    dend_7 { pt3dadd( 0.948528, -143.945, 2.90739, 1.84 ) }
    dend_7 { pt3dadd( 1.18928, -144.983, 2.9619, 2.14 ) }
    dend_7 { pt3dadd( 1.45383, -146.482, 2.99253, 0.74 ) }
    dend_7 { pt3dadd( 1.73008, -149.909, 3.06595, 0.52 ) }
    dend_7 { pt3dadd( 1.75245, -151.531, 3.10232, 0.52 ) }
    dend_7 { pt3dadd( 1.74477, -152.252, 3.12009, 0.88 ) }
    dend_7 { pt3dadd( 1.72607, -152.921, 3.13132, 1.18 ) }
    dend_7 { pt3dadd( 1.6262, -155.181, 3.14884, 1.18 ) }
    dend_7 { pt3dadd( 1.53401, -157.248, 3.16483, 0.66 ) }
    dend_7 { pt3dadd( 1.4145, -159.731, 3.18357, 0.59 ) }
    dend_7 { pt3dadd( 1.33848, -162.388, 3.20634, 0.88 ) }
    dend_7 { pt3dadd( 1.34389, -163.059, 3.21338, 1.33 ) }
    dend_7 { pt3dadd( 1.42269, -165.103, 3.23812, 1.33 ) }
    dend_7 { pt3dadd( 1.64964, -167.874, 3.24711, 1.33 ) }
    dend_7 { pt3dadd( 1.83809, -169.579, 3.23567, 1.62 ) }
    dend_7 { pt3dadd( 2.06378, -171.464, 3.20476, 1.62 ) }
    dend_7 { pt3dadd( 2.31283, -173.228, 3.12312, 1.55 ) }
    dend_7 { pt3dadd( 2.32983, -173.33, 3.11606, 1.55 ) }
    dend_7 { pt3dadd( 2.58826, -174.669, 2.99746, 1.11 ) }
    dend_7 { pt3dadd( 3.07622, -177.117, 2.73054, 0.66 ) }
    dend_7 { pt3dadd( 3.52559, -179.433, 2.42252, 0.66 ) }
    dend_7 { pt3dadd( 3.78059, -180.962, 2.20045, 1.47 ) }
    dend_7 { pt3dadd( 3.79249, -181.064, 2.18596, 1.47 ) }
    dend_7 { pt3dadd( 3.95741, -182.942, 1.93468, 1.47 ) }
    dend_7 { pt3dadd( 3.96292, -183.032, 1.92112, 1.47 ) }
    dend_7 { pt3dadd( 4.01676, -185.019, 1.57875, 1.77 ) }
    dend_7 { pt3dadd( 4.05559, -186.597, 1.25713, 2.21 ) }
    dend_7 { pt3dadd( 4.09126, -188.197, 0.933354, 2.21 ) }
    dend_7 { pt3dadd( 4.09339, -188.274, 0.918675, 2.21 ) }
    dend_7 { pt3dadd( 4.19446, -190.82, 0.501133, 2.36 ) }
    dend_7 { pt3dadd( 4.29973, -193.1, 0.190911, 2.36 ) }
    dend_7 { pt3dadd( 4.3988, -195.315, -0.0608684, 1.99 ) }
    dend_7 { pt3dadd( 4.46915, -196.917, -0.214892, 1.03 ) }
    dend_7 { pt3dadd( 4.58679, -200.804, -0.504057, 0.66 ) }
    dend_7 { pt3dadd( 4.65687, -205.282, -0.728085, 0.66 ) }
    dend_7 { pt3dadd( 4.65927, -207.181, -0.766435, 0.81 ) }
    dend_7 { pt3dadd( 4.65356, -208.449, -0.772096, 0.96 ) }
    dend_7 { pt3dadd( 4.62877, -209.694, -0.722068, 0.74 ) }
    dend_7 { pt3dadd( 4.58577, -212.249, -0.564908, 0.74 ) }
    dend_7 { pt3dadd( 4.56714, -213.573, -0.451523, 1.11 ) }
    dend_7 { pt3dadd( 4.56651, -213.677, -0.442645, 1.11 ) }
    dend_7 { pt3dadd( 4.58669, -215.197, -0.350557, 1.4 ) }
    dend_7 { pt3dadd( 4.67569, -218.241, -0.235156, 1.4 ) }
    dend_7 { pt3dadd( 4.80439, -221.486, -0.185333, 1.18 ) }
    dend_7 { pt3dadd( 4.80911, -221.577, -0.185631, 1.18 ) }
    dend_7 { pt3dadd( 4.97449, -224.683, -0.355844, 0.74 ) }
    dend_7 { pt3dadd( 5.04547, -225.852, -0.468763, 1.18 ) }
    dend_7 { pt3dadd( 5.12731, -226.904, -0.639679, 1.62 ) }
    dend_7 { pt3dadd( 5.27263, -228.453, -1.0359, 1.77 ) }
    dend_7 { pt3dadd( 5.43578, -229.988, -1.48279, 1.77 ) }
    dend_7 { pt3dadd( 5.69242, -232.118, -2.10782, 0.59 ) }
    dend_7 { pt3dadd( 6.15074, -235.374, -3.09406, 0.59 ) }
    dend_7 { pt3dadd( 6.58857, -238.285, -3.95893, 0.59 ) }
    dend_7 { pt3dadd( 6.93917, -240.51, -4.60034, 0.59 ) }
    dend_7 { pt3dadd( 7.11736, -241.65, -4.92087, 1.62 ) }
    dend_7 { pt3dadd( 7.36449, -243.413, -5.37974, 1.77 ) }
    dend_7 { pt3dadd( 7.83859, -247.204, -6.23076, 1.77 ) }
    dend_7 { pt3dadd( 7.98452, -248.529, -6.50501, 1.03 ) }
    dend_7 { pt3dadd( 8.20452, -250.97, -6.90061, 0.66 ) }
    dend_7 { pt3dadd( 8.38758, -253.361, -7.19306, 0.29 ) }
    dend_7 { pt3dadd( 8.47529, -254.945, -7.35127, 0.29 ) }
    dend_7 { pt3dadd( 8.51135, -256.036, -7.42828, 0.29 ) }
    dend_7 { pt3dadd( 8.50917, -256.79, -7.43642, 1.03 ) }
    dend_7 { pt3dadd( 8.48307, -257.938, -7.42449, 1.25 ) }
    dend_7 { pt3dadd( 8.39603, -259.482, -7.3602, 1.25 ) }
    dend_7 { pt3dadd( 8.30005, -260.79, -7.25544, 0.37 ) }
    dend_7 { pt3dadd( 8.29289, -260.894, -7.2476, 0.37 ) }
    dend_7 { pt3dadd( 8.06867, -263.389, -7.09522, 0.29 ) }
    dend_7 { pt3dadd( 8.05862, -263.492, -7.09423, 0.29 ) }
    dend_7 { pt3dadd( 7.98222, -264.295, -7.11537, 1.33 ) }
    dend_7 { pt3dadd( 7.83149, -265.809, -7.18245, 2.21 ) }
    dend_7 { pt3dadd( 7.64098, -267.889, -7.31979, 2.21 ) }
    dend_7 { pt3dadd( 7.43145, -270.389, -7.50046, 1.84 ) }
    dend_7 { pt3dadd( 7.25829, -272.732, -7.69952, 1.4 ) }
    dend_7 { pt3dadd( 7.12151, -274.707, -7.87939, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -121.086, -35.8709, -13.0856, 0.66 ) }
    dend_3 { pt3dadd( -121.877, -36.5581, -12.2542, 0.66 ) }
    dend_3 { pt3dadd( -121.9, -36.5793, -12.2277, 0.66 ) }
    dend_3 { pt3dadd( -122.144, -36.8564, -11.8506, 0.22 ) }
    dend_3 { pt3dadd( -122.257, -36.9532, -11.6184, 0.22 ) }
    dend_3 { pt3dadd( -122.452, -37.0983, -11.2363, 0.22 ) }
    dend_3 { pt3dadd( -122.47, -37.1109, -11.2018, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_3 { pt3dadd( -122.673, -37.2423, -10.8216, 1.11 ) }
    dend_3 { pt3dadd( -123.043, -37.477, -10.1066, 2.06 ) }
    dend_3 { pt3dadd( -123.793, -38.0557, -8.50743, 0.22 ) }
    dend_3 { pt3dadd( -123.958, -38.1897, -8.15211, 0.22 ) }
    dend_3 { pt3dadd( -123.974, -38.2034, -8.11693, 0.22 ) }
    dend_3 { pt3dadd( -124.054, -38.288, -7.93655, 0.22 ) }
    dend_3 { pt3dadd( -124.069, -38.3113, -7.89852, 0.22 ) }
    dend_3 { pt3dadd( -124.249, -38.883, -7.21337, 0.22 ) }
    dend_3 { pt3dadd( -124.249, -38.9174, -7.18878, 0.22 ) }
    dend_3 { pt3dadd( -124.248, -39.2126, -6.95306, 0.66 ) }
    dend_3 { pt3dadd( -124.258, -39.3828, -6.78777, 0.66 ) }
    dend_3 { pt3dadd( -124.263, -39.4151, -6.7528, 0.66 ) }
    dend_3 { pt3dadd( -124.414, -39.9343, -6.1592, 0.22 ) }
    dend_3 { pt3dadd( -124.607, -40.3543, -5.66199, 0.22 ) }
    dend_3 { pt3dadd( -124.619, -40.386, -5.63707, 0.22 ) }
    dend_3 { pt3dadd( -124.776, -40.819, -5.32527, 0.74 ) }
    dend_3 { pt3dadd( -124.879, -41.132, -5.1144, 1.03 ) }
    dend_3 { pt3dadd( -124.925, -41.2932, -5.01056, 1.03 ) }
    dend_3 { pt3dadd( -124.966, -41.5365, -4.87468, 0.15 ) }
    dend_3 { pt3dadd( -125.07, -42.7034, -4.23067, 0.15 ) }
    dend_3 { pt3dadd( -125.095, -43.4269, -3.8113, 1.03 ) }
    dend_3 { pt3dadd( -125.093, -43.7714, -3.60824, 1.47 ) }
    dend_3 { pt3dadd( -125.069, -44.1687, -3.35847, 0.22 ) }
    dend_3 { pt3dadd( -124.964, -45.1839, -2.6938, 0.22 ) }
    dend_3 { pt3dadd( -124.956, -45.2327, -2.66023, 0.22 ) }
    dend_3 { pt3dadd( -124.831, -45.8035, -2.14408, 0.22 ) }
    dend_3 { pt3dadd( -124.825, -45.8334, -2.11529, 0.22 ) }
    dend_3 { pt3dadd( -124.786, -46.0734, -1.83578, 1.11 ) }
    dend_3 { pt3dadd( -124.775, -46.1766, -1.69766, 1.11 ) }
    dend_3 { pt3dadd( -124.774, -46.2257, -1.62334, 1.11 ) }
    dend_3 { pt3dadd( -124.735, -47.1373, -0.553819, 0.22 ) }
    dend_3 { pt3dadd( -124.719, -47.4962, -0.168425, 0.22 ) }
    dend_3 { pt3dadd( -124.715, -47.5625, -0.0933307, 0.81 ) }
    dend_3 { pt3dadd( -124.708, -47.7457, 0.11551, 0.81 ) }
    dend_3 { pt3dadd( -124.708, -48.0959, 0.528706, 0.15 ) }
    dend_3 { pt3dadd( -124.737, -48.6577, 1.16752, 0.15 ) }
    dend_3 { pt3dadd( -124.765, -49.0443, 1.57801, 0.88 ) }
    dend_3 { pt3dadd( -124.848, -49.7181, 2.3463, 1.55 ) }
    dend_3 { pt3dadd( -124.9, -49.9473, 2.62774, 1.92 ) }
    dend_3 { pt3dadd( -125.116, -50.4408, 3.48759, 0.15 ) }
    dend_3 { pt3dadd( -125.203, -50.5708, 3.78754, 0.15 ) }
    dend_3 { pt3dadd( -125.239, -50.6207, 3.9018, 0.59 ) }
    dend_3 { pt3dadd( -125.265, -50.6613, 3.98655, 0.59 ) }
    dend_3 { pt3dadd( -125.498, -51.0234, 4.74474, 0.59 ) }
    dend_3 { pt3dadd( -125.945, -51.9517, 6.50451, 0.22 ) }
    dend_3 { pt3dadd( -125.953, -51.9722, 6.5398, 0.22 ) }
    dend_3 { pt3dadd( -126.123, -52.6797, 7.67634, 0.22 ) }
    dend_3 { pt3dadd( -126.128, -52.7054, 7.71599, 0.52 ) }
    dend_3 { pt3dadd( -126.131, -52.7296, 7.74975, 0.52 ) }
    dend_3 { pt3dadd( -126.122, -53.5362, 8.58073, 0.15 ) }
    dend_3 { pt3dadd( -126.119, -53.5726, 8.60231, 0.15 ) }
    dend_3 { pt3dadd( -126.062, -54.303, 9.09552, 1.18 ) }
    dend_3 { pt3dadd( -127.595, -57.9853, 13.5296, 1.18 ) }
    dend_3 { pt3dadd( -129.193, -60.4545, 18.6424, 1.18 ) }
    dend_3 { pt3dadd( -130.238, -63.3929, 23.6773, 1.18 ) }
    dend_3 { pt3dadd( -132.311, -67.1623, 27.8135, 1.18 ) }
    dend_3 { pt3dadd( -135.086, -71.3911, 31.0222, 1.18 ) }
    dend_3 { pt3dadd( -136.686, -76.0977, 34.4284, 1.18 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 58/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -121.086, -35.8709, -13.0856, 0.22 ) }
    dend_2 { pt3dadd( -122.452, -36.492, -13.3563, 0.22 ) }
    dend_2 { pt3dadd( -122.517, -36.5225, -13.3685, 0.22 ) }
    dend_2 { pt3dadd( -123.712, -37.0595, -13.5721, 0.22 ) }
    dend_2 { pt3dadd( -124.096, -37.2268, -13.6338, 0.81 ) }
    dend_2 { pt3dadd( -124.553, -37.4115, -13.6933, 0.81 ) }
    dend_2 { pt3dadd( -124.636, -37.4442, -13.7061, 0.81 ) }
    dend_2 { pt3dadd( -124.902, -37.539, -13.7444, 0.81 ) }
    dend_2 { pt3dadd( -125.546, -37.7649, -13.8464, 0.15 ) }
    dend_2 { pt3dadd( -125.675, -37.8087, -13.8681, 0.15 ) }
    dend_2 { pt3dadd( -128.216, -38.7016, -14.2855, 0.15 ) }
    dend_2 { pt3dadd( -128.748, -38.8918, -14.3805, 0.81 ) }
    dend_2 { pt3dadd( -129.127, -39.027, -14.4505, 0.96 ) }
    dend_2 { pt3dadd( -129.462, -39.1474, -14.5146, 0.96 ) }
    dend_2 { pt3dadd( -130.323, -39.4639, -14.6815, 0.15 ) }
    dend_2 { pt3dadd( -132.013, -40.1435, -14.9814, 0.15 ) }
    dend_2 { pt3dadd( -132.38, -40.3029, -15.0184, 0.74 ) }
    dend_2 { pt3dadd( -132.823, -40.4993, -15.0366, 1.11 ) }
    dend_2 { pt3dadd( -133.018, -40.588, -15.0387, 1.11 ) }
    dend_2 { pt3dadd( -133.664, -40.8767, -14.9969, 0.22 ) }
    dend_2 { pt3dadd( -136.129, -41.8235, -14.6897, 0.15 ) }
    dend_2 { pt3dadd( -137.249, -42.1729, -14.5087, 1.33 ) }
    dend_2 { pt3dadd( -137.634, -42.2674, -14.4455, 1.62 ) }
    dend_2 { pt3dadd( -137.705, -42.2796, -14.4334, 1.62 ) }
    dend_2 { pt3dadd( -138.983, -42.4134, -14.2167, 0.15 ) }
    dend_2 { pt3dadd( -141.37, -42.4879, -13.821, 0.15 ) }
    dend_2 { pt3dadd( -142.186, -42.4467, -13.7048, 0.66 ) }
    dend_2 { pt3dadd( -143.262, -42.3871, -13.6099, 0.66 ) }
    dend_2 { pt3dadd( -144.27, -42.3363, -13.5416, 1.69 ) }
    dend_2 { pt3dadd( -144.879, -42.3069, -13.5155, 2.14 ) }
    dend_2 { pt3dadd( -145.142, -42.2976, -13.5165, 2.14 ) }
    dend_2 { pt3dadd( -146.234, -42.3012, -13.5127, 0.15 ) }
    dend_2 { pt3dadd( -147.325, -42.3645, -13.5183, 0.15 ) }
    dend_2 { pt3dadd( -147.523, -42.39, -13.5308, 0.81 ) }
    dend_2 { pt3dadd( -147.575, -42.4032, -13.539, 0.81 ) }
    dend_2 { pt3dadd( -148.107, -42.5819, -13.6671, 1.11 ) }
    dend_2 { pt3dadd( -148.537, -42.7577, -13.7941, 0.66 ) }
    dend_2 { pt3dadd( -148.656, -42.8153, -13.8348, 0.66 ) }
    dend_2 { pt3dadd( -149.253, -43.146, -14.0539, 0.15 ) }
    dend_2 { pt3dadd( -151.082, -44.2088, -14.7054, 0.15 ) }
    dend_2 { pt3dadd( -151.88, -44.6903, -14.9835, 1.62 ) }
    dend_2 { pt3dadd( -152.273, -44.937, -15.1149, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_2 { pt3dadd( -152.544, -45.1119, -15.2083, 1.99 ) }
    dend_2 { pt3dadd( -153.305, -45.585, -15.46, 0.15 ) }
    dend_2 { pt3dadd( -153.935, -45.9494, -15.6698, 0.29 ) }
    dend_2 { pt3dadd( -154.092, -46.0346, -15.7291, 0.59 ) }
    dend_2 { pt3dadd( -154.511, -46.2421, -15.8804, 0.59 ) }
    dend_2 { pt3dadd( -155.181, -46.5495, -16.1262, 0.22 ) }
    dend_2 { pt3dadd( -155.811, -46.824, -16.406, 0.22 ) }
    dend_2 { pt3dadd( -157.511, -47.5506, -17.2086, 0.15 ) }
    dend_2 { pt3dadd( -157.875, -47.7065, -17.3859, 0.74 ) }
    dend_2 { pt3dadd( -158.327, -47.8985, -17.6031, 0.74 ) }
    dend_2 { pt3dadd( -158.634, -48.0283, -17.7464, 0.74 ) }
    dend_2 { pt3dadd( -159.733, -48.5053, -18.2231, 0.15 ) }
    dend_2 { pt3dadd( -161.41, -49.2616, -19.0577, 0.15 ) }
    dend_2 { pt3dadd( -161.47, -49.2882, -19.0906, 0.15 ) }
    dend_2 { pt3dadd( -161.751, -49.4051, -19.2521, 0.59 ) }
    dend_2 { pt3dadd( -161.976, -49.4926, -19.384, 0.88 ) }
    dend_2 { pt3dadd( -162.361, -49.6171, -19.5779, 1.18 ) }
    dend_2 { pt3dadd( -163.426, -49.9092, -19.9334, 1.18 ) }
    dend_2 { pt3dadd( -163.485, -49.9231, -19.9527, 1.18 ) }
    dend_2 { pt3dadd( -164.12, -50.0774, -20.1322, 0.15 ) }
    dend_2 { pt3dadd( -164.18, -50.0923, -20.1469, 0.15 ) }
    dend_2 { pt3dadd( -165.52, -50.4345, -20.4292, 0.15 ) }
    dend_2 { pt3dadd( -166.959, -50.9382, -20.6507, 0.15 ) }
    dend_2 { pt3dadd( -167.027, -50.9656, -20.6577, 0.15 ) }
    dend_2 { pt3dadd( -167.348, -51.1111, -20.6929, 0.66 ) }
    dend_2 { pt3dadd( -167.601, -51.2406, -20.7223, 0.66 ) }
    dend_2 { pt3dadd( -167.818, -51.3641, -20.7482, 0.22 ) }
    dend_2 { pt3dadd( -169.943, -52.773, -21.0119, 0.22 ) }
    dend_2 { pt3dadd( -169.995, -52.8105, -21.0184, 0.22 ) }
    dend_2 { pt3dadd( -170.304, -53.0479, -21.0538, 0.74 ) }
    dend_2 { pt3dadd( -170.609, -53.301, -21.1005, 1.03 ) }
    dend_2 { pt3dadd( -170.934, -53.5848, -21.159, 1.03 ) }
    dend_2 { pt3dadd( -171.155, -53.7884, -21.2038, 1.03 ) }
    dend_2 { pt3dadd( -171.566, -54.1783, -21.3201, 0.15 ) }
    dend_2 { pt3dadd( -172.799, -55.3455, -21.6844, 0.15 ) }
    dend_2 { pt3dadd( -173.3, -55.8132, -21.8654, 0.37 ) }
    dend_2 { pt3dadd( -173.609, -56.0956, -21.9879, 0.37 ) }
    dend_2 { pt3dadd( -173.763, -56.231, -22.0513, 0.37 ) }
    dend_2 { pt3dadd( -174.793, -57.1333, -22.4827, 0.15 ) }
    dend_2 { pt3dadd( -175.648, -57.8811, -22.8714, 0.15 ) }
    dend_2 { pt3dadd( -176.324, -58.499, -23.1861, 0.15 ) }
    dend_2 { pt3dadd( -176.787, -58.9531, -23.4022, 1.4 ) }
    dend_2 { pt3dadd( -177.047, -59.2301, -23.5309, 1.77 ) }
    dend_2 { pt3dadd( -177.529, -59.7966, -23.7795, 2.06 ) }
    dend_2 { pt3dadd( -178.119, -60.6626, -24.0891, 0.15 ) }
    dend_2 { pt3dadd( -178.672, -61.6442, -24.4208, 0.15 ) }
    dend_2 { pt3dadd( -178.874, -62.0706, -24.5443, 0.59 ) }
    dend_2 { pt3dadd( -179.013, -62.4046, -24.6396, 0.74 ) }
    dend_2 { pt3dadd( -179.141, -62.7386, -24.7311, 0.74 ) }
    dend_2 { pt3dadd( -179.638, -64.1022, -25.2353, 0.15 ) }
    dend_2 { pt3dadd( -179.928, -64.8409, -25.5486, 1.25 ) }
    dend_2 { pt3dadd( -180.182, -65.4433, -25.8448, 1.62 ) }
    dend_2 { pt3dadd( -180.288, -65.6743, -25.9876, 1.62 ) }
    dend_2 { pt3dadd( -180.415, -65.9306, -26.1722, 0.15 ) }
    dend_2 { pt3dadd( -181.283, -67.5403, -27.4608, 0.15 ) }
    dend_2 { pt3dadd( -181.963, -68.7314, -28.4139, 0.15 ) }
    dend_2 { pt3dadd( -181.986, -68.7715, -28.4455, 0.15 ) }
    dend_2 { pt3dadd( -182.637, -69.895, -29.3326, 1.4 ) }
    dend_2 { pt3dadd( -182.904, -70.3641, -29.6861, 1.69 ) }
    dend_2 { pt3dadd( -183.248, -70.9702, -30.0551, 0.22 ) }
    dend_2 { pt3dadd( -184.22, -72.5679, -30.6527, 0.22 ) }
    dend_2 { pt3dadd( -185.02, -73.8096, -30.9222, 0.15 ) }
    dend_2 { pt3dadd( -185.281, -74.2079, -30.9766, 1.33 ) }
    dend_2 { pt3dadd( -185.561, -74.6261, -30.9734, 1.55 ) }
    dend_2 { pt3dadd( -186.964, -76.6266, -30.7949, 0.22 ) }
    dend_2 { pt3dadd( -187.852, -77.7793, -30.4586, 0.22 ) }
    dend_2 { pt3dadd( -188.285, -78.2264, -30.0922, 1.84 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 67/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 36.3411, 25.7647, 22.552, 0.22 ) }
    dend_58 { pt3dadd( 35.0176, 31.6924, 12.7611, 0.22 ) }
    dend_58 { pt3dadd( 35.2397, 37.2658, 2.69876, 0.22 ) }
    dend_58 { pt3dadd( 35.9343, 42.9033, -7.30688, 0.22 ) }
    dend_58 { pt3dadd( 34.7149, 48.8569, -17.0961, 0.22 ) }
    dend_58 { pt3dadd( 35.9086, 55.9081, -26.1741, 0.22 ) }
    dend_58 { pt3dadd( 37.6866, 62.6777, -35.3528, 0.22 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 74/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 36.3411, 25.7647, 22.552, 0.29 ) }
    dend_57 { pt3dadd( 34.8414, 29.386, 28.7722, 0.22 ) }
    dend_57 { pt3dadd( 33.4535, 32.8218, 35.1108, 0.22 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 77/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 13.7916, 110.692, 26.2378, 0.37 ) }
    dend_48 { pt3dadd( 13.7779, 110.076, 26.4923, 0.37 ) }
    dend_48 { pt3dadd( 13.7653, 109.506, 26.7277, 0.37 ) }
    dend_48 { pt3dadd( 13.7637, 109.434, 26.7573, 0.37 ) }
    dend_48 { pt3dadd( 12.1283, 100.067, 32.3691, 0.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 82/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 13.7916, 110.692, 26.2378, 0.29 ) }
    dend_45 { pt3dadd( 13.511, 111.087, 25.9827, 0.29 ) }
    dend_45 { pt3dadd( 13.2232, 111.492, 25.721, 0.22 ) }
    dend_45 { pt3dadd( 13.1001, 111.666, 25.6091, 0.22 ) }
    dend_45 { pt3dadd( 12.8641, 111.998, 25.3945, 0.22 ) }
    dend_45 { pt3dadd( 12.7269, 112.191, 25.2698, 0.22 ) }
    dend_45 { pt3dadd( 12.3827, 112.676, 24.9568, 0.22 ) }
    dend_45 { pt3dadd( 7.73033, 119.768, 22.0659, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 90/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -121.972, 22.0353, -16.6955, 0.29 ) }
    dend_36 { pt3dadd( -121.95, 21.0141, -15.6647, 0.29 ) }
    dend_36 { pt3dadd( -121.95, 20.9582, -15.603, 0.29 ) }
    dend_36 { pt3dadd( -122.003, 19.3562, -13.762, 0.29 ) }
    dend_36 { pt3dadd( -122.079, 18.3514, -12.5805, 0.29 ) }
    dend_36 { pt3dadd( -122.084, 18.3112, -12.5327, 0.29 ) }
    dend_36 { pt3dadd( -122.425, 16.3326, -9.97784, 0.22 ) }
    dend_36 { pt3dadd( -122.447, 16.2667, -9.88348, 0.22 ) }
    dend_36 { pt3dadd( -122.716, 15.6353, -8.93132, 0.22 ) }
    dend_36 { pt3dadd( -122.831, 15.4252, -8.58397, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_36 { pt3dadd( -122.969, 15.201, -8.20374, 1.55 ) }
    dend_36 { pt3dadd( -123.744, 13.9951, -6.21445, 0.22 ) }
    dend_36 { pt3dadd( -124.878, 12.4065, -3.75428, 0.15 ) }
    dend_36 { pt3dadd( -124.919, 12.3478, -3.66227, 0.59 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -121.972, 22.0353, -16.6955, 0.22 ) }
    dend_35 { pt3dadd( -123.416, 23.459, -17.7546, 0.22 ) }
    dend_35 { pt3dadd( -125.37, 25.4618, -19.038, 0.22 ) }
    dend_35 { pt3dadd( -126.364, 26.506, -19.6463, 0.22 ) }
    dend_35 { pt3dadd( -126.419, 26.5639, -19.6777, 0.22 ) }
    dend_35 { pt3dadd( -126.489, 26.6368, -19.7151, 0.59 ) }
    dend_35 { pt3dadd( -126.865, 27.0166, -19.8995, 0.59 ) }
    dend_35 { pt3dadd( -128.068, 28.031, -20.3453, 0.15 ) }
    dend_35 { pt3dadd( -128.119, 28.0682, -20.3474, 0.15 ) }
    dend_35 { pt3dadd( -128.599, 28.3728, -20.3142, 1.11 ) }
    dend_35 { pt3dadd( -128.655, 28.4011, -20.3075, 1.11 ) }
    dend_35 { pt3dadd( -129.608, 28.7426, -20.1433, 2.06 ) }
    dend_35 { pt3dadd( -130.402, 28.9478, -19.9746, 2.36 ) }
    dend_35 { pt3dadd( -131.855, 29.2785, -19.5696, 0.15 ) }
    dend_35 { pt3dadd( -131.992, 29.3122, -19.5249, 0.15 ) }
    dend_35 { pt3dadd( -133.353, 29.6454, -19.0454, 0.15 ) }
    dend_35 { pt3dadd( -134.668, 29.9891, -18.6117, 0.15 ) }
    dend_35 { pt3dadd( -134.747, 30.0111, -18.5914, 0.15 ) }
    dend_35 { pt3dadd( -136.026, 30.4287, -18.3162, 0.74 ) }
    dend_35 { pt3dadd( -136.895, 30.7236, -18.1737, 0.74 ) }
    dend_35 { pt3dadd( -137.684, 31.0097, -18.0664, 0.15 ) }
    dend_35 { pt3dadd( -139.666, 31.7878, -17.8737, 0.15 ) }
    dend_35 { pt3dadd( -142.169, 32.9117, -17.667, 0.15 ) }
    dend_35 { pt3dadd( -143.362, 33.4741, -17.5783, 1.4 ) }
    dend_35 { pt3dadd( -143.923, 33.7436, -17.5526, 1.77 ) }
    dend_35 { pt3dadd( -144.473, 34.0346, -17.5257, 1.77 ) }
    dend_35 { pt3dadd( -145.451, 34.5971, -17.474, 0.22 ) }
    dend_35 { pt3dadd( -146.956, 35.4974, -17.4214, 0.22 ) }
    dend_35 { pt3dadd( -147.028, 35.5415, -17.4201, 0.22 ) }
    dend_35 { pt3dadd( -148.67, 36.521, -17.4136, 0.22 ) }
    dend_35 { pt3dadd( -148.849, 36.6294, -17.4123, 0.88 ) }
    dend_35 { pt3dadd( -149.461, 36.9975, -17.4114, 1.03 ) }
    dend_35 { pt3dadd( -151.208, 37.9558, -17.4467, 0.22 ) }
    dend_35 { pt3dadd( -151.265, 37.983, -17.4493, 0.22 ) }
    dend_35 { pt3dadd( -151.942, 38.3159, -17.4793, 0.22 ) }
    dend_35 { pt3dadd( -152.231, 38.4658, -17.4905, 0.44 ) }
    dend_35 { pt3dadd( -152.528, 38.6201, -17.5063, 0.44 ) }
    dend_35 { pt3dadd( -153.951, 39.2784, -17.7488, 0.15 ) }
    dend_35 { pt3dadd( -154.046, 39.3148, -17.7765, 0.44 ) }
    dend_35 { pt3dadd( -154.56, 39.4441, -17.9794, 0.44 ) }
    dend_35 { pt3dadd( -154.848, 39.4905, -18.1086, 0.44 ) }
    dend_35 { pt3dadd( -154.915, 39.4991, -18.1402, 0.15 ) }
    dend_35 { pt3dadd( -156.548, 39.6839, -18.932, 0.15 ) }
    dend_35 { pt3dadd( -156.604, 39.6895, -18.9606, 0.15 ) }
    dend_35 { pt3dadd( -158.02, 39.8961, -19.6587, 0.15 ) }
    dend_35 { pt3dadd( -158.644, 39.9805, -19.9742, 1.03 ) }
    dend_35 { pt3dadd( -159.146, 40.0526, -20.2306, 1.33 ) }
    dend_35 { pt3dadd( -159.959, 40.1867, -20.6333, 0.15 ) }
    dend_35 { pt3dadd( -160.024, 40.1968, -20.6675, 0.15 ) }
    dend_35 { pt3dadd( -161.416, 40.398, -21.4562, 0.15 ) }
    dend_35 { pt3dadd( -162.226, 40.5298, -21.9664, 0.66 ) }
    dend_35 { pt3dadd( -162.566, 40.5778, -22.2007, 0.81 ) }
    dend_35 { pt3dadd( -163.144, 40.6277, -22.6461, 0.15 ) }
    dend_35 { pt3dadd( -164.191, 40.6952, -23.5737, 0.15 ) }
    dend_35 { pt3dadd( -164.278, 40.7002, -23.6582, 0.15 ) }
    dend_35 { pt3dadd( -164.991, 40.6908, -24.5997, 0.15 ) }
    dend_35 { pt3dadd( -165.045, 40.6953, -24.6916, 0.15 ) }
    dend_35 { pt3dadd( -165.451, 40.7648, -25.5932, 0.66 ) }
    dend_35 { pt3dadd( -165.649, 40.8298, -26.1241, 0.66 ) }
    dend_35 { pt3dadd( -165.674, 40.845, -26.1946, 0.66 ) }
    dend_35 { pt3dadd( -166.288, 41.2888, -27.6831, 0.15 ) }
    dend_35 { pt3dadd( -166.682, 41.6036, -28.4754, 1.47 ) }
    dend_35 { pt3dadd( -166.986, 41.8554, -28.9855, 1.92 ) }
    dend_35 { pt3dadd( -167.263, 42.0938, -29.3766, 1.92 ) }
    dend_35 { pt3dadd( -167.772, 42.5113, -29.9874, 0.15 ) }
    dend_35 { pt3dadd( -168.715, 43.2232, -30.8436, 0.15 ) }
    dend_35 { pt3dadd( -169.464, 43.7675, -31.3961, 0.15 ) }
    dend_35 { pt3dadd( -169.77, 43.9683, -31.5925, 0.88 ) }
    dend_35 { pt3dadd( -170.194, 44.2333, -31.8454, 1.11 ) }
    dend_35 { pt3dadd( -170.6, 44.4786, -32.0754, 0.15 ) }
    dend_35 { pt3dadd( -173.271, 46.0044, -33.4586, 0.15 ) }
    dend_35 { pt3dadd( -173.342, 46.0388, -33.4911, 0.15 ) }
    dend_35 { pt3dadd( -174.304, 46.4522, -33.8922, 0.15 ) }
    dend_35 { pt3dadd( -174.748, 46.6252, -34.063, 0.88 ) }
    dend_35 { pt3dadd( -175.194, 46.7819, -34.2239, 1.18 ) }
    dend_35 { pt3dadd( -175.758, 46.977, -34.4267, 0.15 ) }
    dend_35 { pt3dadd( -177.719, 47.6476, -35.1393, 0.15 ) }
    dend_35 { pt3dadd( -178.224, 47.8346, -35.334, 0.81 ) }
    dend_35 { pt3dadd( -178.709, 48.0381, -35.5425, 1.03 ) }
    dend_35 { pt3dadd( -179.158, 48.2418, -35.746, 0.15 ) }
    dend_35 { pt3dadd( -181.953, 49.6204, -37.0928, 0.15 ) }
    dend_35 { pt3dadd( -182.399, 49.8651, -37.3252, 0.74 ) }
    dend_35 { pt3dadd( -182.917, 50.1936, -37.6124, 0.96 ) }
    dend_35 { pt3dadd( -184.3, 51.0966, -38.4101, 0.15 ) }
    dend_35 { pt3dadd( -184.487, 51.2222, -38.522, 0.44 ) }
    dend_35 { pt3dadd( -184.596, 51.2989, -38.5909, 0.44 ) }
    dend_35 { pt3dadd( -184.719, 51.3992, -38.6828, 0.44 ) }
    dend_35 { pt3dadd( -184.963, 51.5994, -38.8629, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 92/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 44.8539, -287.486, -2.43802, 0.15 ) }
    dend_24 { pt3dadd( 45.7746, -288.409, -2.21985, 0.15 ) }
    dend_24 { pt3dadd( 47.1335, -289.797, -1.8819, 0.15 ) }
    dend_24 { pt3dadd( 47.1815, -289.846, -1.86964, 0.15 ) }
    dend_24 { pt3dadd( 49.1113, -291.901, -1.41138, 0.15 ) }
    dend_24 { pt3dadd( 49.5628, -292.413, -1.31125, 0.15 ) }
    dend_24 { pt3dadd( 49.6013, -292.46, -1.30329, 0.15 ) }
    dend_24 { pt3dadd( 49.8953, -292.874, -1.24942, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_24 { pt3dadd( 50.0523, -293.1, -1.25091, 1.25 ) }
    dend_24 { pt3dadd( 50.4964, -293.69, -1.36545, 0.22 ) }
    dend_24 { pt3dadd( 51.0398, -294.404, -1.62489, 0.22 ) }
    dend_24 { pt3dadd( 51.8177, -295.4, -2.03348, 0.22 ) }
    dend_24 { pt3dadd( 52.3943, -296.122, -2.35389, 0.22 ) }
    dend_24 { pt3dadd( 53.2525, -297.16, -2.88429, 1.03 ) }
    dend_24 { pt3dadd( 53.9575, -297.949, -3.34707, 1.18 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 7/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 44.8539, -287.486, -2.43802, 0.15 ) }
    dend_23 { pt3dadd( 44.912, -288.332, -2.456, 0.15 ) }
    dend_23 { pt3dadd( 45.0127, -289.799, -2.48716, 0.15 ) }
    dend_23 { pt3dadd( 45.0185, -289.883, -2.48895, 0.15 ) }
    dend_23 { pt3dadd( 45.0569, -290.443, -2.50085, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 7.12151, -274.707, -7.87939, 0.59 ) }
    dend_9 { pt3dadd( 7.59711, -276.582, -8.17024, 0.59 ) }
    dend_9 { pt3dadd( 8.22921, -279.005, -8.50997, 0.59 ) }
    dend_9 { pt3dadd( 8.2588, -279.111, -8.52224, 0.59 ) }
    dend_9 { pt3dadd( 8.91498, -281.295, -8.72704, 0.44 ) }
    dend_9 { pt3dadd( 9.63695, -283.618, -8.91869, 0.44 ) }
    dend_9 { pt3dadd( 9.67039, -283.723, -8.92668, 0.44 ) }
    dend_9 { pt3dadd( 9.93525, -284.49, -8.94971, 1.03 ) }
    dend_9 { pt3dadd( 10.6186, -286.36, -9.04325, 1.03 ) }
    dend_9 { pt3dadd( 11.1676, -287.936, -9.13824, 0.66 ) }
    dend_9 { pt3dadd( 11.3965, -288.638, -9.18345, 0.37 ) }
    dend_9 { pt3dadd( 11.4236, -288.73, -9.19087, 0.37 ) }
    dend_9 { pt3dadd( 11.9658, -290.795, -9.3587, 0.37 ) }
    dend_9 { pt3dadd( 12.2352, -291.997, -9.49641, 1.03 ) }
    dend_9 { pt3dadd( 12.4634, -293.218, -9.67236, 1.62 ) }
    dend_9 { pt3dadd( 12.6504, -294.424, -9.86053, 1.62 ) }
    dend_9 { pt3dadd( 12.823, -296.016, -10.0993, 1.25 ) }
    dend_9 { pt3dadd( 12.9323, -297.442, -10.3064, 1.03 ) }
    dend_9 { pt3dadd( 13.0353, -299.259, -10.653, 0.88 ) }
    dend_9 { pt3dadd( 13.069, -300.062, -10.8544, 0.66 ) }
    dend_9 { pt3dadd( 13.0837, -301.134, -11.1895, 0.66 ) }
    dend_9 { pt3dadd( 13.0685, -303.027, -11.9455, 0.66 ) }
    dend_9 { pt3dadd( 13.0661, -303.114, -11.9856, 0.66 ) }
    dend_9 { pt3dadd( 12.9518, -306.09, -13.395, 0.59 ) }
    dend_9 { pt3dadd( 12.889, -307.655, -14.165, 1.4 ) }
    dend_9 { pt3dadd( 12.8297, -308.957, -14.7919, 1.84 ) }
    dend_9 { pt3dadd( 12.7668, -310.414, -15.4934, 2.14 ) }
    dend_9 { pt3dadd( 12.7285, -311.413, -15.9594, 2.14 ) }
    dend_9 { pt3dadd( 12.6414, -313.021, -16.5999, 0.66 ) }
    dend_9 { pt3dadd( 12.5847, -313.934, -16.8825, 0.22 ) }
    dend_9 { pt3dadd( 12.4894, -316.325, -17.4992, 0.22 ) }
    dend_9 { pt3dadd( 12.4872, -316.406, -17.5184, 0.22 ) }
    dend_9 { pt3dadd( 12.4752, -317.147, -17.6523, 1.03 ) }
    dend_9 { pt3dadd( 12.4674, -318.443, -17.8775, 1.03 ) }
    dend_9 { pt3dadd( 12.4729, -320.485, -18.1949, 1.11 ) }
    dend_9 { pt3dadd( 12.4991, -321.304, -18.2922, 0.59 ) }
    dend_9 { pt3dadd( 12.5269, -321.896, -18.3531, 0.15 ) }
    dend_9 { pt3dadd( 12.6252, -324.32, -18.6229, 0.15 ) }
    dend_9 { pt3dadd( 12.6297, -324.417, -18.6334, 0.15 ) }
    dend_9 { pt3dadd( 12.6749, -325.23, -18.7172, 0.15 ) }
    dend_9 { pt3dadd( 12.7157, -326.309, -18.8887, 0.15 ) }
    dend_9 { pt3dadd( 12.7667, -327.971, -19.2318, 0.15 ) }
    dend_9 { pt3dadd( 12.8024, -329.318, -19.5355, 1.4 ) }
    dend_9 { pt3dadd( 12.8414, -331.12, -19.9738, 2.28 ) }
    dend_9 { pt3dadd( 12.9027, -332.607, -20.3467, 2.65 ) }
    dend_9 { pt3dadd( 13.1077, -335.376, -21.1417, 0.22 ) }
    dend_9 { pt3dadd( 13.2423, -336.822, -21.5923, 0.22 ) }
    dend_9 { pt3dadd( 13.4911, -338.918, -22.2676, 0.22 ) }
    dend_9 { pt3dadd( 13.5043, -339.023, -22.3001, 0.22 ) }
    dend_9 { pt3dadd( 13.8421, -341.509, -23.1047, 0.22 ) }
    dend_9 { pt3dadd( 14.115, -343.162, -23.603, 0.22 ) }
    dend_9 { pt3dadd( 14.2349, -343.721, -23.7626, 0.96 ) }
    dend_9 { pt3dadd( 14.4461, -344.546, -24.0929, 1.11 ) }
    dend_9 { pt3dadd( 14.6736, -345.303, -24.4978, 1.11 ) }
    dend_9 { pt3dadd( 14.9697, -346.3, -25.048, 0.15 ) }
    dend_9 { pt3dadd( 15.3352, -347.548, -25.7592, 0.15 ) }
    dend_9 { pt3dadd( 15.7311, -348.841, -26.4431, 0.74 ) }
    dend_9 { pt3dadd( 16.3816, -350.762, -27.488, 0.74 ) }
    dend_9 { pt3dadd( 16.6806, -351.599, -27.9348, 0.15 ) }
    dend_9 { pt3dadd( 17.5347, -353.891, -29.1085, 0.15 ) }
    dend_9 { pt3dadd( 17.7678, -354.603, -29.4041, 1.47 ) }
    dend_9 { pt3dadd( 18.1812, -356.131, -29.89, 2.28 ) }
    dend_9 { pt3dadd( 18.4733, -357.574, -30.198, 2.43 ) }
    dend_9 { pt3dadd( 18.666, -358.827, -30.3825, 2.43 ) }
    dend_9 { pt3dadd( 18.8804, -360.702, -30.605, 0.15 ) }
    dend_9 { pt3dadd( 19.1277, -364.21, -31.0708, 0.15 ) }
    dend_9 { pt3dadd( 19.1759, -366.011, -31.3099, 0.15 ) }
    dend_9 { pt3dadd( 19.0386, -368.168, -31.5746, 0.15 ) }
    dend_9 { pt3dadd( 18.9727, -368.682, -31.6291, 0.88 ) }
    dend_9 { pt3dadd( 18.7613, -369.802, -31.7643, 1.25 ) }
    dend_9 { pt3dadd( 18.3752, -371.34, -31.9614, 0.44 ) }
    dend_9 { pt3dadd( 18.203, -371.915, -32.0539, 0.15 ) }
    dend_9 { pt3dadd( 16.7594, -376.348, -32.8259, 0.15 ) }
    dend_9 { pt3dadd( 16.7287, -376.439, -32.8397, 0.15 ) }
    dend_9 { pt3dadd( 16.4645, -377.141, -32.9193, 0.81 ) }
    dend_9 { pt3dadd( 16.0797, -378.09, -32.9753, 0.81 ) }
    dend_9 { pt3dadd( 16.0419, -378.179, -32.974, 0.81 ) }
    dend_9 { pt3dadd( 15.5913, -379.165, -32.933, 0.81 ) }
    dend_9 { pt3dadd( 15.0734, -380.195, -32.8473, 0.15 ) }
    dend_9 { pt3dadd( 14.3075, -381.718, -32.657, 0.15 ) }
    dend_9 { pt3dadd( 13.9367, -382.458, -32.5459, 1.18 ) }
    dend_9 { pt3dadd( 13.5725, -383.187, -32.4373, 1.62 ) }
    dend_9 { pt3dadd( 13.2571, -383.841, -32.3645, 1.62 ) }
    dend_9 { pt3dadd( 12.6902, -385.182, -32.28, 0.22 ) }
    dend_9 { pt3dadd( 11.6723, -387.84, -32.2247, 0.22 ) }
    dend_9 { pt3dadd( 11.3701, -388.734, -32.2868, 0.81 ) }
    dend_9 { pt3dadd( 11.0555, -389.812, -32.4352, 1.03 ) }
    dend_9 { pt3dadd( 10.6975, -391.237, -32.7229, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_9 { pt3dadd( 9.94645, -395.034, -33.7104, 0.15 ) }
    dend_9 { pt3dadd( 9.85786, -395.687, -33.9242, 0.88 ) }
    dend_9 { pt3dadd( 9.72049, -398.379, -35.111, 0.22 ) }
    dend_9 { pt3dadd( 9.80221, -399.989, -35.8606, 0.22 ) }
    dend_9 { pt3dadd( 9.88005, -400.526, -36.1206, 0.66 ) }
    dend_9 { pt3dadd( 10.0347, -401.1, -36.3723, 0.96 ) }
    dend_9 { pt3dadd( 10.0682, -401.182, -36.4072, 0.96 ) }
    dend_9 { pt3dadd( 10.6974, -402.746, -36.9096, 0.15 ) }
    dend_9 { pt3dadd( 11.7995, -405.564, -37.521, 0.15 ) }
    dend_9 { pt3dadd( 11.9076, -405.854, -37.5899, 0.52 ) }
    dend_9 { pt3dadd( 12.6797, -408.16, -38.083, 0.15 ) }
    dend_9 { pt3dadd( 13.1057, -409.527, -38.3597, 1.18 ) }
    dend_9 { pt3dadd( 13.5322, -410.977, -38.6298, 1.84 ) }
    dend_9 { pt3dadd( 13.8128, -412.016, -38.7985, 1.84 ) }
    dend_9 { pt3dadd( 14.2359, -413.802, -39.1271, 0.15 ) }
    dend_9 { pt3dadd( 14.9571, -417.075, -39.7246, 0.15 ) }
    dend_9 { pt3dadd( 15.0396, -417.489, -39.8065, 0.59 ) }
    dend_9 { pt3dadd( 15.1355, -417.982, -39.9003, 0.74 ) }
    dend_9 { pt3dadd( 15.2129, -418.381, -39.9718, 0.15 ) }
    dend_9 { pt3dadd( 15.8644, -422.138, -40.6041, 0.15 ) }
    dend_9 { pt3dadd( 16.0311, -423.321, -40.7079, 1.03 ) }
    dend_9 { pt3dadd( 16.1901, -424.68, -40.7826, 1.77 ) }
    dend_9 { pt3dadd( 16.3041, -425.799, -40.8066, 1.77 ) }
    dend_9 { pt3dadd( 16.419, -427.126, -40.7884, 0.81 ) }
    dend_9 { pt3dadd( 16.4887, -428.137, -40.7079, 0.15 ) }
    dend_9 { pt3dadd( 16.6903, -432.183, -40.0895, 0.15 ) }
    dend_9 { pt3dadd( 16.6931, -432.278, -40.0714, 0.15 ) }
    dend_9 { pt3dadd( 16.7032, -432.964, -39.9077, 1.18 ) }
    dend_9 { pt3dadd( 16.7159, -434.335, -39.5579, 1.62 ) }
    dend_9 { pt3dadd( 16.7362, -435.615, -39.2205, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 30/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 7.12151, -274.707, -7.87939, 0.52 ) }
    dend_8 { pt3dadd( 6.40033, -276.052, -8.90883, 0.52 ) }
    dend_8 { pt3dadd( 5.99433, -276.809, -9.48836, 0.52 ) }
    dend_8 { pt3dadd( 5.68561, -277.384, -9.92904, 0.52 ) }
    dend_8 { pt3dadd( 5.55879, -277.621, -10.11, 0.81 ) }
    dend_8 { pt3dadd( 5.52772, -277.679, -10.1544, 0.81 ) }
    dend_8 { pt3dadd( 5.27135, -278.157, -10.5203, 0.81 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 37/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 37.6866, 62.6777, -35.3528, 0.37 ) }
    dend_62 { pt3dadd( 37.2394, 68.8912, -43.9719, 0.37 ) }
    dend_62 { pt3dadd( 35.4855, 76.5757, -51.2298, 0.37 ) }
    dend_62 { pt3dadd( 32.9531, 83.583, -58.8832, 0.37 ) }
    dend_62 { pt3dadd( 31.9637, 90.6867, -66.7935, 0.37 ) }
    dend_62 { pt3dadd( 29.3032, 97.2462, -74.7635, 0.37 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 37.6866, 62.6777, -35.3528, 0.29 ) }
    dend_59 { pt3dadd( 39.6589, 67.6464, -45.6616, 0.37 ) }
    dend_59 { pt3dadd( 42.7728, 74.9343, -54.256, 0.37 ) }
    dend_59 { pt3dadd( 47.4576, 82.5436, -61.8113, 0.37 ) }
    dend_59 { pt3dadd( 52.0721, 90.4464, -69.1284, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 48/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 12.1283, 100.067, 32.3691, 0.22 ) }
    dend_50 { pt3dadd( 13.3222, 93.5311, 35.7785, 0.22 ) }
    dend_50 { pt3dadd( 15.9823, 87.9529, 39.8464, 0.22 ) }
    dend_50 { pt3dadd( 18.1803, 82.7784, 44.613, 0.22 ) }
    dend_50 { pt3dadd( 20.1053, 77.3183, 49.205, 0.22 ) }
    dend_50 { pt3dadd( 21.9804, 72.9194, 54.7504, 0.22 ) }
    dend_50 { pt3dadd( 23.3093, 68.5663, 60.482, 0.22 ) }
    dend_50 { pt3dadd( 24.2642, 65.1605, 66.8335, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 56/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 12.1283, 100.067, 32.3691, 0.29 ) }
    dend_49 { pt3dadd( 12.4221, 93.8448, 35.8287, 0.22 ) }
    dend_49 { pt3dadd( 12.0633, 88.665, 40.5929, 0.22 ) }
    dend_49 { pt3dadd( 12.6617, 83.2179, 45.0572, 0.22 ) }
    dend_49 { pt3dadd( 12.913, 78.145, 49.934, 0.22 ) }
    dend_49 { pt3dadd( 13.5107, 72.3944, 54.0383, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 62/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 7.73033, 119.768, 22.0659, 0.37 ) }
    dend_47 { pt3dadd( 3.67218, 127.994, 16.9969, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 64/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 7.73033, 119.768, 22.0659, 0.29 ) }
    dend_46 { pt3dadd( 1.95294, 127.89, 18.6231, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 16.7362, -435.615, -39.2205, 0.29 ) }
    dend_11 { pt3dadd( 16.3033, -436.504, -39.1074, 0.29 ) }
    dend_11 { pt3dadd( 15.6409, -437.716, -38.9445, 0.29 ) }
    dend_11 { pt3dadd( 14.5954, -439.463, -38.7211, 0.29 ) }
    dend_11 { pt3dadd( 14.3114, -439.913, -38.6651, 0.74 ) }
    dend_11 { pt3dadd( 13.9285, -440.462, -38.57, 1.11 ) }
    dend_11 { pt3dadd( 13.3434, -441.107, -38.4792, 1.11 ) }
    dend_11 { pt3dadd( 12.9021, -441.482, -38.4172, 0.88 ) }
    dend_11 { pt3dadd( 12.5623, -441.701, -38.3951, 0.52 ) }
    dend_11 { pt3dadd( 12.5112, -441.729, -38.3958, 0.52 ) }
    dend_11 { pt3dadd( 11.445, -442.273, -38.4532, 0.22 ) }
    dend_11 { pt3dadd( 8.90367, -443.526, -38.6565, 0.15 ) }
    dend_11 { pt3dadd( 8.66562, -443.655, -38.691, 0.44 ) }
    dend_11 { pt3dadd( 8.31137, -443.864, -38.7518, 0.66 ) }
    dend_11 { pt3dadd( 8.26312, -443.895, -38.7618, 0.66 ) }
    dend_11 { pt3dadd( 7.95329, -444.118, -38.8427, 0.66 ) }
    dend_11 { pt3dadd( 7.82783, -444.225, -38.8881, 0.15 ) }
    dend_11 { pt3dadd( 6.48885, -445.645, -39.3659, 0.15 ) }
    dend_11 { pt3dadd( 6.4497, -445.686, -39.3797, 0.15 ) }
    dend_11 { pt3dadd( 6.24834, -445.905, -39.4504, 0.74 ) }
    dend_11 { pt3dadd( 5.88296, -446.305, -39.5786, 1.11 ) }
    dend_11 { pt3dadd( 5.45808, -446.78, -39.7277, 0.88 ) }
    dend_11 { pt3dadd( 5.41518, -446.83, -39.7428, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.7362, -435.615, -39.2205, 0.15 ) }
    dend_10 { pt3dadd( 16.7016, -437.063, -38.8903, 0.15 ) }
    dend_10 { pt3dadd( 16.488, -440.247, -38.2961, 0.15 ) }
    dend_10 { pt3dadd( 16.4455, -440.949, -38.202, 0.44 ) }
    dend_10 { pt3dadd( 16.4054, -441.715, -38.1156, 0.44 ) }
    dend_10 { pt3dadd( 16.3462, -443.196, -37.9831, 0.15 ) }
    dend_10 { pt3dadd( 16.2722, -445.594, -37.801, 0.15 ) }
    dend_10 { pt3dadd( 16.2647, -447.069, -37.7606, 0.15 ) }
    dend_10 { pt3dadd( 16.2423, -448.337, -37.7424, 0.74 ) }
    dend_10 { pt3dadd( 16.2367, -449.25, -37.7319, 1.33 ) }
    dend_10 { pt3dadd( 16.2472, -450.236, -37.7461, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_10 { pt3dadd( 16.2676, -450.664, -37.7787, 0.15 ) }
    dend_10 { pt3dadd( 16.4536, -453.337, -38.0367, 0.15 ) }
    dend_10 { pt3dadd( 16.4746, -453.582, -38.0722, 0.44 ) }
    dend_10 { pt3dadd( 16.4597, -455.246, -38.456, 0.15 ) }
    dend_10 { pt3dadd( 16.454, -455.337, -38.4788, 0.15 ) }
    dend_10 { pt3dadd( 16.3415, -456.444, -38.7651, 0.66 ) }
    dend_10 { pt3dadd( 16.2959, -456.778, -38.8517, 0.88 ) }
    dend_10 { pt3dadd( 16.1031, -457.886, -39.1447, 0.15 ) }
    dend_10 { pt3dadd( 15.2127, -463.009, -40.2563, 0.15 ) }
    dend_10 { pt3dadd( 15.1249, -463.927, -40.3605, 1.03 ) }
    dend_10 { pt3dadd( 15.0986, -464.441, -40.3841, 1.03 ) }
    dend_10 { pt3dadd( 15.0988, -464.944, -40.3585, 0.22 ) }
    dend_10 { pt3dadd( 15.1047, -465.014, -40.3492, 0.22 ) }
    dend_10 { pt3dadd( 15.5538, -467.378, -39.785, 0.22 ) }
    dend_10 { pt3dadd( 17.1208, -470.889, -38.3924, 0.22 ) }
    dend_10 { pt3dadd( 17.1591, -470.954, -38.3634, 0.22 ) }
    dend_10 { pt3dadd( 18.0671, -472.144, -37.7217, 0.22 ) }
    dend_10 { pt3dadd( 18.7897, -472.81, -37.1926, 0.96 ) }
    dend_10 { pt3dadd( 19.1176, -472.994, -36.94, 0.15 ) }
    dend_10 { pt3dadd( 21.0706, -473.324, -35.3593, 0.15 ) }
    dend_10 { pt3dadd( 21.367, -473.29, -35.1117, 0.66 ) }
    dend_10 { pt3dadd( 21.6535, -473.24, -34.8753, 0.15 ) }
    dend_10 { pt3dadd( 23.4536, -472.775, -33.4004, 0.15 ) }
    dend_10 { pt3dadd( 23.7567, -472.681, -33.1345, 0.44 ) }
    dend_10 { pt3dadd( 23.9929, -472.598, -32.9101, 0.15 ) }
    dend_10 { pt3dadd( 24.8527, -472.279, -31.9429, 0.15 ) }
    dend_10 { pt3dadd( 25.2305, -472.149, -31.5127, 0.59 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 27/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 29.3032, 97.2462, -74.7635, 0.22 ) }
    dend_64 { pt3dadd( 27.4749, 103.798, -81.1348, 0.22 ) }
    dend_64 { pt3dadd( 27.5393, 111.743, -86.1889, 0.22 ) }
    dend_64 { pt3dadd( 27.6203, 118.698, -92.4321, 0.22 ) }
    dend_64 { pt3dadd( 27.9792, 126.059, -98.2246, 0.22 ) }
    dend_64 { pt3dadd( 27.577, 133.024, -104.442, 0.22 ) }
    dend_64 { pt3dadd( 25.9326, 140.246, -110.164, 0.22 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 34/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 29.3032, 97.2462, -74.7635, 0.29 ) }
    dend_63 { pt3dadd( 27.4344, 103.555, -80.2523, 0.22 ) }
    dend_63 { pt3dadd( 24.7459, 109.159, -86.0988, 0.22 ) }
    dend_63 { pt3dadd( 21.0705, 115.239, -90.8668, 0.22 ) }
    dend_63 { pt3dadd( 17.7521, 122.673, -93.7947, 0.22 ) }
    dend_63 { pt3dadd( 14.4913, 129.799, -97.3943, 0.22 ) }
    dend_63 { pt3dadd( 12.7226, 138.087, -99.5203, 0.22 ) }
    dend_63 { pt3dadd( 12.0932, 146.474, -101.941, 0.22 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 52.0721, 90.4464, -69.1284, 0.22 ) }
    dend_61 { pt3dadd( 54.901, 94.6912, -74.6061, 0.22 ) }
    dend_61 { pt3dadd( 56.5496, 98.6579, -80.7308, 0.22 ) }
    dend_61 { pt3dadd( 57.313, 102.949, -86.8342, 0.22 ) }
    dend_61 { pt3dadd( 57.4319, 107.262, -92.9759, 0.22 ) }
    dend_61 { pt3dadd( 56.1288, 111.293, -99.1719, 0.22 ) }
    dend_61 { pt3dadd( 55.3382, 115.583, -105.288, 0.22 ) }
    dend_61 { pt3dadd( 54.7029, 120.513, -110.964, 0.22 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 50/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 52.0721, 90.4464, -69.1284, 0.29 ) }
    dend_60 { pt3dadd( 54.8807, 96.1407, -76.0025, 0.22 ) }
    dend_60 { pt3dadd( 58.4038, 101.053, -83.0995, 0.22 ) }
    dend_60 { pt3dadd( 60.2496, 105.973, -90.8112, 0.22 ) }
    dend_60 { pt3dadd( 61.6108, 111.831, -98.0045, 0.22 ) }
    dend_60 { pt3dadd( 64.1647, 116.517, -105.645, 0.22 ) }
    dend_60 { pt3dadd( 67.9698, 120.883, -112.927, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_66 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_1 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_66 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_19 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_16 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_68 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_43 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_40 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_1 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_51 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_42 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_29 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_28 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_25 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_14 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_12 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_3 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_2 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_58 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_35 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_62 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_59 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_10 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_64 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_63 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_61 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_60 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_27 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_54 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_39 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_33 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_37 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_65 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_56 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_57 OneSecGrp_SectionRef_52.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_67 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_45 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_48 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_52 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_36 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_8 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_22 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_23 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_24 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_11 OneSecGrp_SectionRef_67.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_46, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_66 nseg = 5
    dend_19 nseg = 9
    dend_16 nseg = 3
    dend_68 nseg = 3
    dend_55 nseg = 3
    dend_43 nseg = 3
    dend_40 nseg = 5
    dend_31 nseg = 5
    dend_21 nseg = 5
    dend_20 nseg = 5
    dend_17 nseg = 5
    dend_13 nseg = 5
    dend_4 nseg = 7
    dend_1 nseg = 5
    dend_51 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 13
    dend_28 nseg = 3
    dend_25 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 5
    dend_12 nseg = 7
    dend_7 nseg = 11
    dend_3 nseg = 3
    dend_2 nseg = 5
    dend_58 nseg = 3
    dend_35 nseg = 3
    dend_9 nseg = 9
    dend_62 nseg = 3
    dend_59 nseg = 3
    dend_50 nseg = 3
    dend_10 nseg = 3
    dend_64 nseg = 3
    dend_63 nseg = 3
    dend_61 nseg = 3
    dend_60 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L6_NBC_1c98947546_0_0


