// Cell: Cell_478047816
/*
{
  "id" : "Cell_478047816",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "364.79, 442.177, 36.6556, 11.211", "370.395, 442.177, 36.6556, 11.211", "376.001, 442.177, 36.6556, 11.211" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "370.396, 442.177, 36.6556, 1.0", "376.237, 455.993, 36.6556, 1.0", "382.078, 469.809, 36.6556, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995540094549845
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "370.881, 446.497, 37.0558, 0.2288", "371.009, 447.634, 37.1848, 0.4172", "371.281, 448.74, 37.242, 0.5808", "371.62, 449.831, 37.3052, 0.6402", "371.96, 450.922, 37.3663, 0.5608" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995540094549845
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "374.703, 441.678, 39.1448, 0.2288", "375.81, 441.55, 39.7608, 0.468", "376.916, 441.422, 40.0439, 0.5068", "378.035, 441.269, 40.3304, 0.6328", "379.165, 441.095, 40.5731, 0.8316", "380.173, 440.616, 40.7319, 0.9118", "381.181, 440.219, 40.7868, 0.86", "382.261, 440.004, 40.9531, 0.5926", "383.097, 440.387, 41.2919, 0.4708", "383.626, 441.232, 41.7934, 0.489", "384.517, 441.881, 42.2674, 0.7104", "385.585, 442.274, 42.6502, 0.8974", "386.689, 442.538, 42.9464, 0.955", "387.823, 442.632, 43.1522, 0.864", "388.966, 442.689, 43.2942, 0.7412", "390.107, 442.743, 43.407, 0.7476", "391.219, 442.829, 43.5506, 0.7674", "392.027, 442.995, 43.9368, 0.7646", "393.028, 442.759, 44.2344, 0.7238", "394.156, 442.807, 44.4335, 0.5926", "395.274, 442.936, 44.5914, 0.6176", "396.233, 443.415, 44.8636, 0.7344", "397.179, 443.877, 44.9526, 0.8378", "398.223, 444.105, 45.1436, 0.8924" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995540094549845
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "374.437, 440.129, 38.9351, 0.2288", "375.437, 439.622, 38.9623, 0.5098", "376.173, 438.78, 38.9836, 0.7722", "377.052, 438.261, 38.8405, 0.8982", "378.121, 438.297, 38.6436, 0.8242", "379.199, 438.438, 38.4796, 0.8058", "380.283, 438.078, 38.4518, 0.8826", "381.366, 437.716, 38.5493, 0.7148", "382.288, 437.7, 38.9693, 0.536", "383.413, 437.779, 39.4612, 0.4774", "384.329, 438.409, 39.9879, 0.6458", "385.07, 439.198, 40.5672, 0.758", "385.821, 440.044, 41.0645, 0.7936", "386.83, 440.41, 41.5915, 0.7796", "387.879, 440.443, 42.1775, 0.6854", "388.988, 440.336, 42.7305, 0.8428", "390.032, 439.882, 43.2004, 0.894", "391.112, 439.539, 43.6136, 1.0134", "392.065, 439.579, 44.1647, 0.8872" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995540094549845
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "374.114, 442.966, 29.2538, 0.2288", "374.989, 443.152, 28.3578, 0.4614", "375.879, 442.619, 28.0174, 0.5232", "376.967, 442.284, 27.7771, 0.5244", "378.068, 442.579, 27.6258, 0.619" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995540094549845
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "370.465, 437.944, 30.5438, 0.2288", "369.936, 437.026, 30.1624, 0.6086", "369.172, 436.302, 30.0171, 0.6938", "368.537, 435.432, 29.8248, 0.65", "368.652, 434.388, 29.6752, 0.6342", "369.289, 433.447, 29.566, 0.515", "370.015, 432.597, 29.5476, 0.5016", "370.777, 431.774, 29.5686, 0.6126", "371.576, 430.965, 29.507, 0.8468", "372.285, 430.097, 29.3513, 0.9146", "371.875, 429.189, 28.9621, 0.9878", "371.553, 428.308, 28.32, 0.9214", "372.088, 427.568, 27.5278, 1.092", "372.974, 426.985, 26.676, 1.1266", "373.874, 426.445, 25.8157, 1.1852", "374.989, 426.267, 25.1233, 1.0926", "376.051, 426.25, 24.4816, 0.9832", "377.09, 426.151, 23.8949, 0.9358", "377.897, 425.449, 23.5584, 1.007", "378.307, 424.405, 23.4222, 1.0536", "378.365, 423.265, 23.3357, 1.0984", "378.684, 422.195, 23.2475, 0.924", "379.264, 421.209, 23.1358, 0.9368", "379.635, 420.137, 22.9627, 0.929", "379.245, 419.125, 22.6984, 0.8384", "378.493, 418.486, 22.2247, 0.8132", "379.175, 418.098, 21.5248, 0.9874", "380.208, 418.045, 20.7157, 1.1526", "381.176, 418.415, 19.848, 1.3108", "382.266, 418.098, 19.0709, 1.408", "383.192, 417.544, 18.3147, 1.3952", "383.967, 416.741, 17.6283, 1.1652", "384.757, 415.963, 16.995, 1.0534", "385.738, 415.392, 16.4726, 1.1494", "386.481, 414.633, 15.9353, 1.2272", "387.006, 414.013, 15.19, 1.1714", "386.595, 413.114, 14.4198, 1.1242", "385.565, 412.973, 13.8405, 0.9914", "384.534, 412.634, 13.4046, 0.7382", "383.537, 412.121, 13.0217, 0.758", "383.219, 411.375, 12.7922, 0.7098", "384.078, 410.648, 12.7271, 0.5742", "384.939, 409.92, 12.7309, 0.5476", "385.683, 409.224, 12.6494, 0.5502", "386.516, 408.445, 12.4965, 0.7616" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995540094549845,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "366.584, 439.652, 36.3401, 4.4912", "365.631, 439.02, 36.2222, 1.7644", "364.678, 438.39, 36.1144, 0.8082", "363.707, 437.805, 35.9948, 1.1002", "362.76, 437.191, 35.8812, 1.228", "361.762, 436.703, 35.8728, 1.1836", "360.732, 436.252, 35.957, 1.0954", "359.715, 435.757, 36.034, 1.1896", "358.687, 435.276, 36.1192, 1.2552", "357.663, 434.802, 36.2998, 1.2214", "356.741, 434.453, 36.6876, 1.2266", "355.744, 434.138, 37.1734, 1.1352" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995540094549845
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "382.078, 469.809, 36.6556, 1.0", "387.919, 483.625, 36.6556, 1.0", "393.761, 497.441, 36.6556, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "371.96, 450.922, 37.3663, 0.5608", "372.011, 451.166, 37.4167, 0.418", "372.245, 452.278, 37.4931, 0.3614", "372.527, 453.357, 37.5407, 0.3898", "372.959, 454.335, 37.4326, 0.481", "373.435, 455.331, 37.3061, 0.693", "373.956, 456.349, 37.2705, 0.8764", "374.338, 457.393, 37.3691, 0.8618", "374.599, 458.461, 37.6208, 0.9552", "374.752, 459.57, 37.9484, 1.0012", "374.829, 460.709, 38.2976, 1.017", "374.939, 461.846, 38.628, 0.9264", "375.075, 462.981, 38.9206, 0.8832", "375.167, 464.1, 39.223, 0.8828", "375.167, 465.181, 39.6178, 0.9524", "375.124, 466.265, 40.0708, 0.9702", "374.777, 467.354, 40.4583, 0.856", "374.429, 468.444, 40.798, 0.9014", "374.572, 469.57, 41.095, 0.882", "374.703, 470.704, 41.3591, 0.8908", "374.552, 471.837, 41.6209, 0.919", "374.25, 472.713, 42.0983, 0.9124", "374.25, 473.672, 42.7227, 0.7284", "374.25, 474.792, 43.248, 0.7646", "374.165, 475.931, 43.6369, 0.8306", "373.682, 476.907, 43.899, 0.957", "372.9, 477.741, 44.0457, 0.9428", "372.243, 478.676, 44.0894, 0.98", "371.627, 479.631, 44.0815, 0.9684", "371.364, 480.744, 44.0661, 0.8822", "371.102, 481.858, 44.0518, 0.8066", "371.044, 482.989, 44.0009, 0.7146", "370.744, 484.027, 43.8631, 0.769", "369.906, 484.667, 43.9057, 0.6914", "369.26, 485.585, 43.9617, 0.4998", "368.805, 486.635, 44.0143, 0.3764" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "398.223, 444.105, 45.1436, 0.8924", "398.85, 444.714, 45.0184, 0.4576", "399.669, 445.51, 45.1872, 0.6106", "400.474, 446.32, 45.2572, 0.6884", "401.272, 447.142, 45.327, 0.684", "401.948, 448.057, 45.3981, 0.7114", "402.547, 449.03, 45.4717, 0.8196", "403.327, 449.828, 45.5809, 0.9688", "404.243, 450.493, 45.7377, 1.0384", "404.837, 451.432, 45.9026, 1.0274", "405.318, 452.467, 46.0564, 1.0004", "405.863, 453.47, 46.1712, 0.7546", "406.433, 454.462, 46.2392, 0.5624", "406.85, 455.521, 46.2613, 0.5286", "407.192, 456.613, 46.2442, 0.7302", "407.438, 457.725, 46.195, 0.965", "407.56, 458.862, 46.1177, 0.9318", "407.683, 459.999, 46.0191, 0.8554", "407.691, 461.132, 45.855, 0.7856", "407.691, 462.263, 45.6386, 0.7654", "407.846, 463.377, 45.4157, 0.6568", "408.188, 464.469, 45.229, 0.8", "408.6, 465.517, 45.0568, 0.7652", "409.264, 466.411, 44.8294, 1.0144", "409.798, 467.39, 44.6132, 1.0974", "410.192, 468.455, 44.49, 1.033", "410.604, 469.507, 44.4609, 0.8278", "410.986, 470.567, 44.4545, 0.6364", "411.297, 471.654, 44.3652, 0.5074", "411.61, 472.743, 44.2243, 0.5446", "411.93, 473.841, 44.065, 0.6448", "412.242, 474.941, 43.8763, 0.6802", "412.479, 476.05, 43.6327, 0.559", "412.715, 477.16, 43.3661, 0.5546", "412.511, 478.239, 43.0447, 0.6212", "412.28, 479.315, 42.6902, 0.6108", "412.523, 480.427, 42.4365, 0.5552", "412.785, 481.542, 42.2856, 0.629", "412.852, 482.673, 42.2335, 0.8218", "412.804, 483.816, 42.2626, 0.9072", "412.769, 484.936, 42.3987, 0.7856", "412.746, 486.034, 42.6471, 0.774", "412.729, 487.143, 42.9131, 0.6302", "412.729, 488.283, 43.0727, 0.4988", "412.729, 489.424, 43.1432, 0.5154", "412.924, 490.381, 42.9867, 0.427", "413.173, 491.443, 42.9002, 0.3824", "412.943, 492.386, 43.0189, 0.407", "412.818, 493.451, 43.1407, 0.3908", "412.875, 494.592, 43.195, 0.432", "413.445, 495.457, 43.0534, 0.3904", "413.408, 496.582, 42.8879, 0.4298", "413.233, 497.702, 42.6801, 0.3934", "413.187, 498.736, 42.2934, 0.3998", "413.33, 499.784, 41.8477, 0.5102", "414.028, 500.447, 41.6592, 0.4666", "414.557, 501.144, 41.6374, 0.4458", "415.376, 501.896, 41.5276, 0.5744" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "398.223, 444.105, 45.1436, 0.8924", "398.874, 443.921, 45.3902, 0.974", "399.442, 443.095, 45.7285, 0.9918", "400.019, 442.421, 46.1986, 0.9858", "401.065, 442.226, 46.5931, 0.7052", "401.304, 441.248, 46.681, 0.5798", "401.95, 440.628, 46.468, 0.7184", "402.801, 439.881, 46.1731, 0.7744", "403.553, 439.021, 45.8553, 0.7096", "404.327, 438.188, 45.5543, 0.723", "405.221, 437.473, 45.341, 0.5572", "406.209, 436.942, 45.2245, 0.488", "407.308, 436.78, 45.1172, 0.577", "408.412, 436.633, 45.0013, 0.602", "409.513, 436.345, 44.9487, 0.642", "410.402, 435.823, 45.0285, 0.5184", "410.959, 434.824, 45.1049, 0.5614", "411.387, 433.776, 45.1772, 0.4652", "412.108, 432.924, 45.2533, 0.4544", "412.918, 432.116, 45.3225, 0.5358", "413.973, 431.7, 45.3566, 0.6516", "415.043, 431.297, 45.369, 0.8078", "416.093, 430.843, 45.3911, 0.9234", "417.102, 430.328, 45.425, 1.0678", "417.924, 429.532, 45.472, 1.2178", "418.755, 428.751, 45.5442, 1.153", "419.622, 428.023, 45.6842, 0.8654", "420.435, 427.237, 45.8556, 0.6878", "421.158, 426.354, 46.0244, 0.691", "421.849, 425.447, 46.1686, 0.6852", "422.505, 424.511, 46.2722, 0.7312", "423.033, 423.517, 46.2896, 0.7702", "423.55, 422.518, 46.2944, 0.6088", "424.041, 421.509, 46.4209, 0.5302", "424.532, 420.5, 46.6502, 0.6854", "425.024, 419.49, 46.9588, 0.6566", "425.572, 418.503, 47.2987, 0.7674", "426.178, 417.542, 47.6356, 0.861", "426.822, 416.617, 47.9676, 0.8916", "427.439, 415.668, 48.2457, 0.7276", "428.01, 414.676, 48.4322, 0.5794", "428.693, 413.787, 48.5486, 0.692", "429.629, 413.13, 48.6147, 0.6212", "430.552, 412.456, 48.6458, 0.7046", "431.446, 411.742, 48.6531, 0.7312", "432.375, 411.079, 48.6514, 0.7158", "433.383, 410.539, 48.6489, 0.7716", "434.341, 409.933, 48.6455, 0.6962", "435.137, 409.112, 48.6408, 0.5078", "435.983, 408.353, 48.6338, 0.3956", "436.975, 407.783, 48.6242, 0.4092", "437.933, 407.169, 48.6111, 0.5034", "438.755, 406.373, 48.5932, 0.799", "439.614, 405.626, 48.5671, 0.7604", "440.606, 405.056, 48.5299, 0.792", "441.588, 404.471, 48.4784, 0.578", "442.524, 403.814, 48.4134, 0.5886", "443.477, 403.196, 48.3258, 0.4622", "444.521, 402.794, 48.153, 0.4786", "445.587, 402.481, 47.9363, 0.4362", "446.691, 402.349, 47.7128, 0.4826", "447.655, 401.922, 47.6003, 0.648", "448.527, 401.332, 47.6176, 0.7974", "449.6, 400.936, 47.6907, 0.6938", "450.665, 400.519, 47.8198, 0.7472", "451.712, 400.057, 47.9948, 0.7996", "452.746, 399.591, 48.2202, 0.893", "453.735, 399.111, 48.5534, 0.8572", "454.772, 398.721, 48.9412, 0.6616", "455.876, 398.456, 49.338, 0.4674", "456.988, 398.222, 49.7216, 0.433", "458.119, 398.054, 50.0553, 0.3918", "459.251, 397.887, 50.3451, 0.4338", "460.327, 397.843, 50.717, 0.3934", "461.397, 397.82, 51.1703, 0.4366", "462.511, 397.694, 51.5738, 0.3998", "463.643, 397.53, 51.8904, 0.4424", "464.772, 397.353, 52.1466, 0.4402", "465.887, 397.145, 52.3835, 0.3732", "467.002, 396.931, 52.5904, 0.3254", "468.112, 396.653, 52.7358, 0.324", "469.235, 396.49, 52.8584, 0.3556", "470.378, 396.49, 52.978, 0.476", "471.52, 396.49, 53.0914, 0.4", "472.642, 396.297, 53.184, 0.3376", "473.755, 396.036, 53.2627, 0.2984", "474.826, 395.66, 53.3434, 0.3136", "475.834, 395.119, 53.4335, 0.3724", "476.88, 394.68, 53.5424, 0.332", "477.997, 394.439, 53.6838, 0.2966", "479.114, 394.197, 53.8546, 0.2684", "480.143, 393.954, 54.1881, 0.2626", "481.185, 393.721, 54.6151, 0.2542", "482.251, 393.338, 54.9592, 0.2288", "483.272, 392.828, 55.447, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "392.065, 439.579, 44.1647, 0.8872", "392.115, 439.926, 46.4548, 0.2288", "392.306, 440.09, 48.8127, 0.394", "393.129, 440.383, 49.812, 0.4806", "394.233, 440.443, 50.7903, 0.7324", "395.331, 440.314, 51.7163, 0.7552", "396.272, 439.723, 52.5596, 0.8936", "397.05, 438.956, 53.3859, 0.6842", "398.055, 438.639, 54.2175, 0.7266", "399.132, 438.612, 55.1009, 0.5462", "399.949, 438.395, 56.1445, 0.5534", "400.952, 437.921, 57.178, 0.5096", "401.965, 437.695, 58.2495, 0.7056", "402.985, 437.695, 59.3813, 0.6392", "404.021, 437.605, 60.5352, 0.7716", "405.072, 437.396, 61.6795, 0.6928", "406.001, 437.259, 62.8832, 0.7486", "406.698, 437.238, 64.2443, 0.557", "407.74, 437.238, 65.4777, 0.4892", "408.598, 436.787, 66.6719, 0.5716", "408.947, 435.758, 67.8068, 0.6296", "409.371, 434.718, 68.8302, 0.5102", "409.506, 434.039, 69.9924, 0.4746", "409.561, 433.213, 71.2737, 0.4228", "410.04, 432.337, 72.5533, 0.4858", "410.922, 431.7, 73.6994, 0.517", "411.396, 430.842, 74.828, 0.5338", "411.768, 429.946, 75.9018, 0.5338", "411.812, 428.998, 78.0783, 0.4576" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "392.065, 439.579, 44.1647, 0.8872", "393.218, 439.411, 44.6141, 0.7396", "394.172, 439.576, 45.2183, 0.7316", "395.125, 439.764, 45.9418, 0.5728", "395.74, 440.592, 46.6553, 0.5182", "396.351, 441.517, 47.3477, 0.6262", "397.058, 442.368, 47.9772, 0.7266", "398.035, 442.837, 48.5125, 0.711", "399.148, 442.817, 48.8961, 0.745", "400.18, 442.387, 49.3564, 0.7316", "401.253, 442.396, 49.943, 0.85", "401.88, 442.849, 50.7814, 0.8306", "402.152, 443.172, 51.9148, 0.8106", "402.867, 443.575, 53.067, 0.6968", "403.746, 443.356, 53.9479, 0.8578", "404.81, 443.036, 54.7291, 0.9526", "405.832, 442.918, 55.4644, 0.9728", "406.821, 443.073, 56.1733, 0.8504", "407.684, 442.569, 56.8845, 0.7138", "408.284, 441.83, 57.3062, 0.7072", "408.995, 441.459, 57.6912, 0.642", "409.787, 441.106, 58.2728, 0.7776", "410.824, 440.844, 58.9436, 0.9276", "411.826, 440.596, 59.7349, 1.013", "412.872, 440.491, 60.6082, 0.9618", "413.594, 440.098, 61.5966, 0.9698", "414.248, 439.615, 62.5422, 0.9416" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "378.068, 442.579, 27.6258, 0.619", "378.634, 442.674, 27.6237, 0.6864", "379.627, 442.32, 26.5514, 0.5032", "379.747, 441.316, 26.0576, 0.432", "379.723, 440.803, 25.1597, 0.4868", "378.867, 440.443, 24.2006, 0.5974", "377.789, 440.443, 23.405, 0.5302", "377.234, 440.719, 22.3254, 0.5838", "376.634, 440.202, 21.2351, 0.5028", "376.583, 439.536, 20.0245, 0.543", "377.372, 439.286, 18.8373, 0.6086", "378.221, 438.683, 17.879, 0.5454", "378.673, 438.612, 16.6864, 0.6372", "377.649, 438.612, 15.5793, 0.4804", "377.183, 438.612, 14.373, 0.4036", "377.478, 438.52, 13.0263, 0.3678", "377.802, 437.636, 11.8483, 0.47", "377.362, 436.589, 10.9941, 0.5276", "377.013, 435.504, 10.4332, 0.5876", "377.277, 434.484, 9.9547, 0.4688", "377.313, 433.471, 9.566, 0.4492", "376.418, 432.803, 9.3948, 0.356", "376.541, 432.66, 10.1842, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "378.068, 442.579, 27.6258, 0.619", "378.536, 442.689, 27.6061, 0.8028", "379.49, 443.187, 27.7309, 0.8742", "380.272, 443.969, 27.9175, 0.7126", "381.066, 444.724, 28.0938, 0.6968", "381.97, 445.038, 27.9733, 0.8916", "382.978, 445.503, 27.7071, 0.8498", "383.747, 446.296, 27.4104, 0.8996", "383.734, 447.368, 27.2125, 0.8312", "383.413, 448.36, 26.8777, 0.7982", "383.413, 449.496, 26.5113, 0.7396", "383.413, 450.474, 26.0099, 0.618", "383.537, 451.545, 25.4765, 0.6834", "384.328, 452.296, 24.9941, 0.7664" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "386.516, 408.445, 12.4965, 0.7616", "387.737, 407.734, 12.6994, 0.6864", "388.652, 407.107, 11.6274, 0.9134", "389.463, 406.387, 11.1528, 0.8366", "390.423, 406.008, 10.5653, 0.906", "391.319, 405.334, 10.0249, 0.9208", "391.607, 404.738, 9.2936, 0.8164", "390.658, 404.274, 8.7253, 0.805", "389.519, 404.179, 8.3328, 0.8136", "388.451, 403.816, 7.9209, 0.9152" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "386.516, 408.445, 12.4965, 0.7616", "386.704, 408.427, 12.2255, 0.8368", "387.308, 408.51, 11.6177, 0.6828", "387.302, 409.29, 10.9592, 0.6784", "387.762, 409.768, 10.6575, 0.679", "388.759, 410.117, 10.5713, 0.6362", "389.863, 410.41, 10.5228, 0.5416", "390.857, 410.24, 10.4718, 0.6682", "391.266, 409.434, 10.2423, 0.5818", "391.875, 408.646, 9.9461, 0.6076", "392.956, 408.415, 9.6758, 0.6682", "394.034, 408.394, 9.5578, 0.7184", "394.943, 408.687, 9.6795, 0.6556", "395.608, 409.036, 9.4892, 0.6096", "396.4, 409.809, 9.3267, 0.64", "397.449, 410.244, 9.1896, 0.5926", "398.536, 410.532, 9.0089, 0.55", "399.612, 410.516, 8.7858, 0.4804", "400.648, 410.143, 8.6735, 0.5338", "401.764, 409.934, 8.7018, 0.662", "402.884, 409.768, 8.7852, 0.531", "404.001, 409.717, 8.8266, 0.4758", "404.992, 409.253, 8.8236, 0.377", "405.692, 408.435, 8.8913, 0.4056", "406.354, 407.715, 9.1244, 0.3462", "407.092, 407.076, 9.5284, 0.3228", "407.917, 406.639, 10.0362, 0.3178", "408.917, 406.871, 10.4777, 0.3492", "409.698, 407.494, 10.6234, 0.4406", "410.664, 408.082, 10.5714, 0.448", "411.463, 408.814, 10.3583, 0.5624", "411.82, 409.819, 9.9705, 0.5144", "412.587, 410.086, 9.4134, 0.5432", "413.226, 409.169, 8.8574, 0.7118", "414.258, 409.172, 8.439, 0.9236", "415.274, 409.463, 8.2707, 0.8898" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "355.744, 434.138, 37.1734, 1.1352", "355.522, 434.083, 38.3793, 0.6864", "355.171, 434.309, 39.6477, 0.5274", "354.143, 434.773, 40.1386, 0.5014", "353.324, 435.477, 40.6062, 0.4972", "353.219, 436.534, 40.826, 0.5038", "353.214, 437.644, 40.957, 0.446", "353.274, 438.698, 41.1841, 0.451", "353.157, 439.805, 41.4753, 0.6026", "352.781, 440.843, 41.8561, 0.649", "352.314, 441.857, 42.3125, 0.7308", "352.086, 442.97, 42.7756, 0.6746", "351.887, 444.095, 43.2071, 0.8924", "351.67, 445.191, 43.6439, 0.8784", "351.439, 446.267, 44.1196, 0.8196", "351.108, 447.295, 44.641, 0.8712", "350.681, 448.273, 45.1962, 0.8736", "349.808, 448.95, 45.635, 0.8736", "348.992, 449.68, 45.8892, 0.8936", "348.271, 450.524, 46.1143, 0.8346", "347.705, 451.442, 46.398, 0.734", "347.273, 452.501, 46.6413, 0.7328", "346.815, 453.542, 46.881, 0.7464", "346.249, 454.502, 47.1965, 0.6946", "345.852, 455.389, 47.6302, 0.7448", "345.48, 456.296, 48.0757, 0.586", "345.392, 457.383, 48.2541, 0.597" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "355.744, 434.138, 37.1734, 1.1352", "354.474, 433.7, 37.5183, 1.2276", "353.5, 433.219, 37.9361, 1.2714", "352.728, 432.432, 38.2721, 1.2848", "351.917, 431.779, 38.4, 1.1824", "351.148, 430.938, 38.4815, 1.1512", "350.756, 430.077, 38.722, 1.0112", "350.056, 430.002, 39.1796, 0.9212", "349.662, 429.015, 39.4881, 1.0744", "348.999, 428.091, 39.7468, 1.1782", "348.105, 427.445, 39.9624, 1.101", "347.482, 426.519, 40.1699, 1.122", "346.545, 425.968, 40.3393, 1.0526", "345.457, 425.682, 40.4639, 0.9922", "344.719, 425.197, 40.5919, 0.7764" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "368.805, 486.635, 44.0143, 0.3764", "368.044, 487.612, 44.2924, 0.4576", "367.343, 488.513, 44.2221, 0.413", "366.622, 489.396, 44.1868, 0.3966", "365.889, 490.269, 44.1006, 0.4688", "365.26, 491.224, 44.0112, 0.5616", "364.63, 492.18, 43.92, 0.475" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "368.805, 486.635, 44.0143, 0.3764", "369.01, 487.22, 44.0628, 0.3946", "369.3, 488.321, 44.1073, 0.373", "369.669, 489.404, 44.1412, 0.3734", "370.051, 490.48, 44.1482, 0.407", "370.793, 491.349, 44.1549, 0.5372", "371.53, 492.224, 44.1641, 0.6788", "372.129, 493.199, 44.1773, 0.7392", "372.728, 494.174, 44.1952, 0.6888", "373.152, 495.235, 44.2212, 0.6968", "373.578, 496.298, 44.2579, 0.6762", "374.25, 497.216, 44.3072, 0.5818" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "415.376, 501.896, 41.5276, 0.5744", "415.349, 502.479, 41.7155, 0.4586", "415.295, 503.615, 41.2857, 0.3622", "415.241, 504.751, 41.1009, 0.2954", "415.188, 505.887, 40.882, 0.3142", "415.427, 506.987, 40.6535, 0.3426", "415.789, 508.07, 40.4286, 0.427", "416.06, 509.172, 40.1982, 0.429", "416.268, 510.288, 39.9602, 0.4974", "416.531, 511.394, 39.739, 0.539", "416.873, 512.486, 39.5618, 0.5722", "417.169, 513.584, 39.4064, 0.6168", "417.235, 514.715, 39.2193, 0.5546", "417.301, 515.847, 39.0082, 0.4554", "417.178, 516.976, 38.8562, 0.4214", "417.027, 518.106, 38.7456, 0.5468", "416.574, 519.136, 38.5848, 0.5508", "416.067, 520.149, 38.3779, 0.5226", "415.324, 520.977, 38.1105, 0.4152", "414.614, 521.832, 37.819, 0.483", "414.103, 522.855, 37.3419, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "415.376, 501.896, 41.5276, 0.5744", "416.226, 502.448, 41.4008, 0.9152", "417.052, 502.627, 41.0892, 0.705", "418.134, 502.28, 40.8274, 0.5438", "419.232, 502.251, 40.7501, 0.5946", "420.342, 502.418, 40.81, 0.5938", "421.468, 502.596, 40.9662, 0.5956", "422.563, 502.869, 41.197, 0.5828", "423.597, 503.32, 41.4968, 0.637", "424.66, 503.712, 41.785, 0.5882", "425.757, 504.03, 42.0196, 0.5362", "426.8, 504.486, 42.1943, 0.4824", "427.817, 505.006, 42.3139, 0.4042", "428.859, 505.436, 42.4606, 0.3838", "429.912, 505.831, 42.656, 0.4274", "430.889, 506.41, 42.8467, 0.5696", "431.844, 507.038, 43.0184, 0.7654", "432.727, 507.743, 43.1194, 0.7712", "433.611, 508.332, 43.1841, 0.6864", "434.417, 509.061, 43.3516, 0.5338", "434.716, 510.035, 44.1314, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "414.248, 439.615, 62.5422, 0.9416", "414.698, 438.559, 63.583, 0.9152", "415.355, 438.209, 65.9464, 1.012", "415.63, 437.627, 67.0331, 0.912", "416.048, 436.629, 68.0851, 0.8806", "416.892, 436.163, 69.2213, 0.7612", "417.656, 435.971, 70.4763, 0.6074", "418.325, 435.43, 71.7083, 0.4522", "419.14, 434.852, 72.7367, 0.45", "419.689, 434.047, 73.6887, 0.4316", "420.559, 433.337, 74.4296, 0.4676", "421.309, 432.479, 74.996, 0.6514", "422.151, 431.749, 75.4908, 0.6524", "422.994, 431.06, 75.9545, 0.4734", "423.53, 430.497, 76.62, 0.3328", "424.574, 430.082, 77.1708, 0.2884", "425.412, 429.342, 77.6252, 0.2998", "426.047, 428.521, 78.0522, 0.3226", "426.854, 427.845, 78.5666, 0.3578", "427.381, 426.929, 79.1504, 0.4566", "428.072, 426.278, 79.84, 0.4778", "428.864, 425.617, 80.4275, 0.616", "429.779, 425.133, 80.813, 0.6224", "430.206, 424.296, 81.2871, 0.703", "430.902, 423.596, 81.5125, 0.5178", "431.668, 423.167, 81.8252, 0.4264", "432.481, 422.933, 82.3788, 0.4064", "433.421, 422.57, 83.0726, 0.5594", "433.436, 421.939, 84.0398, 0.6058", "432.831, 421.438, 85.0587, 0.4712", "432.876, 420.335, 85.9838, 0.378", "433.786, 419.9, 86.8484, 0.3616", "434.211, 419.221, 87.2869, 0.487", "434.72, 418.356, 87.5792, 0.4204", "435.209, 417.957, 87.8945, 0.3756", "435.589, 417.569, 88.5184, 0.3694", "436.248, 416.979, 89.2682, 0.4428", "436.921, 416.089, 90.0304, 0.6228", "437.425, 415.089, 90.7822, 0.7436", "438.289, 414.643, 91.4847, 0.6284", "438.539, 413.833, 92.3031, 0.4594", "439.501, 413.371, 93.0236, 0.3882", "439.915, 412.619, 93.8078, 0.4532", "440.501, 411.678, 94.4891, 0.533", "441.058, 411.233, 95.3173, 0.4208", "441.901, 410.658, 96.0109, 0.3304", "442.885, 410.135, 96.486, 0.2796", "443.844, 409.854, 96.7266, 0.305", "444.714, 409.888, 97.0785, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "414.248, 439.615, 62.5422, 0.9416", "415.168, 439.422, 63.1263, 0.8692", "415.454, 439.918, 63.8938, 0.6044", "416.209, 440.626, 64.5722, 0.518", "417.011, 441.223, 65.0126, 0.4544", "417.683, 441.242, 65.6544, 0.5526", "418.672, 441.242, 66.3701, 0.6008", "419.697, 441.242, 66.8716, 0.8834", "420.657, 441.472, 67.3604, 0.9274" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "384.328, 452.296, 24.9941, 0.7664", "384.749, 452.331, 24.5274, 0.6482", "385.826, 452.643, 24.1131, 0.6066", "386.91, 453.003, 23.7561, 0.8114", "387.924, 453.518, 23.4619, 0.9656", "388.788, 454.262, 23.202, 0.9734", "389.416, 455.152, 22.8577, 0.9658", "389.825, 455.908, 22.2968, 1.0584" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "384.328, 452.296, 24.9941, 0.7664", "383.591, 452.809, 23.7759, 0.2288", "382.735, 453.405, 22.7987, 0.722", "382.08, 454.305, 22.4594, 0.7498", "381.024, 454.623, 22.0543, 0.8164", "379.962, 454.413, 21.5902, 0.866", "378.961, 453.861, 21.1639, 0.8608", "377.89, 453.46, 20.7664, 0.636", "376.764, 453.286, 20.3777, 0.5766", "376.067, 453.086, 19.7106, 0.5612", "375.616, 452.74, 18.8492, 0.761", "374.512, 452.474, 18.1185, 0.9374", "373.425, 452.127, 17.54, 1.062", "372.31, 451.922, 17.1156, 0.9024", "371.167, 451.886, 16.8272, 0.9028", "370.023, 451.849, 16.6523, 0.8366", "368.965, 451.49, 16.4817, 0.8106", "367.937, 451.015, 16.2562, 0.7504", "366.828, 450.781, 16.0103, 0.6974", "365.702, 450.603, 15.7584, 0.543", "364.612, 450.515, 15.4456, 0.5286", "363.56, 450.515, 15.035, 0.5556", "362.52, 450.515, 14.7885, 0.5746", "361.507, 450.564, 14.7891, 0.7598", "360.458, 450.857, 14.6611, 0.8324", "359.381, 451.174, 14.4866, 0.6806", "358.523, 451.789, 14.2286, 0.644", "357.751, 452.603, 13.9763, 0.7612", "356.824, 453.24, 13.7206, 0.7672", "355.816, 453.778, 13.4867, 0.6604", "354.962, 454.5, 13.3765, 0.5766", "354.339, 455.45, 13.3103, 0.5528", "353.467, 455.967, 13.3317, 0.557", "352.501, 455.756, 13.166, 0.5578", "351.466, 455.576, 12.8523, 0.5946", "350.381, 455.598, 12.4495, 0.4904", "349.972, 456.544, 12.0484, 0.4488", "349.972, 457.671, 11.7851, 0.5502", "349.753, 458.715, 11.6793, 0.5582", "349.281, 459.65, 11.4508, 0.5324", "348.313, 460.064, 11.3039, 0.4516", "347.462, 459.452, 11.2278, 0.4624", "346.426, 459.214, 10.9784, 0.6184", "345.443, 459.227, 10.4759, 0.7042", "344.406, 459.434, 9.8733, 0.7072", "343.712, 460.25, 9.277, 0.5556", "343.21, 461.186, 8.635, 0.579", "342.366, 461.931, 8.0668, 0.517", "341.523, 462.658, 7.5706, 0.4576", "340.704, 463.442, 7.2124, 0.305", "339.895, 464.251, 6.7894, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "415.274, 409.463, 8.2707, 0.8898", "415.493, 409.869, 9.7191, 0.6864", "415.986, 410.794, 8.8965, 0.7626", "416.852, 411.141, 7.9209, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "415.274, 409.463, 8.2707, 0.8898", "416.443, 408.828, 8.1841, 0.6102", "416.835, 407.885, 8.0064, 0.4576", "416.393, 407.479, 6.7894, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "345.392, 457.383, 48.2541, 0.597", "345.162, 458.405, 48.1359, 0.4576", "344.964, 459.102, 50.1844, 0.388", "345.023, 459.82, 51.0636, 0.353", "344.863, 460.942, 51.9229, 0.3744", "344.753, 461.787, 52.948, 0.4524", "344.925, 462.409, 54.112, 0.6394", "344.144, 462.327, 55.3918, 0.7814", "344.006, 461.488, 56.7392, 0.6648", "343.816, 460.49, 58.0017, 0.691", "343.186, 460.931, 59.3216, 0.7066", "343.037, 461.892, 60.5895, 0.6682", "343.024, 462.931, 61.7574, 0.6936", "343.091, 463.852, 62.8718, 0.5008", "343.188, 464.291, 64.1533, 0.3924", "343.598, 465.213, 65.338, 0.355", "344.118, 466.132, 66.4222, 0.408", "344.587, 467.152, 67.3389, 0.5984", "345.208, 468.113, 68.098, 0.5038", "345.609, 468.864, 68.9573, 0.4418", "346.222, 469.629, 69.7782, 0.464", "346.886, 470.344, 70.6336, 0.5244", "347.423, 471.257, 71.4941, 0.5444", "348.132, 471.997, 72.4268, 0.57", "348.574, 472.98, 73.3342, 0.4434", "349.165, 473.897, 74.1283, 0.3672", "349.734, 474.722, 74.8726, 0.3728", "349.947, 475.785, 75.5118, 0.356", "350.186, 476.716, 76.8771, 0.2288" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "345.392, 457.383, 48.2541, 0.597", "345.194, 457.719, 48.3336, 0.5086", "344.354, 458.28, 48.3227, 0.4156", "343.291, 458.604, 48.1712, 0.3566", "342.262, 459.038, 47.8976, 0.383", "341.263, 459.584, 47.6367, 0.459", "340.271, 460.153, 47.4323, 0.6962", "339.337, 460.771, 47.1929, 0.6702", "338.419, 461.403, 46.9188, 0.8236" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "344.719, 425.197, 40.5919, 0.7764", "344.574, 424.604, 40.2245, 0.2288", "344.304, 423.5, 40.0448, 0.6342", "344.057, 422.391, 39.9445, 0.7112", "343.959, 421.254, 39.8678, 0.8292", "343.354, 420.362, 39.9333, 0.9384", "342.586, 419.529, 39.9918, 0.9862", "341.929, 418.689, 39.9092, 0.9112", "341.471, 417.646, 39.7925, 0.879", "341.003, 416.607, 39.6474, 0.7586", "340.506, 415.579, 39.487, 0.6026", "339.909, 414.61, 39.3445, 0.443", "339.245, 413.682, 39.2518, 0.4338", "338.781, 412.649, 39.1734, 0.3982", "338.412, 411.567, 39.069, 0.4218", "338.173, 410.465, 38.8962, 0.487", "338.084, 409.343, 38.6229, 0.7338", "337.964, 408.234, 38.2589, 0.809", "337.726, 407.179, 37.7852, 0.7456", "337.411, 406.135, 37.2876, 0.9258", "336.888, 405.119, 36.9015, 0.9588", "336.375, 404.105, 36.5677, 0.8804", "335.869, 403.095, 36.2396, 0.725", "335.185, 402.22, 35.8938, 0.715", "334.481, 401.362, 35.5376, 0.7188", "334.167, 400.263, 35.2596, 0.6176", "333.853, 399.162, 35.0375, 0.727", "333.613, 398.063, 34.813, 0.6322", "333.393, 396.962, 34.5909, 0.7574", "332.959, 395.92, 34.44, 0.6716", "332.437, 394.903, 34.3759, 0.6842", "331.99, 393.927, 34.2793, 0.5592", "331.308, 393.108, 34.3594, 0.5906", "331.024, 392.19, 34.7393, 0.7444", "330.733, 391.224, 35.2789, 0.5652", "330.733, 390.081, 35.7518, 0.4274" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "344.719, 425.197, 40.5919, 0.7764", "343.627, 424.924, 40.7854, 0.88", "342.656, 424.321, 40.9634, 0.9146", "341.682, 423.722, 41.1149, 1.058", "340.627, 423.281, 41.2602, 0.9394", "339.591, 423.071, 41.5358, 0.9846", "338.553, 422.606, 41.7603, 1.1536", "337.452, 422.306, 41.907, 1.282", "336.362, 422.247, 42.0246, 1.2732", "335.51, 421.655, 42.2064, 1.312", "334.651, 421.038, 42.2117, 1.345", "333.714, 420.486, 42.2794, 1.3672", "333.01, 419.638, 42.4228, 1.3684", "331.988, 419.185, 42.5636, 1.335", "331.233, 418.381, 42.7039, 1.447", "330.313, 417.865, 42.7529, 1.4966", "329.515, 417.057, 42.8268, 1.4408", "328.783, 416.22, 42.8898, 1.3674", "327.947, 415.511, 42.8764, 1.3148" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "364.63, 492.18, 43.92, 0.475", "363.993, 493.261, 44.6085, 0.2288", "363.419, 494.234, 45.367, 0.282", "362.894, 495.23, 45.6932, 0.2886", "362.583, 496.315, 46.0995, 0.3", "362.251, 497.372, 46.5214, 0.324", "361.942, 498.373, 46.9263, 0.3556", "361.529, 499.195, 47.5726, 0.476", "360.757, 499.814, 48.342, 0.4", "360.353, 500.786, 49.1901, 0.3378", "360.038, 501.883, 49.9576, 0.2988", "359.598, 502.902, 50.713, 0.3142", "359.042, 503.876, 51.4822, 0.3734", "358.596, 504.854, 52.3113, 0.334", "358.137, 505.78, 53.2347, 0.3002", "357.483, 506.34, 54.3519, 0.275", "356.849, 507.069, 55.5453, 0.2752", "356.233, 507.977, 56.6944, 0.2758", "356.024, 508.991, 57.8234, 0.2768", "355.949, 510.039, 58.9274, 0.2788", "355.742, 510.957, 60.0606, 0.2824", "355.482, 511.823, 61.2214, 0.2892", "355.26, 512.912, 62.2362, 0.3016", "355.04, 514.013, 63.1218, 0.3248", "355.012, 515.079, 63.9565, 0.3668", "355.012, 516.14, 64.7492, 0.4492", "354.712, 517.2, 65.4105, 0.5808", "354.292, 518.262, 65.9428, 0.9278", "353.672, 519.182, 66.4404, 1.071", "352.946, 520.023, 66.9351, 1.0192", "352.359, 520.989, 67.3929, 0.6326", "351.805, 521.971, 67.825, 0.4112", "351.805, 523.115, 68.1934, 0.3418", "351.764, 524.251, 68.5591, 0.3882", "351.285, 524.9, 69.0998, 0.5382", "350.417, 525.607, 69.5696, 0.506", "349.353, 526.025, 69.932, 0.5804", "348.366, 526.472, 70.3203, 0.5248", "347.351, 526.747, 70.5961, 0.4464", "346.758, 527.398, 70.6286, 0.4098", "346.042, 528.272, 70.719, 0.5004", "345.242, 528.981, 70.9682, 0.5862", "344.21, 529.33, 71.2734, 0.6856", "343.247, 529.814, 71.5966, 0.7024", "342.478, 530.521, 72.0532, 0.6308", "341.625, 531.22, 72.4984, 0.5392", "340.717, 531.912, 72.8272, 0.6268", "339.785, 532.573, 73.0257, 0.6852", "338.93, 533.332, 73.1116, 0.6112", "337.836, 533.385, 72.9988, 0.6718", "336.748, 533.539, 72.8913, 0.7402", "335.776, 534.144, 72.7586, 0.6222", "334.866, 534.705, 72.4903, 0.4482", "333.856, 535.194, 72.1815, 0.3652", "332.832, 535.636, 71.8721, 0.4216", "331.778, 535.845, 71.7035, 0.42", "330.996, 536.457, 71.6094, 0.4746", "329.966, 536.283, 71.4101, 0.5254", "328.864, 536.25, 71.2191, 0.4068", "327.728, 536.341, 71.0539, 0.305", "327.474, 537.457, 70.9022, 0.2288", "327.068, 538.421, 70.1574, 0.2288" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "364.63, 492.18, 43.92, 0.475", "364.424, 493.207, 43.7553, 0.4266", "364.205, 494.307, 43.5355, 0.4782", "363.925, 495.41, 43.3768, 0.5738", "363.622, 496.509, 43.2804, 0.5226", "363.211, 497.566, 43.2396, 0.3942", "362.806, 498.62, 43.1858, 0.3172", "362.411, 499.673, 43.0354, 0.3078", "362.04, 500.732, 42.7955, 0.3306", "361.702, 501.798, 42.4743, 0.405", "361.248, 502.827, 42.1442, 0.3874", "360.789, 503.87, 41.8673, 0.4242", "360.556, 504.977, 41.6128, 0.3832", "360.791, 506.008, 41.312, 0.3808", "361.066, 507.111, 41.0939, 0.4754", "361.23, 508.244, 40.9494, 0.399", "361.394, 509.375, 40.859, 0.3364", "361.229, 510.497, 40.8111, 0.2948", "360.992, 511.616, 40.8036, 0.312", "360.55, 512.642, 40.8288, 0.3438", "359.863, 513.558, 40.8666, 0.4046", "359.243, 514.515, 40.917, 0.5076", "358.702, 515.523, 40.9783, 0.746", "358.165, 516.519, 41.081, 0.9574", "357.631, 517.5, 41.2636, 1.0958", "357.007, 518.438, 41.4582, 0.983", "356.313, 519.344, 41.6198, 0.9634", "355.573, 520.202, 41.6788, 0.6948", "354.833, 521.057, 41.6307, 0.638", "354.193, 522.002, 41.5584, 0.6786", "353.348, 522.748, 41.4448, 0.7326", "352.411, 523.406, 41.302, 0.7056", "351.461, 523.873, 41.0304, 0.5876", "350.502, 524.251, 40.6269, 0.4692", "349.507, 524.755, 40.2352, 0.448", "348.552, 525.328, 39.9162, 0.5906", "347.736, 526.086, 39.8045, 0.6586", "346.876, 526.743, 39.8882, 0.5946", "346.021, 527.47, 40.0369, 0.4822", "345.379, 528.232, 40.0092, 0.4718", "344.928, 529.107, 39.9784, 0.637", "344.356, 530.094, 40.0084, 0.7338", "343.754, 531.054, 40.0946, 0.7864", "342.967, 531.841, 40.297, 0.5838", "342.35, 532.74, 40.5896, 0.5214", "341.954, 533.772, 40.9618, 0.4874", "341.259, 534.528, 41.1914, 0.4856", "340.213, 534.758, 41.4467, 0.4122", "339.072, 534.818, 41.6326, 0.3876", "337.933, 534.899, 41.7525, 0.4882", "336.943, 535.434, 41.7953, 0.4224", "336.027, 536.112, 41.7718, 0.3816", "335.193, 536.894, 41.7004, 0.3682", "334.492, 537.776, 41.5822, 0.5002", "333.842, 538.703, 41.4462, 0.4398", "333.043, 539.521, 41.2854, 0.437", "332.336, 539.905, 40.8758, 0.3586", "331.524, 540.535, 40.3838, 0.3404", "331.178, 541.343, 40.2643, 0.3752", "330.566, 542.305, 40.1685, 0.3372", "330.032, 543.302, 40.1198, 0.306", "329.705, 544.39, 40.1682, 0.2858", "329.403, 545.488, 40.2674, 0.2954", "329.135, 546.6, 40.3281, 0.3126", "328.882, 547.714, 40.297, 0.3484", "328.717, 548.847, 40.2181, 0.3954", "328.552, 549.978, 40.0946, 0.5762", "328.462, 551.111, 39.9006, 0.4576", "328.442, 552.176, 39.5668, 0.3814", "327.985, 553.073, 38.4734, 0.2288" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "374.25, 497.216, 44.3072, 0.5818", "375.013, 498.167, 44.3699, 0.4514", "375.713, 499.067, 44.4749, 0.45", "376.471, 499.906, 44.6267, 0.4242", "377.315, 500.656, 44.8302, 0.4886", "378.245, 501.312, 45.0134, 0.5214", "379.2, 501.94, 45.1562, 0.5462", "380.185, 502.397, 45.155, 0.5374", "380.896, 503.152, 45.2942, 0.5572", "381.372, 504.101, 45.5022, 0.419", "381.644, 505.186, 45.5756, 0.3262", "381.853, 506.302, 45.5636, 0.276", "382.037, 507.421, 45.4947, 0.2772", "382.037, 508.565, 45.4294, 0.2794", "382.037, 509.709, 45.3508, 0.2834", "382.032, 510.853, 45.2861, 0.2912", "382.014, 511.997, 45.2533, 0.3052", "381.995, 513.141, 45.2382, 0.3322", "381.765, 514.245, 45.2281, 0.377", "381.368, 515.318, 45.2127, 0.4854", "381.041, 516.411, 45.1923, 0.564", "380.829, 517.534, 45.1693, 0.6182", "380.617, 518.659, 45.1469, 0.7046", "380.446, 519.773, 45.0612, 0.704", "380.277, 520.887, 44.9375, 0.7976", "380.443, 522.004, 44.9053, 0.7402", "380.656, 523.119, 44.9739, 0.6096", "380.664, 524.257, 45.0534, 0.4866", "380.664, 525.397, 45.1539, 0.365", "380.786, 526.496, 45.36, 0.3106", "381.049, 527.548, 45.7243, 0.2942", "380.865, 528.515, 46.2504, 0.3112", "380.577, 529.505, 46.8289, 0.3418", "380.156, 530.561, 47.3124, 0.4032", "379.78, 531.627, 47.6409, 0.4928", "379.477, 532.712, 47.7495, 0.7782", "379.174, 533.802, 47.705, 0.7282", "378.867, 534.904, 47.5961, 0.7002", "378.259, 535.849, 47.4846, 0.563", "377.531, 536.732, 47.4068, 0.4948", "377.166, 537.774, 47.3026, 0.3802", "376.918, 538.867, 47.1705, 0.3384", "376.752, 539.985, 47.1167, 0.3476", "376.618, 541.114, 47.1685, 0.4004", "376.541, 542.248, 47.2844, 0.5548", "376.541, 543.39, 47.4233, 0.566", "376.541, 544.531, 47.5975, 0.5494", "376.541, 545.628, 47.9405, 0.4706", "376.541, 546.724, 48.3986, 0.5582", "376.94, 547.748, 48.935, 0.5022", "377.391, 548.754, 49.518, 0.5436", "377.871, 549.695, 50.0682, 0.6008", "377.88, 550.784, 50.5912, 0.5732", "377.969, 551.743, 51.0644, 0.485", "378.62, 552.434, 51.669, 0.5008", "378.583, 553.431, 52.3113, 0.575", "378.388, 554.503, 52.948, 0.4948", "378.508, 555.605, 53.5559, 0.488", "378.746, 556.646, 54.1682, 0.4722", "378.671, 557.575, 54.7672, 0.4582", "378.143, 558.583, 55.2163, 0.3594", "378.11, 559.704, 55.6041, 0.3", "378.11, 560.838, 55.9336, 0.2746", "377.958, 561.928, 56.1106, 0.2746", "377.881, 563.042, 56.2204, 0.2748", "377.881, 564.175, 56.3506, 0.2748", "377.766, 565.274, 56.5256, 0.2752", "377.34, 566.303, 56.6961, 0.2756", "377.195, 567.425, 56.7868, 0.2766", "377.195, 568.569, 56.8672, 0.2782", "377.195, 569.713, 56.9394, 0.2814", "377.195, 570.857, 57.0097, 0.287", "377.195, 572.0, 57.0987, 0.2988", "376.995, 572.929, 57.3667, 0.3142", "376.387, 573.841, 57.5537, 0.3734", "376.043, 574.93, 57.7388, 0.3338", "375.823, 576.031, 58.0056, 0.3", "375.63, 576.949, 58.3901, 0.2746", "374.98, 577.649, 58.7468, 0.2746", "375.134, 578.762, 59.0976, 0.2744", "375.135, 579.905, 59.3891, 0.2744", "375.079, 581.046, 59.6198, 0.2742", "374.823, 582.113, 59.8287, 0.274", "374.906, 583.136, 60.0782, 0.2736", "374.766, 583.833, 60.2552, 0.2728", "374.677, 584.968, 60.3641, 0.2712", "374.614, 586.103, 60.4229, 0.2684", "374.271, 587.188, 60.4377, 0.2626", "373.548, 588.07, 60.4153, 0.2542", "373.074, 589.109, 60.3683, 0.2288", "373.074, 590.231, 60.0429, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "374.25, 497.216, 44.3072, 0.5818", "374.148, 497.434, 44.4298, 0.4576", "373.837, 498.476, 44.7597, 0.5052", "374.163, 499.548, 44.8778, 0.4422", "374.614, 500.599, 44.989, 0.475", "375.091, 501.638, 45.0962, 0.495", "375.747, 502.558, 45.2497, 0.5012", "376.045, 503.649, 45.418, 0.435", "376.528, 504.677, 45.5804, 0.4606", "377.154, 505.632, 45.7545, 0.4748", "377.808, 506.565, 45.9491, 0.433", "378.509, 507.459, 46.1658, 0.457", "379.066, 508.437, 46.4232, 0.4668", "379.587, 509.446, 46.6592, 0.4248", "380.324, 510.298, 46.8404, 0.4106", "380.683, 511.087, 47.1313, 0.532", "380.923, 512.094, 47.4832, 0.498", "381.184, 513.189, 47.8192, 0.5478", "381.588, 514.255, 48.0956, 0.55", "381.925, 515.342, 48.2938, 0.7638", "382.307, 516.409, 48.417, 0.8288", "382.458, 517.525, 48.51, 0.7276", "382.425, 518.571, 48.6696, 0.4716", "382.23, 519.667, 48.7189, 0.3294", "382.053, 520.797, 48.7572, 0.282", "382.001, 521.936, 48.8048, 0.2884", "381.617, 522.862, 48.6959, 0.2998", "381.543, 523.959, 48.6158, 0.3226", "381.581, 525.087, 48.6738, 0.3578", "381.986, 525.865, 49.0591, 0.4562", "381.565, 526.041, 49.7465, 0.4792", "381.871, 527.005, 50.4941, 0.6098", "381.987, 528.124, 51.1003, 0.6526", "381.599, 529.117, 51.5514, 0.5564", "381.458, 530.088, 51.7101, 0.5434", "381.027, 531.143, 51.6863, 0.6314", "380.424, 532.101, 51.6048, 0.4796", "380.435, 532.31, 51.4634, 0.3538", "380.442, 533.148, 51.1372, 0.28", "379.76, 533.987, 50.9222, 0.2846", "379.712, 534.993, 51.0143, 0.2932", "379.401, 534.921, 51.5432, 0.309", "379.188, 535.184, 52.2992, 0.3402", "379.254, 536.299, 52.9161, 0.3868", "379.254, 537.344, 53.2972, 0.5284", "378.896, 538.318, 53.7135, 0.5236", "378.612, 539.307, 54.1937, 0.4382", "378.568, 540.309, 54.7386, 0.4242", "378.339, 541.353, 55.2591, 0.3822", "378.339, 542.489, 55.6598, 0.384", "378.362, 543.596, 55.9527, 0.4576", "378.782, 544.506, 56.2951, 0.4814", "379.247, 545.526, 56.5121, 0.6148", "379.403, 546.639, 56.5566, 0.6572", "379.294, 547.777, 56.5734, 0.5872", "379.259, 548.845, 56.4558, 0.4922", "379.273, 549.725, 56.2047, 0.3754", "379.606, 550.674, 56.222, 0.3294", "379.781, 551.386, 56.5275, 0.3312", "380.067, 552.326, 56.8459, 0.37", "380.169, 553.447, 57.1777, 0.4972", "380.399, 554.404, 57.6909, 0.466", "380.636, 555.286, 58.2061, 0.3304", "380.857, 556.359, 58.9204, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "420.657, 441.472, 67.3604, 0.9274", "421.411, 441.701, 69.79, 0.9152", "421.638, 442.011, 71.4848, 0.6484", "422.458, 442.704, 72.032, 0.618", "423.289, 443.317, 72.6393, 0.5496", "423.661, 443.973, 73.4202, 0.4812", "424.544, 444.421, 73.9572, 0.5294", "425.656, 444.232, 74.3898, 0.454", "426.795, 444.245, 74.7533, 0.4286", "427.902, 444.439, 75.1587, 0.5118", "428.966, 444.812, 75.5191, 0.492", "429.599, 445.133, 76.0654, 0.3844", "429.768, 445.133, 76.9348, 0.2994", "430.437, 445.024, 77.6978, 0.2736", "431.302, 445.633, 78.1519, 0.2728", "432.265, 446.209, 78.356, 0.2712", "433.379, 446.278, 78.3163, 0.2684", "434.33, 446.455, 77.9624, 0.2626", "434.967, 447.323, 77.6619, 0.2542", "436.022, 447.67, 77.3724, 0.2288", "436.704, 448.108, 76.316, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "420.657, 441.472, 67.3604, 0.9274", "420.89, 441.57, 68.0302, 0.8208", "421.825, 441.276, 68.6756, 0.6224", "422.757, 440.677, 69.2488, 0.4856", "423.688, 440.31, 69.8818, 0.4844", "424.316, 439.627, 70.3651, 0.6298", "425.129, 439.183, 70.7888, 0.868", "426.144, 438.908, 71.0405, 1.0048", "427.182, 438.486, 71.2494, 0.9082", "428.098, 438.267, 71.6181, 0.5988", "428.946, 437.634, 71.8858, 0.4294", "429.854, 436.999, 72.0639, 0.44", "430.845, 436.435, 72.2352, 0.485", "431.794, 435.808, 72.445, 0.4458", "432.807, 435.329, 72.7059, 0.5116", "433.813, 434.852, 72.9386, 0.4188", "434.8, 434.354, 73.2102, 0.3736", "435.534, 433.925, 73.6725, 0.3598", "436.573, 433.69, 74.0393, 0.4524", "437.606, 433.919, 74.3672, 0.5078", "438.708, 433.753, 74.6746, 0.4886", "439.395, 433.236, 75.0436, 0.5876", "440.04, 432.629, 75.1145, 0.5748", "441.059, 432.538, 75.308, 0.5894", "442.08, 432.28, 75.607, 0.4314", "443.157, 432.282, 75.8044, 0.349", "444.239, 432.546, 75.9469, 0.318", "445.232, 432.344, 76.102, 0.357", "445.828, 431.384, 76.1362, 0.4176", "446.163, 430.918, 75.7338, 0.5874", "446.723, 430.207, 75.1979, 0.6224", "447.13, 429.927, 74.7074, 0.6744", "447.527, 429.565, 74.2322, 0.604", "448.49, 429.064, 73.68, 0.596", "449.489, 428.991, 73.1329, 0.4448", "449.886, 427.999, 72.7163, 0.3686", "450.417, 427.282, 72.2137, 0.3802", "450.928, 427.467, 71.5518, 0.3464", "451.556, 426.667, 71.076, 0.3242", "452.177, 425.948, 71.0105, 0.3142", "453.158, 425.453, 71.1749, 0.3736", "453.97, 424.682, 71.4431, 0.334", "454.763, 423.889, 71.7774, 0.3004", "455.24, 423.285, 72.3842, 0.2752", "455.918, 422.989, 73.0654, 0.2758", "457.032, 422.933, 73.4843, 0.2768", "458.105, 422.88, 73.6756, 0.2786", "458.926, 422.22, 73.7635, 0.282", "459.721, 421.561, 73.8545, 0.2884", "460.48, 421.54, 74.1852, 0.3", "461.537, 421.267, 74.4982, 0.3238", "462.471, 420.687, 74.6438, 0.3554", "463.498, 420.468, 74.6477, 0.4754", "464.449, 420.541, 74.4887, 0.399", "465.5, 420.152, 74.366, 0.336", "466.15, 419.647, 74.5158, 0.2954", "467.036, 419.159, 74.8742, 0.3078", "468.081, 418.755, 75.2752, 0.3616", "469.175, 418.476, 75.6764, 0.3136", "470.304, 418.356, 75.994, 0.2542", "471.264, 418.814, 76.316, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "389.825, 455.908, 22.2968, 1.0584", "390.433, 456.725, 21.8416, 1.1692", "391.116, 457.642, 21.4745, 1.2136", "391.969, 458.369, 21.2449, 0.9326", "392.774, 459.175, 21.0844, 0.8022", "393.666, 459.692, 20.8921, 0.7246", "394.466, 460.157, 20.5949, 0.6982", "395.388, 460.793, 20.3631, 0.538", "396.332, 461.3, 20.3416, 0.5506", "397.318, 461.806, 20.4323, 0.4448", "398.319, 462.314, 20.5626, 0.417", "399.25, 462.958, 20.6457, 0.4644", "400.008, 463.74, 20.5714, 0.5298", "400.502, 464.676, 20.32, 0.5306", "401.349, 465.403, 19.9928, 0.66", "402.46, 465.463, 19.7023, 0.7368", "403.49, 465.171, 19.375, 0.7548", "404.534, 465.189, 19.3212, 0.7054", "405.44, 465.631, 19.5096, 0.5576", "406.332, 466.242, 19.6843, 0.558", "407.225, 466.834, 19.6707, 0.5988", "408.227, 467.241, 19.5052, 0.7096", "409.273, 467.617, 19.2623, 0.7432", "410.365, 467.859, 19.054, 0.7246", "411.471, 467.913, 19.0095, 0.6252", "412.595, 467.948, 19.0409, 0.5276", "413.499, 468.432, 19.0352, 0.6126", "414.347, 469.146, 19.1668, 0.6222", "415.328, 469.678, 19.4327, 0.6716", "416.235, 470.221, 19.8343, 0.6112", "417.091, 470.771, 20.3589, 0.5502", "417.915, 471.548, 20.7941, 0.648", "418.737, 472.343, 21.1285, 0.7192", "419.57, 473.123, 21.3234, 0.699", "420.396, 473.909, 21.4064, 0.7158", "421.072, 474.822, 21.4785, 0.7114", "421.546, 475.827, 21.5618, 0.6476", "421.849, 476.911, 21.6807, 0.5702", "422.336, 477.904, 21.737, 0.6862", "422.99, 478.814, 21.6646, 0.785", "423.715, 479.656, 21.478, 0.8472", "424.505, 480.395, 21.1966, 0.8622", "425.241, 481.197, 21.0612, 0.9204", "425.688, 482.195, 21.0046, 0.8792", "426.253, 483.155, 20.883, 0.841", "426.915, 484.05, 20.7563, 0.8146", "427.762, 484.819, 20.6873, 0.7782", "428.613, 485.583, 20.6598, 0.8776", "429.472, 486.338, 20.6569, 0.939", "430.311, 487.102, 20.7155, 0.735", "431.116, 487.879, 20.8597, 0.526", "431.927, 488.662, 21.0126, 0.4604", "432.742, 489.448, 21.116, 0.6072", "433.229, 490.458, 21.1207, 0.7198", "433.648, 491.517, 21.0048, 0.5588" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "389.825, 455.908, 22.2968, 1.0584", "390.08, 456.982, 20.1309, 0.6864", "390.32, 458.022, 19.2007, 0.8468", "390.54, 459.123, 18.8186, 0.6986", "390.783, 460.216, 18.4078, 0.7204", "391.29, 461.229, 18.0118, 0.923", "391.783, 462.247, 17.644, 0.9696", "392.079, 463.326, 17.3324, 0.8228", "392.089, 464.466, 17.124, 0.7664", "391.854, 465.546, 16.9805, 0.7596", "390.873, 466.11, 16.8786, 0.7288", "389.93, 466.704, 16.7985, 0.7596", "389.137, 467.528, 16.7233, 0.849", "388.884, 468.627, 16.6375, 0.6282", "388.533, 469.623, 16.4265, 0.4946", "388.793, 470.738, 16.2367, 0.5098", "389.316, 471.678, 16.0842, 0.6346", "390.027, 472.49, 15.8212, 0.6244", "390.544, 473.431, 15.5304, 0.635", "390.727, 474.507, 15.3917, 0.5118", "390.741, 475.639, 15.2918, 0.5192", "391.145, 476.705, 15.158, 0.5308", "391.569, 477.768, 14.9799, 0.5638", "391.835, 478.854, 14.6844, 0.5696", "392.059, 479.948, 14.2558, 0.6194", "392.328, 480.946, 13.6394, 0.5234", "392.612, 481.91, 12.8874, 0.5718", "393.377, 482.649, 12.1191, 0.4792", "394.072, 483.465, 11.4072, 0.5048", "394.522, 484.514, 10.8592, 0.5108", "394.85, 485.586, 10.4599, 0.494", "394.792, 486.727, 10.1993, 0.5978", "394.734, 487.87, 10.037, 0.5934", "394.284, 488.788, 9.8386, 0.6246", "393.768, 489.726, 9.8001, 0.4926", "393.513, 490.793, 9.6989, 0.483", "393.661, 491.89, 9.6066, 0.4682", "393.968, 492.984, 9.5934, 0.4254", "394.516, 493.92, 9.6974, 0.4204", "395.203, 494.835, 9.773, 0.5076", "395.891, 495.748, 9.798, 0.6602", "396.689, 496.56, 9.7863, 0.5278", "397.074, 497.589, 9.7146, 0.4688", "396.879, 498.672, 9.525, 0.3702", "396.986, 499.659, 9.2289, 0.3632", "397.514, 500.674, 8.9378, 0.412", "397.949, 501.701, 8.6166, 0.431", "398.071, 502.783, 8.1993, 0.356", "398.071, 503.885, 7.9404, 0.2938", "398.071, 504.971, 7.5982, 0.2626", "398.071, 506.048, 7.1636, 0.2542", "398.259, 507.126, 6.697, 0.2288", "398.528, 508.204, 5.658, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "338.419, 461.403, 46.9188, 0.8236", "337.67, 462.4, 46.7244, 0.8152", "336.97, 463.302, 46.5962, 0.8478", "336.146, 464.067, 46.5741, 0.675", "335.262, 464.75, 46.5732, 0.5712", "334.271, 465.286, 46.4926, 0.4712", "333.328, 465.912, 46.3674, 0.5234", "332.422, 466.606, 46.2202, 0.6114", "331.494, 467.26, 46.046, 0.5882", "330.557, 467.894, 45.8556, 0.5358", "329.822, 468.754, 45.7274, 0.4826", "329.135, 469.669, 45.6739, 0.3994", "328.212, 470.276, 45.7464, 0.3998", "327.232, 470.807, 45.9228, 0.3358", "326.151, 471.178, 46.0748, 0.3034", "325.067, 471.547, 46.1922, 0.281", "323.946, 471.756, 46.2644, 0.2866", "322.814, 471.921, 46.2913, 0.2968", "321.685, 472.099, 46.2753, 0.3164", "320.56, 472.311, 46.2311, 0.348", "319.436, 472.523, 46.1709, 0.4312", "318.445, 473.075, 46.0586, 0.4664", "317.435, 473.593, 45.9175, 0.4226", "316.362, 473.983, 45.7878, 0.4128", "315.309, 474.389, 45.6198, 0.5058", "314.316, 474.842, 45.3088, 0.5964", "313.394, 475.437, 44.9263, 0.7042", "312.553, 476.193, 44.5376, 0.739", "311.604, 476.786, 44.1476, 0.6882", "310.596, 477.289, 43.7606, 0.6958", "309.644, 477.916, 43.4353, 0.6746", "308.767, 478.565, 43.2524, 0.5776", "307.92, 479.282, 43.157, 0.4496", "307.23, 480.167, 43.0058, 0.4174", "306.619, 480.823, 42.5849, 0.5068", "305.728, 481.309, 42.0456, 0.6352", "304.771, 481.876, 41.6044, 0.5958", "304.623, 482.913, 41.3622, 0.726", "304.806, 483.953, 41.0432, 0.6674", "304.896, 485.03, 40.7977, 0.6424", "304.225, 485.943, 40.6339, 0.6468", "303.416, 486.75, 40.5026, 0.6384", "302.557, 487.497, 40.3679, 0.4746", "301.644, 488.115, 40.1478, 0.4322", "300.958, 488.974, 39.6049, 0.2288" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "338.419, 461.403, 46.9188, 0.8236", "338.642, 461.279, 47.1346, 0.6864", "337.831, 461.988, 46.3518, 0.5036", "337.265, 461.619, 45.8721, 0.4612", "336.207, 461.382, 45.4079, 0.403", "335.767, 461.141, 45.3488, 0.4248", "335.04, 460.696, 45.4294, 0.523", "333.961, 460.834, 45.3816, 0.6526", "332.867, 460.802, 45.2614, 0.6898", "331.814, 460.435, 45.1601, 0.6004", "330.803, 460.023, 44.9652, 0.5164", "329.76, 459.628, 44.7712, 0.4222", "328.647, 459.396, 44.623, 0.4072", "327.58, 459.03, 44.4788, 0.5192", "326.533, 458.586, 44.3139, 0.5058", "325.487, 458.159, 44.107, 0.4102", "324.378, 457.987, 43.9138, 0.347", "323.246, 457.891, 43.7265, 0.3622", "322.182, 457.59, 43.5268, 0.4348", "321.198, 457.039, 43.3874, 0.5832", "320.083, 456.784, 43.2978, 0.7912", "318.956, 456.593, 43.2513, 0.8162", "317.813, 456.576, 43.2244, 0.7828", "316.669, 456.576, 43.2079, 0.6506", "315.53, 456.514, 43.1931, 0.7466", "314.408, 456.335, 43.1634, 0.8694", "313.327, 455.987, 43.1166, 0.9084", "312.257, 455.603, 43.1105, 0.7524", "311.168, 455.399, 43.2169, 0.6558", "310.127, 455.203, 43.4344, 0.6852", "309.021, 455.178, 43.6682, 0.6432", "308.468, 454.539, 43.6246, 0.8048", "307.525, 454.517, 43.3552, 0.8588", "306.699, 454.482, 43.2471, 0.7768", "305.988, 454.008, 43.2334, 0.5932", "304.93, 453.627, 43.1614, 0.4068", "303.953, 453.829, 42.6471, 0.4576" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "330.733, 390.081, 35.7518, 0.4274", "329.957, 389.414, 36.1844, 0.3726", "328.988, 389.214, 36.6134, 0.4404", "328.249, 388.351, 36.8978, 0.6588", "327.588, 387.421, 37.0479, 0.614", "327.103, 386.43, 37.067, 0.6544", "326.81, 385.333, 37.03, 0.8172", "326.472, 384.258, 37.0068, 0.6928", "326.039, 383.229, 37.1064, 0.7", "325.544, 382.216, 37.2845, 0.7034", "324.974, 381.224, 37.4836, 0.5288", "324.49, 380.195, 37.7084, 0.3978", "324.142, 379.106, 37.9543, 0.3632", "323.808, 378.03, 38.243, 0.4304", "323.533, 377.012, 38.6876, 0.6052", "323.22, 375.979, 39.2235, 0.6862", "322.934, 374.882, 39.7071, 0.642", "322.489, 373.874, 40.1461, 0.5894", "321.462, 373.598, 40.6484, 0.5774", "320.5, 373.46, 41.2689, 0.5976", "319.942, 372.554, 41.9233, 0.6584", "319.41, 371.576, 42.511, 0.6586", "318.889, 370.558, 43.0002, 0.518", "318.33, 369.605, 43.4532, 0.483", "317.81, 368.693, 43.8203, 0.4676", "317.118, 367.889, 44.1308, 0.4266", "317.311, 366.891, 44.518, 0.4124", "317.981, 366.027, 44.9571, 0.5424", "318.329, 365.122, 45.4664, 0.483", "318.365, 363.984, 46.3943, 0.6864" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "330.733, 390.081, 35.7518, 0.4274", "330.733, 388.788, 36.2102, 0.2288", "330.715, 387.644, 36.111, 0.3856", "330.697, 386.5, 36.0718, 0.3566", "330.674, 385.358, 36.017, 0.3416", "330.627, 384.214, 35.9391, 0.3534", "330.58, 383.071, 35.8299, 0.4126", "330.734, 381.938, 35.6793, 0.5708", "330.882, 380.806, 35.4869, 0.6276", "330.655, 379.72, 35.1646, 0.5078", "330.427, 378.634, 34.7379, 0.464" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "327.947, 415.511, 42.8764, 1.3148", "327.895, 414.318, 41.9838, 0.6864", "328.22, 413.222, 41.9698, 0.4824", "328.868, 412.396, 42.0358, 0.399", "329.725, 411.812, 42.1302, 0.3998", "330.776, 411.564, 42.0244, 0.5604", "331.743, 411.062, 41.8082, 0.545", "332.662, 410.41, 41.5439, 0.6624", "333.628, 409.797, 41.3165, 0.63", "334.659, 409.303, 41.1186, 0.869", "335.696, 408.82, 40.962, 0.7748", "336.734, 408.337, 40.85, 0.9212", "337.77, 407.854, 40.7509, 1.007", "338.821, 407.421, 40.6067, 0.9228", "339.876, 407.009, 40.4001, 0.8034", "340.932, 406.597, 40.1492, 0.633", "341.988, 406.185, 39.87, 0.7554", "343.042, 405.748, 39.6158, 0.6852", "344.095, 405.3, 39.3904, 0.8524", "345.147, 404.852, 39.1751, 0.864", "346.199, 404.405, 38.9446, 0.9622", "347.315, 404.286, 38.7411, 0.7702", "348.344, 404.242, 38.4306, 0.6292", "349.176, 404.242, 37.7908, 0.6976", "349.94, 403.936, 36.9328, 0.8248", "350.677, 403.373, 36.0013, 0.8298", "351.485, 402.566, 35.2503, 0.5864", "352.379, 401.866, 34.6814, 0.447", "353.402, 401.385, 34.2997, 0.505", "354.513, 401.115, 34.0766, 0.4484", "355.625, 400.845, 33.9366, 0.4532", "356.736, 400.575, 33.8131, 0.3886" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "327.947, 415.511, 42.8764, 1.3148", "326.689, 414.619, 42.8952, 1.2696", "325.715, 414.019, 42.982, 1.1602", "324.744, 413.567, 43.2079, 1.0808", "323.993, 413.241, 43.7254, 1.0228", "323.057, 412.791, 44.322, 0.9382", "322.287, 412.02, 44.7611, 0.899", "321.399, 411.328, 45.1615, 0.9416", "320.687, 411.034, 45.5182, 0.9184", "319.713, 410.434, 45.7307, 0.9144", "318.739, 409.836, 45.8304, 0.9466", "317.765, 409.236, 45.8811, 1.0434", "316.792, 408.637, 45.9169, 1.2704", "315.822, 408.035, 45.9696, 1.4614", "314.851, 407.433, 46.0536, 1.5588", "313.883, 406.83, 46.1745, 1.3838", "312.914, 406.229, 46.3232, 1.183", "311.997, 405.545, 46.4666, 0.8964", "311.086, 404.852, 46.6043, 0.6368", "310.175, 404.161, 46.7401, 0.665", "309.358, 403.375, 46.9193, 0.5332", "308.588, 402.544, 47.1554, 0.4968", "307.818, 401.712, 47.434, 0.562", "307.029, 400.907, 47.7481, 0.726", "306.204, 400.147, 48.09, 0.8212", "305.379, 399.386, 48.4358, 0.8672", "304.582, 398.6, 48.7477, 0.9002", "303.933, 397.669, 48.9132, 0.9858", "303.285, 396.738, 48.9695, 1.0266", "302.635, 395.807, 48.9488, 0.9868", "302.36, 395.277, 49.0244, 1.017", "301.673, 394.65, 49.1711, 1.025", "301.094, 393.868, 49.3002, 1.0448", "300.415, 393.108, 49.4278, 0.8274", "299.858, 392.369, 49.4424, 0.7438", "299.192, 391.884, 49.7246, 0.6382" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "433.648, 491.517, 21.0048, 0.5588", "433.753, 492.859, 24.1248, 0.9152", "433.8, 493.98, 24.4227, 0.6164", "433.8, 495.123, 24.516, 0.5644", "434.199, 496.027, 24.7804, 0.4226", "434.938, 496.304, 25.2891, 0.3796", "435.622, 497.002, 25.7092, 0.3762", "435.758, 497.872, 25.7792, 0.4568", "436.541, 498.668, 25.8247, 0.6426", "437.063, 499.599, 25.9795, 0.811", "437.637, 500.546, 26.1615, 0.6054", "437.904, 501.559, 26.2751, 0.45", "437.923, 502.681, 26.3088, 0.4374", "437.962, 503.819, 26.3482, 0.4504", "438.108, 504.954, 26.3805, 0.5258", "438.273, 506.085, 26.4051, 0.6468", "438.382, 507.215, 26.469, 0.5028", "438.4, 508.244, 26.6872, 0.4238", "438.69, 509.143, 26.9994, 0.2796", "439.297, 510.035, 27.1578, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "433.648, 491.517, 21.0048, 0.5588", "434.079, 491.173, 20.5586, 0.4552", "434.84, 490.636, 19.78, 0.4604", "435.372, 489.951, 18.7518, 0.6566", "435.655, 489.277, 17.5987, 0.8006", "434.787, 488.783, 16.5242, 0.762", "433.957, 488.165, 15.4705, 0.5716", "433.397, 487.345, 14.4796, 0.5672", "433.713, 488.257, 13.7128, 0.4694", "433.339, 488.616, 12.8569, 0.4928", "432.658, 488.072, 12.0537, 0.4574", "431.633, 488.059, 11.2893, 0.546", "430.534, 488.059, 10.7626, 0.6484", "429.412, 488.059, 10.497, 0.6808", "428.443, 487.823, 10.493, 0.5902", "427.51, 487.268, 10.6266, 0.467", "426.809, 486.732, 10.4681, 0.4786", "426.163, 485.826, 10.2331, 0.4786", "425.5, 484.897, 9.9298, 0.5846", "425.031, 484.004, 9.4632, 0.723", "424.26, 483.531, 8.86, 0.8036", "423.242, 483.01, 8.3775, 0.893", "422.27, 482.41, 8.0412, 0.6638", "421.535, 481.653, 7.764, 0.5538", "421.392, 480.573, 7.4573, 0.6518", "420.914, 479.553, 7.245, 0.74", "420.05, 478.899, 7.1869, 0.901", "419.096, 478.489, 7.3107, 0.983", "418.289, 478.049, 7.1917, 0.8136", "417.309, 477.529, 6.7894, 0.6864" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "330.427, 378.634, 34.7379, 0.464", "330.578, 378.079, 34.1547, 0.4332", "331.486, 377.664, 33.7996, 0.3602", "332.389, 377.091, 33.411, 0.3016", "333.128, 376.704, 32.8555, 0.2776", "333.721, 376.885, 32.1325, 0.2804", "333.985, 377.637, 31.386, 0.2852", "334.897, 378.031, 30.9056, 0.2954", "335.517, 377.848, 30.987, 0.3078", "336.334, 378.283, 31.4622, 0.3616", "336.784, 378.703, 32.326, 0.3136", "337.616, 379.353, 33.1985, 0.2542", "338.285, 380.138, 34.7911, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "330.427, 378.634, 34.7379, 0.464", "330.046, 377.569, 34.3252, 0.2288", "329.665, 376.502, 33.1061, 0.3898", "329.245, 375.493, 32.599, 0.3588", "328.901, 374.482, 31.9875, 0.3728", "328.575, 373.455, 31.3485, 0.2796", "328.901, 373.141, 29.4207, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "356.736, 400.575, 33.8131, 0.3886", "358.115, 400.402, 33.5555, 0.3956", "359.231, 400.264, 33.2066, 0.4808", "360.346, 400.124, 32.788, 0.5164", "361.462, 399.985, 32.3254, 0.7188", "362.537, 399.698, 31.8293, 0.6602", "363.604, 399.385, 31.3272, 0.8276", "364.673, 399.073, 30.8482, 0.7138", "365.741, 398.761, 30.3996, 0.5026", "366.878, 398.675, 30.0782, 0.3398", "368.02, 398.603, 29.8673, 0.3012", "369.162, 398.532, 29.7433, 0.3246", "370.303, 398.46, 29.6814, 0.3644", "371.442, 398.348, 29.659, 0.4562", "372.578, 398.214, 29.6548, 0.5382", "373.714, 398.08, 29.6503, 0.431", "374.85, 397.946, 29.6439, 0.3482", "375.987, 397.825, 29.6352, 0.3176", "377.131, 397.825, 29.6229, 0.3504", "378.275, 397.825, 29.6055, 0.4352", "379.419, 397.825, 29.5812, 0.475", "380.563, 397.825, 29.5478, 0.4322", "381.707, 397.825, 29.5044, 0.4614", "382.812, 398.025, 29.4358, 0.4464", "383.874, 398.445, 29.332, 0.5246", "384.934, 398.865, 29.2043, 0.6136", "385.996, 399.285, 29.0674, 0.5922", "387.065, 399.597, 28.9198, 0.543", "388.149, 399.711, 28.7146, 0.4972", "389.226, 399.985, 28.5653, 0.4208", "390.298, 400.379, 28.534, 0.466", "391.347, 400.517, 28.7067, 0.3304", "392.388, 400.575, 29.666, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "356.736, 400.575, 33.8131, 0.3886", "356.053, 400.181, 34.9303, 0.9152", "356.443, 399.433, 34.6906, 0.8102", "357.126, 398.637, 34.4971, 0.651", "357.766, 397.705, 34.323, 0.5344", "358.619, 396.974, 34.249, 0.5952", "359.455, 396.238, 34.2432, 0.7352", "360.077, 395.306, 34.1312, 0.864", "360.615, 394.325, 33.9606, 0.821", "360.963, 393.235, 33.7991, 0.7376", "361.299, 392.145, 33.6174, 0.601", "361.544, 391.044, 33.3642, 0.488", "361.802, 389.951, 33.0733, 0.5122", "362.489, 389.035, 32.8356, 0.5674", "363.179, 388.123, 32.6301, 0.6196", "363.975, 387.301, 32.4411, 0.7308", "364.767, 386.482, 32.2574, 0.6374", "365.411, 385.696, 31.908, 0.5476", "366.163, 384.966, 31.4997, 0.4328", "366.878, 384.214, 31.2368, 0.4264", "367.454, 383.251, 30.9795, 0.5568", "368.057, 382.283, 30.7695, 0.565", "368.582, 381.268, 30.6334, 0.5706", "368.98, 380.256, 30.4514, 0.3982", "369.14, 379.196, 30.3719, 0.2796", "368.753, 378.177, 30.5525, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "299.192, 391.884, 49.7246, 0.6382", "299.301, 391.461, 51.0476, 0.9152", "299.271, 390.849, 50.5165, 0.9558", "299.264, 389.804, 50.3639, 0.7878", "299.064, 389.065, 50.4888, 0.7486", "298.616, 388.502, 50.4879, 0.726", "297.811, 388.073, 50.5795, 0.6694", "296.903, 387.559, 50.694, 0.6356", "296.411, 386.901, 51.52, 0.6864" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "299.192, 391.884, 49.7246, 0.6382", "298.623, 391.019, 49.9414, 0.6616", "298.067, 390.345, 50.0248, 0.5558", "297.313, 389.594, 50.1903, 0.6264", "296.64, 388.856, 50.4924, 0.607", "296.21, 388.466, 50.6618, 0.6126", "295.682, 387.668, 50.8774, 0.6516", "294.962, 386.912, 51.0443, 0.584", "294.24, 386.291, 51.2212, 0.6804", "293.785, 385.364, 51.4464, 0.6976", "292.991, 384.938, 51.8045, 0.8278", "292.354, 384.204, 52.2259, 0.821", "291.544, 384.076, 52.4244, 0.6404", "290.679, 383.341, 52.5686, 0.4338", "289.808, 382.598, 52.6658, 0.3448", "288.938, 381.856, 52.7271, 0.3524", "288.066, 381.116, 52.7747, 0.445", "287.117, 380.482, 52.8718, 0.4632", "286.168, 379.849, 53.0328, 0.5566", "285.218, 379.215, 53.2288, 0.6676", "284.268, 378.587, 53.4562, 0.719", "283.309, 377.986, 53.7309, 0.649", "282.35, 377.383, 54.0358, 0.6338", "281.393, 376.781, 54.3561, 0.508", "280.488, 376.101, 54.6644, 0.5198", "279.653, 375.319, 54.9357, 0.495", "278.819, 374.538, 55.183, 0.677", "277.985, 373.755, 55.4204, 0.5934", "277.037, 373.175, 55.6996, 0.6524", "275.984, 372.78, 56.0549, 0.638", "274.932, 372.386, 56.478, 0.5254", "273.879, 371.992, 56.9554, 0.5052", "272.915, 371.444, 57.4801, 0.4682", "271.997, 370.813, 58.0376, 0.6254", "271.08, 370.182, 58.606, 0.5066", "270.162, 369.549, 59.1682, 0.4478", "269.253, 368.895, 59.7055, 0.4694", "268.343, 368.242, 60.2134, 0.563", "267.433, 367.588, 60.6883, 0.4772", "266.493, 366.956, 61.0946, 0.4312", "265.527, 366.345, 61.4135, 0.4854", "264.56, 365.734, 61.6731, 0.5934", "263.592, 365.124, 61.899, 0.5286", "262.587, 364.6, 62.1382, 0.5526", "261.545, 364.156, 62.4254, 0.5826", "260.501, 363.713, 62.7656, 0.7084", "259.459, 363.269, 63.1523, 0.6018", "258.368, 363.063, 63.5824, 0.4512", "257.244, 363.012, 64.0433, 0.4016", "256.17, 362.88, 64.5644, 0.339", "255.129, 362.697, 65.1465, 0.3096", "254.309, 361.923, 65.6356, 0.292", "253.459, 361.164, 66.0332, 0.308", "252.516, 360.516, 66.3449, 0.3314", "251.561, 359.888, 66.5958, 0.4052", "250.67, 359.201, 66.848, 0.3948", "249.883, 358.415, 67.1706, 0.4036", "249.097, 357.628, 67.564, 0.5124", "248.31, 356.842, 68.0086, 0.4932", "247.338, 356.246, 68.4006, 0.3868", "246.353, 355.665, 68.7439, 0.304", "245.367, 355.085, 69.053, 0.282", "244.426, 354.479, 69.3949, 0.288", "243.549, 353.832, 69.8477, 0.3008", "242.673, 353.187, 70.3889, 0.3178", "241.797, 352.542, 70.9968, 0.3802", "240.92, 351.896, 71.6369, 0.3464", "240.061, 351.145, 72.1854, 0.3242", "239.202, 350.393, 72.6466, 0.3142", "238.344, 349.642, 73.0352, 0.3736", "237.517, 348.867, 73.3877, 0.334", "236.822, 347.999, 73.7722, 0.3002", "236.127, 347.13, 74.1846, 0.2752", "235.432, 346.261, 74.6222, 0.2756", "234.601, 345.497, 75.0053, 0.2766", "233.708, 344.782, 75.3119, 0.2782", "232.814, 344.068, 75.56, 0.2814", "231.921, 343.354, 75.7674, 0.287", "231.044, 342.653, 76.0208, 0.2988", "230.175, 341.958, 76.3473, 0.3142", "229.307, 341.262, 76.734, 0.3734", "228.445, 340.549, 77.1445, 0.334", "227.624, 339.753, 77.4858, 0.3", "226.802, 338.958, 77.7708, 0.2746", "225.981, 338.162, 78.0119, 0.2748", "225.179, 337.356, 78.2508, 0.2748", "224.452, 336.513, 78.5775, 0.2752", "223.725, 335.671, 78.9824, 0.2756", "222.999, 334.828, 79.4539, 0.2766", "222.116, 334.133, 79.9252, 0.2782", "221.166, 333.5, 80.3743, 0.2814", "220.216, 332.866, 80.806, 0.2874", "219.267, 332.234, 81.2258, 0.298", "218.295, 331.77, 81.746, 0.319", "217.316, 331.339, 82.3656, 0.3526", "216.339, 330.908, 83.0592, 0.4394", "215.433, 330.347, 83.767, 0.4826", "214.699, 329.477, 84.3973, 0.4476", "213.965, 328.607, 84.9607, 0.4848", "213.231, 327.737, 85.4658, 0.5146", "212.425, 326.985, 85.9855, 0.531", "211.561, 326.328, 86.5665, 0.5218", "210.697, 325.673, 87.1998, 0.467", "209.825, 325.016, 87.8632, 0.5502", "208.91, 324.352, 88.475, 0.4936", "207.996, 323.686, 89.0355, 0.4964", "207.081, 323.02, 89.5482, 0.6642", "206.199, 322.313, 90.0259, 0.6448", "205.358, 321.557, 90.4873, 0.6116", "204.517, 320.801, 90.9496, 0.536", "203.677, 320.043, 91.4256, 0.6936", "202.956, 319.194, 91.9436, 0.6846", "202.26, 318.325, 92.5005, 0.528", "201.566, 317.457, 93.0846, 0.4594", "200.91, 316.56, 93.6832, 0.4", "200.345, 315.599, 94.2861, 0.4178", "199.78, 314.639, 94.8889, 0.5164", "199.215, 313.678, 95.4876, 0.6098", "198.781, 312.634, 96.0229, 0.7586", "198.404, 311.553, 96.4956, 0.6964", "198.133, 310.498, 97.0486, 0.6194", "197.841, 309.453, 97.692, 0.7482", "197.336, 308.445, 98.3637, 0.8124", "196.643, 307.642, 99.1197, 0.6352", "195.774, 307.045, 99.9863, 0.6016", "194.748, 306.744, 100.918, 0.481", "194.136, 305.917, 101.922, 0.539", "193.522, 305.09, 102.974, 0.4238", "192.91, 304.262, 104.053, 0.3768", "192.13, 303.571, 105.11, 0.3956", "191.282, 302.935, 106.122, 0.3748", "190.46, 302.269, 107.078, 0.3762", "189.693, 301.531, 107.967, 0.4134", "188.927, 300.793, 108.791, 0.544", "188.285, 299.868, 109.458, 0.7164", "187.699, 298.895, 109.961, 0.6882", "187.119, 297.922, 110.32, 0.4928", "186.263, 297.217, 110.669, 0.368", "185.186, 297.091, 111.104, 0.3566", "184.759, 296.084, 111.56, 0.411", "184.296, 295.089, 112.11, 0.6042", "183.4, 294.529, 112.766, 0.5136", "182.32, 294.278, 113.465, 0.4656", "181.42, 293.795, 114.248, 0.4798", "180.589, 293.24, 115.115, 0.692", "179.802, 292.592, 116.012, 0.8696", "178.965, 291.924, 116.829, 0.873", "177.887, 291.668, 117.476, 0.8608", "176.811, 291.387, 117.988, 0.699", "175.809, 290.836, 118.406, 0.6166", "174.956, 290.118, 118.805, 0.5512", "174.027, 289.751, 119.389, 0.693", "173.048, 289.326, 120.055, 0.8234", "172.046, 289.048, 120.838, 0.7918", "171.034, 288.717, 121.652, 0.6886", "169.993, 288.247, 122.354, 0.4836", "168.958, 288.011, 123.048, 0.4006", "167.927, 287.848, 123.736, 0.4044", "167.123, 287.265, 124.42, 0.5616", "166.334, 287.22, 125.02, 0.5814", "165.388, 286.722, 125.297, 0.5652", "164.769, 286.533, 125.392, 0.5618" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "164.769, 286.533, 125.392, 0.5618", "163.819, 286.805, 125.425, 0.4274", "163.265, 287.677, 125.489, 0.3416", "162.264, 287.753, 125.731, 0.3056", "161.547, 288.363, 126.159, 0.3268", "161.014, 288.508, 126.888, 0.3966", "159.959, 288.517, 127.568, 0.3788", "158.944, 288.163, 128.072, 0.3728", "158.104, 288.174, 128.281, 0.4604", "157.416, 288.059, 128.278, 0.3728", "156.428, 288.079, 128.376, 0.2796", "155.356, 288.174, 128.24, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "164.769, 286.533, 125.392, 0.5618", "164.341, 286.424, 125.231, 0.4576", "163.904, 286.05, 126.834, 0.409" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "163.904, 286.05, 126.834, 0.409", "162.73, 286.289, 127.487, 0.3814", "161.628, 286.304, 128.068, 0.4774", "160.571, 286.462, 128.424, 0.3982", "160.195, 286.604, 129.056, 0.356", "159.53, 287.448, 130.186, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "163.904, 286.05, 126.834, 0.409", "163.731, 285.656, 127.622, 0.4576", "163.565, 285.118, 128.554, 0.4322", "163.65, 284.061, 128.932, 0.4322", "163.699, 283.078, 129.053, 0.5338", "163.879, 281.956, 129.064, 0.6864" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_752",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_753",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_21", "dend_14", "dend_5", "dend_0", "apic_0", "dend_27", "dend_23", "dend_22", "dend_20", "dend_15", "dend_13", "dend_6", "dend_4", "dend_1", "apic_18", "apic_1", "dend_31", "dend_28", "dend_25", "dend_24", "dend_19", "dend_16", "dend_8", "dend_7", "dend_3", "dend_2", "apic_22", "apic_19", "apic_13", "apic_2", "dend_33", "dend_32", "dend_30", "dend_29", "dend_18", "dend_17", "dend_10", "dend_9", "apic_21", "apic_20", "apic_17", "apic_14", "apic_10", "apic_3", "dend_12", "dend_11", "apic_16", "apic_15", "apic_12", "apic_11", "apic_9", "apic_4", "apic_8", "apic_5", "apic_7", "apic_6" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_18", "apic_1", "apic_22", "apic_19", "apic_13", "apic_2", "apic_21", "apic_20", "apic_17", "apic_14", "apic_10", "apic_3", "apic_16", "apic_15", "apic_12", "apic_11", "apic_9", "apic_4", "apic_8", "apic_5", "apic_7", "apic_6" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_21", "dend_14", "dend_5", "dend_0", "dend_27", "dend_23", "dend_22", "dend_20", "dend_15", "dend_13", "dend_6", "dend_4", "dend_1", "dend_31", "dend_28", "dend_25", "dend_24", "dend_19", "dend_16", "dend_8", "dend_7", "dend_3", "dend_2", "dend_33", "dend_32", "dend_30", "dend_29", "dend_18", "dend_17", "dend_10", "dend_9", "dend_12", "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30953",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.0"
  }, {
    "group" : "apic",
    "value" : "2.0"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.336713E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.1278573E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.7717072",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "4.963047E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0377367",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.7470737E-5",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.014711507",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.2955911",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "3.7053044E-4",
    "erev" : "-89.439766"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "5.72437E-6",
    "erev" : "-89.439766"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "4.5418765E-5",
    "erev" : "-89.439766"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.618771E-5",
    "erev" : "-89.439766"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.723923E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.009742594",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478047816",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478047816

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_18, id: apic_18, parent: apic_0
create apic_18
public apic_18
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_22, id: apic_22, parent: apic_18
create apic_22
public apic_22
// Section: apic_19, id: apic_19, parent: apic_18
create apic_19
public apic_19
// Section: apic_13, id: apic_13, parent: apic_1
create apic_13
public apic_13
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_17, id: apic_17, parent: apic_13
create apic_17
public apic_17
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_10, id: apic_10, parent: apic_2
create apic_10
public apic_10
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_9, id: apic_9, parent: apic_3
create apic_9
public apic_9
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_752, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_752
// Group: {name=ModelViewParmSubset_753, groups=[], sections=[dend_26, dend_21, dend_14, dend_5, dend_0, apic_0, dend_27, dend_23, dend_22, dend_20, dend_15, dend_13, dend_6, dend_4, dend_1, apic_18, apic_1, dend_31, dend_28, dend_25, dend_24, dend_19, dend_16, dend_8, dend_7, dend_3, dend_2, apic_22, apic_19, apic_13, apic_2, dend_33, dend_32, dend_30, dend_29, dend_18, dend_17, dend_10, dend_9, apic_21, apic_20, apic_17, apic_14, apic_10, apic_3, dend_12, dend_11, apic_16, apic_15, apic_12, apic_11, apic_9, apic_4, apic_8, apic_5, apic_7, apic_6]}
objref ModelViewParmSubset_753
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_22, apic_19, apic_13, apic_2, apic_21, apic_20, apic_17, apic_14, apic_10, apic_3, apic_16, apic_15, apic_12, apic_11, apic_9, apic_4, apic_8, apic_5, apic_7, apic_6]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_26, dend_21, dend_14, dend_5, dend_0, dend_27, dend_23, dend_22, dend_20, dend_15, dend_13, dend_6, dend_4, dend_1, dend_31, dend_28, dend_25, dend_24, dend_19, dend_16, dend_8, dend_7, dend_3, dend_2, dend_33, dend_32, dend_30, dend_29, dend_18, dend_17, dend_10, dend_9, dend_12, dend_11]}
objref dend
// Group: {name=OneSecGrp_SectionRef_30953, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_30953
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478047816
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49995540094549845)
    connect dend_26(0), soma_0(0.49995540094549845)
    connect dend_21(0), soma_0(0.49995540094549845)
    connect dend_14(0), soma_0(0.49995540094549845)
    connect dend_5(0), soma_0(0.49995540094549845)
    connect dend_0(0), soma_0(0.49995540094549845)
    connect apic_0(0), soma_0(0.49995540094549845)
    connect axon_1(0), axon_0(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_18(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_22(0), apic_18(1.0)
    connect apic_19(0), apic_18(1.0)
    connect apic_13(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_17(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_10(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_9(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 364.79, 442.177, 36.6556, 11.211 ) }
    soma_0 { pt3dadd( 370.395, 442.177, 36.6556, 11.211 ) }
    soma_0 { pt3dadd( 376.001, 442.177, 36.6556, 11.211 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 370.396, 442.177, 36.6556, 1.0 ) }
    axon_0 { pt3dadd( 376.237, 455.993, 36.6556, 1.0 ) }
    axon_0 { pt3dadd( 382.078, 469.809, 36.6556, 1.0 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 370.881, 446.497, 37.0558, 0.2288 ) }
    dend_26 { pt3dadd( 371.009, 447.634, 37.1848, 0.4172 ) }
    dend_26 { pt3dadd( 371.281, 448.74, 37.242, 0.5808 ) }
    dend_26 { pt3dadd( 371.62, 449.831, 37.3052, 0.6402 ) }
    dend_26 { pt3dadd( 371.96, 450.922, 37.3663, 0.5608 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 11/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 374.703, 441.678, 39.1448, 0.2288 ) }
    dend_21 { pt3dadd( 375.81, 441.55, 39.7608, 0.468 ) }
    dend_21 { pt3dadd( 376.916, 441.422, 40.0439, 0.5068 ) }
    dend_21 { pt3dadd( 378.035, 441.269, 40.3304, 0.6328 ) }
    dend_21 { pt3dadd( 379.165, 441.095, 40.5731, 0.8316 ) }
    dend_21 { pt3dadd( 380.173, 440.616, 40.7319, 0.9118 ) }
    dend_21 { pt3dadd( 381.181, 440.219, 40.7868, 0.86 ) }
    dend_21 { pt3dadd( 382.261, 440.004, 40.9531, 0.5926 ) }
    dend_21 { pt3dadd( 383.097, 440.387, 41.2919, 0.4708 ) }
    dend_21 { pt3dadd( 383.626, 441.232, 41.7934, 0.489 ) }
    dend_21 { pt3dadd( 384.517, 441.881, 42.2674, 0.7104 ) }
    dend_21 { pt3dadd( 385.585, 442.274, 42.6502, 0.8974 ) }
    dend_21 { pt3dadd( 386.689, 442.538, 42.9464, 0.955 ) }
    dend_21 { pt3dadd( 387.823, 442.632, 43.1522, 0.864 ) }
    dend_21 { pt3dadd( 388.966, 442.689, 43.2942, 0.7412 ) }
    dend_21 { pt3dadd( 390.107, 442.743, 43.407, 0.7476 ) }
    dend_21 { pt3dadd( 391.219, 442.829, 43.5506, 0.7674 ) }
    dend_21 { pt3dadd( 392.027, 442.995, 43.9368, 0.7646 ) }
    dend_21 { pt3dadd( 393.028, 442.759, 44.2344, 0.7238 ) }
    dend_21 { pt3dadd( 394.156, 442.807, 44.4335, 0.5926 ) }
    dend_21 { pt3dadd( 395.274, 442.936, 44.5914, 0.6176 ) }
    dend_21 { pt3dadd( 396.233, 443.415, 44.8636, 0.7344 ) }
    dend_21 { pt3dadd( 397.179, 443.877, 44.9526, 0.8378 ) }
    dend_21 { pt3dadd( 398.223, 444.105, 45.1436, 0.8924 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 35/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 374.437, 440.129, 38.9351, 0.2288 ) }
    dend_14 { pt3dadd( 375.437, 439.622, 38.9623, 0.5098 ) }
    dend_14 { pt3dadd( 376.173, 438.78, 38.9836, 0.7722 ) }
    dend_14 { pt3dadd( 377.052, 438.261, 38.8405, 0.8982 ) }
    dend_14 { pt3dadd( 378.121, 438.297, 38.6436, 0.8242 ) }
    dend_14 { pt3dadd( 379.199, 438.438, 38.4796, 0.8058 ) }
    dend_14 { pt3dadd( 380.283, 438.078, 38.4518, 0.8826 ) }
    dend_14 { pt3dadd( 381.366, 437.716, 38.5493, 0.7148 ) }
    dend_14 { pt3dadd( 382.288, 437.7, 38.9693, 0.536 ) }
    dend_14 { pt3dadd( 383.413, 437.779, 39.4612, 0.4774 ) }
    dend_14 { pt3dadd( 384.329, 438.409, 39.9879, 0.6458 ) }
    dend_14 { pt3dadd( 385.07, 439.198, 40.5672, 0.758 ) }
    dend_14 { pt3dadd( 385.821, 440.044, 41.0645, 0.7936 ) }
    dend_14 { pt3dadd( 386.83, 440.41, 41.5915, 0.7796 ) }
    dend_14 { pt3dadd( 387.879, 440.443, 42.1775, 0.6854 ) }
    dend_14 { pt3dadd( 388.988, 440.336, 42.7305, 0.8428 ) }
    dend_14 { pt3dadd( 390.032, 439.882, 43.2004, 0.894 ) }
    dend_14 { pt3dadd( 391.112, 439.539, 43.6136, 1.0134 ) }
    dend_14 { pt3dadd( 392.065, 439.579, 44.1647, 0.8872 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 54/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 374.114, 442.966, 29.2538, 0.2288 ) }
    dend_5 { pt3dadd( 374.989, 443.152, 28.3578, 0.4614 ) }
    dend_5 { pt3dadd( 375.879, 442.619, 28.0174, 0.5232 ) }
    dend_5 { pt3dadd( 376.967, 442.284, 27.7771, 0.5244 ) }
    dend_5 { pt3dadd( 378.068, 442.579, 27.6258, 0.619 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 59/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 370.465, 437.944, 30.5438, 0.2288 ) }
    dend_0 { pt3dadd( 369.936, 437.026, 30.1624, 0.6086 ) }
    dend_0 { pt3dadd( 369.172, 436.302, 30.0171, 0.6938 ) }
    dend_0 { pt3dadd( 368.537, 435.432, 29.8248, 0.65 ) }
    dend_0 { pt3dadd( 368.652, 434.388, 29.6752, 0.6342 ) }
    dend_0 { pt3dadd( 369.289, 433.447, 29.566, 0.515 ) }
    dend_0 { pt3dadd( 370.015, 432.597, 29.5476, 0.5016 ) }
    dend_0 { pt3dadd( 370.777, 431.774, 29.5686, 0.6126 ) }
    dend_0 { pt3dadd( 371.576, 430.965, 29.507, 0.8468 ) }
    dend_0 { pt3dadd( 372.285, 430.097, 29.3513, 0.9146 ) }
    dend_0 { pt3dadd( 371.875, 429.189, 28.9621, 0.9878 ) }
    dend_0 { pt3dadd( 371.553, 428.308, 28.32, 0.9214 ) }
    dend_0 { pt3dadd( 372.088, 427.568, 27.5278, 1.092 ) }
    dend_0 { pt3dadd( 372.974, 426.985, 26.676, 1.1266 ) }
    dend_0 { pt3dadd( 373.874, 426.445, 25.8157, 1.1852 ) }
    dend_0 { pt3dadd( 374.989, 426.267, 25.1233, 1.0926 ) }
    dend_0 { pt3dadd( 376.051, 426.25, 24.4816, 0.9832 ) }
    dend_0 { pt3dadd( 377.09, 426.151, 23.8949, 0.9358 ) }
    dend_0 { pt3dadd( 377.897, 425.449, 23.5584, 1.007 ) }
    dend_0 { pt3dadd( 378.307, 424.405, 23.4222, 1.0536 ) }
    dend_0 { pt3dadd( 378.365, 423.265, 23.3357, 1.0984 ) }
    dend_0 { pt3dadd( 378.684, 422.195, 23.2475, 0.924 ) }
    dend_0 { pt3dadd( 379.264, 421.209, 23.1358, 0.9368 ) }
    dend_0 { pt3dadd( 379.635, 420.137, 22.9627, 0.929 ) }
    dend_0 { pt3dadd( 379.245, 419.125, 22.6984, 0.8384 ) }
    dend_0 { pt3dadd( 378.493, 418.486, 22.2247, 0.8132 ) }
    dend_0 { pt3dadd( 379.175, 418.098, 21.5248, 0.9874 ) }
    dend_0 { pt3dadd( 380.208, 418.045, 20.7157, 1.1526 ) }
    dend_0 { pt3dadd( 381.176, 418.415, 19.848, 1.3108 ) }
    dend_0 { pt3dadd( 382.266, 418.098, 19.0709, 1.408 ) }
    dend_0 { pt3dadd( 383.192, 417.544, 18.3147, 1.3952 ) }
    dend_0 { pt3dadd( 383.967, 416.741, 17.6283, 1.1652 ) }
    dend_0 { pt3dadd( 384.757, 415.963, 16.995, 1.0534 ) }
    dend_0 { pt3dadd( 385.738, 415.392, 16.4726, 1.1494 ) }
    dend_0 { pt3dadd( 386.481, 414.633, 15.9353, 1.2272 ) }
    dend_0 { pt3dadd( 387.006, 414.013, 15.19, 1.1714 ) }
    dend_0 { pt3dadd( 386.595, 413.114, 14.4198, 1.1242 ) }
    dend_0 { pt3dadd( 385.565, 412.973, 13.8405, 0.9914 ) }
    dend_0 { pt3dadd( 384.534, 412.634, 13.4046, 0.7382 ) }
    dend_0 { pt3dadd( 383.537, 412.121, 13.0217, 0.758 ) }
    dend_0 { pt3dadd( 383.219, 411.375, 12.7922, 0.7098 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 384.078, 410.648, 12.7271, 0.5742 ) }
    dend_0 { pt3dadd( 384.939, 409.92, 12.7309, 0.5476 ) }
    dend_0 { pt3dadd( 385.683, 409.224, 12.6494, 0.5502 ) }
    dend_0 { pt3dadd( 386.516, 408.445, 12.4965, 0.7616 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 4/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 366.584, 439.652, 36.3401, 4.4912 ) }
    apic_0 { pt3dadd( 365.631, 439.02, 36.2222, 1.7644 ) }
    apic_0 { pt3dadd( 364.678, 438.39, 36.1144, 0.8082 ) }
    apic_0 { pt3dadd( 363.707, 437.805, 35.9948, 1.1002 ) }
    apic_0 { pt3dadd( 362.76, 437.191, 35.8812, 1.228 ) }
    apic_0 { pt3dadd( 361.762, 436.703, 35.8728, 1.1836 ) }
    apic_0 { pt3dadd( 360.732, 436.252, 35.957, 1.0954 ) }
    apic_0 { pt3dadd( 359.715, 435.757, 36.034, 1.1896 ) }
    apic_0 { pt3dadd( 358.687, 435.276, 36.1192, 1.2552 ) }
    apic_0 { pt3dadd( 357.663, 434.802, 36.2998, 1.2214 ) }
    apic_0 { pt3dadd( 356.741, 434.453, 36.6876, 1.2266 ) }
    apic_0 { pt3dadd( 355.744, 434.138, 37.1734, 1.1352 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 16/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 382.078, 469.809, 36.6556, 1.0 ) }
    axon_1 { pt3dadd( 387.919, 483.625, 36.6556, 1.0 ) }
    axon_1 { pt3dadd( 393.761, 497.441, 36.6556, 1.0 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 19/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 371.96, 450.922, 37.3663, 0.5608 ) }
    dend_27 { pt3dadd( 372.011, 451.166, 37.4167, 0.418 ) }
    dend_27 { pt3dadd( 372.245, 452.278, 37.4931, 0.3614 ) }
    dend_27 { pt3dadd( 372.527, 453.357, 37.5407, 0.3898 ) }
    dend_27 { pt3dadd( 372.959, 454.335, 37.4326, 0.481 ) }
    dend_27 { pt3dadd( 373.435, 455.331, 37.3061, 0.693 ) }
    dend_27 { pt3dadd( 373.956, 456.349, 37.2705, 0.8764 ) }
    dend_27 { pt3dadd( 374.338, 457.393, 37.3691, 0.8618 ) }
    dend_27 { pt3dadd( 374.599, 458.461, 37.6208, 0.9552 ) }
    dend_27 { pt3dadd( 374.752, 459.57, 37.9484, 1.0012 ) }
    dend_27 { pt3dadd( 374.829, 460.709, 38.2976, 1.017 ) }
    dend_27 { pt3dadd( 374.939, 461.846, 38.628, 0.9264 ) }
    dend_27 { pt3dadd( 375.075, 462.981, 38.9206, 0.8832 ) }
    dend_27 { pt3dadd( 375.167, 464.1, 39.223, 0.8828 ) }
    dend_27 { pt3dadd( 375.167, 465.181, 39.6178, 0.9524 ) }
    dend_27 { pt3dadd( 375.124, 466.265, 40.0708, 0.9702 ) }
    dend_27 { pt3dadd( 374.777, 467.354, 40.4583, 0.856 ) }
    dend_27 { pt3dadd( 374.429, 468.444, 40.798, 0.9014 ) }
    dend_27 { pt3dadd( 374.572, 469.57, 41.095, 0.882 ) }
    dend_27 { pt3dadd( 374.703, 470.704, 41.3591, 0.8908 ) }
    dend_27 { pt3dadd( 374.552, 471.837, 41.6209, 0.919 ) }
    dend_27 { pt3dadd( 374.25, 472.713, 42.0983, 0.9124 ) }
    dend_27 { pt3dadd( 374.25, 473.672, 42.7227, 0.7284 ) }
    dend_27 { pt3dadd( 374.25, 474.792, 43.248, 0.7646 ) }
    dend_27 { pt3dadd( 374.165, 475.931, 43.6369, 0.8306 ) }
    dend_27 { pt3dadd( 373.682, 476.907, 43.899, 0.957 ) }
    dend_27 { pt3dadd( 372.9, 477.741, 44.0457, 0.9428 ) }
    dend_27 { pt3dadd( 372.243, 478.676, 44.0894, 0.98 ) }
    dend_27 { pt3dadd( 371.627, 479.631, 44.0815, 0.9684 ) }
    dend_27 { pt3dadd( 371.364, 480.744, 44.0661, 0.8822 ) }
    dend_27 { pt3dadd( 371.102, 481.858, 44.0518, 0.8066 ) }
    dend_27 { pt3dadd( 371.044, 482.989, 44.0009, 0.7146 ) }
    dend_27 { pt3dadd( 370.744, 484.027, 43.8631, 0.769 ) }
    dend_27 { pt3dadd( 369.906, 484.667, 43.9057, 0.6914 ) }
    dend_27 { pt3dadd( 369.26, 485.585, 43.9617, 0.4998 ) }
    dend_27 { pt3dadd( 368.805, 486.635, 44.0143, 0.3764 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 55/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 398.223, 444.105, 45.1436, 0.8924 ) }
    dend_23 { pt3dadd( 398.85, 444.714, 45.0184, 0.4576 ) }
    dend_23 { pt3dadd( 399.669, 445.51, 45.1872, 0.6106 ) }
    dend_23 { pt3dadd( 400.474, 446.32, 45.2572, 0.6884 ) }
    dend_23 { pt3dadd( 401.272, 447.142, 45.327, 0.684 ) }
    dend_23 { pt3dadd( 401.948, 448.057, 45.3981, 0.7114 ) }
    dend_23 { pt3dadd( 402.547, 449.03, 45.4717, 0.8196 ) }
    dend_23 { pt3dadd( 403.327, 449.828, 45.5809, 0.9688 ) }
    dend_23 { pt3dadd( 404.243, 450.493, 45.7377, 1.0384 ) }
    dend_23 { pt3dadd( 404.837, 451.432, 45.9026, 1.0274 ) }
    dend_23 { pt3dadd( 405.318, 452.467, 46.0564, 1.0004 ) }
    dend_23 { pt3dadd( 405.863, 453.47, 46.1712, 0.7546 ) }
    dend_23 { pt3dadd( 406.433, 454.462, 46.2392, 0.5624 ) }
    dend_23 { pt3dadd( 406.85, 455.521, 46.2613, 0.5286 ) }
    dend_23 { pt3dadd( 407.192, 456.613, 46.2442, 0.7302 ) }
    dend_23 { pt3dadd( 407.438, 457.725, 46.195, 0.965 ) }
    dend_23 { pt3dadd( 407.56, 458.862, 46.1177, 0.9318 ) }
    dend_23 { pt3dadd( 407.683, 459.999, 46.0191, 0.8554 ) }
    dend_23 { pt3dadd( 407.691, 461.132, 45.855, 0.7856 ) }
    dend_23 { pt3dadd( 407.691, 462.263, 45.6386, 0.7654 ) }
    dend_23 { pt3dadd( 407.846, 463.377, 45.4157, 0.6568 ) }
    dend_23 { pt3dadd( 408.188, 464.469, 45.229, 0.8 ) }
    dend_23 { pt3dadd( 408.6, 465.517, 45.0568, 0.7652 ) }
    dend_23 { pt3dadd( 409.264, 466.411, 44.8294, 1.0144 ) }
    dend_23 { pt3dadd( 409.798, 467.39, 44.6132, 1.0974 ) }
    dend_23 { pt3dadd( 410.192, 468.455, 44.49, 1.033 ) }
    dend_23 { pt3dadd( 410.604, 469.507, 44.4609, 0.8278 ) }
    dend_23 { pt3dadd( 410.986, 470.567, 44.4545, 0.6364 ) }
    dend_23 { pt3dadd( 411.297, 471.654, 44.3652, 0.5074 ) }
    dend_23 { pt3dadd( 411.61, 472.743, 44.2243, 0.5446 ) }
    dend_23 { pt3dadd( 411.93, 473.841, 44.065, 0.6448 ) }
    dend_23 { pt3dadd( 412.242, 474.941, 43.8763, 0.6802 ) }
    dend_23 { pt3dadd( 412.479, 476.05, 43.6327, 0.559 ) }
    dend_23 { pt3dadd( 412.715, 477.16, 43.3661, 0.5546 ) }
    dend_23 { pt3dadd( 412.511, 478.239, 43.0447, 0.6212 ) }
    dend_23 { pt3dadd( 412.28, 479.315, 42.6902, 0.6108 ) }
    dend_23 { pt3dadd( 412.523, 480.427, 42.4365, 0.5552 ) }
    dend_23 { pt3dadd( 412.785, 481.542, 42.2856, 0.629 ) }
    dend_23 { pt3dadd( 412.852, 482.673, 42.2335, 0.8218 ) }
    dend_23 { pt3dadd( 412.804, 483.816, 42.2626, 0.9072 ) }
    dend_23 { pt3dadd( 412.769, 484.936, 42.3987, 0.7856 ) }
    dend_23 { pt3dadd( 412.746, 486.034, 42.6471, 0.774 ) }
    dend_23 { pt3dadd( 412.729, 487.143, 42.9131, 0.6302 ) }
    dend_23 { pt3dadd( 412.729, 488.283, 43.0727, 0.4988 ) }
    dend_23 { pt3dadd( 412.729, 489.424, 43.1432, 0.5154 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( 412.924, 490.381, 42.9867, 0.427 ) }
    dend_23 { pt3dadd( 413.173, 491.443, 42.9002, 0.3824 ) }
    dend_23 { pt3dadd( 412.943, 492.386, 43.0189, 0.407 ) }
    dend_23 { pt3dadd( 412.818, 493.451, 43.1407, 0.3908 ) }
    dend_23 { pt3dadd( 412.875, 494.592, 43.195, 0.432 ) }
    dend_23 { pt3dadd( 413.445, 495.457, 43.0534, 0.3904 ) }
    dend_23 { pt3dadd( 413.408, 496.582, 42.8879, 0.4298 ) }
    dend_23 { pt3dadd( 413.233, 497.702, 42.6801, 0.3934 ) }
    dend_23 { pt3dadd( 413.187, 498.736, 42.2934, 0.3998 ) }
    dend_23 { pt3dadd( 413.33, 499.784, 41.8477, 0.5102 ) }
    dend_23 { pt3dadd( 414.028, 500.447, 41.6592, 0.4666 ) }
    dend_23 { pt3dadd( 414.557, 501.144, 41.6374, 0.4458 ) }
    dend_23 { pt3dadd( 415.376, 501.896, 41.5276, 0.5744 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 13/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 398.223, 444.105, 45.1436, 0.8924 ) }
    dend_22 { pt3dadd( 398.874, 443.921, 45.3902, 0.974 ) }
    dend_22 { pt3dadd( 399.442, 443.095, 45.7285, 0.9918 ) }
    dend_22 { pt3dadd( 400.019, 442.421, 46.1986, 0.9858 ) }
    dend_22 { pt3dadd( 401.065, 442.226, 46.5931, 0.7052 ) }
    dend_22 { pt3dadd( 401.304, 441.248, 46.681, 0.5798 ) }
    dend_22 { pt3dadd( 401.95, 440.628, 46.468, 0.7184 ) }
    dend_22 { pt3dadd( 402.801, 439.881, 46.1731, 0.7744 ) }
    dend_22 { pt3dadd( 403.553, 439.021, 45.8553, 0.7096 ) }
    dend_22 { pt3dadd( 404.327, 438.188, 45.5543, 0.723 ) }
    dend_22 { pt3dadd( 405.221, 437.473, 45.341, 0.5572 ) }
    dend_22 { pt3dadd( 406.209, 436.942, 45.2245, 0.488 ) }
    dend_22 { pt3dadd( 407.308, 436.78, 45.1172, 0.577 ) }
    dend_22 { pt3dadd( 408.412, 436.633, 45.0013, 0.602 ) }
    dend_22 { pt3dadd( 409.513, 436.345, 44.9487, 0.642 ) }
    dend_22 { pt3dadd( 410.402, 435.823, 45.0285, 0.5184 ) }
    dend_22 { pt3dadd( 410.959, 434.824, 45.1049, 0.5614 ) }
    dend_22 { pt3dadd( 411.387, 433.776, 45.1772, 0.4652 ) }
    dend_22 { pt3dadd( 412.108, 432.924, 45.2533, 0.4544 ) }
    dend_22 { pt3dadd( 412.918, 432.116, 45.3225, 0.5358 ) }
    dend_22 { pt3dadd( 413.973, 431.7, 45.3566, 0.6516 ) }
    dend_22 { pt3dadd( 415.043, 431.297, 45.369, 0.8078 ) }
    dend_22 { pt3dadd( 416.093, 430.843, 45.3911, 0.9234 ) }
    dend_22 { pt3dadd( 417.102, 430.328, 45.425, 1.0678 ) }
    dend_22 { pt3dadd( 417.924, 429.532, 45.472, 1.2178 ) }
    dend_22 { pt3dadd( 418.755, 428.751, 45.5442, 1.153 ) }
    dend_22 { pt3dadd( 419.622, 428.023, 45.6842, 0.8654 ) }
    dend_22 { pt3dadd( 420.435, 427.237, 45.8556, 0.6878 ) }
    dend_22 { pt3dadd( 421.158, 426.354, 46.0244, 0.691 ) }
    dend_22 { pt3dadd( 421.849, 425.447, 46.1686, 0.6852 ) }
    dend_22 { pt3dadd( 422.505, 424.511, 46.2722, 0.7312 ) }
    dend_22 { pt3dadd( 423.033, 423.517, 46.2896, 0.7702 ) }
    dend_22 { pt3dadd( 423.55, 422.518, 46.2944, 0.6088 ) }
    dend_22 { pt3dadd( 424.041, 421.509, 46.4209, 0.5302 ) }
    dend_22 { pt3dadd( 424.532, 420.5, 46.6502, 0.6854 ) }
    dend_22 { pt3dadd( 425.024, 419.49, 46.9588, 0.6566 ) }
    dend_22 { pt3dadd( 425.572, 418.503, 47.2987, 0.7674 ) }
    dend_22 { pt3dadd( 426.178, 417.542, 47.6356, 0.861 ) }
    dend_22 { pt3dadd( 426.822, 416.617, 47.9676, 0.8916 ) }
    dend_22 { pt3dadd( 427.439, 415.668, 48.2457, 0.7276 ) }
    dend_22 { pt3dadd( 428.01, 414.676, 48.4322, 0.5794 ) }
    dend_22 { pt3dadd( 428.693, 413.787, 48.5486, 0.692 ) }
    dend_22 { pt3dadd( 429.629, 413.13, 48.6147, 0.6212 ) }
    dend_22 { pt3dadd( 430.552, 412.456, 48.6458, 0.7046 ) }
    dend_22 { pt3dadd( 431.446, 411.742, 48.6531, 0.7312 ) }
    dend_22 { pt3dadd( 432.375, 411.079, 48.6514, 0.7158 ) }
    dend_22 { pt3dadd( 433.383, 410.539, 48.6489, 0.7716 ) }
    dend_22 { pt3dadd( 434.341, 409.933, 48.6455, 0.6962 ) }
    dend_22 { pt3dadd( 435.137, 409.112, 48.6408, 0.5078 ) }
    dend_22 { pt3dadd( 435.983, 408.353, 48.6338, 0.3956 ) }
    dend_22 { pt3dadd( 436.975, 407.783, 48.6242, 0.4092 ) }
    dend_22 { pt3dadd( 437.933, 407.169, 48.6111, 0.5034 ) }
    dend_22 { pt3dadd( 438.755, 406.373, 48.5932, 0.799 ) }
    dend_22 { pt3dadd( 439.614, 405.626, 48.5671, 0.7604 ) }
    dend_22 { pt3dadd( 440.606, 405.056, 48.5299, 0.792 ) }
    dend_22 { pt3dadd( 441.588, 404.471, 48.4784, 0.578 ) }
    dend_22 { pt3dadd( 442.524, 403.814, 48.4134, 0.5886 ) }
    dend_22 { pt3dadd( 443.477, 403.196, 48.3258, 0.4622 ) }
    dend_22 { pt3dadd( 444.521, 402.794, 48.153, 0.4786 ) }
    dend_22 { pt3dadd( 445.587, 402.481, 47.9363, 0.4362 ) }
    dend_22 { pt3dadd( 446.691, 402.349, 47.7128, 0.4826 ) }
    dend_22 { pt3dadd( 447.655, 401.922, 47.6003, 0.648 ) }
    dend_22 { pt3dadd( 448.527, 401.332, 47.6176, 0.7974 ) }
    dend_22 { pt3dadd( 449.6, 400.936, 47.6907, 0.6938 ) }
    dend_22 { pt3dadd( 450.665, 400.519, 47.8198, 0.7472 ) }
    dend_22 { pt3dadd( 451.712, 400.057, 47.9948, 0.7996 ) }
    dend_22 { pt3dadd( 452.746, 399.591, 48.2202, 0.893 ) }
    dend_22 { pt3dadd( 453.735, 399.111, 48.5534, 0.8572 ) }
    dend_22 { pt3dadd( 454.772, 398.721, 48.9412, 0.6616 ) }
    dend_22 { pt3dadd( 455.876, 398.456, 49.338, 0.4674 ) }
    dend_22 { pt3dadd( 456.988, 398.222, 49.7216, 0.433 ) }
    dend_22 { pt3dadd( 458.119, 398.054, 50.0553, 0.3918 ) }
    dend_22 { pt3dadd( 459.251, 397.887, 50.3451, 0.4338 ) }
    dend_22 { pt3dadd( 460.327, 397.843, 50.717, 0.3934 ) }
    dend_22 { pt3dadd( 461.397, 397.82, 51.1703, 0.4366 ) }
    dend_22 { pt3dadd( 462.511, 397.694, 51.5738, 0.3998 ) }
    dend_22 { pt3dadd( 463.643, 397.53, 51.8904, 0.4424 ) }
    dend_22 { pt3dadd( 464.772, 397.353, 52.1466, 0.4402 ) }
    dend_22 { pt3dadd( 465.887, 397.145, 52.3835, 0.3732 ) }
    dend_22 { pt3dadd( 467.002, 396.931, 52.5904, 0.3254 ) }
    dend_22 { pt3dadd( 468.112, 396.653, 52.7358, 0.324 ) }
    dend_22 { pt3dadd( 469.235, 396.49, 52.8584, 0.3556 ) }
    dend_22 { pt3dadd( 470.378, 396.49, 52.978, 0.476 ) }
    dend_22 { pt3dadd( 471.52, 396.49, 53.0914, 0.4 ) }
    dend_22 { pt3dadd( 472.642, 396.297, 53.184, 0.3376 ) }
    dend_22 { pt3dadd( 473.755, 396.036, 53.2627, 0.2984 ) }
    dend_22 { pt3dadd( 474.826, 395.66, 53.3434, 0.3136 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_22 { pt3dadd( 475.834, 395.119, 53.4335, 0.3724 ) }
    dend_22 { pt3dadd( 476.88, 394.68, 53.5424, 0.332 ) }
    dend_22 { pt3dadd( 477.997, 394.439, 53.6838, 0.2966 ) }
    dend_22 { pt3dadd( 479.114, 394.197, 53.8546, 0.2684 ) }
    dend_22 { pt3dadd( 480.143, 393.954, 54.1881, 0.2626 ) }
    dend_22 { pt3dadd( 481.185, 393.721, 54.6151, 0.2542 ) }
    dend_22 { pt3dadd( 482.251, 393.338, 54.9592, 0.2288 ) }
    dend_22 { pt3dadd( 483.272, 392.828, 55.447, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 8/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 392.065, 439.579, 44.1647, 0.8872 ) }
    dend_20 { pt3dadd( 392.115, 439.926, 46.4548, 0.2288 ) }
    dend_20 { pt3dadd( 392.306, 440.09, 48.8127, 0.394 ) }
    dend_20 { pt3dadd( 393.129, 440.383, 49.812, 0.4806 ) }
    dend_20 { pt3dadd( 394.233, 440.443, 50.7903, 0.7324 ) }
    dend_20 { pt3dadd( 395.331, 440.314, 51.7163, 0.7552 ) }
    dend_20 { pt3dadd( 396.272, 439.723, 52.5596, 0.8936 ) }
    dend_20 { pt3dadd( 397.05, 438.956, 53.3859, 0.6842 ) }
    dend_20 { pt3dadd( 398.055, 438.639, 54.2175, 0.7266 ) }
    dend_20 { pt3dadd( 399.132, 438.612, 55.1009, 0.5462 ) }
    dend_20 { pt3dadd( 399.949, 438.395, 56.1445, 0.5534 ) }
    dend_20 { pt3dadd( 400.952, 437.921, 57.178, 0.5096 ) }
    dend_20 { pt3dadd( 401.965, 437.695, 58.2495, 0.7056 ) }
    dend_20 { pt3dadd( 402.985, 437.695, 59.3813, 0.6392 ) }
    dend_20 { pt3dadd( 404.021, 437.605, 60.5352, 0.7716 ) }
    dend_20 { pt3dadd( 405.072, 437.396, 61.6795, 0.6928 ) }
    dend_20 { pt3dadd( 406.001, 437.259, 62.8832, 0.7486 ) }
    dend_20 { pt3dadd( 406.698, 437.238, 64.2443, 0.557 ) }
    dend_20 { pt3dadd( 407.74, 437.238, 65.4777, 0.4892 ) }
    dend_20 { pt3dadd( 408.598, 436.787, 66.6719, 0.5716 ) }
    dend_20 { pt3dadd( 408.947, 435.758, 67.8068, 0.6296 ) }
    dend_20 { pt3dadd( 409.371, 434.718, 68.8302, 0.5102 ) }
    dend_20 { pt3dadd( 409.506, 434.039, 69.9924, 0.4746 ) }
    dend_20 { pt3dadd( 409.561, 433.213, 71.2737, 0.4228 ) }
    dend_20 { pt3dadd( 410.04, 432.337, 72.5533, 0.4858 ) }
    dend_20 { pt3dadd( 410.922, 431.7, 73.6994, 0.517 ) }
    dend_20 { pt3dadd( 411.396, 430.842, 74.828, 0.5338 ) }
    dend_20 { pt3dadd( 411.768, 429.946, 75.9018, 0.5338 ) }
    dend_20 { pt3dadd( 411.812, 428.998, 78.0783, 0.4576 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 392.065, 439.579, 44.1647, 0.8872 ) }
    dend_15 { pt3dadd( 393.218, 439.411, 44.6141, 0.7396 ) }
    dend_15 { pt3dadd( 394.172, 439.576, 45.2183, 0.7316 ) }
    dend_15 { pt3dadd( 395.125, 439.764, 45.9418, 0.5728 ) }
    dend_15 { pt3dadd( 395.74, 440.592, 46.6553, 0.5182 ) }
    dend_15 { pt3dadd( 396.351, 441.517, 47.3477, 0.6262 ) }
    dend_15 { pt3dadd( 397.058, 442.368, 47.9772, 0.7266 ) }
    dend_15 { pt3dadd( 398.035, 442.837, 48.5125, 0.711 ) }
    dend_15 { pt3dadd( 399.148, 442.817, 48.8961, 0.745 ) }
    dend_15 { pt3dadd( 400.18, 442.387, 49.3564, 0.7316 ) }
    dend_15 { pt3dadd( 401.253, 442.396, 49.943, 0.85 ) }
    dend_15 { pt3dadd( 401.88, 442.849, 50.7814, 0.8306 ) }
    dend_15 { pt3dadd( 402.152, 443.172, 51.9148, 0.8106 ) }
    dend_15 { pt3dadd( 402.867, 443.575, 53.067, 0.6968 ) }
    dend_15 { pt3dadd( 403.746, 443.356, 53.9479, 0.8578 ) }
    dend_15 { pt3dadd( 404.81, 443.036, 54.7291, 0.9526 ) }
    dend_15 { pt3dadd( 405.832, 442.918, 55.4644, 0.9728 ) }
    dend_15 { pt3dadd( 406.821, 443.073, 56.1733, 0.8504 ) }
    dend_15 { pt3dadd( 407.684, 442.569, 56.8845, 0.7138 ) }
    dend_15 { pt3dadd( 408.284, 441.83, 57.3062, 0.7072 ) }
    dend_15 { pt3dadd( 408.995, 441.459, 57.6912, 0.642 ) }
    dend_15 { pt3dadd( 409.787, 441.106, 58.2728, 0.7776 ) }
    dend_15 { pt3dadd( 410.824, 440.844, 58.9436, 0.9276 ) }
    dend_15 { pt3dadd( 411.826, 440.596, 59.7349, 1.013 ) }
    dend_15 { pt3dadd( 412.872, 440.491, 60.6082, 0.9618 ) }
    dend_15 { pt3dadd( 413.594, 440.098, 61.5966, 0.9698 ) }
    dend_15 { pt3dadd( 414.248, 439.615, 62.5422, 0.9416 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 64/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 378.068, 442.579, 27.6258, 0.619 ) }
    dend_13 { pt3dadd( 378.634, 442.674, 27.6237, 0.6864 ) }
    dend_13 { pt3dadd( 379.627, 442.32, 26.5514, 0.5032 ) }
    dend_13 { pt3dadd( 379.747, 441.316, 26.0576, 0.432 ) }
    dend_13 { pt3dadd( 379.723, 440.803, 25.1597, 0.4868 ) }
    dend_13 { pt3dadd( 378.867, 440.443, 24.2006, 0.5974 ) }
    dend_13 { pt3dadd( 377.789, 440.443, 23.405, 0.5302 ) }
    dend_13 { pt3dadd( 377.234, 440.719, 22.3254, 0.5838 ) }
    dend_13 { pt3dadd( 376.634, 440.202, 21.2351, 0.5028 ) }
    dend_13 { pt3dadd( 376.583, 439.536, 20.0245, 0.543 ) }
    dend_13 { pt3dadd( 377.372, 439.286, 18.8373, 0.6086 ) }
    dend_13 { pt3dadd( 378.221, 438.683, 17.879, 0.5454 ) }
    dend_13 { pt3dadd( 378.673, 438.612, 16.6864, 0.6372 ) }
    dend_13 { pt3dadd( 377.649, 438.612, 15.5793, 0.4804 ) }
    dend_13 { pt3dadd( 377.183, 438.612, 14.373, 0.4036 ) }
    dend_13 { pt3dadd( 377.478, 438.52, 13.0263, 0.3678 ) }
    dend_13 { pt3dadd( 377.802, 437.636, 11.8483, 0.47 ) }
    dend_13 { pt3dadd( 377.362, 436.589, 10.9941, 0.5276 ) }
    dend_13 { pt3dadd( 377.013, 435.504, 10.4332, 0.5876 ) }
    dend_13 { pt3dadd( 377.277, 434.484, 9.9547, 0.4688 ) }
    dend_13 { pt3dadd( 377.313, 433.471, 9.566, 0.4492 ) }
    dend_13 { pt3dadd( 376.418, 432.803, 9.3948, 0.356 ) }
    dend_13 { pt3dadd( 376.541, 432.66, 10.1842, 0.4576 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 87/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 378.068, 442.579, 27.6258, 0.619 ) }
    dend_6 { pt3dadd( 378.536, 442.689, 27.6061, 0.8028 ) }
    dend_6 { pt3dadd( 379.49, 443.187, 27.7309, 0.8742 ) }
    dend_6 { pt3dadd( 380.272, 443.969, 27.9175, 0.7126 ) }
    dend_6 { pt3dadd( 381.066, 444.724, 28.0938, 0.6968 ) }
    dend_6 { pt3dadd( 381.97, 445.038, 27.9733, 0.8916 ) }
    dend_6 { pt3dadd( 382.978, 445.503, 27.7071, 0.8498 ) }
    dend_6 { pt3dadd( 383.747, 446.296, 27.4104, 0.8996 ) }
    dend_6 { pt3dadd( 383.734, 447.368, 27.2125, 0.8312 ) }
    dend_6 { pt3dadd( 383.413, 448.36, 26.8777, 0.7982 ) }
    dend_6 { pt3dadd( 383.413, 449.496, 26.5113, 0.7396 ) }
    dend_6 { pt3dadd( 383.413, 450.474, 26.0099, 0.618 ) }
    dend_6 { pt3dadd( 383.537, 451.545, 25.4765, 0.6834 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( 384.328, 452.296, 24.9941, 0.7664 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 1/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 386.516, 408.445, 12.4965, 0.7616 ) }
    dend_4 { pt3dadd( 387.737, 407.734, 12.6994, 0.6864 ) }
    dend_4 { pt3dadd( 388.652, 407.107, 11.6274, 0.9134 ) }
    dend_4 { pt3dadd( 389.463, 406.387, 11.1528, 0.8366 ) }
    dend_4 { pt3dadd( 390.423, 406.008, 10.5653, 0.906 ) }
    dend_4 { pt3dadd( 391.319, 405.334, 10.0249, 0.9208 ) }
    dend_4 { pt3dadd( 391.607, 404.738, 9.2936, 0.8164 ) }
    dend_4 { pt3dadd( 390.658, 404.274, 8.7253, 0.805 ) }
    dend_4 { pt3dadd( 389.519, 404.179, 8.3328, 0.8136 ) }
    dend_4 { pt3dadd( 388.451, 403.816, 7.9209, 0.9152 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 11/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 386.516, 408.445, 12.4965, 0.7616 ) }
    dend_1 { pt3dadd( 386.704, 408.427, 12.2255, 0.8368 ) }
    dend_1 { pt3dadd( 387.308, 408.51, 11.6177, 0.6828 ) }
    dend_1 { pt3dadd( 387.302, 409.29, 10.9592, 0.6784 ) }
    dend_1 { pt3dadd( 387.762, 409.768, 10.6575, 0.679 ) }
    dend_1 { pt3dadd( 388.759, 410.117, 10.5713, 0.6362 ) }
    dend_1 { pt3dadd( 389.863, 410.41, 10.5228, 0.5416 ) }
    dend_1 { pt3dadd( 390.857, 410.24, 10.4718, 0.6682 ) }
    dend_1 { pt3dadd( 391.266, 409.434, 10.2423, 0.5818 ) }
    dend_1 { pt3dadd( 391.875, 408.646, 9.9461, 0.6076 ) }
    dend_1 { pt3dadd( 392.956, 408.415, 9.6758, 0.6682 ) }
    dend_1 { pt3dadd( 394.034, 408.394, 9.5578, 0.7184 ) }
    dend_1 { pt3dadd( 394.943, 408.687, 9.6795, 0.6556 ) }
    dend_1 { pt3dadd( 395.608, 409.036, 9.4892, 0.6096 ) }
    dend_1 { pt3dadd( 396.4, 409.809, 9.3267, 0.64 ) }
    dend_1 { pt3dadd( 397.449, 410.244, 9.1896, 0.5926 ) }
    dend_1 { pt3dadd( 398.536, 410.532, 9.0089, 0.55 ) }
    dend_1 { pt3dadd( 399.612, 410.516, 8.7858, 0.4804 ) }
    dend_1 { pt3dadd( 400.648, 410.143, 8.6735, 0.5338 ) }
    dend_1 { pt3dadd( 401.764, 409.934, 8.7018, 0.662 ) }
    dend_1 { pt3dadd( 402.884, 409.768, 8.7852, 0.531 ) }
    dend_1 { pt3dadd( 404.001, 409.717, 8.8266, 0.4758 ) }
    dend_1 { pt3dadd( 404.992, 409.253, 8.8236, 0.377 ) }
    dend_1 { pt3dadd( 405.692, 408.435, 8.8913, 0.4056 ) }
    dend_1 { pt3dadd( 406.354, 407.715, 9.1244, 0.3462 ) }
    dend_1 { pt3dadd( 407.092, 407.076, 9.5284, 0.3228 ) }
    dend_1 { pt3dadd( 407.917, 406.639, 10.0362, 0.3178 ) }
    dend_1 { pt3dadd( 408.917, 406.871, 10.4777, 0.3492 ) }
    dend_1 { pt3dadd( 409.698, 407.494, 10.6234, 0.4406 ) }
    dend_1 { pt3dadd( 410.664, 408.082, 10.5714, 0.448 ) }
    dend_1 { pt3dadd( 411.463, 408.814, 10.3583, 0.5624 ) }
    dend_1 { pt3dadd( 411.82, 409.819, 9.9705, 0.5144 ) }
    dend_1 { pt3dadd( 412.587, 410.086, 9.4134, 0.5432 ) }
    dend_1 { pt3dadd( 413.226, 409.169, 8.8574, 0.7118 ) }
    dend_1 { pt3dadd( 414.258, 409.172, 8.439, 0.9236 ) }
    dend_1 { pt3dadd( 415.274, 409.463, 8.2707, 0.8898 ) }
    // Section: apic_18, id: apic_18, parent: apic_0 (entry count 47/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 355.744, 434.138, 37.1734, 1.1352 ) }
    apic_18 { pt3dadd( 355.522, 434.083, 38.3793, 0.6864 ) }
    apic_18 { pt3dadd( 355.171, 434.309, 39.6477, 0.5274 ) }
    apic_18 { pt3dadd( 354.143, 434.773, 40.1386, 0.5014 ) }
    apic_18 { pt3dadd( 353.324, 435.477, 40.6062, 0.4972 ) }
    apic_18 { pt3dadd( 353.219, 436.534, 40.826, 0.5038 ) }
    apic_18 { pt3dadd( 353.214, 437.644, 40.957, 0.446 ) }
    apic_18 { pt3dadd( 353.274, 438.698, 41.1841, 0.451 ) }
    apic_18 { pt3dadd( 353.157, 439.805, 41.4753, 0.6026 ) }
    apic_18 { pt3dadd( 352.781, 440.843, 41.8561, 0.649 ) }
    apic_18 { pt3dadd( 352.314, 441.857, 42.3125, 0.7308 ) }
    apic_18 { pt3dadd( 352.086, 442.97, 42.7756, 0.6746 ) }
    apic_18 { pt3dadd( 351.887, 444.095, 43.2071, 0.8924 ) }
    apic_18 { pt3dadd( 351.67, 445.191, 43.6439, 0.8784 ) }
    apic_18 { pt3dadd( 351.439, 446.267, 44.1196, 0.8196 ) }
    apic_18 { pt3dadd( 351.108, 447.295, 44.641, 0.8712 ) }
    apic_18 { pt3dadd( 350.681, 448.273, 45.1962, 0.8736 ) }
    apic_18 { pt3dadd( 349.808, 448.95, 45.635, 0.8736 ) }
    apic_18 { pt3dadd( 348.992, 449.68, 45.8892, 0.8936 ) }
    apic_18 { pt3dadd( 348.271, 450.524, 46.1143, 0.8346 ) }
    apic_18 { pt3dadd( 347.705, 451.442, 46.398, 0.734 ) }
    apic_18 { pt3dadd( 347.273, 452.501, 46.6413, 0.7328 ) }
    apic_18 { pt3dadd( 346.815, 453.542, 46.881, 0.7464 ) }
    apic_18 { pt3dadd( 346.249, 454.502, 47.1965, 0.6946 ) }
    apic_18 { pt3dadd( 345.852, 455.389, 47.6302, 0.7448 ) }
    apic_18 { pt3dadd( 345.48, 456.296, 48.0757, 0.586 ) }
    apic_18 { pt3dadd( 345.392, 457.383, 48.2541, 0.597 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 74/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 355.744, 434.138, 37.1734, 1.1352 ) }
    apic_1 { pt3dadd( 354.474, 433.7, 37.5183, 1.2276 ) }
    apic_1 { pt3dadd( 353.5, 433.219, 37.9361, 1.2714 ) }
    apic_1 { pt3dadd( 352.728, 432.432, 38.2721, 1.2848 ) }
    apic_1 { pt3dadd( 351.917, 431.779, 38.4, 1.1824 ) }
    apic_1 { pt3dadd( 351.148, 430.938, 38.4815, 1.1512 ) }
    apic_1 { pt3dadd( 350.756, 430.077, 38.722, 1.0112 ) }
    apic_1 { pt3dadd( 350.056, 430.002, 39.1796, 0.9212 ) }
    apic_1 { pt3dadd( 349.662, 429.015, 39.4881, 1.0744 ) }
    apic_1 { pt3dadd( 348.999, 428.091, 39.7468, 1.1782 ) }
    apic_1 { pt3dadd( 348.105, 427.445, 39.9624, 1.101 ) }
    apic_1 { pt3dadd( 347.482, 426.519, 40.1699, 1.122 ) }
    apic_1 { pt3dadd( 346.545, 425.968, 40.3393, 1.0526 ) }
    apic_1 { pt3dadd( 345.457, 425.682, 40.4639, 0.9922 ) }
    apic_1 { pt3dadd( 344.719, 425.197, 40.5919, 0.7764 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 368.805, 486.635, 44.0143, 0.3764 ) }
    dend_31 { pt3dadd( 368.044, 487.612, 44.2924, 0.4576 ) }
    dend_31 { pt3dadd( 367.343, 488.513, 44.2221, 0.413 ) }
    dend_31 { pt3dadd( 366.622, 489.396, 44.1868, 0.3966 ) }
    dend_31 { pt3dadd( 365.889, 490.269, 44.1006, 0.4688 ) }
    dend_31 { pt3dadd( 365.26, 491.224, 44.0112, 0.5616 ) }
    dend_31 { pt3dadd( 364.63, 492.18, 43.92, 0.475 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 96/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 368.805, 486.635, 44.0143, 0.3764 ) }
    dend_28 { pt3dadd( 369.01, 487.22, 44.0628, 0.3946 ) }
    dend_28 { pt3dadd( 369.3, 488.321, 44.1073, 0.373 ) }
    dend_28 { pt3dadd( 369.669, 489.404, 44.1412, 0.3734 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( 370.051, 490.48, 44.1482, 0.407 ) }
    dend_28 { pt3dadd( 370.793, 491.349, 44.1549, 0.5372 ) }
    dend_28 { pt3dadd( 371.53, 492.224, 44.1641, 0.6788 ) }
    dend_28 { pt3dadd( 372.129, 493.199, 44.1773, 0.7392 ) }
    dend_28 { pt3dadd( 372.728, 494.174, 44.1952, 0.6888 ) }
    dend_28 { pt3dadd( 373.152, 495.235, 44.2212, 0.6968 ) }
    dend_28 { pt3dadd( 373.578, 496.298, 44.2579, 0.6762 ) }
    dend_28 { pt3dadd( 374.25, 497.216, 44.3072, 0.5818 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 8/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 415.376, 501.896, 41.5276, 0.5744 ) }
    dend_25 { pt3dadd( 415.349, 502.479, 41.7155, 0.4586 ) }
    dend_25 { pt3dadd( 415.295, 503.615, 41.2857, 0.3622 ) }
    dend_25 { pt3dadd( 415.241, 504.751, 41.1009, 0.2954 ) }
    dend_25 { pt3dadd( 415.188, 505.887, 40.882, 0.3142 ) }
    dend_25 { pt3dadd( 415.427, 506.987, 40.6535, 0.3426 ) }
    dend_25 { pt3dadd( 415.789, 508.07, 40.4286, 0.427 ) }
    dend_25 { pt3dadd( 416.06, 509.172, 40.1982, 0.429 ) }
    dend_25 { pt3dadd( 416.268, 510.288, 39.9602, 0.4974 ) }
    dend_25 { pt3dadd( 416.531, 511.394, 39.739, 0.539 ) }
    dend_25 { pt3dadd( 416.873, 512.486, 39.5618, 0.5722 ) }
    dend_25 { pt3dadd( 417.169, 513.584, 39.4064, 0.6168 ) }
    dend_25 { pt3dadd( 417.235, 514.715, 39.2193, 0.5546 ) }
    dend_25 { pt3dadd( 417.301, 515.847, 39.0082, 0.4554 ) }
    dend_25 { pt3dadd( 417.178, 516.976, 38.8562, 0.4214 ) }
    dend_25 { pt3dadd( 417.027, 518.106, 38.7456, 0.5468 ) }
    dend_25 { pt3dadd( 416.574, 519.136, 38.5848, 0.5508 ) }
    dend_25 { pt3dadd( 416.067, 520.149, 38.3779, 0.5226 ) }
    dend_25 { pt3dadd( 415.324, 520.977, 38.1105, 0.4152 ) }
    dend_25 { pt3dadd( 414.614, 521.832, 37.819, 0.483 ) }
    dend_25 { pt3dadd( 414.103, 522.855, 37.3419, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 415.376, 501.896, 41.5276, 0.5744 ) }
    dend_24 { pt3dadd( 416.226, 502.448, 41.4008, 0.9152 ) }
    dend_24 { pt3dadd( 417.052, 502.627, 41.0892, 0.705 ) }
    dend_24 { pt3dadd( 418.134, 502.28, 40.8274, 0.5438 ) }
    dend_24 { pt3dadd( 419.232, 502.251, 40.7501, 0.5946 ) }
    dend_24 { pt3dadd( 420.342, 502.418, 40.81, 0.5938 ) }
    dend_24 { pt3dadd( 421.468, 502.596, 40.9662, 0.5956 ) }
    dend_24 { pt3dadd( 422.563, 502.869, 41.197, 0.5828 ) }
    dend_24 { pt3dadd( 423.597, 503.32, 41.4968, 0.637 ) }
    dend_24 { pt3dadd( 424.66, 503.712, 41.785, 0.5882 ) }
    dend_24 { pt3dadd( 425.757, 504.03, 42.0196, 0.5362 ) }
    dend_24 { pt3dadd( 426.8, 504.486, 42.1943, 0.4824 ) }
    dend_24 { pt3dadd( 427.817, 505.006, 42.3139, 0.4042 ) }
    dend_24 { pt3dadd( 428.859, 505.436, 42.4606, 0.3838 ) }
    dend_24 { pt3dadd( 429.912, 505.831, 42.656, 0.4274 ) }
    dend_24 { pt3dadd( 430.889, 506.41, 42.8467, 0.5696 ) }
    dend_24 { pt3dadd( 431.844, 507.038, 43.0184, 0.7654 ) }
    dend_24 { pt3dadd( 432.727, 507.743, 43.1194, 0.7712 ) }
    dend_24 { pt3dadd( 433.611, 508.332, 43.1841, 0.6864 ) }
    dend_24 { pt3dadd( 434.417, 509.061, 43.3516, 0.5338 ) }
    dend_24 { pt3dadd( 434.716, 510.035, 44.1314, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 50/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 414.248, 439.615, 62.5422, 0.9416 ) }
    dend_19 { pt3dadd( 414.698, 438.559, 63.583, 0.9152 ) }
    dend_19 { pt3dadd( 415.355, 438.209, 65.9464, 1.012 ) }
    dend_19 { pt3dadd( 415.63, 437.627, 67.0331, 0.912 ) }
    dend_19 { pt3dadd( 416.048, 436.629, 68.0851, 0.8806 ) }
    dend_19 { pt3dadd( 416.892, 436.163, 69.2213, 0.7612 ) }
    dend_19 { pt3dadd( 417.656, 435.971, 70.4763, 0.6074 ) }
    dend_19 { pt3dadd( 418.325, 435.43, 71.7083, 0.4522 ) }
    dend_19 { pt3dadd( 419.14, 434.852, 72.7367, 0.45 ) }
    dend_19 { pt3dadd( 419.689, 434.047, 73.6887, 0.4316 ) }
    dend_19 { pt3dadd( 420.559, 433.337, 74.4296, 0.4676 ) }
    dend_19 { pt3dadd( 421.309, 432.479, 74.996, 0.6514 ) }
    dend_19 { pt3dadd( 422.151, 431.749, 75.4908, 0.6524 ) }
    dend_19 { pt3dadd( 422.994, 431.06, 75.9545, 0.4734 ) }
    dend_19 { pt3dadd( 423.53, 430.497, 76.62, 0.3328 ) }
    dend_19 { pt3dadd( 424.574, 430.082, 77.1708, 0.2884 ) }
    dend_19 { pt3dadd( 425.412, 429.342, 77.6252, 0.2998 ) }
    dend_19 { pt3dadd( 426.047, 428.521, 78.0522, 0.3226 ) }
    dend_19 { pt3dadd( 426.854, 427.845, 78.5666, 0.3578 ) }
    dend_19 { pt3dadd( 427.381, 426.929, 79.1504, 0.4566 ) }
    dend_19 { pt3dadd( 428.072, 426.278, 79.84, 0.4778 ) }
    dend_19 { pt3dadd( 428.864, 425.617, 80.4275, 0.616 ) }
    dend_19 { pt3dadd( 429.779, 425.133, 80.813, 0.6224 ) }
    dend_19 { pt3dadd( 430.206, 424.296, 81.2871, 0.703 ) }
    dend_19 { pt3dadd( 430.902, 423.596, 81.5125, 0.5178 ) }
    dend_19 { pt3dadd( 431.668, 423.167, 81.8252, 0.4264 ) }
    dend_19 { pt3dadd( 432.481, 422.933, 82.3788, 0.4064 ) }
    dend_19 { pt3dadd( 433.421, 422.57, 83.0726, 0.5594 ) }
    dend_19 { pt3dadd( 433.436, 421.939, 84.0398, 0.6058 ) }
    dend_19 { pt3dadd( 432.831, 421.438, 85.0587, 0.4712 ) }
    dend_19 { pt3dadd( 432.876, 420.335, 85.9838, 0.378 ) }
    dend_19 { pt3dadd( 433.786, 419.9, 86.8484, 0.3616 ) }
    dend_19 { pt3dadd( 434.211, 419.221, 87.2869, 0.487 ) }
    dend_19 { pt3dadd( 434.72, 418.356, 87.5792, 0.4204 ) }
    dend_19 { pt3dadd( 435.209, 417.957, 87.8945, 0.3756 ) }
    dend_19 { pt3dadd( 435.589, 417.569, 88.5184, 0.3694 ) }
    dend_19 { pt3dadd( 436.248, 416.979, 89.2682, 0.4428 ) }
    dend_19 { pt3dadd( 436.921, 416.089, 90.0304, 0.6228 ) }
    dend_19 { pt3dadd( 437.425, 415.089, 90.7822, 0.7436 ) }
    dend_19 { pt3dadd( 438.289, 414.643, 91.4847, 0.6284 ) }
    dend_19 { pt3dadd( 438.539, 413.833, 92.3031, 0.4594 ) }
    dend_19 { pt3dadd( 439.501, 413.371, 93.0236, 0.3882 ) }
    dend_19 { pt3dadd( 439.915, 412.619, 93.8078, 0.4532 ) }
    dend_19 { pt3dadd( 440.501, 411.678, 94.4891, 0.533 ) }
    dend_19 { pt3dadd( 441.058, 411.233, 95.3173, 0.4208 ) }
    dend_19 { pt3dadd( 441.901, 410.658, 96.0109, 0.3304 ) }
    dend_19 { pt3dadd( 442.885, 410.135, 96.486, 0.2796 ) }
    dend_19 { pt3dadd( 443.844, 409.854, 96.7266, 0.305 ) }
    dend_19 { pt3dadd( 444.714, 409.888, 97.0785, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 414.248, 439.615, 62.5422, 0.9416 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_16 { pt3dadd( 415.168, 439.422, 63.1263, 0.8692 ) }
    dend_16 { pt3dadd( 415.454, 439.918, 63.8938, 0.6044 ) }
    dend_16 { pt3dadd( 416.209, 440.626, 64.5722, 0.518 ) }
    dend_16 { pt3dadd( 417.011, 441.223, 65.0126, 0.4544 ) }
    dend_16 { pt3dadd( 417.683, 441.242, 65.6544, 0.5526 ) }
    dend_16 { pt3dadd( 418.672, 441.242, 66.3701, 0.6008 ) }
    dend_16 { pt3dadd( 419.697, 441.242, 66.8716, 0.8834 ) }
    dend_16 { pt3dadd( 420.657, 441.472, 67.3604, 0.9274 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 8/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 384.328, 452.296, 24.9941, 0.7664 ) }
    dend_8 { pt3dadd( 384.749, 452.331, 24.5274, 0.6482 ) }
    dend_8 { pt3dadd( 385.826, 452.643, 24.1131, 0.6066 ) }
    dend_8 { pt3dadd( 386.91, 453.003, 23.7561, 0.8114 ) }
    dend_8 { pt3dadd( 387.924, 453.518, 23.4619, 0.9656 ) }
    dend_8 { pt3dadd( 388.788, 454.262, 23.202, 0.9734 ) }
    dend_8 { pt3dadd( 389.416, 455.152, 22.8577, 0.9658 ) }
    dend_8 { pt3dadd( 389.825, 455.908, 22.2968, 1.0584 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 16/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 384.328, 452.296, 24.9941, 0.7664 ) }
    dend_7 { pt3dadd( 383.591, 452.809, 23.7759, 0.2288 ) }
    dend_7 { pt3dadd( 382.735, 453.405, 22.7987, 0.722 ) }
    dend_7 { pt3dadd( 382.08, 454.305, 22.4594, 0.7498 ) }
    dend_7 { pt3dadd( 381.024, 454.623, 22.0543, 0.8164 ) }
    dend_7 { pt3dadd( 379.962, 454.413, 21.5902, 0.866 ) }
    dend_7 { pt3dadd( 378.961, 453.861, 21.1639, 0.8608 ) }
    dend_7 { pt3dadd( 377.89, 453.46, 20.7664, 0.636 ) }
    dend_7 { pt3dadd( 376.764, 453.286, 20.3777, 0.5766 ) }
    dend_7 { pt3dadd( 376.067, 453.086, 19.7106, 0.5612 ) }
    dend_7 { pt3dadd( 375.616, 452.74, 18.8492, 0.761 ) }
    dend_7 { pt3dadd( 374.512, 452.474, 18.1185, 0.9374 ) }
    dend_7 { pt3dadd( 373.425, 452.127, 17.54, 1.062 ) }
    dend_7 { pt3dadd( 372.31, 451.922, 17.1156, 0.9024 ) }
    dend_7 { pt3dadd( 371.167, 451.886, 16.8272, 0.9028 ) }
    dend_7 { pt3dadd( 370.023, 451.849, 16.6523, 0.8366 ) }
    dend_7 { pt3dadd( 368.965, 451.49, 16.4817, 0.8106 ) }
    dend_7 { pt3dadd( 367.937, 451.015, 16.2562, 0.7504 ) }
    dend_7 { pt3dadd( 366.828, 450.781, 16.0103, 0.6974 ) }
    dend_7 { pt3dadd( 365.702, 450.603, 15.7584, 0.543 ) }
    dend_7 { pt3dadd( 364.612, 450.515, 15.4456, 0.5286 ) }
    dend_7 { pt3dadd( 363.56, 450.515, 15.035, 0.5556 ) }
    dend_7 { pt3dadd( 362.52, 450.515, 14.7885, 0.5746 ) }
    dend_7 { pt3dadd( 361.507, 450.564, 14.7891, 0.7598 ) }
    dend_7 { pt3dadd( 360.458, 450.857, 14.6611, 0.8324 ) }
    dend_7 { pt3dadd( 359.381, 451.174, 14.4866, 0.6806 ) }
    dend_7 { pt3dadd( 358.523, 451.789, 14.2286, 0.644 ) }
    dend_7 { pt3dadd( 357.751, 452.603, 13.9763, 0.7612 ) }
    dend_7 { pt3dadd( 356.824, 453.24, 13.7206, 0.7672 ) }
    dend_7 { pt3dadd( 355.816, 453.778, 13.4867, 0.6604 ) }
    dend_7 { pt3dadd( 354.962, 454.5, 13.3765, 0.5766 ) }
    dend_7 { pt3dadd( 354.339, 455.45, 13.3103, 0.5528 ) }
    dend_7 { pt3dadd( 353.467, 455.967, 13.3317, 0.557 ) }
    dend_7 { pt3dadd( 352.501, 455.756, 13.166, 0.5578 ) }
    dend_7 { pt3dadd( 351.466, 455.576, 12.8523, 0.5946 ) }
    dend_7 { pt3dadd( 350.381, 455.598, 12.4495, 0.4904 ) }
    dend_7 { pt3dadd( 349.972, 456.544, 12.0484, 0.4488 ) }
    dend_7 { pt3dadd( 349.972, 457.671, 11.7851, 0.5502 ) }
    dend_7 { pt3dadd( 349.753, 458.715, 11.6793, 0.5582 ) }
    dend_7 { pt3dadd( 349.281, 459.65, 11.4508, 0.5324 ) }
    dend_7 { pt3dadd( 348.313, 460.064, 11.3039, 0.4516 ) }
    dend_7 { pt3dadd( 347.462, 459.452, 11.2278, 0.4624 ) }
    dend_7 { pt3dadd( 346.426, 459.214, 10.9784, 0.6184 ) }
    dend_7 { pt3dadd( 345.443, 459.227, 10.4759, 0.7042 ) }
    dend_7 { pt3dadd( 344.406, 459.434, 9.8733, 0.7072 ) }
    dend_7 { pt3dadd( 343.712, 460.25, 9.277, 0.5556 ) }
    dend_7 { pt3dadd( 343.21, 461.186, 8.635, 0.579 ) }
    dend_7 { pt3dadd( 342.366, 461.931, 8.0668, 0.517 ) }
    dend_7 { pt3dadd( 341.523, 462.658, 7.5706, 0.4576 ) }
    dend_7 { pt3dadd( 340.704, 463.442, 7.2124, 0.305 ) }
    dend_7 { pt3dadd( 339.895, 464.251, 6.7894, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 67/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 415.274, 409.463, 8.2707, 0.8898 ) }
    dend_3 { pt3dadd( 415.493, 409.869, 9.7191, 0.6864 ) }
    dend_3 { pt3dadd( 415.986, 410.794, 8.8965, 0.7626 ) }
    dend_3 { pt3dadd( 416.852, 411.141, 7.9209, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 415.274, 409.463, 8.2707, 0.8898 ) }
    dend_2 { pt3dadd( 416.443, 408.828, 8.1841, 0.6102 ) }
    dend_2 { pt3dadd( 416.835, 407.885, 8.0064, 0.4576 ) }
    dend_2 { pt3dadd( 416.393, 407.479, 6.7894, 0.4576 ) }
    // Section: apic_22, id: apic_22, parent: apic_18 (entry count 75/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 345.392, 457.383, 48.2541, 0.597 ) }
    apic_22 { pt3dadd( 345.162, 458.405, 48.1359, 0.4576 ) }
    apic_22 { pt3dadd( 344.964, 459.102, 50.1844, 0.388 ) }
    apic_22 { pt3dadd( 345.023, 459.82, 51.0636, 0.353 ) }
    apic_22 { pt3dadd( 344.863, 460.942, 51.9229, 0.3744 ) }
    apic_22 { pt3dadd( 344.753, 461.787, 52.948, 0.4524 ) }
    apic_22 { pt3dadd( 344.925, 462.409, 54.112, 0.6394 ) }
    apic_22 { pt3dadd( 344.144, 462.327, 55.3918, 0.7814 ) }
    apic_22 { pt3dadd( 344.006, 461.488, 56.7392, 0.6648 ) }
    apic_22 { pt3dadd( 343.816, 460.49, 58.0017, 0.691 ) }
    apic_22 { pt3dadd( 343.186, 460.931, 59.3216, 0.7066 ) }
    apic_22 { pt3dadd( 343.037, 461.892, 60.5895, 0.6682 ) }
    apic_22 { pt3dadd( 343.024, 462.931, 61.7574, 0.6936 ) }
    apic_22 { pt3dadd( 343.091, 463.852, 62.8718, 0.5008 ) }
    apic_22 { pt3dadd( 343.188, 464.291, 64.1533, 0.3924 ) }
    apic_22 { pt3dadd( 343.598, 465.213, 65.338, 0.355 ) }
    apic_22 { pt3dadd( 344.118, 466.132, 66.4222, 0.408 ) }
    apic_22 { pt3dadd( 344.587, 467.152, 67.3389, 0.5984 ) }
    apic_22 { pt3dadd( 345.208, 468.113, 68.098, 0.5038 ) }
    apic_22 { pt3dadd( 345.609, 468.864, 68.9573, 0.4418 ) }
    apic_22 { pt3dadd( 346.222, 469.629, 69.7782, 0.464 ) }
    apic_22 { pt3dadd( 346.886, 470.344, 70.6336, 0.5244 ) }
    apic_22 { pt3dadd( 347.423, 471.257, 71.4941, 0.5444 ) }
    apic_22 { pt3dadd( 348.132, 471.997, 72.4268, 0.57 ) }
    apic_22 { pt3dadd( 348.574, 472.98, 73.3342, 0.4434 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_22 { pt3dadd( 349.165, 473.897, 74.1283, 0.3672 ) }
    apic_22 { pt3dadd( 349.734, 474.722, 74.8726, 0.3728 ) }
    apic_22 { pt3dadd( 349.947, 475.785, 75.5118, 0.356 ) }
    apic_22 { pt3dadd( 350.186, 476.716, 76.8771, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_18 (entry count 4/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 345.392, 457.383, 48.2541, 0.597 ) }
    apic_19 { pt3dadd( 345.194, 457.719, 48.3336, 0.5086 ) }
    apic_19 { pt3dadd( 344.354, 458.28, 48.3227, 0.4156 ) }
    apic_19 { pt3dadd( 343.291, 458.604, 48.1712, 0.3566 ) }
    apic_19 { pt3dadd( 342.262, 459.038, 47.8976, 0.383 ) }
    apic_19 { pt3dadd( 341.263, 459.584, 47.6367, 0.459 ) }
    apic_19 { pt3dadd( 340.271, 460.153, 47.4323, 0.6962 ) }
    apic_19 { pt3dadd( 339.337, 460.771, 47.1929, 0.6702 ) }
    apic_19 { pt3dadd( 338.419, 461.403, 46.9188, 0.8236 ) }
    // Section: apic_13, id: apic_13, parent: apic_1 (entry count 13/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 344.719, 425.197, 40.5919, 0.7764 ) }
    apic_13 { pt3dadd( 344.574, 424.604, 40.2245, 0.2288 ) }
    apic_13 { pt3dadd( 344.304, 423.5, 40.0448, 0.6342 ) }
    apic_13 { pt3dadd( 344.057, 422.391, 39.9445, 0.7112 ) }
    apic_13 { pt3dadd( 343.959, 421.254, 39.8678, 0.8292 ) }
    apic_13 { pt3dadd( 343.354, 420.362, 39.9333, 0.9384 ) }
    apic_13 { pt3dadd( 342.586, 419.529, 39.9918, 0.9862 ) }
    apic_13 { pt3dadd( 341.929, 418.689, 39.9092, 0.9112 ) }
    apic_13 { pt3dadd( 341.471, 417.646, 39.7925, 0.879 ) }
    apic_13 { pt3dadd( 341.003, 416.607, 39.6474, 0.7586 ) }
    apic_13 { pt3dadd( 340.506, 415.579, 39.487, 0.6026 ) }
    apic_13 { pt3dadd( 339.909, 414.61, 39.3445, 0.443 ) }
    apic_13 { pt3dadd( 339.245, 413.682, 39.2518, 0.4338 ) }
    apic_13 { pt3dadd( 338.781, 412.649, 39.1734, 0.3982 ) }
    apic_13 { pt3dadd( 338.412, 411.567, 39.069, 0.4218 ) }
    apic_13 { pt3dadd( 338.173, 410.465, 38.8962, 0.487 ) }
    apic_13 { pt3dadd( 338.084, 409.343, 38.6229, 0.7338 ) }
    apic_13 { pt3dadd( 337.964, 408.234, 38.2589, 0.809 ) }
    apic_13 { pt3dadd( 337.726, 407.179, 37.7852, 0.7456 ) }
    apic_13 { pt3dadd( 337.411, 406.135, 37.2876, 0.9258 ) }
    apic_13 { pt3dadd( 336.888, 405.119, 36.9015, 0.9588 ) }
    apic_13 { pt3dadd( 336.375, 404.105, 36.5677, 0.8804 ) }
    apic_13 { pt3dadd( 335.869, 403.095, 36.2396, 0.725 ) }
    apic_13 { pt3dadd( 335.185, 402.22, 35.8938, 0.715 ) }
    apic_13 { pt3dadd( 334.481, 401.362, 35.5376, 0.7188 ) }
    apic_13 { pt3dadd( 334.167, 400.263, 35.2596, 0.6176 ) }
    apic_13 { pt3dadd( 333.853, 399.162, 35.0375, 0.727 ) }
    apic_13 { pt3dadd( 333.613, 398.063, 34.813, 0.6322 ) }
    apic_13 { pt3dadd( 333.393, 396.962, 34.5909, 0.7574 ) }
    apic_13 { pt3dadd( 332.959, 395.92, 34.44, 0.6716 ) }
    apic_13 { pt3dadd( 332.437, 394.903, 34.3759, 0.6842 ) }
    apic_13 { pt3dadd( 331.99, 393.927, 34.2793, 0.5592 ) }
    apic_13 { pt3dadd( 331.308, 393.108, 34.3594, 0.5906 ) }
    apic_13 { pt3dadd( 331.024, 392.19, 34.7393, 0.7444 ) }
    apic_13 { pt3dadd( 330.733, 391.224, 35.2789, 0.5652 ) }
    apic_13 { pt3dadd( 330.733, 390.081, 35.7518, 0.4274 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 49/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 344.719, 425.197, 40.5919, 0.7764 ) }
    apic_2 { pt3dadd( 343.627, 424.924, 40.7854, 0.88 ) }
    apic_2 { pt3dadd( 342.656, 424.321, 40.9634, 0.9146 ) }
    apic_2 { pt3dadd( 341.682, 423.722, 41.1149, 1.058 ) }
    apic_2 { pt3dadd( 340.627, 423.281, 41.2602, 0.9394 ) }
    apic_2 { pt3dadd( 339.591, 423.071, 41.5358, 0.9846 ) }
    apic_2 { pt3dadd( 338.553, 422.606, 41.7603, 1.1536 ) }
    apic_2 { pt3dadd( 337.452, 422.306, 41.907, 1.282 ) }
    apic_2 { pt3dadd( 336.362, 422.247, 42.0246, 1.2732 ) }
    apic_2 { pt3dadd( 335.51, 421.655, 42.2064, 1.312 ) }
    apic_2 { pt3dadd( 334.651, 421.038, 42.2117, 1.345 ) }
    apic_2 { pt3dadd( 333.714, 420.486, 42.2794, 1.3672 ) }
    apic_2 { pt3dadd( 333.01, 419.638, 42.4228, 1.3684 ) }
    apic_2 { pt3dadd( 331.988, 419.185, 42.5636, 1.335 ) }
    apic_2 { pt3dadd( 331.233, 418.381, 42.7039, 1.447 ) }
    apic_2 { pt3dadd( 330.313, 417.865, 42.7529, 1.4966 ) }
    apic_2 { pt3dadd( 329.515, 417.057, 42.8268, 1.4408 ) }
    apic_2 { pt3dadd( 328.783, 416.22, 42.8898, 1.3674 ) }
    apic_2 { pt3dadd( 327.947, 415.511, 42.8764, 1.3148 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 68/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 364.63, 492.18, 43.92, 0.475 ) }
    dend_33 { pt3dadd( 363.993, 493.261, 44.6085, 0.2288 ) }
    dend_33 { pt3dadd( 363.419, 494.234, 45.367, 0.282 ) }
    dend_33 { pt3dadd( 362.894, 495.23, 45.6932, 0.2886 ) }
    dend_33 { pt3dadd( 362.583, 496.315, 46.0995, 0.3 ) }
    dend_33 { pt3dadd( 362.251, 497.372, 46.5214, 0.324 ) }
    dend_33 { pt3dadd( 361.942, 498.373, 46.9263, 0.3556 ) }
    dend_33 { pt3dadd( 361.529, 499.195, 47.5726, 0.476 ) }
    dend_33 { pt3dadd( 360.757, 499.814, 48.342, 0.4 ) }
    dend_33 { pt3dadd( 360.353, 500.786, 49.1901, 0.3378 ) }
    dend_33 { pt3dadd( 360.038, 501.883, 49.9576, 0.2988 ) }
    dend_33 { pt3dadd( 359.598, 502.902, 50.713, 0.3142 ) }
    dend_33 { pt3dadd( 359.042, 503.876, 51.4822, 0.3734 ) }
    dend_33 { pt3dadd( 358.596, 504.854, 52.3113, 0.334 ) }
    dend_33 { pt3dadd( 358.137, 505.78, 53.2347, 0.3002 ) }
    dend_33 { pt3dadd( 357.483, 506.34, 54.3519, 0.275 ) }
    dend_33 { pt3dadd( 356.849, 507.069, 55.5453, 0.2752 ) }
    dend_33 { pt3dadd( 356.233, 507.977, 56.6944, 0.2758 ) }
    dend_33 { pt3dadd( 356.024, 508.991, 57.8234, 0.2768 ) }
    dend_33 { pt3dadd( 355.949, 510.039, 58.9274, 0.2788 ) }
    dend_33 { pt3dadd( 355.742, 510.957, 60.0606, 0.2824 ) }
    dend_33 { pt3dadd( 355.482, 511.823, 61.2214, 0.2892 ) }
    dend_33 { pt3dadd( 355.26, 512.912, 62.2362, 0.3016 ) }
    dend_33 { pt3dadd( 355.04, 514.013, 63.1218, 0.3248 ) }
    dend_33 { pt3dadd( 355.012, 515.079, 63.9565, 0.3668 ) }
    dend_33 { pt3dadd( 355.012, 516.14, 64.7492, 0.4492 ) }
    dend_33 { pt3dadd( 354.712, 517.2, 65.4105, 0.5808 ) }
    dend_33 { pt3dadd( 354.292, 518.262, 65.9428, 0.9278 ) }
    dend_33 { pt3dadd( 353.672, 519.182, 66.4404, 1.071 ) }
    dend_33 { pt3dadd( 352.946, 520.023, 66.9351, 1.0192 ) }
    dend_33 { pt3dadd( 352.359, 520.989, 67.3929, 0.6326 ) }
    dend_33 { pt3dadd( 351.805, 521.971, 67.825, 0.4112 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_33 { pt3dadd( 351.805, 523.115, 68.1934, 0.3418 ) }
    dend_33 { pt3dadd( 351.764, 524.251, 68.5591, 0.3882 ) }
    dend_33 { pt3dadd( 351.285, 524.9, 69.0998, 0.5382 ) }
    dend_33 { pt3dadd( 350.417, 525.607, 69.5696, 0.506 ) }
    dend_33 { pt3dadd( 349.353, 526.025, 69.932, 0.5804 ) }
    dend_33 { pt3dadd( 348.366, 526.472, 70.3203, 0.5248 ) }
    dend_33 { pt3dadd( 347.351, 526.747, 70.5961, 0.4464 ) }
    dend_33 { pt3dadd( 346.758, 527.398, 70.6286, 0.4098 ) }
    dend_33 { pt3dadd( 346.042, 528.272, 70.719, 0.5004 ) }
    dend_33 { pt3dadd( 345.242, 528.981, 70.9682, 0.5862 ) }
    dend_33 { pt3dadd( 344.21, 529.33, 71.2734, 0.6856 ) }
    dend_33 { pt3dadd( 343.247, 529.814, 71.5966, 0.7024 ) }
    dend_33 { pt3dadd( 342.478, 530.521, 72.0532, 0.6308 ) }
    dend_33 { pt3dadd( 341.625, 531.22, 72.4984, 0.5392 ) }
    dend_33 { pt3dadd( 340.717, 531.912, 72.8272, 0.6268 ) }
    dend_33 { pt3dadd( 339.785, 532.573, 73.0257, 0.6852 ) }
    dend_33 { pt3dadd( 338.93, 533.332, 73.1116, 0.6112 ) }
    dend_33 { pt3dadd( 337.836, 533.385, 72.9988, 0.6718 ) }
    dend_33 { pt3dadd( 336.748, 533.539, 72.8913, 0.7402 ) }
    dend_33 { pt3dadd( 335.776, 534.144, 72.7586, 0.6222 ) }
    dend_33 { pt3dadd( 334.866, 534.705, 72.4903, 0.4482 ) }
    dend_33 { pt3dadd( 333.856, 535.194, 72.1815, 0.3652 ) }
    dend_33 { pt3dadd( 332.832, 535.636, 71.8721, 0.4216 ) }
    dend_33 { pt3dadd( 331.778, 535.845, 71.7035, 0.42 ) }
    dend_33 { pt3dadd( 330.996, 536.457, 71.6094, 0.4746 ) }
    dend_33 { pt3dadd( 329.966, 536.283, 71.4101, 0.5254 ) }
    dend_33 { pt3dadd( 328.864, 536.25, 71.2191, 0.4068 ) }
    dend_33 { pt3dadd( 327.728, 536.341, 71.0539, 0.305 ) }
    dend_33 { pt3dadd( 327.474, 537.457, 70.9022, 0.2288 ) }
    dend_33 { pt3dadd( 327.068, 538.421, 70.1574, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 30/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 364.63, 492.18, 43.92, 0.475 ) }
    dend_32 { pt3dadd( 364.424, 493.207, 43.7553, 0.4266 ) }
    dend_32 { pt3dadd( 364.205, 494.307, 43.5355, 0.4782 ) }
    dend_32 { pt3dadd( 363.925, 495.41, 43.3768, 0.5738 ) }
    dend_32 { pt3dadd( 363.622, 496.509, 43.2804, 0.5226 ) }
    dend_32 { pt3dadd( 363.211, 497.566, 43.2396, 0.3942 ) }
    dend_32 { pt3dadd( 362.806, 498.62, 43.1858, 0.3172 ) }
    dend_32 { pt3dadd( 362.411, 499.673, 43.0354, 0.3078 ) }
    dend_32 { pt3dadd( 362.04, 500.732, 42.7955, 0.3306 ) }
    dend_32 { pt3dadd( 361.702, 501.798, 42.4743, 0.405 ) }
    dend_32 { pt3dadd( 361.248, 502.827, 42.1442, 0.3874 ) }
    dend_32 { pt3dadd( 360.789, 503.87, 41.8673, 0.4242 ) }
    dend_32 { pt3dadd( 360.556, 504.977, 41.6128, 0.3832 ) }
    dend_32 { pt3dadd( 360.791, 506.008, 41.312, 0.3808 ) }
    dend_32 { pt3dadd( 361.066, 507.111, 41.0939, 0.4754 ) }
    dend_32 { pt3dadd( 361.23, 508.244, 40.9494, 0.399 ) }
    dend_32 { pt3dadd( 361.394, 509.375, 40.859, 0.3364 ) }
    dend_32 { pt3dadd( 361.229, 510.497, 40.8111, 0.2948 ) }
    dend_32 { pt3dadd( 360.992, 511.616, 40.8036, 0.312 ) }
    dend_32 { pt3dadd( 360.55, 512.642, 40.8288, 0.3438 ) }
    dend_32 { pt3dadd( 359.863, 513.558, 40.8666, 0.4046 ) }
    dend_32 { pt3dadd( 359.243, 514.515, 40.917, 0.5076 ) }
    dend_32 { pt3dadd( 358.702, 515.523, 40.9783, 0.746 ) }
    dend_32 { pt3dadd( 358.165, 516.519, 41.081, 0.9574 ) }
    dend_32 { pt3dadd( 357.631, 517.5, 41.2636, 1.0958 ) }
    dend_32 { pt3dadd( 357.007, 518.438, 41.4582, 0.983 ) }
    dend_32 { pt3dadd( 356.313, 519.344, 41.6198, 0.9634 ) }
    dend_32 { pt3dadd( 355.573, 520.202, 41.6788, 0.6948 ) }
    dend_32 { pt3dadd( 354.833, 521.057, 41.6307, 0.638 ) }
    dend_32 { pt3dadd( 354.193, 522.002, 41.5584, 0.6786 ) }
    dend_32 { pt3dadd( 353.348, 522.748, 41.4448, 0.7326 ) }
    dend_32 { pt3dadd( 352.411, 523.406, 41.302, 0.7056 ) }
    dend_32 { pt3dadd( 351.461, 523.873, 41.0304, 0.5876 ) }
    dend_32 { pt3dadd( 350.502, 524.251, 40.6269, 0.4692 ) }
    dend_32 { pt3dadd( 349.507, 524.755, 40.2352, 0.448 ) }
    dend_32 { pt3dadd( 348.552, 525.328, 39.9162, 0.5906 ) }
    dend_32 { pt3dadd( 347.736, 526.086, 39.8045, 0.6586 ) }
    dend_32 { pt3dadd( 346.876, 526.743, 39.8882, 0.5946 ) }
    dend_32 { pt3dadd( 346.021, 527.47, 40.0369, 0.4822 ) }
    dend_32 { pt3dadd( 345.379, 528.232, 40.0092, 0.4718 ) }
    dend_32 { pt3dadd( 344.928, 529.107, 39.9784, 0.637 ) }
    dend_32 { pt3dadd( 344.356, 530.094, 40.0084, 0.7338 ) }
    dend_32 { pt3dadd( 343.754, 531.054, 40.0946, 0.7864 ) }
    dend_32 { pt3dadd( 342.967, 531.841, 40.297, 0.5838 ) }
    dend_32 { pt3dadd( 342.35, 532.74, 40.5896, 0.5214 ) }
    dend_32 { pt3dadd( 341.954, 533.772, 40.9618, 0.4874 ) }
    dend_32 { pt3dadd( 341.259, 534.528, 41.1914, 0.4856 ) }
    dend_32 { pt3dadd( 340.213, 534.758, 41.4467, 0.4122 ) }
    dend_32 { pt3dadd( 339.072, 534.818, 41.6326, 0.3876 ) }
    dend_32 { pt3dadd( 337.933, 534.899, 41.7525, 0.4882 ) }
    dend_32 { pt3dadd( 336.943, 535.434, 41.7953, 0.4224 ) }
    dend_32 { pt3dadd( 336.027, 536.112, 41.7718, 0.3816 ) }
    dend_32 { pt3dadd( 335.193, 536.894, 41.7004, 0.3682 ) }
    dend_32 { pt3dadd( 334.492, 537.776, 41.5822, 0.5002 ) }
    dend_32 { pt3dadd( 333.842, 538.703, 41.4462, 0.4398 ) }
    dend_32 { pt3dadd( 333.043, 539.521, 41.2854, 0.437 ) }
    dend_32 { pt3dadd( 332.336, 539.905, 40.8758, 0.3586 ) }
    dend_32 { pt3dadd( 331.524, 540.535, 40.3838, 0.3404 ) }
    dend_32 { pt3dadd( 331.178, 541.343, 40.2643, 0.3752 ) }
    dend_32 { pt3dadd( 330.566, 542.305, 40.1685, 0.3372 ) }
    dend_32 { pt3dadd( 330.032, 543.302, 40.1198, 0.306 ) }
    dend_32 { pt3dadd( 329.705, 544.39, 40.1682, 0.2858 ) }
    dend_32 { pt3dadd( 329.403, 545.488, 40.2674, 0.2954 ) }
    dend_32 { pt3dadd( 329.135, 546.6, 40.3281, 0.3126 ) }
    dend_32 { pt3dadd( 328.882, 547.714, 40.297, 0.3484 ) }
    dend_32 { pt3dadd( 328.717, 548.847, 40.2181, 0.3954 ) }
    dend_32 { pt3dadd( 328.552, 549.978, 40.0946, 0.5762 ) }
    dend_32 { pt3dadd( 328.462, 551.111, 39.9006, 0.4576 ) }
    dend_32 { pt3dadd( 328.442, 552.176, 39.5668, 0.3814 ) }
    dend_32 { pt3dadd( 327.985, 553.073, 38.4734, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 0/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 374.25, 497.216, 44.3072, 0.5818 ) }
    dend_30 { pt3dadd( 375.013, 498.167, 44.3699, 0.4514 ) }
    dend_30 { pt3dadd( 375.713, 499.067, 44.4749, 0.45 ) }
    dend_30 { pt3dadd( 376.471, 499.906, 44.6267, 0.4242 ) }
    dend_30 { pt3dadd( 377.315, 500.656, 44.8302, 0.4886 ) }
    dend_30 { pt3dadd( 378.245, 501.312, 45.0134, 0.5214 ) }
    dend_30 { pt3dadd( 379.2, 501.94, 45.1562, 0.5462 ) }
    dend_30 { pt3dadd( 380.185, 502.397, 45.155, 0.5374 ) }
    dend_30 { pt3dadd( 380.896, 503.152, 45.2942, 0.5572 ) }
    dend_30 { pt3dadd( 381.372, 504.101, 45.5022, 0.419 ) }
    dend_30 { pt3dadd( 381.644, 505.186, 45.5756, 0.3262 ) }
    dend_30 { pt3dadd( 381.853, 506.302, 45.5636, 0.276 ) }
    dend_30 { pt3dadd( 382.037, 507.421, 45.4947, 0.2772 ) }
    dend_30 { pt3dadd( 382.037, 508.565, 45.4294, 0.2794 ) }
    dend_30 { pt3dadd( 382.037, 509.709, 45.3508, 0.2834 ) }
    dend_30 { pt3dadd( 382.032, 510.853, 45.2861, 0.2912 ) }
    dend_30 { pt3dadd( 382.014, 511.997, 45.2533, 0.3052 ) }
    dend_30 { pt3dadd( 381.995, 513.141, 45.2382, 0.3322 ) }
    dend_30 { pt3dadd( 381.765, 514.245, 45.2281, 0.377 ) }
    dend_30 { pt3dadd( 381.368, 515.318, 45.2127, 0.4854 ) }
    dend_30 { pt3dadd( 381.041, 516.411, 45.1923, 0.564 ) }
    dend_30 { pt3dadd( 380.829, 517.534, 45.1693, 0.6182 ) }
    dend_30 { pt3dadd( 380.617, 518.659, 45.1469, 0.7046 ) }
    dend_30 { pt3dadd( 380.446, 519.773, 45.0612, 0.704 ) }
    dend_30 { pt3dadd( 380.277, 520.887, 44.9375, 0.7976 ) }
    dend_30 { pt3dadd( 380.443, 522.004, 44.9053, 0.7402 ) }
    dend_30 { pt3dadd( 380.656, 523.119, 44.9739, 0.6096 ) }
    dend_30 { pt3dadd( 380.664, 524.257, 45.0534, 0.4866 ) }
    dend_30 { pt3dadd( 380.664, 525.397, 45.1539, 0.365 ) }
    dend_30 { pt3dadd( 380.786, 526.496, 45.36, 0.3106 ) }
    dend_30 { pt3dadd( 381.049, 527.548, 45.7243, 0.2942 ) }
    dend_30 { pt3dadd( 380.865, 528.515, 46.2504, 0.3112 ) }
    dend_30 { pt3dadd( 380.577, 529.505, 46.8289, 0.3418 ) }
    dend_30 { pt3dadd( 380.156, 530.561, 47.3124, 0.4032 ) }
    dend_30 { pt3dadd( 379.78, 531.627, 47.6409, 0.4928 ) }
    dend_30 { pt3dadd( 379.477, 532.712, 47.7495, 0.7782 ) }
    dend_30 { pt3dadd( 379.174, 533.802, 47.705, 0.7282 ) }
    dend_30 { pt3dadd( 378.867, 534.904, 47.5961, 0.7002 ) }
    dend_30 { pt3dadd( 378.259, 535.849, 47.4846, 0.563 ) }
    dend_30 { pt3dadd( 377.531, 536.732, 47.4068, 0.4948 ) }
    dend_30 { pt3dadd( 377.166, 537.774, 47.3026, 0.3802 ) }
    dend_30 { pt3dadd( 376.918, 538.867, 47.1705, 0.3384 ) }
    dend_30 { pt3dadd( 376.752, 539.985, 47.1167, 0.3476 ) }
    dend_30 { pt3dadd( 376.618, 541.114, 47.1685, 0.4004 ) }
    dend_30 { pt3dadd( 376.541, 542.248, 47.2844, 0.5548 ) }
    dend_30 { pt3dadd( 376.541, 543.39, 47.4233, 0.566 ) }
    dend_30 { pt3dadd( 376.541, 544.531, 47.5975, 0.5494 ) }
    dend_30 { pt3dadd( 376.541, 545.628, 47.9405, 0.4706 ) }
    dend_30 { pt3dadd( 376.541, 546.724, 48.3986, 0.5582 ) }
    dend_30 { pt3dadd( 376.94, 547.748, 48.935, 0.5022 ) }
    dend_30 { pt3dadd( 377.391, 548.754, 49.518, 0.5436 ) }
    dend_30 { pt3dadd( 377.871, 549.695, 50.0682, 0.6008 ) }
    dend_30 { pt3dadd( 377.88, 550.784, 50.5912, 0.5732 ) }
    dend_30 { pt3dadd( 377.969, 551.743, 51.0644, 0.485 ) }
    dend_30 { pt3dadd( 378.62, 552.434, 51.669, 0.5008 ) }
    dend_30 { pt3dadd( 378.583, 553.431, 52.3113, 0.575 ) }
    dend_30 { pt3dadd( 378.388, 554.503, 52.948, 0.4948 ) }
    dend_30 { pt3dadd( 378.508, 555.605, 53.5559, 0.488 ) }
    dend_30 { pt3dadd( 378.746, 556.646, 54.1682, 0.4722 ) }
    dend_30 { pt3dadd( 378.671, 557.575, 54.7672, 0.4582 ) }
    dend_30 { pt3dadd( 378.143, 558.583, 55.2163, 0.3594 ) }
    dend_30 { pt3dadd( 378.11, 559.704, 55.6041, 0.3 ) }
    dend_30 { pt3dadd( 378.11, 560.838, 55.9336, 0.2746 ) }
    dend_30 { pt3dadd( 377.958, 561.928, 56.1106, 0.2746 ) }
    dend_30 { pt3dadd( 377.881, 563.042, 56.2204, 0.2748 ) }
    dend_30 { pt3dadd( 377.881, 564.175, 56.3506, 0.2748 ) }
    dend_30 { pt3dadd( 377.766, 565.274, 56.5256, 0.2752 ) }
    dend_30 { pt3dadd( 377.34, 566.303, 56.6961, 0.2756 ) }
    dend_30 { pt3dadd( 377.195, 567.425, 56.7868, 0.2766 ) }
    dend_30 { pt3dadd( 377.195, 568.569, 56.8672, 0.2782 ) }
    dend_30 { pt3dadd( 377.195, 569.713, 56.9394, 0.2814 ) }
    dend_30 { pt3dadd( 377.195, 570.857, 57.0097, 0.287 ) }
    dend_30 { pt3dadd( 377.195, 572.0, 57.0987, 0.2988 ) }
    dend_30 { pt3dadd( 376.995, 572.929, 57.3667, 0.3142 ) }
    dend_30 { pt3dadd( 376.387, 573.841, 57.5537, 0.3734 ) }
    dend_30 { pt3dadd( 376.043, 574.93, 57.7388, 0.3338 ) }
    dend_30 { pt3dadd( 375.823, 576.031, 58.0056, 0.3 ) }
    dend_30 { pt3dadd( 375.63, 576.949, 58.3901, 0.2746 ) }
    dend_30 { pt3dadd( 374.98, 577.649, 58.7468, 0.2746 ) }
    dend_30 { pt3dadd( 375.134, 578.762, 59.0976, 0.2744 ) }
    dend_30 { pt3dadd( 375.135, 579.905, 59.3891, 0.2744 ) }
    dend_30 { pt3dadd( 375.079, 581.046, 59.6198, 0.2742 ) }
    dend_30 { pt3dadd( 374.823, 582.113, 59.8287, 0.274 ) }
    dend_30 { pt3dadd( 374.906, 583.136, 60.0782, 0.2736 ) }
    dend_30 { pt3dadd( 374.766, 583.833, 60.2552, 0.2728 ) }
    dend_30 { pt3dadd( 374.677, 584.968, 60.3641, 0.2712 ) }
    dend_30 { pt3dadd( 374.614, 586.103, 60.4229, 0.2684 ) }
    dend_30 { pt3dadd( 374.271, 587.188, 60.4377, 0.2626 ) }
    dend_30 { pt3dadd( 373.548, 588.07, 60.4153, 0.2542 ) }
    dend_30 { pt3dadd( 373.074, 589.109, 60.3683, 0.2288 ) }
    dend_30 { pt3dadd( 373.074, 590.231, 60.0429, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 91/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 374.25, 497.216, 44.3072, 0.5818 ) }
    dend_29 { pt3dadd( 374.148, 497.434, 44.4298, 0.4576 ) }
    dend_29 { pt3dadd( 373.837, 498.476, 44.7597, 0.5052 ) }
    dend_29 { pt3dadd( 374.163, 499.548, 44.8778, 0.4422 ) }
    dend_29 { pt3dadd( 374.614, 500.599, 44.989, 0.475 ) }
    dend_29 { pt3dadd( 375.091, 501.638, 45.0962, 0.495 ) }
    dend_29 { pt3dadd( 375.747, 502.558, 45.2497, 0.5012 ) }
    dend_29 { pt3dadd( 376.045, 503.649, 45.418, 0.435 ) }
    dend_29 { pt3dadd( 376.528, 504.677, 45.5804, 0.4606 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_29 { pt3dadd( 377.154, 505.632, 45.7545, 0.4748 ) }
    dend_29 { pt3dadd( 377.808, 506.565, 45.9491, 0.433 ) }
    dend_29 { pt3dadd( 378.509, 507.459, 46.1658, 0.457 ) }
    dend_29 { pt3dadd( 379.066, 508.437, 46.4232, 0.4668 ) }
    dend_29 { pt3dadd( 379.587, 509.446, 46.6592, 0.4248 ) }
    dend_29 { pt3dadd( 380.324, 510.298, 46.8404, 0.4106 ) }
    dend_29 { pt3dadd( 380.683, 511.087, 47.1313, 0.532 ) }
    dend_29 { pt3dadd( 380.923, 512.094, 47.4832, 0.498 ) }
    dend_29 { pt3dadd( 381.184, 513.189, 47.8192, 0.5478 ) }
    dend_29 { pt3dadd( 381.588, 514.255, 48.0956, 0.55 ) }
    dend_29 { pt3dadd( 381.925, 515.342, 48.2938, 0.7638 ) }
    dend_29 { pt3dadd( 382.307, 516.409, 48.417, 0.8288 ) }
    dend_29 { pt3dadd( 382.458, 517.525, 48.51, 0.7276 ) }
    dend_29 { pt3dadd( 382.425, 518.571, 48.6696, 0.4716 ) }
    dend_29 { pt3dadd( 382.23, 519.667, 48.7189, 0.3294 ) }
    dend_29 { pt3dadd( 382.053, 520.797, 48.7572, 0.282 ) }
    dend_29 { pt3dadd( 382.001, 521.936, 48.8048, 0.2884 ) }
    dend_29 { pt3dadd( 381.617, 522.862, 48.6959, 0.2998 ) }
    dend_29 { pt3dadd( 381.543, 523.959, 48.6158, 0.3226 ) }
    dend_29 { pt3dadd( 381.581, 525.087, 48.6738, 0.3578 ) }
    dend_29 { pt3dadd( 381.986, 525.865, 49.0591, 0.4562 ) }
    dend_29 { pt3dadd( 381.565, 526.041, 49.7465, 0.4792 ) }
    dend_29 { pt3dadd( 381.871, 527.005, 50.4941, 0.6098 ) }
    dend_29 { pt3dadd( 381.987, 528.124, 51.1003, 0.6526 ) }
    dend_29 { pt3dadd( 381.599, 529.117, 51.5514, 0.5564 ) }
    dend_29 { pt3dadd( 381.458, 530.088, 51.7101, 0.5434 ) }
    dend_29 { pt3dadd( 381.027, 531.143, 51.6863, 0.6314 ) }
    dend_29 { pt3dadd( 380.424, 532.101, 51.6048, 0.4796 ) }
    dend_29 { pt3dadd( 380.435, 532.31, 51.4634, 0.3538 ) }
    dend_29 { pt3dadd( 380.442, 533.148, 51.1372, 0.28 ) }
    dend_29 { pt3dadd( 379.76, 533.987, 50.9222, 0.2846 ) }
    dend_29 { pt3dadd( 379.712, 534.993, 51.0143, 0.2932 ) }
    dend_29 { pt3dadd( 379.401, 534.921, 51.5432, 0.309 ) }
    dend_29 { pt3dadd( 379.188, 535.184, 52.2992, 0.3402 ) }
    dend_29 { pt3dadd( 379.254, 536.299, 52.9161, 0.3868 ) }
    dend_29 { pt3dadd( 379.254, 537.344, 53.2972, 0.5284 ) }
    dend_29 { pt3dadd( 378.896, 538.318, 53.7135, 0.5236 ) }
    dend_29 { pt3dadd( 378.612, 539.307, 54.1937, 0.4382 ) }
    dend_29 { pt3dadd( 378.568, 540.309, 54.7386, 0.4242 ) }
    dend_29 { pt3dadd( 378.339, 541.353, 55.2591, 0.3822 ) }
    dend_29 { pt3dadd( 378.339, 542.489, 55.6598, 0.384 ) }
    dend_29 { pt3dadd( 378.362, 543.596, 55.9527, 0.4576 ) }
    dend_29 { pt3dadd( 378.782, 544.506, 56.2951, 0.4814 ) }
    dend_29 { pt3dadd( 379.247, 545.526, 56.5121, 0.6148 ) }
    dend_29 { pt3dadd( 379.403, 546.639, 56.5566, 0.6572 ) }
    dend_29 { pt3dadd( 379.294, 547.777, 56.5734, 0.5872 ) }
    dend_29 { pt3dadd( 379.259, 548.845, 56.4558, 0.4922 ) }
    dend_29 { pt3dadd( 379.273, 549.725, 56.2047, 0.3754 ) }
    dend_29 { pt3dadd( 379.606, 550.674, 56.222, 0.3294 ) }
    dend_29 { pt3dadd( 379.781, 551.386, 56.5275, 0.3312 ) }
    dend_29 { pt3dadd( 380.067, 552.326, 56.8459, 0.37 ) }
    dend_29 { pt3dadd( 380.169, 553.447, 57.1777, 0.4972 ) }
    dend_29 { pt3dadd( 380.399, 554.404, 57.6909, 0.466 ) }
    dend_29 { pt3dadd( 380.636, 555.286, 58.2061, 0.3304 ) }
    dend_29 { pt3dadd( 380.857, 556.359, 58.9204, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 55/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 420.657, 441.472, 67.3604, 0.9274 ) }
    dend_18 { pt3dadd( 421.411, 441.701, 69.79, 0.9152 ) }
    dend_18 { pt3dadd( 421.638, 442.011, 71.4848, 0.6484 ) }
    dend_18 { pt3dadd( 422.458, 442.704, 72.032, 0.618 ) }
    dend_18 { pt3dadd( 423.289, 443.317, 72.6393, 0.5496 ) }
    dend_18 { pt3dadd( 423.661, 443.973, 73.4202, 0.4812 ) }
    dend_18 { pt3dadd( 424.544, 444.421, 73.9572, 0.5294 ) }
    dend_18 { pt3dadd( 425.656, 444.232, 74.3898, 0.454 ) }
    dend_18 { pt3dadd( 426.795, 444.245, 74.7533, 0.4286 ) }
    dend_18 { pt3dadd( 427.902, 444.439, 75.1587, 0.5118 ) }
    dend_18 { pt3dadd( 428.966, 444.812, 75.5191, 0.492 ) }
    dend_18 { pt3dadd( 429.599, 445.133, 76.0654, 0.3844 ) }
    dend_18 { pt3dadd( 429.768, 445.133, 76.9348, 0.2994 ) }
    dend_18 { pt3dadd( 430.437, 445.024, 77.6978, 0.2736 ) }
    dend_18 { pt3dadd( 431.302, 445.633, 78.1519, 0.2728 ) }
    dend_18 { pt3dadd( 432.265, 446.209, 78.356, 0.2712 ) }
    dend_18 { pt3dadd( 433.379, 446.278, 78.3163, 0.2684 ) }
    dend_18 { pt3dadd( 434.33, 446.455, 77.9624, 0.2626 ) }
    dend_18 { pt3dadd( 434.967, 447.323, 77.6619, 0.2542 ) }
    dend_18 { pt3dadd( 436.022, 447.67, 77.3724, 0.2288 ) }
    dend_18 { pt3dadd( 436.704, 448.108, 76.316, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 76/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 420.657, 441.472, 67.3604, 0.9274 ) }
    dend_17 { pt3dadd( 420.89, 441.57, 68.0302, 0.8208 ) }
    dend_17 { pt3dadd( 421.825, 441.276, 68.6756, 0.6224 ) }
    dend_17 { pt3dadd( 422.757, 440.677, 69.2488, 0.4856 ) }
    dend_17 { pt3dadd( 423.688, 440.31, 69.8818, 0.4844 ) }
    dend_17 { pt3dadd( 424.316, 439.627, 70.3651, 0.6298 ) }
    dend_17 { pt3dadd( 425.129, 439.183, 70.7888, 0.868 ) }
    dend_17 { pt3dadd( 426.144, 438.908, 71.0405, 1.0048 ) }
    dend_17 { pt3dadd( 427.182, 438.486, 71.2494, 0.9082 ) }
    dend_17 { pt3dadd( 428.098, 438.267, 71.6181, 0.5988 ) }
    dend_17 { pt3dadd( 428.946, 437.634, 71.8858, 0.4294 ) }
    dend_17 { pt3dadd( 429.854, 436.999, 72.0639, 0.44 ) }
    dend_17 { pt3dadd( 430.845, 436.435, 72.2352, 0.485 ) }
    dend_17 { pt3dadd( 431.794, 435.808, 72.445, 0.4458 ) }
    dend_17 { pt3dadd( 432.807, 435.329, 72.7059, 0.5116 ) }
    dend_17 { pt3dadd( 433.813, 434.852, 72.9386, 0.4188 ) }
    dend_17 { pt3dadd( 434.8, 434.354, 73.2102, 0.3736 ) }
    dend_17 { pt3dadd( 435.534, 433.925, 73.6725, 0.3598 ) }
    dend_17 { pt3dadd( 436.573, 433.69, 74.0393, 0.4524 ) }
    dend_17 { pt3dadd( 437.606, 433.919, 74.3672, 0.5078 ) }
    dend_17 { pt3dadd( 438.708, 433.753, 74.6746, 0.4886 ) }
    dend_17 { pt3dadd( 439.395, 433.236, 75.0436, 0.5876 ) }
    dend_17 { pt3dadd( 440.04, 432.629, 75.1145, 0.5748 ) }
    dend_17 { pt3dadd( 441.059, 432.538, 75.308, 0.5894 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_17 { pt3dadd( 442.08, 432.28, 75.607, 0.4314 ) }
    dend_17 { pt3dadd( 443.157, 432.282, 75.8044, 0.349 ) }
    dend_17 { pt3dadd( 444.239, 432.546, 75.9469, 0.318 ) }
    dend_17 { pt3dadd( 445.232, 432.344, 76.102, 0.357 ) }
    dend_17 { pt3dadd( 445.828, 431.384, 76.1362, 0.4176 ) }
    dend_17 { pt3dadd( 446.163, 430.918, 75.7338, 0.5874 ) }
    dend_17 { pt3dadd( 446.723, 430.207, 75.1979, 0.6224 ) }
    dend_17 { pt3dadd( 447.13, 429.927, 74.7074, 0.6744 ) }
    dend_17 { pt3dadd( 447.527, 429.565, 74.2322, 0.604 ) }
    dend_17 { pt3dadd( 448.49, 429.064, 73.68, 0.596 ) }
    dend_17 { pt3dadd( 449.489, 428.991, 73.1329, 0.4448 ) }
    dend_17 { pt3dadd( 449.886, 427.999, 72.7163, 0.3686 ) }
    dend_17 { pt3dadd( 450.417, 427.282, 72.2137, 0.3802 ) }
    dend_17 { pt3dadd( 450.928, 427.467, 71.5518, 0.3464 ) }
    dend_17 { pt3dadd( 451.556, 426.667, 71.076, 0.3242 ) }
    dend_17 { pt3dadd( 452.177, 425.948, 71.0105, 0.3142 ) }
    dend_17 { pt3dadd( 453.158, 425.453, 71.1749, 0.3736 ) }
    dend_17 { pt3dadd( 453.97, 424.682, 71.4431, 0.334 ) }
    dend_17 { pt3dadd( 454.763, 423.889, 71.7774, 0.3004 ) }
    dend_17 { pt3dadd( 455.24, 423.285, 72.3842, 0.2752 ) }
    dend_17 { pt3dadd( 455.918, 422.989, 73.0654, 0.2758 ) }
    dend_17 { pt3dadd( 457.032, 422.933, 73.4843, 0.2768 ) }
    dend_17 { pt3dadd( 458.105, 422.88, 73.6756, 0.2786 ) }
    dend_17 { pt3dadd( 458.926, 422.22, 73.7635, 0.282 ) }
    dend_17 { pt3dadd( 459.721, 421.561, 73.8545, 0.2884 ) }
    dend_17 { pt3dadd( 460.48, 421.54, 74.1852, 0.3 ) }
    dend_17 { pt3dadd( 461.537, 421.267, 74.4982, 0.3238 ) }
    dend_17 { pt3dadd( 462.471, 420.687, 74.6438, 0.3554 ) }
    dend_17 { pt3dadd( 463.498, 420.468, 74.6477, 0.4754 ) }
    dend_17 { pt3dadd( 464.449, 420.541, 74.4887, 0.399 ) }
    dend_17 { pt3dadd( 465.5, 420.152, 74.366, 0.336 ) }
    dend_17 { pt3dadd( 466.15, 419.647, 74.5158, 0.2954 ) }
    dend_17 { pt3dadd( 467.036, 419.159, 74.8742, 0.3078 ) }
    dend_17 { pt3dadd( 468.081, 418.755, 75.2752, 0.3616 ) }
    dend_17 { pt3dadd( 469.175, 418.476, 75.6764, 0.3136 ) }
    dend_17 { pt3dadd( 470.304, 418.356, 75.994, 0.2542 ) }
    dend_17 { pt3dadd( 471.264, 418.814, 76.316, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 37/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 389.825, 455.908, 22.2968, 1.0584 ) }
    dend_10 { pt3dadd( 390.433, 456.725, 21.8416, 1.1692 ) }
    dend_10 { pt3dadd( 391.116, 457.642, 21.4745, 1.2136 ) }
    dend_10 { pt3dadd( 391.969, 458.369, 21.2449, 0.9326 ) }
    dend_10 { pt3dadd( 392.774, 459.175, 21.0844, 0.8022 ) }
    dend_10 { pt3dadd( 393.666, 459.692, 20.8921, 0.7246 ) }
    dend_10 { pt3dadd( 394.466, 460.157, 20.5949, 0.6982 ) }
    dend_10 { pt3dadd( 395.388, 460.793, 20.3631, 0.538 ) }
    dend_10 { pt3dadd( 396.332, 461.3, 20.3416, 0.5506 ) }
    dend_10 { pt3dadd( 397.318, 461.806, 20.4323, 0.4448 ) }
    dend_10 { pt3dadd( 398.319, 462.314, 20.5626, 0.417 ) }
    dend_10 { pt3dadd( 399.25, 462.958, 20.6457, 0.4644 ) }
    dend_10 { pt3dadd( 400.008, 463.74, 20.5714, 0.5298 ) }
    dend_10 { pt3dadd( 400.502, 464.676, 20.32, 0.5306 ) }
    dend_10 { pt3dadd( 401.349, 465.403, 19.9928, 0.66 ) }
    dend_10 { pt3dadd( 402.46, 465.463, 19.7023, 0.7368 ) }
    dend_10 { pt3dadd( 403.49, 465.171, 19.375, 0.7548 ) }
    dend_10 { pt3dadd( 404.534, 465.189, 19.3212, 0.7054 ) }
    dend_10 { pt3dadd( 405.44, 465.631, 19.5096, 0.5576 ) }
    dend_10 { pt3dadd( 406.332, 466.242, 19.6843, 0.558 ) }
    dend_10 { pt3dadd( 407.225, 466.834, 19.6707, 0.5988 ) }
    dend_10 { pt3dadd( 408.227, 467.241, 19.5052, 0.7096 ) }
    dend_10 { pt3dadd( 409.273, 467.617, 19.2623, 0.7432 ) }
    dend_10 { pt3dadd( 410.365, 467.859, 19.054, 0.7246 ) }
    dend_10 { pt3dadd( 411.471, 467.913, 19.0095, 0.6252 ) }
    dend_10 { pt3dadd( 412.595, 467.948, 19.0409, 0.5276 ) }
    dend_10 { pt3dadd( 413.499, 468.432, 19.0352, 0.6126 ) }
    dend_10 { pt3dadd( 414.347, 469.146, 19.1668, 0.6222 ) }
    dend_10 { pt3dadd( 415.328, 469.678, 19.4327, 0.6716 ) }
    dend_10 { pt3dadd( 416.235, 470.221, 19.8343, 0.6112 ) }
    dend_10 { pt3dadd( 417.091, 470.771, 20.3589, 0.5502 ) }
    dend_10 { pt3dadd( 417.915, 471.548, 20.7941, 0.648 ) }
    dend_10 { pt3dadd( 418.737, 472.343, 21.1285, 0.7192 ) }
    dend_10 { pt3dadd( 419.57, 473.123, 21.3234, 0.699 ) }
    dend_10 { pt3dadd( 420.396, 473.909, 21.4064, 0.7158 ) }
    dend_10 { pt3dadd( 421.072, 474.822, 21.4785, 0.7114 ) }
    dend_10 { pt3dadd( 421.546, 475.827, 21.5618, 0.6476 ) }
    dend_10 { pt3dadd( 421.849, 476.911, 21.6807, 0.5702 ) }
    dend_10 { pt3dadd( 422.336, 477.904, 21.737, 0.6862 ) }
    dend_10 { pt3dadd( 422.99, 478.814, 21.6646, 0.785 ) }
    dend_10 { pt3dadd( 423.715, 479.656, 21.478, 0.8472 ) }
    dend_10 { pt3dadd( 424.505, 480.395, 21.1966, 0.8622 ) }
    dend_10 { pt3dadd( 425.241, 481.197, 21.0612, 0.9204 ) }
    dend_10 { pt3dadd( 425.688, 482.195, 21.0046, 0.8792 ) }
    dend_10 { pt3dadd( 426.253, 483.155, 20.883, 0.841 ) }
    dend_10 { pt3dadd( 426.915, 484.05, 20.7563, 0.8146 ) }
    dend_10 { pt3dadd( 427.762, 484.819, 20.6873, 0.7782 ) }
    dend_10 { pt3dadd( 428.613, 485.583, 20.6598, 0.8776 ) }
    dend_10 { pt3dadd( 429.472, 486.338, 20.6569, 0.939 ) }
    dend_10 { pt3dadd( 430.311, 487.102, 20.7155, 0.735 ) }
    dend_10 { pt3dadd( 431.116, 487.879, 20.8597, 0.526 ) }
    dend_10 { pt3dadd( 431.927, 488.662, 21.0126, 0.4604 ) }
    dend_10 { pt3dadd( 432.742, 489.448, 21.116, 0.6072 ) }
    dend_10 { pt3dadd( 433.229, 490.458, 21.1207, 0.7198 ) }
    dend_10 { pt3dadd( 433.648, 491.517, 21.0048, 0.5588 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 389.825, 455.908, 22.2968, 1.0584 ) }
    dend_9 { pt3dadd( 390.08, 456.982, 20.1309, 0.6864 ) }
    dend_9 { pt3dadd( 390.32, 458.022, 19.2007, 0.8468 ) }
    dend_9 { pt3dadd( 390.54, 459.123, 18.8186, 0.6986 ) }
    dend_9 { pt3dadd( 390.783, 460.216, 18.4078, 0.7204 ) }
    dend_9 { pt3dadd( 391.29, 461.229, 18.0118, 0.923 ) }
    dend_9 { pt3dadd( 391.783, 462.247, 17.644, 0.9696 ) }
    dend_9 { pt3dadd( 392.079, 463.326, 17.3324, 0.8228 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_9 { pt3dadd( 392.089, 464.466, 17.124, 0.7664 ) }
    dend_9 { pt3dadd( 391.854, 465.546, 16.9805, 0.7596 ) }
    dend_9 { pt3dadd( 390.873, 466.11, 16.8786, 0.7288 ) }
    dend_9 { pt3dadd( 389.93, 466.704, 16.7985, 0.7596 ) }
    dend_9 { pt3dadd( 389.137, 467.528, 16.7233, 0.849 ) }
    dend_9 { pt3dadd( 388.884, 468.627, 16.6375, 0.6282 ) }
    dend_9 { pt3dadd( 388.533, 469.623, 16.4265, 0.4946 ) }
    dend_9 { pt3dadd( 388.793, 470.738, 16.2367, 0.5098 ) }
    dend_9 { pt3dadd( 389.316, 471.678, 16.0842, 0.6346 ) }
    dend_9 { pt3dadd( 390.027, 472.49, 15.8212, 0.6244 ) }
    dend_9 { pt3dadd( 390.544, 473.431, 15.5304, 0.635 ) }
    dend_9 { pt3dadd( 390.727, 474.507, 15.3917, 0.5118 ) }
    dend_9 { pt3dadd( 390.741, 475.639, 15.2918, 0.5192 ) }
    dend_9 { pt3dadd( 391.145, 476.705, 15.158, 0.5308 ) }
    dend_9 { pt3dadd( 391.569, 477.768, 14.9799, 0.5638 ) }
    dend_9 { pt3dadd( 391.835, 478.854, 14.6844, 0.5696 ) }
    dend_9 { pt3dadd( 392.059, 479.948, 14.2558, 0.6194 ) }
    dend_9 { pt3dadd( 392.328, 480.946, 13.6394, 0.5234 ) }
    dend_9 { pt3dadd( 392.612, 481.91, 12.8874, 0.5718 ) }
    dend_9 { pt3dadd( 393.377, 482.649, 12.1191, 0.4792 ) }
    dend_9 { pt3dadd( 394.072, 483.465, 11.4072, 0.5048 ) }
    dend_9 { pt3dadd( 394.522, 484.514, 10.8592, 0.5108 ) }
    dend_9 { pt3dadd( 394.85, 485.586, 10.4599, 0.494 ) }
    dend_9 { pt3dadd( 394.792, 486.727, 10.1993, 0.5978 ) }
    dend_9 { pt3dadd( 394.734, 487.87, 10.037, 0.5934 ) }
    dend_9 { pt3dadd( 394.284, 488.788, 9.8386, 0.6246 ) }
    dend_9 { pt3dadd( 393.768, 489.726, 9.8001, 0.4926 ) }
    dend_9 { pt3dadd( 393.513, 490.793, 9.6989, 0.483 ) }
    dend_9 { pt3dadd( 393.661, 491.89, 9.6066, 0.4682 ) }
    dend_9 { pt3dadd( 393.968, 492.984, 9.5934, 0.4254 ) }
    dend_9 { pt3dadd( 394.516, 493.92, 9.6974, 0.4204 ) }
    dend_9 { pt3dadd( 395.203, 494.835, 9.773, 0.5076 ) }
    dend_9 { pt3dadd( 395.891, 495.748, 9.798, 0.6602 ) }
    dend_9 { pt3dadd( 396.689, 496.56, 9.7863, 0.5278 ) }
    dend_9 { pt3dadd( 397.074, 497.589, 9.7146, 0.4688 ) }
    dend_9 { pt3dadd( 396.879, 498.672, 9.525, 0.3702 ) }
    dend_9 { pt3dadd( 396.986, 499.659, 9.2289, 0.3632 ) }
    dend_9 { pt3dadd( 397.514, 500.674, 8.9378, 0.412 ) }
    dend_9 { pt3dadd( 397.949, 501.701, 8.6166, 0.431 ) }
    dend_9 { pt3dadd( 398.071, 502.783, 8.1993, 0.356 ) }
    dend_9 { pt3dadd( 398.071, 503.885, 7.9404, 0.2938 ) }
    dend_9 { pt3dadd( 398.071, 504.971, 7.5982, 0.2626 ) }
    dend_9 { pt3dadd( 398.071, 506.048, 7.1636, 0.2542 ) }
    dend_9 { pt3dadd( 398.259, 507.126, 6.697, 0.2288 ) }
    dend_9 { pt3dadd( 398.528, 508.204, 5.658, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 45/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 338.419, 461.403, 46.9188, 0.8236 ) }
    apic_21 { pt3dadd( 337.67, 462.4, 46.7244, 0.8152 ) }
    apic_21 { pt3dadd( 336.97, 463.302, 46.5962, 0.8478 ) }
    apic_21 { pt3dadd( 336.146, 464.067, 46.5741, 0.675 ) }
    apic_21 { pt3dadd( 335.262, 464.75, 46.5732, 0.5712 ) }
    apic_21 { pt3dadd( 334.271, 465.286, 46.4926, 0.4712 ) }
    apic_21 { pt3dadd( 333.328, 465.912, 46.3674, 0.5234 ) }
    apic_21 { pt3dadd( 332.422, 466.606, 46.2202, 0.6114 ) }
    apic_21 { pt3dadd( 331.494, 467.26, 46.046, 0.5882 ) }
    apic_21 { pt3dadd( 330.557, 467.894, 45.8556, 0.5358 ) }
    apic_21 { pt3dadd( 329.822, 468.754, 45.7274, 0.4826 ) }
    apic_21 { pt3dadd( 329.135, 469.669, 45.6739, 0.3994 ) }
    apic_21 { pt3dadd( 328.212, 470.276, 45.7464, 0.3998 ) }
    apic_21 { pt3dadd( 327.232, 470.807, 45.9228, 0.3358 ) }
    apic_21 { pt3dadd( 326.151, 471.178, 46.0748, 0.3034 ) }
    apic_21 { pt3dadd( 325.067, 471.547, 46.1922, 0.281 ) }
    apic_21 { pt3dadd( 323.946, 471.756, 46.2644, 0.2866 ) }
    apic_21 { pt3dadd( 322.814, 471.921, 46.2913, 0.2968 ) }
    apic_21 { pt3dadd( 321.685, 472.099, 46.2753, 0.3164 ) }
    apic_21 { pt3dadd( 320.56, 472.311, 46.2311, 0.348 ) }
    apic_21 { pt3dadd( 319.436, 472.523, 46.1709, 0.4312 ) }
    apic_21 { pt3dadd( 318.445, 473.075, 46.0586, 0.4664 ) }
    apic_21 { pt3dadd( 317.435, 473.593, 45.9175, 0.4226 ) }
    apic_21 { pt3dadd( 316.362, 473.983, 45.7878, 0.4128 ) }
    apic_21 { pt3dadd( 315.309, 474.389, 45.6198, 0.5058 ) }
    apic_21 { pt3dadd( 314.316, 474.842, 45.3088, 0.5964 ) }
    apic_21 { pt3dadd( 313.394, 475.437, 44.9263, 0.7042 ) }
    apic_21 { pt3dadd( 312.553, 476.193, 44.5376, 0.739 ) }
    apic_21 { pt3dadd( 311.604, 476.786, 44.1476, 0.6882 ) }
    apic_21 { pt3dadd( 310.596, 477.289, 43.7606, 0.6958 ) }
    apic_21 { pt3dadd( 309.644, 477.916, 43.4353, 0.6746 ) }
    apic_21 { pt3dadd( 308.767, 478.565, 43.2524, 0.5776 ) }
    apic_21 { pt3dadd( 307.92, 479.282, 43.157, 0.4496 ) }
    apic_21 { pt3dadd( 307.23, 480.167, 43.0058, 0.4174 ) }
    apic_21 { pt3dadd( 306.619, 480.823, 42.5849, 0.5068 ) }
    apic_21 { pt3dadd( 305.728, 481.309, 42.0456, 0.6352 ) }
    apic_21 { pt3dadd( 304.771, 481.876, 41.6044, 0.5958 ) }
    apic_21 { pt3dadd( 304.623, 482.913, 41.3622, 0.726 ) }
    apic_21 { pt3dadd( 304.806, 483.953, 41.0432, 0.6674 ) }
    apic_21 { pt3dadd( 304.896, 485.03, 40.7977, 0.6424 ) }
    apic_21 { pt3dadd( 304.225, 485.943, 40.6339, 0.6468 ) }
    apic_21 { pt3dadd( 303.416, 486.75, 40.5026, 0.6384 ) }
    apic_21 { pt3dadd( 302.557, 487.497, 40.3679, 0.4746 ) }
    apic_21 { pt3dadd( 301.644, 488.115, 40.1478, 0.4322 ) }
    apic_21 { pt3dadd( 300.958, 488.974, 39.6049, 0.2288 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 90/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 338.419, 461.403, 46.9188, 0.8236 ) }
    apic_20 { pt3dadd( 338.642, 461.279, 47.1346, 0.6864 ) }
    apic_20 { pt3dadd( 337.831, 461.988, 46.3518, 0.5036 ) }
    apic_20 { pt3dadd( 337.265, 461.619, 45.8721, 0.4612 ) }
    apic_20 { pt3dadd( 336.207, 461.382, 45.4079, 0.403 ) }
    apic_20 { pt3dadd( 335.767, 461.141, 45.3488, 0.4248 ) }
    apic_20 { pt3dadd( 335.04, 460.696, 45.4294, 0.523 ) }
    apic_20 { pt3dadd( 333.961, 460.834, 45.3816, 0.6526 ) }
    apic_20 { pt3dadd( 332.867, 460.802, 45.2614, 0.6898 ) }
    apic_20 { pt3dadd( 331.814, 460.435, 45.1601, 0.6004 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_20 { pt3dadd( 330.803, 460.023, 44.9652, 0.5164 ) }
    apic_20 { pt3dadd( 329.76, 459.628, 44.7712, 0.4222 ) }
    apic_20 { pt3dadd( 328.647, 459.396, 44.623, 0.4072 ) }
    apic_20 { pt3dadd( 327.58, 459.03, 44.4788, 0.5192 ) }
    apic_20 { pt3dadd( 326.533, 458.586, 44.3139, 0.5058 ) }
    apic_20 { pt3dadd( 325.487, 458.159, 44.107, 0.4102 ) }
    apic_20 { pt3dadd( 324.378, 457.987, 43.9138, 0.347 ) }
    apic_20 { pt3dadd( 323.246, 457.891, 43.7265, 0.3622 ) }
    apic_20 { pt3dadd( 322.182, 457.59, 43.5268, 0.4348 ) }
    apic_20 { pt3dadd( 321.198, 457.039, 43.3874, 0.5832 ) }
    apic_20 { pt3dadd( 320.083, 456.784, 43.2978, 0.7912 ) }
    apic_20 { pt3dadd( 318.956, 456.593, 43.2513, 0.8162 ) }
    apic_20 { pt3dadd( 317.813, 456.576, 43.2244, 0.7828 ) }
    apic_20 { pt3dadd( 316.669, 456.576, 43.2079, 0.6506 ) }
    apic_20 { pt3dadd( 315.53, 456.514, 43.1931, 0.7466 ) }
    apic_20 { pt3dadd( 314.408, 456.335, 43.1634, 0.8694 ) }
    apic_20 { pt3dadd( 313.327, 455.987, 43.1166, 0.9084 ) }
    apic_20 { pt3dadd( 312.257, 455.603, 43.1105, 0.7524 ) }
    apic_20 { pt3dadd( 311.168, 455.399, 43.2169, 0.6558 ) }
    apic_20 { pt3dadd( 310.127, 455.203, 43.4344, 0.6852 ) }
    apic_20 { pt3dadd( 309.021, 455.178, 43.6682, 0.6432 ) }
    apic_20 { pt3dadd( 308.468, 454.539, 43.6246, 0.8048 ) }
    apic_20 { pt3dadd( 307.525, 454.517, 43.3552, 0.8588 ) }
    apic_20 { pt3dadd( 306.699, 454.482, 43.2471, 0.7768 ) }
    apic_20 { pt3dadd( 305.988, 454.008, 43.2334, 0.5932 ) }
    apic_20 { pt3dadd( 304.93, 453.627, 43.1614, 0.4068 ) }
    apic_20 { pt3dadd( 303.953, 453.829, 42.6471, 0.4576 ) }
    // Section: apic_17, id: apic_17, parent: apic_13 (entry count 27/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 330.733, 390.081, 35.7518, 0.4274 ) }
    apic_17 { pt3dadd( 329.957, 389.414, 36.1844, 0.3726 ) }
    apic_17 { pt3dadd( 328.988, 389.214, 36.6134, 0.4404 ) }
    apic_17 { pt3dadd( 328.249, 388.351, 36.8978, 0.6588 ) }
    apic_17 { pt3dadd( 327.588, 387.421, 37.0479, 0.614 ) }
    apic_17 { pt3dadd( 327.103, 386.43, 37.067, 0.6544 ) }
    apic_17 { pt3dadd( 326.81, 385.333, 37.03, 0.8172 ) }
    apic_17 { pt3dadd( 326.472, 384.258, 37.0068, 0.6928 ) }
    apic_17 { pt3dadd( 326.039, 383.229, 37.1064, 0.7 ) }
    apic_17 { pt3dadd( 325.544, 382.216, 37.2845, 0.7034 ) }
    apic_17 { pt3dadd( 324.974, 381.224, 37.4836, 0.5288 ) }
    apic_17 { pt3dadd( 324.49, 380.195, 37.7084, 0.3978 ) }
    apic_17 { pt3dadd( 324.142, 379.106, 37.9543, 0.3632 ) }
    apic_17 { pt3dadd( 323.808, 378.03, 38.243, 0.4304 ) }
    apic_17 { pt3dadd( 323.533, 377.012, 38.6876, 0.6052 ) }
    apic_17 { pt3dadd( 323.22, 375.979, 39.2235, 0.6862 ) }
    apic_17 { pt3dadd( 322.934, 374.882, 39.7071, 0.642 ) }
    apic_17 { pt3dadd( 322.489, 373.874, 40.1461, 0.5894 ) }
    apic_17 { pt3dadd( 321.462, 373.598, 40.6484, 0.5774 ) }
    apic_17 { pt3dadd( 320.5, 373.46, 41.2689, 0.5976 ) }
    apic_17 { pt3dadd( 319.942, 372.554, 41.9233, 0.6584 ) }
    apic_17 { pt3dadd( 319.41, 371.576, 42.511, 0.6586 ) }
    apic_17 { pt3dadd( 318.889, 370.558, 43.0002, 0.518 ) }
    apic_17 { pt3dadd( 318.33, 369.605, 43.4532, 0.483 ) }
    apic_17 { pt3dadd( 317.81, 368.693, 43.8203, 0.4676 ) }
    apic_17 { pt3dadd( 317.118, 367.889, 44.1308, 0.4266 ) }
    apic_17 { pt3dadd( 317.311, 366.891, 44.518, 0.4124 ) }
    apic_17 { pt3dadd( 317.981, 366.027, 44.9571, 0.5424 ) }
    apic_17 { pt3dadd( 318.329, 365.122, 45.4664, 0.483 ) }
    apic_17 { pt3dadd( 318.365, 363.984, 46.3943, 0.6864 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 57/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 330.733, 390.081, 35.7518, 0.4274 ) }
    apic_14 { pt3dadd( 330.733, 388.788, 36.2102, 0.2288 ) }
    apic_14 { pt3dadd( 330.715, 387.644, 36.111, 0.3856 ) }
    apic_14 { pt3dadd( 330.697, 386.5, 36.0718, 0.3566 ) }
    apic_14 { pt3dadd( 330.674, 385.358, 36.017, 0.3416 ) }
    apic_14 { pt3dadd( 330.627, 384.214, 35.9391, 0.3534 ) }
    apic_14 { pt3dadd( 330.58, 383.071, 35.8299, 0.4126 ) }
    apic_14 { pt3dadd( 330.734, 381.938, 35.6793, 0.5708 ) }
    apic_14 { pt3dadd( 330.882, 380.806, 35.4869, 0.6276 ) }
    apic_14 { pt3dadd( 330.655, 379.72, 35.1646, 0.5078 ) }
    apic_14 { pt3dadd( 330.427, 378.634, 34.7379, 0.464 ) }
    // Section: apic_10, id: apic_10, parent: apic_2 (entry count 68/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 327.947, 415.511, 42.8764, 1.3148 ) }
    apic_10 { pt3dadd( 327.895, 414.318, 41.9838, 0.6864 ) }
    apic_10 { pt3dadd( 328.22, 413.222, 41.9698, 0.4824 ) }
    apic_10 { pt3dadd( 328.868, 412.396, 42.0358, 0.399 ) }
    apic_10 { pt3dadd( 329.725, 411.812, 42.1302, 0.3998 ) }
    apic_10 { pt3dadd( 330.776, 411.564, 42.0244, 0.5604 ) }
    apic_10 { pt3dadd( 331.743, 411.062, 41.8082, 0.545 ) }
    apic_10 { pt3dadd( 332.662, 410.41, 41.5439, 0.6624 ) }
    apic_10 { pt3dadd( 333.628, 409.797, 41.3165, 0.63 ) }
    apic_10 { pt3dadd( 334.659, 409.303, 41.1186, 0.869 ) }
    apic_10 { pt3dadd( 335.696, 408.82, 40.962, 0.7748 ) }
    apic_10 { pt3dadd( 336.734, 408.337, 40.85, 0.9212 ) }
    apic_10 { pt3dadd( 337.77, 407.854, 40.7509, 1.007 ) }
    apic_10 { pt3dadd( 338.821, 407.421, 40.6067, 0.9228 ) }
    apic_10 { pt3dadd( 339.876, 407.009, 40.4001, 0.8034 ) }
    apic_10 { pt3dadd( 340.932, 406.597, 40.1492, 0.633 ) }
    apic_10 { pt3dadd( 341.988, 406.185, 39.87, 0.7554 ) }
    apic_10 { pt3dadd( 343.042, 405.748, 39.6158, 0.6852 ) }
    apic_10 { pt3dadd( 344.095, 405.3, 39.3904, 0.8524 ) }
    apic_10 { pt3dadd( 345.147, 404.852, 39.1751, 0.864 ) }
    apic_10 { pt3dadd( 346.199, 404.405, 38.9446, 0.9622 ) }
    apic_10 { pt3dadd( 347.315, 404.286, 38.7411, 0.7702 ) }
    apic_10 { pt3dadd( 348.344, 404.242, 38.4306, 0.6292 ) }
    apic_10 { pt3dadd( 349.176, 404.242, 37.7908, 0.6976 ) }
    apic_10 { pt3dadd( 349.94, 403.936, 36.9328, 0.8248 ) }
    apic_10 { pt3dadd( 350.677, 403.373, 36.0013, 0.8298 ) }
    apic_10 { pt3dadd( 351.485, 402.566, 35.2503, 0.5864 ) }
    apic_10 { pt3dadd( 352.379, 401.866, 34.6814, 0.447 ) }
    apic_10 { pt3dadd( 353.402, 401.385, 34.2997, 0.505 ) }
    apic_10 { pt3dadd( 354.513, 401.115, 34.0766, 0.4484 ) }
    apic_10 { pt3dadd( 355.625, 400.845, 33.9366, 0.4532 ) }
    apic_10 { pt3dadd( 356.736, 400.575, 33.8131, 0.3886 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 0/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 327.947, 415.511, 42.8764, 1.3148 ) }
    apic_3 { pt3dadd( 326.689, 414.619, 42.8952, 1.2696 ) }
    apic_3 { pt3dadd( 325.715, 414.019, 42.982, 1.1602 ) }
    apic_3 { pt3dadd( 324.744, 413.567, 43.2079, 1.0808 ) }
    apic_3 { pt3dadd( 323.993, 413.241, 43.7254, 1.0228 ) }
    apic_3 { pt3dadd( 323.057, 412.791, 44.322, 0.9382 ) }
    apic_3 { pt3dadd( 322.287, 412.02, 44.7611, 0.899 ) }
    apic_3 { pt3dadd( 321.399, 411.328, 45.1615, 0.9416 ) }
    apic_3 { pt3dadd( 320.687, 411.034, 45.5182, 0.9184 ) }
    apic_3 { pt3dadd( 319.713, 410.434, 45.7307, 0.9144 ) }
    apic_3 { pt3dadd( 318.739, 409.836, 45.8304, 0.9466 ) }
    apic_3 { pt3dadd( 317.765, 409.236, 45.8811, 1.0434 ) }
    apic_3 { pt3dadd( 316.792, 408.637, 45.9169, 1.2704 ) }
    apic_3 { pt3dadd( 315.822, 408.035, 45.9696, 1.4614 ) }
    apic_3 { pt3dadd( 314.851, 407.433, 46.0536, 1.5588 ) }
    apic_3 { pt3dadd( 313.883, 406.83, 46.1745, 1.3838 ) }
    apic_3 { pt3dadd( 312.914, 406.229, 46.3232, 1.183 ) }
    apic_3 { pt3dadd( 311.997, 405.545, 46.4666, 0.8964 ) }
    apic_3 { pt3dadd( 311.086, 404.852, 46.6043, 0.6368 ) }
    apic_3 { pt3dadd( 310.175, 404.161, 46.7401, 0.665 ) }
    apic_3 { pt3dadd( 309.358, 403.375, 46.9193, 0.5332 ) }
    apic_3 { pt3dadd( 308.588, 402.544, 47.1554, 0.4968 ) }
    apic_3 { pt3dadd( 307.818, 401.712, 47.434, 0.562 ) }
    apic_3 { pt3dadd( 307.029, 400.907, 47.7481, 0.726 ) }
    apic_3 { pt3dadd( 306.204, 400.147, 48.09, 0.8212 ) }
    apic_3 { pt3dadd( 305.379, 399.386, 48.4358, 0.8672 ) }
    apic_3 { pt3dadd( 304.582, 398.6, 48.7477, 0.9002 ) }
    apic_3 { pt3dadd( 303.933, 397.669, 48.9132, 0.9858 ) }
    apic_3 { pt3dadd( 303.285, 396.738, 48.9695, 1.0266 ) }
    apic_3 { pt3dadd( 302.635, 395.807, 48.9488, 0.9868 ) }
    apic_3 { pt3dadd( 302.36, 395.277, 49.0244, 1.017 ) }
    apic_3 { pt3dadd( 301.673, 394.65, 49.1711, 1.025 ) }
    apic_3 { pt3dadd( 301.094, 393.868, 49.3002, 1.0448 ) }
    apic_3 { pt3dadd( 300.415, 393.108, 49.4278, 0.8274 ) }
    apic_3 { pt3dadd( 299.858, 392.369, 49.4424, 0.7438 ) }
    apic_3 { pt3dadd( 299.192, 391.884, 49.7246, 0.6382 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 433.648, 491.517, 21.0048, 0.5588 ) }
    dend_12 { pt3dadd( 433.753, 492.859, 24.1248, 0.9152 ) }
    dend_12 { pt3dadd( 433.8, 493.98, 24.4227, 0.6164 ) }
    dend_12 { pt3dadd( 433.8, 495.123, 24.516, 0.5644 ) }
    dend_12 { pt3dadd( 434.199, 496.027, 24.7804, 0.4226 ) }
    dend_12 { pt3dadd( 434.938, 496.304, 25.2891, 0.3796 ) }
    dend_12 { pt3dadd( 435.622, 497.002, 25.7092, 0.3762 ) }
    dend_12 { pt3dadd( 435.758, 497.872, 25.7792, 0.4568 ) }
    dend_12 { pt3dadd( 436.541, 498.668, 25.8247, 0.6426 ) }
    dend_12 { pt3dadd( 437.063, 499.599, 25.9795, 0.811 ) }
    dend_12 { pt3dadd( 437.637, 500.546, 26.1615, 0.6054 ) }
    dend_12 { pt3dadd( 437.904, 501.559, 26.2751, 0.45 ) }
    dend_12 { pt3dadd( 437.923, 502.681, 26.3088, 0.4374 ) }
    dend_12 { pt3dadd( 437.962, 503.819, 26.3482, 0.4504 ) }
    dend_12 { pt3dadd( 438.108, 504.954, 26.3805, 0.5258 ) }
    dend_12 { pt3dadd( 438.273, 506.085, 26.4051, 0.6468 ) }
    dend_12 { pt3dadd( 438.382, 507.215, 26.469, 0.5028 ) }
    dend_12 { pt3dadd( 438.4, 508.244, 26.6872, 0.4238 ) }
    dend_12 { pt3dadd( 438.69, 509.143, 26.9994, 0.2796 ) }
    dend_12 { pt3dadd( 439.297, 510.035, 27.1578, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 56/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 433.648, 491.517, 21.0048, 0.5588 ) }
    dend_11 { pt3dadd( 434.079, 491.173, 20.5586, 0.4552 ) }
    dend_11 { pt3dadd( 434.84, 490.636, 19.78, 0.4604 ) }
    dend_11 { pt3dadd( 435.372, 489.951, 18.7518, 0.6566 ) }
    dend_11 { pt3dadd( 435.655, 489.277, 17.5987, 0.8006 ) }
    dend_11 { pt3dadd( 434.787, 488.783, 16.5242, 0.762 ) }
    dend_11 { pt3dadd( 433.957, 488.165, 15.4705, 0.5716 ) }
    dend_11 { pt3dadd( 433.397, 487.345, 14.4796, 0.5672 ) }
    dend_11 { pt3dadd( 433.713, 488.257, 13.7128, 0.4694 ) }
    dend_11 { pt3dadd( 433.339, 488.616, 12.8569, 0.4928 ) }
    dend_11 { pt3dadd( 432.658, 488.072, 12.0537, 0.4574 ) }
    dend_11 { pt3dadd( 431.633, 488.059, 11.2893, 0.546 ) }
    dend_11 { pt3dadd( 430.534, 488.059, 10.7626, 0.6484 ) }
    dend_11 { pt3dadd( 429.412, 488.059, 10.497, 0.6808 ) }
    dend_11 { pt3dadd( 428.443, 487.823, 10.493, 0.5902 ) }
    dend_11 { pt3dadd( 427.51, 487.268, 10.6266, 0.467 ) }
    dend_11 { pt3dadd( 426.809, 486.732, 10.4681, 0.4786 ) }
    dend_11 { pt3dadd( 426.163, 485.826, 10.2331, 0.4786 ) }
    dend_11 { pt3dadd( 425.5, 484.897, 9.9298, 0.5846 ) }
    dend_11 { pt3dadd( 425.031, 484.004, 9.4632, 0.723 ) }
    dend_11 { pt3dadd( 424.26, 483.531, 8.86, 0.8036 ) }
    dend_11 { pt3dadd( 423.242, 483.01, 8.3775, 0.893 ) }
    dend_11 { pt3dadd( 422.27, 482.41, 8.0412, 0.6638 ) }
    dend_11 { pt3dadd( 421.535, 481.653, 7.764, 0.5538 ) }
    dend_11 { pt3dadd( 421.392, 480.573, 7.4573, 0.6518 ) }
    dend_11 { pt3dadd( 420.914, 479.553, 7.245, 0.74 ) }
    dend_11 { pt3dadd( 420.05, 478.899, 7.1869, 0.901 ) }
    dend_11 { pt3dadd( 419.096, 478.489, 7.3107, 0.983 ) }
    dend_11 { pt3dadd( 418.289, 478.049, 7.1917, 0.8136 ) }
    dend_11 { pt3dadd( 417.309, 477.529, 6.7894, 0.6864 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 86/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 330.427, 378.634, 34.7379, 0.464 ) }
    apic_16 { pt3dadd( 330.578, 378.079, 34.1547, 0.4332 ) }
    apic_16 { pt3dadd( 331.486, 377.664, 33.7996, 0.3602 ) }
    apic_16 { pt3dadd( 332.389, 377.091, 33.411, 0.3016 ) }
    apic_16 { pt3dadd( 333.128, 376.704, 32.8555, 0.2776 ) }
    apic_16 { pt3dadd( 333.721, 376.885, 32.1325, 0.2804 ) }
    apic_16 { pt3dadd( 333.985, 377.637, 31.386, 0.2852 ) }
    apic_16 { pt3dadd( 334.897, 378.031, 30.9056, 0.2954 ) }
    apic_16 { pt3dadd( 335.517, 377.848, 30.987, 0.3078 ) }
    apic_16 { pt3dadd( 336.334, 378.283, 31.4622, 0.3616 ) }
    apic_16 { pt3dadd( 336.784, 378.703, 32.326, 0.3136 ) }
    apic_16 { pt3dadd( 337.616, 379.353, 33.1985, 0.2542 ) }
    apic_16 { pt3dadd( 338.285, 380.138, 34.7911, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 99/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 330.427, 378.634, 34.7379, 0.464 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_15 { pt3dadd( 330.046, 377.569, 34.3252, 0.2288 ) }
    apic_15 { pt3dadd( 329.665, 376.502, 33.1061, 0.3898 ) }
    apic_15 { pt3dadd( 329.245, 375.493, 32.599, 0.3588 ) }
    apic_15 { pt3dadd( 328.901, 374.482, 31.9875, 0.3728 ) }
    apic_15 { pt3dadd( 328.575, 373.455, 31.3485, 0.2796 ) }
    apic_15 { pt3dadd( 328.901, 373.141, 29.4207, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 6/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 356.736, 400.575, 33.8131, 0.3886 ) }
    apic_12 { pt3dadd( 358.115, 400.402, 33.5555, 0.3956 ) }
    apic_12 { pt3dadd( 359.231, 400.264, 33.2066, 0.4808 ) }
    apic_12 { pt3dadd( 360.346, 400.124, 32.788, 0.5164 ) }
    apic_12 { pt3dadd( 361.462, 399.985, 32.3254, 0.7188 ) }
    apic_12 { pt3dadd( 362.537, 399.698, 31.8293, 0.6602 ) }
    apic_12 { pt3dadd( 363.604, 399.385, 31.3272, 0.8276 ) }
    apic_12 { pt3dadd( 364.673, 399.073, 30.8482, 0.7138 ) }
    apic_12 { pt3dadd( 365.741, 398.761, 30.3996, 0.5026 ) }
    apic_12 { pt3dadd( 366.878, 398.675, 30.0782, 0.3398 ) }
    apic_12 { pt3dadd( 368.02, 398.603, 29.8673, 0.3012 ) }
    apic_12 { pt3dadd( 369.162, 398.532, 29.7433, 0.3246 ) }
    apic_12 { pt3dadd( 370.303, 398.46, 29.6814, 0.3644 ) }
    apic_12 { pt3dadd( 371.442, 398.348, 29.659, 0.4562 ) }
    apic_12 { pt3dadd( 372.578, 398.214, 29.6548, 0.5382 ) }
    apic_12 { pt3dadd( 373.714, 398.08, 29.6503, 0.431 ) }
    apic_12 { pt3dadd( 374.85, 397.946, 29.6439, 0.3482 ) }
    apic_12 { pt3dadd( 375.987, 397.825, 29.6352, 0.3176 ) }
    apic_12 { pt3dadd( 377.131, 397.825, 29.6229, 0.3504 ) }
    apic_12 { pt3dadd( 378.275, 397.825, 29.6055, 0.4352 ) }
    apic_12 { pt3dadd( 379.419, 397.825, 29.5812, 0.475 ) }
    apic_12 { pt3dadd( 380.563, 397.825, 29.5478, 0.4322 ) }
    apic_12 { pt3dadd( 381.707, 397.825, 29.5044, 0.4614 ) }
    apic_12 { pt3dadd( 382.812, 398.025, 29.4358, 0.4464 ) }
    apic_12 { pt3dadd( 383.874, 398.445, 29.332, 0.5246 ) }
    apic_12 { pt3dadd( 384.934, 398.865, 29.2043, 0.6136 ) }
    apic_12 { pt3dadd( 385.996, 399.285, 29.0674, 0.5922 ) }
    apic_12 { pt3dadd( 387.065, 399.597, 28.9198, 0.543 ) }
    apic_12 { pt3dadd( 388.149, 399.711, 28.7146, 0.4972 ) }
    apic_12 { pt3dadd( 389.226, 399.985, 28.5653, 0.4208 ) }
    apic_12 { pt3dadd( 390.298, 400.379, 28.534, 0.466 ) }
    apic_12 { pt3dadd( 391.347, 400.517, 28.7067, 0.3304 ) }
    apic_12 { pt3dadd( 392.388, 400.575, 29.666, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 39/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 356.736, 400.575, 33.8131, 0.3886 ) }
    apic_11 { pt3dadd( 356.053, 400.181, 34.9303, 0.9152 ) }
    apic_11 { pt3dadd( 356.443, 399.433, 34.6906, 0.8102 ) }
    apic_11 { pt3dadd( 357.126, 398.637, 34.4971, 0.651 ) }
    apic_11 { pt3dadd( 357.766, 397.705, 34.323, 0.5344 ) }
    apic_11 { pt3dadd( 358.619, 396.974, 34.249, 0.5952 ) }
    apic_11 { pt3dadd( 359.455, 396.238, 34.2432, 0.7352 ) }
    apic_11 { pt3dadd( 360.077, 395.306, 34.1312, 0.864 ) }
    apic_11 { pt3dadd( 360.615, 394.325, 33.9606, 0.821 ) }
    apic_11 { pt3dadd( 360.963, 393.235, 33.7991, 0.7376 ) }
    apic_11 { pt3dadd( 361.299, 392.145, 33.6174, 0.601 ) }
    apic_11 { pt3dadd( 361.544, 391.044, 33.3642, 0.488 ) }
    apic_11 { pt3dadd( 361.802, 389.951, 33.0733, 0.5122 ) }
    apic_11 { pt3dadd( 362.489, 389.035, 32.8356, 0.5674 ) }
    apic_11 { pt3dadd( 363.179, 388.123, 32.6301, 0.6196 ) }
    apic_11 { pt3dadd( 363.975, 387.301, 32.4411, 0.7308 ) }
    apic_11 { pt3dadd( 364.767, 386.482, 32.2574, 0.6374 ) }
    apic_11 { pt3dadd( 365.411, 385.696, 31.908, 0.5476 ) }
    apic_11 { pt3dadd( 366.163, 384.966, 31.4997, 0.4328 ) }
    apic_11 { pt3dadd( 366.878, 384.214, 31.2368, 0.4264 ) }
    apic_11 { pt3dadd( 367.454, 383.251, 30.9795, 0.5568 ) }
    apic_11 { pt3dadd( 368.057, 382.283, 30.7695, 0.565 ) }
    apic_11 { pt3dadd( 368.582, 381.268, 30.6334, 0.5706 ) }
    apic_11 { pt3dadd( 368.98, 380.256, 30.4514, 0.3982 ) }
    apic_11 { pt3dadd( 369.14, 379.196, 30.3719, 0.2796 ) }
    apic_11 { pt3dadd( 368.753, 378.177, 30.5525, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_3 (entry count 65/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 299.192, 391.884, 49.7246, 0.6382 ) }
    apic_9 { pt3dadd( 299.301, 391.461, 51.0476, 0.9152 ) }
    apic_9 { pt3dadd( 299.271, 390.849, 50.5165, 0.9558 ) }
    apic_9 { pt3dadd( 299.264, 389.804, 50.3639, 0.7878 ) }
    apic_9 { pt3dadd( 299.064, 389.065, 50.4888, 0.7486 ) }
    apic_9 { pt3dadd( 298.616, 388.502, 50.4879, 0.726 ) }
    apic_9 { pt3dadd( 297.811, 388.073, 50.5795, 0.6694 ) }
    apic_9 { pt3dadd( 296.903, 387.559, 50.694, 0.6356 ) }
    apic_9 { pt3dadd( 296.411, 386.901, 51.52, 0.6864 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 74/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 299.192, 391.884, 49.7246, 0.6382 ) }
    apic_4 { pt3dadd( 298.623, 391.019, 49.9414, 0.6616 ) }
    apic_4 { pt3dadd( 298.067, 390.345, 50.0248, 0.5558 ) }
    apic_4 { pt3dadd( 297.313, 389.594, 50.1903, 0.6264 ) }
    apic_4 { pt3dadd( 296.64, 388.856, 50.4924, 0.607 ) }
    apic_4 { pt3dadd( 296.21, 388.466, 50.6618, 0.6126 ) }
    apic_4 { pt3dadd( 295.682, 387.668, 50.8774, 0.6516 ) }
    apic_4 { pt3dadd( 294.962, 386.912, 51.0443, 0.584 ) }
    apic_4 { pt3dadd( 294.24, 386.291, 51.2212, 0.6804 ) }
    apic_4 { pt3dadd( 293.785, 385.364, 51.4464, 0.6976 ) }
    apic_4 { pt3dadd( 292.991, 384.938, 51.8045, 0.8278 ) }
    apic_4 { pt3dadd( 292.354, 384.204, 52.2259, 0.821 ) }
    apic_4 { pt3dadd( 291.544, 384.076, 52.4244, 0.6404 ) }
    apic_4 { pt3dadd( 290.679, 383.341, 52.5686, 0.4338 ) }
    apic_4 { pt3dadd( 289.808, 382.598, 52.6658, 0.3448 ) }
    apic_4 { pt3dadd( 288.938, 381.856, 52.7271, 0.3524 ) }
    apic_4 { pt3dadd( 288.066, 381.116, 52.7747, 0.445 ) }
    apic_4 { pt3dadd( 287.117, 380.482, 52.8718, 0.4632 ) }
    apic_4 { pt3dadd( 286.168, 379.849, 53.0328, 0.5566 ) }
    apic_4 { pt3dadd( 285.218, 379.215, 53.2288, 0.6676 ) }
    apic_4 { pt3dadd( 284.268, 378.587, 53.4562, 0.719 ) }
    apic_4 { pt3dadd( 283.309, 377.986, 53.7309, 0.649 ) }
    apic_4 { pt3dadd( 282.35, 377.383, 54.0358, 0.6338 ) }
    apic_4 { pt3dadd( 281.393, 376.781, 54.3561, 0.508 ) }
    apic_4 { pt3dadd( 280.488, 376.101, 54.6644, 0.5198 ) }
    apic_4 { pt3dadd( 279.653, 375.319, 54.9357, 0.495 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_4 { pt3dadd( 278.819, 374.538, 55.183, 0.677 ) }
    apic_4 { pt3dadd( 277.985, 373.755, 55.4204, 0.5934 ) }
    apic_4 { pt3dadd( 277.037, 373.175, 55.6996, 0.6524 ) }
    apic_4 { pt3dadd( 275.984, 372.78, 56.0549, 0.638 ) }
    apic_4 { pt3dadd( 274.932, 372.386, 56.478, 0.5254 ) }
    apic_4 { pt3dadd( 273.879, 371.992, 56.9554, 0.5052 ) }
    apic_4 { pt3dadd( 272.915, 371.444, 57.4801, 0.4682 ) }
    apic_4 { pt3dadd( 271.997, 370.813, 58.0376, 0.6254 ) }
    apic_4 { pt3dadd( 271.08, 370.182, 58.606, 0.5066 ) }
    apic_4 { pt3dadd( 270.162, 369.549, 59.1682, 0.4478 ) }
    apic_4 { pt3dadd( 269.253, 368.895, 59.7055, 0.4694 ) }
    apic_4 { pt3dadd( 268.343, 368.242, 60.2134, 0.563 ) }
    apic_4 { pt3dadd( 267.433, 367.588, 60.6883, 0.4772 ) }
    apic_4 { pt3dadd( 266.493, 366.956, 61.0946, 0.4312 ) }
    apic_4 { pt3dadd( 265.527, 366.345, 61.4135, 0.4854 ) }
    apic_4 { pt3dadd( 264.56, 365.734, 61.6731, 0.5934 ) }
    apic_4 { pt3dadd( 263.592, 365.124, 61.899, 0.5286 ) }
    apic_4 { pt3dadd( 262.587, 364.6, 62.1382, 0.5526 ) }
    apic_4 { pt3dadd( 261.545, 364.156, 62.4254, 0.5826 ) }
    apic_4 { pt3dadd( 260.501, 363.713, 62.7656, 0.7084 ) }
    apic_4 { pt3dadd( 259.459, 363.269, 63.1523, 0.6018 ) }
    apic_4 { pt3dadd( 258.368, 363.063, 63.5824, 0.4512 ) }
    apic_4 { pt3dadd( 257.244, 363.012, 64.0433, 0.4016 ) }
    apic_4 { pt3dadd( 256.17, 362.88, 64.5644, 0.339 ) }
    apic_4 { pt3dadd( 255.129, 362.697, 65.1465, 0.3096 ) }
    apic_4 { pt3dadd( 254.309, 361.923, 65.6356, 0.292 ) }
    apic_4 { pt3dadd( 253.459, 361.164, 66.0332, 0.308 ) }
    apic_4 { pt3dadd( 252.516, 360.516, 66.3449, 0.3314 ) }
    apic_4 { pt3dadd( 251.561, 359.888, 66.5958, 0.4052 ) }
    apic_4 { pt3dadd( 250.67, 359.201, 66.848, 0.3948 ) }
    apic_4 { pt3dadd( 249.883, 358.415, 67.1706, 0.4036 ) }
    apic_4 { pt3dadd( 249.097, 357.628, 67.564, 0.5124 ) }
    apic_4 { pt3dadd( 248.31, 356.842, 68.0086, 0.4932 ) }
    apic_4 { pt3dadd( 247.338, 356.246, 68.4006, 0.3868 ) }
    apic_4 { pt3dadd( 246.353, 355.665, 68.7439, 0.304 ) }
    apic_4 { pt3dadd( 245.367, 355.085, 69.053, 0.282 ) }
    apic_4 { pt3dadd( 244.426, 354.479, 69.3949, 0.288 ) }
    apic_4 { pt3dadd( 243.549, 353.832, 69.8477, 0.3008 ) }
    apic_4 { pt3dadd( 242.673, 353.187, 70.3889, 0.3178 ) }
    apic_4 { pt3dadd( 241.797, 352.542, 70.9968, 0.3802 ) }
    apic_4 { pt3dadd( 240.92, 351.896, 71.6369, 0.3464 ) }
    apic_4 { pt3dadd( 240.061, 351.145, 72.1854, 0.3242 ) }
    apic_4 { pt3dadd( 239.202, 350.393, 72.6466, 0.3142 ) }
    apic_4 { pt3dadd( 238.344, 349.642, 73.0352, 0.3736 ) }
    apic_4 { pt3dadd( 237.517, 348.867, 73.3877, 0.334 ) }
    apic_4 { pt3dadd( 236.822, 347.999, 73.7722, 0.3002 ) }
    apic_4 { pt3dadd( 236.127, 347.13, 74.1846, 0.2752 ) }
    apic_4 { pt3dadd( 235.432, 346.261, 74.6222, 0.2756 ) }
    apic_4 { pt3dadd( 234.601, 345.497, 75.0053, 0.2766 ) }
    apic_4 { pt3dadd( 233.708, 344.782, 75.3119, 0.2782 ) }
    apic_4 { pt3dadd( 232.814, 344.068, 75.56, 0.2814 ) }
    apic_4 { pt3dadd( 231.921, 343.354, 75.7674, 0.287 ) }
    apic_4 { pt3dadd( 231.044, 342.653, 76.0208, 0.2988 ) }
    apic_4 { pt3dadd( 230.175, 341.958, 76.3473, 0.3142 ) }
    apic_4 { pt3dadd( 229.307, 341.262, 76.734, 0.3734 ) }
    apic_4 { pt3dadd( 228.445, 340.549, 77.1445, 0.334 ) }
    apic_4 { pt3dadd( 227.624, 339.753, 77.4858, 0.3 ) }
    apic_4 { pt3dadd( 226.802, 338.958, 77.7708, 0.2746 ) }
    apic_4 { pt3dadd( 225.981, 338.162, 78.0119, 0.2748 ) }
    apic_4 { pt3dadd( 225.179, 337.356, 78.2508, 0.2748 ) }
    apic_4 { pt3dadd( 224.452, 336.513, 78.5775, 0.2752 ) }
    apic_4 { pt3dadd( 223.725, 335.671, 78.9824, 0.2756 ) }
    apic_4 { pt3dadd( 222.999, 334.828, 79.4539, 0.2766 ) }
    apic_4 { pt3dadd( 222.116, 334.133, 79.9252, 0.2782 ) }
    apic_4 { pt3dadd( 221.166, 333.5, 80.3743, 0.2814 ) }
    apic_4 { pt3dadd( 220.216, 332.866, 80.806, 0.2874 ) }
    apic_4 { pt3dadd( 219.267, 332.234, 81.2258, 0.298 ) }
    apic_4 { pt3dadd( 218.295, 331.77, 81.746, 0.319 ) }
    apic_4 { pt3dadd( 217.316, 331.339, 82.3656, 0.3526 ) }
    apic_4 { pt3dadd( 216.339, 330.908, 83.0592, 0.4394 ) }
    apic_4 { pt3dadd( 215.433, 330.347, 83.767, 0.4826 ) }
    apic_4 { pt3dadd( 214.699, 329.477, 84.3973, 0.4476 ) }
    apic_4 { pt3dadd( 213.965, 328.607, 84.9607, 0.4848 ) }
    apic_4 { pt3dadd( 213.231, 327.737, 85.4658, 0.5146 ) }
    apic_4 { pt3dadd( 212.425, 326.985, 85.9855, 0.531 ) }
    apic_4 { pt3dadd( 211.561, 326.328, 86.5665, 0.5218 ) }
    apic_4 { pt3dadd( 210.697, 325.673, 87.1998, 0.467 ) }
    apic_4 { pt3dadd( 209.825, 325.016, 87.8632, 0.5502 ) }
    apic_4 { pt3dadd( 208.91, 324.352, 88.475, 0.4936 ) }
    apic_4 { pt3dadd( 207.996, 323.686, 89.0355, 0.4964 ) }
    apic_4 { pt3dadd( 207.081, 323.02, 89.5482, 0.6642 ) }
    apic_4 { pt3dadd( 206.199, 322.313, 90.0259, 0.6448 ) }
    apic_4 { pt3dadd( 205.358, 321.557, 90.4873, 0.6116 ) }
    apic_4 { pt3dadd( 204.517, 320.801, 90.9496, 0.536 ) }
    apic_4 { pt3dadd( 203.677, 320.043, 91.4256, 0.6936 ) }
    apic_4 { pt3dadd( 202.956, 319.194, 91.9436, 0.6846 ) }
    apic_4 { pt3dadd( 202.26, 318.325, 92.5005, 0.528 ) }
    apic_4 { pt3dadd( 201.566, 317.457, 93.0846, 0.4594 ) }
    apic_4 { pt3dadd( 200.91, 316.56, 93.6832, 0.4 ) }
    apic_4 { pt3dadd( 200.345, 315.599, 94.2861, 0.4178 ) }
    apic_4 { pt3dadd( 199.78, 314.639, 94.8889, 0.5164 ) }
    apic_4 { pt3dadd( 199.215, 313.678, 95.4876, 0.6098 ) }
    apic_4 { pt3dadd( 198.781, 312.634, 96.0229, 0.7586 ) }
    apic_4 { pt3dadd( 198.404, 311.553, 96.4956, 0.6964 ) }
    apic_4 { pt3dadd( 198.133, 310.498, 97.0486, 0.6194 ) }
    apic_4 { pt3dadd( 197.841, 309.453, 97.692, 0.7482 ) }
    apic_4 { pt3dadd( 197.336, 308.445, 98.3637, 0.8124 ) }
    apic_4 { pt3dadd( 196.643, 307.642, 99.1197, 0.6352 ) }
    apic_4 { pt3dadd( 195.774, 307.045, 99.9863, 0.6016 ) }
    apic_4 { pt3dadd( 194.748, 306.744, 100.918, 0.481 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_4 { pt3dadd( 194.136, 305.917, 101.922, 0.539 ) }
    apic_4 { pt3dadd( 193.522, 305.09, 102.974, 0.4238 ) }
    apic_4 { pt3dadd( 192.91, 304.262, 104.053, 0.3768 ) }
    apic_4 { pt3dadd( 192.13, 303.571, 105.11, 0.3956 ) }
    apic_4 { pt3dadd( 191.282, 302.935, 106.122, 0.3748 ) }
    apic_4 { pt3dadd( 190.46, 302.269, 107.078, 0.3762 ) }
    apic_4 { pt3dadd( 189.693, 301.531, 107.967, 0.4134 ) }
    apic_4 { pt3dadd( 188.927, 300.793, 108.791, 0.544 ) }
    apic_4 { pt3dadd( 188.285, 299.868, 109.458, 0.7164 ) }
    apic_4 { pt3dadd( 187.699, 298.895, 109.961, 0.6882 ) }
    apic_4 { pt3dadd( 187.119, 297.922, 110.32, 0.4928 ) }
    apic_4 { pt3dadd( 186.263, 297.217, 110.669, 0.368 ) }
    apic_4 { pt3dadd( 185.186, 297.091, 111.104, 0.3566 ) }
    apic_4 { pt3dadd( 184.759, 296.084, 111.56, 0.411 ) }
    apic_4 { pt3dadd( 184.296, 295.089, 112.11, 0.6042 ) }
    apic_4 { pt3dadd( 183.4, 294.529, 112.766, 0.5136 ) }
    apic_4 { pt3dadd( 182.32, 294.278, 113.465, 0.4656 ) }
    apic_4 { pt3dadd( 181.42, 293.795, 114.248, 0.4798 ) }
    apic_4 { pt3dadd( 180.589, 293.24, 115.115, 0.692 ) }
    apic_4 { pt3dadd( 179.802, 292.592, 116.012, 0.8696 ) }
    apic_4 { pt3dadd( 178.965, 291.924, 116.829, 0.873 ) }
    apic_4 { pt3dadd( 177.887, 291.668, 117.476, 0.8608 ) }
    apic_4 { pt3dadd( 176.811, 291.387, 117.988, 0.699 ) }
    apic_4 { pt3dadd( 175.809, 290.836, 118.406, 0.6166 ) }
    apic_4 { pt3dadd( 174.956, 290.118, 118.805, 0.5512 ) }
    apic_4 { pt3dadd( 174.027, 289.751, 119.389, 0.693 ) }
    apic_4 { pt3dadd( 173.048, 289.326, 120.055, 0.8234 ) }
    apic_4 { pt3dadd( 172.046, 289.048, 120.838, 0.7918 ) }
    apic_4 { pt3dadd( 171.034, 288.717, 121.652, 0.6886 ) }
    apic_4 { pt3dadd( 169.993, 288.247, 122.354, 0.4836 ) }
    apic_4 { pt3dadd( 168.958, 288.011, 123.048, 0.4006 ) }
    apic_4 { pt3dadd( 167.927, 287.848, 123.736, 0.4044 ) }
    apic_4 { pt3dadd( 167.123, 287.265, 124.42, 0.5616 ) }
    apic_4 { pt3dadd( 166.334, 287.22, 125.02, 0.5814 ) }
    apic_4 { pt3dadd( 165.388, 286.722, 125.297, 0.5652 ) }
    apic_4 { pt3dadd( 164.769, 286.533, 125.392, 0.5618 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 36/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 164.769, 286.533, 125.392, 0.5618 ) }
    apic_8 { pt3dadd( 163.819, 286.805, 125.425, 0.4274 ) }
    apic_8 { pt3dadd( 163.265, 287.677, 125.489, 0.3416 ) }
    apic_8 { pt3dadd( 162.264, 287.753, 125.731, 0.3056 ) }
    apic_8 { pt3dadd( 161.547, 288.363, 126.159, 0.3268 ) }
    apic_8 { pt3dadd( 161.014, 288.508, 126.888, 0.3966 ) }
    apic_8 { pt3dadd( 159.959, 288.517, 127.568, 0.3788 ) }
    apic_8 { pt3dadd( 158.944, 288.163, 128.072, 0.3728 ) }
    apic_8 { pt3dadd( 158.104, 288.174, 128.281, 0.4604 ) }
    apic_8 { pt3dadd( 157.416, 288.059, 128.278, 0.3728 ) }
    apic_8 { pt3dadd( 156.428, 288.079, 128.376, 0.2796 ) }
    apic_8 { pt3dadd( 155.356, 288.174, 128.24, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 48/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 164.769, 286.533, 125.392, 0.5618 ) }
    apic_5 { pt3dadd( 164.341, 286.424, 125.231, 0.4576 ) }
    apic_5 { pt3dadd( 163.904, 286.05, 126.834, 0.409 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 51/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 163.904, 286.05, 126.834, 0.409 ) }
    apic_7 { pt3dadd( 162.73, 286.289, 127.487, 0.3814 ) }
    apic_7 { pt3dadd( 161.628, 286.304, 128.068, 0.4774 ) }
    apic_7 { pt3dadd( 160.571, 286.462, 128.424, 0.3982 ) }
    apic_7 { pt3dadd( 160.195, 286.604, 129.056, 0.356 ) }
    apic_7 { pt3dadd( 159.53, 287.448, 130.186, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 57/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 163.904, 286.05, 126.834, 0.409 ) }
    apic_6 { pt3dadd( 163.731, 285.656, 127.622, 0.4576 ) }
    apic_6 { pt3dadd( 163.565, 285.118, 128.554, 0.4322 ) }
    apic_6 { pt3dadd( 163.65, 284.061, 128.932, 0.4322 ) }
    apic_6 { pt3dadd( 163.699, 283.078, 129.053, 0.5338 ) }
    apic_6 { pt3dadd( 163.879, 281.956, 129.064, 0.6864 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_752, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_752 = new SectionList()
    soma_0 ModelViewParmSubset_752.append()
    axon_0 ModelViewParmSubset_752.append()
    axon_1 ModelViewParmSubset_752.append()

    // Group: {name=ModelViewParmSubset_753, groups=[], sections=[dend_26, dend_21, dend_14, dend_5, dend_0, apic_0, dend_27, dend_23, dend_22, dend_20, dend_15, dend_13, dend_6, dend_4, dend_1, apic_18, apic_1, dend_31, dend_28, dend_25, dend_24, dend_19, dend_16, dend_8, dend_7, dend_3, dend_2, apic_22, apic_19, apic_13, apic_2, dend_33, dend_32, dend_30, dend_29, dend_18, dend_17, dend_10, dend_9, apic_21, apic_20, apic_17, apic_14, apic_10, apic_3, dend_12, dend_11, apic_16, apic_15, apic_12, apic_11, apic_9, apic_4, apic_8, apic_5, apic_7, apic_6]}
    ModelViewParmSubset_753 = new SectionList()
    dend_26 ModelViewParmSubset_753.append()
    dend_21 ModelViewParmSubset_753.append()
    dend_14 ModelViewParmSubset_753.append()
    dend_5 ModelViewParmSubset_753.append()
    dend_0 ModelViewParmSubset_753.append()
    apic_0 ModelViewParmSubset_753.append()
    dend_27 ModelViewParmSubset_753.append()
    dend_23 ModelViewParmSubset_753.append()
    dend_22 ModelViewParmSubset_753.append()
    dend_20 ModelViewParmSubset_753.append()
    dend_15 ModelViewParmSubset_753.append()
    dend_13 ModelViewParmSubset_753.append()
    dend_6 ModelViewParmSubset_753.append()
    dend_4 ModelViewParmSubset_753.append()
    dend_1 ModelViewParmSubset_753.append()
    apic_18 ModelViewParmSubset_753.append()
    apic_1 ModelViewParmSubset_753.append()
    dend_31 ModelViewParmSubset_753.append()
    dend_28 ModelViewParmSubset_753.append()
    dend_25 ModelViewParmSubset_753.append()
    dend_24 ModelViewParmSubset_753.append()
    dend_19 ModelViewParmSubset_753.append()
    dend_16 ModelViewParmSubset_753.append()
    dend_8 ModelViewParmSubset_753.append()
    dend_7 ModelViewParmSubset_753.append()
    dend_3 ModelViewParmSubset_753.append()
    dend_2 ModelViewParmSubset_753.append()
    apic_22 ModelViewParmSubset_753.append()
    apic_19 ModelViewParmSubset_753.append()
    apic_13 ModelViewParmSubset_753.append()
    apic_2 ModelViewParmSubset_753.append()
    dend_33 ModelViewParmSubset_753.append()
    dend_32 ModelViewParmSubset_753.append()
    dend_30 ModelViewParmSubset_753.append()
    dend_29 ModelViewParmSubset_753.append()
    dend_18 ModelViewParmSubset_753.append()
    dend_17 ModelViewParmSubset_753.append()
    dend_10 ModelViewParmSubset_753.append()
    dend_9 ModelViewParmSubset_753.append()
    apic_21 ModelViewParmSubset_753.append()
    apic_20 ModelViewParmSubset_753.append()
    apic_17 ModelViewParmSubset_753.append()
    apic_14 ModelViewParmSubset_753.append()
    apic_10 ModelViewParmSubset_753.append()
    apic_3 ModelViewParmSubset_753.append()
    dend_12 ModelViewParmSubset_753.append()
    dend_11 ModelViewParmSubset_753.append()
    apic_16 ModelViewParmSubset_753.append()
    apic_15 ModelViewParmSubset_753.append()
    apic_12 ModelViewParmSubset_753.append()
    apic_11 ModelViewParmSubset_753.append()
    apic_9 ModelViewParmSubset_753.append()
    apic_4 ModelViewParmSubset_753.append()
    apic_8 ModelViewParmSubset_753.append()
    apic_5 ModelViewParmSubset_753.append()
    apic_7 ModelViewParmSubset_753.append()
    apic_6 ModelViewParmSubset_753.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_22, apic_19, apic_13, apic_2, apic_21, apic_20, apic_17, apic_14, apic_10, apic_3, apic_16, apic_15, apic_12, apic_11, apic_9, apic_4, apic_8, apic_5, apic_7, apic_6]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_18 apic.append()
    apic_1 apic.append()
    apic_22 apic.append()
    apic_19 apic.append()
    apic_13 apic.append()
    apic_2 apic.append()
    apic_21 apic.append()
    apic_20 apic.append()
    apic_17 apic.append()
    apic_14 apic.append()
    apic_10 apic.append()
    apic_3 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_12 apic.append()
    apic_11 apic.append()
    apic_9 apic.append()
    apic_4 apic.append()
    apic_8 apic.append()
    apic_5 apic.append()
    apic_7 apic.append()
    apic_6 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_26, dend_21, dend_14, dend_5, dend_0, dend_27, dend_23, dend_22, dend_20, dend_15, dend_13, dend_6, dend_4, dend_1, dend_31, dend_28, dend_25, dend_24, dend_19, dend_16, dend_8, dend_7, dend_3, dend_2, dend_33, dend_32, dend_30, dend_29, dend_18, dend_17, dend_10, dend_9, dend_12, dend_11]}
    dend = new SectionList()
    dend_26 dend.append()
    dend_21 dend.append()
    dend_14 dend.append()
    dend_5 dend.append()
    dend_0 dend.append()
    dend_27 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_20 dend.append()
    dend_15 dend.append()
    dend_13 dend.append()
    dend_6 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_31 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_19 dend.append()
    dend_16 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()

    // Group: {name=OneSecGrp_SectionRef_30953, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_30953 = new SectionList()
    soma_0 OneSecGrp_SectionRef_30953.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_19 all.append()
    apic_19 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_4 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.0  // units: uF/cm2
    forsec apic cm = 2.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 3.336713E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 2.1278573E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.7717072  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 4.963047E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.0377367  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 5.7470737E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.014711507  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.2955911  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 3.7053044E-4  // units: S cm-2
        e_pas_nml2 = -89.439766  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 5.72437E-6  // units: S cm-2
        e_pas_nml2 = -89.439766  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 4.5418765E-5  // units: S cm-2
        e_pas_nml2 = -89.439766  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.618771E-5  // units: S cm-2
        e_pas_nml2 = -89.439766  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 9.723923E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.009742594  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478047816
    forsec soma {
        insert CaDynamics_478047816
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 5
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_7 nseg = 3
    apic_22 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_30 nseg = 5
    dend_29 nseg = 3
    dend_17 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 3
    apic_21 nseg = 3
    apic_4 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478047816


