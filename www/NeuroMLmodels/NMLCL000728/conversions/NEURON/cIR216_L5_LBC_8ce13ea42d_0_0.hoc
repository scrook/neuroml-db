// Cell: cIR216_L5_LBC_8ce13ea42d_0_0
/*
{
  "id" : "cIR216_L5_LBC_8ce13ea42d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.26545, 12.8263, -0.385372, 4.20571", "-2.99538, 11.4835, -0.361166, 7.19402", "-2.72531, 10.1406, -0.336961, 9.45629", "-2.45524, 8.79768, -0.312756, 10.8887", "-2.18516, 7.45479, -0.28855, 12.1858", "-1.91509, 6.11191, -0.264345, 13.0837", "-1.64502, 4.76902, -0.24014, 13.8391", "-1.37495, 3.42613, -0.215934, 14.1927", "-1.10488, 2.08325, -0.191729, 14.7245", "-0.834809, 0.740358, -0.167524, 15.0655", "-0.564738, -0.602529, -0.143318, 15.0604", "-0.294667, -1.94542, -0.119113, 14.8454", "-0.0245954, -3.2883, -0.0949076, 14.4598", "0.245476, -4.63119, -0.0707023, 13.4621", "0.515547, -5.97408, -0.0464969, 12.4622", "0.785618, -7.31696, -0.0222916, 11.0253", "1.05569, -8.65985, 0.00191374, 9.34508", "1.32576, -10.0027, 0.0261191, 7.80961", "1.59583, -11.3456, 0.0503244, 6.28847", "1.8659, -12.6885, 0.0745297, 5.0944", "2.13597, -14.0314, 0.0987351, 2.89855" ]
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-3.80934, 12.1835, 8.90928, 5.26", "-3.91116, 12.9236, 7.7337, 4.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926341317097
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.75934, -3.12399, 15.6893, 1.66", "-9.2898, -3.33988, 17.9642, 1.66", "-11.1373, -3.60049, 20.7102, 1.66", "-15.1277, -4.16339, 26.6416, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926341317097
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.73066, -11.8015, 8.52928, 3.32", "3.46421, -15.6548, 8.52928, 3.05", "3.87177, -17.7957, 8.52928, 3.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926341317097
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.13597, -14.0314, 0.0987351, 1.11", "5.09344, -28.737, 0.0987351, 1.11", "8.05091, -43.4425, 0.0987351, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.91116, 12.9236, 7.7337, 3.88", "-4.52911, 14.4379, 7.73148, 3.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.91116, 12.9236, 7.7337, 1.11", "0.490635, 22.2795, -8.59454, 1.11", "1.7398, 24.9384, -12.792, 1.11", "2.41729, 26.334, -14.7835, 0.83", "2.9388, 27.4152, -16.1519, 0.55", "4.16974, 29.8404, -18.8636, 0.55", "4.75678, 30.9204, -19.9544, 0.55", "5.83746, 32.5262, -20.5047, 0.55", "6.94283, 33.8525, -21.314, 0.83", "8.21289, 35.2628, -22.3679, 0.83", "9.80109, 36.9182, -23.7341, 0.55", "10.7663, 37.8207, -24.506, 0.55", "11.7411, 38.6705, -25.3009, 0.55", "17.0728, 43.2243, -30.9783, 0.55", "17.7967, 43.7951, -31.8583, 0.55", "18.5133, 44.3247, -32.7708, 0.28", "19.3261, 44.95, -33.8662, 0.28", "20.53, 45.9835, -35.5812, 0.28", "24.6548, 49.8818, -41.0918, 0.55", "26.2158, 51.5294, -42.6429, 0.28", "27.2057, 52.6276, -43.5537, 0.28", "27.924, 53.4561, -44.1192, 0.28", "29.2049, 54.9567, -44.852, 0.55", "31.4266, 57.732, -45.5455, 0.55", "34.1269, 61.2216, -45.6093, 0.28", "34.307, 61.4646, -45.6064, 0.28", "35.6353, 63.1218, -45.8545, 0.28", "37.3485, 65.077, -46.4137, 0.28", "38.8078, 66.5705, -47.001, 0.28", "39.6967, 67.4589, -47.4356, 0.28", "41.3009, 68.9658, -48.223, 0.55", "45.9364, 73.3773, -51.1763, 0.28", "47.8358, 75.2199, -52.5038, 0.28", "49.8192, 77.3147, -53.9076, 0.28", "51.021, 78.7377, -54.9007, 0.28", "53.114, 81.4863, -56.9031, 0.55", "56.6185, 86.5963, -60.5583, 0.28", "58.7991, 90.216, -62.9263, 0.28", "60.9558, 94.1714, -65.5109, 0.28", "63.7752, 99.904, -69.0705, 0.55", "65.2725, 103.204, -70.9617, 0.28", "66.0406, 105.01, -71.8594, 0.28", "67.0, 107.219, -72.6469, 0.28", "68.359, 110.161, -73.5619, 0.55", "69.8723, 112.883, -74.3341, 0.28", "70.8505, 114.46, -74.6271, 0.28", "72.2187, 116.573, -75.015, 0.28", "74.2443, 119.494, -75.7012, 0.28", "75.286, 120.919, -76.0962, 0.55", "78.254, 124.904, -77.3272, 0.55", "79.2972, 126.285, -77.7607, 0.55", "80.2871, 127.655, -78.1328, 0.55", "81.7577, 129.901, -78.6278, 0.83", "83.0632, 132.019, -78.9514, 0.28", "83.7556, 133.328, -79.0473, 0.28", "84.5836, 135.246, -79.1037, 0.28", "85.6804, 138.758, -79.376, 0.28", "85.9031, 139.946, -79.5175, 0.28", "86.1644, 141.793, -79.7816, 0.55", "86.5285, 143.985, -80.1259, 0.28", "87.4274, 147.667, -80.7061, 0.28", "88.3758, 150.52, -81.1379, 0.28", "89.6637, 153.551, -81.8672, 0.28", "91.6292, 157.192, -82.9288, 0.28", "93.0556, 159.348, -83.616, 0.28", "94.9092, 161.567, -84.3301, 0.55", "96.2064, 162.906, -84.7258, 0.28", "99.5413, 166.169, -85.7314, 0.28", "102.382, 168.867, -86.5949, 0.28", "103.631, 170.033, -86.9347, 0.28", "105.741, 172.011, -87.3716, 0.83", "107.445, 173.584, -88.3989, 0.28", "109.194, 175.191, -89.937, 0.28", "110.74, 176.605, -91.7389, 0.28", "112.644, 178.255, -94.3368, 0.28", "114.516, 179.802, -97.0261, 0.28", "122.909, 186.8, -109.761, 0.28", "123.643, 187.43, -110.898, 0.55", "125.096, 188.695, -113.414, 0.28", "126.865, 190.4, -116.971, 0.28", "127.779, 191.302, -119.088, 0.28", "128.784, 192.193, -121.288, 0.28", "130.904, 193.808, -121.367, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-15.1277, -4.16339, 26.6416, 1.66", "-17.3591, -3.99232, 26.8473, 1.66", "-19.7847, -3.57012, 26.8337, 1.66", "-22.8029, -2.8722, 27.2628, 1.39", "-25.7321, -2.17274, 27.9042, 1.39", "-28.3749, -1.55187, 28.5886, 1.11", "-32.4605, -0.611843, 29.9263, 1.11", "-37.3256, 0.757523, 31.8688, 1.11", "-43.482, 2.7549, 35.2144, 1.11", "-44.3423, 3.07278, 35.7732, 1.11", "-46.5199, 3.80375, 37.2156, 1.11", "-49.88, 4.85825, 39.0598, 1.11", "-51.6376, 5.4011, 39.9266, 1.11", "-55.5206, 6.48261, 41.752, 1.11", "-57.2263, 6.94236, 42.27, 1.11", "-61.1034, 7.99181, 43.3337, 1.11", "-65.8293, 9.07856, 44.4241, 1.11", "-71.2643, 10.0212, 45.2346, 1.11", "-73.6203, 10.3479, 45.5041, 0.83", "-76.1713, 10.6501, 45.9777, 0.83", "-77.3902, 10.8059, 46.3976, 0.83", "-79.3114, 11.0911, 47.3145, 0.83", "-81.0084, 11.3187, 48.3168, 0.83", "-82.4333, 11.4833, 48.9933, 0.83", "-87.4718, 12.6438, 52.4799, 0.83", "-87.8217, 12.764, 52.8453, 0.83", "-96.8783, 13.9596, 55.0082, 0.83", "-105.353, 16.3327, 58.2353, 0.83", "-114.072, 18.1478, 61.1851, 0.83", "-123.196, 19.215, 63.1254, 0.83", "-132.414, 20.5694, 64.2562, 0.83", "-141.767, 20.2893, 65.1071, 0.83", "-150.979, 19.1942, 66.6008, 0.83", "-159.659, 17.0094, 69.4347, 0.83", "-167.967, 13.8638, 72.4384, 0.83", "-176.08, 9.91647, 74.9442, 0.83", "-183.648, 6.42913, 79.2308, 0.83", "-190.2, 1.451, 83.643, 0.83", "-196.855, -3.34527, 88.1129, 0.83", "-203.639, -8.47108, 91.9633, 0.83", "-211.002, -11.8989, 96.638, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-15.1277, -4.16339, 26.6416, 1.11", "-17.2755, -3.29936, 29.1249, 1.11", "-18.4465, -2.94067, 30.686, 1.11", "-21.9964, -2.15991, 35.1489, 1.11", "-23.1422, -1.92994, 36.5001, 1.11", "-25.4408, -1.41351, 39.0521, 1.11", "-31.6737, 0.168423, 46.2157, 1.11", "-32.9028, 0.541627, 47.6884, 0.83", "-34.5757, 1.10029, 49.4412, 0.83", "-35.6956, 1.45695, 50.3838, 0.83", "-36.9296, 1.90461, 51.4645, 0.83", "-40.3703, 3.45995, 54.3974, 0.83", "-43.4602, 5.03248, 55.7867, 0.83", "-45.353, 6.09849, 56.7157, 0.83", "-45.7775, 6.34956, 56.9725, 0.83", "-53.2859, 10.3069, 62.3422, 0.83", "-60.4877, 14.2761, 68.1092, 0.83", "-68.8631, 16.0375, 73.4309, 0.83", "-77.6782, 17.8381, 77.9697, 0.83", "-86.2381, 19.7978, 82.91, 0.83", "-94.7541, 22.9814, 87.2092, 0.83", "-102.92, 26.34, 92.0198, 0.83", "-111.6, 30.6533, 94.6034, 0.83", "-120.182, 34.754, 97.8078, 0.83", "-128.755, 38.8302, 101.07, 0.83", "-136.545, 42.9025, 105.921, 0.83", "-144.771, 45.3958, 111.165, 0.83", "-153.077, 47.6705, 116.388, 0.83", "-161.059, 48.544, 122.492, 0.83", "-168.848, 48.343, 128.902, 0.83", "-176.855, 47.0272, 134.893, 0.83", "-186.138, 45.8023, 138.647, 0.83", "-195.031, 43.9574, 143.029, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "3.87177, -17.7957, 8.52928, 4.16", "4.0521, -19.472, 8.54208, 4.16" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.87177, -17.7957, 8.52928, 1.39", "15.6341, -15.2811, 4.51933, 1.39", "18.8785, -14.5583, 3.52504, 1.11", "22.716, -13.8351, 2.7888, 1.11", "25.5108, -13.4298, 2.48457, 0.83", "28.1704, -13.118, 2.4003, 0.83", "36.2365, -12.2473, 2.37287, 0.83", "39.938, -11.9165, 2.95881, 0.83", "46.1465, -11.2184, 4.02137, 0.55", "48.7368, -10.8349, 4.53467, 0.55", "52.6571, -10.1509, 5.45837, 0.55", "57.2572, -9.15559, 6.7663, 0.55", "61.2423, -8.225, 7.91649, 0.55", "63.2366, -7.69813, 8.31456, 0.55", "67.1386, -6.56102, 8.79094, 0.55", "70.1346, -5.71249, 9.13662, 0.55", "72.3328, -5.15959, 9.39026, 0.55", "78.0521, -3.9208, 10.1565, 0.55", "80.8155, -3.41123, 10.595, 0.55", "83.5788, -2.92235, 11.2708, 0.55", "86.0716, -2.4129, 12.1092, 0.55", "87.7687, -2.01912, 12.8323, 0.55", "90.027, -1.43914, 13.82, 0.55", "93.6843, -0.332802, 15.5126, 0.55", "98.4859, 1.23737, 17.3583, 0.55", "101.52, 2.34678, 18.3308, 0.28", "104.682, 3.5935, 19.1575, 0.55", "109.978, 5.75683, 20.2193, 0.55", "112.895, 7.01736, 20.5923, 0.55", "116.112, 8.51837, 20.7048, 0.28", "118.072, 9.55426, 20.6507, 0.55", "119.176, 10.2227, 20.6321, 0.28", "120.449, 11.1712, 20.6798, 0.55", "121.77, 12.3077, 20.9601, 0.28", "122.931, 13.2913, 21.2961, 0.28", "123.974, 14.1361, 21.687, 0.28", "125.715, 15.4662, 22.3114, 0.28", "126.428, 16.0119, 22.5609, 0.28", "129.609, 18.3625, 23.6544, 1.11", "131.085, 19.4517, 24.1587, 0.28", "132.425, 20.4277, 24.3941, 0.28", "134.043, 21.6585, 24.5227, 0.28", "136.486, 23.7232, 24.776, 0.28", "139.582, 26.4596, 25.1721, 0.28", "141.669, 28.4082, 25.4865, 0.28", "147.56, 34.017, 26.562, 0.28", "149.589, 35.9859, 27.0042, 0.28", "153.641, 39.9732, 28.0682, 0.83", "155.168, 41.5736, 28.5573, 0.83", "156.904, 43.4724, 29.2795, 0.28", "157.975, 44.6137, 29.886, 0.28", "158.977, 45.7453, 30.7812, 0.28", "159.851, 46.6291, 31.4176, 0.55", "161.325, 47.9932, 31.9789, 0.28", "162.346, 49.0938, 32.3802, 0.28", "163.008, 49.7721, 32.6366, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.05091, -43.4425, 0.0987351, 0.55", "11.0084, -58.1481, 0.0987351, 0.55", "13.9659, -72.8536, 0.0987351, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.52911, 14.4379, 7.73148, 4.43", "-6.32044, 19.5267, 7.3876, 4.43" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.52911, 14.4379, 7.73148, 1.39", "-9.24841, 17.6024, 5.36506, 1.39", "-12.428, 20.0677, 3.12547, 1.39", "-14.385, 21.7876, 1.2959, 1.39", "-16.572, 23.716, -0.8395, 1.39", "-18.0479, 24.9598, -2.60202, 1.11", "-20.8985, 27.3393, -6.23825, 1.11", "-23.4509, 29.6057, -9.61578, 1.11", "-25.8362, 31.828, -13.4359, 1.11", "-27.3548, 33.303, -16.0904, 1.39", "-31.4782, 37.396, -23.653, 1.11", "-32.4124, 38.3146, -25.2957, 1.11", "-34.1787, 40.0195, -28.0673, 1.11", "-37.7625, 43.6445, -33.3429, 1.11", "-39.0011, 45.0315, -35.1325, 1.11", "-41.2515, 47.9308, -38.3848, 0.83", "-42.3241, 49.4582, -39.7681, 0.83", "-44.0508, 51.9559, -41.9903, 0.83", "-45.5388, 54.1447, -44.0639, 0.28", "-45.9103, 54.7022, -44.5302, 0.55", "-46.8566, 56.1219, -45.7328, 0.55", "-48.5494, 58.6448, -47.7605, 0.28", "-49.9348, 60.676, -49.4006, 1.11", "-52.2816, 64.4426, -53.0146, 0.28", "-53.044, 65.7655, -54.4425, 0.28", "-53.7054, 67.0975, -55.921, 0.55", "-54.0133, 67.9284, -56.9008, 0.55", "-54.1207, 68.3048, -57.333, 0.55", "-55.0865, 73.381, -64.7497, 0.28", "-55.2433, 74.2244, -66.0575, 0.28", "-55.5462, 75.8858, -68.743, 0.83", "-56.0542, 78.7011, -73.6172, 0.28", "-56.3049, 79.843, -75.6429, 0.83", "-58.2695, 86.647, -87.6198, 0.28", "-58.6701, 87.7437, -89.7206, 0.28", "-58.9476, 88.4019, -91.117, 0.83", "-60.5647, 91.9036, -99.3935, 0.28", "-60.8926, 92.5248, -100.912, 0.55", "-61.3802, 93.3453, -102.951, 0.55", "-64.2909, 97.6398, -113.475, 0.28", "-64.6513, 98.1652, -114.861, 0.28", "-66.1438, 100.143, -120.48, 0.55", "-66.6331, 100.719, -122.208, 0.28", "-66.9453, 101.101, -123.446, 0.55", "-68.4322, 103.062, -130.02, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.0521, -19.472, 8.54208, 2.49", "6.34128, -27.8871, 8.00244, 2.49", "8.08321, -34.3144, 7.14869, 2.22", "9.82534, -40.7424, 6.29485, 2.22", "11.9983, -48.76, 5.22987, 1.94", "14.9274, -59.5677, 3.79426, 2.22", "16.6285, -65.8441, 2.96056, 2.22", "18.4522, -72.6397, 2.17564, 2.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.0521, -19.472, 8.54208, 2.49", "-2.28723, -22.7121, -2.03939, 2.49", "-3.92091, -23.5472, -4.76629, 2.49" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-6.32044, 19.5267, 7.3876, 4.43", "-6.69778, 23.2904, 10.0301, 4.43" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.32044, 19.5267, 7.3876, 1.39", "-8.78688, 21.1698, 9.80072, 1.39", "-11.4708, 23.187, 12.1385, 1.39", "-16.0238, 26.9991, 16.6968, 1.39", "-18.0069, 28.8089, 18.8004, 0.83", "-19.8633, 30.5936, 21.0516, 0.83", "-24.2016, 34.9122, 26.4963, 1.11", "-27.4754, 38.6756, 30.9791, 1.11", "-31.2981, 43.6666, 36.5941, 1.11", "-32.0175, 44.7706, 37.6638, 1.11", "-34.8105, 49.6247, 41.9793, 1.11", "-36.0478, 52.0587, 43.8148, 1.11", "-37.4082, 54.7334, 45.3561, 0.83", "-38.426, 56.8396, 46.3331, 0.83", "-39.2365, 58.6118, 46.5697, 0.83", "-40.1497, 60.6645, 46.7501, 0.83", "-41.1574, 62.9824, 46.7499, 0.83", "-41.9672, 64.8286, 46.8468, 0.83", "-43.7251, 68.754, 47.265, 0.83", "-44.5644, 70.7503, 47.9016, 0.83", "-46.7271, 75.9175, 49.9819, 0.83", "-47.1439, 76.9612, 50.5289, 0.83", "-47.9322, 78.9216, 51.9174, 0.83", "-48.4259, 80.2662, 53.1595, 0.83", "-49.953, 84.4908, 58.272, 0.83", "-53.3519, 90.9425, 65.3855, 0.83", "-57.3306, 97.1191, 72.4537, 0.83", "-59.9672, 104.341, 79.0977, 0.83", "-61.3304, 111.937, 85.691, 0.83", "-60.9016, 118.907, 93.0943, 0.83", "-59.0202, 124.964, 101.094, 0.83", "-59.0034, 130.379, 109.768, 0.83", "-60.887, 136.701, 117.54, 0.83", "-60.6987, 141.402, 126.638, 0.83", "-61.7614, 146.857, 135.217, 0.83", "-62.6127, 152.402, 143.76, 0.83", "-63.3274, 159.12, 151.38, 0.83", "-63.7622, 166.978, 157.777, 0.83", "-64.8268, 174.163, 164.89, 0.83", "-66.4798, 181.294, 171.946, 0.83", "-69.1034, 188.908, 178.117, 0.83", "-70.6213, 196.008, 185.237, 0.83", "-70.745, 203.696, 191.862, 0.83", "-70.1087, 210.823, 199.091, 0.83", "-70.3987, 216.797, 207.364, 0.83", "-70.1352, 222.339, 215.949, 0.83", "-68.8239, 227.703, 224.557, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "18.4522, -72.6397, 2.17564, 2.22", "17.2112, -75.2201, 12.4333, 2.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "18.4522, -72.6397, 2.17564, 0.83", "26.6363, -76.1673, -7.25452, 0.83", "28.8936, -77.2316, -9.81833, 0.83", "30.9706, -78.2333, -12.0187, 0.83", "35.2662, -80.3864, -16.3248, 0.55", "41.4034, -83.5271, -22.0775, 0.55", "42.7245, -84.2453, -23.3693, 0.55", "47.2747, -86.9638, -27.6731, 0.28", "49.6088, -88.4806, -30.0817, 0.28", "50.9145, -89.357, -31.4968, 0.55", "52.8578, -90.7346, -33.5929, 0.55", "58.3479, -94.7289, -39.3687, 0.83", "62.6734, -97.8304, -43.9261, 0.28", "65.8411, -100.077, -47.0675, 0.28", "68.9201, -102.305, -50.2605, 0.28", "71.2905, -104.018, -52.6276, 0.28", "75.5037, -106.998, -56.6359, 0.28", "78.2144, -108.847, -59.0542, 0.55", "82.0191, -111.463, -62.6861, 0.83", "89.1707, -116.428, -70.4788, 0.28", "92.1527, -118.501, -73.8932, 0.28", "95.5273, -120.858, -77.9037, 0.28", "99.739, -123.751, -82.8362, 0.28", "104.277, -127.143, -88.3727, 0.28", "108.896, -130.859, -93.8885, 0.28", "110.808, -132.553, -96.0488, 0.28", "111.56, -133.266, -96.8537, 0.28", "113.755, -135.377, -98.8954, 0.83", "119.545, -140.89, -103.455, 0.28", "123.139, -144.088, -105.453, 0.28", "130.282, -150.037, -108.319, 0.28", "135.488, -153.978, -109.962, 0.28", "138.676, -156.104, -110.688, 0.28", "140.475, -157.1, -110.907, 0.83", "149.74, -160.808, -110.509, 0.28", "151.492, -161.399, -110.259, 0.83", "155.072, -162.44, -109.438, 0.28", "157.799, -163.252, -108.867, 0.83", "161.674, -164.468, -108.335, 0.28", "167.088, -166.209, -108.024, 0.83", "170.834, -167.498, -108.176, 0.28", "174.064, -168.657, -108.34, 0.28", "177.622, -170.059, -108.582, 0.83", "183.646, -172.694, -109.091, 0.28", "185.177, -173.441, -109.257, 0.55", "187.946, -174.941, -109.646, 0.28", "191.388, -176.921, -109.991, 0.55", "197.015, -180.384, -110.376, 0.28", "199.992, -182.402, -110.627, 1.11", "203.161, -184.726, -110.933, 0.28", "207.462, -187.911, -111.408, 0.28", "211.966, -191.206, -112.117, 0.28", "214.035, -192.794, -112.786, 0.55", "220.033, -197.688, -115.892, 0.28", "221.179, -198.635, -116.608, 0.55", "222.151, -199.474, -117.375, 0.28", "224.534, -201.707, -119.927, 0.28", "229.585, -207.023, -127.315, 0.28", "231.321, -209.0, -130.436, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-3.92091, -23.5472, -4.76629, 2.22", "-4.99304, -31.7364, -2.55205, 2.22", "-6.01595, -39.5495, -0.439484, 1.94", "-6.18402, -40.8333, -0.0923774, 1.39" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.92091, -23.5472, -4.76629, 1.11", "-10.3758, -24.3137, 4.42006, 1.11", "-12.0305, -24.4599, 6.2574, 0.83", "-14.5864, -24.6374, 8.4215, 0.83", "-18.657, -24.7998, 11.187, 0.83", "-20.8228, -24.8179, 12.4441, 0.83", "-23.6296, -24.8122, 13.8861, 0.83", "-30.0793, -24.9558, 15.6033, 0.83", "-33.468, -24.9753, 16.8127, 0.83", "-35.8606, -24.9929, 18.0701, 0.83", "-37.6547, -25.0255, 19.0719, 0.83", "-39.6158, -25.2308, 20.6263, 0.83", "-41.0514, -25.4792, 22.0074, 0.83", "-46.3967, -26.5317, 28.1012, 0.83", "-49.4164, -27.151, 31.6364, 0.83", "-52.6288, -27.9269, 35.3399, 0.55", "-55.7992, -28.8369, 39.1398, 0.55", "-57.2654, -29.2187, 40.8354, 0.55", "-58.9139, -29.5591, 42.5039, 0.55", "-60.0696, -29.7653, 43.3804, 0.55", "-61.8711, -30.0905, 44.7333, 0.55", "-65.4101, -30.8312, 48.0806, 0.55", "-67.1349, -31.2557, 49.6668, 0.55", "-68.2189, -31.6416, 50.7451, 0.55", "-69.2322, -32.0492, 51.7158, 0.55", "-70.8761, -32.6563, 53.135, 0.55", "-74.3609, -33.6721, 56.0065, 0.55", "-76.1633, -34.1016, 57.31, 0.55", "-78.1444, -34.5444, 59.0795, 0.55", "-80.1665, -34.8889, 61.0737, 0.55", "-81.9655, -35.0922, 62.9114, 0.55", "-83.9083, -35.245, 65.1912, 0.55", "-85.8797, -35.4311, 67.6861, 0.55", "-89.5013, -35.5977, 72.7766, 0.55", "-90.4975, -35.635, 74.4045, 0.55", "-91.4757, -35.7387, 76.3112, 0.55", "-93.3025, -36.1827, 80.4636, 0.55", "-94.1576, -36.5827, 82.5241, 0.55", "-102.208, -38.5314, 92.2404, 0.55", "-109.553, -39.7858, 102.614, 0.55", "-116.476, -41.2257, 113.25, 0.55", "-122.261, -44.1938, 124.224, 0.55", "-127.86, -46.0466, 135.549, 0.55", "-133.475, -49.1925, 146.56, 0.55", "-137.509, -53.0559, 158.015, 0.55", "-139.374, -56.322, 170.201, 0.55", "-143.482, -59.7218, 181.784, 0.55", "-147.095, -63.0431, 193.553, 0.55", "-151.018, -65.8067, 205.376, 0.55", "-156.466, -67.1513, 216.85, 0.55", "-164.585, -65.7773, 226.617, 0.55", "-173.304, -66.0164, 235.953, 0.55", "-180.414, -65.0767, 246.527, 0.55", "-186.159, -64.7057, 257.933, 0.55", "-191.162, -62.3602, 269.444, 0.55", "-194.95, -61.1363, 281.583, 0.55", "-196.913, -59.8995, 294.146, 0.55", "-199.765, -56.931, 306.225, 0.55", "-202.629, -52.4159, 317.788, 0.55", "-206.048, -47.6899, 329.109, 0.55", "-208.265, -43.3705, 340.89, 0.55", "-211.958, -40.5799, 352.784, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-6.69778, 23.2904, 10.0301, 2.49", "-7.81414, 24.2388, 10.7099, 2.49", "-8.74862, 25.1108, 11.4147, 1.11", "-9.9148, 26.2342, 12.2822, 1.11", "-11.2978, 27.5534, 13.3852, 1.11", "-12.4076, 28.6448, 14.4169, 1.11", "-15.1344, 31.4853, 17.4261, 0.83", "-15.7233, 32.1743, 18.2206, 0.83", "-16.3777, 33.0939, 19.4007, 0.83", "-17.2163, 34.606, 21.4002, 0.83", "-17.9739, 36.4315, 23.7045, 0.83", "-18.6079, 38.1897, 26.0216, 0.83", "-18.9236, 39.0675, 27.1397, 0.83", "-19.5315, 40.8406, 29.3361, 0.83", "-19.8012, 41.693, 30.3946, 0.83", "-20.0836, 42.6101, 31.3805, 0.83", "-20.5947, 44.2646, 32.9155, 0.83", "-20.8538, 45.1549, 33.6653, 0.83", "-21.2168, 46.588, 34.8333, 0.83", "-22.0604, 50.532, 37.714, 0.83", "-22.1809, 51.8679, 38.6545, 0.83", "-22.0863, 52.9907, 39.3168, 0.83", "-21.8306, 53.9179, 39.7166, 0.83", "-21.419, 54.8231, 40.0146, 0.83", "-20.9064, 55.6314, 40.1556, 0.55", "-20.1247, 56.6626, 40.0332, 0.55", "-19.1722, 57.8209, 39.8738, 0.28", "-18.4042, 58.7897, 39.7203, 0.28", "-17.7101, 59.7058, 39.5566, 0.28", "-17.1882, 60.3888, 39.4208, 0.28", "-16.1615, 61.5867, 39.1473, 0.28", "-15.5374, 62.253, 39.032, 0.28", "-16.3139, 67.6275, 44.0576, 0.28", "-16.4833, 72.5597, 49.5925, 0.28", "-16.5641, 77.8036, 54.8195, 0.28", "-16.5874, 83.1063, 59.9843, 0.28", "-15.7022, 89.1242, 64.1543, 0.28", "-16.152, 95.7116, 67.3788, 0.28", "-16.013, 102.818, 69.1416, 0.28", "-16.4724, 109.74, 71.5141, 0.28", "-17.906, 116.324, 74.4428, 0.28", "-18.8644, 122.424, 78.4651, 0.28", "-20.6589, 127.946, 83.0402, 0.28", "-21.9076, 134.357, 86.4239, 0.28", "-22.4867, 140.98, 89.5488, 0.28", "-21.7322, 146.912, 93.8704, 0.28", "-19.7643, 152.604, 98.1516, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-6.69778, 23.2904, 10.0301, 1.94", "-5.5511, 25.5678, 9.94023, 1.94", "-4.6999, 27.2583, 9.87354, 1.94", "-3.58681, 29.469, 9.78634, 1.94" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.2112, -75.2201, 12.4333, 1.94", "18.2786, -83.7077, 10.6336, 1.94", "19.3593, -91.2533, 9.61935, 1.39", "19.998, -94.9925, 9.28617, 1.11", "21.0523, -100.553, 8.91161, 1.11", "22.1648, -106.034, 8.53499, 1.11", "23.6392, -113.602, 8.08993, 1.11", "25.4385, -122.561, 8.18782, 0.83", "26.7579, -130.482, 8.82601, 0.83", "27.1398, -133.767, 9.42403, 0.83", "27.3467, -137.267, 10.4398, 0.83", "27.5305, -140.734, 11.7473, 0.83", "27.6156, -145.881, 13.9912, 0.83", "27.4103, -153.727, 17.3139, 0.83", "27.1745, -158.726, 19.4543, 0.83", "27.1203, -161.789, 20.6343, 0.83", "27.0602, -168.45, 23.1423, 0.83", "27.1607, -174.492, 25.08, 0.83", "27.2399, -177.38, 25.9149, 0.83", "27.3512, -179.372, 26.4665, 0.83", "27.3738, -184.038, 27.6696, 0.83", "26.982, -191.241, 29.6016, 0.83", "26.7536, -193.382, 30.2463, 0.83", "26.1439, -199.086, 32.3096, 0.83", "25.8118, -202.736, 33.7122, 0.83", "25.5588, -209.251, 36.4306, 0.83", "25.5173, -213.075, 38.037, 0.83", "25.7642, -217.093, 39.8121, 1.39", "26.1857, -221.376, 42.158, 0.83", "26.4773, -223.584, 43.4875, 0.55", "27.2976, -227.883, 46.7266, 0.55", "27.8195, -229.667, 48.4487, 0.55", "29.4616, -234.275, 53.3855, 0.55", "30.5497, -237.43, 56.7433, 0.55", "29.8506, -246.896, 59.1718, 0.55", "30.9171, -256.441, 61.0908, 0.55", "31.2964, -266.187, 61.8975, 0.55", "30.8573, -275.807, 63.6614, 0.55", "31.6131, -285.275, 66.0651, 0.55", "33.7486, -294.642, 68.0145, 0.55", "35.0886, -303.822, 71.2054, 0.55", "38.3555, -312.255, 75.095, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "17.2112, -75.2201, 12.4333, 0.55", "13.3692, -81.401, 7.32757, 0.55", "10.1896, -86.3537, 3.52164, 0.55", "8.89816, -88.306, 2.14901, 0.55", "7.60608, -90.4097, 0.818939, 0.55", "6.05963, -93.2423, -0.796593, 0.55", "4.06241, -97.0341, -3.14506, 0.55", "2.77449, -99.7475, -4.64155, 0.55", "1.87282, -101.73, -5.81056, 0.55", "0.436464, -104.997, -7.76946, 0.55", "-2.17094, -110.784, -11.1978, 0.28", "-4.68288, -116.45, -14.3975, 1.66", "-6.28198, -119.827, -15.9816, 0.28", "-7.79191, -122.831, -17.184, 1.94", "-10.6932, -128.268, -18.9597, 0.28", "-12.0619, -130.712, -19.548, 1.39", "-12.8737, -132.17, -19.7578, 1.39", "-17.0412, -139.946, -20.2559, 0.28", "-20.0034, -145.608, -20.4744, 0.28", "-21.5072, -148.632, -20.9478, 0.83", "-23.2776, -152.597, -22.0588, 0.28", "-23.9739, -154.532, -22.8212, 0.83", "-24.3225, -155.704, -23.39, 0.28", "-24.7039, -157.392, -24.342, 1.11", "-27.04, -169.515, -31.1396, 0.28", "-27.4069, -171.571, -32.2454, 0.55", "-28.6459, -178.976, -35.9403, 0.28", "-28.8384, -180.455, -36.5534, 0.55", "-29.2259, -184.44, -37.9352, 0.28", "-29.3788, -188.308, -38.7917, 0.83", "-29.358, -189.337, -38.7897, 0.83", "-29.064, -193.941, -38.5759, 0.28", "-28.5309, -198.695, -37.9271, 0.28", "-27.9734, -202.452, -37.2926, 0.55", "-26.6833, -209.623, -36.1854, 0.28", "-25.7323, -214.744, -35.7011, 0.55", "-24.7525, -219.713, -35.2789, 0.28", "-23.8646, -224.029, -34.8959, 0.83", "-23.401, -226.382, -34.8094, 0.28", "-22.7666, -229.816, -34.8857, 0.83", "-21.2566, -238.222, -35.509, 0.28", "-20.8374, -240.707, -35.7939, 0.55", "-20.6317, -241.837, -35.9245, 0.28", "-19.7968, -245.538, -36.3564, 0.83", "-17.8081, -252.754, -36.6592, 0.28", "-16.2838, -257.122, -36.395, 1.11", "-14.7108, -260.711, -35.8236, 0.28", "-13.5937, -262.987, -35.3502, 0.28", "-11.97, -266.009, -34.5519, 0.28", "-10.5699, -268.376, -33.7031, 0.28", "-10.0436, -269.389, -33.4192, 0.55", "-9.70368, -271.436, -33.3831, 0.28", "-9.78532, -273.055, -33.4823, 0.55", "-10.02, -273.99, -33.6076, 0.28", "-10.6704, -275.633, -33.954, 0.55", "-13.5036, -281.668, -35.7741, 0.28", "-14.0432, -282.631, -36.1128, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.18402, -40.8333, -0.0923774, 1.39", "-7.60252, -47.1538, -0.337862, 1.39", "-8.27347, -49.8943, -0.413734, 1.39", "-8.8826, -53.1797, -0.0810992, 1.39", "-9.74172, -58.8728, 0.789165, 1.39", "-10.2795, -62.965, 1.48079, 1.39", "-10.6191, -66.0952, 2.00166, 1.39", "-11.108, -70.2786, 2.76024, 1.11", "-11.7983, -78.6707, 4.47498, 1.11", "-11.9367, -83.1891, 5.41182, 1.11", "-11.8501, -88.8715, 6.64903, 1.11", "-11.7543, -92.4964, 7.42732, 1.39", "-11.6878, -97.2253, 8.32819, 1.39", "-11.6897, -106.776, 9.90624, 0.83", "-11.8002, -109.756, 10.2861, 0.83", "-11.9923, -112.828, 10.7161, 1.11", "-12.3377, -116.425, 11.2552, 0.83", "-13.0163, -121.566, 12.0155, 1.11", "-13.4973, -124.719, 12.4044, 0.83", "-13.9875, -127.198, 12.7256, 0.83", "-14.4589, -129.689, 13.0147, 0.83", "-14.7871, -132.324, 13.2618, 0.83", "-14.9153, -134.825, 13.4542, 0.83", "-14.8981, -136.348, 13.5846, 0.83", "-14.7817, -138.504, 13.704, 0.83", "-14.5016, -141.873, 13.8636, 0.83", "-14.0527, -146.381, 14.112, 0.83", "-13.6775, -149.531, 14.2879, 1.11", "-13.3628, -152.242, 14.4877, 0.83", "-13.0046, -155.643, 14.6234, 0.83", "-12.9095, -156.551, 14.631, 0.83", "-12.7694, -158.837, 14.572, 0.83", "-12.6869, -161.11, 14.4028, 0.83", "-12.4919, -166.321, 13.907, 0.83", "-12.384, -170.507, 13.4667, 0.83", "-12.3337, -172.338, 13.2503, 0.83", "-12.2981, -175.388, 12.7655, 0.83", "-12.3043, -178.749, 12.1556, 0.83", "-12.3762, -181.74, 11.5929, 0.83", "-12.4073, -183.75, 11.1551, 0.83", "-12.3887, -186.167, 10.7592, 0.83", "-12.2763, -189.033, 10.2005, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.18402, -40.8333, -0.0923774, 0.83", "-7.45301, -42.5935, 5.99101, 0.83", "-7.62817, -42.7988, 6.59624, 0.83", "-8.07438, -43.2355, 7.77589, 0.83", "-9.59825, -44.4477, 11.1124, 0.83", "-10.3288, -44.9511, 12.4351, 0.83", "-11.1144, -45.4435, 13.6162, 0.83", "-11.8519, -45.8522, 14.257, 0.83", "-12.7844, -46.336, 14.936, 0.83", "-13.7312, -46.7692, 15.4894, 0.83", "-15.1006, -47.4312, 16.2029, 0.83", "-16.5544, -48.2158, 17.0581, 0.83", "-17.744, -48.9302, 17.8165, 0.83", "-19.0411, -49.8057, 18.6756, 0.83", "-20.0651, -50.5666, 19.366, 0.83", "-21.8887, -51.9615, 20.6002, 0.83", "-22.9985, -52.7894, 21.3494, 0.83", "-24.3137, -53.7648, 22.2219, 0.83", "-26.2294, -55.1403, 23.3242, 0.83", "-27.3749, -55.9288, 23.8708, 0.83", "-28.1902, -56.5225, 24.1819, 0.83", "-29.0723, -57.1611, 24.4329, 0.83", "-30.0107, -57.8427, 24.5715, 0.83", "-31.8418, -59.1934, 24.6424, 0.83", "-33.5511, -60.4561, 24.5625, 0.83", "-35.2826, -61.7575, 24.4818, 0.83", "-36.0161, -62.3183, 24.485, 0.83", "-38.9381, -64.5478, 24.6653, 0.83", "-40.2231, -65.5264, 24.8162, 0.83", "-41.9915, -66.8628, 25.0119, 0.83", "-44.373, -68.6855, 25.2493, 0.83", "-47.4269, -70.9224, 25.6113, 0.55", "-49.1956, -72.2667, 25.8727, 0.55", "-50.2249, -73.0765, 26.0755, 0.55", "-53.4145, -75.4686, 26.6853, 0.55", "-55.5885, -76.9879, 26.831, 0.55", "-57.3725, -78.1181, 26.77, 1.11", "-59.0602, -79.1061, 26.6335, 1.11", "-59.7886, -79.5406, 26.5907, 1.11", "-61.9341, -80.8016, 26.4224, 0.28", "-67.2096, -83.8498, 26.0592, 0.83", "-70.1114, -85.502, 25.7743, 0.28", "-71.8655, -86.5557, 25.7011, 0.83", "-74.2298, -87.9569, 25.8419, 0.55", "-76.7129, -89.5208, 26.4269, 0.55", "-77.8718, -90.3349, 26.9607, 0.83", "-78.7121, -90.9688, 27.8781, 0.55", "-81.206, -92.8758, 31.9216, 0.55", "-81.7, -93.2137, 33.0322, 0.55", "-82.227, -93.4871, 34.5138, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-19.7643, 152.604, 98.1516, 0.28", "-21.2963, 161.042, 104.538, 0.28", "-21.6122, 169.109, 111.571, 0.28", "-20.8441, 178.147, 117.184, 0.28", "-19.8746, 186.998, 123.072, 0.28", "-19.012, 195.365, 129.677, 0.28", "-19.4088, 203.206, 136.971, 0.28", "-20.4214, 210.068, 145.184, 0.28", "-20.6227, 218.169, 152.18, 0.28", "-20.4558, 226.826, 158.438, 0.28", "-22.1314, 235.706, 164.118, 0.28", "-22.0722, 245.622, 167.938, 0.28", "-22.0835, 255.482, 171.906, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-19.7643, 152.604, 98.1516, 0.28", "-18.9022, 158.955, 100.98, 0.28", "-17.8979, 165.024, 104.36, 0.28", "-16.0038, 170.83, 107.842, 0.28", "-13.5625, 176.925, 110.322, 0.28", "-11.0116, 182.492, 113.797, 0.28", "-7.73161, 188.007, 116.702, 0.28", "-4.41838, 193.544, 119.524, 0.28", "-0.511296, 198.176, 123.179, 0.28", "4.27549, 202.794, 125.598, 0.28", "9.2649, 207.66, 126.779, 0.28", "13.9034, 212.875, 127.817, 0.28", "18.7919, 217.896, 128.701, 0.28", "23.7638, 222.639, 130.378, 0.28", "28.9363, 227.2, 131.979, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.58681, 29.469, 9.78634, 1.66", "1.59533, 26.791, 15.8806, 1.66", "4.46315, 25.309, 19.2532, 1.66", "6.27142, 24.3745, 21.3798, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.58681, 29.469, 9.78634, 0.83", "-1.14194, 30.8921, 9.04366, 0.83", "0.828255, 32.1067, 8.65609, 0.83", "2.69378, 33.4507, 8.1519, 0.83", "5.52901, 35.9236, 7.3029, 0.83", "7.2669, 37.6618, 6.76347, 0.83", "9.48183, 39.919, 5.99473, 0.83", "11.373, 41.7982, 4.86823, 0.83", "14.7838, 45.1382, 2.37443, 0.83", "16.9656, 47.3485, 0.520866, 0.83", "18.2177, 48.6842, -0.560225, 0.83", "20.3928, 51.1403, -2.83206, 0.83", "25.084, 56.806, -8.63233, 0.83", "26.1986, 58.1772, -10.0914, 0.83", "27.4856, 59.7367, -11.9939, 0.83", "28.9535, 61.6077, -14.1915, 0.55", "31.9389, 65.9529, -18.8091, 0.55", "32.8702, 67.7569, -20.3377, 0.55", "33.4808, 69.1811, -21.2333, 0.55", "36.91, 77.0444, -26.0489, 0.55", "39.5965, 82.7392, -29.166, 0.55", "40.5367, 84.7361, -30.0683, 0.83", "41.3718, 86.3681, -30.8364, 0.83", "42.4499, 88.3368, -32.0319, 0.83", "43.1305, 89.5277, -32.8079, 0.83", "44.0906, 91.1586, -34.0932, 0.55", "45.1197, 92.8009, -35.6631, 0.55", "48.9406, 99.0974, -41.4823, 0.55", "49.5798, 100.183, -42.4532, 0.55", "51.2908, 103.413, -45.0901, 1.11", "53.6376, 108.092, -48.5003, 0.55", "54.1712, 109.196, -49.1749, 0.55", "55.8125, 112.657, -50.7197, 0.83", "56.7765, 114.939, -51.2551, 0.28", "58.0016, 117.99, -51.8064, 0.55", "58.5722, 119.424, -52.123, 0.28", "59.4423, 121.556, -52.4188, 0.28", "60.4895, 124.038, -52.8772, 0.28", "60.7997, 124.688, -53.0612, 0.28", "61.4818, 126.002, -53.6032, 0.55", "65.0255, 131.937, -57.3542, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.2763, -189.033, 10.2005, 0.83", "-12.3681, -192.901, 9.53798, 0.83", "-12.3565, -194.571, 9.25166, 0.83", "-12.2908, -198.857, 8.54593, 0.83", "-12.1917, -204.331, 7.47787, 0.83", "-12.1878, -208.108, 6.73007, 0.83", "-12.1904, -210.11, 6.39867, 0.83", "-12.2181, -212.56, 6.053, 0.83", "-12.2491, -214.149, 5.94572, 0.83", "-12.3231, -218.421, 5.97336, 0.83", "-12.32, -222.002, 6.26572, 0.83", "-12.2846, -225.506, 6.61574, 0.55", "-12.2956, -228.964, 7.02757, 0.55", "-12.391, -233.834, 7.37094, 0.83", "-12.3863, -235.662, 7.43766, 0.83", "-12.38, -237.82, 7.46774, 0.83", "-12.4607, -239.342, 7.32049, 0.83", "-12.7178, -241.455, 6.9238, 0.83", "-13.6036, -246.872, 5.69058, 0.83", "-14.1665, -249.785, 5.08851, 1.39", "-14.5436, -251.53, 4.78556, 1.39", "-16.1299, -258.124, 3.92686, 0.83", "-16.6236, -260.135, 3.75672, 0.83", "-17.4732, -263.301, 3.67225, 1.39", "-18.529, -266.58, 3.84292, 0.83", "-19.0025, -267.848, 3.92203, 0.28", "-20.2028, -270.794, 4.06813, 0.83", "-21.4048, -273.487, 4.20543, 0.83", "-22.8659, -276.433, 4.1718, 1.11", "-24.6365, -279.742, 4.08116, 0.28", "-26.2964, -282.691, 3.92983, 0.28", "-29.2672, -287.829, 3.5581, 0.28", "-31.0661, -290.841, 3.23573, 0.28", "-33.5677, -295.074, 2.58437, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.2763, -189.033, 10.2005, 0.28", "-9.0237, -189.756, 8.05405, 0.28", "-6.79853, -190.246, 6.98921, 0.28", "-4.1867, -190.809, 5.93159, 0.28", "1.65834, -191.911, 4.69029, 0.28", "3.54989, -192.187, 4.58121, 0.28", "9.68547, -192.933, 4.47844, 0.28", "13.0483, -193.263, 4.6121, 0.28", "14.8495, -193.421, 4.74704, 0.28", "21.8214, -194.011, 5.47057, 0.28", "28.0023, -194.618, 6.21594, 0.28", "32.9944, -195.139, 6.58058, 0.28", "35.849, -195.442, 6.63666, 0.28", "38.1147, -195.689, 6.66634, 0.28", "39.8779, -195.917, 6.59652, 0.28", "42.8116, -196.477, 5.90812, 0.28", "44.5134, -197.02, 5.24137, 0.28", "57.1845, -198.7, 6.42438, 0.28", "69.9803, -199.266, 5.54107, 0.28", "82.2419, -202.266, 3.25994, 0.28", "93.9261, -206.619, 0.319865, 0.28", "105.081, -212.843, 0.273538, 0.28", "116.989, -217.531, 0.71187, 0.28", "129.017, -221.934, 0.854383, 0.28", "140.94, -226.56, 1.52457, 0.28", "152.795, -231.018, 3.4313, 0.28", "164.63, -233.962, 7.40661, 0.28", "176.124, -234.96, 13.0385, 0.28", "186.455, -235.133, 20.6594, 0.28", "196.931, -237.836, 27.5518, 0.28", "205.337, -241.327, 36.5786, 0.28", "215.695, -243.103, 43.9465, 0.28", "225.831, -243.593, 51.8125, 0.28", "235.849, -246.399, 59.3162, 0.28", "246.761, -246.882, 66.063, 0.28", "258.376, -246.682, 71.528, 0.28", "270.237, -248.23, 76.1859, 0.28", "282.577, -250.688, 78.7043, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-22.0835, 255.482, 171.906, 0.28", "-26.8572, 262.008, 178.145, 0.28", "-32.9321, 267.439, 184.36, 0.28", "-40.7481, 271.716, 189.479, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-22.0835, 255.482, 171.906, 0.28", "-11.8281, 257.33, 165.661, 0.28", "-1.77029, 261.318, 160.229, 0.28", "8.93988, 264.922, 155.876, 0.28", "18.4843, 270.737, 151.351, 0.28", "27.845, 276.829, 146.826, 0.28", "36.5965, 282.958, 141.241, 0.28", "44.3686, 288.04, 133.489, 0.28", "53.3607, 290.035, 125.561, 0.28", "61.212, 292.575, 116.644, 0.28", "70.4141, 292.705, 108.679, 0.28", "78.1431, 292.882, 99.2751, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "28.9363, 227.2, 131.979, 0.28", "35.9475, 223.975, 138.431, 0.28", "44.0725, 222.187, 144.119, 0.28", "52.2446, 222.541, 150.042, 0.28", "61.023, 224.399, 154.681, 0.28", "68.9326, 225.746, 160.817, 0.28", "75.939, 228.079, 167.702, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "28.9363, 227.2, 131.979, 0.28", "25.6733, 228.817, 125.027, 0.28", "22.9051, 229.567, 117.713, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.27142, 24.3745, 21.3798, 1.11", "11.7079, 24.7916, 20.2177, 1.11", "14.1915, 25.0386, 19.8752, 1.11", "19.3487, 25.7945, 19.3991, 1.11", "22.72, 26.4849, 19.2684, 1.11", "25.3736, 27.1404, 19.2441, 1.11", "30.3688, 28.4015, 19.2674, 1.11", "35.7847, 30.0308, 19.5523, 1.11", "38.0071, 30.8066, 19.5259, 1.11", "40.6751, 31.9062, 19.133, 0.83", "42.4031, 32.6608, 18.8516, 0.83", "43.6262, 33.1346, 18.6425, 0.83", "47.2152, 34.3893, 18.0452, 0.83", "48.5033, 34.8154, 17.6737, 0.83", "51.2953, 35.6772, 16.9212, 0.83", "53.298, 36.2943, 16.4355, 0.83", "54.7273, 36.7615, 16.192, 0.83", "56.2395, 37.2703, 16.0556, 0.83", "58.0783, 37.8614, 16.079, 0.83", "59.7198, 38.4189, 16.0544, 0.83", "60.8969, 38.8712, 16.0035, 0.83", "62.2545, 39.4454, 15.8287, 0.83", "63.364, 39.9257, 15.6288, 0.83", "64.74, 40.5049, 15.3138, 0.83", "66.5468, 41.3124, 14.8255, 0.83", "67.828, 41.9425, 14.4855, 0.83", "69.2572, 42.7342, 14.1253, 0.83", "70.5271, 43.535, 13.835, 0.83", "71.5524, 44.2542, 13.6382, 0.83", "72.9214, 45.2262, 13.4528, 0.83", "73.8456, 45.861, 13.3983, 0.55", "74.3328, 46.206, 13.3704, 0.55", "75.0441, 46.711, 13.2228, 0.55", "75.5106, 47.0247, 13.0511, 0.55", "76.498, 47.6703, 12.5596, 0.55", "77.1454, 48.0398, 11.9927, 0.55", "77.7064, 48.3085, 11.3886, 0.55", "79.755, 49.0778, 9.05021, 0.55", "80.487, 49.2859, 8.20884, 0.55", "81.1854, 49.4481, 7.44013, 0.55", "84.1002, 50.0038, 4.45158, 0.55", "84.7587, 50.0948, 3.85469, 0.55", "85.7433, 50.1489, 3.13741, 0.55", "86.7889, 50.1095, 2.70574, 0.55", "88.2039, 49.9197, 2.36677, 0.55", "89.5105, 49.6814, 2.28682, 0.55", "90.2505, 49.5526, 2.36078, 0.83", "91.4552, 49.3664, 2.47404, 0.83", "94.0535, 49.0045, 2.80237, 0.83", "95.3644, 48.8665, 2.97543, 0.55", "96.8378, 48.7917, 3.14675, 0.55", "98.5286, 48.8422, 3.30071, 0.55", "99.9115, 48.9875, 3.38042, 0.55", "101.757, 49.2972, 3.53781, 0.55", "104.007, 49.8087, 3.73638, 0.83", "106.216, 50.4309, 4.01156, 0.55", "107.865, 50.9533, 4.13096, 0.55", "109.444, 51.5151, 4.14624, 0.55", "112.231, 52.58, 3.9327, 0.55", "113.598, 53.1219, 3.69591, 0.55", "115.061, 53.6762, 3.36895, 0.55", "118.956, 55.0697, 2.6623, 0.55", "120.537, 55.6272, 2.41096, 0.55", "124.071, 56.8706, 1.90877, 1.11", "125.085, 57.2119, 1.87503, 0.55", "128.488, 58.3259, 2.2539, 0.83", "131.575, 59.3236, 2.98849, 0.55", "132.702, 59.7021, 3.37694, 0.55", "134.383, 60.2912, 4.0047, 0.55", "138.539, 61.7743, 5.59523, 0.55", "139.489, 62.1141, 5.90607, 0.28", "141.608, 62.8938, 6.43499, 0.28", "143.402, 63.5799, 6.65993, 0.28", "145.55, 64.4302, 6.78142, 0.83", "147.379, 65.2218, 6.7102, 0.55", "148.815, 65.8863, 6.47591, 0.55", "150.247, 66.5528, 6.23955, 0.55", "151.694, 67.2742, 6.00269, 0.55", "152.629, 67.7874, 5.87413, 0.28", "153.273, 68.1758, 5.81111, 0.28", "154.335, 68.8485, 5.7559, 0.55", "155.755, 69.7288, 5.74427, 0.55", "156.901, 70.3929, 5.74213, 0.55", "157.815, 70.881, 5.7462, 0.55", "159.299, 71.6693, 5.76804, 0.55", "160.466, 72.2835, 5.79789, 0.55", "167.342, 74.7978, 3.83905, 0.55", "173.922, 78.1623, 2.21031, 0.55", "180.925, 81.0107, 1.74029, 0.55", "188.32, 82.4471, 2.60957, 0.55", "195.837, 82.7162, 1.65833, 0.55", "203.124, 82.1788, -0.331503, 0.55", "210.358, 82.852, -2.50664, 0.55", "217.753, 83.3686, -4.10009, 0.55", "224.925, 84.6755, -6.19061, 0.55", "232.029, 87.0289, -7.39254, 0.55", "238.888, 90.2241, -7.60737, 0.55", "245.438, 93.7961, -6.38458, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.27142, 24.3745, 21.3798, 1.11", "6.34407, 27.0631, 24.7882, 1.11", "6.59626, 31.0207, 29.4137, 1.11", "6.80952, 32.9414, 31.7726, 1.11", "7.11099, 34.935, 34.1538, 0.83", "7.77127, 38.6429, 38.3231, 0.83", "8.2594, 41.358, 41.4852, 0.83", "8.63175, 43.7213, 44.3003, 0.83", "9.29344, 47.5188, 48.21, 0.55", "9.61034, 48.833, 49.5906, 0.55", "9.97719, 50.3754, 51.0473, 0.55", "10.6269, 54.0988, 53.8951, 0.55", "11.1209, 59.7888, 58.0696, 0.55", "11.1779, 60.9023, 59.1548, 0.55", "11.0112, 65.7795, 63.757, 0.55", "10.9885, 66.2272, 64.4797, 0.55", "11.0066, 66.5047, 65.2785, 0.55", "12.7164, 73.5806, 71.5346, 0.55", "15.1359, 81.8835, 75.6057, 0.55", "16.4522, 90.7657, 78.7924, 0.55", "17.1388, 99.9184, 81.2928, 0.55", "18.6546, 108.778, 84.4605, 0.55", "22.1568, 117.1, 87.6242, 0.55", "24.344, 125.57, 91.4568, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "65.0255, 131.937, -57.3542, 0.28", "59.5268, 131.505, -54.6783, 0.28", "57.92, 131.379, -53.8963, 0.28", "56.3203, 131.253, -53.1178, 0.28", "54.8012, 131.134, -52.3785, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "65.0255, 131.937, -57.3542, 0.55", "66.5738, 135.94, -66.5154, 0.55", "66.9423, 136.985, -67.9992, 0.55", "70.2623, 145.402, -76.7268, 0.55", "70.9381, 147.15, -78.0342, 0.28", "71.7119, 149.214, -79.1991, 0.28", "71.7119, 149.214, -79.1991, 0.28", "73.5057, 153.091, -81.867, 0.83", "75.5889, 157.179, -84.6337, 0.28", "77.3719, 160.805, -86.2102, 0.28", "78.4526, 163.012, -87.0408, 0.55", "79.9752, 166.213, -88.0572, 0.28", "86.7767, 180.11, -94.0855, 0.28", "87.3713, 181.366, -94.7276, 0.28", "91.4495, 190.792, -99.7456, 0.55", "92.5992, 193.609, -101.284, 0.55", "93.4801, 195.998, -102.482, 0.28", "97.128, 207.542, -107.413, 0.28", "98.4075, 212.441, -108.886, 0.28", "99.0063, 214.602, -109.662, 0.28", "100.497, 219.451, -111.758, 0.83", "100.977, 221.037, -112.294, 0.28", "101.58, 223.068, -112.668, 0.55", "102.065, 224.68, -112.597, 0.28", "103.422, 227.904, -112.372, 0.28", "104.445, 229.819, -112.194, 0.28", "105.946, 232.107, -111.925, 0.55", "107.244, 233.735, -111.906, 0.55", "111.158, 237.712, -112.208, 0.28", "114.535, 240.608, -112.961, 0.83", "116.631, 242.271, -113.655, 0.28", "119.61, 244.656, -114.891, 0.28", "125.491, 249.315, -117.665, 0.28", "128.469, 251.77, -119.172, 0.83", "132.435, 255.451, -121.367, 0.28", "134.6, 257.844, -122.587, 0.28", "136.535, 260.273, -123.538, 0.28", "137.803, 262.116, -124.028, 0.28", "139.949, 265.871, -124.246, 0.28", "141.554, 269.174, -124.164, 0.28", "142.501, 271.39, -123.915, 0.28", "143.349, 273.39, -123.814, 0.28", "144.776, 276.871, -123.842, 0.55", "146.555, 281.492, -124.107, 0.28", "148.24, 285.443, -124.444, 0.28", "149.853, 288.818, -124.778, 0.28", "152.651, 294.008, -125.297, 0.28", "154.569, 297.06, -125.577, 0.28", "156.664, 299.752, -125.918, 0.55", "160.361, 303.643, -126.567, 0.28", "161.792, 304.945, -126.734, 0.55", "163.922, 306.7, -126.844, 0.28", "166.668, 308.93, -126.795, 0.28", "170.807, 312.249, -126.77, 0.28", "174.902, 315.525, -126.72, 0.28", "176.31, 316.711, -126.689, 0.55", "178.205, 318.347, -126.597, 0.28", "179.83, 319.801, -126.33, 0.28", "181.765, 321.575, -125.793, 0.28", "186.205, 325.471, -124.099, 0.55", "188.361, 327.237, -123.224, 0.28", "190.842, 329.057, -122.201, 0.28", "196.368, 332.555, -119.953, 0.55", "199.18, 334.101, -118.842, 0.28", "202.72, 335.859, -117.421, 0.28", "205.922, 337.252, -116.122, 0.28", "208.798, 338.329, -115.007, 0.28", "212.894, 339.611, -113.611, 0.28", "216.0, 340.354, -112.939, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-33.5677, -295.074, 2.58437, 0.28", "-26.9276, -295.624, 1.3215, 0.28", "-20.2508, -296.23, -0.340187, 0.28", "-10.4113, -297.115, -2.70735, 0.28", "-6.89119, -297.399, -3.5724, 0.28", "-3.38241, -297.693, -4.54607, 0.28", "0.236228, -298.001, -5.5976, 0.28", "5.58305, -298.365, -7.01485, 0.28", "10.2279, -298.595, -8.33605, 0.28", "14.1538, -298.691, -10.2, 0.28", "18.0525, -298.743, -12.385, 0.28", "21.9706, -298.74, -14.8036, 0.28", "27.0093, -298.656, -18.128, 0.28", "29.1007, -298.591, -19.7442, 0.28", "39.1075, -298.206, -29.1393, 0.28", "41.8474, -298.078, -32.1315, 0.28", "45.4864, -297.804, -36.9463, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-33.5677, -295.074, 2.58437, 0.28", "-35.9876, -294.864, 3.97564, 0.28", "-38.3185, -294.688, 5.21756, 0.28", "-40.3239, -294.592, 6.1929, 0.28", "-44.4329, -294.398, 8.06463, 0.28", "-46.6938, -294.277, 9.03577, 0.28", "-48.7836, -294.168, 9.87889, 0.28", "-50.923, -294.095, 10.6838, 0.28", "-53.3987, -294.092, 11.5106, 0.28", "-54.6813, -294.158, 11.8554, 0.28", "-56.2247, -294.328, 12.1353, 0.28", "-58.3614, -294.75, 12.5199, 0.28", "-60.1463, -295.257, 12.8374, 0.28", "-61.5998, -295.797, 13.0973, 0.28", "-63.6667, -296.753, 13.469, 0.28", "-65.6788, -297.798, 13.832, 0.28", "-67.5981, -298.906, 14.1794, 0.28", "-69.174, -299.896, 14.4656, 0.28", "-70.8651, -301.01, 14.7732, 0.28", "-72.7828, -302.296, 15.1222, 0.28", "-78.6165, -303.883, 17.9001, 0.28", "-84.1926, -305.607, 21.0898, 0.28", "-89.9496, -307.048, 24.1021, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "282.577, -250.688, 78.7043, 0.28", "290.296, -252.625, 82.0967, 0.28", "298.138, -253.747, 85.5867, 0.28", "306.249, -255.602, 87.9481, 0.28", "314.613, -257.456, 89.1069, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "282.577, -250.688, 78.7043, 0.28", "288.619, -251.635, 84.2548, 0.28", "294.385, -252.139, 90.1457, 0.28", "300.046, -251.243, 96.0813, 0.28", "305.823, -249.13, 101.555, 0.28", "310.311, -246.283, 107.823, 0.28", "313.516, -242.642, 114.43, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_19", "dend_0", "dend_24", "dend_23", "dend_21", "dend_20", "dend_2", "dend_1", "dend_26", "dend_25", "dend_14", "dend_3", "dend_28", "dend_27", "dend_16", "dend_15", "dend_5", "dend_4", "dend_36", "dend_29", "dend_18", "dend_17", "dend_7", "dend_6", "dend_40", "dend_37", "dend_33", "dend_30", "dend_11", "dend_8", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_13", "dend_12", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_22", "dend_19", "dend_0", "dend_24", "dend_23", "dend_21", "dend_20", "dend_2", "dend_1", "dend_26", "dend_25", "dend_14", "dend_3", "dend_28", "dend_27", "dend_16", "dend_15", "dend_5", "dend_4", "dend_36", "dend_29", "dend_18", "dend_17", "dend_7", "dend_6", "dend_40", "dend_37", "dend_33", "dend_30", "dend_11", "dend_8", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_13", "dend_12", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_19", "dend_0", "axon_0", "dend_24", "dend_23", "dend_21", "dend_20", "dend_2", "dend_1", "axon_1", "dend_26", "dend_25", "dend_14", "dend_3", "dend_28", "dend_27", "dend_16", "dend_15", "dend_5", "dend_4", "dend_36", "dend_29", "dend_18", "dend_17", "dend_7", "dend_6", "dend_40", "dend_37", "dend_33", "dend_30", "dend_11", "dend_8", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_13", "dend_12", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_22", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "axon_0", "axon_0", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_LBC_8ce13ea42d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: dend_2
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_22, dend_19, dend_0, axon_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, axon_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_22(0), soma_0(0.49999926341317097)
    connect dend_19(0), soma_0(0.49999926341317097)
    connect dend_0(0), soma_0(0.49999926341317097)
    connect axon_0(0), soma_0(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_14(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.26545, 12.8263, -0.385372, 4.20571 ) }
    soma_0 { pt3dadd( -2.99538, 11.4835, -0.361166, 7.19402 ) }
    soma_0 { pt3dadd( -2.72531, 10.1406, -0.336961, 9.45629 ) }
    soma_0 { pt3dadd( -2.45524, 8.79768, -0.312756, 10.8887 ) }
    soma_0 { pt3dadd( -2.18516, 7.45479, -0.28855, 12.1858 ) }
    soma_0 { pt3dadd( -1.91509, 6.11191, -0.264345, 13.0837 ) }
    soma_0 { pt3dadd( -1.64502, 4.76902, -0.24014, 13.8391 ) }
    soma_0 { pt3dadd( -1.37495, 3.42613, -0.215934, 14.1927 ) }
    soma_0 { pt3dadd( -1.10488, 2.08325, -0.191729, 14.7245 ) }
    soma_0 { pt3dadd( -0.834809, 0.740358, -0.167524, 15.0655 ) }
    soma_0 { pt3dadd( -0.564738, -0.602529, -0.143318, 15.0604 ) }
    soma_0 { pt3dadd( -0.294667, -1.94542, -0.119113, 14.8454 ) }
    soma_0 { pt3dadd( -0.0245954, -3.2883, -0.0949076, 14.4598 ) }
    soma_0 { pt3dadd( 0.245476, -4.63119, -0.0707023, 13.4621 ) }
    soma_0 { pt3dadd( 0.515547, -5.97408, -0.0464969, 12.4622 ) }
    soma_0 { pt3dadd( 0.785618, -7.31696, -0.0222916, 11.0253 ) }
    soma_0 { pt3dadd( 1.05569, -8.65985, 0.00191374, 9.34508 ) }
    soma_0 { pt3dadd( 1.32576, -10.0027, 0.0261191, 7.80961 ) }
    soma_0 { pt3dadd( 1.59583, -11.3456, 0.0503244, 6.28847 ) }
    soma_0 { pt3dadd( 1.8659, -12.6885, 0.0745297, 5.0944 ) }
    soma_0 { pt3dadd( 2.13597, -14.0314, 0.0987351, 2.89855 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -3.80934, 12.1835, 8.90928, 5.26 ) }
    dend_22 { pt3dadd( -3.91116, 12.9236, 7.7337, 4.43 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 23/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.75934, -3.12399, 15.6893, 1.66 ) }
    dend_19 { pt3dadd( -9.2898, -3.33988, 17.9642, 1.66 ) }
    dend_19 { pt3dadd( -11.1373, -3.60049, 20.7102, 1.66 ) }
    dend_19 { pt3dadd( -15.1277, -4.16339, 26.6416, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.73066, -11.8015, 8.52928, 3.32 ) }
    dend_0 { pt3dadd( 3.46421, -15.6548, 8.52928, 3.05 ) }
    dend_0 { pt3dadd( 3.87177, -17.7957, 8.52928, 3.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 30/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.13597, -14.0314, 0.0987351, 1.11 ) }
    axon_0 { pt3dadd( 5.09344, -28.737, 0.0987351, 1.11 ) }
    axon_0 { pt3dadd( 8.05091, -43.4425, 0.0987351, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.91116, 12.9236, 7.7337, 3.88 ) }
    dend_24 { pt3dadd( -4.52911, 14.4379, 7.73148, 3.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 35/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.91116, 12.9236, 7.7337, 1.11 ) }
    dend_23 { pt3dadd( 0.490635, 22.2795, -8.59454, 1.11 ) }
    dend_23 { pt3dadd( 1.7398, 24.9384, -12.792, 1.11 ) }
    dend_23 { pt3dadd( 2.41729, 26.334, -14.7835, 0.83 ) }
    dend_23 { pt3dadd( 2.9388, 27.4152, -16.1519, 0.55 ) }
    dend_23 { pt3dadd( 4.16974, 29.8404, -18.8636, 0.55 ) }
    dend_23 { pt3dadd( 4.75678, 30.9204, -19.9544, 0.55 ) }
    dend_23 { pt3dadd( 5.83746, 32.5262, -20.5047, 0.55 ) }
    dend_23 { pt3dadd( 6.94283, 33.8525, -21.314, 0.83 ) }
    dend_23 { pt3dadd( 8.21289, 35.2628, -22.3679, 0.83 ) }
    dend_23 { pt3dadd( 9.80109, 36.9182, -23.7341, 0.55 ) }
    dend_23 { pt3dadd( 10.7663, 37.8207, -24.506, 0.55 ) }
    dend_23 { pt3dadd( 11.7411, 38.6705, -25.3009, 0.55 ) }
    dend_23 { pt3dadd( 17.0728, 43.2243, -30.9783, 0.55 ) }
    dend_23 { pt3dadd( 17.7967, 43.7951, -31.8583, 0.55 ) }
    dend_23 { pt3dadd( 18.5133, 44.3247, -32.7708, 0.28 ) }
    dend_23 { pt3dadd( 19.3261, 44.95, -33.8662, 0.28 ) }
    dend_23 { pt3dadd( 20.53, 45.9835, -35.5812, 0.28 ) }
    dend_23 { pt3dadd( 24.6548, 49.8818, -41.0918, 0.55 ) }
    dend_23 { pt3dadd( 26.2158, 51.5294, -42.6429, 0.28 ) }
    dend_23 { pt3dadd( 27.2057, 52.6276, -43.5537, 0.28 ) }
    dend_23 { pt3dadd( 27.924, 53.4561, -44.1192, 0.28 ) }
    dend_23 { pt3dadd( 29.2049, 54.9567, -44.852, 0.55 ) }
    dend_23 { pt3dadd( 31.4266, 57.732, -45.5455, 0.55 ) }
    dend_23 { pt3dadd( 34.1269, 61.2216, -45.6093, 0.28 ) }
    dend_23 { pt3dadd( 34.307, 61.4646, -45.6064, 0.28 ) }
    dend_23 { pt3dadd( 35.6353, 63.1218, -45.8545, 0.28 ) }
    dend_23 { pt3dadd( 37.3485, 65.077, -46.4137, 0.28 ) }
    dend_23 { pt3dadd( 38.8078, 66.5705, -47.001, 0.28 ) }
    dend_23 { pt3dadd( 39.6967, 67.4589, -47.4356, 0.28 ) }
    dend_23 { pt3dadd( 41.3009, 68.9658, -48.223, 0.55 ) }
    dend_23 { pt3dadd( 45.9364, 73.3773, -51.1763, 0.28 ) }
    dend_23 { pt3dadd( 47.8358, 75.2199, -52.5038, 0.28 ) }
    dend_23 { pt3dadd( 49.8192, 77.3147, -53.9076, 0.28 ) }
    dend_23 { pt3dadd( 51.021, 78.7377, -54.9007, 0.28 ) }
    dend_23 { pt3dadd( 53.114, 81.4863, -56.9031, 0.55 ) }
    dend_23 { pt3dadd( 56.6185, 86.5963, -60.5583, 0.28 ) }
    dend_23 { pt3dadd( 58.7991, 90.216, -62.9263, 0.28 ) }
    dend_23 { pt3dadd( 60.9558, 94.1714, -65.5109, 0.28 ) }
    dend_23 { pt3dadd( 63.7752, 99.904, -69.0705, 0.55 ) }
    dend_23 { pt3dadd( 65.2725, 103.204, -70.9617, 0.28 ) }
    dend_23 { pt3dadd( 66.0406, 105.01, -71.8594, 0.28 ) }
    dend_23 { pt3dadd( 67.0, 107.219, -72.6469, 0.28 ) }
    dend_23 { pt3dadd( 68.359, 110.161, -73.5619, 0.55 ) }
    dend_23 { pt3dadd( 69.8723, 112.883, -74.3341, 0.28 ) }
    dend_23 { pt3dadd( 70.8505, 114.46, -74.6271, 0.28 ) }
    dend_23 { pt3dadd( 72.2187, 116.573, -75.015, 0.28 ) }
    dend_23 { pt3dadd( 74.2443, 119.494, -75.7012, 0.28 ) }
    dend_23 { pt3dadd( 75.286, 120.919, -76.0962, 0.55 ) }
    dend_23 { pt3dadd( 78.254, 124.904, -77.3272, 0.55 ) }
    dend_23 { pt3dadd( 79.2972, 126.285, -77.7607, 0.55 ) }
    dend_23 { pt3dadd( 80.2871, 127.655, -78.1328, 0.55 ) }
    dend_23 { pt3dadd( 81.7577, 129.901, -78.6278, 0.83 ) }
    dend_23 { pt3dadd( 83.0632, 132.019, -78.9514, 0.28 ) }
    dend_23 { pt3dadd( 83.7556, 133.328, -79.0473, 0.28 ) }
    dend_23 { pt3dadd( 84.5836, 135.246, -79.1037, 0.28 ) }
    dend_23 { pt3dadd( 85.6804, 138.758, -79.376, 0.28 ) }
    dend_23 { pt3dadd( 85.9031, 139.946, -79.5175, 0.28 ) }
    dend_23 { pt3dadd( 86.1644, 141.793, -79.7816, 0.55 ) }
    dend_23 { pt3dadd( 86.5285, 143.985, -80.1259, 0.28 ) }
    dend_23 { pt3dadd( 87.4274, 147.667, -80.7061, 0.28 ) }
    dend_23 { pt3dadd( 88.3758, 150.52, -81.1379, 0.28 ) }
    dend_23 { pt3dadd( 89.6637, 153.551, -81.8672, 0.28 ) }
    dend_23 { pt3dadd( 91.6292, 157.192, -82.9288, 0.28 ) }
    dend_23 { pt3dadd( 93.0556, 159.348, -83.616, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 94.9092, 161.567, -84.3301, 0.55 ) }
    dend_23 { pt3dadd( 96.2064, 162.906, -84.7258, 0.28 ) }
    dend_23 { pt3dadd( 99.5413, 166.169, -85.7314, 0.28 ) }
    dend_23 { pt3dadd( 102.382, 168.867, -86.5949, 0.28 ) }
    dend_23 { pt3dadd( 103.631, 170.033, -86.9347, 0.28 ) }
    dend_23 { pt3dadd( 105.741, 172.011, -87.3716, 0.83 ) }
    dend_23 { pt3dadd( 107.445, 173.584, -88.3989, 0.28 ) }
    dend_23 { pt3dadd( 109.194, 175.191, -89.937, 0.28 ) }
    dend_23 { pt3dadd( 110.74, 176.605, -91.7389, 0.28 ) }
    dend_23 { pt3dadd( 112.644, 178.255, -94.3368, 0.28 ) }
    dend_23 { pt3dadd( 114.516, 179.802, -97.0261, 0.28 ) }
    dend_23 { pt3dadd( 122.909, 186.8, -109.761, 0.28 ) }
    dend_23 { pt3dadd( 123.643, 187.43, -110.898, 0.55 ) }
    dend_23 { pt3dadd( 125.096, 188.695, -113.414, 0.28 ) }
    dend_23 { pt3dadd( 126.865, 190.4, -116.971, 0.28 ) }
    dend_23 { pt3dadd( 127.779, 191.302, -119.088, 0.28 ) }
    dend_23 { pt3dadd( 128.784, 192.193, -121.288, 0.28 ) }
    dend_23 { pt3dadd( 130.904, 193.808, -121.367, 0.28 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -15.1277, -4.16339, 26.6416, 1.66 ) }
    dend_21 { pt3dadd( -17.3591, -3.99232, 26.8473, 1.66 ) }
    dend_21 { pt3dadd( -19.7847, -3.57012, 26.8337, 1.66 ) }
    dend_21 { pt3dadd( -22.8029, -2.8722, 27.2628, 1.39 ) }
    dend_21 { pt3dadd( -25.7321, -2.17274, 27.9042, 1.39 ) }
    dend_21 { pt3dadd( -28.3749, -1.55187, 28.5886, 1.11 ) }
    dend_21 { pt3dadd( -32.4605, -0.611843, 29.9263, 1.11 ) }
    dend_21 { pt3dadd( -37.3256, 0.757523, 31.8688, 1.11 ) }
    dend_21 { pt3dadd( -43.482, 2.7549, 35.2144, 1.11 ) }
    dend_21 { pt3dadd( -44.3423, 3.07278, 35.7732, 1.11 ) }
    dend_21 { pt3dadd( -46.5199, 3.80375, 37.2156, 1.11 ) }
    dend_21 { pt3dadd( -49.88, 4.85825, 39.0598, 1.11 ) }
    dend_21 { pt3dadd( -51.6376, 5.4011, 39.9266, 1.11 ) }
    dend_21 { pt3dadd( -55.5206, 6.48261, 41.752, 1.11 ) }
    dend_21 { pt3dadd( -57.2263, 6.94236, 42.27, 1.11 ) }
    dend_21 { pt3dadd( -61.1034, 7.99181, 43.3337, 1.11 ) }
    dend_21 { pt3dadd( -65.8293, 9.07856, 44.4241, 1.11 ) }
    dend_21 { pt3dadd( -71.2643, 10.0212, 45.2346, 1.11 ) }
    dend_21 { pt3dadd( -73.6203, 10.3479, 45.5041, 0.83 ) }
    dend_21 { pt3dadd( -76.1713, 10.6501, 45.9777, 0.83 ) }
    dend_21 { pt3dadd( -77.3902, 10.8059, 46.3976, 0.83 ) }
    dend_21 { pt3dadd( -79.3114, 11.0911, 47.3145, 0.83 ) }
    dend_21 { pt3dadd( -81.0084, 11.3187, 48.3168, 0.83 ) }
    dend_21 { pt3dadd( -82.4333, 11.4833, 48.9933, 0.83 ) }
    dend_21 { pt3dadd( -87.4718, 12.6438, 52.4799, 0.83 ) }
    dend_21 { pt3dadd( -87.8217, 12.764, 52.8453, 0.83 ) }
    dend_21 { pt3dadd( -96.8783, 13.9596, 55.0082, 0.83 ) }
    dend_21 { pt3dadd( -105.353, 16.3327, 58.2353, 0.83 ) }
    dend_21 { pt3dadd( -114.072, 18.1478, 61.1851, 0.83 ) }
    dend_21 { pt3dadd( -123.196, 19.215, 63.1254, 0.83 ) }
    dend_21 { pt3dadd( -132.414, 20.5694, 64.2562, 0.83 ) }
    dend_21 { pt3dadd( -141.767, 20.2893, 65.1071, 0.83 ) }
    dend_21 { pt3dadd( -150.979, 19.1942, 66.6008, 0.83 ) }
    dend_21 { pt3dadd( -159.659, 17.0094, 69.4347, 0.83 ) }
    dend_21 { pt3dadd( -167.967, 13.8638, 72.4384, 0.83 ) }
    dend_21 { pt3dadd( -176.08, 9.91647, 74.9442, 0.83 ) }
    dend_21 { pt3dadd( -183.648, 6.42913, 79.2308, 0.83 ) }
    dend_21 { pt3dadd( -190.2, 1.451, 83.643, 0.83 ) }
    dend_21 { pt3dadd( -196.855, -3.34527, 88.1129, 0.83 ) }
    dend_21 { pt3dadd( -203.639, -8.47108, 91.9633, 0.83 ) }
    dend_21 { pt3dadd( -211.002, -11.8989, 96.638, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 59/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -15.1277, -4.16339, 26.6416, 1.11 ) }
    dend_20 { pt3dadd( -17.2755, -3.29936, 29.1249, 1.11 ) }
    dend_20 { pt3dadd( -18.4465, -2.94067, 30.686, 1.11 ) }
    dend_20 { pt3dadd( -21.9964, -2.15991, 35.1489, 1.11 ) }
    dend_20 { pt3dadd( -23.1422, -1.92994, 36.5001, 1.11 ) }
    dend_20 { pt3dadd( -25.4408, -1.41351, 39.0521, 1.11 ) }
    dend_20 { pt3dadd( -31.6737, 0.168423, 46.2157, 1.11 ) }
    dend_20 { pt3dadd( -32.9028, 0.541627, 47.6884, 0.83 ) }
    dend_20 { pt3dadd( -34.5757, 1.10029, 49.4412, 0.83 ) }
    dend_20 { pt3dadd( -35.6956, 1.45695, 50.3838, 0.83 ) }
    dend_20 { pt3dadd( -36.9296, 1.90461, 51.4645, 0.83 ) }
    dend_20 { pt3dadd( -40.3703, 3.45995, 54.3974, 0.83 ) }
    dend_20 { pt3dadd( -43.4602, 5.03248, 55.7867, 0.83 ) }
    dend_20 { pt3dadd( -45.353, 6.09849, 56.7157, 0.83 ) }
    dend_20 { pt3dadd( -45.7775, 6.34956, 56.9725, 0.83 ) }
    dend_20 { pt3dadd( -53.2859, 10.3069, 62.3422, 0.83 ) }
    dend_20 { pt3dadd( -60.4877, 14.2761, 68.1092, 0.83 ) }
    dend_20 { pt3dadd( -68.8631, 16.0375, 73.4309, 0.83 ) }
    dend_20 { pt3dadd( -77.6782, 17.8381, 77.9697, 0.83 ) }
    dend_20 { pt3dadd( -86.2381, 19.7978, 82.91, 0.83 ) }
    dend_20 { pt3dadd( -94.7541, 22.9814, 87.2092, 0.83 ) }
    dend_20 { pt3dadd( -102.92, 26.34, 92.0198, 0.83 ) }
    dend_20 { pt3dadd( -111.6, 30.6533, 94.6034, 0.83 ) }
    dend_20 { pt3dadd( -120.182, 34.754, 97.8078, 0.83 ) }
    dend_20 { pt3dadd( -128.755, 38.8302, 101.07, 0.83 ) }
    dend_20 { pt3dadd( -136.545, 42.9025, 105.921, 0.83 ) }
    dend_20 { pt3dadd( -144.771, 45.3958, 111.165, 0.83 ) }
    dend_20 { pt3dadd( -153.077, 47.6705, 116.388, 0.83 ) }
    dend_20 { pt3dadd( -161.059, 48.544, 122.492, 0.83 ) }
    dend_20 { pt3dadd( -168.848, 48.343, 128.902, 0.83 ) }
    dend_20 { pt3dadd( -176.855, 47.0272, 134.893, 0.83 ) }
    dend_20 { pt3dadd( -186.138, 45.8023, 138.647, 0.83 ) }
    dend_20 { pt3dadd( -195.031, 43.9574, 143.029, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 92/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 3.87177, -17.7957, 8.52928, 4.16 ) }
    dend_2 { pt3dadd( 4.0521, -19.472, 8.54208, 4.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.87177, -17.7957, 8.52928, 1.39 ) }
    dend_1 { pt3dadd( 15.6341, -15.2811, 4.51933, 1.39 ) }
    dend_1 { pt3dadd( 18.8785, -14.5583, 3.52504, 1.11 ) }
    dend_1 { pt3dadd( 22.716, -13.8351, 2.7888, 1.11 ) }
    dend_1 { pt3dadd( 25.5108, -13.4298, 2.48457, 0.83 ) }
    dend_1 { pt3dadd( 28.1704, -13.118, 2.4003, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 36.2365, -12.2473, 2.37287, 0.83 ) }
    dend_1 { pt3dadd( 39.938, -11.9165, 2.95881, 0.83 ) }
    dend_1 { pt3dadd( 46.1465, -11.2184, 4.02137, 0.55 ) }
    dend_1 { pt3dadd( 48.7368, -10.8349, 4.53467, 0.55 ) }
    dend_1 { pt3dadd( 52.6571, -10.1509, 5.45837, 0.55 ) }
    dend_1 { pt3dadd( 57.2572, -9.15559, 6.7663, 0.55 ) }
    dend_1 { pt3dadd( 61.2423, -8.225, 7.91649, 0.55 ) }
    dend_1 { pt3dadd( 63.2366, -7.69813, 8.31456, 0.55 ) }
    dend_1 { pt3dadd( 67.1386, -6.56102, 8.79094, 0.55 ) }
    dend_1 { pt3dadd( 70.1346, -5.71249, 9.13662, 0.55 ) }
    dend_1 { pt3dadd( 72.3328, -5.15959, 9.39026, 0.55 ) }
    dend_1 { pt3dadd( 78.0521, -3.9208, 10.1565, 0.55 ) }
    dend_1 { pt3dadd( 80.8155, -3.41123, 10.595, 0.55 ) }
    dend_1 { pt3dadd( 83.5788, -2.92235, 11.2708, 0.55 ) }
    dend_1 { pt3dadd( 86.0716, -2.4129, 12.1092, 0.55 ) }
    dend_1 { pt3dadd( 87.7687, -2.01912, 12.8323, 0.55 ) }
    dend_1 { pt3dadd( 90.027, -1.43914, 13.82, 0.55 ) }
    dend_1 { pt3dadd( 93.6843, -0.332802, 15.5126, 0.55 ) }
    dend_1 { pt3dadd( 98.4859, 1.23737, 17.3583, 0.55 ) }
    dend_1 { pt3dadd( 101.52, 2.34678, 18.3308, 0.28 ) }
    dend_1 { pt3dadd( 104.682, 3.5935, 19.1575, 0.55 ) }
    dend_1 { pt3dadd( 109.978, 5.75683, 20.2193, 0.55 ) }
    dend_1 { pt3dadd( 112.895, 7.01736, 20.5923, 0.55 ) }
    dend_1 { pt3dadd( 116.112, 8.51837, 20.7048, 0.28 ) }
    dend_1 { pt3dadd( 118.072, 9.55426, 20.6507, 0.55 ) }
    dend_1 { pt3dadd( 119.176, 10.2227, 20.6321, 0.28 ) }
    dend_1 { pt3dadd( 120.449, 11.1712, 20.6798, 0.55 ) }
    dend_1 { pt3dadd( 121.77, 12.3077, 20.9601, 0.28 ) }
    dend_1 { pt3dadd( 122.931, 13.2913, 21.2961, 0.28 ) }
    dend_1 { pt3dadd( 123.974, 14.1361, 21.687, 0.28 ) }
    dend_1 { pt3dadd( 125.715, 15.4662, 22.3114, 0.28 ) }
    dend_1 { pt3dadd( 126.428, 16.0119, 22.5609, 0.28 ) }
    dend_1 { pt3dadd( 129.609, 18.3625, 23.6544, 1.11 ) }
    dend_1 { pt3dadd( 131.085, 19.4517, 24.1587, 0.28 ) }
    dend_1 { pt3dadd( 132.425, 20.4277, 24.3941, 0.28 ) }
    dend_1 { pt3dadd( 134.043, 21.6585, 24.5227, 0.28 ) }
    dend_1 { pt3dadd( 136.486, 23.7232, 24.776, 0.28 ) }
    dend_1 { pt3dadd( 139.582, 26.4596, 25.1721, 0.28 ) }
    dend_1 { pt3dadd( 141.669, 28.4082, 25.4865, 0.28 ) }
    dend_1 { pt3dadd( 147.56, 34.017, 26.562, 0.28 ) }
    dend_1 { pt3dadd( 149.589, 35.9859, 27.0042, 0.28 ) }
    dend_1 { pt3dadd( 153.641, 39.9732, 28.0682, 0.83 ) }
    dend_1 { pt3dadd( 155.168, 41.5736, 28.5573, 0.83 ) }
    dend_1 { pt3dadd( 156.904, 43.4724, 29.2795, 0.28 ) }
    dend_1 { pt3dadd( 157.975, 44.6137, 29.886, 0.28 ) }
    dend_1 { pt3dadd( 158.977, 45.7453, 30.7812, 0.28 ) }
    dend_1 { pt3dadd( 159.851, 46.6291, 31.4176, 0.55 ) }
    dend_1 { pt3dadd( 161.325, 47.9932, 31.9789, 0.28 ) }
    dend_1 { pt3dadd( 162.346, 49.0938, 32.3802, 0.28 ) }
    dend_1 { pt3dadd( 163.008, 49.7721, 32.6366, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 50/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.05091, -43.4425, 0.0987351, 0.55 ) }
    axon_1 { pt3dadd( 11.0084, -58.1481, 0.0987351, 0.55 ) }
    axon_1 { pt3dadd( 13.9659, -72.8536, 0.0987351, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 53/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.52911, 14.4379, 7.73148, 4.43 ) }
    dend_26 { pt3dadd( -6.32044, 19.5267, 7.3876, 4.43 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 55/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.52911, 14.4379, 7.73148, 1.39 ) }
    dend_25 { pt3dadd( -9.24841, 17.6024, 5.36506, 1.39 ) }
    dend_25 { pt3dadd( -12.428, 20.0677, 3.12547, 1.39 ) }
    dend_25 { pt3dadd( -14.385, 21.7876, 1.2959, 1.39 ) }
    dend_25 { pt3dadd( -16.572, 23.716, -0.8395, 1.39 ) }
    dend_25 { pt3dadd( -18.0479, 24.9598, -2.60202, 1.11 ) }
    dend_25 { pt3dadd( -20.8985, 27.3393, -6.23825, 1.11 ) }
    dend_25 { pt3dadd( -23.4509, 29.6057, -9.61578, 1.11 ) }
    dend_25 { pt3dadd( -25.8362, 31.828, -13.4359, 1.11 ) }
    dend_25 { pt3dadd( -27.3548, 33.303, -16.0904, 1.39 ) }
    dend_25 { pt3dadd( -31.4782, 37.396, -23.653, 1.11 ) }
    dend_25 { pt3dadd( -32.4124, 38.3146, -25.2957, 1.11 ) }
    dend_25 { pt3dadd( -34.1787, 40.0195, -28.0673, 1.11 ) }
    dend_25 { pt3dadd( -37.7625, 43.6445, -33.3429, 1.11 ) }
    dend_25 { pt3dadd( -39.0011, 45.0315, -35.1325, 1.11 ) }
    dend_25 { pt3dadd( -41.2515, 47.9308, -38.3848, 0.83 ) }
    dend_25 { pt3dadd( -42.3241, 49.4582, -39.7681, 0.83 ) }
    dend_25 { pt3dadd( -44.0508, 51.9559, -41.9903, 0.83 ) }
    dend_25 { pt3dadd( -45.5388, 54.1447, -44.0639, 0.28 ) }
    dend_25 { pt3dadd( -45.9103, 54.7022, -44.5302, 0.55 ) }
    dend_25 { pt3dadd( -46.8566, 56.1219, -45.7328, 0.55 ) }
    dend_25 { pt3dadd( -48.5494, 58.6448, -47.7605, 0.28 ) }
    dend_25 { pt3dadd( -49.9348, 60.676, -49.4006, 1.11 ) }
    dend_25 { pt3dadd( -52.2816, 64.4426, -53.0146, 0.28 ) }
    dend_25 { pt3dadd( -53.044, 65.7655, -54.4425, 0.28 ) }
    dend_25 { pt3dadd( -53.7054, 67.0975, -55.921, 0.55 ) }
    dend_25 { pt3dadd( -54.0133, 67.9284, -56.9008, 0.55 ) }
    dend_25 { pt3dadd( -54.1207, 68.3048, -57.333, 0.55 ) }
    dend_25 { pt3dadd( -55.0865, 73.381, -64.7497, 0.28 ) }
    dend_25 { pt3dadd( -55.2433, 74.2244, -66.0575, 0.28 ) }
    dend_25 { pt3dadd( -55.5462, 75.8858, -68.743, 0.83 ) }
    dend_25 { pt3dadd( -56.0542, 78.7011, -73.6172, 0.28 ) }
    dend_25 { pt3dadd( -56.3049, 79.843, -75.6429, 0.83 ) }
    dend_25 { pt3dadd( -58.2695, 86.647, -87.6198, 0.28 ) }
    dend_25 { pt3dadd( -58.6701, 87.7437, -89.7206, 0.28 ) }
    dend_25 { pt3dadd( -58.9476, 88.4019, -91.117, 0.83 ) }
    dend_25 { pt3dadd( -60.5647, 91.9036, -99.3935, 0.28 ) }
    dend_25 { pt3dadd( -60.8926, 92.5248, -100.912, 0.55 ) }
    dend_25 { pt3dadd( -61.3802, 93.3453, -102.951, 0.55 ) }
    dend_25 { pt3dadd( -64.2909, 97.6398, -113.475, 0.28 ) }
    dend_25 { pt3dadd( -64.6513, 98.1652, -114.861, 0.28 ) }
    dend_25 { pt3dadd( -66.1438, 100.143, -120.48, 0.55 ) }
    dend_25 { pt3dadd( -66.6331, 100.719, -122.208, 0.28 ) }
    dend_25 { pt3dadd( -66.9453, 101.101, -123.446, 0.55 ) }
    dend_25 { pt3dadd( -68.4322, 103.062, -130.02, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_14, id: dend_14, parent: dend_2 (entry count 0/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.0521, -19.472, 8.54208, 2.49 ) }
    dend_14 { pt3dadd( 6.34128, -27.8871, 8.00244, 2.49 ) }
    dend_14 { pt3dadd( 8.08321, -34.3144, 7.14869, 2.22 ) }
    dend_14 { pt3dadd( 9.82534, -40.7424, 6.29485, 2.22 ) }
    dend_14 { pt3dadd( 11.9983, -48.76, 5.22987, 1.94 ) }
    dend_14 { pt3dadd( 14.9274, -59.5677, 3.79426, 2.22 ) }
    dend_14 { pt3dadd( 16.6285, -65.8441, 2.96056, 2.22 ) }
    dend_14 { pt3dadd( 18.4522, -72.6397, 2.17564, 2.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.0521, -19.472, 8.54208, 2.49 ) }
    dend_3 { pt3dadd( -2.28723, -22.7121, -2.03939, 2.49 ) }
    dend_3 { pt3dadd( -3.92091, -23.5472, -4.76629, 2.49 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 11/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -6.32044, 19.5267, 7.3876, 4.43 ) }
    dend_28 { pt3dadd( -6.69778, 23.2904, 10.0301, 4.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.32044, 19.5267, 7.3876, 1.39 ) }
    dend_27 { pt3dadd( -8.78688, 21.1698, 9.80072, 1.39 ) }
    dend_27 { pt3dadd( -11.4708, 23.187, 12.1385, 1.39 ) }
    dend_27 { pt3dadd( -16.0238, 26.9991, 16.6968, 1.39 ) }
    dend_27 { pt3dadd( -18.0069, 28.8089, 18.8004, 0.83 ) }
    dend_27 { pt3dadd( -19.8633, 30.5936, 21.0516, 0.83 ) }
    dend_27 { pt3dadd( -24.2016, 34.9122, 26.4963, 1.11 ) }
    dend_27 { pt3dadd( -27.4754, 38.6756, 30.9791, 1.11 ) }
    dend_27 { pt3dadd( -31.2981, 43.6666, 36.5941, 1.11 ) }
    dend_27 { pt3dadd( -32.0175, 44.7706, 37.6638, 1.11 ) }
    dend_27 { pt3dadd( -34.8105, 49.6247, 41.9793, 1.11 ) }
    dend_27 { pt3dadd( -36.0478, 52.0587, 43.8148, 1.11 ) }
    dend_27 { pt3dadd( -37.4082, 54.7334, 45.3561, 0.83 ) }
    dend_27 { pt3dadd( -38.426, 56.8396, 46.3331, 0.83 ) }
    dend_27 { pt3dadd( -39.2365, 58.6118, 46.5697, 0.83 ) }
    dend_27 { pt3dadd( -40.1497, 60.6645, 46.7501, 0.83 ) }
    dend_27 { pt3dadd( -41.1574, 62.9824, 46.7499, 0.83 ) }
    dend_27 { pt3dadd( -41.9672, 64.8286, 46.8468, 0.83 ) }
    dend_27 { pt3dadd( -43.7251, 68.754, 47.265, 0.83 ) }
    dend_27 { pt3dadd( -44.5644, 70.7503, 47.9016, 0.83 ) }
    dend_27 { pt3dadd( -46.7271, 75.9175, 49.9819, 0.83 ) }
    dend_27 { pt3dadd( -47.1439, 76.9612, 50.5289, 0.83 ) }
    dend_27 { pt3dadd( -47.9322, 78.9216, 51.9174, 0.83 ) }
    dend_27 { pt3dadd( -48.4259, 80.2662, 53.1595, 0.83 ) }
    dend_27 { pt3dadd( -49.953, 84.4908, 58.272, 0.83 ) }
    dend_27 { pt3dadd( -53.3519, 90.9425, 65.3855, 0.83 ) }
    dend_27 { pt3dadd( -57.3306, 97.1191, 72.4537, 0.83 ) }
    dend_27 { pt3dadd( -59.9672, 104.341, 79.0977, 0.83 ) }
    dend_27 { pt3dadd( -61.3304, 111.937, 85.691, 0.83 ) }
    dend_27 { pt3dadd( -60.9016, 118.907, 93.0943, 0.83 ) }
    dend_27 { pt3dadd( -59.0202, 124.964, 101.094, 0.83 ) }
    dend_27 { pt3dadd( -59.0034, 130.379, 109.768, 0.83 ) }
    dend_27 { pt3dadd( -60.887, 136.701, 117.54, 0.83 ) }
    dend_27 { pt3dadd( -60.6987, 141.402, 126.638, 0.83 ) }
    dend_27 { pt3dadd( -61.7614, 146.857, 135.217, 0.83 ) }
    dend_27 { pt3dadd( -62.6127, 152.402, 143.76, 0.83 ) }
    dend_27 { pt3dadd( -63.3274, 159.12, 151.38, 0.83 ) }
    dend_27 { pt3dadd( -63.7622, 166.978, 157.777, 0.83 ) }
    dend_27 { pt3dadd( -64.8268, 174.163, 164.89, 0.83 ) }
    dend_27 { pt3dadd( -66.4798, 181.294, 171.946, 0.83 ) }
    dend_27 { pt3dadd( -69.1034, 188.908, 178.117, 0.83 ) }
    dend_27 { pt3dadd( -70.6213, 196.008, 185.237, 0.83 ) }
    dend_27 { pt3dadd( -70.745, 203.696, 191.862, 0.83 ) }
    dend_27 { pt3dadd( -70.1087, 210.823, 199.091, 0.83 ) }
    dend_27 { pt3dadd( -70.3987, 216.797, 207.364, 0.83 ) }
    dend_27 { pt3dadd( -70.1352, 222.339, 215.949, 0.83 ) }
    dend_27 { pt3dadd( -68.8239, 227.703, 224.557, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 18.4522, -72.6397, 2.17564, 2.22 ) }
    dend_16 { pt3dadd( 17.2112, -75.2201, 12.4333, 2.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 62/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 18.4522, -72.6397, 2.17564, 0.83 ) }
    dend_15 { pt3dadd( 26.6363, -76.1673, -7.25452, 0.83 ) }
    dend_15 { pt3dadd( 28.8936, -77.2316, -9.81833, 0.83 ) }
    dend_15 { pt3dadd( 30.9706, -78.2333, -12.0187, 0.83 ) }
    dend_15 { pt3dadd( 35.2662, -80.3864, -16.3248, 0.55 ) }
    dend_15 { pt3dadd( 41.4034, -83.5271, -22.0775, 0.55 ) }
    dend_15 { pt3dadd( 42.7245, -84.2453, -23.3693, 0.55 ) }
    dend_15 { pt3dadd( 47.2747, -86.9638, -27.6731, 0.28 ) }
    dend_15 { pt3dadd( 49.6088, -88.4806, -30.0817, 0.28 ) }
    dend_15 { pt3dadd( 50.9145, -89.357, -31.4968, 0.55 ) }
    dend_15 { pt3dadd( 52.8578, -90.7346, -33.5929, 0.55 ) }
    dend_15 { pt3dadd( 58.3479, -94.7289, -39.3687, 0.83 ) }
    dend_15 { pt3dadd( 62.6734, -97.8304, -43.9261, 0.28 ) }
    dend_15 { pt3dadd( 65.8411, -100.077, -47.0675, 0.28 ) }
    dend_15 { pt3dadd( 68.9201, -102.305, -50.2605, 0.28 ) }
    dend_15 { pt3dadd( 71.2905, -104.018, -52.6276, 0.28 ) }
    dend_15 { pt3dadd( 75.5037, -106.998, -56.6359, 0.28 ) }
    dend_15 { pt3dadd( 78.2144, -108.847, -59.0542, 0.55 ) }
    dend_15 { pt3dadd( 82.0191, -111.463, -62.6861, 0.83 ) }
    dend_15 { pt3dadd( 89.1707, -116.428, -70.4788, 0.28 ) }
    dend_15 { pt3dadd( 92.1527, -118.501, -73.8932, 0.28 ) }
    dend_15 { pt3dadd( 95.5273, -120.858, -77.9037, 0.28 ) }
    dend_15 { pt3dadd( 99.739, -123.751, -82.8362, 0.28 ) }
    dend_15 { pt3dadd( 104.277, -127.143, -88.3727, 0.28 ) }
    dend_15 { pt3dadd( 108.896, -130.859, -93.8885, 0.28 ) }
    dend_15 { pt3dadd( 110.808, -132.553, -96.0488, 0.28 ) }
    dend_15 { pt3dadd( 111.56, -133.266, -96.8537, 0.28 ) }
    dend_15 { pt3dadd( 113.755, -135.377, -98.8954, 0.83 ) }
    dend_15 { pt3dadd( 119.545, -140.89, -103.455, 0.28 ) }
    dend_15 { pt3dadd( 123.139, -144.088, -105.453, 0.28 ) }
    dend_15 { pt3dadd( 130.282, -150.037, -108.319, 0.28 ) }
    dend_15 { pt3dadd( 135.488, -153.978, -109.962, 0.28 ) }
    dend_15 { pt3dadd( 138.676, -156.104, -110.688, 0.28 ) }
    dend_15 { pt3dadd( 140.475, -157.1, -110.907, 0.83 ) }
    dend_15 { pt3dadd( 149.74, -160.808, -110.509, 0.28 ) }
    dend_15 { pt3dadd( 151.492, -161.399, -110.259, 0.83 ) }
    dend_15 { pt3dadd( 155.072, -162.44, -109.438, 0.28 ) }
    dend_15 { pt3dadd( 157.799, -163.252, -108.867, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_15 { pt3dadd( 161.674, -164.468, -108.335, 0.28 ) }
    dend_15 { pt3dadd( 167.088, -166.209, -108.024, 0.83 ) }
    dend_15 { pt3dadd( 170.834, -167.498, -108.176, 0.28 ) }
    dend_15 { pt3dadd( 174.064, -168.657, -108.34, 0.28 ) }
    dend_15 { pt3dadd( 177.622, -170.059, -108.582, 0.83 ) }
    dend_15 { pt3dadd( 183.646, -172.694, -109.091, 0.28 ) }
    dend_15 { pt3dadd( 185.177, -173.441, -109.257, 0.55 ) }
    dend_15 { pt3dadd( 187.946, -174.941, -109.646, 0.28 ) }
    dend_15 { pt3dadd( 191.388, -176.921, -109.991, 0.55 ) }
    dend_15 { pt3dadd( 197.015, -180.384, -110.376, 0.28 ) }
    dend_15 { pt3dadd( 199.992, -182.402, -110.627, 1.11 ) }
    dend_15 { pt3dadd( 203.161, -184.726, -110.933, 0.28 ) }
    dend_15 { pt3dadd( 207.462, -187.911, -111.408, 0.28 ) }
    dend_15 { pt3dadd( 211.966, -191.206, -112.117, 0.28 ) }
    dend_15 { pt3dadd( 214.035, -192.794, -112.786, 0.55 ) }
    dend_15 { pt3dadd( 220.033, -197.688, -115.892, 0.28 ) }
    dend_15 { pt3dadd( 221.179, -198.635, -116.608, 0.55 ) }
    dend_15 { pt3dadd( 222.151, -199.474, -117.375, 0.28 ) }
    dend_15 { pt3dadd( 224.534, -201.707, -119.927, 0.28 ) }
    dend_15 { pt3dadd( 229.585, -207.023, -127.315, 0.28 ) }
    dend_15 { pt3dadd( 231.321, -209.0, -130.436, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -3.92091, -23.5472, -4.76629, 2.22 ) }
    dend_5 { pt3dadd( -4.99304, -31.7364, -2.55205, 2.22 ) }
    dend_5 { pt3dadd( -6.01595, -39.5495, -0.439484, 1.94 ) }
    dend_5 { pt3dadd( -6.18402, -40.8333, -0.0923774, 1.39 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.92091, -23.5472, -4.76629, 1.11 ) }
    dend_4 { pt3dadd( -10.3758, -24.3137, 4.42006, 1.11 ) }
    dend_4 { pt3dadd( -12.0305, -24.4599, 6.2574, 0.83 ) }
    dend_4 { pt3dadd( -14.5864, -24.6374, 8.4215, 0.83 ) }
    dend_4 { pt3dadd( -18.657, -24.7998, 11.187, 0.83 ) }
    dend_4 { pt3dadd( -20.8228, -24.8179, 12.4441, 0.83 ) }
    dend_4 { pt3dadd( -23.6296, -24.8122, 13.8861, 0.83 ) }
    dend_4 { pt3dadd( -30.0793, -24.9558, 15.6033, 0.83 ) }
    dend_4 { pt3dadd( -33.468, -24.9753, 16.8127, 0.83 ) }
    dend_4 { pt3dadd( -35.8606, -24.9929, 18.0701, 0.83 ) }
    dend_4 { pt3dadd( -37.6547, -25.0255, 19.0719, 0.83 ) }
    dend_4 { pt3dadd( -39.6158, -25.2308, 20.6263, 0.83 ) }
    dend_4 { pt3dadd( -41.0514, -25.4792, 22.0074, 0.83 ) }
    dend_4 { pt3dadd( -46.3967, -26.5317, 28.1012, 0.83 ) }
    dend_4 { pt3dadd( -49.4164, -27.151, 31.6364, 0.83 ) }
    dend_4 { pt3dadd( -52.6288, -27.9269, 35.3399, 0.55 ) }
    dend_4 { pt3dadd( -55.7992, -28.8369, 39.1398, 0.55 ) }
    dend_4 { pt3dadd( -57.2654, -29.2187, 40.8354, 0.55 ) }
    dend_4 { pt3dadd( -58.9139, -29.5591, 42.5039, 0.55 ) }
    dend_4 { pt3dadd( -60.0696, -29.7653, 43.3804, 0.55 ) }
    dend_4 { pt3dadd( -61.8711, -30.0905, 44.7333, 0.55 ) }
    dend_4 { pt3dadd( -65.4101, -30.8312, 48.0806, 0.55 ) }
    dend_4 { pt3dadd( -67.1349, -31.2557, 49.6668, 0.55 ) }
    dend_4 { pt3dadd( -68.2189, -31.6416, 50.7451, 0.55 ) }
    dend_4 { pt3dadd( -69.2322, -32.0492, 51.7158, 0.55 ) }
    dend_4 { pt3dadd( -70.8761, -32.6563, 53.135, 0.55 ) }
    dend_4 { pt3dadd( -74.3609, -33.6721, 56.0065, 0.55 ) }
    dend_4 { pt3dadd( -76.1633, -34.1016, 57.31, 0.55 ) }
    dend_4 { pt3dadd( -78.1444, -34.5444, 59.0795, 0.55 ) }
    dend_4 { pt3dadd( -80.1665, -34.8889, 61.0737, 0.55 ) }
    dend_4 { pt3dadd( -81.9655, -35.0922, 62.9114, 0.55 ) }
    dend_4 { pt3dadd( -83.9083, -35.245, 65.1912, 0.55 ) }
    dend_4 { pt3dadd( -85.8797, -35.4311, 67.6861, 0.55 ) }
    dend_4 { pt3dadd( -89.5013, -35.5977, 72.7766, 0.55 ) }
    dend_4 { pt3dadd( -90.4975, -35.635, 74.4045, 0.55 ) }
    dend_4 { pt3dadd( -91.4757, -35.7387, 76.3112, 0.55 ) }
    dend_4 { pt3dadd( -93.3025, -36.1827, 80.4636, 0.55 ) }
    dend_4 { pt3dadd( -94.1576, -36.5827, 82.5241, 0.55 ) }
    dend_4 { pt3dadd( -102.208, -38.5314, 92.2404, 0.55 ) }
    dend_4 { pt3dadd( -109.553, -39.7858, 102.614, 0.55 ) }
    dend_4 { pt3dadd( -116.476, -41.2257, 113.25, 0.55 ) }
    dend_4 { pt3dadd( -122.261, -44.1938, 124.224, 0.55 ) }
    dend_4 { pt3dadd( -127.86, -46.0466, 135.549, 0.55 ) }
    dend_4 { pt3dadd( -133.475, -49.1925, 146.56, 0.55 ) }
    dend_4 { pt3dadd( -137.509, -53.0559, 158.015, 0.55 ) }
    dend_4 { pt3dadd( -139.374, -56.322, 170.201, 0.55 ) }
    dend_4 { pt3dadd( -143.482, -59.7218, 181.784, 0.55 ) }
    dend_4 { pt3dadd( -147.095, -63.0431, 193.553, 0.55 ) }
    dend_4 { pt3dadd( -151.018, -65.8067, 205.376, 0.55 ) }
    dend_4 { pt3dadd( -156.466, -67.1513, 216.85, 0.55 ) }
    dend_4 { pt3dadd( -164.585, -65.7773, 226.617, 0.55 ) }
    dend_4 { pt3dadd( -173.304, -66.0164, 235.953, 0.55 ) }
    dend_4 { pt3dadd( -180.414, -65.0767, 246.527, 0.55 ) }
    dend_4 { pt3dadd( -186.159, -64.7057, 257.933, 0.55 ) }
    dend_4 { pt3dadd( -191.162, -62.3602, 269.444, 0.55 ) }
    dend_4 { pt3dadd( -194.95, -61.1363, 281.583, 0.55 ) }
    dend_4 { pt3dadd( -196.913, -59.8995, 294.146, 0.55 ) }
    dend_4 { pt3dadd( -199.765, -56.931, 306.225, 0.55 ) }
    dend_4 { pt3dadd( -202.629, -52.4159, 317.788, 0.55 ) }
    dend_4 { pt3dadd( -206.048, -47.6899, 329.109, 0.55 ) }
    dend_4 { pt3dadd( -208.265, -43.3705, 340.89, 0.55 ) }
    dend_4 { pt3dadd( -211.958, -40.5799, 352.784, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 87/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -6.69778, 23.2904, 10.0301, 2.49 ) }
    dend_36 { pt3dadd( -7.81414, 24.2388, 10.7099, 2.49 ) }
    dend_36 { pt3dadd( -8.74862, 25.1108, 11.4147, 1.11 ) }
    dend_36 { pt3dadd( -9.9148, 26.2342, 12.2822, 1.11 ) }
    dend_36 { pt3dadd( -11.2978, 27.5534, 13.3852, 1.11 ) }
    dend_36 { pt3dadd( -12.4076, 28.6448, 14.4169, 1.11 ) }
    dend_36 { pt3dadd( -15.1344, 31.4853, 17.4261, 0.83 ) }
    dend_36 { pt3dadd( -15.7233, 32.1743, 18.2206, 0.83 ) }
    dend_36 { pt3dadd( -16.3777, 33.0939, 19.4007, 0.83 ) }
    dend_36 { pt3dadd( -17.2163, 34.606, 21.4002, 0.83 ) }
    dend_36 { pt3dadd( -17.9739, 36.4315, 23.7045, 0.83 ) }
    dend_36 { pt3dadd( -18.6079, 38.1897, 26.0216, 0.83 ) }
    dend_36 { pt3dadd( -18.9236, 39.0675, 27.1397, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( -19.5315, 40.8406, 29.3361, 0.83 ) }
    dend_36 { pt3dadd( -19.8012, 41.693, 30.3946, 0.83 ) }
    dend_36 { pt3dadd( -20.0836, 42.6101, 31.3805, 0.83 ) }
    dend_36 { pt3dadd( -20.5947, 44.2646, 32.9155, 0.83 ) }
    dend_36 { pt3dadd( -20.8538, 45.1549, 33.6653, 0.83 ) }
    dend_36 { pt3dadd( -21.2168, 46.588, 34.8333, 0.83 ) }
    dend_36 { pt3dadd( -22.0604, 50.532, 37.714, 0.83 ) }
    dend_36 { pt3dadd( -22.1809, 51.8679, 38.6545, 0.83 ) }
    dend_36 { pt3dadd( -22.0863, 52.9907, 39.3168, 0.83 ) }
    dend_36 { pt3dadd( -21.8306, 53.9179, 39.7166, 0.83 ) }
    dend_36 { pt3dadd( -21.419, 54.8231, 40.0146, 0.83 ) }
    dend_36 { pt3dadd( -20.9064, 55.6314, 40.1556, 0.55 ) }
    dend_36 { pt3dadd( -20.1247, 56.6626, 40.0332, 0.55 ) }
    dend_36 { pt3dadd( -19.1722, 57.8209, 39.8738, 0.28 ) }
    dend_36 { pt3dadd( -18.4042, 58.7897, 39.7203, 0.28 ) }
    dend_36 { pt3dadd( -17.7101, 59.7058, 39.5566, 0.28 ) }
    dend_36 { pt3dadd( -17.1882, 60.3888, 39.4208, 0.28 ) }
    dend_36 { pt3dadd( -16.1615, 61.5867, 39.1473, 0.28 ) }
    dend_36 { pt3dadd( -15.5374, 62.253, 39.032, 0.28 ) }
    dend_36 { pt3dadd( -16.3139, 67.6275, 44.0576, 0.28 ) }
    dend_36 { pt3dadd( -16.4833, 72.5597, 49.5925, 0.28 ) }
    dend_36 { pt3dadd( -16.5641, 77.8036, 54.8195, 0.28 ) }
    dend_36 { pt3dadd( -16.5874, 83.1063, 59.9843, 0.28 ) }
    dend_36 { pt3dadd( -15.7022, 89.1242, 64.1543, 0.28 ) }
    dend_36 { pt3dadd( -16.152, 95.7116, 67.3788, 0.28 ) }
    dend_36 { pt3dadd( -16.013, 102.818, 69.1416, 0.28 ) }
    dend_36 { pt3dadd( -16.4724, 109.74, 71.5141, 0.28 ) }
    dend_36 { pt3dadd( -17.906, 116.324, 74.4428, 0.28 ) }
    dend_36 { pt3dadd( -18.8644, 122.424, 78.4651, 0.28 ) }
    dend_36 { pt3dadd( -20.6589, 127.946, 83.0402, 0.28 ) }
    dend_36 { pt3dadd( -21.9076, 134.357, 86.4239, 0.28 ) }
    dend_36 { pt3dadd( -22.4867, 140.98, 89.5488, 0.28 ) }
    dend_36 { pt3dadd( -21.7322, 146.912, 93.8704, 0.28 ) }
    dend_36 { pt3dadd( -19.7643, 152.604, 98.1516, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 34/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -6.69778, 23.2904, 10.0301, 1.94 ) }
    dend_29 { pt3dadd( -5.5511, 25.5678, 9.94023, 1.94 ) }
    dend_29 { pt3dadd( -4.6999, 27.2583, 9.87354, 1.94 ) }
    dend_29 { pt3dadd( -3.58681, 29.469, 9.78634, 1.94 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 38/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.2112, -75.2201, 12.4333, 1.94 ) }
    dend_18 { pt3dadd( 18.2786, -83.7077, 10.6336, 1.94 ) }
    dend_18 { pt3dadd( 19.3593, -91.2533, 9.61935, 1.39 ) }
    dend_18 { pt3dadd( 19.998, -94.9925, 9.28617, 1.11 ) }
    dend_18 { pt3dadd( 21.0523, -100.553, 8.91161, 1.11 ) }
    dend_18 { pt3dadd( 22.1648, -106.034, 8.53499, 1.11 ) }
    dend_18 { pt3dadd( 23.6392, -113.602, 8.08993, 1.11 ) }
    dend_18 { pt3dadd( 25.4385, -122.561, 8.18782, 0.83 ) }
    dend_18 { pt3dadd( 26.7579, -130.482, 8.82601, 0.83 ) }
    dend_18 { pt3dadd( 27.1398, -133.767, 9.42403, 0.83 ) }
    dend_18 { pt3dadd( 27.3467, -137.267, 10.4398, 0.83 ) }
    dend_18 { pt3dadd( 27.5305, -140.734, 11.7473, 0.83 ) }
    dend_18 { pt3dadd( 27.6156, -145.881, 13.9912, 0.83 ) }
    dend_18 { pt3dadd( 27.4103, -153.727, 17.3139, 0.83 ) }
    dend_18 { pt3dadd( 27.1745, -158.726, 19.4543, 0.83 ) }
    dend_18 { pt3dadd( 27.1203, -161.789, 20.6343, 0.83 ) }
    dend_18 { pt3dadd( 27.0602, -168.45, 23.1423, 0.83 ) }
    dend_18 { pt3dadd( 27.1607, -174.492, 25.08, 0.83 ) }
    dend_18 { pt3dadd( 27.2399, -177.38, 25.9149, 0.83 ) }
    dend_18 { pt3dadd( 27.3512, -179.372, 26.4665, 0.83 ) }
    dend_18 { pt3dadd( 27.3738, -184.038, 27.6696, 0.83 ) }
    dend_18 { pt3dadd( 26.982, -191.241, 29.6016, 0.83 ) }
    dend_18 { pt3dadd( 26.7536, -193.382, 30.2463, 0.83 ) }
    dend_18 { pt3dadd( 26.1439, -199.086, 32.3096, 0.83 ) }
    dend_18 { pt3dadd( 25.8118, -202.736, 33.7122, 0.83 ) }
    dend_18 { pt3dadd( 25.5588, -209.251, 36.4306, 0.83 ) }
    dend_18 { pt3dadd( 25.5173, -213.075, 38.037, 0.83 ) }
    dend_18 { pt3dadd( 25.7642, -217.093, 39.8121, 1.39 ) }
    dend_18 { pt3dadd( 26.1857, -221.376, 42.158, 0.83 ) }
    dend_18 { pt3dadd( 26.4773, -223.584, 43.4875, 0.55 ) }
    dend_18 { pt3dadd( 27.2976, -227.883, 46.7266, 0.55 ) }
    dend_18 { pt3dadd( 27.8195, -229.667, 48.4487, 0.55 ) }
    dend_18 { pt3dadd( 29.4616, -234.275, 53.3855, 0.55 ) }
    dend_18 { pt3dadd( 30.5497, -237.43, 56.7433, 0.55 ) }
    dend_18 { pt3dadd( 29.8506, -246.896, 59.1718, 0.55 ) }
    dend_18 { pt3dadd( 30.9171, -256.441, 61.0908, 0.55 ) }
    dend_18 { pt3dadd( 31.2964, -266.187, 61.8975, 0.55 ) }
    dend_18 { pt3dadd( 30.8573, -275.807, 63.6614, 0.55 ) }
    dend_18 { pt3dadd( 31.6131, -285.275, 66.0651, 0.55 ) }
    dend_18 { pt3dadd( 33.7486, -294.642, 68.0145, 0.55 ) }
    dend_18 { pt3dadd( 35.0886, -303.822, 71.2054, 0.55 ) }
    dend_18 { pt3dadd( 38.3555, -312.255, 75.095, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 17.2112, -75.2201, 12.4333, 0.55 ) }
    dend_17 { pt3dadd( 13.3692, -81.401, 7.32757, 0.55 ) }
    dend_17 { pt3dadd( 10.1896, -86.3537, 3.52164, 0.55 ) }
    dend_17 { pt3dadd( 8.89816, -88.306, 2.14901, 0.55 ) }
    dend_17 { pt3dadd( 7.60608, -90.4097, 0.818939, 0.55 ) }
    dend_17 { pt3dadd( 6.05963, -93.2423, -0.796593, 0.55 ) }
    dend_17 { pt3dadd( 4.06241, -97.0341, -3.14506, 0.55 ) }
    dend_17 { pt3dadd( 2.77449, -99.7475, -4.64155, 0.55 ) }
    dend_17 { pt3dadd( 1.87282, -101.73, -5.81056, 0.55 ) }
    dend_17 { pt3dadd( 0.436464, -104.997, -7.76946, 0.55 ) }
    dend_17 { pt3dadd( -2.17094, -110.784, -11.1978, 0.28 ) }
    dend_17 { pt3dadd( -4.68288, -116.45, -14.3975, 1.66 ) }
    dend_17 { pt3dadd( -6.28198, -119.827, -15.9816, 0.28 ) }
    dend_17 { pt3dadd( -7.79191, -122.831, -17.184, 1.94 ) }
    dend_17 { pt3dadd( -10.6932, -128.268, -18.9597, 0.28 ) }
    dend_17 { pt3dadd( -12.0619, -130.712, -19.548, 1.39 ) }
    dend_17 { pt3dadd( -12.8737, -132.17, -19.7578, 1.39 ) }
    dend_17 { pt3dadd( -17.0412, -139.946, -20.2559, 0.28 ) }
    dend_17 { pt3dadd( -20.0034, -145.608, -20.4744, 0.28 ) }
    dend_17 { pt3dadd( -21.5072, -148.632, -20.9478, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_17 { pt3dadd( -23.2776, -152.597, -22.0588, 0.28 ) }
    dend_17 { pt3dadd( -23.9739, -154.532, -22.8212, 0.83 ) }
    dend_17 { pt3dadd( -24.3225, -155.704, -23.39, 0.28 ) }
    dend_17 { pt3dadd( -24.7039, -157.392, -24.342, 1.11 ) }
    dend_17 { pt3dadd( -27.04, -169.515, -31.1396, 0.28 ) }
    dend_17 { pt3dadd( -27.4069, -171.571, -32.2454, 0.55 ) }
    dend_17 { pt3dadd( -28.6459, -178.976, -35.9403, 0.28 ) }
    dend_17 { pt3dadd( -28.8384, -180.455, -36.5534, 0.55 ) }
    dend_17 { pt3dadd( -29.2259, -184.44, -37.9352, 0.28 ) }
    dend_17 { pt3dadd( -29.3788, -188.308, -38.7917, 0.83 ) }
    dend_17 { pt3dadd( -29.358, -189.337, -38.7897, 0.83 ) }
    dend_17 { pt3dadd( -29.064, -193.941, -38.5759, 0.28 ) }
    dend_17 { pt3dadd( -28.5309, -198.695, -37.9271, 0.28 ) }
    dend_17 { pt3dadd( -27.9734, -202.452, -37.2926, 0.55 ) }
    dend_17 { pt3dadd( -26.6833, -209.623, -36.1854, 0.28 ) }
    dend_17 { pt3dadd( -25.7323, -214.744, -35.7011, 0.55 ) }
    dend_17 { pt3dadd( -24.7525, -219.713, -35.2789, 0.28 ) }
    dend_17 { pt3dadd( -23.8646, -224.029, -34.8959, 0.83 ) }
    dend_17 { pt3dadd( -23.401, -226.382, -34.8094, 0.28 ) }
    dend_17 { pt3dadd( -22.7666, -229.816, -34.8857, 0.83 ) }
    dend_17 { pt3dadd( -21.2566, -238.222, -35.509, 0.28 ) }
    dend_17 { pt3dadd( -20.8374, -240.707, -35.7939, 0.55 ) }
    dend_17 { pt3dadd( -20.6317, -241.837, -35.9245, 0.28 ) }
    dend_17 { pt3dadd( -19.7968, -245.538, -36.3564, 0.83 ) }
    dend_17 { pt3dadd( -17.8081, -252.754, -36.6592, 0.28 ) }
    dend_17 { pt3dadd( -16.2838, -257.122, -36.395, 1.11 ) }
    dend_17 { pt3dadd( -14.7108, -260.711, -35.8236, 0.28 ) }
    dend_17 { pt3dadd( -13.5937, -262.987, -35.3502, 0.28 ) }
    dend_17 { pt3dadd( -11.97, -266.009, -34.5519, 0.28 ) }
    dend_17 { pt3dadd( -10.5699, -268.376, -33.7031, 0.28 ) }
    dend_17 { pt3dadd( -10.0436, -269.389, -33.4192, 0.55 ) }
    dend_17 { pt3dadd( -9.70368, -271.436, -33.3831, 0.28 ) }
    dend_17 { pt3dadd( -9.78532, -273.055, -33.4823, 0.55 ) }
    dend_17 { pt3dadd( -10.02, -273.99, -33.6076, 0.28 ) }
    dend_17 { pt3dadd( -10.6704, -275.633, -33.954, 0.55 ) }
    dend_17 { pt3dadd( -13.5036, -281.668, -35.7741, 0.28 ) }
    dend_17 { pt3dadd( -14.0432, -282.631, -36.1128, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.18402, -40.8333, -0.0923774, 1.39 ) }
    dend_7 { pt3dadd( -7.60252, -47.1538, -0.337862, 1.39 ) }
    dend_7 { pt3dadd( -8.27347, -49.8943, -0.413734, 1.39 ) }
    dend_7 { pt3dadd( -8.8826, -53.1797, -0.0810992, 1.39 ) }
    dend_7 { pt3dadd( -9.74172, -58.8728, 0.789165, 1.39 ) }
    dend_7 { pt3dadd( -10.2795, -62.965, 1.48079, 1.39 ) }
    dend_7 { pt3dadd( -10.6191, -66.0952, 2.00166, 1.39 ) }
    dend_7 { pt3dadd( -11.108, -70.2786, 2.76024, 1.11 ) }
    dend_7 { pt3dadd( -11.7983, -78.6707, 4.47498, 1.11 ) }
    dend_7 { pt3dadd( -11.9367, -83.1891, 5.41182, 1.11 ) }
    dend_7 { pt3dadd( -11.8501, -88.8715, 6.64903, 1.11 ) }
    dend_7 { pt3dadd( -11.7543, -92.4964, 7.42732, 1.39 ) }
    dend_7 { pt3dadd( -11.6878, -97.2253, 8.32819, 1.39 ) }
    dend_7 { pt3dadd( -11.6897, -106.776, 9.90624, 0.83 ) }
    dend_7 { pt3dadd( -11.8002, -109.756, 10.2861, 0.83 ) }
    dend_7 { pt3dadd( -11.9923, -112.828, 10.7161, 1.11 ) }
    dend_7 { pt3dadd( -12.3377, -116.425, 11.2552, 0.83 ) }
    dend_7 { pt3dadd( -13.0163, -121.566, 12.0155, 1.11 ) }
    dend_7 { pt3dadd( -13.4973, -124.719, 12.4044, 0.83 ) }
    dend_7 { pt3dadd( -13.9875, -127.198, 12.7256, 0.83 ) }
    dend_7 { pt3dadd( -14.4589, -129.689, 13.0147, 0.83 ) }
    dend_7 { pt3dadd( -14.7871, -132.324, 13.2618, 0.83 ) }
    dend_7 { pt3dadd( -14.9153, -134.825, 13.4542, 0.83 ) }
    dend_7 { pt3dadd( -14.8981, -136.348, 13.5846, 0.83 ) }
    dend_7 { pt3dadd( -14.7817, -138.504, 13.704, 0.83 ) }
    dend_7 { pt3dadd( -14.5016, -141.873, 13.8636, 0.83 ) }
    dend_7 { pt3dadd( -14.0527, -146.381, 14.112, 0.83 ) }
    dend_7 { pt3dadd( -13.6775, -149.531, 14.2879, 1.11 ) }
    dend_7 { pt3dadd( -13.3628, -152.242, 14.4877, 0.83 ) }
    dend_7 { pt3dadd( -13.0046, -155.643, 14.6234, 0.83 ) }
    dend_7 { pt3dadd( -12.9095, -156.551, 14.631, 0.83 ) }
    dend_7 { pt3dadd( -12.7694, -158.837, 14.572, 0.83 ) }
    dend_7 { pt3dadd( -12.6869, -161.11, 14.4028, 0.83 ) }
    dend_7 { pt3dadd( -12.4919, -166.321, 13.907, 0.83 ) }
    dend_7 { pt3dadd( -12.384, -170.507, 13.4667, 0.83 ) }
    dend_7 { pt3dadd( -12.3337, -172.338, 13.2503, 0.83 ) }
    dend_7 { pt3dadd( -12.2981, -175.388, 12.7655, 0.83 ) }
    dend_7 { pt3dadd( -12.3043, -178.749, 12.1556, 0.83 ) }
    dend_7 { pt3dadd( -12.3762, -181.74, 11.5929, 0.83 ) }
    dend_7 { pt3dadd( -12.4073, -183.75, 11.1551, 0.83 ) }
    dend_7 { pt3dadd( -12.3887, -186.167, 10.7592, 0.83 ) }
    dend_7 { pt3dadd( -12.2763, -189.033, 10.2005, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 79/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.18402, -40.8333, -0.0923774, 0.83 ) }
    dend_6 { pt3dadd( -7.45301, -42.5935, 5.99101, 0.83 ) }
    dend_6 { pt3dadd( -7.62817, -42.7988, 6.59624, 0.83 ) }
    dend_6 { pt3dadd( -8.07438, -43.2355, 7.77589, 0.83 ) }
    dend_6 { pt3dadd( -9.59825, -44.4477, 11.1124, 0.83 ) }
    dend_6 { pt3dadd( -10.3288, -44.9511, 12.4351, 0.83 ) }
    dend_6 { pt3dadd( -11.1144, -45.4435, 13.6162, 0.83 ) }
    dend_6 { pt3dadd( -11.8519, -45.8522, 14.257, 0.83 ) }
    dend_6 { pt3dadd( -12.7844, -46.336, 14.936, 0.83 ) }
    dend_6 { pt3dadd( -13.7312, -46.7692, 15.4894, 0.83 ) }
    dend_6 { pt3dadd( -15.1006, -47.4312, 16.2029, 0.83 ) }
    dend_6 { pt3dadd( -16.5544, -48.2158, 17.0581, 0.83 ) }
    dend_6 { pt3dadd( -17.744, -48.9302, 17.8165, 0.83 ) }
    dend_6 { pt3dadd( -19.0411, -49.8057, 18.6756, 0.83 ) }
    dend_6 { pt3dadd( -20.0651, -50.5666, 19.366, 0.83 ) }
    dend_6 { pt3dadd( -21.8887, -51.9615, 20.6002, 0.83 ) }
    dend_6 { pt3dadd( -22.9985, -52.7894, 21.3494, 0.83 ) }
    dend_6 { pt3dadd( -24.3137, -53.7648, 22.2219, 0.83 ) }
    dend_6 { pt3dadd( -26.2294, -55.1403, 23.3242, 0.83 ) }
    dend_6 { pt3dadd( -27.3749, -55.9288, 23.8708, 0.83 ) }
    dend_6 { pt3dadd( -28.1902, -56.5225, 24.1819, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( -29.0723, -57.1611, 24.4329, 0.83 ) }
    dend_6 { pt3dadd( -30.0107, -57.8427, 24.5715, 0.83 ) }
    dend_6 { pt3dadd( -31.8418, -59.1934, 24.6424, 0.83 ) }
    dend_6 { pt3dadd( -33.5511, -60.4561, 24.5625, 0.83 ) }
    dend_6 { pt3dadd( -35.2826, -61.7575, 24.4818, 0.83 ) }
    dend_6 { pt3dadd( -36.0161, -62.3183, 24.485, 0.83 ) }
    dend_6 { pt3dadd( -38.9381, -64.5478, 24.6653, 0.83 ) }
    dend_6 { pt3dadd( -40.2231, -65.5264, 24.8162, 0.83 ) }
    dend_6 { pt3dadd( -41.9915, -66.8628, 25.0119, 0.83 ) }
    dend_6 { pt3dadd( -44.373, -68.6855, 25.2493, 0.83 ) }
    dend_6 { pt3dadd( -47.4269, -70.9224, 25.6113, 0.55 ) }
    dend_6 { pt3dadd( -49.1956, -72.2667, 25.8727, 0.55 ) }
    dend_6 { pt3dadd( -50.2249, -73.0765, 26.0755, 0.55 ) }
    dend_6 { pt3dadd( -53.4145, -75.4686, 26.6853, 0.55 ) }
    dend_6 { pt3dadd( -55.5885, -76.9879, 26.831, 0.55 ) }
    dend_6 { pt3dadd( -57.3725, -78.1181, 26.77, 1.11 ) }
    dend_6 { pt3dadd( -59.0602, -79.1061, 26.6335, 1.11 ) }
    dend_6 { pt3dadd( -59.7886, -79.5406, 26.5907, 1.11 ) }
    dend_6 { pt3dadd( -61.9341, -80.8016, 26.4224, 0.28 ) }
    dend_6 { pt3dadd( -67.2096, -83.8498, 26.0592, 0.83 ) }
    dend_6 { pt3dadd( -70.1114, -85.502, 25.7743, 0.28 ) }
    dend_6 { pt3dadd( -71.8655, -86.5557, 25.7011, 0.83 ) }
    dend_6 { pt3dadd( -74.2298, -87.9569, 25.8419, 0.55 ) }
    dend_6 { pt3dadd( -76.7129, -89.5208, 26.4269, 0.55 ) }
    dend_6 { pt3dadd( -77.8718, -90.3349, 26.9607, 0.83 ) }
    dend_6 { pt3dadd( -78.7121, -90.9688, 27.8781, 0.55 ) }
    dend_6 { pt3dadd( -81.206, -92.8758, 31.9216, 0.55 ) }
    dend_6 { pt3dadd( -81.7, -93.2137, 33.0322, 0.55 ) }
    dend_6 { pt3dadd( -82.227, -93.4871, 34.5138, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -19.7643, 152.604, 98.1516, 0.28 ) }
    dend_40 { pt3dadd( -21.2963, 161.042, 104.538, 0.28 ) }
    dend_40 { pt3dadd( -21.6122, 169.109, 111.571, 0.28 ) }
    dend_40 { pt3dadd( -20.8441, 178.147, 117.184, 0.28 ) }
    dend_40 { pt3dadd( -19.8746, 186.998, 123.072, 0.28 ) }
    dend_40 { pt3dadd( -19.012, 195.365, 129.677, 0.28 ) }
    dend_40 { pt3dadd( -19.4088, 203.206, 136.971, 0.28 ) }
    dend_40 { pt3dadd( -20.4214, 210.068, 145.184, 0.28 ) }
    dend_40 { pt3dadd( -20.6227, 218.169, 152.18, 0.28 ) }
    dend_40 { pt3dadd( -20.4558, 226.826, 158.438, 0.28 ) }
    dend_40 { pt3dadd( -22.1314, 235.706, 164.118, 0.28 ) }
    dend_40 { pt3dadd( -22.0722, 245.622, 167.938, 0.28 ) }
    dend_40 { pt3dadd( -22.0835, 255.482, 171.906, 0.28 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 42/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -19.7643, 152.604, 98.1516, 0.28 ) }
    dend_37 { pt3dadd( -18.9022, 158.955, 100.98, 0.28 ) }
    dend_37 { pt3dadd( -17.8979, 165.024, 104.36, 0.28 ) }
    dend_37 { pt3dadd( -16.0038, 170.83, 107.842, 0.28 ) }
    dend_37 { pt3dadd( -13.5625, 176.925, 110.322, 0.28 ) }
    dend_37 { pt3dadd( -11.0116, 182.492, 113.797, 0.28 ) }
    dend_37 { pt3dadd( -7.73161, 188.007, 116.702, 0.28 ) }
    dend_37 { pt3dadd( -4.41838, 193.544, 119.524, 0.28 ) }
    dend_37 { pt3dadd( -0.511296, 198.176, 123.179, 0.28 ) }
    dend_37 { pt3dadd( 4.27549, 202.794, 125.598, 0.28 ) }
    dend_37 { pt3dadd( 9.2649, 207.66, 126.779, 0.28 ) }
    dend_37 { pt3dadd( 13.9034, 212.875, 127.817, 0.28 ) }
    dend_37 { pt3dadd( 18.7919, 217.896, 128.701, 0.28 ) }
    dend_37 { pt3dadd( 23.7638, 222.639, 130.378, 0.28 ) }
    dend_37 { pt3dadd( 28.9363, 227.2, 131.979, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.58681, 29.469, 9.78634, 1.66 ) }
    dend_33 { pt3dadd( 1.59533, 26.791, 15.8806, 1.66 ) }
    dend_33 { pt3dadd( 4.46315, 25.309, 19.2532, 1.66 ) }
    dend_33 { pt3dadd( 6.27142, 24.3745, 21.3798, 1.66 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.58681, 29.469, 9.78634, 0.83 ) }
    dend_30 { pt3dadd( -1.14194, 30.8921, 9.04366, 0.83 ) }
    dend_30 { pt3dadd( 0.828255, 32.1067, 8.65609, 0.83 ) }
    dend_30 { pt3dadd( 2.69378, 33.4507, 8.1519, 0.83 ) }
    dend_30 { pt3dadd( 5.52901, 35.9236, 7.3029, 0.83 ) }
    dend_30 { pt3dadd( 7.2669, 37.6618, 6.76347, 0.83 ) }
    dend_30 { pt3dadd( 9.48183, 39.919, 5.99473, 0.83 ) }
    dend_30 { pt3dadd( 11.373, 41.7982, 4.86823, 0.83 ) }
    dend_30 { pt3dadd( 14.7838, 45.1382, 2.37443, 0.83 ) }
    dend_30 { pt3dadd( 16.9656, 47.3485, 0.520866, 0.83 ) }
    dend_30 { pt3dadd( 18.2177, 48.6842, -0.560225, 0.83 ) }
    dend_30 { pt3dadd( 20.3928, 51.1403, -2.83206, 0.83 ) }
    dend_30 { pt3dadd( 25.084, 56.806, -8.63233, 0.83 ) }
    dend_30 { pt3dadd( 26.1986, 58.1772, -10.0914, 0.83 ) }
    dend_30 { pt3dadd( 27.4856, 59.7367, -11.9939, 0.83 ) }
    dend_30 { pt3dadd( 28.9535, 61.6077, -14.1915, 0.55 ) }
    dend_30 { pt3dadd( 31.9389, 65.9529, -18.8091, 0.55 ) }
    dend_30 { pt3dadd( 32.8702, 67.7569, -20.3377, 0.55 ) }
    dend_30 { pt3dadd( 33.4808, 69.1811, -21.2333, 0.55 ) }
    dend_30 { pt3dadd( 36.91, 77.0444, -26.0489, 0.55 ) }
    dend_30 { pt3dadd( 39.5965, 82.7392, -29.166, 0.55 ) }
    dend_30 { pt3dadd( 40.5367, 84.7361, -30.0683, 0.83 ) }
    dend_30 { pt3dadd( 41.3718, 86.3681, -30.8364, 0.83 ) }
    dend_30 { pt3dadd( 42.4499, 88.3368, -32.0319, 0.83 ) }
    dend_30 { pt3dadd( 43.1305, 89.5277, -32.8079, 0.83 ) }
    dend_30 { pt3dadd( 44.0906, 91.1586, -34.0932, 0.55 ) }
    dend_30 { pt3dadd( 45.1197, 92.8009, -35.6631, 0.55 ) }
    dend_30 { pt3dadd( 48.9406, 99.0974, -41.4823, 0.55 ) }
    dend_30 { pt3dadd( 49.5798, 100.183, -42.4532, 0.55 ) }
    dend_30 { pt3dadd( 51.2908, 103.413, -45.0901, 1.11 ) }
    dend_30 { pt3dadd( 53.6376, 108.092, -48.5003, 0.55 ) }
    dend_30 { pt3dadd( 54.1712, 109.196, -49.1749, 0.55 ) }
    dend_30 { pt3dadd( 55.8125, 112.657, -50.7197, 0.83 ) }
    dend_30 { pt3dadd( 56.7765, 114.939, -51.2551, 0.28 ) }
    dend_30 { pt3dadd( 58.0016, 117.99, -51.8064, 0.55 ) }
    dend_30 { pt3dadd( 58.5722, 119.424, -52.123, 0.28 ) }
    dend_30 { pt3dadd( 59.4423, 121.556, -52.4188, 0.28 ) }
    dend_30 { pt3dadd( 60.4895, 124.038, -52.8772, 0.28 ) }
    dend_30 { pt3dadd( 60.7997, 124.688, -53.0612, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( 61.4818, 126.002, -53.6032, 0.55 ) }
    dend_30 { pt3dadd( 65.0255, 131.937, -57.3542, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 2/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.2763, -189.033, 10.2005, 0.83 ) }
    dend_11 { pt3dadd( -12.3681, -192.901, 9.53798, 0.83 ) }
    dend_11 { pt3dadd( -12.3565, -194.571, 9.25166, 0.83 ) }
    dend_11 { pt3dadd( -12.2908, -198.857, 8.54593, 0.83 ) }
    dend_11 { pt3dadd( -12.1917, -204.331, 7.47787, 0.83 ) }
    dend_11 { pt3dadd( -12.1878, -208.108, 6.73007, 0.83 ) }
    dend_11 { pt3dadd( -12.1904, -210.11, 6.39867, 0.83 ) }
    dend_11 { pt3dadd( -12.2181, -212.56, 6.053, 0.83 ) }
    dend_11 { pt3dadd( -12.2491, -214.149, 5.94572, 0.83 ) }
    dend_11 { pt3dadd( -12.3231, -218.421, 5.97336, 0.83 ) }
    dend_11 { pt3dadd( -12.32, -222.002, 6.26572, 0.83 ) }
    dend_11 { pt3dadd( -12.2846, -225.506, 6.61574, 0.55 ) }
    dend_11 { pt3dadd( -12.2956, -228.964, 7.02757, 0.55 ) }
    dend_11 { pt3dadd( -12.391, -233.834, 7.37094, 0.83 ) }
    dend_11 { pt3dadd( -12.3863, -235.662, 7.43766, 0.83 ) }
    dend_11 { pt3dadd( -12.38, -237.82, 7.46774, 0.83 ) }
    dend_11 { pt3dadd( -12.4607, -239.342, 7.32049, 0.83 ) }
    dend_11 { pt3dadd( -12.7178, -241.455, 6.9238, 0.83 ) }
    dend_11 { pt3dadd( -13.6036, -246.872, 5.69058, 0.83 ) }
    dend_11 { pt3dadd( -14.1665, -249.785, 5.08851, 1.39 ) }
    dend_11 { pt3dadd( -14.5436, -251.53, 4.78556, 1.39 ) }
    dend_11 { pt3dadd( -16.1299, -258.124, 3.92686, 0.83 ) }
    dend_11 { pt3dadd( -16.6236, -260.135, 3.75672, 0.83 ) }
    dend_11 { pt3dadd( -17.4732, -263.301, 3.67225, 1.39 ) }
    dend_11 { pt3dadd( -18.529, -266.58, 3.84292, 0.83 ) }
    dend_11 { pt3dadd( -19.0025, -267.848, 3.92203, 0.28 ) }
    dend_11 { pt3dadd( -20.2028, -270.794, 4.06813, 0.83 ) }
    dend_11 { pt3dadd( -21.4048, -273.487, 4.20543, 0.83 ) }
    dend_11 { pt3dadd( -22.8659, -276.433, 4.1718, 1.11 ) }
    dend_11 { pt3dadd( -24.6365, -279.742, 4.08116, 0.28 ) }
    dend_11 { pt3dadd( -26.2964, -282.691, 3.92983, 0.28 ) }
    dend_11 { pt3dadd( -29.2672, -287.829, 3.5581, 0.28 ) }
    dend_11 { pt3dadd( -31.0661, -290.841, 3.23573, 0.28 ) }
    dend_11 { pt3dadd( -33.5677, -295.074, 2.58437, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.2763, -189.033, 10.2005, 0.28 ) }
    dend_8 { pt3dadd( -9.0237, -189.756, 8.05405, 0.28 ) }
    dend_8 { pt3dadd( -6.79853, -190.246, 6.98921, 0.28 ) }
    dend_8 { pt3dadd( -4.1867, -190.809, 5.93159, 0.28 ) }
    dend_8 { pt3dadd( 1.65834, -191.911, 4.69029, 0.28 ) }
    dend_8 { pt3dadd( 3.54989, -192.187, 4.58121, 0.28 ) }
    dend_8 { pt3dadd( 9.68547, -192.933, 4.47844, 0.28 ) }
    dend_8 { pt3dadd( 13.0483, -193.263, 4.6121, 0.28 ) }
    dend_8 { pt3dadd( 14.8495, -193.421, 4.74704, 0.28 ) }
    dend_8 { pt3dadd( 21.8214, -194.011, 5.47057, 0.28 ) }
    dend_8 { pt3dadd( 28.0023, -194.618, 6.21594, 0.28 ) }
    dend_8 { pt3dadd( 32.9944, -195.139, 6.58058, 0.28 ) }
    dend_8 { pt3dadd( 35.849, -195.442, 6.63666, 0.28 ) }
    dend_8 { pt3dadd( 38.1147, -195.689, 6.66634, 0.28 ) }
    dend_8 { pt3dadd( 39.8779, -195.917, 6.59652, 0.28 ) }
    dend_8 { pt3dadd( 42.8116, -196.477, 5.90812, 0.28 ) }
    dend_8 { pt3dadd( 44.5134, -197.02, 5.24137, 0.28 ) }
    dend_8 { pt3dadd( 57.1845, -198.7, 6.42438, 0.28 ) }
    dend_8 { pt3dadd( 69.9803, -199.266, 5.54107, 0.28 ) }
    dend_8 { pt3dadd( 82.2419, -202.266, 3.25994, 0.28 ) }
    dend_8 { pt3dadd( 93.9261, -206.619, 0.319865, 0.28 ) }
    dend_8 { pt3dadd( 105.081, -212.843, 0.273538, 0.28 ) }
    dend_8 { pt3dadd( 116.989, -217.531, 0.71187, 0.28 ) }
    dend_8 { pt3dadd( 129.017, -221.934, 0.854383, 0.28 ) }
    dend_8 { pt3dadd( 140.94, -226.56, 1.52457, 0.28 ) }
    dend_8 { pt3dadd( 152.795, -231.018, 3.4313, 0.28 ) }
    dend_8 { pt3dadd( 164.63, -233.962, 7.40661, 0.28 ) }
    dend_8 { pt3dadd( 176.124, -234.96, 13.0385, 0.28 ) }
    dend_8 { pt3dadd( 186.455, -235.133, 20.6594, 0.28 ) }
    dend_8 { pt3dadd( 196.931, -237.836, 27.5518, 0.28 ) }
    dend_8 { pt3dadd( 205.337, -241.327, 36.5786, 0.28 ) }
    dend_8 { pt3dadd( 215.695, -243.103, 43.9465, 0.28 ) }
    dend_8 { pt3dadd( 225.831, -243.593, 51.8125, 0.28 ) }
    dend_8 { pt3dadd( 235.849, -246.399, 59.3162, 0.28 ) }
    dend_8 { pt3dadd( 246.761, -246.882, 66.063, 0.28 ) }
    dend_8 { pt3dadd( 258.376, -246.682, 71.528, 0.28 ) }
    dend_8 { pt3dadd( 270.237, -248.23, 76.1859, 0.28 ) }
    dend_8 { pt3dadd( 282.577, -250.688, 78.7043, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 74/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -22.0835, 255.482, 171.906, 0.28 ) }
    dend_42 { pt3dadd( -26.8572, 262.008, 178.145, 0.28 ) }
    dend_42 { pt3dadd( -32.9321, 267.439, 184.36, 0.28 ) }
    dend_42 { pt3dadd( -40.7481, 271.716, 189.479, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 78/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -22.0835, 255.482, 171.906, 0.28 ) }
    dend_41 { pt3dadd( -11.8281, 257.33, 165.661, 0.28 ) }
    dend_41 { pt3dadd( -1.77029, 261.318, 160.229, 0.28 ) }
    dend_41 { pt3dadd( 8.93988, 264.922, 155.876, 0.28 ) }
    dend_41 { pt3dadd( 18.4843, 270.737, 151.351, 0.28 ) }
    dend_41 { pt3dadd( 27.845, 276.829, 146.826, 0.28 ) }
    dend_41 { pt3dadd( 36.5965, 282.958, 141.241, 0.28 ) }
    dend_41 { pt3dadd( 44.3686, 288.04, 133.489, 0.28 ) }
    dend_41 { pt3dadd( 53.3607, 290.035, 125.561, 0.28 ) }
    dend_41 { pt3dadd( 61.212, 292.575, 116.644, 0.28 ) }
    dend_41 { pt3dadd( 70.4141, 292.705, 108.679, 0.28 ) }
    dend_41 { pt3dadd( 78.1431, 292.882, 99.2751, 0.28 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 28.9363, 227.2, 131.979, 0.28 ) }
    dend_39 { pt3dadd( 35.9475, 223.975, 138.431, 0.28 ) }
    dend_39 { pt3dadd( 44.0725, 222.187, 144.119, 0.28 ) }
    dend_39 { pt3dadd( 52.2446, 222.541, 150.042, 0.28 ) }
    dend_39 { pt3dadd( 61.023, 224.399, 154.681, 0.28 ) }
    dend_39 { pt3dadd( 68.9326, 225.746, 160.817, 0.28 ) }
    dend_39 { pt3dadd( 75.939, 228.079, 167.702, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 97/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 28.9363, 227.2, 131.979, 0.28 ) }
    dend_38 { pt3dadd( 25.6733, 228.817, 125.027, 0.28 ) }
    dend_38 { pt3dadd( 22.9051, 229.567, 117.713, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 0/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.27142, 24.3745, 21.3798, 1.11 ) }
    dend_35 { pt3dadd( 11.7079, 24.7916, 20.2177, 1.11 ) }
    dend_35 { pt3dadd( 14.1915, 25.0386, 19.8752, 1.11 ) }
    dend_35 { pt3dadd( 19.3487, 25.7945, 19.3991, 1.11 ) }
    dend_35 { pt3dadd( 22.72, 26.4849, 19.2684, 1.11 ) }
    dend_35 { pt3dadd( 25.3736, 27.1404, 19.2441, 1.11 ) }
    dend_35 { pt3dadd( 30.3688, 28.4015, 19.2674, 1.11 ) }
    dend_35 { pt3dadd( 35.7847, 30.0308, 19.5523, 1.11 ) }
    dend_35 { pt3dadd( 38.0071, 30.8066, 19.5259, 1.11 ) }
    dend_35 { pt3dadd( 40.6751, 31.9062, 19.133, 0.83 ) }
    dend_35 { pt3dadd( 42.4031, 32.6608, 18.8516, 0.83 ) }
    dend_35 { pt3dadd( 43.6262, 33.1346, 18.6425, 0.83 ) }
    dend_35 { pt3dadd( 47.2152, 34.3893, 18.0452, 0.83 ) }
    dend_35 { pt3dadd( 48.5033, 34.8154, 17.6737, 0.83 ) }
    dend_35 { pt3dadd( 51.2953, 35.6772, 16.9212, 0.83 ) }
    dend_35 { pt3dadd( 53.298, 36.2943, 16.4355, 0.83 ) }
    dend_35 { pt3dadd( 54.7273, 36.7615, 16.192, 0.83 ) }
    dend_35 { pt3dadd( 56.2395, 37.2703, 16.0556, 0.83 ) }
    dend_35 { pt3dadd( 58.0783, 37.8614, 16.079, 0.83 ) }
    dend_35 { pt3dadd( 59.7198, 38.4189, 16.0544, 0.83 ) }
    dend_35 { pt3dadd( 60.8969, 38.8712, 16.0035, 0.83 ) }
    dend_35 { pt3dadd( 62.2545, 39.4454, 15.8287, 0.83 ) }
    dend_35 { pt3dadd( 63.364, 39.9257, 15.6288, 0.83 ) }
    dend_35 { pt3dadd( 64.74, 40.5049, 15.3138, 0.83 ) }
    dend_35 { pt3dadd( 66.5468, 41.3124, 14.8255, 0.83 ) }
    dend_35 { pt3dadd( 67.828, 41.9425, 14.4855, 0.83 ) }
    dend_35 { pt3dadd( 69.2572, 42.7342, 14.1253, 0.83 ) }
    dend_35 { pt3dadd( 70.5271, 43.535, 13.835, 0.83 ) }
    dend_35 { pt3dadd( 71.5524, 44.2542, 13.6382, 0.83 ) }
    dend_35 { pt3dadd( 72.9214, 45.2262, 13.4528, 0.83 ) }
    dend_35 { pt3dadd( 73.8456, 45.861, 13.3983, 0.55 ) }
    dend_35 { pt3dadd( 74.3328, 46.206, 13.3704, 0.55 ) }
    dend_35 { pt3dadd( 75.0441, 46.711, 13.2228, 0.55 ) }
    dend_35 { pt3dadd( 75.5106, 47.0247, 13.0511, 0.55 ) }
    dend_35 { pt3dadd( 76.498, 47.6703, 12.5596, 0.55 ) }
    dend_35 { pt3dadd( 77.1454, 48.0398, 11.9927, 0.55 ) }
    dend_35 { pt3dadd( 77.7064, 48.3085, 11.3886, 0.55 ) }
    dend_35 { pt3dadd( 79.755, 49.0778, 9.05021, 0.55 ) }
    dend_35 { pt3dadd( 80.487, 49.2859, 8.20884, 0.55 ) }
    dend_35 { pt3dadd( 81.1854, 49.4481, 7.44013, 0.55 ) }
    dend_35 { pt3dadd( 84.1002, 50.0038, 4.45158, 0.55 ) }
    dend_35 { pt3dadd( 84.7587, 50.0948, 3.85469, 0.55 ) }
    dend_35 { pt3dadd( 85.7433, 50.1489, 3.13741, 0.55 ) }
    dend_35 { pt3dadd( 86.7889, 50.1095, 2.70574, 0.55 ) }
    dend_35 { pt3dadd( 88.2039, 49.9197, 2.36677, 0.55 ) }
    dend_35 { pt3dadd( 89.5105, 49.6814, 2.28682, 0.55 ) }
    dend_35 { pt3dadd( 90.2505, 49.5526, 2.36078, 0.83 ) }
    dend_35 { pt3dadd( 91.4552, 49.3664, 2.47404, 0.83 ) }
    dend_35 { pt3dadd( 94.0535, 49.0045, 2.80237, 0.83 ) }
    dend_35 { pt3dadd( 95.3644, 48.8665, 2.97543, 0.55 ) }
    dend_35 { pt3dadd( 96.8378, 48.7917, 3.14675, 0.55 ) }
    dend_35 { pt3dadd( 98.5286, 48.8422, 3.30071, 0.55 ) }
    dend_35 { pt3dadd( 99.9115, 48.9875, 3.38042, 0.55 ) }
    dend_35 { pt3dadd( 101.757, 49.2972, 3.53781, 0.55 ) }
    dend_35 { pt3dadd( 104.007, 49.8087, 3.73638, 0.83 ) }
    dend_35 { pt3dadd( 106.216, 50.4309, 4.01156, 0.55 ) }
    dend_35 { pt3dadd( 107.865, 50.9533, 4.13096, 0.55 ) }
    dend_35 { pt3dadd( 109.444, 51.5151, 4.14624, 0.55 ) }
    dend_35 { pt3dadd( 112.231, 52.58, 3.9327, 0.55 ) }
    dend_35 { pt3dadd( 113.598, 53.1219, 3.69591, 0.55 ) }
    dend_35 { pt3dadd( 115.061, 53.6762, 3.36895, 0.55 ) }
    dend_35 { pt3dadd( 118.956, 55.0697, 2.6623, 0.55 ) }
    dend_35 { pt3dadd( 120.537, 55.6272, 2.41096, 0.55 ) }
    dend_35 { pt3dadd( 124.071, 56.8706, 1.90877, 1.11 ) }
    dend_35 { pt3dadd( 125.085, 57.2119, 1.87503, 0.55 ) }
    dend_35 { pt3dadd( 128.488, 58.3259, 2.2539, 0.83 ) }
    dend_35 { pt3dadd( 131.575, 59.3236, 2.98849, 0.55 ) }
    dend_35 { pt3dadd( 132.702, 59.7021, 3.37694, 0.55 ) }
    dend_35 { pt3dadd( 134.383, 60.2912, 4.0047, 0.55 ) }
    dend_35 { pt3dadd( 138.539, 61.7743, 5.59523, 0.55 ) }
    dend_35 { pt3dadd( 139.489, 62.1141, 5.90607, 0.28 ) }
    dend_35 { pt3dadd( 141.608, 62.8938, 6.43499, 0.28 ) }
    dend_35 { pt3dadd( 143.402, 63.5799, 6.65993, 0.28 ) }
    dend_35 { pt3dadd( 145.55, 64.4302, 6.78142, 0.83 ) }
    dend_35 { pt3dadd( 147.379, 65.2218, 6.7102, 0.55 ) }
    dend_35 { pt3dadd( 148.815, 65.8863, 6.47591, 0.55 ) }
    dend_35 { pt3dadd( 150.247, 66.5528, 6.23955, 0.55 ) }
    dend_35 { pt3dadd( 151.694, 67.2742, 6.00269, 0.55 ) }
    dend_35 { pt3dadd( 152.629, 67.7874, 5.87413, 0.28 ) }
    dend_35 { pt3dadd( 153.273, 68.1758, 5.81111, 0.28 ) }
    dend_35 { pt3dadd( 154.335, 68.8485, 5.7559, 0.55 ) }
    dend_35 { pt3dadd( 155.755, 69.7288, 5.74427, 0.55 ) }
    dend_35 { pt3dadd( 156.901, 70.3929, 5.74213, 0.55 ) }
    dend_35 { pt3dadd( 157.815, 70.881, 5.7462, 0.55 ) }
    dend_35 { pt3dadd( 159.299, 71.6693, 5.76804, 0.55 ) }
    dend_35 { pt3dadd( 160.466, 72.2835, 5.79789, 0.55 ) }
    dend_35 { pt3dadd( 167.342, 74.7978, 3.83905, 0.55 ) }
    dend_35 { pt3dadd( 173.922, 78.1623, 2.21031, 0.55 ) }
    dend_35 { pt3dadd( 180.925, 81.0107, 1.74029, 0.55 ) }
    dend_35 { pt3dadd( 188.32, 82.4471, 2.60957, 0.55 ) }
    dend_35 { pt3dadd( 195.837, 82.7162, 1.65833, 0.55 ) }
    dend_35 { pt3dadd( 203.124, 82.1788, -0.331503, 0.55 ) }
    dend_35 { pt3dadd( 210.358, 82.852, -2.50664, 0.55 ) }
    dend_35 { pt3dadd( 217.753, 83.3686, -4.10009, 0.55 ) }
    dend_35 { pt3dadd( 224.925, 84.6755, -6.19061, 0.55 ) }
    dend_35 { pt3dadd( 232.029, 87.0289, -7.39254, 0.55 ) }
    dend_35 { pt3dadd( 238.888, 90.2241, -7.60737, 0.55 ) }
    dend_35 { pt3dadd( 245.438, 93.7961, -6.38458, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 98/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.27142, 24.3745, 21.3798, 1.11 ) }
    dend_34 { pt3dadd( 6.34407, 27.0631, 24.7882, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_34 { pt3dadd( 6.59626, 31.0207, 29.4137, 1.11 ) }
    dend_34 { pt3dadd( 6.80952, 32.9414, 31.7726, 1.11 ) }
    dend_34 { pt3dadd( 7.11099, 34.935, 34.1538, 0.83 ) }
    dend_34 { pt3dadd( 7.77127, 38.6429, 38.3231, 0.83 ) }
    dend_34 { pt3dadd( 8.2594, 41.358, 41.4852, 0.83 ) }
    dend_34 { pt3dadd( 8.63175, 43.7213, 44.3003, 0.83 ) }
    dend_34 { pt3dadd( 9.29344, 47.5188, 48.21, 0.55 ) }
    dend_34 { pt3dadd( 9.61034, 48.833, 49.5906, 0.55 ) }
    dend_34 { pt3dadd( 9.97719, 50.3754, 51.0473, 0.55 ) }
    dend_34 { pt3dadd( 10.6269, 54.0988, 53.8951, 0.55 ) }
    dend_34 { pt3dadd( 11.1209, 59.7888, 58.0696, 0.55 ) }
    dend_34 { pt3dadd( 11.1779, 60.9023, 59.1548, 0.55 ) }
    dend_34 { pt3dadd( 11.0112, 65.7795, 63.757, 0.55 ) }
    dend_34 { pt3dadd( 10.9885, 66.2272, 64.4797, 0.55 ) }
    dend_34 { pt3dadd( 11.0066, 66.5047, 65.2785, 0.55 ) }
    dend_34 { pt3dadd( 12.7164, 73.5806, 71.5346, 0.55 ) }
    dend_34 { pt3dadd( 15.1359, 81.8835, 75.6057, 0.55 ) }
    dend_34 { pt3dadd( 16.4522, 90.7657, 78.7924, 0.55 ) }
    dend_34 { pt3dadd( 17.1388, 99.9184, 81.2928, 0.55 ) }
    dend_34 { pt3dadd( 18.6546, 108.778, 84.4605, 0.55 ) }
    dend_34 { pt3dadd( 22.1568, 117.1, 87.6242, 0.55 ) }
    dend_34 { pt3dadd( 24.344, 125.57, 91.4568, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 65.0255, 131.937, -57.3542, 0.28 ) }
    dend_32 { pt3dadd( 59.5268, 131.505, -54.6783, 0.28 ) }
    dend_32 { pt3dadd( 57.92, 131.379, -53.8963, 0.28 ) }
    dend_32 { pt3dadd( 56.3203, 131.253, -53.1178, 0.28 ) }
    dend_32 { pt3dadd( 54.8012, 131.134, -52.3785, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 27/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 65.0255, 131.937, -57.3542, 0.55 ) }
    dend_31 { pt3dadd( 66.5738, 135.94, -66.5154, 0.55 ) }
    dend_31 { pt3dadd( 66.9423, 136.985, -67.9992, 0.55 ) }
    dend_31 { pt3dadd( 70.2623, 145.402, -76.7268, 0.55 ) }
    dend_31 { pt3dadd( 70.9381, 147.15, -78.0342, 0.28 ) }
    dend_31 { pt3dadd( 71.7119, 149.214, -79.1991, 0.28 ) }
    dend_31 { pt3dadd( 71.7119, 149.214, -79.1991, 0.28 ) }
    dend_31 { pt3dadd( 73.5057, 153.091, -81.867, 0.83 ) }
    dend_31 { pt3dadd( 75.5889, 157.179, -84.6337, 0.28 ) }
    dend_31 { pt3dadd( 77.3719, 160.805, -86.2102, 0.28 ) }
    dend_31 { pt3dadd( 78.4526, 163.012, -87.0408, 0.55 ) }
    dend_31 { pt3dadd( 79.9752, 166.213, -88.0572, 0.28 ) }
    dend_31 { pt3dadd( 86.7767, 180.11, -94.0855, 0.28 ) }
    dend_31 { pt3dadd( 87.3713, 181.366, -94.7276, 0.28 ) }
    dend_31 { pt3dadd( 91.4495, 190.792, -99.7456, 0.55 ) }
    dend_31 { pt3dadd( 92.5992, 193.609, -101.284, 0.55 ) }
    dend_31 { pt3dadd( 93.4801, 195.998, -102.482, 0.28 ) }
    dend_31 { pt3dadd( 97.128, 207.542, -107.413, 0.28 ) }
    dend_31 { pt3dadd( 98.4075, 212.441, -108.886, 0.28 ) }
    dend_31 { pt3dadd( 99.0063, 214.602, -109.662, 0.28 ) }
    dend_31 { pt3dadd( 100.497, 219.451, -111.758, 0.83 ) }
    dend_31 { pt3dadd( 100.977, 221.037, -112.294, 0.28 ) }
    dend_31 { pt3dadd( 101.58, 223.068, -112.668, 0.55 ) }
    dend_31 { pt3dadd( 102.065, 224.68, -112.597, 0.28 ) }
    dend_31 { pt3dadd( 103.422, 227.904, -112.372, 0.28 ) }
    dend_31 { pt3dadd( 104.445, 229.819, -112.194, 0.28 ) }
    dend_31 { pt3dadd( 105.946, 232.107, -111.925, 0.55 ) }
    dend_31 { pt3dadd( 107.244, 233.735, -111.906, 0.55 ) }
    dend_31 { pt3dadd( 111.158, 237.712, -112.208, 0.28 ) }
    dend_31 { pt3dadd( 114.535, 240.608, -112.961, 0.83 ) }
    dend_31 { pt3dadd( 116.631, 242.271, -113.655, 0.28 ) }
    dend_31 { pt3dadd( 119.61, 244.656, -114.891, 0.28 ) }
    dend_31 { pt3dadd( 125.491, 249.315, -117.665, 0.28 ) }
    dend_31 { pt3dadd( 128.469, 251.77, -119.172, 0.83 ) }
    dend_31 { pt3dadd( 132.435, 255.451, -121.367, 0.28 ) }
    dend_31 { pt3dadd( 134.6, 257.844, -122.587, 0.28 ) }
    dend_31 { pt3dadd( 136.535, 260.273, -123.538, 0.28 ) }
    dend_31 { pt3dadd( 137.803, 262.116, -124.028, 0.28 ) }
    dend_31 { pt3dadd( 139.949, 265.871, -124.246, 0.28 ) }
    dend_31 { pt3dadd( 141.554, 269.174, -124.164, 0.28 ) }
    dend_31 { pt3dadd( 142.501, 271.39, -123.915, 0.28 ) }
    dend_31 { pt3dadd( 143.349, 273.39, -123.814, 0.28 ) }
    dend_31 { pt3dadd( 144.776, 276.871, -123.842, 0.55 ) }
    dend_31 { pt3dadd( 146.555, 281.492, -124.107, 0.28 ) }
    dend_31 { pt3dadd( 148.24, 285.443, -124.444, 0.28 ) }
    dend_31 { pt3dadd( 149.853, 288.818, -124.778, 0.28 ) }
    dend_31 { pt3dadd( 152.651, 294.008, -125.297, 0.28 ) }
    dend_31 { pt3dadd( 154.569, 297.06, -125.577, 0.28 ) }
    dend_31 { pt3dadd( 156.664, 299.752, -125.918, 0.55 ) }
    dend_31 { pt3dadd( 160.361, 303.643, -126.567, 0.28 ) }
    dend_31 { pt3dadd( 161.792, 304.945, -126.734, 0.55 ) }
    dend_31 { pt3dadd( 163.922, 306.7, -126.844, 0.28 ) }
    dend_31 { pt3dadd( 166.668, 308.93, -126.795, 0.28 ) }
    dend_31 { pt3dadd( 170.807, 312.249, -126.77, 0.28 ) }
    dend_31 { pt3dadd( 174.902, 315.525, -126.72, 0.28 ) }
    dend_31 { pt3dadd( 176.31, 316.711, -126.689, 0.55 ) }
    dend_31 { pt3dadd( 178.205, 318.347, -126.597, 0.28 ) }
    dend_31 { pt3dadd( 179.83, 319.801, -126.33, 0.28 ) }
    dend_31 { pt3dadd( 181.765, 321.575, -125.793, 0.28 ) }
    dend_31 { pt3dadd( 186.205, 325.471, -124.099, 0.55 ) }
    dend_31 { pt3dadd( 188.361, 327.237, -123.224, 0.28 ) }
    dend_31 { pt3dadd( 190.842, 329.057, -122.201, 0.28 ) }
    dend_31 { pt3dadd( 196.368, 332.555, -119.953, 0.55 ) }
    dend_31 { pt3dadd( 199.18, 334.101, -118.842, 0.28 ) }
    dend_31 { pt3dadd( 202.72, 335.859, -117.421, 0.28 ) }
    dend_31 { pt3dadd( 205.922, 337.252, -116.122, 0.28 ) }
    dend_31 { pt3dadd( 208.798, 338.329, -115.007, 0.28 ) }
    dend_31 { pt3dadd( 212.894, 339.611, -113.611, 0.28 ) }
    dend_31 { pt3dadd( 216.0, 340.354, -112.939, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -33.5677, -295.074, 2.58437, 0.28 ) }
    dend_13 { pt3dadd( -26.9276, -295.624, 1.3215, 0.28 ) }
    dend_13 { pt3dadd( -20.2508, -296.23, -0.340187, 0.28 ) }
    dend_13 { pt3dadd( -10.4113, -297.115, -2.70735, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -6.89119, -297.399, -3.5724, 0.28 ) }
    dend_13 { pt3dadd( -3.38241, -297.693, -4.54607, 0.28 ) }
    dend_13 { pt3dadd( 0.236228, -298.001, -5.5976, 0.28 ) }
    dend_13 { pt3dadd( 5.58305, -298.365, -7.01485, 0.28 ) }
    dend_13 { pt3dadd( 10.2279, -298.595, -8.33605, 0.28 ) }
    dend_13 { pt3dadd( 14.1538, -298.691, -10.2, 0.28 ) }
    dend_13 { pt3dadd( 18.0525, -298.743, -12.385, 0.28 ) }
    dend_13 { pt3dadd( 21.9706, -298.74, -14.8036, 0.28 ) }
    dend_13 { pt3dadd( 27.0093, -298.656, -18.128, 0.28 ) }
    dend_13 { pt3dadd( 29.1007, -298.591, -19.7442, 0.28 ) }
    dend_13 { pt3dadd( 39.1075, -298.206, -29.1393, 0.28 ) }
    dend_13 { pt3dadd( 41.8474, -298.078, -32.1315, 0.28 ) }
    dend_13 { pt3dadd( 45.4864, -297.804, -36.9463, 0.28 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 13/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -33.5677, -295.074, 2.58437, 0.28 ) }
    dend_12 { pt3dadd( -35.9876, -294.864, 3.97564, 0.28 ) }
    dend_12 { pt3dadd( -38.3185, -294.688, 5.21756, 0.28 ) }
    dend_12 { pt3dadd( -40.3239, -294.592, 6.1929, 0.28 ) }
    dend_12 { pt3dadd( -44.4329, -294.398, 8.06463, 0.28 ) }
    dend_12 { pt3dadd( -46.6938, -294.277, 9.03577, 0.28 ) }
    dend_12 { pt3dadd( -48.7836, -294.168, 9.87889, 0.28 ) }
    dend_12 { pt3dadd( -50.923, -294.095, 10.6838, 0.28 ) }
    dend_12 { pt3dadd( -53.3987, -294.092, 11.5106, 0.28 ) }
    dend_12 { pt3dadd( -54.6813, -294.158, 11.8554, 0.28 ) }
    dend_12 { pt3dadd( -56.2247, -294.328, 12.1353, 0.28 ) }
    dend_12 { pt3dadd( -58.3614, -294.75, 12.5199, 0.28 ) }
    dend_12 { pt3dadd( -60.1463, -295.257, 12.8374, 0.28 ) }
    dend_12 { pt3dadd( -61.5998, -295.797, 13.0973, 0.28 ) }
    dend_12 { pt3dadd( -63.6667, -296.753, 13.469, 0.28 ) }
    dend_12 { pt3dadd( -65.6788, -297.798, 13.832, 0.28 ) }
    dend_12 { pt3dadd( -67.5981, -298.906, 14.1794, 0.28 ) }
    dend_12 { pt3dadd( -69.174, -299.896, 14.4656, 0.28 ) }
    dend_12 { pt3dadd( -70.8651, -301.01, 14.7732, 0.28 ) }
    dend_12 { pt3dadd( -72.7828, -302.296, 15.1222, 0.28 ) }
    dend_12 { pt3dadd( -78.6165, -303.883, 17.9001, 0.28 ) }
    dend_12 { pt3dadd( -84.1926, -305.607, 21.0898, 0.28 ) }
    dend_12 { pt3dadd( -89.9496, -307.048, 24.1021, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 36/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 282.577, -250.688, 78.7043, 0.28 ) }
    dend_10 { pt3dadd( 290.296, -252.625, 82.0967, 0.28 ) }
    dend_10 { pt3dadd( 298.138, -253.747, 85.5867, 0.28 ) }
    dend_10 { pt3dadd( 306.249, -255.602, 87.9481, 0.28 ) }
    dend_10 { pt3dadd( 314.613, -257.456, 89.1069, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 41/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 282.577, -250.688, 78.7043, 0.28 ) }
    dend_9 { pt3dadd( 288.619, -251.635, 84.2548, 0.28 ) }
    dend_9 { pt3dadd( 294.385, -252.139, 90.1457, 0.28 ) }
    dend_9 { pt3dadd( 300.046, -251.243, 96.0813, 0.28 ) }
    dend_9 { pt3dadd( 305.823, -249.13, 101.555, 0.28 ) }
    dend_9 { pt3dadd( 310.311, -246.283, 107.823, 0.28 ) }
    dend_9 { pt3dadd( 313.516, -242.642, 114.43, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_22, dend_19, dend_0, axon_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, axon_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
    ModelViewParmSubset_5 = new SectionList()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_25 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_27 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_30 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_8 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_41 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_39 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_35 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_31 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_9 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_22 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_28 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_32 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_38 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_42 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 13
    dend_21 nseg = 11
    dend_20 nseg = 11
    dend_1 nseg = 9
    dend_25 nseg = 9
    dend_14 nseg = 3
    dend_27 nseg = 17
    dend_15 nseg = 15
    dend_4 nseg = 21
    dend_36 nseg = 9
    dend_18 nseg = 13
    dend_17 nseg = 11
    dend_7 nseg = 7
    dend_6 nseg = 5
    dend_40 nseg = 7
    dend_37 nseg = 5
    dend_30 nseg = 7
    dend_11 nseg = 5
    dend_8 nseg = 17
    dend_41 nseg = 7
    dend_39 nseg = 3
    dend_35 nseg = 13
    dend_34 nseg = 7
    dend_31 nseg = 15
    dend_13 nseg = 5
    dend_12 nseg = 3
    dend_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_LBC_8ce13ea42d_0_0


