// Cell: bNAC219_L23_DBC_c9af6970b4_0_0
/*
{
  "id" : "bNAC219_L23_DBC_c9af6970b4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.36129, -7.58075, 0.00144685, 3.22785", "2.18013, -6.85906, 0.00129054, 6.03886", "1.99896, -6.13737, 0.00113423, 7.42316", "1.81779, -5.41568, 9.77923E-4, 8.36559", "1.63662, -4.69399, 8.21614E-4, 9.26167", "1.45546, -3.9723, 6.65304E-4, 9.90915", "1.27429, -3.25061, 5.08995E-4, 10.4263", "1.09312, -2.52892, 3.52686E-4, 10.8393", "0.911955, -1.80723, 1.96376E-4, 11.2188", "0.730788, -1.08554, 4.00668E-5, 11.4122", "0.54962, -0.363848, -1.16243E-4, 11.4389", "0.368453, 0.357841, -2.72552E-4, 11.3929", "0.187285, 1.07953, -4.28861E-4, 11.2923", "0.00611797, 1.80122, -5.85171E-4, 10.9441", "-0.175049, 2.52291, -7.4148E-4, 10.5254", "-0.356217, 3.2446, -8.9779E-4, 10.1407", "-0.537384, 3.96629, -0.0010541, 9.5776", "-0.718552, 4.68798, -0.00121041, 8.87208", "-0.899719, 5.40967, -0.00136672, 7.79472", "-1.08089, 6.13136, -0.00152303, 6.05918", "-1.26205, 6.85305, -0.00167934, 3.96403" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.04582, 7.3084, -2.62764, 1.8", "1.03291, 8.12558, -2.95661, 0.96", "1.01928, 8.98813, -3.30384, 0.72", "0.997639, 10.3575, -3.85508, 0.96", "0.983279, 11.2663, -4.22095, 1.32", "0.963739, 12.5026, -4.71866, 1.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.0441755, -7.3286, 6.04236, 1.68", "-0.0797958, -7.70904, 6.22244, 0.72", "-0.148791, -8.44594, 6.57126, 0.96", "-0.189682, -8.88267, 6.77799, 1.32", "-0.232279, -9.33763, 6.99334, 0.96", "-0.253578, -9.56511, 7.10102, 0.96", "-0.30221, -10.0845, 7.34689, 1.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.07582, 7.6234, 2.85236, 1.68", "-0.00875064, 8.20863, 2.9546, 1.68", "0.069714, 9.01164, 3.34921, 1.44", "0.200401, 9.58555, 3.71092, 0.96", "0.315284, 10.0428, 4.03672, 0.84", "0.413658, 10.4594, 4.33693, 0.96", "0.63017, 11.5042, 5.17323, 0.84", "0.762927, 12.0588, 5.67478, 0.72", "0.871652, 12.4857, 6.09012, 0.72", "1.00385, 13.0242, 6.60363, 0.84", "1.06563, 13.3506, 6.87852, 0.96", "1.2059, 14.3993, 7.60163, 0.24", "1.25382, 14.8769, 7.83555, 0.24", "1.28986, 15.2656, 8.0015, 0.6", "1.33267, 15.798, 8.19847, 1.44", "1.3765, 16.5005, 8.41345, 1.56", "1.39452, 17.0949, 8.5694, 1.56", "1.39377, 17.7542, 8.69402, 1.56", "1.3517, 18.9021, 8.90821, 0.6", "1.30794, 19.5269, 9.01684, 0.48", "1.2466, 20.1333, 9.12292, 0.48", "1.20672, 20.4995, 9.18397, 0.96", "1.12539, 21.3359, 9.33223, 0.6", "1.08196, 21.9516, 9.44637, 0.6", "1.06212, 22.5832, 9.56185, 0.96", "1.04981, 23.6955, 9.79696, 0.84", "1.04269, 24.3112, 9.94375, 0.84", "1.00442, 25.2915, 10.1928, 0.72", "0.922101, 26.2519, 10.4479, 0.84", "0.897725, 26.4547, 10.4997, 0.84", "0.814522, 27.001, 10.6291, 0.72", "0.682422, 27.8223, 10.794, 0.48", "0.576177, 28.6016, 10.9162, 0.48", "0.510142, 29.2652, 10.9914, 0.6", "0.469326, 29.8848, 11.0646, 0.84", "0.453479, 30.1973, 11.1152, 0.84", "0.438384, 30.6373, 11.1982, 0.48", "0.407106, 31.5638, 11.3846, 0.48", "0.378154, 32.4601, 11.6018, 0.48", "0.321817, 33.5666, 11.9276, 0.6", "0.252954, 34.3913, 12.1979, 1.08", "0.194069, 34.8911, 12.3574, 1.32", "0.124598, 35.3362, 12.4935, 1.32", "0.00992037, 35.9504, 12.6748, 0.84", "-0.109423, 36.6487, 12.8422, 0.6", "-0.200933, 37.2631, 12.9635, 0.48", "-0.291475, 37.945, 13.064, 0.6", "-0.34301, 38.3605, 13.1202, 0.48", "-0.396259, 38.8244, 13.1643, 0.48", "-0.455208, 39.243, 13.159, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.15581, -7.1291, -6.17764, 1.44", "2.69915, -8.00571, -6.27103, 1.08", "2.02809, -9.1154, -6.3914, 1.44", "1.34713, -10.1831, -6.58759, 1.56", "0.50385, -11.4934, -6.90614, 1.56", "-0.580768, -13.2155, -7.37718, 1.2", "-1.19979, -14.2409, -7.71848, 0.72", "-1.57507, -14.7964, -7.93253, 0.72", "-2.4695, -16.0102, -8.49908, 1.56", "-2.79492, -16.446, -8.75134, 1.8", "-3.1018, -16.8942, -9.08663, 2.16", "-3.53381, -17.8175, -9.96141, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "4.91582, -4.6931, -0.277637, 1.32", "5.46954, -5.23018, -0.928059, 1.2", "6.17794, -5.72581, -1.85074, 0.72", "6.67374, -5.95969, -2.47205, 0.72", "7.63254, -6.29874, -3.58057, 1.68", "8.32342, -6.47622, -4.33414, 2.04", "9.71632, -6.7523, -5.76767, 1.92", "10.6715, -6.85515, -6.68457, 1.92", "11.6829, -6.93194, -7.56402, 0.96", "12.296, -6.99539, -8.02793, 0.96", "13.4964, -7.21958, -8.78904, 1.44", "14.1983, -7.4456, -9.17082, 1.92", "15.2196, -7.85876, -9.60664, 1.56", "16.2897, -8.39632, -9.99993, 1.2", "17.2606, -9.00186, -10.3355, 1.2", "18.2904, -9.75401, -10.6751, 1.56", "18.6962, -10.1085, -10.7778, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.46419, -1.9421, 0.432363, 0.96", "-4.89705, -1.79332, 0.941458, 0.6", "-5.75989, -1.35198, 1.8245, 0.72", "-5.85495, -1.30415, 1.90717, 0.72", "-6.74598, -0.986308, 2.62984, 0.72", "-7.15831, -0.906488, 2.96352, 0.72", "-7.70983, -0.853948, 3.41637, 0.72", "-8.15211, -0.847658, 3.82042, 0.72", "-8.60313, -0.878358, 4.2214, 0.72", "-9.6656, -1.00918, 5.19225, 0.72", "-10.6965, -1.19439, 6.12436, 0.84", "-11.5198, -1.39293, 6.89686, 1.08", "-12.3923, -1.6552, 7.76641, 1.44", "-12.8483, -1.80376, 8.255, 1.68", "-13.5118, -2.00171, 9.00975, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.77419, 5.8804, -7.59764, 1.08", "-4.0485, 6.51839, -7.74347, 1.08", "-4.34197, 7.13282, -7.96177, 0.84", "-4.55431, 7.50823, -8.13994, 0.12", "-4.83042, 7.91971, -8.35286, 0.12", "-5.19272, 8.40722, -8.60967, 0.84", "-6.0783, 9.59559, -9.21066, 0.84", "-6.61624, 10.3096, -9.57471, 0.84", "-7.20032, 11.107, -9.95286, 0.48", "-7.69314, 11.8012, -10.2483, 0.12", "-7.97845, 12.2135, -10.4187, 0.12", "-8.48557, 12.9723, -10.7133, 0.6", "-8.93313, 13.681, -10.9363, 0.6", "-9.43217, 14.5179, -11.1973, 0.72", "-9.65558, 14.9111, -11.318, 1.08", "-10.2057, 15.8836, -11.6671, 0.6", "-10.6077, 16.5674, -11.9206, 0.36", "-10.97, 17.1804, -12.1595, 0.12", "-11.4613, 18.0325, -12.4906, 0.48", "-11.8742, 18.7968, -12.7783, 0.48", "-12.5266, 20.1042, -13.2222, 0.48", "-13.092, 21.3415, -13.6152, 0.6", "-13.6134, 22.6151, -14.0431, 0.36", "-13.8024, 23.1288, -14.2215, 0.36", "-14.1193, 24.07, -14.552, 1.2", "-14.3502, 24.7983, -14.8112, 1.08", "-14.618, 25.6566, -15.1241, 0.72", "-14.8639, 26.4173, -15.4177, 0.24", "-15.178, 27.3144, -15.7461, 0.24", "-15.3446, 27.7764, -15.9071, 0.72", "-15.6746, 28.6334, -16.1613, 0.84", "-15.9749, 29.3961, -16.3687, 0.48", "-16.1521, 29.8277, -16.4575, 0.24", "-16.4218, 30.4399, -16.5603, 0.12", "-16.6008, 30.8372, -16.6289, 0.96", "-17.0388, 31.8301, -16.7703, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.26205, 6.85305, -0.00167934, 0.906991", "-4.91421, 21.4016, -0.00167934, 0.906991", "-8.56637, 35.9502, -0.00167934, 0.906991" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "0.963739, 12.5026, -4.71866, 0.36", "1.59121, 13.0556, -4.98227, 0.36", "2.34277, 13.6606, -5.36425, 0.48", "2.90256, 14.0908, -5.67891, 0.48", "3.51749, 14.5553, -6.02111, 0.48", "4.65367, 15.4095, -6.61662, 0.48", "5.14455, 15.7928, -6.92501, 0.96", "5.53924, 16.1274, -7.23721, 0.96", "6.13627, 16.7141, -7.84281, 0.48", "6.44686, 17.0572, -8.19348, 0.48", "6.73765, 17.388, -8.56821, 0.48", "7.60951, 18.4548, -9.74571, 0.36", "7.89722, 18.8049, -10.1754, 0.36", "8.26195, 19.2271, -10.7138, 0.84", "8.58368, 19.5672, -11.1713, 0.84", "9.51956, 20.434, -12.4109, 0.48", "9.72344, 20.5964, -12.6388, 0.48", "10.4241, 21.0707, -13.2503, 0.96", "10.8775, 21.3568, -13.6214, 1.32", "11.4667, 21.7395, -14.0928, 1.08", "12.2426, 22.3323, -14.7286, 0.12", "12.7276, 22.7925, -15.128, 0.12", "12.8723, 22.9531, -15.2725, 0.48", "13.3501, 23.5431, -15.7903, 0.72", "13.6404, 23.9298, -16.1334, 0.12", "14.0386, 24.493, -16.5873, 0.12", "14.4277, 25.07, -16.9952, 0.48", "14.9365, 25.8158, -17.4865, 0.72", "15.3537, 26.3944, -17.8165, 0.12", "15.8872, 27.0716, -18.1172, 0.12", "16.3529, 27.6325, -18.3078, 0.96", "16.6223, 27.9479, -18.3886, 1.08", "17.2507, 28.7186, -18.5112, 0.6", "17.8218, 29.4638, -18.5786, 0.6", "18.4511, 30.3288, -18.7181, 0.36", "19.0275, 31.1359, -18.8787, 0.24", "19.3597, 31.6088, -19.0089, 0.84", "19.5648, 31.9042, -19.1043, 1.08", "19.9247, 32.4366, -19.3183, 0.6", "20.858, 33.8358, -20.0848, 0.24", "21.2102, 34.3966, -20.4443, 0.24", "21.4954, 34.8766, -20.7697, 0.72", "21.7823, 35.3926, -21.1158, 1.2", "22.1276, 36.0553, -21.5535, 0.6", "22.5596, 36.9105, -22.0632, 0.12", "22.95, 37.6952, -22.4618, 0.12", "23.1386, 38.0841, -22.6627, 0.36", "23.2755, 38.3719, -22.7934, 0.36", "23.5501, 38.929, -23.0334, 0.12", "23.9909, 39.7581, -23.417, 0.12", "24.3558, 40.3964, -23.7276, 0.84", "24.4747, 40.5741, -23.8245, 1.2", "24.9074, 41.1515, -24.1431, 1.2", "25.3812, 41.7403, -24.4894, 0.96", "26.0939, 42.6016, -24.9884, 0.36", "26.6132, 43.2044, -25.4715, 0.36", "27.0147, 43.6391, -25.9065, 0.36", "27.2959, 43.9235, -26.2361, 0.36", "27.8654, 44.4661, -26.9446, 0.6", "28.0938, 44.6768, -27.2269, 0.84", "29.3119, 45.7995, -28.6924, 0.84", "29.7731, 46.2225, -29.2666, 0.12", "30.037, 46.4832, -29.5885, 0.12", "30.2207, 46.6659, -29.7899, 0.12", "30.4835, 46.9277, -29.9965, 0.6", "30.8062, 47.2586, -30.173, 0.6", "31.1356, 47.617, -30.2703, 0.12", "31.5138, 48.0389, -30.3824, 0.12", "31.9834, 48.5706, -30.5368, 0.72", "32.4576, 49.1338, -30.702, 0.96", "32.8418, 49.6146, -30.8917, 0.12", "33.4041, 50.2914, -31.2028, 0.12", "33.7005, 50.6456, -31.3844, 0.84", "33.9938, 50.998, -31.5687, 0.96", "34.2767, 51.3499, -31.7396, 0.48", "34.9543, 52.2256, -32.188, 0.12", "35.4926, 52.9439, -32.5647, 0.12", "36.0515, 53.7561, -32.9684, 0.12", "36.2568, 54.0929, -33.1247, 0.96", "36.4846, 54.5061, -33.3382, 0.96", "36.7772, 55.1087, -33.6409, 0.24", "36.9155, 55.4411, -33.7741, 0.12", "37.1845, 56.2017, -34.0555, 0.12", "37.4034, 56.8473, -34.2648, 0.72", "37.8724, 58.2182, -34.6686, 0.12", "38.0982, 58.8747, -34.8352, 0.12", "38.6708, 60.4868, -35.1957, 0.12", "38.9182, 61.1748, -35.3725, 0.12", "39.1644, 61.8477, -35.5661, 0.12", "39.2719, 62.1536, -35.6549, 0.96", "39.4123, 62.614, -35.7743, 1.32", "39.5666, 63.2121, -35.9784, 1.32", "39.8165, 64.5319, -36.5501, 0.12", "39.9284, 65.3064, -36.8975, 0.12", "39.9718, 65.755, -37.0919, 0.12", "40.0098, 66.4138, -37.3667, 0.84", "40.0275, 67.1406, -37.6396, 0.12", "40.0279, 67.8953, -37.8953, 0.12", "40.0239, 68.5827, -38.1006, 0.12", "40.0254, 69.0424, -38.2631, 0.84", "40.0583, 69.6412, -38.488, 0.12", "40.141, 70.2956, -38.7373, 0.12", "40.2762, 70.9807, -38.9782, 0.72", "40.4301, 71.5238, -39.1714, 0.72", "40.6307, 72.0512, -39.3775, 0.12", "40.8904, 72.6259, -39.6017, 0.12", "41.1159, 73.0782, -39.7578, 0.24", "41.352, 73.4947, -39.9555, 0.24", "41.5833, 73.8917, -40.1776, 0.24", "41.9288, 74.5064, -40.5553, 0.72", "42.078, 74.7818, -40.737, 1.2", "42.3283, 75.2586, -41.0747, 1.2", "43.0497, 76.6248, -42.092, 0.12", "43.4609, 77.3651, -42.6554, 0.12", "43.7028, 77.7749, -42.9856, 0.48", "43.9417, 78.1399, -43.2923, 0.12", "44.1403, 78.4204, -43.5348, 0.12", "44.4697, 78.8414, -43.8889, 0.6", "44.6464, 79.0373, -44.0735, 0.6", "45.3886, 79.7252, -44.9626, 0.12", "45.8306, 80.1156, -45.5274, 0.12", "45.9133, 80.1918, -45.6366, 0.72", "46.1842, 80.4484, -45.9944, 0.72", "47.1212, 81.3251, -47.3302, 0.6", "47.6051, 81.7845, -48.0229, 0.12", "47.9195, 82.0964, -48.4605, 0.12", "48.1609, 82.3515, -48.8281, 0.12", "48.428, 82.6715, -49.2308, 0.6", "49.2741, 83.7654, -50.3852, 0.12", "49.6183, 84.2994, -50.7686, 0.12", "49.8635, 84.7386, -51.0325, 0.72", "50.4391, 85.9096, -51.685, 0.12", "50.8991, 86.9651, -52.2086, 0.12", "51.1775, 87.7102, -52.5067, 0.12", "51.7029, 89.3443, -53.0139, 0.12", "51.9145, 90.0746, -53.2277, 0.84", "52.1021, 90.8002, -53.4041, 0.12", "52.3988, 92.0648, -53.6315, 0.12", "52.5399, 92.7215, -53.7497, 0.6", "52.6885, 93.4326, -53.8677, 0.12", "52.7912, 93.8468, -53.9261, 0.12", "53.114, 95.0056, -54.0393, 0.12", "53.3185, 95.6688, -54.0903, 0.72", "53.537, 96.3486, -54.1405, 0.12", "54.0085, 97.6632, -54.2523, 0.24", "54.1273, 97.9778, -54.2726, 0.24", "54.2226, 98.2258, -54.2902, 0.12", "54.6736, 99.3529, -54.371, 0.12", "54.9067, 99.9119, -54.4033, 0.12", "55.2222, 100.595, -54.425, 0.12", "55.2733, 100.703, -54.4254, 0.72", "55.5414, 101.245, -54.4185, 0.84", "55.8295, 101.809, -54.4002, 0.12", "56.3452, 102.762, -54.3563, 0.12", "56.8795, 103.72, -54.3229, 0.12", "57.1087, 104.141, -54.3126, 0.12", "57.2884, 104.469, -54.3065, 0.72", "57.6732, 105.164, -54.2975, 0.84", "57.9401, 105.657, -54.2943, 0.12", "58.5047, 106.729, -54.2734, 0.12", "59.0423, 107.766, -54.266, 0.12", "59.343, 108.351, -54.2655, 0.12", "59.5013, 108.647, -54.2652, 0.6", "59.8934, 109.327, -54.2673, 0.72", "60.1565, 109.761, -54.2671, 0.12", "61.0414, 111.156, -54.2791, 0.12", "61.3006, 111.557, -54.2846, 0.12", "61.8717, 112.445, -54.2973, 0.12", "62.1448, 112.89, -54.2999, 0.84", "62.3318, 113.211, -54.2833, 0.96", "62.5843, 113.674, -54.2357, 0.96", "62.9532, 114.368, -54.1224, 0.6", "63.2958, 115.026, -54.0066, 0.6", "63.7879, 116.013, -53.8257, 0.6", "64.2464, 116.923, -53.6498, 0.12", "64.8576, 118.132, -53.4249, 0.12", "65.4509, 119.317, -53.207, 0.12", "65.5991, 119.613, -53.1543, 0.36", "65.786, 119.993, -53.0946, 0.36", "65.9013, 120.231, -53.0677, 0.12", "66.272, 121.014, -53.0271, 0.12", "66.3685, 121.231, -53.0163, 0.36", "66.5014, 121.547, -53.0016, 0.12", "66.7625, 122.131, -52.9746, 0.12", "67.2124, 123.029, -52.955, 0.12", "67.5014, 123.545, -52.954, 0.48", "67.8375, 124.075, -52.9583, 0.48", "67.9882, 124.291, -52.9621, 0.12", "68.4389, 124.894, -52.9741, 0.12", "68.8681, 125.421, -52.9825, 0.12", "69.2517, 125.865, -52.9866, 0.6", "69.7974, 126.489, -52.9864, 0.72", "70.18, 126.924, -53.0169, 0.36", "70.6612, 127.498, -53.081, 0.36", "71.2682, 128.273, -53.187, 0.48", "71.5678, 128.668, -53.2447, 0.24", "71.8627, 129.064, -53.313, 0.24", "72.6585, 130.145, -53.5203, 0.24", "73.0342, 130.649, -53.6235, 0.24", "73.5361, 131.309, -53.7551, 0.36", "73.7567, 131.602, -53.8152, 0.12", "74.0072, 131.939, -53.8742, 0.12", "74.318, 132.361, -53.9263, 0.24", "74.4545, 132.552, -53.9395, 0.12", "74.9143, 133.255, -54.0109, 0.12", "75.3041, 133.909, -54.0788, 0.6", "75.635, 134.503, -54.1352, 0.72", "75.8379, 134.877, -54.1675, 0.72", "76.0878, 135.355, -54.2024, 0.12", "76.6456, 136.44, -54.2432, 0.12", "77.1662, 137.498, -54.2437, 0.12", "77.4257, 138.022, -54.2226, 0.48", "77.5777, 138.321, -54.2052, 0.12", "77.9041, 138.927, -54.1573, 0.12", "78.3239, 139.644, -54.1123, 0.12", "78.8315, 140.449, -54.0976, 0.12", "79.1489, 140.95, -54.1076, 0.12", "79.4626, 141.45, -54.1094, 0.6", "79.7673, 141.957, -54.1097, 0.6", "80.2114, 142.713, -54.1079, 0.12", "80.9827, 144.118, -54.1017, 0.12", "81.6124, 145.396, -54.0735, 0.12", "81.8974, 146.076, -54.0648, 0.72", "82.0364, 146.489, -54.0612, 0.72", "82.1439, 146.912, -54.056, 0.24", "82.3366, 147.989, -54.0579, 0.24", "82.4024, 148.706, -54.0684, 0.24", "82.4418, 149.332, -54.0819, 0.48", "82.4916, 150.05, -54.0931, 0.6", "82.5236, 150.387, -54.0839, 0.6", "82.5801, 151.034, -54.0468, 0.6", "82.6592, 152.449, -53.923, 0.12", "82.6824, 153.313, -53.7987, 0.12", "82.6703, 154.257, -53.6331, 0.12", "82.642, 155.146, -53.4752, 0.12", "82.6343, 155.313, -53.4469, 0.36", "82.5594, 156.536, -53.2506, 0.36", "82.5042, 157.215, -53.1847, 0.12", "82.3836, 158.417, -53.0636, 0.12", "82.3462, 158.773, -53.0287, 0.48", "82.2895, 159.37, -52.977, 0.48", "82.2793, 159.637, -52.959, 0.12", "82.2879, 160.719, -52.9156, 0.12", "82.2897, 160.829, -52.9169, 0.72", "82.3033, 161.308, -52.9292, 0.12", "82.353, 162.256, -52.9591, 0.12", "82.4492, 163.24, -52.9909, 0.12", "82.5816, 164.066, -53.0234, 0.36", "82.761, 164.807, -53.129, 0.12", "83.1051, 165.937, -53.3675, 0.12", "83.5502, 167.139, -53.6861, 0.48", "83.9519, 168.007, -53.9922, 0.48", "84.396, 168.775, -54.3237, 0.84", "85.6107, 170.451, -55.219, 0.24", "86.1811, 171.093, -55.6252, 0.12", "86.556, 171.438, -55.8881, 0.48", "87.1791, 171.921, -56.3037, 0.36", "87.6698, 172.265, -56.6762, 0.36", "88.2524, 172.636, -57.0855, 0.72", "88.6428, 172.86, -57.3457, 0.96", "89.1509, 173.135, -57.6875, 0.96", "89.8185, 173.496, -58.1076, 1.08", "91.7169, 174.558, -59.2083, 0.12", "92.616, 175.051, -59.699, 0.12", "93.3632, 175.446, -60.0437, 0.36", "94.2254, 175.892, -60.4635, 0.12", "95.012, 176.287, -60.82, 0.12", "95.2339, 176.394, -60.8943, 0.36", "95.7718, 176.626, -61.002, 0.12", "96.3574, 176.839, -61.1847, 0.12", "97.6321, 177.294, -61.6423, 0.36", "98.078, 177.45, -61.8433, 0.6", "98.608, 177.667, -62.0772, 1.08", "99.3093, 177.989, -62.3533, 0.24", "100.14, 178.39, -62.6306, 0.12", "100.578, 178.607, -62.7618, 0.48", "100.8, 178.729, -62.8111, 0.12", "102.011, 179.492, -63.122, 0.12", "102.332, 179.746, -63.2123, 0.6", "102.579, 179.998, -63.3196, 0.6", "103.097, 180.694, -63.6698, 0.12", "103.395, 181.196, -63.9717, 0.12", "103.585, 181.65, -64.2688, 0.12", "103.691, 182.224, -64.6349, 0.48", "103.753, 183.539, -65.5086, 0.12", "103.727, 184.111, -65.9245, 0.12", "103.682, 184.512, -66.1813, 0.36", "103.64, 184.84, -66.3719, 0.12", "103.514, 185.879, -66.924, 0.12", "103.36, 187.379, -67.6518, 0.72", "103.309, 188.419, -68.0238, 0.12", "103.294, 190.46, -68.6803, 0.12", "103.305, 191.371, -68.9639, 0.12", "103.309, 191.504, -69.0019, 0.48", "103.326, 191.765, -69.0584, 0.12", "103.593, 194.498, -69.2448, 0.12", "103.609, 194.617, -69.2427, 0.48" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "0.963739, 12.5026, -4.71866, 1.08", "0.825555, 13.8885, -4.31421, 1.08", "0.66674, 15.506, -3.86816, 1.08", "0.440358, 17.7646, -3.3052, 1.08", "0.273801, 19.4263, -2.89101, 0.84", "0.099883, 21.1615, -2.45851, 0.36", "0.0223229, 21.9353, -2.26563, 0.36", "-0.0565496, 22.6789, -2.07224, 0.36", "-0.161749, 23.741, -1.76691, 0.6" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.30221, -10.0845, 7.34689, 1.32", "-0.314808, -10.595, 7.31506, 1.32", "-0.320551, -10.842, 7.29225, 1.44", "-0.333857, -11.4554, 7.25728, 1.32", "-0.343399, -12.2099, 7.23514, 1.08", "-0.354969, -12.8201, 7.23329, 1.08", "-0.381318, -13.4908, 7.24189, 0.84", "-0.427266, -14.2236, 7.26175, 0.84", "-0.481122, -14.9396, 7.28838, 0.84", "-0.569292, -15.8045, 7.32997, 0.96", "-0.665437, -16.4458, 7.35707, 0.96", "-0.792238, -17.0896, 7.40878, 0.96", "-0.919294, -17.6257, 7.46757, 0.96", "-1.16315, -18.4778, 7.56224, 0.72", "-1.3346, -19.001, 7.61564, 0.84", "-1.66703, -19.9382, 7.71506, 0.84", "-2.13416, -21.2222, 7.85526, 0.96", "-2.31007, -21.6967, 7.91436, 1.2", "-2.47133, -22.1072, 7.97451, 1.68", "-2.72645, -22.6606, 8.07791, 1.68" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.30221, -10.0845, 7.34689, 0.6", "0.269558, -10.3413, 7.62443, 0.6", "1.31237, -10.7942, 8.44167, 0.48", "1.84011, -11.0149, 8.89102, 0.48", "3.14195, -11.5682, 10.0215, 0.48", "3.63333, -11.805, 10.4568, 0.48", "4.35686, -12.139, 11.1084, 1.32", "6.42074, -13.0583, 13.1873, 0.96", "6.7367, -13.1827, 13.5239, 0.36", "6.95383, -13.2344, 13.7773, 0.36", "7.48582, -13.2434, 14.4218, 0.36", "8.30082, -13.0875, 15.4096, 0.48", "8.98207, -12.8375, 16.1652, 0.48", "9.34421, -12.6902, 16.5022, 0.48", "10.1477, -12.3884, 17.2423, 0.12", "10.4159, -12.2943, 17.4637, 0.12", "10.9539, -12.0995, 17.8301, 0.48", "11.4672, -11.9433, 18.1006, 0.48", "12.3875, -11.6759, 18.4394, 0.6", "12.9861, -11.4796, 18.5942, 0.12", "13.7325, -11.1992, 18.7068, 0.48", "14.7838, -10.7369, 18.7914, 0.48", "15.171, -10.5395, 18.8074, 0.48", "15.7308, -10.1983, 18.7924, 0.48", "16.355, -9.73827, 18.7457, 0.48", "17.4293, -8.82423, 18.6558, 0.48", "18.3983, -7.91799, 18.559, 0.48", "19.3597, -6.96689, 18.4382, 0.48", "20.1018, -6.16521, 18.3287, 0.12", "20.6496, -5.49966, 18.2323, 0.12", "21.024, -5.00991, 18.1717, 0.12", "21.474, -4.3685, 18.1015, 0.84", "21.7959, -3.95439, 18.0696, 1.2", "22.1716, -3.6145, 18.0778, 1.44", "22.9997, -3.10471, 18.1554, 0.72", "23.7923, -2.71604, 18.2339, 0.36", "24.379, -2.45864, 18.3299, 0.48", "25.1466, -2.11351, 18.4917, 0.48", "26.4564, -1.48929, 18.7998, 0.36", "27.261, -1.08102, 18.9947, 0.36", "27.733, -0.842488, 19.1137, 0.36", "29.06, -0.110138, 19.4451, 0.12", "29.7524, 0.346008, 19.6499, 1.08", "30.1545, 0.691078, 19.7883, 1.2", "30.5429, 1.15176, 19.921, 1.08", "39.9659, 3.21685, 22.569, 1.08", "48.7363, 7.29938, 25.4022, 1.08" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.455208, 39.243, 13.159, 0.12", "0.173265, 40.5329, 12.8235, 0.12", "0.748928, 41.8203, 12.5236, 0.12", "1.11648, 42.6903, 12.3357, 0.12", "1.61675, 43.9277, 12.0914, 0.12", "1.95295, 44.7648, 11.8552, 0.12", "2.44774, 45.9954, 11.4469, 0.12", "2.87612, 47.0706, 11.0733, 0.12", "3.03599, 47.4789, 10.8763, 0.12", "3.37337, 48.4262, 10.2993, 0.96", "3.8862, 50.1594, 9.06303, 0.12", "3.97509, 50.4853, 8.80316, 0.12", "4.05526, 50.7544, 8.55818, 0.36", "4.33331, 51.6037, 7.74285, 0.12", "4.41477, 51.8364, 7.52922, 0.12", "4.71299, 52.6632, 6.88621, 0.12", "4.85692, 53.0637, 6.66376, 0.12", "5.09557, 53.7138, 6.33254, 0.12", "5.26027, 54.1541, 6.14695, 0.12", "5.54543, 54.9331, 5.86522, 0.12", "5.94596, 56.1778, 5.26507, 0.12", "6.1185, 56.8099, 4.89613, 0.12", "6.23843, 57.3344, 4.56697, 0.12", "6.47282, 58.5837, 3.70862, 0.12", "6.55322, 59.1278, 3.3095, 1.2", "6.73965, 61.1379, 1.86094, 0.12", "6.78129, 62.2434, 1.07323, 0.12", "6.78407, 62.4374, 0.93611, 0.48", "6.74852, 63.0572, 0.410762, 0.12", "6.67467, 63.5031, 0.0122857, 0.12", "6.3422, 64.5236, -1.05637, 0.12", "6.13516, 64.9788, -1.56634, 1.2", "6.00613, 65.1711, -1.85349, 1.2", "4.7432, 66.6798, -4.49768, 0.12", "4.21132, 67.1918, -5.50352, 0.12", "2.72482, 68.3471, -8.44935, 0.12", "2.55507, 68.4525, -8.80866, 0.12", "1.75321, 68.9453, -10.737, 0.6", "1.64206, 69.0177, -11.0352, 0.6", "1.44357, 69.1919, -11.8183, 0.6", "1.48227, 69.6159, -13.7591, 0.12", "1.78697, 69.8471, -14.0472, 0.12", "2.91459, 70.9744, -14.7378, 0.12", "3.35588, 71.5707, -14.9156, 0.6", "3.67948, 72.1512, -15.0212, 0.12", "4.05423, 72.8916, -15.0983, 0.12", "4.37637, 73.7923, -15.0861, 0.12", "4.6062, 74.8507, -15.0622, 0.12", "4.6335, 75.8361, -15.0335, 0.12", "4.59511, 76.5114, -15.0327, 0.36" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.455208, 39.243, 13.159, 0.72", "-0.684976, 39.8712, 13.1352, 0.72", "-0.917848, 40.537, 13.1103, 0.84", "-1.08666, 41.0275, 13.0911, 1.08", "-1.3384, 41.7921, 13.0337, 0.72", "-1.60239, 42.6603, 12.9574, 0.48", "-1.77714, 43.3011, 12.8989, 0.48", "-1.9028, 43.8482, 12.8492, 0.72", "-1.99985, 44.3086, 12.8084, 0.96", "-2.15096, 45.0844, 12.7413, 0.84", "-2.26736, 45.7089, 12.6933, 0.72", "-2.39907, 46.4271, 12.6581, 0.72", "-2.58916, 47.3101, 12.6229, 0.72", "-2.66616, 47.6049, 12.63, 0.72", "-2.78417, 48.0214, 12.6677, 0.72", "-3.05847, 48.9438, 12.7919, 0.6", "-3.24898, 49.5719, 12.8377, 0.6", "-3.58478, 50.6291, 12.9269, 0.48", "-3.9215, 51.6957, 13.0146, 0.48", "-4.24472, 52.7046, 13.0628, 0.48", "-4.64165, 53.9361, 13.0873, 0.6", "-5.17001, 55.6164, 13.1155, 0.6", "-5.60026, 57.0635, 13.1306, 0.72", "-5.92501, 58.2459, 13.1293, 0.6", "-6.18949, 59.2283, 13.1052, 0.12", "-6.35852, 59.838, 13.0965, 0.12", "-6.64541, 60.8795, 13.099, 0.12", "-6.97477, 62.1638, 13.1317, 0.24", "-7.21854, 63.2319, 13.1107, 0.24", "-7.33597, 63.7886, 13.1102, 0.24", "-7.41618, 64.2082, 13.1187, 0.6", "-7.52641, 64.7569, 13.1106, 0.12", "-7.63457, 65.2637, 13.0768, 0.24", "-7.74354, 65.7895, 13.0357, 0.24", "-7.77378, 65.9352, 13.0233, 0.24", "-7.91112, 66.5515, 12.9708, 0.36", "-8.17482, 67.5972, 12.9065, 0.36", "-8.3941, 68.3688, 12.8734, 0.36", "-8.51841, 68.7122, 12.8655, 0.48", "-8.90514, 69.6206, 12.8576, 0.48", "-9.2668, 70.3755, 12.8589, 0.48", "-9.56631, 70.9388, 12.8765, 0.6", "-9.81436, 71.3897, 12.9061, 0.72", "-10.2965, 72.3249, 12.992, 0.36", "-10.643, 73.0833, 13.0697, 0.36", "-10.6804, 73.181, 13.0793, 0.48", "-10.8623, 73.8012, 13.1307, 0.36", "-11.0246, 74.6303, 13.1776, 0.36", "-11.1518, 75.6768, 13.2183, 0.36", "-11.2176, 76.6425, 13.2362, 0.36", "-11.2575, 77.2857, 13.2402, 0.36", "-11.2907, 77.8056, 13.2357, 0.6", "-11.3691, 78.959, 13.2059, 0.84", "-11.4131, 79.5131, 13.1886, 0.36", "-11.491, 80.4079, 13.1594, 0.36", "-11.5628, 81.3013, 13.1325, 0.36", "-11.6558, 82.5642, 13.0985, 0.36", "-11.6935, 83.1987, 13.0848, 0.48", "-11.706, 83.5164, 13.0804, 0.48", "-11.7074, 83.8516, 13.0796, 0.24", "-11.6816, 84.8025, 13.0928, 0.24", "-11.6513, 85.4377, 13.1122, 0.6", "-11.6127, 86.1771, 13.1419, 0.6", "-11.5848, 86.706, 13.1656, 0.48", "-11.5386, 87.658, 13.2124, 0.48", "-11.5091, 88.2469, 13.2429, 0.12", "-11.4491, 89.4014, 13.3014, 0.12", "-11.4019, 90.3446, 13.3444, 0.12", "-11.3916, 90.5563, 13.3528, 0.72", "-11.3564, 91.291, 13.3762, 0.84", "-11.3122, 92.2501, 13.3895, 0.36", "-11.2439, 93.7192, 13.3849, 0.36", "-11.2044, 94.6637, 13.3752, 0.36", "-11.182, 95.4055, 13.3621, 0.36", "-11.1723, 96.1462, 13.3459, 0.48", "-11.1772, 97.2185, 13.318, 0.96", "-11.1835, 97.5363, 13.3095, 0.96", "-11.2058, 98.2688, 13.29, 0.36", "-11.2423, 99.1416, 13.2686, 0.36", "-11.3101, 100.518, 13.2403, 0.36", "-11.3805, 101.783, 13.2211, 0.36", "-11.4097, 102.205, 13.2169, 0.48", "-11.4392, 102.539, 13.2118, 0.36", "-11.5111, 103.17, 13.1919, 0.36", "-11.6342, 104.11, 13.1503, 0.48", "-11.6884, 104.44, 13.1308, 0.36", "-11.9707, 106.011, 13.0288, 0.36", "-12.2344, 107.412, 12.9326, 0.48", "-12.4349, 108.441, 12.8581, 0.96", "-12.5236, 108.866, 12.8244, 0.6", "-12.7625, 109.914, 12.7318, 0.72", "-14.8641, 118.431, 12.1274, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.53381, -17.8175, -9.96141, 1.56", "-3.01671, -17.7369, -11.5732, 1.56", "-0.7561, -17.3845, -18.6195, 1.44", "1.12034, -17.0919, -24.4683, 2.04", "1.76187, -16.9919, -26.4679, 1.32", "2.02564, -16.9508, -27.2901, 1.2", "2.17383, -16.9277, -27.752, 0.12" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.53381, -17.8175, -9.96141, 0.48", "-4.2061, -19.2202, -9.78946, 0.48", "-4.48059, -19.7593, -9.70044, 0.48", "-4.88389, -20.5406, -9.56419, 0.72", "-5.42724, -21.6288, -9.42922, 1.2", "-6.04729, -22.8853, -9.27388, 0.6", "-6.49999, -23.8281, -9.16198, 0.36", "-7.00027, -24.8703, -9.06538, 0.36", "-7.39191, -25.7082, -8.99087, 0.48", "-7.96363, -26.9946, -8.85174, 0.84", "-8.44292, -28.2232, -8.70976, 0.72", "-8.72084, -29.0669, -8.60522, 0.72", "-8.99779, -30.0186, -8.469, 0.72", "-9.18963, -30.7205, -8.37588, 0.72", "-9.50371, -31.9386, -8.19279, 0.84", "-9.81268, -33.2111, -7.95833, 0.84", "-10.0196, -34.1335, -7.78676, 0.48", "-10.1773, -34.8648, -7.6473, 0.6", "-10.3295, -35.5839, -7.5049, 1.08", "-10.4618, -36.1799, -7.38883, 1.32", "-10.7853, -37.602, -7.15736, 0.96", "-11.0671, -38.8248, -6.94714, 0.96", "-11.3904, -40.2715, -6.70139, 0.72", "-11.7606, -41.9455, -6.4215, 0.72", "-12.0797, -43.4262, -6.18624, 0.96", "-12.4003, -44.9255, -5.95671, 1.2", "-12.6591, -46.1412, -5.79631, 0.6", "-12.8129, -46.8667, -5.70811, 0.6", "-13.063, -48.0508, -5.55678, 0.6", "-13.2314, -48.9142, -5.46791, 1.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.53381, -17.8175, -9.96141, 1.44", "-3.0529, -18.7427, -10.5307, 1.44", "-2.42437, -20.4297, -11.3631, 0.72", "-2.29031, -21.0249, -11.5871, 0.12", "-2.24942, -21.4637, -11.7054, 0.24", "-2.2457, -21.8184, -11.7733, 0.24", "-2.27112, -22.8782, -11.9298, 0.24", "-2.36173, -23.6749, -12.0209, 0.48", "-2.49003, -24.4737, -12.1042, 0.6", "-2.66113, -25.4539, -12.2547, 0.36", "-2.86505, -26.542, -12.4566, 0.36", "-3.00368, -27.3173, -12.6227, 0.36", "-3.15047, -28.3555, -12.9017, 0.72", "-3.2377, -29.4154, -13.2276, 0.36", "-3.24721, -30.1899, -13.4987, 0.36", "-3.20988, -30.7226, -13.6955, 0.6", "-3.16702, -31.1693, -13.8727, 0.6", "-3.09603, -32.036, -14.223, 0.36", "-3.05196, -32.9039, -14.5451, 0.36", "-3.04578, -33.6984, -14.8524, 0.36", "-3.05872, -34.5572, -15.1975, 0.48", "-3.12828, -35.7877, -15.7185, 0.6", "-3.23515, -36.6372, -16.0722, 0.84", "-3.35917, -37.2583, -16.32, 0.84", "-3.60349, -38.1926, -16.6742, 0.36", "-3.95612, -39.3741, -17.1074, 0.36", "-4.23282, -40.2581, -17.4215, 0.48", "-4.4262, -40.9897, -17.6524, 0.48", "-4.66057, -42.0006, -17.9594, 0.84", "-4.93123, -43.2574, -18.3503, 1.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "18.6962, -10.1085, -10.7778, 0.6", "20.1903, -11.3213, -9.75752, 0.6", "20.9344, -11.8409, -9.42553, 0.6", "21.8552, -12.4467, -9.16459, 0.6", "22.4677, -12.8477, -9.05957, 0.6", "23.4997, -13.5317, -8.85136, 0.48", "24.0706, -13.9225, -8.72902, 0.84", "24.7362, -14.3784, -8.67556, 0.84", "25.4645, -14.8922, -8.6295, 0.36", "26.653, -15.8561, -8.58449, 0.48", "27.6308, -16.7875, -8.51062, 0.96", "27.902, -17.1054, -8.47331, 1.08", "28.4359, -17.8719, -8.42024, 0.48", "28.6312, -18.2065, -8.39795, 0.48", "29.0188, -18.9755, -8.3462, 0.72", "29.3639, -19.7797, -8.31455, 1.2", "29.8235, -20.9541, -8.30159, 1.32", "30.1616, -21.837, -8.24577, 0.6", "30.5428, -22.8499, -8.11608, 0.96", "30.8243, -23.5835, -7.99811, 0.96", "31.1327, -24.3674, -7.85734, 0.6", "31.4289, -25.1256, -7.70916, 0.6", "31.8211, -26.2114, -7.49332, 0.72", "32.0441, -26.9028, -7.36584, 0.84", "32.3503, -27.9565, -7.19411, 1.08", "32.6014, -28.9338, -7.04249, 1.08", "32.822, -29.8973, -6.9063, 0.48", "33.1036, -31.2346, -6.7616, 0.48", "33.2561, -32.0663, -6.70496, 0.48", "33.4404, -33.2299, -6.61823, 0.96", "33.5827, -34.3139, -6.51158, 0.96", "33.6877, -35.1357, -6.42867, 0.6", "33.7953, -35.943, -6.35455, 0.48", "33.8881, -36.6278, -6.29376, 0.6", "34.0531, -37.7743, -6.17785, 0.84", "34.2253, -38.8652, -6.06735, 0.6", "34.3918, -39.8109, -5.96421, 0.48", "34.5177, -40.4915, -5.89438, 0.48", "34.7043, -41.4279, -5.80667, 0.6", "34.9213, -42.3486, -5.74092, 0.96", "35.2144, -43.4402, -5.71353, 1.08", "35.4838, -44.381, -5.70442, 0.84", "35.712, -45.1981, -5.69987, 0.6", "35.9023, -45.8634, -5.70934, 0.48", "36.1969, -46.8629, -5.75451, 0.6", "36.4915, -47.8936, -5.83064, 0.84", "36.7558, -48.8327, -5.90384, 0.96", "37.0066, -49.7539, -5.97191, 1.08", "37.2042, -50.5352, -6.02175, 0.72", "37.3695, -51.2944, -6.06338, 0.48", "37.5296, -52.1217, -6.09651, 0.48", "37.6276, -52.6559, -6.10568, 0.48", "37.7682, -53.4878, -6.11556, 0.84", "37.8269, -53.8882, -6.11673, 0.96", "37.9225, -54.7156, -6.10891, 0.96", "37.9954, -55.4078, -6.08292, 0.6", "38.0428, -55.8439, -6.06389, 0.48", "38.146, -56.7981, -6.03574, 0.48", "38.2233, -57.4862, -5.98837, 0.6", "38.3391, -58.4443, -5.89301, 0.84", "38.4555, -59.4435, -5.76931, 0.72", "38.5524, -60.2662, -5.65409, 0.48", "38.6899, -61.3937, -5.48634, 0.6", "38.8388, -62.4637, -5.32396, 0.48", "38.9755, -63.2869, -5.20271, 0.72", "39.133, -64.0961, -5.093, 1.08", "39.2933, -64.82, -5.01053, 0.6", "39.5012, -65.6509, -4.92997, 0.6", "39.7706, -66.6052, -4.83236, 0.6", "39.9626, -67.2679, -4.78109, 0.6", "40.1744, -67.9787, -4.71067, 0.84", "40.3681, -68.6408, -4.63422, 0.84", "40.5786, -69.4841, -4.52798, 0.84", "40.7747, -70.4393, -4.43424, 0.48", "40.8628, -70.9858, -4.39503, 0.84", "40.9367, -71.6637, -4.36582, 1.2", "40.9944, -72.4948, -4.35597, 1.44", "41.0365, -73.3251, -4.40866, 0.84", "41.0584, -74.258, -4.5757, 0.48", "41.0566, -74.5569, -4.65523, 0.72", "41.0483, -75.0876, -4.82828, 0.84", "41.0411, -75.6066, -5.01576, 0.84", "41.0316, -76.492, -5.36718, 0.6", "41.0261, -77.5882, -5.78828, 0.48", "41.0202, -78.5118, -6.15134, 0.48", "41.0201, -79.1107, -6.38811, 0.6", "41.0309, -79.7555, -6.63819, 0.72", "41.0617, -80.5494, -6.91773, 0.72", "41.1332, -81.5886, -7.25014, 0.84", "41.2822, -82.8187, -7.61378, 0.84", "41.4051, -83.613, -7.81892, 0.84", "41.5006, -84.1695, -7.93375, 0.6", "41.6831, -85.1391, -8.09702, 0.48", "41.8698, -86.0479, -8.20978, 0.48", "42.0851, -87.0295, -8.29417, 0.48", "42.2817, -87.927, -8.32466, 0.48", "42.3984, -88.4863, -8.33884, 0.48", "42.5051, -89.0478, -8.32119, 0.6", "42.7016, -90.1798, -8.22487, 0.6", "42.8145, -90.8643, -8.12924, 0.84", "42.8718, -91.2711, -8.06385, 1.08", "42.9769, -91.9675, -7.99782, 1.08", "43.1695, -93.0815, -7.99351, 0.6", "43.2766, -93.4855, -8.1174, 0.6", "43.4188, -93.7856, -8.38723, 0.72", "43.5904, -94.0407, -8.75986, 0.84", "44.1753, -94.7245, -9.963, 0.84", "44.6936, -95.1714, -10.9464, 1.08", "45.3944, -95.6155, -12.1536, 0.72", "45.6523, -95.7374, -12.5374, 0.72", "46.2713, -95.9834, -13.3166, 0.6", "46.6737, -96.1401, -13.7235, 0.6", "47.2591, -96.4111, -14.1708, 0.6", "47.7072, -96.6865, -14.444, 0.6", "48.3351, -97.1771, -14.7657, 0.6", "48.7596, -97.6319, -15.0296, 1.08", "49.1399, -98.2039, -15.2975, 1.08", "49.502, -98.8844, -15.6344, 0.6", "49.7662, -99.4256, -15.9529, 0.6", "49.9458, -99.7449, -16.1895, 0.6", "50.434, -100.394, -16.8644, 0.6", "50.6852, -100.645, -17.1919, 0.6", "51.2457, -101.085, -17.8446, 0.84", "51.9939, -101.561, -18.593, 0.84", "52.815, -102.016, -19.3266, 0.96", "53.756, -102.49, -20.0886, 0.84", "54.2599, -102.738, -20.4455, 0.6", "54.7711, -103.018, -20.7698, 0.72", "55.1986, -103.292, -20.9991, 0.72", "55.8121, -103.762, -21.2573, 0.48", "56.273, -104.18, -21.4265, 0.48", "56.7928, -104.719, -21.588, 0.48", "57.3669, -105.386, -21.783, 0.48", "57.979, -106.191, -21.998, 0.36", "58.5269, -106.986, -22.1778, 0.36", "58.8871, -107.53, -22.2804, 0.6", "59.4571, -108.411, -22.4272, 0.6", "59.7853, -108.922, -22.5064, 0.48", "60.3475, -109.784, -22.6137, 0.48", "60.9401, -110.67, -22.6878, 0.48", "61.6139, -111.635, -22.7507, 0.48", "62.0149, -112.187, -22.7728, 0.6", "62.4451, -112.77, -22.7857, 0.6", "62.9749, -113.486, -22.7837, 0.84", "63.3654, -114.047, -22.7764, 0.48", "63.7725, -114.697, -22.7634, 0.48", "64.0094, -115.132, -22.7516, 0.48", "64.3499, -115.777, -22.7676, 0.72", "64.7587, -116.542, -22.8178, 0.84", "65.3494, -117.685, -22.9655, 0.48", "65.684, -118.335, -23.0758, 0.48", "66.3305, -119.571, -23.363, 0.48", "66.8467, -120.511, -23.6275, 0.6", "67.1428, -121.013, -23.7949, 0.6", "67.6335, -121.757, -24.0986, 0.48", "68.1096, -122.409, -24.4013, 0.48", "68.6147, -123.065, -24.7147, 0.84", "69.0141, -123.567, -24.9368, 0.84", "69.2371, -123.866, -25.0344, 0.84", "69.761, -124.608, -25.2496, 0.6", "70.1342, -125.166, -25.3767, 0.48", "70.4404, -125.675, -25.474, 0.48", "70.8682, -126.429, -25.6108, 0.48", "71.2071, -127.067, -25.7331, 0.48", "71.598, -127.809, -25.8652, 0.36", "71.986, -128.53, -25.961, 0.36", "72.2693, -129.018, -25.9977, 0.6", "72.7594, -129.826, -26.0218, 0.6", "73.1702, -130.5, -26.0123, 0.6", "73.9385, -131.741, -25.8961, 0.6", "74.6838, -132.907, -25.7045, 0.6", "75.3483, -133.937, -25.4966, 0.36", "75.5949, -134.332, -25.4052, 0.36", "76.1309, -135.286, -25.1693, 0.36", "76.6629, -136.358, -24.9244, 0.84", "77.0464, -137.236, -24.7515, 0.6", "77.4578, -138.248, -24.6076, 0.6", "77.7786, -139.062, -24.5114, 0.36", "78.2414, -140.197, -24.3843, 0.36", "78.5535, -140.947, -24.3102, 0.36", "78.9366, -141.863, -24.2499, 0.48", "79.6034, -143.442, -24.15, 0.48", "79.9435, -144.256, -24.1008, 0.48", "80.2737, -145.075, -24.0798, 0.72", "80.4795, -145.647, -24.0808, 0.72", "80.6809, -146.467, -24.129, 0.48", "80.7697, -147.476, -24.3789, 0.48", "80.7565, -148.109, -24.6508, 0.48", "80.6981, -149.034, -25.1564, 0.6", "80.6346, -149.762, -25.6438, 0.6", "80.564, -150.619, -26.3008, 0.48", "80.4578, -152.318, -27.7549, 0.48", "80.4458, -152.885, -28.2713, 0.48", "80.4617, -153.101, -28.4689, 0.48", "80.6302, -154.096, -29.3289, 0.84", "80.8133, -154.846, -29.928, 0.96", "81.0875, -155.799, -30.6112, 0.96", "81.1727, -156.136, -30.8075, 0.96", "81.3609, -157.099, -31.3581, 0.48", "81.4653, -157.793, -31.7295, 0.84", "81.5716, -158.576, -32.0923, 0.48", "81.668, -159.326, -32.4111, 0.48", "81.7531, -160.003, -32.6744, 0.6", "81.9168, -161.27, -33.1737, 0.6", "82.0477, -162.285, -33.556, 0.36", "82.159, -163.02, -33.8336, 0.36", "82.2401, -163.423, -33.9777, 0.6", "82.3366, -163.782, -34.0963, 0.6", "82.6174, -164.54, -34.3429, 0.24", "82.8131, -164.977, -34.4595, 0.24", "82.9437, -165.246, -34.5278, 0.24", "83.1242, -165.629, -34.6233, 0.48", "83.4499, -166.302, -34.772, 0.36", "83.6901, -166.776, -34.8538, 0.36", "83.9417, -167.262, -34.9076, 0.36", "84.253, -167.869, -34.9869, 0.6", "84.5563, -168.471, -35.0637, 0.6", "84.8254, -168.984, -35.1236, 0.6", "85.2414, -169.745, -35.1942, 0.84", "85.657, -170.509, -35.2657, 0.84", "86.0667, -171.303, -35.3349, 0.24", "86.3059, -171.816, -35.3752, 0.24", "86.4729, -172.167, -35.3982, 0.48", "86.8307, -172.873, -35.4343, 0.48", "87.2676, -173.626, -35.4579, 0.48", "87.7449, -174.335, -35.4607, 0.24", "88.002, -174.682, -35.4502, 0.24", "88.7165, -175.603, -35.425, 0.24", "88.9822, -175.943, -35.417, 0.6", "89.4823, -176.56, -35.4052, 0.6", "89.91, -177.09, -35.3983, 0.6", "90.1696, -177.421, -35.4041, 0.6", "90.7239, -178.148, -35.4336, 0.36", "91.0923, -178.634, -35.4627, 0.36", "91.3319, -178.924, -35.4839, 0.72", "92.0326, -179.682, -35.5477, 0.72", "92.6527, -180.275, -35.6012, 0.72", "93.1044, -180.675, -35.6365, 0.48", "93.7687, -181.226, -35.6834, 0.48", "94.6159, -181.905, -35.7344, 0.48", "95.2264, -182.39, -35.7556, 0.36", "95.8256, -182.862, -35.7584, 0.36", "96.4184, -183.365, -35.7377, 0.36", "96.6984, -183.625, -35.7248, 0.6", "96.9656, -183.9, -35.7095, 0.6", "97.4889, -184.488, -35.674, 0.72", "97.8642, -184.914, -35.6479, 0.48", "98.1516, -185.233, -35.629, 0.48", "98.4911, -185.586, -35.6202, 0.6", "99.0328, -186.128, -35.6233, 0.6", "99.3264, -186.426, -35.6331, 0.36", "99.742, -186.867, -35.6572, 0.48", "99.9984, -187.153, -35.6787, 0.48", "100.67, -187.919, -35.7456, 0.36", "101.036, -188.352, -35.7857, 0.36", "101.495, -188.923, -35.836, 0.6", "102.051, -189.634, -35.8926, 0.6", "102.471, -190.222, -35.9307, 0.36", "102.788, -190.707, -35.9557, 0.36", "103.082, -191.199, -35.9918, 0.36", "103.611, -192.167, -36.082, 0.36", "103.866, -192.68, -36.1346, 0.72", "104.199, -193.442, -36.2343, 0.72", "104.507, -194.242, -36.3477, 0.84", "104.976, -195.598, -36.5516, 0.48", "105.31, -196.644, -36.7365, 0.36", "105.501, -197.283, -36.8606, 0.36", "105.785, -198.243, -37.0495, 0.72", "106.037, -199.053, -37.2009, 0.72", "106.359, -200.031, -37.3568, 0.72", "106.674, -200.902, -37.4616, 0.6", "106.952, -201.544, -37.5271, 0.12", "107.3, -202.254, -37.5771, 0.12", "107.523, -202.663, -37.5858, 0.48", "107.882, -203.241, -37.5871, 0.6", "108.266, -203.813, -37.5743, 0.48", "108.764, -204.52, -37.54, 0.36", "109.012, -204.874, -37.5266, 0.36", "109.57, -205.683, -37.5062, 0.36", "110.137, -206.483, -37.4062, 0.36", "110.58, -207.05, -37.2629, 0.36", "111.078, -207.61, -37.0422, 0.36", "111.434, -207.97, -36.8517, 0.72", "111.936, -208.448, -36.5502, 1.08", "113.239, -209.645, -35.6864, 0.96", "113.748, -210.107, -35.3612, 0.36", "114.04, -210.371, -35.1958, 0.36", "114.544, -210.848, -34.9773, 0.36", "115.009, -211.333, -34.8677, 0.36", "115.449, -211.851, -34.8778, 0.36", "115.969, -212.459, -34.9929, 0.48", "116.33, -212.865, -35.0747, 0.48", "116.74, -213.269, -35.1554, 0.36", "117.176, -213.638, -35.2002, 0.36", "117.899, -214.179, -35.2186, 0.36", "119.19, -215.072, -35.1564, 0.36", "119.757, -215.437, -35.0906, 0.36", "120.32, -215.792, -35.0096, 0.72", "121.178, -216.35, -34.8601, 0.6", "121.475, -216.566, -34.8034, 0.48", "121.992, -216.987, -34.6991, 0.48", "122.806, -217.694, -34.5467, 0.48", "123.386, -218.2, -34.4326, 0.6", "123.748, -218.52, -34.3697, 0.96", "124.241, -218.961, -34.3054, 1.08", "124.656, -219.327, -34.2414, 0.84", "125.383, -219.977, -34.1123, 0.48", "125.959, -220.477, -34.001, 0.24", "126.711, -221.059, -33.8634, 0.36", "127.149, -221.372, -33.7911, 0.36", "127.495, -221.614, -33.7404, 0.6", "127.961, -221.992, -33.6808, 0.6", "128.258, -222.268, -33.656, 0.36", "128.747, -222.757, -33.651, 0.24", "129.084, -223.111, -33.6471, 0.24", "129.35, -223.405, -33.6569, 0.36", "129.69, -223.83, -33.6819, 0.36", "130.032, -224.296, -33.7171, 0.48", "130.44, -224.943, -33.7691, 0.48", "130.861, -225.707, -33.8734, 0.72", "131.152, -226.265, -33.9712, 0.72", "131.336, -226.627, -34.0418, 0.72", "131.627, -227.237, -34.1637, 0.6", "131.836, -227.722, -34.2724, 0.6", "132.175, -228.563, -34.4694, 0.48", "132.467, -229.292, -34.6365, 0.36", "132.793, -230.07, -34.7981, 0.36", "133.082, -230.737, -34.9444, 0.36", "133.375, -231.444, -35.0975, 0.48", "133.55, -231.901, -35.1843, 0.48", "133.694, -232.373, -35.2487, 0.6", "133.809, -232.852, -35.3092, 0.6", "133.915, -233.361, -35.3868, 0.6", "134.013, -233.917, -35.4725, 0.6", "134.131, -234.736, -35.5796, 0.48", "134.224, -235.564, -35.7087, 0.48", "134.285, -236.243, -35.8204, 0.6", "134.367, -237.128, -35.9828, 0.72", "134.446, -237.803, -36.1277, 0.72", "134.626, -238.976, -36.4576, 0.72", "134.788, -239.777, -36.7048, 1.08", "134.937, -240.419, -36.9049, 1.08", "135.134, -241.203, -37.1384, 0.72", "135.436, -242.274, -37.4171, 0.48", "135.859, -243.599, -37.7615, 0.96", "136.342, -245.002, -38.132, 0.36", "136.531, -245.568, -38.2675, 0.36", "136.702, -246.149, -38.3897, 0.72", "137.044, -247.522, -38.6144, 0.84", "137.219, -248.388, -38.7189, 0.84", "137.325, -249.075, -38.7813, 0.48", "137.429, -250.076, -38.8708, 0.48", "137.535, -251.439, -39.0189, 0.48", "137.58, -252.431, -39.1342, 0.48", "137.596, -253.12, -39.2132, 0.48", "137.601, -253.676, -39.2861, 0.72", "137.606, -254.374, -39.3977, 0.72", "137.616, -255.461, -39.6291, 0.36", "137.609, -255.836, -39.7388, 0.36", "137.589, -256.377, -39.9173, 0.36", "137.566, -257.232, -40.2019, 0.24", "137.528, -258.419, -40.5722, 0.24", "137.523, -258.707, -40.6525, 0.72", "137.524, -259.501, -40.8188, 0.36", "137.553, -260.321, -40.959, 0.36", "137.59, -260.891, -41.0441, 0.36", "137.667, -261.634, -41.1229, 0.48", "137.707, -261.929, -41.1537, 0.12", "137.888, -262.893, -41.162, 0.12", "138.026, -263.434, -41.1162, 0.12", "138.191, -263.966, -41.0465, 0.84", "138.43, -264.606, -40.9495, 0.96", "138.718, -265.271, -40.8513, 0.96", "139.336, -266.609, -40.5675, 0.24", "139.59, -267.141, -40.4332, 0.48", "140.208, -268.377, -40.0939, 0.48", "140.927, -269.739, -39.6988, 0.48", "141.402, -270.606, -39.4595, 0.48", "142.188, -272.021, -39.1148, 0.48", "142.588, -272.741, -38.977, 0.48", "142.958, -273.395, -38.8038, 0.84", "143.19, -273.799, -38.6606, 0.84", "143.465, -274.255, -38.4584, 0.12", "143.853, -274.865, -38.1546, 0.12", "143.925, -274.965, -38.0949, 0.36", "144.668, -275.955, -37.241, 0.12", "144.841, -276.21, -36.9789, 0.12", "145.172, -276.718, -36.4259, 0.12", "145.172, -276.718, -36.4259, 0.36", "145.602, -277.4, -35.504, 0.12", "145.75, -277.652, -35.2085, 0.12", "145.884, -277.919, -34.9343, 0.72", "146.056, -278.345, -34.5378, 0.84", "146.559, -279.919, -33.2555, 0.6", "146.675, -280.305, -32.974, 0.12", "146.865, -280.916, -32.6007, 0.12", "147.122, -281.616, -32.1857, 0.12", "147.404, -282.296, -31.8209, 0.12", "147.618, -282.767, -31.623, 0.12", "147.618, -282.767, -31.623, 0.6", "147.998, -283.527, -31.3967, 0.6", "148.418, -284.355, -31.1618, 0.48", "148.728, -284.938, -31.0133, 0.48", "149.148, -285.733, -30.8135, 0.48", "149.499, -286.432, -30.66, 0.24", "149.849, -287.18, -30.526, 0.24", "150.019, -287.556, -30.4266, 0.6", "150.252, -288.066, -30.2658, 0.72", "150.564, -288.697, -30.0412, 0.72", "150.81, -289.147, -29.8736, 0.12", "151.115, -289.645, -29.6915, 0.12", "152.274, -291.338, -29.0278, 0.12", "152.622, -291.801, -28.8422, 0.96", "152.953, -292.216, -28.6884, 0.12", "153.455, -292.787, -28.5053, 0.12", "153.66, -293.003, -28.4465, 0.12", "153.94, -293.272, -28.3955, 0.6", "154.254, -293.56, -28.3689, 0.6", "154.75, -293.982, -28.266, 0.48", "155.118, -294.28, -28.1553, 0.48", "155.685, -294.718, -27.9634, 0.72", "156.172, -295.082, -27.7969, 0.36", "156.697, -295.467, -27.6178, 0.12", "157.302, -295.904, -27.3781, 0.12", "157.528, -296.067, -27.2793, 0.48", "157.894, -296.347, -27.128, 0.6", "158.43, -296.797, -26.9337, 0.72", "158.7, -297.045, -26.8262, 0.72", "159.426, -297.729, -26.5099, 0.12", "159.601, -297.898, -26.4215, 0.12", "160.123, -298.399, -26.1104, 0.12", "160.39, -298.649, -25.9382, 0.12", "160.956, -299.171, -25.5385, 0.48", "161.224, -299.409, -25.3535, 0.48", "161.519, -299.654, -25.1759, 0.96", "162.236, -300.196, -24.7653, 0.48", "162.602, -300.445, -24.5719, 0.48", "163.145, -300.778, -24.3311, 0.48", "163.531, -300.978, -24.1482, 0.48", "163.895, -301.111, -23.9222, 0.12", "164.004, -301.129, -23.8494, 0.12", "164.354, -301.135, -23.6201, 0.72", "164.705, -301.113, -23.3942, 0.72", "166.028, -301.005, -22.6327, 0.12", "166.712, -300.949, -22.2739, 0.12", "167.554, -300.901, -21.8697, 0.12", "167.823, -300.891, -21.7468, 0.12", "168.261, -300.874, -21.5548, 0.48", "168.982, -300.842, -21.282, 0.48", "169.786, -300.803, -21.0512, 0.72", "170.342, -300.777, -20.8984, 0.84", "171.569, -300.706, -20.5212, 0.36", "172.339, -300.678, -20.2807, 0.12", "173.017, -300.675, -20.0628, 0.24", "173.649, -300.704, -19.8696, 0.24", "174.222, -300.779, -19.7397, 0.24", "174.733, -300.877, -19.6689, 0.72", "175.482, -301.072, -19.6627, 0.72", "176.068, -301.25, -19.742, 0.72", "176.88, -301.502, -19.9301, 0.36", "177.654, -301.69, -20.179, 0.48", "178.156, -301.757, -20.381, 0.6", "178.863, -301.776, -20.7172, 0.6", "179.916, -301.697, -21.3248, 0.12", "180.252, -301.649, -21.5447, 0.12", "180.836, -301.557, -21.9513, 0.12", "181.329, -301.494, -22.2815, 0.48", "181.484, -301.493, -22.3869, 0.48", "182.167, -301.621, -22.8235, 0.12", "182.394, -301.728, -22.983, 0.12", "182.827, -301.975, -23.3098, 0.12", "183.099, -302.15, -23.5084, 0.48", "183.488, -302.368, -23.7969, 0.48", "183.898, -302.512, -24.1042, 0.12", "184.55, -302.597, -24.5757, 0.6", "185.132, -302.601, -24.9874, 0.72", "185.479, -302.569, -25.2179, 0.72", "186.166, -302.485, -25.648, 0.72", "187.036, -302.369, -26.1278, 0.12", "187.373, -302.324, -26.2834, 0.12", "187.898, -302.263, -26.4945, 0.12", "188.285, -302.226, -26.6405, 0.12", "188.795, -302.176, -26.8034, 0.6", "189.693, -302.1, -27.016, 0.6", "190.39, -302.018, -27.1399, 0.72", "190.858, -301.943, -27.2122, 0.12", "191.389, -301.832, -27.2767, 0.12", "191.923, -301.722, -27.323, 0.6", "192.459, -301.625, -27.3504, 0.6", "193.002, -301.575, -27.3689, 0.84", "194.067, -301.616, -27.3149, 0.84", "194.848, -301.747, -27.2161, 0.36", "195.489, -301.95, -27.0691, 0.36", "195.91, -302.14, -26.9362, 0.36", "196.609, -302.539, -26.6686, 0.36", "197.663, -303.265, -26.2195, 0.72", "198.022, -303.549, -26.06, 0.72", "198.79, -304.173, -25.7351, 0.36", "199.208, -304.504, -25.5807, 0.36", "199.683, -304.851, -25.4553, 0.36", "200.051, -305.1, -25.4078, 0.48", "200.482, -305.385, -25.4227, 0.24", "200.809, -305.62, -25.4486, 0.24", "201.23, -305.984, -25.5463, 0.6", "201.759, -306.516, -25.6995, 0.6", "202.048, -306.82, -25.7882, 0.6", "202.638, -307.42, -25.9627, 0.96", "203.064, -307.833, -26.0861, 0.96", "203.929, -308.571, -26.3857, 0.36", "204.312, -308.834, -26.5305, 0.36", "204.884, -309.134, -26.7461, 0.36", "205.305, -309.297, -26.8903, 0.36", "205.693, -309.409, -27.0026, 0.72", "206.425, -309.571, -27.1592, 0.36", "207.002, -309.67, -27.2101, 0.36", "207.585, -309.777, -27.2317, 0.36", "208.119, -309.891, -27.2257, 0.36", "208.814, -310.051, -27.19, 0.48", "209.472, -310.197, -27.1316, 0.48", "210.284, -310.363, -27.044, 0.36", "210.866, -310.463, -26.9917, 0.36", "211.544, -310.559, -26.9459, 0.36", "212.2, -310.642, -26.9195, 0.36", "212.594, -310.688, -26.9175, 0.36", "213.217, -310.755, -26.9412, 0.24", "213.611, -310.795, -26.9755, 0.24", "214.137, -310.835, -27.0186, 0.36", "214.549, -310.863, -27.0607, 0.36", "215.09, -310.896, -27.1206, 0.12", "215.504, -310.939, -27.1647, 0.72", "216.156, -311.049, -27.2117, 1.2", "216.686, -311.18, -27.2415, 1.2", "217.768, -311.516, -27.3048, 0.36", "218.019, -311.603, -27.3193, 0.36", "218.901, -311.953, -27.3664, 0.36", "219.567, -312.278, -27.3968, 0.84", "220.225, -312.689, -27.4183, 0.48", "220.713, -313.05, -27.4256, 0.36", "221.229, -313.485, -27.4054, 0.24", "221.655, -313.868, -27.3817, 0.24", "222.182, -314.354, -27.3464, 0.24", "222.929, -315.065, -27.3156, 0.24", "223.273, -315.412, -27.2986, 0.6", "223.625, -315.773, -27.2785, 0.48", "223.837, -315.989, -27.2697, 0.36", "224.557, -316.647, -27.2644, 0.36", "225.023, -316.999, -27.2781, 0.12", "225.504, -317.285, -27.31, 0.12", "226.034, -317.558, -27.3604, 0.12", "226.206, -317.634, -27.3697, 0.48", "226.493, -317.748, -27.3651, 0.12", "226.893, -317.905, -27.3287, 0.12", "227.629, -318.225, -27.2096, 0.72", "228.01, -318.389, -27.1376, 0.72", "228.847, -318.753, -26.9693, 0.24", "229.272, -318.951, -26.8615, 0.24", "229.622, -319.143, -26.7582, 0.24", "229.954, -319.369, -26.6228, 0.24", "230.484, -319.785, -26.356, 0.24", "230.682, -319.953, -26.2506, 0.24", "231.504, -320.669, -25.8407, 0.24", "231.933, -321.028, -25.6454, 0.96", "232.773, -321.71, -25.2962, 0.48", "233.314, -322.134, -25.1051, 0.36", "233.735, -322.464, -24.9881, 0.6", "234.365, -322.91, -24.8491, 0.84", "234.888, -323.231, -24.7792, 0.12", "235.128, -323.347, -24.7583, 0.12", "235.916, -323.642, -24.7324, 0.12", "236.647, -323.877, -24.7025, 0.96", "237.509, -324.123, -24.646, 0.12", "237.971, -324.24, -24.608, 0.12", "238.662, -324.389, -24.5059, 0.12", "238.951, -324.432, -24.4576, 0.12", "239.242, -324.446, -24.4063, 0.12", "239.944, -324.43, -24.2852, 0.48", "240.506, -324.41, -24.2134, 0.48", "241.397, -324.411, -24.102, 0.12", "241.87, -324.443, -24.0459, 0.12", "242.41, -324.495, -23.9925, 0.12", "242.89, -324.55, -23.9667, 0.36", "243.312, -324.619, -23.9692, 0.12", "243.777, -324.729, -24.0012, 0.12", "244.03, -324.798, -24.0373, 0.12", "244.537, -324.941, -24.1074, 0.6", "244.905, -325.004, -24.1508, 0.12", "245.563, -325.041, -24.2138, 0.12", "246.235, -325.026, -24.2684, 0.12", "246.497, -324.999, -24.2905, 0.36", "246.758, -324.96, -24.3119, 0.24", "247.863, -324.742, -24.4278, 0.24", "248.271, -324.659, -24.4712, 0.48", "248.574, -324.591, -24.5069, 0.12", "249.045, -324.479, -24.5662, 0.12", "249.45, -324.385, -24.6194, 0.36", "249.904, -324.285, -24.6817, 0.12", "252.357, -323.829, -25.0347, 0.12", "252.715, -323.767, -25.084, 0.48" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "18.6962, -10.1085, -10.7778, 0.36", "19.471, -9.81257, -10.6718, 0.36", "20.1096, -9.58851, -10.5606, 0.36", "20.5909, -9.40864, -10.4703, 0.48", "21.0918, -9.19719, -10.3771, 0.48", "21.8617, -8.77355, -10.1732, 0.12", "22.4573, -8.35175, -9.99408, 0.12", "22.6691, -8.14223, -9.90273, 0.48", "23.0024, -7.68434, -9.74069, 0.48", "23.2442, -7.23545, -9.60961, 0.24", "23.7365, -6.10658, -9.31585, 0.36", "24.1047, -5.10643, -9.10006, 0.36", "24.4259, -4.09003, -8.89136, 0.6", "24.6679, -3.26412, -8.72973, 1.08", "24.9608, -2.20114, -8.52705, 0.84", "25.1626, -1.44199, -8.39109, 0.48", "25.417, -0.484422, -8.25202, 0.96", "25.5503, 0.0345705, -8.16881, 1.08", "25.7742, 0.818182, -8.04353, 0.36" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-13.5118, -2.00171, 9.00975, 0.48", "-13.9758, -0.7648, 9.18941, 0.48", "-14.2969, 0.010407, 9.35685, 0.24", "-14.682, 0.773366, 9.55483, 0.24", "-15.1819, 1.57559, 9.78674, 0.72", "-15.498, 2.00558, 9.9222, 0.96", "-16.2912, 2.91978, 10.2276, 0.48", "-17.0526, 3.54363, 10.4946, 0.36", "-17.6964, 3.9326, 10.6866, 0.36", "-18.5638, 4.31744, 10.878, 0.6", "-19.0513, 4.49468, 10.9586, 0.36", "-19.7686, 4.72005, 11.0743, 0.48", "-20.7599, 4.98535, 11.2856, 0.72", "-21.6003, 5.18633, 11.485, 1.08", "-22.4694, 5.36612, 11.7357, 0.96", "-23.2236, 5.47714, 11.9808, 0.96", "-24.0103, 5.53763, 12.2823, 0.72", "-25.1857, 5.49373, 12.8314, 0.6", "-26.1423, 5.22259, 13.3749, 0.36", "-26.4212, 5.02964, 13.5888, 0.36", "-26.8939, 4.52457, 14.0163, 0.36", "-27.5097, 3.7643, 14.6262, 0.48", "-27.8947, 3.28354, 15.0166, 0.48", "-28.4047, 2.76854, 15.4739, 0.48", "-29.0564, 2.42273, 16.025, 0.48", "-29.766, 2.27314, 16.5517, 0.48", "-30.7061, 2.20852, 17.1737, 0.48", "-31.2717, 2.21175, 17.4674, 0.24", "-31.7951, 2.23245, 17.6947, 0.24", "-32.4257, 2.28538, 17.969, 0.6", "-33.1076, 2.36276, 18.241, 0.6", "-33.7642, 2.51387, 18.5314, 0.72", "-34.566, 2.8801, 18.9038, 0.12", "-34.9234, 3.14541, 19.1684, 0.12", "-35.6158, 3.77531, 19.801, 0.12", "-36.056, 4.24298, 20.2568, 0.48", "-36.7113, 4.99951, 21.0237, 0.6", "-37.048, 5.36985, 21.4264, 0.6", "-37.912, 6.05628, 22.4155, 0.36", "-38.4022, 6.21701, 22.9048, 0.36", "-38.6944, 6.20328, 23.1471, 0.36", "-39.0505, 6.12854, 23.4234, 0.36", "-39.5794, 5.98102, 23.8363, 0.6", "-40.4622, 5.77376, 24.5336, 0.84", "-41.5745, 5.6077, 25.4096, 0.6", "-42.3429, 5.54202, 26.0685, 0.48", "-42.7227, 5.52644, 26.4112, 0.48", "-43.2631, 5.53205, 26.9278, 0.36", "-43.714, 5.56914, 27.3888, 0.36", "-44.195, 5.66205, 27.8686, 0.48", "-44.7657, 5.88128, 28.3561, 0.72", "-44.8517, 5.92953, 28.437, 0.72", "-45.3942, 6.30272, 28.9515, 0.72", "-45.7439, 6.58177, 29.3112, 0.48", "-46.1931, 6.97927, 29.7752, 0.48", "-46.6952, 7.46931, 30.2852, 0.6", "-47.6628, 8.35992, 31.1513, 0.24", "-48.2908, 8.83655, 31.6162, 0.24", "-49.4239, 9.55697, 32.3174, 0.48", "-50.1631, 9.94175, 32.6981, 0.36", "-50.4867, 10.0884, 32.8373, 0.36", "-51.7457, 10.5343, 33.264, 0.36", "-52.9892, 10.8259, 33.5283, 0.36", "-53.487, 10.8824, 33.6029, 0.36", "-54.1308, 10.8977, 33.6521, 0.36", "-55.0419, 10.8563, 33.7171, 0.36", "-55.7986, 10.7931, 33.7714, 0.24", "-56.3457, 10.7082, 33.8075, 0.24", "-56.9749, 10.5282, 33.8277, 0.24", "-57.5687, 10.2958, 33.8788, 0.24", "-58.1721, 10.0485, 33.9569, 0.24", "-58.5494, 9.90702, 34.0362, 0.24", "-59.0375, 9.75305, 34.1845, 0.48", "-60.2644, 9.37288, 34.6099, 0.36", "-61.2163, 9.097, 35.0081, 0.24", "-62.0022, 8.90697, 35.4552, 0.24", "-62.8436, 8.68946, 36.0012, 0.48", "-63.5426, 8.50129, 36.4925, 0.24", "-64.1745, 8.31712, 36.9573, 0.24", "-64.8666, 8.06232, 37.4493, 0.12", "-66.3579, 7.26953, 38.3257, 1.68", "-67.2028, 6.5936, 38.7378, 0.36", "-67.3826, 6.41549, 38.795, 0.36", "-67.9042, 5.88473, 38.8861, 0.24", "-68.7582, 4.99971, 38.9299, 0.24", "-69.1102, 4.60627, 38.8937, 0.24", "-69.6199, 4.02015, 38.7701, 0.24", "-69.9764, 3.64381, 38.6989, 0.24", "-70.6659, 2.98576, 38.5797, 0.24", "-71.2337, 2.52499, 38.5022, 0.24", "-72.0669, 1.93381, 38.4101, 0.24", "-72.3956, 1.71653, 38.378, 0.24", "-72.7306, 1.50275, 38.3479, 0.24", "-73.3795, 1.00547, 38.2735, 0.24", "-73.7691, 0.643102, 38.2167, 0.24", "-74.572, 0.0932039, 38.1423, 0.24", "-84.1802, 0.366923, 42.4924, 0.24", "-93.6744, 2.26866, 46.7012, 0.24", "-102.668, 4.15784, 51.907, 0.24", "-111.531, 6.01363, 57.3446, 0.24", "-120.244, 6.40775, 63.2818, 0.24", "-128.553, 7.46926, 69.7054, 0.24", "-137.1, 7.12177, 75.8814, 0.24", "-144.884, 5.72812, 82.8725, 0.24", "-151.321, 4.55746, 91.1497, 0.24", "-158.361, 1.66624, 98.489, 0.24", "-165.728, -3.1484, 104.465, 0.24", "-172.633, -7.72765, 111.112, 0.24" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-13.5118, -2.00171, 9.00975, 0.12", "-15.1384, -2.92745, 2.09518, 0.12", "-15.3609, -3.08158, 1.34348, 0.12", "-15.5694, -3.24554, 0.819203, 0.48", "-15.7689, -3.41524, 0.4846, 0.48", "-16.4868, -4.0433, -0.302494, 0.48", "-16.9855, -4.46048, -0.691877, 0.12", "-17.7156, -5.07914, -0.656262, 0.6", "-18.2566, -5.47115, -0.644093, 0.6", "-18.9757, -5.94821, -0.655497, 0.6", "-19.5426, -6.30988, -0.6949, 0.6", "-20.1879, -6.71069, -0.788641, 0.24", "-20.6929, -7.03877, -0.815693, 0.24", "-21.0115, -7.24742, -0.805721, 0.24", "-21.4195, -7.50717, -0.768902, 0.84", "-21.8893, -7.79321, -0.704155, 0.96", "-22.6182, -8.21905, -0.586905, 0.96", "-24.0494, -9.02673, -0.343534, 0.72", "-24.7997, -9.39997, -0.225626, 0.6", "-25.9951, -9.90974, -0.0547911, 0.6", "-26.3761, -10.0447, -0.00526115, 0.6", "-26.9517, -10.1993, 0.0593024, 0.36", "-27.7103, -10.3382, 0.120206, 0.36", "-28.7868, -10.4418, 0.142733, 0.36", "-29.4597, -10.4703, 0.185034, 0.36", "-29.7538, -10.465, 0.215843, 0.6", "-30.3396, -10.446, 0.294546, 1.08", "-30.7516, -10.4307, 0.364194, 1.08", "-31.2868, -10.4181, 0.467436, 1.08", "-32.1245, -10.4404, 0.631892, 0.12", "-32.6411, -10.4931, 0.73611, 0.12", "-33.0125, -10.5575, 0.803141, 0.12", "-33.3826, -10.6443, 0.876509, 0.12", "-33.9043, -10.7749, 0.979553, 0.6", "-34.666, -10.9588, 1.1233, 0.6", "-35.1821, -11.0743, 1.21563, 0.72", "-36.3734, -11.318, 1.43911, 0.84", "-37.3447, -11.501, 1.61783, 0.48", "-38.0023, -11.6017, 1.73632, 0.48", "-38.7921, -11.7131, 1.8756, 0.48", "-39.3323, -11.7868, 1.96226, 0.36", "-39.7417, -11.8293, 2.01821, 0.36", "-40.5035, -11.8912, 2.12652, 0.36", "-41.3205, -11.9541, 2.29773, 0.36", "-42.3907, -12.0355, 2.60142, 0.36", "-43.0785, -12.0757, 2.81939, 0.36", "-43.7246, -12.0875, 3.01226, 0.36", "-44.4057, -12.058, 3.21093, 0.36", "-45.7837, -11.9046, 3.60139, 0.48", "-46.545, -11.7753, 3.78471, 0.72", "-47.2609, -11.5932, 3.89495, 0.72", "-48.2288, -11.3305, 3.92063, 0.36", "-48.7638, -11.1978, 3.87008, 0.36", "-49.167, -11.1251, 3.78663, 0.36", "-49.6653, -11.0768, 3.64711, 0.6", "-50.5815, -11.0933, 3.40081, 0.72", "-51.7585, -11.2435, 3.17722, 0.72", "-52.5517, -11.4081, 3.12509, 0.36", "-53.4937, -11.6041, 3.2439, 0.36", "-54.0999, -11.7442, 3.45358, 0.36", "-54.5992, -11.8798, 3.74283, 0.36", "-55.366, -12.1272, 4.3671, 0.48", "-56.2308, -12.4139, 5.18003, 0.48", "-57.7558, -12.902, 6.92076, 0.48", "-58.3553, -13.0565, 7.65825, 0.48", "-58.7237, -13.1518, 8.09828, 0.48", "-59.1436, -13.265, 8.59662, 0.48", "-59.8321, -13.477, 9.31406, 0.48", "-61.4725, -14.1068, 10.7622, 0.48", "-61.9196, -14.294, 11.0503, 0.48", "-62.4244, -14.4174, 11.4602, 0.48", "-72.8676, -16.6759, 14.2898, 0.48", "-83.0883, -18.9786, 17.8039, 0.48", "-93.7585, -19.7382, 20.4813, 0.48", "-104.681, -19.5163, 21.936, 0.48", "-115.705, -19.7867, 22.013, 0.48", "-126.615, -21.4748, 22.4958, 0.48", "-137.209, -24.7382, 22.9809, 0.48" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-17.0388, 31.8301, -16.7703, 0.12", "-18.0429, 32.2916, -16.6143, 0.12", "-18.8471, 32.5833, -16.612, 0.12", "-19.07, 32.6588, -16.6192, 0.12", "-19.4584, 32.772, -16.6254, 0.6", "-19.9127, 32.8931, -16.6257, 0.84", "-20.1778, 32.9575, -16.621, 0.84", "-20.8148, 33.0658, -16.6782, 0.12", "-21.2372, 33.1134, -16.6961, 0.12", "-21.7175, 33.1598, -16.7296, 0.12", "-21.9133, 33.1914, -16.7506, 0.96", "-22.1771, 33.249, -16.7893, 0.96", "-22.9246, 33.4314, -16.9069, 0.24", "-23.3797, 33.5317, -16.9688, 0.24", "-23.6067, 33.5667, -17.0187, 0.24", "-24.2123, 33.635, -17.1797, 0.6", "-24.5358, 33.6504, -17.2756, 0.24", "-24.7266, 33.6559, -17.3331, 0.24", "-25.1736, 33.6467, -17.4405, 0.24", "-25.6682, 33.5929, -17.562, 0.84", "-25.9913, 33.536, -17.632, 0.84", "-26.5019, 33.4498, -17.7131, 0.24", "-26.7362, 33.4409, -17.7309, 0.24", "-26.9457, 33.4528, -17.7434, 0.24", "-27.2216, 33.486, -17.7482, 0.24", "-27.298, 33.4943, -17.7436, 0.12", "-27.7144, 33.5377, -17.7077, 0.12", "-28.1167, 33.5758, -17.6982, 0.48", "-28.5274, 33.6107, -17.7158, 0.12", "-28.8634, 33.6422, -17.7467, 0.12", "-29.1974, 33.6821, -17.7866, 0.48", "-29.4334, 33.713, -17.8144, 0.48", "-30.1813, 33.8298, -17.9033, 0.12", "-30.6378, 33.9178, -17.9718, 0.12", "-30.7275, 33.9365, -17.9932, 0.12", "-31.0609, 34.0108, -18.117, 0.6", "-31.4276, 34.0867, -18.2675, 0.6", "-31.6997, 34.1356, -18.377, 0.6", "-32.2003, 34.2259, -18.5605, 0.72", "-32.95, 34.3506, -18.8713, 0.36", "-33.4047, 34.4309, -19.0606, 0.12", "-33.8436, 34.5071, -19.2497, 0.12", "-34.0355, 34.5417, -19.3282, 0.72", "-34.2865, 34.5865, -19.4288, 0.84", "-34.7003, 34.6689, -19.5649, 0.12", "-35.1048, 34.7535, -19.6668, 0.12", "-35.4739, 34.8277, -19.7514, 0.6", "-35.7285, 34.8769, -19.8315, 0.72", "-36.4992, 35.0091, -20.0728, 0.12", "-36.8153, 35.0551, -20.1643, 0.12", "-37.1916, 35.1086, -20.2849, 0.12", "-37.3885, 35.1352, -20.3532, 0.48", "-38.082, 35.2489, -20.5835, 0.12", "-38.6866, 35.3654, -20.8344, 0.12", "-38.8696, 35.4074, -20.9123, 1.08", "-39.6412, 35.602, -21.2667, 0.12", "-39.8242, 35.6518, -21.3581, 0.12", "-40.1753, 35.7672, -21.5244, 0.84", "-41.0599, 36.1088, -21.8979, 0.12", "-41.5169, 36.3075, -22.1013, 0.12", "-41.7509, 36.4228, -22.1904, 0.36", "-42.0795, 36.6054, -22.2827, 0.12", "-42.6748, 36.9847, -22.4363, 0.12", "-42.8635, 37.1226, -22.5011, 0.36", "-43.0794, 37.3255, -22.5874, 0.12", "-43.4666, 37.7776, -22.8164, 0.12", "-43.5751, 37.9199, -22.8876, 0.48", "-43.6858, 38.076, -22.9599, 0.48", "-44.2809, 38.883, -23.4248, 0.12", "-44.6267, 39.3237, -23.6937, 0.12", "-44.9309, 39.6905, -23.9171, 0.12", "-45.2103, 40.0002, -24.103, 0.12", "-45.4744, 40.2698, -24.2406, 0.6", "-46.0574, 40.7735, -24.5094, 0.12", "-46.2213, 40.8957, -24.5683, 0.12", "-46.4177, 41.0171, -24.64, 0.12", "-46.7913, 41.2262, -24.7756, 0.12", "-47.1084, 41.3958, -24.8807, 0.48", "-47.9694, 41.8396, -25.0941, 0.12", "-48.2131, 41.9555, -25.1489, 0.12", "-48.7537, 42.1778, -25.2684, 0.6", "-49.0009, 42.2664, -25.3142, 0.12", "-49.3207, 42.3712, -25.3584, 0.12", "-49.711, 42.4954, -25.3836, 0.6", "-50.4876, 42.733, -25.3926, 0.12", "-51.1945, 42.9325, -25.4088, 0.12", "-51.6504, 43.0535, -25.4202, 0.12", "-51.9958, 43.1397, -25.423, 0.12", "-52.4656, 43.2551, -25.4096, 0.12", "-53.1549, 43.4312, -25.3556, 0.12", "-53.6027, 43.5545, -25.2834, 0.12", "-53.868, 43.6301, -25.2381, 0.84", "-54.2327, 43.7431, -25.1703, 1.2", "-54.5794, 43.8711, -25.0967, 0.12", "-54.8997, 44.0178, -25.0179, 0.12", "-55.3595, 44.2713, -24.8937, 0.12", "-55.7661, 44.5203, -24.796, 0.48", "-55.9621, 44.6479, -24.7593, 0.12", "-56.432, 44.976, -24.6947, 0.12", "-56.7533, 45.196, -24.6615, 0.12", "-57.0699, 45.4054, -24.6322, 0.48", "-57.3982, 45.6113, -24.6229, 0.48", "-57.6742, 45.7729, -24.625, 0.12", "-58.2001, 46.0554, -24.6586, 0.12", "-58.6194, 46.2638, -24.7215, 0.12", "-58.9156, 46.4066, -24.7802, 0.48", "-59.3568, 46.6129, -24.8742, 0.12", "-59.8365, 46.8283, -24.9753, 0.12", "-60.4968, 47.1312, -25.1061, 0.84", "-60.9669, 47.3399, -25.2396, 0.12", "-61.2083, 47.4564, -25.3236, 0.12", "-61.5459, 47.6385, -25.4424, 0.12", "-61.9331, 47.8635, -25.6317, 0.12", "-62.1531, 47.9927, -25.7572, 0.36", "-62.8024, 48.4045, -26.1794, 0.12", "-63.0398, 48.5696, -26.3629, 0.12", "-63.2867, 48.7551, -26.6138, 0.48", "-64.0994, 49.432, -27.7254, 0.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-17.0388, 31.8301, -16.7703, 0.12", "-17.154, 32.9371, -16.8451, 0.12", "-17.3481, 34.4579, -17.0419, 0.12", "-17.4917, 35.4706, -17.1887, 0.72", "-17.6112, 36.3156, -17.3231, 0.96", "-17.69, 36.8474, -17.4085, 0.96", "-17.9212, 38.3806, -17.7492, 0.12", "-18.2323, 40.3512, -18.3176, 0.12", "-18.3357, 41.0187, -18.5276, 0.48", "-18.5002, 42.015, -18.8444, 0.24", "-18.7541, 43.3413, -19.2748, 0.24", "-19.1446, 45.3112, -19.8845, 0.72", "-19.3635, 46.438, -20.1884, 0.96", "-19.6249, 47.7484, -20.5482, 0.36", "-19.7828, 48.5538, -20.7576, 0.36", "-19.9931, 49.6275, -20.9988, 0.12", "-20.2084, 50.6635, -21.1825, 0.12", "-20.5181, 52.0078, -21.3284, 0.12", "-20.6696, 52.6017, -21.3937, 0.6", "-20.952, 53.6703, -21.5159, 0.12", "-21.2078, 54.6648, -21.6188, 0.12", "-21.4744, 55.7296, -21.7105, 0.48", "-21.6866, 56.4524, -21.7719, 0.96", "-21.9199, 57.182, -21.8297, 0.96", "-22.1588, 57.9116, -21.8793, 0.12", "-22.5665, 59.0377, -21.9409, 0.12", "-22.9881, 60.1492, -22.0048, 0.12", "-23.1646, 60.6114, -22.0294, 0.6", "-23.2595, 60.834, -22.0398, 0.6", "-23.4912, 61.269, -22.0548, 0.12", "-23.8641, 61.8757, -22.1719, 0.12", "-24.3402, 62.6072, -22.414, 0.12", "-24.8018, 63.3383, -22.7067, 0.72", "-25.098, 63.8223, -22.9325, 0.96", "-25.8255, 65.0174, -23.5993, 0.48", "-27.0364, 66.9805, -24.7993, 0.12", "-27.5138, 67.726, -25.2897, 0.12", "-27.9344, 68.3434, -25.7135, 0.12", "-28.4205, 69.0288, -26.178, 0.48", "-28.9254, 69.7207, -26.6409, 0.12", "-29.6582, 70.6681, -27.1859, 0.12", "-30.0261, 71.1183, -27.3655, 1.08", "-30.4694, 71.6343, -27.5528, 1.32", "-30.8513, 72.077, -27.7196, 0.96", "-31.7539, 73.1524, -28.0984, 0.24", "-32.7704, 74.3826, -28.6094, 0.24", "-33.5392, 75.287, -29.06, 0.24", "-34.2868, 76.1395, -29.5228, 0.24", "-35.1012, 76.9978, -30.0133, 0.96", "-35.5548, 77.4304, -30.3257, 1.2", "-36.8079, 78.5497, -31.2419, 0.36", "-37.5407, 79.1645, -31.8214, 0.12", "-37.9329, 79.4827, -32.1324, 0.72", "-38.758, 80.1863, -32.7936, 0.72", "-40.663, 81.8846, -34.2448, 0.24", "-41.1327, 82.3263, -34.5983, 0.12", "-41.5824, 82.7732, -34.919, 0.12", "-42.0152, 83.2435, -35.2327, 0.24", "-43.0938, 84.5042, -35.9637, 0.48", "-43.6197, 85.1813, -36.3247, 0.12", "-44.0945, 85.8244, -36.5907, 0.12", "-44.2292, 86.0066, -36.6669, 0.72", "-44.8374, 86.839, -36.9982, 0.84", "-45.3045, 87.4901, -37.2331, 0.84", "-46.4719, 89.0907, -37.9158, 0.36", "-47.0646, 89.9125, -38.3232, 0.12", "-47.5646, 90.615, -38.7093, 0.6", "-48.0015, 91.2351, -39.0776, 1.08", "-48.2649, 91.6378, -39.3093, 1.08", "-49.427, 93.5155, -40.2973, 0.12", "-49.8544, 94.242, -40.613, 0.12", "-50.1363, 94.7405, -40.8284, 0.48", "-50.5727, 95.5747, -41.1398, 0.12", "-51.4097, 97.223, -41.6395, 0.12", "-51.687, 97.7594, -41.756, 0.72", "-52.1409, 98.6386, -41.8653, 0.84", "-52.6033, 99.4938, -41.9702, 0.12", "-53.2884, 100.714, -42.1063, 0.12", "-53.7143, 101.446, -42.1742, 0.12", "-54.346, 102.467, -42.2675, 0.6", "-54.7577, 103.121, -42.317, 0.36", "-55.1497, 103.726, -42.3505, 0.6", "-55.6892, 104.555, -42.4208, 0.84", "-55.9711, 104.994, -42.4731, 0.84", "-56.6039, 106.036, -42.6131, 0.24", "-57.3311, 107.278, -42.8187, 0.12", "-57.8636, 108.215, -42.9887, 0.48", "-58.7506, 109.844, -43.3104, 0.12", "-59.5016, 111.301, -43.6154, 0.12", "-59.8966, 112.112, -43.7893, 0.48", "-60.2085, 112.794, -43.9316, 0.12", "-60.63, 113.774, -44.1103, 0.12", "-60.7598, 114.087, -44.1574, 0.36", "-61.1542, 115.032, -44.286, 0.12", "-61.3712, 115.522, -44.3632, 0.12", "-61.9813, 116.832, -44.5593, 0.48", "-62.5434, 117.996, -44.7168, 1.2", "-62.9793, 118.847, -44.835, 0.6", "-63.441, 119.731, -44.9722, 0.12", "-64.291, 121.334, -45.2348, 0.12", "-65.2454, 123.121, -45.5342, 0.12", "-65.5312, 123.658, -45.623, 0.12", "-65.9286, 124.392, -45.7342, 0.6", "-66.4269, 125.318, -45.8842, 0.12", "-66.9553, 126.305, -46.0503, 0.12", "-67.293, 126.93, -46.1838, 0.72", "-67.6524, 127.58, -46.3513, 0.72", "-67.9395, 128.093, -46.4835, 0.72", "-68.5401, 129.193, -46.8618, 0.12", "-69.1736, 130.414, -47.3235, 0.12", "-69.522, 131.134, -47.6131, 0.12", "-70.1353, 132.505, -48.1503, 0.48", "-70.5822, 133.569, -48.5704, 0.48", "-71.3311, 135.43, -49.2748, 0.12", "-71.8635, 136.817, -49.7521, 0.12", "-72.1592, 137.632, -50.0569, 0.12", "-72.5441, 138.733, -50.4578, 0.12", "-72.7313, 139.28, -50.635, 0.72", "-73.0017, 140.057, -50.8714, 0.72", "-73.2347, 140.69, -51.0225, 0.48", "-73.6273, 141.751, -51.3052, 0.12", "-74.0682, 142.991, -51.7659, 0.12", "-74.2733, 143.621, -52.0233, 0.36", "-74.4619, 144.213, -52.2414, 0.12", "-74.7574, 145.149, -52.5398, 0.12", "-74.9643, 145.799, -52.7224, 0.48", "-75.7219, 148.192, -53.2999, 0.24", "-76.1811, 149.616, -53.6524, 0.24", "-76.911, 151.883, -54.1866, 0.24", "-77.6215, 154.102, -54.6508, 0.24", "-77.7897, 154.608, -54.7483, 0.24", "-78.0108, 155.257, -54.8507, 0.48", "-78.3366, 156.175, -54.9478, 0.12", "-78.7273, 157.116, -55.0797, 0.12", "-79.0302, 157.744, -55.1799, 0.12", "-79.3844, 158.367, -55.2771, 0.48", "-79.658, 158.81, -55.3423, 0.72", "-80.3683, 159.881, -55.4781, 0.12", "-81.6612, 161.743, -55.6643, 0.12", "-82.7245, 163.217, -55.8833, 0.12", "-83.3527, 164.09, -56.0372, 0.12", "-83.589, 164.427, -56.1011, 0.84", "-84.0622, 165.125, -56.2406, 0.96", "-84.791, 166.253, -56.4633, 0.72", "-85.5792, 167.567, -56.7403, 0.12", "-86.5705, 169.235, -57.0947, 0.12", "-87.024, 170.002, -57.3075, 0.36", "-87.7767, 171.283, -57.7079, 0.12", "-88.4071, 172.427, -58.085, 0.12", "-88.7372, 173.079, -58.2979, 0.12", "-89.0301, 173.691, -58.4829, 0.72", "-90.0176, 175.736, -59.1576, 0.12", "-90.6905, 177.095, -59.7084, 0.12", "-91.2548, 178.21, -60.206, 0.12", "-91.5382, 178.777, -60.4687, 0.12", "-91.8644, 179.469, -60.8364, 0.12", "-92.2712, 180.395, -61.3573, 0.36", "-92.8988, 181.8, -62.1415, 0.12", "-93.4024, 182.833, -62.8566, 0.12", "-93.6021, 183.204, -63.1367, 0.48", "-94.3426, 184.737, -64.1334, 0.24", "-94.396, 184.876, -64.2144, 0.12", "-94.601, 185.519, -64.5649, 0.12", "-94.789, 186.165, -64.8342, 0.12", "-94.9785, 186.806, -65.0859, 0.12", "-95.4691, 188.521, -65.6679, 0.12", "-95.714, 189.477, -66.0172, 0.36", "-95.8949, 190.37, -66.4003, 0.12", "-96.2369, 192.248, -67.191, 0.12", "-96.3404, 192.812, -67.3986, 0.6", "-96.4621, 193.388, -67.5863, 0.6", "-97.0267, 195.521, -68.2087, 0.12", "-97.3592, 196.602, -68.5565, 0.12", "-98.3346, 199.412, -69.5272, 0.12", "-99.1293, 201.438, -70.2898, 0.12", "-99.488, 202.267, -70.5984, 0.12", "-99.8023, 202.879, -70.8178, 0.84", "-101.218, 205.296, -71.7278, 0.12", "-101.716, 206.05, -72.0932, 0.12", "-102.285, 206.883, -72.5776, 0.12", "-102.77, 207.6, -72.9829, 0.12", "-103.31, 208.437, -73.3731, 0.48", "-104.211, 209.908, -73.8677, 0.12", "-104.773, 210.876, -74.022, 0.12", "-105.604, 212.349, -74.1894, 0.12", "-106.258, 213.507, -74.2739, 0.12", "-106.965, 214.757, -74.3186, 0.48", "-107.317, 215.39, -74.3182, 0.12", "-108.971, 218.278, -74.1555, 0.12", "-109.646, 219.411, -74.0873, 0.12", "-110.421, 220.64, -74.0096, 0.12", "-110.799, 221.254, -73.9722, 0.6" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.56637, 35.9502, -0.00167934, 0.195864", "-12.2185, 50.4988, -0.00167934, 0.195864", "-15.8707, 65.0474, -0.00167934, 0.195864" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-0.161749, 23.741, -1.76691, 0.96", "-0.52919, 24.1027, -2.11778, 0.96", "-0.938074, 24.5346, -2.43599, 0.96", "-1.30765, 24.9483, -2.64142, 0.6", "-3.1803, 27.1086, -3.47625, 0.72", "-3.57471, 27.5828, -3.62653, 0.12", "-4.07224, 28.2256, -3.78629, 0.12", "-4.6033, 28.9623, -3.95767, 0.24", "-5.32896, 30.068, -4.152, 0.6", "-5.95782, 31.1336, -4.25506, 0.6", "-6.25713, 31.6904, -4.27022, 0.12", "-6.78323, 32.6801, -4.35307, 0.12", "-7.27461, 33.6203, -4.47687, 0.12", "-7.67449, 34.3666, -4.62783, 0.48", "-7.87795, 34.7329, -4.71856, 0.48", "-8.49256, 35.6743, -5.02311, 0.12", "-8.95306, 36.2652, -5.2496, 0.12", "-9.33417, 36.6779, -5.44618, 0.6", "-9.97796, 37.3144, -5.75585, 0.12", "-10.4968, 37.7818, -6.02647, 0.12", "-11.6437, 38.7896, -6.6224, 0.12", "-12.1777, 39.2541, -6.86658, 0.12", "-12.6318, 39.634, -7.06113, 0.12", "-13.0649, 40.0019, -7.21904, 0.96", "-14.0176, 40.8366, -7.46842, 0.12", "-14.3848, 41.1553, -7.5696, 0.12", "-15.0124, 41.7107, -7.69448, 0.12", "-15.4507, 42.0829, -7.76496, 0.96", "-15.9583, 42.5024, -7.82988, 1.08", "-16.1622, 42.664, -7.85345, 1.08", "-17.5638, 43.7685, -7.98111, 0.24", "-18.3089, 44.3503, -8.07794, 0.12", "-19.124, 44.9921, -8.20303, 0.12", "-19.5332, 45.3174, -8.26058, 0.72", "-19.8575, 45.5843, -8.30036, 0.72", "-20.5436, 46.2098, -8.34194, 0.36", "-20.8663, 46.5529, -8.31809, 0.12", "-21.186, 46.9281, -8.29539, 0.12", "-21.4472, 47.2636, -8.26783, 0.48", "-21.6901, 47.5919, -8.22286, 0.12", "-22.1499, 48.2229, -8.14151, 0.12", "-22.4017, 48.57, -8.0877, 0.12", "-22.8168, 49.1121, -7.99447, 0.84", "-23.1739, 49.5668, -7.89636, 0.72", "-23.4372, 49.8889, -7.80895, 0.12", "-23.7198, 50.2242, -7.69286, 0.12", "-24.1327, 50.7105, -7.503, 0.12", "-24.5471, 51.2215, -7.29455, 0.12", "-24.9278, 51.7097, -7.08312, 0.48", "-25.3573, 52.2733, -6.82422, 0.6", "-25.6149, 52.6247, -6.66127, 0.24", "-25.9977, 53.1339, -6.46265, 0.24", "-26.2529, 53.4611, -6.36884, 0.12", "-26.561, 53.8491, -6.29542, 0.12", "-26.829, 54.1666, -6.25862, 0.6", "-27.3336, 54.7241, -6.20341, 0.84", "-28.1692, 55.5742, -6.1152, 0.12", "-28.6425, 56.0261, -6.0577, 0.12", "-29.0722, 56.4194, -5.99364, 0.24", "-29.3452, 56.665, -5.94489, 0.12", "-30.0371, 57.2804, -5.78787, 0.12", "-30.4346, 57.6217, -5.69619, 0.48", "-30.8675, 58.0045, -5.58113, 0.12", "-31.2332, 58.3318, -5.50375, 0.12", "-31.4166, 58.5041, -5.47302, 0.48", "-31.8118, 58.9368, -5.41785, 0.48", "-32.3744, 59.5765, -5.43068, 0.12", "-32.7621, 60.0187, -5.46876, 0.12", "-33.2561, 60.5663, -5.58329, 0.48", "-33.483, 60.8268, -5.65044, 0.12", "-34.2343, 61.7452, -5.86754, 0.12", "-35.1345, 62.9165, -6.11275, 0.84", "-35.4781, 63.3915, -6.19413, 0.84", "-36.1881, 64.3912, -6.37565, 0.12", "-36.8494, 65.3337, -6.56206, 0.12", "-37.655, 66.5055, -6.7778, 0.12", "-37.889, 66.8586, -6.83046, 0.6", "-38.1769, 67.3076, -6.88937, 0.72", "-38.55, 67.8565, -7.00125, 0.12", "-39.1596, 68.702, -7.18989, 0.12", "-39.5141, 69.1538, -7.32625, 0.12", "-39.8176, 69.5111, -7.47738, 0.72", "-40.6132, 70.4488, -7.86052, 0.72", "-41.1538, 71.0924, -8.10564, 0.12", "-42.021, 72.1483, -8.52836, 0.12", "-42.2682, 72.4712, -8.6538, 0.48", "-42.8494, 73.3182, -8.94658, 0.12", "-43.7214, 74.7139, -9.3491, 0.12", "-43.8503, 74.9393, -9.40581, 0.48", "-44.3448, 75.919, -9.61879, 0.12", "-44.7593, 76.8146, -9.8331, 0.12", "-45.246, 77.967, -10.0911, 0.12", "-45.3431, 78.2101, -10.1451, 0.48", "-45.6785, 79.079, -10.3642, 0.12", "-46.4875, 81.1093, -10.8909, 0.12", "-46.6875, 81.6086, -11.0097, 0.6", "-46.8167, 81.9336, -11.0891, 0.72", "-47.1262, 82.7129, -11.2639, 0.12", "-47.4334, 83.5084, -11.41, 0.24", "-47.667, 84.1237, -11.4812, 0.12", "-47.9834, 84.9249, -11.5556, 0.12", "-48.5294, 86.3257, -11.6259, 0.12", "-48.7104, 86.8005, -11.6334, 0.48", "-48.7496, 86.9137, -11.6281, 0.12", "-48.9564, 87.5141, -11.5873, 0.12", "-49.0343, 87.7685, -11.5536, 0.48" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-0.161749, 23.741, -1.76691, 0.96", "-0.181388, 24.5165, -1.74599, 0.96", "-0.194531, 25.0062, -1.7336, 0.96", "-0.225832, 25.7866, -1.71313, 0.6", "-0.252506, 26.4685, -1.69638, 0.48", "-0.291408, 27.5397, -1.67222, 0.48", "-0.338191, 28.8152, -1.64532, 0.48", "-0.354577, 29.2948, -1.62956, 0.96", "-0.370712, 29.82, -1.60602, 1.44", "-0.388384, 30.4049, -1.57381, 1.08", "-0.405713, 31.087, -1.53187, 0.84", "-0.42659, 31.961, -1.47351, 0.84", "-0.429877, 32.5493, -1.43777, 0.36", "-0.42004, 33.6187, -1.38482, 0.36", "-0.409408, 34.0087, -1.36304, 0.72", "-0.380046, 34.78, -1.31745, 1.32", "-0.3571, 35.1693, -1.29589, 1.32", "-0.295777, 35.9537, -1.26098, 0.6", "-0.228857, 36.7298, -1.23866, 0.48", "-0.166902, 37.4091, -1.21631, 0.6", "-0.133281, 37.8022, -1.20238, 0.96", "-0.0826623, 38.393, -1.16772, 0.84", "-0.0137941, 39.2585, -1.10313, 0.72", "0.033178, 39.9296, -1.04418, 0.72", "0.06548, 40.4247, -1.00239, 1.08", "0.086068, 40.8059, -0.978426, 1.2", "0.131416, 41.7718, -0.901665, 0.6", "0.155869, 42.4441, -0.842068, 0.6", "0.163535, 42.7357, -0.815379, 0.96", "0.168932, 43.224, -0.774712, 0.96", "0.164207, 43.7496, -0.745364, 0.84", "0.137174, 44.6874, -0.71751, 0.36", "0.081914, 45.7566, -0.712851, 0.36", "0.0466294, 46.3415, -0.702632, 0.72", "8.15663E-4, 47.0323, -0.677986, 1.08", "-0.0689842, 47.9356, -0.632294, 0.6", "-0.133597, 48.7046, -0.589472, 0.48", "-0.181139, 49.1994, -0.565189, 0.48", "-0.263793, 50.0477, -0.515318, 1.2", "-0.342595, 50.8392, -0.461518, 0.48", "-0.444477, 51.8181, -0.384614, 0.48", "-0.495826, 52.323, -0.331079, 0.12", "-0.572932, 53.0929, -0.24536, 0.12", "-0.592682, 53.3825, -0.20792, 0.12", "-0.600616, 53.6808, -0.168881, 0.96", "-0.591239, 54.2684, -0.085206, 0.96", "-0.555676, 55.0462, 0.0345371, 0.72", "-0.532433, 55.4311, 0.0946981, 0.84", "-0.462731, 56.42, 0.257304, 0.48", "-0.390823, 57.3786, 0.403167, 0.48", "-0.332291, 58.142, 0.506281, 0.48", "-0.283859, 58.8264, 0.581713, 1.08", "-0.257931, 59.2066, 0.613326, 1.32", "-0.180213, 60.3395, 0.691033, 0.36", "-0.0950734, 61.6006, 0.74854, 0.36", "-0.0386532, 62.363, 0.77712, 0.48", "0.065999, 63.6116, 0.807971, 0.6", "0.136699, 64.4158, 0.817929, 0.72", "0.188833, 65.0964, 0.817379, 0.72", "0.216246, 65.5988, 0.81109, 0.72", "0.236607, 66.4776, 0.795381, 0.36", "0.243731, 67.6455, 0.818674, 0.48", "0.229457, 69.0935, 0.892636, 0.48", "0.205132, 69.8902, 0.953282, 0.48", "0.142014, 71.2558, 1.0871, 0.96", "0.0484599, 72.9189, 1.29422, 0.48", "-0.0334948, 74.1083, 1.46763, 0.12", "-0.0711585, 74.5915, 1.5457, 0.12", "-0.145193, 75.5612, 1.71005, 0.72", "-0.164129, 75.8566, 1.7626, 0.84", "-0.199587, 76.4747, 1.86714, 0.48", "-0.253969, 77.54, 2.05025, 0.48", "-0.295483, 78.498, 2.17945, 0.48", "-0.310065, 78.973, 2.24545, 0.96", "-0.321571, 79.715, 2.35084, 0.36", "-0.332647, 80.7748, 2.49682, 0.36", "-0.339884, 81.7037, 2.61754, 0.36", "-0.338715, 82.6684, 2.74212, 0.36", "-0.340504, 83.1483, 2.79937, 0.84", "-0.342855, 83.4393, 2.83274, 0.84", "-0.352186, 84.0304, 2.88922, 0.36", "-0.360162, 84.5074, 2.94216, 0.12", "-0.374585, 84.9946, 2.97026, 0.96", "-0.395973, 85.5798, 2.99315, 1.32", "-0.420769, 86.4279, 3.0574, 0.36", "-0.441799, 87.3962, 3.15121, 0.36", "-0.457806, 88.5297, 3.27785, 0.6", "-0.466564, 89.645, 3.39924, 0.48", "-0.469588, 90.4138, 3.47814, 0.48", "-0.470905, 91.5479, 3.58134, 0.84", "-0.478014, 92.1323, 3.62283, 0.96", "-0.483831, 92.327, 3.63687, 0.96", "-0.507263, 92.8106, 3.68507, 0.36", "-0.531194, 93.3022, 3.75757, 0.36", "-0.557577, 93.7882, 3.8114, 0.84", "-0.586475, 94.4038, 3.8511, 1.32", "-0.594726, 94.796, 3.89398, 0.96", "-0.584649, 95.6138, 4.0064, 0.36", "-0.540408, 96.6648, 4.1729, 0.36", "-0.490899, 97.3312, 4.26735, 0.36", "-0.43013, 97.9096, 4.33533, 0.36", "-0.333486, 98.6201, 4.40053, 0.72", "-0.252751, 99.1294, 4.44737, 0.36", "-0.123779, 99.8967, 4.50792, 0.24", "-0.0400733, 100.379, 4.55275, 0.84", "0.0404879, 100.871, 4.60007, 0.84", "0.09306, 101.272, 4.63372, 0.72", "0.158584, 101.908, 4.70751, 0.12", "0.222723, 102.675, 4.83608, 0.12", "0.264917, 103.237, 4.95814, 0.48", "0.282468, 103.523, 5.01556, 0.24", "0.329623, 104.67, 5.20185, 0.24", "0.353324, 105.458, 5.31209, 0.72", "0.364849, 105.943, 5.36456, 1.08", "0.379019, 106.746, 5.44889, 0.96", "0.389579, 107.604, 5.5472, 0.72", "0.394707, 108.29, 5.62567, 0.6", "0.396297, 108.911, 5.68776, 0.12", "0.392948, 109.493, 5.75264, 0.12", "0.39907, 110.162, 5.88173, 0.12", "0.412882, 110.752, 6.03157, 0.48", "0.421429, 111.023, 6.11548, 0.12", "0.45159, 112.031, 6.44576, 0.12", "0.464432, 112.836, 6.6923, 0.6", "0.463199, 113.62, 6.92223, 0.12", "0.453351, 114.559, 7.14787, 0.12", "0.447485, 114.862, 7.2037, 0.12", "0.435518, 115.432, 7.28943, 0.6", "0.406096, 116.688, 7.43238, 1.08", "0.390364, 117.389, 7.48187, 1.08", "0.369977, 118.579, 7.53649, 0.48", "0.370845, 119.354, 7.57308, 0.12", "0.393154, 120.647, 7.63142, 0.12", "0.411052, 121.127, 7.64975, 0.12", "0.459046, 121.998, 7.67665, 0.12", "0.49893, 122.614, 7.68757, 0.72", "0.524394, 123.021, 7.69075, 0.12", "0.559121, 123.606, 7.68026, 0.12", "0.621092, 124.771, 7.63014, 0.48", "0.666204, 125.768, 7.57272, 0.6", "0.69022, 126.451, 7.52557, 0.6", "0.703273, 126.938, 7.4982, 0.84", "0.71661, 127.614, 7.47933, 0.6", "0.725398, 128.387, 7.48603, 0.72", "0.722044, 128.999, 7.51314, 0.36", "0.709861, 129.865, 7.60138, 0.48", "0.67693, 130.959, 7.75268, 0.48", "0.648706, 132.065, 7.92577, 0.6", "0.622802, 132.935, 8.07734, 0.48", "0.605099, 133.423, 8.16924, 0.48", "0.578324, 134.441, 8.41314, 0.12", "0.568104, 135.064, 8.58284, 0.12", "0.558712, 135.895, 8.81348, 0.12", "0.555742, 136.234, 8.90561, 0.96", "0.542965, 136.714, 9.03245, 1.08", "0.480126, 137.919, 9.32663, 0.36", "0.441409, 138.393, 9.42958, 0.36", "0.325955, 139.531, 9.67019, 0.36", "0.2262, 140.22, 9.80437, 0.36", "0.105146, 140.938, 9.91829, 0.24", "0.00278056, 141.452, 9.9744, 0.24", "-0.0868067, 141.839, 9.99213, 0.6", "-0.15842, 142.122, 10.0057, 0.6", "-0.307129, 142.712, 10.0534, 0.36", "-0.482296, 143.428, 10.1275, 0.36", "-0.678023, 144.274, 10.2275, 0.24", "-0.947219, 145.525, 10.391, 0.24", "-1.11955, 146.413, 10.5099, 0.24", "-1.23467, 147.093, 10.6043, 0.24", "-1.27215, 147.388, 10.6454, 0.6", "-1.3068, 147.773, 10.6957, 0.6", "-1.33229, 148.172, 10.7421, 0.6", "-1.35757, 148.942, 10.8105, 0.36", "-1.36602, 149.16, 10.8217, 0.12", "-1.42207, 149.931, 10.8336, 0.12", "-1.48393, 150.537, 10.8362, 0.12", "-1.54077, 150.935, 10.835, 0.36", "-1.57953, 151.15, 10.8342, 0.12", "-1.73432, 151.868, 10.8286, 0.12", "-1.81687, 152.249, 10.8238, 0.48", "-1.87633, 152.564, 10.8169, 0.12", "-1.92448, 152.957, 10.8044, 0.12", "-1.95848, 153.737, 10.7714, 0.12", "-1.96621, 154.357, 10.7431, 0.72", "-1.95, 154.846, 10.7194, 0.84", "-1.92315, 155.282, 10.7021, 0.36", "-1.85653, 155.891, 10.6884, 0.36", "-1.77989, 156.32, 10.6714, 0.48" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.72645, -22.6606, 8.07791, 0.6", "-3.56275, -23.6344, 7.08118, 0.6", "-3.87509, -24.0075, 6.70353, 0.48", "-4.22898, -24.4422, 6.29391, 0.48", "-4.59959, -24.9244, 5.87802, 0.48", "-4.86704, -25.2819, 5.60586, 0.48", "-5.32877, -25.9176, 5.17525, 0.6", "-5.70461, -26.4854, 4.89154, 0.72", "-6.224, -27.2903, 4.48966, 0.84", "-6.65549, -27.9852, 4.16333, 0.84", "-6.9683, -28.5025, 3.96754, 1.08", "-7.23625, -28.9739, 3.82676, 1.32", "-7.51449, -29.5117, 3.70548, 1.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.72645, -22.6606, 8.07791, 0.96", "-2.69806, -23.448, 8.46512, 0.96", "-2.68106, -23.7919, 8.60108, 0.6", "-2.63228, -24.3388, 8.8199, 0.48", "-2.57868, -24.8358, 9.01027, 0.12", "-2.51123, -25.3836, 9.2196, 0.12", "-2.4797, -25.6323, 9.3126, 0.72", "-2.42816, -26.2082, 9.49233, 0.72", "-2.37397, -26.7953, 9.70359, 0.6", "-2.34675, -27.0761, 9.81926, 0.6", "-2.32034, -27.4962, 9.99825, 0.36", "-2.30919, -27.6917, 10.0882, 0.36", "-2.2898, -28.1171, 10.2811, 0.36", "-2.25102, -28.8852, 10.6354, 0.36", "-2.22762, -29.3091, 10.8111, 0.6", "-2.1934, -29.6506, 10.952, 0.6", "-2.1387, -29.9932, 11.0797, 0.72", "-2.07917, -30.2694, 11.1765, 0.84", "-1.94108, -30.8091, 11.3408, 0.6", "-1.8564, -31.1582, 11.4341, 0.48", "-1.80281, -31.4603, 11.5336, 0.36", "-1.76667, -31.8512, 11.7108, 0.36", "-1.76527, -32.0383, 11.8052, 0.6", "-1.77962, -32.3271, 11.953, 0.72", "-1.82246, -32.8452, 12.1938, 0.72", "-1.82497, -33.2862, 12.425, 0.48", "-1.79884, -33.7173, 12.647, 0.6", "-1.76164, -34.0638, 12.8259, 0.84", "-1.72552, -34.3372, 12.9543, 1.08", "-1.6542, -34.7875, 13.1476, 1.32", "-1.45831, -35.9569, 13.5743, 0.72", "-1.39438, -36.3591, 13.7009, 0.36", "-1.27275, -37.229, 13.9494, 0.48", "-1.21217, -37.8013, 14.1123, 0.6", "-1.19802, -38.0225, 14.1702, 0.84", "-1.19243, -38.5364, 14.2826, 0.84", "-1.22121, -39.1245, 14.3673, 0.72", "-1.25109, -39.6719, 14.4279, 0.48", "-1.26423, -40.2581, 14.477, 0.36", "-1.26211, -40.6262, 14.506, 0.36", "-1.24798, -41.0723, 14.5351, 0.6", "-1.21435, -41.5914, 14.5583, 0.6", "-1.14732, -42.112, 14.5819, 0.6", "-1.04046, -42.6562, 14.5987, 0.6", "-0.879639, -43.2395, 14.608, 0.48", "-0.72435, -43.7102, 14.6319, 0.48", "-0.569624, -44.1424, 14.6778, 0.6", "-0.354786, -44.7398, 14.7835, 0.36", "-0.245381, -45.0798, 14.8561, 0.36", "-0.0613329, -45.7419, 14.9954, 0.36", "0.119237, -46.4865, 15.1585, 0.48", "0.211729, -46.9514, 15.2542, 0.48", "0.303924, -47.5636, 15.3615, 0.48", "0.367063, -48.1684, 15.4723, 0.48", "0.401446, -48.6043, 15.5613, 0.72", "0.427262, -48.9704, 15.6548, 0.72", "0.450136, -49.2314, 15.7253, 0.72", "0.504685, -49.6569, 15.8439, 0.84", "0.614041, -50.3751, 16.0715, 0.12", "0.699866, -50.8452, 16.2661, 0.12", "0.821788, -51.4443, 16.5592, 0.48", "0.878935, -51.7019, 16.7039, 0.6", "0.964009, -52.0598, 16.927, 0.6", "0.620031, -58.1622, 18.02, 0.6", "0.273745, -64.1852, 19.4573, 0.6", "-0.670651, -69.7616, 21.9194, 0.6", "-0.546478, -75.1862, 24.805, 0.6", "-0.0577791, -81.2362, 26.0479, 0.6", "0.305196, -87.4295, 26.3288, 0.6", "1.7664, -93.4306, 26.0629, 0.6", "3.44208, -99.3723, 26.1917, 0.6", "5.34506, -105.227, 25.8648, 0.6", "7.93967, -110.784, 26.0197, 0.6", "9.96891, -116.457, 27.2459, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "48.7363, 7.29938, 25.4022, 0.48", "57.3236, 11.3175, 30.67, 0.48", "64.7673, 16.3291, 36.8749, 0.48", "72.1523, 21.3576, 43.1395, 0.48", "80.5062, 25.6837, 48.5696, 0.48", "88.6373, 29.1502, 54.8395, 0.48", "96.5386, 31.1115, 61.9233, 0.48", "103.341, 33.4669, 69.9979, 0.48", "111.494, 34.9798, 76.8792, 0.48", "119.168, 35.0682, 84.4034, 0.48", "127.247, 36.7733, 91.3378, 0.48", "136.165, 38.7739, 97.0505, 0.48", "145.44, 41.6641, 101.758, 0.48", "154.31, 42.8914, 107.725, 0.48", "163.504, 44.0289, 113.187, 0.48", "173.393, 45.9578, 116.961, 0.48", "183.69, 48.3691, 118.924, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "48.7363, 7.29938, 25.4022, 0.36", "61.3931, 10.7024, 29.0286, 0.48", "74.4856, 14.3941, 29.9432, 0.48", "86.8151, 19.558, 32.833, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "2.17383, -16.9277, -27.752, 0.48", "0.656196, -16.7078, -31.9054, 0.48", "0.242132, -16.6172, -32.987, 0.48", "0.126203, -16.5941, -33.2374, 0.12", "-0.217036, -16.5249, -33.9713, 0.12", "-0.776972, -16.4251, -35.126, 0.72", "-1.18341, -16.3605, -35.991, 0.84", "-1.82206, -16.2736, -37.129, 0.12", "-2.57161, -16.1846, -38.5674, 0.12", "-3.2174, -16.1099, -39.798, 0.84", "-3.41901, -16.0972, -40.165, 0.84", "-4.20299, -16.1033, -41.508, 0.12", "-4.39629, -16.1126, -41.8276, 0.12", "-4.74287, -16.1316, -42.3057, 0.12", "-4.96091, -16.1368, -42.6014, 1.08", "-5.45381, -16.1348, -43.1588, 0.84", "-6.32919, -16.1064, -44.0732, 0.12", "-7.02376, -16.053, -44.7802, 0.12", "-7.28049, -16.01, -45.1823, 0.48", "-7.60872, -15.9156, -45.9042, 0.12", "-7.89949, -15.7959, -46.6635, 0.12", "-8.00766, -15.7099, -47.1227, 0.84", "-8.1891, -15.5202, -48.1164, 1.08", "-8.56306, -15.0861, -50.6911, 0.6", "-8.6702, -14.959, -51.4767, 0.84", "-8.7325, -14.8852, -51.9559, 0.84", "-9.10806, -14.4977, -54.7257, 0.12", "-9.19536, -14.4382, -55.1932, 0.12", "-9.35461, -14.3797, -55.7488, 0.12", "-9.49975, -14.3488, -56.0848, 0.48", "-9.81546, -14.3059, -56.7469, 0.12", "-10.5949, -14.2431, -58.1994, 0.12", "-10.9865, -14.2241, -58.7757, 0.12", "-11.5107, -14.1652, -59.5774, 0.84", "-11.7004, -14.1342, -59.868, 0.84", "-12.4425, -14.0093, -60.9627, 0.12", "-12.7189, -13.9624, -61.3511, 0.12", "-12.9943, -13.9126, -61.7219, 0.12", "-13.9501, -13.7368, -62.9334, 0.12", "-14.0957, -13.7055, -63.1117, 0.72", "-14.7478, -13.5451, -63.8915, 0.72", "-15.324, -13.387, -64.5748, 0.12", "-15.6605, -13.287, -65.0377, 0.12", "-16.1059, -13.1485, -65.7043, 0.48", "-16.6994, -12.9546, -66.6455, 0.12", "-16.8782, -12.8919, -66.9382, 0.12", "-17.2814, -12.7057, -67.7734, 0.72", "-17.7559, -12.4497, -68.9055, 0.12", "-17.8754, -12.3815, -69.2565, 0.12", "-17.9049, -12.3655, -69.3677, 0.6", "-18.0271, -12.3178, -69.8285, 0.6", "-18.5845, -12.1478, -71.8202, 0.48", "-18.7529, -12.1089, -72.3868, 0.48", "-19.243, -12.0606, -73.9718, 0.72", "-19.7267, -12.0697, -75.3794, 0.12", "-19.9134, -12.0965, -75.859, 0.12", "-20.146, -12.1565, -76.3928, 0.48", "-20.8522, -12.4276, -77.6749, 0.12", "-21.4887, -12.7648, -78.8215, 0.12", "-21.9385, -13.0577, -79.5435, 0.12", "-22.2654, -13.3083, -80.0223, 0.12", "-22.586, -13.6279, -80.5534, 0.6", "-22.8549, -13.9479, -81.0713, 0.6", "-23.4145, -14.6696, -82.1664, 0.12", "-23.6102, -14.9267, -82.5709, 0.12", "-23.8234, -15.1978, -83.0465, 0.12", "-24.4372, -15.8833, -84.2882, 0.12", "-24.937, -16.4059, -85.3426, 0.12", "-25.1458, -16.6006, -85.7764, 0.12", "-25.3419, -16.7461, -86.1205, 0.12", "-25.6101, -16.9208, -86.5724, 0.6", "-26.0925, -17.214, -87.3969, 0.6", "-27.2953, -17.831, -89.0421, 0.12", "-27.6017, -17.9897, -89.4349, 0.12", "-28.0804, -18.2346, -90.1059, 0.12", "-28.4012, -18.3772, -90.5394, 0.36", "-29.2611, -18.6855, -91.6159, 0.12", "-30.2062, -18.9378, -92.741, 0.12", "-30.9913, -19.1277, -93.5184, 0.36", "-31.6992, -19.293, -94.2128, 0.12", "-32.6083, -19.4888, -95.1268, 0.12", "-32.9559, -19.5427, -95.4533, 0.48", "-33.551, -19.6272, -96.0388, 0.12", "-34.1036, -19.7175, -96.6638, 0.12", "-34.4136, -19.7704, -97.0383, 0.36", "-34.8815, -19.8657, -97.7957, 0.12", "-35.1385, -19.8981, -98.6008, 0.12", "-35.3566, -19.8753, -99.7969, 0.6", "-35.3736, -19.8508, -100.055, 0.6", "-35.3588, -19.6347, -101.397, 0.12", "-35.1904, -19.2457, -103.152, 0.48", "-34.8102, -18.6334, -105.379, 0.12", "-34.6648, -18.4225, -105.989, 0.12", "-34.3035, -17.8958, -107.231, 0.12", "-34.1564, -17.7219, -107.662, 0.6", "-33.5374, -17.1135, -109.253, 0.48", "-32.9495, -16.6394, -110.667, 0.24", "-32.6572, -16.4607, -111.434, 0.24", "-31.8439, -16.0891, -113.948, 0.84", "-31.1072, -15.7926, -116.828, 0.48", "-31.0073, -15.7744, -117.338, 0.48", "-30.942, -15.7914, -117.853, 0.6", "-30.8012, -16.038, -120.382, 0.6", "-30.7551, -16.4541, -123.523, 0.12", "-30.8383, -16.7013, -125.03, 0.12", "-31.1123, -17.0353, -127.248, 0.12", "-31.2208, -17.1414, -128.072, 0.12", "-31.3435, -17.254, -128.958, 0.12" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.17383, -16.9277, -27.752, 0.12", "1.94584, -16.6391, -27.8419, 0.12", "1.65455, -16.2501, -27.9498, 0.12", "1.27969, -15.5879, -28.3462, 0.12", "1.12806, -15.2018, -28.6123, 0.6", "1.0201, -14.7157, -29.0112, 0.84", "0.975429, -14.4034, -29.2949, 0.6", "0.938498, -13.8633, -29.8143, 0.6", "1.01776, -12.3965, -31.4541, 0.12", "1.11368, -11.8177, -32.1811, 0.12", "1.26898, -10.9432, -33.3044, 0.72", "1.37102, -10.3212, -34.0995, 0.72", "1.40844, -10.0107, -34.4853, 0.72", "1.51786, -8.96203, -35.7705, 0.72", "1.55284, -8.06121, -36.837, 0.12", "1.56171, -7.32863, -37.7396, 0.12", "1.55007, -6.94679, -38.1836, 0.12", "1.52909, -6.5283, -38.6295, 0.72", "1.44269, -5.53607, -39.6398, 0.84", "1.27282, -4.53873, -40.5631, 0.12", "1.20217, -4.17369, -40.9213, 0.12", "1.01672, -3.18929, -41.9391, 0.12", "0.85765, -2.46249, -42.6667, 0.12", "0.758172, -1.91875, -43.1972, 0.6", "0.662187, -1.4154, -43.6458, 0.6", "0.485392, -0.398215, -44.5186, 0.12", "0.430434, -0.00626752, -44.8659, 0.12", "0.354787, 0.606169, -45.4145, 0.12", "0.13086, 2.34943, -46.9728, 0.12", "0.0751289, 2.86709, -47.4635, 0.12", "0.0483556, 3.16695, -47.7543, 0.48", "-0.0673984, 4.2034, -48.7325, 0.36", "-0.0919166, 4.44716, -49.0103, 0.36", "-0.147598, 4.84893, -49.4924, 0.72", "-0.420111, 6.18303, -51.0592, 0.12", "-0.472044, 6.60817, -51.6138, 0.12", "-0.480173, 6.95017, -52.0865, 0.6", "-0.441584, 8.30248, -54.0304, 0.12", "-0.404657, 9.19541, -55.3314, 0.12", "-0.391747, 9.53159, -55.8151, 0.96", "-0.379082, 10.8195, -57.5873, 0.96", "-0.364312, 11.4295, -58.4647, 0.12", "-0.358868, 11.6353, -58.748, 0.12", "-0.362258, 12.0154, -59.2083, 0.12", "-0.353505, 12.2705, -59.5435, 0.12", "-0.356227, 13.1755, -60.5179, 0.12", "-0.385631, 13.8806, -61.1435, 0.84", "-0.397616, 14.415, -61.5652, 0.96", "-0.398594, 14.6858, -61.7624, 0.96", "-0.365215, 16.1022, -62.8112, 0.12", "-0.353877, 17.4752, -63.7759, 0.12", "-0.367391, 19.0658, -64.8203, 0.12", "-0.375706, 20.2924, -65.5939, 0.12", "-0.37864, 20.8424, -65.9219, 0.72", "-0.403213, 22.4041, -66.7937, 0.12", "-0.462255, 23.9225, -67.5597, 0.12", "-0.474679, 24.1359, -67.6654, 0.48", "-0.488617, 24.2904, -67.7318, 0.12", "-0.633719, 25.4205, -68.2101, 0.12", "-0.87192, 26.5927, -68.6398, 0.6", "-0.977942, 26.9891, -68.77, 0.12", "-1.31588, 28.1531, -69.1766, 0.12", "-1.5178, 28.8483, -69.4139, 0.36", "-1.60529, 29.15, -69.5138, 0.12", "-2.14026, 31.1103, -70.0949, 0.12", "-2.29683, 31.7326, -70.2479, 0.72", "-2.47073, 32.5296, -70.4265, 0.48", "-2.54259, 33.0605, -70.527, 0.12", "-2.55218, 33.2192, -70.5621, 0.12", "-2.55737, 34.9449, -70.98, 0.12", "-2.53786, 35.3649, -71.0843, 0.24", "-2.53104, 35.5985, -71.1401, 0.12", "-2.50659, 37.2103, -71.5419, 0.12", "-2.49596, 38.5392, -71.9404, 0.48", "-2.49415, 38.8994, -72.0582, 0.12", "-2.48, 40.5273, -72.6289, 0.12", "-2.46564, 41.8077, -73.0765, 0.12", "-2.4608, 42.4911, -73.3283, 0.6", "-2.47369, 43.5134, -73.7082, 0.12", "-2.50779, 44.691, -74.0984, 0.12", "-2.51519, 45.0383, -74.2233, 0.48", "-2.51818, 45.4357, -74.39, 0.48", "-2.52011, 46.065, -74.6747, 0.12", "-2.53778, 47.2426, -75.1714, 0.12", "-2.55745, 47.8167, -75.3422, 0.48" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.2314, -48.9142, -5.46791, 0.72", "-14.0947, -50.0088, -5.57488, 0.72", "-14.4956, -50.55, -5.66291, 0.48", "-15.0621, -51.38, -5.77588, 0.48", "-15.7386, -52.448, -5.90552, 0.48", "-16.0425, -52.9405, -5.95945, 0.6", "-16.698, -54.0117, -6.06707, 0.84", "-16.9375, -54.4202, -6.12038, 0.96", "-17.4525, -55.2764, -6.21808, 0.48", "-17.7665, -55.7795, -6.26603, 0.36", "-18.3663, -56.683, -6.29756, 0.36", "-18.8481, -57.3706, -6.28281, 0.72", "-19.2537, -57.9204, -6.23794, 0.36", "-19.604, -58.3802, -6.20611, 0.72", "-20.0598, -58.9769, -6.17929, 1.08", "-20.5326, -59.6347, -6.16171, 1.08", "-20.8752, -60.1619, -6.15926, 0.72", "-21.2054, -60.704, -6.17091, 0.72", "-21.4705, -61.1491, -6.19245, 0.72", "-21.8606, -61.7821, -6.24196, 0.72", "-22.3825, -62.6103, -6.33163, 0.36", "-22.7478, -63.1856, -6.4131, 0.36", "-23.1417, -63.8218, -6.4956, 0.48", "-23.5138, -64.4751, -6.56864, 0.48", "-23.8052, -65.0673, -6.61913, 0.36", "-24.0455, -65.6556, -6.67794, 0.48", "-24.2268, -66.1883, -6.73248, 0.48", "-24.5267, -67.2042, -6.85185, 0.48", "-24.7601, -68.1162, -6.98482, 0.48", "-24.9934, -69.1364, -7.15251, 0.48", "-25.2099, -70.1428, -7.33071, 0.36", "-25.3821, -70.9078, -7.47375, 0.6", "-25.6178, -71.8105, -7.6464, 0.72", "-25.8031, -72.4181, -7.77388, 0.36", "-26.0007, -72.9698, -7.87543, 0.48", "-26.2318, -73.5097, -7.94981, 0.48", "-26.5084, -74.0689, -8.01745, 0.36", "-26.915, -74.7984, -8.17546, 0.36", "-27.3307, -75.4578, -8.39381, 0.48", "-27.7154, -75.9977, -8.6125, 0.6", "-28.3574, -76.8652, -9.04432, 0.96", "-29.0501, -77.7917, -9.57233, 0.96", "-29.7705, -78.8157, -10.1908, 0.48", "-30.2576, -79.5968, -10.6633, 0.48", "-30.6203, -80.2318, -11.0351, 0.6", "-31.0901, -81.1215, -11.5369, 0.84", "-31.3721, -81.6877, -11.8105, 0.6", "-31.7227, -82.387, -12.0766, 0.72", "-32.1999, -83.3078, -12.3436, 0.36", "-32.5066, -83.8808, -12.4925, 0.36", "-32.8584, -84.5297, -12.6502, 0.48", "-33.3244, -85.3872, -12.8369, 0.48", "-33.7402, -86.1854, -13.0162, 0.48", "-34.04, -86.7846, -13.1553, 0.6", "-34.3148, -87.3604, -13.2881, 0.84", "-34.6725, -88.2038, -13.4812, 0.84", "-35.0698, -89.1956, -13.7011, 0.84", "-35.361, -89.9268, -13.8524, 0.48", "-35.6483, -90.5967, -13.9747, 0.48", "-35.9731, -91.2667, -14.1079, 0.6", "-36.2301, -91.7253, -14.2132, 0.6", "-36.6287, -92.3503, -14.3822, 0.36", "-36.9488, -92.822, -14.5211, 0.36", "-37.2037, -93.2259, -14.6381, 0.36", "-37.4638, -93.6879, -14.7614, 0.6", "-37.7206, -94.2118, -14.8843, 0.84", "-37.9763, -94.774, -14.9951, 0.84", "-38.3872, -95.7556, -15.1828, 0.36", "-38.7632, -96.6317, -15.3407, 0.36", "-39.0199, -97.1995, -15.4442, 0.36", "-39.1891, -97.5267, -15.5051, 0.72", "-39.5445, -98.0946, -15.651, 0.96", "-40.121, -98.8738, -15.9294, 0.36", "-40.4776, -99.2938, -16.1203, 0.36", "-40.7437, -99.6028, -16.2746, 0.72", "-41.1048, -100.064, -16.5, 0.72", "-41.6756, -100.863, -16.8705, 0.36", "-41.8149, -101.067, -16.9579, 0.36", "-42.1925, -101.615, -17.1822, 0.48", "-42.7438, -102.443, -17.5321, 0.48", "-43.1643, -103.125, -17.8022, 0.48", "-43.4219, -103.592, -17.9992, 0.48", "-43.6825, -104.114, -18.2575, 0.48", "-43.9241, -104.579, -18.5394, 0.36", "-44.1511, -104.962, -18.8222, 0.6", "-44.4653, -105.434, -19.2333, 0.72", "-44.83, -105.947, -19.6884, 0.72", "-45.1906, -106.469, -20.132, 0.48", "-45.3468, -106.695, -20.3123, 0.36", "-45.5693, -107.051, -20.619, 0.36", "-45.7469, -107.313, -20.9016, 0.6", "-46.038, -107.683, -21.3739, 0.6", "-46.377, -108.082, -21.9106, 0.6", "-46.5614, -108.292, -22.2168, 0.6", "-47.3723, -109.277, -23.6862, 0.72", "-47.7476, -109.8, -24.4448, 0.48", "-47.9277, -110.091, -24.8309, 0.48", "-48.0365, -110.286, -25.069, 0.48", "-48.2133, -110.558, -25.3741, 0.72", "-48.4388, -110.82, -25.687, 0.84", "-48.7773, -111.157, -26.1063, 0.84", "-49.1546, -111.585, -26.6646, 0.48", "-49.3309, -111.792, -26.9769, 0.48", "-49.7442, -112.282, -27.7208, 0.72", "-50.3354, -113.003, -28.7971, 0.72", "-50.8359, -113.704, -29.7392, 0.36", "-50.957, -113.903, -29.9867, 0.36", "-51.182, -114.337, -30.5052, 0.36", "-51.4609, -114.952, -31.2822, 0.6", "-51.5466, -115.188, -31.5903, 0.84", "-51.7961, -115.929, -32.5593, 0.36", "-51.944, -116.409, -33.2193, 0.48", "-52.085, -116.932, -34.093, 0.96", "-52.2435, -117.578, -35.3963, 0.96", "-52.4155, -118.111, -36.7355, 0.48", "-52.4472, -118.18, -36.9787, 0.48", "-52.5266, -118.336, -37.6856, 0.72", "-52.6744, -118.745, -39.446, 0.36", "-52.697, -118.887, -40.0083, 0.6", "-52.7163, -119.106, -40.7829, 0.72", "-52.8445, -120.153, -44.2942, 0.48", "-52.8713, -120.304, -44.7528, 0.36", "-52.9264, -120.558, -45.4298, 0.36", "-52.948, -120.773, -45.8497, 0.36", "-52.9658, -120.972, -46.2118, 0.36", "-52.9766, -121.207, -46.638, 0.48", "-53.0368, -121.445, -47.0431, 0.48", "-53.0549, -121.779, -47.8716, 0.36", "-53.0378, -121.898, -48.192, 0.36", "-52.8822, -122.31, -49.2369, 0.36", "-52.605, -122.778, -50.4226, 0.48", "-52.4904, -122.949, -50.8457, 0.6", "-51.9985, -123.647, -52.4271, 0.36", "-51.8311, -123.886, -52.9102, 0.36", "-51.6372, -124.189, -53.4529, 0.48", "-51.4221, -124.726, -54.2476, 0.12", "-51.3879, -125.069, -54.7236, 0.12", "-51.3964, -125.205, -54.9094, 0.12", "-51.4138, -125.276, -54.9992, 0.6", "-51.5171, -125.546, -55.365, 0.84", "-51.9278, -126.426, -56.492, 0.6", "-52.2392, -127.124, -57.2342, 0.6", "-52.3111, -127.274, -57.4207, 0.12", "-52.5073, -127.583, -57.865, 0.12", "-52.6171, -127.721, -58.1006, 0.24", "-52.8695, -127.983, -58.588, 0.24", "-53.0944, -128.178, -58.9547, 0.24", "-54.1149, -128.905, -60.3697, 0.48", "-54.4877, -129.159, -60.8679, 0.48", "-54.9493, -129.492, -61.5109, 0.48", "-55.1827, -129.679, -61.8644, 0.36", "-55.3454, -129.827, -62.1515, 0.12", "-55.8553, -130.269, -62.9398, 0.12", "-56.1256, -130.514, -63.2217, 0.48", "-56.4839, -130.893, -63.7153, 0.6", "-56.8746, -131.369, -64.3876, 0.6", "-57.2032, -131.878, -65.1942, 0.12", "-57.49, -132.581, -66.3583, 0.12", "-57.7202, -133.499, -67.9656, 0.12", "-58.0536, -134.814, -70.4011, 0.12", "-58.0852, -134.935, -70.6152, 0.12", "-58.1237, -135.104, -70.8904, 0.12", "-58.199, -135.428, -71.3828, 0.72", "-58.2203, -135.632, -71.6621, 0.84", "-58.2477, -135.76, -71.8516, 0.84", "-58.3607, -135.968, -72.0873, 0.48", "-58.6841, -136.527, -72.7488, 0.12", "-58.8765, -136.888, -73.1584, 0.12", "-59.1225, -137.526, -73.9374, 0.36", "-59.2629, -138.124, -74.6644, 0.12", "-59.3171, -138.405, -75.0418, 0.12", "-59.3492, -138.613, -75.3394, 0.48", "-59.3946, -138.905, -75.7614, 0.6", "-59.5784, -139.702, -76.9617, 0.12", "-59.6717, -139.933, -77.3586, 0.12", "-59.8183, -140.325, -77.9817, 0.12", "-59.8819, -140.442, -78.1691, 0.12", "-60.0301, -140.648, -78.4961, 0.48", "-60.2333, -140.908, -78.8562, 0.84", "-61.1351, -142.129, -80.2583, 0.36", "-61.3276, -142.423, -80.5595, 0.36", "-61.7425, -143.161, -81.2162, 0.36", "-62.1369, -143.814, -81.7399, 0.6", "-62.4565, -144.32, -82.1239, 0.6", "-62.8967, -144.982, -82.5706, 0.6", "-63.2124, -145.425, -82.813, 0.6", "-63.5711, -145.925, -83.0928, 0.12", "-64.3939, -147.093, -83.7266, 0.12", "-64.8081, -147.619, -83.9987, 0.6", "-65.1207, -147.98, -84.1857, 0.6", "-65.2891, -148.165, -84.2716, 0.6", "-65.6395, -148.548, -84.4426, 0.12", "-65.9024, -148.848, -84.5749, 0.12", "-66.0068, -148.963, -84.629, 0.12", "-66.1931, -149.113, -84.702, 0.12", "-66.5604, -149.354, -84.8825, 0.12", "-66.8868, -149.541, -85.0553, 0.12", "-67.4198, -149.781, -85.3288, 0.6", "-68.0499, -150.027, -85.7692, 0.6", "-68.4724, -150.191, -86.1151, 0.6", "-69.2391, -150.521, -86.8177, 0.12", "-69.4144, -150.604, -86.9841, 0.12", "-69.9644, -150.899, -87.4983, 0.48", "-71.0342, -151.549, -88.4377, 0.12", "-71.3338, -151.765, -88.7108, 0.12", "-71.6963, -152.071, -89.021, 0.12", "-72.2264, -152.596, -89.4885, 0.12", "-72.5815, -153.008, -89.8138, 0.6", "-72.7679, -153.277, -89.9834, 0.6", "-73.1352, -153.908, -90.4147, 0.24", "-73.3524, -154.329, -90.7722, 0.24", "-73.7451, -155.14, -91.5599, 0.24", "-73.8635, -155.418, -91.8417, 0.48", "-74.0359, -155.869, -92.3417, 0.48", "-74.4688, -157.162, -93.86, 0.36", "-74.5338, -157.385, -94.1416, 0.36", "-74.6552, -157.731, -94.6019, 0.36", "-74.7652, -158.03, -94.9746, 0.36", "-75.0133, -158.75, -95.8467, 0.48", "-75.1626, -159.187, -96.3732, 0.48", "-75.3066, -159.697, -96.8616, 0.12", "-75.4194, -160.331, -97.4699, 0.12", "-75.4508, -160.778, -97.8946, 0.12", "-75.4573, -160.953, -98.0537, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-13.2314, -48.9142, -5.46791, 0.48", "-13.1703, -49.8485, -5.24221, 0.48", "-13.1213, -50.5992, -5.06861, 0.6", "-13.0248, -51.6318, -4.85241, 0.6", "-12.9375, -52.3842, -4.7082, 0.6", "-12.8604, -52.9927, -4.60173, 0.36", "-12.7925, -53.4171, -4.50427, 0.36", "-12.7496, -53.6388, -4.43118, 0.36", "-12.6056, -54.1407, -4.2644, 0.6", "-12.5263, -54.3635, -4.20088, 0.72", "-12.4003, -54.6453, -4.09233, 0.72", "-11.9297, -55.5674, -3.66485, 0.72", "-11.7604, -55.8832, -3.50755, 0.72", "-11.4796, -56.3853, -3.23478, 0.24", "-11.1814, -56.904, -2.94675, 0.24", "-10.7998, -57.534, -2.62131, 0.48", "-10.4974, -58.0077, -2.38754, 0.6", "-10.1712, -58.5041, -2.17212, 0.6", "-9.5946, -59.3543, -1.77737, 0.36", "-9.38792, -59.6551, -1.63921, 0.36", "-8.98678, -60.252, -1.37595, 0.36", "-8.74622, -60.6377, -1.20947, 0.6", "-8.53004, -61.009, -1.04374, 0.6", "-8.18029, -61.6866, -0.732115, 0.36", "-7.95575, -62.1679, -0.505404, 0.36", "-7.73326, -62.6559, -0.273538, 0.36", "-7.43178, -63.3047, 0.0855401, 0.48", "-7.25805, -63.6585, 0.296496, 0.48", "-7.08652, -63.9936, 0.510599, 0.48", "-6.77421, -64.5599, 0.874662, 0.48", "-6.40781, -65.1908, 1.29892, 0.48", "-5.85992, -66.1353, 1.88992, 0.48", "-5.64699, -66.5269, 2.10935, 0.36", "-5.55599, -66.7007, 2.20204, 0.36", "-5.39661, -67.0289, 2.34627, 0.48", "-5.18259, -67.5485, 2.53182, 0.36", "-4.96416, -68.1499, 2.71635, 0.36", "-4.79143, -68.6593, 2.83345, 0.48", "-4.52805, -69.3936, 3.0108, 0.36", "-4.17884, -70.2735, 3.22788, 0.36", "-3.85432, -71.029, 3.41936, 0.36", "-3.50974, -71.7612, 3.60304, 0.36", "-3.25011, -72.2681, 3.74664, 0.36", "-2.8209, -73.0523, 3.97506, 0.36", "-2.46475, -73.712, 4.15407, 0.48", "-2.15738, -74.2965, 4.30654, 0.84", "-1.7942, -75.004, 4.46109, 0.48", "-1.53963, -75.5256, 4.59924, 0.24", "-1.26467, -76.1417, 4.78389, 0.24", "-0.949921, -76.9135, 5.0181, 0.24", "-0.674963, -77.618, 5.23929, 0.24", "-0.450176, -78.1769, 5.446, 0.24", "-0.0309792, -79.2061, 5.85533, 0.72", "0.0908229, -79.4977, 5.97082, 0.72", "0.377899, -80.1685, 6.22176, 0.36", "0.627341, -80.7254, 6.40345, 0.36", "1.11785, -81.8668, 6.6805, 0.24", "1.3998, -82.5967, 6.78879, 0.24", "1.5978, -83.1528, 6.82984, 0.24", "1.82419, -83.8574, 6.87803, 0.24", "1.96997, -84.3898, 6.90562, 0.36", "2.10026, -84.9368, 6.9155, 0.36", "2.20871, -85.4796, 6.89663, 0.48", "2.33458, -86.1891, 6.8978, 0.48", "2.40405, -86.63, 6.91269, 0.48", "2.46776, -87.0801, 6.94139, 0.6", "2.52588, -87.518, 6.95966, 0.72", "2.59606, -88.0568, 6.96642, 0.72", "2.69851, -88.8316, 6.95421, 0.24", "2.79181, -89.4882, 6.94727, 0.24", "2.86661, -89.9236, 6.95274, 0.48", "2.98189, -90.5014, 6.96952, 0.6", "3.15781, -91.275, 7.00539, 0.36", "3.38807, -92.1548, 7.05855, 0.36", "3.62373, -92.9855, 7.09408, 0.36", "3.80221, -93.6023, 7.10635, 0.36", "3.9004, -93.9273, 7.10466, 0.24", "3.91945, -93.9886, 7.10575, 0.48", "4.13934, -94.6932, 7.12512, 0.6", "4.33411, -95.2887, 7.13664, 0.36", "4.49888, -95.8041, 7.13782, 0.36", "4.57212, -96.0389, 7.14495, 0.48", "4.81057, -96.8205, 7.17549, 0.48", "4.93991, -97.2403, 7.20371, 0.36", "5.17175, -97.9878, 7.27314, 0.36", "5.40301, -98.7412, 7.35355, 0.36", "5.60672, -99.4027, 7.42435, 0.36", "5.86091, -100.261, 7.50361, 0.36", "6.11157, -101.117, 7.55743, 0.36", "6.20913, -101.45, 7.58147, 0.48", "6.32886, -101.872, 7.61749, 0.48", "6.48989, -102.392, 7.67786, 0.48", "6.70881, -103.046, 7.76202, 0.48", "6.94394, -103.689, 7.84152, 0.48", "7.22283, -104.434, 7.91388, 0.6", "7.31282, -104.665, 7.93174, 0.6", "7.59754, -105.375, 7.97046, 0.36", "7.95729, -106.231, 7.99416, 0.36", "8.21347, -106.818, 8.00632, 0.36", "8.58885, -107.63, 8.01212, 0.36", "8.96877, -108.418, 8.00082, 0.36", "9.22186, -108.95, 7.97872, 0.36", "9.427, -109.393, 7.93185, 0.36", "9.56287, -109.679, 7.89225, 0.48", "9.7981, -110.175, 7.81115, 0.48", "10.0976, -110.826, 7.69275, 0.48", "10.4078, -111.547, 7.55458, 0.48", "10.738, -112.364, 7.39609, 0.48", "10.8715, -112.73, 7.326, 0.48", "11.1066, -113.408, 7.20034, 0.48", "11.2736, -113.924, 7.10928, 0.48", "11.35, -114.154, 7.06782, 0.6", "11.4327, -114.382, 7.02905, 0.72", "11.6177, -114.9, 6.958, 0.48", "11.817, -115.451, 6.87707, 0.48", "11.9051, -115.678, 6.84215, 0.48", "12.1741, -116.296, 6.74715, 0.36", "12.4042, -116.787, 6.67178, 0.36", "12.6042, -117.177, 6.61114, 0.36", "12.9089, -117.729, 6.52805, 0.36", "13.1776, -118.193, 6.47693, 0.48", "13.5232, -118.799, 6.43169, 0.6", "14.0978, -119.829, 6.38725, 0.48", "14.4711, -120.508, 6.36618, 0.36", "14.9638, -121.404, 6.33137, 0.36", "15.283, -122.019, 6.30388, 0.6", "15.6166, -122.706, 6.25278, 0.6", "15.944, -123.42, 6.18241, 0.6", "16.258, -124.138, 6.08009, 0.6", "16.7211, -125.233, 5.88083, 0.48", "17.2406, -126.522, 5.60456, 0.48", "17.5206, -127.231, 5.43493, 0.48", "17.9255, -128.249, 5.1658, 0.48", "18.2162, -128.985, 4.95839, 0.24", "18.4651, -129.642, 4.76901, 0.24", "18.8662, -130.744, 4.44522, 0.24", "19.0699, -131.326, 4.27689, 0.24", "19.29, -131.987, 4.11064, 0.6", "19.3779, -132.273, 4.05274, 0.84", "19.5053, -132.705, 3.9931, 0.84", "19.6807, -133.324, 3.9289, 0.48", "19.9433, -134.294, 3.86717, 0.36", "20.1087, -134.962, 3.85255, 0.36", "20.2896, -135.709, 3.87161, 0.36", "20.4373, -136.274, 3.89227, 0.36", "20.6008, -136.813, 3.91615, 0.36", "20.7359, -137.221, 3.93745, 0.48", "20.965, -137.878, 3.95678, 0.48", "21.1021, -138.271, 3.95671, 0.36", "21.3624, -138.996, 3.9305, 0.36", "21.6172, -139.651, 3.90317, 0.36", "21.8325, -140.145, 3.87652, 0.36", "22.2818, -141.036, 3.81511, 0.36", "22.5492, -141.521, 3.76173, 0.36", "22.9395, -142.188, 3.66475, 0.36", "23.3061, -142.773, 3.56436, 0.48", "23.6962, -143.342, 3.45237, 0.48", "24.3782, -144.243, 3.25612, 0.48", "24.725, -144.656, 3.17889, 0.12", "25.073, -145.056, 3.12194, 0.12", "25.3683, -145.406, 3.09075, 0.24", "25.6119, -145.712, 3.08141, 0.24", "26.104, -146.315, 3.09621, 0.12", "26.664, -146.957, 3.1422, 0.36", "27.0293, -147.349, 3.20233, 0.6", "27.3276, -147.662, 3.25682, 0.36", "27.6411, -147.993, 3.29923, 0.36", "28.3618, -148.773, 3.35657, 0.36", "28.6589, -149.105, 3.35982, 0.36", "29.1366, -149.73, 3.31544, 0.24", "29.3812, -150.111, 3.28786, 0.24", "29.6865, -150.72, 3.22822, 0.36", "29.793, -151.017, 3.17721, 0.36", "29.8699, -151.337, 3.10217, 0.36", "30.054, -152.166, 2.87052, 0.36", "30.1804, -152.698, 2.74272, 0.48", "30.3146, -153.186, 2.67904, 0.48", "30.4998, -153.753, 2.65808, 0.12", "30.786, -154.583, 2.65851, 0.12", "30.9207, -154.956, 2.67069, 0.48", "31.3336, -155.939, 2.7446, 0.12", "31.6786, -156.652, 2.82547, 0.12", "31.8641, -156.995, 2.87722, 0.6", "32.1835, -157.549, 2.9662, 0.12", "32.3916, -157.882, 2.97519, 0.12", "32.7196, -158.391, 2.91169, 0.12", "32.9581, -158.759, 2.78362, 0.12", "33.0807, -158.961, 2.72471, 0.72", "33.3305, -159.436, 2.62231, 0.72", "33.7327, -160.282, 2.50044, 0.48", "33.8482, -160.588, 2.46164, 0.48", "34.0701, -161.318, 2.38388, 0.12", "34.4948, -162.923, 2.24873, 0.12", "34.5798, -163.26, 2.22852, 0.12", "34.6628, -163.649, 2.21988, 0.6", "34.8173, -164.466, 2.23752, 0.12", "34.8487, -164.644, 2.23441, 0.12", "34.9863, -165.463, 2.1847, 0.12", "35.0485, -165.909, 2.11435, 0.12", "35.0928, -166.366, 2.05694, 0.48", "35.1115, -166.696, 2.0347, 0.12", "35.1196, -167.47, 2.03019, 0.12", "35.1233, -168.17, 2.03333, 0.12", "35.1235, -168.569, 2.02033, 0.96", "35.1292, -169.158, 1.97974, 0.48", "35.1434, -169.668, 1.93009, 0.36", "35.1465, -169.979, 1.89146, 0.36", "35.1333, -170.591, 1.804, 0.36", "35.0841, -171.389, 1.68326, 0.24", "35.03, -172.147, 1.53954, 0.24", "34.9978, -172.469, 1.46869, 0.24", "34.9763, -172.716, 1.40878, 0.6", "34.9367, -173.259, 1.28529, 0.72", "34.903, -173.648, 1.20702, 0.84", "34.8703, -174.281, 1.10855, 0.12", "34.8635, -174.615, 1.04096, 0.12", "34.8622, -175.196, 0.912542, 0.12", "34.8738, -175.618, 0.815864, 0.12", "34.8903, -175.832, 0.765569, 0.12", "34.9441, -176.26, 0.673533, 0.6", "35.0172, -176.815, 0.579909, 0.12", "35.0868, -177.457, 0.479373, 0.12", "35.1046, -177.699, 0.431932, 0.48", "35.1476, -178.229, 0.316254, 0.48", "35.2031, -178.708, 0.207785, 0.48", "35.3342, -179.55, 0.0202123, 0.48", "35.4253, -180.025, -0.0774704, 0.6", "35.5802, -180.78, -0.270566, 0.12", "35.6775, -181.294, -0.415847, 0.12", "35.7729, -181.819, -0.576165, 0.24", "35.8814, -182.366, -0.7504, 0.24", "36.0338, -183.007, -0.980269, 0.48", "36.1812, -183.565, -1.19611, 0.12", "36.2793, -183.969, -1.34916, 0.12", "36.3158, -184.194, -1.44047, 0.6", "36.3352, -184.516, -1.57035, 0.6", "36.2981, -185.208, -1.93123, 0.12", "36.2235, -185.711, -2.21767, 0.12", "36.1614, -186.006, -2.38716, 0.12", "36.0732, -186.327, -2.58326, 0.6", "35.8997, -186.855, -2.89428, 0.6", "35.4678, -188.053, -3.58532, 0.12", "35.2607, -188.587, -3.9015, 0.12", "35.215, -188.721, -3.97843, 0.36", "35.1825, -188.866, -4.05523, 0.12", "35.1019, -189.452, -4.33128, 0.12", "35.0617, -190.005, -4.54598, 0.84", "35.03, -190.817, -4.7753, 0.12", "34.9984, -191.659, -5.05932, 0.12", "34.9614, -192.525, -5.40904, 0.12", "34.9451, -192.843, -5.54818, 0.72", "34.912, -193.345, -5.7731, 0.96", "34.8867, -193.667, -5.90913, 0.96", "34.7787, -194.756, -6.34068, 0.48", "34.693, -195.33, -6.57595, 0.12", "34.5578, -196.024, -6.87771, 0.12", "34.396, -196.709, -7.16302, 0.12", "34.31, -197.009, -7.27161, 0.12", "34.13, -197.542, -7.42579, 0.12", "33.9495, -197.985, -7.53712, 0.96", "33.598, -198.728, -7.75256, 0.12", "33.2881, -199.319, -7.96529, 0.12", "32.8608, -200.077, -8.27982, 0.12", "32.6782, -200.391, -8.42947, 0.12", "32.2013, -201.23, -8.84821, 0.48", "32.0434, -201.511, -8.99154, 0.12", "31.8575, -201.837, -9.23413, 0.12", "31.8029, -201.94, -9.33259, 0.36", "31.6607, -202.206, -9.61727, 0.12", "31.3259, -202.842, -10.3302, 0.12", "31.0372, -203.395, -10.9637, 1.32", "30.2739, -204.816, -12.6798, 0.84", "30.169, -204.998, -12.9239, 0.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.93123, -43.2574, -18.3503, 0.36", "-4.96982, -43.8744, -19.0142, 0.36", "-4.97061, -44.2357, -19.3956, 0.36", "-4.9556, -44.5558, -19.6938, 0.6", "-4.91552, -44.9566, -20.0307, 0.96", "-4.87192, -45.2214, -20.217, 0.84", "-4.67992, -46.0306, -20.6897, 0.36", "-4.56156, -46.337, -20.8119, 0.36", "-4.29772, -46.8861, -20.9737, 0.36", "-4.13476, -47.1937, -21.0315, 0.48", "-3.78852, -47.824, -21.0967, 0.48", "-3.48952, -48.3425, -21.127, 0.12", "-3.14722, -48.9012, -21.1354, 0.12", "-2.8836, -49.2876, -21.1611, 0.12", "-2.79415, -49.4147, -21.1755, 0.84", "-2.60615, -49.6982, -21.2227, 0.84", "-2.32324, -50.1671, -21.3448, 0.36", "-2.13448, -50.5082, -21.4469, 0.12", "-1.74739, -51.2185, -21.6817, 0.12", "-1.62364, -51.4218, -21.7532, 0.48", "-1.49669, -51.6251, -21.8296, 0.48", "-1.2961, -51.9481, -21.9499, 0.36", "-1.21038, -52.1148, -22.013, 0.36", "-1.07406, -52.4605, -22.1743, 0.48", "-0.975411, -52.8813, -22.481, 0.36", "-0.917334, -53.2087, -22.7573, 0.48", "-0.892941, -53.4104, -22.9415, 0.72", "-0.875929, -53.7808, -23.3112, 0.72", "-0.886934, -54.1871, -23.724, 0.72", "-0.929976, -54.9979, -24.5782, 0.12", "-0.935176, -55.1469, -24.7373, 0.12", "-0.932847, -55.1902, -24.7834, 0.48", "-0.876783, -55.5624, -25.1767, 0.48", "-0.753626, -56.0242, -25.6156, 0.12", "-0.646556, -56.332, -25.8912, 0.12", "-0.558309, -56.5516, -26.0662, 0.12", "-0.498737, -56.7236, -26.2043, 0.48", "-0.401385, -57.0488, -26.4726, 0.84", "-0.285624, -57.4791, -26.8208, 0.84", "-0.178078, -58.0734, -27.2765, 0.12", "-0.173573, -58.1292, -27.3178, 0.12", "-0.172696, -58.4942, -27.5741, 0.12", "-0.212338, -58.9346, -27.9263, 0.12", "-0.246427, -59.2007, -28.1458, 0.12", "-0.300306, -59.6801, -28.528, 0.12", "-0.338851, -60.064, -28.8407, 0.84", "-0.362808, -60.3655, -29.101, 0.72", "-0.40866, -61.2811, -29.9186, 0.24", "-0.417865, -61.4477, -30.1026, 0.24", "-0.421462, -61.8426, -30.6136, 0.24", "-0.384408, -62.2248, -31.1621, 0.6", "-0.343716, -62.4557, -31.5024, 0.84", "-0.310569, -62.5731, -31.6811, 0.6", "0.0360908, -63.4958, -33.0077, 0.12", "0.0887999, -63.6283, -33.2053, 0.12", "0.165748, -63.813, -33.4857, 0.12", "0.185659, -63.8615, -33.5456, 0.48", "0.254492, -64.0612, -33.7484, 0.48", "0.315506, -64.2858, -33.9067, 0.48", "0.395293, -64.666, -34.0448, 0.36", "0.436671, -64.9019, -34.1286, 0.36", "0.50505, -65.3134, -34.2676, 0.36", "0.569837, -65.672, -34.4065, 0.12", "0.637271, -66.0417, -34.5568, 0.12", "0.687593, -66.3171, -34.6718, 0.6", "0.749908, -66.6587, -34.8083, 0.84", "0.801396, -66.9235, -34.9139, 0.84", "0.905306, -67.4843, -35.1647, 0.36", "0.954867, -67.7933, -35.3149, 0.36", "0.992019, -68.0869, -35.4744, 0.48", "1.02337, -68.3311, -35.6134, 0.48", "1.06005, -68.5809, -35.7531, 0.72", "1.1538, -69.1243, -36.0258, 0.72", "1.24313, -69.5475, -36.2101, 0.36", "1.26961, -69.6514, -36.2599, 0.24", "1.35061, -69.919, -36.3891, 0.12", "1.50688, -70.3657, -36.58, 0.12", "1.65087, -70.7375, -36.6971, 0.12", "1.67881, -70.8008, -36.709, 0.48", "1.87951, -71.2202, -36.7843, 0.6", "1.9738, -71.4113, -36.8215, 0.6", "2.19172, -71.8301, -36.9058, 0.12", "2.47043, -72.3438, -37.0078, 0.12", "2.61366, -72.5997, -37.0558, 0.36", "2.7959, -72.9331, -37.111, 0.12", "2.99355, -73.2991, -37.1734, 0.12", "3.24683, -73.7932, -37.2798, 0.12", "3.36562, -74.0426, -37.3439, 0.12", "3.4677, -74.267, -37.4007, 0.48", "3.57753, -74.5221, -37.4601, 0.48", "3.70197, -74.8226, -37.5281, 0.12", "3.98868, -75.5652, -37.7139, 0.12", "4.03199, -75.6953, -37.7458, 0.48", "4.09764, -75.9026, -37.7935, 0.48", "4.15758, -76.1121, -37.8402, 0.48", "4.22254, -76.3497, -37.8886, 0.12", "4.30916, -76.6869, -37.9453, 0.12", "4.47004, -77.3733, -38.0586, 0.12", "4.53619, -77.6786, -38.1042, 0.24", "4.57963, -77.8689, -38.1267, 0.12", "4.6829, -78.3019, -38.1633, 0.12", "4.81929, -78.8479, -38.1917, 0.12", "4.87305, -79.0526, -38.1996, 0.12", "4.9837, -79.4614, -38.2075, 0.12", "5.10443, -79.8784, -38.2092, 0.48", "5.15073, -80.0178, -38.2082, 0.48", "5.19662, -80.1513, -38.2075, 0.48", "5.22872, -80.2457, -38.2078, 0.12", "5.3022, -80.4561, -38.2124, 0.12", "5.42016, -80.8167, -38.229, 0.12", "5.53317, -81.242, -38.257, 0.12", "5.56665, -81.3948, -38.2785, 0.72", "5.59881, -81.5854, -38.3275, 0.84", "5.62449, -81.8624, -38.4245, 0.24", "5.62605, -82.2511, -38.5874, 0.24", "5.61527, -82.5008, -38.7014, 0.24", "5.61287, -83.0278, -38.9438, 0.36", "5.63153, -83.4404, -39.1486, 0.12", "5.65365, -83.7194, -39.2897, 0.12", "5.68345, -84.0525, -39.453, 0.12", "5.73844, -84.4535, -39.6354, 0.12", "5.83544, -84.9473, -39.8422, 0.48", "5.93341, -85.3209, -39.9697, 0.12", "6.00707, -85.5671, -40.0675, 0.12", "6.0829, -85.8085, -40.1874, 0.12", "6.15905, -86.0524, -40.3209, 0.12", "6.2298, -86.31, -40.4857, 0.6", "6.28622, -86.5385, -40.6404, 0.6", "6.45284, -87.1847, -41.0732, 0.12", "6.54171, -87.521, -41.3245, 0.12", "6.62402, -87.864, -41.5781, 0.12", "6.72185, -88.2899, -41.866, 0.6", "6.76817, -88.4762, -41.9754, 0.6", "6.81929, -88.6668, -42.0756, 0.6", "6.95043, -89.1166, -42.2634, 0.12", "7.13275, -89.6872, -42.4767, 0.12", "7.29252, -90.1648, -42.6406, 0.12", "7.44252, -90.5734, -42.7591, 0.36", "7.49563, -90.7026, -42.8021, 0.12", "7.63, -91.0153, -42.9114, 0.12", "7.72717, -91.2358, -42.9878, 0.48", "7.87557, -91.614, -43.1761, 0.12", "7.94137, -91.9003, -43.364, 0.12", "7.9724, -92.3572, -43.6982, 0.12", "7.96059, -92.5568, -43.8492, 0.6", "7.93785, -92.6821, -43.9382, 0.6", "7.75564, -93.3053, -44.3729, 0.12", "7.59935, -93.733, -44.6466, 0.12", "7.49449, -93.9872, -44.7912, 0.36", "7.35033, -94.3121, -44.9485, 0.36", "7.14916, -94.8074, -45.163, 0.36", "6.98636, -95.2088, -45.3053, 0.12", "6.85161, -95.5276, -45.3895, 0.12", "6.67842, -95.8805, -45.4712, 0.48", "6.5787, -96.0727, -45.5119, 0.12", "6.32875, -96.5142, -45.5905, 0.12", "6.09932, -96.8834, -45.64, 0.6", "5.90587, -97.1869, -45.6663, 0.12", "5.68034, -97.5064, -45.6908, 0.12", "5.33589, -97.9528, -45.7196, 0.12", "5.19646, -98.1206, -45.7261, 0.12", "4.87036, -98.4766, -45.7266, 0.48", "4.69298, -98.6678, -45.7232, 0.12", "4.38536, -98.9739, -45.7036, 0.12", "4.17132, -99.1617, -45.6877, 0.48", "3.89705, -99.3638, -45.67, 0.48", "3.81763, -99.4181, -45.6648, 0.12", "3.57347, -99.5712, -45.6475, 0.12", "3.31202, -99.7299, -45.6264, 0.48", "3.07578, -99.8803, -45.6081, 0.48", "2.75581, -100.086, -45.5821, 0.12", "2.44149, -100.276, -45.5558, 0.12", "2.23044, -100.398, -45.5328, 0.12", "2.15084, -100.443, -45.5225, 0.12", "1.93721, -100.558, -45.4902, 0.48", "1.61814, -100.727, -45.4345, 0.48", "1.32071, -100.878, -45.3759, 0.48", "0.979249, -101.04, -45.3101, 0.12", "0.758882, -101.136, -45.2695, 0.12", "0.192284, -101.344, -45.1718, 0.12", "-0.0417037, -101.417, -45.1339, 0.12", "-0.170974, -101.453, -45.1201, 0.6", "-0.438102, -101.529, -45.1045, 0.6", "-0.706233, -101.613, -45.0986, 0.24", "-1.40813, -101.867, -45.0941, 0.24", "-1.65901, -101.99, -45.0958, 0.48", "-2.0669, -102.236, -45.0995, 0.12", "-2.41631, -102.497, -45.1321, 0.12", "-2.73704, -102.788, -45.1848, 0.12", "-2.96267, -103.043, -45.2369, 0.12", "-3.35639, -103.62, -45.3534, 0.12", "-3.47664, -103.837, -45.3899, 0.48", "-3.79421, -104.579, -45.4788, 0.48", "-3.88144, -104.819, -45.5043, 0.12", "-4.02061, -105.261, -45.5459, 0.12", "-4.20154, -105.928, -45.5981, 0.12", "-4.39938, -106.852, -45.6516, 0.12", "-4.5924, -108.062, -45.7193, 0.12", "-4.6129, -108.288, -45.729, 0.72", "-4.62604, -108.634, -45.754, 0.48", "-4.6235, -108.733, -45.7621, 0.12", "-4.55924, -109.328, -45.818, 0.12", "-4.42365, -109.962, -45.8853, 0.12", "-4.28139, -110.404, -45.9338, 0.12", "-4.20868, -110.614, -45.9532, 0.36", "-4.07438, -110.982, -45.9798, 0.12", "-3.92711, -111.384, -46.0004, 0.12", "-3.76632, -111.823, -46.0094, 0.12", "-3.594, -112.301, -46.0041, 0.12", "-3.53892, -112.716, -46.3653, 0.12", "-3.5763, -112.938, -46.8941, 0.12", "-3.59025, -112.974, -47.0237, 0.12", "-3.62533, -113.022, -47.29, 0.72", "-3.66402, -113.041, -47.5589, 1.08", "-4.38045, -113.008, -51.865, 0.84", "-4.61683, -112.901, -53.2032, 0.12", "-4.66236, -112.869, -53.4611, 0.12", "-4.72909, -112.813, -53.8616, 0.12", "-4.90805, -112.628, -55.0257, 0.48", "-5.05872, -112.432, -56.1285, 0.6", "-5.16577, -112.228, -57.1554, 0.6", "-5.32127, -112.073, -58.7868, 0.12", "-5.35295, -112.073, -59.1481, 0.12", "-5.36134, -112.091, -59.2976, 0.12", "-5.35723, -112.13, -59.427, 0.72", "-5.299, -112.273, -59.7315, 0.72", "-5.0011, -112.755, -60.4848, 0.12", "-4.94087, -112.823, -60.5796, 0.12", "-4.64073, -113.095, -61.0042, 0.12", "-4.15274, -113.441, -61.7955, 0.12", "-4.05126, -113.487, -61.9652, 0.12", "-3.73484, -113.545, -62.4842, 0.12", "-3.6565, -113.543, -62.6128, 0.72", "-3.52583, -113.532, -62.8514, 0.72", "-2.96769, -113.465, -64.1595, 0.12", "-2.85979, -113.456, -64.4406, 0.12", "-2.81445, -113.453, -64.5841, 0.48", "-2.72783, -113.431, -65.0767, 0.12", "-2.68806, -113.405, -65.4332, 0.12", "-2.63538, -113.365, -65.9471, 0.72", "-2.61351, -113.358, -66.1588, 0.84", "-2.55701, -113.34, -67.0491, 1.32", "-2.54007, -113.278, -68.1334, 0.6", "-2.5497, -113.247, -68.344, 0.6" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "25.7742, 0.818182, -8.04353, 0.48", "25.9805, 1.47768, -8.42976, 0.48", "26.1977, 2.25788, -8.93353, 0.12", "26.4795, 3.17864, -9.5459, 0.12", "26.6436, 3.67838, -9.86612, 1.2", "26.731, 3.93623, -10.04, 1.2", "27.5101, 6.12894, -11.5541, 0.12", "27.8402, 6.90565, -12.1463, 0.12", "28.0093, 7.25091, -12.4188, 0.12", "28.2164, 7.61325, -12.7224, 0.12", "28.8157, 8.56338, -13.6546, 0.72", "29.1057, 8.97022, -14.0738, 0.84", "29.4814, 9.38189, -14.4949, 0.12", "29.6264, 9.51195, -14.6537, 0.12", "29.9423, 9.76755, -15.0397, 0.72", "31.4021, 10.79, -16.8615, 0.12", "31.7048, 10.9758, -17.2132, 0.12", "32.1883, 11.2577, -17.771, 0.12", "32.4028, 11.3908, -18.0185, 0.96", "33.461, 12.0793, -19.1342, 0.12", "33.7061, 12.2479, -19.407, 0.12", "34.1557, 12.5635, -19.8598, 0.6", "34.5686, 12.8599, -20.2856, 0.12", "35.2776, 13.3867, -21.0129, 0.12", "35.94, 13.8783, -21.6698, 0.72", "37.2951, 14.8784, -22.9045, 0.12", "37.8226, 15.2716, -23.3892, 0.12", "38.2835, 15.6119, -23.8085, 0.12", "38.4962, 15.77, -23.9839, 0.6", "39.254, 16.311, -24.5308, 0.12", "39.4906, 16.4725, -24.6693, 0.12", "39.9343, 16.7543, -24.8695, 0.6", "40.1024, 16.8581, -24.9761, 0.12", "40.505, 17.0943, -25.2725, 0.12", "41.0986, 17.3803, -25.6953, 0.6", "41.4657, 17.5233, -25.9337, 0.6", "42.3719, 17.8046, -26.5236, 0.48", "42.9696, 17.9723, -26.9139, 0.12", "43.3579, 18.0841, -27.1598, 0.12", "44.1088, 18.2858, -27.597, 0.12", "44.5093, 18.3988, -27.7929, 0.12", "44.9871, 18.568, -28.0524, 0.48", "45.6078, 18.8187, -28.3764, 0.48", "45.8062, 18.9013, -28.4869, 0.48", "46.1608, 19.0579, -28.71, 0.12", "46.3499, 19.1502, -28.8452, 0.12", "47.3165, 19.6139, -29.6811, 0.12", "47.8204, 19.8255, -30.1279, 1.44", "48.4172, 20.0359, -30.6528, 0.12", "48.7067, 20.1246, -30.9248, 0.12", "48.9603, 20.1922, -31.2256, 0.24", "49.8924, 20.3885, -32.3827, 0.12", "50.4654, 20.4814, -33.0704, 0.12", "50.6887, 20.5151, -33.3404, 0.72", "51.4401, 20.6284, -34.2072, 0.12", "53.2703, 20.8995, -36.2034, 0.12", "53.8152, 20.9846, -36.7577, 0.12", "54.3193, 21.0702, -37.2065, 0.12", "54.7018, 21.1486, -37.5157, 0.12", "55.198, 21.2742, -37.8227, 0.72", "55.4083, 21.342, -37.8955, 0.72", "56.089, 21.6163, -38.0131, 0.12", "56.8151, 21.9618, -38.1587, 0.12", "57.382, 22.2524, -38.3103, 0.12", "58.2008, 22.6911, -38.5568, 0.12", "58.7568, 22.9936, -38.7263, 0.12", "59.4544, 23.3775, -38.9294, 0.48", "59.7144, 23.5256, -39.0366, 0.48", "60.3426, 23.8761, -39.3889, 0.12", "60.8379, 24.1391, -39.7142, 0.12", "61.4402, 24.4449, -40.1691, 0.12", "61.6289, 24.5467, -40.3138, 0.48", "63.0562, 25.3388, -41.36, 0.12", "63.6785, 25.7312, -41.9185, 0.12", "63.9442, 25.9169, -42.1603, 0.36", "64.2453, 26.1406, -42.4501, 0.12", "64.7974, 26.5766, -43.0065, 0.12", "64.9372, 26.6897, -43.1412, 0.36", "66.2757, 27.8022, -44.2333, 0.12", "67.1154, 28.568, -45.0609, 0.12", "67.1154, 28.568, -45.0609, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "25.7742, 0.818182, -8.04353, 0.36", "26.1486, 1.24685, -8.18092, 0.36", "26.6031, 1.74571, -8.32786, 0.36", "26.909, 2.06191, -8.41617, 0.96", "27.2102, 2.38267, -8.47771, 1.2", "27.5102, 2.71367, -8.52359, 0.96", "27.7378, 2.97803, -8.55204, 0.72", "27.9939, 3.29764, -8.55168, 0.72", "28.165, 3.53701, -8.52351, 0.72", "28.471, 4.01049, -8.42655, 0.36", "28.5261, 4.09949, -8.40207, 0.36", "28.7185, 4.3992, -8.28759, 0.6", "28.8308, 4.5468, -8.20936, 0.6", "29.2734, 5.0173, -7.84916, 0.48", "29.5835, 5.31161, -7.58095, 0.48", "29.8321, 5.54961, -7.36644, 0.48", "30.1342, 5.83344, -7.0789, 0.96", "30.5145, 6.15476, -6.70649, 0.72", "30.883, 6.43675, -6.32799, 0.72", "31.1776, 6.6376, -6.02782, 0.48", "31.674, 6.99653, -5.5447, 0.72", "32.0921, 7.34339, -5.18653, 0.72", "32.3726, 7.61974, -4.97869, 0.72", "32.8241, 8.13764, -4.69298, 0.48", "33.0527, 8.4282, -4.58148, 0.36", "33.4389, 8.94083, -4.43912, 0.36", "33.7258, 9.34668, -4.37053, 0.36", "34.0157, 9.79489, -4.34436, 0.84", "34.2436, 10.1549, -4.33673, 0.84", "34.5248, 10.5874, -4.35512, 0.48", "34.7993, 11.0016, -4.3683, 0.48", "34.9776, 11.2616, -4.37101, 0.6", "35.2556, 11.6756, -4.37858, 0.72", "35.5379, 12.1078, -4.38912, 0.36", "35.7566, 12.4506, -4.39279, 0.36", "36.0395, 12.9107, -4.39635, 0.48", "36.2232, 13.227, -4.40167, 0.96", "36.5006, 13.7361, -4.41219, 1.08", "36.7542, 14.229, -4.43013, 0.36", "37.0696, 14.8509, -4.46951, 0.36", "37.3957, 15.4724, -4.51454, 0.48", "37.4693, 15.6094, -4.52679, 0.48", "37.6313, 15.9098, -4.5579, 0.12", "37.8915, 16.4105, -4.61439, 0.12", "38.1524, 16.954, -4.68787, 0.48", "38.3199, 17.3337, -4.73988, 0.36", "38.4898, 17.7488, -4.80084, 0.36", "38.6761, 18.2167, -4.87598, 0.48", "38.7558, 18.4164, -4.91091, 0.12", "38.9826, 18.9736, -5.01052, 0.12", "39.0647, 19.1601, -5.03769, 0.12", "39.2747, 19.6154, -5.14294, 0.48", "39.3694, 19.8161, -5.19872, 0.24", "39.5388, 20.1792, -5.3141, 0.24", "39.6767, 20.4847, -5.41903, 0.48", "39.8928, 21.0095, -5.60577, 0.96", "40.2398, 21.9325, -5.91059, 0.96", "40.3435, 22.232, -6.00003, 0.12", "40.4783, 22.6764, -6.1204, 0.12", "40.5462, 22.9465, -6.17412, 0.24", "40.6613, 23.4754, -6.24361, 0.24", "40.7416, 23.8853, -6.27559, 0.36", "40.8263, 24.3299, -6.27433, 0.36", "40.844, 24.4254, -6.2769, 0.24", "40.9437, 25.0091, -6.26983, 0.24", "41.0332, 25.5412, -6.26107, 0.48", "41.0801, 25.8326, -6.25689, 0.24", "41.1439, 26.1813, -6.26049, 0.24", "41.258, 26.7619, -6.27507, 0.72", "41.38, 27.3322, -6.30341, 0.12", "41.5746, 28.1874, -6.37389, 0.12", "41.6256, 28.4073, -6.39054, 0.12", "41.7782, 29.0578, -6.44514, 0.12", "41.8478, 29.3433, -6.47306, 0.96", "41.9356, 29.7107, -6.51531, 0.96", "42.0754, 30.3017, -6.60174, 0.48", "42.1947, 30.8283, -6.67521, 0.36", "42.3537, 31.5287, -6.77303, 0.36", "42.4258, 31.8376, -6.81746, 0.36", "42.5516, 32.3194, -6.88108, 0.6", "42.6405, 32.6241, -6.92045, 0.12", "42.7549, 32.9607, -6.96439, 0.12", "42.9026, 33.3323, -7.01668, 0.12", "43.1727, 33.9, -7.09238, 0.12", "43.3651, 34.2851, -7.14438, 0.48", "43.4804, 34.5097, -7.17611, 0.12", "43.7156, 34.9616, -7.24137, 0.12", "43.8329, 35.1848, -7.27525, 0.12", "44.2605, 36.0291, -7.41402, 0.12", "44.4095, 36.342, -7.45971, 0.12", "44.6026, 36.7442, -7.51503, 0.12", "44.6455, 36.8346, -7.52504, 0.48", "44.816, 37.2052, -7.56062, 0.48", "44.9356, 37.472, -7.5832, 0.12", "45.1667, 37.9935, -7.59815, 0.12", "45.4429, 38.6035, -7.58412, 0.12", "45.6483, 39.0982, -7.56932, 0.48", "45.8037, 39.52, -7.54798, 0.72", "45.9019, 39.8159, -7.52164, 0.72", "46.0361, 40.2906, -7.47638, 0.72", "46.1808, 40.9106, -7.42305, 0.12", "46.379, 41.9936, -7.33083, 0.12", "46.4624, 42.4738, -7.2958, 0.48", "46.5392, 42.9167, -7.27765, 0.12", "46.6741, 43.6121, -7.24831, 0.12", "46.7517, 43.9681, -7.27256, 0.6", "46.8863, 44.4834, -7.36044, 0.6", "47.0145, 44.8646, -7.4692, 0.48", "47.2306, 45.3907, -7.67051, 0.48", "47.5773, 46.122, -7.99491, 0.36", "48.2409, 47.323, -8.56394, 0.12", "48.4993, 47.748, -8.77166, 0.12", "48.9169, 48.3963, -9.05001, 0.12", "49.1843, 48.7893, -9.18964, 0.12", "49.3019, 48.9503, -9.23187, 0.6", "49.5126, 49.2355, -9.27438, 0.84", "49.7222, 49.5124, -9.25527, 0.6", "50.192, 50.0964, -9.18426, 0.12", "50.4102, 50.3678, -9.14465, 0.12", "50.545, 50.5469, -9.11773, 0.72", "50.8031, 50.9356, -9.07241, 0.72", "50.9341, 51.1572, -9.05529, 0.48", "51.0057, 51.2985, -9.05416, 0.12", "51.1979, 51.7275, -9.09535, 0.12", "51.2902, 51.9716, -9.11965, 0.72", "51.4099, 52.3103, -9.17912, 0.96", "51.4588, 52.4573, -9.20575, 0.96", "51.5659, 52.8013, -9.27538, 0.12", "51.7154, 53.2773, -9.38438, 0.12", "51.8035, 53.5475, -9.4621, 0.12", "51.9782, 54.0302, -9.64315, 0.24", "54.4394, 59.4126, -9.80522, 0.24", "57.0937, 64.6858, -9.64444, 0.24", "60.0135, 69.8062, -9.89809, 0.24", "62.3028, 75.225, -9.31385, 0.24", "64.3664, 80.5011, -7.71923, 0.24", "66.3783, 85.8863, -6.40034, 0.24", "68.8784, 90.7526, -4.33314, 0.24", "71.4857, 95.3494, -1.88014, 0.24", "73.0851, 100.254, 0.868989, 0.24", "75.345, 105.126, 3.17909, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-7.51449, -29.5117, 3.70548, 0.48", "-7.6106, -29.9252, 3.60945, 0.48", "-7.77252, -30.6062, 3.46155, 0.48", "-7.87623, -31.0379, 3.37204, 0.36", "-7.96926, -31.4225, 3.29698, 0.36", "-8.07422, -31.8677, 3.21598, 0.36", "-8.1528, -32.2104, 3.15716, 0.6", "-8.21734, -32.5118, 3.11789, 0.84", "-8.2742, -32.7867, 3.10505, 1.08", "-8.33236, -33.0524, 3.10562, 1.32", "-8.39248, -33.3146, 3.10597, 1.32", "-8.42148, -33.446, 3.10638, 1.32", "-8.52097, -33.9615, 3.10935, 0.84", "-8.59556, -34.3807, 3.11245, 0.6", "-8.63316, -34.5886, 3.11258, 0.84", "-8.69736, -34.9394, 3.10927, 0.84", "-8.74886, -35.1978, 3.10425, 0.6", "-8.84986, -35.6627, 3.0981, 0.6", "-8.98821, -36.2615, 3.09098, 0.72", "-9.08847, -36.6693, 3.09277, 0.72", "-9.19307, -37.0644, 3.10054, 0.72", "-9.31905, -37.4915, 3.11365, 0.72", "-9.49816, -38.0581, 3.13111, 0.36", "-9.6476, -38.5168, 3.15538, 0.36", "-9.71219, -38.7184, 3.1701, 0.36", "-9.75443, -38.8563, 3.18617, 0.72", "-9.80717, -39.0379, 3.22744, 0.96", "-9.89912, -39.4169, 3.3481, 0.96", "-9.97835, -39.7909, 3.48778, 0.84", "-10.0494, -40.1638, 3.63428, 0.6", "-10.108, -40.5099, 3.78955, 0.48", "-10.2015, -41.1219, 4.07111, 0.48", "-10.2477, -41.4284, 4.21232, 0.6", "-10.3045, -41.8117, 4.36841, 0.84", "-10.3692, -42.2531, 4.51183, 0.84", "-10.4746, -43.0142, 4.70635, 0.72", "-10.5338, -43.4742, 4.7836, 0.6", "-10.5624, -43.7145, 4.80462, 0.72", "-10.6315, -44.3122, 4.84023, 0.36", "-10.6712, -44.7795, 4.88271, 0.12", "-10.6887, -45.0463, 4.91586, 0.12", "-10.699, -45.2501, 4.94315, 0.48", "-10.715, -45.6414, 5.01593, 0.84", "-10.735, -46.1063, 5.12153, 0.84", "-10.8028, -47.2402, 5.45799, 0.48", "-10.833, -47.6834, 5.5992, 0.36", "-10.8472, -47.8694, 5.65827, 0.36", "-10.8687, -48.1284, 5.75217, 0.72", "-10.8945, -48.4068, 5.85942, 0.84", "-10.9544, -49.027, 6.09302, 0.72", "-11.0018, -49.4534, 6.26679, 0.72", "-11.0473, -49.8805, 6.45269, 0.72", "-11.1219, -50.652, 6.80095, 0.6", "-11.1468, -50.9566, 6.93908, 0.6", "-11.1844, -51.3856, 7.12271, 0.72", "-11.2762, -52.1943, 7.47194, 1.2", "-11.3283, -52.5553, 7.63788, 1.32", "-11.3788, -52.8515, 7.77042, 1.32", "-11.4461, -53.2172, 7.91187, 0.48", "-11.5484, -53.7723, 8.11202, 0.48", "-11.6535, -54.3625, 8.30991, 0.96", "-11.7292, -54.8338, 8.44042, 0.72", "-11.7868, -55.2183, 8.54575, 0.48", "-11.8312, -55.5495, 8.63592, 0.48", "-11.8874, -56.0617, 8.76781, 0.48", "-11.9155, -56.4702, 8.85727, 0.48", "-11.9331, -56.7971, 8.90683, 0.72", "-11.9525, -57.1372, 8.95082, 1.08", "-11.9821, -57.6612, 9.01776, 0.36", "-11.9912, -57.7939, 9.03876, 0.36", "-12.0258, -58.2522, 9.11407, 0.48", "-12.0592, -58.6557, 9.17526, 0.6", "-12.0986, -59.0512, 9.24668, 1.08", "-12.1476, -59.445, 9.32067, 1.2", "-12.2326, -60.0004, 9.42072, 0.72", "-12.2986, -60.3865, 9.48987, 0.72", "-12.3728, -60.7827, 9.55888, 0.48", "-12.4945, -61.3591, 9.64868, 0.36", "-12.6455, -61.9654, 9.74279, 0.36", "-12.7592, -62.3704, 9.8003, 0.36", "-12.8917, -62.8123, 9.85111, 0.48", "-13.0068, -63.1959, 9.89419, 0.72", "-13.1676, -63.7704, 9.9625, 0.72", "-13.3143, -64.3269, 10.0245, 0.36", "-13.4059, -64.6545, 10.0638, 0.36", "-13.5253, -65.052, 10.1208, 0.6", "-13.7301, -65.6782, 10.218, 0.6", "-13.855, -66.0504, 10.274, 0.36", "-14.0625, -66.6648, 10.3662, 0.36", "-14.258, -67.2415, 10.4431, 0.36", "-14.4661, -67.8528, 10.5236, 0.48", "-14.5905, -68.2204, 10.5702, 0.6", "-14.8241, -68.9385, 10.6497, 0.6", "-14.9344, -69.3151, 10.6857, 0.48", "-15.0782, -69.9099, 10.7394, 0.48", "-15.1722, -70.3643, 10.7733, 0.48", "-15.2476, -70.7625, 10.7942, 0.84", "-15.3747, -71.4887, 10.8286, 0.72", "-15.4291, -71.8312, 10.8413, 0.36", "-15.4847, -72.2315, 10.8506, 0.36", "-15.5521, -72.7704, 10.8615, 0.36", "-15.6085, -73.2395, 10.8695, 0.48", "-15.6575, -73.6906, 10.8752, 0.6", "-15.7351, -74.4222, 10.8819, 0.6", "-15.7813, -74.8964, 10.8922, 0.6", "-15.8098, -75.2264, 10.9042, 0.6", "-15.8564, -75.9731, 10.9428, 0.6", "-15.871, -76.3092, 10.9637, 0.72", "-15.8758, -76.6654, 10.9961, 0.96", "-15.8537, -77.3695, 11.0732, 0.36", "-15.8227, -77.775, 11.1236, 0.36", "-15.7639, -78.2541, 11.1826, 0.72", "-15.6653, -78.8574, 11.2506, 0.84", "-15.5466, -79.5821, 11.322, 0.36", "-15.4487, -80.1722, 11.389, 0.36", "-15.3818, -80.5916, 11.4388, 0.36", "-15.3245, -81.0048, 11.493, 0.24", "-15.2709, -81.6044, 11.5736, 0.24", "-15.2534, -82.2336, 11.6575, 0.36", "-15.2673, -82.7258, 11.7172, 0.48", "-15.296, -83.1259, 11.7665, 0.36", "-15.3377, -83.5867, 11.8215, 0.36", "-15.38, -84.0718, 11.879, 0.36", "-15.4051, -84.4269, 11.9134, 0.36", "-15.4172, -84.7042, 11.9292, 0.6", "-15.4266, -85.0356, 11.9318, 0.36", "-15.4287, -85.3053, 11.9351, 0.36", "-15.4241, -85.6435, 11.9408, 0.36", "-15.4176, -85.8456, 11.9439, 0.6", "-15.4135, -86.0517, 11.9461, 0.6", "-15.4117, -86.3297, 11.9447, 0.48", "-15.4115, -86.6022, 11.9394, 0.48", "-15.4103, -86.9036, 11.9304, 0.48", "-15.4032, -87.1201, 11.9227, 0.72", "-15.3812, -87.4571, 11.9403, 0.72", "-15.3553, -87.7656, 11.9739, 0.48", "-15.3241, -88.0914, 12.0232, 0.36", "-15.2907, -88.4273, 12.0848, 0.36", "-15.2517, -88.8051, 12.1613, 0.36", "-15.1859, -89.6348, 12.3377, 0.24", "-15.1881, -89.9641, 12.4069, 0.24", "-15.212, -90.1607, 12.4452, 0.6", "-15.3052, -90.5501, 12.5061, 0.72", "-15.3758, -90.7527, 12.5267, 0.36", "-15.5159, -91.0788, 12.54, 0.36", "-15.8038, -91.6383, 12.5258, 0.36", "-15.9922, -91.9724, 12.5164, 0.36", "-16.2218, -92.355, 12.5062, 0.36", "-16.5065, -92.8173, 12.4946, 0.36", "-16.7573, -93.2251, 12.4849, 0.36", "-17.1888, -93.9538, 12.4677, 0.48", "-17.5803, -94.6615, 12.4517, 0.48", "-17.7616, -94.9898, 12.4439, 0.6", "-17.9344, -95.3042, 12.4335, 0.6", "-18.0766, -95.5631, 12.4222, 0.36", "-18.3246, -96.0537, 12.3963, 0.36", "-18.4563, -96.3619, 12.3773, 0.48", "-18.5591, -96.6305, 12.3601, 0.48", "-18.6253, -96.7994, 12.3497, 0.6", "-18.7152, -97.0184, 12.3482, 0.6", "-18.9019, -97.4527, 12.3664, 0.36", "-19.0589, -97.8031, 12.3944, 0.12", "-19.2045, -98.1315, 12.4395, 0.12", "-19.4595, -98.7351, 12.5469, 0.12", "-19.6175, -99.1128, 12.6275, 0.6", "-19.7222, -99.3857, 12.6907, 0.72", "-19.8958, -99.9113, 12.8139, 0.36", "-19.9823, -100.236, 12.8856, 0.12", "-20.056, -100.559, 12.9465, 0.12", "-20.056, -100.559, 12.9465, 0.36", "-20.1409, -100.958, 12.9774, 0.24", "-20.2522, -101.479, 12.9979, 0.24", "-20.3249, -101.831, 12.9981, 0.24", "-20.3951, -102.16, 12.9942, 0.36", "-20.4909, -102.569, 12.9942, 0.36", "-20.6212, -103.064, 12.9981, 0.36", "-20.707, -103.358, 13.0016, 0.36", "-20.8056, -103.685, 13.0112, 0.36", "-20.8951, -103.993, 13.0234, 0.12", "-21.0753, -104.624, 13.0545, 0.24", "-21.2725, -105.313, 13.0953, 0.24", "-21.5355, -106.248, 13.1561, 0.24", "-21.6063, -106.5, 13.1731, 0.12", "-21.7793, -107.094, 13.2005, 0.12", "-21.822, -107.232, 13.2031, 0.36", "-21.9469, -107.623, 13.2073, 0.36", "-22.14, -108.121, 13.2023, 0.36", "-22.3574, -108.462, 13.1832, 0.72", "-22.5414, -108.642, 13.1636, 0.48", "-22.8167, -108.86, 13.134, 0.48", "-22.9783, -108.968, 13.1168, 0.12", "-23.4671, -109.226, 13.0659, 0.12", "-24.276, -109.563, 12.9909, 0.12", "-24.8946, -109.797, 12.9437, 0.12", "-26.6916, -115.084, 13.1938, 0.12", "-28.8707, -120.206, 13.5064, 0.12", "-31.9795, -124.744, 12.9587, 0.12", "-35.4133, -129.03, 13.3961, 0.12", "-38.4585, -133.536, 14.3758, 0.12", "-41.5147, -138.024, 15.3936, 0.12", "-45.3084, -141.984, 15.5647, 0.12", "-49.6144, -145.22, 14.7881, 0.12", "-54.0866, -147.943, 13.4039, 0.12", "-59.0292, -149.891, 12.5266, 0.12", "-63.969, -151.996, 12.0556, 0.12" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-7.51449, -29.5117, 3.70548, 0.48", "-8.18756, -30.0794, 4.05346, 0.48", "-8.71136, -30.5381, 4.30166, 0.48", "-9.1567, -30.942, 4.5392, 0.48", "-10.1663, -31.9387, 5.10279, 0.48", "-10.5022, -32.2886, 5.28491, 0.48", "-10.8279, -32.656, 5.45353, 0.36", "-11.2074, -33.1372, 5.67419, 0.36", "-11.5851, -33.6598, 5.8727, 0.72", "-11.8952, -34.1422, 6.03635, 1.2", "-12.2114, -34.7001, 6.17912, 1.2", "-12.6005, -35.4845, 6.38315, 0.48", "-12.8769, -36.1057, 6.53747, 0.36", "-13.0908, -36.6427, 6.65537, 0.36", "-13.3793, -37.3906, 6.78405, 0.84", "-13.6065, -37.9681, 6.87289, 0.84", "-13.9538, -38.8379, 6.97878, 0.36", "-14.1831, -39.3927, 7.0272, 0.72", "-14.4293, -39.9681, 7.05864, 0.84", "-14.8942, -40.9809, 7.0964, 0.12", "-15.3367, -41.8841, 7.10673, 0.12", "-15.8989, -42.9478, 7.12648, 0.12", "-16.2169, -43.4947, 7.13909, 0.6", "-16.4299, -43.8512, 7.14719, 0.6", "-16.794, -44.4709, 7.16042, 0.12", "-17.0307, -44.8937, 7.17535, 0.12", "-17.3298, -45.4805, 7.20485, 0.6", "-17.7116, -46.3157, 7.27774, 0.6", "-17.8874, -46.7465, 7.32499, 0.6", "-18.0903, -47.3104, 7.39195, 0.48", "-18.256, -47.8447, 7.47602, 0.72", "-18.4128, -48.3935, 7.58934, 0.72", "-18.5862, -49.0843, 7.75843, 0.36", "-18.6386, -49.2973, 7.81582, 0.36", "-18.8701, -50.0303, 8.00899, 0.6", "-19.1581, -50.7727, 8.18351, 0.36", "-19.2693, -51.014, 8.24239, 0.24", "-19.4869, -51.4334, 8.34972, 0.24", "-19.735, -51.8787, 8.45692, 0.24", "-20.1808, -52.6586, 8.63971, 0.6", "-20.4646, -53.16, 8.75192, 0.6", "-20.847, -53.8627, 8.87996, 0.48", "-20.9508, -54.071, 8.91545, 0.48", "-21.1633, -54.5475, 8.9923, 0.36", "-21.4919, -55.3667, 9.13122, 0.36", "-21.6183, -55.6989, 9.19394, 0.48", "-21.8829, -56.3761, 9.31731, 0.48", "-22.1105, -56.9236, 9.41953, 0.72", "-22.2521, -57.2397, 9.49006, 0.84", "-22.607, -57.9864, 9.69469, 0.72", "-22.8989, -58.5797, 9.87461, 0.36", "-23.181, -59.1097, 10.0409, 0.36", "-23.4679, -59.5923, 10.2168, 0.24", "-23.925, -60.2984, 10.4906, 0.24", "-24.2566, -60.7919, 10.6789, 0.12", "-24.5743, -61.2671, 10.8471, 0.12", "-24.8473, -61.6826, 10.9943, 0.12", "-25.1619, -62.1651, 11.198, 0.12", "-25.3663, -62.4914, 11.3675, 0.12", "-25.5263, -62.7688, 11.5493, 0.12", "-25.6241, -62.98, 11.6858, 0.72", "-25.8041, -63.4422, 11.9909, 0.96", "-26.0373, -64.1444, 12.4359, 0.84", "-26.239, -64.8779, 12.8532, 0.72", "-26.3876, -65.5083, 13.1946, 0.36", "-26.5647, -66.3325, 13.5919, 0.24", "-26.6365, -66.6878, 13.7319, 0.84", "-26.7001, -67.0031, 13.8247, 0.84", "-26.8485, -67.6882, 13.9465, 0.72", "-27.0201, -68.427, 14.0359, 0.48", "-27.2036, -69.1393, 14.121, 0.24", "-27.4105, -69.8534, 14.2141, 0.24", "-27.5655, -70.3436, 14.2946, 0.12", "-28.0051, -71.6223, 14.5406, 0.12", "-28.343, -72.4656, 14.7171, 0.12", "-28.5111, -72.8567, 14.8103, 0.48", "-28.8195, -73.5626, 14.9987, 0.6", "-29.195, -74.4286, 15.2329, 0.48", "-29.4487, -74.9958, 15.3774, 0.36", "-29.8342, -75.798, 15.5741, 0.48", "-30.216, -76.56, 15.7354, 0.24", "-30.4763, -77.0785, 15.8442, 0.24", "-30.9509, -78.0577, 16.0499, 0.24", "-31.3901, -79.0362, 16.2374, 0.24", "-31.6403, -79.6279, 16.3424, 0.6", "-31.7272, -79.866, 16.3759, 0.6", "-31.9759, -80.7006, 16.4513, 0.24", "-32.136, -81.3827, 16.4981, 0.24", "-32.2414, -82.0875, 16.5275, 0.48", "-32.2742, -82.7999, 16.4926, 0.36", "-32.2644, -83.8624, 16.3643, 0.36", "-32.2378, -84.7048, 16.2176, 0.36", "-32.2319, -84.9634, 16.158, 0.84", "-32.2354, -85.3197, 16.0744, 0.84", "-32.2781, -86.6316, 15.788, 0.24", "-32.2988, -86.9719, 15.7266, 0.24", "-32.3372, -87.2315, 15.6859, 0.24", "-32.5508, -88.1583, 15.5844, 0.24", "-32.7346, -88.8777, 15.537, 0.36", "-32.8183, -89.1857, 15.5278, 0.12", "-32.9748, -89.7699, 15.5321, 0.12", "-33.2712, -91.0544, 15.541, 0.12", "-33.54, -92.5235, 15.5508, 0.12", "-33.7009, -93.6976, 15.5577, 0.12", "-33.7715, -94.278, 15.5589, 0.48", "-33.8532, -94.9968, 15.5584, 0.48", "-33.9072, -95.626, 15.5606, 0.48", "-33.9452, -96.4665, 15.568, 0.36", "-33.9642, -96.9322, 15.5739, 0.36", "-34.0378, -97.6902, 15.5836, 0.48", "-34.1028, -98.0668, 15.5877, 0.12", "-34.1739, -98.3122, 15.6065, 0.12", "-34.3086, -98.6571, 15.6557, 0.12", "-34.5279, -99.1258, 15.7541, 0.6", "-34.7334, -99.5585, 15.8676, 0.84", "-34.8426, -99.7877, 15.9359, 0.84", "-35.291, -100.676, 16.1903, 0.12", "-35.3962, -100.88, 16.2406, 0.12", "-35.5073, -101.114, 16.2882, 0.12", "-35.6116, -101.341, 16.3363, 0.12", "-35.9229, -102.019, 16.4695, 0.36", "-36.2029, -102.621, 16.6066, 0.36", "-36.5811, -103.413, 16.7876, 0.36", "-36.8344, -103.915, 16.9217, 0.36", "-37.1569, -104.564, 17.1092, 0.6", "-37.3742, -104.993, 17.2391, 0.6", "-37.7815, -105.759, 17.4739, 0.36", "-37.9416, -106.038, 17.5562, 0.36", "-38.1571, -106.392, 17.6626, 0.36", "-38.5214, -106.961, 17.8133, 0.36", "-38.7811, -107.38, 17.8829, 0.36", "-39.2261, -108.096, 17.957, 0.48", "-39.4545, -108.442, 17.9453, 0.48" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "183.69, 48.3691, 118.924, 0.48", "192.753, 51.2037, 124.738, 0.48" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "183.69, 48.3691, 118.924, 0.36", "193.495, 51.4295, 126.076, 0.48", "202.839, 53.7909, 134.021, 0.48", "211.009, 55.5398, 143.277, 0.48", "219.668, 55.8208, 152.21, 0.48", "227.14, 53.8104, 161.944, 0.48", "235.956, 50.2317, 169.969, 0.48", "244.579, 44.5037, 176.969, 0.48" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-75.4573, -160.953, -98.0537, 0.12", "-75.6654, -161.04, -98.7698, 0.12", "-75.7833, -161.092, -99.1614, 0.12", "-76.2321, -161.277, -100.547, 0.6", "-76.3549, -161.345, -100.982, 0.6", "-76.5463, -161.482, -101.709, 0.36", "-76.7285, -161.617, -102.376, 0.36", "-76.8105, -161.693, -102.663, 0.6", "-76.8774, -161.759, -102.871, 0.6", "-77.3974, -162.314, -104.237, 0.24", "-77.6364, -162.582, -104.83, 0.24", "-77.7666, -162.742, -105.165, 0.24", "-78.0249, -163.079, -105.846, 0.24", "-78.1451, -163.246, -106.17, 0.24", "-78.4133, -163.631, -106.892, 0.6", "-78.4928, -163.736, -107.081, 0.6", "-78.975, -164.386, -108.265, 0.12", "-79.0525, -164.496, -108.467, 0.12", "-79.1445, -164.614, -108.699, 0.48", "-79.3964, -164.862, -109.224, 0.12", "-79.5447, -164.958, -109.436, 0.12", "-79.7178, -165.041, -109.635, 0.12", "-79.8817, -165.094, -109.765, 0.12", "-80.1154, -165.165, -109.97, 0.48", "-80.5303, -165.266, -110.337, 0.6", "-80.762, -165.312, -110.53, 0.6", "-81.1244, -165.388, -110.836, 0.12", "-81.3915, -165.459, -111.091, 0.12", "-81.7096, -165.565, -111.417, 0.12", "-82.0202, -165.706, -111.735, 0.12", "-82.2497, -165.84, -111.953, 0.6", "-82.4678, -165.985, -112.149, 0.6", "-82.968, -166.351, -112.619, 0.12", "-83.1007, -166.457, -112.749, 0.12", "-83.395, -166.717, -113.057, 0.12", "-83.5921, -166.901, -113.273, 0.6", "-83.6862, -166.991, -113.382, 0.6", "-84.2105, -167.499, -113.97, 0.12", "-84.4338, -167.724, -114.193, 0.12", "-84.9326, -168.24, -114.678, 0.24", "-85.2191, -168.534, -114.958, 0.36", "-85.4907, -168.802, -115.211, 0.12", "-85.8141, -169.102, -115.478, 0.12", "-86.2499, -169.462, -115.766, 0.12", "-86.4931, -169.637, -115.939, 0.48", "-86.744, -169.769, -116.118, 0.12", "-86.9202, -169.819, -116.257, 0.12", "-87.2248, -169.842, -116.497, 0.12", "-87.416, -169.83, -116.652, 0.36", "-87.9992, -169.743, -117.13, 0.12", "-88.3176, -169.696, -117.379, 0.12", "-88.753, -169.647, -117.69, 0.12", "-89.0138, -169.63, -117.863, 0.48", "-89.3058, -169.629, -118.039, 0.48", "-89.5979, -169.641, -118.184, 0.36", "-89.8299, -169.658, -118.249, 0.36", "-90.165, -169.684, -118.31, 0.36", "-90.4383, -169.695, -118.339, 0.36", "-90.6491, -169.7, -118.353, 0.36", "-91.259, -169.709, -118.372, 0.48", "-92.0614, -169.746, -118.378, 0.12", "-92.3717, -169.782, -118.381, 0.12", "-92.7488, -169.849, -118.39, 0.12", "-93.0149, -169.926, -118.403, 0.12", "-93.21, -170.025, -118.42, 0.12", "-93.5503, -170.31, -118.463, 0.12", "-93.9723, -170.771, -118.537, 0.6", "-94.0922, -170.93, -118.554, 0.12", "-94.3102, -171.262, -118.576, 0.12", "-94.6808, -171.867, -118.607, 0.12", "-95.0025, -172.413, -118.632, 0.12", "-95.2149, -172.777, -118.648, 0.12", "-95.4524, -173.191, -118.661, 0.12", "-95.5303, -173.329, -118.663, 0.12", "-95.6962, -173.618, -118.669, 0.36", "-95.7875, -173.777, -118.675, 0.12", "-96.0827, -174.269, -118.705, 0.12", "-96.3383, -174.669, -118.736, 0.12", "-96.5211, -174.939, -118.762, 0.6", "-96.7694, -175.305, -118.798, 0.6", "-96.9667, -175.599, -118.827, 0.12", "-97.2666, -176.035, -118.878, 0.12", "-97.5225, -176.396, -118.928, 0.12", "-97.7288, -176.681, -118.97, 0.6", "-97.9148, -176.943, -119.005, 0.6", "-98.1135, -177.238, -119.038, 0.6", "-98.2261, -177.406, -119.054, 0.12", "-98.5881, -177.94, -119.106, 0.12", "-98.8996, -178.401, -119.172, 0.12", "-99.138, -178.741, -119.234, 0.12", "-99.4399, -179.161, -119.321, 0.12", "-99.7054, -179.529, -119.403, 0.12", "-99.9059, -179.814, -119.463, 0.36", "-100.151, -180.183, -119.576, 0.12", "-100.292, -180.409, -119.658, 0.12", "-100.57, -180.878, -119.839, 0.12", "-100.89, -181.428, -120.045, 0.12", "-101.11, -181.814, -120.188, 0.12", "-101.5, -182.587, -120.576, 0.12", "-101.607, -182.814, -120.707, 0.36", "-101.74, -183.115, -120.91, 0.12", "-101.996, -183.817, -121.528, 0.12", "-102.082, -184.062, -121.783, 0.6", "-102.467, -185.135, -122.997, 0.12", "-102.572, -185.419, -123.349, 0.12", "-102.619, -185.547, -123.518, 0.6", "-102.938, -186.357, -124.675, 0.12", "-103.106, -186.703, -125.217, 0.12", "-103.197, -186.816, -125.386, 0.12", "-103.419, -186.981, -125.618, 0.36", "-103.699, -187.152, -125.872, 0.12", "-103.946, -187.272, -126.03, 0.12", "-104.303, -187.413, -126.182, 0.12", "-104.96, -187.668, -126.46, 0.12", "-105.799, -187.993, -126.807, 0.12", "-106.038, -188.087, -126.898, 0.12", "-106.799, -188.368, -127.194, 0.12", "-106.951, -188.427, -127.251, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-75.4573, -160.953, -98.0537, 0.12", "-75.453, -160.997, -98.0709, 0.12", "-75.4453, -161.128, -98.111, 0.6", "-75.3818, -161.526, -98.2045, 0.72", "-75.1667, -162.387, -98.4494, 0.48", "-75.0108, -162.911, -98.595, 0.48", "-74.8535, -163.438, -98.7329, 0.24", "-74.6742, -164.064, -98.9111, 0.24", "-74.4458, -164.992, -99.1748, 0.24", "-74.2065, -165.987, -99.4494, 0.12", "-74.0245, -166.688, -99.6278, 0.12", "-73.8025, -167.446, -99.8338, 0.12", "-73.5892, -168.076, -100.021, 0.48", "-73.3208, -168.987, -100.295, 0.36", "-73.2669, -169.407, -100.398, 0.12", "-73.2365, -169.933, -100.563, 0.12", "-73.2159, -170.219, -100.672, 0.36", "-73.1709, -170.688, -100.853, 0.12", "-73.0618, -171.635, -101.134, 0.12", "-72.8732, -173.138, -101.512, 0.12", "-72.6733, -174.768, -101.899, 0.12", "-72.5359, -175.848, -102.129, 0.12", "-72.4272, -176.52, -102.251, 0.12", "-72.147, -177.7, -102.433, 0.48", "-71.9798, -178.153, -102.488, 0.48", "-71.6251, -178.884, -102.573, 0.24", "-71.3106, -179.504, -102.626, 0.24", "-71.0457, -180.039, -102.705, 0.24", "-70.6404, -180.888, -102.904, 0.12", "-70.1888, -181.916, -103.223, 0.12", "-69.8511, -182.76, -103.479, 0.12", "-69.71, -183.128, -103.596, 0.24", "-69.4197, -183.853, -103.861, 0.36", "-69.1636, -184.479, -104.101, 0.12", "-69.0223, -184.84, -104.234, 0.12", "-68.8337, -185.382, -104.418, 0.12", "-68.5957, -186.141, -104.614, 0.36", "-68.2945, -187.076, -104.809, 0.12", "-68.0788, -187.712, -104.899, 0.12", "-67.8984, -188.228, -104.965, 0.12", "-67.5929, -189.132, -105.079, 0.12", "-67.3112, -190.059, -105.171, 0.12", "-67.2035, -190.426, -105.194, 0.12", "-66.9091, -191.498, -105.221, 0.6", "-66.63, -192.598, -105.228, 0.12", "-66.1548, -194.401, -105.235, 0.12", "-65.4804, -196.875, -105.237, 0.12", "-64.747, -199.604, -105.226, 0.12", "-64.4596, -200.73, -105.214, 0.12", "-64.2059, -201.827, -105.169, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-39.4545, -108.442, 17.9453, 0.48", "-39.682, -109.527, 18.0892, 0.48", "-39.8912, -110.572, 18.1954, 0.36", "-39.981, -111.046, 18.2344, 0.12", "-40.124, -111.845, 18.3454, 0.12", "-40.2563, -112.536, 18.4599, 0.12", "-40.3458, -112.979, 18.5387, 0.6", "-40.4835, -113.555, 18.6195, 0.6", "-40.5692, -113.896, 18.6302, 0.6", "-40.8046, -115.019, 18.5585, 0.12", "-40.8868, -115.594, 18.4746, 0.12", "-40.8981, -115.947, 18.3931, 0.12", "-40.7081, -116.949, 18.0481, 0.12", "-39.5643, -118.55, 17.2283, 0.12", "-38.9439, -118.989, 16.94, 0.12", "-38.359, -119.272, 16.7186, 0.12", "-37.2631, -119.677, 16.4098, 0.12", "-36.2049, -120.015, 16.1856, 0.12", "-35.3146, -120.228, 16.0506, 0.12", "-34.5788, -120.355, 16.0133, 0.36", "-34.3327, -120.401, 16.0007, 0.12", "-33.3648, -120.664, 15.9483, 0.12", "-32.7699, -120.921, 15.9128, 0.24", "-29.0159, -129.881, 15.7707, 0.24", "-24.8132, -138.617, 15.5871, 0.24", "-20.8412, -147.473, 15.5554, 0.24", "-16.5769, -156.143, 14.789, 0.24", "-12.2298, -164.764, 15.534, 0.24", "-6.72903, -172.608, 14.6034, 0.24", "-0.135326, -179.341, 13.0674, 0.24", "5.04861, -186.775, 9.89899, 0.24", "10.6286, -194.204, 7.48767, 0.24" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-39.4545, -108.442, 17.9453, 0.12", "-40.083, -108.549, 17.7254, 0.12", "-40.4327, -108.662, 17.6206, 0.12", "-41.2151, -108.958, 17.2974, 0.12", "-41.5476, -109.072, 17.1471, 0.12", "-42.3128, -109.333, 16.8011, 0.12", "-43.9492, -109.891, 16.0611, 0.12", "-44.3189, -110.051, 15.8931, 0.12", "-45.2989, -110.541, 15.4626, 0.84", "-46.0661, -110.986, 15.165, 0.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-46.0661, -110.986, 15.165, 0.12", "-46.472, -110.87, 15.102, 0.12", "-47.111, -110.74, 15.0046, 0.12", "-47.9461, -110.612, 14.878, 0.12", "-49.0351, -110.49, 14.7132, 0.12", "-49.9197, -110.416, 14.5796, 0.12", "-51.4965, -110.271, 14.4173, 0.24", "-52.0085, -110.243, 14.3837, 0.12", "-52.514, -110.235, 14.3704, 0.12", "-53.215, -110.215, 14.3793, 0.12", "-53.5264, -110.178, 14.3944, 0.12", "-54.7886, -109.882, 14.4717, 0.24", "-55.4575, -109.665, 14.5123, 0.12", "-55.8439, -109.529, 14.5469, 0.12", "-56.7819, -109.203, 14.6356, 0.36", "-57.5766, -108.952, 14.7374, 0.36", "-58.4633, -108.715, 14.8543, 0.36", "-58.8629, -108.637, 14.8992, 0.12", "-60.0345, -108.463, 15.0469, 0.12", "-60.8196, -108.426, 15.1702, 0.12", "-61.7751, -108.535, 15.3461, 1.44", "-62.1512, -108.634, 15.429, 1.92", "-62.6994, -108.857, 15.5651, 1.92", "-63.1943, -109.148, 15.6914, 1.92", "-63.9707, -109.907, 15.8157, 0.12", "-64.33, -110.553, 15.8396, 0.12", "-64.475, -111.153, 15.7948, 0.36", "-64.5125, -111.478, 15.7691, 0.12", "-64.492, -112.169, 15.7033, 0.12", "-64.2207, -113.661, 15.5001, 1.68", "-64.0552, -114.063, 15.373, 1.92", "-63.9123, -114.312, 15.2646, 1.92", "-71.9476, -116.162, 16.0446, 1.92", "-80.0907, -117.598, 16.3566, 1.92", "-88.2854, -117.84, 17.4029, 1.92", "-96.2706, -119.277, 19.0324, 1.92", "-103.893, -121.64, 21.2982, 1.92", "-111.346, -125.274, 22.1563, 1.92" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-46.0661, -110.986, 15.165, 0.48", "-46.6503, -111.464, 15.0736, 0.48", "-47.345, -111.849, 14.9703, 0.48", "-48.3942, -112.335, 14.8174, 0.48", "-49.1246, -112.65, 14.7126, 0.12", "-50.473, -113.213, 14.4649, 0.12", "-51.8667, -113.741, 14.1768, 0.12", "-53.4088, -114.231, 13.8708, 0.12", "-54.2421, -114.442, 13.6941, 0.12", "-55.0029, -114.582, 13.5227, 0.12", "-56.0236, -114.741, 13.272, 0.6", "-56.8932, -114.86, 13.0215, 0.6", "-67.3244, -119.578, 12.1904, 0.6" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_25", "dend_22", "dend_11", "dend_6", "dend_3", "dend_0", "apic_4", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_19", "dend_14", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "apic_3", "apic_2", "dend_33", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_9", "dend_8", "dend_39", "dend_34", "dend_30", "dend_29", "dend_18", "dend_17", "dend_38", "dend_35", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_25", "dend_22", "dend_11", "dend_6", "dend_3", "dend_0", "apic_4", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_19", "dend_14", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "apic_3", "apic_2", "dend_33", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_9", "dend_8", "dend_39", "dend_34", "dend_30", "dend_29", "dend_18", "dend_17", "dend_38", "dend_35", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_DBC_c9af6970b4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_11
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4499999836411719)
    connect dend_25(0), soma_0(0.4499999836411719)
    connect dend_22(0), soma_0(0.4499999836411719)
    connect dend_11(0), soma_0(0.4499999836411719)
    connect dend_6(0), soma_0(0.4499999836411719)
    connect dend_3(0), soma_0(0.4499999836411719)
    connect dend_0(0), soma_0(0.4499999836411719)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_14(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.36129, -7.58075, 0.00144685, 3.22785 ) }
    soma_0 { pt3dadd( 2.18013, -6.85906, 0.00129054, 6.03886 ) }
    soma_0 { pt3dadd( 1.99896, -6.13737, 0.00113423, 7.42316 ) }
    soma_0 { pt3dadd( 1.81779, -5.41568, 9.77923E-4, 8.36559 ) }
    soma_0 { pt3dadd( 1.63662, -4.69399, 8.21614E-4, 9.26167 ) }
    soma_0 { pt3dadd( 1.45546, -3.9723, 6.65304E-4, 9.90915 ) }
    soma_0 { pt3dadd( 1.27429, -3.25061, 5.08995E-4, 10.4263 ) }
    soma_0 { pt3dadd( 1.09312, -2.52892, 3.52686E-4, 10.8393 ) }
    soma_0 { pt3dadd( 0.911955, -1.80723, 1.96376E-4, 11.2188 ) }
    soma_0 { pt3dadd( 0.730788, -1.08554, 4.00668E-5, 11.4122 ) }
    soma_0 { pt3dadd( 0.54962, -0.363848, -1.16243E-4, 11.4389 ) }
    soma_0 { pt3dadd( 0.368453, 0.357841, -2.72552E-4, 11.3929 ) }
    soma_0 { pt3dadd( 0.187285, 1.07953, -4.28861E-4, 11.2923 ) }
    soma_0 { pt3dadd( 0.00611797, 1.80122, -5.85171E-4, 10.9441 ) }
    soma_0 { pt3dadd( -0.175049, 2.52291, -7.4148E-4, 10.5254 ) }
    soma_0 { pt3dadd( -0.356217, 3.2446, -8.9779E-4, 10.1407 ) }
    soma_0 { pt3dadd( -0.537384, 3.96629, -0.0010541, 9.5776 ) }
    soma_0 { pt3dadd( -0.718552, 4.68798, -0.00121041, 8.87208 ) }
    soma_0 { pt3dadd( -0.899719, 5.40967, -0.00136672, 7.79472 ) }
    soma_0 { pt3dadd( -1.08089, 6.13136, -0.00152303, 6.05918 ) }
    soma_0 { pt3dadd( -1.26205, 6.85305, -0.00167934, 3.96403 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.04582, 7.3084, -2.62764, 1.8 ) }
    apic_0 { pt3dadd( 1.03291, 8.12558, -2.95661, 0.96 ) }
    apic_0 { pt3dadd( 1.01928, 8.98813, -3.30384, 0.72 ) }
    apic_0 { pt3dadd( 0.997639, 10.3575, -3.85508, 0.96 ) }
    apic_0 { pt3dadd( 0.983279, 11.2663, -4.22095, 1.32 ) }
    apic_0 { pt3dadd( 0.963739, 12.5026, -4.71866, 1.32 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.0441755, -7.3286, 6.04236, 1.68 ) }
    dend_25 { pt3dadd( -0.0797958, -7.70904, 6.22244, 0.72 ) }
    dend_25 { pt3dadd( -0.148791, -8.44594, 6.57126, 0.96 ) }
    dend_25 { pt3dadd( -0.189682, -8.88267, 6.77799, 1.32 ) }
    dend_25 { pt3dadd( -0.232279, -9.33763, 6.99334, 0.96 ) }
    dend_25 { pt3dadd( -0.253578, -9.56511, 7.10102, 0.96 ) }
    dend_25 { pt3dadd( -0.30221, -10.0845, 7.34689, 1.08 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.07582, 7.6234, 2.85236, 1.68 ) }
    dend_22 { pt3dadd( -0.00875064, 8.20863, 2.9546, 1.68 ) }
    dend_22 { pt3dadd( 0.069714, 9.01164, 3.34921, 1.44 ) }
    dend_22 { pt3dadd( 0.200401, 9.58555, 3.71092, 0.96 ) }
    dend_22 { pt3dadd( 0.315284, 10.0428, 4.03672, 0.84 ) }
    dend_22 { pt3dadd( 0.413658, 10.4594, 4.33693, 0.96 ) }
    dend_22 { pt3dadd( 0.63017, 11.5042, 5.17323, 0.84 ) }
    dend_22 { pt3dadd( 0.762927, 12.0588, 5.67478, 0.72 ) }
    dend_22 { pt3dadd( 0.871652, 12.4857, 6.09012, 0.72 ) }
    dend_22 { pt3dadd( 1.00385, 13.0242, 6.60363, 0.84 ) }
    dend_22 { pt3dadd( 1.06563, 13.3506, 6.87852, 0.96 ) }
    dend_22 { pt3dadd( 1.2059, 14.3993, 7.60163, 0.24 ) }
    dend_22 { pt3dadd( 1.25382, 14.8769, 7.83555, 0.24 ) }
    dend_22 { pt3dadd( 1.28986, 15.2656, 8.0015, 0.6 ) }
    dend_22 { pt3dadd( 1.33267, 15.798, 8.19847, 1.44 ) }
    dend_22 { pt3dadd( 1.3765, 16.5005, 8.41345, 1.56 ) }
    dend_22 { pt3dadd( 1.39452, 17.0949, 8.5694, 1.56 ) }
    dend_22 { pt3dadd( 1.39377, 17.7542, 8.69402, 1.56 ) }
    dend_22 { pt3dadd( 1.3517, 18.9021, 8.90821, 0.6 ) }
    dend_22 { pt3dadd( 1.30794, 19.5269, 9.01684, 0.48 ) }
    dend_22 { pt3dadd( 1.2466, 20.1333, 9.12292, 0.48 ) }
    dend_22 { pt3dadd( 1.20672, 20.4995, 9.18397, 0.96 ) }
    dend_22 { pt3dadd( 1.12539, 21.3359, 9.33223, 0.6 ) }
    dend_22 { pt3dadd( 1.08196, 21.9516, 9.44637, 0.6 ) }
    dend_22 { pt3dadd( 1.06212, 22.5832, 9.56185, 0.96 ) }
    dend_22 { pt3dadd( 1.04981, 23.6955, 9.79696, 0.84 ) }
    dend_22 { pt3dadd( 1.04269, 24.3112, 9.94375, 0.84 ) }
    dend_22 { pt3dadd( 1.00442, 25.2915, 10.1928, 0.72 ) }
    dend_22 { pt3dadd( 0.922101, 26.2519, 10.4479, 0.84 ) }
    dend_22 { pt3dadd( 0.897725, 26.4547, 10.4997, 0.84 ) }
    dend_22 { pt3dadd( 0.814522, 27.001, 10.6291, 0.72 ) }
    dend_22 { pt3dadd( 0.682422, 27.8223, 10.794, 0.48 ) }
    dend_22 { pt3dadd( 0.576177, 28.6016, 10.9162, 0.48 ) }
    dend_22 { pt3dadd( 0.510142, 29.2652, 10.9914, 0.6 ) }
    dend_22 { pt3dadd( 0.469326, 29.8848, 11.0646, 0.84 ) }
    dend_22 { pt3dadd( 0.453479, 30.1973, 11.1152, 0.84 ) }
    dend_22 { pt3dadd( 0.438384, 30.6373, 11.1982, 0.48 ) }
    dend_22 { pt3dadd( 0.407106, 31.5638, 11.3846, 0.48 ) }
    dend_22 { pt3dadd( 0.378154, 32.4601, 11.6018, 0.48 ) }
    dend_22 { pt3dadd( 0.321817, 33.5666, 11.9276, 0.6 ) }
    dend_22 { pt3dadd( 0.252954, 34.3913, 12.1979, 1.08 ) }
    dend_22 { pt3dadd( 0.194069, 34.8911, 12.3574, 1.32 ) }
    dend_22 { pt3dadd( 0.124598, 35.3362, 12.4935, 1.32 ) }
    dend_22 { pt3dadd( 0.00992037, 35.9504, 12.6748, 0.84 ) }
    dend_22 { pt3dadd( -0.109423, 36.6487, 12.8422, 0.6 ) }
    dend_22 { pt3dadd( -0.200933, 37.2631, 12.9635, 0.48 ) }
    dend_22 { pt3dadd( -0.291475, 37.945, 13.064, 0.6 ) }
    dend_22 { pt3dadd( -0.34301, 38.3605, 13.1202, 0.48 ) }
    dend_22 { pt3dadd( -0.396259, 38.8244, 13.1643, 0.48 ) }
    dend_22 { pt3dadd( -0.455208, 39.243, 13.159, 1.2 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.15581, -7.1291, -6.17764, 1.44 ) }
    dend_11 { pt3dadd( 2.69915, -8.00571, -6.27103, 1.08 ) }
    dend_11 { pt3dadd( 2.02809, -9.1154, -6.3914, 1.44 ) }
    dend_11 { pt3dadd( 1.34713, -10.1831, -6.58759, 1.56 ) }
    dend_11 { pt3dadd( 0.50385, -11.4934, -6.90614, 1.56 ) }
    dend_11 { pt3dadd( -0.580768, -13.2155, -7.37718, 1.2 ) }
    dend_11 { pt3dadd( -1.19979, -14.2409, -7.71848, 0.72 ) }
    dend_11 { pt3dadd( -1.57507, -14.7964, -7.93253, 0.72 ) }
    dend_11 { pt3dadd( -2.4695, -16.0102, -8.49908, 1.56 ) }
    dend_11 { pt3dadd( -2.79492, -16.446, -8.75134, 1.8 ) }
    dend_11 { pt3dadd( -3.1018, -16.8942, -9.08663, 2.16 ) }
    dend_11 { pt3dadd( -3.53381, -17.8175, -9.96141, 2.28 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 4.91582, -4.6931, -0.277637, 1.32 ) }
    dend_6 { pt3dadd( 5.46954, -5.23018, -0.928059, 1.2 ) }
    dend_6 { pt3dadd( 6.17794, -5.72581, -1.85074, 0.72 ) }
    dend_6 { pt3dadd( 6.67374, -5.95969, -2.47205, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_6 { pt3dadd( 7.63254, -6.29874, -3.58057, 1.68 ) }
    dend_6 { pt3dadd( 8.32342, -6.47622, -4.33414, 2.04 ) }
    dend_6 { pt3dadd( 9.71632, -6.7523, -5.76767, 1.92 ) }
    dend_6 { pt3dadd( 10.6715, -6.85515, -6.68457, 1.92 ) }
    dend_6 { pt3dadd( 11.6829, -6.93194, -7.56402, 0.96 ) }
    dend_6 { pt3dadd( 12.296, -6.99539, -8.02793, 0.96 ) }
    dend_6 { pt3dadd( 13.4964, -7.21958, -8.78904, 1.44 ) }
    dend_6 { pt3dadd( 14.1983, -7.4456, -9.17082, 1.92 ) }
    dend_6 { pt3dadd( 15.2196, -7.85876, -9.60664, 1.56 ) }
    dend_6 { pt3dadd( 16.2897, -8.39632, -9.99993, 1.2 ) }
    dend_6 { pt3dadd( 17.2606, -9.00186, -10.3355, 1.2 ) }
    dend_6 { pt3dadd( 18.2904, -9.75401, -10.6751, 1.56 ) }
    dend_6 { pt3dadd( 18.6962, -10.1085, -10.7778, 1.2 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 13/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.46419, -1.9421, 0.432363, 0.96 ) }
    dend_3 { pt3dadd( -4.89705, -1.79332, 0.941458, 0.6 ) }
    dend_3 { pt3dadd( -5.75989, -1.35198, 1.8245, 0.72 ) }
    dend_3 { pt3dadd( -5.85495, -1.30415, 1.90717, 0.72 ) }
    dend_3 { pt3dadd( -6.74598, -0.986308, 2.62984, 0.72 ) }
    dend_3 { pt3dadd( -7.15831, -0.906488, 2.96352, 0.72 ) }
    dend_3 { pt3dadd( -7.70983, -0.853948, 3.41637, 0.72 ) }
    dend_3 { pt3dadd( -8.15211, -0.847658, 3.82042, 0.72 ) }
    dend_3 { pt3dadd( -8.60313, -0.878358, 4.2214, 0.72 ) }
    dend_3 { pt3dadd( -9.6656, -1.00918, 5.19225, 0.72 ) }
    dend_3 { pt3dadd( -10.6965, -1.19439, 6.12436, 0.84 ) }
    dend_3 { pt3dadd( -11.5198, -1.39293, 6.89686, 1.08 ) }
    dend_3 { pt3dadd( -12.3923, -1.6552, 7.76641, 1.44 ) }
    dend_3 { pt3dadd( -12.8483, -1.80376, 8.255, 1.68 ) }
    dend_3 { pt3dadd( -13.5118, -2.00171, 9.00975, 1.68 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.77419, 5.8804, -7.59764, 1.08 ) }
    dend_0 { pt3dadd( -4.0485, 6.51839, -7.74347, 1.08 ) }
    dend_0 { pt3dadd( -4.34197, 7.13282, -7.96177, 0.84 ) }
    dend_0 { pt3dadd( -4.55431, 7.50823, -8.13994, 0.12 ) }
    dend_0 { pt3dadd( -4.83042, 7.91971, -8.35286, 0.12 ) }
    dend_0 { pt3dadd( -5.19272, 8.40722, -8.60967, 0.84 ) }
    dend_0 { pt3dadd( -6.0783, 9.59559, -9.21066, 0.84 ) }
    dend_0 { pt3dadd( -6.61624, 10.3096, -9.57471, 0.84 ) }
    dend_0 { pt3dadd( -7.20032, 11.107, -9.95286, 0.48 ) }
    dend_0 { pt3dadd( -7.69314, 11.8012, -10.2483, 0.12 ) }
    dend_0 { pt3dadd( -7.97845, 12.2135, -10.4187, 0.12 ) }
    dend_0 { pt3dadd( -8.48557, 12.9723, -10.7133, 0.6 ) }
    dend_0 { pt3dadd( -8.93313, 13.681, -10.9363, 0.6 ) }
    dend_0 { pt3dadd( -9.43217, 14.5179, -11.1973, 0.72 ) }
    dend_0 { pt3dadd( -9.65558, 14.9111, -11.318, 1.08 ) }
    dend_0 { pt3dadd( -10.2057, 15.8836, -11.6671, 0.6 ) }
    dend_0 { pt3dadd( -10.6077, 16.5674, -11.9206, 0.36 ) }
    dend_0 { pt3dadd( -10.97, 17.1804, -12.1595, 0.12 ) }
    dend_0 { pt3dadd( -11.4613, 18.0325, -12.4906, 0.48 ) }
    dend_0 { pt3dadd( -11.8742, 18.7968, -12.7783, 0.48 ) }
    dend_0 { pt3dadd( -12.5266, 20.1042, -13.2222, 0.48 ) }
    dend_0 { pt3dadd( -13.092, 21.3415, -13.6152, 0.6 ) }
    dend_0 { pt3dadd( -13.6134, 22.6151, -14.0431, 0.36 ) }
    dend_0 { pt3dadd( -13.8024, 23.1288, -14.2215, 0.36 ) }
    dend_0 { pt3dadd( -14.1193, 24.07, -14.552, 1.2 ) }
    dend_0 { pt3dadd( -14.3502, 24.7983, -14.8112, 1.08 ) }
    dend_0 { pt3dadd( -14.618, 25.6566, -15.1241, 0.72 ) }
    dend_0 { pt3dadd( -14.8639, 26.4173, -15.4177, 0.24 ) }
    dend_0 { pt3dadd( -15.178, 27.3144, -15.7461, 0.24 ) }
    dend_0 { pt3dadd( -15.3446, 27.7764, -15.9071, 0.72 ) }
    dend_0 { pt3dadd( -15.6746, 28.6334, -16.1613, 0.84 ) }
    dend_0 { pt3dadd( -15.9749, 29.3961, -16.3687, 0.48 ) }
    dend_0 { pt3dadd( -16.1521, 29.8277, -16.4575, 0.24 ) }
    dend_0 { pt3dadd( -16.4218, 30.4399, -16.5603, 0.12 ) }
    dend_0 { pt3dadd( -16.6008, 30.8372, -16.6289, 0.96 ) }
    dend_0 { pt3dadd( -17.0388, 31.8301, -16.7703, 1.44 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.26205, 6.85305, -0.00167934, 0.906991 ) }
    axon_0 { pt3dadd( -4.91421, 21.4016, -0.00167934, 0.906991 ) }
    axon_0 { pt3dadd( -8.56637, 35.9502, -0.00167934, 0.906991 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 67/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 0.963739, 12.5026, -4.71866, 0.36 ) }
    apic_4 { pt3dadd( 1.59121, 13.0556, -4.98227, 0.36 ) }
    apic_4 { pt3dadd( 2.34277, 13.6606, -5.36425, 0.48 ) }
    apic_4 { pt3dadd( 2.90256, 14.0908, -5.67891, 0.48 ) }
    apic_4 { pt3dadd( 3.51749, 14.5553, -6.02111, 0.48 ) }
    apic_4 { pt3dadd( 4.65367, 15.4095, -6.61662, 0.48 ) }
    apic_4 { pt3dadd( 5.14455, 15.7928, -6.92501, 0.96 ) }
    apic_4 { pt3dadd( 5.53924, 16.1274, -7.23721, 0.96 ) }
    apic_4 { pt3dadd( 6.13627, 16.7141, -7.84281, 0.48 ) }
    apic_4 { pt3dadd( 6.44686, 17.0572, -8.19348, 0.48 ) }
    apic_4 { pt3dadd( 6.73765, 17.388, -8.56821, 0.48 ) }
    apic_4 { pt3dadd( 7.60951, 18.4548, -9.74571, 0.36 ) }
    apic_4 { pt3dadd( 7.89722, 18.8049, -10.1754, 0.36 ) }
    apic_4 { pt3dadd( 8.26195, 19.2271, -10.7138, 0.84 ) }
    apic_4 { pt3dadd( 8.58368, 19.5672, -11.1713, 0.84 ) }
    apic_4 { pt3dadd( 9.51956, 20.434, -12.4109, 0.48 ) }
    apic_4 { pt3dadd( 9.72344, 20.5964, -12.6388, 0.48 ) }
    apic_4 { pt3dadd( 10.4241, 21.0707, -13.2503, 0.96 ) }
    apic_4 { pt3dadd( 10.8775, 21.3568, -13.6214, 1.32 ) }
    apic_4 { pt3dadd( 11.4667, 21.7395, -14.0928, 1.08 ) }
    apic_4 { pt3dadd( 12.2426, 22.3323, -14.7286, 0.12 ) }
    apic_4 { pt3dadd( 12.7276, 22.7925, -15.128, 0.12 ) }
    apic_4 { pt3dadd( 12.8723, 22.9531, -15.2725, 0.48 ) }
    apic_4 { pt3dadd( 13.3501, 23.5431, -15.7903, 0.72 ) }
    apic_4 { pt3dadd( 13.6404, 23.9298, -16.1334, 0.12 ) }
    apic_4 { pt3dadd( 14.0386, 24.493, -16.5873, 0.12 ) }
    apic_4 { pt3dadd( 14.4277, 25.07, -16.9952, 0.48 ) }
    apic_4 { pt3dadd( 14.9365, 25.8158, -17.4865, 0.72 ) }
    apic_4 { pt3dadd( 15.3537, 26.3944, -17.8165, 0.12 ) }
    apic_4 { pt3dadd( 15.8872, 27.0716, -18.1172, 0.12 ) }
    apic_4 { pt3dadd( 16.3529, 27.6325, -18.3078, 0.96 ) }
    apic_4 { pt3dadd( 16.6223, 27.9479, -18.3886, 1.08 ) }
    apic_4 { pt3dadd( 17.2507, 28.7186, -18.5112, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_4 { pt3dadd( 17.8218, 29.4638, -18.5786, 0.6 ) }
    apic_4 { pt3dadd( 18.4511, 30.3288, -18.7181, 0.36 ) }
    apic_4 { pt3dadd( 19.0275, 31.1359, -18.8787, 0.24 ) }
    apic_4 { pt3dadd( 19.3597, 31.6088, -19.0089, 0.84 ) }
    apic_4 { pt3dadd( 19.5648, 31.9042, -19.1043, 1.08 ) }
    apic_4 { pt3dadd( 19.9247, 32.4366, -19.3183, 0.6 ) }
    apic_4 { pt3dadd( 20.858, 33.8358, -20.0848, 0.24 ) }
    apic_4 { pt3dadd( 21.2102, 34.3966, -20.4443, 0.24 ) }
    apic_4 { pt3dadd( 21.4954, 34.8766, -20.7697, 0.72 ) }
    apic_4 { pt3dadd( 21.7823, 35.3926, -21.1158, 1.2 ) }
    apic_4 { pt3dadd( 22.1276, 36.0553, -21.5535, 0.6 ) }
    apic_4 { pt3dadd( 22.5596, 36.9105, -22.0632, 0.12 ) }
    apic_4 { pt3dadd( 22.95, 37.6952, -22.4618, 0.12 ) }
    apic_4 { pt3dadd( 23.1386, 38.0841, -22.6627, 0.36 ) }
    apic_4 { pt3dadd( 23.2755, 38.3719, -22.7934, 0.36 ) }
    apic_4 { pt3dadd( 23.5501, 38.929, -23.0334, 0.12 ) }
    apic_4 { pt3dadd( 23.9909, 39.7581, -23.417, 0.12 ) }
    apic_4 { pt3dadd( 24.3558, 40.3964, -23.7276, 0.84 ) }
    apic_4 { pt3dadd( 24.4747, 40.5741, -23.8245, 1.2 ) }
    apic_4 { pt3dadd( 24.9074, 41.1515, -24.1431, 1.2 ) }
    apic_4 { pt3dadd( 25.3812, 41.7403, -24.4894, 0.96 ) }
    apic_4 { pt3dadd( 26.0939, 42.6016, -24.9884, 0.36 ) }
    apic_4 { pt3dadd( 26.6132, 43.2044, -25.4715, 0.36 ) }
    apic_4 { pt3dadd( 27.0147, 43.6391, -25.9065, 0.36 ) }
    apic_4 { pt3dadd( 27.2959, 43.9235, -26.2361, 0.36 ) }
    apic_4 { pt3dadd( 27.8654, 44.4661, -26.9446, 0.6 ) }
    apic_4 { pt3dadd( 28.0938, 44.6768, -27.2269, 0.84 ) }
    apic_4 { pt3dadd( 29.3119, 45.7995, -28.6924, 0.84 ) }
    apic_4 { pt3dadd( 29.7731, 46.2225, -29.2666, 0.12 ) }
    apic_4 { pt3dadd( 30.037, 46.4832, -29.5885, 0.12 ) }
    apic_4 { pt3dadd( 30.2207, 46.6659, -29.7899, 0.12 ) }
    apic_4 { pt3dadd( 30.4835, 46.9277, -29.9965, 0.6 ) }
    apic_4 { pt3dadd( 30.8062, 47.2586, -30.173, 0.6 ) }
    apic_4 { pt3dadd( 31.1356, 47.617, -30.2703, 0.12 ) }
    apic_4 { pt3dadd( 31.5138, 48.0389, -30.3824, 0.12 ) }
    apic_4 { pt3dadd( 31.9834, 48.5706, -30.5368, 0.72 ) }
    apic_4 { pt3dadd( 32.4576, 49.1338, -30.702, 0.96 ) }
    apic_4 { pt3dadd( 32.8418, 49.6146, -30.8917, 0.12 ) }
    apic_4 { pt3dadd( 33.4041, 50.2914, -31.2028, 0.12 ) }
    apic_4 { pt3dadd( 33.7005, 50.6456, -31.3844, 0.84 ) }
    apic_4 { pt3dadd( 33.9938, 50.998, -31.5687, 0.96 ) }
    apic_4 { pt3dadd( 34.2767, 51.3499, -31.7396, 0.48 ) }
    apic_4 { pt3dadd( 34.9543, 52.2256, -32.188, 0.12 ) }
    apic_4 { pt3dadd( 35.4926, 52.9439, -32.5647, 0.12 ) }
    apic_4 { pt3dadd( 36.0515, 53.7561, -32.9684, 0.12 ) }
    apic_4 { pt3dadd( 36.2568, 54.0929, -33.1247, 0.96 ) }
    apic_4 { pt3dadd( 36.4846, 54.5061, -33.3382, 0.96 ) }
    apic_4 { pt3dadd( 36.7772, 55.1087, -33.6409, 0.24 ) }
    apic_4 { pt3dadd( 36.9155, 55.4411, -33.7741, 0.12 ) }
    apic_4 { pt3dadd( 37.1845, 56.2017, -34.0555, 0.12 ) }
    apic_4 { pt3dadd( 37.4034, 56.8473, -34.2648, 0.72 ) }
    apic_4 { pt3dadd( 37.8724, 58.2182, -34.6686, 0.12 ) }
    apic_4 { pt3dadd( 38.0982, 58.8747, -34.8352, 0.12 ) }
    apic_4 { pt3dadd( 38.6708, 60.4868, -35.1957, 0.12 ) }
    apic_4 { pt3dadd( 38.9182, 61.1748, -35.3725, 0.12 ) }
    apic_4 { pt3dadd( 39.1644, 61.8477, -35.5661, 0.12 ) }
    apic_4 { pt3dadd( 39.2719, 62.1536, -35.6549, 0.96 ) }
    apic_4 { pt3dadd( 39.4123, 62.614, -35.7743, 1.32 ) }
    apic_4 { pt3dadd( 39.5666, 63.2121, -35.9784, 1.32 ) }
    apic_4 { pt3dadd( 39.8165, 64.5319, -36.5501, 0.12 ) }
    apic_4 { pt3dadd( 39.9284, 65.3064, -36.8975, 0.12 ) }
    apic_4 { pt3dadd( 39.9718, 65.755, -37.0919, 0.12 ) }
    apic_4 { pt3dadd( 40.0098, 66.4138, -37.3667, 0.84 ) }
    apic_4 { pt3dadd( 40.0275, 67.1406, -37.6396, 0.12 ) }
    apic_4 { pt3dadd( 40.0279, 67.8953, -37.8953, 0.12 ) }
    apic_4 { pt3dadd( 40.0239, 68.5827, -38.1006, 0.12 ) }
    apic_4 { pt3dadd( 40.0254, 69.0424, -38.2631, 0.84 ) }
    apic_4 { pt3dadd( 40.0583, 69.6412, -38.488, 0.12 ) }
    apic_4 { pt3dadd( 40.141, 70.2956, -38.7373, 0.12 ) }
    apic_4 { pt3dadd( 40.2762, 70.9807, -38.9782, 0.72 ) }
    apic_4 { pt3dadd( 40.4301, 71.5238, -39.1714, 0.72 ) }
    apic_4 { pt3dadd( 40.6307, 72.0512, -39.3775, 0.12 ) }
    apic_4 { pt3dadd( 40.8904, 72.6259, -39.6017, 0.12 ) }
    apic_4 { pt3dadd( 41.1159, 73.0782, -39.7578, 0.24 ) }
    apic_4 { pt3dadd( 41.352, 73.4947, -39.9555, 0.24 ) }
    apic_4 { pt3dadd( 41.5833, 73.8917, -40.1776, 0.24 ) }
    apic_4 { pt3dadd( 41.9288, 74.5064, -40.5553, 0.72 ) }
    apic_4 { pt3dadd( 42.078, 74.7818, -40.737, 1.2 ) }
    apic_4 { pt3dadd( 42.3283, 75.2586, -41.0747, 1.2 ) }
    apic_4 { pt3dadd( 43.0497, 76.6248, -42.092, 0.12 ) }
    apic_4 { pt3dadd( 43.4609, 77.3651, -42.6554, 0.12 ) }
    apic_4 { pt3dadd( 43.7028, 77.7749, -42.9856, 0.48 ) }
    apic_4 { pt3dadd( 43.9417, 78.1399, -43.2923, 0.12 ) }
    apic_4 { pt3dadd( 44.1403, 78.4204, -43.5348, 0.12 ) }
    apic_4 { pt3dadd( 44.4697, 78.8414, -43.8889, 0.6 ) }
    apic_4 { pt3dadd( 44.6464, 79.0373, -44.0735, 0.6 ) }
    apic_4 { pt3dadd( 45.3886, 79.7252, -44.9626, 0.12 ) }
    apic_4 { pt3dadd( 45.8306, 80.1156, -45.5274, 0.12 ) }
    apic_4 { pt3dadd( 45.9133, 80.1918, -45.6366, 0.72 ) }
    apic_4 { pt3dadd( 46.1842, 80.4484, -45.9944, 0.72 ) }
    apic_4 { pt3dadd( 47.1212, 81.3251, -47.3302, 0.6 ) }
    apic_4 { pt3dadd( 47.6051, 81.7845, -48.0229, 0.12 ) }
    apic_4 { pt3dadd( 47.9195, 82.0964, -48.4605, 0.12 ) }
    apic_4 { pt3dadd( 48.1609, 82.3515, -48.8281, 0.12 ) }
    apic_4 { pt3dadd( 48.428, 82.6715, -49.2308, 0.6 ) }
    apic_4 { pt3dadd( 49.2741, 83.7654, -50.3852, 0.12 ) }
    apic_4 { pt3dadd( 49.6183, 84.2994, -50.7686, 0.12 ) }
    apic_4 { pt3dadd( 49.8635, 84.7386, -51.0325, 0.72 ) }
    apic_4 { pt3dadd( 50.4391, 85.9096, -51.685, 0.12 ) }
    apic_4 { pt3dadd( 50.8991, 86.9651, -52.2086, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_4 { pt3dadd( 51.1775, 87.7102, -52.5067, 0.12 ) }
    apic_4 { pt3dadd( 51.7029, 89.3443, -53.0139, 0.12 ) }
    apic_4 { pt3dadd( 51.9145, 90.0746, -53.2277, 0.84 ) }
    apic_4 { pt3dadd( 52.1021, 90.8002, -53.4041, 0.12 ) }
    apic_4 { pt3dadd( 52.3988, 92.0648, -53.6315, 0.12 ) }
    apic_4 { pt3dadd( 52.5399, 92.7215, -53.7497, 0.6 ) }
    apic_4 { pt3dadd( 52.6885, 93.4326, -53.8677, 0.12 ) }
    apic_4 { pt3dadd( 52.7912, 93.8468, -53.9261, 0.12 ) }
    apic_4 { pt3dadd( 53.114, 95.0056, -54.0393, 0.12 ) }
    apic_4 { pt3dadd( 53.3185, 95.6688, -54.0903, 0.72 ) }
    apic_4 { pt3dadd( 53.537, 96.3486, -54.1405, 0.12 ) }
    apic_4 { pt3dadd( 54.0085, 97.6632, -54.2523, 0.24 ) }
    apic_4 { pt3dadd( 54.1273, 97.9778, -54.2726, 0.24 ) }
    apic_4 { pt3dadd( 54.2226, 98.2258, -54.2902, 0.12 ) }
    apic_4 { pt3dadd( 54.6736, 99.3529, -54.371, 0.12 ) }
    apic_4 { pt3dadd( 54.9067, 99.9119, -54.4033, 0.12 ) }
    apic_4 { pt3dadd( 55.2222, 100.595, -54.425, 0.12 ) }
    apic_4 { pt3dadd( 55.2733, 100.703, -54.4254, 0.72 ) }
    apic_4 { pt3dadd( 55.5414, 101.245, -54.4185, 0.84 ) }
    apic_4 { pt3dadd( 55.8295, 101.809, -54.4002, 0.12 ) }
    apic_4 { pt3dadd( 56.3452, 102.762, -54.3563, 0.12 ) }
    apic_4 { pt3dadd( 56.8795, 103.72, -54.3229, 0.12 ) }
    apic_4 { pt3dadd( 57.1087, 104.141, -54.3126, 0.12 ) }
    apic_4 { pt3dadd( 57.2884, 104.469, -54.3065, 0.72 ) }
    apic_4 { pt3dadd( 57.6732, 105.164, -54.2975, 0.84 ) }
    apic_4 { pt3dadd( 57.9401, 105.657, -54.2943, 0.12 ) }
    apic_4 { pt3dadd( 58.5047, 106.729, -54.2734, 0.12 ) }
    apic_4 { pt3dadd( 59.0423, 107.766, -54.266, 0.12 ) }
    apic_4 { pt3dadd( 59.343, 108.351, -54.2655, 0.12 ) }
    apic_4 { pt3dadd( 59.5013, 108.647, -54.2652, 0.6 ) }
    apic_4 { pt3dadd( 59.8934, 109.327, -54.2673, 0.72 ) }
    apic_4 { pt3dadd( 60.1565, 109.761, -54.2671, 0.12 ) }
    apic_4 { pt3dadd( 61.0414, 111.156, -54.2791, 0.12 ) }
    apic_4 { pt3dadd( 61.3006, 111.557, -54.2846, 0.12 ) }
    apic_4 { pt3dadd( 61.8717, 112.445, -54.2973, 0.12 ) }
    apic_4 { pt3dadd( 62.1448, 112.89, -54.2999, 0.84 ) }
    apic_4 { pt3dadd( 62.3318, 113.211, -54.2833, 0.96 ) }
    apic_4 { pt3dadd( 62.5843, 113.674, -54.2357, 0.96 ) }
    apic_4 { pt3dadd( 62.9532, 114.368, -54.1224, 0.6 ) }
    apic_4 { pt3dadd( 63.2958, 115.026, -54.0066, 0.6 ) }
    apic_4 { pt3dadd( 63.7879, 116.013, -53.8257, 0.6 ) }
    apic_4 { pt3dadd( 64.2464, 116.923, -53.6498, 0.12 ) }
    apic_4 { pt3dadd( 64.8576, 118.132, -53.4249, 0.12 ) }
    apic_4 { pt3dadd( 65.4509, 119.317, -53.207, 0.12 ) }
    apic_4 { pt3dadd( 65.5991, 119.613, -53.1543, 0.36 ) }
    apic_4 { pt3dadd( 65.786, 119.993, -53.0946, 0.36 ) }
    apic_4 { pt3dadd( 65.9013, 120.231, -53.0677, 0.12 ) }
    apic_4 { pt3dadd( 66.272, 121.014, -53.0271, 0.12 ) }
    apic_4 { pt3dadd( 66.3685, 121.231, -53.0163, 0.36 ) }
    apic_4 { pt3dadd( 66.5014, 121.547, -53.0016, 0.12 ) }
    apic_4 { pt3dadd( 66.7625, 122.131, -52.9746, 0.12 ) }
    apic_4 { pt3dadd( 67.2124, 123.029, -52.955, 0.12 ) }
    apic_4 { pt3dadd( 67.5014, 123.545, -52.954, 0.48 ) }
    apic_4 { pt3dadd( 67.8375, 124.075, -52.9583, 0.48 ) }
    apic_4 { pt3dadd( 67.9882, 124.291, -52.9621, 0.12 ) }
    apic_4 { pt3dadd( 68.4389, 124.894, -52.9741, 0.12 ) }
    apic_4 { pt3dadd( 68.8681, 125.421, -52.9825, 0.12 ) }
    apic_4 { pt3dadd( 69.2517, 125.865, -52.9866, 0.6 ) }
    apic_4 { pt3dadd( 69.7974, 126.489, -52.9864, 0.72 ) }
    apic_4 { pt3dadd( 70.18, 126.924, -53.0169, 0.36 ) }
    apic_4 { pt3dadd( 70.6612, 127.498, -53.081, 0.36 ) }
    apic_4 { pt3dadd( 71.2682, 128.273, -53.187, 0.48 ) }
    apic_4 { pt3dadd( 71.5678, 128.668, -53.2447, 0.24 ) }
    apic_4 { pt3dadd( 71.8627, 129.064, -53.313, 0.24 ) }
    apic_4 { pt3dadd( 72.6585, 130.145, -53.5203, 0.24 ) }
    apic_4 { pt3dadd( 73.0342, 130.649, -53.6235, 0.24 ) }
    apic_4 { pt3dadd( 73.5361, 131.309, -53.7551, 0.36 ) }
    apic_4 { pt3dadd( 73.7567, 131.602, -53.8152, 0.12 ) }
    apic_4 { pt3dadd( 74.0072, 131.939, -53.8742, 0.12 ) }
    apic_4 { pt3dadd( 74.318, 132.361, -53.9263, 0.24 ) }
    apic_4 { pt3dadd( 74.4545, 132.552, -53.9395, 0.12 ) }
    apic_4 { pt3dadd( 74.9143, 133.255, -54.0109, 0.12 ) }
    apic_4 { pt3dadd( 75.3041, 133.909, -54.0788, 0.6 ) }
    apic_4 { pt3dadd( 75.635, 134.503, -54.1352, 0.72 ) }
    apic_4 { pt3dadd( 75.8379, 134.877, -54.1675, 0.72 ) }
    apic_4 { pt3dadd( 76.0878, 135.355, -54.2024, 0.12 ) }
    apic_4 { pt3dadd( 76.6456, 136.44, -54.2432, 0.12 ) }
    apic_4 { pt3dadd( 77.1662, 137.498, -54.2437, 0.12 ) }
    apic_4 { pt3dadd( 77.4257, 138.022, -54.2226, 0.48 ) }
    apic_4 { pt3dadd( 77.5777, 138.321, -54.2052, 0.12 ) }
    apic_4 { pt3dadd( 77.9041, 138.927, -54.1573, 0.12 ) }
    apic_4 { pt3dadd( 78.3239, 139.644, -54.1123, 0.12 ) }
    apic_4 { pt3dadd( 78.8315, 140.449, -54.0976, 0.12 ) }
    apic_4 { pt3dadd( 79.1489, 140.95, -54.1076, 0.12 ) }
    apic_4 { pt3dadd( 79.4626, 141.45, -54.1094, 0.6 ) }
    apic_4 { pt3dadd( 79.7673, 141.957, -54.1097, 0.6 ) }
    apic_4 { pt3dadd( 80.2114, 142.713, -54.1079, 0.12 ) }
    apic_4 { pt3dadd( 80.9827, 144.118, -54.1017, 0.12 ) }
    apic_4 { pt3dadd( 81.6124, 145.396, -54.0735, 0.12 ) }
    apic_4 { pt3dadd( 81.8974, 146.076, -54.0648, 0.72 ) }
    apic_4 { pt3dadd( 82.0364, 146.489, -54.0612, 0.72 ) }
    apic_4 { pt3dadd( 82.1439, 146.912, -54.056, 0.24 ) }
    apic_4 { pt3dadd( 82.3366, 147.989, -54.0579, 0.24 ) }
    apic_4 { pt3dadd( 82.4024, 148.706, -54.0684, 0.24 ) }
    apic_4 { pt3dadd( 82.4418, 149.332, -54.0819, 0.48 ) }
    apic_4 { pt3dadd( 82.4916, 150.05, -54.0931, 0.6 ) }
    apic_4 { pt3dadd( 82.5236, 150.387, -54.0839, 0.6 ) }
    apic_4 { pt3dadd( 82.5801, 151.034, -54.0468, 0.6 ) }
    apic_4 { pt3dadd( 82.6592, 152.449, -53.923, 0.12 ) }
    apic_4 { pt3dadd( 82.6824, 153.313, -53.7987, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_4 { pt3dadd( 82.6703, 154.257, -53.6331, 0.12 ) }
    apic_4 { pt3dadd( 82.642, 155.146, -53.4752, 0.12 ) }
    apic_4 { pt3dadd( 82.6343, 155.313, -53.4469, 0.36 ) }
    apic_4 { pt3dadd( 82.5594, 156.536, -53.2506, 0.36 ) }
    apic_4 { pt3dadd( 82.5042, 157.215, -53.1847, 0.12 ) }
    apic_4 { pt3dadd( 82.3836, 158.417, -53.0636, 0.12 ) }
    apic_4 { pt3dadd( 82.3462, 158.773, -53.0287, 0.48 ) }
    apic_4 { pt3dadd( 82.2895, 159.37, -52.977, 0.48 ) }
    apic_4 { pt3dadd( 82.2793, 159.637, -52.959, 0.12 ) }
    apic_4 { pt3dadd( 82.2879, 160.719, -52.9156, 0.12 ) }
    apic_4 { pt3dadd( 82.2897, 160.829, -52.9169, 0.72 ) }
    apic_4 { pt3dadd( 82.3033, 161.308, -52.9292, 0.12 ) }
    apic_4 { pt3dadd( 82.353, 162.256, -52.9591, 0.12 ) }
    apic_4 { pt3dadd( 82.4492, 163.24, -52.9909, 0.12 ) }
    apic_4 { pt3dadd( 82.5816, 164.066, -53.0234, 0.36 ) }
    apic_4 { pt3dadd( 82.761, 164.807, -53.129, 0.12 ) }
    apic_4 { pt3dadd( 83.1051, 165.937, -53.3675, 0.12 ) }
    apic_4 { pt3dadd( 83.5502, 167.139, -53.6861, 0.48 ) }
    apic_4 { pt3dadd( 83.9519, 168.007, -53.9922, 0.48 ) }
    apic_4 { pt3dadd( 84.396, 168.775, -54.3237, 0.84 ) }
    apic_4 { pt3dadd( 85.6107, 170.451, -55.219, 0.24 ) }
    apic_4 { pt3dadd( 86.1811, 171.093, -55.6252, 0.12 ) }
    apic_4 { pt3dadd( 86.556, 171.438, -55.8881, 0.48 ) }
    apic_4 { pt3dadd( 87.1791, 171.921, -56.3037, 0.36 ) }
    apic_4 { pt3dadd( 87.6698, 172.265, -56.6762, 0.36 ) }
    apic_4 { pt3dadd( 88.2524, 172.636, -57.0855, 0.72 ) }
    apic_4 { pt3dadd( 88.6428, 172.86, -57.3457, 0.96 ) }
    apic_4 { pt3dadd( 89.1509, 173.135, -57.6875, 0.96 ) }
    apic_4 { pt3dadd( 89.8185, 173.496, -58.1076, 1.08 ) }
    apic_4 { pt3dadd( 91.7169, 174.558, -59.2083, 0.12 ) }
    apic_4 { pt3dadd( 92.616, 175.051, -59.699, 0.12 ) }
    apic_4 { pt3dadd( 93.3632, 175.446, -60.0437, 0.36 ) }
    apic_4 { pt3dadd( 94.2254, 175.892, -60.4635, 0.12 ) }
    apic_4 { pt3dadd( 95.012, 176.287, -60.82, 0.12 ) }
    apic_4 { pt3dadd( 95.2339, 176.394, -60.8943, 0.36 ) }
    apic_4 { pt3dadd( 95.7718, 176.626, -61.002, 0.12 ) }
    apic_4 { pt3dadd( 96.3574, 176.839, -61.1847, 0.12 ) }
    apic_4 { pt3dadd( 97.6321, 177.294, -61.6423, 0.36 ) }
    apic_4 { pt3dadd( 98.078, 177.45, -61.8433, 0.6 ) }
    apic_4 { pt3dadd( 98.608, 177.667, -62.0772, 1.08 ) }
    apic_4 { pt3dadd( 99.3093, 177.989, -62.3533, 0.24 ) }
    apic_4 { pt3dadd( 100.14, 178.39, -62.6306, 0.12 ) }
    apic_4 { pt3dadd( 100.578, 178.607, -62.7618, 0.48 ) }
    apic_4 { pt3dadd( 100.8, 178.729, -62.8111, 0.12 ) }
    apic_4 { pt3dadd( 102.011, 179.492, -63.122, 0.12 ) }
    apic_4 { pt3dadd( 102.332, 179.746, -63.2123, 0.6 ) }
    apic_4 { pt3dadd( 102.579, 179.998, -63.3196, 0.6 ) }
    apic_4 { pt3dadd( 103.097, 180.694, -63.6698, 0.12 ) }
    apic_4 { pt3dadd( 103.395, 181.196, -63.9717, 0.12 ) }
    apic_4 { pt3dadd( 103.585, 181.65, -64.2688, 0.12 ) }
    apic_4 { pt3dadd( 103.691, 182.224, -64.6349, 0.48 ) }
    apic_4 { pt3dadd( 103.753, 183.539, -65.5086, 0.12 ) }
    apic_4 { pt3dadd( 103.727, 184.111, -65.9245, 0.12 ) }
    apic_4 { pt3dadd( 103.682, 184.512, -66.1813, 0.36 ) }
    apic_4 { pt3dadd( 103.64, 184.84, -66.3719, 0.12 ) }
    apic_4 { pt3dadd( 103.514, 185.879, -66.924, 0.12 ) }
    apic_4 { pt3dadd( 103.36, 187.379, -67.6518, 0.72 ) }
    apic_4 { pt3dadd( 103.309, 188.419, -68.0238, 0.12 ) }
    apic_4 { pt3dadd( 103.294, 190.46, -68.6803, 0.12 ) }
    apic_4 { pt3dadd( 103.305, 191.371, -68.9639, 0.12 ) }
    apic_4 { pt3dadd( 103.309, 191.504, -69.0019, 0.48 ) }
    apic_4 { pt3dadd( 103.326, 191.765, -69.0584, 0.12 ) }
    apic_4 { pt3dadd( 103.593, 194.498, -69.2448, 0.12 ) }
    apic_4 { pt3dadd( 103.609, 194.617, -69.2427, 0.48 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 64/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 0.963739, 12.5026, -4.71866, 1.08 ) }
    apic_1 { pt3dadd( 0.825555, 13.8885, -4.31421, 1.08 ) }
    apic_1 { pt3dadd( 0.66674, 15.506, -3.86816, 1.08 ) }
    apic_1 { pt3dadd( 0.440358, 17.7646, -3.3052, 1.08 ) }
    apic_1 { pt3dadd( 0.273801, 19.4263, -2.89101, 0.84 ) }
    apic_1 { pt3dadd( 0.099883, 21.1615, -2.45851, 0.36 ) }
    apic_1 { pt3dadd( 0.0223229, 21.9353, -2.26563, 0.36 ) }
    apic_1 { pt3dadd( -0.0565496, 22.6789, -2.07224, 0.36 ) }
    apic_1 { pt3dadd( -0.161749, 23.741, -1.76691, 0.6 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.30221, -10.0845, 7.34689, 1.32 ) }
    dend_31 { pt3dadd( -0.314808, -10.595, 7.31506, 1.32 ) }
    dend_31 { pt3dadd( -0.320551, -10.842, 7.29225, 1.44 ) }
    dend_31 { pt3dadd( -0.333857, -11.4554, 7.25728, 1.32 ) }
    dend_31 { pt3dadd( -0.343399, -12.2099, 7.23514, 1.08 ) }
    dend_31 { pt3dadd( -0.354969, -12.8201, 7.23329, 1.08 ) }
    dend_31 { pt3dadd( -0.381318, -13.4908, 7.24189, 0.84 ) }
    dend_31 { pt3dadd( -0.427266, -14.2236, 7.26175, 0.84 ) }
    dend_31 { pt3dadd( -0.481122, -14.9396, 7.28838, 0.84 ) }
    dend_31 { pt3dadd( -0.569292, -15.8045, 7.32997, 0.96 ) }
    dend_31 { pt3dadd( -0.665437, -16.4458, 7.35707, 0.96 ) }
    dend_31 { pt3dadd( -0.792238, -17.0896, 7.40878, 0.96 ) }
    dend_31 { pt3dadd( -0.919294, -17.6257, 7.46757, 0.96 ) }
    dend_31 { pt3dadd( -1.16315, -18.4778, 7.56224, 0.72 ) }
    dend_31 { pt3dadd( -1.3346, -19.001, 7.61564, 0.84 ) }
    dend_31 { pt3dadd( -1.66703, -19.9382, 7.71506, 0.84 ) }
    dend_31 { pt3dadd( -2.13416, -21.2222, 7.85526, 0.96 ) }
    dend_31 { pt3dadd( -2.31007, -21.6967, 7.91436, 1.2 ) }
    dend_31 { pt3dadd( -2.47133, -22.1072, 7.97451, 1.68 ) }
    dend_31 { pt3dadd( -2.72645, -22.6606, 8.07791, 1.68 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 93/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.30221, -10.0845, 7.34689, 0.6 ) }
    dend_26 { pt3dadd( 0.269558, -10.3413, 7.62443, 0.6 ) }
    dend_26 { pt3dadd( 1.31237, -10.7942, 8.44167, 0.48 ) }
    dend_26 { pt3dadd( 1.84011, -11.0149, 8.89102, 0.48 ) }
    dend_26 { pt3dadd( 3.14195, -11.5682, 10.0215, 0.48 ) }
    dend_26 { pt3dadd( 3.63333, -11.805, 10.4568, 0.48 ) }
    dend_26 { pt3dadd( 4.35686, -12.139, 11.1084, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 6.42074, -13.0583, 13.1873, 0.96 ) }
    dend_26 { pt3dadd( 6.7367, -13.1827, 13.5239, 0.36 ) }
    dend_26 { pt3dadd( 6.95383, -13.2344, 13.7773, 0.36 ) }
    dend_26 { pt3dadd( 7.48582, -13.2434, 14.4218, 0.36 ) }
    dend_26 { pt3dadd( 8.30082, -13.0875, 15.4096, 0.48 ) }
    dend_26 { pt3dadd( 8.98207, -12.8375, 16.1652, 0.48 ) }
    dend_26 { pt3dadd( 9.34421, -12.6902, 16.5022, 0.48 ) }
    dend_26 { pt3dadd( 10.1477, -12.3884, 17.2423, 0.12 ) }
    dend_26 { pt3dadd( 10.4159, -12.2943, 17.4637, 0.12 ) }
    dend_26 { pt3dadd( 10.9539, -12.0995, 17.8301, 0.48 ) }
    dend_26 { pt3dadd( 11.4672, -11.9433, 18.1006, 0.48 ) }
    dend_26 { pt3dadd( 12.3875, -11.6759, 18.4394, 0.6 ) }
    dend_26 { pt3dadd( 12.9861, -11.4796, 18.5942, 0.12 ) }
    dend_26 { pt3dadd( 13.7325, -11.1992, 18.7068, 0.48 ) }
    dend_26 { pt3dadd( 14.7838, -10.7369, 18.7914, 0.48 ) }
    dend_26 { pt3dadd( 15.171, -10.5395, 18.8074, 0.48 ) }
    dend_26 { pt3dadd( 15.7308, -10.1983, 18.7924, 0.48 ) }
    dend_26 { pt3dadd( 16.355, -9.73827, 18.7457, 0.48 ) }
    dend_26 { pt3dadd( 17.4293, -8.82423, 18.6558, 0.48 ) }
    dend_26 { pt3dadd( 18.3983, -7.91799, 18.559, 0.48 ) }
    dend_26 { pt3dadd( 19.3597, -6.96689, 18.4382, 0.48 ) }
    dend_26 { pt3dadd( 20.1018, -6.16521, 18.3287, 0.12 ) }
    dend_26 { pt3dadd( 20.6496, -5.49966, 18.2323, 0.12 ) }
    dend_26 { pt3dadd( 21.024, -5.00991, 18.1717, 0.12 ) }
    dend_26 { pt3dadd( 21.474, -4.3685, 18.1015, 0.84 ) }
    dend_26 { pt3dadd( 21.7959, -3.95439, 18.0696, 1.2 ) }
    dend_26 { pt3dadd( 22.1716, -3.6145, 18.0778, 1.44 ) }
    dend_26 { pt3dadd( 22.9997, -3.10471, 18.1554, 0.72 ) }
    dend_26 { pt3dadd( 23.7923, -2.71604, 18.2339, 0.36 ) }
    dend_26 { pt3dadd( 24.379, -2.45864, 18.3299, 0.48 ) }
    dend_26 { pt3dadd( 25.1466, -2.11351, 18.4917, 0.48 ) }
    dend_26 { pt3dadd( 26.4564, -1.48929, 18.7998, 0.36 ) }
    dend_26 { pt3dadd( 27.261, -1.08102, 18.9947, 0.36 ) }
    dend_26 { pt3dadd( 27.733, -0.842488, 19.1137, 0.36 ) }
    dend_26 { pt3dadd( 29.06, -0.110138, 19.4451, 0.12 ) }
    dend_26 { pt3dadd( 29.7524, 0.346008, 19.6499, 1.08 ) }
    dend_26 { pt3dadd( 30.1545, 0.691078, 19.7883, 1.2 ) }
    dend_26 { pt3dadd( 30.5429, 1.15176, 19.921, 1.08 ) }
    dend_26 { pt3dadd( 39.9659, 3.21685, 22.569, 1.08 ) }
    dend_26 { pt3dadd( 48.7363, 7.29938, 25.4022, 1.08 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 40/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.455208, 39.243, 13.159, 0.12 ) }
    dend_24 { pt3dadd( 0.173265, 40.5329, 12.8235, 0.12 ) }
    dend_24 { pt3dadd( 0.748928, 41.8203, 12.5236, 0.12 ) }
    dend_24 { pt3dadd( 1.11648, 42.6903, 12.3357, 0.12 ) }
    dend_24 { pt3dadd( 1.61675, 43.9277, 12.0914, 0.12 ) }
    dend_24 { pt3dadd( 1.95295, 44.7648, 11.8552, 0.12 ) }
    dend_24 { pt3dadd( 2.44774, 45.9954, 11.4469, 0.12 ) }
    dend_24 { pt3dadd( 2.87612, 47.0706, 11.0733, 0.12 ) }
    dend_24 { pt3dadd( 3.03599, 47.4789, 10.8763, 0.12 ) }
    dend_24 { pt3dadd( 3.37337, 48.4262, 10.2993, 0.96 ) }
    dend_24 { pt3dadd( 3.8862, 50.1594, 9.06303, 0.12 ) }
    dend_24 { pt3dadd( 3.97509, 50.4853, 8.80316, 0.12 ) }
    dend_24 { pt3dadd( 4.05526, 50.7544, 8.55818, 0.36 ) }
    dend_24 { pt3dadd( 4.33331, 51.6037, 7.74285, 0.12 ) }
    dend_24 { pt3dadd( 4.41477, 51.8364, 7.52922, 0.12 ) }
    dend_24 { pt3dadd( 4.71299, 52.6632, 6.88621, 0.12 ) }
    dend_24 { pt3dadd( 4.85692, 53.0637, 6.66376, 0.12 ) }
    dend_24 { pt3dadd( 5.09557, 53.7138, 6.33254, 0.12 ) }
    dend_24 { pt3dadd( 5.26027, 54.1541, 6.14695, 0.12 ) }
    dend_24 { pt3dadd( 5.54543, 54.9331, 5.86522, 0.12 ) }
    dend_24 { pt3dadd( 5.94596, 56.1778, 5.26507, 0.12 ) }
    dend_24 { pt3dadd( 6.1185, 56.8099, 4.89613, 0.12 ) }
    dend_24 { pt3dadd( 6.23843, 57.3344, 4.56697, 0.12 ) }
    dend_24 { pt3dadd( 6.47282, 58.5837, 3.70862, 0.12 ) }
    dend_24 { pt3dadd( 6.55322, 59.1278, 3.3095, 1.2 ) }
    dend_24 { pt3dadd( 6.73965, 61.1379, 1.86094, 0.12 ) }
    dend_24 { pt3dadd( 6.78129, 62.2434, 1.07323, 0.12 ) }
    dend_24 { pt3dadd( 6.78407, 62.4374, 0.93611, 0.48 ) }
    dend_24 { pt3dadd( 6.74852, 63.0572, 0.410762, 0.12 ) }
    dend_24 { pt3dadd( 6.67467, 63.5031, 0.0122857, 0.12 ) }
    dend_24 { pt3dadd( 6.3422, 64.5236, -1.05637, 0.12 ) }
    dend_24 { pt3dadd( 6.13516, 64.9788, -1.56634, 1.2 ) }
    dend_24 { pt3dadd( 6.00613, 65.1711, -1.85349, 1.2 ) }
    dend_24 { pt3dadd( 4.7432, 66.6798, -4.49768, 0.12 ) }
    dend_24 { pt3dadd( 4.21132, 67.1918, -5.50352, 0.12 ) }
    dend_24 { pt3dadd( 2.72482, 68.3471, -8.44935, 0.12 ) }
    dend_24 { pt3dadd( 2.55507, 68.4525, -8.80866, 0.12 ) }
    dend_24 { pt3dadd( 1.75321, 68.9453, -10.737, 0.6 ) }
    dend_24 { pt3dadd( 1.64206, 69.0177, -11.0352, 0.6 ) }
    dend_24 { pt3dadd( 1.44357, 69.1919, -11.8183, 0.6 ) }
    dend_24 { pt3dadd( 1.48227, 69.6159, -13.7591, 0.12 ) }
    dend_24 { pt3dadd( 1.78697, 69.8471, -14.0472, 0.12 ) }
    dend_24 { pt3dadd( 2.91459, 70.9744, -14.7378, 0.12 ) }
    dend_24 { pt3dadd( 3.35588, 71.5707, -14.9156, 0.6 ) }
    dend_24 { pt3dadd( 3.67948, 72.1512, -15.0212, 0.12 ) }
    dend_24 { pt3dadd( 4.05423, 72.8916, -15.0983, 0.12 ) }
    dend_24 { pt3dadd( 4.37637, 73.7923, -15.0861, 0.12 ) }
    dend_24 { pt3dadd( 4.6062, 74.8507, -15.0622, 0.12 ) }
    dend_24 { pt3dadd( 4.6335, 75.8361, -15.0335, 0.12 ) }
    dend_24 { pt3dadd( 4.59511, 76.5114, -15.0327, 0.36 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 90/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.455208, 39.243, 13.159, 0.72 ) }
    dend_23 { pt3dadd( -0.684976, 39.8712, 13.1352, 0.72 ) }
    dend_23 { pt3dadd( -0.917848, 40.537, 13.1103, 0.84 ) }
    dend_23 { pt3dadd( -1.08666, 41.0275, 13.0911, 1.08 ) }
    dend_23 { pt3dadd( -1.3384, 41.7921, 13.0337, 0.72 ) }
    dend_23 { pt3dadd( -1.60239, 42.6603, 12.9574, 0.48 ) }
    dend_23 { pt3dadd( -1.77714, 43.3011, 12.8989, 0.48 ) }
    dend_23 { pt3dadd( -1.9028, 43.8482, 12.8492, 0.72 ) }
    dend_23 { pt3dadd( -1.99985, 44.3086, 12.8084, 0.96 ) }
    dend_23 { pt3dadd( -2.15096, 45.0844, 12.7413, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_23 { pt3dadd( -2.26736, 45.7089, 12.6933, 0.72 ) }
    dend_23 { pt3dadd( -2.39907, 46.4271, 12.6581, 0.72 ) }
    dend_23 { pt3dadd( -2.58916, 47.3101, 12.6229, 0.72 ) }
    dend_23 { pt3dadd( -2.66616, 47.6049, 12.63, 0.72 ) }
    dend_23 { pt3dadd( -2.78417, 48.0214, 12.6677, 0.72 ) }
    dend_23 { pt3dadd( -3.05847, 48.9438, 12.7919, 0.6 ) }
    dend_23 { pt3dadd( -3.24898, 49.5719, 12.8377, 0.6 ) }
    dend_23 { pt3dadd( -3.58478, 50.6291, 12.9269, 0.48 ) }
    dend_23 { pt3dadd( -3.9215, 51.6957, 13.0146, 0.48 ) }
    dend_23 { pt3dadd( -4.24472, 52.7046, 13.0628, 0.48 ) }
    dend_23 { pt3dadd( -4.64165, 53.9361, 13.0873, 0.6 ) }
    dend_23 { pt3dadd( -5.17001, 55.6164, 13.1155, 0.6 ) }
    dend_23 { pt3dadd( -5.60026, 57.0635, 13.1306, 0.72 ) }
    dend_23 { pt3dadd( -5.92501, 58.2459, 13.1293, 0.6 ) }
    dend_23 { pt3dadd( -6.18949, 59.2283, 13.1052, 0.12 ) }
    dend_23 { pt3dadd( -6.35852, 59.838, 13.0965, 0.12 ) }
    dend_23 { pt3dadd( -6.64541, 60.8795, 13.099, 0.12 ) }
    dend_23 { pt3dadd( -6.97477, 62.1638, 13.1317, 0.24 ) }
    dend_23 { pt3dadd( -7.21854, 63.2319, 13.1107, 0.24 ) }
    dend_23 { pt3dadd( -7.33597, 63.7886, 13.1102, 0.24 ) }
    dend_23 { pt3dadd( -7.41618, 64.2082, 13.1187, 0.6 ) }
    dend_23 { pt3dadd( -7.52641, 64.7569, 13.1106, 0.12 ) }
    dend_23 { pt3dadd( -7.63457, 65.2637, 13.0768, 0.24 ) }
    dend_23 { pt3dadd( -7.74354, 65.7895, 13.0357, 0.24 ) }
    dend_23 { pt3dadd( -7.77378, 65.9352, 13.0233, 0.24 ) }
    dend_23 { pt3dadd( -7.91112, 66.5515, 12.9708, 0.36 ) }
    dend_23 { pt3dadd( -8.17482, 67.5972, 12.9065, 0.36 ) }
    dend_23 { pt3dadd( -8.3941, 68.3688, 12.8734, 0.36 ) }
    dend_23 { pt3dadd( -8.51841, 68.7122, 12.8655, 0.48 ) }
    dend_23 { pt3dadd( -8.90514, 69.6206, 12.8576, 0.48 ) }
    dend_23 { pt3dadd( -9.2668, 70.3755, 12.8589, 0.48 ) }
    dend_23 { pt3dadd( -9.56631, 70.9388, 12.8765, 0.6 ) }
    dend_23 { pt3dadd( -9.81436, 71.3897, 12.9061, 0.72 ) }
    dend_23 { pt3dadd( -10.2965, 72.3249, 12.992, 0.36 ) }
    dend_23 { pt3dadd( -10.643, 73.0833, 13.0697, 0.36 ) }
    dend_23 { pt3dadd( -10.6804, 73.181, 13.0793, 0.48 ) }
    dend_23 { pt3dadd( -10.8623, 73.8012, 13.1307, 0.36 ) }
    dend_23 { pt3dadd( -11.0246, 74.6303, 13.1776, 0.36 ) }
    dend_23 { pt3dadd( -11.1518, 75.6768, 13.2183, 0.36 ) }
    dend_23 { pt3dadd( -11.2176, 76.6425, 13.2362, 0.36 ) }
    dend_23 { pt3dadd( -11.2575, 77.2857, 13.2402, 0.36 ) }
    dend_23 { pt3dadd( -11.2907, 77.8056, 13.2357, 0.6 ) }
    dend_23 { pt3dadd( -11.3691, 78.959, 13.2059, 0.84 ) }
    dend_23 { pt3dadd( -11.4131, 79.5131, 13.1886, 0.36 ) }
    dend_23 { pt3dadd( -11.491, 80.4079, 13.1594, 0.36 ) }
    dend_23 { pt3dadd( -11.5628, 81.3013, 13.1325, 0.36 ) }
    dend_23 { pt3dadd( -11.6558, 82.5642, 13.0985, 0.36 ) }
    dend_23 { pt3dadd( -11.6935, 83.1987, 13.0848, 0.48 ) }
    dend_23 { pt3dadd( -11.706, 83.5164, 13.0804, 0.48 ) }
    dend_23 { pt3dadd( -11.7074, 83.8516, 13.0796, 0.24 ) }
    dend_23 { pt3dadd( -11.6816, 84.8025, 13.0928, 0.24 ) }
    dend_23 { pt3dadd( -11.6513, 85.4377, 13.1122, 0.6 ) }
    dend_23 { pt3dadd( -11.6127, 86.1771, 13.1419, 0.6 ) }
    dend_23 { pt3dadd( -11.5848, 86.706, 13.1656, 0.48 ) }
    dend_23 { pt3dadd( -11.5386, 87.658, 13.2124, 0.48 ) }
    dend_23 { pt3dadd( -11.5091, 88.2469, 13.2429, 0.12 ) }
    dend_23 { pt3dadd( -11.4491, 89.4014, 13.3014, 0.12 ) }
    dend_23 { pt3dadd( -11.4019, 90.3446, 13.3444, 0.12 ) }
    dend_23 { pt3dadd( -11.3916, 90.5563, 13.3528, 0.72 ) }
    dend_23 { pt3dadd( -11.3564, 91.291, 13.3762, 0.84 ) }
    dend_23 { pt3dadd( -11.3122, 92.2501, 13.3895, 0.36 ) }
    dend_23 { pt3dadd( -11.2439, 93.7192, 13.3849, 0.36 ) }
    dend_23 { pt3dadd( -11.2044, 94.6637, 13.3752, 0.36 ) }
    dend_23 { pt3dadd( -11.182, 95.4055, 13.3621, 0.36 ) }
    dend_23 { pt3dadd( -11.1723, 96.1462, 13.3459, 0.48 ) }
    dend_23 { pt3dadd( -11.1772, 97.2185, 13.318, 0.96 ) }
    dend_23 { pt3dadd( -11.1835, 97.5363, 13.3095, 0.96 ) }
    dend_23 { pt3dadd( -11.2058, 98.2688, 13.29, 0.36 ) }
    dend_23 { pt3dadd( -11.2423, 99.1416, 13.2686, 0.36 ) }
    dend_23 { pt3dadd( -11.3101, 100.518, 13.2403, 0.36 ) }
    dend_23 { pt3dadd( -11.3805, 101.783, 13.2211, 0.36 ) }
    dend_23 { pt3dadd( -11.4097, 102.205, 13.2169, 0.48 ) }
    dend_23 { pt3dadd( -11.4392, 102.539, 13.2118, 0.36 ) }
    dend_23 { pt3dadd( -11.5111, 103.17, 13.1919, 0.36 ) }
    dend_23 { pt3dadd( -11.6342, 104.11, 13.1503, 0.48 ) }
    dend_23 { pt3dadd( -11.6884, 104.44, 13.1308, 0.36 ) }
    dend_23 { pt3dadd( -11.9707, 106.011, 13.0288, 0.36 ) }
    dend_23 { pt3dadd( -12.2344, 107.412, 12.9326, 0.48 ) }
    dend_23 { pt3dadd( -12.4349, 108.441, 12.8581, 0.96 ) }
    dend_23 { pt3dadd( -12.5236, 108.866, 12.8244, 0.6 ) }
    dend_23 { pt3dadd( -12.7625, 109.914, 12.7318, 0.72 ) }
    dend_23 { pt3dadd( -14.8641, 118.431, 12.1274, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 82/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.53381, -17.8175, -9.96141, 1.56 ) }
    dend_19 { pt3dadd( -3.01671, -17.7369, -11.5732, 1.56 ) }
    dend_19 { pt3dadd( -0.7561, -17.3845, -18.6195, 1.44 ) }
    dend_19 { pt3dadd( 1.12034, -17.0919, -24.4683, 2.04 ) }
    dend_19 { pt3dadd( 1.76187, -16.9919, -26.4679, 1.32 ) }
    dend_19 { pt3dadd( 2.02564, -16.9508, -27.2901, 1.2 ) }
    dend_19 { pt3dadd( 2.17383, -16.9277, -27.752, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_11 (entry count 89/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.53381, -17.8175, -9.96141, 0.48 ) }
    dend_14 { pt3dadd( -4.2061, -19.2202, -9.78946, 0.48 ) }
    dend_14 { pt3dadd( -4.48059, -19.7593, -9.70044, 0.48 ) }
    dend_14 { pt3dadd( -4.88389, -20.5406, -9.56419, 0.72 ) }
    dend_14 { pt3dadd( -5.42724, -21.6288, -9.42922, 1.2 ) }
    dend_14 { pt3dadd( -6.04729, -22.8853, -9.27388, 0.6 ) }
    dend_14 { pt3dadd( -6.49999, -23.8281, -9.16198, 0.36 ) }
    dend_14 { pt3dadd( -7.00027, -24.8703, -9.06538, 0.36 ) }
    dend_14 { pt3dadd( -7.39191, -25.7082, -8.99087, 0.48 ) }
    dend_14 { pt3dadd( -7.96363, -26.9946, -8.85174, 0.84 ) }
    dend_14 { pt3dadd( -8.44292, -28.2232, -8.70976, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( -8.72084, -29.0669, -8.60522, 0.72 ) }
    dend_14 { pt3dadd( -8.99779, -30.0186, -8.469, 0.72 ) }
    dend_14 { pt3dadd( -9.18963, -30.7205, -8.37588, 0.72 ) }
    dend_14 { pt3dadd( -9.50371, -31.9386, -8.19279, 0.84 ) }
    dend_14 { pt3dadd( -9.81268, -33.2111, -7.95833, 0.84 ) }
    dend_14 { pt3dadd( -10.0196, -34.1335, -7.78676, 0.48 ) }
    dend_14 { pt3dadd( -10.1773, -34.8648, -7.6473, 0.6 ) }
    dend_14 { pt3dadd( -10.3295, -35.5839, -7.5049, 1.08 ) }
    dend_14 { pt3dadd( -10.4618, -36.1799, -7.38883, 1.32 ) }
    dend_14 { pt3dadd( -10.7853, -37.602, -7.15736, 0.96 ) }
    dend_14 { pt3dadd( -11.0671, -38.8248, -6.94714, 0.96 ) }
    dend_14 { pt3dadd( -11.3904, -40.2715, -6.70139, 0.72 ) }
    dend_14 { pt3dadd( -11.7606, -41.9455, -6.4215, 0.72 ) }
    dend_14 { pt3dadd( -12.0797, -43.4262, -6.18624, 0.96 ) }
    dend_14 { pt3dadd( -12.4003, -44.9255, -5.95671, 1.2 ) }
    dend_14 { pt3dadd( -12.6591, -46.1412, -5.79631, 0.6 ) }
    dend_14 { pt3dadd( -12.8129, -46.8667, -5.70811, 0.6 ) }
    dend_14 { pt3dadd( -13.063, -48.0508, -5.55678, 0.6 ) }
    dend_14 { pt3dadd( -13.2314, -48.9142, -5.46791, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.53381, -17.8175, -9.96141, 1.44 ) }
    dend_12 { pt3dadd( -3.0529, -18.7427, -10.5307, 1.44 ) }
    dend_12 { pt3dadd( -2.42437, -20.4297, -11.3631, 0.72 ) }
    dend_12 { pt3dadd( -2.29031, -21.0249, -11.5871, 0.12 ) }
    dend_12 { pt3dadd( -2.24942, -21.4637, -11.7054, 0.24 ) }
    dend_12 { pt3dadd( -2.2457, -21.8184, -11.7733, 0.24 ) }
    dend_12 { pt3dadd( -2.27112, -22.8782, -11.9298, 0.24 ) }
    dend_12 { pt3dadd( -2.36173, -23.6749, -12.0209, 0.48 ) }
    dend_12 { pt3dadd( -2.49003, -24.4737, -12.1042, 0.6 ) }
    dend_12 { pt3dadd( -2.66113, -25.4539, -12.2547, 0.36 ) }
    dend_12 { pt3dadd( -2.86505, -26.542, -12.4566, 0.36 ) }
    dend_12 { pt3dadd( -3.00368, -27.3173, -12.6227, 0.36 ) }
    dend_12 { pt3dadd( -3.15047, -28.3555, -12.9017, 0.72 ) }
    dend_12 { pt3dadd( -3.2377, -29.4154, -13.2276, 0.36 ) }
    dend_12 { pt3dadd( -3.24721, -30.1899, -13.4987, 0.36 ) }
    dend_12 { pt3dadd( -3.20988, -30.7226, -13.6955, 0.6 ) }
    dend_12 { pt3dadd( -3.16702, -31.1693, -13.8727, 0.6 ) }
    dend_12 { pt3dadd( -3.09603, -32.036, -14.223, 0.36 ) }
    dend_12 { pt3dadd( -3.05196, -32.9039, -14.5451, 0.36 ) }
    dend_12 { pt3dadd( -3.04578, -33.6984, -14.8524, 0.36 ) }
    dend_12 { pt3dadd( -3.05872, -34.5572, -15.1975, 0.48 ) }
    dend_12 { pt3dadd( -3.12828, -35.7877, -15.7185, 0.6 ) }
    dend_12 { pt3dadd( -3.23515, -36.6372, -16.0722, 0.84 ) }
    dend_12 { pt3dadd( -3.35917, -37.2583, -16.32, 0.84 ) }
    dend_12 { pt3dadd( -3.60349, -38.1926, -16.6742, 0.36 ) }
    dend_12 { pt3dadd( -3.95612, -39.3741, -17.1074, 0.36 ) }
    dend_12 { pt3dadd( -4.23282, -40.2581, -17.4215, 0.48 ) }
    dend_12 { pt3dadd( -4.4262, -40.9897, -17.6524, 0.48 ) }
    dend_12 { pt3dadd( -4.66057, -42.0006, -17.9594, 0.84 ) }
    dend_12 { pt3dadd( -4.93123, -43.2574, -18.3503, 1.32 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 49/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 18.6962, -10.1085, -10.7778, 0.6 ) }
    dend_10 { pt3dadd( 20.1903, -11.3213, -9.75752, 0.6 ) }
    dend_10 { pt3dadd( 20.9344, -11.8409, -9.42553, 0.6 ) }
    dend_10 { pt3dadd( 21.8552, -12.4467, -9.16459, 0.6 ) }
    dend_10 { pt3dadd( 22.4677, -12.8477, -9.05957, 0.6 ) }
    dend_10 { pt3dadd( 23.4997, -13.5317, -8.85136, 0.48 ) }
    dend_10 { pt3dadd( 24.0706, -13.9225, -8.72902, 0.84 ) }
    dend_10 { pt3dadd( 24.7362, -14.3784, -8.67556, 0.84 ) }
    dend_10 { pt3dadd( 25.4645, -14.8922, -8.6295, 0.36 ) }
    dend_10 { pt3dadd( 26.653, -15.8561, -8.58449, 0.48 ) }
    dend_10 { pt3dadd( 27.6308, -16.7875, -8.51062, 0.96 ) }
    dend_10 { pt3dadd( 27.902, -17.1054, -8.47331, 1.08 ) }
    dend_10 { pt3dadd( 28.4359, -17.8719, -8.42024, 0.48 ) }
    dend_10 { pt3dadd( 28.6312, -18.2065, -8.39795, 0.48 ) }
    dend_10 { pt3dadd( 29.0188, -18.9755, -8.3462, 0.72 ) }
    dend_10 { pt3dadd( 29.3639, -19.7797, -8.31455, 1.2 ) }
    dend_10 { pt3dadd( 29.8235, -20.9541, -8.30159, 1.32 ) }
    dend_10 { pt3dadd( 30.1616, -21.837, -8.24577, 0.6 ) }
    dend_10 { pt3dadd( 30.5428, -22.8499, -8.11608, 0.96 ) }
    dend_10 { pt3dadd( 30.8243, -23.5835, -7.99811, 0.96 ) }
    dend_10 { pt3dadd( 31.1327, -24.3674, -7.85734, 0.6 ) }
    dend_10 { pt3dadd( 31.4289, -25.1256, -7.70916, 0.6 ) }
    dend_10 { pt3dadd( 31.8211, -26.2114, -7.49332, 0.72 ) }
    dend_10 { pt3dadd( 32.0441, -26.9028, -7.36584, 0.84 ) }
    dend_10 { pt3dadd( 32.3503, -27.9565, -7.19411, 1.08 ) }
    dend_10 { pt3dadd( 32.6014, -28.9338, -7.04249, 1.08 ) }
    dend_10 { pt3dadd( 32.822, -29.8973, -6.9063, 0.48 ) }
    dend_10 { pt3dadd( 33.1036, -31.2346, -6.7616, 0.48 ) }
    dend_10 { pt3dadd( 33.2561, -32.0663, -6.70496, 0.48 ) }
    dend_10 { pt3dadd( 33.4404, -33.2299, -6.61823, 0.96 ) }
    dend_10 { pt3dadd( 33.5827, -34.3139, -6.51158, 0.96 ) }
    dend_10 { pt3dadd( 33.6877, -35.1357, -6.42867, 0.6 ) }
    dend_10 { pt3dadd( 33.7953, -35.943, -6.35455, 0.48 ) }
    dend_10 { pt3dadd( 33.8881, -36.6278, -6.29376, 0.6 ) }
    dend_10 { pt3dadd( 34.0531, -37.7743, -6.17785, 0.84 ) }
    dend_10 { pt3dadd( 34.2253, -38.8652, -6.06735, 0.6 ) }
    dend_10 { pt3dadd( 34.3918, -39.8109, -5.96421, 0.48 ) }
    dend_10 { pt3dadd( 34.5177, -40.4915, -5.89438, 0.48 ) }
    dend_10 { pt3dadd( 34.7043, -41.4279, -5.80667, 0.6 ) }
    dend_10 { pt3dadd( 34.9213, -42.3486, -5.74092, 0.96 ) }
    dend_10 { pt3dadd( 35.2144, -43.4402, -5.71353, 1.08 ) }
    dend_10 { pt3dadd( 35.4838, -44.381, -5.70442, 0.84 ) }
    dend_10 { pt3dadd( 35.712, -45.1981, -5.69987, 0.6 ) }
    dend_10 { pt3dadd( 35.9023, -45.8634, -5.70934, 0.48 ) }
    dend_10 { pt3dadd( 36.1969, -46.8629, -5.75451, 0.6 ) }
    dend_10 { pt3dadd( 36.4915, -47.8936, -5.83064, 0.84 ) }
    dend_10 { pt3dadd( 36.7558, -48.8327, -5.90384, 0.96 ) }
    dend_10 { pt3dadd( 37.0066, -49.7539, -5.97191, 1.08 ) }
    dend_10 { pt3dadd( 37.2042, -50.5352, -6.02175, 0.72 ) }
    dend_10 { pt3dadd( 37.3695, -51.2944, -6.06338, 0.48 ) }
    dend_10 { pt3dadd( 37.5296, -52.1217, -6.09651, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_10 { pt3dadd( 37.6276, -52.6559, -6.10568, 0.48 ) }
    dend_10 { pt3dadd( 37.7682, -53.4878, -6.11556, 0.84 ) }
    dend_10 { pt3dadd( 37.8269, -53.8882, -6.11673, 0.96 ) }
    dend_10 { pt3dadd( 37.9225, -54.7156, -6.10891, 0.96 ) }
    dend_10 { pt3dadd( 37.9954, -55.4078, -6.08292, 0.6 ) }
    dend_10 { pt3dadd( 38.0428, -55.8439, -6.06389, 0.48 ) }
    dend_10 { pt3dadd( 38.146, -56.7981, -6.03574, 0.48 ) }
    dend_10 { pt3dadd( 38.2233, -57.4862, -5.98837, 0.6 ) }
    dend_10 { pt3dadd( 38.3391, -58.4443, -5.89301, 0.84 ) }
    dend_10 { pt3dadd( 38.4555, -59.4435, -5.76931, 0.72 ) }
    dend_10 { pt3dadd( 38.5524, -60.2662, -5.65409, 0.48 ) }
    dend_10 { pt3dadd( 38.6899, -61.3937, -5.48634, 0.6 ) }
    dend_10 { pt3dadd( 38.8388, -62.4637, -5.32396, 0.48 ) }
    dend_10 { pt3dadd( 38.9755, -63.2869, -5.20271, 0.72 ) }
    dend_10 { pt3dadd( 39.133, -64.0961, -5.093, 1.08 ) }
    dend_10 { pt3dadd( 39.2933, -64.82, -5.01053, 0.6 ) }
    dend_10 { pt3dadd( 39.5012, -65.6509, -4.92997, 0.6 ) }
    dend_10 { pt3dadd( 39.7706, -66.6052, -4.83236, 0.6 ) }
    dend_10 { pt3dadd( 39.9626, -67.2679, -4.78109, 0.6 ) }
    dend_10 { pt3dadd( 40.1744, -67.9787, -4.71067, 0.84 ) }
    dend_10 { pt3dadd( 40.3681, -68.6408, -4.63422, 0.84 ) }
    dend_10 { pt3dadd( 40.5786, -69.4841, -4.52798, 0.84 ) }
    dend_10 { pt3dadd( 40.7747, -70.4393, -4.43424, 0.48 ) }
    dend_10 { pt3dadd( 40.8628, -70.9858, -4.39503, 0.84 ) }
    dend_10 { pt3dadd( 40.9367, -71.6637, -4.36582, 1.2 ) }
    dend_10 { pt3dadd( 40.9944, -72.4948, -4.35597, 1.44 ) }
    dend_10 { pt3dadd( 41.0365, -73.3251, -4.40866, 0.84 ) }
    dend_10 { pt3dadd( 41.0584, -74.258, -4.5757, 0.48 ) }
    dend_10 { pt3dadd( 41.0566, -74.5569, -4.65523, 0.72 ) }
    dend_10 { pt3dadd( 41.0483, -75.0876, -4.82828, 0.84 ) }
    dend_10 { pt3dadd( 41.0411, -75.6066, -5.01576, 0.84 ) }
    dend_10 { pt3dadd( 41.0316, -76.492, -5.36718, 0.6 ) }
    dend_10 { pt3dadd( 41.0261, -77.5882, -5.78828, 0.48 ) }
    dend_10 { pt3dadd( 41.0202, -78.5118, -6.15134, 0.48 ) }
    dend_10 { pt3dadd( 41.0201, -79.1107, -6.38811, 0.6 ) }
    dend_10 { pt3dadd( 41.0309, -79.7555, -6.63819, 0.72 ) }
    dend_10 { pt3dadd( 41.0617, -80.5494, -6.91773, 0.72 ) }
    dend_10 { pt3dadd( 41.1332, -81.5886, -7.25014, 0.84 ) }
    dend_10 { pt3dadd( 41.2822, -82.8187, -7.61378, 0.84 ) }
    dend_10 { pt3dadd( 41.4051, -83.613, -7.81892, 0.84 ) }
    dend_10 { pt3dadd( 41.5006, -84.1695, -7.93375, 0.6 ) }
    dend_10 { pt3dadd( 41.6831, -85.1391, -8.09702, 0.48 ) }
    dend_10 { pt3dadd( 41.8698, -86.0479, -8.20978, 0.48 ) }
    dend_10 { pt3dadd( 42.0851, -87.0295, -8.29417, 0.48 ) }
    dend_10 { pt3dadd( 42.2817, -87.927, -8.32466, 0.48 ) }
    dend_10 { pt3dadd( 42.3984, -88.4863, -8.33884, 0.48 ) }
    dend_10 { pt3dadd( 42.5051, -89.0478, -8.32119, 0.6 ) }
    dend_10 { pt3dadd( 42.7016, -90.1798, -8.22487, 0.6 ) }
    dend_10 { pt3dadd( 42.8145, -90.8643, -8.12924, 0.84 ) }
    dend_10 { pt3dadd( 42.8718, -91.2711, -8.06385, 1.08 ) }
    dend_10 { pt3dadd( 42.9769, -91.9675, -7.99782, 1.08 ) }
    dend_10 { pt3dadd( 43.1695, -93.0815, -7.99351, 0.6 ) }
    dend_10 { pt3dadd( 43.2766, -93.4855, -8.1174, 0.6 ) }
    dend_10 { pt3dadd( 43.4188, -93.7856, -8.38723, 0.72 ) }
    dend_10 { pt3dadd( 43.5904, -94.0407, -8.75986, 0.84 ) }
    dend_10 { pt3dadd( 44.1753, -94.7245, -9.963, 0.84 ) }
    dend_10 { pt3dadd( 44.6936, -95.1714, -10.9464, 1.08 ) }
    dend_10 { pt3dadd( 45.3944, -95.6155, -12.1536, 0.72 ) }
    dend_10 { pt3dadd( 45.6523, -95.7374, -12.5374, 0.72 ) }
    dend_10 { pt3dadd( 46.2713, -95.9834, -13.3166, 0.6 ) }
    dend_10 { pt3dadd( 46.6737, -96.1401, -13.7235, 0.6 ) }
    dend_10 { pt3dadd( 47.2591, -96.4111, -14.1708, 0.6 ) }
    dend_10 { pt3dadd( 47.7072, -96.6865, -14.444, 0.6 ) }
    dend_10 { pt3dadd( 48.3351, -97.1771, -14.7657, 0.6 ) }
    dend_10 { pt3dadd( 48.7596, -97.6319, -15.0296, 1.08 ) }
    dend_10 { pt3dadd( 49.1399, -98.2039, -15.2975, 1.08 ) }
    dend_10 { pt3dadd( 49.502, -98.8844, -15.6344, 0.6 ) }
    dend_10 { pt3dadd( 49.7662, -99.4256, -15.9529, 0.6 ) }
    dend_10 { pt3dadd( 49.9458, -99.7449, -16.1895, 0.6 ) }
    dend_10 { pt3dadd( 50.434, -100.394, -16.8644, 0.6 ) }
    dend_10 { pt3dadd( 50.6852, -100.645, -17.1919, 0.6 ) }
    dend_10 { pt3dadd( 51.2457, -101.085, -17.8446, 0.84 ) }
    dend_10 { pt3dadd( 51.9939, -101.561, -18.593, 0.84 ) }
    dend_10 { pt3dadd( 52.815, -102.016, -19.3266, 0.96 ) }
    dend_10 { pt3dadd( 53.756, -102.49, -20.0886, 0.84 ) }
    dend_10 { pt3dadd( 54.2599, -102.738, -20.4455, 0.6 ) }
    dend_10 { pt3dadd( 54.7711, -103.018, -20.7698, 0.72 ) }
    dend_10 { pt3dadd( 55.1986, -103.292, -20.9991, 0.72 ) }
    dend_10 { pt3dadd( 55.8121, -103.762, -21.2573, 0.48 ) }
    dend_10 { pt3dadd( 56.273, -104.18, -21.4265, 0.48 ) }
    dend_10 { pt3dadd( 56.7928, -104.719, -21.588, 0.48 ) }
    dend_10 { pt3dadd( 57.3669, -105.386, -21.783, 0.48 ) }
    dend_10 { pt3dadd( 57.979, -106.191, -21.998, 0.36 ) }
    dend_10 { pt3dadd( 58.5269, -106.986, -22.1778, 0.36 ) }
    dend_10 { pt3dadd( 58.8871, -107.53, -22.2804, 0.6 ) }
    dend_10 { pt3dadd( 59.4571, -108.411, -22.4272, 0.6 ) }
    dend_10 { pt3dadd( 59.7853, -108.922, -22.5064, 0.48 ) }
    dend_10 { pt3dadd( 60.3475, -109.784, -22.6137, 0.48 ) }
    dend_10 { pt3dadd( 60.9401, -110.67, -22.6878, 0.48 ) }
    dend_10 { pt3dadd( 61.6139, -111.635, -22.7507, 0.48 ) }
    dend_10 { pt3dadd( 62.0149, -112.187, -22.7728, 0.6 ) }
    dend_10 { pt3dadd( 62.4451, -112.77, -22.7857, 0.6 ) }
    dend_10 { pt3dadd( 62.9749, -113.486, -22.7837, 0.84 ) }
    dend_10 { pt3dadd( 63.3654, -114.047, -22.7764, 0.48 ) }
    dend_10 { pt3dadd( 63.7725, -114.697, -22.7634, 0.48 ) }
    dend_10 { pt3dadd( 64.0094, -115.132, -22.7516, 0.48 ) }
    dend_10 { pt3dadd( 64.3499, -115.777, -22.7676, 0.72 ) }
    dend_10 { pt3dadd( 64.7587, -116.542, -22.8178, 0.84 ) }
    dend_10 { pt3dadd( 65.3494, -117.685, -22.9655, 0.48 ) }
    dend_10 { pt3dadd( 65.684, -118.335, -23.0758, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( 66.3305, -119.571, -23.363, 0.48 ) }
    dend_10 { pt3dadd( 66.8467, -120.511, -23.6275, 0.6 ) }
    dend_10 { pt3dadd( 67.1428, -121.013, -23.7949, 0.6 ) }
    dend_10 { pt3dadd( 67.6335, -121.757, -24.0986, 0.48 ) }
    dend_10 { pt3dadd( 68.1096, -122.409, -24.4013, 0.48 ) }
    dend_10 { pt3dadd( 68.6147, -123.065, -24.7147, 0.84 ) }
    dend_10 { pt3dadd( 69.0141, -123.567, -24.9368, 0.84 ) }
    dend_10 { pt3dadd( 69.2371, -123.866, -25.0344, 0.84 ) }
    dend_10 { pt3dadd( 69.761, -124.608, -25.2496, 0.6 ) }
    dend_10 { pt3dadd( 70.1342, -125.166, -25.3767, 0.48 ) }
    dend_10 { pt3dadd( 70.4404, -125.675, -25.474, 0.48 ) }
    dend_10 { pt3dadd( 70.8682, -126.429, -25.6108, 0.48 ) }
    dend_10 { pt3dadd( 71.2071, -127.067, -25.7331, 0.48 ) }
    dend_10 { pt3dadd( 71.598, -127.809, -25.8652, 0.36 ) }
    dend_10 { pt3dadd( 71.986, -128.53, -25.961, 0.36 ) }
    dend_10 { pt3dadd( 72.2693, -129.018, -25.9977, 0.6 ) }
    dend_10 { pt3dadd( 72.7594, -129.826, -26.0218, 0.6 ) }
    dend_10 { pt3dadd( 73.1702, -130.5, -26.0123, 0.6 ) }
    dend_10 { pt3dadd( 73.9385, -131.741, -25.8961, 0.6 ) }
    dend_10 { pt3dadd( 74.6838, -132.907, -25.7045, 0.6 ) }
    dend_10 { pt3dadd( 75.3483, -133.937, -25.4966, 0.36 ) }
    dend_10 { pt3dadd( 75.5949, -134.332, -25.4052, 0.36 ) }
    dend_10 { pt3dadd( 76.1309, -135.286, -25.1693, 0.36 ) }
    dend_10 { pt3dadd( 76.6629, -136.358, -24.9244, 0.84 ) }
    dend_10 { pt3dadd( 77.0464, -137.236, -24.7515, 0.6 ) }
    dend_10 { pt3dadd( 77.4578, -138.248, -24.6076, 0.6 ) }
    dend_10 { pt3dadd( 77.7786, -139.062, -24.5114, 0.36 ) }
    dend_10 { pt3dadd( 78.2414, -140.197, -24.3843, 0.36 ) }
    dend_10 { pt3dadd( 78.5535, -140.947, -24.3102, 0.36 ) }
    dend_10 { pt3dadd( 78.9366, -141.863, -24.2499, 0.48 ) }
    dend_10 { pt3dadd( 79.6034, -143.442, -24.15, 0.48 ) }
    dend_10 { pt3dadd( 79.9435, -144.256, -24.1008, 0.48 ) }
    dend_10 { pt3dadd( 80.2737, -145.075, -24.0798, 0.72 ) }
    dend_10 { pt3dadd( 80.4795, -145.647, -24.0808, 0.72 ) }
    dend_10 { pt3dadd( 80.6809, -146.467, -24.129, 0.48 ) }
    dend_10 { pt3dadd( 80.7697, -147.476, -24.3789, 0.48 ) }
    dend_10 { pt3dadd( 80.7565, -148.109, -24.6508, 0.48 ) }
    dend_10 { pt3dadd( 80.6981, -149.034, -25.1564, 0.6 ) }
    dend_10 { pt3dadd( 80.6346, -149.762, -25.6438, 0.6 ) }
    dend_10 { pt3dadd( 80.564, -150.619, -26.3008, 0.48 ) }
    dend_10 { pt3dadd( 80.4578, -152.318, -27.7549, 0.48 ) }
    dend_10 { pt3dadd( 80.4458, -152.885, -28.2713, 0.48 ) }
    dend_10 { pt3dadd( 80.4617, -153.101, -28.4689, 0.48 ) }
    dend_10 { pt3dadd( 80.6302, -154.096, -29.3289, 0.84 ) }
    dend_10 { pt3dadd( 80.8133, -154.846, -29.928, 0.96 ) }
    dend_10 { pt3dadd( 81.0875, -155.799, -30.6112, 0.96 ) }
    dend_10 { pt3dadd( 81.1727, -156.136, -30.8075, 0.96 ) }
    dend_10 { pt3dadd( 81.3609, -157.099, -31.3581, 0.48 ) }
    dend_10 { pt3dadd( 81.4653, -157.793, -31.7295, 0.84 ) }
    dend_10 { pt3dadd( 81.5716, -158.576, -32.0923, 0.48 ) }
    dend_10 { pt3dadd( 81.668, -159.326, -32.4111, 0.48 ) }
    dend_10 { pt3dadd( 81.7531, -160.003, -32.6744, 0.6 ) }
    dend_10 { pt3dadd( 81.9168, -161.27, -33.1737, 0.6 ) }
    dend_10 { pt3dadd( 82.0477, -162.285, -33.556, 0.36 ) }
    dend_10 { pt3dadd( 82.159, -163.02, -33.8336, 0.36 ) }
    dend_10 { pt3dadd( 82.2401, -163.423, -33.9777, 0.6 ) }
    dend_10 { pt3dadd( 82.3366, -163.782, -34.0963, 0.6 ) }
    dend_10 { pt3dadd( 82.6174, -164.54, -34.3429, 0.24 ) }
    dend_10 { pt3dadd( 82.8131, -164.977, -34.4595, 0.24 ) }
    dend_10 { pt3dadd( 82.9437, -165.246, -34.5278, 0.24 ) }
    dend_10 { pt3dadd( 83.1242, -165.629, -34.6233, 0.48 ) }
    dend_10 { pt3dadd( 83.4499, -166.302, -34.772, 0.36 ) }
    dend_10 { pt3dadd( 83.6901, -166.776, -34.8538, 0.36 ) }
    dend_10 { pt3dadd( 83.9417, -167.262, -34.9076, 0.36 ) }
    dend_10 { pt3dadd( 84.253, -167.869, -34.9869, 0.6 ) }
    dend_10 { pt3dadd( 84.5563, -168.471, -35.0637, 0.6 ) }
    dend_10 { pt3dadd( 84.8254, -168.984, -35.1236, 0.6 ) }
    dend_10 { pt3dadd( 85.2414, -169.745, -35.1942, 0.84 ) }
    dend_10 { pt3dadd( 85.657, -170.509, -35.2657, 0.84 ) }
    dend_10 { pt3dadd( 86.0667, -171.303, -35.3349, 0.24 ) }
    dend_10 { pt3dadd( 86.3059, -171.816, -35.3752, 0.24 ) }
    dend_10 { pt3dadd( 86.4729, -172.167, -35.3982, 0.48 ) }
    dend_10 { pt3dadd( 86.8307, -172.873, -35.4343, 0.48 ) }
    dend_10 { pt3dadd( 87.2676, -173.626, -35.4579, 0.48 ) }
    dend_10 { pt3dadd( 87.7449, -174.335, -35.4607, 0.24 ) }
    dend_10 { pt3dadd( 88.002, -174.682, -35.4502, 0.24 ) }
    dend_10 { pt3dadd( 88.7165, -175.603, -35.425, 0.24 ) }
    dend_10 { pt3dadd( 88.9822, -175.943, -35.417, 0.6 ) }
    dend_10 { pt3dadd( 89.4823, -176.56, -35.4052, 0.6 ) }
    dend_10 { pt3dadd( 89.91, -177.09, -35.3983, 0.6 ) }
    dend_10 { pt3dadd( 90.1696, -177.421, -35.4041, 0.6 ) }
    dend_10 { pt3dadd( 90.7239, -178.148, -35.4336, 0.36 ) }
    dend_10 { pt3dadd( 91.0923, -178.634, -35.4627, 0.36 ) }
    dend_10 { pt3dadd( 91.3319, -178.924, -35.4839, 0.72 ) }
    dend_10 { pt3dadd( 92.0326, -179.682, -35.5477, 0.72 ) }
    dend_10 { pt3dadd( 92.6527, -180.275, -35.6012, 0.72 ) }
    dend_10 { pt3dadd( 93.1044, -180.675, -35.6365, 0.48 ) }
    dend_10 { pt3dadd( 93.7687, -181.226, -35.6834, 0.48 ) }
    dend_10 { pt3dadd( 94.6159, -181.905, -35.7344, 0.48 ) }
    dend_10 { pt3dadd( 95.2264, -182.39, -35.7556, 0.36 ) }
    dend_10 { pt3dadd( 95.8256, -182.862, -35.7584, 0.36 ) }
    dend_10 { pt3dadd( 96.4184, -183.365, -35.7377, 0.36 ) }
    dend_10 { pt3dadd( 96.6984, -183.625, -35.7248, 0.6 ) }
    dend_10 { pt3dadd( 96.9656, -183.9, -35.7095, 0.6 ) }
    dend_10 { pt3dadd( 97.4889, -184.488, -35.674, 0.72 ) }
    dend_10 { pt3dadd( 97.8642, -184.914, -35.6479, 0.48 ) }
    dend_10 { pt3dadd( 98.1516, -185.233, -35.629, 0.48 ) }
    dend_10 { pt3dadd( 98.4911, -185.586, -35.6202, 0.6 ) }
    dend_10 { pt3dadd( 99.0328, -186.128, -35.6233, 0.6 ) }
    dend_10 { pt3dadd( 99.3264, -186.426, -35.6331, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 99.742, -186.867, -35.6572, 0.48 ) }
    dend_10 { pt3dadd( 99.9984, -187.153, -35.6787, 0.48 ) }
    dend_10 { pt3dadd( 100.67, -187.919, -35.7456, 0.36 ) }
    dend_10 { pt3dadd( 101.036, -188.352, -35.7857, 0.36 ) }
    dend_10 { pt3dadd( 101.495, -188.923, -35.836, 0.6 ) }
    dend_10 { pt3dadd( 102.051, -189.634, -35.8926, 0.6 ) }
    dend_10 { pt3dadd( 102.471, -190.222, -35.9307, 0.36 ) }
    dend_10 { pt3dadd( 102.788, -190.707, -35.9557, 0.36 ) }
    dend_10 { pt3dadd( 103.082, -191.199, -35.9918, 0.36 ) }
    dend_10 { pt3dadd( 103.611, -192.167, -36.082, 0.36 ) }
    dend_10 { pt3dadd( 103.866, -192.68, -36.1346, 0.72 ) }
    dend_10 { pt3dadd( 104.199, -193.442, -36.2343, 0.72 ) }
    dend_10 { pt3dadd( 104.507, -194.242, -36.3477, 0.84 ) }
    dend_10 { pt3dadd( 104.976, -195.598, -36.5516, 0.48 ) }
    dend_10 { pt3dadd( 105.31, -196.644, -36.7365, 0.36 ) }
    dend_10 { pt3dadd( 105.501, -197.283, -36.8606, 0.36 ) }
    dend_10 { pt3dadd( 105.785, -198.243, -37.0495, 0.72 ) }
    dend_10 { pt3dadd( 106.037, -199.053, -37.2009, 0.72 ) }
    dend_10 { pt3dadd( 106.359, -200.031, -37.3568, 0.72 ) }
    dend_10 { pt3dadd( 106.674, -200.902, -37.4616, 0.6 ) }
    dend_10 { pt3dadd( 106.952, -201.544, -37.5271, 0.12 ) }
    dend_10 { pt3dadd( 107.3, -202.254, -37.5771, 0.12 ) }
    dend_10 { pt3dadd( 107.523, -202.663, -37.5858, 0.48 ) }
    dend_10 { pt3dadd( 107.882, -203.241, -37.5871, 0.6 ) }
    dend_10 { pt3dadd( 108.266, -203.813, -37.5743, 0.48 ) }
    dend_10 { pt3dadd( 108.764, -204.52, -37.54, 0.36 ) }
    dend_10 { pt3dadd( 109.012, -204.874, -37.5266, 0.36 ) }
    dend_10 { pt3dadd( 109.57, -205.683, -37.5062, 0.36 ) }
    dend_10 { pt3dadd( 110.137, -206.483, -37.4062, 0.36 ) }
    dend_10 { pt3dadd( 110.58, -207.05, -37.2629, 0.36 ) }
    dend_10 { pt3dadd( 111.078, -207.61, -37.0422, 0.36 ) }
    dend_10 { pt3dadd( 111.434, -207.97, -36.8517, 0.72 ) }
    dend_10 { pt3dadd( 111.936, -208.448, -36.5502, 1.08 ) }
    dend_10 { pt3dadd( 113.239, -209.645, -35.6864, 0.96 ) }
    dend_10 { pt3dadd( 113.748, -210.107, -35.3612, 0.36 ) }
    dend_10 { pt3dadd( 114.04, -210.371, -35.1958, 0.36 ) }
    dend_10 { pt3dadd( 114.544, -210.848, -34.9773, 0.36 ) }
    dend_10 { pt3dadd( 115.009, -211.333, -34.8677, 0.36 ) }
    dend_10 { pt3dadd( 115.449, -211.851, -34.8778, 0.36 ) }
    dend_10 { pt3dadd( 115.969, -212.459, -34.9929, 0.48 ) }
    dend_10 { pt3dadd( 116.33, -212.865, -35.0747, 0.48 ) }
    dend_10 { pt3dadd( 116.74, -213.269, -35.1554, 0.36 ) }
    dend_10 { pt3dadd( 117.176, -213.638, -35.2002, 0.36 ) }
    dend_10 { pt3dadd( 117.899, -214.179, -35.2186, 0.36 ) }
    dend_10 { pt3dadd( 119.19, -215.072, -35.1564, 0.36 ) }
    dend_10 { pt3dadd( 119.757, -215.437, -35.0906, 0.36 ) }
    dend_10 { pt3dadd( 120.32, -215.792, -35.0096, 0.72 ) }
    dend_10 { pt3dadd( 121.178, -216.35, -34.8601, 0.6 ) }
    dend_10 { pt3dadd( 121.475, -216.566, -34.8034, 0.48 ) }
    dend_10 { pt3dadd( 121.992, -216.987, -34.6991, 0.48 ) }
    dend_10 { pt3dadd( 122.806, -217.694, -34.5467, 0.48 ) }
    dend_10 { pt3dadd( 123.386, -218.2, -34.4326, 0.6 ) }
    dend_10 { pt3dadd( 123.748, -218.52, -34.3697, 0.96 ) }
    dend_10 { pt3dadd( 124.241, -218.961, -34.3054, 1.08 ) }
    dend_10 { pt3dadd( 124.656, -219.327, -34.2414, 0.84 ) }
    dend_10 { pt3dadd( 125.383, -219.977, -34.1123, 0.48 ) }
    dend_10 { pt3dadd( 125.959, -220.477, -34.001, 0.24 ) }
    dend_10 { pt3dadd( 126.711, -221.059, -33.8634, 0.36 ) }
    dend_10 { pt3dadd( 127.149, -221.372, -33.7911, 0.36 ) }
    dend_10 { pt3dadd( 127.495, -221.614, -33.7404, 0.6 ) }
    dend_10 { pt3dadd( 127.961, -221.992, -33.6808, 0.6 ) }
    dend_10 { pt3dadd( 128.258, -222.268, -33.656, 0.36 ) }
    dend_10 { pt3dadd( 128.747, -222.757, -33.651, 0.24 ) }
    dend_10 { pt3dadd( 129.084, -223.111, -33.6471, 0.24 ) }
    dend_10 { pt3dadd( 129.35, -223.405, -33.6569, 0.36 ) }
    dend_10 { pt3dadd( 129.69, -223.83, -33.6819, 0.36 ) }
    dend_10 { pt3dadd( 130.032, -224.296, -33.7171, 0.48 ) }
    dend_10 { pt3dadd( 130.44, -224.943, -33.7691, 0.48 ) }
    dend_10 { pt3dadd( 130.861, -225.707, -33.8734, 0.72 ) }
    dend_10 { pt3dadd( 131.152, -226.265, -33.9712, 0.72 ) }
    dend_10 { pt3dadd( 131.336, -226.627, -34.0418, 0.72 ) }
    dend_10 { pt3dadd( 131.627, -227.237, -34.1637, 0.6 ) }
    dend_10 { pt3dadd( 131.836, -227.722, -34.2724, 0.6 ) }
    dend_10 { pt3dadd( 132.175, -228.563, -34.4694, 0.48 ) }
    dend_10 { pt3dadd( 132.467, -229.292, -34.6365, 0.36 ) }
    dend_10 { pt3dadd( 132.793, -230.07, -34.7981, 0.36 ) }
    dend_10 { pt3dadd( 133.082, -230.737, -34.9444, 0.36 ) }
    dend_10 { pt3dadd( 133.375, -231.444, -35.0975, 0.48 ) }
    dend_10 { pt3dadd( 133.55, -231.901, -35.1843, 0.48 ) }
    dend_10 { pt3dadd( 133.694, -232.373, -35.2487, 0.6 ) }
    dend_10 { pt3dadd( 133.809, -232.852, -35.3092, 0.6 ) }
    dend_10 { pt3dadd( 133.915, -233.361, -35.3868, 0.6 ) }
    dend_10 { pt3dadd( 134.013, -233.917, -35.4725, 0.6 ) }
    dend_10 { pt3dadd( 134.131, -234.736, -35.5796, 0.48 ) }
    dend_10 { pt3dadd( 134.224, -235.564, -35.7087, 0.48 ) }
    dend_10 { pt3dadd( 134.285, -236.243, -35.8204, 0.6 ) }
    dend_10 { pt3dadd( 134.367, -237.128, -35.9828, 0.72 ) }
    dend_10 { pt3dadd( 134.446, -237.803, -36.1277, 0.72 ) }
    dend_10 { pt3dadd( 134.626, -238.976, -36.4576, 0.72 ) }
    dend_10 { pt3dadd( 134.788, -239.777, -36.7048, 1.08 ) }
    dend_10 { pt3dadd( 134.937, -240.419, -36.9049, 1.08 ) }
    dend_10 { pt3dadd( 135.134, -241.203, -37.1384, 0.72 ) }
    dend_10 { pt3dadd( 135.436, -242.274, -37.4171, 0.48 ) }
    dend_10 { pt3dadd( 135.859, -243.599, -37.7615, 0.96 ) }
    dend_10 { pt3dadd( 136.342, -245.002, -38.132, 0.36 ) }
    dend_10 { pt3dadd( 136.531, -245.568, -38.2675, 0.36 ) }
    dend_10 { pt3dadd( 136.702, -246.149, -38.3897, 0.72 ) }
    dend_10 { pt3dadd( 137.044, -247.522, -38.6144, 0.84 ) }
    dend_10 { pt3dadd( 137.219, -248.388, -38.7189, 0.84 ) }
    dend_10 { pt3dadd( 137.325, -249.075, -38.7813, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_10 { pt3dadd( 137.429, -250.076, -38.8708, 0.48 ) }
    dend_10 { pt3dadd( 137.535, -251.439, -39.0189, 0.48 ) }
    dend_10 { pt3dadd( 137.58, -252.431, -39.1342, 0.48 ) }
    dend_10 { pt3dadd( 137.596, -253.12, -39.2132, 0.48 ) }
    dend_10 { pt3dadd( 137.601, -253.676, -39.2861, 0.72 ) }
    dend_10 { pt3dadd( 137.606, -254.374, -39.3977, 0.72 ) }
    dend_10 { pt3dadd( 137.616, -255.461, -39.6291, 0.36 ) }
    dend_10 { pt3dadd( 137.609, -255.836, -39.7388, 0.36 ) }
    dend_10 { pt3dadd( 137.589, -256.377, -39.9173, 0.36 ) }
    dend_10 { pt3dadd( 137.566, -257.232, -40.2019, 0.24 ) }
    dend_10 { pt3dadd( 137.528, -258.419, -40.5722, 0.24 ) }
    dend_10 { pt3dadd( 137.523, -258.707, -40.6525, 0.72 ) }
    dend_10 { pt3dadd( 137.524, -259.501, -40.8188, 0.36 ) }
    dend_10 { pt3dadd( 137.553, -260.321, -40.959, 0.36 ) }
    dend_10 { pt3dadd( 137.59, -260.891, -41.0441, 0.36 ) }
    dend_10 { pt3dadd( 137.667, -261.634, -41.1229, 0.48 ) }
    dend_10 { pt3dadd( 137.707, -261.929, -41.1537, 0.12 ) }
    dend_10 { pt3dadd( 137.888, -262.893, -41.162, 0.12 ) }
    dend_10 { pt3dadd( 138.026, -263.434, -41.1162, 0.12 ) }
    dend_10 { pt3dadd( 138.191, -263.966, -41.0465, 0.84 ) }
    dend_10 { pt3dadd( 138.43, -264.606, -40.9495, 0.96 ) }
    dend_10 { pt3dadd( 138.718, -265.271, -40.8513, 0.96 ) }
    dend_10 { pt3dadd( 139.336, -266.609, -40.5675, 0.24 ) }
    dend_10 { pt3dadd( 139.59, -267.141, -40.4332, 0.48 ) }
    dend_10 { pt3dadd( 140.208, -268.377, -40.0939, 0.48 ) }
    dend_10 { pt3dadd( 140.927, -269.739, -39.6988, 0.48 ) }
    dend_10 { pt3dadd( 141.402, -270.606, -39.4595, 0.48 ) }
    dend_10 { pt3dadd( 142.188, -272.021, -39.1148, 0.48 ) }
    dend_10 { pt3dadd( 142.588, -272.741, -38.977, 0.48 ) }
    dend_10 { pt3dadd( 142.958, -273.395, -38.8038, 0.84 ) }
    dend_10 { pt3dadd( 143.19, -273.799, -38.6606, 0.84 ) }
    dend_10 { pt3dadd( 143.465, -274.255, -38.4584, 0.12 ) }
    dend_10 { pt3dadd( 143.853, -274.865, -38.1546, 0.12 ) }
    dend_10 { pt3dadd( 143.925, -274.965, -38.0949, 0.36 ) }
    dend_10 { pt3dadd( 144.668, -275.955, -37.241, 0.12 ) }
    dend_10 { pt3dadd( 144.841, -276.21, -36.9789, 0.12 ) }
    dend_10 { pt3dadd( 145.172, -276.718, -36.4259, 0.12 ) }
    dend_10 { pt3dadd( 145.172, -276.718, -36.4259, 0.36 ) }
    dend_10 { pt3dadd( 145.602, -277.4, -35.504, 0.12 ) }
    dend_10 { pt3dadd( 145.75, -277.652, -35.2085, 0.12 ) }
    dend_10 { pt3dadd( 145.884, -277.919, -34.9343, 0.72 ) }
    dend_10 { pt3dadd( 146.056, -278.345, -34.5378, 0.84 ) }
    dend_10 { pt3dadd( 146.559, -279.919, -33.2555, 0.6 ) }
    dend_10 { pt3dadd( 146.675, -280.305, -32.974, 0.12 ) }
    dend_10 { pt3dadd( 146.865, -280.916, -32.6007, 0.12 ) }
    dend_10 { pt3dadd( 147.122, -281.616, -32.1857, 0.12 ) }
    dend_10 { pt3dadd( 147.404, -282.296, -31.8209, 0.12 ) }
    dend_10 { pt3dadd( 147.618, -282.767, -31.623, 0.12 ) }
    dend_10 { pt3dadd( 147.618, -282.767, -31.623, 0.6 ) }
    dend_10 { pt3dadd( 147.998, -283.527, -31.3967, 0.6 ) }
    dend_10 { pt3dadd( 148.418, -284.355, -31.1618, 0.48 ) }
    dend_10 { pt3dadd( 148.728, -284.938, -31.0133, 0.48 ) }
    dend_10 { pt3dadd( 149.148, -285.733, -30.8135, 0.48 ) }
    dend_10 { pt3dadd( 149.499, -286.432, -30.66, 0.24 ) }
    dend_10 { pt3dadd( 149.849, -287.18, -30.526, 0.24 ) }
    dend_10 { pt3dadd( 150.019, -287.556, -30.4266, 0.6 ) }
    dend_10 { pt3dadd( 150.252, -288.066, -30.2658, 0.72 ) }
    dend_10 { pt3dadd( 150.564, -288.697, -30.0412, 0.72 ) }
    dend_10 { pt3dadd( 150.81, -289.147, -29.8736, 0.12 ) }
    dend_10 { pt3dadd( 151.115, -289.645, -29.6915, 0.12 ) }
    dend_10 { pt3dadd( 152.274, -291.338, -29.0278, 0.12 ) }
    dend_10 { pt3dadd( 152.622, -291.801, -28.8422, 0.96 ) }
    dend_10 { pt3dadd( 152.953, -292.216, -28.6884, 0.12 ) }
    dend_10 { pt3dadd( 153.455, -292.787, -28.5053, 0.12 ) }
    dend_10 { pt3dadd( 153.66, -293.003, -28.4465, 0.12 ) }
    dend_10 { pt3dadd( 153.94, -293.272, -28.3955, 0.6 ) }
    dend_10 { pt3dadd( 154.254, -293.56, -28.3689, 0.6 ) }
    dend_10 { pt3dadd( 154.75, -293.982, -28.266, 0.48 ) }
    dend_10 { pt3dadd( 155.118, -294.28, -28.1553, 0.48 ) }
    dend_10 { pt3dadd( 155.685, -294.718, -27.9634, 0.72 ) }
    dend_10 { pt3dadd( 156.172, -295.082, -27.7969, 0.36 ) }
    dend_10 { pt3dadd( 156.697, -295.467, -27.6178, 0.12 ) }
    dend_10 { pt3dadd( 157.302, -295.904, -27.3781, 0.12 ) }
    dend_10 { pt3dadd( 157.528, -296.067, -27.2793, 0.48 ) }
    dend_10 { pt3dadd( 157.894, -296.347, -27.128, 0.6 ) }
    dend_10 { pt3dadd( 158.43, -296.797, -26.9337, 0.72 ) }
    dend_10 { pt3dadd( 158.7, -297.045, -26.8262, 0.72 ) }
    dend_10 { pt3dadd( 159.426, -297.729, -26.5099, 0.12 ) }
    dend_10 { pt3dadd( 159.601, -297.898, -26.4215, 0.12 ) }
    dend_10 { pt3dadd( 160.123, -298.399, -26.1104, 0.12 ) }
    dend_10 { pt3dadd( 160.39, -298.649, -25.9382, 0.12 ) }
    dend_10 { pt3dadd( 160.956, -299.171, -25.5385, 0.48 ) }
    dend_10 { pt3dadd( 161.224, -299.409, -25.3535, 0.48 ) }
    dend_10 { pt3dadd( 161.519, -299.654, -25.1759, 0.96 ) }
    dend_10 { pt3dadd( 162.236, -300.196, -24.7653, 0.48 ) }
    dend_10 { pt3dadd( 162.602, -300.445, -24.5719, 0.48 ) }
    dend_10 { pt3dadd( 163.145, -300.778, -24.3311, 0.48 ) }
    dend_10 { pt3dadd( 163.531, -300.978, -24.1482, 0.48 ) }
    dend_10 { pt3dadd( 163.895, -301.111, -23.9222, 0.12 ) }
    dend_10 { pt3dadd( 164.004, -301.129, -23.8494, 0.12 ) }
    dend_10 { pt3dadd( 164.354, -301.135, -23.6201, 0.72 ) }
    dend_10 { pt3dadd( 164.705, -301.113, -23.3942, 0.72 ) }
    dend_10 { pt3dadd( 166.028, -301.005, -22.6327, 0.12 ) }
    dend_10 { pt3dadd( 166.712, -300.949, -22.2739, 0.12 ) }
    dend_10 { pt3dadd( 167.554, -300.901, -21.8697, 0.12 ) }
    dend_10 { pt3dadd( 167.823, -300.891, -21.7468, 0.12 ) }
    dend_10 { pt3dadd( 168.261, -300.874, -21.5548, 0.48 ) }
    dend_10 { pt3dadd( 168.982, -300.842, -21.282, 0.48 ) }
    dend_10 { pt3dadd( 169.786, -300.803, -21.0512, 0.72 ) }
    dend_10 { pt3dadd( 170.342, -300.777, -20.8984, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_10 { pt3dadd( 171.569, -300.706, -20.5212, 0.36 ) }
    dend_10 { pt3dadd( 172.339, -300.678, -20.2807, 0.12 ) }
    dend_10 { pt3dadd( 173.017, -300.675, -20.0628, 0.24 ) }
    dend_10 { pt3dadd( 173.649, -300.704, -19.8696, 0.24 ) }
    dend_10 { pt3dadd( 174.222, -300.779, -19.7397, 0.24 ) }
    dend_10 { pt3dadd( 174.733, -300.877, -19.6689, 0.72 ) }
    dend_10 { pt3dadd( 175.482, -301.072, -19.6627, 0.72 ) }
    dend_10 { pt3dadd( 176.068, -301.25, -19.742, 0.72 ) }
    dend_10 { pt3dadd( 176.88, -301.502, -19.9301, 0.36 ) }
    dend_10 { pt3dadd( 177.654, -301.69, -20.179, 0.48 ) }
    dend_10 { pt3dadd( 178.156, -301.757, -20.381, 0.6 ) }
    dend_10 { pt3dadd( 178.863, -301.776, -20.7172, 0.6 ) }
    dend_10 { pt3dadd( 179.916, -301.697, -21.3248, 0.12 ) }
    dend_10 { pt3dadd( 180.252, -301.649, -21.5447, 0.12 ) }
    dend_10 { pt3dadd( 180.836, -301.557, -21.9513, 0.12 ) }
    dend_10 { pt3dadd( 181.329, -301.494, -22.2815, 0.48 ) }
    dend_10 { pt3dadd( 181.484, -301.493, -22.3869, 0.48 ) }
    dend_10 { pt3dadd( 182.167, -301.621, -22.8235, 0.12 ) }
    dend_10 { pt3dadd( 182.394, -301.728, -22.983, 0.12 ) }
    dend_10 { pt3dadd( 182.827, -301.975, -23.3098, 0.12 ) }
    dend_10 { pt3dadd( 183.099, -302.15, -23.5084, 0.48 ) }
    dend_10 { pt3dadd( 183.488, -302.368, -23.7969, 0.48 ) }
    dend_10 { pt3dadd( 183.898, -302.512, -24.1042, 0.12 ) }
    dend_10 { pt3dadd( 184.55, -302.597, -24.5757, 0.6 ) }
    dend_10 { pt3dadd( 185.132, -302.601, -24.9874, 0.72 ) }
    dend_10 { pt3dadd( 185.479, -302.569, -25.2179, 0.72 ) }
    dend_10 { pt3dadd( 186.166, -302.485, -25.648, 0.72 ) }
    dend_10 { pt3dadd( 187.036, -302.369, -26.1278, 0.12 ) }
    dend_10 { pt3dadd( 187.373, -302.324, -26.2834, 0.12 ) }
    dend_10 { pt3dadd( 187.898, -302.263, -26.4945, 0.12 ) }
    dend_10 { pt3dadd( 188.285, -302.226, -26.6405, 0.12 ) }
    dend_10 { pt3dadd( 188.795, -302.176, -26.8034, 0.6 ) }
    dend_10 { pt3dadd( 189.693, -302.1, -27.016, 0.6 ) }
    dend_10 { pt3dadd( 190.39, -302.018, -27.1399, 0.72 ) }
    dend_10 { pt3dadd( 190.858, -301.943, -27.2122, 0.12 ) }
    dend_10 { pt3dadd( 191.389, -301.832, -27.2767, 0.12 ) }
    dend_10 { pt3dadd( 191.923, -301.722, -27.323, 0.6 ) }
    dend_10 { pt3dadd( 192.459, -301.625, -27.3504, 0.6 ) }
    dend_10 { pt3dadd( 193.002, -301.575, -27.3689, 0.84 ) }
    dend_10 { pt3dadd( 194.067, -301.616, -27.3149, 0.84 ) }
    dend_10 { pt3dadd( 194.848, -301.747, -27.2161, 0.36 ) }
    dend_10 { pt3dadd( 195.489, -301.95, -27.0691, 0.36 ) }
    dend_10 { pt3dadd( 195.91, -302.14, -26.9362, 0.36 ) }
    dend_10 { pt3dadd( 196.609, -302.539, -26.6686, 0.36 ) }
    dend_10 { pt3dadd( 197.663, -303.265, -26.2195, 0.72 ) }
    dend_10 { pt3dadd( 198.022, -303.549, -26.06, 0.72 ) }
    dend_10 { pt3dadd( 198.79, -304.173, -25.7351, 0.36 ) }
    dend_10 { pt3dadd( 199.208, -304.504, -25.5807, 0.36 ) }
    dend_10 { pt3dadd( 199.683, -304.851, -25.4553, 0.36 ) }
    dend_10 { pt3dadd( 200.051, -305.1, -25.4078, 0.48 ) }
    dend_10 { pt3dadd( 200.482, -305.385, -25.4227, 0.24 ) }
    dend_10 { pt3dadd( 200.809, -305.62, -25.4486, 0.24 ) }
    dend_10 { pt3dadd( 201.23, -305.984, -25.5463, 0.6 ) }
    dend_10 { pt3dadd( 201.759, -306.516, -25.6995, 0.6 ) }
    dend_10 { pt3dadd( 202.048, -306.82, -25.7882, 0.6 ) }
    dend_10 { pt3dadd( 202.638, -307.42, -25.9627, 0.96 ) }
    dend_10 { pt3dadd( 203.064, -307.833, -26.0861, 0.96 ) }
    dend_10 { pt3dadd( 203.929, -308.571, -26.3857, 0.36 ) }
    dend_10 { pt3dadd( 204.312, -308.834, -26.5305, 0.36 ) }
    dend_10 { pt3dadd( 204.884, -309.134, -26.7461, 0.36 ) }
    dend_10 { pt3dadd( 205.305, -309.297, -26.8903, 0.36 ) }
    dend_10 { pt3dadd( 205.693, -309.409, -27.0026, 0.72 ) }
    dend_10 { pt3dadd( 206.425, -309.571, -27.1592, 0.36 ) }
    dend_10 { pt3dadd( 207.002, -309.67, -27.2101, 0.36 ) }
    dend_10 { pt3dadd( 207.585, -309.777, -27.2317, 0.36 ) }
    dend_10 { pt3dadd( 208.119, -309.891, -27.2257, 0.36 ) }
    dend_10 { pt3dadd( 208.814, -310.051, -27.19, 0.48 ) }
    dend_10 { pt3dadd( 209.472, -310.197, -27.1316, 0.48 ) }
    dend_10 { pt3dadd( 210.284, -310.363, -27.044, 0.36 ) }
    dend_10 { pt3dadd( 210.866, -310.463, -26.9917, 0.36 ) }
    dend_10 { pt3dadd( 211.544, -310.559, -26.9459, 0.36 ) }
    dend_10 { pt3dadd( 212.2, -310.642, -26.9195, 0.36 ) }
    dend_10 { pt3dadd( 212.594, -310.688, -26.9175, 0.36 ) }
    dend_10 { pt3dadd( 213.217, -310.755, -26.9412, 0.24 ) }
    dend_10 { pt3dadd( 213.611, -310.795, -26.9755, 0.24 ) }
    dend_10 { pt3dadd( 214.137, -310.835, -27.0186, 0.36 ) }
    dend_10 { pt3dadd( 214.549, -310.863, -27.0607, 0.36 ) }
    dend_10 { pt3dadd( 215.09, -310.896, -27.1206, 0.12 ) }
    dend_10 { pt3dadd( 215.504, -310.939, -27.1647, 0.72 ) }
    dend_10 { pt3dadd( 216.156, -311.049, -27.2117, 1.2 ) }
    dend_10 { pt3dadd( 216.686, -311.18, -27.2415, 1.2 ) }
    dend_10 { pt3dadd( 217.768, -311.516, -27.3048, 0.36 ) }
    dend_10 { pt3dadd( 218.019, -311.603, -27.3193, 0.36 ) }
    dend_10 { pt3dadd( 218.901, -311.953, -27.3664, 0.36 ) }
    dend_10 { pt3dadd( 219.567, -312.278, -27.3968, 0.84 ) }
    dend_10 { pt3dadd( 220.225, -312.689, -27.4183, 0.48 ) }
    dend_10 { pt3dadd( 220.713, -313.05, -27.4256, 0.36 ) }
    dend_10 { pt3dadd( 221.229, -313.485, -27.4054, 0.24 ) }
    dend_10 { pt3dadd( 221.655, -313.868, -27.3817, 0.24 ) }
    dend_10 { pt3dadd( 222.182, -314.354, -27.3464, 0.24 ) }
    dend_10 { pt3dadd( 222.929, -315.065, -27.3156, 0.24 ) }
    dend_10 { pt3dadd( 223.273, -315.412, -27.2986, 0.6 ) }
    dend_10 { pt3dadd( 223.625, -315.773, -27.2785, 0.48 ) }
    dend_10 { pt3dadd( 223.837, -315.989, -27.2697, 0.36 ) }
    dend_10 { pt3dadd( 224.557, -316.647, -27.2644, 0.36 ) }
    dend_10 { pt3dadd( 225.023, -316.999, -27.2781, 0.12 ) }
    dend_10 { pt3dadd( 225.504, -317.285, -27.31, 0.12 ) }
    dend_10 { pt3dadd( 226.034, -317.558, -27.3604, 0.12 ) }
    dend_10 { pt3dadd( 226.206, -317.634, -27.3697, 0.48 ) }
    dend_10 { pt3dadd( 226.493, -317.748, -27.3651, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_10 { pt3dadd( 226.893, -317.905, -27.3287, 0.12 ) }
    dend_10 { pt3dadd( 227.629, -318.225, -27.2096, 0.72 ) }
    dend_10 { pt3dadd( 228.01, -318.389, -27.1376, 0.72 ) }
    dend_10 { pt3dadd( 228.847, -318.753, -26.9693, 0.24 ) }
    dend_10 { pt3dadd( 229.272, -318.951, -26.8615, 0.24 ) }
    dend_10 { pt3dadd( 229.622, -319.143, -26.7582, 0.24 ) }
    dend_10 { pt3dadd( 229.954, -319.369, -26.6228, 0.24 ) }
    dend_10 { pt3dadd( 230.484, -319.785, -26.356, 0.24 ) }
    dend_10 { pt3dadd( 230.682, -319.953, -26.2506, 0.24 ) }
    dend_10 { pt3dadd( 231.504, -320.669, -25.8407, 0.24 ) }
    dend_10 { pt3dadd( 231.933, -321.028, -25.6454, 0.96 ) }
    dend_10 { pt3dadd( 232.773, -321.71, -25.2962, 0.48 ) }
    dend_10 { pt3dadd( 233.314, -322.134, -25.1051, 0.36 ) }
    dend_10 { pt3dadd( 233.735, -322.464, -24.9881, 0.6 ) }
    dend_10 { pt3dadd( 234.365, -322.91, -24.8491, 0.84 ) }
    dend_10 { pt3dadd( 234.888, -323.231, -24.7792, 0.12 ) }
    dend_10 { pt3dadd( 235.128, -323.347, -24.7583, 0.12 ) }
    dend_10 { pt3dadd( 235.916, -323.642, -24.7324, 0.12 ) }
    dend_10 { pt3dadd( 236.647, -323.877, -24.7025, 0.96 ) }
    dend_10 { pt3dadd( 237.509, -324.123, -24.646, 0.12 ) }
    dend_10 { pt3dadd( 237.971, -324.24, -24.608, 0.12 ) }
    dend_10 { pt3dadd( 238.662, -324.389, -24.5059, 0.12 ) }
    dend_10 { pt3dadd( 238.951, -324.432, -24.4576, 0.12 ) }
    dend_10 { pt3dadd( 239.242, -324.446, -24.4063, 0.12 ) }
    dend_10 { pt3dadd( 239.944, -324.43, -24.2852, 0.48 ) }
    dend_10 { pt3dadd( 240.506, -324.41, -24.2134, 0.48 ) }
    dend_10 { pt3dadd( 241.397, -324.411, -24.102, 0.12 ) }
    dend_10 { pt3dadd( 241.87, -324.443, -24.0459, 0.12 ) }
    dend_10 { pt3dadd( 242.41, -324.495, -23.9925, 0.12 ) }
    dend_10 { pt3dadd( 242.89, -324.55, -23.9667, 0.36 ) }
    dend_10 { pt3dadd( 243.312, -324.619, -23.9692, 0.12 ) }
    dend_10 { pt3dadd( 243.777, -324.729, -24.0012, 0.12 ) }
    dend_10 { pt3dadd( 244.03, -324.798, -24.0373, 0.12 ) }
    dend_10 { pt3dadd( 244.537, -324.941, -24.1074, 0.6 ) }
    dend_10 { pt3dadd( 244.905, -325.004, -24.1508, 0.12 ) }
    dend_10 { pt3dadd( 245.563, -325.041, -24.2138, 0.12 ) }
    dend_10 { pt3dadd( 246.235, -325.026, -24.2684, 0.12 ) }
    dend_10 { pt3dadd( 246.497, -324.999, -24.2905, 0.36 ) }
    dend_10 { pt3dadd( 246.758, -324.96, -24.3119, 0.24 ) }
    dend_10 { pt3dadd( 247.863, -324.742, -24.4278, 0.24 ) }
    dend_10 { pt3dadd( 248.271, -324.659, -24.4712, 0.48 ) }
    dend_10 { pt3dadd( 248.574, -324.591, -24.5069, 0.12 ) }
    dend_10 { pt3dadd( 249.045, -324.479, -24.5662, 0.12 ) }
    dend_10 { pt3dadd( 249.45, -324.385, -24.6194, 0.36 ) }
    dend_10 { pt3dadd( 249.904, -324.285, -24.6817, 0.12 ) }
    dend_10 { pt3dadd( 252.357, -323.829, -25.0347, 0.12 ) }
    dend_10 { pt3dadd( 252.715, -323.767, -25.084, 0.48 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 47/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 18.6962, -10.1085, -10.7778, 0.36 ) }
    dend_7 { pt3dadd( 19.471, -9.81257, -10.6718, 0.36 ) }
    dend_7 { pt3dadd( 20.1096, -9.58851, -10.5606, 0.36 ) }
    dend_7 { pt3dadd( 20.5909, -9.40864, -10.4703, 0.48 ) }
    dend_7 { pt3dadd( 21.0918, -9.19719, -10.3771, 0.48 ) }
    dend_7 { pt3dadd( 21.8617, -8.77355, -10.1732, 0.12 ) }
    dend_7 { pt3dadd( 22.4573, -8.35175, -9.99408, 0.12 ) }
    dend_7 { pt3dadd( 22.6691, -8.14223, -9.90273, 0.48 ) }
    dend_7 { pt3dadd( 23.0024, -7.68434, -9.74069, 0.48 ) }
    dend_7 { pt3dadd( 23.2442, -7.23545, -9.60961, 0.24 ) }
    dend_7 { pt3dadd( 23.7365, -6.10658, -9.31585, 0.36 ) }
    dend_7 { pt3dadd( 24.1047, -5.10643, -9.10006, 0.36 ) }
    dend_7 { pt3dadd( 24.4259, -4.09003, -8.89136, 0.6 ) }
    dend_7 { pt3dadd( 24.6679, -3.26412, -8.72973, 1.08 ) }
    dend_7 { pt3dadd( 24.9608, -2.20114, -8.52705, 0.84 ) }
    dend_7 { pt3dadd( 25.1626, -1.44199, -8.39109, 0.48 ) }
    dend_7 { pt3dadd( 25.417, -0.484422, -8.25202, 0.96 ) }
    dend_7 { pt3dadd( 25.5503, 0.0345705, -8.16881, 1.08 ) }
    dend_7 { pt3dadd( 25.7742, 0.818182, -8.04353, 0.36 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -13.5118, -2.00171, 9.00975, 0.48 ) }
    dend_5 { pt3dadd( -13.9758, -0.7648, 9.18941, 0.48 ) }
    dend_5 { pt3dadd( -14.2969, 0.010407, 9.35685, 0.24 ) }
    dend_5 { pt3dadd( -14.682, 0.773366, 9.55483, 0.24 ) }
    dend_5 { pt3dadd( -15.1819, 1.57559, 9.78674, 0.72 ) }
    dend_5 { pt3dadd( -15.498, 2.00558, 9.9222, 0.96 ) }
    dend_5 { pt3dadd( -16.2912, 2.91978, 10.2276, 0.48 ) }
    dend_5 { pt3dadd( -17.0526, 3.54363, 10.4946, 0.36 ) }
    dend_5 { pt3dadd( -17.6964, 3.9326, 10.6866, 0.36 ) }
    dend_5 { pt3dadd( -18.5638, 4.31744, 10.878, 0.6 ) }
    dend_5 { pt3dadd( -19.0513, 4.49468, 10.9586, 0.36 ) }
    dend_5 { pt3dadd( -19.7686, 4.72005, 11.0743, 0.48 ) }
    dend_5 { pt3dadd( -20.7599, 4.98535, 11.2856, 0.72 ) }
    dend_5 { pt3dadd( -21.6003, 5.18633, 11.485, 1.08 ) }
    dend_5 { pt3dadd( -22.4694, 5.36612, 11.7357, 0.96 ) }
    dend_5 { pt3dadd( -23.2236, 5.47714, 11.9808, 0.96 ) }
    dend_5 { pt3dadd( -24.0103, 5.53763, 12.2823, 0.72 ) }
    dend_5 { pt3dadd( -25.1857, 5.49373, 12.8314, 0.6 ) }
    dend_5 { pt3dadd( -26.1423, 5.22259, 13.3749, 0.36 ) }
    dend_5 { pt3dadd( -26.4212, 5.02964, 13.5888, 0.36 ) }
    dend_5 { pt3dadd( -26.8939, 4.52457, 14.0163, 0.36 ) }
    dend_5 { pt3dadd( -27.5097, 3.7643, 14.6262, 0.48 ) }
    dend_5 { pt3dadd( -27.8947, 3.28354, 15.0166, 0.48 ) }
    dend_5 { pt3dadd( -28.4047, 2.76854, 15.4739, 0.48 ) }
    dend_5 { pt3dadd( -29.0564, 2.42273, 16.025, 0.48 ) }
    dend_5 { pt3dadd( -29.766, 2.27314, 16.5517, 0.48 ) }
    dend_5 { pt3dadd( -30.7061, 2.20852, 17.1737, 0.48 ) }
    dend_5 { pt3dadd( -31.2717, 2.21175, 17.4674, 0.24 ) }
    dend_5 { pt3dadd( -31.7951, 2.23245, 17.6947, 0.24 ) }
    dend_5 { pt3dadd( -32.4257, 2.28538, 17.969, 0.6 ) }
    dend_5 { pt3dadd( -33.1076, 2.36276, 18.241, 0.6 ) }
    dend_5 { pt3dadd( -33.7642, 2.51387, 18.5314, 0.72 ) }
    dend_5 { pt3dadd( -34.566, 2.8801, 18.9038, 0.12 ) }
    dend_5 { pt3dadd( -34.9234, 3.14541, 19.1684, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_5 { pt3dadd( -35.6158, 3.77531, 19.801, 0.12 ) }
    dend_5 { pt3dadd( -36.056, 4.24298, 20.2568, 0.48 ) }
    dend_5 { pt3dadd( -36.7113, 4.99951, 21.0237, 0.6 ) }
    dend_5 { pt3dadd( -37.048, 5.36985, 21.4264, 0.6 ) }
    dend_5 { pt3dadd( -37.912, 6.05628, 22.4155, 0.36 ) }
    dend_5 { pt3dadd( -38.4022, 6.21701, 22.9048, 0.36 ) }
    dend_5 { pt3dadd( -38.6944, 6.20328, 23.1471, 0.36 ) }
    dend_5 { pt3dadd( -39.0505, 6.12854, 23.4234, 0.36 ) }
    dend_5 { pt3dadd( -39.5794, 5.98102, 23.8363, 0.6 ) }
    dend_5 { pt3dadd( -40.4622, 5.77376, 24.5336, 0.84 ) }
    dend_5 { pt3dadd( -41.5745, 5.6077, 25.4096, 0.6 ) }
    dend_5 { pt3dadd( -42.3429, 5.54202, 26.0685, 0.48 ) }
    dend_5 { pt3dadd( -42.7227, 5.52644, 26.4112, 0.48 ) }
    dend_5 { pt3dadd( -43.2631, 5.53205, 26.9278, 0.36 ) }
    dend_5 { pt3dadd( -43.714, 5.56914, 27.3888, 0.36 ) }
    dend_5 { pt3dadd( -44.195, 5.66205, 27.8686, 0.48 ) }
    dend_5 { pt3dadd( -44.7657, 5.88128, 28.3561, 0.72 ) }
    dend_5 { pt3dadd( -44.8517, 5.92953, 28.437, 0.72 ) }
    dend_5 { pt3dadd( -45.3942, 6.30272, 28.9515, 0.72 ) }
    dend_5 { pt3dadd( -45.7439, 6.58177, 29.3112, 0.48 ) }
    dend_5 { pt3dadd( -46.1931, 6.97927, 29.7752, 0.48 ) }
    dend_5 { pt3dadd( -46.6952, 7.46931, 30.2852, 0.6 ) }
    dend_5 { pt3dadd( -47.6628, 8.35992, 31.1513, 0.24 ) }
    dend_5 { pt3dadd( -48.2908, 8.83655, 31.6162, 0.24 ) }
    dend_5 { pt3dadd( -49.4239, 9.55697, 32.3174, 0.48 ) }
    dend_5 { pt3dadd( -50.1631, 9.94175, 32.6981, 0.36 ) }
    dend_5 { pt3dadd( -50.4867, 10.0884, 32.8373, 0.36 ) }
    dend_5 { pt3dadd( -51.7457, 10.5343, 33.264, 0.36 ) }
    dend_5 { pt3dadd( -52.9892, 10.8259, 33.5283, 0.36 ) }
    dend_5 { pt3dadd( -53.487, 10.8824, 33.6029, 0.36 ) }
    dend_5 { pt3dadd( -54.1308, 10.8977, 33.6521, 0.36 ) }
    dend_5 { pt3dadd( -55.0419, 10.8563, 33.7171, 0.36 ) }
    dend_5 { pt3dadd( -55.7986, 10.7931, 33.7714, 0.24 ) }
    dend_5 { pt3dadd( -56.3457, 10.7082, 33.8075, 0.24 ) }
    dend_5 { pt3dadd( -56.9749, 10.5282, 33.8277, 0.24 ) }
    dend_5 { pt3dadd( -57.5687, 10.2958, 33.8788, 0.24 ) }
    dend_5 { pt3dadd( -58.1721, 10.0485, 33.9569, 0.24 ) }
    dend_5 { pt3dadd( -58.5494, 9.90702, 34.0362, 0.24 ) }
    dend_5 { pt3dadd( -59.0375, 9.75305, 34.1845, 0.48 ) }
    dend_5 { pt3dadd( -60.2644, 9.37288, 34.6099, 0.36 ) }
    dend_5 { pt3dadd( -61.2163, 9.097, 35.0081, 0.24 ) }
    dend_5 { pt3dadd( -62.0022, 8.90697, 35.4552, 0.24 ) }
    dend_5 { pt3dadd( -62.8436, 8.68946, 36.0012, 0.48 ) }
    dend_5 { pt3dadd( -63.5426, 8.50129, 36.4925, 0.24 ) }
    dend_5 { pt3dadd( -64.1745, 8.31712, 36.9573, 0.24 ) }
    dend_5 { pt3dadd( -64.8666, 8.06232, 37.4493, 0.12 ) }
    dend_5 { pt3dadd( -66.3579, 7.26953, 38.3257, 1.68 ) }
    dend_5 { pt3dadd( -67.2028, 6.5936, 38.7378, 0.36 ) }
    dend_5 { pt3dadd( -67.3826, 6.41549, 38.795, 0.36 ) }
    dend_5 { pt3dadd( -67.9042, 5.88473, 38.8861, 0.24 ) }
    dend_5 { pt3dadd( -68.7582, 4.99971, 38.9299, 0.24 ) }
    dend_5 { pt3dadd( -69.1102, 4.60627, 38.8937, 0.24 ) }
    dend_5 { pt3dadd( -69.6199, 4.02015, 38.7701, 0.24 ) }
    dend_5 { pt3dadd( -69.9764, 3.64381, 38.6989, 0.24 ) }
    dend_5 { pt3dadd( -70.6659, 2.98576, 38.5797, 0.24 ) }
    dend_5 { pt3dadd( -71.2337, 2.52499, 38.5022, 0.24 ) }
    dend_5 { pt3dadd( -72.0669, 1.93381, 38.4101, 0.24 ) }
    dend_5 { pt3dadd( -72.3956, 1.71653, 38.378, 0.24 ) }
    dend_5 { pt3dadd( -72.7306, 1.50275, 38.3479, 0.24 ) }
    dend_5 { pt3dadd( -73.3795, 1.00547, 38.2735, 0.24 ) }
    dend_5 { pt3dadd( -73.7691, 0.643102, 38.2167, 0.24 ) }
    dend_5 { pt3dadd( -74.572, 0.0932039, 38.1423, 0.24 ) }
    dend_5 { pt3dadd( -84.1802, 0.366923, 42.4924, 0.24 ) }
    dend_5 { pt3dadd( -93.6744, 2.26866, 46.7012, 0.24 ) }
    dend_5 { pt3dadd( -102.668, 4.15784, 51.907, 0.24 ) }
    dend_5 { pt3dadd( -111.531, 6.01363, 57.3446, 0.24 ) }
    dend_5 { pt3dadd( -120.244, 6.40775, 63.2818, 0.24 ) }
    dend_5 { pt3dadd( -128.553, 7.46926, 69.7054, 0.24 ) }
    dend_5 { pt3dadd( -137.1, 7.12177, 75.8814, 0.24 ) }
    dend_5 { pt3dadd( -144.884, 5.72812, 82.8725, 0.24 ) }
    dend_5 { pt3dadd( -151.321, 4.55746, 91.1497, 0.24 ) }
    dend_5 { pt3dadd( -158.361, 1.66624, 98.489, 0.24 ) }
    dend_5 { pt3dadd( -165.728, -3.1484, 104.465, 0.24 ) }
    dend_5 { pt3dadd( -172.633, -7.72765, 111.112, 0.24 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -13.5118, -2.00171, 9.00975, 0.12 ) }
    dend_4 { pt3dadd( -15.1384, -2.92745, 2.09518, 0.12 ) }
    dend_4 { pt3dadd( -15.3609, -3.08158, 1.34348, 0.12 ) }
    dend_4 { pt3dadd( -15.5694, -3.24554, 0.819203, 0.48 ) }
    dend_4 { pt3dadd( -15.7689, -3.41524, 0.4846, 0.48 ) }
    dend_4 { pt3dadd( -16.4868, -4.0433, -0.302494, 0.48 ) }
    dend_4 { pt3dadd( -16.9855, -4.46048, -0.691877, 0.12 ) }
    dend_4 { pt3dadd( -17.7156, -5.07914, -0.656262, 0.6 ) }
    dend_4 { pt3dadd( -18.2566, -5.47115, -0.644093, 0.6 ) }
    dend_4 { pt3dadd( -18.9757, -5.94821, -0.655497, 0.6 ) }
    dend_4 { pt3dadd( -19.5426, -6.30988, -0.6949, 0.6 ) }
    dend_4 { pt3dadd( -20.1879, -6.71069, -0.788641, 0.24 ) }
    dend_4 { pt3dadd( -20.6929, -7.03877, -0.815693, 0.24 ) }
    dend_4 { pt3dadd( -21.0115, -7.24742, -0.805721, 0.24 ) }
    dend_4 { pt3dadd( -21.4195, -7.50717, -0.768902, 0.84 ) }
    dend_4 { pt3dadd( -21.8893, -7.79321, -0.704155, 0.96 ) }
    dend_4 { pt3dadd( -22.6182, -8.21905, -0.586905, 0.96 ) }
    dend_4 { pt3dadd( -24.0494, -9.02673, -0.343534, 0.72 ) }
    dend_4 { pt3dadd( -24.7997, -9.39997, -0.225626, 0.6 ) }
    dend_4 { pt3dadd( -25.9951, -9.90974, -0.0547911, 0.6 ) }
    dend_4 { pt3dadd( -26.3761, -10.0447, -0.00526115, 0.6 ) }
    dend_4 { pt3dadd( -26.9517, -10.1993, 0.0593024, 0.36 ) }
    dend_4 { pt3dadd( -27.7103, -10.3382, 0.120206, 0.36 ) }
    dend_4 { pt3dadd( -28.7868, -10.4418, 0.142733, 0.36 ) }
    dend_4 { pt3dadd( -29.4597, -10.4703, 0.185034, 0.36 ) }
    dend_4 { pt3dadd( -29.7538, -10.465, 0.215843, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_4 { pt3dadd( -30.3396, -10.446, 0.294546, 1.08 ) }
    dend_4 { pt3dadd( -30.7516, -10.4307, 0.364194, 1.08 ) }
    dend_4 { pt3dadd( -31.2868, -10.4181, 0.467436, 1.08 ) }
    dend_4 { pt3dadd( -32.1245, -10.4404, 0.631892, 0.12 ) }
    dend_4 { pt3dadd( -32.6411, -10.4931, 0.73611, 0.12 ) }
    dend_4 { pt3dadd( -33.0125, -10.5575, 0.803141, 0.12 ) }
    dend_4 { pt3dadd( -33.3826, -10.6443, 0.876509, 0.12 ) }
    dend_4 { pt3dadd( -33.9043, -10.7749, 0.979553, 0.6 ) }
    dend_4 { pt3dadd( -34.666, -10.9588, 1.1233, 0.6 ) }
    dend_4 { pt3dadd( -35.1821, -11.0743, 1.21563, 0.72 ) }
    dend_4 { pt3dadd( -36.3734, -11.318, 1.43911, 0.84 ) }
    dend_4 { pt3dadd( -37.3447, -11.501, 1.61783, 0.48 ) }
    dend_4 { pt3dadd( -38.0023, -11.6017, 1.73632, 0.48 ) }
    dend_4 { pt3dadd( -38.7921, -11.7131, 1.8756, 0.48 ) }
    dend_4 { pt3dadd( -39.3323, -11.7868, 1.96226, 0.36 ) }
    dend_4 { pt3dadd( -39.7417, -11.8293, 2.01821, 0.36 ) }
    dend_4 { pt3dadd( -40.5035, -11.8912, 2.12652, 0.36 ) }
    dend_4 { pt3dadd( -41.3205, -11.9541, 2.29773, 0.36 ) }
    dend_4 { pt3dadd( -42.3907, -12.0355, 2.60142, 0.36 ) }
    dend_4 { pt3dadd( -43.0785, -12.0757, 2.81939, 0.36 ) }
    dend_4 { pt3dadd( -43.7246, -12.0875, 3.01226, 0.36 ) }
    dend_4 { pt3dadd( -44.4057, -12.058, 3.21093, 0.36 ) }
    dend_4 { pt3dadd( -45.7837, -11.9046, 3.60139, 0.48 ) }
    dend_4 { pt3dadd( -46.545, -11.7753, 3.78471, 0.72 ) }
    dend_4 { pt3dadd( -47.2609, -11.5932, 3.89495, 0.72 ) }
    dend_4 { pt3dadd( -48.2288, -11.3305, 3.92063, 0.36 ) }
    dend_4 { pt3dadd( -48.7638, -11.1978, 3.87008, 0.36 ) }
    dend_4 { pt3dadd( -49.167, -11.1251, 3.78663, 0.36 ) }
    dend_4 { pt3dadd( -49.6653, -11.0768, 3.64711, 0.6 ) }
    dend_4 { pt3dadd( -50.5815, -11.0933, 3.40081, 0.72 ) }
    dend_4 { pt3dadd( -51.7585, -11.2435, 3.17722, 0.72 ) }
    dend_4 { pt3dadd( -52.5517, -11.4081, 3.12509, 0.36 ) }
    dend_4 { pt3dadd( -53.4937, -11.6041, 3.2439, 0.36 ) }
    dend_4 { pt3dadd( -54.0999, -11.7442, 3.45358, 0.36 ) }
    dend_4 { pt3dadd( -54.5992, -11.8798, 3.74283, 0.36 ) }
    dend_4 { pt3dadd( -55.366, -12.1272, 4.3671, 0.48 ) }
    dend_4 { pt3dadd( -56.2308, -12.4139, 5.18003, 0.48 ) }
    dend_4 { pt3dadd( -57.7558, -12.902, 6.92076, 0.48 ) }
    dend_4 { pt3dadd( -58.3553, -13.0565, 7.65825, 0.48 ) }
    dend_4 { pt3dadd( -58.7237, -13.1518, 8.09828, 0.48 ) }
    dend_4 { pt3dadd( -59.1436, -13.265, 8.59662, 0.48 ) }
    dend_4 { pt3dadd( -59.8321, -13.477, 9.31406, 0.48 ) }
    dend_4 { pt3dadd( -61.4725, -14.1068, 10.7622, 0.48 ) }
    dend_4 { pt3dadd( -61.9196, -14.294, 11.0503, 0.48 ) }
    dend_4 { pt3dadd( -62.4244, -14.4174, 11.4602, 0.48 ) }
    dend_4 { pt3dadd( -72.8676, -16.6759, 14.2898, 0.48 ) }
    dend_4 { pt3dadd( -83.0883, -18.9786, 17.8039, 0.48 ) }
    dend_4 { pt3dadd( -93.7585, -19.7382, 20.4813, 0.48 ) }
    dend_4 { pt3dadd( -104.681, -19.5163, 21.936, 0.48 ) }
    dend_4 { pt3dadd( -115.705, -19.7867, 22.013, 0.48 ) }
    dend_4 { pt3dadd( -126.615, -21.4748, 22.4958, 0.48 ) }
    dend_4 { pt3dadd( -137.209, -24.7382, 22.9809, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -17.0388, 31.8301, -16.7703, 0.12 ) }
    dend_2 { pt3dadd( -18.0429, 32.2916, -16.6143, 0.12 ) }
    dend_2 { pt3dadd( -18.8471, 32.5833, -16.612, 0.12 ) }
    dend_2 { pt3dadd( -19.07, 32.6588, -16.6192, 0.12 ) }
    dend_2 { pt3dadd( -19.4584, 32.772, -16.6254, 0.6 ) }
    dend_2 { pt3dadd( -19.9127, 32.8931, -16.6257, 0.84 ) }
    dend_2 { pt3dadd( -20.1778, 32.9575, -16.621, 0.84 ) }
    dend_2 { pt3dadd( -20.8148, 33.0658, -16.6782, 0.12 ) }
    dend_2 { pt3dadd( -21.2372, 33.1134, -16.6961, 0.12 ) }
    dend_2 { pt3dadd( -21.7175, 33.1598, -16.7296, 0.12 ) }
    dend_2 { pt3dadd( -21.9133, 33.1914, -16.7506, 0.96 ) }
    dend_2 { pt3dadd( -22.1771, 33.249, -16.7893, 0.96 ) }
    dend_2 { pt3dadd( -22.9246, 33.4314, -16.9069, 0.24 ) }
    dend_2 { pt3dadd( -23.3797, 33.5317, -16.9688, 0.24 ) }
    dend_2 { pt3dadd( -23.6067, 33.5667, -17.0187, 0.24 ) }
    dend_2 { pt3dadd( -24.2123, 33.635, -17.1797, 0.6 ) }
    dend_2 { pt3dadd( -24.5358, 33.6504, -17.2756, 0.24 ) }
    dend_2 { pt3dadd( -24.7266, 33.6559, -17.3331, 0.24 ) }
    dend_2 { pt3dadd( -25.1736, 33.6467, -17.4405, 0.24 ) }
    dend_2 { pt3dadd( -25.6682, 33.5929, -17.562, 0.84 ) }
    dend_2 { pt3dadd( -25.9913, 33.536, -17.632, 0.84 ) }
    dend_2 { pt3dadd( -26.5019, 33.4498, -17.7131, 0.24 ) }
    dend_2 { pt3dadd( -26.7362, 33.4409, -17.7309, 0.24 ) }
    dend_2 { pt3dadd( -26.9457, 33.4528, -17.7434, 0.24 ) }
    dend_2 { pt3dadd( -27.2216, 33.486, -17.7482, 0.24 ) }
    dend_2 { pt3dadd( -27.298, 33.4943, -17.7436, 0.12 ) }
    dend_2 { pt3dadd( -27.7144, 33.5377, -17.7077, 0.12 ) }
    dend_2 { pt3dadd( -28.1167, 33.5758, -17.6982, 0.48 ) }
    dend_2 { pt3dadd( -28.5274, 33.6107, -17.7158, 0.12 ) }
    dend_2 { pt3dadd( -28.8634, 33.6422, -17.7467, 0.12 ) }
    dend_2 { pt3dadd( -29.1974, 33.6821, -17.7866, 0.48 ) }
    dend_2 { pt3dadd( -29.4334, 33.713, -17.8144, 0.48 ) }
    dend_2 { pt3dadd( -30.1813, 33.8298, -17.9033, 0.12 ) }
    dend_2 { pt3dadd( -30.6378, 33.9178, -17.9718, 0.12 ) }
    dend_2 { pt3dadd( -30.7275, 33.9365, -17.9932, 0.12 ) }
    dend_2 { pt3dadd( -31.0609, 34.0108, -18.117, 0.6 ) }
    dend_2 { pt3dadd( -31.4276, 34.0867, -18.2675, 0.6 ) }
    dend_2 { pt3dadd( -31.6997, 34.1356, -18.377, 0.6 ) }
    dend_2 { pt3dadd( -32.2003, 34.2259, -18.5605, 0.72 ) }
    dend_2 { pt3dadd( -32.95, 34.3506, -18.8713, 0.36 ) }
    dend_2 { pt3dadd( -33.4047, 34.4309, -19.0606, 0.12 ) }
    dend_2 { pt3dadd( -33.8436, 34.5071, -19.2497, 0.12 ) }
    dend_2 { pt3dadd( -34.0355, 34.5417, -19.3282, 0.72 ) }
    dend_2 { pt3dadd( -34.2865, 34.5865, -19.4288, 0.84 ) }
    dend_2 { pt3dadd( -34.7003, 34.6689, -19.5649, 0.12 ) }
    dend_2 { pt3dadd( -35.1048, 34.7535, -19.6668, 0.12 ) }
    dend_2 { pt3dadd( -35.4739, 34.8277, -19.7514, 0.6 ) }
    dend_2 { pt3dadd( -35.7285, 34.8769, -19.8315, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -36.4992, 35.0091, -20.0728, 0.12 ) }
    dend_2 { pt3dadd( -36.8153, 35.0551, -20.1643, 0.12 ) }
    dend_2 { pt3dadd( -37.1916, 35.1086, -20.2849, 0.12 ) }
    dend_2 { pt3dadd( -37.3885, 35.1352, -20.3532, 0.48 ) }
    dend_2 { pt3dadd( -38.082, 35.2489, -20.5835, 0.12 ) }
    dend_2 { pt3dadd( -38.6866, 35.3654, -20.8344, 0.12 ) }
    dend_2 { pt3dadd( -38.8696, 35.4074, -20.9123, 1.08 ) }
    dend_2 { pt3dadd( -39.6412, 35.602, -21.2667, 0.12 ) }
    dend_2 { pt3dadd( -39.8242, 35.6518, -21.3581, 0.12 ) }
    dend_2 { pt3dadd( -40.1753, 35.7672, -21.5244, 0.84 ) }
    dend_2 { pt3dadd( -41.0599, 36.1088, -21.8979, 0.12 ) }
    dend_2 { pt3dadd( -41.5169, 36.3075, -22.1013, 0.12 ) }
    dend_2 { pt3dadd( -41.7509, 36.4228, -22.1904, 0.36 ) }
    dend_2 { pt3dadd( -42.0795, 36.6054, -22.2827, 0.12 ) }
    dend_2 { pt3dadd( -42.6748, 36.9847, -22.4363, 0.12 ) }
    dend_2 { pt3dadd( -42.8635, 37.1226, -22.5011, 0.36 ) }
    dend_2 { pt3dadd( -43.0794, 37.3255, -22.5874, 0.12 ) }
    dend_2 { pt3dadd( -43.4666, 37.7776, -22.8164, 0.12 ) }
    dend_2 { pt3dadd( -43.5751, 37.9199, -22.8876, 0.48 ) }
    dend_2 { pt3dadd( -43.6858, 38.076, -22.9599, 0.48 ) }
    dend_2 { pt3dadd( -44.2809, 38.883, -23.4248, 0.12 ) }
    dend_2 { pt3dadd( -44.6267, 39.3237, -23.6937, 0.12 ) }
    dend_2 { pt3dadd( -44.9309, 39.6905, -23.9171, 0.12 ) }
    dend_2 { pt3dadd( -45.2103, 40.0002, -24.103, 0.12 ) }
    dend_2 { pt3dadd( -45.4744, 40.2698, -24.2406, 0.6 ) }
    dend_2 { pt3dadd( -46.0574, 40.7735, -24.5094, 0.12 ) }
    dend_2 { pt3dadd( -46.2213, 40.8957, -24.5683, 0.12 ) }
    dend_2 { pt3dadd( -46.4177, 41.0171, -24.64, 0.12 ) }
    dend_2 { pt3dadd( -46.7913, 41.2262, -24.7756, 0.12 ) }
    dend_2 { pt3dadd( -47.1084, 41.3958, -24.8807, 0.48 ) }
    dend_2 { pt3dadd( -47.9694, 41.8396, -25.0941, 0.12 ) }
    dend_2 { pt3dadd( -48.2131, 41.9555, -25.1489, 0.12 ) }
    dend_2 { pt3dadd( -48.7537, 42.1778, -25.2684, 0.6 ) }
    dend_2 { pt3dadd( -49.0009, 42.2664, -25.3142, 0.12 ) }
    dend_2 { pt3dadd( -49.3207, 42.3712, -25.3584, 0.12 ) }
    dend_2 { pt3dadd( -49.711, 42.4954, -25.3836, 0.6 ) }
    dend_2 { pt3dadd( -50.4876, 42.733, -25.3926, 0.12 ) }
    dend_2 { pt3dadd( -51.1945, 42.9325, -25.4088, 0.12 ) }
    dend_2 { pt3dadd( -51.6504, 43.0535, -25.4202, 0.12 ) }
    dend_2 { pt3dadd( -51.9958, 43.1397, -25.423, 0.12 ) }
    dend_2 { pt3dadd( -52.4656, 43.2551, -25.4096, 0.12 ) }
    dend_2 { pt3dadd( -53.1549, 43.4312, -25.3556, 0.12 ) }
    dend_2 { pt3dadd( -53.6027, 43.5545, -25.2834, 0.12 ) }
    dend_2 { pt3dadd( -53.868, 43.6301, -25.2381, 0.84 ) }
    dend_2 { pt3dadd( -54.2327, 43.7431, -25.1703, 1.2 ) }
    dend_2 { pt3dadd( -54.5794, 43.8711, -25.0967, 0.12 ) }
    dend_2 { pt3dadd( -54.8997, 44.0178, -25.0179, 0.12 ) }
    dend_2 { pt3dadd( -55.3595, 44.2713, -24.8937, 0.12 ) }
    dend_2 { pt3dadd( -55.7661, 44.5203, -24.796, 0.48 ) }
    dend_2 { pt3dadd( -55.9621, 44.6479, -24.7593, 0.12 ) }
    dend_2 { pt3dadd( -56.432, 44.976, -24.6947, 0.12 ) }
    dend_2 { pt3dadd( -56.7533, 45.196, -24.6615, 0.12 ) }
    dend_2 { pt3dadd( -57.0699, 45.4054, -24.6322, 0.48 ) }
    dend_2 { pt3dadd( -57.3982, 45.6113, -24.6229, 0.48 ) }
    dend_2 { pt3dadd( -57.6742, 45.7729, -24.625, 0.12 ) }
    dend_2 { pt3dadd( -58.2001, 46.0554, -24.6586, 0.12 ) }
    dend_2 { pt3dadd( -58.6194, 46.2638, -24.7215, 0.12 ) }
    dend_2 { pt3dadd( -58.9156, 46.4066, -24.7802, 0.48 ) }
    dend_2 { pt3dadd( -59.3568, 46.6129, -24.8742, 0.12 ) }
    dend_2 { pt3dadd( -59.8365, 46.8283, -24.9753, 0.12 ) }
    dend_2 { pt3dadd( -60.4968, 47.1312, -25.1061, 0.84 ) }
    dend_2 { pt3dadd( -60.9669, 47.3399, -25.2396, 0.12 ) }
    dend_2 { pt3dadd( -61.2083, 47.4564, -25.3236, 0.12 ) }
    dend_2 { pt3dadd( -61.5459, 47.6385, -25.4424, 0.12 ) }
    dend_2 { pt3dadd( -61.9331, 47.8635, -25.6317, 0.12 ) }
    dend_2 { pt3dadd( -62.1531, 47.9927, -25.7572, 0.36 ) }
    dend_2 { pt3dadd( -62.8024, 48.4045, -26.1794, 0.12 ) }
    dend_2 { pt3dadd( -63.0398, 48.5696, -26.3629, 0.12 ) }
    dend_2 { pt3dadd( -63.2867, 48.7551, -26.6138, 0.48 ) }
    dend_2 { pt3dadd( -64.0994, 49.432, -27.7254, 0.84 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 70/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -17.0388, 31.8301, -16.7703, 0.12 ) }
    dend_1 { pt3dadd( -17.154, 32.9371, -16.8451, 0.12 ) }
    dend_1 { pt3dadd( -17.3481, 34.4579, -17.0419, 0.12 ) }
    dend_1 { pt3dadd( -17.4917, 35.4706, -17.1887, 0.72 ) }
    dend_1 { pt3dadd( -17.6112, 36.3156, -17.3231, 0.96 ) }
    dend_1 { pt3dadd( -17.69, 36.8474, -17.4085, 0.96 ) }
    dend_1 { pt3dadd( -17.9212, 38.3806, -17.7492, 0.12 ) }
    dend_1 { pt3dadd( -18.2323, 40.3512, -18.3176, 0.12 ) }
    dend_1 { pt3dadd( -18.3357, 41.0187, -18.5276, 0.48 ) }
    dend_1 { pt3dadd( -18.5002, 42.015, -18.8444, 0.24 ) }
    dend_1 { pt3dadd( -18.7541, 43.3413, -19.2748, 0.24 ) }
    dend_1 { pt3dadd( -19.1446, 45.3112, -19.8845, 0.72 ) }
    dend_1 { pt3dadd( -19.3635, 46.438, -20.1884, 0.96 ) }
    dend_1 { pt3dadd( -19.6249, 47.7484, -20.5482, 0.36 ) }
    dend_1 { pt3dadd( -19.7828, 48.5538, -20.7576, 0.36 ) }
    dend_1 { pt3dadd( -19.9931, 49.6275, -20.9988, 0.12 ) }
    dend_1 { pt3dadd( -20.2084, 50.6635, -21.1825, 0.12 ) }
    dend_1 { pt3dadd( -20.5181, 52.0078, -21.3284, 0.12 ) }
    dend_1 { pt3dadd( -20.6696, 52.6017, -21.3937, 0.6 ) }
    dend_1 { pt3dadd( -20.952, 53.6703, -21.5159, 0.12 ) }
    dend_1 { pt3dadd( -21.2078, 54.6648, -21.6188, 0.12 ) }
    dend_1 { pt3dadd( -21.4744, 55.7296, -21.7105, 0.48 ) }
    dend_1 { pt3dadd( -21.6866, 56.4524, -21.7719, 0.96 ) }
    dend_1 { pt3dadd( -21.9199, 57.182, -21.8297, 0.96 ) }
    dend_1 { pt3dadd( -22.1588, 57.9116, -21.8793, 0.12 ) }
    dend_1 { pt3dadd( -22.5665, 59.0377, -21.9409, 0.12 ) }
    dend_1 { pt3dadd( -22.9881, 60.1492, -22.0048, 0.12 ) }
    dend_1 { pt3dadd( -23.1646, 60.6114, -22.0294, 0.6 ) }
    dend_1 { pt3dadd( -23.2595, 60.834, -22.0398, 0.6 ) }
    dend_1 { pt3dadd( -23.4912, 61.269, -22.0548, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_1 { pt3dadd( -23.8641, 61.8757, -22.1719, 0.12 ) }
    dend_1 { pt3dadd( -24.3402, 62.6072, -22.414, 0.12 ) }
    dend_1 { pt3dadd( -24.8018, 63.3383, -22.7067, 0.72 ) }
    dend_1 { pt3dadd( -25.098, 63.8223, -22.9325, 0.96 ) }
    dend_1 { pt3dadd( -25.8255, 65.0174, -23.5993, 0.48 ) }
    dend_1 { pt3dadd( -27.0364, 66.9805, -24.7993, 0.12 ) }
    dend_1 { pt3dadd( -27.5138, 67.726, -25.2897, 0.12 ) }
    dend_1 { pt3dadd( -27.9344, 68.3434, -25.7135, 0.12 ) }
    dend_1 { pt3dadd( -28.4205, 69.0288, -26.178, 0.48 ) }
    dend_1 { pt3dadd( -28.9254, 69.7207, -26.6409, 0.12 ) }
    dend_1 { pt3dadd( -29.6582, 70.6681, -27.1859, 0.12 ) }
    dend_1 { pt3dadd( -30.0261, 71.1183, -27.3655, 1.08 ) }
    dend_1 { pt3dadd( -30.4694, 71.6343, -27.5528, 1.32 ) }
    dend_1 { pt3dadd( -30.8513, 72.077, -27.7196, 0.96 ) }
    dend_1 { pt3dadd( -31.7539, 73.1524, -28.0984, 0.24 ) }
    dend_1 { pt3dadd( -32.7704, 74.3826, -28.6094, 0.24 ) }
    dend_1 { pt3dadd( -33.5392, 75.287, -29.06, 0.24 ) }
    dend_1 { pt3dadd( -34.2868, 76.1395, -29.5228, 0.24 ) }
    dend_1 { pt3dadd( -35.1012, 76.9978, -30.0133, 0.96 ) }
    dend_1 { pt3dadd( -35.5548, 77.4304, -30.3257, 1.2 ) }
    dend_1 { pt3dadd( -36.8079, 78.5497, -31.2419, 0.36 ) }
    dend_1 { pt3dadd( -37.5407, 79.1645, -31.8214, 0.12 ) }
    dend_1 { pt3dadd( -37.9329, 79.4827, -32.1324, 0.72 ) }
    dend_1 { pt3dadd( -38.758, 80.1863, -32.7936, 0.72 ) }
    dend_1 { pt3dadd( -40.663, 81.8846, -34.2448, 0.24 ) }
    dend_1 { pt3dadd( -41.1327, 82.3263, -34.5983, 0.12 ) }
    dend_1 { pt3dadd( -41.5824, 82.7732, -34.919, 0.12 ) }
    dend_1 { pt3dadd( -42.0152, 83.2435, -35.2327, 0.24 ) }
    dend_1 { pt3dadd( -43.0938, 84.5042, -35.9637, 0.48 ) }
    dend_1 { pt3dadd( -43.6197, 85.1813, -36.3247, 0.12 ) }
    dend_1 { pt3dadd( -44.0945, 85.8244, -36.5907, 0.12 ) }
    dend_1 { pt3dadd( -44.2292, 86.0066, -36.6669, 0.72 ) }
    dend_1 { pt3dadd( -44.8374, 86.839, -36.9982, 0.84 ) }
    dend_1 { pt3dadd( -45.3045, 87.4901, -37.2331, 0.84 ) }
    dend_1 { pt3dadd( -46.4719, 89.0907, -37.9158, 0.36 ) }
    dend_1 { pt3dadd( -47.0646, 89.9125, -38.3232, 0.12 ) }
    dend_1 { pt3dadd( -47.5646, 90.615, -38.7093, 0.6 ) }
    dend_1 { pt3dadd( -48.0015, 91.2351, -39.0776, 1.08 ) }
    dend_1 { pt3dadd( -48.2649, 91.6378, -39.3093, 1.08 ) }
    dend_1 { pt3dadd( -49.427, 93.5155, -40.2973, 0.12 ) }
    dend_1 { pt3dadd( -49.8544, 94.242, -40.613, 0.12 ) }
    dend_1 { pt3dadd( -50.1363, 94.7405, -40.8284, 0.48 ) }
    dend_1 { pt3dadd( -50.5727, 95.5747, -41.1398, 0.12 ) }
    dend_1 { pt3dadd( -51.4097, 97.223, -41.6395, 0.12 ) }
    dend_1 { pt3dadd( -51.687, 97.7594, -41.756, 0.72 ) }
    dend_1 { pt3dadd( -52.1409, 98.6386, -41.8653, 0.84 ) }
    dend_1 { pt3dadd( -52.6033, 99.4938, -41.9702, 0.12 ) }
    dend_1 { pt3dadd( -53.2884, 100.714, -42.1063, 0.12 ) }
    dend_1 { pt3dadd( -53.7143, 101.446, -42.1742, 0.12 ) }
    dend_1 { pt3dadd( -54.346, 102.467, -42.2675, 0.6 ) }
    dend_1 { pt3dadd( -54.7577, 103.121, -42.317, 0.36 ) }
    dend_1 { pt3dadd( -55.1497, 103.726, -42.3505, 0.6 ) }
    dend_1 { pt3dadd( -55.6892, 104.555, -42.4208, 0.84 ) }
    dend_1 { pt3dadd( -55.9711, 104.994, -42.4731, 0.84 ) }
    dend_1 { pt3dadd( -56.6039, 106.036, -42.6131, 0.24 ) }
    dend_1 { pt3dadd( -57.3311, 107.278, -42.8187, 0.12 ) }
    dend_1 { pt3dadd( -57.8636, 108.215, -42.9887, 0.48 ) }
    dend_1 { pt3dadd( -58.7506, 109.844, -43.3104, 0.12 ) }
    dend_1 { pt3dadd( -59.5016, 111.301, -43.6154, 0.12 ) }
    dend_1 { pt3dadd( -59.8966, 112.112, -43.7893, 0.48 ) }
    dend_1 { pt3dadd( -60.2085, 112.794, -43.9316, 0.12 ) }
    dend_1 { pt3dadd( -60.63, 113.774, -44.1103, 0.12 ) }
    dend_1 { pt3dadd( -60.7598, 114.087, -44.1574, 0.36 ) }
    dend_1 { pt3dadd( -61.1542, 115.032, -44.286, 0.12 ) }
    dend_1 { pt3dadd( -61.3712, 115.522, -44.3632, 0.12 ) }
    dend_1 { pt3dadd( -61.9813, 116.832, -44.5593, 0.48 ) }
    dend_1 { pt3dadd( -62.5434, 117.996, -44.7168, 1.2 ) }
    dend_1 { pt3dadd( -62.9793, 118.847, -44.835, 0.6 ) }
    dend_1 { pt3dadd( -63.441, 119.731, -44.9722, 0.12 ) }
    dend_1 { pt3dadd( -64.291, 121.334, -45.2348, 0.12 ) }
    dend_1 { pt3dadd( -65.2454, 123.121, -45.5342, 0.12 ) }
    dend_1 { pt3dadd( -65.5312, 123.658, -45.623, 0.12 ) }
    dend_1 { pt3dadd( -65.9286, 124.392, -45.7342, 0.6 ) }
    dend_1 { pt3dadd( -66.4269, 125.318, -45.8842, 0.12 ) }
    dend_1 { pt3dadd( -66.9553, 126.305, -46.0503, 0.12 ) }
    dend_1 { pt3dadd( -67.293, 126.93, -46.1838, 0.72 ) }
    dend_1 { pt3dadd( -67.6524, 127.58, -46.3513, 0.72 ) }
    dend_1 { pt3dadd( -67.9395, 128.093, -46.4835, 0.72 ) }
    dend_1 { pt3dadd( -68.5401, 129.193, -46.8618, 0.12 ) }
    dend_1 { pt3dadd( -69.1736, 130.414, -47.3235, 0.12 ) }
    dend_1 { pt3dadd( -69.522, 131.134, -47.6131, 0.12 ) }
    dend_1 { pt3dadd( -70.1353, 132.505, -48.1503, 0.48 ) }
    dend_1 { pt3dadd( -70.5822, 133.569, -48.5704, 0.48 ) }
    dend_1 { pt3dadd( -71.3311, 135.43, -49.2748, 0.12 ) }
    dend_1 { pt3dadd( -71.8635, 136.817, -49.7521, 0.12 ) }
    dend_1 { pt3dadd( -72.1592, 137.632, -50.0569, 0.12 ) }
    dend_1 { pt3dadd( -72.5441, 138.733, -50.4578, 0.12 ) }
    dend_1 { pt3dadd( -72.7313, 139.28, -50.635, 0.72 ) }
    dend_1 { pt3dadd( -73.0017, 140.057, -50.8714, 0.72 ) }
    dend_1 { pt3dadd( -73.2347, 140.69, -51.0225, 0.48 ) }
    dend_1 { pt3dadd( -73.6273, 141.751, -51.3052, 0.12 ) }
    dend_1 { pt3dadd( -74.0682, 142.991, -51.7659, 0.12 ) }
    dend_1 { pt3dadd( -74.2733, 143.621, -52.0233, 0.36 ) }
    dend_1 { pt3dadd( -74.4619, 144.213, -52.2414, 0.12 ) }
    dend_1 { pt3dadd( -74.7574, 145.149, -52.5398, 0.12 ) }
    dend_1 { pt3dadd( -74.9643, 145.799, -52.7224, 0.48 ) }
    dend_1 { pt3dadd( -75.7219, 148.192, -53.2999, 0.24 ) }
    dend_1 { pt3dadd( -76.1811, 149.616, -53.6524, 0.24 ) }
    dend_1 { pt3dadd( -76.911, 151.883, -54.1866, 0.24 ) }
    dend_1 { pt3dadd( -77.6215, 154.102, -54.6508, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_1 { pt3dadd( -77.7897, 154.608, -54.7483, 0.24 ) }
    dend_1 { pt3dadd( -78.0108, 155.257, -54.8507, 0.48 ) }
    dend_1 { pt3dadd( -78.3366, 156.175, -54.9478, 0.12 ) }
    dend_1 { pt3dadd( -78.7273, 157.116, -55.0797, 0.12 ) }
    dend_1 { pt3dadd( -79.0302, 157.744, -55.1799, 0.12 ) }
    dend_1 { pt3dadd( -79.3844, 158.367, -55.2771, 0.48 ) }
    dend_1 { pt3dadd( -79.658, 158.81, -55.3423, 0.72 ) }
    dend_1 { pt3dadd( -80.3683, 159.881, -55.4781, 0.12 ) }
    dend_1 { pt3dadd( -81.6612, 161.743, -55.6643, 0.12 ) }
    dend_1 { pt3dadd( -82.7245, 163.217, -55.8833, 0.12 ) }
    dend_1 { pt3dadd( -83.3527, 164.09, -56.0372, 0.12 ) }
    dend_1 { pt3dadd( -83.589, 164.427, -56.1011, 0.84 ) }
    dend_1 { pt3dadd( -84.0622, 165.125, -56.2406, 0.96 ) }
    dend_1 { pt3dadd( -84.791, 166.253, -56.4633, 0.72 ) }
    dend_1 { pt3dadd( -85.5792, 167.567, -56.7403, 0.12 ) }
    dend_1 { pt3dadd( -86.5705, 169.235, -57.0947, 0.12 ) }
    dend_1 { pt3dadd( -87.024, 170.002, -57.3075, 0.36 ) }
    dend_1 { pt3dadd( -87.7767, 171.283, -57.7079, 0.12 ) }
    dend_1 { pt3dadd( -88.4071, 172.427, -58.085, 0.12 ) }
    dend_1 { pt3dadd( -88.7372, 173.079, -58.2979, 0.12 ) }
    dend_1 { pt3dadd( -89.0301, 173.691, -58.4829, 0.72 ) }
    dend_1 { pt3dadd( -90.0176, 175.736, -59.1576, 0.12 ) }
    dend_1 { pt3dadd( -90.6905, 177.095, -59.7084, 0.12 ) }
    dend_1 { pt3dadd( -91.2548, 178.21, -60.206, 0.12 ) }
    dend_1 { pt3dadd( -91.5382, 178.777, -60.4687, 0.12 ) }
    dend_1 { pt3dadd( -91.8644, 179.469, -60.8364, 0.12 ) }
    dend_1 { pt3dadd( -92.2712, 180.395, -61.3573, 0.36 ) }
    dend_1 { pt3dadd( -92.8988, 181.8, -62.1415, 0.12 ) }
    dend_1 { pt3dadd( -93.4024, 182.833, -62.8566, 0.12 ) }
    dend_1 { pt3dadd( -93.6021, 183.204, -63.1367, 0.48 ) }
    dend_1 { pt3dadd( -94.3426, 184.737, -64.1334, 0.24 ) }
    dend_1 { pt3dadd( -94.396, 184.876, -64.2144, 0.12 ) }
    dend_1 { pt3dadd( -94.601, 185.519, -64.5649, 0.12 ) }
    dend_1 { pt3dadd( -94.789, 186.165, -64.8342, 0.12 ) }
    dend_1 { pt3dadd( -94.9785, 186.806, -65.0859, 0.12 ) }
    dend_1 { pt3dadd( -95.4691, 188.521, -65.6679, 0.12 ) }
    dend_1 { pt3dadd( -95.714, 189.477, -66.0172, 0.36 ) }
    dend_1 { pt3dadd( -95.8949, 190.37, -66.4003, 0.12 ) }
    dend_1 { pt3dadd( -96.2369, 192.248, -67.191, 0.12 ) }
    dend_1 { pt3dadd( -96.3404, 192.812, -67.3986, 0.6 ) }
    dend_1 { pt3dadd( -96.4621, 193.388, -67.5863, 0.6 ) }
    dend_1 { pt3dadd( -97.0267, 195.521, -68.2087, 0.12 ) }
    dend_1 { pt3dadd( -97.3592, 196.602, -68.5565, 0.12 ) }
    dend_1 { pt3dadd( -98.3346, 199.412, -69.5272, 0.12 ) }
    dend_1 { pt3dadd( -99.1293, 201.438, -70.2898, 0.12 ) }
    dend_1 { pt3dadd( -99.488, 202.267, -70.5984, 0.12 ) }
    dend_1 { pt3dadd( -99.8023, 202.879, -70.8178, 0.84 ) }
    dend_1 { pt3dadd( -101.218, 205.296, -71.7278, 0.12 ) }
    dend_1 { pt3dadd( -101.716, 206.05, -72.0932, 0.12 ) }
    dend_1 { pt3dadd( -102.285, 206.883, -72.5776, 0.12 ) }
    dend_1 { pt3dadd( -102.77, 207.6, -72.9829, 0.12 ) }
    dend_1 { pt3dadd( -103.31, 208.437, -73.3731, 0.48 ) }
    dend_1 { pt3dadd( -104.211, 209.908, -73.8677, 0.12 ) }
    dend_1 { pt3dadd( -104.773, 210.876, -74.022, 0.12 ) }
    dend_1 { pt3dadd( -105.604, 212.349, -74.1894, 0.12 ) }
    dend_1 { pt3dadd( -106.258, 213.507, -74.2739, 0.12 ) }
    dend_1 { pt3dadd( -106.965, 214.757, -74.3186, 0.48 ) }
    dend_1 { pt3dadd( -107.317, 215.39, -74.3182, 0.12 ) }
    dend_1 { pt3dadd( -108.971, 218.278, -74.1555, 0.12 ) }
    dend_1 { pt3dadd( -109.646, 219.411, -74.0873, 0.12 ) }
    dend_1 { pt3dadd( -110.421, 220.64, -74.0096, 0.12 ) }
    dend_1 { pt3dadd( -110.799, 221.254, -73.9722, 0.6 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.56637, 35.9502, -0.00167934, 0.195864 ) }
    axon_1 { pt3dadd( -12.2185, 50.4988, -0.00167934, 0.195864 ) }
    axon_1 { pt3dadd( -15.8707, 65.0474, -0.00167934, 0.195864 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 65/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -0.161749, 23.741, -1.76691, 0.96 ) }
    apic_3 { pt3dadd( -0.52919, 24.1027, -2.11778, 0.96 ) }
    apic_3 { pt3dadd( -0.938074, 24.5346, -2.43599, 0.96 ) }
    apic_3 { pt3dadd( -1.30765, 24.9483, -2.64142, 0.6 ) }
    apic_3 { pt3dadd( -3.1803, 27.1086, -3.47625, 0.72 ) }
    apic_3 { pt3dadd( -3.57471, 27.5828, -3.62653, 0.12 ) }
    apic_3 { pt3dadd( -4.07224, 28.2256, -3.78629, 0.12 ) }
    apic_3 { pt3dadd( -4.6033, 28.9623, -3.95767, 0.24 ) }
    apic_3 { pt3dadd( -5.32896, 30.068, -4.152, 0.6 ) }
    apic_3 { pt3dadd( -5.95782, 31.1336, -4.25506, 0.6 ) }
    apic_3 { pt3dadd( -6.25713, 31.6904, -4.27022, 0.12 ) }
    apic_3 { pt3dadd( -6.78323, 32.6801, -4.35307, 0.12 ) }
    apic_3 { pt3dadd( -7.27461, 33.6203, -4.47687, 0.12 ) }
    apic_3 { pt3dadd( -7.67449, 34.3666, -4.62783, 0.48 ) }
    apic_3 { pt3dadd( -7.87795, 34.7329, -4.71856, 0.48 ) }
    apic_3 { pt3dadd( -8.49256, 35.6743, -5.02311, 0.12 ) }
    apic_3 { pt3dadd( -8.95306, 36.2652, -5.2496, 0.12 ) }
    apic_3 { pt3dadd( -9.33417, 36.6779, -5.44618, 0.6 ) }
    apic_3 { pt3dadd( -9.97796, 37.3144, -5.75585, 0.12 ) }
    apic_3 { pt3dadd( -10.4968, 37.7818, -6.02647, 0.12 ) }
    apic_3 { pt3dadd( -11.6437, 38.7896, -6.6224, 0.12 ) }
    apic_3 { pt3dadd( -12.1777, 39.2541, -6.86658, 0.12 ) }
    apic_3 { pt3dadd( -12.6318, 39.634, -7.06113, 0.12 ) }
    apic_3 { pt3dadd( -13.0649, 40.0019, -7.21904, 0.96 ) }
    apic_3 { pt3dadd( -14.0176, 40.8366, -7.46842, 0.12 ) }
    apic_3 { pt3dadd( -14.3848, 41.1553, -7.5696, 0.12 ) }
    apic_3 { pt3dadd( -15.0124, 41.7107, -7.69448, 0.12 ) }
    apic_3 { pt3dadd( -15.4507, 42.0829, -7.76496, 0.96 ) }
    apic_3 { pt3dadd( -15.9583, 42.5024, -7.82988, 1.08 ) }
    apic_3 { pt3dadd( -16.1622, 42.664, -7.85345, 1.08 ) }
    apic_3 { pt3dadd( -17.5638, 43.7685, -7.98111, 0.24 ) }
    apic_3 { pt3dadd( -18.3089, 44.3503, -8.07794, 0.12 ) }
    apic_3 { pt3dadd( -19.124, 44.9921, -8.20303, 0.12 ) }
    apic_3 { pt3dadd( -19.5332, 45.3174, -8.26058, 0.72 ) }
    apic_3 { pt3dadd( -19.8575, 45.5843, -8.30036, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_3 { pt3dadd( -20.5436, 46.2098, -8.34194, 0.36 ) }
    apic_3 { pt3dadd( -20.8663, 46.5529, -8.31809, 0.12 ) }
    apic_3 { pt3dadd( -21.186, 46.9281, -8.29539, 0.12 ) }
    apic_3 { pt3dadd( -21.4472, 47.2636, -8.26783, 0.48 ) }
    apic_3 { pt3dadd( -21.6901, 47.5919, -8.22286, 0.12 ) }
    apic_3 { pt3dadd( -22.1499, 48.2229, -8.14151, 0.12 ) }
    apic_3 { pt3dadd( -22.4017, 48.57, -8.0877, 0.12 ) }
    apic_3 { pt3dadd( -22.8168, 49.1121, -7.99447, 0.84 ) }
    apic_3 { pt3dadd( -23.1739, 49.5668, -7.89636, 0.72 ) }
    apic_3 { pt3dadd( -23.4372, 49.8889, -7.80895, 0.12 ) }
    apic_3 { pt3dadd( -23.7198, 50.2242, -7.69286, 0.12 ) }
    apic_3 { pt3dadd( -24.1327, 50.7105, -7.503, 0.12 ) }
    apic_3 { pt3dadd( -24.5471, 51.2215, -7.29455, 0.12 ) }
    apic_3 { pt3dadd( -24.9278, 51.7097, -7.08312, 0.48 ) }
    apic_3 { pt3dadd( -25.3573, 52.2733, -6.82422, 0.6 ) }
    apic_3 { pt3dadd( -25.6149, 52.6247, -6.66127, 0.24 ) }
    apic_3 { pt3dadd( -25.9977, 53.1339, -6.46265, 0.24 ) }
    apic_3 { pt3dadd( -26.2529, 53.4611, -6.36884, 0.12 ) }
    apic_3 { pt3dadd( -26.561, 53.8491, -6.29542, 0.12 ) }
    apic_3 { pt3dadd( -26.829, 54.1666, -6.25862, 0.6 ) }
    apic_3 { pt3dadd( -27.3336, 54.7241, -6.20341, 0.84 ) }
    apic_3 { pt3dadd( -28.1692, 55.5742, -6.1152, 0.12 ) }
    apic_3 { pt3dadd( -28.6425, 56.0261, -6.0577, 0.12 ) }
    apic_3 { pt3dadd( -29.0722, 56.4194, -5.99364, 0.24 ) }
    apic_3 { pt3dadd( -29.3452, 56.665, -5.94489, 0.12 ) }
    apic_3 { pt3dadd( -30.0371, 57.2804, -5.78787, 0.12 ) }
    apic_3 { pt3dadd( -30.4346, 57.6217, -5.69619, 0.48 ) }
    apic_3 { pt3dadd( -30.8675, 58.0045, -5.58113, 0.12 ) }
    apic_3 { pt3dadd( -31.2332, 58.3318, -5.50375, 0.12 ) }
    apic_3 { pt3dadd( -31.4166, 58.5041, -5.47302, 0.48 ) }
    apic_3 { pt3dadd( -31.8118, 58.9368, -5.41785, 0.48 ) }
    apic_3 { pt3dadd( -32.3744, 59.5765, -5.43068, 0.12 ) }
    apic_3 { pt3dadd( -32.7621, 60.0187, -5.46876, 0.12 ) }
    apic_3 { pt3dadd( -33.2561, 60.5663, -5.58329, 0.48 ) }
    apic_3 { pt3dadd( -33.483, 60.8268, -5.65044, 0.12 ) }
    apic_3 { pt3dadd( -34.2343, 61.7452, -5.86754, 0.12 ) }
    apic_3 { pt3dadd( -35.1345, 62.9165, -6.11275, 0.84 ) }
    apic_3 { pt3dadd( -35.4781, 63.3915, -6.19413, 0.84 ) }
    apic_3 { pt3dadd( -36.1881, 64.3912, -6.37565, 0.12 ) }
    apic_3 { pt3dadd( -36.8494, 65.3337, -6.56206, 0.12 ) }
    apic_3 { pt3dadd( -37.655, 66.5055, -6.7778, 0.12 ) }
    apic_3 { pt3dadd( -37.889, 66.8586, -6.83046, 0.6 ) }
    apic_3 { pt3dadd( -38.1769, 67.3076, -6.88937, 0.72 ) }
    apic_3 { pt3dadd( -38.55, 67.8565, -7.00125, 0.12 ) }
    apic_3 { pt3dadd( -39.1596, 68.702, -7.18989, 0.12 ) }
    apic_3 { pt3dadd( -39.5141, 69.1538, -7.32625, 0.12 ) }
    apic_3 { pt3dadd( -39.8176, 69.5111, -7.47738, 0.72 ) }
    apic_3 { pt3dadd( -40.6132, 70.4488, -7.86052, 0.72 ) }
    apic_3 { pt3dadd( -41.1538, 71.0924, -8.10564, 0.12 ) }
    apic_3 { pt3dadd( -42.021, 72.1483, -8.52836, 0.12 ) }
    apic_3 { pt3dadd( -42.2682, 72.4712, -8.6538, 0.48 ) }
    apic_3 { pt3dadd( -42.8494, 73.3182, -8.94658, 0.12 ) }
    apic_3 { pt3dadd( -43.7214, 74.7139, -9.3491, 0.12 ) }
    apic_3 { pt3dadd( -43.8503, 74.9393, -9.40581, 0.48 ) }
    apic_3 { pt3dadd( -44.3448, 75.919, -9.61879, 0.12 ) }
    apic_3 { pt3dadd( -44.7593, 76.8146, -9.8331, 0.12 ) }
    apic_3 { pt3dadd( -45.246, 77.967, -10.0911, 0.12 ) }
    apic_3 { pt3dadd( -45.3431, 78.2101, -10.1451, 0.48 ) }
    apic_3 { pt3dadd( -45.6785, 79.079, -10.3642, 0.12 ) }
    apic_3 { pt3dadd( -46.4875, 81.1093, -10.8909, 0.12 ) }
    apic_3 { pt3dadd( -46.6875, 81.6086, -11.0097, 0.6 ) }
    apic_3 { pt3dadd( -46.8167, 81.9336, -11.0891, 0.72 ) }
    apic_3 { pt3dadd( -47.1262, 82.7129, -11.2639, 0.12 ) }
    apic_3 { pt3dadd( -47.4334, 83.5084, -11.41, 0.24 ) }
    apic_3 { pt3dadd( -47.667, 84.1237, -11.4812, 0.12 ) }
    apic_3 { pt3dadd( -47.9834, 84.9249, -11.5556, 0.12 ) }
    apic_3 { pt3dadd( -48.5294, 86.3257, -11.6259, 0.12 ) }
    apic_3 { pt3dadd( -48.7104, 86.8005, -11.6334, 0.48 ) }
    apic_3 { pt3dadd( -48.7496, 86.9137, -11.6281, 0.12 ) }
    apic_3 { pt3dadd( -48.9564, 87.5141, -11.5873, 0.12 ) }
    apic_3 { pt3dadd( -49.0343, 87.7685, -11.5536, 0.48 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 71/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -0.161749, 23.741, -1.76691, 0.96 ) }
    apic_2 { pt3dadd( -0.181388, 24.5165, -1.74599, 0.96 ) }
    apic_2 { pt3dadd( -0.194531, 25.0062, -1.7336, 0.96 ) }
    apic_2 { pt3dadd( -0.225832, 25.7866, -1.71313, 0.6 ) }
    apic_2 { pt3dadd( -0.252506, 26.4685, -1.69638, 0.48 ) }
    apic_2 { pt3dadd( -0.291408, 27.5397, -1.67222, 0.48 ) }
    apic_2 { pt3dadd( -0.338191, 28.8152, -1.64532, 0.48 ) }
    apic_2 { pt3dadd( -0.354577, 29.2948, -1.62956, 0.96 ) }
    apic_2 { pt3dadd( -0.370712, 29.82, -1.60602, 1.44 ) }
    apic_2 { pt3dadd( -0.388384, 30.4049, -1.57381, 1.08 ) }
    apic_2 { pt3dadd( -0.405713, 31.087, -1.53187, 0.84 ) }
    apic_2 { pt3dadd( -0.42659, 31.961, -1.47351, 0.84 ) }
    apic_2 { pt3dadd( -0.429877, 32.5493, -1.43777, 0.36 ) }
    apic_2 { pt3dadd( -0.42004, 33.6187, -1.38482, 0.36 ) }
    apic_2 { pt3dadd( -0.409408, 34.0087, -1.36304, 0.72 ) }
    apic_2 { pt3dadd( -0.380046, 34.78, -1.31745, 1.32 ) }
    apic_2 { pt3dadd( -0.3571, 35.1693, -1.29589, 1.32 ) }
    apic_2 { pt3dadd( -0.295777, 35.9537, -1.26098, 0.6 ) }
    apic_2 { pt3dadd( -0.228857, 36.7298, -1.23866, 0.48 ) }
    apic_2 { pt3dadd( -0.166902, 37.4091, -1.21631, 0.6 ) }
    apic_2 { pt3dadd( -0.133281, 37.8022, -1.20238, 0.96 ) }
    apic_2 { pt3dadd( -0.0826623, 38.393, -1.16772, 0.84 ) }
    apic_2 { pt3dadd( -0.0137941, 39.2585, -1.10313, 0.72 ) }
    apic_2 { pt3dadd( 0.033178, 39.9296, -1.04418, 0.72 ) }
    apic_2 { pt3dadd( 0.06548, 40.4247, -1.00239, 1.08 ) }
    apic_2 { pt3dadd( 0.086068, 40.8059, -0.978426, 1.2 ) }
    apic_2 { pt3dadd( 0.131416, 41.7718, -0.901665, 0.6 ) }
    apic_2 { pt3dadd( 0.155869, 42.4441, -0.842068, 0.6 ) }
    apic_2 { pt3dadd( 0.163535, 42.7357, -0.815379, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_2 { pt3dadd( 0.168932, 43.224, -0.774712, 0.96 ) }
    apic_2 { pt3dadd( 0.164207, 43.7496, -0.745364, 0.84 ) }
    apic_2 { pt3dadd( 0.137174, 44.6874, -0.71751, 0.36 ) }
    apic_2 { pt3dadd( 0.081914, 45.7566, -0.712851, 0.36 ) }
    apic_2 { pt3dadd( 0.0466294, 46.3415, -0.702632, 0.72 ) }
    apic_2 { pt3dadd( 8.15663E-4, 47.0323, -0.677986, 1.08 ) }
    apic_2 { pt3dadd( -0.0689842, 47.9356, -0.632294, 0.6 ) }
    apic_2 { pt3dadd( -0.133597, 48.7046, -0.589472, 0.48 ) }
    apic_2 { pt3dadd( -0.181139, 49.1994, -0.565189, 0.48 ) }
    apic_2 { pt3dadd( -0.263793, 50.0477, -0.515318, 1.2 ) }
    apic_2 { pt3dadd( -0.342595, 50.8392, -0.461518, 0.48 ) }
    apic_2 { pt3dadd( -0.444477, 51.8181, -0.384614, 0.48 ) }
    apic_2 { pt3dadd( -0.495826, 52.323, -0.331079, 0.12 ) }
    apic_2 { pt3dadd( -0.572932, 53.0929, -0.24536, 0.12 ) }
    apic_2 { pt3dadd( -0.592682, 53.3825, -0.20792, 0.12 ) }
    apic_2 { pt3dadd( -0.600616, 53.6808, -0.168881, 0.96 ) }
    apic_2 { pt3dadd( -0.591239, 54.2684, -0.085206, 0.96 ) }
    apic_2 { pt3dadd( -0.555676, 55.0462, 0.0345371, 0.72 ) }
    apic_2 { pt3dadd( -0.532433, 55.4311, 0.0946981, 0.84 ) }
    apic_2 { pt3dadd( -0.462731, 56.42, 0.257304, 0.48 ) }
    apic_2 { pt3dadd( -0.390823, 57.3786, 0.403167, 0.48 ) }
    apic_2 { pt3dadd( -0.332291, 58.142, 0.506281, 0.48 ) }
    apic_2 { pt3dadd( -0.283859, 58.8264, 0.581713, 1.08 ) }
    apic_2 { pt3dadd( -0.257931, 59.2066, 0.613326, 1.32 ) }
    apic_2 { pt3dadd( -0.180213, 60.3395, 0.691033, 0.36 ) }
    apic_2 { pt3dadd( -0.0950734, 61.6006, 0.74854, 0.36 ) }
    apic_2 { pt3dadd( -0.0386532, 62.363, 0.77712, 0.48 ) }
    apic_2 { pt3dadd( 0.065999, 63.6116, 0.807971, 0.6 ) }
    apic_2 { pt3dadd( 0.136699, 64.4158, 0.817929, 0.72 ) }
    apic_2 { pt3dadd( 0.188833, 65.0964, 0.817379, 0.72 ) }
    apic_2 { pt3dadd( 0.216246, 65.5988, 0.81109, 0.72 ) }
    apic_2 { pt3dadd( 0.236607, 66.4776, 0.795381, 0.36 ) }
    apic_2 { pt3dadd( 0.243731, 67.6455, 0.818674, 0.48 ) }
    apic_2 { pt3dadd( 0.229457, 69.0935, 0.892636, 0.48 ) }
    apic_2 { pt3dadd( 0.205132, 69.8902, 0.953282, 0.48 ) }
    apic_2 { pt3dadd( 0.142014, 71.2558, 1.0871, 0.96 ) }
    apic_2 { pt3dadd( 0.0484599, 72.9189, 1.29422, 0.48 ) }
    apic_2 { pt3dadd( -0.0334948, 74.1083, 1.46763, 0.12 ) }
    apic_2 { pt3dadd( -0.0711585, 74.5915, 1.5457, 0.12 ) }
    apic_2 { pt3dadd( -0.145193, 75.5612, 1.71005, 0.72 ) }
    apic_2 { pt3dadd( -0.164129, 75.8566, 1.7626, 0.84 ) }
    apic_2 { pt3dadd( -0.199587, 76.4747, 1.86714, 0.48 ) }
    apic_2 { pt3dadd( -0.253969, 77.54, 2.05025, 0.48 ) }
    apic_2 { pt3dadd( -0.295483, 78.498, 2.17945, 0.48 ) }
    apic_2 { pt3dadd( -0.310065, 78.973, 2.24545, 0.96 ) }
    apic_2 { pt3dadd( -0.321571, 79.715, 2.35084, 0.36 ) }
    apic_2 { pt3dadd( -0.332647, 80.7748, 2.49682, 0.36 ) }
    apic_2 { pt3dadd( -0.339884, 81.7037, 2.61754, 0.36 ) }
    apic_2 { pt3dadd( -0.338715, 82.6684, 2.74212, 0.36 ) }
    apic_2 { pt3dadd( -0.340504, 83.1483, 2.79937, 0.84 ) }
    apic_2 { pt3dadd( -0.342855, 83.4393, 2.83274, 0.84 ) }
    apic_2 { pt3dadd( -0.352186, 84.0304, 2.88922, 0.36 ) }
    apic_2 { pt3dadd( -0.360162, 84.5074, 2.94216, 0.12 ) }
    apic_2 { pt3dadd( -0.374585, 84.9946, 2.97026, 0.96 ) }
    apic_2 { pt3dadd( -0.395973, 85.5798, 2.99315, 1.32 ) }
    apic_2 { pt3dadd( -0.420769, 86.4279, 3.0574, 0.36 ) }
    apic_2 { pt3dadd( -0.441799, 87.3962, 3.15121, 0.36 ) }
    apic_2 { pt3dadd( -0.457806, 88.5297, 3.27785, 0.6 ) }
    apic_2 { pt3dadd( -0.466564, 89.645, 3.39924, 0.48 ) }
    apic_2 { pt3dadd( -0.469588, 90.4138, 3.47814, 0.48 ) }
    apic_2 { pt3dadd( -0.470905, 91.5479, 3.58134, 0.84 ) }
    apic_2 { pt3dadd( -0.478014, 92.1323, 3.62283, 0.96 ) }
    apic_2 { pt3dadd( -0.483831, 92.327, 3.63687, 0.96 ) }
    apic_2 { pt3dadd( -0.507263, 92.8106, 3.68507, 0.36 ) }
    apic_2 { pt3dadd( -0.531194, 93.3022, 3.75757, 0.36 ) }
    apic_2 { pt3dadd( -0.557577, 93.7882, 3.8114, 0.84 ) }
    apic_2 { pt3dadd( -0.586475, 94.4038, 3.8511, 1.32 ) }
    apic_2 { pt3dadd( -0.594726, 94.796, 3.89398, 0.96 ) }
    apic_2 { pt3dadd( -0.584649, 95.6138, 4.0064, 0.36 ) }
    apic_2 { pt3dadd( -0.540408, 96.6648, 4.1729, 0.36 ) }
    apic_2 { pt3dadd( -0.490899, 97.3312, 4.26735, 0.36 ) }
    apic_2 { pt3dadd( -0.43013, 97.9096, 4.33533, 0.36 ) }
    apic_2 { pt3dadd( -0.333486, 98.6201, 4.40053, 0.72 ) }
    apic_2 { pt3dadd( -0.252751, 99.1294, 4.44737, 0.36 ) }
    apic_2 { pt3dadd( -0.123779, 99.8967, 4.50792, 0.24 ) }
    apic_2 { pt3dadd( -0.0400733, 100.379, 4.55275, 0.84 ) }
    apic_2 { pt3dadd( 0.0404879, 100.871, 4.60007, 0.84 ) }
    apic_2 { pt3dadd( 0.09306, 101.272, 4.63372, 0.72 ) }
    apic_2 { pt3dadd( 0.158584, 101.908, 4.70751, 0.12 ) }
    apic_2 { pt3dadd( 0.222723, 102.675, 4.83608, 0.12 ) }
    apic_2 { pt3dadd( 0.264917, 103.237, 4.95814, 0.48 ) }
    apic_2 { pt3dadd( 0.282468, 103.523, 5.01556, 0.24 ) }
    apic_2 { pt3dadd( 0.329623, 104.67, 5.20185, 0.24 ) }
    apic_2 { pt3dadd( 0.353324, 105.458, 5.31209, 0.72 ) }
    apic_2 { pt3dadd( 0.364849, 105.943, 5.36456, 1.08 ) }
    apic_2 { pt3dadd( 0.379019, 106.746, 5.44889, 0.96 ) }
    apic_2 { pt3dadd( 0.389579, 107.604, 5.5472, 0.72 ) }
    apic_2 { pt3dadd( 0.394707, 108.29, 5.62567, 0.6 ) }
    apic_2 { pt3dadd( 0.396297, 108.911, 5.68776, 0.12 ) }
    apic_2 { pt3dadd( 0.392948, 109.493, 5.75264, 0.12 ) }
    apic_2 { pt3dadd( 0.39907, 110.162, 5.88173, 0.12 ) }
    apic_2 { pt3dadd( 0.412882, 110.752, 6.03157, 0.48 ) }
    apic_2 { pt3dadd( 0.421429, 111.023, 6.11548, 0.12 ) }
    apic_2 { pt3dadd( 0.45159, 112.031, 6.44576, 0.12 ) }
    apic_2 { pt3dadd( 0.464432, 112.836, 6.6923, 0.6 ) }
    apic_2 { pt3dadd( 0.463199, 113.62, 6.92223, 0.12 ) }
    apic_2 { pt3dadd( 0.453351, 114.559, 7.14787, 0.12 ) }
    apic_2 { pt3dadd( 0.447485, 114.862, 7.2037, 0.12 ) }
    apic_2 { pt3dadd( 0.435518, 115.432, 7.28943, 0.6 ) }
    apic_2 { pt3dadd( 0.406096, 116.688, 7.43238, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_2 { pt3dadd( 0.390364, 117.389, 7.48187, 1.08 ) }
    apic_2 { pt3dadd( 0.369977, 118.579, 7.53649, 0.48 ) }
    apic_2 { pt3dadd( 0.370845, 119.354, 7.57308, 0.12 ) }
    apic_2 { pt3dadd( 0.393154, 120.647, 7.63142, 0.12 ) }
    apic_2 { pt3dadd( 0.411052, 121.127, 7.64975, 0.12 ) }
    apic_2 { pt3dadd( 0.459046, 121.998, 7.67665, 0.12 ) }
    apic_2 { pt3dadd( 0.49893, 122.614, 7.68757, 0.72 ) }
    apic_2 { pt3dadd( 0.524394, 123.021, 7.69075, 0.12 ) }
    apic_2 { pt3dadd( 0.559121, 123.606, 7.68026, 0.12 ) }
    apic_2 { pt3dadd( 0.621092, 124.771, 7.63014, 0.48 ) }
    apic_2 { pt3dadd( 0.666204, 125.768, 7.57272, 0.6 ) }
    apic_2 { pt3dadd( 0.69022, 126.451, 7.52557, 0.6 ) }
    apic_2 { pt3dadd( 0.703273, 126.938, 7.4982, 0.84 ) }
    apic_2 { pt3dadd( 0.71661, 127.614, 7.47933, 0.6 ) }
    apic_2 { pt3dadd( 0.725398, 128.387, 7.48603, 0.72 ) }
    apic_2 { pt3dadd( 0.722044, 128.999, 7.51314, 0.36 ) }
    apic_2 { pt3dadd( 0.709861, 129.865, 7.60138, 0.48 ) }
    apic_2 { pt3dadd( 0.67693, 130.959, 7.75268, 0.48 ) }
    apic_2 { pt3dadd( 0.648706, 132.065, 7.92577, 0.6 ) }
    apic_2 { pt3dadd( 0.622802, 132.935, 8.07734, 0.48 ) }
    apic_2 { pt3dadd( 0.605099, 133.423, 8.16924, 0.48 ) }
    apic_2 { pt3dadd( 0.578324, 134.441, 8.41314, 0.12 ) }
    apic_2 { pt3dadd( 0.568104, 135.064, 8.58284, 0.12 ) }
    apic_2 { pt3dadd( 0.558712, 135.895, 8.81348, 0.12 ) }
    apic_2 { pt3dadd( 0.555742, 136.234, 8.90561, 0.96 ) }
    apic_2 { pt3dadd( 0.542965, 136.714, 9.03245, 1.08 ) }
    apic_2 { pt3dadd( 0.480126, 137.919, 9.32663, 0.36 ) }
    apic_2 { pt3dadd( 0.441409, 138.393, 9.42958, 0.36 ) }
    apic_2 { pt3dadd( 0.325955, 139.531, 9.67019, 0.36 ) }
    apic_2 { pt3dadd( 0.2262, 140.22, 9.80437, 0.36 ) }
    apic_2 { pt3dadd( 0.105146, 140.938, 9.91829, 0.24 ) }
    apic_2 { pt3dadd( 0.00278056, 141.452, 9.9744, 0.24 ) }
    apic_2 { pt3dadd( -0.0868067, 141.839, 9.99213, 0.6 ) }
    apic_2 { pt3dadd( -0.15842, 142.122, 10.0057, 0.6 ) }
    apic_2 { pt3dadd( -0.307129, 142.712, 10.0534, 0.36 ) }
    apic_2 { pt3dadd( -0.482296, 143.428, 10.1275, 0.36 ) }
    apic_2 { pt3dadd( -0.678023, 144.274, 10.2275, 0.24 ) }
    apic_2 { pt3dadd( -0.947219, 145.525, 10.391, 0.24 ) }
    apic_2 { pt3dadd( -1.11955, 146.413, 10.5099, 0.24 ) }
    apic_2 { pt3dadd( -1.23467, 147.093, 10.6043, 0.24 ) }
    apic_2 { pt3dadd( -1.27215, 147.388, 10.6454, 0.6 ) }
    apic_2 { pt3dadd( -1.3068, 147.773, 10.6957, 0.6 ) }
    apic_2 { pt3dadd( -1.33229, 148.172, 10.7421, 0.6 ) }
    apic_2 { pt3dadd( -1.35757, 148.942, 10.8105, 0.36 ) }
    apic_2 { pt3dadd( -1.36602, 149.16, 10.8217, 0.12 ) }
    apic_2 { pt3dadd( -1.42207, 149.931, 10.8336, 0.12 ) }
    apic_2 { pt3dadd( -1.48393, 150.537, 10.8362, 0.12 ) }
    apic_2 { pt3dadd( -1.54077, 150.935, 10.835, 0.36 ) }
    apic_2 { pt3dadd( -1.57953, 151.15, 10.8342, 0.12 ) }
    apic_2 { pt3dadd( -1.73432, 151.868, 10.8286, 0.12 ) }
    apic_2 { pt3dadd( -1.81687, 152.249, 10.8238, 0.48 ) }
    apic_2 { pt3dadd( -1.87633, 152.564, 10.8169, 0.12 ) }
    apic_2 { pt3dadd( -1.92448, 152.957, 10.8044, 0.12 ) }
    apic_2 { pt3dadd( -1.95848, 153.737, 10.7714, 0.12 ) }
    apic_2 { pt3dadd( -1.96621, 154.357, 10.7431, 0.72 ) }
    apic_2 { pt3dadd( -1.95, 154.846, 10.7194, 0.84 ) }
    apic_2 { pt3dadd( -1.92315, 155.282, 10.7021, 0.36 ) }
    apic_2 { pt3dadd( -1.85653, 155.891, 10.6884, 0.36 ) }
    apic_2 { pt3dadd( -1.77989, 156.32, 10.6714, 0.48 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 59/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.72645, -22.6606, 8.07791, 0.6 ) }
    dend_33 { pt3dadd( -3.56275, -23.6344, 7.08118, 0.6 ) }
    dend_33 { pt3dadd( -3.87509, -24.0075, 6.70353, 0.48 ) }
    dend_33 { pt3dadd( -4.22898, -24.4422, 6.29391, 0.48 ) }
    dend_33 { pt3dadd( -4.59959, -24.9244, 5.87802, 0.48 ) }
    dend_33 { pt3dadd( -4.86704, -25.2819, 5.60586, 0.48 ) }
    dend_33 { pt3dadd( -5.32877, -25.9176, 5.17525, 0.6 ) }
    dend_33 { pt3dadd( -5.70461, -26.4854, 4.89154, 0.72 ) }
    dend_33 { pt3dadd( -6.224, -27.2903, 4.48966, 0.84 ) }
    dend_33 { pt3dadd( -6.65549, -27.9852, 4.16333, 0.84 ) }
    dend_33 { pt3dadd( -6.9683, -28.5025, 3.96754, 1.08 ) }
    dend_33 { pt3dadd( -7.23625, -28.9739, 3.82676, 1.32 ) }
    dend_33 { pt3dadd( -7.51449, -29.5117, 3.70548, 1.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.72645, -22.6606, 8.07791, 0.96 ) }
    dend_32 { pt3dadd( -2.69806, -23.448, 8.46512, 0.96 ) }
    dend_32 { pt3dadd( -2.68106, -23.7919, 8.60108, 0.6 ) }
    dend_32 { pt3dadd( -2.63228, -24.3388, 8.8199, 0.48 ) }
    dend_32 { pt3dadd( -2.57868, -24.8358, 9.01027, 0.12 ) }
    dend_32 { pt3dadd( -2.51123, -25.3836, 9.2196, 0.12 ) }
    dend_32 { pt3dadd( -2.4797, -25.6323, 9.3126, 0.72 ) }
    dend_32 { pt3dadd( -2.42816, -26.2082, 9.49233, 0.72 ) }
    dend_32 { pt3dadd( -2.37397, -26.7953, 9.70359, 0.6 ) }
    dend_32 { pt3dadd( -2.34675, -27.0761, 9.81926, 0.6 ) }
    dend_32 { pt3dadd( -2.32034, -27.4962, 9.99825, 0.36 ) }
    dend_32 { pt3dadd( -2.30919, -27.6917, 10.0882, 0.36 ) }
    dend_32 { pt3dadd( -2.2898, -28.1171, 10.2811, 0.36 ) }
    dend_32 { pt3dadd( -2.25102, -28.8852, 10.6354, 0.36 ) }
    dend_32 { pt3dadd( -2.22762, -29.3091, 10.8111, 0.6 ) }
    dend_32 { pt3dadd( -2.1934, -29.6506, 10.952, 0.6 ) }
    dend_32 { pt3dadd( -2.1387, -29.9932, 11.0797, 0.72 ) }
    dend_32 { pt3dadd( -2.07917, -30.2694, 11.1765, 0.84 ) }
    dend_32 { pt3dadd( -1.94108, -30.8091, 11.3408, 0.6 ) }
    dend_32 { pt3dadd( -1.8564, -31.1582, 11.4341, 0.48 ) }
    dend_32 { pt3dadd( -1.80281, -31.4603, 11.5336, 0.36 ) }
    dend_32 { pt3dadd( -1.76667, -31.8512, 11.7108, 0.36 ) }
    dend_32 { pt3dadd( -1.76527, -32.0383, 11.8052, 0.6 ) }
    dend_32 { pt3dadd( -1.77962, -32.3271, 11.953, 0.72 ) }
    dend_32 { pt3dadd( -1.82246, -32.8452, 12.1938, 0.72 ) }
    dend_32 { pt3dadd( -1.82497, -33.2862, 12.425, 0.48 ) }
    dend_32 { pt3dadd( -1.79884, -33.7173, 12.647, 0.6 ) }
    dend_32 { pt3dadd( -1.76164, -34.0638, 12.8259, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -1.72552, -34.3372, 12.9543, 1.08 ) }
    dend_32 { pt3dadd( -1.6542, -34.7875, 13.1476, 1.32 ) }
    dend_32 { pt3dadd( -1.45831, -35.9569, 13.5743, 0.72 ) }
    dend_32 { pt3dadd( -1.39438, -36.3591, 13.7009, 0.36 ) }
    dend_32 { pt3dadd( -1.27275, -37.229, 13.9494, 0.48 ) }
    dend_32 { pt3dadd( -1.21217, -37.8013, 14.1123, 0.6 ) }
    dend_32 { pt3dadd( -1.19802, -38.0225, 14.1702, 0.84 ) }
    dend_32 { pt3dadd( -1.19243, -38.5364, 14.2826, 0.84 ) }
    dend_32 { pt3dadd( -1.22121, -39.1245, 14.3673, 0.72 ) }
    dend_32 { pt3dadd( -1.25109, -39.6719, 14.4279, 0.48 ) }
    dend_32 { pt3dadd( -1.26423, -40.2581, 14.477, 0.36 ) }
    dend_32 { pt3dadd( -1.26211, -40.6262, 14.506, 0.36 ) }
    dend_32 { pt3dadd( -1.24798, -41.0723, 14.5351, 0.6 ) }
    dend_32 { pt3dadd( -1.21435, -41.5914, 14.5583, 0.6 ) }
    dend_32 { pt3dadd( -1.14732, -42.112, 14.5819, 0.6 ) }
    dend_32 { pt3dadd( -1.04046, -42.6562, 14.5987, 0.6 ) }
    dend_32 { pt3dadd( -0.879639, -43.2395, 14.608, 0.48 ) }
    dend_32 { pt3dadd( -0.72435, -43.7102, 14.6319, 0.48 ) }
    dend_32 { pt3dadd( -0.569624, -44.1424, 14.6778, 0.6 ) }
    dend_32 { pt3dadd( -0.354786, -44.7398, 14.7835, 0.36 ) }
    dend_32 { pt3dadd( -0.245381, -45.0798, 14.8561, 0.36 ) }
    dend_32 { pt3dadd( -0.0613329, -45.7419, 14.9954, 0.36 ) }
    dend_32 { pt3dadd( 0.119237, -46.4865, 15.1585, 0.48 ) }
    dend_32 { pt3dadd( 0.211729, -46.9514, 15.2542, 0.48 ) }
    dend_32 { pt3dadd( 0.303924, -47.5636, 15.3615, 0.48 ) }
    dend_32 { pt3dadd( 0.367063, -48.1684, 15.4723, 0.48 ) }
    dend_32 { pt3dadd( 0.401446, -48.6043, 15.5613, 0.72 ) }
    dend_32 { pt3dadd( 0.427262, -48.9704, 15.6548, 0.72 ) }
    dend_32 { pt3dadd( 0.450136, -49.2314, 15.7253, 0.72 ) }
    dend_32 { pt3dadd( 0.504685, -49.6569, 15.8439, 0.84 ) }
    dend_32 { pt3dadd( 0.614041, -50.3751, 16.0715, 0.12 ) }
    dend_32 { pt3dadd( 0.699866, -50.8452, 16.2661, 0.12 ) }
    dend_32 { pt3dadd( 0.821788, -51.4443, 16.5592, 0.48 ) }
    dend_32 { pt3dadd( 0.878935, -51.7019, 16.7039, 0.6 ) }
    dend_32 { pt3dadd( 0.964009, -52.0598, 16.927, 0.6 ) }
    dend_32 { pt3dadd( 0.620031, -58.1622, 18.02, 0.6 ) }
    dend_32 { pt3dadd( 0.273745, -64.1852, 19.4573, 0.6 ) }
    dend_32 { pt3dadd( -0.670651, -69.7616, 21.9194, 0.6 ) }
    dend_32 { pt3dadd( -0.546478, -75.1862, 24.805, 0.6 ) }
    dend_32 { pt3dadd( -0.0577791, -81.2362, 26.0479, 0.6 ) }
    dend_32 { pt3dadd( 0.305196, -87.4295, 26.3288, 0.6 ) }
    dend_32 { pt3dadd( 1.7664, -93.4306, 26.0629, 0.6 ) }
    dend_32 { pt3dadd( 3.44208, -99.3723, 26.1917, 0.6 ) }
    dend_32 { pt3dadd( 5.34506, -105.227, 25.8648, 0.6 ) }
    dend_32 { pt3dadd( 7.93967, -110.784, 26.0197, 0.6 ) }
    dend_32 { pt3dadd( 9.96891, -116.457, 27.2459, 0.6 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 46/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 48.7363, 7.29938, 25.4022, 0.48 ) }
    dend_28 { pt3dadd( 57.3236, 11.3175, 30.67, 0.48 ) }
    dend_28 { pt3dadd( 64.7673, 16.3291, 36.8749, 0.48 ) }
    dend_28 { pt3dadd( 72.1523, 21.3576, 43.1395, 0.48 ) }
    dend_28 { pt3dadd( 80.5062, 25.6837, 48.5696, 0.48 ) }
    dend_28 { pt3dadd( 88.6373, 29.1502, 54.8395, 0.48 ) }
    dend_28 { pt3dadd( 96.5386, 31.1115, 61.9233, 0.48 ) }
    dend_28 { pt3dadd( 103.341, 33.4669, 69.9979, 0.48 ) }
    dend_28 { pt3dadd( 111.494, 34.9798, 76.8792, 0.48 ) }
    dend_28 { pt3dadd( 119.168, 35.0682, 84.4034, 0.48 ) }
    dend_28 { pt3dadd( 127.247, 36.7733, 91.3378, 0.48 ) }
    dend_28 { pt3dadd( 136.165, 38.7739, 97.0505, 0.48 ) }
    dend_28 { pt3dadd( 145.44, 41.6641, 101.758, 0.48 ) }
    dend_28 { pt3dadd( 154.31, 42.8914, 107.725, 0.48 ) }
    dend_28 { pt3dadd( 163.504, 44.0289, 113.187, 0.48 ) }
    dend_28 { pt3dadd( 173.393, 45.9578, 116.961, 0.48 ) }
    dend_28 { pt3dadd( 183.69, 48.3691, 118.924, 0.48 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 48.7363, 7.29938, 25.4022, 0.36 ) }
    dend_27 { pt3dadd( 61.3931, 10.7024, 29.0286, 0.48 ) }
    dend_27 { pt3dadd( 74.4856, 14.3941, 29.9432, 0.48 ) }
    dend_27 { pt3dadd( 86.8151, 19.558, 32.833, 0.48 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 2.17383, -16.9277, -27.752, 0.48 ) }
    dend_21 { pt3dadd( 0.656196, -16.7078, -31.9054, 0.48 ) }
    dend_21 { pt3dadd( 0.242132, -16.6172, -32.987, 0.48 ) }
    dend_21 { pt3dadd( 0.126203, -16.5941, -33.2374, 0.12 ) }
    dend_21 { pt3dadd( -0.217036, -16.5249, -33.9713, 0.12 ) }
    dend_21 { pt3dadd( -0.776972, -16.4251, -35.126, 0.72 ) }
    dend_21 { pt3dadd( -1.18341, -16.3605, -35.991, 0.84 ) }
    dend_21 { pt3dadd( -1.82206, -16.2736, -37.129, 0.12 ) }
    dend_21 { pt3dadd( -2.57161, -16.1846, -38.5674, 0.12 ) }
    dend_21 { pt3dadd( -3.2174, -16.1099, -39.798, 0.84 ) }
    dend_21 { pt3dadd( -3.41901, -16.0972, -40.165, 0.84 ) }
    dend_21 { pt3dadd( -4.20299, -16.1033, -41.508, 0.12 ) }
    dend_21 { pt3dadd( -4.39629, -16.1126, -41.8276, 0.12 ) }
    dend_21 { pt3dadd( -4.74287, -16.1316, -42.3057, 0.12 ) }
    dend_21 { pt3dadd( -4.96091, -16.1368, -42.6014, 1.08 ) }
    dend_21 { pt3dadd( -5.45381, -16.1348, -43.1588, 0.84 ) }
    dend_21 { pt3dadd( -6.32919, -16.1064, -44.0732, 0.12 ) }
    dend_21 { pt3dadd( -7.02376, -16.053, -44.7802, 0.12 ) }
    dend_21 { pt3dadd( -7.28049, -16.01, -45.1823, 0.48 ) }
    dend_21 { pt3dadd( -7.60872, -15.9156, -45.9042, 0.12 ) }
    dend_21 { pt3dadd( -7.89949, -15.7959, -46.6635, 0.12 ) }
    dend_21 { pt3dadd( -8.00766, -15.7099, -47.1227, 0.84 ) }
    dend_21 { pt3dadd( -8.1891, -15.5202, -48.1164, 1.08 ) }
    dend_21 { pt3dadd( -8.56306, -15.0861, -50.6911, 0.6 ) }
    dend_21 { pt3dadd( -8.6702, -14.959, -51.4767, 0.84 ) }
    dend_21 { pt3dadd( -8.7325, -14.8852, -51.9559, 0.84 ) }
    dend_21 { pt3dadd( -9.10806, -14.4977, -54.7257, 0.12 ) }
    dend_21 { pt3dadd( -9.19536, -14.4382, -55.1932, 0.12 ) }
    dend_21 { pt3dadd( -9.35461, -14.3797, -55.7488, 0.12 ) }
    dend_21 { pt3dadd( -9.49975, -14.3488, -56.0848, 0.48 ) }
    dend_21 { pt3dadd( -9.81546, -14.3059, -56.7469, 0.12 ) }
    dend_21 { pt3dadd( -10.5949, -14.2431, -58.1994, 0.12 ) }
    dend_21 { pt3dadd( -10.9865, -14.2241, -58.7757, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -11.5107, -14.1652, -59.5774, 0.84 ) }
    dend_21 { pt3dadd( -11.7004, -14.1342, -59.868, 0.84 ) }
    dend_21 { pt3dadd( -12.4425, -14.0093, -60.9627, 0.12 ) }
    dend_21 { pt3dadd( -12.7189, -13.9624, -61.3511, 0.12 ) }
    dend_21 { pt3dadd( -12.9943, -13.9126, -61.7219, 0.12 ) }
    dend_21 { pt3dadd( -13.9501, -13.7368, -62.9334, 0.12 ) }
    dend_21 { pt3dadd( -14.0957, -13.7055, -63.1117, 0.72 ) }
    dend_21 { pt3dadd( -14.7478, -13.5451, -63.8915, 0.72 ) }
    dend_21 { pt3dadd( -15.324, -13.387, -64.5748, 0.12 ) }
    dend_21 { pt3dadd( -15.6605, -13.287, -65.0377, 0.12 ) }
    dend_21 { pt3dadd( -16.1059, -13.1485, -65.7043, 0.48 ) }
    dend_21 { pt3dadd( -16.6994, -12.9546, -66.6455, 0.12 ) }
    dend_21 { pt3dadd( -16.8782, -12.8919, -66.9382, 0.12 ) }
    dend_21 { pt3dadd( -17.2814, -12.7057, -67.7734, 0.72 ) }
    dend_21 { pt3dadd( -17.7559, -12.4497, -68.9055, 0.12 ) }
    dend_21 { pt3dadd( -17.8754, -12.3815, -69.2565, 0.12 ) }
    dend_21 { pt3dadd( -17.9049, -12.3655, -69.3677, 0.6 ) }
    dend_21 { pt3dadd( -18.0271, -12.3178, -69.8285, 0.6 ) }
    dend_21 { pt3dadd( -18.5845, -12.1478, -71.8202, 0.48 ) }
    dend_21 { pt3dadd( -18.7529, -12.1089, -72.3868, 0.48 ) }
    dend_21 { pt3dadd( -19.243, -12.0606, -73.9718, 0.72 ) }
    dend_21 { pt3dadd( -19.7267, -12.0697, -75.3794, 0.12 ) }
    dend_21 { pt3dadd( -19.9134, -12.0965, -75.859, 0.12 ) }
    dend_21 { pt3dadd( -20.146, -12.1565, -76.3928, 0.48 ) }
    dend_21 { pt3dadd( -20.8522, -12.4276, -77.6749, 0.12 ) }
    dend_21 { pt3dadd( -21.4887, -12.7648, -78.8215, 0.12 ) }
    dend_21 { pt3dadd( -21.9385, -13.0577, -79.5435, 0.12 ) }
    dend_21 { pt3dadd( -22.2654, -13.3083, -80.0223, 0.12 ) }
    dend_21 { pt3dadd( -22.586, -13.6279, -80.5534, 0.6 ) }
    dend_21 { pt3dadd( -22.8549, -13.9479, -81.0713, 0.6 ) }
    dend_21 { pt3dadd( -23.4145, -14.6696, -82.1664, 0.12 ) }
    dend_21 { pt3dadd( -23.6102, -14.9267, -82.5709, 0.12 ) }
    dend_21 { pt3dadd( -23.8234, -15.1978, -83.0465, 0.12 ) }
    dend_21 { pt3dadd( -24.4372, -15.8833, -84.2882, 0.12 ) }
    dend_21 { pt3dadd( -24.937, -16.4059, -85.3426, 0.12 ) }
    dend_21 { pt3dadd( -25.1458, -16.6006, -85.7764, 0.12 ) }
    dend_21 { pt3dadd( -25.3419, -16.7461, -86.1205, 0.12 ) }
    dend_21 { pt3dadd( -25.6101, -16.9208, -86.5724, 0.6 ) }
    dend_21 { pt3dadd( -26.0925, -17.214, -87.3969, 0.6 ) }
    dend_21 { pt3dadd( -27.2953, -17.831, -89.0421, 0.12 ) }
    dend_21 { pt3dadd( -27.6017, -17.9897, -89.4349, 0.12 ) }
    dend_21 { pt3dadd( -28.0804, -18.2346, -90.1059, 0.12 ) }
    dend_21 { pt3dadd( -28.4012, -18.3772, -90.5394, 0.36 ) }
    dend_21 { pt3dadd( -29.2611, -18.6855, -91.6159, 0.12 ) }
    dend_21 { pt3dadd( -30.2062, -18.9378, -92.741, 0.12 ) }
    dend_21 { pt3dadd( -30.9913, -19.1277, -93.5184, 0.36 ) }
    dend_21 { pt3dadd( -31.6992, -19.293, -94.2128, 0.12 ) }
    dend_21 { pt3dadd( -32.6083, -19.4888, -95.1268, 0.12 ) }
    dend_21 { pt3dadd( -32.9559, -19.5427, -95.4533, 0.48 ) }
    dend_21 { pt3dadd( -33.551, -19.6272, -96.0388, 0.12 ) }
    dend_21 { pt3dadd( -34.1036, -19.7175, -96.6638, 0.12 ) }
    dend_21 { pt3dadd( -34.4136, -19.7704, -97.0383, 0.36 ) }
    dend_21 { pt3dadd( -34.8815, -19.8657, -97.7957, 0.12 ) }
    dend_21 { pt3dadd( -35.1385, -19.8981, -98.6008, 0.12 ) }
    dend_21 { pt3dadd( -35.3566, -19.8753, -99.7969, 0.6 ) }
    dend_21 { pt3dadd( -35.3736, -19.8508, -100.055, 0.6 ) }
    dend_21 { pt3dadd( -35.3588, -19.6347, -101.397, 0.12 ) }
    dend_21 { pt3dadd( -35.1904, -19.2457, -103.152, 0.48 ) }
    dend_21 { pt3dadd( -34.8102, -18.6334, -105.379, 0.12 ) }
    dend_21 { pt3dadd( -34.6648, -18.4225, -105.989, 0.12 ) }
    dend_21 { pt3dadd( -34.3035, -17.8958, -107.231, 0.12 ) }
    dend_21 { pt3dadd( -34.1564, -17.7219, -107.662, 0.6 ) }
    dend_21 { pt3dadd( -33.5374, -17.1135, -109.253, 0.48 ) }
    dend_21 { pt3dadd( -32.9495, -16.6394, -110.667, 0.24 ) }
    dend_21 { pt3dadd( -32.6572, -16.4607, -111.434, 0.24 ) }
    dend_21 { pt3dadd( -31.8439, -16.0891, -113.948, 0.84 ) }
    dend_21 { pt3dadd( -31.1072, -15.7926, -116.828, 0.48 ) }
    dend_21 { pt3dadd( -31.0073, -15.7744, -117.338, 0.48 ) }
    dend_21 { pt3dadd( -30.942, -15.7914, -117.853, 0.6 ) }
    dend_21 { pt3dadd( -30.8012, -16.038, -120.382, 0.6 ) }
    dend_21 { pt3dadd( -30.7551, -16.4541, -123.523, 0.12 ) }
    dend_21 { pt3dadd( -30.8383, -16.7013, -125.03, 0.12 ) }
    dend_21 { pt3dadd( -31.1123, -17.0353, -127.248, 0.12 ) }
    dend_21 { pt3dadd( -31.2208, -17.1414, -128.072, 0.12 ) }
    dend_21 { pt3dadd( -31.3435, -17.254, -128.958, 0.12 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 75/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.17383, -16.9277, -27.752, 0.12 ) }
    dend_20 { pt3dadd( 1.94584, -16.6391, -27.8419, 0.12 ) }
    dend_20 { pt3dadd( 1.65455, -16.2501, -27.9498, 0.12 ) }
    dend_20 { pt3dadd( 1.27969, -15.5879, -28.3462, 0.12 ) }
    dend_20 { pt3dadd( 1.12806, -15.2018, -28.6123, 0.6 ) }
    dend_20 { pt3dadd( 1.0201, -14.7157, -29.0112, 0.84 ) }
    dend_20 { pt3dadd( 0.975429, -14.4034, -29.2949, 0.6 ) }
    dend_20 { pt3dadd( 0.938498, -13.8633, -29.8143, 0.6 ) }
    dend_20 { pt3dadd( 1.01776, -12.3965, -31.4541, 0.12 ) }
    dend_20 { pt3dadd( 1.11368, -11.8177, -32.1811, 0.12 ) }
    dend_20 { pt3dadd( 1.26898, -10.9432, -33.3044, 0.72 ) }
    dend_20 { pt3dadd( 1.37102, -10.3212, -34.0995, 0.72 ) }
    dend_20 { pt3dadd( 1.40844, -10.0107, -34.4853, 0.72 ) }
    dend_20 { pt3dadd( 1.51786, -8.96203, -35.7705, 0.72 ) }
    dend_20 { pt3dadd( 1.55284, -8.06121, -36.837, 0.12 ) }
    dend_20 { pt3dadd( 1.56171, -7.32863, -37.7396, 0.12 ) }
    dend_20 { pt3dadd( 1.55007, -6.94679, -38.1836, 0.12 ) }
    dend_20 { pt3dadd( 1.52909, -6.5283, -38.6295, 0.72 ) }
    dend_20 { pt3dadd( 1.44269, -5.53607, -39.6398, 0.84 ) }
    dend_20 { pt3dadd( 1.27282, -4.53873, -40.5631, 0.12 ) }
    dend_20 { pt3dadd( 1.20217, -4.17369, -40.9213, 0.12 ) }
    dend_20 { pt3dadd( 1.01672, -3.18929, -41.9391, 0.12 ) }
    dend_20 { pt3dadd( 0.85765, -2.46249, -42.6667, 0.12 ) }
    dend_20 { pt3dadd( 0.758172, -1.91875, -43.1972, 0.6 ) }
    dend_20 { pt3dadd( 0.662187, -1.4154, -43.6458, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_20 { pt3dadd( 0.485392, -0.398215, -44.5186, 0.12 ) }
    dend_20 { pt3dadd( 0.430434, -0.00626752, -44.8659, 0.12 ) }
    dend_20 { pt3dadd( 0.354787, 0.606169, -45.4145, 0.12 ) }
    dend_20 { pt3dadd( 0.13086, 2.34943, -46.9728, 0.12 ) }
    dend_20 { pt3dadd( 0.0751289, 2.86709, -47.4635, 0.12 ) }
    dend_20 { pt3dadd( 0.0483556, 3.16695, -47.7543, 0.48 ) }
    dend_20 { pt3dadd( -0.0673984, 4.2034, -48.7325, 0.36 ) }
    dend_20 { pt3dadd( -0.0919166, 4.44716, -49.0103, 0.36 ) }
    dend_20 { pt3dadd( -0.147598, 4.84893, -49.4924, 0.72 ) }
    dend_20 { pt3dadd( -0.420111, 6.18303, -51.0592, 0.12 ) }
    dend_20 { pt3dadd( -0.472044, 6.60817, -51.6138, 0.12 ) }
    dend_20 { pt3dadd( -0.480173, 6.95017, -52.0865, 0.6 ) }
    dend_20 { pt3dadd( -0.441584, 8.30248, -54.0304, 0.12 ) }
    dend_20 { pt3dadd( -0.404657, 9.19541, -55.3314, 0.12 ) }
    dend_20 { pt3dadd( -0.391747, 9.53159, -55.8151, 0.96 ) }
    dend_20 { pt3dadd( -0.379082, 10.8195, -57.5873, 0.96 ) }
    dend_20 { pt3dadd( -0.364312, 11.4295, -58.4647, 0.12 ) }
    dend_20 { pt3dadd( -0.358868, 11.6353, -58.748, 0.12 ) }
    dend_20 { pt3dadd( -0.362258, 12.0154, -59.2083, 0.12 ) }
    dend_20 { pt3dadd( -0.353505, 12.2705, -59.5435, 0.12 ) }
    dend_20 { pt3dadd( -0.356227, 13.1755, -60.5179, 0.12 ) }
    dend_20 { pt3dadd( -0.385631, 13.8806, -61.1435, 0.84 ) }
    dend_20 { pt3dadd( -0.397616, 14.415, -61.5652, 0.96 ) }
    dend_20 { pt3dadd( -0.398594, 14.6858, -61.7624, 0.96 ) }
    dend_20 { pt3dadd( -0.365215, 16.1022, -62.8112, 0.12 ) }
    dend_20 { pt3dadd( -0.353877, 17.4752, -63.7759, 0.12 ) }
    dend_20 { pt3dadd( -0.367391, 19.0658, -64.8203, 0.12 ) }
    dend_20 { pt3dadd( -0.375706, 20.2924, -65.5939, 0.12 ) }
    dend_20 { pt3dadd( -0.37864, 20.8424, -65.9219, 0.72 ) }
    dend_20 { pt3dadd( -0.403213, 22.4041, -66.7937, 0.12 ) }
    dend_20 { pt3dadd( -0.462255, 23.9225, -67.5597, 0.12 ) }
    dend_20 { pt3dadd( -0.474679, 24.1359, -67.6654, 0.48 ) }
    dend_20 { pt3dadd( -0.488617, 24.2904, -67.7318, 0.12 ) }
    dend_20 { pt3dadd( -0.633719, 25.4205, -68.2101, 0.12 ) }
    dend_20 { pt3dadd( -0.87192, 26.5927, -68.6398, 0.6 ) }
    dend_20 { pt3dadd( -0.977942, 26.9891, -68.77, 0.12 ) }
    dend_20 { pt3dadd( -1.31588, 28.1531, -69.1766, 0.12 ) }
    dend_20 { pt3dadd( -1.5178, 28.8483, -69.4139, 0.36 ) }
    dend_20 { pt3dadd( -1.60529, 29.15, -69.5138, 0.12 ) }
    dend_20 { pt3dadd( -2.14026, 31.1103, -70.0949, 0.12 ) }
    dend_20 { pt3dadd( -2.29683, 31.7326, -70.2479, 0.72 ) }
    dend_20 { pt3dadd( -2.47073, 32.5296, -70.4265, 0.48 ) }
    dend_20 { pt3dadd( -2.54259, 33.0605, -70.527, 0.12 ) }
    dend_20 { pt3dadd( -2.55218, 33.2192, -70.5621, 0.12 ) }
    dend_20 { pt3dadd( -2.55737, 34.9449, -70.98, 0.12 ) }
    dend_20 { pt3dadd( -2.53786, 35.3649, -71.0843, 0.24 ) }
    dend_20 { pt3dadd( -2.53104, 35.5985, -71.1401, 0.12 ) }
    dend_20 { pt3dadd( -2.50659, 37.2103, -71.5419, 0.12 ) }
    dend_20 { pt3dadd( -2.49596, 38.5392, -71.9404, 0.48 ) }
    dend_20 { pt3dadd( -2.49415, 38.8994, -72.0582, 0.12 ) }
    dend_20 { pt3dadd( -2.48, 40.5273, -72.6289, 0.12 ) }
    dend_20 { pt3dadd( -2.46564, 41.8077, -73.0765, 0.12 ) }
    dend_20 { pt3dadd( -2.4608, 42.4911, -73.3283, 0.6 ) }
    dend_20 { pt3dadd( -2.47369, 43.5134, -73.7082, 0.12 ) }
    dend_20 { pt3dadd( -2.50779, 44.691, -74.0984, 0.12 ) }
    dend_20 { pt3dadd( -2.51519, 45.0383, -74.2233, 0.48 ) }
    dend_20 { pt3dadd( -2.51818, 45.4357, -74.39, 0.48 ) }
    dend_20 { pt3dadd( -2.52011, 46.065, -74.6747, 0.12 ) }
    dend_20 { pt3dadd( -2.53778, 47.2426, -75.1714, 0.12 ) }
    dend_20 { pt3dadd( -2.55745, 47.8167, -75.3422, 0.48 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.2314, -48.9142, -5.46791, 0.72 ) }
    dend_16 { pt3dadd( -14.0947, -50.0088, -5.57488, 0.72 ) }
    dend_16 { pt3dadd( -14.4956, -50.55, -5.66291, 0.48 ) }
    dend_16 { pt3dadd( -15.0621, -51.38, -5.77588, 0.48 ) }
    dend_16 { pt3dadd( -15.7386, -52.448, -5.90552, 0.48 ) }
    dend_16 { pt3dadd( -16.0425, -52.9405, -5.95945, 0.6 ) }
    dend_16 { pt3dadd( -16.698, -54.0117, -6.06707, 0.84 ) }
    dend_16 { pt3dadd( -16.9375, -54.4202, -6.12038, 0.96 ) }
    dend_16 { pt3dadd( -17.4525, -55.2764, -6.21808, 0.48 ) }
    dend_16 { pt3dadd( -17.7665, -55.7795, -6.26603, 0.36 ) }
    dend_16 { pt3dadd( -18.3663, -56.683, -6.29756, 0.36 ) }
    dend_16 { pt3dadd( -18.8481, -57.3706, -6.28281, 0.72 ) }
    dend_16 { pt3dadd( -19.2537, -57.9204, -6.23794, 0.36 ) }
    dend_16 { pt3dadd( -19.604, -58.3802, -6.20611, 0.72 ) }
    dend_16 { pt3dadd( -20.0598, -58.9769, -6.17929, 1.08 ) }
    dend_16 { pt3dadd( -20.5326, -59.6347, -6.16171, 1.08 ) }
    dend_16 { pt3dadd( -20.8752, -60.1619, -6.15926, 0.72 ) }
    dend_16 { pt3dadd( -21.2054, -60.704, -6.17091, 0.72 ) }
    dend_16 { pt3dadd( -21.4705, -61.1491, -6.19245, 0.72 ) }
    dend_16 { pt3dadd( -21.8606, -61.7821, -6.24196, 0.72 ) }
    dend_16 { pt3dadd( -22.3825, -62.6103, -6.33163, 0.36 ) }
    dend_16 { pt3dadd( -22.7478, -63.1856, -6.4131, 0.36 ) }
    dend_16 { pt3dadd( -23.1417, -63.8218, -6.4956, 0.48 ) }
    dend_16 { pt3dadd( -23.5138, -64.4751, -6.56864, 0.48 ) }
    dend_16 { pt3dadd( -23.8052, -65.0673, -6.61913, 0.36 ) }
    dend_16 { pt3dadd( -24.0455, -65.6556, -6.67794, 0.48 ) }
    dend_16 { pt3dadd( -24.2268, -66.1883, -6.73248, 0.48 ) }
    dend_16 { pt3dadd( -24.5267, -67.2042, -6.85185, 0.48 ) }
    dend_16 { pt3dadd( -24.7601, -68.1162, -6.98482, 0.48 ) }
    dend_16 { pt3dadd( -24.9934, -69.1364, -7.15251, 0.48 ) }
    dend_16 { pt3dadd( -25.2099, -70.1428, -7.33071, 0.36 ) }
    dend_16 { pt3dadd( -25.3821, -70.9078, -7.47375, 0.6 ) }
    dend_16 { pt3dadd( -25.6178, -71.8105, -7.6464, 0.72 ) }
    dend_16 { pt3dadd( -25.8031, -72.4181, -7.77388, 0.36 ) }
    dend_16 { pt3dadd( -26.0007, -72.9698, -7.87543, 0.48 ) }
    dend_16 { pt3dadd( -26.2318, -73.5097, -7.94981, 0.48 ) }
    dend_16 { pt3dadd( -26.5084, -74.0689, -8.01745, 0.36 ) }
    dend_16 { pt3dadd( -26.915, -74.7984, -8.17546, 0.36 ) }
    dend_16 { pt3dadd( -27.3307, -75.4578, -8.39381, 0.48 ) }
    dend_16 { pt3dadd( -27.7154, -75.9977, -8.6125, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_16 { pt3dadd( -28.3574, -76.8652, -9.04432, 0.96 ) }
    dend_16 { pt3dadd( -29.0501, -77.7917, -9.57233, 0.96 ) }
    dend_16 { pt3dadd( -29.7705, -78.8157, -10.1908, 0.48 ) }
    dend_16 { pt3dadd( -30.2576, -79.5968, -10.6633, 0.48 ) }
    dend_16 { pt3dadd( -30.6203, -80.2318, -11.0351, 0.6 ) }
    dend_16 { pt3dadd( -31.0901, -81.1215, -11.5369, 0.84 ) }
    dend_16 { pt3dadd( -31.3721, -81.6877, -11.8105, 0.6 ) }
    dend_16 { pt3dadd( -31.7227, -82.387, -12.0766, 0.72 ) }
    dend_16 { pt3dadd( -32.1999, -83.3078, -12.3436, 0.36 ) }
    dend_16 { pt3dadd( -32.5066, -83.8808, -12.4925, 0.36 ) }
    dend_16 { pt3dadd( -32.8584, -84.5297, -12.6502, 0.48 ) }
    dend_16 { pt3dadd( -33.3244, -85.3872, -12.8369, 0.48 ) }
    dend_16 { pt3dadd( -33.7402, -86.1854, -13.0162, 0.48 ) }
    dend_16 { pt3dadd( -34.04, -86.7846, -13.1553, 0.6 ) }
    dend_16 { pt3dadd( -34.3148, -87.3604, -13.2881, 0.84 ) }
    dend_16 { pt3dadd( -34.6725, -88.2038, -13.4812, 0.84 ) }
    dend_16 { pt3dadd( -35.0698, -89.1956, -13.7011, 0.84 ) }
    dend_16 { pt3dadd( -35.361, -89.9268, -13.8524, 0.48 ) }
    dend_16 { pt3dadd( -35.6483, -90.5967, -13.9747, 0.48 ) }
    dend_16 { pt3dadd( -35.9731, -91.2667, -14.1079, 0.6 ) }
    dend_16 { pt3dadd( -36.2301, -91.7253, -14.2132, 0.6 ) }
    dend_16 { pt3dadd( -36.6287, -92.3503, -14.3822, 0.36 ) }
    dend_16 { pt3dadd( -36.9488, -92.822, -14.5211, 0.36 ) }
    dend_16 { pt3dadd( -37.2037, -93.2259, -14.6381, 0.36 ) }
    dend_16 { pt3dadd( -37.4638, -93.6879, -14.7614, 0.6 ) }
    dend_16 { pt3dadd( -37.7206, -94.2118, -14.8843, 0.84 ) }
    dend_16 { pt3dadd( -37.9763, -94.774, -14.9951, 0.84 ) }
    dend_16 { pt3dadd( -38.3872, -95.7556, -15.1828, 0.36 ) }
    dend_16 { pt3dadd( -38.7632, -96.6317, -15.3407, 0.36 ) }
    dend_16 { pt3dadd( -39.0199, -97.1995, -15.4442, 0.36 ) }
    dend_16 { pt3dadd( -39.1891, -97.5267, -15.5051, 0.72 ) }
    dend_16 { pt3dadd( -39.5445, -98.0946, -15.651, 0.96 ) }
    dend_16 { pt3dadd( -40.121, -98.8738, -15.9294, 0.36 ) }
    dend_16 { pt3dadd( -40.4776, -99.2938, -16.1203, 0.36 ) }
    dend_16 { pt3dadd( -40.7437, -99.6028, -16.2746, 0.72 ) }
    dend_16 { pt3dadd( -41.1048, -100.064, -16.5, 0.72 ) }
    dend_16 { pt3dadd( -41.6756, -100.863, -16.8705, 0.36 ) }
    dend_16 { pt3dadd( -41.8149, -101.067, -16.9579, 0.36 ) }
    dend_16 { pt3dadd( -42.1925, -101.615, -17.1822, 0.48 ) }
    dend_16 { pt3dadd( -42.7438, -102.443, -17.5321, 0.48 ) }
    dend_16 { pt3dadd( -43.1643, -103.125, -17.8022, 0.48 ) }
    dend_16 { pt3dadd( -43.4219, -103.592, -17.9992, 0.48 ) }
    dend_16 { pt3dadd( -43.6825, -104.114, -18.2575, 0.48 ) }
    dend_16 { pt3dadd( -43.9241, -104.579, -18.5394, 0.36 ) }
    dend_16 { pt3dadd( -44.1511, -104.962, -18.8222, 0.6 ) }
    dend_16 { pt3dadd( -44.4653, -105.434, -19.2333, 0.72 ) }
    dend_16 { pt3dadd( -44.83, -105.947, -19.6884, 0.72 ) }
    dend_16 { pt3dadd( -45.1906, -106.469, -20.132, 0.48 ) }
    dend_16 { pt3dadd( -45.3468, -106.695, -20.3123, 0.36 ) }
    dend_16 { pt3dadd( -45.5693, -107.051, -20.619, 0.36 ) }
    dend_16 { pt3dadd( -45.7469, -107.313, -20.9016, 0.6 ) }
    dend_16 { pt3dadd( -46.038, -107.683, -21.3739, 0.6 ) }
    dend_16 { pt3dadd( -46.377, -108.082, -21.9106, 0.6 ) }
    dend_16 { pt3dadd( -46.5614, -108.292, -22.2168, 0.6 ) }
    dend_16 { pt3dadd( -47.3723, -109.277, -23.6862, 0.72 ) }
    dend_16 { pt3dadd( -47.7476, -109.8, -24.4448, 0.48 ) }
    dend_16 { pt3dadd( -47.9277, -110.091, -24.8309, 0.48 ) }
    dend_16 { pt3dadd( -48.0365, -110.286, -25.069, 0.48 ) }
    dend_16 { pt3dadd( -48.2133, -110.558, -25.3741, 0.72 ) }
    dend_16 { pt3dadd( -48.4388, -110.82, -25.687, 0.84 ) }
    dend_16 { pt3dadd( -48.7773, -111.157, -26.1063, 0.84 ) }
    dend_16 { pt3dadd( -49.1546, -111.585, -26.6646, 0.48 ) }
    dend_16 { pt3dadd( -49.3309, -111.792, -26.9769, 0.48 ) }
    dend_16 { pt3dadd( -49.7442, -112.282, -27.7208, 0.72 ) }
    dend_16 { pt3dadd( -50.3354, -113.003, -28.7971, 0.72 ) }
    dend_16 { pt3dadd( -50.8359, -113.704, -29.7392, 0.36 ) }
    dend_16 { pt3dadd( -50.957, -113.903, -29.9867, 0.36 ) }
    dend_16 { pt3dadd( -51.182, -114.337, -30.5052, 0.36 ) }
    dend_16 { pt3dadd( -51.4609, -114.952, -31.2822, 0.6 ) }
    dend_16 { pt3dadd( -51.5466, -115.188, -31.5903, 0.84 ) }
    dend_16 { pt3dadd( -51.7961, -115.929, -32.5593, 0.36 ) }
    dend_16 { pt3dadd( -51.944, -116.409, -33.2193, 0.48 ) }
    dend_16 { pt3dadd( -52.085, -116.932, -34.093, 0.96 ) }
    dend_16 { pt3dadd( -52.2435, -117.578, -35.3963, 0.96 ) }
    dend_16 { pt3dadd( -52.4155, -118.111, -36.7355, 0.48 ) }
    dend_16 { pt3dadd( -52.4472, -118.18, -36.9787, 0.48 ) }
    dend_16 { pt3dadd( -52.5266, -118.336, -37.6856, 0.72 ) }
    dend_16 { pt3dadd( -52.6744, -118.745, -39.446, 0.36 ) }
    dend_16 { pt3dadd( -52.697, -118.887, -40.0083, 0.6 ) }
    dend_16 { pt3dadd( -52.7163, -119.106, -40.7829, 0.72 ) }
    dend_16 { pt3dadd( -52.8445, -120.153, -44.2942, 0.48 ) }
    dend_16 { pt3dadd( -52.8713, -120.304, -44.7528, 0.36 ) }
    dend_16 { pt3dadd( -52.9264, -120.558, -45.4298, 0.36 ) }
    dend_16 { pt3dadd( -52.948, -120.773, -45.8497, 0.36 ) }
    dend_16 { pt3dadd( -52.9658, -120.972, -46.2118, 0.36 ) }
    dend_16 { pt3dadd( -52.9766, -121.207, -46.638, 0.48 ) }
    dend_16 { pt3dadd( -53.0368, -121.445, -47.0431, 0.48 ) }
    dend_16 { pt3dadd( -53.0549, -121.779, -47.8716, 0.36 ) }
    dend_16 { pt3dadd( -53.0378, -121.898, -48.192, 0.36 ) }
    dend_16 { pt3dadd( -52.8822, -122.31, -49.2369, 0.36 ) }
    dend_16 { pt3dadd( -52.605, -122.778, -50.4226, 0.48 ) }
    dend_16 { pt3dadd( -52.4904, -122.949, -50.8457, 0.6 ) }
    dend_16 { pt3dadd( -51.9985, -123.647, -52.4271, 0.36 ) }
    dend_16 { pt3dadd( -51.8311, -123.886, -52.9102, 0.36 ) }
    dend_16 { pt3dadd( -51.6372, -124.189, -53.4529, 0.48 ) }
    dend_16 { pt3dadd( -51.4221, -124.726, -54.2476, 0.12 ) }
    dend_16 { pt3dadd( -51.3879, -125.069, -54.7236, 0.12 ) }
    dend_16 { pt3dadd( -51.3964, -125.205, -54.9094, 0.12 ) }
    dend_16 { pt3dadd( -51.4138, -125.276, -54.9992, 0.6 ) }
    dend_16 { pt3dadd( -51.5171, -125.546, -55.365, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_16 { pt3dadd( -51.9278, -126.426, -56.492, 0.6 ) }
    dend_16 { pt3dadd( -52.2392, -127.124, -57.2342, 0.6 ) }
    dend_16 { pt3dadd( -52.3111, -127.274, -57.4207, 0.12 ) }
    dend_16 { pt3dadd( -52.5073, -127.583, -57.865, 0.12 ) }
    dend_16 { pt3dadd( -52.6171, -127.721, -58.1006, 0.24 ) }
    dend_16 { pt3dadd( -52.8695, -127.983, -58.588, 0.24 ) }
    dend_16 { pt3dadd( -53.0944, -128.178, -58.9547, 0.24 ) }
    dend_16 { pt3dadd( -54.1149, -128.905, -60.3697, 0.48 ) }
    dend_16 { pt3dadd( -54.4877, -129.159, -60.8679, 0.48 ) }
    dend_16 { pt3dadd( -54.9493, -129.492, -61.5109, 0.48 ) }
    dend_16 { pt3dadd( -55.1827, -129.679, -61.8644, 0.36 ) }
    dend_16 { pt3dadd( -55.3454, -129.827, -62.1515, 0.12 ) }
    dend_16 { pt3dadd( -55.8553, -130.269, -62.9398, 0.12 ) }
    dend_16 { pt3dadd( -56.1256, -130.514, -63.2217, 0.48 ) }
    dend_16 { pt3dadd( -56.4839, -130.893, -63.7153, 0.6 ) }
    dend_16 { pt3dadd( -56.8746, -131.369, -64.3876, 0.6 ) }
    dend_16 { pt3dadd( -57.2032, -131.878, -65.1942, 0.12 ) }
    dend_16 { pt3dadd( -57.49, -132.581, -66.3583, 0.12 ) }
    dend_16 { pt3dadd( -57.7202, -133.499, -67.9656, 0.12 ) }
    dend_16 { pt3dadd( -58.0536, -134.814, -70.4011, 0.12 ) }
    dend_16 { pt3dadd( -58.0852, -134.935, -70.6152, 0.12 ) }
    dend_16 { pt3dadd( -58.1237, -135.104, -70.8904, 0.12 ) }
    dend_16 { pt3dadd( -58.199, -135.428, -71.3828, 0.72 ) }
    dend_16 { pt3dadd( -58.2203, -135.632, -71.6621, 0.84 ) }
    dend_16 { pt3dadd( -58.2477, -135.76, -71.8516, 0.84 ) }
    dend_16 { pt3dadd( -58.3607, -135.968, -72.0873, 0.48 ) }
    dend_16 { pt3dadd( -58.6841, -136.527, -72.7488, 0.12 ) }
    dend_16 { pt3dadd( -58.8765, -136.888, -73.1584, 0.12 ) }
    dend_16 { pt3dadd( -59.1225, -137.526, -73.9374, 0.36 ) }
    dend_16 { pt3dadd( -59.2629, -138.124, -74.6644, 0.12 ) }
    dend_16 { pt3dadd( -59.3171, -138.405, -75.0418, 0.12 ) }
    dend_16 { pt3dadd( -59.3492, -138.613, -75.3394, 0.48 ) }
    dend_16 { pt3dadd( -59.3946, -138.905, -75.7614, 0.6 ) }
    dend_16 { pt3dadd( -59.5784, -139.702, -76.9617, 0.12 ) }
    dend_16 { pt3dadd( -59.6717, -139.933, -77.3586, 0.12 ) }
    dend_16 { pt3dadd( -59.8183, -140.325, -77.9817, 0.12 ) }
    dend_16 { pt3dadd( -59.8819, -140.442, -78.1691, 0.12 ) }
    dend_16 { pt3dadd( -60.0301, -140.648, -78.4961, 0.48 ) }
    dend_16 { pt3dadd( -60.2333, -140.908, -78.8562, 0.84 ) }
    dend_16 { pt3dadd( -61.1351, -142.129, -80.2583, 0.36 ) }
    dend_16 { pt3dadd( -61.3276, -142.423, -80.5595, 0.36 ) }
    dend_16 { pt3dadd( -61.7425, -143.161, -81.2162, 0.36 ) }
    dend_16 { pt3dadd( -62.1369, -143.814, -81.7399, 0.6 ) }
    dend_16 { pt3dadd( -62.4565, -144.32, -82.1239, 0.6 ) }
    dend_16 { pt3dadd( -62.8967, -144.982, -82.5706, 0.6 ) }
    dend_16 { pt3dadd( -63.2124, -145.425, -82.813, 0.6 ) }
    dend_16 { pt3dadd( -63.5711, -145.925, -83.0928, 0.12 ) }
    dend_16 { pt3dadd( -64.3939, -147.093, -83.7266, 0.12 ) }
    dend_16 { pt3dadd( -64.8081, -147.619, -83.9987, 0.6 ) }
    dend_16 { pt3dadd( -65.1207, -147.98, -84.1857, 0.6 ) }
    dend_16 { pt3dadd( -65.2891, -148.165, -84.2716, 0.6 ) }
    dend_16 { pt3dadd( -65.6395, -148.548, -84.4426, 0.12 ) }
    dend_16 { pt3dadd( -65.9024, -148.848, -84.5749, 0.12 ) }
    dend_16 { pt3dadd( -66.0068, -148.963, -84.629, 0.12 ) }
    dend_16 { pt3dadd( -66.1931, -149.113, -84.702, 0.12 ) }
    dend_16 { pt3dadd( -66.5604, -149.354, -84.8825, 0.12 ) }
    dend_16 { pt3dadd( -66.8868, -149.541, -85.0553, 0.12 ) }
    dend_16 { pt3dadd( -67.4198, -149.781, -85.3288, 0.6 ) }
    dend_16 { pt3dadd( -68.0499, -150.027, -85.7692, 0.6 ) }
    dend_16 { pt3dadd( -68.4724, -150.191, -86.1151, 0.6 ) }
    dend_16 { pt3dadd( -69.2391, -150.521, -86.8177, 0.12 ) }
    dend_16 { pt3dadd( -69.4144, -150.604, -86.9841, 0.12 ) }
    dend_16 { pt3dadd( -69.9644, -150.899, -87.4983, 0.48 ) }
    dend_16 { pt3dadd( -71.0342, -151.549, -88.4377, 0.12 ) }
    dend_16 { pt3dadd( -71.3338, -151.765, -88.7108, 0.12 ) }
    dend_16 { pt3dadd( -71.6963, -152.071, -89.021, 0.12 ) }
    dend_16 { pt3dadd( -72.2264, -152.596, -89.4885, 0.12 ) }
    dend_16 { pt3dadd( -72.5815, -153.008, -89.8138, 0.6 ) }
    dend_16 { pt3dadd( -72.7679, -153.277, -89.9834, 0.6 ) }
    dend_16 { pt3dadd( -73.1352, -153.908, -90.4147, 0.24 ) }
    dend_16 { pt3dadd( -73.3524, -154.329, -90.7722, 0.24 ) }
    dend_16 { pt3dadd( -73.7451, -155.14, -91.5599, 0.24 ) }
    dend_16 { pt3dadd( -73.8635, -155.418, -91.8417, 0.48 ) }
    dend_16 { pt3dadd( -74.0359, -155.869, -92.3417, 0.48 ) }
    dend_16 { pt3dadd( -74.4688, -157.162, -93.86, 0.36 ) }
    dend_16 { pt3dadd( -74.5338, -157.385, -94.1416, 0.36 ) }
    dend_16 { pt3dadd( -74.6552, -157.731, -94.6019, 0.36 ) }
    dend_16 { pt3dadd( -74.7652, -158.03, -94.9746, 0.36 ) }
    dend_16 { pt3dadd( -75.0133, -158.75, -95.8467, 0.48 ) }
    dend_16 { pt3dadd( -75.1626, -159.187, -96.3732, 0.48 ) }
    dend_16 { pt3dadd( -75.3066, -159.697, -96.8616, 0.12 ) }
    dend_16 { pt3dadd( -75.4194, -160.331, -97.4699, 0.12 ) }
    dend_16 { pt3dadd( -75.4508, -160.778, -97.8946, 0.12 ) }
    dend_16 { pt3dadd( -75.4573, -160.953, -98.0537, 0.12 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -13.2314, -48.9142, -5.46791, 0.48 ) }
    dend_15 { pt3dadd( -13.1703, -49.8485, -5.24221, 0.48 ) }
    dend_15 { pt3dadd( -13.1213, -50.5992, -5.06861, 0.6 ) }
    dend_15 { pt3dadd( -13.0248, -51.6318, -4.85241, 0.6 ) }
    dend_15 { pt3dadd( -12.9375, -52.3842, -4.7082, 0.6 ) }
    dend_15 { pt3dadd( -12.8604, -52.9927, -4.60173, 0.36 ) }
    dend_15 { pt3dadd( -12.7925, -53.4171, -4.50427, 0.36 ) }
    dend_15 { pt3dadd( -12.7496, -53.6388, -4.43118, 0.36 ) }
    dend_15 { pt3dadd( -12.6056, -54.1407, -4.2644, 0.6 ) }
    dend_15 { pt3dadd( -12.5263, -54.3635, -4.20088, 0.72 ) }
    dend_15 { pt3dadd( -12.4003, -54.6453, -4.09233, 0.72 ) }
    dend_15 { pt3dadd( -11.9297, -55.5674, -3.66485, 0.72 ) }
    dend_15 { pt3dadd( -11.7604, -55.8832, -3.50755, 0.72 ) }
    dend_15 { pt3dadd( -11.4796, -56.3853, -3.23478, 0.24 ) }
    dend_15 { pt3dadd( -11.1814, -56.904, -2.94675, 0.24 ) }
    dend_15 { pt3dadd( -10.7998, -57.534, -2.62131, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_15 { pt3dadd( -10.4974, -58.0077, -2.38754, 0.6 ) }
    dend_15 { pt3dadd( -10.1712, -58.5041, -2.17212, 0.6 ) }
    dend_15 { pt3dadd( -9.5946, -59.3543, -1.77737, 0.36 ) }
    dend_15 { pt3dadd( -9.38792, -59.6551, -1.63921, 0.36 ) }
    dend_15 { pt3dadd( -8.98678, -60.252, -1.37595, 0.36 ) }
    dend_15 { pt3dadd( -8.74622, -60.6377, -1.20947, 0.6 ) }
    dend_15 { pt3dadd( -8.53004, -61.009, -1.04374, 0.6 ) }
    dend_15 { pt3dadd( -8.18029, -61.6866, -0.732115, 0.36 ) }
    dend_15 { pt3dadd( -7.95575, -62.1679, -0.505404, 0.36 ) }
    dend_15 { pt3dadd( -7.73326, -62.6559, -0.273538, 0.36 ) }
    dend_15 { pt3dadd( -7.43178, -63.3047, 0.0855401, 0.48 ) }
    dend_15 { pt3dadd( -7.25805, -63.6585, 0.296496, 0.48 ) }
    dend_15 { pt3dadd( -7.08652, -63.9936, 0.510599, 0.48 ) }
    dend_15 { pt3dadd( -6.77421, -64.5599, 0.874662, 0.48 ) }
    dend_15 { pt3dadd( -6.40781, -65.1908, 1.29892, 0.48 ) }
    dend_15 { pt3dadd( -5.85992, -66.1353, 1.88992, 0.48 ) }
    dend_15 { pt3dadd( -5.64699, -66.5269, 2.10935, 0.36 ) }
    dend_15 { pt3dadd( -5.55599, -66.7007, 2.20204, 0.36 ) }
    dend_15 { pt3dadd( -5.39661, -67.0289, 2.34627, 0.48 ) }
    dend_15 { pt3dadd( -5.18259, -67.5485, 2.53182, 0.36 ) }
    dend_15 { pt3dadd( -4.96416, -68.1499, 2.71635, 0.36 ) }
    dend_15 { pt3dadd( -4.79143, -68.6593, 2.83345, 0.48 ) }
    dend_15 { pt3dadd( -4.52805, -69.3936, 3.0108, 0.36 ) }
    dend_15 { pt3dadd( -4.17884, -70.2735, 3.22788, 0.36 ) }
    dend_15 { pt3dadd( -3.85432, -71.029, 3.41936, 0.36 ) }
    dend_15 { pt3dadd( -3.50974, -71.7612, 3.60304, 0.36 ) }
    dend_15 { pt3dadd( -3.25011, -72.2681, 3.74664, 0.36 ) }
    dend_15 { pt3dadd( -2.8209, -73.0523, 3.97506, 0.36 ) }
    dend_15 { pt3dadd( -2.46475, -73.712, 4.15407, 0.48 ) }
    dend_15 { pt3dadd( -2.15738, -74.2965, 4.30654, 0.84 ) }
    dend_15 { pt3dadd( -1.7942, -75.004, 4.46109, 0.48 ) }
    dend_15 { pt3dadd( -1.53963, -75.5256, 4.59924, 0.24 ) }
    dend_15 { pt3dadd( -1.26467, -76.1417, 4.78389, 0.24 ) }
    dend_15 { pt3dadd( -0.949921, -76.9135, 5.0181, 0.24 ) }
    dend_15 { pt3dadd( -0.674963, -77.618, 5.23929, 0.24 ) }
    dend_15 { pt3dadd( -0.450176, -78.1769, 5.446, 0.24 ) }
    dend_15 { pt3dadd( -0.0309792, -79.2061, 5.85533, 0.72 ) }
    dend_15 { pt3dadd( 0.0908229, -79.4977, 5.97082, 0.72 ) }
    dend_15 { pt3dadd( 0.377899, -80.1685, 6.22176, 0.36 ) }
    dend_15 { pt3dadd( 0.627341, -80.7254, 6.40345, 0.36 ) }
    dend_15 { pt3dadd( 1.11785, -81.8668, 6.6805, 0.24 ) }
    dend_15 { pt3dadd( 1.3998, -82.5967, 6.78879, 0.24 ) }
    dend_15 { pt3dadd( 1.5978, -83.1528, 6.82984, 0.24 ) }
    dend_15 { pt3dadd( 1.82419, -83.8574, 6.87803, 0.24 ) }
    dend_15 { pt3dadd( 1.96997, -84.3898, 6.90562, 0.36 ) }
    dend_15 { pt3dadd( 2.10026, -84.9368, 6.9155, 0.36 ) }
    dend_15 { pt3dadd( 2.20871, -85.4796, 6.89663, 0.48 ) }
    dend_15 { pt3dadd( 2.33458, -86.1891, 6.8978, 0.48 ) }
    dend_15 { pt3dadd( 2.40405, -86.63, 6.91269, 0.48 ) }
    dend_15 { pt3dadd( 2.46776, -87.0801, 6.94139, 0.6 ) }
    dend_15 { pt3dadd( 2.52588, -87.518, 6.95966, 0.72 ) }
    dend_15 { pt3dadd( 2.59606, -88.0568, 6.96642, 0.72 ) }
    dend_15 { pt3dadd( 2.69851, -88.8316, 6.95421, 0.24 ) }
    dend_15 { pt3dadd( 2.79181, -89.4882, 6.94727, 0.24 ) }
    dend_15 { pt3dadd( 2.86661, -89.9236, 6.95274, 0.48 ) }
    dend_15 { pt3dadd( 2.98189, -90.5014, 6.96952, 0.6 ) }
    dend_15 { pt3dadd( 3.15781, -91.275, 7.00539, 0.36 ) }
    dend_15 { pt3dadd( 3.38807, -92.1548, 7.05855, 0.36 ) }
    dend_15 { pt3dadd( 3.62373, -92.9855, 7.09408, 0.36 ) }
    dend_15 { pt3dadd( 3.80221, -93.6023, 7.10635, 0.36 ) }
    dend_15 { pt3dadd( 3.9004, -93.9273, 7.10466, 0.24 ) }
    dend_15 { pt3dadd( 3.91945, -93.9886, 7.10575, 0.48 ) }
    dend_15 { pt3dadd( 4.13934, -94.6932, 7.12512, 0.6 ) }
    dend_15 { pt3dadd( 4.33411, -95.2887, 7.13664, 0.36 ) }
    dend_15 { pt3dadd( 4.49888, -95.8041, 7.13782, 0.36 ) }
    dend_15 { pt3dadd( 4.57212, -96.0389, 7.14495, 0.48 ) }
    dend_15 { pt3dadd( 4.81057, -96.8205, 7.17549, 0.48 ) }
    dend_15 { pt3dadd( 4.93991, -97.2403, 7.20371, 0.36 ) }
    dend_15 { pt3dadd( 5.17175, -97.9878, 7.27314, 0.36 ) }
    dend_15 { pt3dadd( 5.40301, -98.7412, 7.35355, 0.36 ) }
    dend_15 { pt3dadd( 5.60672, -99.4027, 7.42435, 0.36 ) }
    dend_15 { pt3dadd( 5.86091, -100.261, 7.50361, 0.36 ) }
    dend_15 { pt3dadd( 6.11157, -101.117, 7.55743, 0.36 ) }
    dend_15 { pt3dadd( 6.20913, -101.45, 7.58147, 0.48 ) }
    dend_15 { pt3dadd( 6.32886, -101.872, 7.61749, 0.48 ) }
    dend_15 { pt3dadd( 6.48989, -102.392, 7.67786, 0.48 ) }
    dend_15 { pt3dadd( 6.70881, -103.046, 7.76202, 0.48 ) }
    dend_15 { pt3dadd( 6.94394, -103.689, 7.84152, 0.48 ) }
    dend_15 { pt3dadd( 7.22283, -104.434, 7.91388, 0.6 ) }
    dend_15 { pt3dadd( 7.31282, -104.665, 7.93174, 0.6 ) }
    dend_15 { pt3dadd( 7.59754, -105.375, 7.97046, 0.36 ) }
    dend_15 { pt3dadd( 7.95729, -106.231, 7.99416, 0.36 ) }
    dend_15 { pt3dadd( 8.21347, -106.818, 8.00632, 0.36 ) }
    dend_15 { pt3dadd( 8.58885, -107.63, 8.01212, 0.36 ) }
    dend_15 { pt3dadd( 8.96877, -108.418, 8.00082, 0.36 ) }
    dend_15 { pt3dadd( 9.22186, -108.95, 7.97872, 0.36 ) }
    dend_15 { pt3dadd( 9.427, -109.393, 7.93185, 0.36 ) }
    dend_15 { pt3dadd( 9.56287, -109.679, 7.89225, 0.48 ) }
    dend_15 { pt3dadd( 9.7981, -110.175, 7.81115, 0.48 ) }
    dend_15 { pt3dadd( 10.0976, -110.826, 7.69275, 0.48 ) }
    dend_15 { pt3dadd( 10.4078, -111.547, 7.55458, 0.48 ) }
    dend_15 { pt3dadd( 10.738, -112.364, 7.39609, 0.48 ) }
    dend_15 { pt3dadd( 10.8715, -112.73, 7.326, 0.48 ) }
    dend_15 { pt3dadd( 11.1066, -113.408, 7.20034, 0.48 ) }
    dend_15 { pt3dadd( 11.2736, -113.924, 7.10928, 0.48 ) }
    dend_15 { pt3dadd( 11.35, -114.154, 7.06782, 0.6 ) }
    dend_15 { pt3dadd( 11.4327, -114.382, 7.02905, 0.72 ) }
    dend_15 { pt3dadd( 11.6177, -114.9, 6.958, 0.48 ) }
    dend_15 { pt3dadd( 11.817, -115.451, 6.87707, 0.48 ) }
    dend_15 { pt3dadd( 11.9051, -115.678, 6.84215, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_15 { pt3dadd( 12.1741, -116.296, 6.74715, 0.36 ) }
    dend_15 { pt3dadd( 12.4042, -116.787, 6.67178, 0.36 ) }
    dend_15 { pt3dadd( 12.6042, -117.177, 6.61114, 0.36 ) }
    dend_15 { pt3dadd( 12.9089, -117.729, 6.52805, 0.36 ) }
    dend_15 { pt3dadd( 13.1776, -118.193, 6.47693, 0.48 ) }
    dend_15 { pt3dadd( 13.5232, -118.799, 6.43169, 0.6 ) }
    dend_15 { pt3dadd( 14.0978, -119.829, 6.38725, 0.48 ) }
    dend_15 { pt3dadd( 14.4711, -120.508, 6.36618, 0.36 ) }
    dend_15 { pt3dadd( 14.9638, -121.404, 6.33137, 0.36 ) }
    dend_15 { pt3dadd( 15.283, -122.019, 6.30388, 0.6 ) }
    dend_15 { pt3dadd( 15.6166, -122.706, 6.25278, 0.6 ) }
    dend_15 { pt3dadd( 15.944, -123.42, 6.18241, 0.6 ) }
    dend_15 { pt3dadd( 16.258, -124.138, 6.08009, 0.6 ) }
    dend_15 { pt3dadd( 16.7211, -125.233, 5.88083, 0.48 ) }
    dend_15 { pt3dadd( 17.2406, -126.522, 5.60456, 0.48 ) }
    dend_15 { pt3dadd( 17.5206, -127.231, 5.43493, 0.48 ) }
    dend_15 { pt3dadd( 17.9255, -128.249, 5.1658, 0.48 ) }
    dend_15 { pt3dadd( 18.2162, -128.985, 4.95839, 0.24 ) }
    dend_15 { pt3dadd( 18.4651, -129.642, 4.76901, 0.24 ) }
    dend_15 { pt3dadd( 18.8662, -130.744, 4.44522, 0.24 ) }
    dend_15 { pt3dadd( 19.0699, -131.326, 4.27689, 0.24 ) }
    dend_15 { pt3dadd( 19.29, -131.987, 4.11064, 0.6 ) }
    dend_15 { pt3dadd( 19.3779, -132.273, 4.05274, 0.84 ) }
    dend_15 { pt3dadd( 19.5053, -132.705, 3.9931, 0.84 ) }
    dend_15 { pt3dadd( 19.6807, -133.324, 3.9289, 0.48 ) }
    dend_15 { pt3dadd( 19.9433, -134.294, 3.86717, 0.36 ) }
    dend_15 { pt3dadd( 20.1087, -134.962, 3.85255, 0.36 ) }
    dend_15 { pt3dadd( 20.2896, -135.709, 3.87161, 0.36 ) }
    dend_15 { pt3dadd( 20.4373, -136.274, 3.89227, 0.36 ) }
    dend_15 { pt3dadd( 20.6008, -136.813, 3.91615, 0.36 ) }
    dend_15 { pt3dadd( 20.7359, -137.221, 3.93745, 0.48 ) }
    dend_15 { pt3dadd( 20.965, -137.878, 3.95678, 0.48 ) }
    dend_15 { pt3dadd( 21.1021, -138.271, 3.95671, 0.36 ) }
    dend_15 { pt3dadd( 21.3624, -138.996, 3.9305, 0.36 ) }
    dend_15 { pt3dadd( 21.6172, -139.651, 3.90317, 0.36 ) }
    dend_15 { pt3dadd( 21.8325, -140.145, 3.87652, 0.36 ) }
    dend_15 { pt3dadd( 22.2818, -141.036, 3.81511, 0.36 ) }
    dend_15 { pt3dadd( 22.5492, -141.521, 3.76173, 0.36 ) }
    dend_15 { pt3dadd( 22.9395, -142.188, 3.66475, 0.36 ) }
    dend_15 { pt3dadd( 23.3061, -142.773, 3.56436, 0.48 ) }
    dend_15 { pt3dadd( 23.6962, -143.342, 3.45237, 0.48 ) }
    dend_15 { pt3dadd( 24.3782, -144.243, 3.25612, 0.48 ) }
    dend_15 { pt3dadd( 24.725, -144.656, 3.17889, 0.12 ) }
    dend_15 { pt3dadd( 25.073, -145.056, 3.12194, 0.12 ) }
    dend_15 { pt3dadd( 25.3683, -145.406, 3.09075, 0.24 ) }
    dend_15 { pt3dadd( 25.6119, -145.712, 3.08141, 0.24 ) }
    dend_15 { pt3dadd( 26.104, -146.315, 3.09621, 0.12 ) }
    dend_15 { pt3dadd( 26.664, -146.957, 3.1422, 0.36 ) }
    dend_15 { pt3dadd( 27.0293, -147.349, 3.20233, 0.6 ) }
    dend_15 { pt3dadd( 27.3276, -147.662, 3.25682, 0.36 ) }
    dend_15 { pt3dadd( 27.6411, -147.993, 3.29923, 0.36 ) }
    dend_15 { pt3dadd( 28.3618, -148.773, 3.35657, 0.36 ) }
    dend_15 { pt3dadd( 28.6589, -149.105, 3.35982, 0.36 ) }
    dend_15 { pt3dadd( 29.1366, -149.73, 3.31544, 0.24 ) }
    dend_15 { pt3dadd( 29.3812, -150.111, 3.28786, 0.24 ) }
    dend_15 { pt3dadd( 29.6865, -150.72, 3.22822, 0.36 ) }
    dend_15 { pt3dadd( 29.793, -151.017, 3.17721, 0.36 ) }
    dend_15 { pt3dadd( 29.8699, -151.337, 3.10217, 0.36 ) }
    dend_15 { pt3dadd( 30.054, -152.166, 2.87052, 0.36 ) }
    dend_15 { pt3dadd( 30.1804, -152.698, 2.74272, 0.48 ) }
    dend_15 { pt3dadd( 30.3146, -153.186, 2.67904, 0.48 ) }
    dend_15 { pt3dadd( 30.4998, -153.753, 2.65808, 0.12 ) }
    dend_15 { pt3dadd( 30.786, -154.583, 2.65851, 0.12 ) }
    dend_15 { pt3dadd( 30.9207, -154.956, 2.67069, 0.48 ) }
    dend_15 { pt3dadd( 31.3336, -155.939, 2.7446, 0.12 ) }
    dend_15 { pt3dadd( 31.6786, -156.652, 2.82547, 0.12 ) }
    dend_15 { pt3dadd( 31.8641, -156.995, 2.87722, 0.6 ) }
    dend_15 { pt3dadd( 32.1835, -157.549, 2.9662, 0.12 ) }
    dend_15 { pt3dadd( 32.3916, -157.882, 2.97519, 0.12 ) }
    dend_15 { pt3dadd( 32.7196, -158.391, 2.91169, 0.12 ) }
    dend_15 { pt3dadd( 32.9581, -158.759, 2.78362, 0.12 ) }
    dend_15 { pt3dadd( 33.0807, -158.961, 2.72471, 0.72 ) }
    dend_15 { pt3dadd( 33.3305, -159.436, 2.62231, 0.72 ) }
    dend_15 { pt3dadd( 33.7327, -160.282, 2.50044, 0.48 ) }
    dend_15 { pt3dadd( 33.8482, -160.588, 2.46164, 0.48 ) }
    dend_15 { pt3dadd( 34.0701, -161.318, 2.38388, 0.12 ) }
    dend_15 { pt3dadd( 34.4948, -162.923, 2.24873, 0.12 ) }
    dend_15 { pt3dadd( 34.5798, -163.26, 2.22852, 0.12 ) }
    dend_15 { pt3dadd( 34.6628, -163.649, 2.21988, 0.6 ) }
    dend_15 { pt3dadd( 34.8173, -164.466, 2.23752, 0.12 ) }
    dend_15 { pt3dadd( 34.8487, -164.644, 2.23441, 0.12 ) }
    dend_15 { pt3dadd( 34.9863, -165.463, 2.1847, 0.12 ) }
    dend_15 { pt3dadd( 35.0485, -165.909, 2.11435, 0.12 ) }
    dend_15 { pt3dadd( 35.0928, -166.366, 2.05694, 0.48 ) }
    dend_15 { pt3dadd( 35.1115, -166.696, 2.0347, 0.12 ) }
    dend_15 { pt3dadd( 35.1196, -167.47, 2.03019, 0.12 ) }
    dend_15 { pt3dadd( 35.1233, -168.17, 2.03333, 0.12 ) }
    dend_15 { pt3dadd( 35.1235, -168.569, 2.02033, 0.96 ) }
    dend_15 { pt3dadd( 35.1292, -169.158, 1.97974, 0.48 ) }
    dend_15 { pt3dadd( 35.1434, -169.668, 1.93009, 0.36 ) }
    dend_15 { pt3dadd( 35.1465, -169.979, 1.89146, 0.36 ) }
    dend_15 { pt3dadd( 35.1333, -170.591, 1.804, 0.36 ) }
    dend_15 { pt3dadd( 35.0841, -171.389, 1.68326, 0.24 ) }
    dend_15 { pt3dadd( 35.03, -172.147, 1.53954, 0.24 ) }
    dend_15 { pt3dadd( 34.9978, -172.469, 1.46869, 0.24 ) }
    dend_15 { pt3dadd( 34.9763, -172.716, 1.40878, 0.6 ) }
    dend_15 { pt3dadd( 34.9367, -173.259, 1.28529, 0.72 ) }
    dend_15 { pt3dadd( 34.903, -173.648, 1.20702, 0.84 ) }
    dend_15 { pt3dadd( 34.8703, -174.281, 1.10855, 0.12 ) }
    dend_15 { pt3dadd( 34.8635, -174.615, 1.04096, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_15 { pt3dadd( 34.8622, -175.196, 0.912542, 0.12 ) }
    dend_15 { pt3dadd( 34.8738, -175.618, 0.815864, 0.12 ) }
    dend_15 { pt3dadd( 34.8903, -175.832, 0.765569, 0.12 ) }
    dend_15 { pt3dadd( 34.9441, -176.26, 0.673533, 0.6 ) }
    dend_15 { pt3dadd( 35.0172, -176.815, 0.579909, 0.12 ) }
    dend_15 { pt3dadd( 35.0868, -177.457, 0.479373, 0.12 ) }
    dend_15 { pt3dadd( 35.1046, -177.699, 0.431932, 0.48 ) }
    dend_15 { pt3dadd( 35.1476, -178.229, 0.316254, 0.48 ) }
    dend_15 { pt3dadd( 35.2031, -178.708, 0.207785, 0.48 ) }
    dend_15 { pt3dadd( 35.3342, -179.55, 0.0202123, 0.48 ) }
    dend_15 { pt3dadd( 35.4253, -180.025, -0.0774704, 0.6 ) }
    dend_15 { pt3dadd( 35.5802, -180.78, -0.270566, 0.12 ) }
    dend_15 { pt3dadd( 35.6775, -181.294, -0.415847, 0.12 ) }
    dend_15 { pt3dadd( 35.7729, -181.819, -0.576165, 0.24 ) }
    dend_15 { pt3dadd( 35.8814, -182.366, -0.7504, 0.24 ) }
    dend_15 { pt3dadd( 36.0338, -183.007, -0.980269, 0.48 ) }
    dend_15 { pt3dadd( 36.1812, -183.565, -1.19611, 0.12 ) }
    dend_15 { pt3dadd( 36.2793, -183.969, -1.34916, 0.12 ) }
    dend_15 { pt3dadd( 36.3158, -184.194, -1.44047, 0.6 ) }
    dend_15 { pt3dadd( 36.3352, -184.516, -1.57035, 0.6 ) }
    dend_15 { pt3dadd( 36.2981, -185.208, -1.93123, 0.12 ) }
    dend_15 { pt3dadd( 36.2235, -185.711, -2.21767, 0.12 ) }
    dend_15 { pt3dadd( 36.1614, -186.006, -2.38716, 0.12 ) }
    dend_15 { pt3dadd( 36.0732, -186.327, -2.58326, 0.6 ) }
    dend_15 { pt3dadd( 35.8997, -186.855, -2.89428, 0.6 ) }
    dend_15 { pt3dadd( 35.4678, -188.053, -3.58532, 0.12 ) }
    dend_15 { pt3dadd( 35.2607, -188.587, -3.9015, 0.12 ) }
    dend_15 { pt3dadd( 35.215, -188.721, -3.97843, 0.36 ) }
    dend_15 { pt3dadd( 35.1825, -188.866, -4.05523, 0.12 ) }
    dend_15 { pt3dadd( 35.1019, -189.452, -4.33128, 0.12 ) }
    dend_15 { pt3dadd( 35.0617, -190.005, -4.54598, 0.84 ) }
    dend_15 { pt3dadd( 35.03, -190.817, -4.7753, 0.12 ) }
    dend_15 { pt3dadd( 34.9984, -191.659, -5.05932, 0.12 ) }
    dend_15 { pt3dadd( 34.9614, -192.525, -5.40904, 0.12 ) }
    dend_15 { pt3dadd( 34.9451, -192.843, -5.54818, 0.72 ) }
    dend_15 { pt3dadd( 34.912, -193.345, -5.7731, 0.96 ) }
    dend_15 { pt3dadd( 34.8867, -193.667, -5.90913, 0.96 ) }
    dend_15 { pt3dadd( 34.7787, -194.756, -6.34068, 0.48 ) }
    dend_15 { pt3dadd( 34.693, -195.33, -6.57595, 0.12 ) }
    dend_15 { pt3dadd( 34.5578, -196.024, -6.87771, 0.12 ) }
    dend_15 { pt3dadd( 34.396, -196.709, -7.16302, 0.12 ) }
    dend_15 { pt3dadd( 34.31, -197.009, -7.27161, 0.12 ) }
    dend_15 { pt3dadd( 34.13, -197.542, -7.42579, 0.12 ) }
    dend_15 { pt3dadd( 33.9495, -197.985, -7.53712, 0.96 ) }
    dend_15 { pt3dadd( 33.598, -198.728, -7.75256, 0.12 ) }
    dend_15 { pt3dadd( 33.2881, -199.319, -7.96529, 0.12 ) }
    dend_15 { pt3dadd( 32.8608, -200.077, -8.27982, 0.12 ) }
    dend_15 { pt3dadd( 32.6782, -200.391, -8.42947, 0.12 ) }
    dend_15 { pt3dadd( 32.2013, -201.23, -8.84821, 0.48 ) }
    dend_15 { pt3dadd( 32.0434, -201.511, -8.99154, 0.12 ) }
    dend_15 { pt3dadd( 31.8575, -201.837, -9.23413, 0.12 ) }
    dend_15 { pt3dadd( 31.8029, -201.94, -9.33259, 0.36 ) }
    dend_15 { pt3dadd( 31.6607, -202.206, -9.61727, 0.12 ) }
    dend_15 { pt3dadd( 31.3259, -202.842, -10.3302, 0.12 ) }
    dend_15 { pt3dadd( 31.0372, -203.395, -10.9637, 1.32 ) }
    dend_15 { pt3dadd( 30.2739, -204.816, -12.6798, 0.84 ) }
    dend_15 { pt3dadd( 30.169, -204.998, -12.9239, 0.84 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 57/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.93123, -43.2574, -18.3503, 0.36 ) }
    dend_13 { pt3dadd( -4.96982, -43.8744, -19.0142, 0.36 ) }
    dend_13 { pt3dadd( -4.97061, -44.2357, -19.3956, 0.36 ) }
    dend_13 { pt3dadd( -4.9556, -44.5558, -19.6938, 0.6 ) }
    dend_13 { pt3dadd( -4.91552, -44.9566, -20.0307, 0.96 ) }
    dend_13 { pt3dadd( -4.87192, -45.2214, -20.217, 0.84 ) }
    dend_13 { pt3dadd( -4.67992, -46.0306, -20.6897, 0.36 ) }
    dend_13 { pt3dadd( -4.56156, -46.337, -20.8119, 0.36 ) }
    dend_13 { pt3dadd( -4.29772, -46.8861, -20.9737, 0.36 ) }
    dend_13 { pt3dadd( -4.13476, -47.1937, -21.0315, 0.48 ) }
    dend_13 { pt3dadd( -3.78852, -47.824, -21.0967, 0.48 ) }
    dend_13 { pt3dadd( -3.48952, -48.3425, -21.127, 0.12 ) }
    dend_13 { pt3dadd( -3.14722, -48.9012, -21.1354, 0.12 ) }
    dend_13 { pt3dadd( -2.8836, -49.2876, -21.1611, 0.12 ) }
    dend_13 { pt3dadd( -2.79415, -49.4147, -21.1755, 0.84 ) }
    dend_13 { pt3dadd( -2.60615, -49.6982, -21.2227, 0.84 ) }
    dend_13 { pt3dadd( -2.32324, -50.1671, -21.3448, 0.36 ) }
    dend_13 { pt3dadd( -2.13448, -50.5082, -21.4469, 0.12 ) }
    dend_13 { pt3dadd( -1.74739, -51.2185, -21.6817, 0.12 ) }
    dend_13 { pt3dadd( -1.62364, -51.4218, -21.7532, 0.48 ) }
    dend_13 { pt3dadd( -1.49669, -51.6251, -21.8296, 0.48 ) }
    dend_13 { pt3dadd( -1.2961, -51.9481, -21.9499, 0.36 ) }
    dend_13 { pt3dadd( -1.21038, -52.1148, -22.013, 0.36 ) }
    dend_13 { pt3dadd( -1.07406, -52.4605, -22.1743, 0.48 ) }
    dend_13 { pt3dadd( -0.975411, -52.8813, -22.481, 0.36 ) }
    dend_13 { pt3dadd( -0.917334, -53.2087, -22.7573, 0.48 ) }
    dend_13 { pt3dadd( -0.892941, -53.4104, -22.9415, 0.72 ) }
    dend_13 { pt3dadd( -0.875929, -53.7808, -23.3112, 0.72 ) }
    dend_13 { pt3dadd( -0.886934, -54.1871, -23.724, 0.72 ) }
    dend_13 { pt3dadd( -0.929976, -54.9979, -24.5782, 0.12 ) }
    dend_13 { pt3dadd( -0.935176, -55.1469, -24.7373, 0.12 ) }
    dend_13 { pt3dadd( -0.932847, -55.1902, -24.7834, 0.48 ) }
    dend_13 { pt3dadd( -0.876783, -55.5624, -25.1767, 0.48 ) }
    dend_13 { pt3dadd( -0.753626, -56.0242, -25.6156, 0.12 ) }
    dend_13 { pt3dadd( -0.646556, -56.332, -25.8912, 0.12 ) }
    dend_13 { pt3dadd( -0.558309, -56.5516, -26.0662, 0.12 ) }
    dend_13 { pt3dadd( -0.498737, -56.7236, -26.2043, 0.48 ) }
    dend_13 { pt3dadd( -0.401385, -57.0488, -26.4726, 0.84 ) }
    dend_13 { pt3dadd( -0.285624, -57.4791, -26.8208, 0.84 ) }
    dend_13 { pt3dadd( -0.178078, -58.0734, -27.2765, 0.12 ) }
    dend_13 { pt3dadd( -0.173573, -58.1292, -27.3178, 0.12 ) }
    dend_13 { pt3dadd( -0.172696, -58.4942, -27.5741, 0.12 ) }
    dend_13 { pt3dadd( -0.212338, -58.9346, -27.9263, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_13 { pt3dadd( -0.246427, -59.2007, -28.1458, 0.12 ) }
    dend_13 { pt3dadd( -0.300306, -59.6801, -28.528, 0.12 ) }
    dend_13 { pt3dadd( -0.338851, -60.064, -28.8407, 0.84 ) }
    dend_13 { pt3dadd( -0.362808, -60.3655, -29.101, 0.72 ) }
    dend_13 { pt3dadd( -0.40866, -61.2811, -29.9186, 0.24 ) }
    dend_13 { pt3dadd( -0.417865, -61.4477, -30.1026, 0.24 ) }
    dend_13 { pt3dadd( -0.421462, -61.8426, -30.6136, 0.24 ) }
    dend_13 { pt3dadd( -0.384408, -62.2248, -31.1621, 0.6 ) }
    dend_13 { pt3dadd( -0.343716, -62.4557, -31.5024, 0.84 ) }
    dend_13 { pt3dadd( -0.310569, -62.5731, -31.6811, 0.6 ) }
    dend_13 { pt3dadd( 0.0360908, -63.4958, -33.0077, 0.12 ) }
    dend_13 { pt3dadd( 0.0887999, -63.6283, -33.2053, 0.12 ) }
    dend_13 { pt3dadd( 0.165748, -63.813, -33.4857, 0.12 ) }
    dend_13 { pt3dadd( 0.185659, -63.8615, -33.5456, 0.48 ) }
    dend_13 { pt3dadd( 0.254492, -64.0612, -33.7484, 0.48 ) }
    dend_13 { pt3dadd( 0.315506, -64.2858, -33.9067, 0.48 ) }
    dend_13 { pt3dadd( 0.395293, -64.666, -34.0448, 0.36 ) }
    dend_13 { pt3dadd( 0.436671, -64.9019, -34.1286, 0.36 ) }
    dend_13 { pt3dadd( 0.50505, -65.3134, -34.2676, 0.36 ) }
    dend_13 { pt3dadd( 0.569837, -65.672, -34.4065, 0.12 ) }
    dend_13 { pt3dadd( 0.637271, -66.0417, -34.5568, 0.12 ) }
    dend_13 { pt3dadd( 0.687593, -66.3171, -34.6718, 0.6 ) }
    dend_13 { pt3dadd( 0.749908, -66.6587, -34.8083, 0.84 ) }
    dend_13 { pt3dadd( 0.801396, -66.9235, -34.9139, 0.84 ) }
    dend_13 { pt3dadd( 0.905306, -67.4843, -35.1647, 0.36 ) }
    dend_13 { pt3dadd( 0.954867, -67.7933, -35.3149, 0.36 ) }
    dend_13 { pt3dadd( 0.992019, -68.0869, -35.4744, 0.48 ) }
    dend_13 { pt3dadd( 1.02337, -68.3311, -35.6134, 0.48 ) }
    dend_13 { pt3dadd( 1.06005, -68.5809, -35.7531, 0.72 ) }
    dend_13 { pt3dadd( 1.1538, -69.1243, -36.0258, 0.72 ) }
    dend_13 { pt3dadd( 1.24313, -69.5475, -36.2101, 0.36 ) }
    dend_13 { pt3dadd( 1.26961, -69.6514, -36.2599, 0.24 ) }
    dend_13 { pt3dadd( 1.35061, -69.919, -36.3891, 0.12 ) }
    dend_13 { pt3dadd( 1.50688, -70.3657, -36.58, 0.12 ) }
    dend_13 { pt3dadd( 1.65087, -70.7375, -36.6971, 0.12 ) }
    dend_13 { pt3dadd( 1.67881, -70.8008, -36.709, 0.48 ) }
    dend_13 { pt3dadd( 1.87951, -71.2202, -36.7843, 0.6 ) }
    dend_13 { pt3dadd( 1.9738, -71.4113, -36.8215, 0.6 ) }
    dend_13 { pt3dadd( 2.19172, -71.8301, -36.9058, 0.12 ) }
    dend_13 { pt3dadd( 2.47043, -72.3438, -37.0078, 0.12 ) }
    dend_13 { pt3dadd( 2.61366, -72.5997, -37.0558, 0.36 ) }
    dend_13 { pt3dadd( 2.7959, -72.9331, -37.111, 0.12 ) }
    dend_13 { pt3dadd( 2.99355, -73.2991, -37.1734, 0.12 ) }
    dend_13 { pt3dadd( 3.24683, -73.7932, -37.2798, 0.12 ) }
    dend_13 { pt3dadd( 3.36562, -74.0426, -37.3439, 0.12 ) }
    dend_13 { pt3dadd( 3.4677, -74.267, -37.4007, 0.48 ) }
    dend_13 { pt3dadd( 3.57753, -74.5221, -37.4601, 0.48 ) }
    dend_13 { pt3dadd( 3.70197, -74.8226, -37.5281, 0.12 ) }
    dend_13 { pt3dadd( 3.98868, -75.5652, -37.7139, 0.12 ) }
    dend_13 { pt3dadd( 4.03199, -75.6953, -37.7458, 0.48 ) }
    dend_13 { pt3dadd( 4.09764, -75.9026, -37.7935, 0.48 ) }
    dend_13 { pt3dadd( 4.15758, -76.1121, -37.8402, 0.48 ) }
    dend_13 { pt3dadd( 4.22254, -76.3497, -37.8886, 0.12 ) }
    dend_13 { pt3dadd( 4.30916, -76.6869, -37.9453, 0.12 ) }
    dend_13 { pt3dadd( 4.47004, -77.3733, -38.0586, 0.12 ) }
    dend_13 { pt3dadd( 4.53619, -77.6786, -38.1042, 0.24 ) }
    dend_13 { pt3dadd( 4.57963, -77.8689, -38.1267, 0.12 ) }
    dend_13 { pt3dadd( 4.6829, -78.3019, -38.1633, 0.12 ) }
    dend_13 { pt3dadd( 4.81929, -78.8479, -38.1917, 0.12 ) }
    dend_13 { pt3dadd( 4.87305, -79.0526, -38.1996, 0.12 ) }
    dend_13 { pt3dadd( 4.9837, -79.4614, -38.2075, 0.12 ) }
    dend_13 { pt3dadd( 5.10443, -79.8784, -38.2092, 0.48 ) }
    dend_13 { pt3dadd( 5.15073, -80.0178, -38.2082, 0.48 ) }
    dend_13 { pt3dadd( 5.19662, -80.1513, -38.2075, 0.48 ) }
    dend_13 { pt3dadd( 5.22872, -80.2457, -38.2078, 0.12 ) }
    dend_13 { pt3dadd( 5.3022, -80.4561, -38.2124, 0.12 ) }
    dend_13 { pt3dadd( 5.42016, -80.8167, -38.229, 0.12 ) }
    dend_13 { pt3dadd( 5.53317, -81.242, -38.257, 0.12 ) }
    dend_13 { pt3dadd( 5.56665, -81.3948, -38.2785, 0.72 ) }
    dend_13 { pt3dadd( 5.59881, -81.5854, -38.3275, 0.84 ) }
    dend_13 { pt3dadd( 5.62449, -81.8624, -38.4245, 0.24 ) }
    dend_13 { pt3dadd( 5.62605, -82.2511, -38.5874, 0.24 ) }
    dend_13 { pt3dadd( 5.61527, -82.5008, -38.7014, 0.24 ) }
    dend_13 { pt3dadd( 5.61287, -83.0278, -38.9438, 0.36 ) }
    dend_13 { pt3dadd( 5.63153, -83.4404, -39.1486, 0.12 ) }
    dend_13 { pt3dadd( 5.65365, -83.7194, -39.2897, 0.12 ) }
    dend_13 { pt3dadd( 5.68345, -84.0525, -39.453, 0.12 ) }
    dend_13 { pt3dadd( 5.73844, -84.4535, -39.6354, 0.12 ) }
    dend_13 { pt3dadd( 5.83544, -84.9473, -39.8422, 0.48 ) }
    dend_13 { pt3dadd( 5.93341, -85.3209, -39.9697, 0.12 ) }
    dend_13 { pt3dadd( 6.00707, -85.5671, -40.0675, 0.12 ) }
    dend_13 { pt3dadd( 6.0829, -85.8085, -40.1874, 0.12 ) }
    dend_13 { pt3dadd( 6.15905, -86.0524, -40.3209, 0.12 ) }
    dend_13 { pt3dadd( 6.2298, -86.31, -40.4857, 0.6 ) }
    dend_13 { pt3dadd( 6.28622, -86.5385, -40.6404, 0.6 ) }
    dend_13 { pt3dadd( 6.45284, -87.1847, -41.0732, 0.12 ) }
    dend_13 { pt3dadd( 6.54171, -87.521, -41.3245, 0.12 ) }
    dend_13 { pt3dadd( 6.62402, -87.864, -41.5781, 0.12 ) }
    dend_13 { pt3dadd( 6.72185, -88.2899, -41.866, 0.6 ) }
    dend_13 { pt3dadd( 6.76817, -88.4762, -41.9754, 0.6 ) }
    dend_13 { pt3dadd( 6.81929, -88.6668, -42.0756, 0.6 ) }
    dend_13 { pt3dadd( 6.95043, -89.1166, -42.2634, 0.12 ) }
    dend_13 { pt3dadd( 7.13275, -89.6872, -42.4767, 0.12 ) }
    dend_13 { pt3dadd( 7.29252, -90.1648, -42.6406, 0.12 ) }
    dend_13 { pt3dadd( 7.44252, -90.5734, -42.7591, 0.36 ) }
    dend_13 { pt3dadd( 7.49563, -90.7026, -42.8021, 0.12 ) }
    dend_13 { pt3dadd( 7.63, -91.0153, -42.9114, 0.12 ) }
    dend_13 { pt3dadd( 7.72717, -91.2358, -42.9878, 0.48 ) }
    dend_13 { pt3dadd( 7.87557, -91.614, -43.1761, 0.12 ) }
    dend_13 { pt3dadd( 7.94137, -91.9003, -43.364, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_13 { pt3dadd( 7.9724, -92.3572, -43.6982, 0.12 ) }
    dend_13 { pt3dadd( 7.96059, -92.5568, -43.8492, 0.6 ) }
    dend_13 { pt3dadd( 7.93785, -92.6821, -43.9382, 0.6 ) }
    dend_13 { pt3dadd( 7.75564, -93.3053, -44.3729, 0.12 ) }
    dend_13 { pt3dadd( 7.59935, -93.733, -44.6466, 0.12 ) }
    dend_13 { pt3dadd( 7.49449, -93.9872, -44.7912, 0.36 ) }
    dend_13 { pt3dadd( 7.35033, -94.3121, -44.9485, 0.36 ) }
    dend_13 { pt3dadd( 7.14916, -94.8074, -45.163, 0.36 ) }
    dend_13 { pt3dadd( 6.98636, -95.2088, -45.3053, 0.12 ) }
    dend_13 { pt3dadd( 6.85161, -95.5276, -45.3895, 0.12 ) }
    dend_13 { pt3dadd( 6.67842, -95.8805, -45.4712, 0.48 ) }
    dend_13 { pt3dadd( 6.5787, -96.0727, -45.5119, 0.12 ) }
    dend_13 { pt3dadd( 6.32875, -96.5142, -45.5905, 0.12 ) }
    dend_13 { pt3dadd( 6.09932, -96.8834, -45.64, 0.6 ) }
    dend_13 { pt3dadd( 5.90587, -97.1869, -45.6663, 0.12 ) }
    dend_13 { pt3dadd( 5.68034, -97.5064, -45.6908, 0.12 ) }
    dend_13 { pt3dadd( 5.33589, -97.9528, -45.7196, 0.12 ) }
    dend_13 { pt3dadd( 5.19646, -98.1206, -45.7261, 0.12 ) }
    dend_13 { pt3dadd( 4.87036, -98.4766, -45.7266, 0.48 ) }
    dend_13 { pt3dadd( 4.69298, -98.6678, -45.7232, 0.12 ) }
    dend_13 { pt3dadd( 4.38536, -98.9739, -45.7036, 0.12 ) }
    dend_13 { pt3dadd( 4.17132, -99.1617, -45.6877, 0.48 ) }
    dend_13 { pt3dadd( 3.89705, -99.3638, -45.67, 0.48 ) }
    dend_13 { pt3dadd( 3.81763, -99.4181, -45.6648, 0.12 ) }
    dend_13 { pt3dadd( 3.57347, -99.5712, -45.6475, 0.12 ) }
    dend_13 { pt3dadd( 3.31202, -99.7299, -45.6264, 0.48 ) }
    dend_13 { pt3dadd( 3.07578, -99.8803, -45.6081, 0.48 ) }
    dend_13 { pt3dadd( 2.75581, -100.086, -45.5821, 0.12 ) }
    dend_13 { pt3dadd( 2.44149, -100.276, -45.5558, 0.12 ) }
    dend_13 { pt3dadd( 2.23044, -100.398, -45.5328, 0.12 ) }
    dend_13 { pt3dadd( 2.15084, -100.443, -45.5225, 0.12 ) }
    dend_13 { pt3dadd( 1.93721, -100.558, -45.4902, 0.48 ) }
    dend_13 { pt3dadd( 1.61814, -100.727, -45.4345, 0.48 ) }
    dend_13 { pt3dadd( 1.32071, -100.878, -45.3759, 0.48 ) }
    dend_13 { pt3dadd( 0.979249, -101.04, -45.3101, 0.12 ) }
    dend_13 { pt3dadd( 0.758882, -101.136, -45.2695, 0.12 ) }
    dend_13 { pt3dadd( 0.192284, -101.344, -45.1718, 0.12 ) }
    dend_13 { pt3dadd( -0.0417037, -101.417, -45.1339, 0.12 ) }
    dend_13 { pt3dadd( -0.170974, -101.453, -45.1201, 0.6 ) }
    dend_13 { pt3dadd( -0.438102, -101.529, -45.1045, 0.6 ) }
    dend_13 { pt3dadd( -0.706233, -101.613, -45.0986, 0.24 ) }
    dend_13 { pt3dadd( -1.40813, -101.867, -45.0941, 0.24 ) }
    dend_13 { pt3dadd( -1.65901, -101.99, -45.0958, 0.48 ) }
    dend_13 { pt3dadd( -2.0669, -102.236, -45.0995, 0.12 ) }
    dend_13 { pt3dadd( -2.41631, -102.497, -45.1321, 0.12 ) }
    dend_13 { pt3dadd( -2.73704, -102.788, -45.1848, 0.12 ) }
    dend_13 { pt3dadd( -2.96267, -103.043, -45.2369, 0.12 ) }
    dend_13 { pt3dadd( -3.35639, -103.62, -45.3534, 0.12 ) }
    dend_13 { pt3dadd( -3.47664, -103.837, -45.3899, 0.48 ) }
    dend_13 { pt3dadd( -3.79421, -104.579, -45.4788, 0.48 ) }
    dend_13 { pt3dadd( -3.88144, -104.819, -45.5043, 0.12 ) }
    dend_13 { pt3dadd( -4.02061, -105.261, -45.5459, 0.12 ) }
    dend_13 { pt3dadd( -4.20154, -105.928, -45.5981, 0.12 ) }
    dend_13 { pt3dadd( -4.39938, -106.852, -45.6516, 0.12 ) }
    dend_13 { pt3dadd( -4.5924, -108.062, -45.7193, 0.12 ) }
    dend_13 { pt3dadd( -4.6129, -108.288, -45.729, 0.72 ) }
    dend_13 { pt3dadd( -4.62604, -108.634, -45.754, 0.48 ) }
    dend_13 { pt3dadd( -4.6235, -108.733, -45.7621, 0.12 ) }
    dend_13 { pt3dadd( -4.55924, -109.328, -45.818, 0.12 ) }
    dend_13 { pt3dadd( -4.42365, -109.962, -45.8853, 0.12 ) }
    dend_13 { pt3dadd( -4.28139, -110.404, -45.9338, 0.12 ) }
    dend_13 { pt3dadd( -4.20868, -110.614, -45.9532, 0.36 ) }
    dend_13 { pt3dadd( -4.07438, -110.982, -45.9798, 0.12 ) }
    dend_13 { pt3dadd( -3.92711, -111.384, -46.0004, 0.12 ) }
    dend_13 { pt3dadd( -3.76632, -111.823, -46.0094, 0.12 ) }
    dend_13 { pt3dadd( -3.594, -112.301, -46.0041, 0.12 ) }
    dend_13 { pt3dadd( -3.53892, -112.716, -46.3653, 0.12 ) }
    dend_13 { pt3dadd( -3.5763, -112.938, -46.8941, 0.12 ) }
    dend_13 { pt3dadd( -3.59025, -112.974, -47.0237, 0.12 ) }
    dend_13 { pt3dadd( -3.62533, -113.022, -47.29, 0.72 ) }
    dend_13 { pt3dadd( -3.66402, -113.041, -47.5589, 1.08 ) }
    dend_13 { pt3dadd( -4.38045, -113.008, -51.865, 0.84 ) }
    dend_13 { pt3dadd( -4.61683, -112.901, -53.2032, 0.12 ) }
    dend_13 { pt3dadd( -4.66236, -112.869, -53.4611, 0.12 ) }
    dend_13 { pt3dadd( -4.72909, -112.813, -53.8616, 0.12 ) }
    dend_13 { pt3dadd( -4.90805, -112.628, -55.0257, 0.48 ) }
    dend_13 { pt3dadd( -5.05872, -112.432, -56.1285, 0.6 ) }
    dend_13 { pt3dadd( -5.16577, -112.228, -57.1554, 0.6 ) }
    dend_13 { pt3dadd( -5.32127, -112.073, -58.7868, 0.12 ) }
    dend_13 { pt3dadd( -5.35295, -112.073, -59.1481, 0.12 ) }
    dend_13 { pt3dadd( -5.36134, -112.091, -59.2976, 0.12 ) }
    dend_13 { pt3dadd( -5.35723, -112.13, -59.427, 0.72 ) }
    dend_13 { pt3dadd( -5.299, -112.273, -59.7315, 0.72 ) }
    dend_13 { pt3dadd( -5.0011, -112.755, -60.4848, 0.12 ) }
    dend_13 { pt3dadd( -4.94087, -112.823, -60.5796, 0.12 ) }
    dend_13 { pt3dadd( -4.64073, -113.095, -61.0042, 0.12 ) }
    dend_13 { pt3dadd( -4.15274, -113.441, -61.7955, 0.12 ) }
    dend_13 { pt3dadd( -4.05126, -113.487, -61.9652, 0.12 ) }
    dend_13 { pt3dadd( -3.73484, -113.545, -62.4842, 0.12 ) }
    dend_13 { pt3dadd( -3.6565, -113.543, -62.6128, 0.72 ) }
    dend_13 { pt3dadd( -3.52583, -113.532, -62.8514, 0.72 ) }
    dend_13 { pt3dadd( -2.96769, -113.465, -64.1595, 0.12 ) }
    dend_13 { pt3dadd( -2.85979, -113.456, -64.4406, 0.12 ) }
    dend_13 { pt3dadd( -2.81445, -113.453, -64.5841, 0.48 ) }
    dend_13 { pt3dadd( -2.72783, -113.431, -65.0767, 0.12 ) }
    dend_13 { pt3dadd( -2.68806, -113.405, -65.4332, 0.12 ) }
    dend_13 { pt3dadd( -2.63538, -113.365, -65.9471, 0.72 ) }
    dend_13 { pt3dadd( -2.61351, -113.358, -66.1588, 0.84 ) }
    dend_13 { pt3dadd( -2.55701, -113.34, -67.0491, 1.32 ) }
    dend_13 { pt3dadd( -2.54007, -113.278, -68.1334, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_13 { pt3dadd( -2.5497, -113.247, -68.344, 0.6 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 1/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 25.7742, 0.818182, -8.04353, 0.48 ) }
    dend_9 { pt3dadd( 25.9805, 1.47768, -8.42976, 0.48 ) }
    dend_9 { pt3dadd( 26.1977, 2.25788, -8.93353, 0.12 ) }
    dend_9 { pt3dadd( 26.4795, 3.17864, -9.5459, 0.12 ) }
    dend_9 { pt3dadd( 26.6436, 3.67838, -9.86612, 1.2 ) }
    dend_9 { pt3dadd( 26.731, 3.93623, -10.04, 1.2 ) }
    dend_9 { pt3dadd( 27.5101, 6.12894, -11.5541, 0.12 ) }
    dend_9 { pt3dadd( 27.8402, 6.90565, -12.1463, 0.12 ) }
    dend_9 { pt3dadd( 28.0093, 7.25091, -12.4188, 0.12 ) }
    dend_9 { pt3dadd( 28.2164, 7.61325, -12.7224, 0.12 ) }
    dend_9 { pt3dadd( 28.8157, 8.56338, -13.6546, 0.72 ) }
    dend_9 { pt3dadd( 29.1057, 8.97022, -14.0738, 0.84 ) }
    dend_9 { pt3dadd( 29.4814, 9.38189, -14.4949, 0.12 ) }
    dend_9 { pt3dadd( 29.6264, 9.51195, -14.6537, 0.12 ) }
    dend_9 { pt3dadd( 29.9423, 9.76755, -15.0397, 0.72 ) }
    dend_9 { pt3dadd( 31.4021, 10.79, -16.8615, 0.12 ) }
    dend_9 { pt3dadd( 31.7048, 10.9758, -17.2132, 0.12 ) }
    dend_9 { pt3dadd( 32.1883, 11.2577, -17.771, 0.12 ) }
    dend_9 { pt3dadd( 32.4028, 11.3908, -18.0185, 0.96 ) }
    dend_9 { pt3dadd( 33.461, 12.0793, -19.1342, 0.12 ) }
    dend_9 { pt3dadd( 33.7061, 12.2479, -19.407, 0.12 ) }
    dend_9 { pt3dadd( 34.1557, 12.5635, -19.8598, 0.6 ) }
    dend_9 { pt3dadd( 34.5686, 12.8599, -20.2856, 0.12 ) }
    dend_9 { pt3dadd( 35.2776, 13.3867, -21.0129, 0.12 ) }
    dend_9 { pt3dadd( 35.94, 13.8783, -21.6698, 0.72 ) }
    dend_9 { pt3dadd( 37.2951, 14.8784, -22.9045, 0.12 ) }
    dend_9 { pt3dadd( 37.8226, 15.2716, -23.3892, 0.12 ) }
    dend_9 { pt3dadd( 38.2835, 15.6119, -23.8085, 0.12 ) }
    dend_9 { pt3dadd( 38.4962, 15.77, -23.9839, 0.6 ) }
    dend_9 { pt3dadd( 39.254, 16.311, -24.5308, 0.12 ) }
    dend_9 { pt3dadd( 39.4906, 16.4725, -24.6693, 0.12 ) }
    dend_9 { pt3dadd( 39.9343, 16.7543, -24.8695, 0.6 ) }
    dend_9 { pt3dadd( 40.1024, 16.8581, -24.9761, 0.12 ) }
    dend_9 { pt3dadd( 40.505, 17.0943, -25.2725, 0.12 ) }
    dend_9 { pt3dadd( 41.0986, 17.3803, -25.6953, 0.6 ) }
    dend_9 { pt3dadd( 41.4657, 17.5233, -25.9337, 0.6 ) }
    dend_9 { pt3dadd( 42.3719, 17.8046, -26.5236, 0.48 ) }
    dend_9 { pt3dadd( 42.9696, 17.9723, -26.9139, 0.12 ) }
    dend_9 { pt3dadd( 43.3579, 18.0841, -27.1598, 0.12 ) }
    dend_9 { pt3dadd( 44.1088, 18.2858, -27.597, 0.12 ) }
    dend_9 { pt3dadd( 44.5093, 18.3988, -27.7929, 0.12 ) }
    dend_9 { pt3dadd( 44.9871, 18.568, -28.0524, 0.48 ) }
    dend_9 { pt3dadd( 45.6078, 18.8187, -28.3764, 0.48 ) }
    dend_9 { pt3dadd( 45.8062, 18.9013, -28.4869, 0.48 ) }
    dend_9 { pt3dadd( 46.1608, 19.0579, -28.71, 0.12 ) }
    dend_9 { pt3dadd( 46.3499, 19.1502, -28.8452, 0.12 ) }
    dend_9 { pt3dadd( 47.3165, 19.6139, -29.6811, 0.12 ) }
    dend_9 { pt3dadd( 47.8204, 19.8255, -30.1279, 1.44 ) }
    dend_9 { pt3dadd( 48.4172, 20.0359, -30.6528, 0.12 ) }
    dend_9 { pt3dadd( 48.7067, 20.1246, -30.9248, 0.12 ) }
    dend_9 { pt3dadd( 48.9603, 20.1922, -31.2256, 0.24 ) }
    dend_9 { pt3dadd( 49.8924, 20.3885, -32.3827, 0.12 ) }
    dend_9 { pt3dadd( 50.4654, 20.4814, -33.0704, 0.12 ) }
    dend_9 { pt3dadd( 50.6887, 20.5151, -33.3404, 0.72 ) }
    dend_9 { pt3dadd( 51.4401, 20.6284, -34.2072, 0.12 ) }
    dend_9 { pt3dadd( 53.2703, 20.8995, -36.2034, 0.12 ) }
    dend_9 { pt3dadd( 53.8152, 20.9846, -36.7577, 0.12 ) }
    dend_9 { pt3dadd( 54.3193, 21.0702, -37.2065, 0.12 ) }
    dend_9 { pt3dadd( 54.7018, 21.1486, -37.5157, 0.12 ) }
    dend_9 { pt3dadd( 55.198, 21.2742, -37.8227, 0.72 ) }
    dend_9 { pt3dadd( 55.4083, 21.342, -37.8955, 0.72 ) }
    dend_9 { pt3dadd( 56.089, 21.6163, -38.0131, 0.12 ) }
    dend_9 { pt3dadd( 56.8151, 21.9618, -38.1587, 0.12 ) }
    dend_9 { pt3dadd( 57.382, 22.2524, -38.3103, 0.12 ) }
    dend_9 { pt3dadd( 58.2008, 22.6911, -38.5568, 0.12 ) }
    dend_9 { pt3dadd( 58.7568, 22.9936, -38.7263, 0.12 ) }
    dend_9 { pt3dadd( 59.4544, 23.3775, -38.9294, 0.48 ) }
    dend_9 { pt3dadd( 59.7144, 23.5256, -39.0366, 0.48 ) }
    dend_9 { pt3dadd( 60.3426, 23.8761, -39.3889, 0.12 ) }
    dend_9 { pt3dadd( 60.8379, 24.1391, -39.7142, 0.12 ) }
    dend_9 { pt3dadd( 61.4402, 24.4449, -40.1691, 0.12 ) }
    dend_9 { pt3dadd( 61.6289, 24.5467, -40.3138, 0.48 ) }
    dend_9 { pt3dadd( 63.0562, 25.3388, -41.36, 0.12 ) }
    dend_9 { pt3dadd( 63.6785, 25.7312, -41.9185, 0.12 ) }
    dend_9 { pt3dadd( 63.9442, 25.9169, -42.1603, 0.36 ) }
    dend_9 { pt3dadd( 64.2453, 26.1406, -42.4501, 0.12 ) }
    dend_9 { pt3dadd( 64.7974, 26.5766, -43.0065, 0.12 ) }
    dend_9 { pt3dadd( 64.9372, 26.6897, -43.1412, 0.36 ) }
    dend_9 { pt3dadd( 66.2757, 27.8022, -44.2333, 0.12 ) }
    dend_9 { pt3dadd( 67.1154, 28.568, -45.0609, 0.12 ) }
    dend_9 { pt3dadd( 67.1154, 28.568, -45.0609, 0.24 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 82/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 25.7742, 0.818182, -8.04353, 0.36 ) }
    dend_8 { pt3dadd( 26.1486, 1.24685, -8.18092, 0.36 ) }
    dend_8 { pt3dadd( 26.6031, 1.74571, -8.32786, 0.36 ) }
    dend_8 { pt3dadd( 26.909, 2.06191, -8.41617, 0.96 ) }
    dend_8 { pt3dadd( 27.2102, 2.38267, -8.47771, 1.2 ) }
    dend_8 { pt3dadd( 27.5102, 2.71367, -8.52359, 0.96 ) }
    dend_8 { pt3dadd( 27.7378, 2.97803, -8.55204, 0.72 ) }
    dend_8 { pt3dadd( 27.9939, 3.29764, -8.55168, 0.72 ) }
    dend_8 { pt3dadd( 28.165, 3.53701, -8.52351, 0.72 ) }
    dend_8 { pt3dadd( 28.471, 4.01049, -8.42655, 0.36 ) }
    dend_8 { pt3dadd( 28.5261, 4.09949, -8.40207, 0.36 ) }
    dend_8 { pt3dadd( 28.7185, 4.3992, -8.28759, 0.6 ) }
    dend_8 { pt3dadd( 28.8308, 4.5468, -8.20936, 0.6 ) }
    dend_8 { pt3dadd( 29.2734, 5.0173, -7.84916, 0.48 ) }
    dend_8 { pt3dadd( 29.5835, 5.31161, -7.58095, 0.48 ) }
    dend_8 { pt3dadd( 29.8321, 5.54961, -7.36644, 0.48 ) }
    dend_8 { pt3dadd( 30.1342, 5.83344, -7.0789, 0.96 ) }
    dend_8 { pt3dadd( 30.5145, 6.15476, -6.70649, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_8 { pt3dadd( 30.883, 6.43675, -6.32799, 0.72 ) }
    dend_8 { pt3dadd( 31.1776, 6.6376, -6.02782, 0.48 ) }
    dend_8 { pt3dadd( 31.674, 6.99653, -5.5447, 0.72 ) }
    dend_8 { pt3dadd( 32.0921, 7.34339, -5.18653, 0.72 ) }
    dend_8 { pt3dadd( 32.3726, 7.61974, -4.97869, 0.72 ) }
    dend_8 { pt3dadd( 32.8241, 8.13764, -4.69298, 0.48 ) }
    dend_8 { pt3dadd( 33.0527, 8.4282, -4.58148, 0.36 ) }
    dend_8 { pt3dadd( 33.4389, 8.94083, -4.43912, 0.36 ) }
    dend_8 { pt3dadd( 33.7258, 9.34668, -4.37053, 0.36 ) }
    dend_8 { pt3dadd( 34.0157, 9.79489, -4.34436, 0.84 ) }
    dend_8 { pt3dadd( 34.2436, 10.1549, -4.33673, 0.84 ) }
    dend_8 { pt3dadd( 34.5248, 10.5874, -4.35512, 0.48 ) }
    dend_8 { pt3dadd( 34.7993, 11.0016, -4.3683, 0.48 ) }
    dend_8 { pt3dadd( 34.9776, 11.2616, -4.37101, 0.6 ) }
    dend_8 { pt3dadd( 35.2556, 11.6756, -4.37858, 0.72 ) }
    dend_8 { pt3dadd( 35.5379, 12.1078, -4.38912, 0.36 ) }
    dend_8 { pt3dadd( 35.7566, 12.4506, -4.39279, 0.36 ) }
    dend_8 { pt3dadd( 36.0395, 12.9107, -4.39635, 0.48 ) }
    dend_8 { pt3dadd( 36.2232, 13.227, -4.40167, 0.96 ) }
    dend_8 { pt3dadd( 36.5006, 13.7361, -4.41219, 1.08 ) }
    dend_8 { pt3dadd( 36.7542, 14.229, -4.43013, 0.36 ) }
    dend_8 { pt3dadd( 37.0696, 14.8509, -4.46951, 0.36 ) }
    dend_8 { pt3dadd( 37.3957, 15.4724, -4.51454, 0.48 ) }
    dend_8 { pt3dadd( 37.4693, 15.6094, -4.52679, 0.48 ) }
    dend_8 { pt3dadd( 37.6313, 15.9098, -4.5579, 0.12 ) }
    dend_8 { pt3dadd( 37.8915, 16.4105, -4.61439, 0.12 ) }
    dend_8 { pt3dadd( 38.1524, 16.954, -4.68787, 0.48 ) }
    dend_8 { pt3dadd( 38.3199, 17.3337, -4.73988, 0.36 ) }
    dend_8 { pt3dadd( 38.4898, 17.7488, -4.80084, 0.36 ) }
    dend_8 { pt3dadd( 38.6761, 18.2167, -4.87598, 0.48 ) }
    dend_8 { pt3dadd( 38.7558, 18.4164, -4.91091, 0.12 ) }
    dend_8 { pt3dadd( 38.9826, 18.9736, -5.01052, 0.12 ) }
    dend_8 { pt3dadd( 39.0647, 19.1601, -5.03769, 0.12 ) }
    dend_8 { pt3dadd( 39.2747, 19.6154, -5.14294, 0.48 ) }
    dend_8 { pt3dadd( 39.3694, 19.8161, -5.19872, 0.24 ) }
    dend_8 { pt3dadd( 39.5388, 20.1792, -5.3141, 0.24 ) }
    dend_8 { pt3dadd( 39.6767, 20.4847, -5.41903, 0.48 ) }
    dend_8 { pt3dadd( 39.8928, 21.0095, -5.60577, 0.96 ) }
    dend_8 { pt3dadd( 40.2398, 21.9325, -5.91059, 0.96 ) }
    dend_8 { pt3dadd( 40.3435, 22.232, -6.00003, 0.12 ) }
    dend_8 { pt3dadd( 40.4783, 22.6764, -6.1204, 0.12 ) }
    dend_8 { pt3dadd( 40.5462, 22.9465, -6.17412, 0.24 ) }
    dend_8 { pt3dadd( 40.6613, 23.4754, -6.24361, 0.24 ) }
    dend_8 { pt3dadd( 40.7416, 23.8853, -6.27559, 0.36 ) }
    dend_8 { pt3dadd( 40.8263, 24.3299, -6.27433, 0.36 ) }
    dend_8 { pt3dadd( 40.844, 24.4254, -6.2769, 0.24 ) }
    dend_8 { pt3dadd( 40.9437, 25.0091, -6.26983, 0.24 ) }
    dend_8 { pt3dadd( 41.0332, 25.5412, -6.26107, 0.48 ) }
    dend_8 { pt3dadd( 41.0801, 25.8326, -6.25689, 0.24 ) }
    dend_8 { pt3dadd( 41.1439, 26.1813, -6.26049, 0.24 ) }
    dend_8 { pt3dadd( 41.258, 26.7619, -6.27507, 0.72 ) }
    dend_8 { pt3dadd( 41.38, 27.3322, -6.30341, 0.12 ) }
    dend_8 { pt3dadd( 41.5746, 28.1874, -6.37389, 0.12 ) }
    dend_8 { pt3dadd( 41.6256, 28.4073, -6.39054, 0.12 ) }
    dend_8 { pt3dadd( 41.7782, 29.0578, -6.44514, 0.12 ) }
    dend_8 { pt3dadd( 41.8478, 29.3433, -6.47306, 0.96 ) }
    dend_8 { pt3dadd( 41.9356, 29.7107, -6.51531, 0.96 ) }
    dend_8 { pt3dadd( 42.0754, 30.3017, -6.60174, 0.48 ) }
    dend_8 { pt3dadd( 42.1947, 30.8283, -6.67521, 0.36 ) }
    dend_8 { pt3dadd( 42.3537, 31.5287, -6.77303, 0.36 ) }
    dend_8 { pt3dadd( 42.4258, 31.8376, -6.81746, 0.36 ) }
    dend_8 { pt3dadd( 42.5516, 32.3194, -6.88108, 0.6 ) }
    dend_8 { pt3dadd( 42.6405, 32.6241, -6.92045, 0.12 ) }
    dend_8 { pt3dadd( 42.7549, 32.9607, -6.96439, 0.12 ) }
    dend_8 { pt3dadd( 42.9026, 33.3323, -7.01668, 0.12 ) }
    dend_8 { pt3dadd( 43.1727, 33.9, -7.09238, 0.12 ) }
    dend_8 { pt3dadd( 43.3651, 34.2851, -7.14438, 0.48 ) }
    dend_8 { pt3dadd( 43.4804, 34.5097, -7.17611, 0.12 ) }
    dend_8 { pt3dadd( 43.7156, 34.9616, -7.24137, 0.12 ) }
    dend_8 { pt3dadd( 43.8329, 35.1848, -7.27525, 0.12 ) }
    dend_8 { pt3dadd( 44.2605, 36.0291, -7.41402, 0.12 ) }
    dend_8 { pt3dadd( 44.4095, 36.342, -7.45971, 0.12 ) }
    dend_8 { pt3dadd( 44.6026, 36.7442, -7.51503, 0.12 ) }
    dend_8 { pt3dadd( 44.6455, 36.8346, -7.52504, 0.48 ) }
    dend_8 { pt3dadd( 44.816, 37.2052, -7.56062, 0.48 ) }
    dend_8 { pt3dadd( 44.9356, 37.472, -7.5832, 0.12 ) }
    dend_8 { pt3dadd( 45.1667, 37.9935, -7.59815, 0.12 ) }
    dend_8 { pt3dadd( 45.4429, 38.6035, -7.58412, 0.12 ) }
    dend_8 { pt3dadd( 45.6483, 39.0982, -7.56932, 0.48 ) }
    dend_8 { pt3dadd( 45.8037, 39.52, -7.54798, 0.72 ) }
    dend_8 { pt3dadd( 45.9019, 39.8159, -7.52164, 0.72 ) }
    dend_8 { pt3dadd( 46.0361, 40.2906, -7.47638, 0.72 ) }
    dend_8 { pt3dadd( 46.1808, 40.9106, -7.42305, 0.12 ) }
    dend_8 { pt3dadd( 46.379, 41.9936, -7.33083, 0.12 ) }
    dend_8 { pt3dadd( 46.4624, 42.4738, -7.2958, 0.48 ) }
    dend_8 { pt3dadd( 46.5392, 42.9167, -7.27765, 0.12 ) }
    dend_8 { pt3dadd( 46.6741, 43.6121, -7.24831, 0.12 ) }
    dend_8 { pt3dadd( 46.7517, 43.9681, -7.27256, 0.6 ) }
    dend_8 { pt3dadd( 46.8863, 44.4834, -7.36044, 0.6 ) }
    dend_8 { pt3dadd( 47.0145, 44.8646, -7.4692, 0.48 ) }
    dend_8 { pt3dadd( 47.2306, 45.3907, -7.67051, 0.48 ) }
    dend_8 { pt3dadd( 47.5773, 46.122, -7.99491, 0.36 ) }
    dend_8 { pt3dadd( 48.2409, 47.323, -8.56394, 0.12 ) }
    dend_8 { pt3dadd( 48.4993, 47.748, -8.77166, 0.12 ) }
    dend_8 { pt3dadd( 48.9169, 48.3963, -9.05001, 0.12 ) }
    dend_8 { pt3dadd( 49.1843, 48.7893, -9.18964, 0.12 ) }
    dend_8 { pt3dadd( 49.3019, 48.9503, -9.23187, 0.6 ) }
    dend_8 { pt3dadd( 49.5126, 49.2355, -9.27438, 0.84 ) }
    dend_8 { pt3dadd( 49.7222, 49.5124, -9.25527, 0.6 ) }
    dend_8 { pt3dadd( 50.192, 50.0964, -9.18426, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_8 { pt3dadd( 50.4102, 50.3678, -9.14465, 0.12 ) }
    dend_8 { pt3dadd( 50.545, 50.5469, -9.11773, 0.72 ) }
    dend_8 { pt3dadd( 50.8031, 50.9356, -9.07241, 0.72 ) }
    dend_8 { pt3dadd( 50.9341, 51.1572, -9.05529, 0.48 ) }
    dend_8 { pt3dadd( 51.0057, 51.2985, -9.05416, 0.12 ) }
    dend_8 { pt3dadd( 51.1979, 51.7275, -9.09535, 0.12 ) }
    dend_8 { pt3dadd( 51.2902, 51.9716, -9.11965, 0.72 ) }
    dend_8 { pt3dadd( 51.4099, 52.3103, -9.17912, 0.96 ) }
    dend_8 { pt3dadd( 51.4588, 52.4573, -9.20575, 0.96 ) }
    dend_8 { pt3dadd( 51.5659, 52.8013, -9.27538, 0.12 ) }
    dend_8 { pt3dadd( 51.7154, 53.2773, -9.38438, 0.12 ) }
    dend_8 { pt3dadd( 51.8035, 53.5475, -9.4621, 0.12 ) }
    dend_8 { pt3dadd( 51.9782, 54.0302, -9.64315, 0.24 ) }
    dend_8 { pt3dadd( 54.4394, 59.4126, -9.80522, 0.24 ) }
    dend_8 { pt3dadd( 57.0937, 64.6858, -9.64444, 0.24 ) }
    dend_8 { pt3dadd( 60.0135, 69.8062, -9.89809, 0.24 ) }
    dend_8 { pt3dadd( 62.3028, 75.225, -9.31385, 0.24 ) }
    dend_8 { pt3dadd( 64.3664, 80.5011, -7.71923, 0.24 ) }
    dend_8 { pt3dadd( 66.3783, 85.8863, -6.40034, 0.24 ) }
    dend_8 { pt3dadd( 68.8784, 90.7526, -4.33314, 0.24 ) }
    dend_8 { pt3dadd( 71.4857, 95.3494, -1.88014, 0.24 ) }
    dend_8 { pt3dadd( 73.0851, 100.254, 0.868989, 0.24 ) }
    dend_8 { pt3dadd( 75.345, 105.126, 3.17909, 0.24 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 23/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -7.51449, -29.5117, 3.70548, 0.48 ) }
    dend_39 { pt3dadd( -7.6106, -29.9252, 3.60945, 0.48 ) }
    dend_39 { pt3dadd( -7.77252, -30.6062, 3.46155, 0.48 ) }
    dend_39 { pt3dadd( -7.87623, -31.0379, 3.37204, 0.36 ) }
    dend_39 { pt3dadd( -7.96926, -31.4225, 3.29698, 0.36 ) }
    dend_39 { pt3dadd( -8.07422, -31.8677, 3.21598, 0.36 ) }
    dend_39 { pt3dadd( -8.1528, -32.2104, 3.15716, 0.6 ) }
    dend_39 { pt3dadd( -8.21734, -32.5118, 3.11789, 0.84 ) }
    dend_39 { pt3dadd( -8.2742, -32.7867, 3.10505, 1.08 ) }
    dend_39 { pt3dadd( -8.33236, -33.0524, 3.10562, 1.32 ) }
    dend_39 { pt3dadd( -8.39248, -33.3146, 3.10597, 1.32 ) }
    dend_39 { pt3dadd( -8.42148, -33.446, 3.10638, 1.32 ) }
    dend_39 { pt3dadd( -8.52097, -33.9615, 3.10935, 0.84 ) }
    dend_39 { pt3dadd( -8.59556, -34.3807, 3.11245, 0.6 ) }
    dend_39 { pt3dadd( -8.63316, -34.5886, 3.11258, 0.84 ) }
    dend_39 { pt3dadd( -8.69736, -34.9394, 3.10927, 0.84 ) }
    dend_39 { pt3dadd( -8.74886, -35.1978, 3.10425, 0.6 ) }
    dend_39 { pt3dadd( -8.84986, -35.6627, 3.0981, 0.6 ) }
    dend_39 { pt3dadd( -8.98821, -36.2615, 3.09098, 0.72 ) }
    dend_39 { pt3dadd( -9.08847, -36.6693, 3.09277, 0.72 ) }
    dend_39 { pt3dadd( -9.19307, -37.0644, 3.10054, 0.72 ) }
    dend_39 { pt3dadd( -9.31905, -37.4915, 3.11365, 0.72 ) }
    dend_39 { pt3dadd( -9.49816, -38.0581, 3.13111, 0.36 ) }
    dend_39 { pt3dadd( -9.6476, -38.5168, 3.15538, 0.36 ) }
    dend_39 { pt3dadd( -9.71219, -38.7184, 3.1701, 0.36 ) }
    dend_39 { pt3dadd( -9.75443, -38.8563, 3.18617, 0.72 ) }
    dend_39 { pt3dadd( -9.80717, -39.0379, 3.22744, 0.96 ) }
    dend_39 { pt3dadd( -9.89912, -39.4169, 3.3481, 0.96 ) }
    dend_39 { pt3dadd( -9.97835, -39.7909, 3.48778, 0.84 ) }
    dend_39 { pt3dadd( -10.0494, -40.1638, 3.63428, 0.6 ) }
    dend_39 { pt3dadd( -10.108, -40.5099, 3.78955, 0.48 ) }
    dend_39 { pt3dadd( -10.2015, -41.1219, 4.07111, 0.48 ) }
    dend_39 { pt3dadd( -10.2477, -41.4284, 4.21232, 0.6 ) }
    dend_39 { pt3dadd( -10.3045, -41.8117, 4.36841, 0.84 ) }
    dend_39 { pt3dadd( -10.3692, -42.2531, 4.51183, 0.84 ) }
    dend_39 { pt3dadd( -10.4746, -43.0142, 4.70635, 0.72 ) }
    dend_39 { pt3dadd( -10.5338, -43.4742, 4.7836, 0.6 ) }
    dend_39 { pt3dadd( -10.5624, -43.7145, 4.80462, 0.72 ) }
    dend_39 { pt3dadd( -10.6315, -44.3122, 4.84023, 0.36 ) }
    dend_39 { pt3dadd( -10.6712, -44.7795, 4.88271, 0.12 ) }
    dend_39 { pt3dadd( -10.6887, -45.0463, 4.91586, 0.12 ) }
    dend_39 { pt3dadd( -10.699, -45.2501, 4.94315, 0.48 ) }
    dend_39 { pt3dadd( -10.715, -45.6414, 5.01593, 0.84 ) }
    dend_39 { pt3dadd( -10.735, -46.1063, 5.12153, 0.84 ) }
    dend_39 { pt3dadd( -10.8028, -47.2402, 5.45799, 0.48 ) }
    dend_39 { pt3dadd( -10.833, -47.6834, 5.5992, 0.36 ) }
    dend_39 { pt3dadd( -10.8472, -47.8694, 5.65827, 0.36 ) }
    dend_39 { pt3dadd( -10.8687, -48.1284, 5.75217, 0.72 ) }
    dend_39 { pt3dadd( -10.8945, -48.4068, 5.85942, 0.84 ) }
    dend_39 { pt3dadd( -10.9544, -49.027, 6.09302, 0.72 ) }
    dend_39 { pt3dadd( -11.0018, -49.4534, 6.26679, 0.72 ) }
    dend_39 { pt3dadd( -11.0473, -49.8805, 6.45269, 0.72 ) }
    dend_39 { pt3dadd( -11.1219, -50.652, 6.80095, 0.6 ) }
    dend_39 { pt3dadd( -11.1468, -50.9566, 6.93908, 0.6 ) }
    dend_39 { pt3dadd( -11.1844, -51.3856, 7.12271, 0.72 ) }
    dend_39 { pt3dadd( -11.2762, -52.1943, 7.47194, 1.2 ) }
    dend_39 { pt3dadd( -11.3283, -52.5553, 7.63788, 1.32 ) }
    dend_39 { pt3dadd( -11.3788, -52.8515, 7.77042, 1.32 ) }
    dend_39 { pt3dadd( -11.4461, -53.2172, 7.91187, 0.48 ) }
    dend_39 { pt3dadd( -11.5484, -53.7723, 8.11202, 0.48 ) }
    dend_39 { pt3dadd( -11.6535, -54.3625, 8.30991, 0.96 ) }
    dend_39 { pt3dadd( -11.7292, -54.8338, 8.44042, 0.72 ) }
    dend_39 { pt3dadd( -11.7868, -55.2183, 8.54575, 0.48 ) }
    dend_39 { pt3dadd( -11.8312, -55.5495, 8.63592, 0.48 ) }
    dend_39 { pt3dadd( -11.8874, -56.0617, 8.76781, 0.48 ) }
    dend_39 { pt3dadd( -11.9155, -56.4702, 8.85727, 0.48 ) }
    dend_39 { pt3dadd( -11.9331, -56.7971, 8.90683, 0.72 ) }
    dend_39 { pt3dadd( -11.9525, -57.1372, 8.95082, 1.08 ) }
    dend_39 { pt3dadd( -11.9821, -57.6612, 9.01776, 0.36 ) }
    dend_39 { pt3dadd( -11.9912, -57.7939, 9.03876, 0.36 ) }
    dend_39 { pt3dadd( -12.0258, -58.2522, 9.11407, 0.48 ) }
    dend_39 { pt3dadd( -12.0592, -58.6557, 9.17526, 0.6 ) }
    dend_39 { pt3dadd( -12.0986, -59.0512, 9.24668, 1.08 ) }
    dend_39 { pt3dadd( -12.1476, -59.445, 9.32067, 1.2 ) }
    dend_39 { pt3dadd( -12.2326, -60.0004, 9.42072, 0.72 ) }
    dend_39 { pt3dadd( -12.2986, -60.3865, 9.48987, 0.72 ) }
    dend_39 { pt3dadd( -12.3728, -60.7827, 9.55888, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_39 { pt3dadd( -12.4945, -61.3591, 9.64868, 0.36 ) }
    dend_39 { pt3dadd( -12.6455, -61.9654, 9.74279, 0.36 ) }
    dend_39 { pt3dadd( -12.7592, -62.3704, 9.8003, 0.36 ) }
    dend_39 { pt3dadd( -12.8917, -62.8123, 9.85111, 0.48 ) }
    dend_39 { pt3dadd( -13.0068, -63.1959, 9.89419, 0.72 ) }
    dend_39 { pt3dadd( -13.1676, -63.7704, 9.9625, 0.72 ) }
    dend_39 { pt3dadd( -13.3143, -64.3269, 10.0245, 0.36 ) }
    dend_39 { pt3dadd( -13.4059, -64.6545, 10.0638, 0.36 ) }
    dend_39 { pt3dadd( -13.5253, -65.052, 10.1208, 0.6 ) }
    dend_39 { pt3dadd( -13.7301, -65.6782, 10.218, 0.6 ) }
    dend_39 { pt3dadd( -13.855, -66.0504, 10.274, 0.36 ) }
    dend_39 { pt3dadd( -14.0625, -66.6648, 10.3662, 0.36 ) }
    dend_39 { pt3dadd( -14.258, -67.2415, 10.4431, 0.36 ) }
    dend_39 { pt3dadd( -14.4661, -67.8528, 10.5236, 0.48 ) }
    dend_39 { pt3dadd( -14.5905, -68.2204, 10.5702, 0.6 ) }
    dend_39 { pt3dadd( -14.8241, -68.9385, 10.6497, 0.6 ) }
    dend_39 { pt3dadd( -14.9344, -69.3151, 10.6857, 0.48 ) }
    dend_39 { pt3dadd( -15.0782, -69.9099, 10.7394, 0.48 ) }
    dend_39 { pt3dadd( -15.1722, -70.3643, 10.7733, 0.48 ) }
    dend_39 { pt3dadd( -15.2476, -70.7625, 10.7942, 0.84 ) }
    dend_39 { pt3dadd( -15.3747, -71.4887, 10.8286, 0.72 ) }
    dend_39 { pt3dadd( -15.4291, -71.8312, 10.8413, 0.36 ) }
    dend_39 { pt3dadd( -15.4847, -72.2315, 10.8506, 0.36 ) }
    dend_39 { pt3dadd( -15.5521, -72.7704, 10.8615, 0.36 ) }
    dend_39 { pt3dadd( -15.6085, -73.2395, 10.8695, 0.48 ) }
    dend_39 { pt3dadd( -15.6575, -73.6906, 10.8752, 0.6 ) }
    dend_39 { pt3dadd( -15.7351, -74.4222, 10.8819, 0.6 ) }
    dend_39 { pt3dadd( -15.7813, -74.8964, 10.8922, 0.6 ) }
    dend_39 { pt3dadd( -15.8098, -75.2264, 10.9042, 0.6 ) }
    dend_39 { pt3dadd( -15.8564, -75.9731, 10.9428, 0.6 ) }
    dend_39 { pt3dadd( -15.871, -76.3092, 10.9637, 0.72 ) }
    dend_39 { pt3dadd( -15.8758, -76.6654, 10.9961, 0.96 ) }
    dend_39 { pt3dadd( -15.8537, -77.3695, 11.0732, 0.36 ) }
    dend_39 { pt3dadd( -15.8227, -77.775, 11.1236, 0.36 ) }
    dend_39 { pt3dadd( -15.7639, -78.2541, 11.1826, 0.72 ) }
    dend_39 { pt3dadd( -15.6653, -78.8574, 11.2506, 0.84 ) }
    dend_39 { pt3dadd( -15.5466, -79.5821, 11.322, 0.36 ) }
    dend_39 { pt3dadd( -15.4487, -80.1722, 11.389, 0.36 ) }
    dend_39 { pt3dadd( -15.3818, -80.5916, 11.4388, 0.36 ) }
    dend_39 { pt3dadd( -15.3245, -81.0048, 11.493, 0.24 ) }
    dend_39 { pt3dadd( -15.2709, -81.6044, 11.5736, 0.24 ) }
    dend_39 { pt3dadd( -15.2534, -82.2336, 11.6575, 0.36 ) }
    dend_39 { pt3dadd( -15.2673, -82.7258, 11.7172, 0.48 ) }
    dend_39 { pt3dadd( -15.296, -83.1259, 11.7665, 0.36 ) }
    dend_39 { pt3dadd( -15.3377, -83.5867, 11.8215, 0.36 ) }
    dend_39 { pt3dadd( -15.38, -84.0718, 11.879, 0.36 ) }
    dend_39 { pt3dadd( -15.4051, -84.4269, 11.9134, 0.36 ) }
    dend_39 { pt3dadd( -15.4172, -84.7042, 11.9292, 0.6 ) }
    dend_39 { pt3dadd( -15.4266, -85.0356, 11.9318, 0.36 ) }
    dend_39 { pt3dadd( -15.4287, -85.3053, 11.9351, 0.36 ) }
    dend_39 { pt3dadd( -15.4241, -85.6435, 11.9408, 0.36 ) }
    dend_39 { pt3dadd( -15.4176, -85.8456, 11.9439, 0.6 ) }
    dend_39 { pt3dadd( -15.4135, -86.0517, 11.9461, 0.6 ) }
    dend_39 { pt3dadd( -15.4117, -86.3297, 11.9447, 0.48 ) }
    dend_39 { pt3dadd( -15.4115, -86.6022, 11.9394, 0.48 ) }
    dend_39 { pt3dadd( -15.4103, -86.9036, 11.9304, 0.48 ) }
    dend_39 { pt3dadd( -15.4032, -87.1201, 11.9227, 0.72 ) }
    dend_39 { pt3dadd( -15.3812, -87.4571, 11.9403, 0.72 ) }
    dend_39 { pt3dadd( -15.3553, -87.7656, 11.9739, 0.48 ) }
    dend_39 { pt3dadd( -15.3241, -88.0914, 12.0232, 0.36 ) }
    dend_39 { pt3dadd( -15.2907, -88.4273, 12.0848, 0.36 ) }
    dend_39 { pt3dadd( -15.2517, -88.8051, 12.1613, 0.36 ) }
    dend_39 { pt3dadd( -15.1859, -89.6348, 12.3377, 0.24 ) }
    dend_39 { pt3dadd( -15.1881, -89.9641, 12.4069, 0.24 ) }
    dend_39 { pt3dadd( -15.212, -90.1607, 12.4452, 0.6 ) }
    dend_39 { pt3dadd( -15.3052, -90.5501, 12.5061, 0.72 ) }
    dend_39 { pt3dadd( -15.3758, -90.7527, 12.5267, 0.36 ) }
    dend_39 { pt3dadd( -15.5159, -91.0788, 12.54, 0.36 ) }
    dend_39 { pt3dadd( -15.8038, -91.6383, 12.5258, 0.36 ) }
    dend_39 { pt3dadd( -15.9922, -91.9724, 12.5164, 0.36 ) }
    dend_39 { pt3dadd( -16.2218, -92.355, 12.5062, 0.36 ) }
    dend_39 { pt3dadd( -16.5065, -92.8173, 12.4946, 0.36 ) }
    dend_39 { pt3dadd( -16.7573, -93.2251, 12.4849, 0.36 ) }
    dend_39 { pt3dadd( -17.1888, -93.9538, 12.4677, 0.48 ) }
    dend_39 { pt3dadd( -17.5803, -94.6615, 12.4517, 0.48 ) }
    dend_39 { pt3dadd( -17.7616, -94.9898, 12.4439, 0.6 ) }
    dend_39 { pt3dadd( -17.9344, -95.3042, 12.4335, 0.6 ) }
    dend_39 { pt3dadd( -18.0766, -95.5631, 12.4222, 0.36 ) }
    dend_39 { pt3dadd( -18.3246, -96.0537, 12.3963, 0.36 ) }
    dend_39 { pt3dadd( -18.4563, -96.3619, 12.3773, 0.48 ) }
    dend_39 { pt3dadd( -18.5591, -96.6305, 12.3601, 0.48 ) }
    dend_39 { pt3dadd( -18.6253, -96.7994, 12.3497, 0.6 ) }
    dend_39 { pt3dadd( -18.7152, -97.0184, 12.3482, 0.6 ) }
    dend_39 { pt3dadd( -18.9019, -97.4527, 12.3664, 0.36 ) }
    dend_39 { pt3dadd( -19.0589, -97.8031, 12.3944, 0.12 ) }
    dend_39 { pt3dadd( -19.2045, -98.1315, 12.4395, 0.12 ) }
    dend_39 { pt3dadd( -19.4595, -98.7351, 12.5469, 0.12 ) }
    dend_39 { pt3dadd( -19.6175, -99.1128, 12.6275, 0.6 ) }
    dend_39 { pt3dadd( -19.7222, -99.3857, 12.6907, 0.72 ) }
    dend_39 { pt3dadd( -19.8958, -99.9113, 12.8139, 0.36 ) }
    dend_39 { pt3dadd( -19.9823, -100.236, 12.8856, 0.12 ) }
    dend_39 { pt3dadd( -20.056, -100.559, 12.9465, 0.12 ) }
    dend_39 { pt3dadd( -20.056, -100.559, 12.9465, 0.36 ) }
    dend_39 { pt3dadd( -20.1409, -100.958, 12.9774, 0.24 ) }
    dend_39 { pt3dadd( -20.2522, -101.479, 12.9979, 0.24 ) }
    dend_39 { pt3dadd( -20.3249, -101.831, 12.9981, 0.24 ) }
    dend_39 { pt3dadd( -20.3951, -102.16, 12.9942, 0.36 ) }
    dend_39 { pt3dadd( -20.4909, -102.569, 12.9942, 0.36 ) }
    dend_39 { pt3dadd( -20.6212, -103.064, 12.9981, 0.36 ) }
    dend_39 { pt3dadd( -20.707, -103.358, 13.0016, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_39 { pt3dadd( -20.8056, -103.685, 13.0112, 0.36 ) }
    dend_39 { pt3dadd( -20.8951, -103.993, 13.0234, 0.12 ) }
    dend_39 { pt3dadd( -21.0753, -104.624, 13.0545, 0.24 ) }
    dend_39 { pt3dadd( -21.2725, -105.313, 13.0953, 0.24 ) }
    dend_39 { pt3dadd( -21.5355, -106.248, 13.1561, 0.24 ) }
    dend_39 { pt3dadd( -21.6063, -106.5, 13.1731, 0.12 ) }
    dend_39 { pt3dadd( -21.7793, -107.094, 13.2005, 0.12 ) }
    dend_39 { pt3dadd( -21.822, -107.232, 13.2031, 0.36 ) }
    dend_39 { pt3dadd( -21.9469, -107.623, 13.2073, 0.36 ) }
    dend_39 { pt3dadd( -22.14, -108.121, 13.2023, 0.36 ) }
    dend_39 { pt3dadd( -22.3574, -108.462, 13.1832, 0.72 ) }
    dend_39 { pt3dadd( -22.5414, -108.642, 13.1636, 0.48 ) }
    dend_39 { pt3dadd( -22.8167, -108.86, 13.134, 0.48 ) }
    dend_39 { pt3dadd( -22.9783, -108.968, 13.1168, 0.12 ) }
    dend_39 { pt3dadd( -23.4671, -109.226, 13.0659, 0.12 ) }
    dend_39 { pt3dadd( -24.276, -109.563, 12.9909, 0.12 ) }
    dend_39 { pt3dadd( -24.8946, -109.797, 12.9437, 0.12 ) }
    dend_39 { pt3dadd( -26.6916, -115.084, 13.1938, 0.12 ) }
    dend_39 { pt3dadd( -28.8707, -120.206, 13.5064, 0.12 ) }
    dend_39 { pt3dadd( -31.9795, -124.744, 12.9587, 0.12 ) }
    dend_39 { pt3dadd( -35.4133, -129.03, 13.3961, 0.12 ) }
    dend_39 { pt3dadd( -38.4585, -133.536, 14.3758, 0.12 ) }
    dend_39 { pt3dadd( -41.5147, -138.024, 15.3936, 0.12 ) }
    dend_39 { pt3dadd( -45.3084, -141.984, 15.5647, 0.12 ) }
    dend_39 { pt3dadd( -49.6144, -145.22, 14.7881, 0.12 ) }
    dend_39 { pt3dadd( -54.0866, -147.943, 13.4039, 0.12 ) }
    dend_39 { pt3dadd( -59.0292, -149.891, 12.5266, 0.12 ) }
    dend_39 { pt3dadd( -63.969, -151.996, 12.0556, 0.12 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 28/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -7.51449, -29.5117, 3.70548, 0.48 ) }
    dend_34 { pt3dadd( -8.18756, -30.0794, 4.05346, 0.48 ) }
    dend_34 { pt3dadd( -8.71136, -30.5381, 4.30166, 0.48 ) }
    dend_34 { pt3dadd( -9.1567, -30.942, 4.5392, 0.48 ) }
    dend_34 { pt3dadd( -10.1663, -31.9387, 5.10279, 0.48 ) }
    dend_34 { pt3dadd( -10.5022, -32.2886, 5.28491, 0.48 ) }
    dend_34 { pt3dadd( -10.8279, -32.656, 5.45353, 0.36 ) }
    dend_34 { pt3dadd( -11.2074, -33.1372, 5.67419, 0.36 ) }
    dend_34 { pt3dadd( -11.5851, -33.6598, 5.8727, 0.72 ) }
    dend_34 { pt3dadd( -11.8952, -34.1422, 6.03635, 1.2 ) }
    dend_34 { pt3dadd( -12.2114, -34.7001, 6.17912, 1.2 ) }
    dend_34 { pt3dadd( -12.6005, -35.4845, 6.38315, 0.48 ) }
    dend_34 { pt3dadd( -12.8769, -36.1057, 6.53747, 0.36 ) }
    dend_34 { pt3dadd( -13.0908, -36.6427, 6.65537, 0.36 ) }
    dend_34 { pt3dadd( -13.3793, -37.3906, 6.78405, 0.84 ) }
    dend_34 { pt3dadd( -13.6065, -37.9681, 6.87289, 0.84 ) }
    dend_34 { pt3dadd( -13.9538, -38.8379, 6.97878, 0.36 ) }
    dend_34 { pt3dadd( -14.1831, -39.3927, 7.0272, 0.72 ) }
    dend_34 { pt3dadd( -14.4293, -39.9681, 7.05864, 0.84 ) }
    dend_34 { pt3dadd( -14.8942, -40.9809, 7.0964, 0.12 ) }
    dend_34 { pt3dadd( -15.3367, -41.8841, 7.10673, 0.12 ) }
    dend_34 { pt3dadd( -15.8989, -42.9478, 7.12648, 0.12 ) }
    dend_34 { pt3dadd( -16.2169, -43.4947, 7.13909, 0.6 ) }
    dend_34 { pt3dadd( -16.4299, -43.8512, 7.14719, 0.6 ) }
    dend_34 { pt3dadd( -16.794, -44.4709, 7.16042, 0.12 ) }
    dend_34 { pt3dadd( -17.0307, -44.8937, 7.17535, 0.12 ) }
    dend_34 { pt3dadd( -17.3298, -45.4805, 7.20485, 0.6 ) }
    dend_34 { pt3dadd( -17.7116, -46.3157, 7.27774, 0.6 ) }
    dend_34 { pt3dadd( -17.8874, -46.7465, 7.32499, 0.6 ) }
    dend_34 { pt3dadd( -18.0903, -47.3104, 7.39195, 0.48 ) }
    dend_34 { pt3dadd( -18.256, -47.8447, 7.47602, 0.72 ) }
    dend_34 { pt3dadd( -18.4128, -48.3935, 7.58934, 0.72 ) }
    dend_34 { pt3dadd( -18.5862, -49.0843, 7.75843, 0.36 ) }
    dend_34 { pt3dadd( -18.6386, -49.2973, 7.81582, 0.36 ) }
    dend_34 { pt3dadd( -18.8701, -50.0303, 8.00899, 0.6 ) }
    dend_34 { pt3dadd( -19.1581, -50.7727, 8.18351, 0.36 ) }
    dend_34 { pt3dadd( -19.2693, -51.014, 8.24239, 0.24 ) }
    dend_34 { pt3dadd( -19.4869, -51.4334, 8.34972, 0.24 ) }
    dend_34 { pt3dadd( -19.735, -51.8787, 8.45692, 0.24 ) }
    dend_34 { pt3dadd( -20.1808, -52.6586, 8.63971, 0.6 ) }
    dend_34 { pt3dadd( -20.4646, -53.16, 8.75192, 0.6 ) }
    dend_34 { pt3dadd( -20.847, -53.8627, 8.87996, 0.48 ) }
    dend_34 { pt3dadd( -20.9508, -54.071, 8.91545, 0.48 ) }
    dend_34 { pt3dadd( -21.1633, -54.5475, 8.9923, 0.36 ) }
    dend_34 { pt3dadd( -21.4919, -55.3667, 9.13122, 0.36 ) }
    dend_34 { pt3dadd( -21.6183, -55.6989, 9.19394, 0.48 ) }
    dend_34 { pt3dadd( -21.8829, -56.3761, 9.31731, 0.48 ) }
    dend_34 { pt3dadd( -22.1105, -56.9236, 9.41953, 0.72 ) }
    dend_34 { pt3dadd( -22.2521, -57.2397, 9.49006, 0.84 ) }
    dend_34 { pt3dadd( -22.607, -57.9864, 9.69469, 0.72 ) }
    dend_34 { pt3dadd( -22.8989, -58.5797, 9.87461, 0.36 ) }
    dend_34 { pt3dadd( -23.181, -59.1097, 10.0409, 0.36 ) }
    dend_34 { pt3dadd( -23.4679, -59.5923, 10.2168, 0.24 ) }
    dend_34 { pt3dadd( -23.925, -60.2984, 10.4906, 0.24 ) }
    dend_34 { pt3dadd( -24.2566, -60.7919, 10.6789, 0.12 ) }
    dend_34 { pt3dadd( -24.5743, -61.2671, 10.8471, 0.12 ) }
    dend_34 { pt3dadd( -24.8473, -61.6826, 10.9943, 0.12 ) }
    dend_34 { pt3dadd( -25.1619, -62.1651, 11.198, 0.12 ) }
    dend_34 { pt3dadd( -25.3663, -62.4914, 11.3675, 0.12 ) }
    dend_34 { pt3dadd( -25.5263, -62.7688, 11.5493, 0.12 ) }
    dend_34 { pt3dadd( -25.6241, -62.98, 11.6858, 0.72 ) }
    dend_34 { pt3dadd( -25.8041, -63.4422, 11.9909, 0.96 ) }
    dend_34 { pt3dadd( -26.0373, -64.1444, 12.4359, 0.84 ) }
    dend_34 { pt3dadd( -26.239, -64.8779, 12.8532, 0.72 ) }
    dend_34 { pt3dadd( -26.3876, -65.5083, 13.1946, 0.36 ) }
    dend_34 { pt3dadd( -26.5647, -66.3325, 13.5919, 0.24 ) }
    dend_34 { pt3dadd( -26.6365, -66.6878, 13.7319, 0.84 ) }
    dend_34 { pt3dadd( -26.7001, -67.0031, 13.8247, 0.84 ) }
    dend_34 { pt3dadd( -26.8485, -67.6882, 13.9465, 0.72 ) }
    dend_34 { pt3dadd( -27.0201, -68.427, 14.0359, 0.48 ) }
    dend_34 { pt3dadd( -27.2036, -69.1393, 14.121, 0.24 ) }
    dend_34 { pt3dadd( -27.4105, -69.8534, 14.2141, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_34 { pt3dadd( -27.5655, -70.3436, 14.2946, 0.12 ) }
    dend_34 { pt3dadd( -28.0051, -71.6223, 14.5406, 0.12 ) }
    dend_34 { pt3dadd( -28.343, -72.4656, 14.7171, 0.12 ) }
    dend_34 { pt3dadd( -28.5111, -72.8567, 14.8103, 0.48 ) }
    dend_34 { pt3dadd( -28.8195, -73.5626, 14.9987, 0.6 ) }
    dend_34 { pt3dadd( -29.195, -74.4286, 15.2329, 0.48 ) }
    dend_34 { pt3dadd( -29.4487, -74.9958, 15.3774, 0.36 ) }
    dend_34 { pt3dadd( -29.8342, -75.798, 15.5741, 0.48 ) }
    dend_34 { pt3dadd( -30.216, -76.56, 15.7354, 0.24 ) }
    dend_34 { pt3dadd( -30.4763, -77.0785, 15.8442, 0.24 ) }
    dend_34 { pt3dadd( -30.9509, -78.0577, 16.0499, 0.24 ) }
    dend_34 { pt3dadd( -31.3901, -79.0362, 16.2374, 0.24 ) }
    dend_34 { pt3dadd( -31.6403, -79.6279, 16.3424, 0.6 ) }
    dend_34 { pt3dadd( -31.7272, -79.866, 16.3759, 0.6 ) }
    dend_34 { pt3dadd( -31.9759, -80.7006, 16.4513, 0.24 ) }
    dend_34 { pt3dadd( -32.136, -81.3827, 16.4981, 0.24 ) }
    dend_34 { pt3dadd( -32.2414, -82.0875, 16.5275, 0.48 ) }
    dend_34 { pt3dadd( -32.2742, -82.7999, 16.4926, 0.36 ) }
    dend_34 { pt3dadd( -32.2644, -83.8624, 16.3643, 0.36 ) }
    dend_34 { pt3dadd( -32.2378, -84.7048, 16.2176, 0.36 ) }
    dend_34 { pt3dadd( -32.2319, -84.9634, 16.158, 0.84 ) }
    dend_34 { pt3dadd( -32.2354, -85.3197, 16.0744, 0.84 ) }
    dend_34 { pt3dadd( -32.2781, -86.6316, 15.788, 0.24 ) }
    dend_34 { pt3dadd( -32.2988, -86.9719, 15.7266, 0.24 ) }
    dend_34 { pt3dadd( -32.3372, -87.2315, 15.6859, 0.24 ) }
    dend_34 { pt3dadd( -32.5508, -88.1583, 15.5844, 0.24 ) }
    dend_34 { pt3dadd( -32.7346, -88.8777, 15.537, 0.36 ) }
    dend_34 { pt3dadd( -32.8183, -89.1857, 15.5278, 0.12 ) }
    dend_34 { pt3dadd( -32.9748, -89.7699, 15.5321, 0.12 ) }
    dend_34 { pt3dadd( -33.2712, -91.0544, 15.541, 0.12 ) }
    dend_34 { pt3dadd( -33.54, -92.5235, 15.5508, 0.12 ) }
    dend_34 { pt3dadd( -33.7009, -93.6976, 15.5577, 0.12 ) }
    dend_34 { pt3dadd( -33.7715, -94.278, 15.5589, 0.48 ) }
    dend_34 { pt3dadd( -33.8532, -94.9968, 15.5584, 0.48 ) }
    dend_34 { pt3dadd( -33.9072, -95.626, 15.5606, 0.48 ) }
    dend_34 { pt3dadd( -33.9452, -96.4665, 15.568, 0.36 ) }
    dend_34 { pt3dadd( -33.9642, -96.9322, 15.5739, 0.36 ) }
    dend_34 { pt3dadd( -34.0378, -97.6902, 15.5836, 0.48 ) }
    dend_34 { pt3dadd( -34.1028, -98.0668, 15.5877, 0.12 ) }
    dend_34 { pt3dadd( -34.1739, -98.3122, 15.6065, 0.12 ) }
    dend_34 { pt3dadd( -34.3086, -98.6571, 15.6557, 0.12 ) }
    dend_34 { pt3dadd( -34.5279, -99.1258, 15.7541, 0.6 ) }
    dend_34 { pt3dadd( -34.7334, -99.5585, 15.8676, 0.84 ) }
    dend_34 { pt3dadd( -34.8426, -99.7877, 15.9359, 0.84 ) }
    dend_34 { pt3dadd( -35.291, -100.676, 16.1903, 0.12 ) }
    dend_34 { pt3dadd( -35.3962, -100.88, 16.2406, 0.12 ) }
    dend_34 { pt3dadd( -35.5073, -101.114, 16.2882, 0.12 ) }
    dend_34 { pt3dadd( -35.6116, -101.341, 16.3363, 0.12 ) }
    dend_34 { pt3dadd( -35.9229, -102.019, 16.4695, 0.36 ) }
    dend_34 { pt3dadd( -36.2029, -102.621, 16.6066, 0.36 ) }
    dend_34 { pt3dadd( -36.5811, -103.413, 16.7876, 0.36 ) }
    dend_34 { pt3dadd( -36.8344, -103.915, 16.9217, 0.36 ) }
    dend_34 { pt3dadd( -37.1569, -104.564, 17.1092, 0.6 ) }
    dend_34 { pt3dadd( -37.3742, -104.993, 17.2391, 0.6 ) }
    dend_34 { pt3dadd( -37.7815, -105.759, 17.4739, 0.36 ) }
    dend_34 { pt3dadd( -37.9416, -106.038, 17.5562, 0.36 ) }
    dend_34 { pt3dadd( -38.1571, -106.392, 17.6626, 0.36 ) }
    dend_34 { pt3dadd( -38.5214, -106.961, 17.8133, 0.36 ) }
    dend_34 { pt3dadd( -38.7811, -107.38, 17.8829, 0.36 ) }
    dend_34 { pt3dadd( -39.2261, -108.096, 17.957, 0.48 ) }
    dend_34 { pt3dadd( -39.4545, -108.442, 17.9453, 0.48 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 183.69, 48.3691, 118.924, 0.48 ) }
    dend_30 { pt3dadd( 192.753, 51.2037, 124.738, 0.48 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 63/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 183.69, 48.3691, 118.924, 0.36 ) }
    dend_29 { pt3dadd( 193.495, 51.4295, 126.076, 0.48 ) }
    dend_29 { pt3dadd( 202.839, 53.7909, 134.021, 0.48 ) }
    dend_29 { pt3dadd( 211.009, 55.5398, 143.277, 0.48 ) }
    dend_29 { pt3dadd( 219.668, 55.8208, 152.21, 0.48 ) }
    dend_29 { pt3dadd( 227.14, 53.8104, 161.944, 0.48 ) }
    dend_29 { pt3dadd( 235.956, 50.2317, 169.969, 0.48 ) }
    dend_29 { pt3dadd( 244.579, 44.5037, 176.969, 0.48 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 71/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -75.4573, -160.953, -98.0537, 0.12 ) }
    dend_18 { pt3dadd( -75.6654, -161.04, -98.7698, 0.12 ) }
    dend_18 { pt3dadd( -75.7833, -161.092, -99.1614, 0.12 ) }
    dend_18 { pt3dadd( -76.2321, -161.277, -100.547, 0.6 ) }
    dend_18 { pt3dadd( -76.3549, -161.345, -100.982, 0.6 ) }
    dend_18 { pt3dadd( -76.5463, -161.482, -101.709, 0.36 ) }
    dend_18 { pt3dadd( -76.7285, -161.617, -102.376, 0.36 ) }
    dend_18 { pt3dadd( -76.8105, -161.693, -102.663, 0.6 ) }
    dend_18 { pt3dadd( -76.8774, -161.759, -102.871, 0.6 ) }
    dend_18 { pt3dadd( -77.3974, -162.314, -104.237, 0.24 ) }
    dend_18 { pt3dadd( -77.6364, -162.582, -104.83, 0.24 ) }
    dend_18 { pt3dadd( -77.7666, -162.742, -105.165, 0.24 ) }
    dend_18 { pt3dadd( -78.0249, -163.079, -105.846, 0.24 ) }
    dend_18 { pt3dadd( -78.1451, -163.246, -106.17, 0.24 ) }
    dend_18 { pt3dadd( -78.4133, -163.631, -106.892, 0.6 ) }
    dend_18 { pt3dadd( -78.4928, -163.736, -107.081, 0.6 ) }
    dend_18 { pt3dadd( -78.975, -164.386, -108.265, 0.12 ) }
    dend_18 { pt3dadd( -79.0525, -164.496, -108.467, 0.12 ) }
    dend_18 { pt3dadd( -79.1445, -164.614, -108.699, 0.48 ) }
    dend_18 { pt3dadd( -79.3964, -164.862, -109.224, 0.12 ) }
    dend_18 { pt3dadd( -79.5447, -164.958, -109.436, 0.12 ) }
    dend_18 { pt3dadd( -79.7178, -165.041, -109.635, 0.12 ) }
    dend_18 { pt3dadd( -79.8817, -165.094, -109.765, 0.12 ) }
    dend_18 { pt3dadd( -80.1154, -165.165, -109.97, 0.48 ) }
    dend_18 { pt3dadd( -80.5303, -165.266, -110.337, 0.6 ) }
    dend_18 { pt3dadd( -80.762, -165.312, -110.53, 0.6 ) }
    dend_18 { pt3dadd( -81.1244, -165.388, -110.836, 0.12 ) }
    dend_18 { pt3dadd( -81.3915, -165.459, -111.091, 0.12 ) }
    dend_18 { pt3dadd( -81.7096, -165.565, -111.417, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_18 { pt3dadd( -82.0202, -165.706, -111.735, 0.12 ) }
    dend_18 { pt3dadd( -82.2497, -165.84, -111.953, 0.6 ) }
    dend_18 { pt3dadd( -82.4678, -165.985, -112.149, 0.6 ) }
    dend_18 { pt3dadd( -82.968, -166.351, -112.619, 0.12 ) }
    dend_18 { pt3dadd( -83.1007, -166.457, -112.749, 0.12 ) }
    dend_18 { pt3dadd( -83.395, -166.717, -113.057, 0.12 ) }
    dend_18 { pt3dadd( -83.5921, -166.901, -113.273, 0.6 ) }
    dend_18 { pt3dadd( -83.6862, -166.991, -113.382, 0.6 ) }
    dend_18 { pt3dadd( -84.2105, -167.499, -113.97, 0.12 ) }
    dend_18 { pt3dadd( -84.4338, -167.724, -114.193, 0.12 ) }
    dend_18 { pt3dadd( -84.9326, -168.24, -114.678, 0.24 ) }
    dend_18 { pt3dadd( -85.2191, -168.534, -114.958, 0.36 ) }
    dend_18 { pt3dadd( -85.4907, -168.802, -115.211, 0.12 ) }
    dend_18 { pt3dadd( -85.8141, -169.102, -115.478, 0.12 ) }
    dend_18 { pt3dadd( -86.2499, -169.462, -115.766, 0.12 ) }
    dend_18 { pt3dadd( -86.4931, -169.637, -115.939, 0.48 ) }
    dend_18 { pt3dadd( -86.744, -169.769, -116.118, 0.12 ) }
    dend_18 { pt3dadd( -86.9202, -169.819, -116.257, 0.12 ) }
    dend_18 { pt3dadd( -87.2248, -169.842, -116.497, 0.12 ) }
    dend_18 { pt3dadd( -87.416, -169.83, -116.652, 0.36 ) }
    dend_18 { pt3dadd( -87.9992, -169.743, -117.13, 0.12 ) }
    dend_18 { pt3dadd( -88.3176, -169.696, -117.379, 0.12 ) }
    dend_18 { pt3dadd( -88.753, -169.647, -117.69, 0.12 ) }
    dend_18 { pt3dadd( -89.0138, -169.63, -117.863, 0.48 ) }
    dend_18 { pt3dadd( -89.3058, -169.629, -118.039, 0.48 ) }
    dend_18 { pt3dadd( -89.5979, -169.641, -118.184, 0.36 ) }
    dend_18 { pt3dadd( -89.8299, -169.658, -118.249, 0.36 ) }
    dend_18 { pt3dadd( -90.165, -169.684, -118.31, 0.36 ) }
    dend_18 { pt3dadd( -90.4383, -169.695, -118.339, 0.36 ) }
    dend_18 { pt3dadd( -90.6491, -169.7, -118.353, 0.36 ) }
    dend_18 { pt3dadd( -91.259, -169.709, -118.372, 0.48 ) }
    dend_18 { pt3dadd( -92.0614, -169.746, -118.378, 0.12 ) }
    dend_18 { pt3dadd( -92.3717, -169.782, -118.381, 0.12 ) }
    dend_18 { pt3dadd( -92.7488, -169.849, -118.39, 0.12 ) }
    dend_18 { pt3dadd( -93.0149, -169.926, -118.403, 0.12 ) }
    dend_18 { pt3dadd( -93.21, -170.025, -118.42, 0.12 ) }
    dend_18 { pt3dadd( -93.5503, -170.31, -118.463, 0.12 ) }
    dend_18 { pt3dadd( -93.9723, -170.771, -118.537, 0.6 ) }
    dend_18 { pt3dadd( -94.0922, -170.93, -118.554, 0.12 ) }
    dend_18 { pt3dadd( -94.3102, -171.262, -118.576, 0.12 ) }
    dend_18 { pt3dadd( -94.6808, -171.867, -118.607, 0.12 ) }
    dend_18 { pt3dadd( -95.0025, -172.413, -118.632, 0.12 ) }
    dend_18 { pt3dadd( -95.2149, -172.777, -118.648, 0.12 ) }
    dend_18 { pt3dadd( -95.4524, -173.191, -118.661, 0.12 ) }
    dend_18 { pt3dadd( -95.5303, -173.329, -118.663, 0.12 ) }
    dend_18 { pt3dadd( -95.6962, -173.618, -118.669, 0.36 ) }
    dend_18 { pt3dadd( -95.7875, -173.777, -118.675, 0.12 ) }
    dend_18 { pt3dadd( -96.0827, -174.269, -118.705, 0.12 ) }
    dend_18 { pt3dadd( -96.3383, -174.669, -118.736, 0.12 ) }
    dend_18 { pt3dadd( -96.5211, -174.939, -118.762, 0.6 ) }
    dend_18 { pt3dadd( -96.7694, -175.305, -118.798, 0.6 ) }
    dend_18 { pt3dadd( -96.9667, -175.599, -118.827, 0.12 ) }
    dend_18 { pt3dadd( -97.2666, -176.035, -118.878, 0.12 ) }
    dend_18 { pt3dadd( -97.5225, -176.396, -118.928, 0.12 ) }
    dend_18 { pt3dadd( -97.7288, -176.681, -118.97, 0.6 ) }
    dend_18 { pt3dadd( -97.9148, -176.943, -119.005, 0.6 ) }
    dend_18 { pt3dadd( -98.1135, -177.238, -119.038, 0.6 ) }
    dend_18 { pt3dadd( -98.2261, -177.406, -119.054, 0.12 ) }
    dend_18 { pt3dadd( -98.5881, -177.94, -119.106, 0.12 ) }
    dend_18 { pt3dadd( -98.8996, -178.401, -119.172, 0.12 ) }
    dend_18 { pt3dadd( -99.138, -178.741, -119.234, 0.12 ) }
    dend_18 { pt3dadd( -99.4399, -179.161, -119.321, 0.12 ) }
    dend_18 { pt3dadd( -99.7054, -179.529, -119.403, 0.12 ) }
    dend_18 { pt3dadd( -99.9059, -179.814, -119.463, 0.36 ) }
    dend_18 { pt3dadd( -100.151, -180.183, -119.576, 0.12 ) }
    dend_18 { pt3dadd( -100.292, -180.409, -119.658, 0.12 ) }
    dend_18 { pt3dadd( -100.57, -180.878, -119.839, 0.12 ) }
    dend_18 { pt3dadd( -100.89, -181.428, -120.045, 0.12 ) }
    dend_18 { pt3dadd( -101.11, -181.814, -120.188, 0.12 ) }
    dend_18 { pt3dadd( -101.5, -182.587, -120.576, 0.12 ) }
    dend_18 { pt3dadd( -101.607, -182.814, -120.707, 0.36 ) }
    dend_18 { pt3dadd( -101.74, -183.115, -120.91, 0.12 ) }
    dend_18 { pt3dadd( -101.996, -183.817, -121.528, 0.12 ) }
    dend_18 { pt3dadd( -102.082, -184.062, -121.783, 0.6 ) }
    dend_18 { pt3dadd( -102.467, -185.135, -122.997, 0.12 ) }
    dend_18 { pt3dadd( -102.572, -185.419, -123.349, 0.12 ) }
    dend_18 { pt3dadd( -102.619, -185.547, -123.518, 0.6 ) }
    dend_18 { pt3dadd( -102.938, -186.357, -124.675, 0.12 ) }
    dend_18 { pt3dadd( -103.106, -186.703, -125.217, 0.12 ) }
    dend_18 { pt3dadd( -103.197, -186.816, -125.386, 0.12 ) }
    dend_18 { pt3dadd( -103.419, -186.981, -125.618, 0.36 ) }
    dend_18 { pt3dadd( -103.699, -187.152, -125.872, 0.12 ) }
    dend_18 { pt3dadd( -103.946, -187.272, -126.03, 0.12 ) }
    dend_18 { pt3dadd( -104.303, -187.413, -126.182, 0.12 ) }
    dend_18 { pt3dadd( -104.96, -187.668, -126.46, 0.12 ) }
    dend_18 { pt3dadd( -105.799, -187.993, -126.807, 0.12 ) }
    dend_18 { pt3dadd( -106.038, -188.087, -126.898, 0.12 ) }
    dend_18 { pt3dadd( -106.799, -188.368, -127.194, 0.12 ) }
    dend_18 { pt3dadd( -106.951, -188.427, -127.251, 0.48 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -75.4573, -160.953, -98.0537, 0.12 ) }
    dend_17 { pt3dadd( -75.453, -160.997, -98.0709, 0.12 ) }
    dend_17 { pt3dadd( -75.4453, -161.128, -98.111, 0.6 ) }
    dend_17 { pt3dadd( -75.3818, -161.526, -98.2045, 0.72 ) }
    dend_17 { pt3dadd( -75.1667, -162.387, -98.4494, 0.48 ) }
    dend_17 { pt3dadd( -75.0108, -162.911, -98.595, 0.48 ) }
    dend_17 { pt3dadd( -74.8535, -163.438, -98.7329, 0.24 ) }
    dend_17 { pt3dadd( -74.6742, -164.064, -98.9111, 0.24 ) }
    dend_17 { pt3dadd( -74.4458, -164.992, -99.1748, 0.24 ) }
    dend_17 { pt3dadd( -74.2065, -165.987, -99.4494, 0.12 ) }
    dend_17 { pt3dadd( -74.0245, -166.688, -99.6278, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_17 { pt3dadd( -73.8025, -167.446, -99.8338, 0.12 ) }
    dend_17 { pt3dadd( -73.5892, -168.076, -100.021, 0.48 ) }
    dend_17 { pt3dadd( -73.3208, -168.987, -100.295, 0.36 ) }
    dend_17 { pt3dadd( -73.2669, -169.407, -100.398, 0.12 ) }
    dend_17 { pt3dadd( -73.2365, -169.933, -100.563, 0.12 ) }
    dend_17 { pt3dadd( -73.2159, -170.219, -100.672, 0.36 ) }
    dend_17 { pt3dadd( -73.1709, -170.688, -100.853, 0.12 ) }
    dend_17 { pt3dadd( -73.0618, -171.635, -101.134, 0.12 ) }
    dend_17 { pt3dadd( -72.8732, -173.138, -101.512, 0.12 ) }
    dend_17 { pt3dadd( -72.6733, -174.768, -101.899, 0.12 ) }
    dend_17 { pt3dadd( -72.5359, -175.848, -102.129, 0.12 ) }
    dend_17 { pt3dadd( -72.4272, -176.52, -102.251, 0.12 ) }
    dend_17 { pt3dadd( -72.147, -177.7, -102.433, 0.48 ) }
    dend_17 { pt3dadd( -71.9798, -178.153, -102.488, 0.48 ) }
    dend_17 { pt3dadd( -71.6251, -178.884, -102.573, 0.24 ) }
    dend_17 { pt3dadd( -71.3106, -179.504, -102.626, 0.24 ) }
    dend_17 { pt3dadd( -71.0457, -180.039, -102.705, 0.24 ) }
    dend_17 { pt3dadd( -70.6404, -180.888, -102.904, 0.12 ) }
    dend_17 { pt3dadd( -70.1888, -181.916, -103.223, 0.12 ) }
    dend_17 { pt3dadd( -69.8511, -182.76, -103.479, 0.12 ) }
    dend_17 { pt3dadd( -69.71, -183.128, -103.596, 0.24 ) }
    dend_17 { pt3dadd( -69.4197, -183.853, -103.861, 0.36 ) }
    dend_17 { pt3dadd( -69.1636, -184.479, -104.101, 0.12 ) }
    dend_17 { pt3dadd( -69.0223, -184.84, -104.234, 0.12 ) }
    dend_17 { pt3dadd( -68.8337, -185.382, -104.418, 0.12 ) }
    dend_17 { pt3dadd( -68.5957, -186.141, -104.614, 0.36 ) }
    dend_17 { pt3dadd( -68.2945, -187.076, -104.809, 0.12 ) }
    dend_17 { pt3dadd( -68.0788, -187.712, -104.899, 0.12 ) }
    dend_17 { pt3dadd( -67.8984, -188.228, -104.965, 0.12 ) }
    dend_17 { pt3dadd( -67.5929, -189.132, -105.079, 0.12 ) }
    dend_17 { pt3dadd( -67.3112, -190.059, -105.171, 0.12 ) }
    dend_17 { pt3dadd( -67.2035, -190.426, -105.194, 0.12 ) }
    dend_17 { pt3dadd( -66.9091, -191.498, -105.221, 0.6 ) }
    dend_17 { pt3dadd( -66.63, -192.598, -105.228, 0.12 ) }
    dend_17 { pt3dadd( -66.1548, -194.401, -105.235, 0.12 ) }
    dend_17 { pt3dadd( -65.4804, -196.875, -105.237, 0.12 ) }
    dend_17 { pt3dadd( -64.747, -199.604, -105.226, 0.12 ) }
    dend_17 { pt3dadd( -64.4596, -200.73, -105.214, 0.12 ) }
    dend_17 { pt3dadd( -64.2059, -201.827, -105.169, 0.48 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 39/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -39.4545, -108.442, 17.9453, 0.48 ) }
    dend_38 { pt3dadd( -39.682, -109.527, 18.0892, 0.48 ) }
    dend_38 { pt3dadd( -39.8912, -110.572, 18.1954, 0.36 ) }
    dend_38 { pt3dadd( -39.981, -111.046, 18.2344, 0.12 ) }
    dend_38 { pt3dadd( -40.124, -111.845, 18.3454, 0.12 ) }
    dend_38 { pt3dadd( -40.2563, -112.536, 18.4599, 0.12 ) }
    dend_38 { pt3dadd( -40.3458, -112.979, 18.5387, 0.6 ) }
    dend_38 { pt3dadd( -40.4835, -113.555, 18.6195, 0.6 ) }
    dend_38 { pt3dadd( -40.5692, -113.896, 18.6302, 0.6 ) }
    dend_38 { pt3dadd( -40.8046, -115.019, 18.5585, 0.12 ) }
    dend_38 { pt3dadd( -40.8868, -115.594, 18.4746, 0.12 ) }
    dend_38 { pt3dadd( -40.8981, -115.947, 18.3931, 0.12 ) }
    dend_38 { pt3dadd( -40.7081, -116.949, 18.0481, 0.12 ) }
    dend_38 { pt3dadd( -39.5643, -118.55, 17.2283, 0.12 ) }
    dend_38 { pt3dadd( -38.9439, -118.989, 16.94, 0.12 ) }
    dend_38 { pt3dadd( -38.359, -119.272, 16.7186, 0.12 ) }
    dend_38 { pt3dadd( -37.2631, -119.677, 16.4098, 0.12 ) }
    dend_38 { pt3dadd( -36.2049, -120.015, 16.1856, 0.12 ) }
    dend_38 { pt3dadd( -35.3146, -120.228, 16.0506, 0.12 ) }
    dend_38 { pt3dadd( -34.5788, -120.355, 16.0133, 0.36 ) }
    dend_38 { pt3dadd( -34.3327, -120.401, 16.0007, 0.12 ) }
    dend_38 { pt3dadd( -33.3648, -120.664, 15.9483, 0.12 ) }
    dend_38 { pt3dadd( -32.7699, -120.921, 15.9128, 0.24 ) }
    dend_38 { pt3dadd( -29.0159, -129.881, 15.7707, 0.24 ) }
    dend_38 { pt3dadd( -24.8132, -138.617, 15.5871, 0.24 ) }
    dend_38 { pt3dadd( -20.8412, -147.473, 15.5554, 0.24 ) }
    dend_38 { pt3dadd( -16.5769, -156.143, 14.789, 0.24 ) }
    dend_38 { pt3dadd( -12.2298, -164.764, 15.534, 0.24 ) }
    dend_38 { pt3dadd( -6.72903, -172.608, 14.6034, 0.24 ) }
    dend_38 { pt3dadd( -0.135326, -179.341, 13.0674, 0.24 ) }
    dend_38 { pt3dadd( 5.04861, -186.775, 9.89899, 0.24 ) }
    dend_38 { pt3dadd( 10.6286, -194.204, 7.48767, 0.24 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -39.4545, -108.442, 17.9453, 0.12 ) }
    dend_35 { pt3dadd( -40.083, -108.549, 17.7254, 0.12 ) }
    dend_35 { pt3dadd( -40.4327, -108.662, 17.6206, 0.12 ) }
    dend_35 { pt3dadd( -41.2151, -108.958, 17.2974, 0.12 ) }
    dend_35 { pt3dadd( -41.5476, -109.072, 17.1471, 0.12 ) }
    dend_35 { pt3dadd( -42.3128, -109.333, 16.8011, 0.12 ) }
    dend_35 { pt3dadd( -43.9492, -109.891, 16.0611, 0.12 ) }
    dend_35 { pt3dadd( -44.3189, -110.051, 15.8931, 0.12 ) }
    dend_35 { pt3dadd( -45.2989, -110.541, 15.4626, 0.84 ) }
    dend_35 { pt3dadd( -46.0661, -110.986, 15.165, 0.84 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 81/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -46.0661, -110.986, 15.165, 0.12 ) }
    dend_37 { pt3dadd( -46.472, -110.87, 15.102, 0.12 ) }
    dend_37 { pt3dadd( -47.111, -110.74, 15.0046, 0.12 ) }
    dend_37 { pt3dadd( -47.9461, -110.612, 14.878, 0.12 ) }
    dend_37 { pt3dadd( -49.0351, -110.49, 14.7132, 0.12 ) }
    dend_37 { pt3dadd( -49.9197, -110.416, 14.5796, 0.12 ) }
    dend_37 { pt3dadd( -51.4965, -110.271, 14.4173, 0.24 ) }
    dend_37 { pt3dadd( -52.0085, -110.243, 14.3837, 0.12 ) }
    dend_37 { pt3dadd( -52.514, -110.235, 14.3704, 0.12 ) }
    dend_37 { pt3dadd( -53.215, -110.215, 14.3793, 0.12 ) }
    dend_37 { pt3dadd( -53.5264, -110.178, 14.3944, 0.12 ) }
    dend_37 { pt3dadd( -54.7886, -109.882, 14.4717, 0.24 ) }
    dend_37 { pt3dadd( -55.4575, -109.665, 14.5123, 0.12 ) }
    dend_37 { pt3dadd( -55.8439, -109.529, 14.5469, 0.12 ) }
    dend_37 { pt3dadd( -56.7819, -109.203, 14.6356, 0.36 ) }
    dend_37 { pt3dadd( -57.5766, -108.952, 14.7374, 0.36 ) }
    dend_37 { pt3dadd( -58.4633, -108.715, 14.8543, 0.36 ) }
    dend_37 { pt3dadd( -58.8629, -108.637, 14.8992, 0.12 ) }
    dend_37 { pt3dadd( -60.0345, -108.463, 15.0469, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_37 { pt3dadd( -60.8196, -108.426, 15.1702, 0.12 ) }
    dend_37 { pt3dadd( -61.7751, -108.535, 15.3461, 1.44 ) }
    dend_37 { pt3dadd( -62.1512, -108.634, 15.429, 1.92 ) }
    dend_37 { pt3dadd( -62.6994, -108.857, 15.5651, 1.92 ) }
    dend_37 { pt3dadd( -63.1943, -109.148, 15.6914, 1.92 ) }
    dend_37 { pt3dadd( -63.9707, -109.907, 15.8157, 0.12 ) }
    dend_37 { pt3dadd( -64.33, -110.553, 15.8396, 0.12 ) }
    dend_37 { pt3dadd( -64.475, -111.153, 15.7948, 0.36 ) }
    dend_37 { pt3dadd( -64.5125, -111.478, 15.7691, 0.12 ) }
    dend_37 { pt3dadd( -64.492, -112.169, 15.7033, 0.12 ) }
    dend_37 { pt3dadd( -64.2207, -113.661, 15.5001, 1.68 ) }
    dend_37 { pt3dadd( -64.0552, -114.063, 15.373, 1.92 ) }
    dend_37 { pt3dadd( -63.9123, -114.312, 15.2646, 1.92 ) }
    dend_37 { pt3dadd( -71.9476, -116.162, 16.0446, 1.92 ) }
    dend_37 { pt3dadd( -80.0907, -117.598, 16.3566, 1.92 ) }
    dend_37 { pt3dadd( -88.2854, -117.84, 17.4029, 1.92 ) }
    dend_37 { pt3dadd( -96.2706, -119.277, 19.0324, 1.92 ) }
    dend_37 { pt3dadd( -103.893, -121.64, 21.2982, 1.92 ) }
    dend_37 { pt3dadd( -111.346, -125.274, 22.1563, 1.92 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -46.0661, -110.986, 15.165, 0.48 ) }
    dend_36 { pt3dadd( -46.6503, -111.464, 15.0736, 0.48 ) }
    dend_36 { pt3dadd( -47.345, -111.849, 14.9703, 0.48 ) }
    dend_36 { pt3dadd( -48.3942, -112.335, 14.8174, 0.48 ) }
    dend_36 { pt3dadd( -49.1246, -112.65, 14.7126, 0.12 ) }
    dend_36 { pt3dadd( -50.473, -113.213, 14.4649, 0.12 ) }
    dend_36 { pt3dadd( -51.8667, -113.741, 14.1768, 0.12 ) }
    dend_36 { pt3dadd( -53.4088, -114.231, 13.8708, 0.12 ) }
    dend_36 { pt3dadd( -54.2421, -114.442, 13.6941, 0.12 ) }
    dend_36 { pt3dadd( -55.0029, -114.582, 13.5227, 0.12 ) }
    dend_36 { pt3dadd( -56.0236, -114.741, 13.272, 0.6 ) }
    dend_36 { pt3dadd( -56.8932, -114.86, 13.0215, 0.6 ) }
    dend_36 { pt3dadd( -67.3244, -119.578, 12.1904, 0.6 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_24 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_27 = new SectionList()
    apic_2 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_28 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_21 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_20 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_16 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_13 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_29 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_33 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_19 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_30 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_4 nseg = 11
    dend_26 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_10 nseg = 23
    dend_5 nseg = 11
    dend_4 nseg = 7
    dend_2 nseg = 3
    dend_1 nseg = 11
    apic_3 nseg = 5
    apic_2 nseg = 7
    dend_32 nseg = 5
    dend_28 nseg = 9
    dend_27 nseg = 3
    dend_21 nseg = 5
    dend_20 nseg = 5
    dend_16 nseg = 9
    dend_15 nseg = 9
    dend_13 nseg = 5
    dend_9 nseg = 3
    dend_8 nseg = 7
    dend_39 nseg = 7
    dend_34 nseg = 5
    dend_29 nseg = 5
    dend_18 nseg = 3
    dend_17 nseg = 3
    dend_38 nseg = 5
    dend_37 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_DBC_c9af6970b4_0_0


