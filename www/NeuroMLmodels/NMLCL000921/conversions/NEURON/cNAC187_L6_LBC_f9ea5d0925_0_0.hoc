// Cell: cNAC187_L6_LBC_f9ea5d0925_0_0
/*
{
  "id" : "cNAC187_L6_LBC_f9ea5d0925_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.84529, -4.87297, 0.0, 6.22486", "-6.02577, -4.47098, 0.0, 11.3263", "-5.20624, -4.06899, 0.0, 13.1262", "-4.38672, -3.66701, 0.0, 14.4968", "-3.56719, -3.26502, 0.0, 15.3488", "-2.74767, -2.86303, 0.0, 15.7521", "-1.92815, -2.46104, 0.0, 15.7984", "-1.10862, -2.05905, 0.0, 15.859", "-0.289096, -1.65706, 0.0, 15.958", "0.530429, -1.25507, 0.0, 16.0571", "1.34995, -0.853086, 0.0, 16.1345", "2.16948, -0.451097, 0.0, 16.3639", "2.989, -0.0491089, 0.0, 16.0828", "3.80853, 0.35288, 0.0, 15.4226", "4.62805, 0.754868, 0.0, 14.6331", "5.44758, 1.15686, 0.0, 13.8581", "6.2671, 1.55885, 0.0, 13.096", "7.08663, 1.96083, 0.0, 11.6592", "7.90615, 2.36282, 0.0, 9.60018", "8.72568, 2.76481, 0.0, 6.5333", "9.5452, 3.1668, 0.0, 3.66685" ]
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "10.8103, -0.952715, -5.53, 2.42", "10.8103, -0.952715, -5.53, 2.42", "11.8396, -0.25484, -6.20497, 2.28", "12.8156, 0.509294, -6.83497, 2.06", "13.4587, 1.04055, -7.24745, 1.76", "14.2746, 1.74541, -7.74592, 2.06", "15.3371, 2.68842, -8.36642, 1.54", "16.1338, 3.45079, -8.79923, 1.54", "16.4025, 3.73577, -8.93417, 1.62", "17.0168, 4.43108, -9.21485, 1.62", "17.5746, 5.08344, -9.46899, 1.18", "18.1388, 5.72149, -9.73894, 2.28", "18.7433, 6.34082, -10.0027, 2.64", "19.4413, 6.96447, -10.2871, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.5103, -3.61272, -3.85, 5.0", "8.5103, -3.61272, -3.85, 5.0", "9.34068, -5.39298, -4.66451, 1.98", "9.74022, -6.24957, -5.05642, 1.98", "10.394, -7.65114, -5.69767, 1.47", "11.1026, -9.17055, -6.39283, 2.06", "11.7936, -10.652, -7.07062, 2.57", "12.1115, -11.2851, -7.3507, 3.01" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.58973, -9.7592, 0.0, 3.01", "-1.58973, -9.7592, 0.0, 3.01", "-1.53815, -12.7212, 0.0512421, 1.76", "-1.49699, -15.0851, 0.092138, 2.2", "-1.46275, -17.0516, 0.126159, 2.86", "-1.43809, -18.4678, 0.150659, 3.09", "-1.41913, -19.5561, 0.169488, 3.09", "-1.41524, -20.11, 0.181785, 3.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-7.39973, 1.60278, -0.84, 3.31", "-7.39973, 1.60278, -0.84, 3.31", "-8.79951, 2.37386, -0.965766, 1.76", "-9.65387, 2.84451, -1.04253, 1.98", "-10.295, 3.19762, -1.10013, 1.98", "-11.3118, 3.75778, -1.19149, 2.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "6.35027, -0.297214, 9.36, 1.91", "6.39872, -0.280458, 9.3931, 1.91", "7.33058, 0.041806, 10.0298, 1.91", "8.39215, 0.408933, 10.7551, 1.91", "9.14804, 0.670344, 11.2716, 2.42", "9.82486, 0.904408, 11.7341, 2.57", "10.0453, 0.980638, 11.8847, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.10969, 1.50779, 6.17, 2.2", "-4.254, 1.59911, 6.28973, 2.2", "-6.00142, 2.7048, 7.73947, 2.2", "-7.69904, 3.77899, 9.1479, 2.06", "-8.87794, 4.52494, 10.126, 1.84", "-10.1568, 5.33412, 11.1869, 1.91", "-11.8326, 6.39453, 12.5773, 3.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.5452, 3.1668, 0.0, 0.993218", "23.0123, 9.77261, 0.0, 0.993218", "36.4794, 16.3784, 0.0, 0.993218" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "19.4413, 6.96447, -10.2871, 1.47", "20.6411, 6.70046, -11.2451, 1.47", "22.1124, 6.35616, -12.2399, 1.47", "23.6633, 5.93847, -13.1721, 1.47", "24.1, 5.79745, -13.4204, 0.81", "24.3652, 5.69967, -13.5747, 0.81", "24.6138, 5.60031, -13.73, 0.81", "25.689, 5.10707, -14.4533, 1.18", "26.0711, 4.92873, -14.6712, 1.18", "26.5627, 4.81173, -14.8888, 1.18", "27.1881, 4.76624, -15.2001, 1.18", "27.8342, 4.74422, -15.5268, 1.18", "28.3851, 4.71844, -15.8177, 1.18", "29.6286, 4.64326, -16.5559, 0.73", "31.0607, 4.54743, -17.4871, 1.03", "31.7088, 4.50662, -17.9261, 1.03", "32.333, 4.47252, -18.2919, 1.1", "33.381, 4.39396, -18.7686, 1.1", "34.2589, 4.31494, -19.062, 1.1", "35.0656, 4.29291, -19.1746, 1.1", "35.5758, 4.29346, -19.2064, 1.1", "37.0267, 4.30067, -19.3863, 1.1", "38.9397, 4.32486, -19.7669, 0.66", "40.5094, 4.19345, -20.2869, 0.81", "41.4442, 4.0498, -20.6813, 1.4", "42.7402, 3.79967, -21.2889, 2.5", "44.8698, 3.31617, -22.4034, 0.66", "46.4806, 2.92181, -23.3484, 2.79", "49.8763, 2.06091, -25.5712, 0.88", "51.014, 1.76991, -26.3948, 0.95", "52.3972, 1.42822, -27.4811, 2.42", "54.0067, 1.09248, -28.8465, 0.95", "54.9233, 0.908803, -29.6909, 1.69", "56.8538, 0.588476, -31.5207, 0.66", "57.8511, 0.482513, -32.4338, 1.62", "58.6747, 0.389886, -33.1801, 1.62", "59.812, 0.265678, -34.1924, 0.88", "61.6659, 0.094949, -35.6185, 0.88", "62.535, 0.002902, -36.149, 1.62", "63.933, -0.147535, -36.7735, 0.66", "64.5142, -0.215003, -36.9836, 0.29", "65.9599, -0.365353, -37.4317, 1.47", "67.6844, -0.47889, -37.9073, 0.07", "69.4206, -0.455697, -38.4296, 1.47", "69.9354, -0.426926, -38.6137, 1.47", "70.9604, -0.323405, -39.0296, 0.07", "71.7843, -0.202688, -39.3649, 1.32", "72.2495, -0.099674, -39.5467, 1.32", "73.7627, 0.337291, -40.2336, 0.22", "74.7161, 0.584063, -40.7846, 1.84", "74.9989, 0.634378, -40.9883, 2.2", "76.7075, 0.763228, -42.4341, 0.22", "77.5808, 0.753575, -43.2296, 1.1", "79.397, 0.627734, -44.9243, 1.47", "81.2841, 0.367439, -46.7025, 2.57", "82.7235, 0.079908, -48.0582, 2.57", "85.3423, -0.579629, -50.4385, 0.73", "86.4853, -0.935615, -51.4567, 0.15", "86.9007, -1.07194, -51.7951, 0.15", "87.6988, -1.29824, -52.3285, 1.91", "88.1568, -1.41018, -52.6097, 1.91", "89.5354, -1.6964, -53.4074, 1.1", "91.162, -1.98078, -54.3652, 0.15", "91.4241, -2.011, -54.5306, 0.15", "92.9996, -2.15957, -55.577, 1.69", "94.8981, -2.31387, -56.8498, 1.25", "95.7942, -2.38108, -57.4497, 1.69", "97.3245, -2.5029, -58.5064, 0.59", "98.3377, -2.58654, -59.2198, 0.29", "99.9846, -2.73271, -60.4645, 2.42", "101.93, -2.90459, -61.9661, 0.88", "102.297, -2.92889, -62.2502, 1.1", "103.448, -3.01307, -63.1358, 1.25", "104.365, -3.058, -63.7752, 1.4", "106.185, -3.11775, -64.8665, 0.66", "107.371, -3.10617, -65.4453, 1.1", "108.606, -3.0902, -65.9055, 0.29", "109.885, -3.06674, -66.2651, 1.91", "111.584, -2.99891, -66.5937, 0.22", "113.108, -2.92376, -66.7952, 0.81", "113.904, -2.86932, -66.8608, 0.88", "115.071, -2.79252, -66.9362, 0.07", "115.853, -2.74999, -66.9821, 0.07", "117.143, -2.68465, -67.0594, 1.54", "118.717, -2.62729, -67.2136, 0.07", "119.713, -2.60758, -67.3658, 1.1", "120.564, -2.60362, -67.5248, 1.18", "121.839, -2.61737, -67.7789, 0.29", "122.976, -2.66473, -68.0369, 1.03", "124.337, -2.75552, -68.3938, 1.69", "125.899, -2.89001, -68.8736, 0.37", "127.083, -3.01248, -69.2829, 0.07", "128.661, -3.16218, -69.8868, 1.62", "130.27, -3.29341, -70.5743, 0.22", "131.575, -3.37362, -71.1969, 0.51", "132.539, -3.37263, -71.7212, 0.95", "133.589, -3.25016, -72.4504, 1.47", "134.38, -3.04815, -73.1608, 1.47", "135.624, -2.59681, -74.4377, 0.22", "136.119, -2.36895, -74.9709, 0.22", "137.078, -1.87931, -76.0783, 1.84", "138.355, -1.2506, -77.6361, 0.44", "139.502, -0.766304, -79.1137, 0.22", "140.063, -0.590152, -79.8147, 0.22", "140.459, -0.490266, -80.2702, 0.66", "141.655, -0.26277, -81.5296, 0.66", "143.128, -0.053604, -82.9307, 1.91", "144.774, 0.091766, -84.37, 2.42", "146.415, 0.15115, -85.6826, 2.28", "147.822, 0.162439, -86.7008, 0.66", "148.188, 0.145655, -86.9398, 0.22", "149.087, 0.054664, -87.4499, 0.22", "150.259, -0.178256, -88.0485, 0.73", "151.526, -0.676901, -88.6923, 0.66", "152.309, -1.22506, -89.1745, 0.66", "152.943, -1.84214, -89.6782, 0.66", "153.626, -2.59397, -90.4423, 0.66", "153.881, -2.89004, -90.8467, 0.66", "154.358, -3.32211, -91.8622, 0.66", "154.628, -3.36514, -92.5751, 0.66", "154.852, -3.2114, -93.0899, 0.66", "155.425, -2.55482, -94.1813, 0.73", "155.893, -1.96195, -94.9725, 0.59", "156.251, -1.51953, -95.5241, 0.29", "157.069, -0.521504, -96.6831, 0.29", "157.539, -0.009996, -97.2696, 1.1", "158.733, 1.14011, -98.5669, 0.29", "159.302, 1.61934, -99.0874, 0.29", "160.032, 2.11299, -99.689, 0.29", "161.08, 2.65375, -100.456, 1.4", "162.353, 3.08662, -101.244, 0.29", "163.045, 3.23863, -101.582, 0.29", "164.113, 3.33595, -101.912, 0.29", "165.63, 3.3886, -102.312, 0.15", "166.345, 3.36425, -102.448, 0.15", "167.732, 3.15005, -102.545, 0.15", "169.28, 2.72318, -102.388, 0.15", "170.562, 2.25622, -102.024, 0.15" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "19.4413, 6.96447, -10.2871, 1.69", "20.2818, 9.19023, -11.0, 1.69", "20.9128, 10.4359, -11.3975, 1.4", "21.8571, 11.9625, -11.8697, 1.4", "22.4453, 12.8027, -12.125, 1.32", "23.2784, 13.9605, -12.4664, 0.95", "24.3511, 15.452, -12.906, 0.66", "25.362, 16.6626, -13.2805, 1.47", "26.2031, 17.576, -13.593, 1.91", "27.3951, 18.7732, -14.0822, 0.66", "28.2105, 19.5923, -14.4697, 0.37", "28.5678, 19.95, -14.6497, 0.37", "29.6528, 21.0023, -15.1773, 1.1", "30.5934, 21.9203, -15.6066, 1.25", "31.7221, 23.0139, -16.0639, 0.95", "32.9119, 24.1423, -16.4801, 1.76", "34.4708, 25.66, -16.9419, 2.06", "36.188, 27.4321, -17.3619, 2.57", "37.0565, 28.4113, -17.525, 2.57", "38.7501, 30.5158, -17.7793, 0.44", "39.6559, 31.7436, -17.9352, 0.22", "40.3653, 32.7791, -18.0932, 0.22", "40.8723, 33.5825, -18.2563, 0.22", "41.4207, 34.4894, -18.498, 1.03", "42.1126, 35.6304, -18.8699, 1.76", "43.197, 37.4027, -19.6017, 1.54", "44.0667, 38.7588, -20.27, 1.54", "44.9242, 40.0161, -20.9555, 1.84", "45.6337, 41.0369, -21.5268, 1.98", "45.9943, 41.5478, -21.8154, 1.98", "46.9394, 42.8589, -22.546, 0.95", "48.143, 44.5059, -23.4223, 0.59", "48.8519, 45.4289, -23.9141, 0.81", "49.5955, 46.3318, -24.3785, 0.88", "50.7974, 47.6364, -25.0342, 0.59", "51.6416, 48.4411, -25.4385, 1.1", "52.9221, 49.5464, -25.9363, 2.06", "54.1118, 50.4726, -26.3011, 1.4", "55.3609, 51.3908, -26.6197, 0.66", "56.5961, 52.2592, -26.9114, 0.29", "58.377, 53.4467, -27.2648, 1.91", "59.342, 54.0681, -27.4237, 2.57", "60.7333, 54.9117, -27.5844, 2.28", "62.2545, 55.8195, -27.6525, 1.69" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "12.1115, -11.2851, -7.3507, 1.1", "14.3272, -10.5974, -8.36325, 1.1", "15.7696, -10.1113, -9.07057, 0.81", "16.7779, -9.78876, -9.59276, 0.95", "18.584, -9.27042, -10.5258, 2.06", "20.2206, -8.82064, -11.3495, 1.18", "21.4842, -8.48946, -11.9698, 0.73", "22.1116, -8.3282, -12.2791, 0.95", "23.1549, -8.06436, -12.7806, 1.18", "24.6408, -7.72894, -13.477, 0.51", "25.5408, -7.55965, -13.8983, 0.51", "26.481, -7.45745, -14.3014, 1.84", "28.137, -7.32496, -14.8997, 2.5" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "12.1115, -11.2851, -7.3507, 1.98", "12.0134, -12.5457, -8.1885, 1.98", "11.949, -13.3728, -8.73824, 1.62", "11.8172, -15.0652, -9.86307, 1.18", "11.679, -16.8412, -11.0435, 1.76" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.41524, -20.11, 0.181785, 2.06", "-2.34719, -21.1901, 0.0571768, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-1.41524, -20.11, 0.181785, 1.03", "-1.0148, -21.8642, 0.431524, 1.03", "-0.703309, -23.2288, 0.62579, 1.03", "-0.445376, -24.3587, 0.786651, 1.03", "-0.187622, -25.4878, 0.947401, 1.25" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-11.3118, 3.75778, -1.19149, 0.95", "-11.5236, 3.69486, -0.848172, 0.95", "-12.4973, 3.49704, 0.285205, 0.95", "-13.0009, 3.41668, 0.770064, 1.1", "-13.8853, 3.30307, 1.51255, 1.25", "-15.8235, 3.10309, 2.97959, 0.95", "-16.85, 3.02471, 3.69634, 0.95", "-18.3004, 2.99398, 4.57365, 0.66", "-18.8507, 3.00379, 4.86445, 0.37", "-19.7658, 3.04272, 5.33322, 1.18", "-20.2471, 3.07259, 5.56312, 1.54", "-21.4145, 3.14775, 6.11643, 0.73", "-22.4906, 3.18006, 6.73902, 0.66", "-23.3814, 3.19525, 7.27488, 0.51", "-24.2073, 3.18944, 7.79957, 0.81", "-24.8764, 3.16851, 8.23035, 1.18", "-25.7635, 3.13445, 8.81386, 0.88", "-26.2465, 3.12085, 9.14636, 1.32", "-27.3344, 3.10161, 9.95783, 0.44", "-28.3498, 3.11262, 10.8825, 0.95", "-28.9554, 3.12607, 11.5858, 0.95", "-29.3129, 3.1375, 12.0981, 0.95", "-29.7775, 3.12187, 12.8642, 0.95", "-30.1489, 3.03414, 13.5916, 0.95", "-30.6046, 2.80875, 14.7636, 0.95", "-30.9856, 2.52805, 15.8135, 0.95", "-31.2638, 2.23177, 16.6343, 0.73", "-31.5652, 1.88715, 17.3114, 1.03", "-31.8141, 1.63768, 17.6885, 0.59" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-11.3118, 3.75778, -1.19149, 2.13", "-11.8794, 4.06732, -1.30091, 2.13", "-12.7357, 4.53431, -1.46598, 2.13", "-13.3821, 4.88686, -1.59061, 1.84", "-14.2988, 5.38682, -1.76734, 2.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "10.0453, 0.980638, 11.8847, 1.62", "12.0661, 1.41068, 13.4149, 1.62", "14.3193, 1.87411, 15.0345, 0.88", "16.2815, 2.21259, 16.3523, 1.32", "17.3754, 2.41404, 16.9979, 2.06", "19.2497, 2.78924, 17.9681, 1.47", "21.0396, 3.1621, 18.8217, 1.76", "22.7476, 3.56901, 19.5368, 1.4", "24.1808, 3.94243, 19.9933, 0.88", "26.1123, 4.5252, 20.4653, 0.81", "27.5562, 4.96491, 20.7601, 0.66", "29.1728, 5.43693, 21.0477, 0.81", "31.0151, 5.94218, 21.3414, 1.69", "33.2731, 6.55801, 21.6708, 1.69", "35.5507, 7.17564, 22.0038, 2.2", "37.8854, 7.72028, 22.3478, 0.73", "39.448, 8.06359, 22.5268, 0.59", "41.218, 8.47553, 22.6781, 0.66", "42.7344, 8.80166, 22.7706, 0.73", "43.627, 8.99153, 22.8353, 0.59", "45.3656, 9.39725, 22.9438, 0.59", "46.3607, 9.69078, 23.002, 0.51", "48.7801, 10.5037, 23.1396, 0.51" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.0453, 0.980638, 11.8847, 0.81", "11.9096, -0.126336, 12.5524, 0.81", "13.6406, -1.1306, 13.3125, 0.66", "15.1201, -2.00111, 14.0049, 0.73", "16.2294, -2.68415, 14.5592, 0.81", "17.0751, -3.22282, 14.9892, 0.73", "18.0052, -3.8151, 15.4384, 0.81", "19.1886, -4.55631, 16.0129, 0.81", "19.8424, -4.96313, 16.3256, 0.73", "20.8315, -5.57362, 16.7864, 0.44", "21.9418, -6.24121, 17.2523, 1.84", "23.4732, -7.1683, 17.8691, 0.95", "24.555, -7.85173, 18.2723, 0.44", "25.1588, -8.25717, 18.4854, 0.37", "26.0189, -8.82233, 18.8005, 0.81", "26.6156, -9.21186, 19.0201, 1.32", "27.5285, -9.85546, 19.4035, 1.47", "28.3293, -10.5379, 19.8242, 1.47", "29.1485, -11.3883, 20.2923, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-11.8326, 6.39453, 12.5773, 1.47", "-14.3531, 7.62312, 12.9576, 1.47", "-16.2167, 8.54572, 13.2473, 1.1", "-17.5492, 9.20535, 13.4544, 1.1", "-19.3541, 10.0989, 13.735, 1.1", "-20.6182, 10.7246, 13.9315, 1.69", "-21.1702, 10.9979, 14.0173, 2.35", "-22.9749, 11.9868, 14.3248, 2.35" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-11.8326, 6.39453, 12.5773, 1.32", "-13.4573, 6.03614, 13.0756, 1.32", "-14.5278, 5.83721, 13.2692, 0.88", "-15.083, 5.75421, 13.3352, 0.95", "-15.6597, 5.69018, 13.383, 1.03", "-16.1729, 5.64224, 13.4345, 1.32", "-17.3749, 5.56191, 13.5811, 2.13", "-18.6275, 5.55544, 13.7271, 0.73", "-19.5011, 5.56876, 13.8598, 0.59", "-20.5662, 5.58055, 14.0602, 0.59", "-21.2411, 5.56327, 14.2282, 0.88", "-22.1119, 5.51613, 14.5083, 1.1", "-22.9887, 5.43395, 14.8731, 0.88", "-24.2159, 5.2235, 15.4508, 0.81", "-25.2226, 4.96549, 15.9407, 0.81", "-26.2068, 4.65241, 16.4259, 0.88", "-27.0901, 4.31865, 16.8294, 0.88", "-27.9464, 3.94054, 17.224, 0.44", "-28.7982, 3.51844, 17.6071, 0.44", "-29.3257, 3.24396, 17.8513, 0.66", "-29.9258, 2.94818, 18.1254, 0.81", "-30.934, 2.45636, 18.5452, 1.1", "-31.3234, 2.25644, 18.6995, 1.1", "-32.0848, 1.87153, 19.0056, 0.66", "-32.8529, 1.48284, 19.3286, 0.59", "-33.3931, 1.16615, 19.5616, 0.66", "-34.1287, 0.648637, 19.8732, 0.37", "-34.5992, 0.260094, 20.0766, 0.37", "-35.0765, -0.168854, 20.2746, 1.1", "-35.353, -0.451744, 20.3934, 1.03", "-35.8811, -1.09617, 20.6085, 0.22", "-36.2326, -1.57052, 20.7523, 0.44", "-36.5186, -1.94872, 20.853, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.4794, 16.3784, 0.0, 0.798013", "49.9466, 22.9842, 0.0, 0.798013", "63.4137, 29.5901, 0.0, 0.798013" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "62.2545, 55.8195, -27.6525, 1.03", "62.3148, 56.8783, -27.9471, 1.03", "62.3303, 58.0268, -28.4906, 0.51", "62.3358, 58.6656, -28.8363, 0.51", "62.38, 59.6226, -29.3695, 1.18", "62.4525, 60.3689, -29.82, 1.62", "62.5702, 61.0547, -30.2586, 1.91", "62.898, 62.3173, -31.254, 0.73", "63.0691, 62.72, -31.6204, 0.66", "63.4173, 63.2926, -32.1429, 0.81", "63.8811, 63.8865, -32.6484, 0.59", "64.4438, 64.5097, -33.1306, 1.1", "64.9733, 65.0643, -33.5198, 2.06", "65.5839, 65.6958, -33.903, 2.06", "66.1672, 66.3359, -34.2749, 1.62", "66.6618, 66.9418, -34.5703, 0.81", "67.4278, 67.9753, -35.0085, 0.37", "67.9247, 68.6865, -35.3035, 0.37", "68.2384, 69.134, -35.4843, 1.32", "68.723, 69.7837, -35.7571, 2.2", "69.557, 70.7651, -36.2068, 1.76", "70.5892, 71.8681, -36.73, 0.07", "71.2548, 72.5177, -37.0457, 1.1", "71.7073, 72.9239, -37.2388, 2.35", "72.695, 73.7735, -37.6247, 1.69", "73.6186, 74.5384, -37.9568, 0.37", "74.3756, 75.1446, -38.2154, 0.59", "75.2279, 75.8267, -38.4546, 0.59", "76.2044, 76.6145, -38.7109, 2.06", "76.8492, 77.1524, -38.8809, 2.06", "77.9167, 78.0368, -39.151, 1.18", "78.6639, 78.6383, -39.3399, 0.59", "79.7664, 79.4911, -39.6378, 0.29", "81.2003, 80.5982, -40.0588, 2.86", "82.5179, 81.6339, -40.484, 0.29", "83.1989, 82.1883, -40.7224, 0.29", "83.8825, 82.7991, -40.9877, 0.44", "84.5355, 83.4724, -41.2803, 1.1", "84.9715, 84.0155, -41.5245, 1.98", "85.2172, 84.3955, -41.6888, 2.13", "85.5227, 84.9687, -41.9298, 2.13", "85.8872, 85.812, -42.2616, 2.13", "86.3314, 87.0783, -42.7322, 0.37", "86.6078, 88.0318, -43.0668, 0.15", "86.7489, 88.6234, -43.2798, 0.15", "86.9172, 89.5663, -43.633, 1.1", "87.0032, 90.2488, -43.8913, 2.06", "87.0664, 91.43, -44.3357, 0.88", "87.0476, 92.064, -44.5665, 0.15", "87.0149, 92.6826, -44.7934, 0.22", "86.9811, 93.3823, -45.0679, 0.22", "86.9688, 93.9574, -45.3, 0.22", "87.0047, 94.741, -45.6201, 1.1", "87.0446, 95.1033, -45.783, 1.32", "87.1388, 95.6663, -46.0414, 0.81", "87.2725, 96.3036, -46.3328, 0.22", "87.4049, 96.8022, -46.5609, 0.22", "87.6494, 97.6693, -46.998, 1.54", "87.8436, 98.3442, -47.3575, 1.54", "88.1192, 99.3321, -47.885, 0.15", "88.2987, 100.004, -48.2375, 0.07", "88.4726, 100.613, -48.5504, 0.81", "88.8019, 101.723, -49.1067, 0.15", "89.0913, 102.612, -49.5319, 2.2", "89.2108, 102.979, -49.6906, 2.13", "89.4089, 103.538, -49.9276, 1.84", "89.796, 104.535, -50.3219, 0.88", "90.0933, 105.232, -50.5853, 0.22", "90.2997, 105.646, -50.7219, 0.22", "90.606, 106.2, -50.9054, 0.44", "91.0473, 106.953, -51.1575, 0.07", "91.4846, 107.663, -51.3967, 1.32", "91.7396, 108.043, -51.5293, 1.62", "92.2255, 108.718, -51.7683, 1.69", "92.9417, 109.657, -52.0732, 0.22", "93.3608, 110.149, -52.2227, 0.29", "93.9909, 110.816, -52.4039, 0.29", "94.5252, 111.332, -52.5302, 0.95", "95.0874, 111.83, -52.6391, 1.54", "96.0366, 112.616, -52.7465, 1.32", "97.1006, 113.465, -52.7804, 0.22", "97.9063, 114.112, -52.7731, 0.22", "98.3969, 114.504, -52.7491, 0.81", "98.9577, 114.97, -52.7075, 1.1", "99.9773, 115.863, -52.6042, 0.66", "100.564, 116.449, -52.5234, 1.25", "101.326, 117.286, -52.4267, 2.2", "101.662, 117.666, -52.4081, 2.5", "101.943, 117.984, -52.4106, 2.5", "102.848, 119.018, -52.4806, 0.59", "103.837, 120.163, -52.6359, 0.22", "104.686, 121.224, -52.8287, 0.22", "105.456, 122.312, -53.0842, 0.22", "105.835, 122.93, -53.2688, 1.62", "105.963, 123.179, -53.3619, 2.06", "106.123, 123.584, -53.5519, 2.06", "106.531, 125.004, -54.3134, 0.29", "106.682, 125.876, -54.7828, 0.95", "106.745, 126.503, -55.1261, 1.03", "106.794, 127.182, -55.5235, 0.15", "106.837, 127.92, -55.9571, 0.15", "106.87, 128.454, -56.2716, 1.32", "106.904, 128.966, -56.5638, 1.76", "106.925, 129.136, -56.6603, 1.69", "107.163, 130.379, -57.4259, 0.22", "107.337, 131.093, -57.8799, 0.29", "107.524, 131.738, -58.3105, 1.03", "107.685, 132.22, -58.641, 1.69", "107.865, 132.7, -58.9746, 1.91", "108.35, 133.944, -59.8323, 0.15", "108.595, 134.576, -60.2556, 0.66", "108.877, 135.377, -60.7802, 0.15", "109.036, 135.887, -61.1069, 1.18", "109.155, 136.284, -61.3453, 1.32", "109.245, 136.622, -61.5406, 1.32", "109.523, 137.827, -62.2306, 0.15", "109.732, 138.859, -62.852, 1.76", "109.859, 139.554, -63.2625, 1.76", "110.038, 140.599, -63.8854, 0.44", "110.134, 141.21, -64.2473, 0.73", "110.251, 141.91, -64.6607, 0.73", "110.324, 142.354, -64.9184, 0.44", "110.453, 143.185, -65.3815, 0.22", "110.563, 143.866, -65.7654, 1.03", "110.641, 144.323, -66.0287, 1.32", "110.878, 145.357, -66.6007, 0.07", "111.152, 146.323, -67.1405, 1.62", "111.314, 146.849, -67.4369, 1.62", "111.715, 148.097, -68.1745, 0.15", "111.83, 148.44, -68.3778, 0.15", "112.049, 149.066, -68.7401, 0.15", "112.292, 149.709, -69.0948, 1.03", "112.452, 150.089, -69.2975, 1.98", "112.733, 150.703, -69.6011, 1.69", "113.183, 151.639, -70.0242, 0.29", "113.571, 152.411, -70.3816, 0.29", "113.971, 153.189, -70.7328, 1.32", "114.147, 153.499, -70.8647, 1.54", "114.794, 154.594, -71.3176, 0.29", "115.18, 155.241, -71.5738, 0.44", "115.721, 156.237, -71.978, 0.73", "116.053, 156.931, -72.2697, 1.18", "116.512, 158.073, -72.7581, 0.29", "116.707, 158.664, -73.0331, 0.15", "116.861, 159.235, -73.3312, 0.15", "117.096, 160.271, -73.9252, 2.13", "117.185, 160.677, -74.1711, 2.2", "117.314, 161.265, -74.5626, 2.2", "117.59, 162.504, -75.4267, 0.51", "117.849, 163.439, -76.1192, 0.51", "118.13, 164.238, -76.7376, 0.07", "118.479, 165.075, -77.4002, 0.66", "118.843, 165.899, -78.0474, 0.22", "119.155, 166.574, -78.5689, 1.1", "119.582, 167.498, -79.2466, 0.29", "119.903, 168.282, -79.7758, 1.32", "119.972, 168.471, -79.8975, 1.84", "120.131, 169.027, -80.2322, 1.47", "120.348, 169.939, -80.7249, 0.37", "120.436, 170.443, -80.9778, 0.15", "120.514, 171.352, -81.3685, 0.15", "120.527, 171.847, -81.5637, 0.15", "120.538, 172.524, -81.822, 1.1", "120.535, 173.326, -82.1092, 1.76", "120.534, 173.817, -82.2683, 1.98", "120.536, 175.064, -82.6621, 0.66", "120.546, 176.065, -82.9788, 0.59", "120.548, 176.619, -83.1504, 0.22", "120.543, 177.489, -83.4478, 0.29", "120.53, 178.344, -83.7547, 0.29", "120.525, 179.032, -84.031, 1.18", "120.521, 179.616, -84.2913, 1.84", "120.491, 180.364, -84.6409, 1.4", "120.426, 181.156, -85.0055, 0.37", "120.375, 181.634, -85.2307, 0.29", "120.305, 182.188, -85.49, 0.29", "120.251, 182.663, -85.7218, 0.66", "120.189, 183.253, -86.0342, 0.66", "120.126, 183.878, -86.3944, 0.22", "120.051, 184.561, -86.8088, 0.22", "119.932, 185.305, -87.2979, 1.62", "119.757, 186.021, -87.8319, 1.62", "119.517, 186.866, -88.4996, 0.88", "119.282, 187.603, -89.1091, 0.37", "119.149, 188.002, -89.4521, 0.37", "118.885, 188.791, -90.1365, 1.91", "118.582, 189.821, -91.0699, 0.51", "118.428, 190.448, -91.636, 0.37", "118.28, 191.109, -92.2548, 0.22", "118.09, 192.11, -93.2125, 0.66", "118.047, 192.399, -93.4851, 1.76", "117.967, 193.495, -94.4922, 0.29", "117.961, 193.853, -94.7943, 0.22", "117.935, 194.657, -95.4855, 1.25", "117.916, 194.906, -95.7046, 1.25", "117.868, 195.32, -96.0603, 0.22", "117.786, 195.788, -96.4919, 0.15", "117.667, 196.273, -96.9648, 0.15", "117.346, 197.294, -98.0188, 2.06", "116.915, 198.458, -99.2651, 0.44", "116.768, 198.807, -99.6474, 0.73", "116.472, 199.447, -100.34, 0.22", "116.367, 199.67, -100.561, 0.22", "116.064, 200.428, -101.209, 1.62", "115.888, 201.066, -101.621, 1.62", "115.748, 201.992, -102.09, 0.15", "115.706, 202.54, -102.338, 0.15", "115.687, 203.346, -102.663, 0.22", "115.694, 204.506, -103.11, 1.84", "115.713, 205.085, -103.331, 1.84", "115.725, 206.039, -103.681, 0.59", "115.702, 206.857, -103.992, 0.37", "115.675, 207.297, -104.165, 0.37", "115.598, 208.085, -104.5, 0.37", "115.48, 209.039, -104.937, 0.07", "115.355, 209.932, -105.373, 0.07", "115.238, 210.928, -105.902, 1.84", "115.19, 211.495, -106.24, 1.84", "115.161, 212.393, -106.821, 0.37", "115.178, 213.153, -107.367, 0.15", "115.231, 213.801, -107.876, 0.15", "115.357, 214.772, -108.7, 1.47", "115.425, 215.268, -109.161, 1.47", "115.465, 215.718, -109.585, 1.1", "115.47, 216.277, -110.102, 0.81", "115.432, 216.873, -110.679, 1.62", "115.4, 217.176, -110.974, 1.62", "115.235, 218.268, -112.027, 0.07", "115.106, 219.021, -112.768, 0.95", "114.964, 219.795, -113.589, 0.07", "114.871, 220.248, -114.106, 0.88", "114.764, 220.725, -114.713, 0.07", "114.682, 221.093, -115.216, 0.07", "114.553, 221.633, -115.995, 1.84", "114.361, 222.391, -117.124, 0.51", "114.206, 223.12, -118.119, 1.18", "114.066, 223.918, -119.097, 0.22", "113.992, 224.37, -119.614, 0.22", "113.912, 224.981, -120.238, 1.1", "113.894, 225.274, -120.504, 1.18", "113.902, 226.368, -121.381, 0.15", "113.951, 227.057, -121.855, 1.1", "113.985, 227.504, -122.129, 1.4", "113.994, 227.791, -122.294, 1.4", "113.977, 228.846, -122.853, 0.37", "113.954, 229.216, -123.04, 0.37", "113.858, 230.088, -123.483, 1.54", "113.68, 231.327, -124.08, 0.07", "113.488, 232.325, -124.537, 0.07", "113.288, 233.211, -124.939, 1.69", "113.241, 233.386, -125.014, 1.69", "112.892, 234.574, -125.513, 0.07", "112.485, 235.824, -126.033, 0.07", "112.161, 236.725, -126.385, 0.07", "111.859, 237.552, -126.713, 1.69", "111.605, 238.219, -126.972, 2.28", "111.033, 239.677, -127.539, 0.22", "110.71, 240.484, -127.842, 0.15", "110.304, 241.541, -128.257, 0.15", "110.083, 242.157, -128.503, 0.95", "109.88, 242.701, -128.726, 1.18", "109.568, 243.568, -129.098, 0.07", "109.48, 243.8, -129.198, 0.07", "109.228, 244.491, -129.483, 1.1", "109.008, 245.088, -129.715, 1.1", "108.803, 245.604, -129.897, 0.07", "108.492, 246.357, -130.17, 0.07", "108.075, 247.368, -130.514, 1.62", "107.73, 248.196, -130.79, 1.25", "107.383, 249.039, -131.085, 0.07", "107.109, 249.709, -131.32, 0.07", "106.62, 250.919, -131.779, 1.69", "106.386, 251.523, -132.024, 1.1", "106.158, 252.169, -132.292, 0.59", "105.87, 253.031, -132.675, 0.07", "105.68, 253.706, -132.97, 1.03", "105.476, 254.707, -133.4, 0.07", "105.341, 255.778, -133.868, 0.07", "105.3, 256.386, -134.12, 0.95", "105.28, 257.433, -134.519, 0.07", "105.322, 258.863, -135.021, 2.42", "105.439, 260.406, -135.536, 0.07", "105.55, 261.218, -135.781, 0.07", "105.782, 262.255, -136.089, 0.95", "105.891, 262.641, -136.198, 1.18", "106.348, 263.795, -136.504, 0.37", "106.555, 264.196, -136.615, 0.07", "107.108, 265.148, -136.869, 0.07", "107.83, 266.303, -137.201, 1.32", "108.374, 267.1, -137.461, 1.91", "109.494, 268.697, -137.972, 0.15", "109.915, 269.301, -138.164, 0.15", "110.163, 269.692, -138.297, 0.15", "110.528, 270.377, -138.543, 0.15", "110.781, 270.996, -138.79, 1.47", "110.961, 271.592, -139.056, 1.25", "111.11, 272.564, -139.547, 0.22", "111.189, 273.306, -139.941, 0.15", "111.241, 273.882, -140.253, 0.29", "111.293, 274.8, -140.768, 1.25", "111.326, 275.677, -141.293, 2.35", "111.375, 276.815, -142.013, 0.07", "111.38, 277.183, -142.256, 1.1" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "62.2545, 55.8195, -27.6525, 0.73", "62.792, 56.1423, -28.3518, 0.73", "63.802, 56.654, -29.5141, 0.37", "64.3423, 56.8773, -30.0918, 0.51", "65.0868, 57.1346, -30.8797, 1.54", "65.9115, 57.4206, -31.7689, 0.07", "66.7051, 57.713, -32.604, 0.15", "67.2039, 57.891, -33.1187, 0.15", "67.7789, 58.0749, -33.6736, 1.32", "69.0511, 58.4074, -34.7765, 0.37", "69.7835, 58.54, -35.3461, 1.25", "70.5386, 58.6566, -35.8585, 0.29", "71.3765, 58.7727, -36.3752, 0.29", "72.0605, 58.8495, -36.7491, 1.03", "73.0694, 58.9135, -37.1561, 0.07", "74.126, 58.9259, -37.4072, 0.07", "74.7635, 58.915, -37.5087, 0.88", "74.9228, 58.9101, -37.5318, 1.03", "76.2021, 58.8966, -37.6825, 0.07", "77.6327, 58.9412, -37.8757, 2.13", "79.1546, 59.0819, -38.1073, 0.07", "79.7159, 59.1628, -38.1958, 0.37", "80.7861, 59.35, -38.387, 0.07", "81.4198, 59.4733, -38.5144, 1.1", "82.3861, 59.6779, -38.7204, 0.07", "83.5879, 59.9541, -39.0097, 0.07", "84.3818, 60.1514, -39.2129, 1.47", "85.3864, 60.4223, -39.4569, 0.07", "86.2313, 60.6631, -39.6611, 0.07", "87.1064, 60.901, -39.8885, 0.07", "87.6704, 61.0438, -40.0448, 1.25", "88.2868, 61.1962, -40.2305, 1.32", "88.888, 61.3483, -40.4032, 1.32", "90.3624, 61.7304, -40.8221, 0.07", "90.9007, 61.8636, -40.9817, 0.44", "91.6655, 62.0367, -41.2117, 0.07", "92.3414, 62.1768, -41.4135, 0.07", "93.437, 62.3819, -41.7249, 1.76", "94.6647, 62.5987, -42.0562, 0.07", "95.6187, 62.798, -42.3156, 0.07", "96.3661, 62.9827, -42.5337, 1.91", "97.5592, 63.3263, -42.905, 0.07", "98.2172, 63.5479, -43.1304, 0.07", "99.0551, 63.87, -43.4302, 1.47", "100.344, 64.4145, -43.8695, 0.07", "101.12, 64.7573, -44.1071, 1.18", "101.757, 65.0242, -44.283, 1.18", "102.825, 65.4383, -44.535, 0.07", "103.332, 65.6156, -44.6361, 0.07", "104.142, 65.8577, -44.7725, 0.07", "105.558, 66.204, -44.981, 1.76", "106.747, 66.4793, -45.1557, 0.07", "107.312, 66.6177, -45.2482, 0.07", "107.935, 66.7869, -45.3711, 0.66", "108.732, 67.0399, -45.5601, 0.15", "109.553, 67.3595, -45.7949, 1.25", "110.144, 67.6446, -45.9885, 1.25", "111.218, 68.2371, -46.4075, 0.07", "112.331, 68.8764, -46.8861, 1.62", "112.688, 69.0868, -47.0489, 1.32", "113.283, 69.4299, -47.3123, 0.95", "114.058, 69.8449, -47.6693, 0.15", "115.231, 70.4165, -48.1942, 0.07", "116.054, 70.7814, -48.5425, 0.07", "116.253, 70.8571, -48.6208, 1.18", "117.265, 71.1569, -49.0044, 0.22", "118.36, 71.3697, -49.4019, 0.07", "119.388, 71.4956, -49.7997, 1.47", "120.056, 71.5612, -50.0718, 1.47", "121.356, 71.6581, -50.6739, 0.15", "122.152, 71.7017, -51.0721, 0.15", "123.153, 71.7329, -51.6417, 1.47", "124.362, 71.7983, -52.3818, 0.51", "125.147, 71.8758, -52.9224, 1.32", "125.811, 71.9897, -53.4256, 0.29", "126.199, 72.1036, -53.7366, 0.15", "126.83, 72.3715, -54.2535, 0.15", "127.439, 72.686, -54.7646, 1.1", "127.733, 72.8478, -54.9951, 1.18", "128.656, 73.3861, -55.6924, 0.07", "129.118, 73.6755, -56.0093, 0.59", "130.014, 74.2606, -56.5759, 0.07", "130.412, 74.5459, -56.8314, 0.07", "130.975, 74.9752, -57.2014, 1.76", "131.776, 75.6651, -57.7396, 0.07", "132.537, 76.3995, -58.2283, 0.07", "133.261, 77.1278, -58.6819, 1.4", "134.355, 78.296, -59.3608, 0.07", "134.756, 78.7282, -59.6092, 0.51", "135.233, 79.2262, -59.9043, 0.07", "135.949, 79.9378, -60.326, 0.07", "136.359, 80.2785, -60.5642, 1.54", "137.326, 80.9252, -61.0714, 0.07", "138.355, 81.4854, -61.5514, 1.47", "139.22, 81.8512, -61.9221, 0.07", "139.605, 81.9761, -62.0766, 0.95", "141.507, 82.491, -62.8455, 0.07", "141.977, 82.5892, -63.036, 0.07", "142.492, 82.6627, -63.2405, 1.54", "143.818, 82.8041, -63.7837, 0.07", "144.374, 82.8625, -64.0156, 0.07", "145.393, 82.9972, -64.4647, 0.95", "146.462, 83.1911, -64.9217, 0.07", "146.832, 83.2774, -65.1169, 0.07", "147.292, 83.4043, -65.3876, 0.95", "148.385, 83.7835, -66.0923, 0.07", "149.216, 84.0869, -66.6086, 0.07", "150.018, 84.3944, -67.0894, 1.4", "151.47, 85.0121, -67.9707, 0.07", "151.853, 85.1841, -68.2125, 0.07", "152.268, 85.3843, -68.4825, 0.66", "153.157, 85.8359, -69.0724, 0.07", "153.861, 86.1976, -69.529, 1.25" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "28.137, -7.32496, -14.8997, 0.22", "29.4983, -7.55997, -15.3567, 0.22", "30.3672, -7.73386, -15.6687, 0.59", "31.2652, -7.98035, -15.9893, 0.07", "32.4116, -8.31863, -16.3529, 1.47", "33.3655, -8.62479, -16.6169, 0.07", "33.627, -8.71395, -16.6819, 0.07", "34.8565, -9.17582, -16.9835, 1.76", "35.9935, -9.62023, -17.2665, 0.07", "36.6895, -9.89376, -17.3968, 0.07", "37.4567, -10.2165, -17.5155, 0.07", "37.8812, -10.406, -17.5656, 1.03", "38.5647, -10.7148, -17.6395, 1.03", "39.3564, -11.0894, -17.6832, 1.03", "40.1299, -11.4579, -17.6945, 0.07", "40.9415, -11.8699, -17.6887, 0.07", "41.6332, -12.2278, -17.6576, 0.66", "42.2439, -12.5617, -17.6039, 0.07", "43.0778, -13.0499, -17.4897, 0.95", "44.2159, -13.7409, -17.3236, 0.07", "44.5819, -13.9612, -17.2812, 0.07", "45.1551, -14.2867, -17.2324, 1.1", "45.56, -14.5058, -17.2118, 1.76", "45.9224, -14.7002, -17.2083, 1.76", "46.9488, -15.2506, -17.2211, 0.07", "47.658, -15.6619, -17.2195, 0.73", "48.3661, -16.0935, -17.201, 0.07", "48.5942, -16.2391, -17.196, 0.07", "49.098, -16.5559, -17.2003, 1.1", "50.0338, -17.1351, -17.2312, 0.07", "50.5265, -17.4256, -17.2817, 1.18", "51.081, -17.726, -17.3751, 1.47", "51.5625, -17.9601, -17.4754, 1.47", "52.7558, -18.4633, -17.7523, 0.07", "53.3732, -18.6779, -17.9077, 0.66", "54.3411, -18.9362, -18.1665, 0.07", "54.8581, -19.0374, -18.2784, 0.07", "55.6376, -19.152, -18.4, 1.25", "56.2995, -19.2287, -18.4561, 1.25", "56.9566, -19.2918, -18.4723, 0.81", "57.4208, -19.3322, -18.4643, 0.07", "58.3448, -19.3969, -18.4099, 0.07", "58.8912, -19.4352, -18.3886, 0.07", "59.4886, -19.4871, -18.3797, 0.81", "59.9569, -19.5364, -18.3811, 1.03", "60.8016, -19.6487, -18.394, 1.03", "61.495, -19.771, -18.4141, 0.07", "62.3362, -19.955, -18.4547, 0.07", "63.2144, -20.1801, -18.5123, 1.76", "63.6042, -20.2963, -18.5315, 1.76", "64.6991, -20.6722, -18.5457, 0.07", "65.1327, -20.8359, -18.5403, 0.07", "65.5153, -20.9911, -18.5274, 0.07", "66.2477, -21.2922, -18.4906, 0.95", "66.981, -21.6013, -18.4568, 0.07", "68.1856, -22.1007, -18.4133, 0.07", "69.0493, -22.4425, -18.3926, 1.1", "69.5187, -22.6152, -18.385, 1.1", "70.2051, -22.8588, -18.3892, 0.07", "70.6146, -23.0031, -18.4027, 0.66", "71.2247, -23.2103, -18.4608, 0.07", "71.5891, -23.3345, -18.5056, 0.07", "72.0824, -23.5006, -18.5715, 0.59", "72.5691, -23.6621, -18.6381, 0.15", "73.4648, -23.9564, -18.7565, 1.84", "74.0125, -24.14, -18.8239, 1.84", "75.1786, -24.5605, -18.9742, 0.07", "75.9579, -24.8451, -19.074, 0.07", "76.855, -25.163, -19.1794, 0.07", "77.7399, -25.4748, -19.2664, 1.25", "78.1828, -25.6244, -19.3065, 1.25", "79.2228, -25.9739, -19.3899, 0.07", "79.9087, -26.2019, -19.4364, 0.66", "80.4766, -26.3896, -19.4591, 0.07", "81.9908, -26.8912, -19.497, 0.07", "83.0385, -27.2505, -19.509, 1.98", "83.8084, -27.5079, -19.4944, 1.1", "84.4174, -27.7081, -19.4756, 0.15", "85.4778, -28.0635, -19.4457, 0.15", "85.9575, -28.2251, -19.4349, 1.1", "86.9527, -28.5461, -19.4143, 0.81", "87.756, -28.8033, -19.4176, 0.07", "88.3948, -29.0028, -19.4389, 0.44", "88.986, -29.191, -19.4763, 0.07", "89.5012, -29.3665, -19.5249, 0.51", "90.1228, -29.585, -19.6141, 0.07", "90.8203, -29.8402, -19.7424, 0.37", "91.6324, -30.1407, -19.9118, 0.07", "92.4565, -30.4389, -20.0971, 1.76", "92.843, -30.5706, -20.1945, 1.76", "94.0571, -30.9318, -20.5292, 0.07", "94.4244, -31.0265, -20.6344, 0.07", "95.1566, -31.1882, -20.8424, 0.73", "95.9729, -31.3337, -21.1041, 0.07", "96.4088, -31.4011, -21.2502, 0.07", "96.9756, -31.4867, -21.4101, 0.07", "97.5926, -31.5918, -21.5343, 0.07", "98.0355, -31.6787, -21.6033, 1.25", "98.9833, -31.8838, -21.7588, 0.07", "99.4411, -31.983, -21.7953, 0.51", "100.389, -32.1876, -21.8378, 0.07", "101.281, -32.3731, -21.8523, 0.95", "101.869, -32.4789, -21.8272, 1.25", "102.949, -32.6537, -21.7092, 0.07", "104.235, -32.85, -21.5006, 0.81", "105.334, -33.0249, -21.3112, 0.07", "105.777, -33.1016, -21.2295, 0.37", "106.647, -33.2654, -21.024, 0.07", "107.661, -33.4879, -20.7429, 1.47", "108.565, -33.7243, -20.4465, 0.07", "108.997, -33.8497, -20.3124, 0.07", "109.689, -34.0723, -20.0742, 0.51", "110.443, -34.3391, -19.817, 0.07", "111.415, -34.7258, -19.5049, 1.91", "112.588, -35.2531, -19.1214, 0.44", "112.818, -35.3699, -19.0444, 0.07", "113.215, -35.5948, -18.9225, 0.88", "113.589, -35.854, -18.8228, 0.88", "113.939, -36.1387, -18.7502, 0.88", "114.439, -36.5845, -18.6751, 0.07", "115.059, -37.1568, -18.6253, 0.73", "115.638, -37.7016, -18.5826, 0.07", "116.101, -38.144, -18.5537, 0.81", "116.442, -38.4636, -18.5332, 0.07", "117.042, -39.0225, -18.5001, 1.1", "117.602, -39.5462, -18.4763, 0.07", "117.892, -39.8129, -18.4744, 0.07", "118.27, -40.1231, -18.4734, 0.88" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "28.137, -7.32496, -14.8997, 1.25", "29.4406, -7.11365, -15.636, 1.25", "30.5197, -7.03679, -16.1997, 0.59", "31.2834, -7.00861, -16.5654, 0.59", "32.288, -6.96724, -17.0166, 1.1", "32.8483, -6.93717, -17.2575, 1.32", "34.7704, -6.80663, -18.0411, 0.44", "36.082, -6.80087, -18.556, 0.44", "36.7978, -6.82697, -18.8289, 0.44", "37.9362, -6.857, -19.2471, 1.25", "38.7387, -6.84371, -19.5645, 1.25", "39.3917, -6.80348, -19.8527, 0.88", "41.0301, -6.63273, -20.6417, 0.22", "41.9262, -6.47346, -21.1031, 1.1", "42.97, -6.20344, -21.6813, 0.73", "44.4559, -5.75784, -22.5222, 1.25", "45.1714, -5.53069, -22.9322, 2.13", "45.8128, -5.31492, -23.296, 2.13", "47.5046, -4.68737, -24.2153, 0.81", "49.1817, -4.16122, -25.1702, 0.29", "49.6433, -4.04355, -25.4538, 0.15", "50.291, -3.9105, -25.867, 0.15", "50.7836, -3.83637, -26.1908, 0.15", "52.4307, -3.59929, -27.2976, 2.06", "54.4757, -3.30662, -28.7, 0.66", "55.9045, -3.06481, -29.7007, 0.44", "57.1831, -2.79648, -30.5966, 1.69", "58.9293, -2.44164, -31.8061, 0.07", "60.049, -2.25615, -32.5633, 1.18", "60.9013, -2.14884, -33.1174, 1.76", "62.0467, -2.00968, -33.8215, 1.76", "63.713, -1.85571, -34.8741, 0.15", "65.026, -1.72734, -35.7868, 0.15", "65.8366, -1.63573, -36.4799, 0.51", "66.6975, -1.50822, -37.3366, 1.4", "67.4254, -1.35712, -38.1022, 1.76", "68.8017, -0.983505, -39.5718, 0.07", "70.2266, -0.515657, -41.124, 2.2", "72.4223, 0.272378, -43.4495, 0.81", "74.0236, 0.814651, -45.0847, 1.47", "75.899, 1.35125, -46.8814, 2.35", "77.847, 1.79829, -48.5375, 0.07", "78.37, 1.89854, -48.9207, 0.07", "79.4684, 2.06374, -49.5997, 1.69", "81.284, 2.23825, -50.4736, 0.15", "82.7544, 2.30208, -51.1148, 0.15", "84.6185, 2.31534, -51.8801, 2.06", "86.1136, 2.29156, -52.4939, 0.95", "87.1919, 2.28478, -52.9538, 0.07", "88.1793, 2.2876, -53.3925, 0.51", "89.6048, 2.29914, -54.0152, 0.07", "90.5591, 2.29508, -54.4453, 0.88", "91.547, 2.26645, -54.9253, 0.07", "93.099, 2.17334, -55.663, 2.2", "94.7863, 2.01913, -56.4886, 0.07", "95.9597, 1.91423, -57.105, 0.81", "96.4225, 1.87868, -57.3561, 0.88", "97.5836, 1.85819, -58.1461, 0.07", "98.4238, 1.89759, -58.8151, 0.07", "99.8737, 2.10252, -60.1769, 1.62", "101.173, 2.45556, -61.6535, 0.07", "102.26, 2.90937, -63.0871, 2.06", "104.038, 3.85431, -65.6165, 1.03", "104.536, 4.17377, -66.3887, 1.03", "105.553, 4.89288, -67.9969, 2.2", "107.289, 6.23101, -70.7255, 0.59", "107.986, 6.803, -71.7936, 0.59", "108.758, 7.40268, -72.8648, 1.4", "109.318, 7.78749, -73.5114, 1.4", "110.771, 8.70921, -75.0522, 0.07", "111.701, 9.2446, -75.9359, 1.03", "112.298, 9.55922, -76.4514, 1.47", "114.677, 10.7219, -78.4296, 0.07", "116.47, 11.5973, -79.9379, 1.91", "117.725, 12.1908, -80.9738, 0.59", "118.646, 12.6276, -81.7338, 1.32", "120.313, 13.3869, -83.0182, 0.07", "121.381, 13.8542, -83.7684, 0.95", "122.639, 14.4283, -84.53, 0.07", "123.407, 14.7808, -84.9367, 0.44", "124.184, 15.1351, -85.2962, 0.07", "125.209, 15.6353, -85.8276, 1.25", "126.25, 16.1902, -86.4202, 0.07", "127.498, 16.9211, -87.2176, 1.1", "127.933, 17.179, -87.5047, 1.1", "128.389, 17.4512, -87.8258, 1.4", "130.606, 18.7252, -89.3959, 0.07", "131.434, 19.1816, -90.0012, 1.69", "131.908, 19.4311, -90.3291, 1.69", "133.661, 20.3024, -91.5793, 0.07", "134.016, 20.4674, -91.832, 0.59", "134.727, 20.751, -92.2904, 0.07", "135.848, 21.0457, -92.9151, 1.4", "136.259, 21.1174, -93.1442, 1.4", "138.406, 21.3735, -94.4066, 0.29", "139.058, 21.4068, -94.8056, 0.95", "140.28, 21.4049, -95.5469, 0.07", "141.261, 21.3381, -96.1097, 1.25", "141.766, 21.265, -96.3547, 1.25", "143.074, 20.9723, -96.8966, 0.07", "143.698, 20.7764, -97.0917, 0.07", "144.067, 20.6373, -97.2123, 0.07", "144.843, 20.2777, -97.4562, 0.07", "145.767, 19.8347, -97.7462, 1.32", "146.098, 19.6799, -97.8626, 1.32", "147.121, 19.2952, -98.3201, 0.07", "147.804, 19.1334, -98.7427, 0.07", "148.726, 19.0881, -99.5686, 0.07", "149.354, 19.2105, -100.337, 0.07", "150.006, 19.4396, -101.302, 1.47", "151.162, 19.9009, -103.027, 1.69", "151.965, 20.2494, -104.223, 1.69", "153.309, 20.8438, -106.085, 0.88", "154.362, 21.3155, -107.53, 0.51", "155.396, 21.7065, -108.79, 0.07", "156.565, 22.1078, -110.117, 1.47", "157.12, 22.2791, -110.716, 1.47", "158.128, 22.5884, -111.694, 0.07", "160.795, 23.65, -114.414, 0.95", "161.634, 24.1034, -115.327, 0.73", "162.56, 24.7999, -116.444, 0.07", "163.623, 25.8511, -117.865, 0.07", "164.356, 26.7802, -118.918, 2.35", "165.648, 28.9794, -121.133, 0.22", "166.051, 29.9199, -121.918, 1.47", "166.413, 31.1857, -122.955, 0.15", "166.601, 32.3167, -123.928, 0.15", "166.65, 33.5347, -124.986, 1.32", "166.564, 35.5604, -126.975, 0.07", "166.499, 36.4722, -127.931, 0.15", "166.367, 37.7379, -129.366, 0.95", "166.167, 39.6898, -131.736, 0.15", "166.114, 40.5174, -132.748, 1.4", "166.088, 42.9735, -135.82, 0.81", "166.169, 43.9733, -137.077, 1.18", "166.309, 44.6455, -138.07, 1.25", "166.893, 46.2389, -140.691, 0.81", "167.448, 47.267, -142.592, 0.51", "167.863, 47.8642, -143.824, 1.1", "168.187, 48.2398, -144.636, 1.1", "170.054, 49.8874, -148.562, 0.81", "170.709, 50.3191, -149.671, 1.03", "171.574, 50.761, -150.873, 0.44", "172.211, 51.0695, -151.685, 0.29", "173.159, 51.6153, -152.758, 0.95", "174.098, 52.193, -153.73, 0.07", "174.863, 52.6634, -154.282, 0.51", "176.344, 53.5002, -155.302, 0.07", "177.207, 53.9111, -155.88, 0.59", "177.956, 54.2178, -156.403, 0.59" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "11.679, -16.8412, -11.0435, 0.81", "12.0897, -18.3128, -11.1571, 0.81", "12.2498, -19.2461, -11.2595, 0.37", "12.3519, -20.2618, -11.3975, 1.18", "12.3836, -21.0885, -11.5456, 1.54", "12.3608, -22.3835, -11.8161, 1.25", "12.2878, -23.6298, -12.1081, 0.59", "12.145, -24.4097, -12.3294, 0.88", "11.9579, -25.1397, -12.5438, 0.66", "11.7337, -25.9007, -12.7426, 0.88", "11.5376, -26.5044, -12.8727, 0.88", "11.1475, -27.7142, -13.0914, 0.29", "10.7296, -29.1049, -13.2807, 1.1", "10.4101, -30.1274, -13.3732, 1.32", "10.0596, -31.1898, -13.4271, 1.84", "9.73327, -32.145, -13.4449, 1.69", "9.49661, -32.7665, -13.4529, 1.62", "8.98896, -33.9065, -13.4753, 0.66", "8.49681, -34.9316, -13.5323, 0.51", "8.18543, -35.549, -13.5935, 0.51", "7.81841, -36.2462, -13.7084, 0.51", "7.39806, -37.0392, -13.892, 0.59", "6.90813, -37.9347, -14.1588, 1.47", "6.49008, -38.7137, -14.4481, 1.84", "5.97461, -39.7007, -14.8586, 1.84", "5.48735, -40.6509, -15.2876, 1.25", "4.8546, -41.9356, -15.8819, 0.81", "4.49147, -42.7386, -16.247, 0.81", "4.19456, -43.4843, -16.5644, 0.81", "3.74876, -44.7946, -17.0784, 0.73", "3.44452, -45.9308, -17.4687, 1.1", "3.31672, -46.5492, -17.64, 2.42", "3.19329, -47.3243, -17.817, 2.42", "2.91517, -49.4288, -18.2224, 0.44", "2.83287, -50.1033, -18.3303, 0.29", "2.70692, -51.1815, -18.485, 0.51", "2.59409, -52.04, -18.6012, 1.25", "2.52713, -52.5812, -18.6795, 1.32", "2.38671, -53.8585, -18.8723, 0.37", "2.29024, -54.6734, -18.9905, 0.37", "2.09723, -56.3007, -19.2211, 2.28", "1.96777, -57.3345, -19.3821, 2.64", "1.73103, -59.3903, -19.7046, 0.51", "1.64994, -60.267, -19.8408, 0.07", "1.55453, -61.6122, -20.0652, 0.07", "1.48752, -62.847, -20.2902, 1.62", "1.42261, -64.3917, -20.5985, 0.66", "1.37944, -65.4085, -20.8165, 0.29", "1.32596, -66.423, -21.0575, 0.29", "1.29635, -67.3638, -21.3085, 1.18", "1.29136, -68.6485, -21.6944, 1.4", "1.30332, -69.3402, -21.9312, 1.1", "1.33923, -70.3758, -22.3054, 0.73", "1.35522, -71.5138, -22.7467, 1.47", "1.35492, -72.3602, -23.0759, 1.47", "1.33797, -73.5384, -23.5087, 0.95", "1.30432, -74.4325, -23.8191, 0.59", "1.26941, -74.9438, -23.9765, 0.37", "1.14587, -76.2999, -24.349, 1.98", "1.07506, -77.0101, -24.5106, 1.98", "0.910016, -78.5282, -24.793, 0.44", "0.802495, -79.5269, -24.9474, 0.29", "0.686998, -80.5692, -25.0797, 0.29", "0.622845, -81.217, -25.1744, 0.29", "0.532724, -81.9568, -25.2833, 0.29", "0.340168, -83.2881, -25.4841, 2.2", "0.245076, -83.7928, -25.558, 2.42", "0.0612454, -84.5539, -25.6767, 2.42", "-0.223619, -85.4979, -25.8009, 1.62", "-1.02759, -87.5569, -25.9496, 0.15", "-1.27736, -88.072, -25.9457, 1.18", "-1.72724, -88.8776, -25.8774, 0.37", "-1.94263, -89.2702, -25.8294, 0.37", "-2.42988, -90.2414, -25.6796, 0.59", "-2.89436, -91.3507, -25.4906, 0.07", "-3.29282, -92.6638, -25.2901, 1.91", "-3.43887, -93.4508, -25.2103, 2.2", "-3.52925, -94.9176, -25.152, 0.07", "-3.48036, -96.0722, -25.1518, 0.07", "-3.34444, -96.9949, -25.2003, 1.25", "-3.16057, -97.7616, -25.2806, 1.76", "-2.69546, -99.2373, -25.4903, 0.15", "-2.22612, -100.478, -25.6838, 0.22", "-1.94552, -101.162, -25.8252, 0.37", "-1.61253, -101.957, -26.0362, 0.37", "-1.21839, -102.936, -26.3287, 0.07", "-0.916259, -103.752, -26.5922, 0.95", "-0.573359, -104.733, -26.925, 1.84", "-0.261321, -105.818, -27.3048, 1.54", "0.0825504, -107.285, -27.828, 0.15", "0.200701, -107.827, -28.0169, 0.15", "0.363087, -108.647, -28.2781, 0.88", "0.440908, -109.144, -28.4281, 0.88", "0.526884, -109.921, -28.6381, 0.07", "0.563283, -110.349, -28.7365, 0.07", "0.609046, -110.928, -28.8729, 0.66", "0.624068, -111.221, -28.9644, 0.66", "0.628871, -111.954, -29.2231, 0.22", "0.613548, -112.497, -29.4247, 0.44", "0.545737, -113.742, -29.8768, 2.13", "0.455773, -114.841, -30.2846, 1.69", "0.268029, -116.242, -30.7977, 0.07", "0.169036, -116.772, -30.9831, 0.07", "-0.00450063, -117.557, -31.233, 0.44", "-0.214068, -118.45, -31.4945, 0.59", "-0.425918, -119.268, -31.6879, 0.07", "-0.845879, -120.738, -31.9707, 1.76", "-1.08497, -121.622, -32.0934, 1.25", "-1.52539, -123.344, -32.3056, 0.22", "-1.70116, -124.041, -32.3761, 0.22", "-1.98697, -125.17, -32.4698, 1.62", "-2.18911, -125.923, -32.5098, 1.62", "-2.29402, -126.304, -32.5335, 1.62", "-2.80607, -128.019, -32.6703, 0.29", "-3.04813, -128.724, -32.7428, 0.29", "-3.39283, -129.634, -32.8624, 1.62", "-3.91482, -130.827, -33.0709, 1.03", "-4.45302, -131.891, -33.2774, 0.07", "-4.79535, -132.475, -33.3973, 0.59", "-5.31299, -133.206, -33.5548, 0.07", "-5.57758, -133.529, -33.6318, 0.07", "-6.23176, -134.246, -33.8064, 1.1", "-6.79401, -134.848, -33.947, 0.07", "-7.19022, -135.282, -34.0271, 0.07", "-7.62098, -135.814, -34.1208, 1.03", "-7.89594, -136.206, -34.2046, 1.32", "-8.24943, -136.817, -34.3531, 1.32", "-8.81621, -138.03, -34.6552, 0.15", "-9.01627, -138.515, -34.7798, 0.15", "-9.39886, -139.502, -35.0212, 1.18", "-9.83337, -140.679, -35.3024, 0.07", "-10.1906, -141.665, -35.5286, 1.4", "-10.4197, -142.282, -35.6485, 1.54", "-11.0341, -143.925, -35.8922, 0.15", "-11.435, -145.003, -36.0128, 0.15", "-11.7177, -145.818, -36.0667, 1.69", "-11.8365, -146.165, -36.0724, 1.76", "-12.2986, -147.494, -36.0919, 0.07", "-12.646, -148.466, -36.1087, 0.07", "-12.9743, -149.376, -36.1351, 1.76", "-13.2552, -150.111, -36.1927, 1.76", "-13.6167, -150.964, -36.3055, 2.13", "-14.2465, -152.318, -36.5729, 0.07", "-14.6571, -153.117, -36.7751, 0.73", "-15.0402, -153.884, -36.983, 0.73", "-15.5555, -155.044, -37.2801, 0.07", "-15.9206, -155.985, -37.5027, 0.07", "-16.2794, -157.115, -37.748, 1.76", "-16.5883, -158.306, -37.9709, 1.4", "-16.916, -159.858, -38.2167, 0.22", "-17.2216, -161.713, -38.4412, 0.22", "-17.3591, -162.867, -38.5385, 1.18", "-17.3902, -163.227, -38.5615, 1.47", "-17.4482, -164.173, -38.6103, 1.18", "-17.5179, -165.619, -38.682, 0.22", "-17.5857, -166.414, -38.713, 0.88", "-17.6596, -167.007, -38.7458, 0.07", "-17.6848, -167.16, -38.7555, 0.07", "-17.7694, -167.585, -38.7887, 0.07", "-18.0146, -168.739, -38.8891, 1.91", "-18.1308, -169.271, -38.9604, 2.06", "-18.4915, -170.591, -39.1792, 0.07", "-18.6826, -171.175, -39.2888, 0.51", "-18.9351, -171.892, -39.4308, 0.07", "-19.3178, -172.896, -39.6302, 0.44", "-19.7715, -173.992, -39.8085, 0.07", "-20.1782, -174.912, -39.9213, 0.44", "-20.7116, -176.045, -40.0159, 1.98", "-20.9098, -176.441, -40.0407, 1.98", "-21.4888, -177.555, -40.0785, 1.47", "-21.9912, -178.499, -40.1072, 0.07", "-22.4404, -179.385, -40.1209, 0.07", "-22.8227, -180.196, -40.1497, 0.22", "-23.2162, -181.037, -40.1924, 1.69", "-23.4043, -181.443, -40.2248, 1.69", "-24.2113, -183.272, -40.4135, 0.15", "-24.3229, -183.544, -40.446, 0.07", "-24.6529, -184.331, -40.5074, 0.59", "-25.0986, -185.374, -40.5273, 0.07", "-25.6831, -186.68, -40.4988, 1.76", "-26.3062, -187.977, -40.461, 0.07", "-26.6179, -188.561, -40.4348, 0.07", "-27.3144, -189.719, -40.3568, 0.07", "-27.9093, -190.587, -40.277, 1.18", "-28.4154, -191.224, -40.2136, 2.13", "-29.0083, -191.877, -40.1451, 1.54", "-29.8891, -192.728, -40.0709, 0.07", "-30.5881, -193.336, -40.0589, 1.1", "-31.212, -193.846, -40.0921, 1.25", "-32.2849, -194.623, -40.1448, 0.07", "-32.8232, -194.977, -40.1545, 0.07", "-33.2055, -195.214, -40.1504, 0.37", "-34.1198, -195.789, -40.125, 0.07", "-34.8741, -196.288, -40.1233, 1.69", "-36.0418, -197.1, -40.1469, 0.07", "-36.9129, -197.728, -40.1732, 0.07", "-38.0105, -198.579, -40.2376, 1.47", "-38.7621, -199.222, -40.3146, 1.47", "-40.0292, -200.439, -40.4898, 0.15", "-40.7857, -201.243, -40.6345, 0.07", "-41.5732, -202.15, -40.8155, 2.13", "-42.2634, -202.98, -40.9813, 1.18", "-43.1437, -204.008, -41.2041, 0.22", "-43.6826, -204.613, -41.3324, 0.22", "-44.8029, -205.862, -41.5338, 0.29", "-45.6326, -206.773, -41.679, 1.4", "-45.9874, -207.159, -41.7466, 1.25", "-47.1297, -208.388, -41.9956, 0.15", "-47.5632, -208.854, -42.1015, 0.51", "-48.1972, -209.546, -42.2972, 0.07", "-48.7147, -210.161, -42.5071, 0.07", "-49.2923, -210.927, -42.7832, 1.54", "-50.1144, -212.087, -43.222, 0.07", "-50.4608, -212.605, -43.4138, 0.51", "-50.9461, -213.357, -43.6892, 0.07", "-51.5034, -214.206, -43.9774, 1.47", "-51.8029, -214.656, -44.1123, 1.54", "-52.5764, -215.787, -44.4345, 0.07", "-53.0709, -216.506, -44.604, 0.07", "-53.4124, -217.0, -44.7165, 1.47", "-54.0749, -217.964, -44.9099, 1.62", "-54.9166, -219.145, -45.1151, 0.15", "-55.3817, -219.777, -45.2088, 0.15", "-56.2113, -220.893, -45.345, 0.59", "-56.7361, -221.591, -45.4375, 0.07", "-57.284, -222.322, -45.5206, 0.07", "-58.0434, -223.41, -45.607, 2.13", "-58.786, -224.544, -45.6602, 0.15", "-59.3643, -225.52, -45.6914, 1.1", "-59.8204, -226.418, -45.7189, 1.69", "-60.2728, -227.565, -45.7438, 0.07", "-60.4423, -228.27, -45.7437, 0.44", "-60.4687, -229.021, -45.7273, 0.07", "-60.4013, -229.609, -45.7026, 0.07", "-60.155, -230.765, -45.6327, 1.25", "-60.0172, -231.271, -45.5995, 1.25", "-59.6112, -232.681, -45.5051, 0.07", "-59.2445, -234.066, -45.399, 0.07", "-59.153, -234.444, -45.3598, 0.81", "-59.0283, -235.077, -45.2597, 1.1", "-58.9158, -235.851, -45.0865, 1.4", "-58.7889, -237.504, -44.6785, 0.15", "-58.7648, -238.492, -44.4225, 0.15", "-58.8038, -239.635, -44.0291, 1.18", "-58.8956, -240.974, -43.5007, 0.15", "-59.0107, -241.998, -43.053, 1.62", "-59.1418, -242.851, -42.6548, 1.98", "-59.2159, -243.179, -42.4966, 1.98", "-59.7822, -245.072, -41.5619, 0.15", "-60.0102, -245.689, -41.2671, 0.15", "-60.3415, -246.474, -40.9027, 0.95", "-60.593, -247.017, -40.6188, 0.95", "-61.2248, -248.314, -39.8889, 0.07", "-61.8146, -249.451, -39.2565, 1.54", "-62.0328, -249.84, -39.042, 1.54", "-62.7762, -251.051, -38.3253, 0.07", "-63.6037, -252.292, -37.5792, 1.25", "-63.9555, -252.782, -37.2961, 1.25", "-64.5811, -253.622, -36.8925, 0.73", "-65.0762, -254.291, -36.6574, 0.07", "-65.5422, -254.929, -36.4954, 0.07", "-66.1823, -255.772, -36.3741, 0.15", "-66.9772, -256.816, -36.3181, 1.84", "-67.9425, -258.1, -36.2803, 0.15", "-68.6959, -259.14, -36.217, 0.15", "-69.0168, -259.605, -36.1811, 1.76", "-69.4301, -260.231, -36.1161, 1.54", "-70.3453, -261.607, -35.936, 0.22", "-71.1097, -262.729, -35.7518, 0.22", "-71.9134, -263.934, -35.5026, 1.25", "-72.1487, -264.278, -35.4246, 1.32", "-72.5124, -264.783, -35.3131, 1.1", "-73.1004, -265.584, -35.1482, 0.07", "-73.5465, -266.167, -35.035, 0.07", "-74.2737, -267.127, -34.8944, 0.07", "-74.7345, -267.735, -34.824, 1.1", "-75.4177, -268.647, -34.7004, 0.07", "-75.8669, -269.253, -34.6005, 1.62", "-76.78, -270.496, -34.3691, 0.15", "-77.353, -271.292, -34.2118, 0.15", "-77.9271, -272.084, -34.0427, 1.91", "-78.3085, -272.655, -33.9172, 1.91", "-78.9057, -273.617, -33.6996, 0.07", "-79.0803, -273.929, -33.6287, 0.37", "-79.2396, -274.286, -33.5564, 0.07", "-79.4912, -275.001, -33.3986, 0.07", "-79.6714, -275.633, -33.26, 0.07", "-79.8176, -276.116, -33.1531, 1.62", "-80.3075, -277.729, -32.8206, 0.15", "-80.6282, -278.726, -32.6276, 0.07", "-81.0318, -279.89, -32.4151, 1.47", "-81.2867, -280.555, -32.3059, 1.03", "-81.7902, -281.72, -32.131, 0.15", "-82.2375, -282.662, -32.0122, 0.73", "-82.7613, -283.635, -31.9231, 0.07", "-83.0291, -284.102, -31.8874, 0.29", "-83.5914, -285.174, -31.8356, 0.07", "-83.8899, -285.809, -31.7917, 1.03", "-84.1089, -286.355, -31.7437, 1.03", "-84.5037, -287.262, -31.6727, 0.07", "-84.9513, -288.233, -31.5828, 0.07", "-85.4333, -289.212, -31.4553, 0.07", "-85.6641, -289.609, -31.3917, 1.47", "-85.9104, -289.965, -31.3071, 1.47", "-87.089, -291.322, -30.8454, 0.07", "-87.8421, -292.05, -30.5246, 0.95", "-88.5686, -292.643, -30.2088, 0.07", "-89.656, -293.421, -29.7522, 0.07", "-90.7065, -294.104, -29.3271, 2.06", "-92.3581, -295.056, -28.686, 0.15", "-93.5109, -295.636, -28.2712, 0.07", "-94.5387, -296.109, -27.9661, 1.25", "-96.1729, -296.819, -27.5678, 0.15", "-97.091, -297.216, -27.3783, 0.15", "-98.1765, -297.71, -27.215, 0.29", "-99.0813, -298.171, -27.0995, 0.44", "-100.3, -298.887, -26.9372, 2.06", "-100.869, -299.3, -26.8435, 1.76", "-102.027, -300.341, -26.603, 0.07", "-102.774, -301.169, -26.4101, 0.51", "-103.323, -301.918, -26.2282, 0.07", "-103.87, -302.807, -26.0017, 0.07", "-104.331, -303.69, -25.7483, 1.03", "-104.542, -304.154, -25.5993, 0.66", "-104.844, -304.88, -25.3239, 0.07", "-104.968, -305.195, -25.1693, 0.07", "-105.123, -305.608, -24.9449, 0.51", "-105.427, -306.456, -24.4682, 0.07", "-105.741, -307.263, -24.0126, 0.88", "-106.244, -308.402, -23.3361, 1.69", "-106.889, -309.679, -22.553, 0.07", "-107.129, -310.059, -22.3026, 0.07", "-107.498, -310.562, -21.9665, 0.07", "-108.128, -311.278, -21.4789, 0.81", "-108.643, -311.791, -21.1223, 1.4", "-109.022, -312.117, -20.8973, 1.25", "-110.124, -313.039, -20.2816, 0.22", "-110.559, -313.454, -19.9881, 0.22", "-110.982, -313.959, -19.6128, 0.95", "-111.309, -314.462, -19.2464, 0.07", "-111.512, -314.806, -18.9901, 0.37", "-111.965, -315.564, -18.3962, 0.07", "-112.408, -316.309, -17.7851, 0.73", "-112.849, -317.026, -17.1115, 0.07", "-113.241, -317.664, -16.515, 0.66", "-113.664, -318.288, -15.9303, 0.22", "-113.98, -318.729, -15.538, 1.1", "-114.519, -319.429, -14.9604, 0.07", "-115.022, -320.037, -14.5059, 0.07", "-115.912, -321.113, -13.7876, 1.62", "-116.655, -322.056, -13.2324, 0.07", "-116.925, -322.43, -13.0516, 0.07", "-117.258, -322.912, -12.8304, 0.59", "-117.833, -323.715, -12.5164, 0.07", "-118.029, -323.997, -12.4003, 0.07", "-118.294, -324.414, -12.2096, 0.07", "-118.607, -324.994, -11.9476, 0.73", "-119.062, -325.996, -11.4973, 0.07", "-119.417, -326.935, -11.0319, 2.35", "-119.966, -328.572, -10.0395, 0.07", "-120.076, -328.848, -9.80273, 0.07", "-120.301, -329.315, -9.24975, 0.44", "-120.609, -329.831, -8.48182, 0.07", "-121.259, -330.616, -6.91351, 0.66", "-121.804, -330.982, -5.63224, 0.66", "-122.822, -331.251, -3.62255, 0.07", "-123.296, -331.292, -2.83952, 0.07", "-123.952, -331.246, -1.91237, 0.07", "-124.43, -331.166, -1.33393, 0.37", "-126.123, -330.806, 0.442891, 0.07", "-126.701, -330.7, 0.996094, 0.07", "-127.371, -330.595, 1.60599, 0.95", "-128.824, -330.37, 2.95443, 0.07", "-129.658, -330.241, 3.75336, 0.81", "-130.496, -330.094, 4.5313, 0.37", "-130.94, -329.971, 4.9194, 0.07", "-131.2, -329.87, 5.18035, 0.29", "-131.728, -329.563, 5.73728, 0.07", "-132.002, -329.337, 5.99776, 0.88", "-132.214, -329.101, 6.19867, 0.88", "-132.889, -328.323, 6.67189, 0.07", "-133.185, -328.029, 6.80312, 0.07", "-133.938, -327.521, 6.9092, 0.15", "-134.215, -327.411, 6.88977, 0.44", "-134.794, -327.298, 6.78168, 0.07", "-136.045, -327.18, 6.50382, 0.07", "-136.84, -327.164, 6.29661, 0.81", "-138.219, -327.188, 5.90891, 0.07", "-138.681, -327.216, 5.7716, 0.29", "-139.572, -327.283, 5.49519, 0.07", "-141.059, -327.433, 5.01378, 0.07", "-141.492, -327.48, 4.89056, 0.73" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "11.679, -16.8412, -11.0435, 0.44", "10.5967, -16.9401, -10.6605, 0.44", "9.83757, -17.0477, -10.4702, 0.44", "9.59985, -17.099, -10.4252, 1.1", "8.90642, -17.2949, -10.351, 1.1", "8.30222, -17.5008, -10.3324, 0.15", "7.76689, -17.7019, -10.3366, 0.88", "7.52717, -17.8151, -10.3706, 0.95", "7.10626, -18.0278, -10.4594, 0.59", "6.35987, -18.4117, -10.6647, 0.22", "5.79388, -18.6917, -10.858, 0.81", "5.60076, -18.7686, -10.9256, 0.88", "4.97612, -18.9632, -11.1786, 0.15", "4.50298, -19.0746, -11.4094, 0.15", "3.65055, -19.2317, -11.8601, 1.03", "3.19636, -19.3097, -12.1257, 1.32", "2.55253, -19.4132, -12.5369, 1.32", "1.63024, -19.5347, -13.1462, 0.07", "0.690844, -19.6402, -13.7725, 0.88", "0.277455, -19.6876, -14.0344, 0.88", "-0.495859, -19.7879, -14.4865, 0.37", "-1.10689, -19.8736, -14.8345, 0.37", "-1.70404, -19.9574, -15.167, 0.37", "-2.218, -20.0047, -15.4068, 1.18", "-2.6141, -20.0376, -15.5823, 1.4", "-2.8876, -20.0632, -15.7045, 1.32", "-3.65783, -20.1586, -16.0663, 0.22", "-4.01242, -20.2261, -16.2438, 0.22", "-4.6624, -20.3879, -16.5901, 1.18", "-5.52254, -20.6391, -17.0889, 0.07", "-6.03598, -20.8012, -17.388, 0.66", "-6.86206, -21.0783, -17.8546, 0.07", "-7.57452, -21.3437, -18.2303, 1.76", "-7.96157, -21.4959, -18.4181, 1.54", "-9.09789, -21.9579, -18.9144, 0.07", "-9.69087, -22.1815, -19.1277, 0.95", "-10.2266, -22.3613, -19.2939, 0.95", "-10.9437, -22.5707, -19.4869, 0.07", "-11.7618, -22.7859, -19.705, 0.07", "-12.3914, -22.9451, -19.8757, 0.07", "-13.1127, -23.1157, -20.0591, 1.69", "-14.1895, -23.3822, -20.3903, 0.07", "-15.0063, -23.5981, -20.6721, 0.07", "-15.8779, -23.8336, -20.9984, 1.84", "-16.4532, -23.9883, -21.2381, 1.4", "-17.045, -24.1548, -21.5047, 0.59", "-17.8483, -24.4082, -21.9412, 0.07", "-18.1616, -24.5118, -22.1296, 0.37", "-18.6081, -24.6574, -22.409, 0.07", "-19.3293, -24.8572, -22.8224, 1.32", "-19.6123, -24.9278, -22.9619, 1.32", "-21.1438, -25.2831, -23.616, 0.07", "-21.7385, -25.4152, -23.8305, 1.18", "-21.9687, -25.4673, -23.9068, 1.18", "-23.11, -25.7768, -24.2704, 0.07", "-23.8729, -26.0145, -24.4859, 0.88", "-24.6589, -26.2613, -24.698, 0.07", "-25.5386, -26.5404, -24.9128, 1.47", "-25.8872, -26.657, -25.0077, 1.98", "-27.1397, -27.1136, -25.4263, 0.15", "-27.5899, -27.2922, -25.6083, 0.37", "-28.2278, -27.5431, -25.8918, 0.07", "-28.7489, -27.7478, -26.1529, 0.81", "-29.0339, -27.8571, -26.3094, 1.25", "-29.8656, -28.1514, -26.7898, 0.15", "-30.7116, -28.4178, -27.3288, 0.15", "-31.2006, -28.5772, -27.6637, 0.88", "-31.9907, -28.8821, -28.2754, 0.07", "-32.3912, -29.0523, -28.6088, 1.25", "-32.6999, -29.189, -28.8803, 1.25", "-33.608, -29.6057, -29.7511, 0.07", "-33.9052, -29.7463, -30.0507, 0.73", "-34.7925, -30.1844, -30.9278, 0.07", "-35.1498, -30.3612, -31.2682, 0.07", "-35.7351, -30.6482, -31.8105, 1.32", "-36.8129, -31.1543, -32.7651, 0.29", "-37.1409, -31.2804, -33.0259, 0.07", "-37.4915, -31.3827, -33.2692, 0.59", "-38.1022, -31.5114, -33.6109, 0.07", "-38.3724, -31.5601, -33.7444, 0.07", "-38.9932, -31.6819, -33.9951, 1.18", "-39.8719, -31.8616, -34.3204, 0.15", "-40.6705, -32.035, -34.6145, 0.15", "-41.2309, -32.1574, -34.8083, 0.66", "-41.9393, -32.3229, -35.0378, 0.07", "-43.0749, -32.6007, -35.3753, 1.62", "-44.6033, -32.9754, -35.7797, 0.07", "-45.407, -33.1622, -35.9754, 0.07", "-46.1543, -33.3052, -36.1713, 0.07", "-46.8033, -33.3956, -36.3432, 0.07", "-47.8621, -33.4705, -36.6178, 1.47", "-48.3061, -33.4739, -36.7335, 1.47", "-49.2063, -33.4565, -37.0636, 0.07", "-50.0564, -33.4468, -37.4892, 0.07", "-50.8991, -33.4594, -38.0333, 0.07", "-51.7048, -33.5012, -38.6731, 0.07", "-52.2539, -33.5596, -39.1731, 1.1", "-53.6685, -33.7857, -40.5262, 0.44", "-54.206, -33.8988, -41.059, 1.32", "-55.0919, -34.1266, -41.9297, 1.32", "-56.1372, -34.4253, -42.9232, 0.22", "-56.7468, -34.6016, -43.4536, 0.22", "-57.2983, -34.758, -43.8714, 0.88", "-58.1113, -34.9901, -44.39, 0.07", "-58.8857, -35.2247, -44.8489, 1.25", "-59.8278, -35.5432, -45.3679, 0.07", "-60.2391, -35.6896, -45.5797, 0.66", "-60.9474, -35.9506, -45.9351, 0.07", "-61.629, -36.2167, -46.2774, 0.07", "-62.2621, -36.4732, -46.5867, 1.47", "-63.428, -36.9606, -47.1614, 0.07", "-63.7872, -37.1146, -47.3424, 0.07", "-64.2918, -37.3269, -47.5758, 0.59", "-64.7029, -37.4855, -47.7449, 0.07", "-64.8634, -37.5401, -47.808, 0.07", "-65.38, -37.6967, -48.0174, 1.03", "-66.0596, -37.8989, -48.2801, 0.07", "-66.5942, -38.0675, -48.4962, 0.07", "-67.1531, -38.2477, -48.6931, 0.07", "-67.7827, -38.4537, -48.8729, 0.07", "-68.3584, -38.6425, -49.0088, 0.73", "-68.7243, -38.7668, -49.083, 0.88", "-69.0291, -38.8771, -49.1331, 0.88", "-70.0378, -39.2748, -49.262, 0.07", "-70.3763, -39.4129, -49.2921, 0.07", "-70.7092, -39.55, -49.3167, 0.44", "-71.3912, -39.8103, -49.4042, 0.07", "-71.7728, -39.9293, -49.4668, 0.07", "-72.2321, -40.0523, -49.591, 1.25", "-72.9307, -40.2378, -49.8513, 0.07", "-73.3851, -40.3728, -50.0615, 0.07", "-73.9203, -40.5394, -50.3286, 0.95", "-74.3598, -40.6813, -50.5688, 0.95", "-75.2021, -40.9746, -51.0606, 0.15", "-75.6191, -41.1421, -51.3044, 0.81", "-76.5346, -41.567, -51.8153, 0.07", "-77.0746, -41.8595, -52.0932, 0.44", "-77.7407, -42.2708, -52.3931, 0.07", "-78.0549, -42.4856, -52.5176, 0.07", "-78.6798, -42.9473, -52.7278, 1.4", "-79.3123, -43.4673, -52.9076, 0.07", "-79.7299, -43.8362, -52.9869, 0.07", "-79.9131, -44.0056, -53.0147, 0.44", "-80.4905, -44.5506, -53.0721, 0.07", "-81.1848, -45.2136, -53.1376, 1.47", "-81.9406, -45.9447, -53.2, 0.37", "-82.8085, -46.8043, -53.2336, 0.07", "-82.9321, -46.9306, -53.2449, 0.07", "-83.3576, -47.3878, -53.2994, 0.59", "-83.783, -47.8701, -53.3645, 0.07", "-84.0867, -48.2304, -53.4208, 0.07", "-84.5972, -48.8869, -53.5553, 1.18", "-85.3448, -49.9543, -53.7818, 0.07", "-85.8376, -50.6706, -53.906, 0.07", "-86.0316, -50.9515, -53.9456, 0.81", "-86.4395, -51.5366, -54.003, 0.07", "-86.7731, -52.0034, -54.0515, 0.07", "-87.1517, -52.5331, -54.1004, 0.88", "-87.5564, -53.1089, -54.115, 0.07", "-87.7154, -53.3509, -54.1336, 0.07", "-87.9272, -53.7084, -54.1912, 0.73", "-88.354, -54.535, -54.4079, 0.07", "-88.5843, -55.0045, -54.5908, 0.07", "-88.7043, -55.2524, -54.6959, 0.07", "-88.9171, -55.6838, -54.9038, 0.95", "-89.223, -56.2918, -55.1991, 0.07", "-89.5001, -56.8044, -55.4257, 0.07", "-89.8471, -57.4078, -55.6631, 0.07", "-90.2906, -58.148, -55.9346, 0.07", "-90.5882, -58.6228, -56.1037, 1.25", "-91.3658, -59.8223, -56.497, 2.06", "-92.0056, -60.7702, -56.7725, 0.15", "-92.1655, -61.0041, -56.8384, 0.15", "-92.4616, -61.4411, -56.9559, 0.44", "-92.8013, -61.9305, -57.0994, 0.07", "-92.997, -62.206, -57.1646, 0.07", "-93.3147, -62.6418, -57.2483, 0.59", "-93.4426, -62.8553, -57.2943, 0.59", "-93.6931, -63.4606, -57.4111, 0.07", "-93.8445, -63.9764, -57.5033, 0.07", "-93.9566, -64.4238, -57.5916, 0.07", "-94.1293, -65.1903, -57.7603, 2.06", "-94.3927, -66.3752, -58.0513, 0.15", "-94.6597, -67.4741, -58.3309, 0.07", "-94.7889, -67.9221, -58.4864, 1.18", "-95.0746, -68.8035, -58.8447, 0.07", "-95.2222, -69.1906, -59.0176, 0.07", "-95.4602, -69.7257, -59.2835, 0.07", "-95.7466, -70.273, -59.5705, 1.32", "-96.4654, -71.5703, -60.2845, 0.07", "-96.7534, -72.1341, -60.5967, 0.07", "-96.9274, -72.5402, -60.8274, 0.81", "-97.1866, -73.1737, -61.2091, 0.07", "-97.2915, -73.4272, -61.3661, 0.07", "-97.4754, -73.8514, -61.6389, 0.88", "-97.7848, -74.5519, -62.0556, 0.07", "-98.0404, -75.1347, -62.4109, 0.07", "-98.3644, -75.9328, -62.8807, 1.69", "-98.7452, -76.9685, -63.4541, 0.07", "-99.0822, -77.8844, -63.9552, 0.07", "-99.36, -78.6375, -64.3478, 1.18", "-99.6154, -79.3795, -64.7014, 0.07", "-99.7634, -79.8439, -64.9012, 0.07", "-99.8444, -80.2207, -65.0533, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.34719, -21.1901, 0.0571768, 1.1", "-2.79786, -22.0585, -2.08691, 1.1", "-3.2065, -22.7325, -3.63806, 1.03", "-3.66784, -23.3562, -5.07818, 1.03", "-4.29912, -24.0845, -6.78201, 1.4", "-4.75624, -24.5706, -7.8966, 1.62", "-5.30646, -25.0759, -9.08988, 1.84", "-5.94113, -25.6579, -10.3258, 0.66", "-6.48259, -26.0703, -11.1948, 0.66", "-6.92481, -26.334, -11.7853, 0.66", "-7.42827, -26.5738, -12.3396, 0.66", "-8.38149, -26.9062, -13.2496, 2.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.34719, -21.1901, 0.0571768, 0.51", "-3.25703, -22.5646, 0.235838, 0.51", "-4.01644, -23.6137, 0.426163, 1.18", "-4.77642, -24.544, 0.608768, 1.76", "-5.71697, -25.6155, 0.7927, 1.03", "-6.38544, -26.3528, 0.882869, 1.03", "-6.89637, -26.9022, 0.92666, 1.25", "-7.68747, -27.679, 0.928506, 0.59", "-8.38772, -28.3502, 0.897974, 0.95", "-9.43776, -29.3857, 0.816449, 1.18", "-10.6367, -30.6126, 0.677499, 1.25", "-11.6218, -31.6452, 0.530109, 1.4", "-12.5023, -32.5974, 0.361446, 1.69", "-12.8023, -32.9375, 0.294826, 1.69", "-13.5004, -33.7724, 0.150401, 0.88", "-14.0923, -34.4986, 0.038773, 0.88", "-14.7222, -35.2556, -0.0624858, 0.59", "-15.2698, -35.876, -0.148554, 0.95", "-15.8058, -36.4303, -0.226618, 1.69", "-16.1746, -36.7706, -0.277492, 1.84", "-17.2453, -37.5874, -0.413929, 0.51", "-18.1247, -38.2048, -0.517666, 0.15", "-18.9226, -38.7449, -0.607142, 0.95", "-19.5459, -39.153, -0.667546, 1.69", "-20.1774, -39.546, -0.705011, 1.62", "-21.2844, -40.2005, -0.730199, 0.22", "-22.3202, -40.8066, -0.701473, 0.44", "-23.0195, -41.2416, -0.656156, 0.88", "-23.6638, -41.6704, -0.585612, 1.03", "-24.5311, -42.2877, -0.468392, 0.15", "-25.1923, -42.8058, -0.364213, 0.29", "-25.9074, -43.4156, -0.251105, 1.32", "-26.2947, -43.754, -0.197609, 1.69", "-27.2791, -44.6555, -0.0850056, 0.95", "-28.1983, -45.5297, 9.80786E-4, 0.51", "-28.9613, -46.2699, 0.0523159, 0.15", "-30.0334, -47.308, 0.115494, 1.54", "-30.7034, -47.9293, 0.145754, 1.54", "-31.3277, -48.4674, 0.168602, 1.32", "-32.3566, -49.2427, 0.194573, 0.07", "-32.9932, -49.662, 0.208735, 0.51", "-33.4975, -49.9505, 0.221392, 0.22", "-34.2839, -50.3532, 0.248908, 0.66", "-35.2342, -50.8017, 0.277811, 0.15", "-36.0369, -51.1513, 0.294385, 0.15", "-36.3746, -51.2836, 0.294099, 0.15", "-37.2046, -51.6128, 0.291582, 0.88" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-0.187622, -25.4878, 0.947401, 0.81", "0.293498, -26.3338, 0.608068, 0.81", "1.0076, -27.5722, 0.130718, 0.29", "1.73671, -28.793, -0.310287, 0.15", "2.2335, -29.5807, -0.575972, 0.88", "2.7528, -30.3729, -0.835056, 0.37", "3.34396, -31.2676, -1.12134, 0.15", "3.77388, -31.8914, -1.3163, 1.1", "4.48169, -32.8567, -1.61768, 1.25", "5.01386, -33.5617, -1.83875, 1.03", "5.81014, -34.615, -2.15738, 0.15", "6.11634, -35.0262, -2.27394, 0.15", "6.60738, -35.7087, -2.4744, 0.73", "6.81739, -36.0217, -2.57198, 0.73", "7.15057, -36.5725, -2.75639, 0.51", "7.81891, -37.8293, -3.19061, 0.22", "8.23752, -38.7054, -3.48852, 1.32", "8.66613, -39.6945, -3.82864, 0.73", "9.18037, -41.0342, -4.30008, 0.07", "9.41973, -41.6971, -4.54628, 0.15", "9.73736, -42.6186, -4.91774, 1.1", "9.92323, -43.2176, -5.1779, 1.18", "10.1563, -44.0356, -5.52631, 0.44", "10.3162, -44.6354, -5.76081, 0.07", "10.4322, -45.0626, -5.9005, 0.73", "10.6233, -45.6741, -6.06032, 0.44", "10.8337, -46.2618, -6.17333, 0.44", "11.0222, -46.7829, -6.23271, 0.37", "11.2385, -47.3716, -6.26365, 1.03", "11.4838, -48.0261, -6.29216, 1.25", "11.6422, -48.4255, -6.30903, 1.54", "11.9969, -49.2506, -6.34735, 0.51", "12.3452, -50.0036, -6.4013, 0.44", "12.9505, -51.2048, -6.49832, 0.44", "13.4021, -52.0568, -6.57582, 0.59", "13.7322, -52.6536, -6.63831, 1.54", "14.0356, -53.1715, -6.69845, 1.76", "14.3938, -53.7352, -6.7734, 1.25", "14.814, -54.3494, -6.87782, 1.47", "15.4496, -55.266, -7.06888, 0.66", "15.8536, -55.866, -7.218, 0.73", "16.1569, -56.3243, -7.35892, 1.1", "16.6405, -57.0722, -7.62303, 1.69", "17.0532, -57.7336, -7.88427, 0.88", "17.5159, -58.5124, -8.22281, 0.22", "17.8497, -59.1176, -8.49967, 0.81", "18.2067, -59.7945, -8.82248, 0.37", "18.5839, -60.5421, -9.18574, 0.37", "18.8556, -61.1116, -9.46513, 0.66", "18.9784, -61.3813, -9.59512, 0.95", "19.1587, -61.7883, -9.79389, 0.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.187622, -25.4878, 0.947401, 0.59", "-0.195599, -26.1611, 1.21138, 0.59", "-0.228938, -26.717, 1.42967, 0.59", "-0.25156, -27.099, 1.56237, 0.59", "-0.271584, -27.5782, 1.73053, 0.66", "-0.288032, -28.0985, 1.92127, 0.95", "-0.307094, -28.7857, 2.17294, 1.25", "-0.33203, -29.1091, 2.28619, 0.95", "-0.41261, -29.8226, 2.5232, 0.73", "-0.465872, -30.2934, 2.68483, 1.32", "-0.502746, -30.7504, 2.8526, 1.62", "-0.528629, -31.1179, 2.99524, 1.62", "-0.583549, -31.757, 3.25964, 0.59", "-0.646839, -32.3288, 3.5021, 0.59", "-0.719799, -32.9421, 3.77734, 0.81", "-0.801449, -33.5941, 4.06881, 1.1", "-0.838999, -33.8772, 4.19796, 2.06", "-0.926929, -34.555, 4.51468, 1.03", "-0.999889, -35.1781, 4.79333, 0.51", "-1.06726, -35.6712, 4.98933, 1.1", "-1.16389, -36.3107, 5.21656, 0.66", "-1.26497, -36.9902, 5.44631, 2.13", "-1.33691, -37.5257, 5.64417, 2.13", "-1.38963, -37.9523, 5.80088, 2.13", "-1.43545, -38.3294, 5.93895, 2.13", "-1.55092, -39.1968, 6.25148, 1.76", "-1.62537, -39.9519, 6.53457, 2.42", "-1.67923, -40.7639, 6.87614, 2.94" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.2988, 5.38682, -1.76734, 1.03", "-13.8416, 6.10879, -2.13828, 1.03", "-13.4194, 6.81782, -2.48099, 0.29", "-12.9822, 7.62508, -2.84633, 1.18", "-12.6889, 8.25892, -3.09362, 1.47", "-12.1335, 9.68271, -3.60899, 1.18", "-11.9295, 10.3071, -3.8287, 1.4", "-11.7973, 10.9453, -4.04523, 1.4", "-11.7272, 11.7511, -4.36716, 0.73", "-11.7898, 12.699, -4.77869, 0.51", "-11.8856, 13.2882, -5.04109, 0.15", "-12.0537, 13.9902, -5.36273, 1.25", "-12.2551, 14.9416, -5.83937, 1.47", "-12.4338, 16.1972, -6.56236, 1.18", "-12.5024, 17.0667, -7.096, 0.51", "-12.4887, 17.8532, -7.58333, 0.07", "-12.364, 18.895, -8.20309, 1.25", "-12.0863, 20.1668, -8.93085, 0.37", "-11.7331, 21.1875, -9.52017, 1.03", "-11.5281, 21.6281, -9.78712, 1.18", "-11.1398, 22.2276, -10.2119, 1.03", "-10.3645, 23.1665, -11.0178, 0.81", "-9.83127, 23.7068, -11.5803, 0.29", "-9.16196, 24.3084, -12.3335, 1.25", "-8.60348, 24.805, -13.0142, 1.32", "-7.93399, 25.5077, -14.0719, 1.32", "-7.59831, 25.9802, -14.8158, 1.32", "-7.34834, 26.409, -15.5043, 1.32", "-6.96936, 27.1569, -16.7407, 1.4", "-6.82707, 27.5084, -17.3563, 1.25", "-6.59959, 28.4136, -18.9731, 1.25", "-6.4876, 29.127, -20.2112, 1.25", "-6.35721, 29.7762, -21.2668, 1.25", "-6.15484, 30.4111, -22.2573, 1.25", "-5.96503, 30.9651, -23.048, 1.25", "-5.67078, 31.6909, -23.9879, 0.59", "-5.53983, 32.0267, -24.337, 0.95", "-5.33262, 32.8865, -25.0551, 0.66", "-5.17482, 33.7114, -25.6297, 1.69", "-4.86141, 34.9676, -26.4677, 0.15", "-4.76654, 35.2453, -26.6535, 0.15", "-4.4715, 35.9017, -27.1352, 1.4", "-3.5707, 37.616, -28.4723, 0.29", "-3.19159, 38.1985, -28.9574, 1.4", "-2.47491, 39.1059, -29.7403, 0.51", "-1.96396, 39.5977, -30.1649, 0.95", "-1.09961, 40.3146, -30.7742, 0.07", "-0.457871, 40.7934, -31.1826, 0.73", "0.343809, 41.3644, -31.6454, 0.07", "0.71494, 41.6661, -31.9027, 1.1", "1.44834, 42.3998, -32.5303, 0.07", "1.80006, 42.8177, -32.9218, 0.73", "2.53646, 43.8331, -33.9796, 0.59", "2.63946, 43.9988, -34.1719, 1.4", "3.15028, 44.9253, -35.3037, 1.4", "3.47269, 45.5724, -36.0946, 1.4", "3.60596, 45.8756, -36.4453, 1.03", "3.83775, 46.3773, -36.9834, 1.03", "4.15896, 47.0025, -37.5858, 0.66", "4.6626, 47.9105, -38.3568, 0.95", "4.88047, 48.3095, -38.6801, 1.25", "5.67786, 49.9466, -39.9385, 0.07", "6.11937, 51.0106, -40.7004, 1.1", "6.40608, 51.8622, -41.2654, 0.07", "6.59662, 52.5648, -41.7087, 1.18", "7.00847, 54.6943, -43.023, 1.18", "7.09287, 55.2637, -43.3805, 1.25", "7.18539, 56.1489, -43.9121, 0.37", "7.22022, 56.5679, -44.1724, 0.37", "7.27543, 57.651, -44.94, 1.47", "7.30936, 58.609, -45.667, 0.81", "7.35563, 59.7049, -46.4965, 0.07", "7.42263, 60.4508, -47.1866, 0.51", "7.50379, 61.1526, -47.9393, 0.15", "7.68318, 62.2934, -49.2856, 0.73", "7.74687, 62.6126, -49.6848, 0.73", "7.85028, 63.1539, -50.3718, 1.25", "7.96528, 64.4617, -51.9789, 0.07", "7.96149, 64.6491, -52.205, 0.44", "7.89235, 65.2882, -52.9035, 0.07", "7.84047, 65.6279, -53.2465, 1.25", "7.64407, 66.6257, -54.1937, 0.29", "7.48141, 67.429, -54.9191, 1.4", "7.06235, 69.5429, -56.7186, 0.07", "6.9582, 70.2158, -57.2769, 0.59", "6.83047, 71.5327, -58.3715, 0.15", "6.78464, 72.6426, -59.2843, 2.13", "6.8155, 74.2959, -60.5912, 0.66", "6.8571, 74.9253, -61.0621, 0.51", "6.95086, 75.852, -61.6777, 1.4", "7.0975, 77.2245, -62.593, 0.22", "7.12112, 77.5474, -62.7948, 0.22", "7.1471, 78.4675, -63.3686, 1.1", "7.12762, 79.1265, -63.7518, 0.59", "7.11701, 79.6503, -64.078, 1.1", "7.22181, 81.2601, -65.1919, 0.37", "7.27932, 81.5624, -65.4019, 0.59", "7.55842, 82.3865, -66.0154, 0.07", "7.88431, 83.0239, -66.518, 0.73", "8.64611, 84.2962, -67.5654, 1.32", "9.53949, 85.5409, -68.6602, 0.07", "10.0503, 86.0888, -69.1602, 0.81", "10.5304, 86.5318, -69.596, 0.37", "10.9309, 86.8229, -69.9105, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.2988, 5.38682, -1.76734, 2.42", "-14.9343, 5.7055, -1.87635, 2.42", "-16.4265, 6.45376, -2.13232, 1.47" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-22.9749, 11.9868, 14.3248, 0.88", "-23.0116, 14.1275, 14.7152, 0.88", "-22.9925, 15.4721, 14.982, 0.66", "-22.9864, 16.0932, 15.106, 0.66", "-22.979, 17.2126, 15.2998, 0.66", "-22.9717, 18.2033, 15.4271, 0.59", "-22.9647, 18.9117, 15.4907, 0.59", "-22.9243, 19.8462, 15.5286, 0.81", "-22.8866, 20.6307, 15.5458, 1.32", "-22.8184, 22.2247, 15.5207, 0.29", "-22.7804, 23.4141, 15.4346, 0.29", "-22.7829, 24.0755, 15.3494, 0.29", "-22.8013, 24.6449, 15.2492, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-22.9749, 11.9868, 14.3248, 0.95", "-24.9254, 12.0604, 14.865, 0.95", "-25.9563, 12.1293, 15.16, 0.95", "-26.8635, 12.2283, 15.4547, 0.95", "-27.3457, 12.2979, 15.6312, 1.03", "-28.0298, 12.4059, 15.9102, 0.88", "-29.1975, 12.5887, 16.4052, 0.51", "-30.2189, 12.7699, 16.8691, 1.03", "-30.9757, 12.8951, 17.2061, 1.32", "-31.7678, 13.0284, 17.5678, 1.32", "-32.9484, 13.2352, 18.0996, 1.4", "-33.5458, 13.3421, 18.3772, 0.73", "-34.2347, 13.4516, 18.6989, 0.73", "-34.7199, 13.5079, 18.8973, 0.88", "-35.3213, 13.5521, 19.0999, 0.44", "-36.5307, 13.6285, 19.4262, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "111.38, 277.183, -142.256, 0.37", "110.995, 278.074, -143.175, 0.37", "110.722, 278.802, -143.906, 0.81", "110.442, 279.526, -144.598, 0.29", "110.132, 280.342, -145.339, 0.07", "109.904, 280.973, -145.89, 0.88", "109.678, 281.68, -146.486, 0.07", "109.449, 282.504, -147.128, 0.07", "109.292, 283.142, -147.579, 0.07", "109.195, 283.57, -147.872, 1.18", "108.976, 284.543, -148.605, 0.15", "108.811, 285.226, -149.111, 0.59" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "111.38, 277.183, -142.256, 0.15", "111.539, 277.612, -142.436, 0.15", "111.747, 278.232, -142.714, 0.15", "111.907, 278.759, -142.983, 0.15", "111.969, 278.988, -143.102, 1.18", "112.127, 279.66, -143.443, 0.07", "112.246, 280.266, -143.755, 0.07", "112.315, 280.805, -144.038, 1.25", "112.388, 281.593, -144.443, 0.07", "112.42, 282.076, -144.667, 0.07", "112.445, 282.65, -144.926, 0.73", "112.474, 283.145, -145.14, 0.07", "112.516, 283.58, -145.322, 0.07", "112.632, 284.534, -145.688, 2.06", "112.788, 285.561, -146.066, 0.07", "112.91, 286.12, -146.271, 0.88", "113.131, 286.898, -146.546, 0.07", "113.311, 287.453, -146.74, 0.07", "113.413, 287.747, -146.846, 0.07", "113.636, 288.338, -147.08, 1.32", "113.883, 288.961, -147.338, 0.22", "114.07, 289.488, -147.571, 0.22", "114.209, 290.004, -147.825, 0.07", "114.34, 290.676, -148.202, 0.81", "114.408, 291.222, -148.554, 0.81", "114.427, 291.719, -148.898, 1.25", "114.409, 292.437, -149.405, 0.07", "114.384, 292.92, -149.745, 0.07", "114.345, 293.467, -150.112, 0.95", "114.271, 294.333, -150.667, 0.07", "114.219, 294.922, -151.021, 1.54", "114.167, 295.804, -151.524, 0.07", "114.144, 296.739, -152.004, 0.07", "114.155, 297.26, -152.261, 0.07", "114.192, 297.9, -152.586, 0.95", "114.215, 298.232, -152.763, 0.95", "114.262, 298.963, -153.192, 0.07", "114.267, 299.459, -153.498, 0.07", "114.257, 300.012, -153.838, 0.88", "114.198, 301.014, -154.446, 0.07", "114.145, 301.599, -154.773, 0.95", "114.1, 302.091, -155.022, 0.07", "114.013, 303.188, -155.47, 0.07", "114.012, 304.011, -155.71, 1.18", "114.058, 304.535, -155.792, 1.18", "114.198, 305.416, -155.841, 0.07", "114.319, 306.017, -155.846, 0.07", "114.523, 307.063, -155.839, 0.07", "114.71, 308.276, -155.829, 0.07", "114.767, 309.037, -155.839, 0.07", "114.773, 309.687, -155.867, 0.07", "114.709, 310.793, -155.966, 0.07", "114.565, 312.017, -156.139, 0.07", "114.379, 313.157, -156.359, 0.07", "114.138, 314.481, -156.663, 0.07", "114.068, 314.981, -156.794, 0.22", "113.993, 315.684, -156.98, 0.07", "113.93, 316.8, -157.286, 0.07", "113.942, 317.424, -157.465, 0.37", "114.015, 318.24, -157.72, 0.07", "114.166, 319.174, -158.053, 0.88" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.38149, -26.9062, -13.2496, 1.1", "-8.91928, -28.0459, -14.0994, 1.1", "-9.43208, -29.1463, -14.8138, 0.81", "-9.73127, -29.8264, -15.2027, 1.1", "-9.94637, -30.3695, -15.4558, 1.4", "-10.3221, -31.3641, -15.8894, 0.07", "-10.5316, -31.9532, -16.137, 0.15", "-10.8065, -32.8862, -16.4886, 1.91", "-10.9756, -33.7327, -16.8016, 1.62", "-11.1808, -35.4138, -17.4712, 0.22", "-11.2701, -36.7046, -18.0422, 2.28", "-11.2834, -37.5681, -18.4943, 1.62", "-11.243, -39.056, -19.3767, 0.29", "-11.2163, -40.0431, -20.0265, 1.03", "-11.2248, -41.0318, -20.7593, 0.59", "-11.2825, -41.7246, -21.3389, 0.15", "-11.5236, -42.7086, -22.224, 1.69", "-11.7693, -43.2947, -22.7808, 2.06", "-12.4669, -44.4139, -23.8537, 0.29", "-12.949, -45.0339, -24.4345, 0.29", "-13.6732, -45.8798, -25.116, 2.06", "-14.9297, -47.3296, -26.0589, 0.44", "-15.3197, -47.7836, -26.2966, 0.44", "-15.8699, -48.4631, -26.579, 1.84", "-16.4338, -49.2455, -26.8154, 1.62", "-17.1694, -50.3875, -27.0581, 0.22", "-17.8761, -51.5172, -27.2125, 0.22", "-18.5058, -52.5339, -27.2914, 1.98", "-19.3054, -53.7869, -27.3832, 0.66", "-19.9307, -54.724, -27.4804, 0.66", "-20.3144, -55.2361, -27.5531, 0.22", "-21.0362, -56.0447, -27.7318, 1.98", "-21.4979, -56.4756, -27.8549, 1.98", "-22.1095, -56.9262, -28.0352, 1.47", "-23.4091, -57.6842, -28.453, 0.15", "-24.4163, -58.1771, -28.7883, 0.15", "-25.5034, -58.6867, -29.16, 2.06", "-26.2208, -59.0164, -29.4174, 2.06", "-27.5032, -59.6042, -29.8858, 0.44", "-28.3367, -60.0126, -30.204, 1.03", "-29.3574, -60.5503, -30.5984, 0.07", "-30.1664, -61.0347, -30.9342, 0.07", "-31.2908, -61.8108, -31.4243, 1.76", "-31.5612, -62.0333, -31.545, 1.76", "-32.61, -63.0769, -32.0442, 0.22", "-32.8738, -63.3651, -32.1835, 0.22", "-33.4732, -64.0574, -32.5365, 1.4", "-33.872, -64.5102, -32.7946, 1.84", "-34.6766, -65.4028, -33.3147, 0.37", "-35.0752, -65.8094, -33.578, 0.37", "-35.6988, -66.3984, -33.9931, 0.07", "-36.3664, -66.9848, -34.4313, 1.25", "-37.4323, -67.8443, -35.118, 0.29", "-38.1875, -68.41, -35.5972, 1.91", "-38.7471, -68.8225, -35.9722, 1.25", "-39.572, -69.4613, -36.5294, 0.15", "-40.4441, -70.2076, -37.1259, 0.15", "-40.8781, -70.6193, -37.4161, 0.88", "-41.1476, -70.942, -37.615, 1.18", "-41.94, -72.1525, -38.268, 0.22", "-42.2649, -72.7959, -38.5513, 0.22", "-42.3837, -73.1374, -38.6759, 1.18", "-42.5309, -73.7769, -38.8803, 1.18", "-42.7466, -75.0743, -39.2394, 0.29", "-42.8443, -75.8484, -39.4173, 0.29", "-42.9039, -76.5476, -39.5267, 1.03", "-42.9712, -77.5893, -39.6887, 1.84", "-43.0284, -78.6361, -39.8434, 0.44", "-43.0523, -79.3283, -39.9303, 0.44", "-43.0754, -79.7803, -39.9617, 0.07", "-43.1244, -81.0421, -40.0489, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.38149, -26.9062, -13.2496, 0.95", "-9.57117, -27.1187, -12.4607, 0.95", "-10.5049, -27.3138, -11.984, 0.22", "-10.9185, -27.4298, -11.8534, 0.37", "-11.393, -27.5995, -11.763, 0.07", "-12.0519, -27.8732, -11.6872, 0.07", "-12.4591, -28.0608, -11.6593, 0.95", "-12.7594, -28.2191, -11.6829, 1.03", "-13.5719, -28.6754, -11.7909, 0.07", "-14.2126, -29.0593, -11.8715, 0.07", "-14.8971, -29.4917, -11.9479, 1.84", "-15.7568, -30.0533, -12.0482, 0.07", "-16.1623, -30.3141, -12.0928, 0.07", "-16.3366, -30.4267, -12.1116, 0.81", "-16.754, -30.697, -12.1518, 0.07", "-17.2441, -31.002, -12.2154, 0.07", "-17.8501, -31.3597, -12.3169, 0.51", "-18.1737, -31.543, -12.3777, 0.07", "-18.527, -31.7368, -12.4471, 0.07", "-19.1003, -32.0378, -12.5583, 1.4", "-19.9919, -32.5036, -12.7372, 0.07", "-20.7568, -32.9089, -12.9092, 0.07", "-21.5356, -33.3252, -13.0987, 1.69", "-22.5312, -33.846, -13.3872, 0.07", "-23.1065, -34.1368, -13.5849, 0.07", "-23.3872, -34.2819, -13.6967, 1.1", "-24.0582, -34.6373, -14.0079, 0.07", "-24.5701, -34.9073, -14.2645, 0.07", "-25.1989, -35.2355, -14.591, 0.88", "-25.9019, -35.6011, -14.9705, 0.07", "-26.5756, -35.9453, -15.3402, 1.84", "-27.5226, -36.4018, -15.8265, 0.07", "-28.1393, -36.6829, -16.1292, 0.07", "-28.5621, -36.8643, -16.3322, 0.59", "-29.297, -37.1818, -16.6668, 0.07", "-29.8151, -37.4079, -16.8949, 0.07", "-30.3804, -37.6413, -17.1316, 1.54", "-31.3929, -38.0164, -17.52, 0.07", "-32.018, -38.2216, -17.7551, 0.07", "-32.7187, -38.4348, -17.99, 0.07", "-33.2386, -38.5957, -18.1316, 0.07", "-33.8558, -38.7795, -18.2645, 1.18", "-34.5141, -38.9614, -18.3863, 0.07", "-35.104, -39.1276, -18.471, 0.07", "-36.0314, -39.4347, -18.5345, 0.07", "-36.7329, -39.7164, -18.544, 1.18", "-37.54, -40.1029, -18.5286, 0.07", "-37.9562, -40.3273, -18.5095, 0.07", "-38.9467, -40.8969, -18.4401, 0.07", "-40.5307, -41.8196, -18.3005, 3.01", "-42.2913, -42.8404, -18.1315, 0.07", "-43.1518, -43.3348, -18.058, 0.07", "-43.5894, -43.5873, -18.03, 0.07", "-44.0642, -43.8493, -18.0123, 0.73", "-44.7634, -44.1951, -18.0343, 0.07", "-45.089, -44.3257, -18.0941, 0.81", "-45.9278, -44.5923, -18.3283, 0.07", "-46.402, -44.7255, -18.4916, 0.29", "-46.8637, -44.8531, -18.6735, 0.07", "-47.4279, -45.007, -18.9096, 0.95", "-48.3073, -45.2459, -19.3424, 0.07", "-48.8142, -45.3888, -19.6164, 0.07", "-49.1019, -45.4778, -19.7658, 0.81", "-49.8413, -45.7095, -20.147, 0.07", "-50.2529, -45.8382, -20.36, 1.1", "-51.3867, -46.2072, -20.9474, 0.07", "-51.9591, -46.424, -21.2607, 0.07", "-52.9759, -46.8419, -21.8607, 2.13" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-1.67923, -40.7639, 6.87614, 0.88", "-1.07761, -41.7917, 6.87099, 0.88", "-0.786239, -42.2907, 6.87361, 0.81", "-0.264129, -43.1831, 6.87667, 0.66", "0.216785, -44.0048, 6.87484, 0.51", "0.600876, -44.6818, 6.85196, 0.44", "0.902332, -45.2397, 6.80944, 0.07", "1.08487, -45.6155, 6.76598, 0.07", "1.19817, -45.8814, 6.72028, 1.18", "1.45241, -46.5144, 6.56854, 1.4", "1.87647, -47.5097, 6.28766, 0.37", "2.27367, -48.365, 6.03569, 0.44", "2.51795, -48.8829, 5.8894, 0.73", "2.61303, -49.0881, 5.83834, 0.95", "2.9592, -49.8415, 5.68682, 0.51", "3.50452, -51.0068, 5.52299, 0.22", "3.98966, -52.0009, 5.45401, 0.29", "4.27337, -52.571, 5.44672, 0.29", "4.49666, -53.0259, 5.45986, 0.29", "4.68736, -53.4577, 5.48087, 0.29", "4.83493, -53.8424, 5.50949, 0.44", "5.02033, -54.3948, 5.57469, 1.4", "5.2249, -55.0448, 5.66397, 0.07", "5.40421, -55.5959, 5.72875, 0.51", "5.55133, -56.0189, 5.76399, 1.03" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-1.67923, -40.7639, 6.87614, 1.47", "-1.75671, -42.426, 7.79435, 1.47", "-1.83343, -43.3116, 8.29236, 1.4", "-1.98603, -44.401, 8.9167, 0.66", "-2.17561, -45.3425, 9.452, 0.73", "-2.29269, -45.9344, 9.78296, 1.1", "-2.46146, -46.8187, 10.2439, 1.32", "-2.65242, -48.0578, 10.8665, 0.51", "-2.77704, -48.7608, 11.2068, 1.32", "-3.04813, -49.881, 11.7503, 0.73", "-3.34824, -50.8441, 12.2014, 0.29", "-3.74088, -51.9401, 12.7032, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-16.4265, 6.45376, -2.13232, 0.95", "-17.0755, 6.26621, -2.10005, 0.95", "-18.1397, 5.90356, -2.13638, 1.1", "-18.8229, 5.65764, -2.20045, 0.88", "-20.354, 5.13871, -2.4026, 0.37", "-21.4188, 4.82497, -2.55565, 0.44", "-22.663, 4.49308, -2.72716, 0.66", "-23.6978, 4.20864, -2.89908, 0.73", "-24.5709, 3.94781, -3.05416, 0.66", "-25.6242, 3.61407, -3.2019, 0.66", "-26.7328, 3.23103, -3.29171, 0.51", "-27.8719, 2.82612, -3.31958, 1.18", "-29.1963, 2.30701, -3.29039, 1.91", "-30.547, 1.6988, -3.21896, 1.4", "-32.4808, 0.740233, -3.10647, 0.51", "-33.491, 0.207452, -3.06249, 0.95", "-34.211, -0.177506, -3.05477, 1.18", "-35.2963, -0.708782, -3.08102, 0.73", "-36.3194, -1.11591, -3.14278, 0.37", "-37.0835, -1.33509, -3.22321, 0.37", "-37.9891, -1.48399, -3.35963, 1.1", "-38.7676, -1.55588, -3.48247, 1.25", "-39.6476, -1.60928, -3.6089, 1.62", "-40.9045, -1.65117, -3.75686, 0.81", "-41.9842, -1.71151, -3.85739, 0.51", "-43.1328, -1.8654, -3.96231, 0.51", "-44.3717, -2.10643, -4.0864, 0.59", "-45.4019, -2.37193, -4.21023, 1.32", "-46.0753, -2.60053, -4.30391, 1.98", "-47.4805, -3.20413, -4.53399, 1.76", "-49.4435, -4.24687, -4.89561, 0.22", "-50.4657, -4.89396, -5.09029, 0.22", "-51.0405, -5.31086, -5.2032, 0.95", "-51.7268, -5.85578, -5.33156, 0.88", "-52.3828, -6.42179, -5.43823, 0.44", "-53.0514, -7.01281, -5.53029, 0.66", "-54.3194, -8.12684, -5.65603, 1.91", "-54.8626, -8.57079, -5.70669, 1.98", "-56.364, -9.64265, -5.84115, 0.22", "-57.5492, -10.3731, -5.94692, 0.22", "-58.3326, -10.826, -6.01094, 0.51", "-59.3821, -11.4049, -6.08983, 1.84", "-60.1936, -11.8343, -6.14134, 1.91", "-61.1919, -12.35, -6.15437, 1.54", "-62.9197, -13.2112, -6.09605, 0.37", "-64.0419, -13.7674, -6.02813, 0.37", "-64.857, -14.1978, -5.95105, 0.88", "-65.4375, -14.5327, -5.87283, 1.1", "-66.847, -15.4401, -5.61074, 0.15", "-67.9533, -16.1851, -5.37504, 0.15", "-68.8448, -16.782, -5.17363, 1.69", "-69.5333, -17.2205, -5.02239, 1.54", "-71.088, -18.1909, -4.72442, 0.15", "-71.7445, -18.614, -4.61197, 0.15", "-72.7816, -19.3214, -4.50093, 0.15", "-73.6594, -19.9615, -4.43142, 1.32", "-74.3795, -20.5006, -4.40172, 1.32", "-75.0337, -21.0148, -4.41248, 1.47", "-75.4928, -21.4185, -4.45378, 1.47", "-76.5181, -22.4509, -4.55736, 0.15", "-76.9698, -22.9727, -4.60781, 0.15", "-77.3505, -23.4191, -4.66064, 0.81", "-77.8447, -23.9713, -4.72786, 1.18", "-78.7139, -24.8523, -4.82025, 0.07", "-79.5249, -25.6138, -4.87545, 0.07", "-79.9736, -26.0072, -4.88358, 1.1", "-80.6993, -26.6127, -4.90217, 1.54", "-81.6349, -27.3402, -4.93168, 1.4", "-83.2239, -28.5011, -4.97835, 0.44", "-84.1238, -29.1316, -4.99926, 0.07", "-85.6364, -30.1788, -5.01461, 0.07", "-86.624, -30.8574, -5.00573, 1.18", "-87.7119, -31.5994, -4.97709, 2.28", "-89.0503, -32.4613, -4.93711, 0.59", "-90.2488, -33.1957, -4.88861, 0.29", "-91.372, -33.8649, -4.79313, 0.29", "-92.9642, -34.8345, -4.57311, 0.07", "-94.2208, -35.622, -4.34056, 1.69", "-94.9621, -36.1058, -4.18065, 1.76", "-96.4611, -37.1037, -3.85232, 0.07", "-97.7709, -37.9845, -3.56694, 0.15", "-98.4126, -38.4243, -3.44261, 0.15", "-99.4986, -39.1885, -3.26582, 1.32", "-100.525, -39.9062, -3.14598, 1.32", "-101.756, -40.7422, -3.05554, 0.07", "-103.042, -41.5752, -3.02077, 0.37", "-104.231, -42.2766, -3.00716, 1.84", "-105.145, -42.7605, -2.98719, 1.84", "-106.576, -43.4446, -2.93481, 0.07", "-107.649, -43.9144, -2.89845, 0.37", "-109.132, -44.5019, -2.84195, 0.07", "-110.762, -45.0928, -2.77967, 1.91", "-111.419, -45.3207, -2.74899, 1.91", "-112.891, -45.8447, -2.68334, 0.51", "-114.106, -46.2855, -2.64617, 0.15", "-114.951, -46.6118, -2.62624, 0.15", "-115.645, -46.9, -2.61588, 0.44", "-116.734, -47.4124, -2.6258, 0.07", "-117.67, -47.8772, -2.63477, 1.03", "-118.215, -48.167, -2.64181, 1.25", "-119.418, -48.8697, -2.65591, 0.59", "-120.507, -49.5492, -2.68493, 1.03", "-121.272, -50.0199, -2.71282, 1.54", "-122.721, -50.9097, -2.79149, 0.07", "-123.508, -51.3997, -2.83084, 0.07", "-124.64, -52.1158, -2.89106, 0.07", "-124.953, -52.3094, -2.90596, 1.1", "-125.788, -52.8097, -2.94485, 1.32", "-126.814, -53.4181, -2.99902, 0.07", "-127.659, -53.9156, -3.04583, 0.07", "-128.585, -54.4533, -3.12182, 1.32", "-129.294, -54.8847, -3.19881, 1.32", "-130.872, -55.9551, -3.43821, 0.07", "-131.236, -56.2316, -3.49581, 0.51", "-132.195, -57.0103, -3.63851, 0.07", "-132.733, -57.4904, -3.72468, 0.95", "-133.265, -58.0477, -3.79656, 1.32", "-134.408, -59.4009, -3.91583, 0.07", "-135.193, -60.4486, -3.93478, 1.62", "-135.645, -61.0788, -3.91641, 2.06", "-135.968, -61.5462, -3.86172, 1.91", "-136.757, -62.6695, -3.6266, 0.73", "-137.248, -63.3557, -3.41687, 0.07", "-137.909, -64.2841, -3.02435, 0.73", "-138.727, -65.3921, -2.51916, 0.07", "-139.585, -66.5151, -1.99045, 1.54", "-140.523, -67.6666, -1.41799, 0.07", "-141.353, -68.6035, -0.939543, 0.07", "-142.169, -69.4701, -0.479786, 0.07", "-142.823, -70.097, -0.133964, 1.69", "-143.64, -70.7975, 0.273102, 1.91", "-144.94, -71.8118, 0.849233, 0.07", "-145.701, -72.334, 1.15791, 0.37", "-146.929, -73.0772, 1.59551, 0.15", "-147.726, -73.4964, 1.83804, 0.15", "-148.802, -74.0129, 2.15018, 1.69", "-149.819, -74.4489, 2.4076, 0.88", "-151.177, -75.0101, 2.62187, 0.07", "-151.852, -75.2871, 2.67582, 0.44", "-153.159, -75.8183, 2.65991, 0.07", "-153.652, -76.0157, 2.62647, 0.73", "-154.245, -76.2307, 2.55611, 1.03", "-155.79, -76.7424, 2.34863, 0.07", "-156.581, -77.0117, 2.23328, 0.81", "-157.484, -77.3554, 2.08799, 0.07", "-158.556, -77.8304, 1.91061, 0.07", "-159.682, -78.4092, 1.7159, 1.84", "-160.023, -78.6133, 1.656, 1.84", "-161.452, -79.5915, 1.41315, 0.07", "-162.262, -80.2435, 1.27869, 0.37", "-162.956, -80.8976, 1.17632, 0.07", "-163.763, -81.7057, 1.05732, 1.32", "-164.224, -82.2015, 1.00639, 1.03", "-164.989, -83.0204, 0.944443, 0.22", "-165.956, -83.9996, 0.891718, 0.07", "-166.766, -84.7612, 0.85243, 0.81", "-167.671, -85.5994, 0.813146, 1.25", "-168.597, -86.436, 0.774386, 1.25", "-170.092, -87.7509, 0.712813, 0.07", "-171.565, -89.0053, 0.659784, 0.07", "-172.422, -89.6995, 0.626429, 1.69", "-173.161, -90.2712, 0.608135, 1.69", "-174.251, -91.0887, 0.605339, 0.07", "-174.971, -91.5688, 0.602313, 0.95", "-175.839, -92.1081, 0.612258, 0.15", "-176.065, -92.2425, 0.618602, 0.51", "-176.963, -92.7733, 0.62289, 0.07", "-177.604, -93.1673, 0.581196, 0.07", "-178.273, -93.6022, 0.502076, 1.1", "-178.87, -94.014, 0.412225, 1.47", "-179.529, -94.5087, 0.30536, 1.32", "-180.499, -95.3014, 0.132161, 0.07", "-181.31, -96.0091, -0.0132017, 0.07", "-182.423, -97.0294, -0.182872, 0.07", "-182.897, -97.4828, -0.235862, 1.25", "-183.626, -98.2106, -0.285603, 1.76", "-184.72, -99.3035, -0.333179, 0.07", "-185.286, -99.8741, -0.329816, 0.44", "-186.121, -100.693, -0.266523, 0.07", "-187.064, -101.542, -0.153729, 1.03", "-188.147, -102.391, -0.00936574, 0.07", "-188.946, -102.919, 0.139614, 0.51", "-189.584, -103.287, 0.289969, 0.07", "-191.05, -104.016, 0.643589, 0.07", "-192.224, -104.516, 0.920974, 1.47", "-194.024, -105.135, 1.29391, 0.07", "-195.303, -105.496, 1.5196, 1.4", "-196.042, -105.679, 1.63863, 1.62", "-197.43, -105.979, 1.79207, 0.07", "-198.375, -106.163, 1.83309, 0.95", "-199.966, -106.457, 1.81777, 0.07", "-201.297, -106.643, 1.76798, 0.07", "-202.389, -106.792, 1.70039, 1.47", "-203.455, -106.91, 1.63797, 1.32", "-204.872, -107.045, 1.57238, 0.22", "-206.34, -107.151, 1.5032, 0.22", "-207.52, -107.215, 1.45262, 1.69", "-208.64, -107.223, 1.35798, 0.07", "-209.642, -107.172, 1.26206, 0.07", "-210.28, -107.093, 1.21253, 0.51", "-211.774, -106.844, 1.09758, 0.07", "-212.045, -106.784, 1.07153, 0.59", "-213.343, -106.436, 0.889797, 0.07", "-214.39, -106.075, 0.709876, 1.18", "-215.372, -105.683, 0.533155, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-16.4265, 6.45376, -2.13232, 0.37", "-16.8207, 6.97299, -2.3292, 0.37", "-17.175, 7.43664, -2.51933, 0.37", "-17.663, 8.05235, -2.81739, 0.73", "-18.1118, 8.6043, -3.12059, 1.03", "-18.3866, 8.93591, -3.31688, 1.1", "-18.7044, 9.32261, -3.55176, 0.95", "-19.1378, 9.83931, -3.888, 0.95", "-19.8077, 10.6481, -4.42422, 1.25", "-20.3791, 11.3498, -4.88001, 1.62", "-21.0337, 12.1597, -5.38019, 1.76", "-21.5585, 12.8043, -5.74994, 1.32", "-22.4083, 13.8894, -6.28125, 0.95", "-22.7483, 14.3542, -6.46556, 0.95", "-23.1579, 14.9462, -6.63312, 0.95", "-23.5045, 15.4718, -6.73829, 0.88", "-23.9654, 16.1948, -6.83397, 0.73", "-24.8033, 17.5396, -6.95041, 0.22", "-25.3639, 18.4878, -6.98364, 0.51", "-25.8998, 19.445, -7.00452, 1.76", "-26.1561, 19.9226, -7.00628, 1.47", "-26.7679, 21.1092, -6.99934, 0.29", "-26.9579, 21.4942, -6.9961, 0.07", "-27.4969, 22.5602, -6.98737, 0.95", "-27.8966, 23.3125, -6.99497, 1.62", "-28.3795, 24.1637, -7.02706, 1.62", "-28.895, 24.9968, -7.076, 0.95", "-29.5555, 26.0182, -7.16328, 0.44", "-30.0139, 26.7056, -7.24038, 0.44", "-30.5866, 27.5374, -7.35962, 1.25", "-31.067, 28.2284, -7.4722, 1.69", "-31.534, 28.9093, -7.5946, 0.95", "-32.2314, 29.9726, -7.78672, 0.37", "-32.5927, 30.5936, -7.90222, 0.07", "-32.8965, 31.2321, -8.02084, 1.03", "-33.2008, 32.0707, -8.16909, 0.59", "-33.4771, 33.1114, -8.35956, 0.59", "-33.6641, 34.0451, -8.5455, 0.44", "-33.8179, 35.0297, -8.78613, 2.28", "-33.9154, 35.8771, -9.04169, 2.28", "-33.955, 36.9024, -9.43917, 1.03", "-33.9074, 37.9611, -9.93812, 1.1", "-33.8236, 38.5669, -10.2799, 0.81", "-33.6678, 39.2701, -10.7379, 0.81", "-33.4936, 39.8557, -11.1631, 0.81", "-33.0293, 41.0746, -12.1587, 0.59", "-32.7912, 41.6299, -12.6456, 0.59", "-32.51, 42.2371, -13.1931, 1.32", "-32.1368, 43.0629, -13.9123, 2.28", "-32.0262, 43.3316, -14.1299, 2.28", "-31.7359, 44.1879, -14.7726, 1.4", "-31.4678, 45.2506, -15.5235, 0.37", "-31.3965, 45.6865, -15.8165, 0.37", "-31.3665, 46.1943, -16.1371, 1.18", "-31.3699, 46.7605, -16.4698, 1.18", "-31.3896, 47.3299, -16.7806, 1.4", "-31.4126, 47.7549, -16.9977, 1.47", "-31.4271, 48.2579, -17.2564, 1.1", "-31.4449, 49.1202, -17.7162, 0.15", "-31.4659, 49.826, -18.1026, 0.15", "-31.5008, 50.6603, -18.5559, 1.69", "-31.5258, 51.191, -18.835, 1.76", "-31.5687, 52.2418, -19.3275, 0.22", "-31.5719, 52.9267, -19.6111, 0.29", "-31.5624, 53.6, -19.8525, 0.29", "-31.5325, 54.3487, -20.0709, 0.37", "-31.4726, 55.1654, -20.2477, 1.18", "-31.3505, 56.1154, -20.3752, 0.22", "-31.1408, 57.2782, -20.4634, 0.22", "-31.0403, 57.7203, -20.4863, 0.22", "-30.8292, 58.5204, -20.5217, 1.62", "-30.6919, 59.0144, -20.535, 2.42", "-30.2103, 60.7576, -20.5552, 0.22", "-30.0535, 61.3618, -20.5636, 0.22", "-29.9441, 61.8266, -20.567, 0.95", "-29.8543, 62.2185, -20.5787, 0.95", "-29.6154, 63.3253, -20.6437, 0.15", "-29.3797, 64.472, -20.7092, 0.15", "-29.266, 65.1047, -20.7508, 0.15", "-29.1268, 65.9906, -20.8174, 0.15", "-29.0084, 66.8612, -20.8934, 2.5", "-28.9299, 67.5107, -20.9672, 3.16", "-28.8605, 68.173, -21.0658, 3.16", "-28.7017, 70.0539, -21.3865, 0.73", "-28.5998, 71.6731, -21.6789, 0.59", "-28.5692, 72.556, -21.8529, 0.22", "-28.5713, 73.4478, -22.0577, 0.07", "-28.5943, 74.2671, -22.2768, 1.1", "-28.6236, 74.7625, -22.4277, 1.1", "-28.6747, 75.2458, -22.5872, 1.1", "-28.8356, 76.3877, -23.0092, 0.15", "-29.0019, 77.4378, -23.3962, 0.15", "-29.1262, 78.1075, -23.6365, 0.95", "-29.2956, 78.9876, -23.9355, 1.62", "-29.4556, 79.8357, -24.2016, 1.62", "-29.6687, 80.9065, -24.5053, 0.07", "-29.8075, 81.5533, -24.6633, 0.95", "-29.8934, 81.9434, -24.7398, 0.95", "-30.1266, 82.9868, -24.9178, 0.07", "-30.3958, 84.2223, -25.0999, 0.07", "-30.4932, 84.6685, -25.1542, 1.18", "-30.6325, 85.2723, -25.2268, 1.18", "-30.9128, 86.4005, -25.3911, 0.15", "-31.0679, 87.0175, -25.4879, 0.88", "-31.1978, 87.505, -25.5695, 0.88", "-31.2872, 87.822, -25.6316, 0.07", "-31.5964, 88.9106, -25.862, 0.07", "-31.7924, 89.6296, -26.0287, 1.18", "-31.9353, 90.1673, -26.161, 1.62", "-32.0474, 90.5945, -26.2735, 1.62", "-32.5167, 92.3899, -26.7541, 0.07", "-32.6943, 93.0883, -26.9444, 0.07", "-32.8323, 93.6413, -27.1101, 1.18", "-32.9649, 94.1844, -27.2878, 1.18", "-33.1421, 94.9605, -27.5802, 0.15", "-33.3443, 95.9245, -27.9835, 0.15", "-33.4844, 96.6995, -28.3423, 1.69", "-33.5889, 97.2899, -28.6415, 2.06", "-33.6285, 97.5087, -28.7603, 2.06", "-33.8505, 98.6943, -29.4557, 0.44", "-34.0371, 99.6645, -30.0526, 0.59", "-34.2262, 100.675, -30.7024, 0.22", "-34.426, 101.769, -31.413, 0.59", "-34.5052, 102.196, -31.6942, 0.22", "-34.6339, 102.867, -32.151, 1.76", "-34.7687, 103.54, -32.6078, 2.06", "-35.0211, 104.887, -33.536, 0.22", "-35.2114, 105.996, -34.2758, 0.66", "-35.3055, 106.611, -34.6711, 0.66", "-35.4405, 107.703, -35.3384, 1.91", "-35.561, 108.788, -35.9576, 1.25", "-35.6643, 109.734, -36.4674, 0.07", "-35.7325, 110.418, -36.8082, 0.07", "-35.8164, 111.411, -37.2438, 1.54", "-35.8974, 112.443, -37.6405, 0.15", "-36.0015, 113.548, -38.0231, 0.15", "-36.0815, 114.243, -38.2568, 1.1", "-36.2047, 115.118, -38.5357, 2.28", "-36.4895, 116.79, -39.0662, 0.29", "-36.6533, 117.665, -39.3283, 0.88", "-36.8994, 118.915, -39.6976, 0.07", "-37.0507, 119.767, -39.9557, 1.62", "-37.1362, 120.322, -40.1227, 1.62", "-37.1905, 120.878, -40.2918, 1.1", "-37.2193, 122.156, -40.6993, 0.07", "-37.1824, 122.702, -40.8742, 0.07", "-37.055, 123.724, -41.2054, 1.54", "-36.9533, 124.451, -41.4379, 2.13", "-36.661, 126.413, -42.0749, 0.22", "-36.5918, 126.862, -42.2267, 0.22", "-36.4246, 128.03, -42.6368, 0.81", "-36.3356, 128.804, -42.9047, 0.07", "-36.2844, 129.509, -43.1437, 0.37", "-36.2738, 130.045, -43.3522, 0.07", "-36.2873, 130.474, -43.5323, 0.07", "-36.3332, 131.231, -43.8519, 1.62", "-36.3866, 131.928, -44.1552, 2.28", "-36.4507, 132.721, -44.5183, 1.47", "-36.5858, 134.094, -45.1743, 0.29", "-36.6983, 134.902, -45.5613, 0.44", "-36.8233, 135.553, -45.8629, 0.07", "-37.0159, 136.324, -46.2118, 1.32", "-37.4014, 137.635, -46.7728, 0.07", "-37.6107, 138.228, -47.0027, 1.25", "-37.8229, 138.747, -47.1752, 1.25", "-38.2865, 139.797, -47.479, 0.22", "-38.5925, 140.482, -47.6399, 0.51", "-38.7558, 140.896, -47.716, 0.07", "-38.9549, 141.554, -47.8137, 0.29", "-39.0911, 142.258, -47.9248, 0.07", "-39.1943, 143.496, -48.1665, 2.5", "-39.1718, 144.232, -48.3664, 2.35", "-39.0168, 145.556, -48.8065, 0.07", "-38.8762, 146.301, -49.0876, 0.07", "-38.7074, 146.908, -49.3498, 0.07", "-38.458, 147.621, -49.6981, 1.62", "-37.9835, 148.859, -50.3649, 0.07", "-37.7924, 149.388, -50.6515, 0.37", "-37.6941, 149.708, -50.8209, 0.37", "-37.4926, 150.551, -51.2423, 0.07", "-37.3787, 151.144, -51.5119, 1.4", "-37.1992, 152.231, -51.9572, 0.07", "-37.1182, 152.884, -52.1999, 0.07", "-37.0364, 153.972, -52.5983, 1.98", "-36.9725, 155.445, -53.1278, 0.07", "-36.9678, 156.238, -53.399, 0.07", "-36.9932, 157.223, -53.7328, 1.4", "-37.0789, 158.261, -54.0801, 0.07", "-37.1979, 159.037, -54.3393, 0.22", "-37.3559, 159.717, -54.5584, 0.07", "-37.6374, 160.619, -54.8541, 1.76", "-37.8249, 161.11, -55.0303, 1.76", "-38.4219, 162.445, -55.5323, 0.07", "-38.7794, 163.173, -55.8155, 1.1", "-39.1772, 163.961, -56.1212, 0.07", "-39.5254, 164.627, -56.385, 0.07", "-39.832, 165.211, -56.6646, 0.95", "-40.0727, 165.686, -56.9154, 0.95", "-40.3644, 166.296, -57.3057, 0.07", "-40.5943, 166.796, -57.658, 0.07", "-40.8619, 167.397, -58.0899, 1.54", "-41.4204, 168.621, -58.9574, 0.29", "-41.5877, 168.98, -59.2017, 1.18", "-42.0846, 170.045, -59.8954, 0.15", "-42.4034, 170.676, -60.2946, 0.15", "-42.8594, 171.498, -60.7994, 2.06", "-43.4543, 172.54, -61.4271, 0.15", "-43.7582, 173.074, -61.7461, 0.51", "-44.1009, 173.658, -62.1382, 0.07", "-44.5126, 174.379, -62.6508, 1.69", "-45.0556, 175.339, -63.4453, 0.29", "-45.4906, 176.127, -64.1807, 0.07", "-45.8003, 176.697, -64.7313, 1.4", "-46.2878, 177.541, -65.5505, 1.4", "-46.5236, 177.922, -65.9122, 2.06", "-47.2278, 179.057, -66.9049, 0.22", "-47.5805, 179.585, -67.3251, 0.88", "-48.0275, 180.197, -67.7587, 0.07", "-48.6352, 180.942, -68.2183, 0.07", "-49.1452, 181.521, -68.5287, 1.54", "-49.3559, 181.754, -68.639, 1.69", "-50.3548, 182.9, -69.0692, 0.07", "-50.7641, 183.418, -69.2566, 0.07", "-51.3792, 184.281, -69.5717, 0.07", "-51.6614, 184.726, -69.7263, 0.07", "-52.0024, 185.319, -69.9186, 1.18", "-52.2757, 185.837, -70.0791, 1.84", "-52.9142, 187.157, -70.4449, 0.07", "-53.1602, 187.689, -70.6016, 0.07", "-53.3755, 188.151, -70.7473, 1.32", "-53.5643, 188.518, -70.8658, 1.32", "-54.0964, 189.447, -71.1658, 0.15", "-54.6248, 190.302, -71.4355, 0.15", "-54.9887, 190.86, -71.6221, 0.15", "-55.3789, 191.447, -71.8414, 0.95", "-55.5331, 191.666, -71.9308, 1.25", "-55.7888, 192.028, -72.077, 0.73", "-56.2454, 192.699, -72.3348, 0.07", "-56.7043, 193.471, -72.6049, 0.07", "-57.0922, 194.206, -72.8228, 0.37", "-57.3518, 194.757, -72.9598, 0.07", "-57.7208, 195.58, -73.1503, 2.2", "-57.9584, 196.173, -73.3048, 1.84", "-58.4419, 197.615, -73.7023, 0.07", "-58.7625, 198.728, -74.0405, 0.07", "-58.9315, 199.422, -74.2838, 0.73", "-59.0676, 200.062, -74.5368, 1.47", "-59.3342, 201.461, -75.1555, 0.07", "-59.4327, 201.961, -75.3986, 0.29", "-59.5565, 202.574, -75.7206, 0.07", "-59.6808, 203.184, -76.0582, 0.66", "-59.8133, 203.828, -76.4169, 0.07", "-59.9798, 204.548, -76.7851, 0.07", "-60.2009, 205.313, -77.1369, 1.84", "-60.327, 205.712, -77.3286, 1.84", "-60.4038, 205.967, -77.4604, 1.84", "-60.6765, 206.902, -78.0144, 0.07", "-60.8307, 207.44, -78.3445, 0.07", "-60.981, 207.99, -78.6946, 1.32", "-61.188, 208.76, -79.1675, 0.07", "-61.4552, 209.655, -79.6958, 1.1", "-61.6962, 210.433, -80.1268, 0.07", "-61.9595, 211.27, -80.5597, 1.4", "-62.0391, 211.539, -80.69, 1.76", "-62.3904, 212.78, -81.2227, 0.15", "-62.5525, 213.351, -81.4211, 0.44", "-62.7266, 213.961, -81.5892, 0.07", "-62.9094, 214.64, -81.7527, 0.07", "-63.1391, 215.518, -81.9528, 1.25", "-63.225, 215.87, -82.0256, 1.76", "-63.5235, 217.162, -82.2592, 0.07", "-63.768, 218.182, -82.4243, 0.15", "-64.0237, 219.18, -82.5647, 1.47", "-64.1489, 219.673, -82.6227, 1.1", "-64.4052, 220.595, -82.7156, 0.15", "-64.6476, 221.456, -82.8009, 0.07", "-64.9296, 222.416, -82.8795, 0.37", "-65.2209, 223.404, -82.9315, 0.07", "-65.4424, 224.155, -82.9508, 1.1", "-65.6322, 224.796, -82.9698, 1.69", "-65.8355, 225.495, -82.9944, 1.18", "-66.0683, 226.317, -83.0584, 0.07", "-66.3975, 227.446, -83.1867, 0.22", "-66.741, 228.646, -83.3499, 0.22", "-66.9525, 229.436, -83.4742, 1.03", "-67.0628, 229.923, -83.5569, 1.03", "-67.2636, 230.882, -83.739, 0.07", "-67.4749, 232.126, -84.0008, 0.07", "-67.6148, 233.001, -84.2077, 1.47", "-67.6631, 233.373, -84.2961, 1.47", "-67.7677, 234.353, -84.5208, 0.07", "-67.8487, 235.236, -84.7231, 1.25", "-67.9133, 236.038, -84.8988, 0.15", "-67.9897, 236.915, -85.1028, 0.66", "-68.0628, 237.595, -85.2646, 0.07", "-68.2035, 238.588, -85.4937, 0.07", "-68.3592, 239.456, -85.6838, 1.76", "-68.5402, 240.302, -85.8537, 1.84", "-68.8119, 241.419, -86.073, 0.07", "-68.9863, 242.029, -86.1847, 0.07", "-69.2957, 242.936, -86.3532, 0.73", "-69.5772, 243.643, -86.4925, 0.07", "-69.8129, 244.153, -86.6008, 0.29", "-69.9841, 244.491, -86.6801, 0.07", "-70.3677, 245.187, -86.8557, 0.07", "-70.7398, 245.837, -87.0393, 1.1", "-70.928, 246.149, -87.1416, 1.25", "-71.25, 246.649, -87.3945, 0.07", "-71.5226, 247.072, -87.6624, 0.59", "-71.848, 247.555, -88.0121, 0.07", "-72.1779, 247.998, -88.403, 0.07", "-72.6198, 248.548, -88.9582, 1.32", "-73.5133, 249.642, -90.1943, 0.07", "-73.7533, 249.956, -90.5818, 0.07", "-73.9796, 250.297, -91.0184, 0.37", "-74.2527, 250.848, -91.7325, 0.37", "-74.3383, 251.208, -92.1658, 1.1", "-74.3282, 251.551, -92.5232, 1.1", "-74.1666, 252.381, -93.2472, 0.07", "-73.9902, 253.0, -93.7379, 1.1", "-73.743, 253.719, -94.2566, 0.07", "-73.4774, 254.473, -94.7348, 1.54", "-73.1019, 255.635, -95.4178, 0.07", "-72.9801, 256.09, -95.6587, 0.07", "-72.85, 256.697, -95.9594, 1.1", "-72.7527, 257.379, -96.2737, 0.07", "-72.7139, 258.037, -96.5831, 1.18", "-72.7339, 259.113, -97.1209, 0.07", "-72.8294, 259.949, -97.578, 0.07", "-72.9598, 260.532, -97.9542, 1.1", "-73.0385, 260.785, -98.1406, 1.1", "-73.369, 261.606, -98.8687, 0.07", "-73.5018, 261.881, -99.139, 0.07", "-73.8666, 262.55, -99.8209, 0.88", "-74.2612, 263.214, -100.561, 0.37", "-74.5551, 263.705, -101.107, 0.88", "-75.0175, 264.528, -101.999, 0.07", "-75.3276, 265.118, -102.604, 0.07", "-75.6674, 265.837, -103.311, 1.76", "-76.2742, 267.22, -104.605, 0.07", "-76.4025, 267.508, -104.861, 0.07", "-76.7203, 268.193, -105.445, 1.84", "-77.3375, 269.536, -106.53, 0.07", "-77.5257, 269.932, -106.832, 1.4", "-77.6693, 270.227, -107.018, 1.4", "-78.0406, 270.985, -107.392, 0.07", "-78.2957, 271.481, -107.608, 0.73", "-78.6279, 272.077, -107.82, 0.07", "-79.2868, 273.191, -108.138, 2.72", "-80.094, 274.477, -108.477, 0.07", "-80.3656, 274.893, -108.557, 0.81", "-80.726, 275.394, -108.61, 0.07", "-81.2173, 275.993, -108.622, 0.07", "-81.4826, 276.259, -108.603, 0.95", "-82.3288, 276.922, -108.509, 0.07", "-83.1538, 277.448, -108.4, 0.07", "-83.9711, 277.918, -108.296, 1.25", "-84.6626, 278.277, -108.205, 0.07", "-85.7086, 278.787, -108.069, 0.07", "-86.6, 279.208, -107.939, 1.91", "-87.6909, 279.725, -107.775, 0.07", "-88.137, 279.945, -107.72, 0.07", "-88.5789, 280.179, -107.66, 0.88", "-89.0005, 280.414, -107.602, 1.32", "-89.9978, 281.02, -107.444, 0.15", "-90.5114, 281.345, -107.368, 0.66", "-91.1528, 281.768, -107.276, 0.07", "-91.5185, 282.009, -107.228, 0.07", "-92.0882, 282.367, -107.178, 0.07", "-92.297, 282.488, -107.159, 0.88", "-92.9768, 282.87, -107.078, 0.07", "-93.7987, 283.327, -106.931, 0.95", "-94.4368, 283.72, -106.782, 0.07", "-94.9892, 284.121, -106.596, 0.29", "-95.3982, 284.616, -106.343, 0.07", "-95.4833, 285.198, -106.027, 0.07", "-95.4631, 285.324, -105.956, 0.07", "-95.2634, 285.779, -105.71, 0.37", "-94.8444, 286.498, -105.331, 0.07", "-94.1558, 287.493, -104.819, 0.07", "-93.5952, 288.202, -104.499, 1.4" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-43.1244, -81.0421, -40.0489, 0.37", "-43.2882, -83.4134, -39.6286, 0.37", "-43.3489, -84.5428, -39.4132, 0.07", "-43.3875, -85.4543, -39.2333, 1.32", "-43.4129, -85.9165, -39.1548, 1.32", "-43.5706, -87.5051, -38.9373, 0.22", "-43.6903, -88.3966, -38.8356, 0.07", "-43.8518, -89.188, -38.7429, 1.32", "-43.8938, -89.3625, -38.7224, 1.32", "-44.2351, -90.5519, -38.5573, 0.15", "-44.82, -92.1428, -38.2738, 0.15", "-45.178, -92.9661, -38.0723, 0.15", "-45.5596, -93.7988, -37.8308, 1.1", "-45.793, -94.2877, -37.663, 1.32", "-46.2885, -95.3461, -37.2582, 0.22", "-46.8473, -96.6722, -36.7182, 0.22", "-47.1547, -97.477, -36.4081, 0.95", "-47.3007, -97.9206, -36.267, 0.95", "-47.5915, -98.8845, -36.0528, 0.07", "-47.817, -99.6568, -35.944, 0.07", "-48.0983, -100.809, -35.8661, 1.54", "-48.2397, -101.546, -35.8663, 1.32", "-48.4349, -102.741, -35.911, 0.15", "-48.6353, -104.096, -36.0001, 0.15", "-48.8354, -105.336, -36.1292, 1.54", "-48.9739, -106.112, -36.2377, 1.54", "-49.3902, -108.418, -36.5886, 0.07", "-49.5754, -109.388, -36.7493, 0.88", "-49.7443, -110.284, -36.9009, 0.07", "-50.0503, -111.993, -37.1653, 0.07", "-50.2827, -113.271, -37.333, 2.06", "-50.598, -114.857, -37.4803, 1.03", "-50.8922, -116.375, -37.5235, 0.07", "-51.0762, -117.403, -37.4956, 0.07", "-51.162, -117.946, -37.4527, 0.81", "-51.3106, -119.063, -37.3207, 0.59", "-51.4424, -119.953, -37.2153, 0.15", "-51.6768, -121.378, -37.0775, 1.84", "-51.9795, -123.097, -36.9488, 0.07", "-52.081, -123.572, -36.9294, 0.59", "-52.3489, -124.746, -36.925, 0.59", "-52.6384, -125.906, -36.9556, 1.69", "-52.832, -126.681, -37.0193, 1.69", "-53.0475, -127.518, -37.1052, 1.1", "-53.2761, -128.394, -37.2094, 0.15", "-53.465, -129.127, -37.308, 0.81", "-53.7164, -130.166, -37.4372, 0.59", "-54.1077, -131.834, -37.619, 0.15", "-54.2838, -132.622, -37.7119, 0.15", "-54.6002, -134.027, -37.8802, 1.62", "-54.655, -134.276, -37.9008, 1.62", "-55.0594, -136.084, -37.981, 0.44", "-55.3242, -137.255, -37.9684, 0.22", "-55.5697, -138.326, -37.9043, 1.03", "-55.7903, -139.304, -37.8245, 1.4", "-56.2201, -141.248, -37.5893, 0.22", "-56.714, -143.476, -37.2712, 0.22", "-57.0449, -145.017, -37.0156, 1.03", "-57.1917, -145.71, -36.8822, 1.47", "-57.3274, -146.326, -36.7519, 1.47", "-57.6834, -147.809, -36.4598, 0.15", "-57.9086, -148.579, -36.3326, 0.29", "-58.3574, -149.854, -36.1327, 0.07", "-58.7097, -150.725, -36.0443, 1.47", "-58.9842, -151.357, -36.0065, 1.47", "-59.5785, -152.666, -36.0254, 0.15", "-59.8212, -153.184, -36.0703, 0.15", "-60.2293, -154.019, -36.1316, 1.25", "-60.6843, -154.964, -36.1834, 1.62", "-61.3924, -156.627, -36.3086, 0.07", "-61.7453, -157.599, -36.3848, 0.37", "-61.933, -158.236, -36.4268, 0.15", "-62.2952, -159.773, -36.5064, 1.25", "-62.4641, -160.871, -36.575, 0.37", "-62.5699, -162.088, -36.6351, 0.22", "-62.5491, -163.366, -36.6928, 0.22", "-62.4821, -164.079, -36.7156, 1.47", "-62.3844, -164.652, -36.7448, 1.25", "-62.0167, -166.114, -36.844, 0.07", "-61.934, -166.394, -36.8502, 0.37", "-61.4592, -167.952, -36.7934, 0.07", "-61.1615, -168.902, -36.758, 0.81", "-61.0501, -169.286, -36.7414, 0.81", "-60.858, -170.024, -36.6999, 0.07", "-60.6644, -170.966, -36.6241, 0.07", "-60.5397, -171.764, -36.5706, 0.88", "-60.4609, -172.502, -36.5146, 0.07", "-60.3961, -173.219, -36.4752, 0.66", "-60.3459, -173.923, -36.4404, 0.07", "-60.2768, -174.795, -36.3695, 0.07", "-60.2323, -175.27, -36.31, 0.07", "-60.1226, -176.211, -36.1168, 1.03", "-59.9637, -177.679, -35.6697, 0.07", "-59.884, -178.433, -35.3764, 0.44", "-59.7524, -179.801, -34.7459, 0.07", "-59.6841, -180.509, -34.3859, 0.59", "-59.5855, -181.871, -33.6679, 0.07", "-59.565, -183.054, -33.0218, 0.07", "-59.6228, -184.574, -32.1295, 0.07", "-59.7391, -185.946, -31.3159, 0.07", "-59.8678, -186.857, -30.7849, 0.22", "-59.9735, -187.673, -30.3325, 1.62", "-60.0347, -188.729, -29.8228, 0.37", "-59.8899, -189.334, -29.5823, 1.1", "-60.6046, -188.475, -29.9084, 0.07", "-61.3238, -187.762, -30.1801, 0.07", "-61.7546, -187.284, -30.3563, 0.88" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-43.1244, -81.0421, -40.0489, 0.37", "-44.7924, -82.69, -41.4846, 0.37", "-45.4415, -83.268, -41.9104, 0.59", "-46.7138, -84.2645, -42.4183, 0.07", "-48.0512, -85.1708, -42.6269, 0.07", "-48.8828, -85.655, -42.6702, 0.07", "-49.6456, -86.0507, -42.8079, 0.81", "-50.9609, -86.5487, -43.1012, 0.29", "-52.3756, -86.968, -44.2735, 0.29", "-53.0317, -87.103, -45.2964, 0.59", "-53.5142, -87.1838, -46.2344, 0.95", "-54.9742, -87.5182, -49.9947, 0.44", "-55.6088, -87.719, -51.9836, 0.73", "-56.1893, -88.0, -54.1792, 0.15", "-56.4159, -88.1597, -55.2093, 0.15", "-56.5516, -88.2946, -55.8531, 0.51", "-57.0087, -89.0257, -58.074, 0.07", "-57.0706, -89.1672, -58.3526, 0.07", "-57.2592, -89.7022, -59.216, 1.03", "-57.5164, -90.4662, -60.2728, 0.15", "-57.7905, -91.2313, -61.2551, 0.95", "-58.4835, -92.8733, -63.268, 0.37", "-58.7854, -93.4894, -63.9832, 0.81", "-59.2459, -94.3978, -65.055, 0.07", "-59.7673, -95.3911, -66.227, 0.07", "-60.059, -95.9493, -66.8787, 0.29", "-60.4115, -96.5622, -67.6774, 0.95" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-215.372, -105.683, 0.533155, 0.07", "-216.174, -106.242, 0.613566, 0.07", "-217.046, -106.94, 0.70702, 0.07", "-217.655, -107.482, 0.783021, 0.07", "-217.913, -107.74, 0.822519, 0.88", "-218.179, -108.045, 0.858818, 0.88", "-218.626, -108.61, 0.886054, 0.07", "-218.819, -108.9, 0.88139, 0.07", "-219.267, -109.598, 0.841539, 0.66", "-219.539, -109.999, 0.79902, 1.1", "-220.13, -110.793, 0.689205, 0.07", "-220.843, -111.643, 0.55599, 0.07", "-221.502, -112.324, 0.441407, 0.66", "-222.068, -112.82, 0.347981, 1.4", "-222.964, -113.478, 0.192332, 0.22", "-223.645, -113.882, 0.0675352, 0.22", "-224.296, -114.17, -0.036494, 0.59", "-224.831, -114.359, -0.112202, 0.07", "-225.504, -114.574, -0.240442, 0.07", "-226.273, -114.805, -0.411395, 0.81", "-227.042, -115.042, -0.595159, 0.22", "-228.23, -115.474, -0.891172, 0.22", "-228.872, -115.764, -1.06048, 1.4", "-229.912, -116.335, -1.33253, 0.07", "-230.349, -116.624, -1.43824, 0.81", "-230.838, -117.03, -1.53969, 0.07", "-231.36, -117.579, -1.62908, 0.07", "-231.566, -117.844, -1.66971, 0.07", "-231.891, -118.295, -1.70427, 0.81", "-232.087, -118.579, -1.68343, 0.07", "-232.663, -119.453, -1.5578, 0.44", "-232.965, -119.882, -1.48283, 0.07", "-233.33, -120.359, -1.38828, 0.29", "-233.81, -120.93, -1.25987, 0.07", "-234.731, -121.947, -1.04533, 0.07", "-235.314, -122.548, -0.929994, 1.76", "-236.335, -123.537, -0.762367, 0.22", "-237.002, -124.158, -0.684626, 0.51", "-237.375, -124.493, -0.641599, 0.07", "-238.004, -125.021, -0.604104, 0.07", "-238.206, -125.176, -0.599553, 0.81", "-238.932, -125.704, -0.57467, 0.07", "-239.65, -126.23, -0.540358, 0.07", "-240.482, -126.857, -0.492234, 1.47", "-241.393, -127.561, -0.41485, 0.15", "-241.921, -127.965, -0.351267, 0.15", "-242.316, -128.266, -0.29771, 0.88", "-242.934, -128.735, -0.222802, 0.07", "-243.645, -129.276, -0.155435, 0.07", "-244.045, -129.579, -0.12127, 0.07", "-244.378, -129.818, -0.0824203, 0.81", "-245.079, -130.284, 0.00898921, 0.07", "-245.962, -130.819, 0.105368, 0.07", "-246.464, -131.073, 0.151908, 0.95", "-247.437, -131.486, 0.21836, 0.07", "-248.495, -131.853, 0.312781, 0.88", "-249.061, -132.008, 0.374563, 0.22", "-249.8, -132.143, 0.479425, 0.07", "-251.203, -132.281, 0.755616, 0.07", "-251.776, -132.303, 0.884653, 1.18", "-252.868, -132.284, 1.15637, 0.15", "-253.91, -132.24, 1.44193, 0.15", "-254.803, -132.194, 1.68416, 1.54", "-256.221, -132.06, 2.0409, 0.07", "-256.779, -131.985, 2.15628, 0.07", "-257.197, -131.912, 2.21389, 0.44", "-257.993, -131.729, 2.24299, 0.07", "-258.911, -131.456, 2.19393, 0.81", "-259.944, -131.057, 2.01986, 0.07", "-260.254, -130.898, 1.93782, 0.07", "-260.582, -130.701, 1.84293, 0.37", "-261.342, -130.202, 1.59265, 0.07", "-261.704, -129.945, 1.4692, 0.88", "-262.353, -129.483, 1.25965, 0.07", "-262.976, -129.095, 1.08485, 0.29", "-263.708, -128.68, 0.865705, 0.07", "-264.133, -128.463, 0.729771, 0.95", "-264.901, -128.105, 0.480824, 0.07", "-265.092, -128.029, 0.425285, 0.07", "-265.671, -127.825, 0.249868, 0.44", "-266.431, -127.58, 0.0207188, 0.07", "-267.503, -127.272, -0.330313, 0.07", "-268.383, -127.042, -0.619187, 1.25", "-269.248, -126.847, -0.912374, 0.07", "-269.872, -126.722, -1.12186, 0.07", "-270.61, -126.61, -1.37442, 0.37", "-271.41, -126.541, -1.6292, 0.07", "-272.101, -126.541, -1.83572, 0.07", "-272.513, -126.584, -1.9449, 0.37", "-273.035, -126.705, -2.0471, 0.07", "-273.969, -127.006, -2.15378, 0.07", "-274.833, -127.354, -2.18396, 0.07", "-275.763, -127.796, -2.13178, 1.69", "-276.815, -128.385, -2.0061, 0.07", "-278.411, -129.422, -1.67532, 0.07", "-279.416, -130.119, -1.41661, 0.07", "-280.241, -130.742, -1.14829, 1.32", "-281.033, -131.403, -0.843446, 0.07", "-281.589, -131.913, -0.590054, 0.07", "-282.379, -132.687, -0.135868, 1.62" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-215.372, -105.683, 0.533155, 0.07", "-216.164, -104.231, 0.370402, 0.07", "-216.683, -103.33, 0.279994, 1.03", "-217.233, -102.396, 0.179522, 0.07", "-217.542, -101.877, 0.132376, 0.29", "-217.828, -101.426, 0.089253, 0.07", "-218.538, -100.319, -0.0287075, 0.07", "-218.94, -99.7164, -0.108287, 0.95", "-219.36, -99.0925, -0.203561, 0.95", "-219.866, -98.3011, -0.361109, 0.07", "-220.628, -97.043, -0.637167, 0.07", "-220.972, -96.4643, -0.776516, 0.59", "-221.414, -95.6951, -0.98686, 0.07", "-221.81, -95.0025, -1.20318, 0.37", "-222.175, -94.3488, -1.42429, 0.07", "-222.332, -94.0516, -1.54228, 0.07", "-222.476, -93.7342, -1.67392, 1.03", "-222.73, -93.2258, -1.89188, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_30", "dend_17", "dend_8", "dend_5", "dend_0", "dend_43", "dend_38", "dend_34", "dend_31", "dend_23", "dend_18", "dend_16", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_40", "dend_39", "dend_36", "dend_35", "dend_33", "dend_32", "dend_25", "dend_24", "dend_22", "dend_19", "dend_15", "dend_10", "dend_4", "dend_3", "dend_42", "dend_41", "dend_27", "dend_26", "dend_21", "dend_20", "dend_12", "dend_11", "dend_29", "dend_28", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_37", "dend_30", "dend_17", "dend_8", "dend_5", "dend_0", "dend_43", "dend_38", "dend_34", "dend_31", "dend_23", "dend_18", "dend_16", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_40", "dend_39", "dend_36", "dend_35", "dend_33", "dend_32", "dend_25", "dend_24", "dend_22", "dend_19", "dend_15", "dend_10", "dend_4", "dend_3", "dend_42", "dend_41", "dend_27", "dend_26", "dend_21", "dend_20", "dend_12", "dend_11", "dend_29", "dend_28", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_LBC_f9ea5d0925_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_23, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_37(0), soma_0(0.4999997299839917)
    connect dend_30(0), soma_0(0.4999997299839917)
    connect dend_17(0), soma_0(0.4999997299839917)
    connect dend_8(0), soma_0(0.4999997299839917)
    connect dend_5(0), soma_0(0.4999997299839917)
    connect dend_0(0), soma_0(0.4999997299839917)
    connect axon_0(0), soma_0(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.84529, -4.87297, 0.0, 6.22486 ) }
    soma_0 { pt3dadd( -6.02577, -4.47098, 0.0, 11.3263 ) }
    soma_0 { pt3dadd( -5.20624, -4.06899, 0.0, 13.1262 ) }
    soma_0 { pt3dadd( -4.38672, -3.66701, 0.0, 14.4968 ) }
    soma_0 { pt3dadd( -3.56719, -3.26502, 0.0, 15.3488 ) }
    soma_0 { pt3dadd( -2.74767, -2.86303, 0.0, 15.7521 ) }
    soma_0 { pt3dadd( -1.92815, -2.46104, 0.0, 15.7984 ) }
    soma_0 { pt3dadd( -1.10862, -2.05905, 0.0, 15.859 ) }
    soma_0 { pt3dadd( -0.289096, -1.65706, 0.0, 15.958 ) }
    soma_0 { pt3dadd( 0.530429, -1.25507, 0.0, 16.0571 ) }
    soma_0 { pt3dadd( 1.34995, -0.853086, 0.0, 16.1345 ) }
    soma_0 { pt3dadd( 2.16948, -0.451097, 0.0, 16.3639 ) }
    soma_0 { pt3dadd( 2.989, -0.0491089, 0.0, 16.0828 ) }
    soma_0 { pt3dadd( 3.80853, 0.35288, 0.0, 15.4226 ) }
    soma_0 { pt3dadd( 4.62805, 0.754868, 0.0, 14.6331 ) }
    soma_0 { pt3dadd( 5.44758, 1.15686, 0.0, 13.8581 ) }
    soma_0 { pt3dadd( 6.2671, 1.55885, 0.0, 13.096 ) }
    soma_0 { pt3dadd( 7.08663, 1.96083, 0.0, 11.6592 ) }
    soma_0 { pt3dadd( 7.90615, 2.36282, 0.0, 9.60018 ) }
    soma_0 { pt3dadd( 8.72568, 2.76481, 0.0, 6.5333 ) }
    soma_0 { pt3dadd( 9.5452, 3.1668, 0.0, 3.66685 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 10.8103, -0.952715, -5.53, 2.42 ) }
    dend_37 { pt3dadd( 10.8103, -0.952715, -5.53, 2.42 ) }
    dend_37 { pt3dadd( 11.8396, -0.25484, -6.20497, 2.28 ) }
    dend_37 { pt3dadd( 12.8156, 0.509294, -6.83497, 2.06 ) }
    dend_37 { pt3dadd( 13.4587, 1.04055, -7.24745, 1.76 ) }
    dend_37 { pt3dadd( 14.2746, 1.74541, -7.74592, 2.06 ) }
    dend_37 { pt3dadd( 15.3371, 2.68842, -8.36642, 1.54 ) }
    dend_37 { pt3dadd( 16.1338, 3.45079, -8.79923, 1.54 ) }
    dend_37 { pt3dadd( 16.4025, 3.73577, -8.93417, 1.62 ) }
    dend_37 { pt3dadd( 17.0168, 4.43108, -9.21485, 1.62 ) }
    dend_37 { pt3dadd( 17.5746, 5.08344, -9.46899, 1.18 ) }
    dend_37 { pt3dadd( 18.1388, 5.72149, -9.73894, 2.28 ) }
    dend_37 { pt3dadd( 18.7433, 6.34082, -10.0027, 2.64 ) }
    dend_37 { pt3dadd( 19.4413, 6.96447, -10.2871, 2.72 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 35/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.5103, -3.61272, -3.85, 5.0 ) }
    dend_30 { pt3dadd( 8.5103, -3.61272, -3.85, 5.0 ) }
    dend_30 { pt3dadd( 9.34068, -5.39298, -4.66451, 1.98 ) }
    dend_30 { pt3dadd( 9.74022, -6.24957, -5.05642, 1.98 ) }
    dend_30 { pt3dadd( 10.394, -7.65114, -5.69767, 1.47 ) }
    dend_30 { pt3dadd( 11.1026, -9.17055, -6.39283, 2.06 ) }
    dend_30 { pt3dadd( 11.7936, -10.652, -7.07062, 2.57 ) }
    dend_30 { pt3dadd( 12.1115, -11.2851, -7.3507, 3.01 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 43/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.58973, -9.7592, 0.0, 3.01 ) }
    dend_17 { pt3dadd( -1.58973, -9.7592, 0.0, 3.01 ) }
    dend_17 { pt3dadd( -1.53815, -12.7212, 0.0512421, 1.76 ) }
    dend_17 { pt3dadd( -1.49699, -15.0851, 0.092138, 2.2 ) }
    dend_17 { pt3dadd( -1.46275, -17.0516, 0.126159, 2.86 ) }
    dend_17 { pt3dadd( -1.43809, -18.4678, 0.150659, 3.09 ) }
    dend_17 { pt3dadd( -1.41913, -19.5561, 0.169488, 3.09 ) }
    dend_17 { pt3dadd( -1.41524, -20.11, 0.181785, 3.09 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 51/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -7.39973, 1.60278, -0.84, 3.31 ) }
    dend_8 { pt3dadd( -7.39973, 1.60278, -0.84, 3.31 ) }
    dend_8 { pt3dadd( -8.79951, 2.37386, -0.965766, 1.76 ) }
    dend_8 { pt3dadd( -9.65387, 2.84451, -1.04253, 1.98 ) }
    dend_8 { pt3dadd( -10.295, 3.19762, -1.10013, 1.98 ) }
    dend_8 { pt3dadd( -11.3118, 3.75778, -1.19149, 2.35 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 57/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 6.35027, -0.297214, 9.36, 1.91 ) }
    dend_5 { pt3dadd( 6.39872, -0.280458, 9.3931, 1.91 ) }
    dend_5 { pt3dadd( 7.33058, 0.041806, 10.0298, 1.91 ) }
    dend_5 { pt3dadd( 8.39215, 0.408933, 10.7551, 1.91 ) }
    dend_5 { pt3dadd( 9.14804, 0.670344, 11.2716, 2.42 ) }
    dend_5 { pt3dadd( 9.82486, 0.904408, 11.7341, 2.57 ) }
    dend_5 { pt3dadd( 10.0453, 0.980638, 11.8847, 2.72 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 64/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.10969, 1.50779, 6.17, 2.2 ) }
    dend_0 { pt3dadd( -4.254, 1.59911, 6.28973, 2.2 ) }
    dend_0 { pt3dadd( -6.00142, 2.7048, 7.73947, 2.2 ) }
    dend_0 { pt3dadd( -7.69904, 3.77899, 9.1479, 2.06 ) }
    dend_0 { pt3dadd( -8.87794, 4.52494, 10.126, 1.84 ) }
    dend_0 { pt3dadd( -10.1568, 5.33412, 11.1869, 1.91 ) }
    dend_0 { pt3dadd( -11.8326, 6.39453, 12.5773, 3.6 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 71/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.5452, 3.1668, 0.0, 0.993218 ) }
    axon_0 { pt3dadd( 23.0123, 9.77261, 0.0, 0.993218 ) }
    axon_0 { pt3dadd( 36.4794, 16.3784, 0.0, 0.993218 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 74/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 19.4413, 6.96447, -10.2871, 1.47 ) }
    dend_43 { pt3dadd( 20.6411, 6.70046, -11.2451, 1.47 ) }
    dend_43 { pt3dadd( 22.1124, 6.35616, -12.2399, 1.47 ) }
    dend_43 { pt3dadd( 23.6633, 5.93847, -13.1721, 1.47 ) }
    dend_43 { pt3dadd( 24.1, 5.79745, -13.4204, 0.81 ) }
    dend_43 { pt3dadd( 24.3652, 5.69967, -13.5747, 0.81 ) }
    dend_43 { pt3dadd( 24.6138, 5.60031, -13.73, 0.81 ) }
    dend_43 { pt3dadd( 25.689, 5.10707, -14.4533, 1.18 ) }
    dend_43 { pt3dadd( 26.0711, 4.92873, -14.6712, 1.18 ) }
    dend_43 { pt3dadd( 26.5627, 4.81173, -14.8888, 1.18 ) }
    dend_43 { pt3dadd( 27.1881, 4.76624, -15.2001, 1.18 ) }
    dend_43 { pt3dadd( 27.8342, 4.74422, -15.5268, 1.18 ) }
    dend_43 { pt3dadd( 28.3851, 4.71844, -15.8177, 1.18 ) }
    dend_43 { pt3dadd( 29.6286, 4.64326, -16.5559, 0.73 ) }
    dend_43 { pt3dadd( 31.0607, 4.54743, -17.4871, 1.03 ) }
    dend_43 { pt3dadd( 31.7088, 4.50662, -17.9261, 1.03 ) }
    dend_43 { pt3dadd( 32.333, 4.47252, -18.2919, 1.1 ) }
    dend_43 { pt3dadd( 33.381, 4.39396, -18.7686, 1.1 ) }
    dend_43 { pt3dadd( 34.2589, 4.31494, -19.062, 1.1 ) }
    dend_43 { pt3dadd( 35.0656, 4.29291, -19.1746, 1.1 ) }
    dend_43 { pt3dadd( 35.5758, 4.29346, -19.2064, 1.1 ) }
    dend_43 { pt3dadd( 37.0267, 4.30067, -19.3863, 1.1 ) }
    dend_43 { pt3dadd( 38.9397, 4.32486, -19.7669, 0.66 ) }
    dend_43 { pt3dadd( 40.5094, 4.19345, -20.2869, 0.81 ) }
    dend_43 { pt3dadd( 41.4442, 4.0498, -20.6813, 1.4 ) }
    dend_43 { pt3dadd( 42.7402, 3.79967, -21.2889, 2.5 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( 44.8698, 3.31617, -22.4034, 0.66 ) }
    dend_43 { pt3dadd( 46.4806, 2.92181, -23.3484, 2.79 ) }
    dend_43 { pt3dadd( 49.8763, 2.06091, -25.5712, 0.88 ) }
    dend_43 { pt3dadd( 51.014, 1.76991, -26.3948, 0.95 ) }
    dend_43 { pt3dadd( 52.3972, 1.42822, -27.4811, 2.42 ) }
    dend_43 { pt3dadd( 54.0067, 1.09248, -28.8465, 0.95 ) }
    dend_43 { pt3dadd( 54.9233, 0.908803, -29.6909, 1.69 ) }
    dend_43 { pt3dadd( 56.8538, 0.588476, -31.5207, 0.66 ) }
    dend_43 { pt3dadd( 57.8511, 0.482513, -32.4338, 1.62 ) }
    dend_43 { pt3dadd( 58.6747, 0.389886, -33.1801, 1.62 ) }
    dend_43 { pt3dadd( 59.812, 0.265678, -34.1924, 0.88 ) }
    dend_43 { pt3dadd( 61.6659, 0.094949, -35.6185, 0.88 ) }
    dend_43 { pt3dadd( 62.535, 0.002902, -36.149, 1.62 ) }
    dend_43 { pt3dadd( 63.933, -0.147535, -36.7735, 0.66 ) }
    dend_43 { pt3dadd( 64.5142, -0.215003, -36.9836, 0.29 ) }
    dend_43 { pt3dadd( 65.9599, -0.365353, -37.4317, 1.47 ) }
    dend_43 { pt3dadd( 67.6844, -0.47889, -37.9073, 0.07 ) }
    dend_43 { pt3dadd( 69.4206, -0.455697, -38.4296, 1.47 ) }
    dend_43 { pt3dadd( 69.9354, -0.426926, -38.6137, 1.47 ) }
    dend_43 { pt3dadd( 70.9604, -0.323405, -39.0296, 0.07 ) }
    dend_43 { pt3dadd( 71.7843, -0.202688, -39.3649, 1.32 ) }
    dend_43 { pt3dadd( 72.2495, -0.099674, -39.5467, 1.32 ) }
    dend_43 { pt3dadd( 73.7627, 0.337291, -40.2336, 0.22 ) }
    dend_43 { pt3dadd( 74.7161, 0.584063, -40.7846, 1.84 ) }
    dend_43 { pt3dadd( 74.9989, 0.634378, -40.9883, 2.2 ) }
    dend_43 { pt3dadd( 76.7075, 0.763228, -42.4341, 0.22 ) }
    dend_43 { pt3dadd( 77.5808, 0.753575, -43.2296, 1.1 ) }
    dend_43 { pt3dadd( 79.397, 0.627734, -44.9243, 1.47 ) }
    dend_43 { pt3dadd( 81.2841, 0.367439, -46.7025, 2.57 ) }
    dend_43 { pt3dadd( 82.7235, 0.079908, -48.0582, 2.57 ) }
    dend_43 { pt3dadd( 85.3423, -0.579629, -50.4385, 0.73 ) }
    dend_43 { pt3dadd( 86.4853, -0.935615, -51.4567, 0.15 ) }
    dend_43 { pt3dadd( 86.9007, -1.07194, -51.7951, 0.15 ) }
    dend_43 { pt3dadd( 87.6988, -1.29824, -52.3285, 1.91 ) }
    dend_43 { pt3dadd( 88.1568, -1.41018, -52.6097, 1.91 ) }
    dend_43 { pt3dadd( 89.5354, -1.6964, -53.4074, 1.1 ) }
    dend_43 { pt3dadd( 91.162, -1.98078, -54.3652, 0.15 ) }
    dend_43 { pt3dadd( 91.4241, -2.011, -54.5306, 0.15 ) }
    dend_43 { pt3dadd( 92.9996, -2.15957, -55.577, 1.69 ) }
    dend_43 { pt3dadd( 94.8981, -2.31387, -56.8498, 1.25 ) }
    dend_43 { pt3dadd( 95.7942, -2.38108, -57.4497, 1.69 ) }
    dend_43 { pt3dadd( 97.3245, -2.5029, -58.5064, 0.59 ) }
    dend_43 { pt3dadd( 98.3377, -2.58654, -59.2198, 0.29 ) }
    dend_43 { pt3dadd( 99.9846, -2.73271, -60.4645, 2.42 ) }
    dend_43 { pt3dadd( 101.93, -2.90459, -61.9661, 0.88 ) }
    dend_43 { pt3dadd( 102.297, -2.92889, -62.2502, 1.1 ) }
    dend_43 { pt3dadd( 103.448, -3.01307, -63.1358, 1.25 ) }
    dend_43 { pt3dadd( 104.365, -3.058, -63.7752, 1.4 ) }
    dend_43 { pt3dadd( 106.185, -3.11775, -64.8665, 0.66 ) }
    dend_43 { pt3dadd( 107.371, -3.10617, -65.4453, 1.1 ) }
    dend_43 { pt3dadd( 108.606, -3.0902, -65.9055, 0.29 ) }
    dend_43 { pt3dadd( 109.885, -3.06674, -66.2651, 1.91 ) }
    dend_43 { pt3dadd( 111.584, -2.99891, -66.5937, 0.22 ) }
    dend_43 { pt3dadd( 113.108, -2.92376, -66.7952, 0.81 ) }
    dend_43 { pt3dadd( 113.904, -2.86932, -66.8608, 0.88 ) }
    dend_43 { pt3dadd( 115.071, -2.79252, -66.9362, 0.07 ) }
    dend_43 { pt3dadd( 115.853, -2.74999, -66.9821, 0.07 ) }
    dend_43 { pt3dadd( 117.143, -2.68465, -67.0594, 1.54 ) }
    dend_43 { pt3dadd( 118.717, -2.62729, -67.2136, 0.07 ) }
    dend_43 { pt3dadd( 119.713, -2.60758, -67.3658, 1.1 ) }
    dend_43 { pt3dadd( 120.564, -2.60362, -67.5248, 1.18 ) }
    dend_43 { pt3dadd( 121.839, -2.61737, -67.7789, 0.29 ) }
    dend_43 { pt3dadd( 122.976, -2.66473, -68.0369, 1.03 ) }
    dend_43 { pt3dadd( 124.337, -2.75552, -68.3938, 1.69 ) }
    dend_43 { pt3dadd( 125.899, -2.89001, -68.8736, 0.37 ) }
    dend_43 { pt3dadd( 127.083, -3.01248, -69.2829, 0.07 ) }
    dend_43 { pt3dadd( 128.661, -3.16218, -69.8868, 1.62 ) }
    dend_43 { pt3dadd( 130.27, -3.29341, -70.5743, 0.22 ) }
    dend_43 { pt3dadd( 131.575, -3.37362, -71.1969, 0.51 ) }
    dend_43 { pt3dadd( 132.539, -3.37263, -71.7212, 0.95 ) }
    dend_43 { pt3dadd( 133.589, -3.25016, -72.4504, 1.47 ) }
    dend_43 { pt3dadd( 134.38, -3.04815, -73.1608, 1.47 ) }
    dend_43 { pt3dadd( 135.624, -2.59681, -74.4377, 0.22 ) }
    dend_43 { pt3dadd( 136.119, -2.36895, -74.9709, 0.22 ) }
    dend_43 { pt3dadd( 137.078, -1.87931, -76.0783, 1.84 ) }
    dend_43 { pt3dadd( 138.355, -1.2506, -77.6361, 0.44 ) }
    dend_43 { pt3dadd( 139.502, -0.766304, -79.1137, 0.22 ) }
    dend_43 { pt3dadd( 140.063, -0.590152, -79.8147, 0.22 ) }
    dend_43 { pt3dadd( 140.459, -0.490266, -80.2702, 0.66 ) }
    dend_43 { pt3dadd( 141.655, -0.26277, -81.5296, 0.66 ) }
    dend_43 { pt3dadd( 143.128, -0.053604, -82.9307, 1.91 ) }
    dend_43 { pt3dadd( 144.774, 0.091766, -84.37, 2.42 ) }
    dend_43 { pt3dadd( 146.415, 0.15115, -85.6826, 2.28 ) }
    dend_43 { pt3dadd( 147.822, 0.162439, -86.7008, 0.66 ) }
    dend_43 { pt3dadd( 148.188, 0.145655, -86.9398, 0.22 ) }
    dend_43 { pt3dadd( 149.087, 0.054664, -87.4499, 0.22 ) }
    dend_43 { pt3dadd( 150.259, -0.178256, -88.0485, 0.73 ) }
    dend_43 { pt3dadd( 151.526, -0.676901, -88.6923, 0.66 ) }
    dend_43 { pt3dadd( 152.309, -1.22506, -89.1745, 0.66 ) }
    dend_43 { pt3dadd( 152.943, -1.84214, -89.6782, 0.66 ) }
    dend_43 { pt3dadd( 153.626, -2.59397, -90.4423, 0.66 ) }
    dend_43 { pt3dadd( 153.881, -2.89004, -90.8467, 0.66 ) }
    dend_43 { pt3dadd( 154.358, -3.32211, -91.8622, 0.66 ) }
    dend_43 { pt3dadd( 154.628, -3.36514, -92.5751, 0.66 ) }
    dend_43 { pt3dadd( 154.852, -3.2114, -93.0899, 0.66 ) }
    dend_43 { pt3dadd( 155.425, -2.55482, -94.1813, 0.73 ) }
    dend_43 { pt3dadd( 155.893, -1.96195, -94.9725, 0.59 ) }
    dend_43 { pt3dadd( 156.251, -1.51953, -95.5241, 0.29 ) }
    dend_43 { pt3dadd( 157.069, -0.521504, -96.6831, 0.29 ) }
    dend_43 { pt3dadd( 157.539, -0.009996, -97.2696, 1.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( 158.733, 1.14011, -98.5669, 0.29 ) }
    dend_43 { pt3dadd( 159.302, 1.61934, -99.0874, 0.29 ) }
    dend_43 { pt3dadd( 160.032, 2.11299, -99.689, 0.29 ) }
    dend_43 { pt3dadd( 161.08, 2.65375, -100.456, 1.4 ) }
    dend_43 { pt3dadd( 162.353, 3.08662, -101.244, 0.29 ) }
    dend_43 { pt3dadd( 163.045, 3.23863, -101.582, 0.29 ) }
    dend_43 { pt3dadd( 164.113, 3.33595, -101.912, 0.29 ) }
    dend_43 { pt3dadd( 165.63, 3.3886, -102.312, 0.15 ) }
    dend_43 { pt3dadd( 166.345, 3.36425, -102.448, 0.15 ) }
    dend_43 { pt3dadd( 167.732, 3.15005, -102.545, 0.15 ) }
    dend_43 { pt3dadd( 169.28, 2.72318, -102.388, 0.15 ) }
    dend_43 { pt3dadd( 170.562, 2.25622, -102.024, 0.15 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 12/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 19.4413, 6.96447, -10.2871, 1.69 ) }
    dend_38 { pt3dadd( 20.2818, 9.19023, -11.0, 1.69 ) }
    dend_38 { pt3dadd( 20.9128, 10.4359, -11.3975, 1.4 ) }
    dend_38 { pt3dadd( 21.8571, 11.9625, -11.8697, 1.4 ) }
    dend_38 { pt3dadd( 22.4453, 12.8027, -12.125, 1.32 ) }
    dend_38 { pt3dadd( 23.2784, 13.9605, -12.4664, 0.95 ) }
    dend_38 { pt3dadd( 24.3511, 15.452, -12.906, 0.66 ) }
    dend_38 { pt3dadd( 25.362, 16.6626, -13.2805, 1.47 ) }
    dend_38 { pt3dadd( 26.2031, 17.576, -13.593, 1.91 ) }
    dend_38 { pt3dadd( 27.3951, 18.7732, -14.0822, 0.66 ) }
    dend_38 { pt3dadd( 28.2105, 19.5923, -14.4697, 0.37 ) }
    dend_38 { pt3dadd( 28.5678, 19.95, -14.6497, 0.37 ) }
    dend_38 { pt3dadd( 29.6528, 21.0023, -15.1773, 1.1 ) }
    dend_38 { pt3dadd( 30.5934, 21.9203, -15.6066, 1.25 ) }
    dend_38 { pt3dadd( 31.7221, 23.0139, -16.0639, 0.95 ) }
    dend_38 { pt3dadd( 32.9119, 24.1423, -16.4801, 1.76 ) }
    dend_38 { pt3dadd( 34.4708, 25.66, -16.9419, 2.06 ) }
    dend_38 { pt3dadd( 36.188, 27.4321, -17.3619, 2.57 ) }
    dend_38 { pt3dadd( 37.0565, 28.4113, -17.525, 2.57 ) }
    dend_38 { pt3dadd( 38.7501, 30.5158, -17.7793, 0.44 ) }
    dend_38 { pt3dadd( 39.6559, 31.7436, -17.9352, 0.22 ) }
    dend_38 { pt3dadd( 40.3653, 32.7791, -18.0932, 0.22 ) }
    dend_38 { pt3dadd( 40.8723, 33.5825, -18.2563, 0.22 ) }
    dend_38 { pt3dadd( 41.4207, 34.4894, -18.498, 1.03 ) }
    dend_38 { pt3dadd( 42.1126, 35.6304, -18.8699, 1.76 ) }
    dend_38 { pt3dadd( 43.197, 37.4027, -19.6017, 1.54 ) }
    dend_38 { pt3dadd( 44.0667, 38.7588, -20.27, 1.54 ) }
    dend_38 { pt3dadd( 44.9242, 40.0161, -20.9555, 1.84 ) }
    dend_38 { pt3dadd( 45.6337, 41.0369, -21.5268, 1.98 ) }
    dend_38 { pt3dadd( 45.9943, 41.5478, -21.8154, 1.98 ) }
    dend_38 { pt3dadd( 46.9394, 42.8589, -22.546, 0.95 ) }
    dend_38 { pt3dadd( 48.143, 44.5059, -23.4223, 0.59 ) }
    dend_38 { pt3dadd( 48.8519, 45.4289, -23.9141, 0.81 ) }
    dend_38 { pt3dadd( 49.5955, 46.3318, -24.3785, 0.88 ) }
    dend_38 { pt3dadd( 50.7974, 47.6364, -25.0342, 0.59 ) }
    dend_38 { pt3dadd( 51.6416, 48.4411, -25.4385, 1.1 ) }
    dend_38 { pt3dadd( 52.9221, 49.5464, -25.9363, 2.06 ) }
    dend_38 { pt3dadd( 54.1118, 50.4726, -26.3011, 1.4 ) }
    dend_38 { pt3dadd( 55.3609, 51.3908, -26.6197, 0.66 ) }
    dend_38 { pt3dadd( 56.5961, 52.2592, -26.9114, 0.29 ) }
    dend_38 { pt3dadd( 58.377, 53.4467, -27.2648, 1.91 ) }
    dend_38 { pt3dadd( 59.342, 54.0681, -27.4237, 2.57 ) }
    dend_38 { pt3dadd( 60.7333, 54.9117, -27.5844, 2.28 ) }
    dend_38 { pt3dadd( 62.2545, 55.8195, -27.6525, 1.69 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 56/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 12.1115, -11.2851, -7.3507, 1.1 ) }
    dend_34 { pt3dadd( 14.3272, -10.5974, -8.36325, 1.1 ) }
    dend_34 { pt3dadd( 15.7696, -10.1113, -9.07057, 0.81 ) }
    dend_34 { pt3dadd( 16.7779, -9.78876, -9.59276, 0.95 ) }
    dend_34 { pt3dadd( 18.584, -9.27042, -10.5258, 2.06 ) }
    dend_34 { pt3dadd( 20.2206, -8.82064, -11.3495, 1.18 ) }
    dend_34 { pt3dadd( 21.4842, -8.48946, -11.9698, 0.73 ) }
    dend_34 { pt3dadd( 22.1116, -8.3282, -12.2791, 0.95 ) }
    dend_34 { pt3dadd( 23.1549, -8.06436, -12.7806, 1.18 ) }
    dend_34 { pt3dadd( 24.6408, -7.72894, -13.477, 0.51 ) }
    dend_34 { pt3dadd( 25.5408, -7.55965, -13.8983, 0.51 ) }
    dend_34 { pt3dadd( 26.481, -7.45745, -14.3014, 1.84 ) }
    dend_34 { pt3dadd( 28.137, -7.32496, -14.8997, 2.5 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 12.1115, -11.2851, -7.3507, 1.98 ) }
    dend_31 { pt3dadd( 12.0134, -12.5457, -8.1885, 1.98 ) }
    dend_31 { pt3dadd( 11.949, -13.3728, -8.73824, 1.62 ) }
    dend_31 { pt3dadd( 11.8172, -15.0652, -9.86307, 1.18 ) }
    dend_31 { pt3dadd( 11.679, -16.8412, -11.0435, 1.76 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.41524, -20.11, 0.181785, 2.06 ) }
    dend_23 { pt3dadd( -2.34719, -21.1901, 0.0571768, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -1.41524, -20.11, 0.181785, 1.03 ) }
    dend_18 { pt3dadd( -1.0148, -21.8642, 0.431524, 1.03 ) }
    dend_18 { pt3dadd( -0.703309, -23.2288, 0.62579, 1.03 ) }
    dend_18 { pt3dadd( -0.445376, -24.3587, 0.786651, 1.03 ) }
    dend_18 { pt3dadd( -0.187622, -25.4878, 0.947401, 1.25 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 81/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -11.3118, 3.75778, -1.19149, 0.95 ) }
    dend_16 { pt3dadd( -11.5236, 3.69486, -0.848172, 0.95 ) }
    dend_16 { pt3dadd( -12.4973, 3.49704, 0.285205, 0.95 ) }
    dend_16 { pt3dadd( -13.0009, 3.41668, 0.770064, 1.1 ) }
    dend_16 { pt3dadd( -13.8853, 3.30307, 1.51255, 1.25 ) }
    dend_16 { pt3dadd( -15.8235, 3.10309, 2.97959, 0.95 ) }
    dend_16 { pt3dadd( -16.85, 3.02471, 3.69634, 0.95 ) }
    dend_16 { pt3dadd( -18.3004, 2.99398, 4.57365, 0.66 ) }
    dend_16 { pt3dadd( -18.8507, 3.00379, 4.86445, 0.37 ) }
    dend_16 { pt3dadd( -19.7658, 3.04272, 5.33322, 1.18 ) }
    dend_16 { pt3dadd( -20.2471, 3.07259, 5.56312, 1.54 ) }
    dend_16 { pt3dadd( -21.4145, 3.14775, 6.11643, 0.73 ) }
    dend_16 { pt3dadd( -22.4906, 3.18006, 6.73902, 0.66 ) }
    dend_16 { pt3dadd( -23.3814, 3.19525, 7.27488, 0.51 ) }
    dend_16 { pt3dadd( -24.2073, 3.18944, 7.79957, 0.81 ) }
    dend_16 { pt3dadd( -24.8764, 3.16851, 8.23035, 1.18 ) }
    dend_16 { pt3dadd( -25.7635, 3.13445, 8.81386, 0.88 ) }
    dend_16 { pt3dadd( -26.2465, 3.12085, 9.14636, 1.32 ) }
    dend_16 { pt3dadd( -27.3344, 3.10161, 9.95783, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -28.3498, 3.11262, 10.8825, 0.95 ) }
    dend_16 { pt3dadd( -28.9554, 3.12607, 11.5858, 0.95 ) }
    dend_16 { pt3dadd( -29.3129, 3.1375, 12.0981, 0.95 ) }
    dend_16 { pt3dadd( -29.7775, 3.12187, 12.8642, 0.95 ) }
    dend_16 { pt3dadd( -30.1489, 3.03414, 13.5916, 0.95 ) }
    dend_16 { pt3dadd( -30.6046, 2.80875, 14.7636, 0.95 ) }
    dend_16 { pt3dadd( -30.9856, 2.52805, 15.8135, 0.95 ) }
    dend_16 { pt3dadd( -31.2638, 2.23177, 16.6343, 0.73 ) }
    dend_16 { pt3dadd( -31.5652, 1.88715, 17.3114, 1.03 ) }
    dend_16 { pt3dadd( -31.8141, 1.63768, 17.6885, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 10/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -11.3118, 3.75778, -1.19149, 2.13 ) }
    dend_9 { pt3dadd( -11.8794, 4.06732, -1.30091, 2.13 ) }
    dend_9 { pt3dadd( -12.7357, 4.53431, -1.46598, 2.13 ) }
    dend_9 { pt3dadd( -13.3821, 4.88686, -1.59061, 1.84 ) }
    dend_9 { pt3dadd( -14.2988, 5.38682, -1.76734, 2.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 10.0453, 0.980638, 11.8847, 1.62 ) }
    dend_7 { pt3dadd( 12.0661, 1.41068, 13.4149, 1.62 ) }
    dend_7 { pt3dadd( 14.3193, 1.87411, 15.0345, 0.88 ) }
    dend_7 { pt3dadd( 16.2815, 2.21259, 16.3523, 1.32 ) }
    dend_7 { pt3dadd( 17.3754, 2.41404, 16.9979, 2.06 ) }
    dend_7 { pt3dadd( 19.2497, 2.78924, 17.9681, 1.47 ) }
    dend_7 { pt3dadd( 21.0396, 3.1621, 18.8217, 1.76 ) }
    dend_7 { pt3dadd( 22.7476, 3.56901, 19.5368, 1.4 ) }
    dend_7 { pt3dadd( 24.1808, 3.94243, 19.9933, 0.88 ) }
    dend_7 { pt3dadd( 26.1123, 4.5252, 20.4653, 0.81 ) }
    dend_7 { pt3dadd( 27.5562, 4.96491, 20.7601, 0.66 ) }
    dend_7 { pt3dadd( 29.1728, 5.43693, 21.0477, 0.81 ) }
    dend_7 { pt3dadd( 31.0151, 5.94218, 21.3414, 1.69 ) }
    dend_7 { pt3dadd( 33.2731, 6.55801, 21.6708, 1.69 ) }
    dend_7 { pt3dadd( 35.5507, 7.17564, 22.0038, 2.2 ) }
    dend_7 { pt3dadd( 37.8854, 7.72028, 22.3478, 0.73 ) }
    dend_7 { pt3dadd( 39.448, 8.06359, 22.5268, 0.59 ) }
    dend_7 { pt3dadd( 41.218, 8.47553, 22.6781, 0.66 ) }
    dend_7 { pt3dadd( 42.7344, 8.80166, 22.7706, 0.73 ) }
    dend_7 { pt3dadd( 43.627, 8.99153, 22.8353, 0.59 ) }
    dend_7 { pt3dadd( 45.3656, 9.39725, 22.9438, 0.59 ) }
    dend_7 { pt3dadd( 46.3607, 9.69078, 23.002, 0.51 ) }
    dend_7 { pt3dadd( 48.7801, 10.5037, 23.1396, 0.51 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 38/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.0453, 0.980638, 11.8847, 0.81 ) }
    dend_6 { pt3dadd( 11.9096, -0.126336, 12.5524, 0.81 ) }
    dend_6 { pt3dadd( 13.6406, -1.1306, 13.3125, 0.66 ) }
    dend_6 { pt3dadd( 15.1201, -2.00111, 14.0049, 0.73 ) }
    dend_6 { pt3dadd( 16.2294, -2.68415, 14.5592, 0.81 ) }
    dend_6 { pt3dadd( 17.0751, -3.22282, 14.9892, 0.73 ) }
    dend_6 { pt3dadd( 18.0052, -3.8151, 15.4384, 0.81 ) }
    dend_6 { pt3dadd( 19.1886, -4.55631, 16.0129, 0.81 ) }
    dend_6 { pt3dadd( 19.8424, -4.96313, 16.3256, 0.73 ) }
    dend_6 { pt3dadd( 20.8315, -5.57362, 16.7864, 0.44 ) }
    dend_6 { pt3dadd( 21.9418, -6.24121, 17.2523, 1.84 ) }
    dend_6 { pt3dadd( 23.4732, -7.1683, 17.8691, 0.95 ) }
    dend_6 { pt3dadd( 24.555, -7.85173, 18.2723, 0.44 ) }
    dend_6 { pt3dadd( 25.1588, -8.25717, 18.4854, 0.37 ) }
    dend_6 { pt3dadd( 26.0189, -8.82233, 18.8005, 0.81 ) }
    dend_6 { pt3dadd( 26.6156, -9.21186, 19.0201, 1.32 ) }
    dend_6 { pt3dadd( 27.5285, -9.85546, 19.4035, 1.47 ) }
    dend_6 { pt3dadd( 28.3293, -10.5379, 19.8242, 1.47 ) }
    dend_6 { pt3dadd( 29.1485, -11.3883, 20.2923, 0.07 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 57/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -11.8326, 6.39453, 12.5773, 1.47 ) }
    dend_2 { pt3dadd( -14.3531, 7.62312, 12.9576, 1.47 ) }
    dend_2 { pt3dadd( -16.2167, 8.54572, 13.2473, 1.1 ) }
    dend_2 { pt3dadd( -17.5492, 9.20535, 13.4544, 1.1 ) }
    dend_2 { pt3dadd( -19.3541, 10.0989, 13.735, 1.1 ) }
    dend_2 { pt3dadd( -20.6182, 10.7246, 13.9315, 1.69 ) }
    dend_2 { pt3dadd( -21.1702, 10.9979, 14.0173, 2.35 ) }
    dend_2 { pt3dadd( -22.9749, 11.9868, 14.3248, 2.35 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 65/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -11.8326, 6.39453, 12.5773, 1.32 ) }
    dend_1 { pt3dadd( -13.4573, 6.03614, 13.0756, 1.32 ) }
    dend_1 { pt3dadd( -14.5278, 5.83721, 13.2692, 0.88 ) }
    dend_1 { pt3dadd( -15.083, 5.75421, 13.3352, 0.95 ) }
    dend_1 { pt3dadd( -15.6597, 5.69018, 13.383, 1.03 ) }
    dend_1 { pt3dadd( -16.1729, 5.64224, 13.4345, 1.32 ) }
    dend_1 { pt3dadd( -17.3749, 5.56191, 13.5811, 2.13 ) }
    dend_1 { pt3dadd( -18.6275, 5.55544, 13.7271, 0.73 ) }
    dend_1 { pt3dadd( -19.5011, 5.56876, 13.8598, 0.59 ) }
    dend_1 { pt3dadd( -20.5662, 5.58055, 14.0602, 0.59 ) }
    dend_1 { pt3dadd( -21.2411, 5.56327, 14.2282, 0.88 ) }
    dend_1 { pt3dadd( -22.1119, 5.51613, 14.5083, 1.1 ) }
    dend_1 { pt3dadd( -22.9887, 5.43395, 14.8731, 0.88 ) }
    dend_1 { pt3dadd( -24.2159, 5.2235, 15.4508, 0.81 ) }
    dend_1 { pt3dadd( -25.2226, 4.96549, 15.9407, 0.81 ) }
    dend_1 { pt3dadd( -26.2068, 4.65241, 16.4259, 0.88 ) }
    dend_1 { pt3dadd( -27.0901, 4.31865, 16.8294, 0.88 ) }
    dend_1 { pt3dadd( -27.9464, 3.94054, 17.224, 0.44 ) }
    dend_1 { pt3dadd( -28.7982, 3.51844, 17.6071, 0.44 ) }
    dend_1 { pt3dadd( -29.3257, 3.24396, 17.8513, 0.66 ) }
    dend_1 { pt3dadd( -29.9258, 2.94818, 18.1254, 0.81 ) }
    dend_1 { pt3dadd( -30.934, 2.45636, 18.5452, 1.1 ) }
    dend_1 { pt3dadd( -31.3234, 2.25644, 18.6995, 1.1 ) }
    dend_1 { pt3dadd( -32.0848, 1.87153, 19.0056, 0.66 ) }
    dend_1 { pt3dadd( -32.8529, 1.48284, 19.3286, 0.59 ) }
    dend_1 { pt3dadd( -33.3931, 1.16615, 19.5616, 0.66 ) }
    dend_1 { pt3dadd( -34.1287, 0.648637, 19.8732, 0.37 ) }
    dend_1 { pt3dadd( -34.5992, 0.260094, 20.0766, 0.37 ) }
    dend_1 { pt3dadd( -35.0765, -0.168854, 20.2746, 1.1 ) }
    dend_1 { pt3dadd( -35.353, -0.451744, 20.3934, 1.03 ) }
    dend_1 { pt3dadd( -35.8811, -1.09617, 20.6085, 0.22 ) }
    dend_1 { pt3dadd( -36.2326, -1.57052, 20.7523, 0.44 ) }
    dend_1 { pt3dadd( -36.5186, -1.94872, 20.853, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.4794, 16.3784, 0.0, 0.798013 ) }
    axon_1 { pt3dadd( 49.9466, 22.9842, 0.0, 0.798013 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    axon_1 { pt3dadd( 63.4137, 29.5901, 0.0, 0.798013 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 1/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 62.2545, 55.8195, -27.6525, 1.03 ) }
    dend_40 { pt3dadd( 62.3148, 56.8783, -27.9471, 1.03 ) }
    dend_40 { pt3dadd( 62.3303, 58.0268, -28.4906, 0.51 ) }
    dend_40 { pt3dadd( 62.3358, 58.6656, -28.8363, 0.51 ) }
    dend_40 { pt3dadd( 62.38, 59.6226, -29.3695, 1.18 ) }
    dend_40 { pt3dadd( 62.4525, 60.3689, -29.82, 1.62 ) }
    dend_40 { pt3dadd( 62.5702, 61.0547, -30.2586, 1.91 ) }
    dend_40 { pt3dadd( 62.898, 62.3173, -31.254, 0.73 ) }
    dend_40 { pt3dadd( 63.0691, 62.72, -31.6204, 0.66 ) }
    dend_40 { pt3dadd( 63.4173, 63.2926, -32.1429, 0.81 ) }
    dend_40 { pt3dadd( 63.8811, 63.8865, -32.6484, 0.59 ) }
    dend_40 { pt3dadd( 64.4438, 64.5097, -33.1306, 1.1 ) }
    dend_40 { pt3dadd( 64.9733, 65.0643, -33.5198, 2.06 ) }
    dend_40 { pt3dadd( 65.5839, 65.6958, -33.903, 2.06 ) }
    dend_40 { pt3dadd( 66.1672, 66.3359, -34.2749, 1.62 ) }
    dend_40 { pt3dadd( 66.6618, 66.9418, -34.5703, 0.81 ) }
    dend_40 { pt3dadd( 67.4278, 67.9753, -35.0085, 0.37 ) }
    dend_40 { pt3dadd( 67.9247, 68.6865, -35.3035, 0.37 ) }
    dend_40 { pt3dadd( 68.2384, 69.134, -35.4843, 1.32 ) }
    dend_40 { pt3dadd( 68.723, 69.7837, -35.7571, 2.2 ) }
    dend_40 { pt3dadd( 69.557, 70.7651, -36.2068, 1.76 ) }
    dend_40 { pt3dadd( 70.5892, 71.8681, -36.73, 0.07 ) }
    dend_40 { pt3dadd( 71.2548, 72.5177, -37.0457, 1.1 ) }
    dend_40 { pt3dadd( 71.7073, 72.9239, -37.2388, 2.35 ) }
    dend_40 { pt3dadd( 72.695, 73.7735, -37.6247, 1.69 ) }
    dend_40 { pt3dadd( 73.6186, 74.5384, -37.9568, 0.37 ) }
    dend_40 { pt3dadd( 74.3756, 75.1446, -38.2154, 0.59 ) }
    dend_40 { pt3dadd( 75.2279, 75.8267, -38.4546, 0.59 ) }
    dend_40 { pt3dadd( 76.2044, 76.6145, -38.7109, 2.06 ) }
    dend_40 { pt3dadd( 76.8492, 77.1524, -38.8809, 2.06 ) }
    dend_40 { pt3dadd( 77.9167, 78.0368, -39.151, 1.18 ) }
    dend_40 { pt3dadd( 78.6639, 78.6383, -39.3399, 0.59 ) }
    dend_40 { pt3dadd( 79.7664, 79.4911, -39.6378, 0.29 ) }
    dend_40 { pt3dadd( 81.2003, 80.5982, -40.0588, 2.86 ) }
    dend_40 { pt3dadd( 82.5179, 81.6339, -40.484, 0.29 ) }
    dend_40 { pt3dadd( 83.1989, 82.1883, -40.7224, 0.29 ) }
    dend_40 { pt3dadd( 83.8825, 82.7991, -40.9877, 0.44 ) }
    dend_40 { pt3dadd( 84.5355, 83.4724, -41.2803, 1.1 ) }
    dend_40 { pt3dadd( 84.9715, 84.0155, -41.5245, 1.98 ) }
    dend_40 { pt3dadd( 85.2172, 84.3955, -41.6888, 2.13 ) }
    dend_40 { pt3dadd( 85.5227, 84.9687, -41.9298, 2.13 ) }
    dend_40 { pt3dadd( 85.8872, 85.812, -42.2616, 2.13 ) }
    dend_40 { pt3dadd( 86.3314, 87.0783, -42.7322, 0.37 ) }
    dend_40 { pt3dadd( 86.6078, 88.0318, -43.0668, 0.15 ) }
    dend_40 { pt3dadd( 86.7489, 88.6234, -43.2798, 0.15 ) }
    dend_40 { pt3dadd( 86.9172, 89.5663, -43.633, 1.1 ) }
    dend_40 { pt3dadd( 87.0032, 90.2488, -43.8913, 2.06 ) }
    dend_40 { pt3dadd( 87.0664, 91.43, -44.3357, 0.88 ) }
    dend_40 { pt3dadd( 87.0476, 92.064, -44.5665, 0.15 ) }
    dend_40 { pt3dadd( 87.0149, 92.6826, -44.7934, 0.22 ) }
    dend_40 { pt3dadd( 86.9811, 93.3823, -45.0679, 0.22 ) }
    dend_40 { pt3dadd( 86.9688, 93.9574, -45.3, 0.22 ) }
    dend_40 { pt3dadd( 87.0047, 94.741, -45.6201, 1.1 ) }
    dend_40 { pt3dadd( 87.0446, 95.1033, -45.783, 1.32 ) }
    dend_40 { pt3dadd( 87.1388, 95.6663, -46.0414, 0.81 ) }
    dend_40 { pt3dadd( 87.2725, 96.3036, -46.3328, 0.22 ) }
    dend_40 { pt3dadd( 87.4049, 96.8022, -46.5609, 0.22 ) }
    dend_40 { pt3dadd( 87.6494, 97.6693, -46.998, 1.54 ) }
    dend_40 { pt3dadd( 87.8436, 98.3442, -47.3575, 1.54 ) }
    dend_40 { pt3dadd( 88.1192, 99.3321, -47.885, 0.15 ) }
    dend_40 { pt3dadd( 88.2987, 100.004, -48.2375, 0.07 ) }
    dend_40 { pt3dadd( 88.4726, 100.613, -48.5504, 0.81 ) }
    dend_40 { pt3dadd( 88.8019, 101.723, -49.1067, 0.15 ) }
    dend_40 { pt3dadd( 89.0913, 102.612, -49.5319, 2.2 ) }
    dend_40 { pt3dadd( 89.2108, 102.979, -49.6906, 2.13 ) }
    dend_40 { pt3dadd( 89.4089, 103.538, -49.9276, 1.84 ) }
    dend_40 { pt3dadd( 89.796, 104.535, -50.3219, 0.88 ) }
    dend_40 { pt3dadd( 90.0933, 105.232, -50.5853, 0.22 ) }
    dend_40 { pt3dadd( 90.2997, 105.646, -50.7219, 0.22 ) }
    dend_40 { pt3dadd( 90.606, 106.2, -50.9054, 0.44 ) }
    dend_40 { pt3dadd( 91.0473, 106.953, -51.1575, 0.07 ) }
    dend_40 { pt3dadd( 91.4846, 107.663, -51.3967, 1.32 ) }
    dend_40 { pt3dadd( 91.7396, 108.043, -51.5293, 1.62 ) }
    dend_40 { pt3dadd( 92.2255, 108.718, -51.7683, 1.69 ) }
    dend_40 { pt3dadd( 92.9417, 109.657, -52.0732, 0.22 ) }
    dend_40 { pt3dadd( 93.3608, 110.149, -52.2227, 0.29 ) }
    dend_40 { pt3dadd( 93.9909, 110.816, -52.4039, 0.29 ) }
    dend_40 { pt3dadd( 94.5252, 111.332, -52.5302, 0.95 ) }
    dend_40 { pt3dadd( 95.0874, 111.83, -52.6391, 1.54 ) }
    dend_40 { pt3dadd( 96.0366, 112.616, -52.7465, 1.32 ) }
    dend_40 { pt3dadd( 97.1006, 113.465, -52.7804, 0.22 ) }
    dend_40 { pt3dadd( 97.9063, 114.112, -52.7731, 0.22 ) }
    dend_40 { pt3dadd( 98.3969, 114.504, -52.7491, 0.81 ) }
    dend_40 { pt3dadd( 98.9577, 114.97, -52.7075, 1.1 ) }
    dend_40 { pt3dadd( 99.9773, 115.863, -52.6042, 0.66 ) }
    dend_40 { pt3dadd( 100.564, 116.449, -52.5234, 1.25 ) }
    dend_40 { pt3dadd( 101.326, 117.286, -52.4267, 2.2 ) }
    dend_40 { pt3dadd( 101.662, 117.666, -52.4081, 2.5 ) }
    dend_40 { pt3dadd( 101.943, 117.984, -52.4106, 2.5 ) }
    dend_40 { pt3dadd( 102.848, 119.018, -52.4806, 0.59 ) }
    dend_40 { pt3dadd( 103.837, 120.163, -52.6359, 0.22 ) }
    dend_40 { pt3dadd( 104.686, 121.224, -52.8287, 0.22 ) }
    dend_40 { pt3dadd( 105.456, 122.312, -53.0842, 0.22 ) }
    dend_40 { pt3dadd( 105.835, 122.93, -53.2688, 1.62 ) }
    dend_40 { pt3dadd( 105.963, 123.179, -53.3619, 2.06 ) }
    dend_40 { pt3dadd( 106.123, 123.584, -53.5519, 2.06 ) }
    dend_40 { pt3dadd( 106.531, 125.004, -54.3134, 0.29 ) }
    dend_40 { pt3dadd( 106.682, 125.876, -54.7828, 0.95 ) }
    dend_40 { pt3dadd( 106.745, 126.503, -55.1261, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_40 { pt3dadd( 106.794, 127.182, -55.5235, 0.15 ) }
    dend_40 { pt3dadd( 106.837, 127.92, -55.9571, 0.15 ) }
    dend_40 { pt3dadd( 106.87, 128.454, -56.2716, 1.32 ) }
    dend_40 { pt3dadd( 106.904, 128.966, -56.5638, 1.76 ) }
    dend_40 { pt3dadd( 106.925, 129.136, -56.6603, 1.69 ) }
    dend_40 { pt3dadd( 107.163, 130.379, -57.4259, 0.22 ) }
    dend_40 { pt3dadd( 107.337, 131.093, -57.8799, 0.29 ) }
    dend_40 { pt3dadd( 107.524, 131.738, -58.3105, 1.03 ) }
    dend_40 { pt3dadd( 107.685, 132.22, -58.641, 1.69 ) }
    dend_40 { pt3dadd( 107.865, 132.7, -58.9746, 1.91 ) }
    dend_40 { pt3dadd( 108.35, 133.944, -59.8323, 0.15 ) }
    dend_40 { pt3dadd( 108.595, 134.576, -60.2556, 0.66 ) }
    dend_40 { pt3dadd( 108.877, 135.377, -60.7802, 0.15 ) }
    dend_40 { pt3dadd( 109.036, 135.887, -61.1069, 1.18 ) }
    dend_40 { pt3dadd( 109.155, 136.284, -61.3453, 1.32 ) }
    dend_40 { pt3dadd( 109.245, 136.622, -61.5406, 1.32 ) }
    dend_40 { pt3dadd( 109.523, 137.827, -62.2306, 0.15 ) }
    dend_40 { pt3dadd( 109.732, 138.859, -62.852, 1.76 ) }
    dend_40 { pt3dadd( 109.859, 139.554, -63.2625, 1.76 ) }
    dend_40 { pt3dadd( 110.038, 140.599, -63.8854, 0.44 ) }
    dend_40 { pt3dadd( 110.134, 141.21, -64.2473, 0.73 ) }
    dend_40 { pt3dadd( 110.251, 141.91, -64.6607, 0.73 ) }
    dend_40 { pt3dadd( 110.324, 142.354, -64.9184, 0.44 ) }
    dend_40 { pt3dadd( 110.453, 143.185, -65.3815, 0.22 ) }
    dend_40 { pt3dadd( 110.563, 143.866, -65.7654, 1.03 ) }
    dend_40 { pt3dadd( 110.641, 144.323, -66.0287, 1.32 ) }
    dend_40 { pt3dadd( 110.878, 145.357, -66.6007, 0.07 ) }
    dend_40 { pt3dadd( 111.152, 146.323, -67.1405, 1.62 ) }
    dend_40 { pt3dadd( 111.314, 146.849, -67.4369, 1.62 ) }
    dend_40 { pt3dadd( 111.715, 148.097, -68.1745, 0.15 ) }
    dend_40 { pt3dadd( 111.83, 148.44, -68.3778, 0.15 ) }
    dend_40 { pt3dadd( 112.049, 149.066, -68.7401, 0.15 ) }
    dend_40 { pt3dadd( 112.292, 149.709, -69.0948, 1.03 ) }
    dend_40 { pt3dadd( 112.452, 150.089, -69.2975, 1.98 ) }
    dend_40 { pt3dadd( 112.733, 150.703, -69.6011, 1.69 ) }
    dend_40 { pt3dadd( 113.183, 151.639, -70.0242, 0.29 ) }
    dend_40 { pt3dadd( 113.571, 152.411, -70.3816, 0.29 ) }
    dend_40 { pt3dadd( 113.971, 153.189, -70.7328, 1.32 ) }
    dend_40 { pt3dadd( 114.147, 153.499, -70.8647, 1.54 ) }
    dend_40 { pt3dadd( 114.794, 154.594, -71.3176, 0.29 ) }
    dend_40 { pt3dadd( 115.18, 155.241, -71.5738, 0.44 ) }
    dend_40 { pt3dadd( 115.721, 156.237, -71.978, 0.73 ) }
    dend_40 { pt3dadd( 116.053, 156.931, -72.2697, 1.18 ) }
    dend_40 { pt3dadd( 116.512, 158.073, -72.7581, 0.29 ) }
    dend_40 { pt3dadd( 116.707, 158.664, -73.0331, 0.15 ) }
    dend_40 { pt3dadd( 116.861, 159.235, -73.3312, 0.15 ) }
    dend_40 { pt3dadd( 117.096, 160.271, -73.9252, 2.13 ) }
    dend_40 { pt3dadd( 117.185, 160.677, -74.1711, 2.2 ) }
    dend_40 { pt3dadd( 117.314, 161.265, -74.5626, 2.2 ) }
    dend_40 { pt3dadd( 117.59, 162.504, -75.4267, 0.51 ) }
    dend_40 { pt3dadd( 117.849, 163.439, -76.1192, 0.51 ) }
    dend_40 { pt3dadd( 118.13, 164.238, -76.7376, 0.07 ) }
    dend_40 { pt3dadd( 118.479, 165.075, -77.4002, 0.66 ) }
    dend_40 { pt3dadd( 118.843, 165.899, -78.0474, 0.22 ) }
    dend_40 { pt3dadd( 119.155, 166.574, -78.5689, 1.1 ) }
    dend_40 { pt3dadd( 119.582, 167.498, -79.2466, 0.29 ) }
    dend_40 { pt3dadd( 119.903, 168.282, -79.7758, 1.32 ) }
    dend_40 { pt3dadd( 119.972, 168.471, -79.8975, 1.84 ) }
    dend_40 { pt3dadd( 120.131, 169.027, -80.2322, 1.47 ) }
    dend_40 { pt3dadd( 120.348, 169.939, -80.7249, 0.37 ) }
    dend_40 { pt3dadd( 120.436, 170.443, -80.9778, 0.15 ) }
    dend_40 { pt3dadd( 120.514, 171.352, -81.3685, 0.15 ) }
    dend_40 { pt3dadd( 120.527, 171.847, -81.5637, 0.15 ) }
    dend_40 { pt3dadd( 120.538, 172.524, -81.822, 1.1 ) }
    dend_40 { pt3dadd( 120.535, 173.326, -82.1092, 1.76 ) }
    dend_40 { pt3dadd( 120.534, 173.817, -82.2683, 1.98 ) }
    dend_40 { pt3dadd( 120.536, 175.064, -82.6621, 0.66 ) }
    dend_40 { pt3dadd( 120.546, 176.065, -82.9788, 0.59 ) }
    dend_40 { pt3dadd( 120.548, 176.619, -83.1504, 0.22 ) }
    dend_40 { pt3dadd( 120.543, 177.489, -83.4478, 0.29 ) }
    dend_40 { pt3dadd( 120.53, 178.344, -83.7547, 0.29 ) }
    dend_40 { pt3dadd( 120.525, 179.032, -84.031, 1.18 ) }
    dend_40 { pt3dadd( 120.521, 179.616, -84.2913, 1.84 ) }
    dend_40 { pt3dadd( 120.491, 180.364, -84.6409, 1.4 ) }
    dend_40 { pt3dadd( 120.426, 181.156, -85.0055, 0.37 ) }
    dend_40 { pt3dadd( 120.375, 181.634, -85.2307, 0.29 ) }
    dend_40 { pt3dadd( 120.305, 182.188, -85.49, 0.29 ) }
    dend_40 { pt3dadd( 120.251, 182.663, -85.7218, 0.66 ) }
    dend_40 { pt3dadd( 120.189, 183.253, -86.0342, 0.66 ) }
    dend_40 { pt3dadd( 120.126, 183.878, -86.3944, 0.22 ) }
    dend_40 { pt3dadd( 120.051, 184.561, -86.8088, 0.22 ) }
    dend_40 { pt3dadd( 119.932, 185.305, -87.2979, 1.62 ) }
    dend_40 { pt3dadd( 119.757, 186.021, -87.8319, 1.62 ) }
    dend_40 { pt3dadd( 119.517, 186.866, -88.4996, 0.88 ) }
    dend_40 { pt3dadd( 119.282, 187.603, -89.1091, 0.37 ) }
    dend_40 { pt3dadd( 119.149, 188.002, -89.4521, 0.37 ) }
    dend_40 { pt3dadd( 118.885, 188.791, -90.1365, 1.91 ) }
    dend_40 { pt3dadd( 118.582, 189.821, -91.0699, 0.51 ) }
    dend_40 { pt3dadd( 118.428, 190.448, -91.636, 0.37 ) }
    dend_40 { pt3dadd( 118.28, 191.109, -92.2548, 0.22 ) }
    dend_40 { pt3dadd( 118.09, 192.11, -93.2125, 0.66 ) }
    dend_40 { pt3dadd( 118.047, 192.399, -93.4851, 1.76 ) }
    dend_40 { pt3dadd( 117.967, 193.495, -94.4922, 0.29 ) }
    dend_40 { pt3dadd( 117.961, 193.853, -94.7943, 0.22 ) }
    dend_40 { pt3dadd( 117.935, 194.657, -95.4855, 1.25 ) }
    dend_40 { pt3dadd( 117.916, 194.906, -95.7046, 1.25 ) }
    dend_40 { pt3dadd( 117.868, 195.32, -96.0603, 0.22 ) }
    dend_40 { pt3dadd( 117.786, 195.788, -96.4919, 0.15 ) }
    dend_40 { pt3dadd( 117.667, 196.273, -96.9648, 0.15 ) }
    dend_40 { pt3dadd( 117.346, 197.294, -98.0188, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_40 { pt3dadd( 116.915, 198.458, -99.2651, 0.44 ) }
    dend_40 { pt3dadd( 116.768, 198.807, -99.6474, 0.73 ) }
    dend_40 { pt3dadd( 116.472, 199.447, -100.34, 0.22 ) }
    dend_40 { pt3dadd( 116.367, 199.67, -100.561, 0.22 ) }
    dend_40 { pt3dadd( 116.064, 200.428, -101.209, 1.62 ) }
    dend_40 { pt3dadd( 115.888, 201.066, -101.621, 1.62 ) }
    dend_40 { pt3dadd( 115.748, 201.992, -102.09, 0.15 ) }
    dend_40 { pt3dadd( 115.706, 202.54, -102.338, 0.15 ) }
    dend_40 { pt3dadd( 115.687, 203.346, -102.663, 0.22 ) }
    dend_40 { pt3dadd( 115.694, 204.506, -103.11, 1.84 ) }
    dend_40 { pt3dadd( 115.713, 205.085, -103.331, 1.84 ) }
    dend_40 { pt3dadd( 115.725, 206.039, -103.681, 0.59 ) }
    dend_40 { pt3dadd( 115.702, 206.857, -103.992, 0.37 ) }
    dend_40 { pt3dadd( 115.675, 207.297, -104.165, 0.37 ) }
    dend_40 { pt3dadd( 115.598, 208.085, -104.5, 0.37 ) }
    dend_40 { pt3dadd( 115.48, 209.039, -104.937, 0.07 ) }
    dend_40 { pt3dadd( 115.355, 209.932, -105.373, 0.07 ) }
    dend_40 { pt3dadd( 115.238, 210.928, -105.902, 1.84 ) }
    dend_40 { pt3dadd( 115.19, 211.495, -106.24, 1.84 ) }
    dend_40 { pt3dadd( 115.161, 212.393, -106.821, 0.37 ) }
    dend_40 { pt3dadd( 115.178, 213.153, -107.367, 0.15 ) }
    dend_40 { pt3dadd( 115.231, 213.801, -107.876, 0.15 ) }
    dend_40 { pt3dadd( 115.357, 214.772, -108.7, 1.47 ) }
    dend_40 { pt3dadd( 115.425, 215.268, -109.161, 1.47 ) }
    dend_40 { pt3dadd( 115.465, 215.718, -109.585, 1.1 ) }
    dend_40 { pt3dadd( 115.47, 216.277, -110.102, 0.81 ) }
    dend_40 { pt3dadd( 115.432, 216.873, -110.679, 1.62 ) }
    dend_40 { pt3dadd( 115.4, 217.176, -110.974, 1.62 ) }
    dend_40 { pt3dadd( 115.235, 218.268, -112.027, 0.07 ) }
    dend_40 { pt3dadd( 115.106, 219.021, -112.768, 0.95 ) }
    dend_40 { pt3dadd( 114.964, 219.795, -113.589, 0.07 ) }
    dend_40 { pt3dadd( 114.871, 220.248, -114.106, 0.88 ) }
    dend_40 { pt3dadd( 114.764, 220.725, -114.713, 0.07 ) }
    dend_40 { pt3dadd( 114.682, 221.093, -115.216, 0.07 ) }
    dend_40 { pt3dadd( 114.553, 221.633, -115.995, 1.84 ) }
    dend_40 { pt3dadd( 114.361, 222.391, -117.124, 0.51 ) }
    dend_40 { pt3dadd( 114.206, 223.12, -118.119, 1.18 ) }
    dend_40 { pt3dadd( 114.066, 223.918, -119.097, 0.22 ) }
    dend_40 { pt3dadd( 113.992, 224.37, -119.614, 0.22 ) }
    dend_40 { pt3dadd( 113.912, 224.981, -120.238, 1.1 ) }
    dend_40 { pt3dadd( 113.894, 225.274, -120.504, 1.18 ) }
    dend_40 { pt3dadd( 113.902, 226.368, -121.381, 0.15 ) }
    dend_40 { pt3dadd( 113.951, 227.057, -121.855, 1.1 ) }
    dend_40 { pt3dadd( 113.985, 227.504, -122.129, 1.4 ) }
    dend_40 { pt3dadd( 113.994, 227.791, -122.294, 1.4 ) }
    dend_40 { pt3dadd( 113.977, 228.846, -122.853, 0.37 ) }
    dend_40 { pt3dadd( 113.954, 229.216, -123.04, 0.37 ) }
    dend_40 { pt3dadd( 113.858, 230.088, -123.483, 1.54 ) }
    dend_40 { pt3dadd( 113.68, 231.327, -124.08, 0.07 ) }
    dend_40 { pt3dadd( 113.488, 232.325, -124.537, 0.07 ) }
    dend_40 { pt3dadd( 113.288, 233.211, -124.939, 1.69 ) }
    dend_40 { pt3dadd( 113.241, 233.386, -125.014, 1.69 ) }
    dend_40 { pt3dadd( 112.892, 234.574, -125.513, 0.07 ) }
    dend_40 { pt3dadd( 112.485, 235.824, -126.033, 0.07 ) }
    dend_40 { pt3dadd( 112.161, 236.725, -126.385, 0.07 ) }
    dend_40 { pt3dadd( 111.859, 237.552, -126.713, 1.69 ) }
    dend_40 { pt3dadd( 111.605, 238.219, -126.972, 2.28 ) }
    dend_40 { pt3dadd( 111.033, 239.677, -127.539, 0.22 ) }
    dend_40 { pt3dadd( 110.71, 240.484, -127.842, 0.15 ) }
    dend_40 { pt3dadd( 110.304, 241.541, -128.257, 0.15 ) }
    dend_40 { pt3dadd( 110.083, 242.157, -128.503, 0.95 ) }
    dend_40 { pt3dadd( 109.88, 242.701, -128.726, 1.18 ) }
    dend_40 { pt3dadd( 109.568, 243.568, -129.098, 0.07 ) }
    dend_40 { pt3dadd( 109.48, 243.8, -129.198, 0.07 ) }
    dend_40 { pt3dadd( 109.228, 244.491, -129.483, 1.1 ) }
    dend_40 { pt3dadd( 109.008, 245.088, -129.715, 1.1 ) }
    dend_40 { pt3dadd( 108.803, 245.604, -129.897, 0.07 ) }
    dend_40 { pt3dadd( 108.492, 246.357, -130.17, 0.07 ) }
    dend_40 { pt3dadd( 108.075, 247.368, -130.514, 1.62 ) }
    dend_40 { pt3dadd( 107.73, 248.196, -130.79, 1.25 ) }
    dend_40 { pt3dadd( 107.383, 249.039, -131.085, 0.07 ) }
    dend_40 { pt3dadd( 107.109, 249.709, -131.32, 0.07 ) }
    dend_40 { pt3dadd( 106.62, 250.919, -131.779, 1.69 ) }
    dend_40 { pt3dadd( 106.386, 251.523, -132.024, 1.1 ) }
    dend_40 { pt3dadd( 106.158, 252.169, -132.292, 0.59 ) }
    dend_40 { pt3dadd( 105.87, 253.031, -132.675, 0.07 ) }
    dend_40 { pt3dadd( 105.68, 253.706, -132.97, 1.03 ) }
    dend_40 { pt3dadd( 105.476, 254.707, -133.4, 0.07 ) }
    dend_40 { pt3dadd( 105.341, 255.778, -133.868, 0.07 ) }
    dend_40 { pt3dadd( 105.3, 256.386, -134.12, 0.95 ) }
    dend_40 { pt3dadd( 105.28, 257.433, -134.519, 0.07 ) }
    dend_40 { pt3dadd( 105.322, 258.863, -135.021, 2.42 ) }
    dend_40 { pt3dadd( 105.439, 260.406, -135.536, 0.07 ) }
    dend_40 { pt3dadd( 105.55, 261.218, -135.781, 0.07 ) }
    dend_40 { pt3dadd( 105.782, 262.255, -136.089, 0.95 ) }
    dend_40 { pt3dadd( 105.891, 262.641, -136.198, 1.18 ) }
    dend_40 { pt3dadd( 106.348, 263.795, -136.504, 0.37 ) }
    dend_40 { pt3dadd( 106.555, 264.196, -136.615, 0.07 ) }
    dend_40 { pt3dadd( 107.108, 265.148, -136.869, 0.07 ) }
    dend_40 { pt3dadd( 107.83, 266.303, -137.201, 1.32 ) }
    dend_40 { pt3dadd( 108.374, 267.1, -137.461, 1.91 ) }
    dend_40 { pt3dadd( 109.494, 268.697, -137.972, 0.15 ) }
    dend_40 { pt3dadd( 109.915, 269.301, -138.164, 0.15 ) }
    dend_40 { pt3dadd( 110.163, 269.692, -138.297, 0.15 ) }
    dend_40 { pt3dadd( 110.528, 270.377, -138.543, 0.15 ) }
    dend_40 { pt3dadd( 110.781, 270.996, -138.79, 1.47 ) }
    dend_40 { pt3dadd( 110.961, 271.592, -139.056, 1.25 ) }
    dend_40 { pt3dadd( 111.11, 272.564, -139.547, 0.22 ) }
    dend_40 { pt3dadd( 111.189, 273.306, -139.941, 0.15 ) }
    dend_40 { pt3dadd( 111.241, 273.882, -140.253, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_40 { pt3dadd( 111.293, 274.8, -140.768, 1.25 ) }
    dend_40 { pt3dadd( 111.326, 275.677, -141.293, 2.35 ) }
    dend_40 { pt3dadd( 111.375, 276.815, -142.013, 0.07 ) }
    dend_40 { pt3dadd( 111.38, 277.183, -142.256, 1.1 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 4/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 62.2545, 55.8195, -27.6525, 0.73 ) }
    dend_39 { pt3dadd( 62.792, 56.1423, -28.3518, 0.73 ) }
    dend_39 { pt3dadd( 63.802, 56.654, -29.5141, 0.37 ) }
    dend_39 { pt3dadd( 64.3423, 56.8773, -30.0918, 0.51 ) }
    dend_39 { pt3dadd( 65.0868, 57.1346, -30.8797, 1.54 ) }
    dend_39 { pt3dadd( 65.9115, 57.4206, -31.7689, 0.07 ) }
    dend_39 { pt3dadd( 66.7051, 57.713, -32.604, 0.15 ) }
    dend_39 { pt3dadd( 67.2039, 57.891, -33.1187, 0.15 ) }
    dend_39 { pt3dadd( 67.7789, 58.0749, -33.6736, 1.32 ) }
    dend_39 { pt3dadd( 69.0511, 58.4074, -34.7765, 0.37 ) }
    dend_39 { pt3dadd( 69.7835, 58.54, -35.3461, 1.25 ) }
    dend_39 { pt3dadd( 70.5386, 58.6566, -35.8585, 0.29 ) }
    dend_39 { pt3dadd( 71.3765, 58.7727, -36.3752, 0.29 ) }
    dend_39 { pt3dadd( 72.0605, 58.8495, -36.7491, 1.03 ) }
    dend_39 { pt3dadd( 73.0694, 58.9135, -37.1561, 0.07 ) }
    dend_39 { pt3dadd( 74.126, 58.9259, -37.4072, 0.07 ) }
    dend_39 { pt3dadd( 74.7635, 58.915, -37.5087, 0.88 ) }
    dend_39 { pt3dadd( 74.9228, 58.9101, -37.5318, 1.03 ) }
    dend_39 { pt3dadd( 76.2021, 58.8966, -37.6825, 0.07 ) }
    dend_39 { pt3dadd( 77.6327, 58.9412, -37.8757, 2.13 ) }
    dend_39 { pt3dadd( 79.1546, 59.0819, -38.1073, 0.07 ) }
    dend_39 { pt3dadd( 79.7159, 59.1628, -38.1958, 0.37 ) }
    dend_39 { pt3dadd( 80.7861, 59.35, -38.387, 0.07 ) }
    dend_39 { pt3dadd( 81.4198, 59.4733, -38.5144, 1.1 ) }
    dend_39 { pt3dadd( 82.3861, 59.6779, -38.7204, 0.07 ) }
    dend_39 { pt3dadd( 83.5879, 59.9541, -39.0097, 0.07 ) }
    dend_39 { pt3dadd( 84.3818, 60.1514, -39.2129, 1.47 ) }
    dend_39 { pt3dadd( 85.3864, 60.4223, -39.4569, 0.07 ) }
    dend_39 { pt3dadd( 86.2313, 60.6631, -39.6611, 0.07 ) }
    dend_39 { pt3dadd( 87.1064, 60.901, -39.8885, 0.07 ) }
    dend_39 { pt3dadd( 87.6704, 61.0438, -40.0448, 1.25 ) }
    dend_39 { pt3dadd( 88.2868, 61.1962, -40.2305, 1.32 ) }
    dend_39 { pt3dadd( 88.888, 61.3483, -40.4032, 1.32 ) }
    dend_39 { pt3dadd( 90.3624, 61.7304, -40.8221, 0.07 ) }
    dend_39 { pt3dadd( 90.9007, 61.8636, -40.9817, 0.44 ) }
    dend_39 { pt3dadd( 91.6655, 62.0367, -41.2117, 0.07 ) }
    dend_39 { pt3dadd( 92.3414, 62.1768, -41.4135, 0.07 ) }
    dend_39 { pt3dadd( 93.437, 62.3819, -41.7249, 1.76 ) }
    dend_39 { pt3dadd( 94.6647, 62.5987, -42.0562, 0.07 ) }
    dend_39 { pt3dadd( 95.6187, 62.798, -42.3156, 0.07 ) }
    dend_39 { pt3dadd( 96.3661, 62.9827, -42.5337, 1.91 ) }
    dend_39 { pt3dadd( 97.5592, 63.3263, -42.905, 0.07 ) }
    dend_39 { pt3dadd( 98.2172, 63.5479, -43.1304, 0.07 ) }
    dend_39 { pt3dadd( 99.0551, 63.87, -43.4302, 1.47 ) }
    dend_39 { pt3dadd( 100.344, 64.4145, -43.8695, 0.07 ) }
    dend_39 { pt3dadd( 101.12, 64.7573, -44.1071, 1.18 ) }
    dend_39 { pt3dadd( 101.757, 65.0242, -44.283, 1.18 ) }
    dend_39 { pt3dadd( 102.825, 65.4383, -44.535, 0.07 ) }
    dend_39 { pt3dadd( 103.332, 65.6156, -44.6361, 0.07 ) }
    dend_39 { pt3dadd( 104.142, 65.8577, -44.7725, 0.07 ) }
    dend_39 { pt3dadd( 105.558, 66.204, -44.981, 1.76 ) }
    dend_39 { pt3dadd( 106.747, 66.4793, -45.1557, 0.07 ) }
    dend_39 { pt3dadd( 107.312, 66.6177, -45.2482, 0.07 ) }
    dend_39 { pt3dadd( 107.935, 66.7869, -45.3711, 0.66 ) }
    dend_39 { pt3dadd( 108.732, 67.0399, -45.5601, 0.15 ) }
    dend_39 { pt3dadd( 109.553, 67.3595, -45.7949, 1.25 ) }
    dend_39 { pt3dadd( 110.144, 67.6446, -45.9885, 1.25 ) }
    dend_39 { pt3dadd( 111.218, 68.2371, -46.4075, 0.07 ) }
    dend_39 { pt3dadd( 112.331, 68.8764, -46.8861, 1.62 ) }
    dend_39 { pt3dadd( 112.688, 69.0868, -47.0489, 1.32 ) }
    dend_39 { pt3dadd( 113.283, 69.4299, -47.3123, 0.95 ) }
    dend_39 { pt3dadd( 114.058, 69.8449, -47.6693, 0.15 ) }
    dend_39 { pt3dadd( 115.231, 70.4165, -48.1942, 0.07 ) }
    dend_39 { pt3dadd( 116.054, 70.7814, -48.5425, 0.07 ) }
    dend_39 { pt3dadd( 116.253, 70.8571, -48.6208, 1.18 ) }
    dend_39 { pt3dadd( 117.265, 71.1569, -49.0044, 0.22 ) }
    dend_39 { pt3dadd( 118.36, 71.3697, -49.4019, 0.07 ) }
    dend_39 { pt3dadd( 119.388, 71.4956, -49.7997, 1.47 ) }
    dend_39 { pt3dadd( 120.056, 71.5612, -50.0718, 1.47 ) }
    dend_39 { pt3dadd( 121.356, 71.6581, -50.6739, 0.15 ) }
    dend_39 { pt3dadd( 122.152, 71.7017, -51.0721, 0.15 ) }
    dend_39 { pt3dadd( 123.153, 71.7329, -51.6417, 1.47 ) }
    dend_39 { pt3dadd( 124.362, 71.7983, -52.3818, 0.51 ) }
    dend_39 { pt3dadd( 125.147, 71.8758, -52.9224, 1.32 ) }
    dend_39 { pt3dadd( 125.811, 71.9897, -53.4256, 0.29 ) }
    dend_39 { pt3dadd( 126.199, 72.1036, -53.7366, 0.15 ) }
    dend_39 { pt3dadd( 126.83, 72.3715, -54.2535, 0.15 ) }
    dend_39 { pt3dadd( 127.439, 72.686, -54.7646, 1.1 ) }
    dend_39 { pt3dadd( 127.733, 72.8478, -54.9951, 1.18 ) }
    dend_39 { pt3dadd( 128.656, 73.3861, -55.6924, 0.07 ) }
    dend_39 { pt3dadd( 129.118, 73.6755, -56.0093, 0.59 ) }
    dend_39 { pt3dadd( 130.014, 74.2606, -56.5759, 0.07 ) }
    dend_39 { pt3dadd( 130.412, 74.5459, -56.8314, 0.07 ) }
    dend_39 { pt3dadd( 130.975, 74.9752, -57.2014, 1.76 ) }
    dend_39 { pt3dadd( 131.776, 75.6651, -57.7396, 0.07 ) }
    dend_39 { pt3dadd( 132.537, 76.3995, -58.2283, 0.07 ) }
    dend_39 { pt3dadd( 133.261, 77.1278, -58.6819, 1.4 ) }
    dend_39 { pt3dadd( 134.355, 78.296, -59.3608, 0.07 ) }
    dend_39 { pt3dadd( 134.756, 78.7282, -59.6092, 0.51 ) }
    dend_39 { pt3dadd( 135.233, 79.2262, -59.9043, 0.07 ) }
    dend_39 { pt3dadd( 135.949, 79.9378, -60.326, 0.07 ) }
    dend_39 { pt3dadd( 136.359, 80.2785, -60.5642, 1.54 ) }
    dend_39 { pt3dadd( 137.326, 80.9252, -61.0714, 0.07 ) }
    dend_39 { pt3dadd( 138.355, 81.4854, -61.5514, 1.47 ) }
    dend_39 { pt3dadd( 139.22, 81.8512, -61.9221, 0.07 ) }
    dend_39 { pt3dadd( 139.605, 81.9761, -62.0766, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_39 { pt3dadd( 141.507, 82.491, -62.8455, 0.07 ) }
    dend_39 { pt3dadd( 141.977, 82.5892, -63.036, 0.07 ) }
    dend_39 { pt3dadd( 142.492, 82.6627, -63.2405, 1.54 ) }
    dend_39 { pt3dadd( 143.818, 82.8041, -63.7837, 0.07 ) }
    dend_39 { pt3dadd( 144.374, 82.8625, -64.0156, 0.07 ) }
    dend_39 { pt3dadd( 145.393, 82.9972, -64.4647, 0.95 ) }
    dend_39 { pt3dadd( 146.462, 83.1911, -64.9217, 0.07 ) }
    dend_39 { pt3dadd( 146.832, 83.2774, -65.1169, 0.07 ) }
    dend_39 { pt3dadd( 147.292, 83.4043, -65.3876, 0.95 ) }
    dend_39 { pt3dadd( 148.385, 83.7835, -66.0923, 0.07 ) }
    dend_39 { pt3dadd( 149.216, 84.0869, -66.6086, 0.07 ) }
    dend_39 { pt3dadd( 150.018, 84.3944, -67.0894, 1.4 ) }
    dend_39 { pt3dadd( 151.47, 85.0121, -67.9707, 0.07 ) }
    dend_39 { pt3dadd( 151.853, 85.1841, -68.2125, 0.07 ) }
    dend_39 { pt3dadd( 152.268, 85.3843, -68.4825, 0.66 ) }
    dend_39 { pt3dadd( 153.157, 85.8359, -69.0724, 0.07 ) }
    dend_39 { pt3dadd( 153.861, 86.1976, -69.529, 1.25 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 28.137, -7.32496, -14.8997, 0.22 ) }
    dend_36 { pt3dadd( 29.4983, -7.55997, -15.3567, 0.22 ) }
    dend_36 { pt3dadd( 30.3672, -7.73386, -15.6687, 0.59 ) }
    dend_36 { pt3dadd( 31.2652, -7.98035, -15.9893, 0.07 ) }
    dend_36 { pt3dadd( 32.4116, -8.31863, -16.3529, 1.47 ) }
    dend_36 { pt3dadd( 33.3655, -8.62479, -16.6169, 0.07 ) }
    dend_36 { pt3dadd( 33.627, -8.71395, -16.6819, 0.07 ) }
    dend_36 { pt3dadd( 34.8565, -9.17582, -16.9835, 1.76 ) }
    dend_36 { pt3dadd( 35.9935, -9.62023, -17.2665, 0.07 ) }
    dend_36 { pt3dadd( 36.6895, -9.89376, -17.3968, 0.07 ) }
    dend_36 { pt3dadd( 37.4567, -10.2165, -17.5155, 0.07 ) }
    dend_36 { pt3dadd( 37.8812, -10.406, -17.5656, 1.03 ) }
    dend_36 { pt3dadd( 38.5647, -10.7148, -17.6395, 1.03 ) }
    dend_36 { pt3dadd( 39.3564, -11.0894, -17.6832, 1.03 ) }
    dend_36 { pt3dadd( 40.1299, -11.4579, -17.6945, 0.07 ) }
    dend_36 { pt3dadd( 40.9415, -11.8699, -17.6887, 0.07 ) }
    dend_36 { pt3dadd( 41.6332, -12.2278, -17.6576, 0.66 ) }
    dend_36 { pt3dadd( 42.2439, -12.5617, -17.6039, 0.07 ) }
    dend_36 { pt3dadd( 43.0778, -13.0499, -17.4897, 0.95 ) }
    dend_36 { pt3dadd( 44.2159, -13.7409, -17.3236, 0.07 ) }
    dend_36 { pt3dadd( 44.5819, -13.9612, -17.2812, 0.07 ) }
    dend_36 { pt3dadd( 45.1551, -14.2867, -17.2324, 1.1 ) }
    dend_36 { pt3dadd( 45.56, -14.5058, -17.2118, 1.76 ) }
    dend_36 { pt3dadd( 45.9224, -14.7002, -17.2083, 1.76 ) }
    dend_36 { pt3dadd( 46.9488, -15.2506, -17.2211, 0.07 ) }
    dend_36 { pt3dadd( 47.658, -15.6619, -17.2195, 0.73 ) }
    dend_36 { pt3dadd( 48.3661, -16.0935, -17.201, 0.07 ) }
    dend_36 { pt3dadd( 48.5942, -16.2391, -17.196, 0.07 ) }
    dend_36 { pt3dadd( 49.098, -16.5559, -17.2003, 1.1 ) }
    dend_36 { pt3dadd( 50.0338, -17.1351, -17.2312, 0.07 ) }
    dend_36 { pt3dadd( 50.5265, -17.4256, -17.2817, 1.18 ) }
    dend_36 { pt3dadd( 51.081, -17.726, -17.3751, 1.47 ) }
    dend_36 { pt3dadd( 51.5625, -17.9601, -17.4754, 1.47 ) }
    dend_36 { pt3dadd( 52.7558, -18.4633, -17.7523, 0.07 ) }
    dend_36 { pt3dadd( 53.3732, -18.6779, -17.9077, 0.66 ) }
    dend_36 { pt3dadd( 54.3411, -18.9362, -18.1665, 0.07 ) }
    dend_36 { pt3dadd( 54.8581, -19.0374, -18.2784, 0.07 ) }
    dend_36 { pt3dadd( 55.6376, -19.152, -18.4, 1.25 ) }
    dend_36 { pt3dadd( 56.2995, -19.2287, -18.4561, 1.25 ) }
    dend_36 { pt3dadd( 56.9566, -19.2918, -18.4723, 0.81 ) }
    dend_36 { pt3dadd( 57.4208, -19.3322, -18.4643, 0.07 ) }
    dend_36 { pt3dadd( 58.3448, -19.3969, -18.4099, 0.07 ) }
    dend_36 { pt3dadd( 58.8912, -19.4352, -18.3886, 0.07 ) }
    dend_36 { pt3dadd( 59.4886, -19.4871, -18.3797, 0.81 ) }
    dend_36 { pt3dadd( 59.9569, -19.5364, -18.3811, 1.03 ) }
    dend_36 { pt3dadd( 60.8016, -19.6487, -18.394, 1.03 ) }
    dend_36 { pt3dadd( 61.495, -19.771, -18.4141, 0.07 ) }
    dend_36 { pt3dadd( 62.3362, -19.955, -18.4547, 0.07 ) }
    dend_36 { pt3dadd( 63.2144, -20.1801, -18.5123, 1.76 ) }
    dend_36 { pt3dadd( 63.6042, -20.2963, -18.5315, 1.76 ) }
    dend_36 { pt3dadd( 64.6991, -20.6722, -18.5457, 0.07 ) }
    dend_36 { pt3dadd( 65.1327, -20.8359, -18.5403, 0.07 ) }
    dend_36 { pt3dadd( 65.5153, -20.9911, -18.5274, 0.07 ) }
    dend_36 { pt3dadd( 66.2477, -21.2922, -18.4906, 0.95 ) }
    dend_36 { pt3dadd( 66.981, -21.6013, -18.4568, 0.07 ) }
    dend_36 { pt3dadd( 68.1856, -22.1007, -18.4133, 0.07 ) }
    dend_36 { pt3dadd( 69.0493, -22.4425, -18.3926, 1.1 ) }
    dend_36 { pt3dadd( 69.5187, -22.6152, -18.385, 1.1 ) }
    dend_36 { pt3dadd( 70.2051, -22.8588, -18.3892, 0.07 ) }
    dend_36 { pt3dadd( 70.6146, -23.0031, -18.4027, 0.66 ) }
    dend_36 { pt3dadd( 71.2247, -23.2103, -18.4608, 0.07 ) }
    dend_36 { pt3dadd( 71.5891, -23.3345, -18.5056, 0.07 ) }
    dend_36 { pt3dadd( 72.0824, -23.5006, -18.5715, 0.59 ) }
    dend_36 { pt3dadd( 72.5691, -23.6621, -18.6381, 0.15 ) }
    dend_36 { pt3dadd( 73.4648, -23.9564, -18.7565, 1.84 ) }
    dend_36 { pt3dadd( 74.0125, -24.14, -18.8239, 1.84 ) }
    dend_36 { pt3dadd( 75.1786, -24.5605, -18.9742, 0.07 ) }
    dend_36 { pt3dadd( 75.9579, -24.8451, -19.074, 0.07 ) }
    dend_36 { pt3dadd( 76.855, -25.163, -19.1794, 0.07 ) }
    dend_36 { pt3dadd( 77.7399, -25.4748, -19.2664, 1.25 ) }
    dend_36 { pt3dadd( 78.1828, -25.6244, -19.3065, 1.25 ) }
    dend_36 { pt3dadd( 79.2228, -25.9739, -19.3899, 0.07 ) }
    dend_36 { pt3dadd( 79.9087, -26.2019, -19.4364, 0.66 ) }
    dend_36 { pt3dadd( 80.4766, -26.3896, -19.4591, 0.07 ) }
    dend_36 { pt3dadd( 81.9908, -26.8912, -19.497, 0.07 ) }
    dend_36 { pt3dadd( 83.0385, -27.2505, -19.509, 1.98 ) }
    dend_36 { pt3dadd( 83.8084, -27.5079, -19.4944, 1.1 ) }
    dend_36 { pt3dadd( 84.4174, -27.7081, -19.4756, 0.15 ) }
    dend_36 { pt3dadd( 85.4778, -28.0635, -19.4457, 0.15 ) }
    dend_36 { pt3dadd( 85.9575, -28.2251, -19.4349, 1.1 ) }
    dend_36 { pt3dadd( 86.9527, -28.5461, -19.4143, 0.81 ) }
    dend_36 { pt3dadd( 87.756, -28.8033, -19.4176, 0.07 ) }
    dend_36 { pt3dadd( 88.3948, -29.0028, -19.4389, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 88.986, -29.191, -19.4763, 0.07 ) }
    dend_36 { pt3dadd( 89.5012, -29.3665, -19.5249, 0.51 ) }
    dend_36 { pt3dadd( 90.1228, -29.585, -19.6141, 0.07 ) }
    dend_36 { pt3dadd( 90.8203, -29.8402, -19.7424, 0.37 ) }
    dend_36 { pt3dadd( 91.6324, -30.1407, -19.9118, 0.07 ) }
    dend_36 { pt3dadd( 92.4565, -30.4389, -20.0971, 1.76 ) }
    dend_36 { pt3dadd( 92.843, -30.5706, -20.1945, 1.76 ) }
    dend_36 { pt3dadd( 94.0571, -30.9318, -20.5292, 0.07 ) }
    dend_36 { pt3dadd( 94.4244, -31.0265, -20.6344, 0.07 ) }
    dend_36 { pt3dadd( 95.1566, -31.1882, -20.8424, 0.73 ) }
    dend_36 { pt3dadd( 95.9729, -31.3337, -21.1041, 0.07 ) }
    dend_36 { pt3dadd( 96.4088, -31.4011, -21.2502, 0.07 ) }
    dend_36 { pt3dadd( 96.9756, -31.4867, -21.4101, 0.07 ) }
    dend_36 { pt3dadd( 97.5926, -31.5918, -21.5343, 0.07 ) }
    dend_36 { pt3dadd( 98.0355, -31.6787, -21.6033, 1.25 ) }
    dend_36 { pt3dadd( 98.9833, -31.8838, -21.7588, 0.07 ) }
    dend_36 { pt3dadd( 99.4411, -31.983, -21.7953, 0.51 ) }
    dend_36 { pt3dadd( 100.389, -32.1876, -21.8378, 0.07 ) }
    dend_36 { pt3dadd( 101.281, -32.3731, -21.8523, 0.95 ) }
    dend_36 { pt3dadd( 101.869, -32.4789, -21.8272, 1.25 ) }
    dend_36 { pt3dadd( 102.949, -32.6537, -21.7092, 0.07 ) }
    dend_36 { pt3dadd( 104.235, -32.85, -21.5006, 0.81 ) }
    dend_36 { pt3dadd( 105.334, -33.0249, -21.3112, 0.07 ) }
    dend_36 { pt3dadd( 105.777, -33.1016, -21.2295, 0.37 ) }
    dend_36 { pt3dadd( 106.647, -33.2654, -21.024, 0.07 ) }
    dend_36 { pt3dadd( 107.661, -33.4879, -20.7429, 1.47 ) }
    dend_36 { pt3dadd( 108.565, -33.7243, -20.4465, 0.07 ) }
    dend_36 { pt3dadd( 108.997, -33.8497, -20.3124, 0.07 ) }
    dend_36 { pt3dadd( 109.689, -34.0723, -20.0742, 0.51 ) }
    dend_36 { pt3dadd( 110.443, -34.3391, -19.817, 0.07 ) }
    dend_36 { pt3dadd( 111.415, -34.7258, -19.5049, 1.91 ) }
    dend_36 { pt3dadd( 112.588, -35.2531, -19.1214, 0.44 ) }
    dend_36 { pt3dadd( 112.818, -35.3699, -19.0444, 0.07 ) }
    dend_36 { pt3dadd( 113.215, -35.5948, -18.9225, 0.88 ) }
    dend_36 { pt3dadd( 113.589, -35.854, -18.8228, 0.88 ) }
    dend_36 { pt3dadd( 113.939, -36.1387, -18.7502, 0.88 ) }
    dend_36 { pt3dadd( 114.439, -36.5845, -18.6751, 0.07 ) }
    dend_36 { pt3dadd( 115.059, -37.1568, -18.6253, 0.73 ) }
    dend_36 { pt3dadd( 115.638, -37.7016, -18.5826, 0.07 ) }
    dend_36 { pt3dadd( 116.101, -38.144, -18.5537, 0.81 ) }
    dend_36 { pt3dadd( 116.442, -38.4636, -18.5332, 0.07 ) }
    dend_36 { pt3dadd( 117.042, -39.0225, -18.5001, 1.1 ) }
    dend_36 { pt3dadd( 117.602, -39.5462, -18.4763, 0.07 ) }
    dend_36 { pt3dadd( 117.892, -39.8129, -18.4744, 0.07 ) }
    dend_36 { pt3dadd( 118.27, -40.1231, -18.4734, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 45/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 28.137, -7.32496, -14.8997, 1.25 ) }
    dend_35 { pt3dadd( 29.4406, -7.11365, -15.636, 1.25 ) }
    dend_35 { pt3dadd( 30.5197, -7.03679, -16.1997, 0.59 ) }
    dend_35 { pt3dadd( 31.2834, -7.00861, -16.5654, 0.59 ) }
    dend_35 { pt3dadd( 32.288, -6.96724, -17.0166, 1.1 ) }
    dend_35 { pt3dadd( 32.8483, -6.93717, -17.2575, 1.32 ) }
    dend_35 { pt3dadd( 34.7704, -6.80663, -18.0411, 0.44 ) }
    dend_35 { pt3dadd( 36.082, -6.80087, -18.556, 0.44 ) }
    dend_35 { pt3dadd( 36.7978, -6.82697, -18.8289, 0.44 ) }
    dend_35 { pt3dadd( 37.9362, -6.857, -19.2471, 1.25 ) }
    dend_35 { pt3dadd( 38.7387, -6.84371, -19.5645, 1.25 ) }
    dend_35 { pt3dadd( 39.3917, -6.80348, -19.8527, 0.88 ) }
    dend_35 { pt3dadd( 41.0301, -6.63273, -20.6417, 0.22 ) }
    dend_35 { pt3dadd( 41.9262, -6.47346, -21.1031, 1.1 ) }
    dend_35 { pt3dadd( 42.97, -6.20344, -21.6813, 0.73 ) }
    dend_35 { pt3dadd( 44.4559, -5.75784, -22.5222, 1.25 ) }
    dend_35 { pt3dadd( 45.1714, -5.53069, -22.9322, 2.13 ) }
    dend_35 { pt3dadd( 45.8128, -5.31492, -23.296, 2.13 ) }
    dend_35 { pt3dadd( 47.5046, -4.68737, -24.2153, 0.81 ) }
    dend_35 { pt3dadd( 49.1817, -4.16122, -25.1702, 0.29 ) }
    dend_35 { pt3dadd( 49.6433, -4.04355, -25.4538, 0.15 ) }
    dend_35 { pt3dadd( 50.291, -3.9105, -25.867, 0.15 ) }
    dend_35 { pt3dadd( 50.7836, -3.83637, -26.1908, 0.15 ) }
    dend_35 { pt3dadd( 52.4307, -3.59929, -27.2976, 2.06 ) }
    dend_35 { pt3dadd( 54.4757, -3.30662, -28.7, 0.66 ) }
    dend_35 { pt3dadd( 55.9045, -3.06481, -29.7007, 0.44 ) }
    dend_35 { pt3dadd( 57.1831, -2.79648, -30.5966, 1.69 ) }
    dend_35 { pt3dadd( 58.9293, -2.44164, -31.8061, 0.07 ) }
    dend_35 { pt3dadd( 60.049, -2.25615, -32.5633, 1.18 ) }
    dend_35 { pt3dadd( 60.9013, -2.14884, -33.1174, 1.76 ) }
    dend_35 { pt3dadd( 62.0467, -2.00968, -33.8215, 1.76 ) }
    dend_35 { pt3dadd( 63.713, -1.85571, -34.8741, 0.15 ) }
    dend_35 { pt3dadd( 65.026, -1.72734, -35.7868, 0.15 ) }
    dend_35 { pt3dadd( 65.8366, -1.63573, -36.4799, 0.51 ) }
    dend_35 { pt3dadd( 66.6975, -1.50822, -37.3366, 1.4 ) }
    dend_35 { pt3dadd( 67.4254, -1.35712, -38.1022, 1.76 ) }
    dend_35 { pt3dadd( 68.8017, -0.983505, -39.5718, 0.07 ) }
    dend_35 { pt3dadd( 70.2266, -0.515657, -41.124, 2.2 ) }
    dend_35 { pt3dadd( 72.4223, 0.272378, -43.4495, 0.81 ) }
    dend_35 { pt3dadd( 74.0236, 0.814651, -45.0847, 1.47 ) }
    dend_35 { pt3dadd( 75.899, 1.35125, -46.8814, 2.35 ) }
    dend_35 { pt3dadd( 77.847, 1.79829, -48.5375, 0.07 ) }
    dend_35 { pt3dadd( 78.37, 1.89854, -48.9207, 0.07 ) }
    dend_35 { pt3dadd( 79.4684, 2.06374, -49.5997, 1.69 ) }
    dend_35 { pt3dadd( 81.284, 2.23825, -50.4736, 0.15 ) }
    dend_35 { pt3dadd( 82.7544, 2.30208, -51.1148, 0.15 ) }
    dend_35 { pt3dadd( 84.6185, 2.31534, -51.8801, 2.06 ) }
    dend_35 { pt3dadd( 86.1136, 2.29156, -52.4939, 0.95 ) }
    dend_35 { pt3dadd( 87.1919, 2.28478, -52.9538, 0.07 ) }
    dend_35 { pt3dadd( 88.1793, 2.2876, -53.3925, 0.51 ) }
    dend_35 { pt3dadd( 89.6048, 2.29914, -54.0152, 0.07 ) }
    dend_35 { pt3dadd( 90.5591, 2.29508, -54.4453, 0.88 ) }
    dend_35 { pt3dadd( 91.547, 2.26645, -54.9253, 0.07 ) }
    dend_35 { pt3dadd( 93.099, 2.17334, -55.663, 2.2 ) }
    dend_35 { pt3dadd( 94.7863, 2.01913, -56.4886, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 95.9597, 1.91423, -57.105, 0.81 ) }
    dend_35 { pt3dadd( 96.4225, 1.87868, -57.3561, 0.88 ) }
    dend_35 { pt3dadd( 97.5836, 1.85819, -58.1461, 0.07 ) }
    dend_35 { pt3dadd( 98.4238, 1.89759, -58.8151, 0.07 ) }
    dend_35 { pt3dadd( 99.8737, 2.10252, -60.1769, 1.62 ) }
    dend_35 { pt3dadd( 101.173, 2.45556, -61.6535, 0.07 ) }
    dend_35 { pt3dadd( 102.26, 2.90937, -63.0871, 2.06 ) }
    dend_35 { pt3dadd( 104.038, 3.85431, -65.6165, 1.03 ) }
    dend_35 { pt3dadd( 104.536, 4.17377, -66.3887, 1.03 ) }
    dend_35 { pt3dadd( 105.553, 4.89288, -67.9969, 2.2 ) }
    dend_35 { pt3dadd( 107.289, 6.23101, -70.7255, 0.59 ) }
    dend_35 { pt3dadd( 107.986, 6.803, -71.7936, 0.59 ) }
    dend_35 { pt3dadd( 108.758, 7.40268, -72.8648, 1.4 ) }
    dend_35 { pt3dadd( 109.318, 7.78749, -73.5114, 1.4 ) }
    dend_35 { pt3dadd( 110.771, 8.70921, -75.0522, 0.07 ) }
    dend_35 { pt3dadd( 111.701, 9.2446, -75.9359, 1.03 ) }
    dend_35 { pt3dadd( 112.298, 9.55922, -76.4514, 1.47 ) }
    dend_35 { pt3dadd( 114.677, 10.7219, -78.4296, 0.07 ) }
    dend_35 { pt3dadd( 116.47, 11.5973, -79.9379, 1.91 ) }
    dend_35 { pt3dadd( 117.725, 12.1908, -80.9738, 0.59 ) }
    dend_35 { pt3dadd( 118.646, 12.6276, -81.7338, 1.32 ) }
    dend_35 { pt3dadd( 120.313, 13.3869, -83.0182, 0.07 ) }
    dend_35 { pt3dadd( 121.381, 13.8542, -83.7684, 0.95 ) }
    dend_35 { pt3dadd( 122.639, 14.4283, -84.53, 0.07 ) }
    dend_35 { pt3dadd( 123.407, 14.7808, -84.9367, 0.44 ) }
    dend_35 { pt3dadd( 124.184, 15.1351, -85.2962, 0.07 ) }
    dend_35 { pt3dadd( 125.209, 15.6353, -85.8276, 1.25 ) }
    dend_35 { pt3dadd( 126.25, 16.1902, -86.4202, 0.07 ) }
    dend_35 { pt3dadd( 127.498, 16.9211, -87.2176, 1.1 ) }
    dend_35 { pt3dadd( 127.933, 17.179, -87.5047, 1.1 ) }
    dend_35 { pt3dadd( 128.389, 17.4512, -87.8258, 1.4 ) }
    dend_35 { pt3dadd( 130.606, 18.7252, -89.3959, 0.07 ) }
    dend_35 { pt3dadd( 131.434, 19.1816, -90.0012, 1.69 ) }
    dend_35 { pt3dadd( 131.908, 19.4311, -90.3291, 1.69 ) }
    dend_35 { pt3dadd( 133.661, 20.3024, -91.5793, 0.07 ) }
    dend_35 { pt3dadd( 134.016, 20.4674, -91.832, 0.59 ) }
    dend_35 { pt3dadd( 134.727, 20.751, -92.2904, 0.07 ) }
    dend_35 { pt3dadd( 135.848, 21.0457, -92.9151, 1.4 ) }
    dend_35 { pt3dadd( 136.259, 21.1174, -93.1442, 1.4 ) }
    dend_35 { pt3dadd( 138.406, 21.3735, -94.4066, 0.29 ) }
    dend_35 { pt3dadd( 139.058, 21.4068, -94.8056, 0.95 ) }
    dend_35 { pt3dadd( 140.28, 21.4049, -95.5469, 0.07 ) }
    dend_35 { pt3dadd( 141.261, 21.3381, -96.1097, 1.25 ) }
    dend_35 { pt3dadd( 141.766, 21.265, -96.3547, 1.25 ) }
    dend_35 { pt3dadd( 143.074, 20.9723, -96.8966, 0.07 ) }
    dend_35 { pt3dadd( 143.698, 20.7764, -97.0917, 0.07 ) }
    dend_35 { pt3dadd( 144.067, 20.6373, -97.2123, 0.07 ) }
    dend_35 { pt3dadd( 144.843, 20.2777, -97.4562, 0.07 ) }
    dend_35 { pt3dadd( 145.767, 19.8347, -97.7462, 1.32 ) }
    dend_35 { pt3dadd( 146.098, 19.6799, -97.8626, 1.32 ) }
    dend_35 { pt3dadd( 147.121, 19.2952, -98.3201, 0.07 ) }
    dend_35 { pt3dadd( 147.804, 19.1334, -98.7427, 0.07 ) }
    dend_35 { pt3dadd( 148.726, 19.0881, -99.5686, 0.07 ) }
    dend_35 { pt3dadd( 149.354, 19.2105, -100.337, 0.07 ) }
    dend_35 { pt3dadd( 150.006, 19.4396, -101.302, 1.47 ) }
    dend_35 { pt3dadd( 151.162, 19.9009, -103.027, 1.69 ) }
    dend_35 { pt3dadd( 151.965, 20.2494, -104.223, 1.69 ) }
    dend_35 { pt3dadd( 153.309, 20.8438, -106.085, 0.88 ) }
    dend_35 { pt3dadd( 154.362, 21.3155, -107.53, 0.51 ) }
    dend_35 { pt3dadd( 155.396, 21.7065, -108.79, 0.07 ) }
    dend_35 { pt3dadd( 156.565, 22.1078, -110.117, 1.47 ) }
    dend_35 { pt3dadd( 157.12, 22.2791, -110.716, 1.47 ) }
    dend_35 { pt3dadd( 158.128, 22.5884, -111.694, 0.07 ) }
    dend_35 { pt3dadd( 160.795, 23.65, -114.414, 0.95 ) }
    dend_35 { pt3dadd( 161.634, 24.1034, -115.327, 0.73 ) }
    dend_35 { pt3dadd( 162.56, 24.7999, -116.444, 0.07 ) }
    dend_35 { pt3dadd( 163.623, 25.8511, -117.865, 0.07 ) }
    dend_35 { pt3dadd( 164.356, 26.7802, -118.918, 2.35 ) }
    dend_35 { pt3dadd( 165.648, 28.9794, -121.133, 0.22 ) }
    dend_35 { pt3dadd( 166.051, 29.9199, -121.918, 1.47 ) }
    dend_35 { pt3dadd( 166.413, 31.1857, -122.955, 0.15 ) }
    dend_35 { pt3dadd( 166.601, 32.3167, -123.928, 0.15 ) }
    dend_35 { pt3dadd( 166.65, 33.5347, -124.986, 1.32 ) }
    dend_35 { pt3dadd( 166.564, 35.5604, -126.975, 0.07 ) }
    dend_35 { pt3dadd( 166.499, 36.4722, -127.931, 0.15 ) }
    dend_35 { pt3dadd( 166.367, 37.7379, -129.366, 0.95 ) }
    dend_35 { pt3dadd( 166.167, 39.6898, -131.736, 0.15 ) }
    dend_35 { pt3dadd( 166.114, 40.5174, -132.748, 1.4 ) }
    dend_35 { pt3dadd( 166.088, 42.9735, -135.82, 0.81 ) }
    dend_35 { pt3dadd( 166.169, 43.9733, -137.077, 1.18 ) }
    dend_35 { pt3dadd( 166.309, 44.6455, -138.07, 1.25 ) }
    dend_35 { pt3dadd( 166.893, 46.2389, -140.691, 0.81 ) }
    dend_35 { pt3dadd( 167.448, 47.267, -142.592, 0.51 ) }
    dend_35 { pt3dadd( 167.863, 47.8642, -143.824, 1.1 ) }
    dend_35 { pt3dadd( 168.187, 48.2398, -144.636, 1.1 ) }
    dend_35 { pt3dadd( 170.054, 49.8874, -148.562, 0.81 ) }
    dend_35 { pt3dadd( 170.709, 50.3191, -149.671, 1.03 ) }
    dend_35 { pt3dadd( 171.574, 50.761, -150.873, 0.44 ) }
    dend_35 { pt3dadd( 172.211, 51.0695, -151.685, 0.29 ) }
    dend_35 { pt3dadd( 173.159, 51.6153, -152.758, 0.95 ) }
    dend_35 { pt3dadd( 174.098, 52.193, -153.73, 0.07 ) }
    dend_35 { pt3dadd( 174.863, 52.6634, -154.282, 0.51 ) }
    dend_35 { pt3dadd( 176.344, 53.5002, -155.302, 0.07 ) }
    dend_35 { pt3dadd( 177.207, 53.9111, -155.88, 0.59 ) }
    dend_35 { pt3dadd( 177.956, 54.2178, -156.403, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 95/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 11.679, -16.8412, -11.0435, 0.81 ) }
    dend_33 { pt3dadd( 12.0897, -18.3128, -11.1571, 0.81 ) }
    dend_33 { pt3dadd( 12.2498, -19.2461, -11.2595, 0.37 ) }
    dend_33 { pt3dadd( 12.3519, -20.2618, -11.3975, 1.18 ) }
    dend_33 { pt3dadd( 12.3836, -21.0885, -11.5456, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_33 { pt3dadd( 12.3608, -22.3835, -11.8161, 1.25 ) }
    dend_33 { pt3dadd( 12.2878, -23.6298, -12.1081, 0.59 ) }
    dend_33 { pt3dadd( 12.145, -24.4097, -12.3294, 0.88 ) }
    dend_33 { pt3dadd( 11.9579, -25.1397, -12.5438, 0.66 ) }
    dend_33 { pt3dadd( 11.7337, -25.9007, -12.7426, 0.88 ) }
    dend_33 { pt3dadd( 11.5376, -26.5044, -12.8727, 0.88 ) }
    dend_33 { pt3dadd( 11.1475, -27.7142, -13.0914, 0.29 ) }
    dend_33 { pt3dadd( 10.7296, -29.1049, -13.2807, 1.1 ) }
    dend_33 { pt3dadd( 10.4101, -30.1274, -13.3732, 1.32 ) }
    dend_33 { pt3dadd( 10.0596, -31.1898, -13.4271, 1.84 ) }
    dend_33 { pt3dadd( 9.73327, -32.145, -13.4449, 1.69 ) }
    dend_33 { pt3dadd( 9.49661, -32.7665, -13.4529, 1.62 ) }
    dend_33 { pt3dadd( 8.98896, -33.9065, -13.4753, 0.66 ) }
    dend_33 { pt3dadd( 8.49681, -34.9316, -13.5323, 0.51 ) }
    dend_33 { pt3dadd( 8.18543, -35.549, -13.5935, 0.51 ) }
    dend_33 { pt3dadd( 7.81841, -36.2462, -13.7084, 0.51 ) }
    dend_33 { pt3dadd( 7.39806, -37.0392, -13.892, 0.59 ) }
    dend_33 { pt3dadd( 6.90813, -37.9347, -14.1588, 1.47 ) }
    dend_33 { pt3dadd( 6.49008, -38.7137, -14.4481, 1.84 ) }
    dend_33 { pt3dadd( 5.97461, -39.7007, -14.8586, 1.84 ) }
    dend_33 { pt3dadd( 5.48735, -40.6509, -15.2876, 1.25 ) }
    dend_33 { pt3dadd( 4.8546, -41.9356, -15.8819, 0.81 ) }
    dend_33 { pt3dadd( 4.49147, -42.7386, -16.247, 0.81 ) }
    dend_33 { pt3dadd( 4.19456, -43.4843, -16.5644, 0.81 ) }
    dend_33 { pt3dadd( 3.74876, -44.7946, -17.0784, 0.73 ) }
    dend_33 { pt3dadd( 3.44452, -45.9308, -17.4687, 1.1 ) }
    dend_33 { pt3dadd( 3.31672, -46.5492, -17.64, 2.42 ) }
    dend_33 { pt3dadd( 3.19329, -47.3243, -17.817, 2.42 ) }
    dend_33 { pt3dadd( 2.91517, -49.4288, -18.2224, 0.44 ) }
    dend_33 { pt3dadd( 2.83287, -50.1033, -18.3303, 0.29 ) }
    dend_33 { pt3dadd( 2.70692, -51.1815, -18.485, 0.51 ) }
    dend_33 { pt3dadd( 2.59409, -52.04, -18.6012, 1.25 ) }
    dend_33 { pt3dadd( 2.52713, -52.5812, -18.6795, 1.32 ) }
    dend_33 { pt3dadd( 2.38671, -53.8585, -18.8723, 0.37 ) }
    dend_33 { pt3dadd( 2.29024, -54.6734, -18.9905, 0.37 ) }
    dend_33 { pt3dadd( 2.09723, -56.3007, -19.2211, 2.28 ) }
    dend_33 { pt3dadd( 1.96777, -57.3345, -19.3821, 2.64 ) }
    dend_33 { pt3dadd( 1.73103, -59.3903, -19.7046, 0.51 ) }
    dend_33 { pt3dadd( 1.64994, -60.267, -19.8408, 0.07 ) }
    dend_33 { pt3dadd( 1.55453, -61.6122, -20.0652, 0.07 ) }
    dend_33 { pt3dadd( 1.48752, -62.847, -20.2902, 1.62 ) }
    dend_33 { pt3dadd( 1.42261, -64.3917, -20.5985, 0.66 ) }
    dend_33 { pt3dadd( 1.37944, -65.4085, -20.8165, 0.29 ) }
    dend_33 { pt3dadd( 1.32596, -66.423, -21.0575, 0.29 ) }
    dend_33 { pt3dadd( 1.29635, -67.3638, -21.3085, 1.18 ) }
    dend_33 { pt3dadd( 1.29136, -68.6485, -21.6944, 1.4 ) }
    dend_33 { pt3dadd( 1.30332, -69.3402, -21.9312, 1.1 ) }
    dend_33 { pt3dadd( 1.33923, -70.3758, -22.3054, 0.73 ) }
    dend_33 { pt3dadd( 1.35522, -71.5138, -22.7467, 1.47 ) }
    dend_33 { pt3dadd( 1.35492, -72.3602, -23.0759, 1.47 ) }
    dend_33 { pt3dadd( 1.33797, -73.5384, -23.5087, 0.95 ) }
    dend_33 { pt3dadd( 1.30432, -74.4325, -23.8191, 0.59 ) }
    dend_33 { pt3dadd( 1.26941, -74.9438, -23.9765, 0.37 ) }
    dend_33 { pt3dadd( 1.14587, -76.2999, -24.349, 1.98 ) }
    dend_33 { pt3dadd( 1.07506, -77.0101, -24.5106, 1.98 ) }
    dend_33 { pt3dadd( 0.910016, -78.5282, -24.793, 0.44 ) }
    dend_33 { pt3dadd( 0.802495, -79.5269, -24.9474, 0.29 ) }
    dend_33 { pt3dadd( 0.686998, -80.5692, -25.0797, 0.29 ) }
    dend_33 { pt3dadd( 0.622845, -81.217, -25.1744, 0.29 ) }
    dend_33 { pt3dadd( 0.532724, -81.9568, -25.2833, 0.29 ) }
    dend_33 { pt3dadd( 0.340168, -83.2881, -25.4841, 2.2 ) }
    dend_33 { pt3dadd( 0.245076, -83.7928, -25.558, 2.42 ) }
    dend_33 { pt3dadd( 0.0612454, -84.5539, -25.6767, 2.42 ) }
    dend_33 { pt3dadd( -0.223619, -85.4979, -25.8009, 1.62 ) }
    dend_33 { pt3dadd( -1.02759, -87.5569, -25.9496, 0.15 ) }
    dend_33 { pt3dadd( -1.27736, -88.072, -25.9457, 1.18 ) }
    dend_33 { pt3dadd( -1.72724, -88.8776, -25.8774, 0.37 ) }
    dend_33 { pt3dadd( -1.94263, -89.2702, -25.8294, 0.37 ) }
    dend_33 { pt3dadd( -2.42988, -90.2414, -25.6796, 0.59 ) }
    dend_33 { pt3dadd( -2.89436, -91.3507, -25.4906, 0.07 ) }
    dend_33 { pt3dadd( -3.29282, -92.6638, -25.2901, 1.91 ) }
    dend_33 { pt3dadd( -3.43887, -93.4508, -25.2103, 2.2 ) }
    dend_33 { pt3dadd( -3.52925, -94.9176, -25.152, 0.07 ) }
    dend_33 { pt3dadd( -3.48036, -96.0722, -25.1518, 0.07 ) }
    dend_33 { pt3dadd( -3.34444, -96.9949, -25.2003, 1.25 ) }
    dend_33 { pt3dadd( -3.16057, -97.7616, -25.2806, 1.76 ) }
    dend_33 { pt3dadd( -2.69546, -99.2373, -25.4903, 0.15 ) }
    dend_33 { pt3dadd( -2.22612, -100.478, -25.6838, 0.22 ) }
    dend_33 { pt3dadd( -1.94552, -101.162, -25.8252, 0.37 ) }
    dend_33 { pt3dadd( -1.61253, -101.957, -26.0362, 0.37 ) }
    dend_33 { pt3dadd( -1.21839, -102.936, -26.3287, 0.07 ) }
    dend_33 { pt3dadd( -0.916259, -103.752, -26.5922, 0.95 ) }
    dend_33 { pt3dadd( -0.573359, -104.733, -26.925, 1.84 ) }
    dend_33 { pt3dadd( -0.261321, -105.818, -27.3048, 1.54 ) }
    dend_33 { pt3dadd( 0.0825504, -107.285, -27.828, 0.15 ) }
    dend_33 { pt3dadd( 0.200701, -107.827, -28.0169, 0.15 ) }
    dend_33 { pt3dadd( 0.363087, -108.647, -28.2781, 0.88 ) }
    dend_33 { pt3dadd( 0.440908, -109.144, -28.4281, 0.88 ) }
    dend_33 { pt3dadd( 0.526884, -109.921, -28.6381, 0.07 ) }
    dend_33 { pt3dadd( 0.563283, -110.349, -28.7365, 0.07 ) }
    dend_33 { pt3dadd( 0.609046, -110.928, -28.8729, 0.66 ) }
    dend_33 { pt3dadd( 0.624068, -111.221, -28.9644, 0.66 ) }
    dend_33 { pt3dadd( 0.628871, -111.954, -29.2231, 0.22 ) }
    dend_33 { pt3dadd( 0.613548, -112.497, -29.4247, 0.44 ) }
    dend_33 { pt3dadd( 0.545737, -113.742, -29.8768, 2.13 ) }
    dend_33 { pt3dadd( 0.455773, -114.841, -30.2846, 1.69 ) }
    dend_33 { pt3dadd( 0.268029, -116.242, -30.7977, 0.07 ) }
    dend_33 { pt3dadd( 0.169036, -116.772, -30.9831, 0.07 ) }
    dend_33 { pt3dadd( -0.00450063, -117.557, -31.233, 0.44 ) }
    dend_33 { pt3dadd( -0.214068, -118.45, -31.4945, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_33 { pt3dadd( -0.425918, -119.268, -31.6879, 0.07 ) }
    dend_33 { pt3dadd( -0.845879, -120.738, -31.9707, 1.76 ) }
    dend_33 { pt3dadd( -1.08497, -121.622, -32.0934, 1.25 ) }
    dend_33 { pt3dadd( -1.52539, -123.344, -32.3056, 0.22 ) }
    dend_33 { pt3dadd( -1.70116, -124.041, -32.3761, 0.22 ) }
    dend_33 { pt3dadd( -1.98697, -125.17, -32.4698, 1.62 ) }
    dend_33 { pt3dadd( -2.18911, -125.923, -32.5098, 1.62 ) }
    dend_33 { pt3dadd( -2.29402, -126.304, -32.5335, 1.62 ) }
    dend_33 { pt3dadd( -2.80607, -128.019, -32.6703, 0.29 ) }
    dend_33 { pt3dadd( -3.04813, -128.724, -32.7428, 0.29 ) }
    dend_33 { pt3dadd( -3.39283, -129.634, -32.8624, 1.62 ) }
    dend_33 { pt3dadd( -3.91482, -130.827, -33.0709, 1.03 ) }
    dend_33 { pt3dadd( -4.45302, -131.891, -33.2774, 0.07 ) }
    dend_33 { pt3dadd( -4.79535, -132.475, -33.3973, 0.59 ) }
    dend_33 { pt3dadd( -5.31299, -133.206, -33.5548, 0.07 ) }
    dend_33 { pt3dadd( -5.57758, -133.529, -33.6318, 0.07 ) }
    dend_33 { pt3dadd( -6.23176, -134.246, -33.8064, 1.1 ) }
    dend_33 { pt3dadd( -6.79401, -134.848, -33.947, 0.07 ) }
    dend_33 { pt3dadd( -7.19022, -135.282, -34.0271, 0.07 ) }
    dend_33 { pt3dadd( -7.62098, -135.814, -34.1208, 1.03 ) }
    dend_33 { pt3dadd( -7.89594, -136.206, -34.2046, 1.32 ) }
    dend_33 { pt3dadd( -8.24943, -136.817, -34.3531, 1.32 ) }
    dend_33 { pt3dadd( -8.81621, -138.03, -34.6552, 0.15 ) }
    dend_33 { pt3dadd( -9.01627, -138.515, -34.7798, 0.15 ) }
    dend_33 { pt3dadd( -9.39886, -139.502, -35.0212, 1.18 ) }
    dend_33 { pt3dadd( -9.83337, -140.679, -35.3024, 0.07 ) }
    dend_33 { pt3dadd( -10.1906, -141.665, -35.5286, 1.4 ) }
    dend_33 { pt3dadd( -10.4197, -142.282, -35.6485, 1.54 ) }
    dend_33 { pt3dadd( -11.0341, -143.925, -35.8922, 0.15 ) }
    dend_33 { pt3dadd( -11.435, -145.003, -36.0128, 0.15 ) }
    dend_33 { pt3dadd( -11.7177, -145.818, -36.0667, 1.69 ) }
    dend_33 { pt3dadd( -11.8365, -146.165, -36.0724, 1.76 ) }
    dend_33 { pt3dadd( -12.2986, -147.494, -36.0919, 0.07 ) }
    dend_33 { pt3dadd( -12.646, -148.466, -36.1087, 0.07 ) }
    dend_33 { pt3dadd( -12.9743, -149.376, -36.1351, 1.76 ) }
    dend_33 { pt3dadd( -13.2552, -150.111, -36.1927, 1.76 ) }
    dend_33 { pt3dadd( -13.6167, -150.964, -36.3055, 2.13 ) }
    dend_33 { pt3dadd( -14.2465, -152.318, -36.5729, 0.07 ) }
    dend_33 { pt3dadd( -14.6571, -153.117, -36.7751, 0.73 ) }
    dend_33 { pt3dadd( -15.0402, -153.884, -36.983, 0.73 ) }
    dend_33 { pt3dadd( -15.5555, -155.044, -37.2801, 0.07 ) }
    dend_33 { pt3dadd( -15.9206, -155.985, -37.5027, 0.07 ) }
    dend_33 { pt3dadd( -16.2794, -157.115, -37.748, 1.76 ) }
    dend_33 { pt3dadd( -16.5883, -158.306, -37.9709, 1.4 ) }
    dend_33 { pt3dadd( -16.916, -159.858, -38.2167, 0.22 ) }
    dend_33 { pt3dadd( -17.2216, -161.713, -38.4412, 0.22 ) }
    dend_33 { pt3dadd( -17.3591, -162.867, -38.5385, 1.18 ) }
    dend_33 { pt3dadd( -17.3902, -163.227, -38.5615, 1.47 ) }
    dend_33 { pt3dadd( -17.4482, -164.173, -38.6103, 1.18 ) }
    dend_33 { pt3dadd( -17.5179, -165.619, -38.682, 0.22 ) }
    dend_33 { pt3dadd( -17.5857, -166.414, -38.713, 0.88 ) }
    dend_33 { pt3dadd( -17.6596, -167.007, -38.7458, 0.07 ) }
    dend_33 { pt3dadd( -17.6848, -167.16, -38.7555, 0.07 ) }
    dend_33 { pt3dadd( -17.7694, -167.585, -38.7887, 0.07 ) }
    dend_33 { pt3dadd( -18.0146, -168.739, -38.8891, 1.91 ) }
    dend_33 { pt3dadd( -18.1308, -169.271, -38.9604, 2.06 ) }
    dend_33 { pt3dadd( -18.4915, -170.591, -39.1792, 0.07 ) }
    dend_33 { pt3dadd( -18.6826, -171.175, -39.2888, 0.51 ) }
    dend_33 { pt3dadd( -18.9351, -171.892, -39.4308, 0.07 ) }
    dend_33 { pt3dadd( -19.3178, -172.896, -39.6302, 0.44 ) }
    dend_33 { pt3dadd( -19.7715, -173.992, -39.8085, 0.07 ) }
    dend_33 { pt3dadd( -20.1782, -174.912, -39.9213, 0.44 ) }
    dend_33 { pt3dadd( -20.7116, -176.045, -40.0159, 1.98 ) }
    dend_33 { pt3dadd( -20.9098, -176.441, -40.0407, 1.98 ) }
    dend_33 { pt3dadd( -21.4888, -177.555, -40.0785, 1.47 ) }
    dend_33 { pt3dadd( -21.9912, -178.499, -40.1072, 0.07 ) }
    dend_33 { pt3dadd( -22.4404, -179.385, -40.1209, 0.07 ) }
    dend_33 { pt3dadd( -22.8227, -180.196, -40.1497, 0.22 ) }
    dend_33 { pt3dadd( -23.2162, -181.037, -40.1924, 1.69 ) }
    dend_33 { pt3dadd( -23.4043, -181.443, -40.2248, 1.69 ) }
    dend_33 { pt3dadd( -24.2113, -183.272, -40.4135, 0.15 ) }
    dend_33 { pt3dadd( -24.3229, -183.544, -40.446, 0.07 ) }
    dend_33 { pt3dadd( -24.6529, -184.331, -40.5074, 0.59 ) }
    dend_33 { pt3dadd( -25.0986, -185.374, -40.5273, 0.07 ) }
    dend_33 { pt3dadd( -25.6831, -186.68, -40.4988, 1.76 ) }
    dend_33 { pt3dadd( -26.3062, -187.977, -40.461, 0.07 ) }
    dend_33 { pt3dadd( -26.6179, -188.561, -40.4348, 0.07 ) }
    dend_33 { pt3dadd( -27.3144, -189.719, -40.3568, 0.07 ) }
    dend_33 { pt3dadd( -27.9093, -190.587, -40.277, 1.18 ) }
    dend_33 { pt3dadd( -28.4154, -191.224, -40.2136, 2.13 ) }
    dend_33 { pt3dadd( -29.0083, -191.877, -40.1451, 1.54 ) }
    dend_33 { pt3dadd( -29.8891, -192.728, -40.0709, 0.07 ) }
    dend_33 { pt3dadd( -30.5881, -193.336, -40.0589, 1.1 ) }
    dend_33 { pt3dadd( -31.212, -193.846, -40.0921, 1.25 ) }
    dend_33 { pt3dadd( -32.2849, -194.623, -40.1448, 0.07 ) }
    dend_33 { pt3dadd( -32.8232, -194.977, -40.1545, 0.07 ) }
    dend_33 { pt3dadd( -33.2055, -195.214, -40.1504, 0.37 ) }
    dend_33 { pt3dadd( -34.1198, -195.789, -40.125, 0.07 ) }
    dend_33 { pt3dadd( -34.8741, -196.288, -40.1233, 1.69 ) }
    dend_33 { pt3dadd( -36.0418, -197.1, -40.1469, 0.07 ) }
    dend_33 { pt3dadd( -36.9129, -197.728, -40.1732, 0.07 ) }
    dend_33 { pt3dadd( -38.0105, -198.579, -40.2376, 1.47 ) }
    dend_33 { pt3dadd( -38.7621, -199.222, -40.3146, 1.47 ) }
    dend_33 { pt3dadd( -40.0292, -200.439, -40.4898, 0.15 ) }
    dend_33 { pt3dadd( -40.7857, -201.243, -40.6345, 0.07 ) }
    dend_33 { pt3dadd( -41.5732, -202.15, -40.8155, 2.13 ) }
    dend_33 { pt3dadd( -42.2634, -202.98, -40.9813, 1.18 ) }
    dend_33 { pt3dadd( -43.1437, -204.008, -41.2041, 0.22 ) }
    dend_33 { pt3dadd( -43.6826, -204.613, -41.3324, 0.22 ) }
    dend_33 { pt3dadd( -44.8029, -205.862, -41.5338, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_33 { pt3dadd( -45.6326, -206.773, -41.679, 1.4 ) }
    dend_33 { pt3dadd( -45.9874, -207.159, -41.7466, 1.25 ) }
    dend_33 { pt3dadd( -47.1297, -208.388, -41.9956, 0.15 ) }
    dend_33 { pt3dadd( -47.5632, -208.854, -42.1015, 0.51 ) }
    dend_33 { pt3dadd( -48.1972, -209.546, -42.2972, 0.07 ) }
    dend_33 { pt3dadd( -48.7147, -210.161, -42.5071, 0.07 ) }
    dend_33 { pt3dadd( -49.2923, -210.927, -42.7832, 1.54 ) }
    dend_33 { pt3dadd( -50.1144, -212.087, -43.222, 0.07 ) }
    dend_33 { pt3dadd( -50.4608, -212.605, -43.4138, 0.51 ) }
    dend_33 { pt3dadd( -50.9461, -213.357, -43.6892, 0.07 ) }
    dend_33 { pt3dadd( -51.5034, -214.206, -43.9774, 1.47 ) }
    dend_33 { pt3dadd( -51.8029, -214.656, -44.1123, 1.54 ) }
    dend_33 { pt3dadd( -52.5764, -215.787, -44.4345, 0.07 ) }
    dend_33 { pt3dadd( -53.0709, -216.506, -44.604, 0.07 ) }
    dend_33 { pt3dadd( -53.4124, -217.0, -44.7165, 1.47 ) }
    dend_33 { pt3dadd( -54.0749, -217.964, -44.9099, 1.62 ) }
    dend_33 { pt3dadd( -54.9166, -219.145, -45.1151, 0.15 ) }
    dend_33 { pt3dadd( -55.3817, -219.777, -45.2088, 0.15 ) }
    dend_33 { pt3dadd( -56.2113, -220.893, -45.345, 0.59 ) }
    dend_33 { pt3dadd( -56.7361, -221.591, -45.4375, 0.07 ) }
    dend_33 { pt3dadd( -57.284, -222.322, -45.5206, 0.07 ) }
    dend_33 { pt3dadd( -58.0434, -223.41, -45.607, 2.13 ) }
    dend_33 { pt3dadd( -58.786, -224.544, -45.6602, 0.15 ) }
    dend_33 { pt3dadd( -59.3643, -225.52, -45.6914, 1.1 ) }
    dend_33 { pt3dadd( -59.8204, -226.418, -45.7189, 1.69 ) }
    dend_33 { pt3dadd( -60.2728, -227.565, -45.7438, 0.07 ) }
    dend_33 { pt3dadd( -60.4423, -228.27, -45.7437, 0.44 ) }
    dend_33 { pt3dadd( -60.4687, -229.021, -45.7273, 0.07 ) }
    dend_33 { pt3dadd( -60.4013, -229.609, -45.7026, 0.07 ) }
    dend_33 { pt3dadd( -60.155, -230.765, -45.6327, 1.25 ) }
    dend_33 { pt3dadd( -60.0172, -231.271, -45.5995, 1.25 ) }
    dend_33 { pt3dadd( -59.6112, -232.681, -45.5051, 0.07 ) }
    dend_33 { pt3dadd( -59.2445, -234.066, -45.399, 0.07 ) }
    dend_33 { pt3dadd( -59.153, -234.444, -45.3598, 0.81 ) }
    dend_33 { pt3dadd( -59.0283, -235.077, -45.2597, 1.1 ) }
    dend_33 { pt3dadd( -58.9158, -235.851, -45.0865, 1.4 ) }
    dend_33 { pt3dadd( -58.7889, -237.504, -44.6785, 0.15 ) }
    dend_33 { pt3dadd( -58.7648, -238.492, -44.4225, 0.15 ) }
    dend_33 { pt3dadd( -58.8038, -239.635, -44.0291, 1.18 ) }
    dend_33 { pt3dadd( -58.8956, -240.974, -43.5007, 0.15 ) }
    dend_33 { pt3dadd( -59.0107, -241.998, -43.053, 1.62 ) }
    dend_33 { pt3dadd( -59.1418, -242.851, -42.6548, 1.98 ) }
    dend_33 { pt3dadd( -59.2159, -243.179, -42.4966, 1.98 ) }
    dend_33 { pt3dadd( -59.7822, -245.072, -41.5619, 0.15 ) }
    dend_33 { pt3dadd( -60.0102, -245.689, -41.2671, 0.15 ) }
    dend_33 { pt3dadd( -60.3415, -246.474, -40.9027, 0.95 ) }
    dend_33 { pt3dadd( -60.593, -247.017, -40.6188, 0.95 ) }
    dend_33 { pt3dadd( -61.2248, -248.314, -39.8889, 0.07 ) }
    dend_33 { pt3dadd( -61.8146, -249.451, -39.2565, 1.54 ) }
    dend_33 { pt3dadd( -62.0328, -249.84, -39.042, 1.54 ) }
    dend_33 { pt3dadd( -62.7762, -251.051, -38.3253, 0.07 ) }
    dend_33 { pt3dadd( -63.6037, -252.292, -37.5792, 1.25 ) }
    dend_33 { pt3dadd( -63.9555, -252.782, -37.2961, 1.25 ) }
    dend_33 { pt3dadd( -64.5811, -253.622, -36.8925, 0.73 ) }
    dend_33 { pt3dadd( -65.0762, -254.291, -36.6574, 0.07 ) }
    dend_33 { pt3dadd( -65.5422, -254.929, -36.4954, 0.07 ) }
    dend_33 { pt3dadd( -66.1823, -255.772, -36.3741, 0.15 ) }
    dend_33 { pt3dadd( -66.9772, -256.816, -36.3181, 1.84 ) }
    dend_33 { pt3dadd( -67.9425, -258.1, -36.2803, 0.15 ) }
    dend_33 { pt3dadd( -68.6959, -259.14, -36.217, 0.15 ) }
    dend_33 { pt3dadd( -69.0168, -259.605, -36.1811, 1.76 ) }
    dend_33 { pt3dadd( -69.4301, -260.231, -36.1161, 1.54 ) }
    dend_33 { pt3dadd( -70.3453, -261.607, -35.936, 0.22 ) }
    dend_33 { pt3dadd( -71.1097, -262.729, -35.7518, 0.22 ) }
    dend_33 { pt3dadd( -71.9134, -263.934, -35.5026, 1.25 ) }
    dend_33 { pt3dadd( -72.1487, -264.278, -35.4246, 1.32 ) }
    dend_33 { pt3dadd( -72.5124, -264.783, -35.3131, 1.1 ) }
    dend_33 { pt3dadd( -73.1004, -265.584, -35.1482, 0.07 ) }
    dend_33 { pt3dadd( -73.5465, -266.167, -35.035, 0.07 ) }
    dend_33 { pt3dadd( -74.2737, -267.127, -34.8944, 0.07 ) }
    dend_33 { pt3dadd( -74.7345, -267.735, -34.824, 1.1 ) }
    dend_33 { pt3dadd( -75.4177, -268.647, -34.7004, 0.07 ) }
    dend_33 { pt3dadd( -75.8669, -269.253, -34.6005, 1.62 ) }
    dend_33 { pt3dadd( -76.78, -270.496, -34.3691, 0.15 ) }
    dend_33 { pt3dadd( -77.353, -271.292, -34.2118, 0.15 ) }
    dend_33 { pt3dadd( -77.9271, -272.084, -34.0427, 1.91 ) }
    dend_33 { pt3dadd( -78.3085, -272.655, -33.9172, 1.91 ) }
    dend_33 { pt3dadd( -78.9057, -273.617, -33.6996, 0.07 ) }
    dend_33 { pt3dadd( -79.0803, -273.929, -33.6287, 0.37 ) }
    dend_33 { pt3dadd( -79.2396, -274.286, -33.5564, 0.07 ) }
    dend_33 { pt3dadd( -79.4912, -275.001, -33.3986, 0.07 ) }
    dend_33 { pt3dadd( -79.6714, -275.633, -33.26, 0.07 ) }
    dend_33 { pt3dadd( -79.8176, -276.116, -33.1531, 1.62 ) }
    dend_33 { pt3dadd( -80.3075, -277.729, -32.8206, 0.15 ) }
    dend_33 { pt3dadd( -80.6282, -278.726, -32.6276, 0.07 ) }
    dend_33 { pt3dadd( -81.0318, -279.89, -32.4151, 1.47 ) }
    dend_33 { pt3dadd( -81.2867, -280.555, -32.3059, 1.03 ) }
    dend_33 { pt3dadd( -81.7902, -281.72, -32.131, 0.15 ) }
    dend_33 { pt3dadd( -82.2375, -282.662, -32.0122, 0.73 ) }
    dend_33 { pt3dadd( -82.7613, -283.635, -31.9231, 0.07 ) }
    dend_33 { pt3dadd( -83.0291, -284.102, -31.8874, 0.29 ) }
    dend_33 { pt3dadd( -83.5914, -285.174, -31.8356, 0.07 ) }
    dend_33 { pt3dadd( -83.8899, -285.809, -31.7917, 1.03 ) }
    dend_33 { pt3dadd( -84.1089, -286.355, -31.7437, 1.03 ) }
    dend_33 { pt3dadd( -84.5037, -287.262, -31.6727, 0.07 ) }
    dend_33 { pt3dadd( -84.9513, -288.233, -31.5828, 0.07 ) }
    dend_33 { pt3dadd( -85.4333, -289.212, -31.4553, 0.07 ) }
    dend_33 { pt3dadd( -85.6641, -289.609, -31.3917, 1.47 ) }
    dend_33 { pt3dadd( -85.9104, -289.965, -31.3071, 1.47 ) }
    dend_33 { pt3dadd( -87.089, -291.322, -30.8454, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_33 { pt3dadd( -87.8421, -292.05, -30.5246, 0.95 ) }
    dend_33 { pt3dadd( -88.5686, -292.643, -30.2088, 0.07 ) }
    dend_33 { pt3dadd( -89.656, -293.421, -29.7522, 0.07 ) }
    dend_33 { pt3dadd( -90.7065, -294.104, -29.3271, 2.06 ) }
    dend_33 { pt3dadd( -92.3581, -295.056, -28.686, 0.15 ) }
    dend_33 { pt3dadd( -93.5109, -295.636, -28.2712, 0.07 ) }
    dend_33 { pt3dadd( -94.5387, -296.109, -27.9661, 1.25 ) }
    dend_33 { pt3dadd( -96.1729, -296.819, -27.5678, 0.15 ) }
    dend_33 { pt3dadd( -97.091, -297.216, -27.3783, 0.15 ) }
    dend_33 { pt3dadd( -98.1765, -297.71, -27.215, 0.29 ) }
    dend_33 { pt3dadd( -99.0813, -298.171, -27.0995, 0.44 ) }
    dend_33 { pt3dadd( -100.3, -298.887, -26.9372, 2.06 ) }
    dend_33 { pt3dadd( -100.869, -299.3, -26.8435, 1.76 ) }
    dend_33 { pt3dadd( -102.027, -300.341, -26.603, 0.07 ) }
    dend_33 { pt3dadd( -102.774, -301.169, -26.4101, 0.51 ) }
    dend_33 { pt3dadd( -103.323, -301.918, -26.2282, 0.07 ) }
    dend_33 { pt3dadd( -103.87, -302.807, -26.0017, 0.07 ) }
    dend_33 { pt3dadd( -104.331, -303.69, -25.7483, 1.03 ) }
    dend_33 { pt3dadd( -104.542, -304.154, -25.5993, 0.66 ) }
    dend_33 { pt3dadd( -104.844, -304.88, -25.3239, 0.07 ) }
    dend_33 { pt3dadd( -104.968, -305.195, -25.1693, 0.07 ) }
    dend_33 { pt3dadd( -105.123, -305.608, -24.9449, 0.51 ) }
    dend_33 { pt3dadd( -105.427, -306.456, -24.4682, 0.07 ) }
    dend_33 { pt3dadd( -105.741, -307.263, -24.0126, 0.88 ) }
    dend_33 { pt3dadd( -106.244, -308.402, -23.3361, 1.69 ) }
    dend_33 { pt3dadd( -106.889, -309.679, -22.553, 0.07 ) }
    dend_33 { pt3dadd( -107.129, -310.059, -22.3026, 0.07 ) }
    dend_33 { pt3dadd( -107.498, -310.562, -21.9665, 0.07 ) }
    dend_33 { pt3dadd( -108.128, -311.278, -21.4789, 0.81 ) }
    dend_33 { pt3dadd( -108.643, -311.791, -21.1223, 1.4 ) }
    dend_33 { pt3dadd( -109.022, -312.117, -20.8973, 1.25 ) }
    dend_33 { pt3dadd( -110.124, -313.039, -20.2816, 0.22 ) }
    dend_33 { pt3dadd( -110.559, -313.454, -19.9881, 0.22 ) }
    dend_33 { pt3dadd( -110.982, -313.959, -19.6128, 0.95 ) }
    dend_33 { pt3dadd( -111.309, -314.462, -19.2464, 0.07 ) }
    dend_33 { pt3dadd( -111.512, -314.806, -18.9901, 0.37 ) }
    dend_33 { pt3dadd( -111.965, -315.564, -18.3962, 0.07 ) }
    dend_33 { pt3dadd( -112.408, -316.309, -17.7851, 0.73 ) }
    dend_33 { pt3dadd( -112.849, -317.026, -17.1115, 0.07 ) }
    dend_33 { pt3dadd( -113.241, -317.664, -16.515, 0.66 ) }
    dend_33 { pt3dadd( -113.664, -318.288, -15.9303, 0.22 ) }
    dend_33 { pt3dadd( -113.98, -318.729, -15.538, 1.1 ) }
    dend_33 { pt3dadd( -114.519, -319.429, -14.9604, 0.07 ) }
    dend_33 { pt3dadd( -115.022, -320.037, -14.5059, 0.07 ) }
    dend_33 { pt3dadd( -115.912, -321.113, -13.7876, 1.62 ) }
    dend_33 { pt3dadd( -116.655, -322.056, -13.2324, 0.07 ) }
    dend_33 { pt3dadd( -116.925, -322.43, -13.0516, 0.07 ) }
    dend_33 { pt3dadd( -117.258, -322.912, -12.8304, 0.59 ) }
    dend_33 { pt3dadd( -117.833, -323.715, -12.5164, 0.07 ) }
    dend_33 { pt3dadd( -118.029, -323.997, -12.4003, 0.07 ) }
    dend_33 { pt3dadd( -118.294, -324.414, -12.2096, 0.07 ) }
    dend_33 { pt3dadd( -118.607, -324.994, -11.9476, 0.73 ) }
    dend_33 { pt3dadd( -119.062, -325.996, -11.4973, 0.07 ) }
    dend_33 { pt3dadd( -119.417, -326.935, -11.0319, 2.35 ) }
    dend_33 { pt3dadd( -119.966, -328.572, -10.0395, 0.07 ) }
    dend_33 { pt3dadd( -120.076, -328.848, -9.80273, 0.07 ) }
    dend_33 { pt3dadd( -120.301, -329.315, -9.24975, 0.44 ) }
    dend_33 { pt3dadd( -120.609, -329.831, -8.48182, 0.07 ) }
    dend_33 { pt3dadd( -121.259, -330.616, -6.91351, 0.66 ) }
    dend_33 { pt3dadd( -121.804, -330.982, -5.63224, 0.66 ) }
    dend_33 { pt3dadd( -122.822, -331.251, -3.62255, 0.07 ) }
    dend_33 { pt3dadd( -123.296, -331.292, -2.83952, 0.07 ) }
    dend_33 { pt3dadd( -123.952, -331.246, -1.91237, 0.07 ) }
    dend_33 { pt3dadd( -124.43, -331.166, -1.33393, 0.37 ) }
    dend_33 { pt3dadd( -126.123, -330.806, 0.442891, 0.07 ) }
    dend_33 { pt3dadd( -126.701, -330.7, 0.996094, 0.07 ) }
    dend_33 { pt3dadd( -127.371, -330.595, 1.60599, 0.95 ) }
    dend_33 { pt3dadd( -128.824, -330.37, 2.95443, 0.07 ) }
    dend_33 { pt3dadd( -129.658, -330.241, 3.75336, 0.81 ) }
    dend_33 { pt3dadd( -130.496, -330.094, 4.5313, 0.37 ) }
    dend_33 { pt3dadd( -130.94, -329.971, 4.9194, 0.07 ) }
    dend_33 { pt3dadd( -131.2, -329.87, 5.18035, 0.29 ) }
    dend_33 { pt3dadd( -131.728, -329.563, 5.73728, 0.07 ) }
    dend_33 { pt3dadd( -132.002, -329.337, 5.99776, 0.88 ) }
    dend_33 { pt3dadd( -132.214, -329.101, 6.19867, 0.88 ) }
    dend_33 { pt3dadd( -132.889, -328.323, 6.67189, 0.07 ) }
    dend_33 { pt3dadd( -133.185, -328.029, 6.80312, 0.07 ) }
    dend_33 { pt3dadd( -133.938, -327.521, 6.9092, 0.15 ) }
    dend_33 { pt3dadd( -134.215, -327.411, 6.88977, 0.44 ) }
    dend_33 { pt3dadd( -134.794, -327.298, 6.78168, 0.07 ) }
    dend_33 { pt3dadd( -136.045, -327.18, 6.50382, 0.07 ) }
    dend_33 { pt3dadd( -136.84, -327.164, 6.29661, 0.81 ) }
    dend_33 { pt3dadd( -138.219, -327.188, 5.90891, 0.07 ) }
    dend_33 { pt3dadd( -138.681, -327.216, 5.7716, 0.29 ) }
    dend_33 { pt3dadd( -139.572, -327.283, 5.49519, 0.07 ) }
    dend_33 { pt3dadd( -141.059, -327.433, 5.01378, 0.07 ) }
    dend_33 { pt3dadd( -141.492, -327.48, 4.89056, 0.73 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 11.679, -16.8412, -11.0435, 0.44 ) }
    dend_32 { pt3dadd( 10.5967, -16.9401, -10.6605, 0.44 ) }
    dend_32 { pt3dadd( 9.83757, -17.0477, -10.4702, 0.44 ) }
    dend_32 { pt3dadd( 9.59985, -17.099, -10.4252, 1.1 ) }
    dend_32 { pt3dadd( 8.90642, -17.2949, -10.351, 1.1 ) }
    dend_32 { pt3dadd( 8.30222, -17.5008, -10.3324, 0.15 ) }
    dend_32 { pt3dadd( 7.76689, -17.7019, -10.3366, 0.88 ) }
    dend_32 { pt3dadd( 7.52717, -17.8151, -10.3706, 0.95 ) }
    dend_32 { pt3dadd( 7.10626, -18.0278, -10.4594, 0.59 ) }
    dend_32 { pt3dadd( 6.35987, -18.4117, -10.6647, 0.22 ) }
    dend_32 { pt3dadd( 5.79388, -18.6917, -10.858, 0.81 ) }
    dend_32 { pt3dadd( 5.60076, -18.7686, -10.9256, 0.88 ) }
    dend_32 { pt3dadd( 4.97612, -18.9632, -11.1786, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_32 { pt3dadd( 4.50298, -19.0746, -11.4094, 0.15 ) }
    dend_32 { pt3dadd( 3.65055, -19.2317, -11.8601, 1.03 ) }
    dend_32 { pt3dadd( 3.19636, -19.3097, -12.1257, 1.32 ) }
    dend_32 { pt3dadd( 2.55253, -19.4132, -12.5369, 1.32 ) }
    dend_32 { pt3dadd( 1.63024, -19.5347, -13.1462, 0.07 ) }
    dend_32 { pt3dadd( 0.690844, -19.6402, -13.7725, 0.88 ) }
    dend_32 { pt3dadd( 0.277455, -19.6876, -14.0344, 0.88 ) }
    dend_32 { pt3dadd( -0.495859, -19.7879, -14.4865, 0.37 ) }
    dend_32 { pt3dadd( -1.10689, -19.8736, -14.8345, 0.37 ) }
    dend_32 { pt3dadd( -1.70404, -19.9574, -15.167, 0.37 ) }
    dend_32 { pt3dadd( -2.218, -20.0047, -15.4068, 1.18 ) }
    dend_32 { pt3dadd( -2.6141, -20.0376, -15.5823, 1.4 ) }
    dend_32 { pt3dadd( -2.8876, -20.0632, -15.7045, 1.32 ) }
    dend_32 { pt3dadd( -3.65783, -20.1586, -16.0663, 0.22 ) }
    dend_32 { pt3dadd( -4.01242, -20.2261, -16.2438, 0.22 ) }
    dend_32 { pt3dadd( -4.6624, -20.3879, -16.5901, 1.18 ) }
    dend_32 { pt3dadd( -5.52254, -20.6391, -17.0889, 0.07 ) }
    dend_32 { pt3dadd( -6.03598, -20.8012, -17.388, 0.66 ) }
    dend_32 { pt3dadd( -6.86206, -21.0783, -17.8546, 0.07 ) }
    dend_32 { pt3dadd( -7.57452, -21.3437, -18.2303, 1.76 ) }
    dend_32 { pt3dadd( -7.96157, -21.4959, -18.4181, 1.54 ) }
    dend_32 { pt3dadd( -9.09789, -21.9579, -18.9144, 0.07 ) }
    dend_32 { pt3dadd( -9.69087, -22.1815, -19.1277, 0.95 ) }
    dend_32 { pt3dadd( -10.2266, -22.3613, -19.2939, 0.95 ) }
    dend_32 { pt3dadd( -10.9437, -22.5707, -19.4869, 0.07 ) }
    dend_32 { pt3dadd( -11.7618, -22.7859, -19.705, 0.07 ) }
    dend_32 { pt3dadd( -12.3914, -22.9451, -19.8757, 0.07 ) }
    dend_32 { pt3dadd( -13.1127, -23.1157, -20.0591, 1.69 ) }
    dend_32 { pt3dadd( -14.1895, -23.3822, -20.3903, 0.07 ) }
    dend_32 { pt3dadd( -15.0063, -23.5981, -20.6721, 0.07 ) }
    dend_32 { pt3dadd( -15.8779, -23.8336, -20.9984, 1.84 ) }
    dend_32 { pt3dadd( -16.4532, -23.9883, -21.2381, 1.4 ) }
    dend_32 { pt3dadd( -17.045, -24.1548, -21.5047, 0.59 ) }
    dend_32 { pt3dadd( -17.8483, -24.4082, -21.9412, 0.07 ) }
    dend_32 { pt3dadd( -18.1616, -24.5118, -22.1296, 0.37 ) }
    dend_32 { pt3dadd( -18.6081, -24.6574, -22.409, 0.07 ) }
    dend_32 { pt3dadd( -19.3293, -24.8572, -22.8224, 1.32 ) }
    dend_32 { pt3dadd( -19.6123, -24.9278, -22.9619, 1.32 ) }
    dend_32 { pt3dadd( -21.1438, -25.2831, -23.616, 0.07 ) }
    dend_32 { pt3dadd( -21.7385, -25.4152, -23.8305, 1.18 ) }
    dend_32 { pt3dadd( -21.9687, -25.4673, -23.9068, 1.18 ) }
    dend_32 { pt3dadd( -23.11, -25.7768, -24.2704, 0.07 ) }
    dend_32 { pt3dadd( -23.8729, -26.0145, -24.4859, 0.88 ) }
    dend_32 { pt3dadd( -24.6589, -26.2613, -24.698, 0.07 ) }
    dend_32 { pt3dadd( -25.5386, -26.5404, -24.9128, 1.47 ) }
    dend_32 { pt3dadd( -25.8872, -26.657, -25.0077, 1.98 ) }
    dend_32 { pt3dadd( -27.1397, -27.1136, -25.4263, 0.15 ) }
    dend_32 { pt3dadd( -27.5899, -27.2922, -25.6083, 0.37 ) }
    dend_32 { pt3dadd( -28.2278, -27.5431, -25.8918, 0.07 ) }
    dend_32 { pt3dadd( -28.7489, -27.7478, -26.1529, 0.81 ) }
    dend_32 { pt3dadd( -29.0339, -27.8571, -26.3094, 1.25 ) }
    dend_32 { pt3dadd( -29.8656, -28.1514, -26.7898, 0.15 ) }
    dend_32 { pt3dadd( -30.7116, -28.4178, -27.3288, 0.15 ) }
    dend_32 { pt3dadd( -31.2006, -28.5772, -27.6637, 0.88 ) }
    dend_32 { pt3dadd( -31.9907, -28.8821, -28.2754, 0.07 ) }
    dend_32 { pt3dadd( -32.3912, -29.0523, -28.6088, 1.25 ) }
    dend_32 { pt3dadd( -32.6999, -29.189, -28.8803, 1.25 ) }
    dend_32 { pt3dadd( -33.608, -29.6057, -29.7511, 0.07 ) }
    dend_32 { pt3dadd( -33.9052, -29.7463, -30.0507, 0.73 ) }
    dend_32 { pt3dadd( -34.7925, -30.1844, -30.9278, 0.07 ) }
    dend_32 { pt3dadd( -35.1498, -30.3612, -31.2682, 0.07 ) }
    dend_32 { pt3dadd( -35.7351, -30.6482, -31.8105, 1.32 ) }
    dend_32 { pt3dadd( -36.8129, -31.1543, -32.7651, 0.29 ) }
    dend_32 { pt3dadd( -37.1409, -31.2804, -33.0259, 0.07 ) }
    dend_32 { pt3dadd( -37.4915, -31.3827, -33.2692, 0.59 ) }
    dend_32 { pt3dadd( -38.1022, -31.5114, -33.6109, 0.07 ) }
    dend_32 { pt3dadd( -38.3724, -31.5601, -33.7444, 0.07 ) }
    dend_32 { pt3dadd( -38.9932, -31.6819, -33.9951, 1.18 ) }
    dend_32 { pt3dadd( -39.8719, -31.8616, -34.3204, 0.15 ) }
    dend_32 { pt3dadd( -40.6705, -32.035, -34.6145, 0.15 ) }
    dend_32 { pt3dadd( -41.2309, -32.1574, -34.8083, 0.66 ) }
    dend_32 { pt3dadd( -41.9393, -32.3229, -35.0378, 0.07 ) }
    dend_32 { pt3dadd( -43.0749, -32.6007, -35.3753, 1.62 ) }
    dend_32 { pt3dadd( -44.6033, -32.9754, -35.7797, 0.07 ) }
    dend_32 { pt3dadd( -45.407, -33.1622, -35.9754, 0.07 ) }
    dend_32 { pt3dadd( -46.1543, -33.3052, -36.1713, 0.07 ) }
    dend_32 { pt3dadd( -46.8033, -33.3956, -36.3432, 0.07 ) }
    dend_32 { pt3dadd( -47.8621, -33.4705, -36.6178, 1.47 ) }
    dend_32 { pt3dadd( -48.3061, -33.4739, -36.7335, 1.47 ) }
    dend_32 { pt3dadd( -49.2063, -33.4565, -37.0636, 0.07 ) }
    dend_32 { pt3dadd( -50.0564, -33.4468, -37.4892, 0.07 ) }
    dend_32 { pt3dadd( -50.8991, -33.4594, -38.0333, 0.07 ) }
    dend_32 { pt3dadd( -51.7048, -33.5012, -38.6731, 0.07 ) }
    dend_32 { pt3dadd( -52.2539, -33.5596, -39.1731, 1.1 ) }
    dend_32 { pt3dadd( -53.6685, -33.7857, -40.5262, 0.44 ) }
    dend_32 { pt3dadd( -54.206, -33.8988, -41.059, 1.32 ) }
    dend_32 { pt3dadd( -55.0919, -34.1266, -41.9297, 1.32 ) }
    dend_32 { pt3dadd( -56.1372, -34.4253, -42.9232, 0.22 ) }
    dend_32 { pt3dadd( -56.7468, -34.6016, -43.4536, 0.22 ) }
    dend_32 { pt3dadd( -57.2983, -34.758, -43.8714, 0.88 ) }
    dend_32 { pt3dadd( -58.1113, -34.9901, -44.39, 0.07 ) }
    dend_32 { pt3dadd( -58.8857, -35.2247, -44.8489, 1.25 ) }
    dend_32 { pt3dadd( -59.8278, -35.5432, -45.3679, 0.07 ) }
    dend_32 { pt3dadd( -60.2391, -35.6896, -45.5797, 0.66 ) }
    dend_32 { pt3dadd( -60.9474, -35.9506, -45.9351, 0.07 ) }
    dend_32 { pt3dadd( -61.629, -36.2167, -46.2774, 0.07 ) }
    dend_32 { pt3dadd( -62.2621, -36.4732, -46.5867, 1.47 ) }
    dend_32 { pt3dadd( -63.428, -36.9606, -47.1614, 0.07 ) }
    dend_32 { pt3dadd( -63.7872, -37.1146, -47.3424, 0.07 ) }
    dend_32 { pt3dadd( -64.2918, -37.3269, -47.5758, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_32 { pt3dadd( -64.7029, -37.4855, -47.7449, 0.07 ) }
    dend_32 { pt3dadd( -64.8634, -37.5401, -47.808, 0.07 ) }
    dend_32 { pt3dadd( -65.38, -37.6967, -48.0174, 1.03 ) }
    dend_32 { pt3dadd( -66.0596, -37.8989, -48.2801, 0.07 ) }
    dend_32 { pt3dadd( -66.5942, -38.0675, -48.4962, 0.07 ) }
    dend_32 { pt3dadd( -67.1531, -38.2477, -48.6931, 0.07 ) }
    dend_32 { pt3dadd( -67.7827, -38.4537, -48.8729, 0.07 ) }
    dend_32 { pt3dadd( -68.3584, -38.6425, -49.0088, 0.73 ) }
    dend_32 { pt3dadd( -68.7243, -38.7668, -49.083, 0.88 ) }
    dend_32 { pt3dadd( -69.0291, -38.8771, -49.1331, 0.88 ) }
    dend_32 { pt3dadd( -70.0378, -39.2748, -49.262, 0.07 ) }
    dend_32 { pt3dadd( -70.3763, -39.4129, -49.2921, 0.07 ) }
    dend_32 { pt3dadd( -70.7092, -39.55, -49.3167, 0.44 ) }
    dend_32 { pt3dadd( -71.3912, -39.8103, -49.4042, 0.07 ) }
    dend_32 { pt3dadd( -71.7728, -39.9293, -49.4668, 0.07 ) }
    dend_32 { pt3dadd( -72.2321, -40.0523, -49.591, 1.25 ) }
    dend_32 { pt3dadd( -72.9307, -40.2378, -49.8513, 0.07 ) }
    dend_32 { pt3dadd( -73.3851, -40.3728, -50.0615, 0.07 ) }
    dend_32 { pt3dadd( -73.9203, -40.5394, -50.3286, 0.95 ) }
    dend_32 { pt3dadd( -74.3598, -40.6813, -50.5688, 0.95 ) }
    dend_32 { pt3dadd( -75.2021, -40.9746, -51.0606, 0.15 ) }
    dend_32 { pt3dadd( -75.6191, -41.1421, -51.3044, 0.81 ) }
    dend_32 { pt3dadd( -76.5346, -41.567, -51.8153, 0.07 ) }
    dend_32 { pt3dadd( -77.0746, -41.8595, -52.0932, 0.44 ) }
    dend_32 { pt3dadd( -77.7407, -42.2708, -52.3931, 0.07 ) }
    dend_32 { pt3dadd( -78.0549, -42.4856, -52.5176, 0.07 ) }
    dend_32 { pt3dadd( -78.6798, -42.9473, -52.7278, 1.4 ) }
    dend_32 { pt3dadd( -79.3123, -43.4673, -52.9076, 0.07 ) }
    dend_32 { pt3dadd( -79.7299, -43.8362, -52.9869, 0.07 ) }
    dend_32 { pt3dadd( -79.9131, -44.0056, -53.0147, 0.44 ) }
    dend_32 { pt3dadd( -80.4905, -44.5506, -53.0721, 0.07 ) }
    dend_32 { pt3dadd( -81.1848, -45.2136, -53.1376, 1.47 ) }
    dend_32 { pt3dadd( -81.9406, -45.9447, -53.2, 0.37 ) }
    dend_32 { pt3dadd( -82.8085, -46.8043, -53.2336, 0.07 ) }
    dend_32 { pt3dadd( -82.9321, -46.9306, -53.2449, 0.07 ) }
    dend_32 { pt3dadd( -83.3576, -47.3878, -53.2994, 0.59 ) }
    dend_32 { pt3dadd( -83.783, -47.8701, -53.3645, 0.07 ) }
    dend_32 { pt3dadd( -84.0867, -48.2304, -53.4208, 0.07 ) }
    dend_32 { pt3dadd( -84.5972, -48.8869, -53.5553, 1.18 ) }
    dend_32 { pt3dadd( -85.3448, -49.9543, -53.7818, 0.07 ) }
    dend_32 { pt3dadd( -85.8376, -50.6706, -53.906, 0.07 ) }
    dend_32 { pt3dadd( -86.0316, -50.9515, -53.9456, 0.81 ) }
    dend_32 { pt3dadd( -86.4395, -51.5366, -54.003, 0.07 ) }
    dend_32 { pt3dadd( -86.7731, -52.0034, -54.0515, 0.07 ) }
    dend_32 { pt3dadd( -87.1517, -52.5331, -54.1004, 0.88 ) }
    dend_32 { pt3dadd( -87.5564, -53.1089, -54.115, 0.07 ) }
    dend_32 { pt3dadd( -87.7154, -53.3509, -54.1336, 0.07 ) }
    dend_32 { pt3dadd( -87.9272, -53.7084, -54.1912, 0.73 ) }
    dend_32 { pt3dadd( -88.354, -54.535, -54.4079, 0.07 ) }
    dend_32 { pt3dadd( -88.5843, -55.0045, -54.5908, 0.07 ) }
    dend_32 { pt3dadd( -88.7043, -55.2524, -54.6959, 0.07 ) }
    dend_32 { pt3dadd( -88.9171, -55.6838, -54.9038, 0.95 ) }
    dend_32 { pt3dadd( -89.223, -56.2918, -55.1991, 0.07 ) }
    dend_32 { pt3dadd( -89.5001, -56.8044, -55.4257, 0.07 ) }
    dend_32 { pt3dadd( -89.8471, -57.4078, -55.6631, 0.07 ) }
    dend_32 { pt3dadd( -90.2906, -58.148, -55.9346, 0.07 ) }
    dend_32 { pt3dadd( -90.5882, -58.6228, -56.1037, 1.25 ) }
    dend_32 { pt3dadd( -91.3658, -59.8223, -56.497, 2.06 ) }
    dend_32 { pt3dadd( -92.0056, -60.7702, -56.7725, 0.15 ) }
    dend_32 { pt3dadd( -92.1655, -61.0041, -56.8384, 0.15 ) }
    dend_32 { pt3dadd( -92.4616, -61.4411, -56.9559, 0.44 ) }
    dend_32 { pt3dadd( -92.8013, -61.9305, -57.0994, 0.07 ) }
    dend_32 { pt3dadd( -92.997, -62.206, -57.1646, 0.07 ) }
    dend_32 { pt3dadd( -93.3147, -62.6418, -57.2483, 0.59 ) }
    dend_32 { pt3dadd( -93.4426, -62.8553, -57.2943, 0.59 ) }
    dend_32 { pt3dadd( -93.6931, -63.4606, -57.4111, 0.07 ) }
    dend_32 { pt3dadd( -93.8445, -63.9764, -57.5033, 0.07 ) }
    dend_32 { pt3dadd( -93.9566, -64.4238, -57.5916, 0.07 ) }
    dend_32 { pt3dadd( -94.1293, -65.1903, -57.7603, 2.06 ) }
    dend_32 { pt3dadd( -94.3927, -66.3752, -58.0513, 0.15 ) }
    dend_32 { pt3dadd( -94.6597, -67.4741, -58.3309, 0.07 ) }
    dend_32 { pt3dadd( -94.7889, -67.9221, -58.4864, 1.18 ) }
    dend_32 { pt3dadd( -95.0746, -68.8035, -58.8447, 0.07 ) }
    dend_32 { pt3dadd( -95.2222, -69.1906, -59.0176, 0.07 ) }
    dend_32 { pt3dadd( -95.4602, -69.7257, -59.2835, 0.07 ) }
    dend_32 { pt3dadd( -95.7466, -70.273, -59.5705, 1.32 ) }
    dend_32 { pt3dadd( -96.4654, -71.5703, -60.2845, 0.07 ) }
    dend_32 { pt3dadd( -96.7534, -72.1341, -60.5967, 0.07 ) }
    dend_32 { pt3dadd( -96.9274, -72.5402, -60.8274, 0.81 ) }
    dend_32 { pt3dadd( -97.1866, -73.1737, -61.2091, 0.07 ) }
    dend_32 { pt3dadd( -97.2915, -73.4272, -61.3661, 0.07 ) }
    dend_32 { pt3dadd( -97.4754, -73.8514, -61.6389, 0.88 ) }
    dend_32 { pt3dadd( -97.7848, -74.5519, -62.0556, 0.07 ) }
    dend_32 { pt3dadd( -98.0404, -75.1347, -62.4109, 0.07 ) }
    dend_32 { pt3dadd( -98.3644, -75.9328, -62.8807, 1.69 ) }
    dend_32 { pt3dadd( -98.7452, -76.9685, -63.4541, 0.07 ) }
    dend_32 { pt3dadd( -99.0822, -77.8844, -63.9552, 0.07 ) }
    dend_32 { pt3dadd( -99.36, -78.6375, -64.3478, 1.18 ) }
    dend_32 { pt3dadd( -99.6154, -79.3795, -64.7014, 0.07 ) }
    dend_32 { pt3dadd( -99.7634, -79.8439, -64.9012, 0.07 ) }
    dend_32 { pt3dadd( -99.8444, -80.2207, -65.0533, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 91/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.34719, -21.1901, 0.0571768, 1.1 ) }
    dend_25 { pt3dadd( -2.79786, -22.0585, -2.08691, 1.1 ) }
    dend_25 { pt3dadd( -3.2065, -22.7325, -3.63806, 1.03 ) }
    dend_25 { pt3dadd( -3.66784, -23.3562, -5.07818, 1.03 ) }
    dend_25 { pt3dadd( -4.29912, -24.0845, -6.78201, 1.4 ) }
    dend_25 { pt3dadd( -4.75624, -24.5706, -7.8966, 1.62 ) }
    dend_25 { pt3dadd( -5.30646, -25.0759, -9.08988, 1.84 ) }
    dend_25 { pt3dadd( -5.94113, -25.6579, -10.3258, 0.66 ) }
    dend_25 { pt3dadd( -6.48259, -26.0703, -11.1948, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_25 { pt3dadd( -6.92481, -26.334, -11.7853, 0.66 ) }
    dend_25 { pt3dadd( -7.42827, -26.5738, -12.3396, 0.66 ) }
    dend_25 { pt3dadd( -8.38149, -26.9062, -13.2496, 2.2 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.34719, -21.1901, 0.0571768, 0.51 ) }
    dend_24 { pt3dadd( -3.25703, -22.5646, 0.235838, 0.51 ) }
    dend_24 { pt3dadd( -4.01644, -23.6137, 0.426163, 1.18 ) }
    dend_24 { pt3dadd( -4.77642, -24.544, 0.608768, 1.76 ) }
    dend_24 { pt3dadd( -5.71697, -25.6155, 0.7927, 1.03 ) }
    dend_24 { pt3dadd( -6.38544, -26.3528, 0.882869, 1.03 ) }
    dend_24 { pt3dadd( -6.89637, -26.9022, 0.92666, 1.25 ) }
    dend_24 { pt3dadd( -7.68747, -27.679, 0.928506, 0.59 ) }
    dend_24 { pt3dadd( -8.38772, -28.3502, 0.897974, 0.95 ) }
    dend_24 { pt3dadd( -9.43776, -29.3857, 0.816449, 1.18 ) }
    dend_24 { pt3dadd( -10.6367, -30.6126, 0.677499, 1.25 ) }
    dend_24 { pt3dadd( -11.6218, -31.6452, 0.530109, 1.4 ) }
    dend_24 { pt3dadd( -12.5023, -32.5974, 0.361446, 1.69 ) }
    dend_24 { pt3dadd( -12.8023, -32.9375, 0.294826, 1.69 ) }
    dend_24 { pt3dadd( -13.5004, -33.7724, 0.150401, 0.88 ) }
    dend_24 { pt3dadd( -14.0923, -34.4986, 0.038773, 0.88 ) }
    dend_24 { pt3dadd( -14.7222, -35.2556, -0.0624858, 0.59 ) }
    dend_24 { pt3dadd( -15.2698, -35.876, -0.148554, 0.95 ) }
    dend_24 { pt3dadd( -15.8058, -36.4303, -0.226618, 1.69 ) }
    dend_24 { pt3dadd( -16.1746, -36.7706, -0.277492, 1.84 ) }
    dend_24 { pt3dadd( -17.2453, -37.5874, -0.413929, 0.51 ) }
    dend_24 { pt3dadd( -18.1247, -38.2048, -0.517666, 0.15 ) }
    dend_24 { pt3dadd( -18.9226, -38.7449, -0.607142, 0.95 ) }
    dend_24 { pt3dadd( -19.5459, -39.153, -0.667546, 1.69 ) }
    dend_24 { pt3dadd( -20.1774, -39.546, -0.705011, 1.62 ) }
    dend_24 { pt3dadd( -21.2844, -40.2005, -0.730199, 0.22 ) }
    dend_24 { pt3dadd( -22.3202, -40.8066, -0.701473, 0.44 ) }
    dend_24 { pt3dadd( -23.0195, -41.2416, -0.656156, 0.88 ) }
    dend_24 { pt3dadd( -23.6638, -41.6704, -0.585612, 1.03 ) }
    dend_24 { pt3dadd( -24.5311, -42.2877, -0.468392, 0.15 ) }
    dend_24 { pt3dadd( -25.1923, -42.8058, -0.364213, 0.29 ) }
    dend_24 { pt3dadd( -25.9074, -43.4156, -0.251105, 1.32 ) }
    dend_24 { pt3dadd( -26.2947, -43.754, -0.197609, 1.69 ) }
    dend_24 { pt3dadd( -27.2791, -44.6555, -0.0850056, 0.95 ) }
    dend_24 { pt3dadd( -28.1983, -45.5297, 9.80786E-4, 0.51 ) }
    dend_24 { pt3dadd( -28.9613, -46.2699, 0.0523159, 0.15 ) }
    dend_24 { pt3dadd( -30.0334, -47.308, 0.115494, 1.54 ) }
    dend_24 { pt3dadd( -30.7034, -47.9293, 0.145754, 1.54 ) }
    dend_24 { pt3dadd( -31.3277, -48.4674, 0.168602, 1.32 ) }
    dend_24 { pt3dadd( -32.3566, -49.2427, 0.194573, 0.07 ) }
    dend_24 { pt3dadd( -32.9932, -49.662, 0.208735, 0.51 ) }
    dend_24 { pt3dadd( -33.4975, -49.9505, 0.221392, 0.22 ) }
    dend_24 { pt3dadd( -34.2839, -50.3532, 0.248908, 0.66 ) }
    dend_24 { pt3dadd( -35.2342, -50.8017, 0.277811, 0.15 ) }
    dend_24 { pt3dadd( -36.0369, -51.1513, 0.294385, 0.15 ) }
    dend_24 { pt3dadd( -36.3746, -51.2836, 0.294099, 0.15 ) }
    dend_24 { pt3dadd( -37.2046, -51.6128, 0.291582, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 50/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -0.187622, -25.4878, 0.947401, 0.81 ) }
    dend_22 { pt3dadd( 0.293498, -26.3338, 0.608068, 0.81 ) }
    dend_22 { pt3dadd( 1.0076, -27.5722, 0.130718, 0.29 ) }
    dend_22 { pt3dadd( 1.73671, -28.793, -0.310287, 0.15 ) }
    dend_22 { pt3dadd( 2.2335, -29.5807, -0.575972, 0.88 ) }
    dend_22 { pt3dadd( 2.7528, -30.3729, -0.835056, 0.37 ) }
    dend_22 { pt3dadd( 3.34396, -31.2676, -1.12134, 0.15 ) }
    dend_22 { pt3dadd( 3.77388, -31.8914, -1.3163, 1.1 ) }
    dend_22 { pt3dadd( 4.48169, -32.8567, -1.61768, 1.25 ) }
    dend_22 { pt3dadd( 5.01386, -33.5617, -1.83875, 1.03 ) }
    dend_22 { pt3dadd( 5.81014, -34.615, -2.15738, 0.15 ) }
    dend_22 { pt3dadd( 6.11634, -35.0262, -2.27394, 0.15 ) }
    dend_22 { pt3dadd( 6.60738, -35.7087, -2.4744, 0.73 ) }
    dend_22 { pt3dadd( 6.81739, -36.0217, -2.57198, 0.73 ) }
    dend_22 { pt3dadd( 7.15057, -36.5725, -2.75639, 0.51 ) }
    dend_22 { pt3dadd( 7.81891, -37.8293, -3.19061, 0.22 ) }
    dend_22 { pt3dadd( 8.23752, -38.7054, -3.48852, 1.32 ) }
    dend_22 { pt3dadd( 8.66613, -39.6945, -3.82864, 0.73 ) }
    dend_22 { pt3dadd( 9.18037, -41.0342, -4.30008, 0.07 ) }
    dend_22 { pt3dadd( 9.41973, -41.6971, -4.54628, 0.15 ) }
    dend_22 { pt3dadd( 9.73736, -42.6186, -4.91774, 1.1 ) }
    dend_22 { pt3dadd( 9.92323, -43.2176, -5.1779, 1.18 ) }
    dend_22 { pt3dadd( 10.1563, -44.0356, -5.52631, 0.44 ) }
    dend_22 { pt3dadd( 10.3162, -44.6354, -5.76081, 0.07 ) }
    dend_22 { pt3dadd( 10.4322, -45.0626, -5.9005, 0.73 ) }
    dend_22 { pt3dadd( 10.6233, -45.6741, -6.06032, 0.44 ) }
    dend_22 { pt3dadd( 10.8337, -46.2618, -6.17333, 0.44 ) }
    dend_22 { pt3dadd( 11.0222, -46.7829, -6.23271, 0.37 ) }
    dend_22 { pt3dadd( 11.2385, -47.3716, -6.26365, 1.03 ) }
    dend_22 { pt3dadd( 11.4838, -48.0261, -6.29216, 1.25 ) }
    dend_22 { pt3dadd( 11.6422, -48.4255, -6.30903, 1.54 ) }
    dend_22 { pt3dadd( 11.9969, -49.2506, -6.34735, 0.51 ) }
    dend_22 { pt3dadd( 12.3452, -50.0036, -6.4013, 0.44 ) }
    dend_22 { pt3dadd( 12.9505, -51.2048, -6.49832, 0.44 ) }
    dend_22 { pt3dadd( 13.4021, -52.0568, -6.57582, 0.59 ) }
    dend_22 { pt3dadd( 13.7322, -52.6536, -6.63831, 1.54 ) }
    dend_22 { pt3dadd( 14.0356, -53.1715, -6.69845, 1.76 ) }
    dend_22 { pt3dadd( 14.3938, -53.7352, -6.7734, 1.25 ) }
    dend_22 { pt3dadd( 14.814, -54.3494, -6.87782, 1.47 ) }
    dend_22 { pt3dadd( 15.4496, -55.266, -7.06888, 0.66 ) }
    dend_22 { pt3dadd( 15.8536, -55.866, -7.218, 0.73 ) }
    dend_22 { pt3dadd( 16.1569, -56.3243, -7.35892, 1.1 ) }
    dend_22 { pt3dadd( 16.6405, -57.0722, -7.62303, 1.69 ) }
    dend_22 { pt3dadd( 17.0532, -57.7336, -7.88427, 0.88 ) }
    dend_22 { pt3dadd( 17.5159, -58.5124, -8.22281, 0.22 ) }
    dend_22 { pt3dadd( 17.8497, -59.1176, -8.49967, 0.81 ) }
    dend_22 { pt3dadd( 18.2067, -59.7945, -8.82248, 0.37 ) }
    dend_22 { pt3dadd( 18.5839, -60.5421, -9.18574, 0.37 ) }
    dend_22 { pt3dadd( 18.8556, -61.1116, -9.46513, 0.66 ) }
    dend_22 { pt3dadd( 18.9784, -61.3813, -9.59512, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_22 { pt3dadd( 19.1587, -61.7883, -9.79389, 0.66 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 1/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.187622, -25.4878, 0.947401, 0.59 ) }
    dend_19 { pt3dadd( -0.195599, -26.1611, 1.21138, 0.59 ) }
    dend_19 { pt3dadd( -0.228938, -26.717, 1.42967, 0.59 ) }
    dend_19 { pt3dadd( -0.25156, -27.099, 1.56237, 0.59 ) }
    dend_19 { pt3dadd( -0.271584, -27.5782, 1.73053, 0.66 ) }
    dend_19 { pt3dadd( -0.288032, -28.0985, 1.92127, 0.95 ) }
    dend_19 { pt3dadd( -0.307094, -28.7857, 2.17294, 1.25 ) }
    dend_19 { pt3dadd( -0.33203, -29.1091, 2.28619, 0.95 ) }
    dend_19 { pt3dadd( -0.41261, -29.8226, 2.5232, 0.73 ) }
    dend_19 { pt3dadd( -0.465872, -30.2934, 2.68483, 1.32 ) }
    dend_19 { pt3dadd( -0.502746, -30.7504, 2.8526, 1.62 ) }
    dend_19 { pt3dadd( -0.528629, -31.1179, 2.99524, 1.62 ) }
    dend_19 { pt3dadd( -0.583549, -31.757, 3.25964, 0.59 ) }
    dend_19 { pt3dadd( -0.646839, -32.3288, 3.5021, 0.59 ) }
    dend_19 { pt3dadd( -0.719799, -32.9421, 3.77734, 0.81 ) }
    dend_19 { pt3dadd( -0.801449, -33.5941, 4.06881, 1.1 ) }
    dend_19 { pt3dadd( -0.838999, -33.8772, 4.19796, 2.06 ) }
    dend_19 { pt3dadd( -0.926929, -34.555, 4.51468, 1.03 ) }
    dend_19 { pt3dadd( -0.999889, -35.1781, 4.79333, 0.51 ) }
    dend_19 { pt3dadd( -1.06726, -35.6712, 4.98933, 1.1 ) }
    dend_19 { pt3dadd( -1.16389, -36.3107, 5.21656, 0.66 ) }
    dend_19 { pt3dadd( -1.26497, -36.9902, 5.44631, 2.13 ) }
    dend_19 { pt3dadd( -1.33691, -37.5257, 5.64417, 2.13 ) }
    dend_19 { pt3dadd( -1.38963, -37.9523, 5.80088, 2.13 ) }
    dend_19 { pt3dadd( -1.43545, -38.3294, 5.93895, 2.13 ) }
    dend_19 { pt3dadd( -1.55092, -39.1968, 6.25148, 1.76 ) }
    dend_19 { pt3dadd( -1.62537, -39.9519, 6.53457, 2.42 ) }
    dend_19 { pt3dadd( -1.67923, -40.7639, 6.87614, 2.94 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 29/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.2988, 5.38682, -1.76734, 1.03 ) }
    dend_15 { pt3dadd( -13.8416, 6.10879, -2.13828, 1.03 ) }
    dend_15 { pt3dadd( -13.4194, 6.81782, -2.48099, 0.29 ) }
    dend_15 { pt3dadd( -12.9822, 7.62508, -2.84633, 1.18 ) }
    dend_15 { pt3dadd( -12.6889, 8.25892, -3.09362, 1.47 ) }
    dend_15 { pt3dadd( -12.1335, 9.68271, -3.60899, 1.18 ) }
    dend_15 { pt3dadd( -11.9295, 10.3071, -3.8287, 1.4 ) }
    dend_15 { pt3dadd( -11.7973, 10.9453, -4.04523, 1.4 ) }
    dend_15 { pt3dadd( -11.7272, 11.7511, -4.36716, 0.73 ) }
    dend_15 { pt3dadd( -11.7898, 12.699, -4.77869, 0.51 ) }
    dend_15 { pt3dadd( -11.8856, 13.2882, -5.04109, 0.15 ) }
    dend_15 { pt3dadd( -12.0537, 13.9902, -5.36273, 1.25 ) }
    dend_15 { pt3dadd( -12.2551, 14.9416, -5.83937, 1.47 ) }
    dend_15 { pt3dadd( -12.4338, 16.1972, -6.56236, 1.18 ) }
    dend_15 { pt3dadd( -12.5024, 17.0667, -7.096, 0.51 ) }
    dend_15 { pt3dadd( -12.4887, 17.8532, -7.58333, 0.07 ) }
    dend_15 { pt3dadd( -12.364, 18.895, -8.20309, 1.25 ) }
    dend_15 { pt3dadd( -12.0863, 20.1668, -8.93085, 0.37 ) }
    dend_15 { pt3dadd( -11.7331, 21.1875, -9.52017, 1.03 ) }
    dend_15 { pt3dadd( -11.5281, 21.6281, -9.78712, 1.18 ) }
    dend_15 { pt3dadd( -11.1398, 22.2276, -10.2119, 1.03 ) }
    dend_15 { pt3dadd( -10.3645, 23.1665, -11.0178, 0.81 ) }
    dend_15 { pt3dadd( -9.83127, 23.7068, -11.5803, 0.29 ) }
    dend_15 { pt3dadd( -9.16196, 24.3084, -12.3335, 1.25 ) }
    dend_15 { pt3dadd( -8.60348, 24.805, -13.0142, 1.32 ) }
    dend_15 { pt3dadd( -7.93399, 25.5077, -14.0719, 1.32 ) }
    dend_15 { pt3dadd( -7.59831, 25.9802, -14.8158, 1.32 ) }
    dend_15 { pt3dadd( -7.34834, 26.409, -15.5043, 1.32 ) }
    dend_15 { pt3dadd( -6.96936, 27.1569, -16.7407, 1.4 ) }
    dend_15 { pt3dadd( -6.82707, 27.5084, -17.3563, 1.25 ) }
    dend_15 { pt3dadd( -6.59959, 28.4136, -18.9731, 1.25 ) }
    dend_15 { pt3dadd( -6.4876, 29.127, -20.2112, 1.25 ) }
    dend_15 { pt3dadd( -6.35721, 29.7762, -21.2668, 1.25 ) }
    dend_15 { pt3dadd( -6.15484, 30.4111, -22.2573, 1.25 ) }
    dend_15 { pt3dadd( -5.96503, 30.9651, -23.048, 1.25 ) }
    dend_15 { pt3dadd( -5.67078, 31.6909, -23.9879, 0.59 ) }
    dend_15 { pt3dadd( -5.53983, 32.0267, -24.337, 0.95 ) }
    dend_15 { pt3dadd( -5.33262, 32.8865, -25.0551, 0.66 ) }
    dend_15 { pt3dadd( -5.17482, 33.7114, -25.6297, 1.69 ) }
    dend_15 { pt3dadd( -4.86141, 34.9676, -26.4677, 0.15 ) }
    dend_15 { pt3dadd( -4.76654, 35.2453, -26.6535, 0.15 ) }
    dend_15 { pt3dadd( -4.4715, 35.9017, -27.1352, 1.4 ) }
    dend_15 { pt3dadd( -3.5707, 37.616, -28.4723, 0.29 ) }
    dend_15 { pt3dadd( -3.19159, 38.1985, -28.9574, 1.4 ) }
    dend_15 { pt3dadd( -2.47491, 39.1059, -29.7403, 0.51 ) }
    dend_15 { pt3dadd( -1.96396, 39.5977, -30.1649, 0.95 ) }
    dend_15 { pt3dadd( -1.09961, 40.3146, -30.7742, 0.07 ) }
    dend_15 { pt3dadd( -0.457871, 40.7934, -31.1826, 0.73 ) }
    dend_15 { pt3dadd( 0.343809, 41.3644, -31.6454, 0.07 ) }
    dend_15 { pt3dadd( 0.71494, 41.6661, -31.9027, 1.1 ) }
    dend_15 { pt3dadd( 1.44834, 42.3998, -32.5303, 0.07 ) }
    dend_15 { pt3dadd( 1.80006, 42.8177, -32.9218, 0.73 ) }
    dend_15 { pt3dadd( 2.53646, 43.8331, -33.9796, 0.59 ) }
    dend_15 { pt3dadd( 2.63946, 43.9988, -34.1719, 1.4 ) }
    dend_15 { pt3dadd( 3.15028, 44.9253, -35.3037, 1.4 ) }
    dend_15 { pt3dadd( 3.47269, 45.5724, -36.0946, 1.4 ) }
    dend_15 { pt3dadd( 3.60596, 45.8756, -36.4453, 1.03 ) }
    dend_15 { pt3dadd( 3.83775, 46.3773, -36.9834, 1.03 ) }
    dend_15 { pt3dadd( 4.15896, 47.0025, -37.5858, 0.66 ) }
    dend_15 { pt3dadd( 4.6626, 47.9105, -38.3568, 0.95 ) }
    dend_15 { pt3dadd( 4.88047, 48.3095, -38.6801, 1.25 ) }
    dend_15 { pt3dadd( 5.67786, 49.9466, -39.9385, 0.07 ) }
    dend_15 { pt3dadd( 6.11937, 51.0106, -40.7004, 1.1 ) }
    dend_15 { pt3dadd( 6.40608, 51.8622, -41.2654, 0.07 ) }
    dend_15 { pt3dadd( 6.59662, 52.5648, -41.7087, 1.18 ) }
    dend_15 { pt3dadd( 7.00847, 54.6943, -43.023, 1.18 ) }
    dend_15 { pt3dadd( 7.09287, 55.2637, -43.3805, 1.25 ) }
    dend_15 { pt3dadd( 7.18539, 56.1489, -43.9121, 0.37 ) }
    dend_15 { pt3dadd( 7.22022, 56.5679, -44.1724, 0.37 ) }
    dend_15 { pt3dadd( 7.27543, 57.651, -44.94, 1.47 ) }
    dend_15 { pt3dadd( 7.30936, 58.609, -45.667, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( 7.35563, 59.7049, -46.4965, 0.07 ) }
    dend_15 { pt3dadd( 7.42263, 60.4508, -47.1866, 0.51 ) }
    dend_15 { pt3dadd( 7.50379, 61.1526, -47.9393, 0.15 ) }
    dend_15 { pt3dadd( 7.68318, 62.2934, -49.2856, 0.73 ) }
    dend_15 { pt3dadd( 7.74687, 62.6126, -49.6848, 0.73 ) }
    dend_15 { pt3dadd( 7.85028, 63.1539, -50.3718, 1.25 ) }
    dend_15 { pt3dadd( 7.96528, 64.4617, -51.9789, 0.07 ) }
    dend_15 { pt3dadd( 7.96149, 64.6491, -52.205, 0.44 ) }
    dend_15 { pt3dadd( 7.89235, 65.2882, -52.9035, 0.07 ) }
    dend_15 { pt3dadd( 7.84047, 65.6279, -53.2465, 1.25 ) }
    dend_15 { pt3dadd( 7.64407, 66.6257, -54.1937, 0.29 ) }
    dend_15 { pt3dadd( 7.48141, 67.429, -54.9191, 1.4 ) }
    dend_15 { pt3dadd( 7.06235, 69.5429, -56.7186, 0.07 ) }
    dend_15 { pt3dadd( 6.9582, 70.2158, -57.2769, 0.59 ) }
    dend_15 { pt3dadd( 6.83047, 71.5327, -58.3715, 0.15 ) }
    dend_15 { pt3dadd( 6.78464, 72.6426, -59.2843, 2.13 ) }
    dend_15 { pt3dadd( 6.8155, 74.2959, -60.5912, 0.66 ) }
    dend_15 { pt3dadd( 6.8571, 74.9253, -61.0621, 0.51 ) }
    dend_15 { pt3dadd( 6.95086, 75.852, -61.6777, 1.4 ) }
    dend_15 { pt3dadd( 7.0975, 77.2245, -62.593, 0.22 ) }
    dend_15 { pt3dadd( 7.12112, 77.5474, -62.7948, 0.22 ) }
    dend_15 { pt3dadd( 7.1471, 78.4675, -63.3686, 1.1 ) }
    dend_15 { pt3dadd( 7.12762, 79.1265, -63.7518, 0.59 ) }
    dend_15 { pt3dadd( 7.11701, 79.6503, -64.078, 1.1 ) }
    dend_15 { pt3dadd( 7.22181, 81.2601, -65.1919, 0.37 ) }
    dend_15 { pt3dadd( 7.27932, 81.5624, -65.4019, 0.59 ) }
    dend_15 { pt3dadd( 7.55842, 82.3865, -66.0154, 0.07 ) }
    dend_15 { pt3dadd( 7.88431, 83.0239, -66.518, 0.73 ) }
    dend_15 { pt3dadd( 8.64611, 84.2962, -67.5654, 1.32 ) }
    dend_15 { pt3dadd( 9.53949, 85.5409, -68.6602, 0.07 ) }
    dend_15 { pt3dadd( 10.0503, 86.0888, -69.1602, 0.81 ) }
    dend_15 { pt3dadd( 10.5304, 86.5318, -69.596, 0.37 ) }
    dend_15 { pt3dadd( 10.9309, 86.8229, -69.9105, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.2988, 5.38682, -1.76734, 2.42 ) }
    dend_10 { pt3dadd( -14.9343, 5.7055, -1.87635, 2.42 ) }
    dend_10 { pt3dadd( -16.4265, 6.45376, -2.13232, 1.47 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -22.9749, 11.9868, 14.3248, 0.88 ) }
    dend_4 { pt3dadd( -23.0116, 14.1275, 14.7152, 0.88 ) }
    dend_4 { pt3dadd( -22.9925, 15.4721, 14.982, 0.66 ) }
    dend_4 { pt3dadd( -22.9864, 16.0932, 15.106, 0.66 ) }
    dend_4 { pt3dadd( -22.979, 17.2126, 15.2998, 0.66 ) }
    dend_4 { pt3dadd( -22.9717, 18.2033, 15.4271, 0.59 ) }
    dend_4 { pt3dadd( -22.9647, 18.9117, 15.4907, 0.59 ) }
    dend_4 { pt3dadd( -22.9243, 19.8462, 15.5286, 0.81 ) }
    dend_4 { pt3dadd( -22.8866, 20.6307, 15.5458, 1.32 ) }
    dend_4 { pt3dadd( -22.8184, 22.2247, 15.5207, 0.29 ) }
    dend_4 { pt3dadd( -22.7804, 23.4141, 15.4346, 0.29 ) }
    dend_4 { pt3dadd( -22.7829, 24.0755, 15.3494, 0.29 ) }
    dend_4 { pt3dadd( -22.8013, 24.6449, 15.2492, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 49/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -22.9749, 11.9868, 14.3248, 0.95 ) }
    dend_3 { pt3dadd( -24.9254, 12.0604, 14.865, 0.95 ) }
    dend_3 { pt3dadd( -25.9563, 12.1293, 15.16, 0.95 ) }
    dend_3 { pt3dadd( -26.8635, 12.2283, 15.4547, 0.95 ) }
    dend_3 { pt3dadd( -27.3457, 12.2979, 15.6312, 1.03 ) }
    dend_3 { pt3dadd( -28.0298, 12.4059, 15.9102, 0.88 ) }
    dend_3 { pt3dadd( -29.1975, 12.5887, 16.4052, 0.51 ) }
    dend_3 { pt3dadd( -30.2189, 12.7699, 16.8691, 1.03 ) }
    dend_3 { pt3dadd( -30.9757, 12.8951, 17.2061, 1.32 ) }
    dend_3 { pt3dadd( -31.7678, 13.0284, 17.5678, 1.32 ) }
    dend_3 { pt3dadd( -32.9484, 13.2352, 18.0996, 1.4 ) }
    dend_3 { pt3dadd( -33.5458, 13.3421, 18.3772, 0.73 ) }
    dend_3 { pt3dadd( -34.2347, 13.4516, 18.6989, 0.73 ) }
    dend_3 { pt3dadd( -34.7199, 13.5079, 18.8973, 0.88 ) }
    dend_3 { pt3dadd( -35.3213, 13.5521, 19.0999, 0.44 ) }
    dend_3 { pt3dadd( -36.5307, 13.6285, 19.4262, 0.44 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 65/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 111.38, 277.183, -142.256, 0.37 ) }
    dend_42 { pt3dadd( 110.995, 278.074, -143.175, 0.37 ) }
    dend_42 { pt3dadd( 110.722, 278.802, -143.906, 0.81 ) }
    dend_42 { pt3dadd( 110.442, 279.526, -144.598, 0.29 ) }
    dend_42 { pt3dadd( 110.132, 280.342, -145.339, 0.07 ) }
    dend_42 { pt3dadd( 109.904, 280.973, -145.89, 0.88 ) }
    dend_42 { pt3dadd( 109.678, 281.68, -146.486, 0.07 ) }
    dend_42 { pt3dadd( 109.449, 282.504, -147.128, 0.07 ) }
    dend_42 { pt3dadd( 109.292, 283.142, -147.579, 0.07 ) }
    dend_42 { pt3dadd( 109.195, 283.57, -147.872, 1.18 ) }
    dend_42 { pt3dadd( 108.976, 284.543, -148.605, 0.15 ) }
    dend_42 { pt3dadd( 108.811, 285.226, -149.111, 0.59 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 77/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 111.38, 277.183, -142.256, 0.15 ) }
    dend_41 { pt3dadd( 111.539, 277.612, -142.436, 0.15 ) }
    dend_41 { pt3dadd( 111.747, 278.232, -142.714, 0.15 ) }
    dend_41 { pt3dadd( 111.907, 278.759, -142.983, 0.15 ) }
    dend_41 { pt3dadd( 111.969, 278.988, -143.102, 1.18 ) }
    dend_41 { pt3dadd( 112.127, 279.66, -143.443, 0.07 ) }
    dend_41 { pt3dadd( 112.246, 280.266, -143.755, 0.07 ) }
    dend_41 { pt3dadd( 112.315, 280.805, -144.038, 1.25 ) }
    dend_41 { pt3dadd( 112.388, 281.593, -144.443, 0.07 ) }
    dend_41 { pt3dadd( 112.42, 282.076, -144.667, 0.07 ) }
    dend_41 { pt3dadd( 112.445, 282.65, -144.926, 0.73 ) }
    dend_41 { pt3dadd( 112.474, 283.145, -145.14, 0.07 ) }
    dend_41 { pt3dadd( 112.516, 283.58, -145.322, 0.07 ) }
    dend_41 { pt3dadd( 112.632, 284.534, -145.688, 2.06 ) }
    dend_41 { pt3dadd( 112.788, 285.561, -146.066, 0.07 ) }
    dend_41 { pt3dadd( 112.91, 286.12, -146.271, 0.88 ) }
    dend_41 { pt3dadd( 113.131, 286.898, -146.546, 0.07 ) }
    dend_41 { pt3dadd( 113.311, 287.453, -146.74, 0.07 ) }
    dend_41 { pt3dadd( 113.413, 287.747, -146.846, 0.07 ) }
    dend_41 { pt3dadd( 113.636, 288.338, -147.08, 1.32 ) }
    dend_41 { pt3dadd( 113.883, 288.961, -147.338, 0.22 ) }
    dend_41 { pt3dadd( 114.07, 289.488, -147.571, 0.22 ) }
    dend_41 { pt3dadd( 114.209, 290.004, -147.825, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( 114.34, 290.676, -148.202, 0.81 ) }
    dend_41 { pt3dadd( 114.408, 291.222, -148.554, 0.81 ) }
    dend_41 { pt3dadd( 114.427, 291.719, -148.898, 1.25 ) }
    dend_41 { pt3dadd( 114.409, 292.437, -149.405, 0.07 ) }
    dend_41 { pt3dadd( 114.384, 292.92, -149.745, 0.07 ) }
    dend_41 { pt3dadd( 114.345, 293.467, -150.112, 0.95 ) }
    dend_41 { pt3dadd( 114.271, 294.333, -150.667, 0.07 ) }
    dend_41 { pt3dadd( 114.219, 294.922, -151.021, 1.54 ) }
    dend_41 { pt3dadd( 114.167, 295.804, -151.524, 0.07 ) }
    dend_41 { pt3dadd( 114.144, 296.739, -152.004, 0.07 ) }
    dend_41 { pt3dadd( 114.155, 297.26, -152.261, 0.07 ) }
    dend_41 { pt3dadd( 114.192, 297.9, -152.586, 0.95 ) }
    dend_41 { pt3dadd( 114.215, 298.232, -152.763, 0.95 ) }
    dend_41 { pt3dadd( 114.262, 298.963, -153.192, 0.07 ) }
    dend_41 { pt3dadd( 114.267, 299.459, -153.498, 0.07 ) }
    dend_41 { pt3dadd( 114.257, 300.012, -153.838, 0.88 ) }
    dend_41 { pt3dadd( 114.198, 301.014, -154.446, 0.07 ) }
    dend_41 { pt3dadd( 114.145, 301.599, -154.773, 0.95 ) }
    dend_41 { pt3dadd( 114.1, 302.091, -155.022, 0.07 ) }
    dend_41 { pt3dadd( 114.013, 303.188, -155.47, 0.07 ) }
    dend_41 { pt3dadd( 114.012, 304.011, -155.71, 1.18 ) }
    dend_41 { pt3dadd( 114.058, 304.535, -155.792, 1.18 ) }
    dend_41 { pt3dadd( 114.198, 305.416, -155.841, 0.07 ) }
    dend_41 { pt3dadd( 114.319, 306.017, -155.846, 0.07 ) }
    dend_41 { pt3dadd( 114.523, 307.063, -155.839, 0.07 ) }
    dend_41 { pt3dadd( 114.71, 308.276, -155.829, 0.07 ) }
    dend_41 { pt3dadd( 114.767, 309.037, -155.839, 0.07 ) }
    dend_41 { pt3dadd( 114.773, 309.687, -155.867, 0.07 ) }
    dend_41 { pt3dadd( 114.709, 310.793, -155.966, 0.07 ) }
    dend_41 { pt3dadd( 114.565, 312.017, -156.139, 0.07 ) }
    dend_41 { pt3dadd( 114.379, 313.157, -156.359, 0.07 ) }
    dend_41 { pt3dadd( 114.138, 314.481, -156.663, 0.07 ) }
    dend_41 { pt3dadd( 114.068, 314.981, -156.794, 0.22 ) }
    dend_41 { pt3dadd( 113.993, 315.684, -156.98, 0.07 ) }
    dend_41 { pt3dadd( 113.93, 316.8, -157.286, 0.07 ) }
    dend_41 { pt3dadd( 113.942, 317.424, -157.465, 0.37 ) }
    dend_41 { pt3dadd( 114.015, 318.24, -157.72, 0.07 ) }
    dend_41 { pt3dadd( 114.166, 319.174, -158.053, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.38149, -26.9062, -13.2496, 1.1 ) }
    dend_27 { pt3dadd( -8.91928, -28.0459, -14.0994, 1.1 ) }
    dend_27 { pt3dadd( -9.43208, -29.1463, -14.8138, 0.81 ) }
    dend_27 { pt3dadd( -9.73127, -29.8264, -15.2027, 1.1 ) }
    dend_27 { pt3dadd( -9.94637, -30.3695, -15.4558, 1.4 ) }
    dend_27 { pt3dadd( -10.3221, -31.3641, -15.8894, 0.07 ) }
    dend_27 { pt3dadd( -10.5316, -31.9532, -16.137, 0.15 ) }
    dend_27 { pt3dadd( -10.8065, -32.8862, -16.4886, 1.91 ) }
    dend_27 { pt3dadd( -10.9756, -33.7327, -16.8016, 1.62 ) }
    dend_27 { pt3dadd( -11.1808, -35.4138, -17.4712, 0.22 ) }
    dend_27 { pt3dadd( -11.2701, -36.7046, -18.0422, 2.28 ) }
    dend_27 { pt3dadd( -11.2834, -37.5681, -18.4943, 1.62 ) }
    dend_27 { pt3dadd( -11.243, -39.056, -19.3767, 0.29 ) }
    dend_27 { pt3dadd( -11.2163, -40.0431, -20.0265, 1.03 ) }
    dend_27 { pt3dadd( -11.2248, -41.0318, -20.7593, 0.59 ) }
    dend_27 { pt3dadd( -11.2825, -41.7246, -21.3389, 0.15 ) }
    dend_27 { pt3dadd( -11.5236, -42.7086, -22.224, 1.69 ) }
    dend_27 { pt3dadd( -11.7693, -43.2947, -22.7808, 2.06 ) }
    dend_27 { pt3dadd( -12.4669, -44.4139, -23.8537, 0.29 ) }
    dend_27 { pt3dadd( -12.949, -45.0339, -24.4345, 0.29 ) }
    dend_27 { pt3dadd( -13.6732, -45.8798, -25.116, 2.06 ) }
    dend_27 { pt3dadd( -14.9297, -47.3296, -26.0589, 0.44 ) }
    dend_27 { pt3dadd( -15.3197, -47.7836, -26.2966, 0.44 ) }
    dend_27 { pt3dadd( -15.8699, -48.4631, -26.579, 1.84 ) }
    dend_27 { pt3dadd( -16.4338, -49.2455, -26.8154, 1.62 ) }
    dend_27 { pt3dadd( -17.1694, -50.3875, -27.0581, 0.22 ) }
    dend_27 { pt3dadd( -17.8761, -51.5172, -27.2125, 0.22 ) }
    dend_27 { pt3dadd( -18.5058, -52.5339, -27.2914, 1.98 ) }
    dend_27 { pt3dadd( -19.3054, -53.7869, -27.3832, 0.66 ) }
    dend_27 { pt3dadd( -19.9307, -54.724, -27.4804, 0.66 ) }
    dend_27 { pt3dadd( -20.3144, -55.2361, -27.5531, 0.22 ) }
    dend_27 { pt3dadd( -21.0362, -56.0447, -27.7318, 1.98 ) }
    dend_27 { pt3dadd( -21.4979, -56.4756, -27.8549, 1.98 ) }
    dend_27 { pt3dadd( -22.1095, -56.9262, -28.0352, 1.47 ) }
    dend_27 { pt3dadd( -23.4091, -57.6842, -28.453, 0.15 ) }
    dend_27 { pt3dadd( -24.4163, -58.1771, -28.7883, 0.15 ) }
    dend_27 { pt3dadd( -25.5034, -58.6867, -29.16, 2.06 ) }
    dend_27 { pt3dadd( -26.2208, -59.0164, -29.4174, 2.06 ) }
    dend_27 { pt3dadd( -27.5032, -59.6042, -29.8858, 0.44 ) }
    dend_27 { pt3dadd( -28.3367, -60.0126, -30.204, 1.03 ) }
    dend_27 { pt3dadd( -29.3574, -60.5503, -30.5984, 0.07 ) }
    dend_27 { pt3dadd( -30.1664, -61.0347, -30.9342, 0.07 ) }
    dend_27 { pt3dadd( -31.2908, -61.8108, -31.4243, 1.76 ) }
    dend_27 { pt3dadd( -31.5612, -62.0333, -31.545, 1.76 ) }
    dend_27 { pt3dadd( -32.61, -63.0769, -32.0442, 0.22 ) }
    dend_27 { pt3dadd( -32.8738, -63.3651, -32.1835, 0.22 ) }
    dend_27 { pt3dadd( -33.4732, -64.0574, -32.5365, 1.4 ) }
    dend_27 { pt3dadd( -33.872, -64.5102, -32.7946, 1.84 ) }
    dend_27 { pt3dadd( -34.6766, -65.4028, -33.3147, 0.37 ) }
    dend_27 { pt3dadd( -35.0752, -65.8094, -33.578, 0.37 ) }
    dend_27 { pt3dadd( -35.6988, -66.3984, -33.9931, 0.07 ) }
    dend_27 { pt3dadd( -36.3664, -66.9848, -34.4313, 1.25 ) }
    dend_27 { pt3dadd( -37.4323, -67.8443, -35.118, 0.29 ) }
    dend_27 { pt3dadd( -38.1875, -68.41, -35.5972, 1.91 ) }
    dend_27 { pt3dadd( -38.7471, -68.8225, -35.9722, 1.25 ) }
    dend_27 { pt3dadd( -39.572, -69.4613, -36.5294, 0.15 ) }
    dend_27 { pt3dadd( -40.4441, -70.2076, -37.1259, 0.15 ) }
    dend_27 { pt3dadd( -40.8781, -70.6193, -37.4161, 0.88 ) }
    dend_27 { pt3dadd( -41.1476, -70.942, -37.615, 1.18 ) }
    dend_27 { pt3dadd( -41.94, -72.1525, -38.268, 0.22 ) }
    dend_27 { pt3dadd( -42.2649, -72.7959, -38.5513, 0.22 ) }
    dend_27 { pt3dadd( -42.3837, -73.1374, -38.6759, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_27 { pt3dadd( -42.5309, -73.7769, -38.8803, 1.18 ) }
    dend_27 { pt3dadd( -42.7466, -75.0743, -39.2394, 0.29 ) }
    dend_27 { pt3dadd( -42.8443, -75.8484, -39.4173, 0.29 ) }
    dend_27 { pt3dadd( -42.9039, -76.5476, -39.5267, 1.03 ) }
    dend_27 { pt3dadd( -42.9712, -77.5893, -39.6887, 1.84 ) }
    dend_27 { pt3dadd( -43.0284, -78.6361, -39.8434, 0.44 ) }
    dend_27 { pt3dadd( -43.0523, -79.3283, -39.9303, 0.44 ) }
    dend_27 { pt3dadd( -43.0754, -79.7803, -39.9617, 0.07 ) }
    dend_27 { pt3dadd( -43.1244, -81.0421, -40.0489, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.38149, -26.9062, -13.2496, 0.95 ) }
    dend_26 { pt3dadd( -9.57117, -27.1187, -12.4607, 0.95 ) }
    dend_26 { pt3dadd( -10.5049, -27.3138, -11.984, 0.22 ) }
    dend_26 { pt3dadd( -10.9185, -27.4298, -11.8534, 0.37 ) }
    dend_26 { pt3dadd( -11.393, -27.5995, -11.763, 0.07 ) }
    dend_26 { pt3dadd( -12.0519, -27.8732, -11.6872, 0.07 ) }
    dend_26 { pt3dadd( -12.4591, -28.0608, -11.6593, 0.95 ) }
    dend_26 { pt3dadd( -12.7594, -28.2191, -11.6829, 1.03 ) }
    dend_26 { pt3dadd( -13.5719, -28.6754, -11.7909, 0.07 ) }
    dend_26 { pt3dadd( -14.2126, -29.0593, -11.8715, 0.07 ) }
    dend_26 { pt3dadd( -14.8971, -29.4917, -11.9479, 1.84 ) }
    dend_26 { pt3dadd( -15.7568, -30.0533, -12.0482, 0.07 ) }
    dend_26 { pt3dadd( -16.1623, -30.3141, -12.0928, 0.07 ) }
    dend_26 { pt3dadd( -16.3366, -30.4267, -12.1116, 0.81 ) }
    dend_26 { pt3dadd( -16.754, -30.697, -12.1518, 0.07 ) }
    dend_26 { pt3dadd( -17.2441, -31.002, -12.2154, 0.07 ) }
    dend_26 { pt3dadd( -17.8501, -31.3597, -12.3169, 0.51 ) }
    dend_26 { pt3dadd( -18.1737, -31.543, -12.3777, 0.07 ) }
    dend_26 { pt3dadd( -18.527, -31.7368, -12.4471, 0.07 ) }
    dend_26 { pt3dadd( -19.1003, -32.0378, -12.5583, 1.4 ) }
    dend_26 { pt3dadd( -19.9919, -32.5036, -12.7372, 0.07 ) }
    dend_26 { pt3dadd( -20.7568, -32.9089, -12.9092, 0.07 ) }
    dend_26 { pt3dadd( -21.5356, -33.3252, -13.0987, 1.69 ) }
    dend_26 { pt3dadd( -22.5312, -33.846, -13.3872, 0.07 ) }
    dend_26 { pt3dadd( -23.1065, -34.1368, -13.5849, 0.07 ) }
    dend_26 { pt3dadd( -23.3872, -34.2819, -13.6967, 1.1 ) }
    dend_26 { pt3dadd( -24.0582, -34.6373, -14.0079, 0.07 ) }
    dend_26 { pt3dadd( -24.5701, -34.9073, -14.2645, 0.07 ) }
    dend_26 { pt3dadd( -25.1989, -35.2355, -14.591, 0.88 ) }
    dend_26 { pt3dadd( -25.9019, -35.6011, -14.9705, 0.07 ) }
    dend_26 { pt3dadd( -26.5756, -35.9453, -15.3402, 1.84 ) }
    dend_26 { pt3dadd( -27.5226, -36.4018, -15.8265, 0.07 ) }
    dend_26 { pt3dadd( -28.1393, -36.6829, -16.1292, 0.07 ) }
    dend_26 { pt3dadd( -28.5621, -36.8643, -16.3322, 0.59 ) }
    dend_26 { pt3dadd( -29.297, -37.1818, -16.6668, 0.07 ) }
    dend_26 { pt3dadd( -29.8151, -37.4079, -16.8949, 0.07 ) }
    dend_26 { pt3dadd( -30.3804, -37.6413, -17.1316, 1.54 ) }
    dend_26 { pt3dadd( -31.3929, -38.0164, -17.52, 0.07 ) }
    dend_26 { pt3dadd( -32.018, -38.2216, -17.7551, 0.07 ) }
    dend_26 { pt3dadd( -32.7187, -38.4348, -17.99, 0.07 ) }
    dend_26 { pt3dadd( -33.2386, -38.5957, -18.1316, 0.07 ) }
    dend_26 { pt3dadd( -33.8558, -38.7795, -18.2645, 1.18 ) }
    dend_26 { pt3dadd( -34.5141, -38.9614, -18.3863, 0.07 ) }
    dend_26 { pt3dadd( -35.104, -39.1276, -18.471, 0.07 ) }
    dend_26 { pt3dadd( -36.0314, -39.4347, -18.5345, 0.07 ) }
    dend_26 { pt3dadd( -36.7329, -39.7164, -18.544, 1.18 ) }
    dend_26 { pt3dadd( -37.54, -40.1029, -18.5286, 0.07 ) }
    dend_26 { pt3dadd( -37.9562, -40.3273, -18.5095, 0.07 ) }
    dend_26 { pt3dadd( -38.9467, -40.8969, -18.4401, 0.07 ) }
    dend_26 { pt3dadd( -40.5307, -41.8196, -18.3005, 3.01 ) }
    dend_26 { pt3dadd( -42.2913, -42.8404, -18.1315, 0.07 ) }
    dend_26 { pt3dadd( -43.1518, -43.3348, -18.058, 0.07 ) }
    dend_26 { pt3dadd( -43.5894, -43.5873, -18.03, 0.07 ) }
    dend_26 { pt3dadd( -44.0642, -43.8493, -18.0123, 0.73 ) }
    dend_26 { pt3dadd( -44.7634, -44.1951, -18.0343, 0.07 ) }
    dend_26 { pt3dadd( -45.089, -44.3257, -18.0941, 0.81 ) }
    dend_26 { pt3dadd( -45.9278, -44.5923, -18.3283, 0.07 ) }
    dend_26 { pt3dadd( -46.402, -44.7255, -18.4916, 0.29 ) }
    dend_26 { pt3dadd( -46.8637, -44.8531, -18.6735, 0.07 ) }
    dend_26 { pt3dadd( -47.4279, -45.007, -18.9096, 0.95 ) }
    dend_26 { pt3dadd( -48.3073, -45.2459, -19.3424, 0.07 ) }
    dend_26 { pt3dadd( -48.8142, -45.3888, -19.6164, 0.07 ) }
    dend_26 { pt3dadd( -49.1019, -45.4778, -19.7658, 0.81 ) }
    dend_26 { pt3dadd( -49.8413, -45.7095, -20.147, 0.07 ) }
    dend_26 { pt3dadd( -50.2529, -45.8382, -20.36, 1.1 ) }
    dend_26 { pt3dadd( -51.3867, -46.2072, -20.9474, 0.07 ) }
    dend_26 { pt3dadd( -51.9591, -46.424, -21.2607, 0.07 ) }
    dend_26 { pt3dadd( -52.9759, -46.8419, -21.8607, 2.13 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 77/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -1.67923, -40.7639, 6.87614, 0.88 ) }
    dend_21 { pt3dadd( -1.07761, -41.7917, 6.87099, 0.88 ) }
    dend_21 { pt3dadd( -0.786239, -42.2907, 6.87361, 0.81 ) }
    dend_21 { pt3dadd( -0.264129, -43.1831, 6.87667, 0.66 ) }
    dend_21 { pt3dadd( 0.216785, -44.0048, 6.87484, 0.51 ) }
    dend_21 { pt3dadd( 0.600876, -44.6818, 6.85196, 0.44 ) }
    dend_21 { pt3dadd( 0.902332, -45.2397, 6.80944, 0.07 ) }
    dend_21 { pt3dadd( 1.08487, -45.6155, 6.76598, 0.07 ) }
    dend_21 { pt3dadd( 1.19817, -45.8814, 6.72028, 1.18 ) }
    dend_21 { pt3dadd( 1.45241, -46.5144, 6.56854, 1.4 ) }
    dend_21 { pt3dadd( 1.87647, -47.5097, 6.28766, 0.37 ) }
    dend_21 { pt3dadd( 2.27367, -48.365, 6.03569, 0.44 ) }
    dend_21 { pt3dadd( 2.51795, -48.8829, 5.8894, 0.73 ) }
    dend_21 { pt3dadd( 2.61303, -49.0881, 5.83834, 0.95 ) }
    dend_21 { pt3dadd( 2.9592, -49.8415, 5.68682, 0.51 ) }
    dend_21 { pt3dadd( 3.50452, -51.0068, 5.52299, 0.22 ) }
    dend_21 { pt3dadd( 3.98966, -52.0009, 5.45401, 0.29 ) }
    dend_21 { pt3dadd( 4.27337, -52.571, 5.44672, 0.29 ) }
    dend_21 { pt3dadd( 4.49666, -53.0259, 5.45986, 0.29 ) }
    dend_21 { pt3dadd( 4.68736, -53.4577, 5.48087, 0.29 ) }
    dend_21 { pt3dadd( 4.83493, -53.8424, 5.50949, 0.44 ) }
    dend_21 { pt3dadd( 5.02033, -54.3948, 5.57469, 1.4 ) }
    dend_21 { pt3dadd( 5.2249, -55.0448, 5.66397, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_21 { pt3dadd( 5.40421, -55.5959, 5.72875, 0.51 ) }
    dend_21 { pt3dadd( 5.55133, -56.0189, 5.76399, 1.03 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -1.67923, -40.7639, 6.87614, 1.47 ) }
    dend_20 { pt3dadd( -1.75671, -42.426, 7.79435, 1.47 ) }
    dend_20 { pt3dadd( -1.83343, -43.3116, 8.29236, 1.4 ) }
    dend_20 { pt3dadd( -1.98603, -44.401, 8.9167, 0.66 ) }
    dend_20 { pt3dadd( -2.17561, -45.3425, 9.452, 0.73 ) }
    dend_20 { pt3dadd( -2.29269, -45.9344, 9.78296, 1.1 ) }
    dend_20 { pt3dadd( -2.46146, -46.8187, 10.2439, 1.32 ) }
    dend_20 { pt3dadd( -2.65242, -48.0578, 10.8665, 0.51 ) }
    dend_20 { pt3dadd( -2.77704, -48.7608, 11.2068, 1.32 ) }
    dend_20 { pt3dadd( -3.04813, -49.881, 11.7503, 0.73 ) }
    dend_20 { pt3dadd( -3.34824, -50.8441, 12.2014, 0.29 ) }
    dend_20 { pt3dadd( -3.74088, -51.9401, 12.7032, 0.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 14/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -16.4265, 6.45376, -2.13232, 0.95 ) }
    dend_12 { pt3dadd( -17.0755, 6.26621, -2.10005, 0.95 ) }
    dend_12 { pt3dadd( -18.1397, 5.90356, -2.13638, 1.1 ) }
    dend_12 { pt3dadd( -18.8229, 5.65764, -2.20045, 0.88 ) }
    dend_12 { pt3dadd( -20.354, 5.13871, -2.4026, 0.37 ) }
    dend_12 { pt3dadd( -21.4188, 4.82497, -2.55565, 0.44 ) }
    dend_12 { pt3dadd( -22.663, 4.49308, -2.72716, 0.66 ) }
    dend_12 { pt3dadd( -23.6978, 4.20864, -2.89908, 0.73 ) }
    dend_12 { pt3dadd( -24.5709, 3.94781, -3.05416, 0.66 ) }
    dend_12 { pt3dadd( -25.6242, 3.61407, -3.2019, 0.66 ) }
    dend_12 { pt3dadd( -26.7328, 3.23103, -3.29171, 0.51 ) }
    dend_12 { pt3dadd( -27.8719, 2.82612, -3.31958, 1.18 ) }
    dend_12 { pt3dadd( -29.1963, 2.30701, -3.29039, 1.91 ) }
    dend_12 { pt3dadd( -30.547, 1.6988, -3.21896, 1.4 ) }
    dend_12 { pt3dadd( -32.4808, 0.740233, -3.10647, 0.51 ) }
    dend_12 { pt3dadd( -33.491, 0.207452, -3.06249, 0.95 ) }
    dend_12 { pt3dadd( -34.211, -0.177506, -3.05477, 1.18 ) }
    dend_12 { pt3dadd( -35.2963, -0.708782, -3.08102, 0.73 ) }
    dend_12 { pt3dadd( -36.3194, -1.11591, -3.14278, 0.37 ) }
    dend_12 { pt3dadd( -37.0835, -1.33509, -3.22321, 0.37 ) }
    dend_12 { pt3dadd( -37.9891, -1.48399, -3.35963, 1.1 ) }
    dend_12 { pt3dadd( -38.7676, -1.55588, -3.48247, 1.25 ) }
    dend_12 { pt3dadd( -39.6476, -1.60928, -3.6089, 1.62 ) }
    dend_12 { pt3dadd( -40.9045, -1.65117, -3.75686, 0.81 ) }
    dend_12 { pt3dadd( -41.9842, -1.71151, -3.85739, 0.51 ) }
    dend_12 { pt3dadd( -43.1328, -1.8654, -3.96231, 0.51 ) }
    dend_12 { pt3dadd( -44.3717, -2.10643, -4.0864, 0.59 ) }
    dend_12 { pt3dadd( -45.4019, -2.37193, -4.21023, 1.32 ) }
    dend_12 { pt3dadd( -46.0753, -2.60053, -4.30391, 1.98 ) }
    dend_12 { pt3dadd( -47.4805, -3.20413, -4.53399, 1.76 ) }
    dend_12 { pt3dadd( -49.4435, -4.24687, -4.89561, 0.22 ) }
    dend_12 { pt3dadd( -50.4657, -4.89396, -5.09029, 0.22 ) }
    dend_12 { pt3dadd( -51.0405, -5.31086, -5.2032, 0.95 ) }
    dend_12 { pt3dadd( -51.7268, -5.85578, -5.33156, 0.88 ) }
    dend_12 { pt3dadd( -52.3828, -6.42179, -5.43823, 0.44 ) }
    dend_12 { pt3dadd( -53.0514, -7.01281, -5.53029, 0.66 ) }
    dend_12 { pt3dadd( -54.3194, -8.12684, -5.65603, 1.91 ) }
    dend_12 { pt3dadd( -54.8626, -8.57079, -5.70669, 1.98 ) }
    dend_12 { pt3dadd( -56.364, -9.64265, -5.84115, 0.22 ) }
    dend_12 { pt3dadd( -57.5492, -10.3731, -5.94692, 0.22 ) }
    dend_12 { pt3dadd( -58.3326, -10.826, -6.01094, 0.51 ) }
    dend_12 { pt3dadd( -59.3821, -11.4049, -6.08983, 1.84 ) }
    dend_12 { pt3dadd( -60.1936, -11.8343, -6.14134, 1.91 ) }
    dend_12 { pt3dadd( -61.1919, -12.35, -6.15437, 1.54 ) }
    dend_12 { pt3dadd( -62.9197, -13.2112, -6.09605, 0.37 ) }
    dend_12 { pt3dadd( -64.0419, -13.7674, -6.02813, 0.37 ) }
    dend_12 { pt3dadd( -64.857, -14.1978, -5.95105, 0.88 ) }
    dend_12 { pt3dadd( -65.4375, -14.5327, -5.87283, 1.1 ) }
    dend_12 { pt3dadd( -66.847, -15.4401, -5.61074, 0.15 ) }
    dend_12 { pt3dadd( -67.9533, -16.1851, -5.37504, 0.15 ) }
    dend_12 { pt3dadd( -68.8448, -16.782, -5.17363, 1.69 ) }
    dend_12 { pt3dadd( -69.5333, -17.2205, -5.02239, 1.54 ) }
    dend_12 { pt3dadd( -71.088, -18.1909, -4.72442, 0.15 ) }
    dend_12 { pt3dadd( -71.7445, -18.614, -4.61197, 0.15 ) }
    dend_12 { pt3dadd( -72.7816, -19.3214, -4.50093, 0.15 ) }
    dend_12 { pt3dadd( -73.6594, -19.9615, -4.43142, 1.32 ) }
    dend_12 { pt3dadd( -74.3795, -20.5006, -4.40172, 1.32 ) }
    dend_12 { pt3dadd( -75.0337, -21.0148, -4.41248, 1.47 ) }
    dend_12 { pt3dadd( -75.4928, -21.4185, -4.45378, 1.47 ) }
    dend_12 { pt3dadd( -76.5181, -22.4509, -4.55736, 0.15 ) }
    dend_12 { pt3dadd( -76.9698, -22.9727, -4.60781, 0.15 ) }
    dend_12 { pt3dadd( -77.3505, -23.4191, -4.66064, 0.81 ) }
    dend_12 { pt3dadd( -77.8447, -23.9713, -4.72786, 1.18 ) }
    dend_12 { pt3dadd( -78.7139, -24.8523, -4.82025, 0.07 ) }
    dend_12 { pt3dadd( -79.5249, -25.6138, -4.87545, 0.07 ) }
    dend_12 { pt3dadd( -79.9736, -26.0072, -4.88358, 1.1 ) }
    dend_12 { pt3dadd( -80.6993, -26.6127, -4.90217, 1.54 ) }
    dend_12 { pt3dadd( -81.6349, -27.3402, -4.93168, 1.4 ) }
    dend_12 { pt3dadd( -83.2239, -28.5011, -4.97835, 0.44 ) }
    dend_12 { pt3dadd( -84.1238, -29.1316, -4.99926, 0.07 ) }
    dend_12 { pt3dadd( -85.6364, -30.1788, -5.01461, 0.07 ) }
    dend_12 { pt3dadd( -86.624, -30.8574, -5.00573, 1.18 ) }
    dend_12 { pt3dadd( -87.7119, -31.5994, -4.97709, 2.28 ) }
    dend_12 { pt3dadd( -89.0503, -32.4613, -4.93711, 0.59 ) }
    dend_12 { pt3dadd( -90.2488, -33.1957, -4.88861, 0.29 ) }
    dend_12 { pt3dadd( -91.372, -33.8649, -4.79313, 0.29 ) }
    dend_12 { pt3dadd( -92.9642, -34.8345, -4.57311, 0.07 ) }
    dend_12 { pt3dadd( -94.2208, -35.622, -4.34056, 1.69 ) }
    dend_12 { pt3dadd( -94.9621, -36.1058, -4.18065, 1.76 ) }
    dend_12 { pt3dadd( -96.4611, -37.1037, -3.85232, 0.07 ) }
    dend_12 { pt3dadd( -97.7709, -37.9845, -3.56694, 0.15 ) }
    dend_12 { pt3dadd( -98.4126, -38.4243, -3.44261, 0.15 ) }
    dend_12 { pt3dadd( -99.4986, -39.1885, -3.26582, 1.32 ) }
    dend_12 { pt3dadd( -100.525, -39.9062, -3.14598, 1.32 ) }
    dend_12 { pt3dadd( -101.756, -40.7422, -3.05554, 0.07 ) }
    dend_12 { pt3dadd( -103.042, -41.5752, -3.02077, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_12 { pt3dadd( -104.231, -42.2766, -3.00716, 1.84 ) }
    dend_12 { pt3dadd( -105.145, -42.7605, -2.98719, 1.84 ) }
    dend_12 { pt3dadd( -106.576, -43.4446, -2.93481, 0.07 ) }
    dend_12 { pt3dadd( -107.649, -43.9144, -2.89845, 0.37 ) }
    dend_12 { pt3dadd( -109.132, -44.5019, -2.84195, 0.07 ) }
    dend_12 { pt3dadd( -110.762, -45.0928, -2.77967, 1.91 ) }
    dend_12 { pt3dadd( -111.419, -45.3207, -2.74899, 1.91 ) }
    dend_12 { pt3dadd( -112.891, -45.8447, -2.68334, 0.51 ) }
    dend_12 { pt3dadd( -114.106, -46.2855, -2.64617, 0.15 ) }
    dend_12 { pt3dadd( -114.951, -46.6118, -2.62624, 0.15 ) }
    dend_12 { pt3dadd( -115.645, -46.9, -2.61588, 0.44 ) }
    dend_12 { pt3dadd( -116.734, -47.4124, -2.6258, 0.07 ) }
    dend_12 { pt3dadd( -117.67, -47.8772, -2.63477, 1.03 ) }
    dend_12 { pt3dadd( -118.215, -48.167, -2.64181, 1.25 ) }
    dend_12 { pt3dadd( -119.418, -48.8697, -2.65591, 0.59 ) }
    dend_12 { pt3dadd( -120.507, -49.5492, -2.68493, 1.03 ) }
    dend_12 { pt3dadd( -121.272, -50.0199, -2.71282, 1.54 ) }
    dend_12 { pt3dadd( -122.721, -50.9097, -2.79149, 0.07 ) }
    dend_12 { pt3dadd( -123.508, -51.3997, -2.83084, 0.07 ) }
    dend_12 { pt3dadd( -124.64, -52.1158, -2.89106, 0.07 ) }
    dend_12 { pt3dadd( -124.953, -52.3094, -2.90596, 1.1 ) }
    dend_12 { pt3dadd( -125.788, -52.8097, -2.94485, 1.32 ) }
    dend_12 { pt3dadd( -126.814, -53.4181, -2.99902, 0.07 ) }
    dend_12 { pt3dadd( -127.659, -53.9156, -3.04583, 0.07 ) }
    dend_12 { pt3dadd( -128.585, -54.4533, -3.12182, 1.32 ) }
    dend_12 { pt3dadd( -129.294, -54.8847, -3.19881, 1.32 ) }
    dend_12 { pt3dadd( -130.872, -55.9551, -3.43821, 0.07 ) }
    dend_12 { pt3dadd( -131.236, -56.2316, -3.49581, 0.51 ) }
    dend_12 { pt3dadd( -132.195, -57.0103, -3.63851, 0.07 ) }
    dend_12 { pt3dadd( -132.733, -57.4904, -3.72468, 0.95 ) }
    dend_12 { pt3dadd( -133.265, -58.0477, -3.79656, 1.32 ) }
    dend_12 { pt3dadd( -134.408, -59.4009, -3.91583, 0.07 ) }
    dend_12 { pt3dadd( -135.193, -60.4486, -3.93478, 1.62 ) }
    dend_12 { pt3dadd( -135.645, -61.0788, -3.91641, 2.06 ) }
    dend_12 { pt3dadd( -135.968, -61.5462, -3.86172, 1.91 ) }
    dend_12 { pt3dadd( -136.757, -62.6695, -3.6266, 0.73 ) }
    dend_12 { pt3dadd( -137.248, -63.3557, -3.41687, 0.07 ) }
    dend_12 { pt3dadd( -137.909, -64.2841, -3.02435, 0.73 ) }
    dend_12 { pt3dadd( -138.727, -65.3921, -2.51916, 0.07 ) }
    dend_12 { pt3dadd( -139.585, -66.5151, -1.99045, 1.54 ) }
    dend_12 { pt3dadd( -140.523, -67.6666, -1.41799, 0.07 ) }
    dend_12 { pt3dadd( -141.353, -68.6035, -0.939543, 0.07 ) }
    dend_12 { pt3dadd( -142.169, -69.4701, -0.479786, 0.07 ) }
    dend_12 { pt3dadd( -142.823, -70.097, -0.133964, 1.69 ) }
    dend_12 { pt3dadd( -143.64, -70.7975, 0.273102, 1.91 ) }
    dend_12 { pt3dadd( -144.94, -71.8118, 0.849233, 0.07 ) }
    dend_12 { pt3dadd( -145.701, -72.334, 1.15791, 0.37 ) }
    dend_12 { pt3dadd( -146.929, -73.0772, 1.59551, 0.15 ) }
    dend_12 { pt3dadd( -147.726, -73.4964, 1.83804, 0.15 ) }
    dend_12 { pt3dadd( -148.802, -74.0129, 2.15018, 1.69 ) }
    dend_12 { pt3dadd( -149.819, -74.4489, 2.4076, 0.88 ) }
    dend_12 { pt3dadd( -151.177, -75.0101, 2.62187, 0.07 ) }
    dend_12 { pt3dadd( -151.852, -75.2871, 2.67582, 0.44 ) }
    dend_12 { pt3dadd( -153.159, -75.8183, 2.65991, 0.07 ) }
    dend_12 { pt3dadd( -153.652, -76.0157, 2.62647, 0.73 ) }
    dend_12 { pt3dadd( -154.245, -76.2307, 2.55611, 1.03 ) }
    dend_12 { pt3dadd( -155.79, -76.7424, 2.34863, 0.07 ) }
    dend_12 { pt3dadd( -156.581, -77.0117, 2.23328, 0.81 ) }
    dend_12 { pt3dadd( -157.484, -77.3554, 2.08799, 0.07 ) }
    dend_12 { pt3dadd( -158.556, -77.8304, 1.91061, 0.07 ) }
    dend_12 { pt3dadd( -159.682, -78.4092, 1.7159, 1.84 ) }
    dend_12 { pt3dadd( -160.023, -78.6133, 1.656, 1.84 ) }
    dend_12 { pt3dadd( -161.452, -79.5915, 1.41315, 0.07 ) }
    dend_12 { pt3dadd( -162.262, -80.2435, 1.27869, 0.37 ) }
    dend_12 { pt3dadd( -162.956, -80.8976, 1.17632, 0.07 ) }
    dend_12 { pt3dadd( -163.763, -81.7057, 1.05732, 1.32 ) }
    dend_12 { pt3dadd( -164.224, -82.2015, 1.00639, 1.03 ) }
    dend_12 { pt3dadd( -164.989, -83.0204, 0.944443, 0.22 ) }
    dend_12 { pt3dadd( -165.956, -83.9996, 0.891718, 0.07 ) }
    dend_12 { pt3dadd( -166.766, -84.7612, 0.85243, 0.81 ) }
    dend_12 { pt3dadd( -167.671, -85.5994, 0.813146, 1.25 ) }
    dend_12 { pt3dadd( -168.597, -86.436, 0.774386, 1.25 ) }
    dend_12 { pt3dadd( -170.092, -87.7509, 0.712813, 0.07 ) }
    dend_12 { pt3dadd( -171.565, -89.0053, 0.659784, 0.07 ) }
    dend_12 { pt3dadd( -172.422, -89.6995, 0.626429, 1.69 ) }
    dend_12 { pt3dadd( -173.161, -90.2712, 0.608135, 1.69 ) }
    dend_12 { pt3dadd( -174.251, -91.0887, 0.605339, 0.07 ) }
    dend_12 { pt3dadd( -174.971, -91.5688, 0.602313, 0.95 ) }
    dend_12 { pt3dadd( -175.839, -92.1081, 0.612258, 0.15 ) }
    dend_12 { pt3dadd( -176.065, -92.2425, 0.618602, 0.51 ) }
    dend_12 { pt3dadd( -176.963, -92.7733, 0.62289, 0.07 ) }
    dend_12 { pt3dadd( -177.604, -93.1673, 0.581196, 0.07 ) }
    dend_12 { pt3dadd( -178.273, -93.6022, 0.502076, 1.1 ) }
    dend_12 { pt3dadd( -178.87, -94.014, 0.412225, 1.47 ) }
    dend_12 { pt3dadd( -179.529, -94.5087, 0.30536, 1.32 ) }
    dend_12 { pt3dadd( -180.499, -95.3014, 0.132161, 0.07 ) }
    dend_12 { pt3dadd( -181.31, -96.0091, -0.0132017, 0.07 ) }
    dend_12 { pt3dadd( -182.423, -97.0294, -0.182872, 0.07 ) }
    dend_12 { pt3dadd( -182.897, -97.4828, -0.235862, 1.25 ) }
    dend_12 { pt3dadd( -183.626, -98.2106, -0.285603, 1.76 ) }
    dend_12 { pt3dadd( -184.72, -99.3035, -0.333179, 0.07 ) }
    dend_12 { pt3dadd( -185.286, -99.8741, -0.329816, 0.44 ) }
    dend_12 { pt3dadd( -186.121, -100.693, -0.266523, 0.07 ) }
    dend_12 { pt3dadd( -187.064, -101.542, -0.153729, 1.03 ) }
    dend_12 { pt3dadd( -188.147, -102.391, -0.00936574, 0.07 ) }
    dend_12 { pt3dadd( -188.946, -102.919, 0.139614, 0.51 ) }
    dend_12 { pt3dadd( -189.584, -103.287, 0.289969, 0.07 ) }
    dend_12 { pt3dadd( -191.05, -104.016, 0.643589, 0.07 ) }
    dend_12 { pt3dadd( -192.224, -104.516, 0.920974, 1.47 ) }
    dend_12 { pt3dadd( -194.024, -105.135, 1.29391, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_12 { pt3dadd( -195.303, -105.496, 1.5196, 1.4 ) }
    dend_12 { pt3dadd( -196.042, -105.679, 1.63863, 1.62 ) }
    dend_12 { pt3dadd( -197.43, -105.979, 1.79207, 0.07 ) }
    dend_12 { pt3dadd( -198.375, -106.163, 1.83309, 0.95 ) }
    dend_12 { pt3dadd( -199.966, -106.457, 1.81777, 0.07 ) }
    dend_12 { pt3dadd( -201.297, -106.643, 1.76798, 0.07 ) }
    dend_12 { pt3dadd( -202.389, -106.792, 1.70039, 1.47 ) }
    dend_12 { pt3dadd( -203.455, -106.91, 1.63797, 1.32 ) }
    dend_12 { pt3dadd( -204.872, -107.045, 1.57238, 0.22 ) }
    dend_12 { pt3dadd( -206.34, -107.151, 1.5032, 0.22 ) }
    dend_12 { pt3dadd( -207.52, -107.215, 1.45262, 1.69 ) }
    dend_12 { pt3dadd( -208.64, -107.223, 1.35798, 0.07 ) }
    dend_12 { pt3dadd( -209.642, -107.172, 1.26206, 0.07 ) }
    dend_12 { pt3dadd( -210.28, -107.093, 1.21253, 0.51 ) }
    dend_12 { pt3dadd( -211.774, -106.844, 1.09758, 0.07 ) }
    dend_12 { pt3dadd( -212.045, -106.784, 1.07153, 0.59 ) }
    dend_12 { pt3dadd( -213.343, -106.436, 0.889797, 0.07 ) }
    dend_12 { pt3dadd( -214.39, -106.075, 0.709876, 1.18 ) }
    dend_12 { pt3dadd( -215.372, -105.683, 0.533155, 1.69 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 19/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -16.4265, 6.45376, -2.13232, 0.37 ) }
    dend_11 { pt3dadd( -16.8207, 6.97299, -2.3292, 0.37 ) }
    dend_11 { pt3dadd( -17.175, 7.43664, -2.51933, 0.37 ) }
    dend_11 { pt3dadd( -17.663, 8.05235, -2.81739, 0.73 ) }
    dend_11 { pt3dadd( -18.1118, 8.6043, -3.12059, 1.03 ) }
    dend_11 { pt3dadd( -18.3866, 8.93591, -3.31688, 1.1 ) }
    dend_11 { pt3dadd( -18.7044, 9.32261, -3.55176, 0.95 ) }
    dend_11 { pt3dadd( -19.1378, 9.83931, -3.888, 0.95 ) }
    dend_11 { pt3dadd( -19.8077, 10.6481, -4.42422, 1.25 ) }
    dend_11 { pt3dadd( -20.3791, 11.3498, -4.88001, 1.62 ) }
    dend_11 { pt3dadd( -21.0337, 12.1597, -5.38019, 1.76 ) }
    dend_11 { pt3dadd( -21.5585, 12.8043, -5.74994, 1.32 ) }
    dend_11 { pt3dadd( -22.4083, 13.8894, -6.28125, 0.95 ) }
    dend_11 { pt3dadd( -22.7483, 14.3542, -6.46556, 0.95 ) }
    dend_11 { pt3dadd( -23.1579, 14.9462, -6.63312, 0.95 ) }
    dend_11 { pt3dadd( -23.5045, 15.4718, -6.73829, 0.88 ) }
    dend_11 { pt3dadd( -23.9654, 16.1948, -6.83397, 0.73 ) }
    dend_11 { pt3dadd( -24.8033, 17.5396, -6.95041, 0.22 ) }
    dend_11 { pt3dadd( -25.3639, 18.4878, -6.98364, 0.51 ) }
    dend_11 { pt3dadd( -25.8998, 19.445, -7.00452, 1.76 ) }
    dend_11 { pt3dadd( -26.1561, 19.9226, -7.00628, 1.47 ) }
    dend_11 { pt3dadd( -26.7679, 21.1092, -6.99934, 0.29 ) }
    dend_11 { pt3dadd( -26.9579, 21.4942, -6.9961, 0.07 ) }
    dend_11 { pt3dadd( -27.4969, 22.5602, -6.98737, 0.95 ) }
    dend_11 { pt3dadd( -27.8966, 23.3125, -6.99497, 1.62 ) }
    dend_11 { pt3dadd( -28.3795, 24.1637, -7.02706, 1.62 ) }
    dend_11 { pt3dadd( -28.895, 24.9968, -7.076, 0.95 ) }
    dend_11 { pt3dadd( -29.5555, 26.0182, -7.16328, 0.44 ) }
    dend_11 { pt3dadd( -30.0139, 26.7056, -7.24038, 0.44 ) }
    dend_11 { pt3dadd( -30.5866, 27.5374, -7.35962, 1.25 ) }
    dend_11 { pt3dadd( -31.067, 28.2284, -7.4722, 1.69 ) }
    dend_11 { pt3dadd( -31.534, 28.9093, -7.5946, 0.95 ) }
    dend_11 { pt3dadd( -32.2314, 29.9726, -7.78672, 0.37 ) }
    dend_11 { pt3dadd( -32.5927, 30.5936, -7.90222, 0.07 ) }
    dend_11 { pt3dadd( -32.8965, 31.2321, -8.02084, 1.03 ) }
    dend_11 { pt3dadd( -33.2008, 32.0707, -8.16909, 0.59 ) }
    dend_11 { pt3dadd( -33.4771, 33.1114, -8.35956, 0.59 ) }
    dend_11 { pt3dadd( -33.6641, 34.0451, -8.5455, 0.44 ) }
    dend_11 { pt3dadd( -33.8179, 35.0297, -8.78613, 2.28 ) }
    dend_11 { pt3dadd( -33.9154, 35.8771, -9.04169, 2.28 ) }
    dend_11 { pt3dadd( -33.955, 36.9024, -9.43917, 1.03 ) }
    dend_11 { pt3dadd( -33.9074, 37.9611, -9.93812, 1.1 ) }
    dend_11 { pt3dadd( -33.8236, 38.5669, -10.2799, 0.81 ) }
    dend_11 { pt3dadd( -33.6678, 39.2701, -10.7379, 0.81 ) }
    dend_11 { pt3dadd( -33.4936, 39.8557, -11.1631, 0.81 ) }
    dend_11 { pt3dadd( -33.0293, 41.0746, -12.1587, 0.59 ) }
    dend_11 { pt3dadd( -32.7912, 41.6299, -12.6456, 0.59 ) }
    dend_11 { pt3dadd( -32.51, 42.2371, -13.1931, 1.32 ) }
    dend_11 { pt3dadd( -32.1368, 43.0629, -13.9123, 2.28 ) }
    dend_11 { pt3dadd( -32.0262, 43.3316, -14.1299, 2.28 ) }
    dend_11 { pt3dadd( -31.7359, 44.1879, -14.7726, 1.4 ) }
    dend_11 { pt3dadd( -31.4678, 45.2506, -15.5235, 0.37 ) }
    dend_11 { pt3dadd( -31.3965, 45.6865, -15.8165, 0.37 ) }
    dend_11 { pt3dadd( -31.3665, 46.1943, -16.1371, 1.18 ) }
    dend_11 { pt3dadd( -31.3699, 46.7605, -16.4698, 1.18 ) }
    dend_11 { pt3dadd( -31.3896, 47.3299, -16.7806, 1.4 ) }
    dend_11 { pt3dadd( -31.4126, 47.7549, -16.9977, 1.47 ) }
    dend_11 { pt3dadd( -31.4271, 48.2579, -17.2564, 1.1 ) }
    dend_11 { pt3dadd( -31.4449, 49.1202, -17.7162, 0.15 ) }
    dend_11 { pt3dadd( -31.4659, 49.826, -18.1026, 0.15 ) }
    dend_11 { pt3dadd( -31.5008, 50.6603, -18.5559, 1.69 ) }
    dend_11 { pt3dadd( -31.5258, 51.191, -18.835, 1.76 ) }
    dend_11 { pt3dadd( -31.5687, 52.2418, -19.3275, 0.22 ) }
    dend_11 { pt3dadd( -31.5719, 52.9267, -19.6111, 0.29 ) }
    dend_11 { pt3dadd( -31.5624, 53.6, -19.8525, 0.29 ) }
    dend_11 { pt3dadd( -31.5325, 54.3487, -20.0709, 0.37 ) }
    dend_11 { pt3dadd( -31.4726, 55.1654, -20.2477, 1.18 ) }
    dend_11 { pt3dadd( -31.3505, 56.1154, -20.3752, 0.22 ) }
    dend_11 { pt3dadd( -31.1408, 57.2782, -20.4634, 0.22 ) }
    dend_11 { pt3dadd( -31.0403, 57.7203, -20.4863, 0.22 ) }
    dend_11 { pt3dadd( -30.8292, 58.5204, -20.5217, 1.62 ) }
    dend_11 { pt3dadd( -30.6919, 59.0144, -20.535, 2.42 ) }
    dend_11 { pt3dadd( -30.2103, 60.7576, -20.5552, 0.22 ) }
    dend_11 { pt3dadd( -30.0535, 61.3618, -20.5636, 0.22 ) }
    dend_11 { pt3dadd( -29.9441, 61.8266, -20.567, 0.95 ) }
    dend_11 { pt3dadd( -29.8543, 62.2185, -20.5787, 0.95 ) }
    dend_11 { pt3dadd( -29.6154, 63.3253, -20.6437, 0.15 ) }
    dend_11 { pt3dadd( -29.3797, 64.472, -20.7092, 0.15 ) }
    dend_11 { pt3dadd( -29.266, 65.1047, -20.7508, 0.15 ) }
    dend_11 { pt3dadd( -29.1268, 65.9906, -20.8174, 0.15 ) }
    dend_11 { pt3dadd( -29.0084, 66.8612, -20.8934, 2.5 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_11 { pt3dadd( -28.9299, 67.5107, -20.9672, 3.16 ) }
    dend_11 { pt3dadd( -28.8605, 68.173, -21.0658, 3.16 ) }
    dend_11 { pt3dadd( -28.7017, 70.0539, -21.3865, 0.73 ) }
    dend_11 { pt3dadd( -28.5998, 71.6731, -21.6789, 0.59 ) }
    dend_11 { pt3dadd( -28.5692, 72.556, -21.8529, 0.22 ) }
    dend_11 { pt3dadd( -28.5713, 73.4478, -22.0577, 0.07 ) }
    dend_11 { pt3dadd( -28.5943, 74.2671, -22.2768, 1.1 ) }
    dend_11 { pt3dadd( -28.6236, 74.7625, -22.4277, 1.1 ) }
    dend_11 { pt3dadd( -28.6747, 75.2458, -22.5872, 1.1 ) }
    dend_11 { pt3dadd( -28.8356, 76.3877, -23.0092, 0.15 ) }
    dend_11 { pt3dadd( -29.0019, 77.4378, -23.3962, 0.15 ) }
    dend_11 { pt3dadd( -29.1262, 78.1075, -23.6365, 0.95 ) }
    dend_11 { pt3dadd( -29.2956, 78.9876, -23.9355, 1.62 ) }
    dend_11 { pt3dadd( -29.4556, 79.8357, -24.2016, 1.62 ) }
    dend_11 { pt3dadd( -29.6687, 80.9065, -24.5053, 0.07 ) }
    dend_11 { pt3dadd( -29.8075, 81.5533, -24.6633, 0.95 ) }
    dend_11 { pt3dadd( -29.8934, 81.9434, -24.7398, 0.95 ) }
    dend_11 { pt3dadd( -30.1266, 82.9868, -24.9178, 0.07 ) }
    dend_11 { pt3dadd( -30.3958, 84.2223, -25.0999, 0.07 ) }
    dend_11 { pt3dadd( -30.4932, 84.6685, -25.1542, 1.18 ) }
    dend_11 { pt3dadd( -30.6325, 85.2723, -25.2268, 1.18 ) }
    dend_11 { pt3dadd( -30.9128, 86.4005, -25.3911, 0.15 ) }
    dend_11 { pt3dadd( -31.0679, 87.0175, -25.4879, 0.88 ) }
    dend_11 { pt3dadd( -31.1978, 87.505, -25.5695, 0.88 ) }
    dend_11 { pt3dadd( -31.2872, 87.822, -25.6316, 0.07 ) }
    dend_11 { pt3dadd( -31.5964, 88.9106, -25.862, 0.07 ) }
    dend_11 { pt3dadd( -31.7924, 89.6296, -26.0287, 1.18 ) }
    dend_11 { pt3dadd( -31.9353, 90.1673, -26.161, 1.62 ) }
    dend_11 { pt3dadd( -32.0474, 90.5945, -26.2735, 1.62 ) }
    dend_11 { pt3dadd( -32.5167, 92.3899, -26.7541, 0.07 ) }
    dend_11 { pt3dadd( -32.6943, 93.0883, -26.9444, 0.07 ) }
    dend_11 { pt3dadd( -32.8323, 93.6413, -27.1101, 1.18 ) }
    dend_11 { pt3dadd( -32.9649, 94.1844, -27.2878, 1.18 ) }
    dend_11 { pt3dadd( -33.1421, 94.9605, -27.5802, 0.15 ) }
    dend_11 { pt3dadd( -33.3443, 95.9245, -27.9835, 0.15 ) }
    dend_11 { pt3dadd( -33.4844, 96.6995, -28.3423, 1.69 ) }
    dend_11 { pt3dadd( -33.5889, 97.2899, -28.6415, 2.06 ) }
    dend_11 { pt3dadd( -33.6285, 97.5087, -28.7603, 2.06 ) }
    dend_11 { pt3dadd( -33.8505, 98.6943, -29.4557, 0.44 ) }
    dend_11 { pt3dadd( -34.0371, 99.6645, -30.0526, 0.59 ) }
    dend_11 { pt3dadd( -34.2262, 100.675, -30.7024, 0.22 ) }
    dend_11 { pt3dadd( -34.426, 101.769, -31.413, 0.59 ) }
    dend_11 { pt3dadd( -34.5052, 102.196, -31.6942, 0.22 ) }
    dend_11 { pt3dadd( -34.6339, 102.867, -32.151, 1.76 ) }
    dend_11 { pt3dadd( -34.7687, 103.54, -32.6078, 2.06 ) }
    dend_11 { pt3dadd( -35.0211, 104.887, -33.536, 0.22 ) }
    dend_11 { pt3dadd( -35.2114, 105.996, -34.2758, 0.66 ) }
    dend_11 { pt3dadd( -35.3055, 106.611, -34.6711, 0.66 ) }
    dend_11 { pt3dadd( -35.4405, 107.703, -35.3384, 1.91 ) }
    dend_11 { pt3dadd( -35.561, 108.788, -35.9576, 1.25 ) }
    dend_11 { pt3dadd( -35.6643, 109.734, -36.4674, 0.07 ) }
    dend_11 { pt3dadd( -35.7325, 110.418, -36.8082, 0.07 ) }
    dend_11 { pt3dadd( -35.8164, 111.411, -37.2438, 1.54 ) }
    dend_11 { pt3dadd( -35.8974, 112.443, -37.6405, 0.15 ) }
    dend_11 { pt3dadd( -36.0015, 113.548, -38.0231, 0.15 ) }
    dend_11 { pt3dadd( -36.0815, 114.243, -38.2568, 1.1 ) }
    dend_11 { pt3dadd( -36.2047, 115.118, -38.5357, 2.28 ) }
    dend_11 { pt3dadd( -36.4895, 116.79, -39.0662, 0.29 ) }
    dend_11 { pt3dadd( -36.6533, 117.665, -39.3283, 0.88 ) }
    dend_11 { pt3dadd( -36.8994, 118.915, -39.6976, 0.07 ) }
    dend_11 { pt3dadd( -37.0507, 119.767, -39.9557, 1.62 ) }
    dend_11 { pt3dadd( -37.1362, 120.322, -40.1227, 1.62 ) }
    dend_11 { pt3dadd( -37.1905, 120.878, -40.2918, 1.1 ) }
    dend_11 { pt3dadd( -37.2193, 122.156, -40.6993, 0.07 ) }
    dend_11 { pt3dadd( -37.1824, 122.702, -40.8742, 0.07 ) }
    dend_11 { pt3dadd( -37.055, 123.724, -41.2054, 1.54 ) }
    dend_11 { pt3dadd( -36.9533, 124.451, -41.4379, 2.13 ) }
    dend_11 { pt3dadd( -36.661, 126.413, -42.0749, 0.22 ) }
    dend_11 { pt3dadd( -36.5918, 126.862, -42.2267, 0.22 ) }
    dend_11 { pt3dadd( -36.4246, 128.03, -42.6368, 0.81 ) }
    dend_11 { pt3dadd( -36.3356, 128.804, -42.9047, 0.07 ) }
    dend_11 { pt3dadd( -36.2844, 129.509, -43.1437, 0.37 ) }
    dend_11 { pt3dadd( -36.2738, 130.045, -43.3522, 0.07 ) }
    dend_11 { pt3dadd( -36.2873, 130.474, -43.5323, 0.07 ) }
    dend_11 { pt3dadd( -36.3332, 131.231, -43.8519, 1.62 ) }
    dend_11 { pt3dadd( -36.3866, 131.928, -44.1552, 2.28 ) }
    dend_11 { pt3dadd( -36.4507, 132.721, -44.5183, 1.47 ) }
    dend_11 { pt3dadd( -36.5858, 134.094, -45.1743, 0.29 ) }
    dend_11 { pt3dadd( -36.6983, 134.902, -45.5613, 0.44 ) }
    dend_11 { pt3dadd( -36.8233, 135.553, -45.8629, 0.07 ) }
    dend_11 { pt3dadd( -37.0159, 136.324, -46.2118, 1.32 ) }
    dend_11 { pt3dadd( -37.4014, 137.635, -46.7728, 0.07 ) }
    dend_11 { pt3dadd( -37.6107, 138.228, -47.0027, 1.25 ) }
    dend_11 { pt3dadd( -37.8229, 138.747, -47.1752, 1.25 ) }
    dend_11 { pt3dadd( -38.2865, 139.797, -47.479, 0.22 ) }
    dend_11 { pt3dadd( -38.5925, 140.482, -47.6399, 0.51 ) }
    dend_11 { pt3dadd( -38.7558, 140.896, -47.716, 0.07 ) }
    dend_11 { pt3dadd( -38.9549, 141.554, -47.8137, 0.29 ) }
    dend_11 { pt3dadd( -39.0911, 142.258, -47.9248, 0.07 ) }
    dend_11 { pt3dadd( -39.1943, 143.496, -48.1665, 2.5 ) }
    dend_11 { pt3dadd( -39.1718, 144.232, -48.3664, 2.35 ) }
    dend_11 { pt3dadd( -39.0168, 145.556, -48.8065, 0.07 ) }
    dend_11 { pt3dadd( -38.8762, 146.301, -49.0876, 0.07 ) }
    dend_11 { pt3dadd( -38.7074, 146.908, -49.3498, 0.07 ) }
    dend_11 { pt3dadd( -38.458, 147.621, -49.6981, 1.62 ) }
    dend_11 { pt3dadd( -37.9835, 148.859, -50.3649, 0.07 ) }
    dend_11 { pt3dadd( -37.7924, 149.388, -50.6515, 0.37 ) }
    dend_11 { pt3dadd( -37.6941, 149.708, -50.8209, 0.37 ) }
    dend_11 { pt3dadd( -37.4926, 150.551, -51.2423, 0.07 ) }
    dend_11 { pt3dadd( -37.3787, 151.144, -51.5119, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_11 { pt3dadd( -37.1992, 152.231, -51.9572, 0.07 ) }
    dend_11 { pt3dadd( -37.1182, 152.884, -52.1999, 0.07 ) }
    dend_11 { pt3dadd( -37.0364, 153.972, -52.5983, 1.98 ) }
    dend_11 { pt3dadd( -36.9725, 155.445, -53.1278, 0.07 ) }
    dend_11 { pt3dadd( -36.9678, 156.238, -53.399, 0.07 ) }
    dend_11 { pt3dadd( -36.9932, 157.223, -53.7328, 1.4 ) }
    dend_11 { pt3dadd( -37.0789, 158.261, -54.0801, 0.07 ) }
    dend_11 { pt3dadd( -37.1979, 159.037, -54.3393, 0.22 ) }
    dend_11 { pt3dadd( -37.3559, 159.717, -54.5584, 0.07 ) }
    dend_11 { pt3dadd( -37.6374, 160.619, -54.8541, 1.76 ) }
    dend_11 { pt3dadd( -37.8249, 161.11, -55.0303, 1.76 ) }
    dend_11 { pt3dadd( -38.4219, 162.445, -55.5323, 0.07 ) }
    dend_11 { pt3dadd( -38.7794, 163.173, -55.8155, 1.1 ) }
    dend_11 { pt3dadd( -39.1772, 163.961, -56.1212, 0.07 ) }
    dend_11 { pt3dadd( -39.5254, 164.627, -56.385, 0.07 ) }
    dend_11 { pt3dadd( -39.832, 165.211, -56.6646, 0.95 ) }
    dend_11 { pt3dadd( -40.0727, 165.686, -56.9154, 0.95 ) }
    dend_11 { pt3dadd( -40.3644, 166.296, -57.3057, 0.07 ) }
    dend_11 { pt3dadd( -40.5943, 166.796, -57.658, 0.07 ) }
    dend_11 { pt3dadd( -40.8619, 167.397, -58.0899, 1.54 ) }
    dend_11 { pt3dadd( -41.4204, 168.621, -58.9574, 0.29 ) }
    dend_11 { pt3dadd( -41.5877, 168.98, -59.2017, 1.18 ) }
    dend_11 { pt3dadd( -42.0846, 170.045, -59.8954, 0.15 ) }
    dend_11 { pt3dadd( -42.4034, 170.676, -60.2946, 0.15 ) }
    dend_11 { pt3dadd( -42.8594, 171.498, -60.7994, 2.06 ) }
    dend_11 { pt3dadd( -43.4543, 172.54, -61.4271, 0.15 ) }
    dend_11 { pt3dadd( -43.7582, 173.074, -61.7461, 0.51 ) }
    dend_11 { pt3dadd( -44.1009, 173.658, -62.1382, 0.07 ) }
    dend_11 { pt3dadd( -44.5126, 174.379, -62.6508, 1.69 ) }
    dend_11 { pt3dadd( -45.0556, 175.339, -63.4453, 0.29 ) }
    dend_11 { pt3dadd( -45.4906, 176.127, -64.1807, 0.07 ) }
    dend_11 { pt3dadd( -45.8003, 176.697, -64.7313, 1.4 ) }
    dend_11 { pt3dadd( -46.2878, 177.541, -65.5505, 1.4 ) }
    dend_11 { pt3dadd( -46.5236, 177.922, -65.9122, 2.06 ) }
    dend_11 { pt3dadd( -47.2278, 179.057, -66.9049, 0.22 ) }
    dend_11 { pt3dadd( -47.5805, 179.585, -67.3251, 0.88 ) }
    dend_11 { pt3dadd( -48.0275, 180.197, -67.7587, 0.07 ) }
    dend_11 { pt3dadd( -48.6352, 180.942, -68.2183, 0.07 ) }
    dend_11 { pt3dadd( -49.1452, 181.521, -68.5287, 1.54 ) }
    dend_11 { pt3dadd( -49.3559, 181.754, -68.639, 1.69 ) }
    dend_11 { pt3dadd( -50.3548, 182.9, -69.0692, 0.07 ) }
    dend_11 { pt3dadd( -50.7641, 183.418, -69.2566, 0.07 ) }
    dend_11 { pt3dadd( -51.3792, 184.281, -69.5717, 0.07 ) }
    dend_11 { pt3dadd( -51.6614, 184.726, -69.7263, 0.07 ) }
    dend_11 { pt3dadd( -52.0024, 185.319, -69.9186, 1.18 ) }
    dend_11 { pt3dadd( -52.2757, 185.837, -70.0791, 1.84 ) }
    dend_11 { pt3dadd( -52.9142, 187.157, -70.4449, 0.07 ) }
    dend_11 { pt3dadd( -53.1602, 187.689, -70.6016, 0.07 ) }
    dend_11 { pt3dadd( -53.3755, 188.151, -70.7473, 1.32 ) }
    dend_11 { pt3dadd( -53.5643, 188.518, -70.8658, 1.32 ) }
    dend_11 { pt3dadd( -54.0964, 189.447, -71.1658, 0.15 ) }
    dend_11 { pt3dadd( -54.6248, 190.302, -71.4355, 0.15 ) }
    dend_11 { pt3dadd( -54.9887, 190.86, -71.6221, 0.15 ) }
    dend_11 { pt3dadd( -55.3789, 191.447, -71.8414, 0.95 ) }
    dend_11 { pt3dadd( -55.5331, 191.666, -71.9308, 1.25 ) }
    dend_11 { pt3dadd( -55.7888, 192.028, -72.077, 0.73 ) }
    dend_11 { pt3dadd( -56.2454, 192.699, -72.3348, 0.07 ) }
    dend_11 { pt3dadd( -56.7043, 193.471, -72.6049, 0.07 ) }
    dend_11 { pt3dadd( -57.0922, 194.206, -72.8228, 0.37 ) }
    dend_11 { pt3dadd( -57.3518, 194.757, -72.9598, 0.07 ) }
    dend_11 { pt3dadd( -57.7208, 195.58, -73.1503, 2.2 ) }
    dend_11 { pt3dadd( -57.9584, 196.173, -73.3048, 1.84 ) }
    dend_11 { pt3dadd( -58.4419, 197.615, -73.7023, 0.07 ) }
    dend_11 { pt3dadd( -58.7625, 198.728, -74.0405, 0.07 ) }
    dend_11 { pt3dadd( -58.9315, 199.422, -74.2838, 0.73 ) }
    dend_11 { pt3dadd( -59.0676, 200.062, -74.5368, 1.47 ) }
    dend_11 { pt3dadd( -59.3342, 201.461, -75.1555, 0.07 ) }
    dend_11 { pt3dadd( -59.4327, 201.961, -75.3986, 0.29 ) }
    dend_11 { pt3dadd( -59.5565, 202.574, -75.7206, 0.07 ) }
    dend_11 { pt3dadd( -59.6808, 203.184, -76.0582, 0.66 ) }
    dend_11 { pt3dadd( -59.8133, 203.828, -76.4169, 0.07 ) }
    dend_11 { pt3dadd( -59.9798, 204.548, -76.7851, 0.07 ) }
    dend_11 { pt3dadd( -60.2009, 205.313, -77.1369, 1.84 ) }
    dend_11 { pt3dadd( -60.327, 205.712, -77.3286, 1.84 ) }
    dend_11 { pt3dadd( -60.4038, 205.967, -77.4604, 1.84 ) }
    dend_11 { pt3dadd( -60.6765, 206.902, -78.0144, 0.07 ) }
    dend_11 { pt3dadd( -60.8307, 207.44, -78.3445, 0.07 ) }
    dend_11 { pt3dadd( -60.981, 207.99, -78.6946, 1.32 ) }
    dend_11 { pt3dadd( -61.188, 208.76, -79.1675, 0.07 ) }
    dend_11 { pt3dadd( -61.4552, 209.655, -79.6958, 1.1 ) }
    dend_11 { pt3dadd( -61.6962, 210.433, -80.1268, 0.07 ) }
    dend_11 { pt3dadd( -61.9595, 211.27, -80.5597, 1.4 ) }
    dend_11 { pt3dadd( -62.0391, 211.539, -80.69, 1.76 ) }
    dend_11 { pt3dadd( -62.3904, 212.78, -81.2227, 0.15 ) }
    dend_11 { pt3dadd( -62.5525, 213.351, -81.4211, 0.44 ) }
    dend_11 { pt3dadd( -62.7266, 213.961, -81.5892, 0.07 ) }
    dend_11 { pt3dadd( -62.9094, 214.64, -81.7527, 0.07 ) }
    dend_11 { pt3dadd( -63.1391, 215.518, -81.9528, 1.25 ) }
    dend_11 { pt3dadd( -63.225, 215.87, -82.0256, 1.76 ) }
    dend_11 { pt3dadd( -63.5235, 217.162, -82.2592, 0.07 ) }
    dend_11 { pt3dadd( -63.768, 218.182, -82.4243, 0.15 ) }
    dend_11 { pt3dadd( -64.0237, 219.18, -82.5647, 1.47 ) }
    dend_11 { pt3dadd( -64.1489, 219.673, -82.6227, 1.1 ) }
    dend_11 { pt3dadd( -64.4052, 220.595, -82.7156, 0.15 ) }
    dend_11 { pt3dadd( -64.6476, 221.456, -82.8009, 0.07 ) }
    dend_11 { pt3dadd( -64.9296, 222.416, -82.8795, 0.37 ) }
    dend_11 { pt3dadd( -65.2209, 223.404, -82.9315, 0.07 ) }
    dend_11 { pt3dadd( -65.4424, 224.155, -82.9508, 1.1 ) }
    dend_11 { pt3dadd( -65.6322, 224.796, -82.9698, 1.69 ) }
    dend_11 { pt3dadd( -65.8355, 225.495, -82.9944, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_11 { pt3dadd( -66.0683, 226.317, -83.0584, 0.07 ) }
    dend_11 { pt3dadd( -66.3975, 227.446, -83.1867, 0.22 ) }
    dend_11 { pt3dadd( -66.741, 228.646, -83.3499, 0.22 ) }
    dend_11 { pt3dadd( -66.9525, 229.436, -83.4742, 1.03 ) }
    dend_11 { pt3dadd( -67.0628, 229.923, -83.5569, 1.03 ) }
    dend_11 { pt3dadd( -67.2636, 230.882, -83.739, 0.07 ) }
    dend_11 { pt3dadd( -67.4749, 232.126, -84.0008, 0.07 ) }
    dend_11 { pt3dadd( -67.6148, 233.001, -84.2077, 1.47 ) }
    dend_11 { pt3dadd( -67.6631, 233.373, -84.2961, 1.47 ) }
    dend_11 { pt3dadd( -67.7677, 234.353, -84.5208, 0.07 ) }
    dend_11 { pt3dadd( -67.8487, 235.236, -84.7231, 1.25 ) }
    dend_11 { pt3dadd( -67.9133, 236.038, -84.8988, 0.15 ) }
    dend_11 { pt3dadd( -67.9897, 236.915, -85.1028, 0.66 ) }
    dend_11 { pt3dadd( -68.0628, 237.595, -85.2646, 0.07 ) }
    dend_11 { pt3dadd( -68.2035, 238.588, -85.4937, 0.07 ) }
    dend_11 { pt3dadd( -68.3592, 239.456, -85.6838, 1.76 ) }
    dend_11 { pt3dadd( -68.5402, 240.302, -85.8537, 1.84 ) }
    dend_11 { pt3dadd( -68.8119, 241.419, -86.073, 0.07 ) }
    dend_11 { pt3dadd( -68.9863, 242.029, -86.1847, 0.07 ) }
    dend_11 { pt3dadd( -69.2957, 242.936, -86.3532, 0.73 ) }
    dend_11 { pt3dadd( -69.5772, 243.643, -86.4925, 0.07 ) }
    dend_11 { pt3dadd( -69.8129, 244.153, -86.6008, 0.29 ) }
    dend_11 { pt3dadd( -69.9841, 244.491, -86.6801, 0.07 ) }
    dend_11 { pt3dadd( -70.3677, 245.187, -86.8557, 0.07 ) }
    dend_11 { pt3dadd( -70.7398, 245.837, -87.0393, 1.1 ) }
    dend_11 { pt3dadd( -70.928, 246.149, -87.1416, 1.25 ) }
    dend_11 { pt3dadd( -71.25, 246.649, -87.3945, 0.07 ) }
    dend_11 { pt3dadd( -71.5226, 247.072, -87.6624, 0.59 ) }
    dend_11 { pt3dadd( -71.848, 247.555, -88.0121, 0.07 ) }
    dend_11 { pt3dadd( -72.1779, 247.998, -88.403, 0.07 ) }
    dend_11 { pt3dadd( -72.6198, 248.548, -88.9582, 1.32 ) }
    dend_11 { pt3dadd( -73.5133, 249.642, -90.1943, 0.07 ) }
    dend_11 { pt3dadd( -73.7533, 249.956, -90.5818, 0.07 ) }
    dend_11 { pt3dadd( -73.9796, 250.297, -91.0184, 0.37 ) }
    dend_11 { pt3dadd( -74.2527, 250.848, -91.7325, 0.37 ) }
    dend_11 { pt3dadd( -74.3383, 251.208, -92.1658, 1.1 ) }
    dend_11 { pt3dadd( -74.3282, 251.551, -92.5232, 1.1 ) }
    dend_11 { pt3dadd( -74.1666, 252.381, -93.2472, 0.07 ) }
    dend_11 { pt3dadd( -73.9902, 253.0, -93.7379, 1.1 ) }
    dend_11 { pt3dadd( -73.743, 253.719, -94.2566, 0.07 ) }
    dend_11 { pt3dadd( -73.4774, 254.473, -94.7348, 1.54 ) }
    dend_11 { pt3dadd( -73.1019, 255.635, -95.4178, 0.07 ) }
    dend_11 { pt3dadd( -72.9801, 256.09, -95.6587, 0.07 ) }
    dend_11 { pt3dadd( -72.85, 256.697, -95.9594, 1.1 ) }
    dend_11 { pt3dadd( -72.7527, 257.379, -96.2737, 0.07 ) }
    dend_11 { pt3dadd( -72.7139, 258.037, -96.5831, 1.18 ) }
    dend_11 { pt3dadd( -72.7339, 259.113, -97.1209, 0.07 ) }
    dend_11 { pt3dadd( -72.8294, 259.949, -97.578, 0.07 ) }
    dend_11 { pt3dadd( -72.9598, 260.532, -97.9542, 1.1 ) }
    dend_11 { pt3dadd( -73.0385, 260.785, -98.1406, 1.1 ) }
    dend_11 { pt3dadd( -73.369, 261.606, -98.8687, 0.07 ) }
    dend_11 { pt3dadd( -73.5018, 261.881, -99.139, 0.07 ) }
    dend_11 { pt3dadd( -73.8666, 262.55, -99.8209, 0.88 ) }
    dend_11 { pt3dadd( -74.2612, 263.214, -100.561, 0.37 ) }
    dend_11 { pt3dadd( -74.5551, 263.705, -101.107, 0.88 ) }
    dend_11 { pt3dadd( -75.0175, 264.528, -101.999, 0.07 ) }
    dend_11 { pt3dadd( -75.3276, 265.118, -102.604, 0.07 ) }
    dend_11 { pt3dadd( -75.6674, 265.837, -103.311, 1.76 ) }
    dend_11 { pt3dadd( -76.2742, 267.22, -104.605, 0.07 ) }
    dend_11 { pt3dadd( -76.4025, 267.508, -104.861, 0.07 ) }
    dend_11 { pt3dadd( -76.7203, 268.193, -105.445, 1.84 ) }
    dend_11 { pt3dadd( -77.3375, 269.536, -106.53, 0.07 ) }
    dend_11 { pt3dadd( -77.5257, 269.932, -106.832, 1.4 ) }
    dend_11 { pt3dadd( -77.6693, 270.227, -107.018, 1.4 ) }
    dend_11 { pt3dadd( -78.0406, 270.985, -107.392, 0.07 ) }
    dend_11 { pt3dadd( -78.2957, 271.481, -107.608, 0.73 ) }
    dend_11 { pt3dadd( -78.6279, 272.077, -107.82, 0.07 ) }
    dend_11 { pt3dadd( -79.2868, 273.191, -108.138, 2.72 ) }
    dend_11 { pt3dadd( -80.094, 274.477, -108.477, 0.07 ) }
    dend_11 { pt3dadd( -80.3656, 274.893, -108.557, 0.81 ) }
    dend_11 { pt3dadd( -80.726, 275.394, -108.61, 0.07 ) }
    dend_11 { pt3dadd( -81.2173, 275.993, -108.622, 0.07 ) }
    dend_11 { pt3dadd( -81.4826, 276.259, -108.603, 0.95 ) }
    dend_11 { pt3dadd( -82.3288, 276.922, -108.509, 0.07 ) }
    dend_11 { pt3dadd( -83.1538, 277.448, -108.4, 0.07 ) }
    dend_11 { pt3dadd( -83.9711, 277.918, -108.296, 1.25 ) }
    dend_11 { pt3dadd( -84.6626, 278.277, -108.205, 0.07 ) }
    dend_11 { pt3dadd( -85.7086, 278.787, -108.069, 0.07 ) }
    dend_11 { pt3dadd( -86.6, 279.208, -107.939, 1.91 ) }
    dend_11 { pt3dadd( -87.6909, 279.725, -107.775, 0.07 ) }
    dend_11 { pt3dadd( -88.137, 279.945, -107.72, 0.07 ) }
    dend_11 { pt3dadd( -88.5789, 280.179, -107.66, 0.88 ) }
    dend_11 { pt3dadd( -89.0005, 280.414, -107.602, 1.32 ) }
    dend_11 { pt3dadd( -89.9978, 281.02, -107.444, 0.15 ) }
    dend_11 { pt3dadd( -90.5114, 281.345, -107.368, 0.66 ) }
    dend_11 { pt3dadd( -91.1528, 281.768, -107.276, 0.07 ) }
    dend_11 { pt3dadd( -91.5185, 282.009, -107.228, 0.07 ) }
    dend_11 { pt3dadd( -92.0882, 282.367, -107.178, 0.07 ) }
    dend_11 { pt3dadd( -92.297, 282.488, -107.159, 0.88 ) }
    dend_11 { pt3dadd( -92.9768, 282.87, -107.078, 0.07 ) }
    dend_11 { pt3dadd( -93.7987, 283.327, -106.931, 0.95 ) }
    dend_11 { pt3dadd( -94.4368, 283.72, -106.782, 0.07 ) }
    dend_11 { pt3dadd( -94.9892, 284.121, -106.596, 0.29 ) }
    dend_11 { pt3dadd( -95.3982, 284.616, -106.343, 0.07 ) }
    dend_11 { pt3dadd( -95.4833, 285.198, -106.027, 0.07 ) }
    dend_11 { pt3dadd( -95.4631, 285.324, -105.956, 0.07 ) }
    dend_11 { pt3dadd( -95.2634, 285.779, -105.71, 0.37 ) }
    dend_11 { pt3dadd( -94.8444, 286.498, -105.331, 0.07 ) }
    dend_11 { pt3dadd( -94.1558, 287.493, -104.819, 0.07 ) }
    dend_11 { pt3dadd( -93.5952, 288.202, -104.499, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 0/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -43.1244, -81.0421, -40.0489, 0.37 ) }
    dend_29 { pt3dadd( -43.2882, -83.4134, -39.6286, 0.37 ) }
    dend_29 { pt3dadd( -43.3489, -84.5428, -39.4132, 0.07 ) }
    dend_29 { pt3dadd( -43.3875, -85.4543, -39.2333, 1.32 ) }
    dend_29 { pt3dadd( -43.4129, -85.9165, -39.1548, 1.32 ) }
    dend_29 { pt3dadd( -43.5706, -87.5051, -38.9373, 0.22 ) }
    dend_29 { pt3dadd( -43.6903, -88.3966, -38.8356, 0.07 ) }
    dend_29 { pt3dadd( -43.8518, -89.188, -38.7429, 1.32 ) }
    dend_29 { pt3dadd( -43.8938, -89.3625, -38.7224, 1.32 ) }
    dend_29 { pt3dadd( -44.2351, -90.5519, -38.5573, 0.15 ) }
    dend_29 { pt3dadd( -44.82, -92.1428, -38.2738, 0.15 ) }
    dend_29 { pt3dadd( -45.178, -92.9661, -38.0723, 0.15 ) }
    dend_29 { pt3dadd( -45.5596, -93.7988, -37.8308, 1.1 ) }
    dend_29 { pt3dadd( -45.793, -94.2877, -37.663, 1.32 ) }
    dend_29 { pt3dadd( -46.2885, -95.3461, -37.2582, 0.22 ) }
    dend_29 { pt3dadd( -46.8473, -96.6722, -36.7182, 0.22 ) }
    dend_29 { pt3dadd( -47.1547, -97.477, -36.4081, 0.95 ) }
    dend_29 { pt3dadd( -47.3007, -97.9206, -36.267, 0.95 ) }
    dend_29 { pt3dadd( -47.5915, -98.8845, -36.0528, 0.07 ) }
    dend_29 { pt3dadd( -47.817, -99.6568, -35.944, 0.07 ) }
    dend_29 { pt3dadd( -48.0983, -100.809, -35.8661, 1.54 ) }
    dend_29 { pt3dadd( -48.2397, -101.546, -35.8663, 1.32 ) }
    dend_29 { pt3dadd( -48.4349, -102.741, -35.911, 0.15 ) }
    dend_29 { pt3dadd( -48.6353, -104.096, -36.0001, 0.15 ) }
    dend_29 { pt3dadd( -48.8354, -105.336, -36.1292, 1.54 ) }
    dend_29 { pt3dadd( -48.9739, -106.112, -36.2377, 1.54 ) }
    dend_29 { pt3dadd( -49.3902, -108.418, -36.5886, 0.07 ) }
    dend_29 { pt3dadd( -49.5754, -109.388, -36.7493, 0.88 ) }
    dend_29 { pt3dadd( -49.7443, -110.284, -36.9009, 0.07 ) }
    dend_29 { pt3dadd( -50.0503, -111.993, -37.1653, 0.07 ) }
    dend_29 { pt3dadd( -50.2827, -113.271, -37.333, 2.06 ) }
    dend_29 { pt3dadd( -50.598, -114.857, -37.4803, 1.03 ) }
    dend_29 { pt3dadd( -50.8922, -116.375, -37.5235, 0.07 ) }
    dend_29 { pt3dadd( -51.0762, -117.403, -37.4956, 0.07 ) }
    dend_29 { pt3dadd( -51.162, -117.946, -37.4527, 0.81 ) }
    dend_29 { pt3dadd( -51.3106, -119.063, -37.3207, 0.59 ) }
    dend_29 { pt3dadd( -51.4424, -119.953, -37.2153, 0.15 ) }
    dend_29 { pt3dadd( -51.6768, -121.378, -37.0775, 1.84 ) }
    dend_29 { pt3dadd( -51.9795, -123.097, -36.9488, 0.07 ) }
    dend_29 { pt3dadd( -52.081, -123.572, -36.9294, 0.59 ) }
    dend_29 { pt3dadd( -52.3489, -124.746, -36.925, 0.59 ) }
    dend_29 { pt3dadd( -52.6384, -125.906, -36.9556, 1.69 ) }
    dend_29 { pt3dadd( -52.832, -126.681, -37.0193, 1.69 ) }
    dend_29 { pt3dadd( -53.0475, -127.518, -37.1052, 1.1 ) }
    dend_29 { pt3dadd( -53.2761, -128.394, -37.2094, 0.15 ) }
    dend_29 { pt3dadd( -53.465, -129.127, -37.308, 0.81 ) }
    dend_29 { pt3dadd( -53.7164, -130.166, -37.4372, 0.59 ) }
    dend_29 { pt3dadd( -54.1077, -131.834, -37.619, 0.15 ) }
    dend_29 { pt3dadd( -54.2838, -132.622, -37.7119, 0.15 ) }
    dend_29 { pt3dadd( -54.6002, -134.027, -37.8802, 1.62 ) }
    dend_29 { pt3dadd( -54.655, -134.276, -37.9008, 1.62 ) }
    dend_29 { pt3dadd( -55.0594, -136.084, -37.981, 0.44 ) }
    dend_29 { pt3dadd( -55.3242, -137.255, -37.9684, 0.22 ) }
    dend_29 { pt3dadd( -55.5697, -138.326, -37.9043, 1.03 ) }
    dend_29 { pt3dadd( -55.7903, -139.304, -37.8245, 1.4 ) }
    dend_29 { pt3dadd( -56.2201, -141.248, -37.5893, 0.22 ) }
    dend_29 { pt3dadd( -56.714, -143.476, -37.2712, 0.22 ) }
    dend_29 { pt3dadd( -57.0449, -145.017, -37.0156, 1.03 ) }
    dend_29 { pt3dadd( -57.1917, -145.71, -36.8822, 1.47 ) }
    dend_29 { pt3dadd( -57.3274, -146.326, -36.7519, 1.47 ) }
    dend_29 { pt3dadd( -57.6834, -147.809, -36.4598, 0.15 ) }
    dend_29 { pt3dadd( -57.9086, -148.579, -36.3326, 0.29 ) }
    dend_29 { pt3dadd( -58.3574, -149.854, -36.1327, 0.07 ) }
    dend_29 { pt3dadd( -58.7097, -150.725, -36.0443, 1.47 ) }
    dend_29 { pt3dadd( -58.9842, -151.357, -36.0065, 1.47 ) }
    dend_29 { pt3dadd( -59.5785, -152.666, -36.0254, 0.15 ) }
    dend_29 { pt3dadd( -59.8212, -153.184, -36.0703, 0.15 ) }
    dend_29 { pt3dadd( -60.2293, -154.019, -36.1316, 1.25 ) }
    dend_29 { pt3dadd( -60.6843, -154.964, -36.1834, 1.62 ) }
    dend_29 { pt3dadd( -61.3924, -156.627, -36.3086, 0.07 ) }
    dend_29 { pt3dadd( -61.7453, -157.599, -36.3848, 0.37 ) }
    dend_29 { pt3dadd( -61.933, -158.236, -36.4268, 0.15 ) }
    dend_29 { pt3dadd( -62.2952, -159.773, -36.5064, 1.25 ) }
    dend_29 { pt3dadd( -62.4641, -160.871, -36.575, 0.37 ) }
    dend_29 { pt3dadd( -62.5699, -162.088, -36.6351, 0.22 ) }
    dend_29 { pt3dadd( -62.5491, -163.366, -36.6928, 0.22 ) }
    dend_29 { pt3dadd( -62.4821, -164.079, -36.7156, 1.47 ) }
    dend_29 { pt3dadd( -62.3844, -164.652, -36.7448, 1.25 ) }
    dend_29 { pt3dadd( -62.0167, -166.114, -36.844, 0.07 ) }
    dend_29 { pt3dadd( -61.934, -166.394, -36.8502, 0.37 ) }
    dend_29 { pt3dadd( -61.4592, -167.952, -36.7934, 0.07 ) }
    dend_29 { pt3dadd( -61.1615, -168.902, -36.758, 0.81 ) }
    dend_29 { pt3dadd( -61.0501, -169.286, -36.7414, 0.81 ) }
    dend_29 { pt3dadd( -60.858, -170.024, -36.6999, 0.07 ) }
    dend_29 { pt3dadd( -60.6644, -170.966, -36.6241, 0.07 ) }
    dend_29 { pt3dadd( -60.5397, -171.764, -36.5706, 0.88 ) }
    dend_29 { pt3dadd( -60.4609, -172.502, -36.5146, 0.07 ) }
    dend_29 { pt3dadd( -60.3961, -173.219, -36.4752, 0.66 ) }
    dend_29 { pt3dadd( -60.3459, -173.923, -36.4404, 0.07 ) }
    dend_29 { pt3dadd( -60.2768, -174.795, -36.3695, 0.07 ) }
    dend_29 { pt3dadd( -60.2323, -175.27, -36.31, 0.07 ) }
    dend_29 { pt3dadd( -60.1226, -176.211, -36.1168, 1.03 ) }
    dend_29 { pt3dadd( -59.9637, -177.679, -35.6697, 0.07 ) }
    dend_29 { pt3dadd( -59.884, -178.433, -35.3764, 0.44 ) }
    dend_29 { pt3dadd( -59.7524, -179.801, -34.7459, 0.07 ) }
    dend_29 { pt3dadd( -59.6841, -180.509, -34.3859, 0.59 ) }
    dend_29 { pt3dadd( -59.5855, -181.871, -33.6679, 0.07 ) }
    dend_29 { pt3dadd( -59.565, -183.054, -33.0218, 0.07 ) }
    dend_29 { pt3dadd( -59.6228, -184.574, -32.1295, 0.07 ) }
    dend_29 { pt3dadd( -59.7391, -185.946, -31.3159, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -59.8678, -186.857, -30.7849, 0.22 ) }
    dend_29 { pt3dadd( -59.9735, -187.673, -30.3325, 1.62 ) }
    dend_29 { pt3dadd( -60.0347, -188.729, -29.8228, 0.37 ) }
    dend_29 { pt3dadd( -59.8899, -189.334, -29.5823, 1.1 ) }
    dend_29 { pt3dadd( -60.6046, -188.475, -29.9084, 0.07 ) }
    dend_29 { pt3dadd( -61.3238, -187.762, -30.1801, 0.07 ) }
    dend_29 { pt3dadd( -61.7546, -187.284, -30.3563, 0.88 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -43.1244, -81.0421, -40.0489, 0.37 ) }
    dend_28 { pt3dadd( -44.7924, -82.69, -41.4846, 0.37 ) }
    dend_28 { pt3dadd( -45.4415, -83.268, -41.9104, 0.59 ) }
    dend_28 { pt3dadd( -46.7138, -84.2645, -42.4183, 0.07 ) }
    dend_28 { pt3dadd( -48.0512, -85.1708, -42.6269, 0.07 ) }
    dend_28 { pt3dadd( -48.8828, -85.655, -42.6702, 0.07 ) }
    dend_28 { pt3dadd( -49.6456, -86.0507, -42.8079, 0.81 ) }
    dend_28 { pt3dadd( -50.9609, -86.5487, -43.1012, 0.29 ) }
    dend_28 { pt3dadd( -52.3756, -86.968, -44.2735, 0.29 ) }
    dend_28 { pt3dadd( -53.0317, -87.103, -45.2964, 0.59 ) }
    dend_28 { pt3dadd( -53.5142, -87.1838, -46.2344, 0.95 ) }
    dend_28 { pt3dadd( -54.9742, -87.5182, -49.9947, 0.44 ) }
    dend_28 { pt3dadd( -55.6088, -87.719, -51.9836, 0.73 ) }
    dend_28 { pt3dadd( -56.1893, -88.0, -54.1792, 0.15 ) }
    dend_28 { pt3dadd( -56.4159, -88.1597, -55.2093, 0.15 ) }
    dend_28 { pt3dadd( -56.5516, -88.2946, -55.8531, 0.51 ) }
    dend_28 { pt3dadd( -57.0087, -89.0257, -58.074, 0.07 ) }
    dend_28 { pt3dadd( -57.0706, -89.1672, -58.3526, 0.07 ) }
    dend_28 { pt3dadd( -57.2592, -89.7022, -59.216, 1.03 ) }
    dend_28 { pt3dadd( -57.5164, -90.4662, -60.2728, 0.15 ) }
    dend_28 { pt3dadd( -57.7905, -91.2313, -61.2551, 0.95 ) }
    dend_28 { pt3dadd( -58.4835, -92.8733, -63.268, 0.37 ) }
    dend_28 { pt3dadd( -58.7854, -93.4894, -63.9832, 0.81 ) }
    dend_28 { pt3dadd( -59.2459, -94.3978, -65.055, 0.07 ) }
    dend_28 { pt3dadd( -59.7673, -95.3911, -66.227, 0.07 ) }
    dend_28 { pt3dadd( -60.059, -95.9493, -66.8787, 0.29 ) }
    dend_28 { pt3dadd( -60.4115, -96.5622, -67.6774, 0.95 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 34/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -215.372, -105.683, 0.533155, 0.07 ) }
    dend_14 { pt3dadd( -216.174, -106.242, 0.613566, 0.07 ) }
    dend_14 { pt3dadd( -217.046, -106.94, 0.70702, 0.07 ) }
    dend_14 { pt3dadd( -217.655, -107.482, 0.783021, 0.07 ) }
    dend_14 { pt3dadd( -217.913, -107.74, 0.822519, 0.88 ) }
    dend_14 { pt3dadd( -218.179, -108.045, 0.858818, 0.88 ) }
    dend_14 { pt3dadd( -218.626, -108.61, 0.886054, 0.07 ) }
    dend_14 { pt3dadd( -218.819, -108.9, 0.88139, 0.07 ) }
    dend_14 { pt3dadd( -219.267, -109.598, 0.841539, 0.66 ) }
    dend_14 { pt3dadd( -219.539, -109.999, 0.79902, 1.1 ) }
    dend_14 { pt3dadd( -220.13, -110.793, 0.689205, 0.07 ) }
    dend_14 { pt3dadd( -220.843, -111.643, 0.55599, 0.07 ) }
    dend_14 { pt3dadd( -221.502, -112.324, 0.441407, 0.66 ) }
    dend_14 { pt3dadd( -222.068, -112.82, 0.347981, 1.4 ) }
    dend_14 { pt3dadd( -222.964, -113.478, 0.192332, 0.22 ) }
    dend_14 { pt3dadd( -223.645, -113.882, 0.0675352, 0.22 ) }
    dend_14 { pt3dadd( -224.296, -114.17, -0.036494, 0.59 ) }
    dend_14 { pt3dadd( -224.831, -114.359, -0.112202, 0.07 ) }
    dend_14 { pt3dadd( -225.504, -114.574, -0.240442, 0.07 ) }
    dend_14 { pt3dadd( -226.273, -114.805, -0.411395, 0.81 ) }
    dend_14 { pt3dadd( -227.042, -115.042, -0.595159, 0.22 ) }
    dend_14 { pt3dadd( -228.23, -115.474, -0.891172, 0.22 ) }
    dend_14 { pt3dadd( -228.872, -115.764, -1.06048, 1.4 ) }
    dend_14 { pt3dadd( -229.912, -116.335, -1.33253, 0.07 ) }
    dend_14 { pt3dadd( -230.349, -116.624, -1.43824, 0.81 ) }
    dend_14 { pt3dadd( -230.838, -117.03, -1.53969, 0.07 ) }
    dend_14 { pt3dadd( -231.36, -117.579, -1.62908, 0.07 ) }
    dend_14 { pt3dadd( -231.566, -117.844, -1.66971, 0.07 ) }
    dend_14 { pt3dadd( -231.891, -118.295, -1.70427, 0.81 ) }
    dend_14 { pt3dadd( -232.087, -118.579, -1.68343, 0.07 ) }
    dend_14 { pt3dadd( -232.663, -119.453, -1.5578, 0.44 ) }
    dend_14 { pt3dadd( -232.965, -119.882, -1.48283, 0.07 ) }
    dend_14 { pt3dadd( -233.33, -120.359, -1.38828, 0.29 ) }
    dend_14 { pt3dadd( -233.81, -120.93, -1.25987, 0.07 ) }
    dend_14 { pt3dadd( -234.731, -121.947, -1.04533, 0.07 ) }
    dend_14 { pt3dadd( -235.314, -122.548, -0.929994, 1.76 ) }
    dend_14 { pt3dadd( -236.335, -123.537, -0.762367, 0.22 ) }
    dend_14 { pt3dadd( -237.002, -124.158, -0.684626, 0.51 ) }
    dend_14 { pt3dadd( -237.375, -124.493, -0.641599, 0.07 ) }
    dend_14 { pt3dadd( -238.004, -125.021, -0.604104, 0.07 ) }
    dend_14 { pt3dadd( -238.206, -125.176, -0.599553, 0.81 ) }
    dend_14 { pt3dadd( -238.932, -125.704, -0.57467, 0.07 ) }
    dend_14 { pt3dadd( -239.65, -126.23, -0.540358, 0.07 ) }
    dend_14 { pt3dadd( -240.482, -126.857, -0.492234, 1.47 ) }
    dend_14 { pt3dadd( -241.393, -127.561, -0.41485, 0.15 ) }
    dend_14 { pt3dadd( -241.921, -127.965, -0.351267, 0.15 ) }
    dend_14 { pt3dadd( -242.316, -128.266, -0.29771, 0.88 ) }
    dend_14 { pt3dadd( -242.934, -128.735, -0.222802, 0.07 ) }
    dend_14 { pt3dadd( -243.645, -129.276, -0.155435, 0.07 ) }
    dend_14 { pt3dadd( -244.045, -129.579, -0.12127, 0.07 ) }
    dend_14 { pt3dadd( -244.378, -129.818, -0.0824203, 0.81 ) }
    dend_14 { pt3dadd( -245.079, -130.284, 0.00898921, 0.07 ) }
    dend_14 { pt3dadd( -245.962, -130.819, 0.105368, 0.07 ) }
    dend_14 { pt3dadd( -246.464, -131.073, 0.151908, 0.95 ) }
    dend_14 { pt3dadd( -247.437, -131.486, 0.21836, 0.07 ) }
    dend_14 { pt3dadd( -248.495, -131.853, 0.312781, 0.88 ) }
    dend_14 { pt3dadd( -249.061, -132.008, 0.374563, 0.22 ) }
    dend_14 { pt3dadd( -249.8, -132.143, 0.479425, 0.07 ) }
    dend_14 { pt3dadd( -251.203, -132.281, 0.755616, 0.07 ) }
    dend_14 { pt3dadd( -251.776, -132.303, 0.884653, 1.18 ) }
    dend_14 { pt3dadd( -252.868, -132.284, 1.15637, 0.15 ) }
    dend_14 { pt3dadd( -253.91, -132.24, 1.44193, 0.15 ) }
    dend_14 { pt3dadd( -254.803, -132.194, 1.68416, 1.54 ) }
    dend_14 { pt3dadd( -256.221, -132.06, 2.0409, 0.07 ) }
    dend_14 { pt3dadd( -256.779, -131.985, 2.15628, 0.07 ) }
    dend_14 { pt3dadd( -257.197, -131.912, 2.21389, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( -257.993, -131.729, 2.24299, 0.07 ) }
    dend_14 { pt3dadd( -258.911, -131.456, 2.19393, 0.81 ) }
    dend_14 { pt3dadd( -259.944, -131.057, 2.01986, 0.07 ) }
    dend_14 { pt3dadd( -260.254, -130.898, 1.93782, 0.07 ) }
    dend_14 { pt3dadd( -260.582, -130.701, 1.84293, 0.37 ) }
    dend_14 { pt3dadd( -261.342, -130.202, 1.59265, 0.07 ) }
    dend_14 { pt3dadd( -261.704, -129.945, 1.4692, 0.88 ) }
    dend_14 { pt3dadd( -262.353, -129.483, 1.25965, 0.07 ) }
    dend_14 { pt3dadd( -262.976, -129.095, 1.08485, 0.29 ) }
    dend_14 { pt3dadd( -263.708, -128.68, 0.865705, 0.07 ) }
    dend_14 { pt3dadd( -264.133, -128.463, 0.729771, 0.95 ) }
    dend_14 { pt3dadd( -264.901, -128.105, 0.480824, 0.07 ) }
    dend_14 { pt3dadd( -265.092, -128.029, 0.425285, 0.07 ) }
    dend_14 { pt3dadd( -265.671, -127.825, 0.249868, 0.44 ) }
    dend_14 { pt3dadd( -266.431, -127.58, 0.0207188, 0.07 ) }
    dend_14 { pt3dadd( -267.503, -127.272, -0.330313, 0.07 ) }
    dend_14 { pt3dadd( -268.383, -127.042, -0.619187, 1.25 ) }
    dend_14 { pt3dadd( -269.248, -126.847, -0.912374, 0.07 ) }
    dend_14 { pt3dadd( -269.872, -126.722, -1.12186, 0.07 ) }
    dend_14 { pt3dadd( -270.61, -126.61, -1.37442, 0.37 ) }
    dend_14 { pt3dadd( -271.41, -126.541, -1.6292, 0.07 ) }
    dend_14 { pt3dadd( -272.101, -126.541, -1.83572, 0.07 ) }
    dend_14 { pt3dadd( -272.513, -126.584, -1.9449, 0.37 ) }
    dend_14 { pt3dadd( -273.035, -126.705, -2.0471, 0.07 ) }
    dend_14 { pt3dadd( -273.969, -127.006, -2.15378, 0.07 ) }
    dend_14 { pt3dadd( -274.833, -127.354, -2.18396, 0.07 ) }
    dend_14 { pt3dadd( -275.763, -127.796, -2.13178, 1.69 ) }
    dend_14 { pt3dadd( -276.815, -128.385, -2.0061, 0.07 ) }
    dend_14 { pt3dadd( -278.411, -129.422, -1.67532, 0.07 ) }
    dend_14 { pt3dadd( -279.416, -130.119, -1.41661, 0.07 ) }
    dend_14 { pt3dadd( -280.241, -130.742, -1.14829, 1.32 ) }
    dend_14 { pt3dadd( -281.033, -131.403, -0.843446, 0.07 ) }
    dend_14 { pt3dadd( -281.589, -131.913, -0.590054, 0.07 ) }
    dend_14 { pt3dadd( -282.379, -132.687, -0.135868, 1.62 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 34/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -215.372, -105.683, 0.533155, 0.07 ) }
    dend_13 { pt3dadd( -216.164, -104.231, 0.370402, 0.07 ) }
    dend_13 { pt3dadd( -216.683, -103.33, 0.279994, 1.03 ) }
    dend_13 { pt3dadd( -217.233, -102.396, 0.179522, 0.07 ) }
    dend_13 { pt3dadd( -217.542, -101.877, 0.132376, 0.29 ) }
    dend_13 { pt3dadd( -217.828, -101.426, 0.089253, 0.07 ) }
    dend_13 { pt3dadd( -218.538, -100.319, -0.0287075, 0.07 ) }
    dend_13 { pt3dadd( -218.94, -99.7164, -0.108287, 0.95 ) }
    dend_13 { pt3dadd( -219.36, -99.0925, -0.203561, 0.95 ) }
    dend_13 { pt3dadd( -219.866, -98.3011, -0.361109, 0.07 ) }
    dend_13 { pt3dadd( -220.628, -97.043, -0.637167, 0.07 ) }
    dend_13 { pt3dadd( -220.972, -96.4643, -0.776516, 0.59 ) }
    dend_13 { pt3dadd( -221.414, -95.6951, -0.98686, 0.07 ) }
    dend_13 { pt3dadd( -221.81, -95.0025, -1.20318, 0.37 ) }
    dend_13 { pt3dadd( -222.175, -94.3488, -1.42429, 0.07 ) }
    dend_13 { pt3dadd( -222.332, -94.0516, -1.54228, 0.07 ) }
    dend_13 { pt3dadd( -222.476, -93.7342, -1.67392, 1.03 ) }
    dend_13 { pt3dadd( -222.73, -93.2258, -1.89188, 1.03 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_43 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_39 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_36 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_35 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_33 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_32 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_24 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_41 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_27 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_14 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_30 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_37 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_18 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_34 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_6 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_16 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_28 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_13 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_42 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_23, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 9
    dend_38 nseg = 3
    dend_7 nseg = 3
    dend_40 nseg = 13
    dend_39 nseg = 5
    dend_36 nseg = 5
    dend_35 nseg = 11
    dend_33 nseg = 19
    dend_32 nseg = 7
    dend_24 nseg = 3
    dend_22 nseg = 3
    dend_15 nseg = 5
    dend_41 nseg = 3
    dend_27 nseg = 3
    dend_26 nseg = 3
    dend_12 nseg = 11
    dend_11 nseg = 17
    dend_29 nseg = 5
    dend_14 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_LBC_f9ea5d0925_0_0


