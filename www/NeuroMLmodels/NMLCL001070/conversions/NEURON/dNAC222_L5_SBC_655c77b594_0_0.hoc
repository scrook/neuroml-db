// Cell: dNAC222_L5_SBC_655c77b594_0_0
/*
{
  "id" : "dNAC222_L5_SBC_655c77b594_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.327285, 12.2563, -2.37682, 3.20394", "-0.32997, 10.9888, -2.12879, 5.58325", "-0.332655, 9.7213, -1.88076, 6.08709", "-0.335339, 8.45379, -1.63272, 7.22603", "-0.338024, 7.18628, -1.38469, 8.89261", "-0.340709, 5.91877, -1.13666, 10.2823", "-0.343394, 4.65126, -0.888622, 11.3086", "-0.346078, 3.38375, -0.640589, 12.3784", "-0.348763, 2.11624, -0.392555, 13.7451", "-0.351448, 0.84873, -0.144521, 14.7054", "-0.354133, -0.41878, 0.103512, 15.1673", "-0.356817, -1.68629, 0.351546, 15.492", "-0.359502, -2.9538, 0.599579, 15.6089", "-0.362187, -4.22131, 0.847613, 15.0499", "-0.364872, -5.48882, 1.09565, 14.3371", "-0.367556, -6.75633, 1.34368, 13.225", "-0.370241, -8.02384, 1.59171, 11.7728", "-0.372926, -9.29135, 1.83975, 10.2754", "-0.375611, -10.5589, 2.08778, 7.58879", "-0.378295, -11.8264, 2.33581, 5.07363", "-0.38098, -13.0939, 2.58385, 2.91986" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.63702, -12.1088, 3.2994, 4.13", "-1.63702, -12.1088, 3.2994, 4.13", "-1.54112, -12.959, 3.58128, 4.13", "-1.4008, -14.2029, 3.99373, 3.76", "-1.17889, -16.1702, 4.64599, 3.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.0870214, -5.00883, -15.4506, 1.69", "-0.0108007, -5.02346, -15.4506, 1.69", "0.225898, -5.07247, -15.4506, 1.69", "1.18064, -5.28023, -15.4446, 1.69", "2.57057, -5.63629, -15.3906, 1.69", "2.66714, -5.66539, -15.3988, 1.69", "4.18662, -6.26933, -15.7361, 1.69", "4.258, -6.30859, -15.7689, 1.69", "5.16275, -7.1845, -16.8915, 1.84", "5.0603, -7.90876, -18.4826, 1.84", "4.26549, -8.59727, -20.8785, 1.99", "3.4833, -9.15718, -22.9589, 1.99", "2.55677, -9.69315, -25.1212, 1.99", "1.1187, -10.3799, -28.1434, 2.14", "-0.502131, -10.9746, -31.1429, 2.43", "-3.196, -11.6782, -35.5865, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.632978, 11.1212, -5.6406, 2.58", "0.632978, 11.1212, -5.6406, 2.58", "1.28475, 11.6736, -5.90022, 2.28", "1.95405, 12.2787, -6.14044, 2.21", "3.24193, 13.6076, -6.56671, 0.81", "4.71241, 15.405, -7.02429, 0.81", "5.44797, 16.3953, -7.24256, 1.25", "6.30757, 17.7701, -7.44672, 1.99", "6.34523, 17.8518, -7.45233, 1.99", "6.69282, 19.2049, -7.4332, 2.14", "6.80308, 20.5858, -7.32547, 2.14", "6.79942, 20.6763, -7.31846, 2.14", "6.65637, 22.3077, -7.23607, 1.84", "6.45656, 23.8647, -7.26359, 1.4", "6.09121, 25.9674, -7.41771, 0.81", "5.76466, 27.3819, -7.64247, 0.81", "5.26805, 29.1721, -8.05758, 1.11", "5.24481, 29.2446, -8.08126, 1.11", "4.74607, 30.5867, -8.67329, 1.69", "4.16147, 32.0432, -9.45944, 1.77", "3.69417, 33.2849, -10.2374, 1.18", "3.67794, 33.3494, -10.2798, 1.18", "3.60616, 34.4624, -10.9578, 0.88", "3.71997, 35.3396, -11.4105, 0.74", "3.77694, 35.4904, -11.4694, 0.74", "4.36725, 36.537, -11.7548, 0.74", "5.23391, 37.8613, -11.9916, 0.88", "5.90122, 38.8249, -12.116, 1.69", "6.37042, 39.4883, -12.1637, 1.92", "6.75899, 40.0728, -12.1981, 2.21", "7.16128, 40.7419, -12.2281, 1.84", "7.63525, 41.6999, -12.2527, 1.25", "8.0654, 42.8686, -12.3152, 0.81", "8.34187, 43.9205, -12.4395, 0.81", "8.4721, 44.9583, -12.6661, 1.11", "8.46608, 45.0402, -12.7033, 1.11", "8.30335, 45.7199, -13.1971, 1.11", "7.87198, 46.8655, -14.245, 0.59", "7.65245, 47.3292, -14.7382, 0.59", "7.16387, 48.2318, -15.8796, 0.52", "6.21023, 49.8647, -18.1275, 1.99", "5.7472, 50.6272, -19.2327, 3.02", "5.52633, 50.9675, -19.7721, 3.02", "5.4883, 51.0208, -19.8624, 3.02", "4.82244, 51.9501, -21.5241, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.77298, 8.24117, 1.3594, 1.47", "3.32118, 8.6921, 1.3988, 1.47", "4.43842, 9.54679, 1.60604, 1.25", "4.80135, 9.81545, 1.68715, 1.62", "5.48265, 10.2661, 1.84257, 1.92", "6.26725, 10.752, 2.02267, 1.69", "7.44513, 11.3402, 2.36154, 0.88", "8.64608, 11.731, 3.10705, 0.88", "8.69627, 11.7446, 3.16757, 0.88", "9.20448, 11.8807, 4.07771, 0.81", "9.22676, 11.8892, 4.14281, 0.81", "9.61487, 12.2574, 6.22732, 1.03", "9.84515, 13.1389, 9.83469, 1.11", "9.79956, 13.7987, 11.8644, 1.11", "9.79239, 13.8318, 11.9367, 1.11", "9.52126, 14.6924, 13.3795, 1.33", "9.20472, 15.6243, 14.4734, 1.99", "8.97671, 16.2816, 14.9498, 2.73", "8.84045, 16.8748, 15.2395, 2.65", "8.73894, 18.0974, 15.7843, 2.36", "8.74283, 18.1604, 15.8107, 2.36", "9.10348, 19.8127, 16.439, 0.81", "9.47086, 20.8454, 16.8303, 0.59", "10.3416, 22.7486, 17.5109, 0.44", "11.0693, 24.0175, 17.8917, 0.44", "11.8049, 25.0781, 18.0946, 1.18", "12.4084, 25.8368, 18.1851, 1.99", "13.0366, 26.5406, 18.3098, 2.65", "13.3873, 26.9309, 18.399, 2.65", "14.3656, 28.0774, 18.7698, 1.77", "15.3068, 29.2177, 19.3624, 0.44", "16.2303, 30.4009, 20.1265, 0.44", "17.8658, 32.6355, 21.8695, 1.25", "18.3346, 33.3422, 22.4725, 2.43", "19.0937, 34.6135, 23.5907, 2.43", "19.6768, 35.7129, 24.6073, 2.21", "20.0992, 36.6163, 25.4201, 1.25", "20.5844, 37.7924, 26.3015, 0.52", "20.9291, 38.6539, 26.7503, 0.52", "21.3494, 39.6994, 27.1762, 0.52", "21.3786, 39.7715, 27.1939, 0.52", "21.8067, 40.752, 27.3748, 0.88", "22.2552, 41.7006, 27.518, 1.25", "22.6644, 42.5332, 27.5752, 1.69", "22.9705, 43.117, 27.6269, 1.69", "23.0269, 43.2235, 27.639, 1.69", "23.5804, 44.2337, 27.7785, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.16702, 11.2212, -3.0206, 1.62", "-3.16702, 11.2212, -3.0206, 1.62", "-3.5681, 11.9624, -2.46407, 1.4", "-4.29305, 13.3076, -1.35065, 1.4", "-4.79057, 14.2215, -0.619453, 1.4", "-5.23093, 15.044, 0.0197364, 1.69", "-5.85686, 16.2067, 0.904237, 1.99", "-6.53284, 17.4564, 1.82025, 2.36", "-7.19198, 18.671, 2.66669, 3.09", "-7.85309, 19.8173, 3.38234, 3.32", "-8.46993, 20.8274, 3.90425, 3.09", "-9.02927, 21.6672, 4.20977, 2.43", "-9.73974, 22.6496, 4.32372, 1.4", "-10.1849, 23.2262, 4.30362, 1.33", "-10.897, 24.0839, 4.13349, 1.18", "-11.5847, 24.8358, 3.86659, 1.4", "-12.5192, 25.7496, 3.32284, 1.69", "-13.605, 26.7337, 2.48257, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.38098, -13.0939, 2.58385, 1.02022", "-0.412752, -28.0939, 2.58385, 1.02022", "-0.444525, -43.0938, 2.58385, 1.02022" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.17889, -16.1702, 4.64599, 1.99", "-0.400689, -17.9376, 4.14548, 1.99", "0.455044, -19.6583, 3.70165, 1.62", "0.501392, -19.7466, 3.68011, 1.62", "1.5976, -21.7531, 3.27201, 1.18", "2.22139, -22.9001, 3.06444, 1.18", "3.02952, -24.4198, 2.8097, 1.18", "4.19283, -26.621, 2.50108, 1.18", "5.1722, -28.5379, 2.27958, 1.47", "6.18737, -30.6727, 2.08513, 2.21", "7.05861, -32.5624, 1.96236, 2.73", "7.88647, -34.4615, 1.86634, 2.8", "8.60461, -36.221, 1.7977, 2.95", "9.28543, -38.0902, 1.73818, 2.95", "9.59354, -39.0448, 1.71795, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.17889, -16.1702, 4.64599, 1.18", "-3.51233, -17.75, 7.25868, 1.18", "-5.20907, -18.8987, 9.15848, 1.18", "-6.25689, -19.6081, 10.3317, 1.69", "-7.11518, -20.1892, 11.2927, 2.36", "-7.63165, -20.5388, 11.871, 2.73" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.196, -11.6782, -35.5865, 0.66", "-1.33008, -13.2917, -37.2097, 0.66", "-0.224459, -14.168, -38.0642, 0.74", "0.560694, -14.7363, -38.7037, 0.74", "1.20497, -15.1593, -39.2482, 0.74", "1.25622, -15.1903, -39.2926, 0.74", "2.49463, -15.8709, -40.3893, 0.52", "3.09931, -15.9827, -40.8787, 0.52", "3.81868, -15.7883, -41.7544, 0.44", "4.24299, -15.5396, -42.449, 0.44", "4.35726, -15.4764, -42.6448, 0.44", "4.77995, -15.3223, -43.2812, 0.44", "5.82785, -15.07, -44.8124, 0.88", "5.87147, -15.0664, -44.8728, 0.88", "6.83909, -15.1038, -46.0913, 1.11", "8.15812, -15.2476, -47.6759, 1.84", "9.66935, -15.4759, -49.3928, 2.14", "12.0642, -15.9345, -51.9697, 0.29", "12.9038, -16.116, -52.7989, 0.29", "13.555, -16.252, -53.38, 1.03", "13.6224, -16.2664, -53.4302, 1.03", "14.1593, -16.4113, -53.748, 1.33", "14.2224, -16.4295, -53.7849, 1.33", "14.8758, -16.574, -54.2241, 1.18", "15.9829, -16.6982, -55.1202, 0.37", "16.7182, -16.7112, -55.8218, 0.37", "17.9102, -16.6186, -57.1888, 0.52", "19.3973, -16.4047, -59.174, 0.74", "20.1616, -16.2897, -60.2745, 1.62", "20.5755, -16.2194, -60.9083, 1.92", "21.316, -16.0695, -62.0788, 2.43", "22.5272, -15.7331, -63.9326, 1.69", "23.6125, -15.3157, -65.5893, 0.37", "24.1289, -15.1067, -66.3629, 0.37", "24.4866, -14.9694, -66.8876, 0.37", "24.9621, -14.8132, -67.5885, 1.11", "25.5137, -14.6813, -68.2968, 1.33", "27.3901, -14.2716, -70.2734, 0.22", "27.4533, -14.2593, -70.3303, 0.22", "28.0723, -14.1892, -70.846, 0.22", "28.8908, -14.2513, -71.4424, 0.22", "29.949, -14.4651, -72.1069, 0.88", "31.0375, -14.7285, -72.7661, 1.55", "31.7208, -14.8336, -73.3577, 1.77", "32.8738, -14.8448, -74.9151, 0.22", "33.5211, -14.7467, -76.1495, 0.22", "34.0408, -14.6088, -77.3278, 1.47", "34.7035, -14.4067, -79.0014, 2.43", "36.6417, -13.6971, -84.2171, 1.99", "37.7717, -13.1814, -87.5592, 1.77", "39.0609, -12.4347, -91.7921, 0.22", "39.0776, -12.4227, -91.8526, 0.22", "39.352, -12.2072, -92.9632, 0.22", "39.5801, -12.0256, -93.9458, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.196, -11.6782, -35.5865, 1.03", "-4.0581, -13.8945, -36.2403, 1.03", "-4.47574, -15.6322, -36.6475, 0.88", "-4.49293, -15.7337, -36.6684, 0.88", "-4.61318, -17.0099, -36.8953, 0.88", "-4.56843, -18.1523, -37.1616, 1.69", "-4.45535, -19.1337, -37.4046, 1.84", "-4.30815, -19.7042, -37.5632, 1.99", "-4.29062, -19.769, -37.5825, 1.99", "-4.11527, -20.5738, -37.8648, 1.69", "-3.81627, -22.7811, -38.8025, 1.03", "-3.89685, -24.1623, -39.6462, 0.88", "-4.14042, -25.144, -40.3755, 0.66", "-4.33747, -25.7172, -40.8338, 0.66", "-4.73765, -26.5752, -41.5776, 0.52", "-5.20117, -27.169, -42.1885, 0.52", "-7.00933, -28.3625, -43.7427, 1.77", "-7.49482, -28.5775, -44.1571, 1.77" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "4.82244, 51.9501, -21.5241, 0.52", "5.91149, 52.7303, -24.5228, 0.52", "6.09654, 52.855, -25.0078, 0.52", "6.42974, 53.1425, -26.0223, 0.37", "6.83292, 53.6112, -27.407, 1.4", "6.9177, 53.7532, -27.7463, 1.55", "7.61198, 55.2574, -30.8366, 0.74", "7.67892, 55.5737, -31.3513, 0.74", "7.80042, 56.8932, -33.2914, 0.29", "7.79797, 57.5767, -34.1747, 0.29", "7.70404, 58.724, -35.4915, 1.92", "7.63016, 59.19, -35.9569, 2.28", "7.26673, 60.948, -37.459, 0.22", "7.2488, 61.0444, -37.5427, 0.22", "7.19746, 61.4622, -37.8993, 0.22", "7.16334, 62.583, -38.9758, 1.18", "7.1802, 63.0211, -39.4205, 1.77", "7.3185, 64.9005, -41.2566, 0.22", "7.44161, 65.9723, -42.2354, 1.84", "7.51553, 66.4957, -42.6919, 2.21", "7.85298, 68.232, -44.1061, 0.22", "7.86727, 68.2838, -44.1425, 0.22", "8.26736, 69.418, -44.8237, 0.22", "8.29544, 69.481, -44.8506, 0.22", "8.72769, 70.2834, -45.1679, 0.66", "9.13396, 70.9779, -45.5631, 0.88", "9.68693, 71.888, -46.1627, 0.22", "10.2051, 72.7039, -46.8105, 1.99", "10.4713, 73.1204, -47.208, 2.5", "11.1515, 74.2941, -48.4441, 0.22", "12.0922, 76.1125, -50.5224, 0.59", "12.1883, 76.3531, -50.8105, 0.59", "12.2, 76.3938, -50.8597, 0.59", "12.3978, 77.4176, -51.989, 0.96", "12.4725, 77.9561, -52.5272, 1.11", "12.5324, 78.482, -52.9795, 0.96", "12.691, 79.663, -53.8718, 0.22", "12.7172, 79.8345, -54.0747, 0.22", "12.819, 80.4366, -54.9912, 0.22", "12.9044, 80.9391, -55.9434, 1.11", "12.9569, 81.5665, -57.4188, 1.4", "12.973, 82.0367, -58.6775, 2.06", "13.031, 83.8948, -64.0241, 1.18", "13.0405, 84.5913, -66.1723, 1.18", "13.0231, 85.4652, -69.1479, 1.4", "12.9467, 86.6067, -73.338, 1.55", "12.9447, 86.6219, -73.4011, 1.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.82244, 51.9501, -21.5241, 0.52", "4.81119, 53.4333, -21.3762, 0.52", "4.81846, 54.3663, -21.2885, 0.52", "4.84874, 55.366, -21.2768, 1.18", "4.89576, 56.1789, -21.3056, 1.99", "4.92788, 56.5197, -21.3247, 2.28", "4.99795, 56.9383, -21.3484, 1.84", "5.1241, 57.3519, -21.3742, 1.55", "5.49871, 58.3777, -21.4775, 0.88", "5.77321, 59.0903, -21.6143, 0.29", "6.00416, 59.7104, -21.7412, 0.29", "6.29154, 60.6188, -21.9643, 0.29", "6.31425, 60.6939, -21.9866, 0.29", "6.4822, 61.3169, -22.1832, 0.29", "6.76794, 62.6718, -22.6102, 1.92", "6.86429, 63.4642, -22.8747, 2.21", "6.91029, 64.6625, -23.3212, 0.29", "6.8773, 65.6665, -23.7176, 0.29", "6.78294, 66.4895, -24.0822, 0.29", "6.62481, 67.1895, -24.4162, 0.29", "6.29462, 68.1414, -24.8799, 1.84", "5.90508, 68.991, -25.3142, 2.58", "5.7673, 69.2282, -25.437, 2.5", "4.60861, 70.897, -26.3573, 0.22", "3.97789, 71.7198, -26.8493, 0.22", "3.55804, 72.2368, -27.1618, 0.96", "3.33102, 72.4993, -27.3215, 1.18", "3.12222, 72.7315, -27.4534, 1.18", "2.39723, 73.5291, -27.9021, 0.29", "2.01452, 73.9391, -28.1224, 0.29", "1.26678, 74.7592, -28.5942, 0.29", "0.287529, 75.851, -29.2425, 2.21", "-0.0495363, 76.2352, -29.4691, 2.65" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "23.5804, 44.2337, 27.7785, 0.29", "23.898, 45.2273, 27.7211, 0.29", "24.1221, 45.9425, 27.7286, 0.59", "24.2712, 46.3859, 27.7869, 0.74", "24.5309, 47.1469, 27.9225, 0.22", "24.7767, 47.8703, 28.0631, 0.22", "25.1569, 48.9958, 28.2886, 2.28", "25.2837, 49.3869, 28.3916, 2.28", "25.732, 50.7716, 28.7842, 0.29", "25.8381, 51.0919, 28.8802, 0.29", "26.1301, 51.9662, 29.1539, 0.22", "26.2102, 52.2014, 29.2206, 0.88", "26.2443, 52.2904, 29.2387, 0.88", "26.3418, 52.5216, 29.272, 0.88", "26.4016, 52.651, 29.2782, 0.88", "26.615, 53.0751, 29.3168, 0.52", "26.7592, 53.367, 29.3913, 0.15", "26.9573, 53.7931, 29.5337, 0.15", "27.0458, 54.0131, 29.6162, 0.15", "27.2402, 54.5629, 29.8272, 0.81", "27.3186, 54.8513, 29.9518, 0.96", "27.4959, 55.7406, 30.3774, 0.15", "27.5041, 55.7969, 30.4064, 0.15", "27.6118, 56.549, 30.7954, 1.55", "27.6796, 56.9572, 31.0052, 2.28", "27.939, 58.2296, 31.6707, 0.22", "28.1504, 59.1147, 32.1727, 2.65", "28.4782, 60.354, 32.8974, 0.29", "28.6075, 60.7818, 33.1569, 0.15", "28.7042, 61.0792, 33.3457, 0.15", "29.1239, 62.262, 34.1205, 2.58", "29.6484, 63.5063, 34.9435, 0.15", "29.7617, 63.7413, 35.1038, 0.37", "29.9103, 64.0202, 35.3062, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "23.5804, 44.2337, 27.7785, 0.29", "22.7439, 45.0586, 27.9923, 0.29", "22.2152, 45.6684, 28.1172, 0.29", "21.9245, 46.0618, 28.1802, 0.29", "21.6609, 46.4611, 28.2328, 0.88", "21.6391, 46.5076, 28.2364, 0.88", "21.522, 46.8506, 28.2811, 0.88", "21.4994, 47.0087, 28.2952, 0.88", "21.4991, 47.2185, 28.3224, 0.88", "21.5024, 47.2757, 28.3354, 0.88", "21.57, 48.0456, 28.5451, 0.44", "21.6364, 48.6834, 28.7227, 0.44", "21.6407, 48.7315, 28.7404, 0.44", "21.6584, 49.3298, 28.9731, 0.44", "21.6316, 50.3025, 29.4374, 1.77", "21.6316, 50.7095, 29.6532, 2.65", "21.6471, 51.0759, 29.8647, 3.02", "21.8057, 52.6937, 30.8041, 0.22", "21.9609, 53.535, 31.3459, 1.03", "22.259, 54.7035, 32.1488, 0.29", "22.5177, 55.5144, 32.7499, 0.22", "22.7006, 55.9939, 33.1236, 1.92", "22.9236, 56.4727, 33.4991, 2.28", "23.6434, 57.6896, 34.4378, 0.22", "23.8342, 58.0285, 34.7325, 0.22", "24.1509, 58.758, 35.4176, 1.11", "24.2178, 59.0245, 35.6869, 1.55", "24.2661, 59.3842, 36.0819, 1.84", "24.2665, 59.4177, 36.1209, 1.84", "24.1426, 61.0814, 38.1111, 0.29", "24.0336, 61.8578, 39.065, 0.29", "23.8882, 62.5834, 39.9392, 2.65", "23.7404, 63.1696, 40.6298, 2.36", "23.4345, 64.1755, 41.7745, 0.37", "23.4242, 64.2054, 41.8047, 0.37", "23.2473, 64.6155, 42.1129, 0.22", "23.0476, 64.9956, 42.3303, 0.66", "22.8146, 65.4094, 42.5122, 0.96", "22.5799, 65.8254, 42.6542, 0.96", "22.2269, 66.4501, 42.8361, 0.22", "21.9664, 66.9245, 43.0026, 0.22", "21.5136, 67.7588, 43.3635, 2.43", "20.7693, 69.0341, 44.081, 0.22", "20.6499, 69.2333, 44.2043, 0.88", "20.5098, 69.4714, 44.3558, 1.03", "20.0239, 70.2983, 44.9152, 0.66", "19.5781, 71.0822, 45.6195, 1.62", "19.2476, 71.7987, 46.3674, 1.62", "19.0161, 72.4868, 47.1331, 0.37", "18.9687, 72.7661, 47.4475, 2.06", "18.9671, 72.7955, 47.4798, 2.06", "19.0504, 74.809, 49.491, 1.62", "19.1446, 75.5829, 50.2629, 0.22", "19.2308, 76.0559, 50.7306, 2.06", "19.5726, 77.5174, 52.2826, 0.29", "19.6261, 77.7361, 52.5116, 0.29", "19.7972, 78.3942, 53.1259, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-13.605, 26.7337, 2.48257, 1.18", "-15.6267, 28.4014, -0.258396, 1.18", "-16.1211, 28.8115, -0.832475, 1.18", "-16.7633, 29.3422, -1.48354, 1.4", "-17.4251, 29.8989, -2.06645, 1.4", "-18.2699, 30.661, -2.81269, 1.03", "-19.0109, 31.3737, -3.44698, 0.66", "-19.6208, 32.01, -3.85474, 0.66", "-20.0361, 32.4987, -4.13959, 1.11", "-20.6233, 33.2704, -4.49251, 0.81", "-21.915, 35.1775, -5.13923, 0.66", "-22.4741, 36.0771, -5.33088, 0.66", "-22.8966, 36.8192, -5.42348, 0.66", "-23.497, 37.9321, -5.49803, 1.25", "-24.1141, 39.1492, -5.45694, 1.62", "-24.6418, 40.2316, -5.29389, 1.99", "-25.0212, 41.0239, -5.07617, 1.99", "-25.0921, 41.1745, -5.0338, 1.99", "-25.4102, 41.866, -4.84502, 1.84", "-25.9058, 42.9654, -4.59363, 1.03", "-26.291, 43.8495, -4.45935, 0.74", "-26.7268, 44.8785, -4.34533, 0.74", "-27.0513, 45.6623, -4.26992, 0.44", "-27.2886, 46.2344, -4.22159, 0.59", "-27.5937, 46.9068, -4.19893, 0.59", "-27.92, 47.5401, -4.22111, 0.59", "-27.9624, 47.6114, -4.22704, 0.59", "-28.4607, 48.3387, -4.31967, 0.44", "-28.8362, 48.8341, -4.39967, 0.29", "-29.5238, 49.6908, -4.60069, 0.29", "-30.0261, 50.3433, -4.77776, 1.47", "-30.5563, 51.0996, -4.9909, 2.06", "-30.7315, 51.4167, -5.07858, 2.21", "-30.8602, 51.7787, -5.19526, 2.21", "-31.0641, 52.8631, -5.56125, 1.18", "-31.1208, 54.0937, -5.96501, 0.37", "-31.0828, 54.7556, -6.18642, 0.37", "-30.9062, 56.0428, -6.58578, 0.37", "-30.6531, 57.5495, -7.0533, 1.33", "-30.5802, 57.9847, -7.16795, 1.77", "-30.5671, 58.077, -7.1868, 1.77", "-30.5372, 58.5548, -7.22933, 1.77", "-30.5981, 59.6134, -7.1566, 0.81", "-30.7566, 60.7553, -6.93302, 0.29", "-30.8778, 61.6997, -6.57736, 0.74", "-30.9352, 62.2949, -6.31574, 0.74", "-31.0219, 63.744, -5.61883, 0.37", "-31.0407, 64.7139, -5.11636, 0.37", "-31.0159, 65.4815, -4.68342, 0.37", "-30.868, 67.0124, -3.73696, 1.4", "-30.7586, 67.6098, -3.42192, 2.06", "-30.6767, 67.9901, -3.25265, 2.5", "-30.546, 68.5717, -3.05074, 2.5", "-30.5357, 68.6403, -3.03043, 2.5", "-30.3957, 71.0434, -2.45308, 0.44", "-30.4813, 72.5297, -2.23083, 0.37", "-30.6006, 73.3257, -2.12131, 0.37", "-30.6234, 73.4256, -2.10899, 0.37", "-31.0385, 74.8716, -1.97178, 0.37", "-31.0895, 75.0298, -1.96376, 0.37", "-31.3592, 75.7627, -1.98323, 0.37", "-31.3773, 75.8326, -1.98688, 0.37", "-31.4626, 76.5965, -2.11961, 1.47", "-31.5011, 77.4774, -2.33669, 2.21", "-31.4975, 78.0789, -2.51609, 2.65", "-31.5093, 78.6685, -2.70525, 2.5", "-31.6112, 80.5873, -3.34354, 0.29", "-31.7118, 81.4369, -3.67097, 0.29", "-31.8662, 82.2337, -4.01543, 0.29", "-32.0288, 82.7805, -4.24635, 0.29", "-32.2538, 83.4088, -4.48888, 1.33", "-32.5785, 84.2432, -4.76365, 2.28", "-33.0061, 85.3138, -5.0242, 2.73", "-33.2242, 85.9167, -5.16248, 2.43", "-33.693, 87.3496, -5.52476, 0.29", "-33.894, 87.9629, -5.70712, 0.29", "-34.0631, 88.5228, -5.87738, 0.29", "-34.1892, 88.9706, -6.00955, 0.29", "-34.4508, 90.0286, -6.2593, 0.88", "-34.562, 90.475, -6.3996, 1.55", "-34.8157, 91.263, -6.80435, 1.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-13.605, 26.7337, 2.48257, 0.74", "-14.9136, 26.9283, 2.32746, 0.74", "-15.9995, 27.1322, 2.19649, 0.74", "-16.988, 27.3336, 2.08239, 0.59", "-17.5849, 27.4659, 2.01851, 0.74", "-18.5222, 27.6863, 1.92798, 0.74", "-19.2268, 27.8583, 1.86816, 1.03", "-20.1454, 28.1096, 1.80264, 1.33", "-20.9014, 28.3102, 1.76047, 1.55", "-21.8151, 28.5253, 1.72733, 1.4", "-22.9356, 28.7488, 1.73565, 1.25", "-24.3766, 29.0202, 1.84716, 0.74", "-25.1284, 29.1729, 1.96751, 0.96", "-25.9354, 29.3471, 2.16977, 0.96", "-27.1278, 29.6535, 2.62869, 0.52", "-28.1858, 29.997, 3.23105, 0.52", "-28.968, 30.3588, 3.88295, 0.88", "-29.5192, 30.7104, 4.482, 0.59", "-29.5573, 30.7398, 4.52271, 0.59", "-30.1259, 31.2632, 5.11366, 0.29", "-30.5279, 31.6265, 5.37137, 0.29", "-31.2851, 32.0751, 5.39927, 0.74", "-31.9447, 32.3448, 5.26532, 0.96", "-33.1885, 32.7083, 4.91868, 0.59", "-33.2673, 32.7249, 4.89263, 0.59", "-34.2442, 32.8537, 4.52009, 0.29", "-34.8861, 32.904, 4.26217, 0.29", "-35.7762, 32.9163, 3.90188, 1.62", "-36.7212, 32.8605, 3.58413, 2.43", "-37.5323, 32.7716, 3.37878, 2.65", "-38.2523, 32.6746, 3.22658, 2.65", "-38.3138, 32.6665, 3.2162, 2.65", "-39.9973, 32.4996, 3.0288, 1.11", "-41.3128, 32.4408, 2.98488, 0.37", "-42.1638, 32.4744, 3.00635, 0.37", "-43.0669, 32.5972, 3.08554, 0.37", "-43.8451, 32.8108, 3.24917, 0.37", "-44.7254, 33.1965, 3.56444, 0.81", "-45.3778, 33.5906, 3.91574, 1.47", "-45.8547, 33.9025, 4.23718, 1.69", "-46.1488, 34.077, 4.45151, 1.69", "-47.4304, 34.7027, 5.4174, 0.66", "-48.4089, 35.0705, 6.14911, 0.37", "-49.0698, 35.2578, 6.6381, 0.37", "-50.2512, 35.4584, 7.45141, 1.25", "-51.1362, 35.49, 8.05769, 2.36", "-51.9119, 35.4736, 8.59771, 2.36", "-51.97, 35.4698, 8.64243, 2.36", "-52.4692, 35.4324, 9.06253, 2.21", "-53.7222, 35.3688, 10.2379, 0.37", "-55.1641, 35.3213, 11.7246, 0.59", "-56.0386, 35.306, 12.6585, 0.37", "-57.5119, 35.2971, 14.1856, 1.18", "-57.904, 35.2975, 14.5672, 1.4", "-58.7213, 35.3001, 15.3308, 1.25", "-58.7729, 35.2999, 15.383, 1.25", "-59.4867, 35.2601, 16.1809, 0.52", "-60.2708, 35.1481, 17.0838, 2.14", "-60.9935, 35.0589, 17.9429, 2.95", "-61.9862, 34.904, 19.2091, 1.92", "-63.5006, 34.7118, 21.1043, 1.03", "-65.2037, 34.5932, 23.2385, 0.44", "-65.5988, 34.5677, 23.7631, 0.44", "-66.7208, 34.5065, 25.2879, 0.44", "-68.1008, 34.4551, 27.1598, 2.36", "-69.7071, 34.4646, 29.1727, 0.22", "-70.4325, 34.521, 29.9313, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.444525, -43.0938, 2.58385, 0.36148", "-0.476297, -58.0938, 2.58385, 0.36148", "-0.508069, -73.0938, 2.58385, 0.36148" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "9.59354, -39.0448, 1.71795, 0.37", "9.85816, -39.9914, 0.65013, 0.37", "10.0704, -40.6562, -0.277256, 0.29", "10.2029, -41.0363, -0.854988, 0.29", "10.6386, -42.0088, -2.5252, 0.74", "10.6611, -42.0454, -2.59749, 0.74", "11.1201, -42.635, -3.91142, 0.66", "11.5271, -43.039, -5.15667, 0.29", "11.562, -43.0529, -5.2449, 0.29", "11.977, -43.0419, -5.98821, 0.29", "12.4969, -42.8794, -6.55947, 0.74", "12.6721, -42.7976, -6.70823, 0.74", "13.047, -42.6108, -6.93999, 1.03", "13.1966, -42.5511, -7.01766, 1.03", "13.5708, -42.4769, -7.21523, 1.03", "14.357, -42.4754, -7.63516, 0.59", "15.3011, -42.6327, -8.14155, 0.22", "16.1078, -42.8698, -8.54705, 0.22", "16.6939, -43.0879, -8.82945, 0.88", "17.7914, -43.5029, -9.39205, 1.84", "18.3495, -43.7264, -9.68699, 2.14", "19.136, -44.0364, -10.0858, 2.36", "20.5342, -44.4976, -10.7359, 0.66", "21.6705, -44.7451, -11.2246, 0.59", "23.4129, -44.9617, -11.9234, 0.52", "23.4917, -44.9622, -11.9528, 0.52", "24.4156, -44.8625, -12.3204, 1.33", "25.5371, -44.5834, -12.8019, 1.77", "26.2471, -44.333, -13.0788, 1.77", "26.5302, -44.2382, -13.1766, 1.77", "27.5134, -43.9969, -13.4882, 1.25", "28.9151, -43.7562, -13.9628, 0.52", "30.2252, -43.6289, -14.4547, 0.29", "31.5448, -43.5968, -14.965, 0.29", "32.8244, -43.6221, -15.4384, 0.22", "33.951, -43.7059, -15.9892, 0.22", "34.0322, -43.7144, -16.0396, 0.22", "34.5252, -43.7363, -16.4343, 1.03", "34.906, -43.7421, -16.8311, 1.47", "35.369, -43.7138, -17.4141, 1.47", "36.7945, -43.5441, -19.3648, 0.59", "37.3776, -43.4838, -20.2335, 0.22", "38.062, -43.4854, -21.2245, 0.22", "38.5183, -43.5356, -21.8862, 0.22", "38.5664, -43.5456, -21.9534, 0.22", "39.215, -43.7585, -22.7485, 0.22", "39.2666, -43.7783, -22.8107, 0.22", "39.9215, -44.0805, -23.8043, 1.03", "40.4603, -44.3713, -24.6746, 1.62", "40.5017, -44.3905, -24.7442, 1.62", "40.7016, -44.478, -25.066, 1.62", "41.9582, -44.989, -26.9145, 0.15", "42.0064, -45.0117, -26.9795, 0.15", "42.6498, -45.3802, -27.8063, 0.15", "42.7072, -45.4149, -27.8738, 0.15", "43.7341, -46.037, -29.0232, 1.77", "44.4533, -46.5082, -29.7307, 2.73", "44.9389, -46.8131, -30.0764, 3.02", "47.663, -48.4303, -31.7108, 0.22", "48.2404, -48.7384, -31.98, 0.22", "48.302, -48.7681, -32.0006, 0.22", "49.9404, -49.4349, -32.2676, 0.22", "52.3112, -50.1501, -32.35, 0.22", "52.4729, -50.1899, -32.3377, 0.22", "53.6054, -50.4423, -32.1128, 1.55", "54.7055, -50.69, -31.9211, 2.21", "55.725, -50.9211, -31.7868, 1.4", "57.4493, -51.3011, -31.694, 0.22", "58.5784, -51.6258, -31.6766, 0.22", "59.5325, -51.9244, -31.6253, 0.22", "60.1112, -52.132, -31.5497, 0.44", "60.1886, -52.162, -31.536, 0.44", "60.9932, -52.5052, -31.3251, 0.22", "62.8574, -53.36, -30.7548, 1.62", "63.5797, -53.7196, -30.5245, 2.14", "66.2962, -55.1935, -29.6796, 0.22", "67.0304, -55.6274, -29.457, 1.47", "69.3673, -57.1132, -28.7897, 1.11", "70.0678, -57.6073, -28.6094, 1.33", "71.8456, -58.9611, -28.3158, 0.22", "72.7198, -59.624, -28.184, 0.22", "73.1763, -59.9666, -28.1342, 1.47", "73.64, -60.2705, -28.0425, 2.14", "74.5382, -60.7985, -27.8489, 2.14", "76.8348, -62.1124, -27.2239, 0.22", "78.8418, -63.2275, -26.5855, 1.77", "79.3051, -63.4909, -26.4222, 2.36", "82.7661, -65.5108, -25.0399, 0.29", "83.887, -66.186, -24.5678, 0.29", "84.6365, -66.668, -24.2294, 0.29", "84.7001, -66.715, -24.2007, 0.29", "85.3012, -67.192, -23.95, 0.29", "87.3538, -68.8631, -23.134, 2.28", "87.9598, -69.3554, -22.923, 2.65", "90.2778, -71.1369, -22.0778, 0.22", "91.1244, -71.7576, -21.7774, 0.22", "92.5467, -72.7588, -21.3383, 0.96", "93.2837, -73.2412, -21.1553, 1.47", "95.7526, -74.7158, -20.8051, 0.22", "96.9825, -75.3413, -20.7235, 0.81", "97.1493, -75.4119, -20.7278, 0.81", "99.1612, -76.1022, -20.9753, 0.22", "100.144, -76.3791, -21.2445, 0.22", "102.256, -76.8773, -21.9479, 0.22", "103.344, -77.0536, -22.4546, 0.22", "103.418, -77.0619, -22.494, 0.22", "105.104, -77.2045, -23.4647, 0.96", "106.081, -77.2128, -24.1648, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "9.59354, -39.0448, 1.71795, 1.25", "8.82689, -40.6725, 1.86984, 1.25", "8.1577, -42.3377, 1.93296, 0.81", "7.74428, -43.6584, 1.88903, 0.81", "7.40694, -45.198, 1.75509, 0.96", "7.1732, -46.7842, 1.53742, 0.74", "6.99599, -47.9867, 1.3724, 1.11", "6.9375, -48.7973, 1.1751, 1.69", "7.01924, -50.1326, 0.726357, 2.36", "7.24665, -51.1638, 0.281563, 2.65", "7.5164, -51.8067, -0.0562988, 2.65" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-7.63165, -20.5388, 11.871, 0.81", "-8.24106, -19.7482, 11.5752, 0.81", "-8.68374, -19.0908, 11.2782, 0.66", "-9.11375, -18.4057, 10.9551, 0.66", "-9.35198, -18.0264, 10.7455, 0.96", "-9.78875, -17.3817, 10.3482, 0.44", "-10.1211, -16.9163, 10.0413, 0.44", "-10.6211, -16.2211, 9.49732, 0.59", "-10.8151, -16.0018, 9.27767, 0.59", "-11.2962, -15.6932, 8.80988, 0.59", "-11.7105, -15.6006, 8.49356, 0.59", "-11.7591, -15.6049, 8.46589, 0.59", "-12.2439, -15.7326, 8.23965, 0.59", "-12.9133, -15.9691, 8.01633, 1.33", "-13.5042, -16.1915, 7.86003, 1.69", "-14.1201, -16.4158, 7.75376, 1.55", "-14.8685, -16.6668, 7.72716, 0.88", "-15.5589, -16.8379, 7.90634, 0.44", "-16.1908, -16.9643, 8.2636, 0.44", "-16.4622, -17.0238, 8.49447, 0.74", "-16.8517, -17.1359, 8.93195, 0.88", "-17.739, -17.4447, 10.0715, 1.03", "-19.168, -18.0296, 12.0589, 0.52", "-19.8364, -18.3386, 13.0289, 1.25", "-20.4293, -18.6629, 13.9196, 1.25", "-20.9349, -18.9863, 14.8003, 0.44", "-21.2919, -19.2508, 15.4903, 0.44", "-21.7313, -19.558, 16.4234, 0.29", "-22.3855, -19.9165, 17.972, 1.99", "-22.5766, -20.003, 18.4087, 1.99", "-23.9845, -20.5687, 21.4855, 1.99", "-24.0081, -20.5773, 21.5356, 1.99", "-26.2593, -21.3571, 26.2952, 2.73", "-28.909, -22.2617, 31.7184, 1.4", "-29.3178, -22.3972, 32.5075, 1.25", "-29.7228, -22.5222, 33.2107, 0.22", "-30.0115, -22.6164, 33.6426, 0.22", "-30.1441, -22.6681, 33.8303, 1.11", "-30.6181, -22.9214, 34.3776, 1.47", "-32.1128, -23.9269, 35.7781, 1.18", "-32.5284, -24.1994, 36.2079, 1.99", "-33.5212, -24.8279, 37.2859, 0.22", "-34.1374, -25.2194, 37.9545, 0.22", "-34.3255, -25.3377, 38.149, 0.66", "-35.1203, -25.8282, 38.9407, 0.66", "-35.6792, -26.1757, 39.3853, 0.29", "-36.3165, -26.5077, 39.8746, 1.33", "-36.5385, -26.5657, 39.9933, 1.62", "-36.9609, -26.629, 40.196, 1.84" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-7.63165, -20.5388, 11.871, 1.62", "-7.68254, -21.4151, 11.6929, 1.62", "-7.72959, -22.1064, 11.5446, 1.33", "-7.78785, -22.9644, 11.3471, 0.88", "-7.84407, -23.9473, 11.1104, 0.74", "-7.90493, -25.1188, 10.8267, 0.74", "-7.94071, -26.2055, 10.5801, 2.14", "-7.94739, -27.225, 10.3786, 2.21", "-7.90959, -28.4417, 10.2202, 1.47", "-7.82182, -29.3797, 10.1768, 1.18", "-7.72049, -29.9218, 10.2122, 0.88", "-7.47099, -30.7533, 10.4188, 0.59", "-7.0979, -31.7051, 10.7979, 0.59", "-6.70772, -32.6061, 11.2545, 1.18", "-6.54229, -32.9878, 11.4897, 1.47", "-6.32545, -33.5592, 11.8744, 1.11", "-6.08693, -34.5399, 12.4977, 0.74", "-6.18541, -35.0579, 12.6914, 0.44", "-6.62273, -35.6256, 12.6797, 0.44", "-7.09623, -36.0911, 12.5755, 0.52", "-7.65148, -36.5334, 12.4293, 0.52", "-8.18934, -36.9156, 12.2695, 1.18", "-8.91479, -37.4262, 12.0348, 1.92", "-9.65403, -38.0154, 11.7796, 2.5", "-10.3392, -38.6754, 11.5201, 2.36", "-11.1168, -39.5729, 11.1966, 2.06", "-11.7115, -40.3783, 10.9213, 0.59", "-12.2196, -41.1346, 10.6875, 0.52", "-12.7157, -41.9579, 10.4609, 0.44", "-13.1801, -42.8368, 10.2134, 1.4", "-13.5472, -43.6323, 9.99572, 1.84", "-13.9132, -44.5484, 9.74681, 1.84", "-14.1878, -45.281, 9.54528, 1.69", "-14.4744, -46.0895, 9.32244, 1.18", "-14.7332, -46.9083, 9.08737, 0.74", "-14.8634, -47.4265, 8.92042, 0.66", "-15.0009, -48.1952, 8.64246, 0.59", "-15.0675, -48.8632, 8.35897, 0.52", "-15.0909, -49.3363, 8.12546, 0.37", "-15.1172, -50.1873, 7.68001, 0.29", "-15.1525, -50.9739, 7.26089, 0.29", "-15.1573, -51.0309, 7.229, 0.29", "-15.3247, -52.1115, 6.61468, 1.77", "-15.5298, -53.0176, 6.16128, 2.36", "-15.5412, -53.0608, 6.14171, 2.36", "-15.686, -53.5635, 5.94912, 2.58", "-15.8443, -54.1117, 5.7532, 2.58", "-16.1062, -54.9915, 5.43176, 1.84", "-16.374, -55.9471, 5.0947, 0.81", "-16.59, -56.8098, 4.801, 0.52", "-16.7633, -57.5817, 4.56717, 0.44", "-16.9861, -58.633, 4.28539, 0.44", "-17.1646, -59.5511, 4.09904, 0.37", "-17.2685, -60.1576, 4.02981, 0.37", "-17.3594, -60.7433, 4.00619, 0.37", "-17.4763, -61.5487, 4.04711, 0.29", "-17.5498, -62.2147, 4.11494, 0.29", "-17.6397, -63.2717, 4.32654, 1.99", "-17.701, -63.9604, 4.51539, 2.95", "-17.7485, -64.3862, 4.65245, 2.95", "-17.9052, -65.8062, 5.14275, 0.59", "-17.9778, -66.6249, 5.45707, 0.44", "-18.0546, -67.7351, 5.9292, 0.37", "-18.0897, -68.5319, 6.2863, 0.37", "-18.071, -69.311, 6.65564, 1.69", "-18.032, -69.7443, 6.87726, 2.58", "-17.9341, -70.392, 7.22636, 2.58", "-17.7603, -71.4759, 7.79388, 0.29", "-17.6385, -72.2219, 8.12492, 0.29", "-17.4978, -73.2181, 8.5855, 0.29", "-17.4055, -73.9803, 8.95164, 0.66", "-17.3803, -74.2631, 9.09625, 0.74", "-17.3321, -74.9854, 9.47643, 0.29", "-17.305, -75.6718, 9.88181, 0.29", "-17.3268, -76.8122, 10.5696, 1.4", "-17.3439, -77.1912, 10.7816, 1.92", "-17.3427, -77.242, 10.8072, 1.92", "-17.3104, -77.5201, 10.9435, 1.92", "-17.0887, -78.5282, 11.3724, 0.22", "-17.0731, -78.5799, 11.392, 0.22", "-16.8506, -79.2292, 11.6224, 0.66", "-16.7545, -79.4914, 11.7199, 0.81", "-16.4126, -80.2896, 12.0233, 0.22", "-16.0737, -81.0178, 12.2949, 2.14", "-15.7742, -81.6076, 12.5057, 2.58", "-15.0137, -82.9967, 13.0199, 0.22", "-14.623, -83.6803, 13.2807, 0.22", "-14.1703, -84.4462, 13.573, 0.22", "-13.8095, -85.0258, 13.7887, 0.22", "-13.4426, -85.5755, 14.0015, 2.36", "-12.8548, -86.4093, 14.3057, 2.73" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "39.5801, -12.0256, -93.9458, 0.15", "42.5913, -16.6269, -114.887, 0.15", "42.8208, -16.9586, -116.3, 1.69", "42.9428, -17.1293, -116.999, 1.92", "42.9625, -17.1545, -117.097, 1.92", "43.7779, -18.1117, -120.644, 0.22", "43.9569, -18.3025, -121.316, 0.22", "44.7548, -18.7871, -122.078, 1.18", "44.809, -18.8268, -122.137, 1.18", "45.8613, -19.6541, -123.401, 0.29", "46.3172, -19.9873, -123.949, 0.59", "47.2069, -20.5885, -124.989, 0.37", "48.6913, -21.4122, -126.774, 0.74", "48.7522, -21.4412, -126.851, 0.74", "49.9692, -22.0941, -128.546, 0.15", "50.5369, -22.438, -129.464, 0.15", "50.5815, -22.4683, -129.535, 0.15", "50.8728, -22.6913, -130.007, 0.15", "50.9385, -22.7471, -130.099, 0.15", "51.8091, -23.4735, -131.224, 0.15", "52.496, -24.0432, -132.057, 1.4", "52.9699, -24.4284, -132.62, 1.69", "55.0707, -26.1022, -135.062, 0.22", "55.7885, -26.6588, -135.889, 0.22", "56.6633, -27.3092, -136.81, 0.22", "57.3046, -27.7386, -137.399, 0.96", "57.569, -27.9206, -137.618, 0.96", "58.788, -28.7022, -138.536, 0.22", "58.8455, -28.7376, -138.572, 0.22", "59.9694, -29.45, -139.296, 0.22", "61.0744, -30.2164, -139.934, 1.55", "61.6761, -30.6086, -140.231, 1.99", "63.3806, -31.7098, -141.115, 0.29", "63.4501, -31.7531, -141.152, 0.29", "64.4486, -32.4091, -141.791, 0.29", "65.7224, -33.345, -142.719, 0.29", "66.1425, -33.7161, -143.092, 0.29", "67.6045, -35.2411, -144.765, 1.4", "68.0491, -35.7957, -145.405, 1.69", "69.195, -37.3537, -147.26, 0.29", "69.9381, -38.5179, -148.692, 0.29", "70.7861, -40.0559, -150.561, 1.47", "71.6111, -41.8218, -152.605, 1.18", "72.2717, -43.4933, -154.395, 0.22", "72.5063, -44.2063, -155.089, 0.22", "72.8746, -45.6055, -156.289, 1.69", "73.0198, -46.267, -156.785, 1.77", "73.3184, -47.9872, -157.717, 0.66", "73.4248, -48.8934, -158.059, 0.22", "73.5147, -50.0327, -158.407, 0.96", "73.6027, -51.2078, -158.794, 0.22", "73.6675, -51.7774, -159.064, 0.15", "73.834, -52.76, -159.755, 0.15", "74.1018, -53.9554, -160.731, 0.44", "74.3269, -54.9325, -161.616, 1.33", "74.5177, -55.7849, -162.435, 1.25", "74.9887, -58.6279, -165.276, 1.25", "75.2644, -60.6281, -167.361, 0.15", "75.3494, -61.3692, -168.141, 0.15", "75.4061, -62.3685, -169.18, 0.81", "75.4138, -62.7665, -169.577, 0.96", "75.4412, -64.6557, -171.296, 0.52", "75.4862, -66.266, -172.625, 0.22", "75.5266, -67.0231, -173.234, 1.18", "75.8184, -69.8849, -175.646, 0.22", "75.9674, -70.8599, -176.477, 0.96", "76.3698, -72.8069, -178.136, 0.22", "76.5298, -73.3652, -178.595, 0.52", "76.5919, -73.5807, -178.765, 0.52", "77.2871, -75.7839, -180.525, 0.52" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "39.5801, -12.0256, -93.9458, 1.55", "39.7051, -10.3493, -100.133, 1.55", "39.7849, -10.0014, -101.315, 1.62", "40.5712, -8.02115, -107.55, 0.22", "40.5921, -7.98146, -107.669, 0.22", "40.9094, -7.52833, -109.024, 1.33", "41.1192, -7.27401, -109.769, 1.25", "42.6006, -5.875, -113.287, 0.22", "43.2673, -5.31734, -114.62, 1.18", "43.6514, -5.02401, -115.221, 1.33", "45.4341, -3.68998, -117.873, 0.22", "46.7079, -2.76149, -119.694, 1.84", "47.0821, -2.46725, -120.204, 1.84", "48.1987, -1.50925, -121.543, 0.29", "48.4829, -1.2455, -121.877, 0.74", "49.6399, -0.0668452, -123.176, 0.22", "49.7561, 0.0733669, -123.304, 0.22", "50.2195, 0.699663, -123.851, 0.88", "51.1907, 2.31468, -125.457, 0.22", "51.3577, 2.65251, -125.815, 0.52", "51.6145, 3.24357, -126.472, 0.22", "52.1545, 4.57071, -128.051, 1.92", "52.3783, 5.16806, -128.781, 1.92", "52.9816, 7.06355, -131.167, 0.22", "53.0608, 7.38201, -131.56, 0.88", "53.1313, 7.65301, -131.893, 0.88", "53.4692, 8.75838, -133.196, 0.22", "53.6495, 9.28201, -133.811, 0.22", "53.6675, 9.34343, -133.884, 0.22", "53.784, 9.6304, -134.242, 0.22", "54.319, 10.7407, -135.731, 1.4", "54.449, 10.9836, -136.06, 1.4", "55.1957, 12.2396, -137.785, 0.22", "55.5286, 12.6815, -138.415, 0.96", "56.3969, 13.6792, -139.825, 0.22", "56.6576, 13.9332, -140.183, 0.22", "57.1069, 14.267, -140.624, 0.66", "57.8294, 14.6893, -141.156, 0.66", "59.2288, 15.3076, -141.844, 0.22", "59.9532, 15.5617, -142.118, 1.11", "60.4464, 15.6962, -142.264, 1.4", "62.5579, 16.0546, -142.797, 0.22", "63.5391, 16.139, -143.002, 0.22", "64.7526, 16.1634, -143.194, 0.96", "65.7842, 16.1431, -143.337, 1.47", "67.508, 16.0657, -143.578, 0.22", "68.409, 16.0246, -143.77, 0.22", "68.568, 16.0153, -143.816, 0.22", "69.5363, 15.9879, -144.166, 0.22", "70.8936, 15.9802, -144.734, 1.33", "71.4828, 16.007, -145.014, 1.62", "73.5381, 16.2119, -146.097, 0.22", "74.4606, 16.3284, -146.593, 0.66", "75.0024, 16.3919, -146.89, 0.66", "75.1693, 16.4078, -146.987, 0.66", "76.8159, 16.5363, -147.932, 0.22", "78.0019, 16.5848, -148.699, 1.11", "78.8201, 16.5945, -149.25, 1.33", "80.5784, 16.589, -150.519, 0.22", "81.8067, 16.5973, -151.48, 1.25", "82.303, 16.6035, -151.953, 1.33", "84.5687, 16.6251, -154.421, 0.22", "84.8405, 16.6301, -154.743, 0.44", "84.9573, 16.6346, -154.897, 0.44", "85.8596, 16.6918, -156.238, 1.18", "87.9139, 16.9241, -159.568, 0.22", "88.3775, 16.9988, -160.376, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-7.49482, -28.5775, -44.1571, 1.55", "-8.1951, -29.5462, -46.4641, 1.55", "-8.8264, -30.2107, -48.4162, 0.22", "-9.10092, -30.5152, -49.2318, 0.22", "-9.53669, -31.0724, -50.7496, 2.36", "-9.83706, -31.5501, -52.1724, 2.87", "-11.0261, -33.3718, -58.531, 0.81", "-11.0352, -33.3849, -58.5964, 0.81", "-11.1646, -33.6478, -60.286, 0.81", "-11.1495, -34.0846, -63.5263, 2.06", "-10.8751, -34.5229, -66.8912, 1.25", "-10.5322, -34.8997, -69.3201, 0.81", "-9.70815, -35.8243, -73.802, 0.96", "-9.57858, -36.0137, -74.7435, 1.47", "-9.3699, -36.4011, -76.7404, 0.22", "-9.29641, -36.5886, -77.5636, 0.22", "-9.10555, -37.0879, -79.8329, 1.4", "-8.88828, -37.674, -82.442, 1.03", "-8.76122, -38.205, -84.7606, 1.69", "-8.63355, -38.8243, -87.4992, 1.4", "-8.45782, -39.4346, -90.2264, 1.4", "-7.95724, -40.5588, -95.1389, 1.84", "-7.38227, -41.4515, -98.8025, 0.15", "-7.10865, -41.8097, -100.063, 1.84", "-6.98544, -41.9626, -100.513, 1.84", "-6.16871, -43.0659, -103.233, 0.22", "-5.8356, -43.5079, -104.276, 1.55", "-5.69608, -43.6461, -104.612, 1.77", "-4.91162, -44.1402, -106.345, 0.22", "-4.65999, -44.2545, -106.884, 0.22", "-4.04788, -44.4861, -108.14, 1.77", "-1.21707, -45.3453, -113.727, 1.25", "0.0311, -45.6568, -116.102, 0.81", "0.918449, -45.8608, -117.749, 0.15", "1.31369, -45.939, -118.465, 0.37", "2.00738, -46.0904, -119.634, 0.22", "2.97517, -46.3021, -121.063, 1.77", "3.26958, -46.3815, -121.421, 1.84", "5.5563, -47.0483, -124.172, 0.96", "6.32409, -47.276, -125.066, 1.4", "7.8089, -47.6353, -126.815, 0.22", "8.1176, -47.6849, -127.166, 0.22", "8.23431, -47.6927, -127.28, 0.22", "9.12827, -47.6859, -128.022, 0.22", "9.65888, -47.6473, -128.308, 1.18", "9.72984, -47.6429, -128.337, 1.18", "10.3292, -47.5994, -128.547, 1.18", "12.0546, -47.5733, -129.148, 0.29", "12.7902, -47.5793, -129.419, 0.44", "13.3889, -47.5812, -129.64, 0.44", "14.3496, -47.5785, -129.979, 0.22", "15.4791, -47.5703, -130.359, 1.47", "16.0597, -47.5706, -130.541, 1.62", "17.6873, -47.5727, -130.984, 0.22", "18.5414, -47.5736, -131.245, 0.22", "19.0181, -47.5995, -131.413, 0.59", "19.0791, -47.6135, -131.438, 0.59", "19.3561, -47.7635, -131.611, 0.59", "19.4665, -47.8758, -131.773, 0.59", "19.8315, -48.4895, -132.652, 0.15", "20.0007, -48.8342, -133.146, 1.18", "20.1852, -49.244, -133.75, 1.18", "20.6316, -50.3346, -135.399, 0.44", "21.1548, -51.9005, -137.754, 0.22", "21.2266, -52.2398, -138.286, 0.22", "21.2257, -52.4529, -138.705, 0.74", "21.2058, -52.502, -138.829, 0.74", "20.7622, -52.9886, -140.41, 0.22", "20.5373, -53.1628, -141.037, 0.22", "19.6476, -53.6726, -143.15, 1.47", "18.4909, -54.1711, -145.633, 1.33", "17.2337, -54.6358, -148.221, 0.59", "16.3497, -54.9087, -149.961, 0.44", "16.0454, -54.9751, -150.515, 0.44", "15.2601, -55.1065, -151.914, 0.22", "14.7584, -55.1769, -152.689, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.49482, -28.5775, -44.1571, 2.87", "-7.95959, -28.7513, -44.3901, 2.87", "-8.78435, -29.0661, -44.7392, 2.73", "-10.199, -29.6063, -45.2772, 0.29", "-10.3824, -29.6758, -45.3561, 0.29", "-11.4441, -30.0691, -45.8206, 0.29", "-12.5112, -30.4345, -46.2923, 1.55", "-13.012, -30.5782, -46.4928, 2.21", "-13.24, -30.6321, -46.5907, 2.21", "-14.7771, -30.9576, -47.3669, 0.22", "-15.2907, -31.0609, -47.6854, 0.22", "-15.738, -31.1449, -48.0159, 0.66", "-15.9137, -31.1673, -48.1535, 0.81", "-16.9601, -31.2597, -48.9567, 0.22", "-17.381, -31.2892, -49.2532, 0.22", "-18.1419, -31.3402, -49.7429, 1.84", "-18.5315, -31.3744, -49.9984, 2.21", "-19.1512, -31.4649, -50.4557, 2.06", "-20.1548, -31.6582, -51.2828, 0.29", "-20.568, -31.7742, -51.6837, 0.29", "-21.3749, -32.0684, -52.5917, 1.69", "-21.6981, -32.2176, -52.9988, 1.99", "-22.7839, -32.8192, -54.4982, 1.11", "-23.2287, -33.1421, -55.1882, 1.11", "-23.8764, -33.7756, -56.3675, 0.29", "-24.0721, -34.0167, -56.7756, 0.29", "-24.1245, -34.1041, -56.9081, 0.52", "-24.2467, -34.373, -57.267, 0.52", "-24.3277, -34.7322, -57.701, 0.22", "-24.3454, -34.9743, -57.9947, 0.22", "-24.3449, -35.0058, -58.0325, 0.22", "-24.2695, -36.4462, -59.7003, 2.06", "-24.2538, -36.8327, -60.1321, 2.36", "-24.2736, -38.0476, -61.4813, 0.22", "-24.2881, -38.3362, -61.8197, 0.22", "-24.3109, -38.6744, -62.1998, 0.22", "-24.3483, -39.3257, -62.8786, 1.33", "-24.3702, -39.7898, -63.3654, 1.47", "-24.4444, -40.7051, -64.3866, 0.22", "-24.6038, -41.601, -65.6115, 0.22", "-24.6875, -42.0063, -66.2146, 1.4", "-24.7266, -42.199, -66.5235, 1.69", "-24.928, -43.4856, -68.6626, 0.22", "-24.9791, -44.0137, -69.6035, 1.92", "-25.061, -45.2879, -72.1939, 0.29", "-25.0737, -45.5523, -72.8162, 0.29", "-25.073, -45.5912, -72.9145, 0.29", "-25.0566, -45.8886, -73.6207, 0.74", "-24.9881, -46.4444, -74.8145, 1.55", "-24.7391, -47.8072, -77.5135, 1.47", "-24.4425, -49.0941, -79.8149, 0.29", "-24.3691, -49.4305, -80.4069, 0.29", "-24.2473, -50.0511, -81.4295, 1.4", "-24.0585, -51.1426, -83.0568, 1.69", "-24.0032, -51.4103, -83.4007, 1.69", "-23.5458, -52.9792, -85.1422, 0.22", "-23.5221, -53.0471, -85.2196, 0.22", "-23.4066, -53.336, -85.5735, 0.22", "-23.2116, -53.7694, -86.1383, 1.47", "-22.7049, -54.8924, -87.5696, 0.22", "-22.5721, -55.1767, -87.9284, 1.4", "-22.1108, -56.0828, -89.1723, 1.4", "-21.7285, -56.7955, -90.219, 0.22", "-21.3099, -57.5329, -91.5187, 1.62", "-21.2973, -57.5546, -91.5616, 1.62", "-21.19, -57.7709, -92.0207, 1.62", "-20.789, -58.8087, -94.3425, 0.15", "-20.7282, -59.0234, -94.8489, 1.4", "-20.5949, -60.0695, -97.6286, 1.11", "-20.5954, -60.0849, -97.6678, 1.11", "-20.6948, -60.6312, -98.954, 0.37", "-20.7825, -60.8714, -99.4483, 0.74", "-20.8624, -61.0258, -99.7051, 0.88", "-21.4146, -62.0512, -101.186, 0.22", "-21.6592, -62.5603, -101.684, 1.33", "-21.8309, -63.0849, -102.076, 1.11", "-21.9864, -63.7535, -102.5, 0.22", "-21.9933, -63.7961, -102.525, 0.22", "-22.0749, -64.5583, -102.869, 0.22", "-22.1165, -65.3881, -103.01, 0.22", "-22.0831, -66.6284, -103.144, 1.84" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "12.9447, 86.6219, -73.4011, 0.22", "12.473, 88.6432, -73.6077, 0.22", "12.4408, 88.797, -73.6218, 0.22", "12.2443, 89.9971, -73.7956, 0.22", "12.176, 90.9145, -74.0287, 0.66", "12.1765, 91.0543, -74.0728, 0.66", "12.2153, 91.5296, -74.2753, 0.66", "12.2329, 91.5962, -74.3134, 0.66", "12.516, 92.3787, -74.8315, 0.22", "13.0111, 93.3487, -75.575, 0.88", "13.2146, 93.6759, -75.8324, 0.88", "13.9243, 94.6791, -76.6027, 0.29", "13.9916, 94.7635, -76.6539, 0.29", "14.5537, 95.4578, -76.9413, 0.29", "15.3754, 96.4816, -77.1395, 1.03", "15.7398, 96.9496, -77.1614, 1.25", "16.6544, 98.1807, -77.1202, 0.37", "17.858, 99.7987, -76.9595, 0.22", "18.8377, 101.146, -76.7872, 0.22", "19.6426, 102.301, -76.5809, 0.81", "20.2888, 103.296, -76.3312, 0.22", "20.5804, 103.784, -76.1887, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "12.9447, 86.6219, -73.4011, 0.81", "13.8868, 88.6125, -74.2804, 0.81", "14.4847, 89.6446, -74.6934, 0.22", "14.9779, 90.4657, -74.9785, 0.22", "15.4885, 91.3347, -75.25, 1.18", "15.8681, 91.9932, -75.418, 1.18", "15.9116, 92.0675, -75.437, 1.18", "16.7981, 93.6834, -75.7158, 0.29", "17.2355, 94.4155, -75.8166, 0.44", "17.4934, 94.7644, -75.9852, 0.44", "18.2101, 95.7084, -76.6721, 0.22", "18.6777, 96.3423, -77.2284, 1.18", "18.9378, 96.6577, -77.7381, 1.47", "19.1039, 96.8441, -78.2012, 1.47", "20.4016, 98.4036, -82.7919, 0.52", "20.5962, 98.6234, -83.6055, 0.81", "20.7069, 98.7439, -84.1444, 0.81", "21.9403, 99.9782, -90.8852, 1.11", "22.5839, 100.546, -95.1621, 0.59", "22.7796, 100.683, -96.9555, 0.29", "22.8901, 100.649, -99.4187, 0.74", "22.8898, 100.637, -99.5177, 0.74", "22.7764, 100.31, -100.437, 0.81", "22.1585, 99.0576, -101.464, 0.29", "21.6546, 98.0206, -101.986, 0.29", "20.9048, 96.4179, -102.644, 0.29", "20.0744, 94.7733, -103.205, 0.29", "19.1921, 93.0317, -103.787, 0.22", "18.6331, 91.9475, -104.138, 0.59", "18.477, 91.6224, -104.223, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.0495363, 76.2352, -29.4691, 0.22", "-2.04759, 77.8033, -28.5132, 0.22", "-2.52674, 78.1707, -28.3312, 0.66", "-3.43445, 78.8653, -28.0369, 0.22", "-4.35199, 79.5584, -27.7705, 1.4", "-4.84406, 79.9121, -27.628, 1.4", "-6.77691, 81.2875, -27.0748, 0.22", "-7.83449, 82.0001, -26.8467, 0.22", "-9.38067, 83.0215, -26.5549, 1.47", "-9.70321, 83.238, -26.5027, 1.84", "-11.8238, 84.7058, -26.2337, 0.22", "-12.1728, 84.9531, -26.198, 0.52", "-13.3078, 85.8015, -26.1531, 0.15", "-13.9901, 86.3412, -26.1501, 0.88", "-14.7989, 87.0275, -26.1943, 0.22", "-15.8542, 87.9874, -26.3106, 1.84", "-16.2182, 88.3381, -26.3799, 1.99", "-17.8825, 89.9446, -26.7084, 0.22", "-18.3814, 90.4392, -26.8105, 1.11", "-18.8073, 90.8632, -26.8884, 1.25", "-19.8742, 91.8834, -27.0411, 0.15", "-20.4583, 92.4208, -27.0859, 0.44", "-20.6911, 92.6275, -27.0905, 0.44", "-20.763, 92.6894, -27.0869, 0.44", "-21.9468, 93.6798, -26.9519, 0.15", "-22.727, 94.3506, -26.8239, 0.15", "-22.7785, 94.3977, -26.8125, 0.15", "-23.1668, 94.7781, -26.7256, 0.66", "-23.6499, 95.2859, -26.6376, 0.81", "-24.6323, 96.3743, -26.5136, 0.15", "-25.0057, 96.8127, -26.4926, 0.15", "-25.8394, 97.8493, -26.4881, 1.47", "-26.2295, 98.3536, -26.4984, 1.47", "-26.9509, 99.3147, -26.5387, 0.22", "-27.2644, 99.7546, -26.5883, 0.52", "-27.4034, 99.9592, -26.6281, 0.52", "-27.9565, 100.785, -26.8251, 0.15", "-28.5907, 101.744, -27.1514, 1.33", "-28.8188, 102.087, -27.2856, 1.69", "-29.5229, 103.139, -27.7667, 0.22", "-29.8745, 103.671, -28.021, 0.59", "-30.1718, 104.122, -28.2496, 0.59", "-30.7017, 104.913, -28.6964, 0.15", "-31.554, 106.169, -29.4822, 1.33", "-31.9082, 106.689, -29.8145, 1.47" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-0.0495363, 76.2352, -29.4691, 0.29", "-1.23563, 77.2439, -30.8933, 0.29", "-1.70151, 77.6323, -31.4123, 0.52", "-2.43661, 78.2394, -32.1613, 0.74", "-2.73366, 78.4811, -32.4385, 0.88", "-3.53773, 79.1468, -33.1419, 0.15", "-3.83996, 79.4103, -33.3925, 0.15", "-4.24529, 79.8025, -33.6737, 1.33", "-4.65076, 80.2236, -33.9192, 1.77", "-5.44628, 81.0731, -34.3198, 0.22", "-5.77932, 81.4429, -34.4636, 0.22", "-6.21955, 81.9917, -34.6239, 0.88", "-6.41805, 82.2714, -34.7001, 0.88", "-6.88352, 83.0079, -34.884, 0.15", "-7.17075, 83.5824, -34.9808, 0.15", "-7.34254, 84.0592, -35.021, 0.15", "-7.59449, 85.0282, -35.0664, 2.14", "-7.64807, 85.3668, -35.0697, 2.14", "-7.65131, 85.4324, -35.068, 2.14", "-7.55157, 86.839, -34.9765, 0.15", "-7.46112, 87.2878, -34.94, 0.15", "-7.34617, 87.6686, -34.9227, 0.15", "-7.19563, 88.0655, -34.9167, 0.66", "-6.99587, 88.5346, -34.943, 0.81", "-6.9554, 88.6167, -34.9545, 0.81", "-6.56842, 89.2331, -35.1902, 0.15", "-6.18707, 89.8525, -35.4796, 0.88", "-6.15997, 89.8958, -35.5063, 0.88", "-6.02708, 90.12, -35.6563, 0.88", "-5.97403, 90.2201, -35.723, 0.88", "-5.56478, 91.1355, -36.2835, 0.15", "-5.44074, 91.4787, -36.4853, 0.15", "-5.22832, 92.1962, -36.8884, 1.11", "-5.11031, 92.7288, -37.1806, 1.11", "-4.86992, 94.2631, -37.9907, 0.22", "-4.8207, 94.7784, -38.2868, 0.22", "-4.79591, 95.5623, -38.7538, 1.47", "-4.81192, 96.1347, -39.1077, 1.69", "-4.9881, 97.6627, -40.3761, 0.15", "-5.07423, 98.0467, -40.7935, 0.88", "-5.43321, 99.0969, -42.1614, 0.22", "-5.50711, 99.2805, -42.4318, 1.55", "-5.67148, 99.6361, -42.9888, 1.84", "-6.60479, 101.444, -45.9474, 0.59", "-6.91259, 101.947, -46.81, 0.22", "-7.04947, 102.164, -47.1624, 0.74", "-7.49511, 102.841, -48.1258, 0.15", "-7.77705, 103.263, -48.6602, 0.15", "-7.99906, 103.579, -49.0, 0.81", "-8.21703, 103.847, -49.2201, 0.81", "-8.81684, 104.509, -49.9374, 0.15", "-9.07567, 104.77, -50.3567, 0.96", "-9.31845, 104.994, -50.7934, 0.96", "-10.0004, 105.586, -52.0927, 0.22", "-10.3707, 105.903, -52.8103, 1.4", "-11.1693, 106.59, -54.3971, 1.69", "-12.0925, 107.405, -56.2366, 0.74", "-12.4624, 107.743, -56.9694, 0.22", "-12.654, 107.923, -57.3191, 0.59", "-12.9811, 108.24, -57.7677, 0.22", "-13.0167, 108.277, -57.7942, 0.22", "-13.4513, 108.741, -57.8795, 0.22", "-13.7288, 109.058, -57.858, 0.52", "-14.3015, 109.822, -57.7636, 0.15", "-14.8688, 110.701, -57.6142, 1.84", "-15.608, 111.974, -57.3528, 0.15", "-15.8087, 112.343, -57.2588, 0.29", "-15.864, 112.462, -57.225, 0.29", "-16.1338, 113.163, -57.0107, 0.15", "-16.3248, 113.777, -56.817, 0.74", "-16.3769, 113.983, -56.7608, 0.74", "-16.6324, 115.063, -56.513, 0.22", "-16.8817, 116.029, -56.3064, 0.22", "-17.0994, 116.835, -56.1468, 1.69", "-17.192, 117.178, -56.0869, 1.69", "-17.414, 118.132, -55.9544, 0.22", "-17.4975, 118.547, -55.9087, 0.37", "-17.621, 119.329, -55.8575, 0.15", "-17.6485, 119.521, -55.8505, 0.37", "-17.7405, 120.224, -55.8575, 0.15", "-17.7934, 120.816, -55.905, 0.74", "-17.8018, 120.938, -55.9222, 0.74", "-17.8135, 121.102, -55.9534, 0.74", "-17.866, 121.931, -56.1295, 0.15", "-17.9104, 122.519, -56.2587, 1.03", "-18.0296, 123.727, -56.4958, 0.15", "-18.1542, 124.792, -56.6858, 1.99", "-18.2273, 125.231, -56.7579, 1.99", "-18.4604, 126.213, -56.9073, 0.22", "-18.6514, 126.841, -56.9973, 0.81", "-18.9725, 127.702, -57.1063, 0.22", "-18.9965, 127.753, -57.112, 0.22", "-19.3462, 128.421, -57.2005, 0.22", "-19.6886, 128.994, -57.3179, 0.22", "-20.0043, 129.479, -57.4838, 0.22", "-20.4, 130.113, -57.7748, 0.22", "-20.6272, 130.52, -57.9636, 1.03", "-20.7379, 130.746, -58.0632, 1.03", "-21.1701, 131.862, -58.4987, 0.22", "-21.5132, 132.793, -58.86, 0.59", "-21.8234, 133.645, -59.1847, 0.22", "-22.1544, 134.639, -59.5565, 2.06", "-22.2788, 135.062, -59.6998, 1.69", "-22.5499, 136.207, -60.0337, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-34.8157, 91.263, -6.80435, 0.22", "-35.3545, 92.9711, -7.39683, 0.22", "-35.6508, 93.8202, -7.7434, 0.66", "-35.8651, 94.4251, -7.99814, 0.81", "-36.5385, 96.2263, -8.75132, 0.22", "-36.9865, 97.337, -9.20382, 0.66", "-37.3406, 98.0776, -9.49248, 0.96", "-38.2985, 99.8166, -10.1747, 0.22", "-38.5332, 100.209, -10.3184, 0.22", "-38.8618, 100.754, -10.4912, 0.52", "-39.2111, 101.397, -10.65, 0.52", "-40.0222, 103.11, -10.99, 0.22", "-40.5221, 104.339, -11.2128, 0.22", "-40.9327, 105.488, -11.3339, 1.77", "-41.1464, 106.221, -11.3493, 2.06", "-41.6834, 108.887, -11.1609, 0.22", "-41.7623, 109.535, -11.0758, 0.59", "-41.8076, 110.46, -10.8936, 0.66", "-41.8816, 113.026, -10.2695, 0.22", "-41.9084, 115.245, -9.65496, 0.22", "-41.9118, 117.503, -8.97643, 1.47", "-41.9094, 118.326, -8.70273, 1.92", "-41.9251, 120.897, -7.89667, 0.22", "-41.9384, 121.714, -7.66776, 0.22", "-41.9688, 122.757, -7.43968, 0.74", "-41.9999, 123.126, -7.38338, 0.74", "-42.2426, 124.757, -7.19545, 0.15", "-42.5038, 126.147, -7.0182, 0.15", "-42.703, 127.063, -6.90302, 0.96", "-42.8078, 127.526, -6.83768, 1.33", "-42.9065, 127.933, -6.78062, 1.33", "-42.9328, 128.033, -6.76752, 1.33", "-43.5269, 129.896, -6.55809, 0.22", "-43.7684, 130.558, -6.47193, 0.81", "-44.0847, 131.328, -6.36839, 0.81", "-44.5814, 132.475, -6.21204, 0.22", "-44.7626, 132.866, -6.16177, 0.44", "-45.5945, 134.515, -5.97356, 0.22", "-45.8739, 135.005, -5.92696, 0.59", "-46.2787, 135.705, -5.82366, 0.59", "-46.8637, 136.727, -5.63747, 0.15", "-47.5046, 137.854, -5.40229, 0.15", "-48.0344, 138.799, -5.19781, 1.11", "-48.3649, 139.382, -5.06936, 1.62", "-49.5127, 141.324, -4.65475, 0.15", "-49.8531, 141.877, -4.53433, 0.59", "-50.0079, 142.117, -4.48413, 0.59", "-50.538, 142.984, -4.31767, 0.22", "-50.9723, 143.725, -4.19551, 0.22", "-51.205, 144.138, -4.14717, 0.59", "-51.4593, 144.614, -4.12535, 0.59", "-51.8701, 145.504, -4.08644, 0.22", "-52.3756, 146.854, -4.03539, 0.22", "-52.3756, 146.854, -4.03539, 0.66", "-52.4764, 147.557, -4.03589, 0.66", "-52.5924, 148.783, -4.05324, 0.22", "-52.6464, 149.726, -4.07733, 1.4", "-52.6646, 150.295, -4.09757, 1.77", "-52.7204, 153.043, -4.21706, 0.22", "-52.7333, 153.909, -4.25607, 0.96", "-52.742, 154.658, -4.29095, 0.96", "-52.7628, 155.973, -4.3541, 0.22", "-52.8166, 157.687, -4.43191, 0.22", "-52.8721, 158.9, -4.48267, 0.88", "-52.9073, 159.559, -4.50671, 1.25", "-52.9581, 160.706, -4.54197, 0.22", "-52.9653, 160.899, -4.54373, 0.22", "-52.9517, 161.614, -4.50477, 0.22", "-52.8942, 162.206, -4.44043, 0.22", "-52.6587, 163.601, -4.19973, 0.22", "-52.5357, 164.174, -4.0829, 0.81", "-52.3188, 164.972, -3.8394, 0.81", "-51.8255, 166.616, -3.24332, 0.15", "-51.4349, 167.782, -2.76508, 0.15", "-50.815, 169.536, -1.96846, 1.4", "-50.6633, 169.97, -1.75718, 1.84", "-49.8866, 172.292, -0.614312, 0.22", "-49.8612, 172.37, -0.575959, 0.22", "-49.7727, 172.665, -0.429945, 0.22", "-49.751, 172.745, -0.392437, 0.22", "-49.5206, 173.74, 0.0240371, 0.22", "-49.2385, 175.018, 0.473642, 0.88", "-49.213, 175.115, 0.501527, 0.88", "-49.0867, 175.502, 0.61609, 1.03", "-48.4564, 177.234, 1.12944, 0.22", "-47.7271, 179.059, 1.66117, 1.55", "-47.3933, 179.82, 1.9092, 1.92", "-46.4267, 181.97, 2.63532, 0.22", "-46.1622, 182.554, 2.83951, 0.22", "-45.933, 183.045, 3.01792, 0.52", "-45.7174, 183.445, 3.17863, 0.52", "-44.9253, 184.827, 3.74432, 0.22", "-44.7055, 185.206, 3.92958, 0.59", "-44.4936, 185.569, 4.13397, 0.59", "-44.4229, 185.691, 4.2007, 0.59", "-43.7819, 186.733, 4.73967, 0.22", "-43.7416, 186.807, 4.7724, 0.22", "-43.1674, 187.963, 5.19406, 0.22", "-43.14, 188.032, 5.21569, 0.22", "-42.7699, 189.295, 5.51974, 0.88", "-42.6259, 189.962, 5.64046, 1.47", "-42.3885, 191.752, 5.88822, 0.22", "-42.3823, 191.828, 5.89745, 0.22", "-42.3138, 193.434, 6.041, 0.22", "-42.2321, 194.828, 6.13448, 0.88", "-42.1916, 195.321, 6.15311, 1.33", "-42.0181, 196.827, 6.17352, 0.15", "-41.9373, 197.391, 6.16198, 0.15", "-41.7048, 198.865, 6.13042, 0.15", "-41.2959, 201.084, 6.07087, 1.77", "-40.8486, 203.22, 5.99405, 0.22", "-40.6066, 204.291, 5.93591, 0.22", "-40.4341, 204.963, 5.87426, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-34.8157, 91.263, -6.80435, 0.22", "-35.6992, 92.7229, -8.2286, 0.22", "-35.716, 92.7715, -8.28204, 0.22", "-35.815, 93.2537, -8.79421, 0.22", "-35.9058, 93.8916, -9.46213, 1.11", "-35.9691, 94.4731, -10.0931, 1.92", "-36.0168, 94.9108, -10.5536, 2.14", "-36.1416, 97.1173, -12.6291, 0.22", "-36.1383, 97.5832, -13.1675, 0.22", "-36.1351, 97.6362, -13.2325, 0.22", "-36.0502, 98.4539, -14.2543, 0.22", "-35.9661, 98.9195, -14.7983, 0.88", "-35.8785, 99.3773, -15.3033, 0.88", "-35.4188, 101.966, -17.8704, 1.25", "-35.2756, 102.908, -18.7566, 1.62", "-35.2657, 102.97, -18.8115, 1.62", "-35.016, 104.33, -19.9006, 0.29", "-34.9403, 104.743, -20.2101, 0.66", "-34.931, 104.805, -20.248, 0.66", "-34.8864, 105.337, -20.5752, 0.66", "-34.8818, 105.396, -20.6181, 0.66", "-34.7731, 106.582, -21.5724, 0.22", "-34.6766, 107.853, -22.7504, 2.14", "-34.6465, 108.3, -23.1796, 2.8", "-34.472, 111.195, -26.0194, 0.37", "-34.4077, 112.293, -27.1137, 0.37", "-34.321, 113.957, -28.7572, 0.96", "-34.221, 115.564, -30.3046, 0.22", "-34.1686, 116.224, -30.9236, 1.11", "-34.1631, 116.28, -30.9716, 1.11", "-34.129, 116.593, -31.184, 1.11", "-33.9969, 117.703, -31.8442, 0.15", "-33.8984, 118.75, -32.3293, 0.15", "-33.81, 119.627, -32.6911, 0.15", "-33.7191, 120.872, -33.2264, 1.99", "-33.7065, 121.652, -33.5626, 2.21", "-33.7714, 122.879, -34.059, 0.74", "-33.9371, 124.096, -34.4967, 0.29", "-33.9516, 124.165, -34.5176, 0.29", "-34.0941, 124.746, -34.6786, 0.52", "-34.22, 125.249, -34.8164, 0.52", "-34.3837, 125.973, -35.0336, 0.29", "-34.4688, 126.431, -35.1931, 0.74", "-34.5376, 127.178, -35.5759, 0.96", "-34.5816, 128.465, -36.3441, 0.22", "-34.5709, 129.549, -37.0534, 1.55", "-34.5602, 130.121, -37.4445, 1.99", "-34.5799, 130.996, -38.1811, 1.99", "-34.7374, 132.632, -39.7462, 0.37", "-34.8046, 132.86, -40.1732, 0.37", "-34.9039, 133.05, -40.6633, 0.37", "-35.0885, 133.28, -41.4007, 0.37", "-35.7941, 133.904, -43.7753, 1.92", "-36.021, 134.05, -44.4256, 2.43", "-39.0117, 135.525, -51.9551, 0.37", "-39.2724, 135.638, -52.5871, 0.44", "-39.6106, 135.771, -53.3658, 0.29", "-39.9038, 135.878, -53.9964, 0.29", "-40.182, 135.989, -54.5013, 0.66", "-40.3976, 136.082, -54.8631, 0.88", "-41.1289, 136.374, -56.0264, 0.66", "-41.498, 136.501, -56.7828, 0.22", "-41.8208, 136.574, -57.5845, 1.55", "-42.2204, 136.661, -58.6537, 2.36", "-43.2249, 136.85, -61.5203, 2.36", "-44.6154, 137.052, -65.7088, 0.88", "-45.0328, 137.092, -67.0408, 0.52", "-45.8173, 137.114, -69.8511, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "7.5164, -51.8067, -0.0562988, 0.37", "9.10706, -52.4685, -0.56021, 0.37", "9.92729, -52.8913, -0.81473, 0.29", "10.8995, -53.479, -1.06474, 0.66", "11.7901, -54.0551, -1.26497, 1.33", "12.3561, -54.4327, -1.38095, 1.62", "12.9846, -54.8577, -1.50235, 1.62", "13.8845, -55.5883, -1.66418, 0.59", "14.7353, -56.3638, -1.81963, 0.37", "15.1757, -56.8078, -1.93317, 0.74", "15.4837, -57.1519, -2.06346, 0.74", "15.5237, -57.2009, -2.08896, 0.74", "15.9304, -57.7783, -2.46455, 0.29", "16.4728, -58.6744, -3.04286, 0.29", "16.9574, -59.561, -3.49021, 1.92", "17.4946, -60.58, -3.87023, 3.09", "17.6568, -60.8799, -3.9417, 3.61", "18.1723, -61.7804, -4.03726, 3.32", "19.1008, -63.3311, -4.01575, 0.88", "20.0331, -64.753, -3.75837, 0.44", "20.5425, -65.4654, -3.5499, 0.44", "21.2213, -66.3497, -3.21682, 1.18", "21.8449, -67.0722, -2.90788, 1.69", "22.2736, -67.4782, -2.69813, 1.69", "23.8644, -68.6558, -2.01709, 0.44", "24.4978, -69.0552, -1.79368, 0.66", "24.5536, -69.0885, -1.77316, 0.66", "25.1365, -69.4336, -1.56982, 0.66", "25.9689, -70.011, -1.20703, 0.29", "26.2426, -70.3105, -1.01476, 0.29", "26.3339, -71.0048, -0.617819, 0.29", "26.3044, -71.8404, -0.129251, 0.81", "26.2827, -72.251, 0.100424, 1.03", "26.2903, -73.477, 0.818117, 0.37", "26.3432, -74.0592, 1.14282, 0.37", "26.3721, -74.179, 1.21898, 0.37", "26.7141, -75.0237, 1.79422, 0.52", "27.0249, -75.5975, 2.19166, 0.88", "27.7848, -76.749, 3.05609, 0.37", "28.3622, -77.5306, 3.60752, 0.29", "29.2787, -78.7303, 4.39206, 1.77", "29.7003, -79.313, 4.7792, 2.58", "29.7551, -79.3963, 4.83799, 2.58", "30.4036, -80.5523, 5.74959, 2.58", "30.9644, -81.6981, 6.67747, 0.37", "31.4975, -82.8462, 7.64073, 0.37", "32.0039, -83.9605, 8.53598, 0.66", "32.4164, -84.8492, 9.2459, 0.74", "32.9769, -85.9492, 10.066, 0.29", "33.2752, -86.4673, 10.4373, 0.29", "33.4824, -86.7574, 10.6391, 1.11", "33.7533, -87.0773, 10.8218, 1.33", "34.3303, -87.6674, 11.08, 0.88", "35.2481, -88.5423, 11.4332, 0.29", "36.2198, -89.4055, 11.7687, 0.29", "37.1488, -90.2022, 12.1056, 2.65", "37.197, -90.2444, 12.1267, 2.65", "37.7677, -90.7603, 12.4403, 3.09", "38.7073, -91.705, 13.2413, 0.37", "39.3812, -92.4577, 13.9513, 0.15", "39.7879, -92.9497, 14.4253, 0.15", "40.5046, -93.8775, 15.3494, 2.14", "41.0805, -94.7122, 16.188, 2.58", "42.5256, -97.0914, 18.5031, 0.44", "42.7955, -97.6233, 19.0347, 0.88", "42.8797, -97.8168, 19.2335, 0.88", "42.8993, -97.869, 19.2867, 0.88", "43.2972, -99.0631, 20.4195, 0.22", "43.5329, -99.8277, 21.0926, 0.22", "43.818, -100.811, 21.8981, 1.55", "44.1964, -102.091, 22.9555, 2.14", "44.6156, -103.597, 24.147, 0.15", "44.7395, -104.097, 24.5215, 0.81", "44.9851, -105.141, 25.2533, 0.15", "45.1357, -105.837, 25.7241, 1.55", "45.2029, -106.158, 25.924, 1.77", "45.499, -107.718, 26.8461, 0.15", "45.7955, -109.395, 27.9435, 0.15", "45.8475, -109.71, 28.2004, 0.52", "45.9907, -110.761, 29.1766, 0.22", "46.0988, -111.685, 30.1411, 0.74", "46.1229, -111.898, 30.3838, 0.74", "46.25, -113.018, 31.8478, 0.59", "46.3578, -114.292, 33.7627, 0.22", "46.3646, -114.478, 34.0705, 0.52", "46.3538, -114.859, 34.7994, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.5164, -51.8067, -0.0562988, 0.88", "6.81291, -53.1891, 0.415061, 0.88", "6.37617, -54.0554, 0.712192, 0.37", "5.91136, -55.0057, 1.05508, 0.37", "5.20687, -56.4214, 1.54915, 0.37", "4.83346, -57.2027, 1.80039, 1.47", "4.38798, -58.1401, 1.99659, 2.14", "4.20199, -58.5376, 2.0535, 2.14", "3.74603, -59.6498, 2.07513, 1.03", "3.42274, -60.5992, 1.80245, 0.44", "3.14122, -61.5469, 1.3386, 0.37", "2.61642, -63.3706, 0.238405, 1.77", "2.46129, -63.8595, -0.081537, 2.14", "2.14976, -64.7159, -0.640147, 2.21", "1.04968, -67.4201, -2.33894, 0.29", "0.694984, -68.2243, -2.79333, 0.29", "0.0937001, -69.4045, -3.35834, 0.29", "-0.521919, -70.504, -3.74563, 0.29", "-1.24692, -71.6813, -4.09676, 0.29", "-1.9694, -72.7333, -4.29042, 0.88", "-2.33321, -73.2193, -4.28355, 1.62", "-3.2044, -74.3201, -4.24179, 1.99", "-3.44899, -74.6507, -4.21508, 1.99" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-12.8548, -86.4093, 14.3057, 0.29", "-11.7078, -87.4634, 14.0405, 0.29", "-11.4377, -87.7197, 13.9871, 0.44", "-10.5411, -88.6225, 13.8693, 0.22", "-9.8701, -89.3695, 13.857, 0.22", "-9.83544, -89.4107, 13.8592, 0.22", "-9.67301, -89.6111, 13.8778, 0.66", "-9.46487, -89.909, 13.9445, 0.66", "-8.97482, -90.6078, 14.1702, 0.22", "-8.48596, -91.3116, 14.4649, 1.4", "-8.28254, -91.6037, 14.5865, 1.84", "-8.25753, -91.6396, 14.6011, 1.84", "-7.6716, -92.5017, 14.9358, 0.29", "-7.1573, -93.3507, 15.2432, 0.29", "-6.82194, -94.005, 15.4464, 0.29", "-6.51987, -94.7405, 15.6289, 1.69", "-6.40121, -95.1542, 15.7226, 2.28", "-6.33964, -95.4936, 15.787, 2.5", "-6.29385, -96.7022, 16.0155, 0.29", "-6.33967, -97.5541, 16.1734, 0.29", "-6.41656, -98.4051, 16.3333, 0.29", "-6.51578, -99.3732, 16.5274, 2.06", "-6.58485, -100.076, 16.6783, 2.65", "-6.69851, -101.574, 17.0293, 0.29", "-6.73147, -102.297, 17.2171, 0.22", "-6.74438, -102.865, 17.3805, 0.22", "-6.73986, -103.321, 17.5142, 0.88", "-6.72384, -103.646, 17.6087, 1.18", "-6.70006, -103.913, 17.6898, 1.18", "-6.57939, -104.686, 17.9259, 0.22", "-6.51301, -105.051, 18.0537, 0.22", "-6.43942, -105.481, 18.2263, 0.22", "-6.36847, -105.857, 18.3873, 1.25", "-6.28106, -106.209, 18.5705, 1.25", "-5.99048, -107.173, 19.1146, 0.22", "-5.77049, -107.671, 19.4282, 0.22", "-5.36762, -108.343, 19.8791, 1.11", "-5.15449, -108.63, 20.081, 1.55", "-4.41756, -109.479, 20.689, 0.22", "-3.88357, -109.967, 21.0493, 0.22", "-2.9969, -110.573, 21.5083, 0.22", "-2.3795, -110.919, 21.7775, 1.69", "-2.12946, -111.026, 21.8592, 1.99", "-2.07999, -111.043, 21.8724, 1.99", "-0.974609, -111.299, 22.0036, 0.29", "-0.0166703, -111.465, 22.0595, 0.29", "0.0371494, -111.473, 22.0592, 0.29", "1.01602, -111.616, 22.0411, 1.4", "1.53138, -111.683, 22.0191, 1.62", "3.29587, -111.882, 21.888, 0.22", "3.34905, -111.886, 21.8804, 0.22", "4.11733, -111.912, 21.719, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-12.8548, -86.4093, 14.3057, 0.29", "-12.7609, -87.8313, 14.5529, 0.29", "-12.6953, -88.7604, 14.7129, 0.29", "-12.6646, -89.1776, 14.781, 0.74", "-12.614, -89.9315, 14.8881, 0.81", "-12.5824, -90.4069, 14.9496, 1.11", "-12.5359, -91.088, 15.0284, 0.44", "-12.4934, -91.6696, 15.0733, 0.29", "-12.4395, -92.3783, 15.1217, 0.29", "-12.3524, -93.3806, 15.1839, 2.21", "-12.3022, -93.8429, 15.2017, 2.73", "-12.1231, -95.1193, 15.2248, 0.29", "-12.0385, -95.6099, 15.2213, 0.29", "-11.9243, -96.1509, 15.2141, 0.81", "-11.8965, -96.2598, 15.2121, 0.96", "-11.6744, -96.9803, 15.211, 0.22", "-11.466, -97.6068, 15.2227, 0.22", "-11.3273, -97.9957, 15.2414, 1.33", "-11.2226, -98.3334, 15.2764, 1.62", "-11.2095, -98.3874, 15.284, 1.62", "-11.0671, -99.1582, 15.4251, 0.29", "-10.9791, -99.7147, 15.5529, 0.22", "-10.8981, -100.229, 15.6865, 0.22", "-10.8065, -100.789, 15.8433, 1.11", "-10.7349, -101.23, 15.9716, 1.47", "-10.6365, -102.018, 16.2435, 0.22", "-10.602, -102.558, 16.4641, 0.22", "-10.5886, -103.11, 16.7151, 0.74", "-10.5988, -103.263, 16.7873, 0.74", "-10.6053, -103.306, 16.8081, 0.74", "-10.942, -104.611, 17.4638, 0.22", "-11.1857, -105.346, 17.8346, 1.99", "-11.2804, -105.598, 17.9595, 1.99", "-11.7375, -106.672, 18.5254, 0.22", "-12.2224, -107.747, 19.1141, 0.22", "-12.5865, -108.514, 19.5369, 1.84", "-12.657, -108.657, 19.6147, 1.99", "-12.706, -108.752, 19.669, 1.99", "-13.4342, -110.133, 20.4985, 0.22", "-13.6408, -110.524, 20.7531, 0.96", "-13.9808, -111.139, 21.1695, 0.22", "-14.1225, -111.404, 21.3556, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-22.0831, -66.6284, -103.144, 0.29", "-21.2394, -67.8554, -103.223, 0.29", "-20.3316, -69.2161, -103.34, 0.22", "-20.0319, -69.7122, -103.385, 0.52", "-19.8057, -70.1561, -103.436, 0.52", "-19.3487, -71.1929, -103.563, 0.22", "-18.987, -72.0731, -103.672, 0.22", "-18.7474, -72.8298, -103.783, 0.81", "-18.5438, -73.55, -103.893, 1.11", "-18.2162, -74.8439, -104.061, 0.22", "-18.0426, -75.6364, -104.149, 0.22", "-17.8818, -76.5376, -104.231, 0.22", "-17.7868, -77.2059, -104.301, 1.11", "-17.5892, -78.5766, -104.456, 0.22", "-17.3127, -80.2327, -104.65, 0.22", "-17.1248, -81.1868, -104.762, 1.33", "-17.0393, -81.5328, -104.817, 1.47", "-16.5067, -83.4192, -105.178, 0.22", "-16.205, -84.2272, -105.377, 1.11", "-15.9404, -84.7821, -105.551, 1.47", "-15.6451, -85.2922, -105.74, 1.47", "-14.6306, -86.76, -106.346, 0.15", "-14.5885, -86.8108, -106.37, 0.15", "-13.6889, -87.5936, -106.818, 0.88", "-13.6384, -87.6343, -106.846, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-22.0831, -66.6284, -103.144, 1.69", "-22.8457, -67.6593, -103.327, 1.69", "-23.7216, -68.5181, -103.588, 0.22", "-23.7664, -68.5565, -103.602, 0.22", "-24.6222, -69.2527, -103.858, 0.22", "-25.3342, -69.8136, -104.116, 0.88", "-25.9849, -70.3165, -104.373, 1.11", "-27.1194, -71.0339, -104.839, 0.22", "-27.5874, -71.2864, -105.027, 0.52", "-27.7436, -71.3558, -105.09, 0.52", "-28.9137, -71.7055, -105.624, 0.37", "-28.9663, -71.7196, -105.649, 0.29", "-29.5026, -71.8723, -105.871, 0.22", "-29.7789, -71.9613, -105.978, 0.37", "-30.3748, -72.1607, -106.248, 0.37", "-31.3192, -72.6052, -106.93, 0.29", "-31.9841, -73.0392, -107.542, 0.29", "-32.5007, -73.4556, -108.111, 0.22", "-33.1482, -74.152, -109.0, 1.11", "-33.5551, -74.6912, -109.658, 1.33", "-34.6889, -76.3374, -111.662, 0.29", "-34.9756, -76.821, -112.251, 0.59", "-34.991, -76.8507, -112.29, 0.59", "-35.3482, -77.6542, -113.391, 0.29", "-35.361, -77.6903, -113.438, 0.29", "-35.7565, -78.7582, -114.63, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-22.5499, 136.207, -60.0337, 0.22", "-21.5292, 139.568, -63.4814, 0.22", "-21.1631, 140.702, -64.588, 0.37", "-20.9606, 141.329, -65.1438, 0.15", "-20.7826, 141.802, -65.5691, 0.44", "-20.3748, 142.877, -66.5444, 0.22", "-19.8744, 144.274, -67.8413, 1.25", "-19.3197, 146.032, -69.2804, 0.22", "-19.0828, 146.848, -70.0102, 1.03", "-18.548, 148.883, -71.9367, 0.22", "-18.4567, 149.274, -72.3196, 0.22", "-18.2531, 150.4, -73.4068, 1.11", "-18.2142, 150.768, -73.7458, 1.4", "-18.1801, 152.47, -75.161, 0.22", "-18.1914, 152.859, -75.4587, 0.59", "-18.3407, 154.719, -76.5832, 0.22", "-18.3943, 155.401, -76.9357, 0.88", "-18.4474, 155.953, -77.146, 1.03", "-18.6344, 157.387, -77.5688, 0.22", "-18.7505, 158.117, -77.7059, 0.59", "-19.0072, 159.489, -77.8971, 0.22", "-19.1829, 160.446, -77.9869, 0.22", "-19.433, 162.098, -78.143, 1.47", "-19.4908, 162.575, -78.1835, 1.47", "-19.5747, 163.875, -78.3306, 0.22", "-19.5815, 164.527, -78.4379, 0.52", "-19.5407, 166.295, -78.7996, 0.22", "-19.5156, 166.81, -78.9197, 1.03", "-19.4929, 167.144, -79.0141, 1.03", "-19.2375, 170.741, -80.158, 0.22", "-19.1617, 171.837, -80.5216, 0.96", "-19.1267, 172.403, -80.7179, 0.96", "-19.1242, 172.479, -80.7453, 0.96", "-19.0562, 174.406, -81.4951, 0.22", "-19.012, 175.48, -81.9471, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-22.5499, 136.207, -60.0337, 0.22", "-22.796, 136.392, -61.6982, 0.22", "-23.1909, 136.58, -64.3884, 0.15", "-23.4949, 136.674, -66.3586, 1.4", "-23.7435, 136.751, -67.9705, 1.4", "-24.0584, 136.849, -70.0119, 0.22", "-24.1821, 136.887, -70.8137, 0.22", "-24.2777, 136.894, -71.8346, 0.88", "-24.318, 136.873, -72.1275, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-45.8173, 137.114, -69.8511, 0.66", "-46.8057, 137.079, -76.5777, 0.66", "-46.975, 137.152, -77.4554, 0.29", "-47.0902, 137.248, -77.9237, 0.22", "-47.3045, 137.465, -78.6498, 0.22", "-47.5086, 137.688, -79.265, 1.03", "-47.7025, 137.895, -79.7709, 1.47", "-48.3679, 138.706, -80.3395, 0.88", "-48.9997, 139.426, -80.8926, 0.22", "-49.1918, 139.596, -81.0766, 0.29", "-49.2506, 139.629, -81.1296, 0.29", "-49.7086, 139.793, -81.5246, 0.15", "-50.241, 139.9, -81.9932, 0.96", "-50.748, 139.949, -82.4156, 1.4", "-51.7256, 140.017, -83.3892, 0.22", "-52.377, 140.098, -84.1615, 0.22", "-52.8658, 140.203, -84.9542, 0.74", "-53.4811, 140.397, -86.1553, 0.22", "-53.6835, 140.478, -86.6125, 0.96", "-54.3322, 140.818, -88.341, 1.33", "-54.6026, 141.009, -89.1196, 1.84", "-55.5078, 141.766, -92.0174, 0.88", "-55.6398, 141.875, -92.4393, 1.03", "-55.6618, 141.892, -92.5021, 1.03", "-56.4496, 142.413, -94.5623, 0.22", "-56.9378, 142.678, -95.6106, 1.33", "-58.2412, 143.246, -97.9533, 0.22", "-58.8434, 143.458, -98.8148, 1.33", "-59.5431, 143.642, -99.699, 0.22", "-59.5778, 143.648, -99.7364, 0.22", "-60.3312, 143.653, -100.35, 0.22", "-61.0684, 143.551, -100.827, 1.4", "-61.5431, 143.445, -101.011, 1.84", "-62.1834, 143.233, -101.222, 1.33", "-62.9759, 142.895, -101.484, 0.81", "-63.6747, 142.548, -101.721, 0.22", "-64.3132, 142.133, -101.951, 1.4", "-64.6585, 141.875, -102.079, 1.69", "-64.8707, 141.708, -102.154, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-45.8173, 137.114, -69.8511, 0.29", "-47.4796, 139.169, -73.1495, 0.29", "-47.9392, 139.786, -74.025, 0.22", "-48.1589, 140.131, -74.4653, 0.96", "-48.3037, 140.378, -74.7635, 1.18", "-48.8455, 141.415, -75.9097, 0.22", "-49.0169, 141.77, -76.2791, 0.52", "-49.095, 142.0, -76.4227, 0.52", "-49.6316, 143.596, -77.3076, 0.22", "-49.6519, 143.656, -77.3352, 0.22", "-49.9088, 144.425, -77.6181, 0.22", "-49.9291, 144.488, -77.6327, 0.22", "-50.4645, 145.981, -77.8462, 0.22", "-50.4892, 146.044, -77.8494, 0.22", "-51.0164, 147.362, -77.9053, 0.22", "-51.0402, 147.425, -77.9113, 0.22", "-51.2792, 148.103, -78.0036, 0.44", "-51.7563, 149.616, -78.2517, 0.15", "-52.3111, 151.697, -78.7182, 0.15", "-52.7469, 153.555, -79.1989, 0.15", "-53.0195, 154.945, -79.6101, 0.15", "-53.1813, 155.903, -79.9398, 0.88", "-53.2701, 156.575, -80.2037, 1.25", "-53.4033, 158.325, -80.9876, 0.22", "-53.4153, 158.772, -81.2046, 0.59", "-53.4153, 159.254, -81.4265, 0.59", "-53.4137, 160.85, -82.129, 0.22", "-53.4114, 161.444, -82.3785, 0.22", "-53.4133, 161.711, -82.4865, 0.66", "-53.4152, 162.253, -82.6798, 0.74", "-53.3742, 163.875, -83.1123, 0.15", "-53.3301, 164.848, -83.273, 0.15", "-53.326, 164.906, -83.2772, 0.15", "-53.2666, 165.657, -83.3073, 0.52", "-53.2049, 166.297, -83.2911, 0.52", "-53.0151, 168.168, -83.1131, 0.22", "-52.9135, 169.286, -82.9095, 1.03", "-52.8774, 169.903, -82.7661, 1.03", "-52.879, 169.979, -82.7458, 1.03", "-53.0179, 171.082, -82.4006, 0.15", "-53.1533, 171.545, -82.255, 0.52", "-53.3529, 171.935, -82.148, 0.52", "-53.782, 172.631, -81.9342, 0.22", "-54.3677, 173.469, -81.6753, 0.22", "-54.6735, 173.867, -81.5633, 0.22", "-55.0723, 174.306, -81.4686, 0.59", "-55.5424, 174.826, -81.3582, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.44899, -74.6507, -4.21508, 0.37", "-4.38495, -76.7199, -3.14422, 0.37", "-4.72333, -77.573, -2.56759, 0.74", "-5.42827, -79.5574, -1.02572, 0.22", "-5.76483, -80.5425, -0.208424, 0.81", "-5.94741, -81.1126, 0.299509, 0.81", "-6.56812, -83.1648, 2.23773, 1.47", "-6.92045, -84.5752, 3.78978, 2.06", "-7.18227, -86.2083, 5.75177, 0.22", "-7.23407, -86.7633, 6.43686, 0.52", "-7.31105, -87.7738, 7.71415, 0.22", "-7.38051, -88.7094, 8.89421, 1.77", "-7.47798, -89.8503, 10.2955, 2.43", "-7.8062, -93.0062, 14.0813, 0.22", "-7.84295, -93.3941, 14.5462, 0.59", "-7.90052, -93.9818, 15.2329, 0.22", "-7.94251, -94.3235, 15.6136, 0.44", "-8.11449, -95.4459, 16.8164, 0.15", "-8.33465, -96.3233, 17.7086, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-3.44899, -74.6507, -4.21508, 0.29", "-4.78044, -75.9677, -4.02096, 0.29", "-5.43252, -76.6338, -3.93364, 0.29", "-6.08885, -77.3149, -3.84536, 0.29", "-6.84155, -78.1408, -3.66966, 0.29", "-7.52405, -78.9105, -3.46183, 0.29", "-8.03576, -79.4997, -3.29035, 1.77", "-8.58369, -80.1621, -3.02333, 2.21", "-8.76845, -80.3978, -2.92649, 2.36", "-9.5988, -81.5509, -2.46052, 0.74", "-10.038, -82.1334, -2.20021, 0.29", "-10.5279, -82.7314, -1.92603, 0.29", "-11.2172, -83.5194, -1.55857, 1.92", "-11.6495, -83.9827, -1.3454, 2.28", "-11.9932, -84.3249, -1.21146, 2.28", "-13.0624, -85.3336, -0.911496, 0.29", "-13.942, -86.1713, -0.695175, 0.22", "-14.2453, -86.4616, -0.632861, 0.96", "-14.4652, -86.6668, -0.637306, 1.18", "-15.2269, -87.3808, -0.774724, 0.22", "-15.4814, -87.5943, -0.904114, 0.22", "-15.7815, -87.8273, -1.11635, 0.22", "-16.2371, -88.1392, -1.44798, 0.66", "-17.9002, -89.1089, -2.65508, 1.62", "-18.1233, -89.2103, -2.81096, 2.14", "-20.4871, -90.0201, -4.31889, 0.37", "-21.2399, -90.2154, -4.74952, 0.37", "-21.8925, -90.3251, -5.09284, 1.47", "-22.8091, -90.3917, -5.54765, 1.47", "-24.543, -90.3923, -6.30079, 0.22", "-25.38, -90.3474, -6.63439, 1.25", "-25.754, -90.3058, -6.75871, 1.84", "-26.9978, -90.1565, -7.193, 1.84", "-29.7792, -89.8916, -8.21224, 0.22", "-30.263, -89.8555, -8.38203, 0.88", "-30.9829, -89.8295, -8.65353, 0.88", "-31.666, -89.8447, -8.92971, 0.22", "-32.7814, -89.9336, -9.36894, 0.22", "-33.5611, -90.0493, -9.67398, 1.03", "-33.8215, -90.1034, -9.78141, 1.03", "-35.3372, -90.4677, -10.6168, 0.22", "-35.8071, -90.6051, -10.9134, 0.22", "-36.7536, -90.9187, -11.562, 1.25", "-37.6797, -91.2423, -12.188, 1.18", "-37.7334, -91.2639, -12.2257, 1.18", "-39.3868, -92.0461, -13.4726, 0.22", "-39.7975, -92.2851, -13.8096, 1.18", "-40.0971, -92.4906, -14.0844, 1.18", "-40.9579, -93.285, -15.0866, 0.22", "-41.1452, -93.4806, -15.3333, 0.22", "-41.5804, -93.9197, -15.9383, 0.66", "-41.7841, -94.1348, -16.2217, 0.81", "-41.9594, -94.318, -16.4713, 0.81", "-42.8173, -95.1723, -17.7673, 0.52", "-43.7074, -96.1075, -19.1723, 0.22", "-44.4669, -96.8956, -20.3302, 0.22", "-44.9419, -97.3823, -21.0289, 2.21", "-45.4184, -97.8591, -21.6788, 2.28", "-47.4143, -99.8361, -24.1584, 0.22", "-47.8669, -100.283, -24.6448, 0.22", "-48.6993, -101.132, -25.4529, 0.22", "-48.7362, -101.167, -25.4825, 0.22", "-49.3998, -101.718, -25.8754, 0.37", "-49.9165, -102.084, -26.0223, 0.88", "-50.8976, -102.682, -26.0142, 1.69", "-51.4783, -103.003, -25.9995, 2.21", "-52.3823, -103.5, -25.9523, 2.21", "-53.1627, -103.948, -25.9333, 1.11", "-53.8397, -104.379, -25.9513, 0.37", "-53.8864, -104.416, -25.9546, 0.37", "-54.7087, -105.218, -26.0241, 0.37", "-55.0226, -105.584, -26.0356, 0.74", "-55.1101, -105.703, -26.0312, 0.74", "-55.4821, -106.246, -25.9923, 0.66", "-55.9916, -106.985, -25.9086, 0.66", "-56.394, -107.537, -25.8352, 0.52", "-57.2292, -108.624, -25.6533, 0.22", "-57.8389, -109.41, -25.5251, 1.47", "-58.2736, -109.983, -25.4792, 1.92", "-58.6481, -110.471, -25.4689, 2.14", "-59.2316, -111.239, -25.5155, 0.74", "-59.641, -111.809, -25.5993, 0.29", "-60.0954, -112.457, -25.7645, 0.29", "-61.0078, -113.78, -26.1626, 0.29", "-61.3326, -114.293, -26.3192, 1.33", "-61.7282, -114.947, -26.5135, 1.33", "-61.8751, -115.202, -26.5766, 1.33", "-62.4956, -116.224, -26.8317, 0.29", "-62.8403, -116.742, -26.9416, 0.29", "-63.562, -117.741, -27.1086, 0.29", "-63.6027, -117.796, -27.1192, 0.29", "-64.1226, -118.491, -27.2522, 0.29", "-64.8473, -119.416, -27.4306, 1.18", "-65.0526, -119.672, -27.4818, 1.33", "-65.8726, -120.7, -27.7055, 0.22", "-65.9148, -120.754, -27.7173, 0.22", "-66.309, -121.331, -27.8359, 0.88", "-66.513, -121.692, -27.9004, 0.88", "-67.0196, -122.886, -28.0512, 0.22", "-67.2771, -123.565, -28.1342, 1.33", "-67.3967, -123.899, -28.1647, 1.77", "-67.714, -124.749, -28.2314, 0.88", "-68.0051, -125.492, -28.2782, 0.22", "-68.34, -126.285, -28.2936, 0.59", "-68.9055, -127.507, -28.2458, 0.22", "-69.3359, -128.385, -28.1817, 0.22", "-69.648, -128.991, -28.1153, 1.18", "-69.8564, -129.366, -28.0573, 1.18", "-70.4093, -130.272, -27.8846, 0.15", "-70.7563, -130.801, -27.7778, 0.15", "-71.2295, -131.531, -27.63, 0.88", "-71.4231, -131.826, -27.5776, 1.11", "-71.9877, -132.587, -27.5528, 0.37", "-72.5649, -133.303, -27.6253, 0.22", "-72.9857, -133.821, -27.7493, 1.18", "-73.3062, -134.205, -27.8756, 1.18", "-73.3509, -134.254, -27.8957, 1.18", "-74.8333, -135.854, -28.6158, 0.22", "-74.9063, -135.93, -28.6527, 0.37", "-75.4809, -136.507, -28.9568, 0.15", "-75.7359, -136.763, -29.0848, 0.59", "-76.7344, -137.777, -29.5235, 0.22", "-77.1928, -138.275, -29.6914, 1.03", "-77.3543, -138.468, -29.7335, 1.03", "-78.3696, -139.812, -29.9681, 0.22", "-78.5878, -140.125, -30.0081, 0.52", "-79.1343, -141.017, -30.0608, 0.22", "-79.4158, -141.547, -30.0554, 1.03", "-79.5871, -141.89, -30.0332, 1.03", "-80.2379, -143.188, -29.9078, 0.15", "-80.4735, -143.653, -29.8373, 0.44", "-80.9154, -144.509, -29.7208, 0.15", "-81.134, -144.932, -29.6712, 0.88", "-81.4264, -145.499, -29.6547, 0.88", "-81.9812, -146.625, -29.7153, 0.22", "-82.5408, -147.621, -29.9875, 0.22", "-82.7105, -147.872, -30.0992, 0.66", "-82.8707, -148.102, -30.2053, 0.66", "-83.9062, -149.444, -30.8554, 0.37", "-84.3086, -149.941, -31.1037, 1.25", "-86.1975, -152.321, -32.2859, 0.44", "-88.3476, -155.069, -33.624, 0.15", "-89.0974, -156.049, -34.0639, 0.96", "-89.9738, -157.251, -34.5489, 0.29", "-90.2188, -157.62, -34.673, 0.52", "-91.2081, -159.324, -35.2113, 0.22", "-91.3424, -159.651, -35.3051, 0.66", "-91.5455, -160.242, -35.543, 0.66", "-92.0596, -161.535, -36.1434, 0.15", "-92.4325, -162.324, -36.5396, 0.15", "-92.9602, -163.315, -37.0716, 1.03", "-93.135, -163.596, -37.2381, 1.03", "-94.5501, -165.681, -38.563, 0.22", "-95.4189, -166.815, -39.3525, 0.22", "-96.3088, -167.792, -40.0932, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-64.8707, 141.708, -102.154, 0.22", "-65.8673, 140.989, -102.859, 0.22", "-66.4057, 140.617, -103.236, 0.22", "-67.4367, 139.902, -103.928, 0.59", "-68.6433, 139.07, -104.697, 0.15", "-68.9732, 138.841, -104.903, 0.81", "-69.5564, 138.437, -105.266, 1.11", "-70.4883, 137.814, -105.821, 0.22", "-71.0549, 137.42, -106.165, 1.03", "-71.4326, 137.14, -106.396, 1.33", "-71.5166, 137.087, -106.431, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-64.8707, 141.708, -102.154, 0.22", "-65.9653, 142.053, -101.892, 0.22", "-67.0089, 142.368, -101.501, 0.22", "-67.6312, 142.552, -101.252, 1.25", "-67.681, 142.57, -101.227, 1.25", "-69.0769, 143.122, -100.465, 0.15", "-69.673, 143.392, -100.129, 0.15", "-70.9034, 144.054, -99.2822, 0.96", "-71.2627, 144.275, -99.0302, 1.18", "-72.1746, 144.865, -98.3746, 0.15", "-72.2164, 144.892, -98.3438, 0.15", "-72.8565, 145.35, -97.8472, 0.15", "-74.0164, 146.222, -96.9499, 0.15", "-74.5466, 146.653, -96.6188, 0.66", "-74.7656, 146.814, -96.4919, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-96.3088, -167.792, -40.0932, 0.22", "-99.1295, -167.803, -40.9019, 0.22", "-100.411, -167.803, -41.1963, 0.22", "-101.026, -167.825, -41.395, 1.03", "-101.314, -167.84, -41.488, 1.33", "-104.07, -167.994, -42.3811, 0.22", "-106.093, -168.077, -43.059, 0.22", "-106.736, -168.088, -43.2759, 0.88", "-109.529, -168.138, -44.3295, 0.22", "-111.16, -168.166, -44.9033, 0.22", "-111.224, -168.17, -44.9215, 0.22", "-113.202, -168.359, -45.3325, 0.22", "-113.318, -168.375, -45.3536, 0.22", "-115.056, -168.719, -45.5441, 0.22", "-116.865, -169.256, -45.6049, 0.22", "-118.877, -170.14, -45.6869, 0.22", "-118.945, -170.178, -45.6884, 0.22", "-119.711, -170.725, -45.6829, 0.74", "-120.139, -171.1, -45.6952, 0.74", "-121.631, -172.867, -45.9344, 0.22", "-122.493, -174.076, -46.2119, 0.22", "-122.801, -174.522, -46.3201, 0.29", "-122.939, -174.732, -46.3574, 0.37", "-123.856, -176.152, -46.6018, 0.15", "-125.415, -178.623, -46.9648, 0.15", "-125.456, -178.689, -46.972, 0.15", "-126.748, -180.662, -47.1392, 0.15", "-129.568, -184.726, -47.3298, 0.15", "-130.569, -186.097, -47.3739, 0.44", "-131.39, -187.186, -47.3804, 0.15", "-133.465, -189.88, -47.3205, 0.15", "-134.705, -191.472, -47.2898, 0.37", "-135.945, -193.011, -47.2686, 0.15", "-137.342, -194.533, -47.1701, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-96.3088, -167.792, -40.0932, 0.22", "-96.8292, -170.15, -40.1406, 0.22", "-97.3382, -172.678, -40.2399, 0.22", "-97.9147, -175.542, -40.3524, 0.22", "-98.065, -176.288, -40.3817, 1.33", "-98.2989, -177.449, -40.4273, 1.33", "-98.6279, -179.084, -40.4915, 0.22", "-98.706, -179.482, -40.5135, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-71.5166, 137.087, -106.431, 0.22", "-72.8003, 136.444, -106.871, 0.22", "-73.313, 136.187, -107.047, 0.59", "-74.136, 135.775, -107.329, 0.22", "-74.6114, 135.537, -107.492, 0.66", "-74.6714, 135.507, -107.513, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-71.5166, 137.087, -106.431, 0.15", "-70.8259, 135.013, -106.819, 0.15", "-70.3468, 133.575, -107.088, 0.29", "-70.1487, 132.981, -107.199, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-98.706, -179.482, -40.5135, 0.29", "-98.2055, -180.354, -41.3587, 0.29", "-97.8516, -180.971, -41.9565, 0.44" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-98.706, -179.482, -40.5135, 0.22", "-100.377, -181.051, -40.282, 0.22", "-101.265, -181.922, -40.1705, 0.44", "-102.405, -183.268, -40.0979, 0.15", "-103.74, -184.921, -40.0372, 0.15", "-104.114, -185.398, -40.0208, 0.81", "-104.358, -185.72, -40.01, 0.81", "-106.75, -189.001, -39.9168, 0.15", "-109.656, -193.409, -39.8642, 0.15", "-109.656, -193.409, -39.8642, 0.37", "-110.23, -194.447, -39.9055, 0.15", "-110.494, -194.959, -39.9265, 0.81", "-110.776, -195.547, -39.9542, 0.81", "-111.454, -197.263, -40.0527, 0.15", "-111.673, -197.872, -40.0736, 0.44", "-111.788, -198.17, -40.1082, 0.44", "-112.16, -199.116, -40.2593, 0.15", "-112.316, -199.498, -40.307, 0.66", "-112.364, -199.613, -40.3178, 0.66", "-112.604, -200.181, -40.3626, 0.66", "-114.08, -203.694, -40.6555, 0.15", "-114.398, -204.451, -40.7207, 0.44", "-116.354, -209.157, -41.1398, 0.15", "-118.183, -213.57, -41.5195, 0.15", "-118.242, -213.713, -41.5306, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_SBC_655c77b594_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_38
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_52
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.4999992178869266)
    connect dend_23(0), soma_0(0.4999992178869266)
    connect dend_14(0), soma_0(0.4999992178869266)
    connect dend_11(0), soma_0(0.4999992178869266)
    connect dend_0(0), soma_0(0.4999992178869266)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.327285, 12.2563, -2.37682, 3.20394 ) }
    soma_0 { pt3dadd( -0.32997, 10.9888, -2.12879, 5.58325 ) }
    soma_0 { pt3dadd( -0.332655, 9.7213, -1.88076, 6.08709 ) }
    soma_0 { pt3dadd( -0.335339, 8.45379, -1.63272, 7.22603 ) }
    soma_0 { pt3dadd( -0.338024, 7.18628, -1.38469, 8.89261 ) }
    soma_0 { pt3dadd( -0.340709, 5.91877, -1.13666, 10.2823 ) }
    soma_0 { pt3dadd( -0.343394, 4.65126, -0.888622, 11.3086 ) }
    soma_0 { pt3dadd( -0.346078, 3.38375, -0.640589, 12.3784 ) }
    soma_0 { pt3dadd( -0.348763, 2.11624, -0.392555, 13.7451 ) }
    soma_0 { pt3dadd( -0.351448, 0.84873, -0.144521, 14.7054 ) }
    soma_0 { pt3dadd( -0.354133, -0.41878, 0.103512, 15.1673 ) }
    soma_0 { pt3dadd( -0.356817, -1.68629, 0.351546, 15.492 ) }
    soma_0 { pt3dadd( -0.359502, -2.9538, 0.599579, 15.6089 ) }
    soma_0 { pt3dadd( -0.362187, -4.22131, 0.847613, 15.0499 ) }
    soma_0 { pt3dadd( -0.364872, -5.48882, 1.09565, 14.3371 ) }
    soma_0 { pt3dadd( -0.367556, -6.75633, 1.34368, 13.225 ) }
    soma_0 { pt3dadd( -0.370241, -8.02384, 1.59171, 11.7728 ) }
    soma_0 { pt3dadd( -0.372926, -9.29135, 1.83975, 10.2754 ) }
    soma_0 { pt3dadd( -0.375611, -10.5589, 2.08778, 7.58879 ) }
    soma_0 { pt3dadd( -0.378295, -11.8264, 2.33581, 5.07363 ) }
    soma_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 2.91986 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.63702, -12.1088, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.63702, -12.1088, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.54112, -12.959, 3.58128, 4.13 ) }
    dend_32 { pt3dadd( -1.4008, -14.2029, 3.99373, 3.76 ) }
    dend_32 { pt3dadd( -1.17889, -16.1702, 4.64599, 3.68 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.0870214, -5.00883, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( -0.0108007, -5.02346, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 0.225898, -5.07247, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 1.18064, -5.28023, -15.4446, 1.69 ) }
    dend_23 { pt3dadd( 2.57057, -5.63629, -15.3906, 1.69 ) }
    dend_23 { pt3dadd( 2.66714, -5.66539, -15.3988, 1.69 ) }
    dend_23 { pt3dadd( 4.18662, -6.26933, -15.7361, 1.69 ) }
    dend_23 { pt3dadd( 4.258, -6.30859, -15.7689, 1.69 ) }
    dend_23 { pt3dadd( 5.16275, -7.1845, -16.8915, 1.84 ) }
    dend_23 { pt3dadd( 5.0603, -7.90876, -18.4826, 1.84 ) }
    dend_23 { pt3dadd( 4.26549, -8.59727, -20.8785, 1.99 ) }
    dend_23 { pt3dadd( 3.4833, -9.15718, -22.9589, 1.99 ) }
    dend_23 { pt3dadd( 2.55677, -9.69315, -25.1212, 1.99 ) }
    dend_23 { pt3dadd( 1.1187, -10.3799, -28.1434, 2.14 ) }
    dend_23 { pt3dadd( -0.502131, -10.9746, -31.1429, 2.43 ) }
    dend_23 { pt3dadd( -3.196, -11.6782, -35.5865, 2.87 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 42/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.632978, 11.1212, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 0.632978, 11.1212, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 1.28475, 11.6736, -5.90022, 2.28 ) }
    dend_14 { pt3dadd( 1.95405, 12.2787, -6.14044, 2.21 ) }
    dend_14 { pt3dadd( 3.24193, 13.6076, -6.56671, 0.81 ) }
    dend_14 { pt3dadd( 4.71241, 15.405, -7.02429, 0.81 ) }
    dend_14 { pt3dadd( 5.44797, 16.3953, -7.24256, 1.25 ) }
    dend_14 { pt3dadd( 6.30757, 17.7701, -7.44672, 1.99 ) }
    dend_14 { pt3dadd( 6.34523, 17.8518, -7.45233, 1.99 ) }
    dend_14 { pt3dadd( 6.69282, 19.2049, -7.4332, 2.14 ) }
    dend_14 { pt3dadd( 6.80308, 20.5858, -7.32547, 2.14 ) }
    dend_14 { pt3dadd( 6.79942, 20.6763, -7.31846, 2.14 ) }
    dend_14 { pt3dadd( 6.65637, 22.3077, -7.23607, 1.84 ) }
    dend_14 { pt3dadd( 6.45656, 23.8647, -7.26359, 1.4 ) }
    dend_14 { pt3dadd( 6.09121, 25.9674, -7.41771, 0.81 ) }
    dend_14 { pt3dadd( 5.76466, 27.3819, -7.64247, 0.81 ) }
    dend_14 { pt3dadd( 5.26805, 29.1721, -8.05758, 1.11 ) }
    dend_14 { pt3dadd( 5.24481, 29.2446, -8.08126, 1.11 ) }
    dend_14 { pt3dadd( 4.74607, 30.5867, -8.67329, 1.69 ) }
    dend_14 { pt3dadd( 4.16147, 32.0432, -9.45944, 1.77 ) }
    dend_14 { pt3dadd( 3.69417, 33.2849, -10.2374, 1.18 ) }
    dend_14 { pt3dadd( 3.67794, 33.3494, -10.2798, 1.18 ) }
    dend_14 { pt3dadd( 3.60616, 34.4624, -10.9578, 0.88 ) }
    dend_14 { pt3dadd( 3.71997, 35.3396, -11.4105, 0.74 ) }
    dend_14 { pt3dadd( 3.77694, 35.4904, -11.4694, 0.74 ) }
    dend_14 { pt3dadd( 4.36725, 36.537, -11.7548, 0.74 ) }
    dend_14 { pt3dadd( 5.23391, 37.8613, -11.9916, 0.88 ) }
    dend_14 { pt3dadd( 5.90122, 38.8249, -12.116, 1.69 ) }
    dend_14 { pt3dadd( 6.37042, 39.4883, -12.1637, 1.92 ) }
    dend_14 { pt3dadd( 6.75899, 40.0728, -12.1981, 2.21 ) }
    dend_14 { pt3dadd( 7.16128, 40.7419, -12.2281, 1.84 ) }
    dend_14 { pt3dadd( 7.63525, 41.6999, -12.2527, 1.25 ) }
    dend_14 { pt3dadd( 8.0654, 42.8686, -12.3152, 0.81 ) }
    dend_14 { pt3dadd( 8.34187, 43.9205, -12.4395, 0.81 ) }
    dend_14 { pt3dadd( 8.4721, 44.9583, -12.6661, 1.11 ) }
    dend_14 { pt3dadd( 8.46608, 45.0402, -12.7033, 1.11 ) }
    dend_14 { pt3dadd( 8.30335, 45.7199, -13.1971, 1.11 ) }
    dend_14 { pt3dadd( 7.87198, 46.8655, -14.245, 0.59 ) }
    dend_14 { pt3dadd( 7.65245, 47.3292, -14.7382, 0.59 ) }
    dend_14 { pt3dadd( 7.16387, 48.2318, -15.8796, 0.52 ) }
    dend_14 { pt3dadd( 6.21023, 49.8647, -18.1275, 1.99 ) }
    dend_14 { pt3dadd( 5.7472, 50.6272, -19.2327, 3.02 ) }
    dend_14 { pt3dadd( 5.52633, 50.9675, -19.7721, 3.02 ) }
    dend_14 { pt3dadd( 5.4883, 51.0208, -19.8624, 3.02 ) }
    dend_14 { pt3dadd( 4.82244, 51.9501, -21.5241, 2.73 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.77298, 8.24117, 1.3594, 1.47 ) }
    dend_11 { pt3dadd( 3.32118, 8.6921, 1.3988, 1.47 ) }
    dend_11 { pt3dadd( 4.43842, 9.54679, 1.60604, 1.25 ) }
    dend_11 { pt3dadd( 4.80135, 9.81545, 1.68715, 1.62 ) }
    dend_11 { pt3dadd( 5.48265, 10.2661, 1.84257, 1.92 ) }
    dend_11 { pt3dadd( 6.26725, 10.752, 2.02267, 1.69 ) }
    dend_11 { pt3dadd( 7.44513, 11.3402, 2.36154, 0.88 ) }
    dend_11 { pt3dadd( 8.64608, 11.731, 3.10705, 0.88 ) }
    dend_11 { pt3dadd( 8.69627, 11.7446, 3.16757, 0.88 ) }
    dend_11 { pt3dadd( 9.20448, 11.8807, 4.07771, 0.81 ) }
    dend_11 { pt3dadd( 9.22676, 11.8892, 4.14281, 0.81 ) }
    dend_11 { pt3dadd( 9.61487, 12.2574, 6.22732, 1.03 ) }
    dend_11 { pt3dadd( 9.84515, 13.1389, 9.83469, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_11 { pt3dadd( 9.79956, 13.7987, 11.8644, 1.11 ) }
    dend_11 { pt3dadd( 9.79239, 13.8318, 11.9367, 1.11 ) }
    dend_11 { pt3dadd( 9.52126, 14.6924, 13.3795, 1.33 ) }
    dend_11 { pt3dadd( 9.20472, 15.6243, 14.4734, 1.99 ) }
    dend_11 { pt3dadd( 8.97671, 16.2816, 14.9498, 2.73 ) }
    dend_11 { pt3dadd( 8.84045, 16.8748, 15.2395, 2.65 ) }
    dend_11 { pt3dadd( 8.73894, 18.0974, 15.7843, 2.36 ) }
    dend_11 { pt3dadd( 8.74283, 18.1604, 15.8107, 2.36 ) }
    dend_11 { pt3dadd( 9.10348, 19.8127, 16.439, 0.81 ) }
    dend_11 { pt3dadd( 9.47086, 20.8454, 16.8303, 0.59 ) }
    dend_11 { pt3dadd( 10.3416, 22.7486, 17.5109, 0.44 ) }
    dend_11 { pt3dadd( 11.0693, 24.0175, 17.8917, 0.44 ) }
    dend_11 { pt3dadd( 11.8049, 25.0781, 18.0946, 1.18 ) }
    dend_11 { pt3dadd( 12.4084, 25.8368, 18.1851, 1.99 ) }
    dend_11 { pt3dadd( 13.0366, 26.5406, 18.3098, 2.65 ) }
    dend_11 { pt3dadd( 13.3873, 26.9309, 18.399, 2.65 ) }
    dend_11 { pt3dadd( 14.3656, 28.0774, 18.7698, 1.77 ) }
    dend_11 { pt3dadd( 15.3068, 29.2177, 19.3624, 0.44 ) }
    dend_11 { pt3dadd( 16.2303, 30.4009, 20.1265, 0.44 ) }
    dend_11 { pt3dadd( 17.8658, 32.6355, 21.8695, 1.25 ) }
    dend_11 { pt3dadd( 18.3346, 33.3422, 22.4725, 2.43 ) }
    dend_11 { pt3dadd( 19.0937, 34.6135, 23.5907, 2.43 ) }
    dend_11 { pt3dadd( 19.6768, 35.7129, 24.6073, 2.21 ) }
    dend_11 { pt3dadd( 20.0992, 36.6163, 25.4201, 1.25 ) }
    dend_11 { pt3dadd( 20.5844, 37.7924, 26.3015, 0.52 ) }
    dend_11 { pt3dadd( 20.9291, 38.6539, 26.7503, 0.52 ) }
    dend_11 { pt3dadd( 21.3494, 39.6994, 27.1762, 0.52 ) }
    dend_11 { pt3dadd( 21.3786, 39.7715, 27.1939, 0.52 ) }
    dend_11 { pt3dadd( 21.8067, 40.752, 27.3748, 0.88 ) }
    dend_11 { pt3dadd( 22.2552, 41.7006, 27.518, 1.25 ) }
    dend_11 { pt3dadd( 22.6644, 42.5332, 27.5752, 1.69 ) }
    dend_11 { pt3dadd( 22.9705, 43.117, 27.6269, 1.69 ) }
    dend_11 { pt3dadd( 23.0269, 43.2235, 27.639, 1.69 ) }
    dend_11 { pt3dadd( 23.5804, 44.2337, 27.7785, 1.69 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.16702, 11.2212, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.16702, 11.2212, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.5681, 11.9624, -2.46407, 1.4 ) }
    dend_0 { pt3dadd( -4.29305, 13.3076, -1.35065, 1.4 ) }
    dend_0 { pt3dadd( -4.79057, 14.2215, -0.619453, 1.4 ) }
    dend_0 { pt3dadd( -5.23093, 15.044, 0.0197364, 1.69 ) }
    dend_0 { pt3dadd( -5.85686, 16.2067, 0.904237, 1.99 ) }
    dend_0 { pt3dadd( -6.53284, 17.4564, 1.82025, 2.36 ) }
    dend_0 { pt3dadd( -7.19198, 18.671, 2.66669, 3.09 ) }
    dend_0 { pt3dadd( -7.85309, 19.8173, 3.38234, 3.32 ) }
    dend_0 { pt3dadd( -8.46993, 20.8274, 3.90425, 3.09 ) }
    dend_0 { pt3dadd( -9.02927, 21.6672, 4.20977, 2.43 ) }
    dend_0 { pt3dadd( -9.73974, 22.6496, 4.32372, 1.4 ) }
    dend_0 { pt3dadd( -10.1849, 23.2262, 4.30362, 1.33 ) }
    dend_0 { pt3dadd( -10.897, 24.0839, 4.13349, 1.18 ) }
    dend_0 { pt3dadd( -11.5847, 24.8358, 3.86659, 1.4 ) }
    dend_0 { pt3dadd( -12.5192, 25.7496, 3.32284, 1.69 ) }
    dend_0 { pt3dadd( -13.605, 26.7337, 2.48257, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 1.02022 ) }
    axon_0 { pt3dadd( -0.412752, -28.0939, 2.58385, 1.02022 ) }
    axon_0 { pt3dadd( -0.444525, -43.0938, 2.58385, 1.02022 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 55/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.17889, -16.1702, 4.64599, 1.99 ) }
    dend_38 { pt3dadd( -0.400689, -17.9376, 4.14548, 1.99 ) }
    dend_38 { pt3dadd( 0.455044, -19.6583, 3.70165, 1.62 ) }
    dend_38 { pt3dadd( 0.501392, -19.7466, 3.68011, 1.62 ) }
    dend_38 { pt3dadd( 1.5976, -21.7531, 3.27201, 1.18 ) }
    dend_38 { pt3dadd( 2.22139, -22.9001, 3.06444, 1.18 ) }
    dend_38 { pt3dadd( 3.02952, -24.4198, 2.8097, 1.18 ) }
    dend_38 { pt3dadd( 4.19283, -26.621, 2.50108, 1.18 ) }
    dend_38 { pt3dadd( 5.1722, -28.5379, 2.27958, 1.47 ) }
    dend_38 { pt3dadd( 6.18737, -30.6727, 2.08513, 2.21 ) }
    dend_38 { pt3dadd( 7.05861, -32.5624, 1.96236, 2.73 ) }
    dend_38 { pt3dadd( 7.88647, -34.4615, 1.86634, 2.8 ) }
    dend_38 { pt3dadd( 8.60461, -36.221, 1.7977, 2.95 ) }
    dend_38 { pt3dadd( 9.28543, -38.0902, 1.73818, 2.95 ) }
    dend_38 { pt3dadd( 9.59354, -39.0448, 1.71795, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 70/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.17889, -16.1702, 4.64599, 1.18 ) }
    dend_33 { pt3dadd( -3.51233, -17.75, 7.25868, 1.18 ) }
    dend_33 { pt3dadd( -5.20907, -18.8987, 9.15848, 1.18 ) }
    dend_33 { pt3dadd( -6.25689, -19.6081, 10.3317, 1.69 ) }
    dend_33 { pt3dadd( -7.11518, -20.1892, 11.2927, 2.36 ) }
    dend_33 { pt3dadd( -7.63165, -20.5388, 11.871, 2.73 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.196, -11.6782, -35.5865, 0.66 ) }
    dend_29 { pt3dadd( -1.33008, -13.2917, -37.2097, 0.66 ) }
    dend_29 { pt3dadd( -0.224459, -14.168, -38.0642, 0.74 ) }
    dend_29 { pt3dadd( 0.560694, -14.7363, -38.7037, 0.74 ) }
    dend_29 { pt3dadd( 1.20497, -15.1593, -39.2482, 0.74 ) }
    dend_29 { pt3dadd( 1.25622, -15.1903, -39.2926, 0.74 ) }
    dend_29 { pt3dadd( 2.49463, -15.8709, -40.3893, 0.52 ) }
    dend_29 { pt3dadd( 3.09931, -15.9827, -40.8787, 0.52 ) }
    dend_29 { pt3dadd( 3.81868, -15.7883, -41.7544, 0.44 ) }
    dend_29 { pt3dadd( 4.24299, -15.5396, -42.449, 0.44 ) }
    dend_29 { pt3dadd( 4.35726, -15.4764, -42.6448, 0.44 ) }
    dend_29 { pt3dadd( 4.77995, -15.3223, -43.2812, 0.44 ) }
    dend_29 { pt3dadd( 5.82785, -15.07, -44.8124, 0.88 ) }
    dend_29 { pt3dadd( 5.87147, -15.0664, -44.8728, 0.88 ) }
    dend_29 { pt3dadd( 6.83909, -15.1038, -46.0913, 1.11 ) }
    dend_29 { pt3dadd( 8.15812, -15.2476, -47.6759, 1.84 ) }
    dend_29 { pt3dadd( 9.66935, -15.4759, -49.3928, 2.14 ) }
    dend_29 { pt3dadd( 12.0642, -15.9345, -51.9697, 0.29 ) }
    dend_29 { pt3dadd( 12.9038, -16.116, -52.7989, 0.29 ) }
    dend_29 { pt3dadd( 13.555, -16.252, -53.38, 1.03 ) }
    dend_29 { pt3dadd( 13.6224, -16.2664, -53.4302, 1.03 ) }
    dend_29 { pt3dadd( 14.1593, -16.4113, -53.748, 1.33 ) }
    dend_29 { pt3dadd( 14.2224, -16.4295, -53.7849, 1.33 ) }
    dend_29 { pt3dadd( 14.8758, -16.574, -54.2241, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( 15.9829, -16.6982, -55.1202, 0.37 ) }
    dend_29 { pt3dadd( 16.7182, -16.7112, -55.8218, 0.37 ) }
    dend_29 { pt3dadd( 17.9102, -16.6186, -57.1888, 0.52 ) }
    dend_29 { pt3dadd( 19.3973, -16.4047, -59.174, 0.74 ) }
    dend_29 { pt3dadd( 20.1616, -16.2897, -60.2745, 1.62 ) }
    dend_29 { pt3dadd( 20.5755, -16.2194, -60.9083, 1.92 ) }
    dend_29 { pt3dadd( 21.316, -16.0695, -62.0788, 2.43 ) }
    dend_29 { pt3dadd( 22.5272, -15.7331, -63.9326, 1.69 ) }
    dend_29 { pt3dadd( 23.6125, -15.3157, -65.5893, 0.37 ) }
    dend_29 { pt3dadd( 24.1289, -15.1067, -66.3629, 0.37 ) }
    dend_29 { pt3dadd( 24.4866, -14.9694, -66.8876, 0.37 ) }
    dend_29 { pt3dadd( 24.9621, -14.8132, -67.5885, 1.11 ) }
    dend_29 { pt3dadd( 25.5137, -14.6813, -68.2968, 1.33 ) }
    dend_29 { pt3dadd( 27.3901, -14.2716, -70.2734, 0.22 ) }
    dend_29 { pt3dadd( 27.4533, -14.2593, -70.3303, 0.22 ) }
    dend_29 { pt3dadd( 28.0723, -14.1892, -70.846, 0.22 ) }
    dend_29 { pt3dadd( 28.8908, -14.2513, -71.4424, 0.22 ) }
    dend_29 { pt3dadd( 29.949, -14.4651, -72.1069, 0.88 ) }
    dend_29 { pt3dadd( 31.0375, -14.7285, -72.7661, 1.55 ) }
    dend_29 { pt3dadd( 31.7208, -14.8336, -73.3577, 1.77 ) }
    dend_29 { pt3dadd( 32.8738, -14.8448, -74.9151, 0.22 ) }
    dend_29 { pt3dadd( 33.5211, -14.7467, -76.1495, 0.22 ) }
    dend_29 { pt3dadd( 34.0408, -14.6088, -77.3278, 1.47 ) }
    dend_29 { pt3dadd( 34.7035, -14.4067, -79.0014, 2.43 ) }
    dend_29 { pt3dadd( 36.6417, -13.6971, -84.2171, 1.99 ) }
    dend_29 { pt3dadd( 37.7717, -13.1814, -87.5592, 1.77 ) }
    dend_29 { pt3dadd( 39.0609, -12.4347, -91.7921, 0.22 ) }
    dend_29 { pt3dadd( 39.0776, -12.4227, -91.8526, 0.22 ) }
    dend_29 { pt3dadd( 39.352, -12.2072, -92.9632, 0.22 ) }
    dend_29 { pt3dadd( 39.5801, -12.0256, -93.9458, 1.18 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 30/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.196, -11.6782, -35.5865, 1.03 ) }
    dend_24 { pt3dadd( -4.0581, -13.8945, -36.2403, 1.03 ) }
    dend_24 { pt3dadd( -4.47574, -15.6322, -36.6475, 0.88 ) }
    dend_24 { pt3dadd( -4.49293, -15.7337, -36.6684, 0.88 ) }
    dend_24 { pt3dadd( -4.61318, -17.0099, -36.8953, 0.88 ) }
    dend_24 { pt3dadd( -4.56843, -18.1523, -37.1616, 1.69 ) }
    dend_24 { pt3dadd( -4.45535, -19.1337, -37.4046, 1.84 ) }
    dend_24 { pt3dadd( -4.30815, -19.7042, -37.5632, 1.99 ) }
    dend_24 { pt3dadd( -4.29062, -19.769, -37.5825, 1.99 ) }
    dend_24 { pt3dadd( -4.11527, -20.5738, -37.8648, 1.69 ) }
    dend_24 { pt3dadd( -3.81627, -22.7811, -38.8025, 1.03 ) }
    dend_24 { pt3dadd( -3.89685, -24.1623, -39.6462, 0.88 ) }
    dend_24 { pt3dadd( -4.14042, -25.144, -40.3755, 0.66 ) }
    dend_24 { pt3dadd( -4.33747, -25.7172, -40.8338, 0.66 ) }
    dend_24 { pt3dadd( -4.73765, -26.5752, -41.5776, 0.52 ) }
    dend_24 { pt3dadd( -5.20117, -27.169, -42.1885, 0.52 ) }
    dend_24 { pt3dadd( -7.00933, -28.3625, -43.7427, 1.77 ) }
    dend_24 { pt3dadd( -7.49482, -28.5775, -44.1571, 1.77 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 4.82244, 51.9501, -21.5241, 0.52 ) }
    dend_20 { pt3dadd( 5.91149, 52.7303, -24.5228, 0.52 ) }
    dend_20 { pt3dadd( 6.09654, 52.855, -25.0078, 0.52 ) }
    dend_20 { pt3dadd( 6.42974, 53.1425, -26.0223, 0.37 ) }
    dend_20 { pt3dadd( 6.83292, 53.6112, -27.407, 1.4 ) }
    dend_20 { pt3dadd( 6.9177, 53.7532, -27.7463, 1.55 ) }
    dend_20 { pt3dadd( 7.61198, 55.2574, -30.8366, 0.74 ) }
    dend_20 { pt3dadd( 7.67892, 55.5737, -31.3513, 0.74 ) }
    dend_20 { pt3dadd( 7.80042, 56.8932, -33.2914, 0.29 ) }
    dend_20 { pt3dadd( 7.79797, 57.5767, -34.1747, 0.29 ) }
    dend_20 { pt3dadd( 7.70404, 58.724, -35.4915, 1.92 ) }
    dend_20 { pt3dadd( 7.63016, 59.19, -35.9569, 2.28 ) }
    dend_20 { pt3dadd( 7.26673, 60.948, -37.459, 0.22 ) }
    dend_20 { pt3dadd( 7.2488, 61.0444, -37.5427, 0.22 ) }
    dend_20 { pt3dadd( 7.19746, 61.4622, -37.8993, 0.22 ) }
    dend_20 { pt3dadd( 7.16334, 62.583, -38.9758, 1.18 ) }
    dend_20 { pt3dadd( 7.1802, 63.0211, -39.4205, 1.77 ) }
    dend_20 { pt3dadd( 7.3185, 64.9005, -41.2566, 0.22 ) }
    dend_20 { pt3dadd( 7.44161, 65.9723, -42.2354, 1.84 ) }
    dend_20 { pt3dadd( 7.51553, 66.4957, -42.6919, 2.21 ) }
    dend_20 { pt3dadd( 7.85298, 68.232, -44.1061, 0.22 ) }
    dend_20 { pt3dadd( 7.86727, 68.2838, -44.1425, 0.22 ) }
    dend_20 { pt3dadd( 8.26736, 69.418, -44.8237, 0.22 ) }
    dend_20 { pt3dadd( 8.29544, 69.481, -44.8506, 0.22 ) }
    dend_20 { pt3dadd( 8.72769, 70.2834, -45.1679, 0.66 ) }
    dend_20 { pt3dadd( 9.13396, 70.9779, -45.5631, 0.88 ) }
    dend_20 { pt3dadd( 9.68693, 71.888, -46.1627, 0.22 ) }
    dend_20 { pt3dadd( 10.2051, 72.7039, -46.8105, 1.99 ) }
    dend_20 { pt3dadd( 10.4713, 73.1204, -47.208, 2.5 ) }
    dend_20 { pt3dadd( 11.1515, 74.2941, -48.4441, 0.22 ) }
    dend_20 { pt3dadd( 12.0922, 76.1125, -50.5224, 0.59 ) }
    dend_20 { pt3dadd( 12.1883, 76.3531, -50.8105, 0.59 ) }
    dend_20 { pt3dadd( 12.2, 76.3938, -50.8597, 0.59 ) }
    dend_20 { pt3dadd( 12.3978, 77.4176, -51.989, 0.96 ) }
    dend_20 { pt3dadd( 12.4725, 77.9561, -52.5272, 1.11 ) }
    dend_20 { pt3dadd( 12.5324, 78.482, -52.9795, 0.96 ) }
    dend_20 { pt3dadd( 12.691, 79.663, -53.8718, 0.22 ) }
    dend_20 { pt3dadd( 12.7172, 79.8345, -54.0747, 0.22 ) }
    dend_20 { pt3dadd( 12.819, 80.4366, -54.9912, 0.22 ) }
    dend_20 { pt3dadd( 12.9044, 80.9391, -55.9434, 1.11 ) }
    dend_20 { pt3dadd( 12.9569, 81.5665, -57.4188, 1.4 ) }
    dend_20 { pt3dadd( 12.973, 82.0367, -58.6775, 2.06 ) }
    dend_20 { pt3dadd( 13.031, 83.8948, -64.0241, 1.18 ) }
    dend_20 { pt3dadd( 13.0405, 84.5913, -66.1723, 1.18 ) }
    dend_20 { pt3dadd( 13.0231, 85.4652, -69.1479, 1.4 ) }
    dend_20 { pt3dadd( 12.9467, 86.6067, -73.338, 1.55 ) }
    dend_20 { pt3dadd( 12.9447, 86.6219, -73.4011, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 95/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.82244, 51.9501, -21.5241, 0.52 ) }
    dend_15 { pt3dadd( 4.81119, 53.4333, -21.3762, 0.52 ) }
    dend_15 { pt3dadd( 4.81846, 54.3663, -21.2885, 0.52 ) }
    dend_15 { pt3dadd( 4.84874, 55.366, -21.2768, 1.18 ) }
    dend_15 { pt3dadd( 4.89576, 56.1789, -21.3056, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 4.92788, 56.5197, -21.3247, 2.28 ) }
    dend_15 { pt3dadd( 4.99795, 56.9383, -21.3484, 1.84 ) }
    dend_15 { pt3dadd( 5.1241, 57.3519, -21.3742, 1.55 ) }
    dend_15 { pt3dadd( 5.49871, 58.3777, -21.4775, 0.88 ) }
    dend_15 { pt3dadd( 5.77321, 59.0903, -21.6143, 0.29 ) }
    dend_15 { pt3dadd( 6.00416, 59.7104, -21.7412, 0.29 ) }
    dend_15 { pt3dadd( 6.29154, 60.6188, -21.9643, 0.29 ) }
    dend_15 { pt3dadd( 6.31425, 60.6939, -21.9866, 0.29 ) }
    dend_15 { pt3dadd( 6.4822, 61.3169, -22.1832, 0.29 ) }
    dend_15 { pt3dadd( 6.76794, 62.6718, -22.6102, 1.92 ) }
    dend_15 { pt3dadd( 6.86429, 63.4642, -22.8747, 2.21 ) }
    dend_15 { pt3dadd( 6.91029, 64.6625, -23.3212, 0.29 ) }
    dend_15 { pt3dadd( 6.8773, 65.6665, -23.7176, 0.29 ) }
    dend_15 { pt3dadd( 6.78294, 66.4895, -24.0822, 0.29 ) }
    dend_15 { pt3dadd( 6.62481, 67.1895, -24.4162, 0.29 ) }
    dend_15 { pt3dadd( 6.29462, 68.1414, -24.8799, 1.84 ) }
    dend_15 { pt3dadd( 5.90508, 68.991, -25.3142, 2.58 ) }
    dend_15 { pt3dadd( 5.7673, 69.2282, -25.437, 2.5 ) }
    dend_15 { pt3dadd( 4.60861, 70.897, -26.3573, 0.22 ) }
    dend_15 { pt3dadd( 3.97789, 71.7198, -26.8493, 0.22 ) }
    dend_15 { pt3dadd( 3.55804, 72.2368, -27.1618, 0.96 ) }
    dend_15 { pt3dadd( 3.33102, 72.4993, -27.3215, 1.18 ) }
    dend_15 { pt3dadd( 3.12222, 72.7315, -27.4534, 1.18 ) }
    dend_15 { pt3dadd( 2.39723, 73.5291, -27.9021, 0.29 ) }
    dend_15 { pt3dadd( 2.01452, 73.9391, -28.1224, 0.29 ) }
    dend_15 { pt3dadd( 1.26678, 74.7592, -28.5942, 0.29 ) }
    dend_15 { pt3dadd( 0.287529, 75.851, -29.2425, 2.21 ) }
    dend_15 { pt3dadd( -0.0495363, 76.2352, -29.4691, 2.65 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 28/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 23.5804, 44.2337, 27.7785, 0.29 ) }
    dend_13 { pt3dadd( 23.898, 45.2273, 27.7211, 0.29 ) }
    dend_13 { pt3dadd( 24.1221, 45.9425, 27.7286, 0.59 ) }
    dend_13 { pt3dadd( 24.2712, 46.3859, 27.7869, 0.74 ) }
    dend_13 { pt3dadd( 24.5309, 47.1469, 27.9225, 0.22 ) }
    dend_13 { pt3dadd( 24.7767, 47.8703, 28.0631, 0.22 ) }
    dend_13 { pt3dadd( 25.1569, 48.9958, 28.2886, 2.28 ) }
    dend_13 { pt3dadd( 25.2837, 49.3869, 28.3916, 2.28 ) }
    dend_13 { pt3dadd( 25.732, 50.7716, 28.7842, 0.29 ) }
    dend_13 { pt3dadd( 25.8381, 51.0919, 28.8802, 0.29 ) }
    dend_13 { pt3dadd( 26.1301, 51.9662, 29.1539, 0.22 ) }
    dend_13 { pt3dadd( 26.2102, 52.2014, 29.2206, 0.88 ) }
    dend_13 { pt3dadd( 26.2443, 52.2904, 29.2387, 0.88 ) }
    dend_13 { pt3dadd( 26.3418, 52.5216, 29.272, 0.88 ) }
    dend_13 { pt3dadd( 26.4016, 52.651, 29.2782, 0.88 ) }
    dend_13 { pt3dadd( 26.615, 53.0751, 29.3168, 0.52 ) }
    dend_13 { pt3dadd( 26.7592, 53.367, 29.3913, 0.15 ) }
    dend_13 { pt3dadd( 26.9573, 53.7931, 29.5337, 0.15 ) }
    dend_13 { pt3dadd( 27.0458, 54.0131, 29.6162, 0.15 ) }
    dend_13 { pt3dadd( 27.2402, 54.5629, 29.8272, 0.81 ) }
    dend_13 { pt3dadd( 27.3186, 54.8513, 29.9518, 0.96 ) }
    dend_13 { pt3dadd( 27.4959, 55.7406, 30.3774, 0.15 ) }
    dend_13 { pt3dadd( 27.5041, 55.7969, 30.4064, 0.15 ) }
    dend_13 { pt3dadd( 27.6118, 56.549, 30.7954, 1.55 ) }
    dend_13 { pt3dadd( 27.6796, 56.9572, 31.0052, 2.28 ) }
    dend_13 { pt3dadd( 27.939, 58.2296, 31.6707, 0.22 ) }
    dend_13 { pt3dadd( 28.1504, 59.1147, 32.1727, 2.65 ) }
    dend_13 { pt3dadd( 28.4782, 60.354, 32.8974, 0.29 ) }
    dend_13 { pt3dadd( 28.6075, 60.7818, 33.1569, 0.15 ) }
    dend_13 { pt3dadd( 28.7042, 61.0792, 33.3457, 0.15 ) }
    dend_13 { pt3dadd( 29.1239, 62.262, 34.1205, 2.58 ) }
    dend_13 { pt3dadd( 29.6484, 63.5063, 34.9435, 0.15 ) }
    dend_13 { pt3dadd( 29.7617, 63.7413, 35.1038, 0.37 ) }
    dend_13 { pt3dadd( 29.9103, 64.0202, 35.3062, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 62/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 23.5804, 44.2337, 27.7785, 0.29 ) }
    dend_12 { pt3dadd( 22.7439, 45.0586, 27.9923, 0.29 ) }
    dend_12 { pt3dadd( 22.2152, 45.6684, 28.1172, 0.29 ) }
    dend_12 { pt3dadd( 21.9245, 46.0618, 28.1802, 0.29 ) }
    dend_12 { pt3dadd( 21.6609, 46.4611, 28.2328, 0.88 ) }
    dend_12 { pt3dadd( 21.6391, 46.5076, 28.2364, 0.88 ) }
    dend_12 { pt3dadd( 21.522, 46.8506, 28.2811, 0.88 ) }
    dend_12 { pt3dadd( 21.4994, 47.0087, 28.2952, 0.88 ) }
    dend_12 { pt3dadd( 21.4991, 47.2185, 28.3224, 0.88 ) }
    dend_12 { pt3dadd( 21.5024, 47.2757, 28.3354, 0.88 ) }
    dend_12 { pt3dadd( 21.57, 48.0456, 28.5451, 0.44 ) }
    dend_12 { pt3dadd( 21.6364, 48.6834, 28.7227, 0.44 ) }
    dend_12 { pt3dadd( 21.6407, 48.7315, 28.7404, 0.44 ) }
    dend_12 { pt3dadd( 21.6584, 49.3298, 28.9731, 0.44 ) }
    dend_12 { pt3dadd( 21.6316, 50.3025, 29.4374, 1.77 ) }
    dend_12 { pt3dadd( 21.6316, 50.7095, 29.6532, 2.65 ) }
    dend_12 { pt3dadd( 21.6471, 51.0759, 29.8647, 3.02 ) }
    dend_12 { pt3dadd( 21.8057, 52.6937, 30.8041, 0.22 ) }
    dend_12 { pt3dadd( 21.9609, 53.535, 31.3459, 1.03 ) }
    dend_12 { pt3dadd( 22.259, 54.7035, 32.1488, 0.29 ) }
    dend_12 { pt3dadd( 22.5177, 55.5144, 32.7499, 0.22 ) }
    dend_12 { pt3dadd( 22.7006, 55.9939, 33.1236, 1.92 ) }
    dend_12 { pt3dadd( 22.9236, 56.4727, 33.4991, 2.28 ) }
    dend_12 { pt3dadd( 23.6434, 57.6896, 34.4378, 0.22 ) }
    dend_12 { pt3dadd( 23.8342, 58.0285, 34.7325, 0.22 ) }
    dend_12 { pt3dadd( 24.1509, 58.758, 35.4176, 1.11 ) }
    dend_12 { pt3dadd( 24.2178, 59.0245, 35.6869, 1.55 ) }
    dend_12 { pt3dadd( 24.2661, 59.3842, 36.0819, 1.84 ) }
    dend_12 { pt3dadd( 24.2665, 59.4177, 36.1209, 1.84 ) }
    dend_12 { pt3dadd( 24.1426, 61.0814, 38.1111, 0.29 ) }
    dend_12 { pt3dadd( 24.0336, 61.8578, 39.065, 0.29 ) }
    dend_12 { pt3dadd( 23.8882, 62.5834, 39.9392, 2.65 ) }
    dend_12 { pt3dadd( 23.7404, 63.1696, 40.6298, 2.36 ) }
    dend_12 { pt3dadd( 23.4345, 64.1755, 41.7745, 0.37 ) }
    dend_12 { pt3dadd( 23.4242, 64.2054, 41.8047, 0.37 ) }
    dend_12 { pt3dadd( 23.2473, 64.6155, 42.1129, 0.22 ) }
    dend_12 { pt3dadd( 23.0476, 64.9956, 42.3303, 0.66 ) }
    dend_12 { pt3dadd( 22.8146, 65.4094, 42.5122, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 22.5799, 65.8254, 42.6542, 0.96 ) }
    dend_12 { pt3dadd( 22.2269, 66.4501, 42.8361, 0.22 ) }
    dend_12 { pt3dadd( 21.9664, 66.9245, 43.0026, 0.22 ) }
    dend_12 { pt3dadd( 21.5136, 67.7588, 43.3635, 2.43 ) }
    dend_12 { pt3dadd( 20.7693, 69.0341, 44.081, 0.22 ) }
    dend_12 { pt3dadd( 20.6499, 69.2333, 44.2043, 0.88 ) }
    dend_12 { pt3dadd( 20.5098, 69.4714, 44.3558, 1.03 ) }
    dend_12 { pt3dadd( 20.0239, 70.2983, 44.9152, 0.66 ) }
    dend_12 { pt3dadd( 19.5781, 71.0822, 45.6195, 1.62 ) }
    dend_12 { pt3dadd( 19.2476, 71.7987, 46.3674, 1.62 ) }
    dend_12 { pt3dadd( 19.0161, 72.4868, 47.1331, 0.37 ) }
    dend_12 { pt3dadd( 18.9687, 72.7661, 47.4475, 2.06 ) }
    dend_12 { pt3dadd( 18.9671, 72.7955, 47.4798, 2.06 ) }
    dend_12 { pt3dadd( 19.0504, 74.809, 49.491, 1.62 ) }
    dend_12 { pt3dadd( 19.1446, 75.5829, 50.2629, 0.22 ) }
    dend_12 { pt3dadd( 19.2308, 76.0559, 50.7306, 2.06 ) }
    dend_12 { pt3dadd( 19.5726, 77.5174, 52.2826, 0.29 ) }
    dend_12 { pt3dadd( 19.6261, 77.7361, 52.5116, 0.29 ) }
    dend_12 { pt3dadd( 19.7972, 78.3942, 53.1259, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 19/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -13.605, 26.7337, 2.48257, 1.18 ) }
    dend_2 { pt3dadd( -15.6267, 28.4014, -0.258396, 1.18 ) }
    dend_2 { pt3dadd( -16.1211, 28.8115, -0.832475, 1.18 ) }
    dend_2 { pt3dadd( -16.7633, 29.3422, -1.48354, 1.4 ) }
    dend_2 { pt3dadd( -17.4251, 29.8989, -2.06645, 1.4 ) }
    dend_2 { pt3dadd( -18.2699, 30.661, -2.81269, 1.03 ) }
    dend_2 { pt3dadd( -19.0109, 31.3737, -3.44698, 0.66 ) }
    dend_2 { pt3dadd( -19.6208, 32.01, -3.85474, 0.66 ) }
    dend_2 { pt3dadd( -20.0361, 32.4987, -4.13959, 1.11 ) }
    dend_2 { pt3dadd( -20.6233, 33.2704, -4.49251, 0.81 ) }
    dend_2 { pt3dadd( -21.915, 35.1775, -5.13923, 0.66 ) }
    dend_2 { pt3dadd( -22.4741, 36.0771, -5.33088, 0.66 ) }
    dend_2 { pt3dadd( -22.8966, 36.8192, -5.42348, 0.66 ) }
    dend_2 { pt3dadd( -23.497, 37.9321, -5.49803, 1.25 ) }
    dend_2 { pt3dadd( -24.1141, 39.1492, -5.45694, 1.62 ) }
    dend_2 { pt3dadd( -24.6418, 40.2316, -5.29389, 1.99 ) }
    dend_2 { pt3dadd( -25.0212, 41.0239, -5.07617, 1.99 ) }
    dend_2 { pt3dadd( -25.0921, 41.1745, -5.0338, 1.99 ) }
    dend_2 { pt3dadd( -25.4102, 41.866, -4.84502, 1.84 ) }
    dend_2 { pt3dadd( -25.9058, 42.9654, -4.59363, 1.03 ) }
    dend_2 { pt3dadd( -26.291, 43.8495, -4.45935, 0.74 ) }
    dend_2 { pt3dadd( -26.7268, 44.8785, -4.34533, 0.74 ) }
    dend_2 { pt3dadd( -27.0513, 45.6623, -4.26992, 0.44 ) }
    dend_2 { pt3dadd( -27.2886, 46.2344, -4.22159, 0.59 ) }
    dend_2 { pt3dadd( -27.5937, 46.9068, -4.19893, 0.59 ) }
    dend_2 { pt3dadd( -27.92, 47.5401, -4.22111, 0.59 ) }
    dend_2 { pt3dadd( -27.9624, 47.6114, -4.22704, 0.59 ) }
    dend_2 { pt3dadd( -28.4607, 48.3387, -4.31967, 0.44 ) }
    dend_2 { pt3dadd( -28.8362, 48.8341, -4.39967, 0.29 ) }
    dend_2 { pt3dadd( -29.5238, 49.6908, -4.60069, 0.29 ) }
    dend_2 { pt3dadd( -30.0261, 50.3433, -4.77776, 1.47 ) }
    dend_2 { pt3dadd( -30.5563, 51.0996, -4.9909, 2.06 ) }
    dend_2 { pt3dadd( -30.7315, 51.4167, -5.07858, 2.21 ) }
    dend_2 { pt3dadd( -30.8602, 51.7787, -5.19526, 2.21 ) }
    dend_2 { pt3dadd( -31.0641, 52.8631, -5.56125, 1.18 ) }
    dend_2 { pt3dadd( -31.1208, 54.0937, -5.96501, 0.37 ) }
    dend_2 { pt3dadd( -31.0828, 54.7556, -6.18642, 0.37 ) }
    dend_2 { pt3dadd( -30.9062, 56.0428, -6.58578, 0.37 ) }
    dend_2 { pt3dadd( -30.6531, 57.5495, -7.0533, 1.33 ) }
    dend_2 { pt3dadd( -30.5802, 57.9847, -7.16795, 1.77 ) }
    dend_2 { pt3dadd( -30.5671, 58.077, -7.1868, 1.77 ) }
    dend_2 { pt3dadd( -30.5372, 58.5548, -7.22933, 1.77 ) }
    dend_2 { pt3dadd( -30.5981, 59.6134, -7.1566, 0.81 ) }
    dend_2 { pt3dadd( -30.7566, 60.7553, -6.93302, 0.29 ) }
    dend_2 { pt3dadd( -30.8778, 61.6997, -6.57736, 0.74 ) }
    dend_2 { pt3dadd( -30.9352, 62.2949, -6.31574, 0.74 ) }
    dend_2 { pt3dadd( -31.0219, 63.744, -5.61883, 0.37 ) }
    dend_2 { pt3dadd( -31.0407, 64.7139, -5.11636, 0.37 ) }
    dend_2 { pt3dadd( -31.0159, 65.4815, -4.68342, 0.37 ) }
    dend_2 { pt3dadd( -30.868, 67.0124, -3.73696, 1.4 ) }
    dend_2 { pt3dadd( -30.7586, 67.6098, -3.42192, 2.06 ) }
    dend_2 { pt3dadd( -30.6767, 67.9901, -3.25265, 2.5 ) }
    dend_2 { pt3dadd( -30.546, 68.5717, -3.05074, 2.5 ) }
    dend_2 { pt3dadd( -30.5357, 68.6403, -3.03043, 2.5 ) }
    dend_2 { pt3dadd( -30.3957, 71.0434, -2.45308, 0.44 ) }
    dend_2 { pt3dadd( -30.4813, 72.5297, -2.23083, 0.37 ) }
    dend_2 { pt3dadd( -30.6006, 73.3257, -2.12131, 0.37 ) }
    dend_2 { pt3dadd( -30.6234, 73.4256, -2.10899, 0.37 ) }
    dend_2 { pt3dadd( -31.0385, 74.8716, -1.97178, 0.37 ) }
    dend_2 { pt3dadd( -31.0895, 75.0298, -1.96376, 0.37 ) }
    dend_2 { pt3dadd( -31.3592, 75.7627, -1.98323, 0.37 ) }
    dend_2 { pt3dadd( -31.3773, 75.8326, -1.98688, 0.37 ) }
    dend_2 { pt3dadd( -31.4626, 76.5965, -2.11961, 1.47 ) }
    dend_2 { pt3dadd( -31.5011, 77.4774, -2.33669, 2.21 ) }
    dend_2 { pt3dadd( -31.4975, 78.0789, -2.51609, 2.65 ) }
    dend_2 { pt3dadd( -31.5093, 78.6685, -2.70525, 2.5 ) }
    dend_2 { pt3dadd( -31.6112, 80.5873, -3.34354, 0.29 ) }
    dend_2 { pt3dadd( -31.7118, 81.4369, -3.67097, 0.29 ) }
    dend_2 { pt3dadd( -31.8662, 82.2337, -4.01543, 0.29 ) }
    dend_2 { pt3dadd( -32.0288, 82.7805, -4.24635, 0.29 ) }
    dend_2 { pt3dadd( -32.2538, 83.4088, -4.48888, 1.33 ) }
    dend_2 { pt3dadd( -32.5785, 84.2432, -4.76365, 2.28 ) }
    dend_2 { pt3dadd( -33.0061, 85.3138, -5.0242, 2.73 ) }
    dend_2 { pt3dadd( -33.2242, 85.9167, -5.16248, 2.43 ) }
    dend_2 { pt3dadd( -33.693, 87.3496, -5.52476, 0.29 ) }
    dend_2 { pt3dadd( -33.894, 87.9629, -5.70712, 0.29 ) }
    dend_2 { pt3dadd( -34.0631, 88.5228, -5.87738, 0.29 ) }
    dend_2 { pt3dadd( -34.1892, 88.9706, -6.00955, 0.29 ) }
    dend_2 { pt3dadd( -34.4508, 90.0286, -6.2593, 0.88 ) }
    dend_2 { pt3dadd( -34.562, 90.475, -6.3996, 1.55 ) }
    dend_2 { pt3dadd( -34.8157, 91.263, -6.80435, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -13.605, 26.7337, 2.48257, 0.74 ) }
    dend_1 { pt3dadd( -14.9136, 26.9283, 2.32746, 0.74 ) }
    dend_1 { pt3dadd( -15.9995, 27.1322, 2.19649, 0.74 ) }
    dend_1 { pt3dadd( -16.988, 27.3336, 2.08239, 0.59 ) }
    dend_1 { pt3dadd( -17.5849, 27.4659, 2.01851, 0.74 ) }
    dend_1 { pt3dadd( -18.5222, 27.6863, 1.92798, 0.74 ) }
    dend_1 { pt3dadd( -19.2268, 27.8583, 1.86816, 1.03 ) }
    dend_1 { pt3dadd( -20.1454, 28.1096, 1.80264, 1.33 ) }
    dend_1 { pt3dadd( -20.9014, 28.3102, 1.76047, 1.55 ) }
    dend_1 { pt3dadd( -21.8151, 28.5253, 1.72733, 1.4 ) }
    dend_1 { pt3dadd( -22.9356, 28.7488, 1.73565, 1.25 ) }
    dend_1 { pt3dadd( -24.3766, 29.0202, 1.84716, 0.74 ) }
    dend_1 { pt3dadd( -25.1284, 29.1729, 1.96751, 0.96 ) }
    dend_1 { pt3dadd( -25.9354, 29.3471, 2.16977, 0.96 ) }
    dend_1 { pt3dadd( -27.1278, 29.6535, 2.62869, 0.52 ) }
    dend_1 { pt3dadd( -28.1858, 29.997, 3.23105, 0.52 ) }
    dend_1 { pt3dadd( -28.968, 30.3588, 3.88295, 0.88 ) }
    dend_1 { pt3dadd( -29.5192, 30.7104, 4.482, 0.59 ) }
    dend_1 { pt3dadd( -29.5573, 30.7398, 4.52271, 0.59 ) }
    dend_1 { pt3dadd( -30.1259, 31.2632, 5.11366, 0.29 ) }
    dend_1 { pt3dadd( -30.5279, 31.6265, 5.37137, 0.29 ) }
    dend_1 { pt3dadd( -31.2851, 32.0751, 5.39927, 0.74 ) }
    dend_1 { pt3dadd( -31.9447, 32.3448, 5.26532, 0.96 ) }
    dend_1 { pt3dadd( -33.1885, 32.7083, 4.91868, 0.59 ) }
    dend_1 { pt3dadd( -33.2673, 32.7249, 4.89263, 0.59 ) }
    dend_1 { pt3dadd( -34.2442, 32.8537, 4.52009, 0.29 ) }
    dend_1 { pt3dadd( -34.8861, 32.904, 4.26217, 0.29 ) }
    dend_1 { pt3dadd( -35.7762, 32.9163, 3.90188, 1.62 ) }
    dend_1 { pt3dadd( -36.7212, 32.8605, 3.58413, 2.43 ) }
    dend_1 { pt3dadd( -37.5323, 32.7716, 3.37878, 2.65 ) }
    dend_1 { pt3dadd( -38.2523, 32.6746, 3.22658, 2.65 ) }
    dend_1 { pt3dadd( -38.3138, 32.6665, 3.2162, 2.65 ) }
    dend_1 { pt3dadd( -39.9973, 32.4996, 3.0288, 1.11 ) }
    dend_1 { pt3dadd( -41.3128, 32.4408, 2.98488, 0.37 ) }
    dend_1 { pt3dadd( -42.1638, 32.4744, 3.00635, 0.37 ) }
    dend_1 { pt3dadd( -43.0669, 32.5972, 3.08554, 0.37 ) }
    dend_1 { pt3dadd( -43.8451, 32.8108, 3.24917, 0.37 ) }
    dend_1 { pt3dadd( -44.7254, 33.1965, 3.56444, 0.81 ) }
    dend_1 { pt3dadd( -45.3778, 33.5906, 3.91574, 1.47 ) }
    dend_1 { pt3dadd( -45.8547, 33.9025, 4.23718, 1.69 ) }
    dend_1 { pt3dadd( -46.1488, 34.077, 4.45151, 1.69 ) }
    dend_1 { pt3dadd( -47.4304, 34.7027, 5.4174, 0.66 ) }
    dend_1 { pt3dadd( -48.4089, 35.0705, 6.14911, 0.37 ) }
    dend_1 { pt3dadd( -49.0698, 35.2578, 6.6381, 0.37 ) }
    dend_1 { pt3dadd( -50.2512, 35.4584, 7.45141, 1.25 ) }
    dend_1 { pt3dadd( -51.1362, 35.49, 8.05769, 2.36 ) }
    dend_1 { pt3dadd( -51.9119, 35.4736, 8.59771, 2.36 ) }
    dend_1 { pt3dadd( -51.97, 35.4698, 8.64243, 2.36 ) }
    dend_1 { pt3dadd( -52.4692, 35.4324, 9.06253, 2.21 ) }
    dend_1 { pt3dadd( -53.7222, 35.3688, 10.2379, 0.37 ) }
    dend_1 { pt3dadd( -55.1641, 35.3213, 11.7246, 0.59 ) }
    dend_1 { pt3dadd( -56.0386, 35.306, 12.6585, 0.37 ) }
    dend_1 { pt3dadd( -57.5119, 35.2971, 14.1856, 1.18 ) }
    dend_1 { pt3dadd( -57.904, 35.2975, 14.5672, 1.4 ) }
    dend_1 { pt3dadd( -58.7213, 35.3001, 15.3308, 1.25 ) }
    dend_1 { pt3dadd( -58.7729, 35.2999, 15.383, 1.25 ) }
    dend_1 { pt3dadd( -59.4867, 35.2601, 16.1809, 0.52 ) }
    dend_1 { pt3dadd( -60.2708, 35.1481, 17.0838, 2.14 ) }
    dend_1 { pt3dadd( -60.9935, 35.0589, 17.9429, 2.95 ) }
    dend_1 { pt3dadd( -61.9862, 34.904, 19.2091, 1.92 ) }
    dend_1 { pt3dadd( -63.5006, 34.7118, 21.1043, 1.03 ) }
    dend_1 { pt3dadd( -65.2037, 34.5932, 23.2385, 0.44 ) }
    dend_1 { pt3dadd( -65.5988, 34.5677, 23.7631, 0.44 ) }
    dend_1 { pt3dadd( -66.7208, 34.5065, 25.2879, 0.44 ) }
    dend_1 { pt3dadd( -68.1008, 34.4551, 27.1598, 2.36 ) }
    dend_1 { pt3dadd( -69.7071, 34.4646, 29.1727, 0.22 ) }
    dend_1 { pt3dadd( -70.4325, 34.521, 29.9313, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.444525, -43.0938, 2.58385, 0.36148 ) }
    axon_1 { pt3dadd( -0.476297, -58.0938, 2.58385, 0.36148 ) }
    axon_1 { pt3dadd( -0.508069, -73.0938, 2.58385, 0.36148 ) }
    // Section: dend_48, id: dend_48, parent: dend_38 (entry count 70/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 9.59354, -39.0448, 1.71795, 0.37 ) }
    dend_48 { pt3dadd( 9.85816, -39.9914, 0.65013, 0.37 ) }
    dend_48 { pt3dadd( 10.0704, -40.6562, -0.277256, 0.29 ) }
    dend_48 { pt3dadd( 10.2029, -41.0363, -0.854988, 0.29 ) }
    dend_48 { pt3dadd( 10.6386, -42.0088, -2.5252, 0.74 ) }
    dend_48 { pt3dadd( 10.6611, -42.0454, -2.59749, 0.74 ) }
    dend_48 { pt3dadd( 11.1201, -42.635, -3.91142, 0.66 ) }
    dend_48 { pt3dadd( 11.5271, -43.039, -5.15667, 0.29 ) }
    dend_48 { pt3dadd( 11.562, -43.0529, -5.2449, 0.29 ) }
    dend_48 { pt3dadd( 11.977, -43.0419, -5.98821, 0.29 ) }
    dend_48 { pt3dadd( 12.4969, -42.8794, -6.55947, 0.74 ) }
    dend_48 { pt3dadd( 12.6721, -42.7976, -6.70823, 0.74 ) }
    dend_48 { pt3dadd( 13.047, -42.6108, -6.93999, 1.03 ) }
    dend_48 { pt3dadd( 13.1966, -42.5511, -7.01766, 1.03 ) }
    dend_48 { pt3dadd( 13.5708, -42.4769, -7.21523, 1.03 ) }
    dend_48 { pt3dadd( 14.357, -42.4754, -7.63516, 0.59 ) }
    dend_48 { pt3dadd( 15.3011, -42.6327, -8.14155, 0.22 ) }
    dend_48 { pt3dadd( 16.1078, -42.8698, -8.54705, 0.22 ) }
    dend_48 { pt3dadd( 16.6939, -43.0879, -8.82945, 0.88 ) }
    dend_48 { pt3dadd( 17.7914, -43.5029, -9.39205, 1.84 ) }
    dend_48 { pt3dadd( 18.3495, -43.7264, -9.68699, 2.14 ) }
    dend_48 { pt3dadd( 19.136, -44.0364, -10.0858, 2.36 ) }
    dend_48 { pt3dadd( 20.5342, -44.4976, -10.7359, 0.66 ) }
    dend_48 { pt3dadd( 21.6705, -44.7451, -11.2246, 0.59 ) }
    dend_48 { pt3dadd( 23.4129, -44.9617, -11.9234, 0.52 ) }
    dend_48 { pt3dadd( 23.4917, -44.9622, -11.9528, 0.52 ) }
    dend_48 { pt3dadd( 24.4156, -44.8625, -12.3204, 1.33 ) }
    dend_48 { pt3dadd( 25.5371, -44.5834, -12.8019, 1.77 ) }
    dend_48 { pt3dadd( 26.2471, -44.333, -13.0788, 1.77 ) }
    dend_48 { pt3dadd( 26.5302, -44.2382, -13.1766, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_48 { pt3dadd( 27.5134, -43.9969, -13.4882, 1.25 ) }
    dend_48 { pt3dadd( 28.9151, -43.7562, -13.9628, 0.52 ) }
    dend_48 { pt3dadd( 30.2252, -43.6289, -14.4547, 0.29 ) }
    dend_48 { pt3dadd( 31.5448, -43.5968, -14.965, 0.29 ) }
    dend_48 { pt3dadd( 32.8244, -43.6221, -15.4384, 0.22 ) }
    dend_48 { pt3dadd( 33.951, -43.7059, -15.9892, 0.22 ) }
    dend_48 { pt3dadd( 34.0322, -43.7144, -16.0396, 0.22 ) }
    dend_48 { pt3dadd( 34.5252, -43.7363, -16.4343, 1.03 ) }
    dend_48 { pt3dadd( 34.906, -43.7421, -16.8311, 1.47 ) }
    dend_48 { pt3dadd( 35.369, -43.7138, -17.4141, 1.47 ) }
    dend_48 { pt3dadd( 36.7945, -43.5441, -19.3648, 0.59 ) }
    dend_48 { pt3dadd( 37.3776, -43.4838, -20.2335, 0.22 ) }
    dend_48 { pt3dadd( 38.062, -43.4854, -21.2245, 0.22 ) }
    dend_48 { pt3dadd( 38.5183, -43.5356, -21.8862, 0.22 ) }
    dend_48 { pt3dadd( 38.5664, -43.5456, -21.9534, 0.22 ) }
    dend_48 { pt3dadd( 39.215, -43.7585, -22.7485, 0.22 ) }
    dend_48 { pt3dadd( 39.2666, -43.7783, -22.8107, 0.22 ) }
    dend_48 { pt3dadd( 39.9215, -44.0805, -23.8043, 1.03 ) }
    dend_48 { pt3dadd( 40.4603, -44.3713, -24.6746, 1.62 ) }
    dend_48 { pt3dadd( 40.5017, -44.3905, -24.7442, 1.62 ) }
    dend_48 { pt3dadd( 40.7016, -44.478, -25.066, 1.62 ) }
    dend_48 { pt3dadd( 41.9582, -44.989, -26.9145, 0.15 ) }
    dend_48 { pt3dadd( 42.0064, -45.0117, -26.9795, 0.15 ) }
    dend_48 { pt3dadd( 42.6498, -45.3802, -27.8063, 0.15 ) }
    dend_48 { pt3dadd( 42.7072, -45.4149, -27.8738, 0.15 ) }
    dend_48 { pt3dadd( 43.7341, -46.037, -29.0232, 1.77 ) }
    dend_48 { pt3dadd( 44.4533, -46.5082, -29.7307, 2.73 ) }
    dend_48 { pt3dadd( 44.9389, -46.8131, -30.0764, 3.02 ) }
    dend_48 { pt3dadd( 47.663, -48.4303, -31.7108, 0.22 ) }
    dend_48 { pt3dadd( 48.2404, -48.7384, -31.98, 0.22 ) }
    dend_48 { pt3dadd( 48.302, -48.7681, -32.0006, 0.22 ) }
    dend_48 { pt3dadd( 49.9404, -49.4349, -32.2676, 0.22 ) }
    dend_48 { pt3dadd( 52.3112, -50.1501, -32.35, 0.22 ) }
    dend_48 { pt3dadd( 52.4729, -50.1899, -32.3377, 0.22 ) }
    dend_48 { pt3dadd( 53.6054, -50.4423, -32.1128, 1.55 ) }
    dend_48 { pt3dadd( 54.7055, -50.69, -31.9211, 2.21 ) }
    dend_48 { pt3dadd( 55.725, -50.9211, -31.7868, 1.4 ) }
    dend_48 { pt3dadd( 57.4493, -51.3011, -31.694, 0.22 ) }
    dend_48 { pt3dadd( 58.5784, -51.6258, -31.6766, 0.22 ) }
    dend_48 { pt3dadd( 59.5325, -51.9244, -31.6253, 0.22 ) }
    dend_48 { pt3dadd( 60.1112, -52.132, -31.5497, 0.44 ) }
    dend_48 { pt3dadd( 60.1886, -52.162, -31.536, 0.44 ) }
    dend_48 { pt3dadd( 60.9932, -52.5052, -31.3251, 0.22 ) }
    dend_48 { pt3dadd( 62.8574, -53.36, -30.7548, 1.62 ) }
    dend_48 { pt3dadd( 63.5797, -53.7196, -30.5245, 2.14 ) }
    dend_48 { pt3dadd( 66.2962, -55.1935, -29.6796, 0.22 ) }
    dend_48 { pt3dadd( 67.0304, -55.6274, -29.457, 1.47 ) }
    dend_48 { pt3dadd( 69.3673, -57.1132, -28.7897, 1.11 ) }
    dend_48 { pt3dadd( 70.0678, -57.6073, -28.6094, 1.33 ) }
    dend_48 { pt3dadd( 71.8456, -58.9611, -28.3158, 0.22 ) }
    dend_48 { pt3dadd( 72.7198, -59.624, -28.184, 0.22 ) }
    dend_48 { pt3dadd( 73.1763, -59.9666, -28.1342, 1.47 ) }
    dend_48 { pt3dadd( 73.64, -60.2705, -28.0425, 2.14 ) }
    dend_48 { pt3dadd( 74.5382, -60.7985, -27.8489, 2.14 ) }
    dend_48 { pt3dadd( 76.8348, -62.1124, -27.2239, 0.22 ) }
    dend_48 { pt3dadd( 78.8418, -63.2275, -26.5855, 1.77 ) }
    dend_48 { pt3dadd( 79.3051, -63.4909, -26.4222, 2.36 ) }
    dend_48 { pt3dadd( 82.7661, -65.5108, -25.0399, 0.29 ) }
    dend_48 { pt3dadd( 83.887, -66.186, -24.5678, 0.29 ) }
    dend_48 { pt3dadd( 84.6365, -66.668, -24.2294, 0.29 ) }
    dend_48 { pt3dadd( 84.7001, -66.715, -24.2007, 0.29 ) }
    dend_48 { pt3dadd( 85.3012, -67.192, -23.95, 0.29 ) }
    dend_48 { pt3dadd( 87.3538, -68.8631, -23.134, 2.28 ) }
    dend_48 { pt3dadd( 87.9598, -69.3554, -22.923, 2.65 ) }
    dend_48 { pt3dadd( 90.2778, -71.1369, -22.0778, 0.22 ) }
    dend_48 { pt3dadd( 91.1244, -71.7576, -21.7774, 0.22 ) }
    dend_48 { pt3dadd( 92.5467, -72.7588, -21.3383, 0.96 ) }
    dend_48 { pt3dadd( 93.2837, -73.2412, -21.1553, 1.47 ) }
    dend_48 { pt3dadd( 95.7526, -74.7158, -20.8051, 0.22 ) }
    dend_48 { pt3dadd( 96.9825, -75.3413, -20.7235, 0.81 ) }
    dend_48 { pt3dadd( 97.1493, -75.4119, -20.7278, 0.81 ) }
    dend_48 { pt3dadd( 99.1612, -76.1022, -20.9753, 0.22 ) }
    dend_48 { pt3dadd( 100.144, -76.3791, -21.2445, 0.22 ) }
    dend_48 { pt3dadd( 102.256, -76.8773, -21.9479, 0.22 ) }
    dend_48 { pt3dadd( 103.344, -77.0536, -22.4546, 0.22 ) }
    dend_48 { pt3dadd( 103.418, -77.0619, -22.494, 0.22 ) }
    dend_48 { pt3dadd( 105.104, -77.2045, -23.4647, 0.96 ) }
    dend_48 { pt3dadd( 106.081, -77.2128, -24.1648, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 9.59354, -39.0448, 1.71795, 1.25 ) }
    dend_39 { pt3dadd( 8.82689, -40.6725, 1.86984, 1.25 ) }
    dend_39 { pt3dadd( 8.1577, -42.3377, 1.93296, 0.81 ) }
    dend_39 { pt3dadd( 7.74428, -43.6584, 1.88903, 0.81 ) }
    dend_39 { pt3dadd( 7.40694, -45.198, 1.75509, 0.96 ) }
    dend_39 { pt3dadd( 7.1732, -46.7842, 1.53742, 0.74 ) }
    dend_39 { pt3dadd( 6.99599, -47.9867, 1.3724, 1.11 ) }
    dend_39 { pt3dadd( 6.9375, -48.7973, 1.1751, 1.69 ) }
    dend_39 { pt3dadd( 7.01924, -50.1326, 0.726357, 2.36 ) }
    dend_39 { pt3dadd( 7.24665, -51.1638, 0.281563, 2.65 ) }
    dend_39 { pt3dadd( 7.5164, -51.8067, -0.0562988, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 89/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -7.63165, -20.5388, 11.871, 0.81 ) }
    dend_37 { pt3dadd( -8.24106, -19.7482, 11.5752, 0.81 ) }
    dend_37 { pt3dadd( -8.68374, -19.0908, 11.2782, 0.66 ) }
    dend_37 { pt3dadd( -9.11375, -18.4057, 10.9551, 0.66 ) }
    dend_37 { pt3dadd( -9.35198, -18.0264, 10.7455, 0.96 ) }
    dend_37 { pt3dadd( -9.78875, -17.3817, 10.3482, 0.44 ) }
    dend_37 { pt3dadd( -10.1211, -16.9163, 10.0413, 0.44 ) }
    dend_37 { pt3dadd( -10.6211, -16.2211, 9.49732, 0.59 ) }
    dend_37 { pt3dadd( -10.8151, -16.0018, 9.27767, 0.59 ) }
    dend_37 { pt3dadd( -11.2962, -15.6932, 8.80988, 0.59 ) }
    dend_37 { pt3dadd( -11.7105, -15.6006, 8.49356, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( -11.7591, -15.6049, 8.46589, 0.59 ) }
    dend_37 { pt3dadd( -12.2439, -15.7326, 8.23965, 0.59 ) }
    dend_37 { pt3dadd( -12.9133, -15.9691, 8.01633, 1.33 ) }
    dend_37 { pt3dadd( -13.5042, -16.1915, 7.86003, 1.69 ) }
    dend_37 { pt3dadd( -14.1201, -16.4158, 7.75376, 1.55 ) }
    dend_37 { pt3dadd( -14.8685, -16.6668, 7.72716, 0.88 ) }
    dend_37 { pt3dadd( -15.5589, -16.8379, 7.90634, 0.44 ) }
    dend_37 { pt3dadd( -16.1908, -16.9643, 8.2636, 0.44 ) }
    dend_37 { pt3dadd( -16.4622, -17.0238, 8.49447, 0.74 ) }
    dend_37 { pt3dadd( -16.8517, -17.1359, 8.93195, 0.88 ) }
    dend_37 { pt3dadd( -17.739, -17.4447, 10.0715, 1.03 ) }
    dend_37 { pt3dadd( -19.168, -18.0296, 12.0589, 0.52 ) }
    dend_37 { pt3dadd( -19.8364, -18.3386, 13.0289, 1.25 ) }
    dend_37 { pt3dadd( -20.4293, -18.6629, 13.9196, 1.25 ) }
    dend_37 { pt3dadd( -20.9349, -18.9863, 14.8003, 0.44 ) }
    dend_37 { pt3dadd( -21.2919, -19.2508, 15.4903, 0.44 ) }
    dend_37 { pt3dadd( -21.7313, -19.558, 16.4234, 0.29 ) }
    dend_37 { pt3dadd( -22.3855, -19.9165, 17.972, 1.99 ) }
    dend_37 { pt3dadd( -22.5766, -20.003, 18.4087, 1.99 ) }
    dend_37 { pt3dadd( -23.9845, -20.5687, 21.4855, 1.99 ) }
    dend_37 { pt3dadd( -24.0081, -20.5773, 21.5356, 1.99 ) }
    dend_37 { pt3dadd( -26.2593, -21.3571, 26.2952, 2.73 ) }
    dend_37 { pt3dadd( -28.909, -22.2617, 31.7184, 1.4 ) }
    dend_37 { pt3dadd( -29.3178, -22.3972, 32.5075, 1.25 ) }
    dend_37 { pt3dadd( -29.7228, -22.5222, 33.2107, 0.22 ) }
    dend_37 { pt3dadd( -30.0115, -22.6164, 33.6426, 0.22 ) }
    dend_37 { pt3dadd( -30.1441, -22.6681, 33.8303, 1.11 ) }
    dend_37 { pt3dadd( -30.6181, -22.9214, 34.3776, 1.47 ) }
    dend_37 { pt3dadd( -32.1128, -23.9269, 35.7781, 1.18 ) }
    dend_37 { pt3dadd( -32.5284, -24.1994, 36.2079, 1.99 ) }
    dend_37 { pt3dadd( -33.5212, -24.8279, 37.2859, 0.22 ) }
    dend_37 { pt3dadd( -34.1374, -25.2194, 37.9545, 0.22 ) }
    dend_37 { pt3dadd( -34.3255, -25.3377, 38.149, 0.66 ) }
    dend_37 { pt3dadd( -35.1203, -25.8282, 38.9407, 0.66 ) }
    dend_37 { pt3dadd( -35.6792, -26.1757, 39.3853, 0.29 ) }
    dend_37 { pt3dadd( -36.3165, -26.5077, 39.8746, 1.33 ) }
    dend_37 { pt3dadd( -36.5385, -26.5657, 39.9933, 1.62 ) }
    dend_37 { pt3dadd( -36.9609, -26.629, 40.196, 1.84 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -7.63165, -20.5388, 11.871, 1.62 ) }
    dend_34 { pt3dadd( -7.68254, -21.4151, 11.6929, 1.62 ) }
    dend_34 { pt3dadd( -7.72959, -22.1064, 11.5446, 1.33 ) }
    dend_34 { pt3dadd( -7.78785, -22.9644, 11.3471, 0.88 ) }
    dend_34 { pt3dadd( -7.84407, -23.9473, 11.1104, 0.74 ) }
    dend_34 { pt3dadd( -7.90493, -25.1188, 10.8267, 0.74 ) }
    dend_34 { pt3dadd( -7.94071, -26.2055, 10.5801, 2.14 ) }
    dend_34 { pt3dadd( -7.94739, -27.225, 10.3786, 2.21 ) }
    dend_34 { pt3dadd( -7.90959, -28.4417, 10.2202, 1.47 ) }
    dend_34 { pt3dadd( -7.82182, -29.3797, 10.1768, 1.18 ) }
    dend_34 { pt3dadd( -7.72049, -29.9218, 10.2122, 0.88 ) }
    dend_34 { pt3dadd( -7.47099, -30.7533, 10.4188, 0.59 ) }
    dend_34 { pt3dadd( -7.0979, -31.7051, 10.7979, 0.59 ) }
    dend_34 { pt3dadd( -6.70772, -32.6061, 11.2545, 1.18 ) }
    dend_34 { pt3dadd( -6.54229, -32.9878, 11.4897, 1.47 ) }
    dend_34 { pt3dadd( -6.32545, -33.5592, 11.8744, 1.11 ) }
    dend_34 { pt3dadd( -6.08693, -34.5399, 12.4977, 0.74 ) }
    dend_34 { pt3dadd( -6.18541, -35.0579, 12.6914, 0.44 ) }
    dend_34 { pt3dadd( -6.62273, -35.6256, 12.6797, 0.44 ) }
    dend_34 { pt3dadd( -7.09623, -36.0911, 12.5755, 0.52 ) }
    dend_34 { pt3dadd( -7.65148, -36.5334, 12.4293, 0.52 ) }
    dend_34 { pt3dadd( -8.18934, -36.9156, 12.2695, 1.18 ) }
    dend_34 { pt3dadd( -8.91479, -37.4262, 12.0348, 1.92 ) }
    dend_34 { pt3dadd( -9.65403, -38.0154, 11.7796, 2.5 ) }
    dend_34 { pt3dadd( -10.3392, -38.6754, 11.5201, 2.36 ) }
    dend_34 { pt3dadd( -11.1168, -39.5729, 11.1966, 2.06 ) }
    dend_34 { pt3dadd( -11.7115, -40.3783, 10.9213, 0.59 ) }
    dend_34 { pt3dadd( -12.2196, -41.1346, 10.6875, 0.52 ) }
    dend_34 { pt3dadd( -12.7157, -41.9579, 10.4609, 0.44 ) }
    dend_34 { pt3dadd( -13.1801, -42.8368, 10.2134, 1.4 ) }
    dend_34 { pt3dadd( -13.5472, -43.6323, 9.99572, 1.84 ) }
    dend_34 { pt3dadd( -13.9132, -44.5484, 9.74681, 1.84 ) }
    dend_34 { pt3dadd( -14.1878, -45.281, 9.54528, 1.69 ) }
    dend_34 { pt3dadd( -14.4744, -46.0895, 9.32244, 1.18 ) }
    dend_34 { pt3dadd( -14.7332, -46.9083, 9.08737, 0.74 ) }
    dend_34 { pt3dadd( -14.8634, -47.4265, 8.92042, 0.66 ) }
    dend_34 { pt3dadd( -15.0009, -48.1952, 8.64246, 0.59 ) }
    dend_34 { pt3dadd( -15.0675, -48.8632, 8.35897, 0.52 ) }
    dend_34 { pt3dadd( -15.0909, -49.3363, 8.12546, 0.37 ) }
    dend_34 { pt3dadd( -15.1172, -50.1873, 7.68001, 0.29 ) }
    dend_34 { pt3dadd( -15.1525, -50.9739, 7.26089, 0.29 ) }
    dend_34 { pt3dadd( -15.1573, -51.0309, 7.229, 0.29 ) }
    dend_34 { pt3dadd( -15.3247, -52.1115, 6.61468, 1.77 ) }
    dend_34 { pt3dadd( -15.5298, -53.0176, 6.16128, 2.36 ) }
    dend_34 { pt3dadd( -15.5412, -53.0608, 6.14171, 2.36 ) }
    dend_34 { pt3dadd( -15.686, -53.5635, 5.94912, 2.58 ) }
    dend_34 { pt3dadd( -15.8443, -54.1117, 5.7532, 2.58 ) }
    dend_34 { pt3dadd( -16.1062, -54.9915, 5.43176, 1.84 ) }
    dend_34 { pt3dadd( -16.374, -55.9471, 5.0947, 0.81 ) }
    dend_34 { pt3dadd( -16.59, -56.8098, 4.801, 0.52 ) }
    dend_34 { pt3dadd( -16.7633, -57.5817, 4.56717, 0.44 ) }
    dend_34 { pt3dadd( -16.9861, -58.633, 4.28539, 0.44 ) }
    dend_34 { pt3dadd( -17.1646, -59.5511, 4.09904, 0.37 ) }
    dend_34 { pt3dadd( -17.2685, -60.1576, 4.02981, 0.37 ) }
    dend_34 { pt3dadd( -17.3594, -60.7433, 4.00619, 0.37 ) }
    dend_34 { pt3dadd( -17.4763, -61.5487, 4.04711, 0.29 ) }
    dend_34 { pt3dadd( -17.5498, -62.2147, 4.11494, 0.29 ) }
    dend_34 { pt3dadd( -17.6397, -63.2717, 4.32654, 1.99 ) }
    dend_34 { pt3dadd( -17.701, -63.9604, 4.51539, 2.95 ) }
    dend_34 { pt3dadd( -17.7485, -64.3862, 4.65245, 2.95 ) }
    dend_34 { pt3dadd( -17.9052, -65.8062, 5.14275, 0.59 ) }
    dend_34 { pt3dadd( -17.9778, -66.6249, 5.45707, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -18.0546, -67.7351, 5.9292, 0.37 ) }
    dend_34 { pt3dadd( -18.0897, -68.5319, 6.2863, 0.37 ) }
    dend_34 { pt3dadd( -18.071, -69.311, 6.65564, 1.69 ) }
    dend_34 { pt3dadd( -18.032, -69.7443, 6.87726, 2.58 ) }
    dend_34 { pt3dadd( -17.9341, -70.392, 7.22636, 2.58 ) }
    dend_34 { pt3dadd( -17.7603, -71.4759, 7.79388, 0.29 ) }
    dend_34 { pt3dadd( -17.6385, -72.2219, 8.12492, 0.29 ) }
    dend_34 { pt3dadd( -17.4978, -73.2181, 8.5855, 0.29 ) }
    dend_34 { pt3dadd( -17.4055, -73.9803, 8.95164, 0.66 ) }
    dend_34 { pt3dadd( -17.3803, -74.2631, 9.09625, 0.74 ) }
    dend_34 { pt3dadd( -17.3321, -74.9854, 9.47643, 0.29 ) }
    dend_34 { pt3dadd( -17.305, -75.6718, 9.88181, 0.29 ) }
    dend_34 { pt3dadd( -17.3268, -76.8122, 10.5696, 1.4 ) }
    dend_34 { pt3dadd( -17.3439, -77.1912, 10.7816, 1.92 ) }
    dend_34 { pt3dadd( -17.3427, -77.242, 10.8072, 1.92 ) }
    dend_34 { pt3dadd( -17.3104, -77.5201, 10.9435, 1.92 ) }
    dend_34 { pt3dadd( -17.0887, -78.5282, 11.3724, 0.22 ) }
    dend_34 { pt3dadd( -17.0731, -78.5799, 11.392, 0.22 ) }
    dend_34 { pt3dadd( -16.8506, -79.2292, 11.6224, 0.66 ) }
    dend_34 { pt3dadd( -16.7545, -79.4914, 11.7199, 0.81 ) }
    dend_34 { pt3dadd( -16.4126, -80.2896, 12.0233, 0.22 ) }
    dend_34 { pt3dadd( -16.0737, -81.0178, 12.2949, 2.14 ) }
    dend_34 { pt3dadd( -15.7742, -81.6076, 12.5057, 2.58 ) }
    dend_34 { pt3dadd( -15.0137, -82.9967, 13.0199, 0.22 ) }
    dend_34 { pt3dadd( -14.623, -83.6803, 13.2807, 0.22 ) }
    dend_34 { pt3dadd( -14.1703, -84.4462, 13.573, 0.22 ) }
    dend_34 { pt3dadd( -13.8095, -85.0258, 13.7887, 0.22 ) }
    dend_34 { pt3dadd( -13.4426, -85.5755, 14.0015, 2.36 ) }
    dend_34 { pt3dadd( -12.8548, -86.4093, 14.3057, 2.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 39.5801, -12.0256, -93.9458, 0.15 ) }
    dend_31 { pt3dadd( 42.5913, -16.6269, -114.887, 0.15 ) }
    dend_31 { pt3dadd( 42.8208, -16.9586, -116.3, 1.69 ) }
    dend_31 { pt3dadd( 42.9428, -17.1293, -116.999, 1.92 ) }
    dend_31 { pt3dadd( 42.9625, -17.1545, -117.097, 1.92 ) }
    dend_31 { pt3dadd( 43.7779, -18.1117, -120.644, 0.22 ) }
    dend_31 { pt3dadd( 43.9569, -18.3025, -121.316, 0.22 ) }
    dend_31 { pt3dadd( 44.7548, -18.7871, -122.078, 1.18 ) }
    dend_31 { pt3dadd( 44.809, -18.8268, -122.137, 1.18 ) }
    dend_31 { pt3dadd( 45.8613, -19.6541, -123.401, 0.29 ) }
    dend_31 { pt3dadd( 46.3172, -19.9873, -123.949, 0.59 ) }
    dend_31 { pt3dadd( 47.2069, -20.5885, -124.989, 0.37 ) }
    dend_31 { pt3dadd( 48.6913, -21.4122, -126.774, 0.74 ) }
    dend_31 { pt3dadd( 48.7522, -21.4412, -126.851, 0.74 ) }
    dend_31 { pt3dadd( 49.9692, -22.0941, -128.546, 0.15 ) }
    dend_31 { pt3dadd( 50.5369, -22.438, -129.464, 0.15 ) }
    dend_31 { pt3dadd( 50.5815, -22.4683, -129.535, 0.15 ) }
    dend_31 { pt3dadd( 50.8728, -22.6913, -130.007, 0.15 ) }
    dend_31 { pt3dadd( 50.9385, -22.7471, -130.099, 0.15 ) }
    dend_31 { pt3dadd( 51.8091, -23.4735, -131.224, 0.15 ) }
    dend_31 { pt3dadd( 52.496, -24.0432, -132.057, 1.4 ) }
    dend_31 { pt3dadd( 52.9699, -24.4284, -132.62, 1.69 ) }
    dend_31 { pt3dadd( 55.0707, -26.1022, -135.062, 0.22 ) }
    dend_31 { pt3dadd( 55.7885, -26.6588, -135.889, 0.22 ) }
    dend_31 { pt3dadd( 56.6633, -27.3092, -136.81, 0.22 ) }
    dend_31 { pt3dadd( 57.3046, -27.7386, -137.399, 0.96 ) }
    dend_31 { pt3dadd( 57.569, -27.9206, -137.618, 0.96 ) }
    dend_31 { pt3dadd( 58.788, -28.7022, -138.536, 0.22 ) }
    dend_31 { pt3dadd( 58.8455, -28.7376, -138.572, 0.22 ) }
    dend_31 { pt3dadd( 59.9694, -29.45, -139.296, 0.22 ) }
    dend_31 { pt3dadd( 61.0744, -30.2164, -139.934, 1.55 ) }
    dend_31 { pt3dadd( 61.6761, -30.6086, -140.231, 1.99 ) }
    dend_31 { pt3dadd( 63.3806, -31.7098, -141.115, 0.29 ) }
    dend_31 { pt3dadd( 63.4501, -31.7531, -141.152, 0.29 ) }
    dend_31 { pt3dadd( 64.4486, -32.4091, -141.791, 0.29 ) }
    dend_31 { pt3dadd( 65.7224, -33.345, -142.719, 0.29 ) }
    dend_31 { pt3dadd( 66.1425, -33.7161, -143.092, 0.29 ) }
    dend_31 { pt3dadd( 67.6045, -35.2411, -144.765, 1.4 ) }
    dend_31 { pt3dadd( 68.0491, -35.7957, -145.405, 1.69 ) }
    dend_31 { pt3dadd( 69.195, -37.3537, -147.26, 0.29 ) }
    dend_31 { pt3dadd( 69.9381, -38.5179, -148.692, 0.29 ) }
    dend_31 { pt3dadd( 70.7861, -40.0559, -150.561, 1.47 ) }
    dend_31 { pt3dadd( 71.6111, -41.8218, -152.605, 1.18 ) }
    dend_31 { pt3dadd( 72.2717, -43.4933, -154.395, 0.22 ) }
    dend_31 { pt3dadd( 72.5063, -44.2063, -155.089, 0.22 ) }
    dend_31 { pt3dadd( 72.8746, -45.6055, -156.289, 1.69 ) }
    dend_31 { pt3dadd( 73.0198, -46.267, -156.785, 1.77 ) }
    dend_31 { pt3dadd( 73.3184, -47.9872, -157.717, 0.66 ) }
    dend_31 { pt3dadd( 73.4248, -48.8934, -158.059, 0.22 ) }
    dend_31 { pt3dadd( 73.5147, -50.0327, -158.407, 0.96 ) }
    dend_31 { pt3dadd( 73.6027, -51.2078, -158.794, 0.22 ) }
    dend_31 { pt3dadd( 73.6675, -51.7774, -159.064, 0.15 ) }
    dend_31 { pt3dadd( 73.834, -52.76, -159.755, 0.15 ) }
    dend_31 { pt3dadd( 74.1018, -53.9554, -160.731, 0.44 ) }
    dend_31 { pt3dadd( 74.3269, -54.9325, -161.616, 1.33 ) }
    dend_31 { pt3dadd( 74.5177, -55.7849, -162.435, 1.25 ) }
    dend_31 { pt3dadd( 74.9887, -58.6279, -165.276, 1.25 ) }
    dend_31 { pt3dadd( 75.2644, -60.6281, -167.361, 0.15 ) }
    dend_31 { pt3dadd( 75.3494, -61.3692, -168.141, 0.15 ) }
    dend_31 { pt3dadd( 75.4061, -62.3685, -169.18, 0.81 ) }
    dend_31 { pt3dadd( 75.4138, -62.7665, -169.577, 0.96 ) }
    dend_31 { pt3dadd( 75.4412, -64.6557, -171.296, 0.52 ) }
    dend_31 { pt3dadd( 75.4862, -66.266, -172.625, 0.22 ) }
    dend_31 { pt3dadd( 75.5266, -67.0231, -173.234, 1.18 ) }
    dend_31 { pt3dadd( 75.8184, -69.8849, -175.646, 0.22 ) }
    dend_31 { pt3dadd( 75.9674, -70.8599, -176.477, 0.96 ) }
    dend_31 { pt3dadd( 76.3698, -72.8069, -178.136, 0.22 ) }
    dend_31 { pt3dadd( 76.5298, -73.3652, -178.595, 0.52 ) }
    dend_31 { pt3dadd( 76.5919, -73.5807, -178.765, 0.52 ) }
    dend_31 { pt3dadd( 77.2871, -75.7839, -180.525, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 39.5801, -12.0256, -93.9458, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( 39.7051, -10.3493, -100.133, 1.55 ) }
    dend_30 { pt3dadd( 39.7849, -10.0014, -101.315, 1.62 ) }
    dend_30 { pt3dadd( 40.5712, -8.02115, -107.55, 0.22 ) }
    dend_30 { pt3dadd( 40.5921, -7.98146, -107.669, 0.22 ) }
    dend_30 { pt3dadd( 40.9094, -7.52833, -109.024, 1.33 ) }
    dend_30 { pt3dadd( 41.1192, -7.27401, -109.769, 1.25 ) }
    dend_30 { pt3dadd( 42.6006, -5.875, -113.287, 0.22 ) }
    dend_30 { pt3dadd( 43.2673, -5.31734, -114.62, 1.18 ) }
    dend_30 { pt3dadd( 43.6514, -5.02401, -115.221, 1.33 ) }
    dend_30 { pt3dadd( 45.4341, -3.68998, -117.873, 0.22 ) }
    dend_30 { pt3dadd( 46.7079, -2.76149, -119.694, 1.84 ) }
    dend_30 { pt3dadd( 47.0821, -2.46725, -120.204, 1.84 ) }
    dend_30 { pt3dadd( 48.1987, -1.50925, -121.543, 0.29 ) }
    dend_30 { pt3dadd( 48.4829, -1.2455, -121.877, 0.74 ) }
    dend_30 { pt3dadd( 49.6399, -0.0668452, -123.176, 0.22 ) }
    dend_30 { pt3dadd( 49.7561, 0.0733669, -123.304, 0.22 ) }
    dend_30 { pt3dadd( 50.2195, 0.699663, -123.851, 0.88 ) }
    dend_30 { pt3dadd( 51.1907, 2.31468, -125.457, 0.22 ) }
    dend_30 { pt3dadd( 51.3577, 2.65251, -125.815, 0.52 ) }
    dend_30 { pt3dadd( 51.6145, 3.24357, -126.472, 0.22 ) }
    dend_30 { pt3dadd( 52.1545, 4.57071, -128.051, 1.92 ) }
    dend_30 { pt3dadd( 52.3783, 5.16806, -128.781, 1.92 ) }
    dend_30 { pt3dadd( 52.9816, 7.06355, -131.167, 0.22 ) }
    dend_30 { pt3dadd( 53.0608, 7.38201, -131.56, 0.88 ) }
    dend_30 { pt3dadd( 53.1313, 7.65301, -131.893, 0.88 ) }
    dend_30 { pt3dadd( 53.4692, 8.75838, -133.196, 0.22 ) }
    dend_30 { pt3dadd( 53.6495, 9.28201, -133.811, 0.22 ) }
    dend_30 { pt3dadd( 53.6675, 9.34343, -133.884, 0.22 ) }
    dend_30 { pt3dadd( 53.784, 9.6304, -134.242, 0.22 ) }
    dend_30 { pt3dadd( 54.319, 10.7407, -135.731, 1.4 ) }
    dend_30 { pt3dadd( 54.449, 10.9836, -136.06, 1.4 ) }
    dend_30 { pt3dadd( 55.1957, 12.2396, -137.785, 0.22 ) }
    dend_30 { pt3dadd( 55.5286, 12.6815, -138.415, 0.96 ) }
    dend_30 { pt3dadd( 56.3969, 13.6792, -139.825, 0.22 ) }
    dend_30 { pt3dadd( 56.6576, 13.9332, -140.183, 0.22 ) }
    dend_30 { pt3dadd( 57.1069, 14.267, -140.624, 0.66 ) }
    dend_30 { pt3dadd( 57.8294, 14.6893, -141.156, 0.66 ) }
    dend_30 { pt3dadd( 59.2288, 15.3076, -141.844, 0.22 ) }
    dend_30 { pt3dadd( 59.9532, 15.5617, -142.118, 1.11 ) }
    dend_30 { pt3dadd( 60.4464, 15.6962, -142.264, 1.4 ) }
    dend_30 { pt3dadd( 62.5579, 16.0546, -142.797, 0.22 ) }
    dend_30 { pt3dadd( 63.5391, 16.139, -143.002, 0.22 ) }
    dend_30 { pt3dadd( 64.7526, 16.1634, -143.194, 0.96 ) }
    dend_30 { pt3dadd( 65.7842, 16.1431, -143.337, 1.47 ) }
    dend_30 { pt3dadd( 67.508, 16.0657, -143.578, 0.22 ) }
    dend_30 { pt3dadd( 68.409, 16.0246, -143.77, 0.22 ) }
    dend_30 { pt3dadd( 68.568, 16.0153, -143.816, 0.22 ) }
    dend_30 { pt3dadd( 69.5363, 15.9879, -144.166, 0.22 ) }
    dend_30 { pt3dadd( 70.8936, 15.9802, -144.734, 1.33 ) }
    dend_30 { pt3dadd( 71.4828, 16.007, -145.014, 1.62 ) }
    dend_30 { pt3dadd( 73.5381, 16.2119, -146.097, 0.22 ) }
    dend_30 { pt3dadd( 74.4606, 16.3284, -146.593, 0.66 ) }
    dend_30 { pt3dadd( 75.0024, 16.3919, -146.89, 0.66 ) }
    dend_30 { pt3dadd( 75.1693, 16.4078, -146.987, 0.66 ) }
    dend_30 { pt3dadd( 76.8159, 16.5363, -147.932, 0.22 ) }
    dend_30 { pt3dadd( 78.0019, 16.5848, -148.699, 1.11 ) }
    dend_30 { pt3dadd( 78.8201, 16.5945, -149.25, 1.33 ) }
    dend_30 { pt3dadd( 80.5784, 16.589, -150.519, 0.22 ) }
    dend_30 { pt3dadd( 81.8067, 16.5973, -151.48, 1.25 ) }
    dend_30 { pt3dadd( 82.303, 16.6035, -151.953, 1.33 ) }
    dend_30 { pt3dadd( 84.5687, 16.6251, -154.421, 0.22 ) }
    dend_30 { pt3dadd( 84.8405, 16.6301, -154.743, 0.44 ) }
    dend_30 { pt3dadd( 84.9573, 16.6346, -154.897, 0.44 ) }
    dend_30 { pt3dadd( 85.8596, 16.6918, -156.238, 1.18 ) }
    dend_30 { pt3dadd( 87.9139, 16.9241, -159.568, 0.22 ) }
    dend_30 { pt3dadd( 88.3775, 16.9988, -160.376, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -7.49482, -28.5775, -44.1571, 1.55 ) }
    dend_28 { pt3dadd( -8.1951, -29.5462, -46.4641, 1.55 ) }
    dend_28 { pt3dadd( -8.8264, -30.2107, -48.4162, 0.22 ) }
    dend_28 { pt3dadd( -9.10092, -30.5152, -49.2318, 0.22 ) }
    dend_28 { pt3dadd( -9.53669, -31.0724, -50.7496, 2.36 ) }
    dend_28 { pt3dadd( -9.83706, -31.5501, -52.1724, 2.87 ) }
    dend_28 { pt3dadd( -11.0261, -33.3718, -58.531, 0.81 ) }
    dend_28 { pt3dadd( -11.0352, -33.3849, -58.5964, 0.81 ) }
    dend_28 { pt3dadd( -11.1646, -33.6478, -60.286, 0.81 ) }
    dend_28 { pt3dadd( -11.1495, -34.0846, -63.5263, 2.06 ) }
    dend_28 { pt3dadd( -10.8751, -34.5229, -66.8912, 1.25 ) }
    dend_28 { pt3dadd( -10.5322, -34.8997, -69.3201, 0.81 ) }
    dend_28 { pt3dadd( -9.70815, -35.8243, -73.802, 0.96 ) }
    dend_28 { pt3dadd( -9.57858, -36.0137, -74.7435, 1.47 ) }
    dend_28 { pt3dadd( -9.3699, -36.4011, -76.7404, 0.22 ) }
    dend_28 { pt3dadd( -9.29641, -36.5886, -77.5636, 0.22 ) }
    dend_28 { pt3dadd( -9.10555, -37.0879, -79.8329, 1.4 ) }
    dend_28 { pt3dadd( -8.88828, -37.674, -82.442, 1.03 ) }
    dend_28 { pt3dadd( -8.76122, -38.205, -84.7606, 1.69 ) }
    dend_28 { pt3dadd( -8.63355, -38.8243, -87.4992, 1.4 ) }
    dend_28 { pt3dadd( -8.45782, -39.4346, -90.2264, 1.4 ) }
    dend_28 { pt3dadd( -7.95724, -40.5588, -95.1389, 1.84 ) }
    dend_28 { pt3dadd( -7.38227, -41.4515, -98.8025, 0.15 ) }
    dend_28 { pt3dadd( -7.10865, -41.8097, -100.063, 1.84 ) }
    dend_28 { pt3dadd( -6.98544, -41.9626, -100.513, 1.84 ) }
    dend_28 { pt3dadd( -6.16871, -43.0659, -103.233, 0.22 ) }
    dend_28 { pt3dadd( -5.8356, -43.5079, -104.276, 1.55 ) }
    dend_28 { pt3dadd( -5.69608, -43.6461, -104.612, 1.77 ) }
    dend_28 { pt3dadd( -4.91162, -44.1402, -106.345, 0.22 ) }
    dend_28 { pt3dadd( -4.65999, -44.2545, -106.884, 0.22 ) }
    dend_28 { pt3dadd( -4.04788, -44.4861, -108.14, 1.77 ) }
    dend_28 { pt3dadd( -1.21707, -45.3453, -113.727, 1.25 ) }
    dend_28 { pt3dadd( 0.0311, -45.6568, -116.102, 0.81 ) }
    dend_28 { pt3dadd( 0.918449, -45.8608, -117.749, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( 1.31369, -45.939, -118.465, 0.37 ) }
    dend_28 { pt3dadd( 2.00738, -46.0904, -119.634, 0.22 ) }
    dend_28 { pt3dadd( 2.97517, -46.3021, -121.063, 1.77 ) }
    dend_28 { pt3dadd( 3.26958, -46.3815, -121.421, 1.84 ) }
    dend_28 { pt3dadd( 5.5563, -47.0483, -124.172, 0.96 ) }
    dend_28 { pt3dadd( 6.32409, -47.276, -125.066, 1.4 ) }
    dend_28 { pt3dadd( 7.8089, -47.6353, -126.815, 0.22 ) }
    dend_28 { pt3dadd( 8.1176, -47.6849, -127.166, 0.22 ) }
    dend_28 { pt3dadd( 8.23431, -47.6927, -127.28, 0.22 ) }
    dend_28 { pt3dadd( 9.12827, -47.6859, -128.022, 0.22 ) }
    dend_28 { pt3dadd( 9.65888, -47.6473, -128.308, 1.18 ) }
    dend_28 { pt3dadd( 9.72984, -47.6429, -128.337, 1.18 ) }
    dend_28 { pt3dadd( 10.3292, -47.5994, -128.547, 1.18 ) }
    dend_28 { pt3dadd( 12.0546, -47.5733, -129.148, 0.29 ) }
    dend_28 { pt3dadd( 12.7902, -47.5793, -129.419, 0.44 ) }
    dend_28 { pt3dadd( 13.3889, -47.5812, -129.64, 0.44 ) }
    dend_28 { pt3dadd( 14.3496, -47.5785, -129.979, 0.22 ) }
    dend_28 { pt3dadd( 15.4791, -47.5703, -130.359, 1.47 ) }
    dend_28 { pt3dadd( 16.0597, -47.5706, -130.541, 1.62 ) }
    dend_28 { pt3dadd( 17.6873, -47.5727, -130.984, 0.22 ) }
    dend_28 { pt3dadd( 18.5414, -47.5736, -131.245, 0.22 ) }
    dend_28 { pt3dadd( 19.0181, -47.5995, -131.413, 0.59 ) }
    dend_28 { pt3dadd( 19.0791, -47.6135, -131.438, 0.59 ) }
    dend_28 { pt3dadd( 19.3561, -47.7635, -131.611, 0.59 ) }
    dend_28 { pt3dadd( 19.4665, -47.8758, -131.773, 0.59 ) }
    dend_28 { pt3dadd( 19.8315, -48.4895, -132.652, 0.15 ) }
    dend_28 { pt3dadd( 20.0007, -48.8342, -133.146, 1.18 ) }
    dend_28 { pt3dadd( 20.1852, -49.244, -133.75, 1.18 ) }
    dend_28 { pt3dadd( 20.6316, -50.3346, -135.399, 0.44 ) }
    dend_28 { pt3dadd( 21.1548, -51.9005, -137.754, 0.22 ) }
    dend_28 { pt3dadd( 21.2266, -52.2398, -138.286, 0.22 ) }
    dend_28 { pt3dadd( 21.2257, -52.4529, -138.705, 0.74 ) }
    dend_28 { pt3dadd( 21.2058, -52.502, -138.829, 0.74 ) }
    dend_28 { pt3dadd( 20.7622, -52.9886, -140.41, 0.22 ) }
    dend_28 { pt3dadd( 20.5373, -53.1628, -141.037, 0.22 ) }
    dend_28 { pt3dadd( 19.6476, -53.6726, -143.15, 1.47 ) }
    dend_28 { pt3dadd( 18.4909, -54.1711, -145.633, 1.33 ) }
    dend_28 { pt3dadd( 17.2337, -54.6358, -148.221, 0.59 ) }
    dend_28 { pt3dadd( 16.3497, -54.9087, -149.961, 0.44 ) }
    dend_28 { pt3dadd( 16.0454, -54.9751, -150.515, 0.44 ) }
    dend_28 { pt3dadd( 15.2601, -55.1065, -151.914, 0.22 ) }
    dend_28 { pt3dadd( 14.7584, -55.1769, -152.689, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.49482, -28.5775, -44.1571, 2.87 ) }
    dend_25 { pt3dadd( -7.95959, -28.7513, -44.3901, 2.87 ) }
    dend_25 { pt3dadd( -8.78435, -29.0661, -44.7392, 2.73 ) }
    dend_25 { pt3dadd( -10.199, -29.6063, -45.2772, 0.29 ) }
    dend_25 { pt3dadd( -10.3824, -29.6758, -45.3561, 0.29 ) }
    dend_25 { pt3dadd( -11.4441, -30.0691, -45.8206, 0.29 ) }
    dend_25 { pt3dadd( -12.5112, -30.4345, -46.2923, 1.55 ) }
    dend_25 { pt3dadd( -13.012, -30.5782, -46.4928, 2.21 ) }
    dend_25 { pt3dadd( -13.24, -30.6321, -46.5907, 2.21 ) }
    dend_25 { pt3dadd( -14.7771, -30.9576, -47.3669, 0.22 ) }
    dend_25 { pt3dadd( -15.2907, -31.0609, -47.6854, 0.22 ) }
    dend_25 { pt3dadd( -15.738, -31.1449, -48.0159, 0.66 ) }
    dend_25 { pt3dadd( -15.9137, -31.1673, -48.1535, 0.81 ) }
    dend_25 { pt3dadd( -16.9601, -31.2597, -48.9567, 0.22 ) }
    dend_25 { pt3dadd( -17.381, -31.2892, -49.2532, 0.22 ) }
    dend_25 { pt3dadd( -18.1419, -31.3402, -49.7429, 1.84 ) }
    dend_25 { pt3dadd( -18.5315, -31.3744, -49.9984, 2.21 ) }
    dend_25 { pt3dadd( -19.1512, -31.4649, -50.4557, 2.06 ) }
    dend_25 { pt3dadd( -20.1548, -31.6582, -51.2828, 0.29 ) }
    dend_25 { pt3dadd( -20.568, -31.7742, -51.6837, 0.29 ) }
    dend_25 { pt3dadd( -21.3749, -32.0684, -52.5917, 1.69 ) }
    dend_25 { pt3dadd( -21.6981, -32.2176, -52.9988, 1.99 ) }
    dend_25 { pt3dadd( -22.7839, -32.8192, -54.4982, 1.11 ) }
    dend_25 { pt3dadd( -23.2287, -33.1421, -55.1882, 1.11 ) }
    dend_25 { pt3dadd( -23.8764, -33.7756, -56.3675, 0.29 ) }
    dend_25 { pt3dadd( -24.0721, -34.0167, -56.7756, 0.29 ) }
    dend_25 { pt3dadd( -24.1245, -34.1041, -56.9081, 0.52 ) }
    dend_25 { pt3dadd( -24.2467, -34.373, -57.267, 0.52 ) }
    dend_25 { pt3dadd( -24.3277, -34.7322, -57.701, 0.22 ) }
    dend_25 { pt3dadd( -24.3454, -34.9743, -57.9947, 0.22 ) }
    dend_25 { pt3dadd( -24.3449, -35.0058, -58.0325, 0.22 ) }
    dend_25 { pt3dadd( -24.2695, -36.4462, -59.7003, 2.06 ) }
    dend_25 { pt3dadd( -24.2538, -36.8327, -60.1321, 2.36 ) }
    dend_25 { pt3dadd( -24.2736, -38.0476, -61.4813, 0.22 ) }
    dend_25 { pt3dadd( -24.2881, -38.3362, -61.8197, 0.22 ) }
    dend_25 { pt3dadd( -24.3109, -38.6744, -62.1998, 0.22 ) }
    dend_25 { pt3dadd( -24.3483, -39.3257, -62.8786, 1.33 ) }
    dend_25 { pt3dadd( -24.3702, -39.7898, -63.3654, 1.47 ) }
    dend_25 { pt3dadd( -24.4444, -40.7051, -64.3866, 0.22 ) }
    dend_25 { pt3dadd( -24.6038, -41.601, -65.6115, 0.22 ) }
    dend_25 { pt3dadd( -24.6875, -42.0063, -66.2146, 1.4 ) }
    dend_25 { pt3dadd( -24.7266, -42.199, -66.5235, 1.69 ) }
    dend_25 { pt3dadd( -24.928, -43.4856, -68.6626, 0.22 ) }
    dend_25 { pt3dadd( -24.9791, -44.0137, -69.6035, 1.92 ) }
    dend_25 { pt3dadd( -25.061, -45.2879, -72.1939, 0.29 ) }
    dend_25 { pt3dadd( -25.0737, -45.5523, -72.8162, 0.29 ) }
    dend_25 { pt3dadd( -25.073, -45.5912, -72.9145, 0.29 ) }
    dend_25 { pt3dadd( -25.0566, -45.8886, -73.6207, 0.74 ) }
    dend_25 { pt3dadd( -24.9881, -46.4444, -74.8145, 1.55 ) }
    dend_25 { pt3dadd( -24.7391, -47.8072, -77.5135, 1.47 ) }
    dend_25 { pt3dadd( -24.4425, -49.0941, -79.8149, 0.29 ) }
    dend_25 { pt3dadd( -24.3691, -49.4305, -80.4069, 0.29 ) }
    dend_25 { pt3dadd( -24.2473, -50.0511, -81.4295, 1.4 ) }
    dend_25 { pt3dadd( -24.0585, -51.1426, -83.0568, 1.69 ) }
    dend_25 { pt3dadd( -24.0032, -51.4103, -83.4007, 1.69 ) }
    dend_25 { pt3dadd( -23.5458, -52.9792, -85.1422, 0.22 ) }
    dend_25 { pt3dadd( -23.5221, -53.0471, -85.2196, 0.22 ) }
    dend_25 { pt3dadd( -23.4066, -53.336, -85.5735, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_25 { pt3dadd( -23.2116, -53.7694, -86.1383, 1.47 ) }
    dend_25 { pt3dadd( -22.7049, -54.8924, -87.5696, 0.22 ) }
    dend_25 { pt3dadd( -22.5721, -55.1767, -87.9284, 1.4 ) }
    dend_25 { pt3dadd( -22.1108, -56.0828, -89.1723, 1.4 ) }
    dend_25 { pt3dadd( -21.7285, -56.7955, -90.219, 0.22 ) }
    dend_25 { pt3dadd( -21.3099, -57.5329, -91.5187, 1.62 ) }
    dend_25 { pt3dadd( -21.2973, -57.5546, -91.5616, 1.62 ) }
    dend_25 { pt3dadd( -21.19, -57.7709, -92.0207, 1.62 ) }
    dend_25 { pt3dadd( -20.789, -58.8087, -94.3425, 0.15 ) }
    dend_25 { pt3dadd( -20.7282, -59.0234, -94.8489, 1.4 ) }
    dend_25 { pt3dadd( -20.5949, -60.0695, -97.6286, 1.11 ) }
    dend_25 { pt3dadd( -20.5954, -60.0849, -97.6678, 1.11 ) }
    dend_25 { pt3dadd( -20.6948, -60.6312, -98.954, 0.37 ) }
    dend_25 { pt3dadd( -20.7825, -60.8714, -99.4483, 0.74 ) }
    dend_25 { pt3dadd( -20.8624, -61.0258, -99.7051, 0.88 ) }
    dend_25 { pt3dadd( -21.4146, -62.0512, -101.186, 0.22 ) }
    dend_25 { pt3dadd( -21.6592, -62.5603, -101.684, 1.33 ) }
    dend_25 { pt3dadd( -21.8309, -63.0849, -102.076, 1.11 ) }
    dend_25 { pt3dadd( -21.9864, -63.7535, -102.5, 0.22 ) }
    dend_25 { pt3dadd( -21.9933, -63.7961, -102.525, 0.22 ) }
    dend_25 { pt3dadd( -22.0749, -64.5583, -102.869, 0.22 ) }
    dend_25 { pt3dadd( -22.1165, -65.3881, -103.01, 0.22 ) }
    dend_25 { pt3dadd( -22.0831, -66.6284, -103.144, 1.84 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 23/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 12.9447, 86.6219, -73.4011, 0.22 ) }
    dend_22 { pt3dadd( 12.473, 88.6432, -73.6077, 0.22 ) }
    dend_22 { pt3dadd( 12.4408, 88.797, -73.6218, 0.22 ) }
    dend_22 { pt3dadd( 12.2443, 89.9971, -73.7956, 0.22 ) }
    dend_22 { pt3dadd( 12.176, 90.9145, -74.0287, 0.66 ) }
    dend_22 { pt3dadd( 12.1765, 91.0543, -74.0728, 0.66 ) }
    dend_22 { pt3dadd( 12.2153, 91.5296, -74.2753, 0.66 ) }
    dend_22 { pt3dadd( 12.2329, 91.5962, -74.3134, 0.66 ) }
    dend_22 { pt3dadd( 12.516, 92.3787, -74.8315, 0.22 ) }
    dend_22 { pt3dadd( 13.0111, 93.3487, -75.575, 0.88 ) }
    dend_22 { pt3dadd( 13.2146, 93.6759, -75.8324, 0.88 ) }
    dend_22 { pt3dadd( 13.9243, 94.6791, -76.6027, 0.29 ) }
    dend_22 { pt3dadd( 13.9916, 94.7635, -76.6539, 0.29 ) }
    dend_22 { pt3dadd( 14.5537, 95.4578, -76.9413, 0.29 ) }
    dend_22 { pt3dadd( 15.3754, 96.4816, -77.1395, 1.03 ) }
    dend_22 { pt3dadd( 15.7398, 96.9496, -77.1614, 1.25 ) }
    dend_22 { pt3dadd( 16.6544, 98.1807, -77.1202, 0.37 ) }
    dend_22 { pt3dadd( 17.858, 99.7987, -76.9595, 0.22 ) }
    dend_22 { pt3dadd( 18.8377, 101.146, -76.7872, 0.22 ) }
    dend_22 { pt3dadd( 19.6426, 102.301, -76.5809, 0.81 ) }
    dend_22 { pt3dadd( 20.2888, 103.296, -76.3312, 0.22 ) }
    dend_22 { pt3dadd( 20.5804, 103.784, -76.1887, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 12.9447, 86.6219, -73.4011, 0.81 ) }
    dend_21 { pt3dadd( 13.8868, 88.6125, -74.2804, 0.81 ) }
    dend_21 { pt3dadd( 14.4847, 89.6446, -74.6934, 0.22 ) }
    dend_21 { pt3dadd( 14.9779, 90.4657, -74.9785, 0.22 ) }
    dend_21 { pt3dadd( 15.4885, 91.3347, -75.25, 1.18 ) }
    dend_21 { pt3dadd( 15.8681, 91.9932, -75.418, 1.18 ) }
    dend_21 { pt3dadd( 15.9116, 92.0675, -75.437, 1.18 ) }
    dend_21 { pt3dadd( 16.7981, 93.6834, -75.7158, 0.29 ) }
    dend_21 { pt3dadd( 17.2355, 94.4155, -75.8166, 0.44 ) }
    dend_21 { pt3dadd( 17.4934, 94.7644, -75.9852, 0.44 ) }
    dend_21 { pt3dadd( 18.2101, 95.7084, -76.6721, 0.22 ) }
    dend_21 { pt3dadd( 18.6777, 96.3423, -77.2284, 1.18 ) }
    dend_21 { pt3dadd( 18.9378, 96.6577, -77.7381, 1.47 ) }
    dend_21 { pt3dadd( 19.1039, 96.8441, -78.2012, 1.47 ) }
    dend_21 { pt3dadd( 20.4016, 98.4036, -82.7919, 0.52 ) }
    dend_21 { pt3dadd( 20.5962, 98.6234, -83.6055, 0.81 ) }
    dend_21 { pt3dadd( 20.7069, 98.7439, -84.1444, 0.81 ) }
    dend_21 { pt3dadd( 21.9403, 99.9782, -90.8852, 1.11 ) }
    dend_21 { pt3dadd( 22.5839, 100.546, -95.1621, 0.59 ) }
    dend_21 { pt3dadd( 22.7796, 100.683, -96.9555, 0.29 ) }
    dend_21 { pt3dadd( 22.8901, 100.649, -99.4187, 0.74 ) }
    dend_21 { pt3dadd( 22.8898, 100.637, -99.5177, 0.74 ) }
    dend_21 { pt3dadd( 22.7764, 100.31, -100.437, 0.81 ) }
    dend_21 { pt3dadd( 22.1585, 99.0576, -101.464, 0.29 ) }
    dend_21 { pt3dadd( 21.6546, 98.0206, -101.986, 0.29 ) }
    dend_21 { pt3dadd( 20.9048, 96.4179, -102.644, 0.29 ) }
    dend_21 { pt3dadd( 20.0744, 94.7733, -103.205, 0.29 ) }
    dend_21 { pt3dadd( 19.1921, 93.0317, -103.787, 0.22 ) }
    dend_21 { pt3dadd( 18.6331, 91.9475, -104.138, 0.59 ) }
    dend_21 { pt3dadd( 18.477, 91.6224, -104.223, 0.59 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.0495363, 76.2352, -29.4691, 0.22 ) }
    dend_19 { pt3dadd( -2.04759, 77.8033, -28.5132, 0.22 ) }
    dend_19 { pt3dadd( -2.52674, 78.1707, -28.3312, 0.66 ) }
    dend_19 { pt3dadd( -3.43445, 78.8653, -28.0369, 0.22 ) }
    dend_19 { pt3dadd( -4.35199, 79.5584, -27.7705, 1.4 ) }
    dend_19 { pt3dadd( -4.84406, 79.9121, -27.628, 1.4 ) }
    dend_19 { pt3dadd( -6.77691, 81.2875, -27.0748, 0.22 ) }
    dend_19 { pt3dadd( -7.83449, 82.0001, -26.8467, 0.22 ) }
    dend_19 { pt3dadd( -9.38067, 83.0215, -26.5549, 1.47 ) }
    dend_19 { pt3dadd( -9.70321, 83.238, -26.5027, 1.84 ) }
    dend_19 { pt3dadd( -11.8238, 84.7058, -26.2337, 0.22 ) }
    dend_19 { pt3dadd( -12.1728, 84.9531, -26.198, 0.52 ) }
    dend_19 { pt3dadd( -13.3078, 85.8015, -26.1531, 0.15 ) }
    dend_19 { pt3dadd( -13.9901, 86.3412, -26.1501, 0.88 ) }
    dend_19 { pt3dadd( -14.7989, 87.0275, -26.1943, 0.22 ) }
    dend_19 { pt3dadd( -15.8542, 87.9874, -26.3106, 1.84 ) }
    dend_19 { pt3dadd( -16.2182, 88.3381, -26.3799, 1.99 ) }
    dend_19 { pt3dadd( -17.8825, 89.9446, -26.7084, 0.22 ) }
    dend_19 { pt3dadd( -18.3814, 90.4392, -26.8105, 1.11 ) }
    dend_19 { pt3dadd( -18.8073, 90.8632, -26.8884, 1.25 ) }
    dend_19 { pt3dadd( -19.8742, 91.8834, -27.0411, 0.15 ) }
    dend_19 { pt3dadd( -20.4583, 92.4208, -27.0859, 0.44 ) }
    dend_19 { pt3dadd( -20.6911, 92.6275, -27.0905, 0.44 ) }
    dend_19 { pt3dadd( -20.763, 92.6894, -27.0869, 0.44 ) }
    dend_19 { pt3dadd( -21.9468, 93.6798, -26.9519, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_19 { pt3dadd( -22.727, 94.3506, -26.8239, 0.15 ) }
    dend_19 { pt3dadd( -22.7785, 94.3977, -26.8125, 0.15 ) }
    dend_19 { pt3dadd( -23.1668, 94.7781, -26.7256, 0.66 ) }
    dend_19 { pt3dadd( -23.6499, 95.2859, -26.6376, 0.81 ) }
    dend_19 { pt3dadd( -24.6323, 96.3743, -26.5136, 0.15 ) }
    dend_19 { pt3dadd( -25.0057, 96.8127, -26.4926, 0.15 ) }
    dend_19 { pt3dadd( -25.8394, 97.8493, -26.4881, 1.47 ) }
    dend_19 { pt3dadd( -26.2295, 98.3536, -26.4984, 1.47 ) }
    dend_19 { pt3dadd( -26.9509, 99.3147, -26.5387, 0.22 ) }
    dend_19 { pt3dadd( -27.2644, 99.7546, -26.5883, 0.52 ) }
    dend_19 { pt3dadd( -27.4034, 99.9592, -26.6281, 0.52 ) }
    dend_19 { pt3dadd( -27.9565, 100.785, -26.8251, 0.15 ) }
    dend_19 { pt3dadd( -28.5907, 101.744, -27.1514, 1.33 ) }
    dend_19 { pt3dadd( -28.8188, 102.087, -27.2856, 1.69 ) }
    dend_19 { pt3dadd( -29.5229, 103.139, -27.7667, 0.22 ) }
    dend_19 { pt3dadd( -29.8745, 103.671, -28.021, 0.59 ) }
    dend_19 { pt3dadd( -30.1718, 104.122, -28.2496, 0.59 ) }
    dend_19 { pt3dadd( -30.7017, 104.913, -28.6964, 0.15 ) }
    dend_19 { pt3dadd( -31.554, 106.169, -29.4822, 1.33 ) }
    dend_19 { pt3dadd( -31.9082, 106.689, -29.8145, 1.47 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -0.0495363, 76.2352, -29.4691, 0.29 ) }
    dend_16 { pt3dadd( -1.23563, 77.2439, -30.8933, 0.29 ) }
    dend_16 { pt3dadd( -1.70151, 77.6323, -31.4123, 0.52 ) }
    dend_16 { pt3dadd( -2.43661, 78.2394, -32.1613, 0.74 ) }
    dend_16 { pt3dadd( -2.73366, 78.4811, -32.4385, 0.88 ) }
    dend_16 { pt3dadd( -3.53773, 79.1468, -33.1419, 0.15 ) }
    dend_16 { pt3dadd( -3.83996, 79.4103, -33.3925, 0.15 ) }
    dend_16 { pt3dadd( -4.24529, 79.8025, -33.6737, 1.33 ) }
    dend_16 { pt3dadd( -4.65076, 80.2236, -33.9192, 1.77 ) }
    dend_16 { pt3dadd( -5.44628, 81.0731, -34.3198, 0.22 ) }
    dend_16 { pt3dadd( -5.77932, 81.4429, -34.4636, 0.22 ) }
    dend_16 { pt3dadd( -6.21955, 81.9917, -34.6239, 0.88 ) }
    dend_16 { pt3dadd( -6.41805, 82.2714, -34.7001, 0.88 ) }
    dend_16 { pt3dadd( -6.88352, 83.0079, -34.884, 0.15 ) }
    dend_16 { pt3dadd( -7.17075, 83.5824, -34.9808, 0.15 ) }
    dend_16 { pt3dadd( -7.34254, 84.0592, -35.021, 0.15 ) }
    dend_16 { pt3dadd( -7.59449, 85.0282, -35.0664, 2.14 ) }
    dend_16 { pt3dadd( -7.64807, 85.3668, -35.0697, 2.14 ) }
    dend_16 { pt3dadd( -7.65131, 85.4324, -35.068, 2.14 ) }
    dend_16 { pt3dadd( -7.55157, 86.839, -34.9765, 0.15 ) }
    dend_16 { pt3dadd( -7.46112, 87.2878, -34.94, 0.15 ) }
    dend_16 { pt3dadd( -7.34617, 87.6686, -34.9227, 0.15 ) }
    dend_16 { pt3dadd( -7.19563, 88.0655, -34.9167, 0.66 ) }
    dend_16 { pt3dadd( -6.99587, 88.5346, -34.943, 0.81 ) }
    dend_16 { pt3dadd( -6.9554, 88.6167, -34.9545, 0.81 ) }
    dend_16 { pt3dadd( -6.56842, 89.2331, -35.1902, 0.15 ) }
    dend_16 { pt3dadd( -6.18707, 89.8525, -35.4796, 0.88 ) }
    dend_16 { pt3dadd( -6.15997, 89.8958, -35.5063, 0.88 ) }
    dend_16 { pt3dadd( -6.02708, 90.12, -35.6563, 0.88 ) }
    dend_16 { pt3dadd( -5.97403, 90.2201, -35.723, 0.88 ) }
    dend_16 { pt3dadd( -5.56478, 91.1355, -36.2835, 0.15 ) }
    dend_16 { pt3dadd( -5.44074, 91.4787, -36.4853, 0.15 ) }
    dend_16 { pt3dadd( -5.22832, 92.1962, -36.8884, 1.11 ) }
    dend_16 { pt3dadd( -5.11031, 92.7288, -37.1806, 1.11 ) }
    dend_16 { pt3dadd( -4.86992, 94.2631, -37.9907, 0.22 ) }
    dend_16 { pt3dadd( -4.8207, 94.7784, -38.2868, 0.22 ) }
    dend_16 { pt3dadd( -4.79591, 95.5623, -38.7538, 1.47 ) }
    dend_16 { pt3dadd( -4.81192, 96.1347, -39.1077, 1.69 ) }
    dend_16 { pt3dadd( -4.9881, 97.6627, -40.3761, 0.15 ) }
    dend_16 { pt3dadd( -5.07423, 98.0467, -40.7935, 0.88 ) }
    dend_16 { pt3dadd( -5.43321, 99.0969, -42.1614, 0.22 ) }
    dend_16 { pt3dadd( -5.50711, 99.2805, -42.4318, 1.55 ) }
    dend_16 { pt3dadd( -5.67148, 99.6361, -42.9888, 1.84 ) }
    dend_16 { pt3dadd( -6.60479, 101.444, -45.9474, 0.59 ) }
    dend_16 { pt3dadd( -6.91259, 101.947, -46.81, 0.22 ) }
    dend_16 { pt3dadd( -7.04947, 102.164, -47.1624, 0.74 ) }
    dend_16 { pt3dadd( -7.49511, 102.841, -48.1258, 0.15 ) }
    dend_16 { pt3dadd( -7.77705, 103.263, -48.6602, 0.15 ) }
    dend_16 { pt3dadd( -7.99906, 103.579, -49.0, 0.81 ) }
    dend_16 { pt3dadd( -8.21703, 103.847, -49.2201, 0.81 ) }
    dend_16 { pt3dadd( -8.81684, 104.509, -49.9374, 0.15 ) }
    dend_16 { pt3dadd( -9.07567, 104.77, -50.3567, 0.96 ) }
    dend_16 { pt3dadd( -9.31845, 104.994, -50.7934, 0.96 ) }
    dend_16 { pt3dadd( -10.0004, 105.586, -52.0927, 0.22 ) }
    dend_16 { pt3dadd( -10.3707, 105.903, -52.8103, 1.4 ) }
    dend_16 { pt3dadd( -11.1693, 106.59, -54.3971, 1.69 ) }
    dend_16 { pt3dadd( -12.0925, 107.405, -56.2366, 0.74 ) }
    dend_16 { pt3dadd( -12.4624, 107.743, -56.9694, 0.22 ) }
    dend_16 { pt3dadd( -12.654, 107.923, -57.3191, 0.59 ) }
    dend_16 { pt3dadd( -12.9811, 108.24, -57.7677, 0.22 ) }
    dend_16 { pt3dadd( -13.0167, 108.277, -57.7942, 0.22 ) }
    dend_16 { pt3dadd( -13.4513, 108.741, -57.8795, 0.22 ) }
    dend_16 { pt3dadd( -13.7288, 109.058, -57.858, 0.52 ) }
    dend_16 { pt3dadd( -14.3015, 109.822, -57.7636, 0.15 ) }
    dend_16 { pt3dadd( -14.8688, 110.701, -57.6142, 1.84 ) }
    dend_16 { pt3dadd( -15.608, 111.974, -57.3528, 0.15 ) }
    dend_16 { pt3dadd( -15.8087, 112.343, -57.2588, 0.29 ) }
    dend_16 { pt3dadd( -15.864, 112.462, -57.225, 0.29 ) }
    dend_16 { pt3dadd( -16.1338, 113.163, -57.0107, 0.15 ) }
    dend_16 { pt3dadd( -16.3248, 113.777, -56.817, 0.74 ) }
    dend_16 { pt3dadd( -16.3769, 113.983, -56.7608, 0.74 ) }
    dend_16 { pt3dadd( -16.6324, 115.063, -56.513, 0.22 ) }
    dend_16 { pt3dadd( -16.8817, 116.029, -56.3064, 0.22 ) }
    dend_16 { pt3dadd( -17.0994, 116.835, -56.1468, 1.69 ) }
    dend_16 { pt3dadd( -17.192, 117.178, -56.0869, 1.69 ) }
    dend_16 { pt3dadd( -17.414, 118.132, -55.9544, 0.22 ) }
    dend_16 { pt3dadd( -17.4975, 118.547, -55.9087, 0.37 ) }
    dend_16 { pt3dadd( -17.621, 119.329, -55.8575, 0.15 ) }
    dend_16 { pt3dadd( -17.6485, 119.521, -55.8505, 0.37 ) }
    dend_16 { pt3dadd( -17.7405, 120.224, -55.8575, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( -17.7934, 120.816, -55.905, 0.74 ) }
    dend_16 { pt3dadd( -17.8018, 120.938, -55.9222, 0.74 ) }
    dend_16 { pt3dadd( -17.8135, 121.102, -55.9534, 0.74 ) }
    dend_16 { pt3dadd( -17.866, 121.931, -56.1295, 0.15 ) }
    dend_16 { pt3dadd( -17.9104, 122.519, -56.2587, 1.03 ) }
    dend_16 { pt3dadd( -18.0296, 123.727, -56.4958, 0.15 ) }
    dend_16 { pt3dadd( -18.1542, 124.792, -56.6858, 1.99 ) }
    dend_16 { pt3dadd( -18.2273, 125.231, -56.7579, 1.99 ) }
    dend_16 { pt3dadd( -18.4604, 126.213, -56.9073, 0.22 ) }
    dend_16 { pt3dadd( -18.6514, 126.841, -56.9973, 0.81 ) }
    dend_16 { pt3dadd( -18.9725, 127.702, -57.1063, 0.22 ) }
    dend_16 { pt3dadd( -18.9965, 127.753, -57.112, 0.22 ) }
    dend_16 { pt3dadd( -19.3462, 128.421, -57.2005, 0.22 ) }
    dend_16 { pt3dadd( -19.6886, 128.994, -57.3179, 0.22 ) }
    dend_16 { pt3dadd( -20.0043, 129.479, -57.4838, 0.22 ) }
    dend_16 { pt3dadd( -20.4, 130.113, -57.7748, 0.22 ) }
    dend_16 { pt3dadd( -20.6272, 130.52, -57.9636, 1.03 ) }
    dend_16 { pt3dadd( -20.7379, 130.746, -58.0632, 1.03 ) }
    dend_16 { pt3dadd( -21.1701, 131.862, -58.4987, 0.22 ) }
    dend_16 { pt3dadd( -21.5132, 132.793, -58.86, 0.59 ) }
    dend_16 { pt3dadd( -21.8234, 133.645, -59.1847, 0.22 ) }
    dend_16 { pt3dadd( -22.1544, 134.639, -59.5565, 2.06 ) }
    dend_16 { pt3dadd( -22.2788, 135.062, -59.6998, 1.69 ) }
    dend_16 { pt3dadd( -22.5499, 136.207, -60.0337, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -34.8157, 91.263, -6.80435, 0.22 ) }
    dend_10 { pt3dadd( -35.3545, 92.9711, -7.39683, 0.22 ) }
    dend_10 { pt3dadd( -35.6508, 93.8202, -7.7434, 0.66 ) }
    dend_10 { pt3dadd( -35.8651, 94.4251, -7.99814, 0.81 ) }
    dend_10 { pt3dadd( -36.5385, 96.2263, -8.75132, 0.22 ) }
    dend_10 { pt3dadd( -36.9865, 97.337, -9.20382, 0.66 ) }
    dend_10 { pt3dadd( -37.3406, 98.0776, -9.49248, 0.96 ) }
    dend_10 { pt3dadd( -38.2985, 99.8166, -10.1747, 0.22 ) }
    dend_10 { pt3dadd( -38.5332, 100.209, -10.3184, 0.22 ) }
    dend_10 { pt3dadd( -38.8618, 100.754, -10.4912, 0.52 ) }
    dend_10 { pt3dadd( -39.2111, 101.397, -10.65, 0.52 ) }
    dend_10 { pt3dadd( -40.0222, 103.11, -10.99, 0.22 ) }
    dend_10 { pt3dadd( -40.5221, 104.339, -11.2128, 0.22 ) }
    dend_10 { pt3dadd( -40.9327, 105.488, -11.3339, 1.77 ) }
    dend_10 { pt3dadd( -41.1464, 106.221, -11.3493, 2.06 ) }
    dend_10 { pt3dadd( -41.6834, 108.887, -11.1609, 0.22 ) }
    dend_10 { pt3dadd( -41.7623, 109.535, -11.0758, 0.59 ) }
    dend_10 { pt3dadd( -41.8076, 110.46, -10.8936, 0.66 ) }
    dend_10 { pt3dadd( -41.8816, 113.026, -10.2695, 0.22 ) }
    dend_10 { pt3dadd( -41.9084, 115.245, -9.65496, 0.22 ) }
    dend_10 { pt3dadd( -41.9118, 117.503, -8.97643, 1.47 ) }
    dend_10 { pt3dadd( -41.9094, 118.326, -8.70273, 1.92 ) }
    dend_10 { pt3dadd( -41.9251, 120.897, -7.89667, 0.22 ) }
    dend_10 { pt3dadd( -41.9384, 121.714, -7.66776, 0.22 ) }
    dend_10 { pt3dadd( -41.9688, 122.757, -7.43968, 0.74 ) }
    dend_10 { pt3dadd( -41.9999, 123.126, -7.38338, 0.74 ) }
    dend_10 { pt3dadd( -42.2426, 124.757, -7.19545, 0.15 ) }
    dend_10 { pt3dadd( -42.5038, 126.147, -7.0182, 0.15 ) }
    dend_10 { pt3dadd( -42.703, 127.063, -6.90302, 0.96 ) }
    dend_10 { pt3dadd( -42.8078, 127.526, -6.83768, 1.33 ) }
    dend_10 { pt3dadd( -42.9065, 127.933, -6.78062, 1.33 ) }
    dend_10 { pt3dadd( -42.9328, 128.033, -6.76752, 1.33 ) }
    dend_10 { pt3dadd( -43.5269, 129.896, -6.55809, 0.22 ) }
    dend_10 { pt3dadd( -43.7684, 130.558, -6.47193, 0.81 ) }
    dend_10 { pt3dadd( -44.0847, 131.328, -6.36839, 0.81 ) }
    dend_10 { pt3dadd( -44.5814, 132.475, -6.21204, 0.22 ) }
    dend_10 { pt3dadd( -44.7626, 132.866, -6.16177, 0.44 ) }
    dend_10 { pt3dadd( -45.5945, 134.515, -5.97356, 0.22 ) }
    dend_10 { pt3dadd( -45.8739, 135.005, -5.92696, 0.59 ) }
    dend_10 { pt3dadd( -46.2787, 135.705, -5.82366, 0.59 ) }
    dend_10 { pt3dadd( -46.8637, 136.727, -5.63747, 0.15 ) }
    dend_10 { pt3dadd( -47.5046, 137.854, -5.40229, 0.15 ) }
    dend_10 { pt3dadd( -48.0344, 138.799, -5.19781, 1.11 ) }
    dend_10 { pt3dadd( -48.3649, 139.382, -5.06936, 1.62 ) }
    dend_10 { pt3dadd( -49.5127, 141.324, -4.65475, 0.15 ) }
    dend_10 { pt3dadd( -49.8531, 141.877, -4.53433, 0.59 ) }
    dend_10 { pt3dadd( -50.0079, 142.117, -4.48413, 0.59 ) }
    dend_10 { pt3dadd( -50.538, 142.984, -4.31767, 0.22 ) }
    dend_10 { pt3dadd( -50.9723, 143.725, -4.19551, 0.22 ) }
    dend_10 { pt3dadd( -51.205, 144.138, -4.14717, 0.59 ) }
    dend_10 { pt3dadd( -51.4593, 144.614, -4.12535, 0.59 ) }
    dend_10 { pt3dadd( -51.8701, 145.504, -4.08644, 0.22 ) }
    dend_10 { pt3dadd( -52.3756, 146.854, -4.03539, 0.22 ) }
    dend_10 { pt3dadd( -52.3756, 146.854, -4.03539, 0.66 ) }
    dend_10 { pt3dadd( -52.4764, 147.557, -4.03589, 0.66 ) }
    dend_10 { pt3dadd( -52.5924, 148.783, -4.05324, 0.22 ) }
    dend_10 { pt3dadd( -52.6464, 149.726, -4.07733, 1.4 ) }
    dend_10 { pt3dadd( -52.6646, 150.295, -4.09757, 1.77 ) }
    dend_10 { pt3dadd( -52.7204, 153.043, -4.21706, 0.22 ) }
    dend_10 { pt3dadd( -52.7333, 153.909, -4.25607, 0.96 ) }
    dend_10 { pt3dadd( -52.742, 154.658, -4.29095, 0.96 ) }
    dend_10 { pt3dadd( -52.7628, 155.973, -4.3541, 0.22 ) }
    dend_10 { pt3dadd( -52.8166, 157.687, -4.43191, 0.22 ) }
    dend_10 { pt3dadd( -52.8721, 158.9, -4.48267, 0.88 ) }
    dend_10 { pt3dadd( -52.9073, 159.559, -4.50671, 1.25 ) }
    dend_10 { pt3dadd( -52.9581, 160.706, -4.54197, 0.22 ) }
    dend_10 { pt3dadd( -52.9653, 160.899, -4.54373, 0.22 ) }
    dend_10 { pt3dadd( -52.9517, 161.614, -4.50477, 0.22 ) }
    dend_10 { pt3dadd( -52.8942, 162.206, -4.44043, 0.22 ) }
    dend_10 { pt3dadd( -52.6587, 163.601, -4.19973, 0.22 ) }
    dend_10 { pt3dadd( -52.5357, 164.174, -4.0829, 0.81 ) }
    dend_10 { pt3dadd( -52.3188, 164.972, -3.8394, 0.81 ) }
    dend_10 { pt3dadd( -51.8255, 166.616, -3.24332, 0.15 ) }
    dend_10 { pt3dadd( -51.4349, 167.782, -2.76508, 0.15 ) }
    dend_10 { pt3dadd( -50.815, 169.536, -1.96846, 1.4 ) }
    dend_10 { pt3dadd( -50.6633, 169.97, -1.75718, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_10 { pt3dadd( -49.8866, 172.292, -0.614312, 0.22 ) }
    dend_10 { pt3dadd( -49.8612, 172.37, -0.575959, 0.22 ) }
    dend_10 { pt3dadd( -49.7727, 172.665, -0.429945, 0.22 ) }
    dend_10 { pt3dadd( -49.751, 172.745, -0.392437, 0.22 ) }
    dend_10 { pt3dadd( -49.5206, 173.74, 0.0240371, 0.22 ) }
    dend_10 { pt3dadd( -49.2385, 175.018, 0.473642, 0.88 ) }
    dend_10 { pt3dadd( -49.213, 175.115, 0.501527, 0.88 ) }
    dend_10 { pt3dadd( -49.0867, 175.502, 0.61609, 1.03 ) }
    dend_10 { pt3dadd( -48.4564, 177.234, 1.12944, 0.22 ) }
    dend_10 { pt3dadd( -47.7271, 179.059, 1.66117, 1.55 ) }
    dend_10 { pt3dadd( -47.3933, 179.82, 1.9092, 1.92 ) }
    dend_10 { pt3dadd( -46.4267, 181.97, 2.63532, 0.22 ) }
    dend_10 { pt3dadd( -46.1622, 182.554, 2.83951, 0.22 ) }
    dend_10 { pt3dadd( -45.933, 183.045, 3.01792, 0.52 ) }
    dend_10 { pt3dadd( -45.7174, 183.445, 3.17863, 0.52 ) }
    dend_10 { pt3dadd( -44.9253, 184.827, 3.74432, 0.22 ) }
    dend_10 { pt3dadd( -44.7055, 185.206, 3.92958, 0.59 ) }
    dend_10 { pt3dadd( -44.4936, 185.569, 4.13397, 0.59 ) }
    dend_10 { pt3dadd( -44.4229, 185.691, 4.2007, 0.59 ) }
    dend_10 { pt3dadd( -43.7819, 186.733, 4.73967, 0.22 ) }
    dend_10 { pt3dadd( -43.7416, 186.807, 4.7724, 0.22 ) }
    dend_10 { pt3dadd( -43.1674, 187.963, 5.19406, 0.22 ) }
    dend_10 { pt3dadd( -43.14, 188.032, 5.21569, 0.22 ) }
    dend_10 { pt3dadd( -42.7699, 189.295, 5.51974, 0.88 ) }
    dend_10 { pt3dadd( -42.6259, 189.962, 5.64046, 1.47 ) }
    dend_10 { pt3dadd( -42.3885, 191.752, 5.88822, 0.22 ) }
    dend_10 { pt3dadd( -42.3823, 191.828, 5.89745, 0.22 ) }
    dend_10 { pt3dadd( -42.3138, 193.434, 6.041, 0.22 ) }
    dend_10 { pt3dadd( -42.2321, 194.828, 6.13448, 0.88 ) }
    dend_10 { pt3dadd( -42.1916, 195.321, 6.15311, 1.33 ) }
    dend_10 { pt3dadd( -42.0181, 196.827, 6.17352, 0.15 ) }
    dend_10 { pt3dadd( -41.9373, 197.391, 6.16198, 0.15 ) }
    dend_10 { pt3dadd( -41.7048, 198.865, 6.13042, 0.15 ) }
    dend_10 { pt3dadd( -41.2959, 201.084, 6.07087, 1.77 ) }
    dend_10 { pt3dadd( -40.8486, 203.22, 5.99405, 0.22 ) }
    dend_10 { pt3dadd( -40.6066, 204.291, 5.93591, 0.22 ) }
    dend_10 { pt3dadd( -40.4341, 204.963, 5.87426, 1.25 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -34.8157, 91.263, -6.80435, 0.22 ) }
    dend_3 { pt3dadd( -35.6992, 92.7229, -8.2286, 0.22 ) }
    dend_3 { pt3dadd( -35.716, 92.7715, -8.28204, 0.22 ) }
    dend_3 { pt3dadd( -35.815, 93.2537, -8.79421, 0.22 ) }
    dend_3 { pt3dadd( -35.9058, 93.8916, -9.46213, 1.11 ) }
    dend_3 { pt3dadd( -35.9691, 94.4731, -10.0931, 1.92 ) }
    dend_3 { pt3dadd( -36.0168, 94.9108, -10.5536, 2.14 ) }
    dend_3 { pt3dadd( -36.1416, 97.1173, -12.6291, 0.22 ) }
    dend_3 { pt3dadd( -36.1383, 97.5832, -13.1675, 0.22 ) }
    dend_3 { pt3dadd( -36.1351, 97.6362, -13.2325, 0.22 ) }
    dend_3 { pt3dadd( -36.0502, 98.4539, -14.2543, 0.22 ) }
    dend_3 { pt3dadd( -35.9661, 98.9195, -14.7983, 0.88 ) }
    dend_3 { pt3dadd( -35.8785, 99.3773, -15.3033, 0.88 ) }
    dend_3 { pt3dadd( -35.4188, 101.966, -17.8704, 1.25 ) }
    dend_3 { pt3dadd( -35.2756, 102.908, -18.7566, 1.62 ) }
    dend_3 { pt3dadd( -35.2657, 102.97, -18.8115, 1.62 ) }
    dend_3 { pt3dadd( -35.016, 104.33, -19.9006, 0.29 ) }
    dend_3 { pt3dadd( -34.9403, 104.743, -20.2101, 0.66 ) }
    dend_3 { pt3dadd( -34.931, 104.805, -20.248, 0.66 ) }
    dend_3 { pt3dadd( -34.8864, 105.337, -20.5752, 0.66 ) }
    dend_3 { pt3dadd( -34.8818, 105.396, -20.6181, 0.66 ) }
    dend_3 { pt3dadd( -34.7731, 106.582, -21.5724, 0.22 ) }
    dend_3 { pt3dadd( -34.6766, 107.853, -22.7504, 2.14 ) }
    dend_3 { pt3dadd( -34.6465, 108.3, -23.1796, 2.8 ) }
    dend_3 { pt3dadd( -34.472, 111.195, -26.0194, 0.37 ) }
    dend_3 { pt3dadd( -34.4077, 112.293, -27.1137, 0.37 ) }
    dend_3 { pt3dadd( -34.321, 113.957, -28.7572, 0.96 ) }
    dend_3 { pt3dadd( -34.221, 115.564, -30.3046, 0.22 ) }
    dend_3 { pt3dadd( -34.1686, 116.224, -30.9236, 1.11 ) }
    dend_3 { pt3dadd( -34.1631, 116.28, -30.9716, 1.11 ) }
    dend_3 { pt3dadd( -34.129, 116.593, -31.184, 1.11 ) }
    dend_3 { pt3dadd( -33.9969, 117.703, -31.8442, 0.15 ) }
    dend_3 { pt3dadd( -33.8984, 118.75, -32.3293, 0.15 ) }
    dend_3 { pt3dadd( -33.81, 119.627, -32.6911, 0.15 ) }
    dend_3 { pt3dadd( -33.7191, 120.872, -33.2264, 1.99 ) }
    dend_3 { pt3dadd( -33.7065, 121.652, -33.5626, 2.21 ) }
    dend_3 { pt3dadd( -33.7714, 122.879, -34.059, 0.74 ) }
    dend_3 { pt3dadd( -33.9371, 124.096, -34.4967, 0.29 ) }
    dend_3 { pt3dadd( -33.9516, 124.165, -34.5176, 0.29 ) }
    dend_3 { pt3dadd( -34.0941, 124.746, -34.6786, 0.52 ) }
    dend_3 { pt3dadd( -34.22, 125.249, -34.8164, 0.52 ) }
    dend_3 { pt3dadd( -34.3837, 125.973, -35.0336, 0.29 ) }
    dend_3 { pt3dadd( -34.4688, 126.431, -35.1931, 0.74 ) }
    dend_3 { pt3dadd( -34.5376, 127.178, -35.5759, 0.96 ) }
    dend_3 { pt3dadd( -34.5816, 128.465, -36.3441, 0.22 ) }
    dend_3 { pt3dadd( -34.5709, 129.549, -37.0534, 1.55 ) }
    dend_3 { pt3dadd( -34.5602, 130.121, -37.4445, 1.99 ) }
    dend_3 { pt3dadd( -34.5799, 130.996, -38.1811, 1.99 ) }
    dend_3 { pt3dadd( -34.7374, 132.632, -39.7462, 0.37 ) }
    dend_3 { pt3dadd( -34.8046, 132.86, -40.1732, 0.37 ) }
    dend_3 { pt3dadd( -34.9039, 133.05, -40.6633, 0.37 ) }
    dend_3 { pt3dadd( -35.0885, 133.28, -41.4007, 0.37 ) }
    dend_3 { pt3dadd( -35.7941, 133.904, -43.7753, 1.92 ) }
    dend_3 { pt3dadd( -36.021, 134.05, -44.4256, 2.43 ) }
    dend_3 { pt3dadd( -39.0117, 135.525, -51.9551, 0.37 ) }
    dend_3 { pt3dadd( -39.2724, 135.638, -52.5871, 0.44 ) }
    dend_3 { pt3dadd( -39.6106, 135.771, -53.3658, 0.29 ) }
    dend_3 { pt3dadd( -39.9038, 135.878, -53.9964, 0.29 ) }
    dend_3 { pt3dadd( -40.182, 135.989, -54.5013, 0.66 ) }
    dend_3 { pt3dadd( -40.3976, 136.082, -54.8631, 0.88 ) }
    dend_3 { pt3dadd( -41.1289, 136.374, -56.0264, 0.66 ) }
    dend_3 { pt3dadd( -41.498, 136.501, -56.7828, 0.22 ) }
    dend_3 { pt3dadd( -41.8208, 136.574, -57.5845, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_3 { pt3dadd( -42.2204, 136.661, -58.6537, 2.36 ) }
    dend_3 { pt3dadd( -43.2249, 136.85, -61.5203, 2.36 ) }
    dend_3 { pt3dadd( -44.6154, 137.052, -65.7088, 0.88 ) }
    dend_3 { pt3dadd( -45.0328, 137.092, -67.0408, 0.52 ) }
    dend_3 { pt3dadd( -45.8173, 137.114, -69.8511, 1.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 7.5164, -51.8067, -0.0562988, 0.37 ) }
    dend_47 { pt3dadd( 9.10706, -52.4685, -0.56021, 0.37 ) }
    dend_47 { pt3dadd( 9.92729, -52.8913, -0.81473, 0.29 ) }
    dend_47 { pt3dadd( 10.8995, -53.479, -1.06474, 0.66 ) }
    dend_47 { pt3dadd( 11.7901, -54.0551, -1.26497, 1.33 ) }
    dend_47 { pt3dadd( 12.3561, -54.4327, -1.38095, 1.62 ) }
    dend_47 { pt3dadd( 12.9846, -54.8577, -1.50235, 1.62 ) }
    dend_47 { pt3dadd( 13.8845, -55.5883, -1.66418, 0.59 ) }
    dend_47 { pt3dadd( 14.7353, -56.3638, -1.81963, 0.37 ) }
    dend_47 { pt3dadd( 15.1757, -56.8078, -1.93317, 0.74 ) }
    dend_47 { pt3dadd( 15.4837, -57.1519, -2.06346, 0.74 ) }
    dend_47 { pt3dadd( 15.5237, -57.2009, -2.08896, 0.74 ) }
    dend_47 { pt3dadd( 15.9304, -57.7783, -2.46455, 0.29 ) }
    dend_47 { pt3dadd( 16.4728, -58.6744, -3.04286, 0.29 ) }
    dend_47 { pt3dadd( 16.9574, -59.561, -3.49021, 1.92 ) }
    dend_47 { pt3dadd( 17.4946, -60.58, -3.87023, 3.09 ) }
    dend_47 { pt3dadd( 17.6568, -60.8799, -3.9417, 3.61 ) }
    dend_47 { pt3dadd( 18.1723, -61.7804, -4.03726, 3.32 ) }
    dend_47 { pt3dadd( 19.1008, -63.3311, -4.01575, 0.88 ) }
    dend_47 { pt3dadd( 20.0331, -64.753, -3.75837, 0.44 ) }
    dend_47 { pt3dadd( 20.5425, -65.4654, -3.5499, 0.44 ) }
    dend_47 { pt3dadd( 21.2213, -66.3497, -3.21682, 1.18 ) }
    dend_47 { pt3dadd( 21.8449, -67.0722, -2.90788, 1.69 ) }
    dend_47 { pt3dadd( 22.2736, -67.4782, -2.69813, 1.69 ) }
    dend_47 { pt3dadd( 23.8644, -68.6558, -2.01709, 0.44 ) }
    dend_47 { pt3dadd( 24.4978, -69.0552, -1.79368, 0.66 ) }
    dend_47 { pt3dadd( 24.5536, -69.0885, -1.77316, 0.66 ) }
    dend_47 { pt3dadd( 25.1365, -69.4336, -1.56982, 0.66 ) }
    dend_47 { pt3dadd( 25.9689, -70.011, -1.20703, 0.29 ) }
    dend_47 { pt3dadd( 26.2426, -70.3105, -1.01476, 0.29 ) }
    dend_47 { pt3dadd( 26.3339, -71.0048, -0.617819, 0.29 ) }
    dend_47 { pt3dadd( 26.3044, -71.8404, -0.129251, 0.81 ) }
    dend_47 { pt3dadd( 26.2827, -72.251, 0.100424, 1.03 ) }
    dend_47 { pt3dadd( 26.2903, -73.477, 0.818117, 0.37 ) }
    dend_47 { pt3dadd( 26.3432, -74.0592, 1.14282, 0.37 ) }
    dend_47 { pt3dadd( 26.3721, -74.179, 1.21898, 0.37 ) }
    dend_47 { pt3dadd( 26.7141, -75.0237, 1.79422, 0.52 ) }
    dend_47 { pt3dadd( 27.0249, -75.5975, 2.19166, 0.88 ) }
    dend_47 { pt3dadd( 27.7848, -76.749, 3.05609, 0.37 ) }
    dend_47 { pt3dadd( 28.3622, -77.5306, 3.60752, 0.29 ) }
    dend_47 { pt3dadd( 29.2787, -78.7303, 4.39206, 1.77 ) }
    dend_47 { pt3dadd( 29.7003, -79.313, 4.7792, 2.58 ) }
    dend_47 { pt3dadd( 29.7551, -79.3963, 4.83799, 2.58 ) }
    dend_47 { pt3dadd( 30.4036, -80.5523, 5.74959, 2.58 ) }
    dend_47 { pt3dadd( 30.9644, -81.6981, 6.67747, 0.37 ) }
    dend_47 { pt3dadd( 31.4975, -82.8462, 7.64073, 0.37 ) }
    dend_47 { pt3dadd( 32.0039, -83.9605, 8.53598, 0.66 ) }
    dend_47 { pt3dadd( 32.4164, -84.8492, 9.2459, 0.74 ) }
    dend_47 { pt3dadd( 32.9769, -85.9492, 10.066, 0.29 ) }
    dend_47 { pt3dadd( 33.2752, -86.4673, 10.4373, 0.29 ) }
    dend_47 { pt3dadd( 33.4824, -86.7574, 10.6391, 1.11 ) }
    dend_47 { pt3dadd( 33.7533, -87.0773, 10.8218, 1.33 ) }
    dend_47 { pt3dadd( 34.3303, -87.6674, 11.08, 0.88 ) }
    dend_47 { pt3dadd( 35.2481, -88.5423, 11.4332, 0.29 ) }
    dend_47 { pt3dadd( 36.2198, -89.4055, 11.7687, 0.29 ) }
    dend_47 { pt3dadd( 37.1488, -90.2022, 12.1056, 2.65 ) }
    dend_47 { pt3dadd( 37.197, -90.2444, 12.1267, 2.65 ) }
    dend_47 { pt3dadd( 37.7677, -90.7603, 12.4403, 3.09 ) }
    dend_47 { pt3dadd( 38.7073, -91.705, 13.2413, 0.37 ) }
    dend_47 { pt3dadd( 39.3812, -92.4577, 13.9513, 0.15 ) }
    dend_47 { pt3dadd( 39.7879, -92.9497, 14.4253, 0.15 ) }
    dend_47 { pt3dadd( 40.5046, -93.8775, 15.3494, 2.14 ) }
    dend_47 { pt3dadd( 41.0805, -94.7122, 16.188, 2.58 ) }
    dend_47 { pt3dadd( 42.5256, -97.0914, 18.5031, 0.44 ) }
    dend_47 { pt3dadd( 42.7955, -97.6233, 19.0347, 0.88 ) }
    dend_47 { pt3dadd( 42.8797, -97.8168, 19.2335, 0.88 ) }
    dend_47 { pt3dadd( 42.8993, -97.869, 19.2867, 0.88 ) }
    dend_47 { pt3dadd( 43.2972, -99.0631, 20.4195, 0.22 ) }
    dend_47 { pt3dadd( 43.5329, -99.8277, 21.0926, 0.22 ) }
    dend_47 { pt3dadd( 43.818, -100.811, 21.8981, 1.55 ) }
    dend_47 { pt3dadd( 44.1964, -102.091, 22.9555, 2.14 ) }
    dend_47 { pt3dadd( 44.6156, -103.597, 24.147, 0.15 ) }
    dend_47 { pt3dadd( 44.7395, -104.097, 24.5215, 0.81 ) }
    dend_47 { pt3dadd( 44.9851, -105.141, 25.2533, 0.15 ) }
    dend_47 { pt3dadd( 45.1357, -105.837, 25.7241, 1.55 ) }
    dend_47 { pt3dadd( 45.2029, -106.158, 25.924, 1.77 ) }
    dend_47 { pt3dadd( 45.499, -107.718, 26.8461, 0.15 ) }
    dend_47 { pt3dadd( 45.7955, -109.395, 27.9435, 0.15 ) }
    dend_47 { pt3dadd( 45.8475, -109.71, 28.2004, 0.52 ) }
    dend_47 { pt3dadd( 45.9907, -110.761, 29.1766, 0.22 ) }
    dend_47 { pt3dadd( 46.0988, -111.685, 30.1411, 0.74 ) }
    dend_47 { pt3dadd( 46.1229, -111.898, 30.3838, 0.74 ) }
    dend_47 { pt3dadd( 46.25, -113.018, 31.8478, 0.59 ) }
    dend_47 { pt3dadd( 46.3578, -114.292, 33.7627, 0.22 ) }
    dend_47 { pt3dadd( 46.3646, -114.478, 34.0705, 0.52 ) }
    dend_47 { pt3dadd( 46.3538, -114.859, 34.7994, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.5164, -51.8067, -0.0562988, 0.88 ) }
    dend_40 { pt3dadd( 6.81291, -53.1891, 0.415061, 0.88 ) }
    dend_40 { pt3dadd( 6.37617, -54.0554, 0.712192, 0.37 ) }
    dend_40 { pt3dadd( 5.91136, -55.0057, 1.05508, 0.37 ) }
    dend_40 { pt3dadd( 5.20687, -56.4214, 1.54915, 0.37 ) }
    dend_40 { pt3dadd( 4.83346, -57.2027, 1.80039, 1.47 ) }
    dend_40 { pt3dadd( 4.38798, -58.1401, 1.99659, 2.14 ) }
    dend_40 { pt3dadd( 4.20199, -58.5376, 2.0535, 2.14 ) }
    dend_40 { pt3dadd( 3.74603, -59.6498, 2.07513, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 3.42274, -60.5992, 1.80245, 0.44 ) }
    dend_40 { pt3dadd( 3.14122, -61.5469, 1.3386, 0.37 ) }
    dend_40 { pt3dadd( 2.61642, -63.3706, 0.238405, 1.77 ) }
    dend_40 { pt3dadd( 2.46129, -63.8595, -0.081537, 2.14 ) }
    dend_40 { pt3dadd( 2.14976, -64.7159, -0.640147, 2.21 ) }
    dend_40 { pt3dadd( 1.04968, -67.4201, -2.33894, 0.29 ) }
    dend_40 { pt3dadd( 0.694984, -68.2243, -2.79333, 0.29 ) }
    dend_40 { pt3dadd( 0.0937001, -69.4045, -3.35834, 0.29 ) }
    dend_40 { pt3dadd( -0.521919, -70.504, -3.74563, 0.29 ) }
    dend_40 { pt3dadd( -1.24692, -71.6813, -4.09676, 0.29 ) }
    dend_40 { pt3dadd( -1.9694, -72.7333, -4.29042, 0.88 ) }
    dend_40 { pt3dadd( -2.33321, -73.2193, -4.28355, 1.62 ) }
    dend_40 { pt3dadd( -3.2044, -74.3201, -4.24179, 1.99 ) }
    dend_40 { pt3dadd( -3.44899, -74.6507, -4.21508, 1.99 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 14/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -12.8548, -86.4093, 14.3057, 0.29 ) }
    dend_36 { pt3dadd( -11.7078, -87.4634, 14.0405, 0.29 ) }
    dend_36 { pt3dadd( -11.4377, -87.7197, 13.9871, 0.44 ) }
    dend_36 { pt3dadd( -10.5411, -88.6225, 13.8693, 0.22 ) }
    dend_36 { pt3dadd( -9.8701, -89.3695, 13.857, 0.22 ) }
    dend_36 { pt3dadd( -9.83544, -89.4107, 13.8592, 0.22 ) }
    dend_36 { pt3dadd( -9.67301, -89.6111, 13.8778, 0.66 ) }
    dend_36 { pt3dadd( -9.46487, -89.909, 13.9445, 0.66 ) }
    dend_36 { pt3dadd( -8.97482, -90.6078, 14.1702, 0.22 ) }
    dend_36 { pt3dadd( -8.48596, -91.3116, 14.4649, 1.4 ) }
    dend_36 { pt3dadd( -8.28254, -91.6037, 14.5865, 1.84 ) }
    dend_36 { pt3dadd( -8.25753, -91.6396, 14.6011, 1.84 ) }
    dend_36 { pt3dadd( -7.6716, -92.5017, 14.9358, 0.29 ) }
    dend_36 { pt3dadd( -7.1573, -93.3507, 15.2432, 0.29 ) }
    dend_36 { pt3dadd( -6.82194, -94.005, 15.4464, 0.29 ) }
    dend_36 { pt3dadd( -6.51987, -94.7405, 15.6289, 1.69 ) }
    dend_36 { pt3dadd( -6.40121, -95.1542, 15.7226, 2.28 ) }
    dend_36 { pt3dadd( -6.33964, -95.4936, 15.787, 2.5 ) }
    dend_36 { pt3dadd( -6.29385, -96.7022, 16.0155, 0.29 ) }
    dend_36 { pt3dadd( -6.33967, -97.5541, 16.1734, 0.29 ) }
    dend_36 { pt3dadd( -6.41656, -98.4051, 16.3333, 0.29 ) }
    dend_36 { pt3dadd( -6.51578, -99.3732, 16.5274, 2.06 ) }
    dend_36 { pt3dadd( -6.58485, -100.076, 16.6783, 2.65 ) }
    dend_36 { pt3dadd( -6.69851, -101.574, 17.0293, 0.29 ) }
    dend_36 { pt3dadd( -6.73147, -102.297, 17.2171, 0.22 ) }
    dend_36 { pt3dadd( -6.74438, -102.865, 17.3805, 0.22 ) }
    dend_36 { pt3dadd( -6.73986, -103.321, 17.5142, 0.88 ) }
    dend_36 { pt3dadd( -6.72384, -103.646, 17.6087, 1.18 ) }
    dend_36 { pt3dadd( -6.70006, -103.913, 17.6898, 1.18 ) }
    dend_36 { pt3dadd( -6.57939, -104.686, 17.9259, 0.22 ) }
    dend_36 { pt3dadd( -6.51301, -105.051, 18.0537, 0.22 ) }
    dend_36 { pt3dadd( -6.43942, -105.481, 18.2263, 0.22 ) }
    dend_36 { pt3dadd( -6.36847, -105.857, 18.3873, 1.25 ) }
    dend_36 { pt3dadd( -6.28106, -106.209, 18.5705, 1.25 ) }
    dend_36 { pt3dadd( -5.99048, -107.173, 19.1146, 0.22 ) }
    dend_36 { pt3dadd( -5.77049, -107.671, 19.4282, 0.22 ) }
    dend_36 { pt3dadd( -5.36762, -108.343, 19.8791, 1.11 ) }
    dend_36 { pt3dadd( -5.15449, -108.63, 20.081, 1.55 ) }
    dend_36 { pt3dadd( -4.41756, -109.479, 20.689, 0.22 ) }
    dend_36 { pt3dadd( -3.88357, -109.967, 21.0493, 0.22 ) }
    dend_36 { pt3dadd( -2.9969, -110.573, 21.5083, 0.22 ) }
    dend_36 { pt3dadd( -2.3795, -110.919, 21.7775, 1.69 ) }
    dend_36 { pt3dadd( -2.12946, -111.026, 21.8592, 1.99 ) }
    dend_36 { pt3dadd( -2.07999, -111.043, 21.8724, 1.99 ) }
    dend_36 { pt3dadd( -0.974609, -111.299, 22.0036, 0.29 ) }
    dend_36 { pt3dadd( -0.0166703, -111.465, 22.0595, 0.29 ) }
    dend_36 { pt3dadd( 0.0371494, -111.473, 22.0592, 0.29 ) }
    dend_36 { pt3dadd( 1.01602, -111.616, 22.0411, 1.4 ) }
    dend_36 { pt3dadd( 1.53138, -111.683, 22.0191, 1.62 ) }
    dend_36 { pt3dadd( 3.29587, -111.882, 21.888, 0.22 ) }
    dend_36 { pt3dadd( 3.34905, -111.886, 21.8804, 0.22 ) }
    dend_36 { pt3dadd( 4.11733, -111.912, 21.719, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 66/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -12.8548, -86.4093, 14.3057, 0.29 ) }
    dend_35 { pt3dadd( -12.7609, -87.8313, 14.5529, 0.29 ) }
    dend_35 { pt3dadd( -12.6953, -88.7604, 14.7129, 0.29 ) }
    dend_35 { pt3dadd( -12.6646, -89.1776, 14.781, 0.74 ) }
    dend_35 { pt3dadd( -12.614, -89.9315, 14.8881, 0.81 ) }
    dend_35 { pt3dadd( -12.5824, -90.4069, 14.9496, 1.11 ) }
    dend_35 { pt3dadd( -12.5359, -91.088, 15.0284, 0.44 ) }
    dend_35 { pt3dadd( -12.4934, -91.6696, 15.0733, 0.29 ) }
    dend_35 { pt3dadd( -12.4395, -92.3783, 15.1217, 0.29 ) }
    dend_35 { pt3dadd( -12.3524, -93.3806, 15.1839, 2.21 ) }
    dend_35 { pt3dadd( -12.3022, -93.8429, 15.2017, 2.73 ) }
    dend_35 { pt3dadd( -12.1231, -95.1193, 15.2248, 0.29 ) }
    dend_35 { pt3dadd( -12.0385, -95.6099, 15.2213, 0.29 ) }
    dend_35 { pt3dadd( -11.9243, -96.1509, 15.2141, 0.81 ) }
    dend_35 { pt3dadd( -11.8965, -96.2598, 15.2121, 0.96 ) }
    dend_35 { pt3dadd( -11.6744, -96.9803, 15.211, 0.22 ) }
    dend_35 { pt3dadd( -11.466, -97.6068, 15.2227, 0.22 ) }
    dend_35 { pt3dadd( -11.3273, -97.9957, 15.2414, 1.33 ) }
    dend_35 { pt3dadd( -11.2226, -98.3334, 15.2764, 1.62 ) }
    dend_35 { pt3dadd( -11.2095, -98.3874, 15.284, 1.62 ) }
    dend_35 { pt3dadd( -11.0671, -99.1582, 15.4251, 0.29 ) }
    dend_35 { pt3dadd( -10.9791, -99.7147, 15.5529, 0.22 ) }
    dend_35 { pt3dadd( -10.8981, -100.229, 15.6865, 0.22 ) }
    dend_35 { pt3dadd( -10.8065, -100.789, 15.8433, 1.11 ) }
    dend_35 { pt3dadd( -10.7349, -101.23, 15.9716, 1.47 ) }
    dend_35 { pt3dadd( -10.6365, -102.018, 16.2435, 0.22 ) }
    dend_35 { pt3dadd( -10.602, -102.558, 16.4641, 0.22 ) }
    dend_35 { pt3dadd( -10.5886, -103.11, 16.7151, 0.74 ) }
    dend_35 { pt3dadd( -10.5988, -103.263, 16.7873, 0.74 ) }
    dend_35 { pt3dadd( -10.6053, -103.306, 16.8081, 0.74 ) }
    dend_35 { pt3dadd( -10.942, -104.611, 17.4638, 0.22 ) }
    dend_35 { pt3dadd( -11.1857, -105.346, 17.8346, 1.99 ) }
    dend_35 { pt3dadd( -11.2804, -105.598, 17.9595, 1.99 ) }
    dend_35 { pt3dadd( -11.7375, -106.672, 18.5254, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_35 { pt3dadd( -12.2224, -107.747, 19.1141, 0.22 ) }
    dend_35 { pt3dadd( -12.5865, -108.514, 19.5369, 1.84 ) }
    dend_35 { pt3dadd( -12.657, -108.657, 19.6147, 1.99 ) }
    dend_35 { pt3dadd( -12.706, -108.752, 19.669, 1.99 ) }
    dend_35 { pt3dadd( -13.4342, -110.133, 20.4985, 0.22 ) }
    dend_35 { pt3dadd( -13.6408, -110.524, 20.7531, 0.96 ) }
    dend_35 { pt3dadd( -13.9808, -111.139, 21.1695, 0.22 ) }
    dend_35 { pt3dadd( -14.1225, -111.404, 21.3556, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -22.0831, -66.6284, -103.144, 0.29 ) }
    dend_27 { pt3dadd( -21.2394, -67.8554, -103.223, 0.29 ) }
    dend_27 { pt3dadd( -20.3316, -69.2161, -103.34, 0.22 ) }
    dend_27 { pt3dadd( -20.0319, -69.7122, -103.385, 0.52 ) }
    dend_27 { pt3dadd( -19.8057, -70.1561, -103.436, 0.52 ) }
    dend_27 { pt3dadd( -19.3487, -71.1929, -103.563, 0.22 ) }
    dend_27 { pt3dadd( -18.987, -72.0731, -103.672, 0.22 ) }
    dend_27 { pt3dadd( -18.7474, -72.8298, -103.783, 0.81 ) }
    dend_27 { pt3dadd( -18.5438, -73.55, -103.893, 1.11 ) }
    dend_27 { pt3dadd( -18.2162, -74.8439, -104.061, 0.22 ) }
    dend_27 { pt3dadd( -18.0426, -75.6364, -104.149, 0.22 ) }
    dend_27 { pt3dadd( -17.8818, -76.5376, -104.231, 0.22 ) }
    dend_27 { pt3dadd( -17.7868, -77.2059, -104.301, 1.11 ) }
    dend_27 { pt3dadd( -17.5892, -78.5766, -104.456, 0.22 ) }
    dend_27 { pt3dadd( -17.3127, -80.2327, -104.65, 0.22 ) }
    dend_27 { pt3dadd( -17.1248, -81.1868, -104.762, 1.33 ) }
    dend_27 { pt3dadd( -17.0393, -81.5328, -104.817, 1.47 ) }
    dend_27 { pt3dadd( -16.5067, -83.4192, -105.178, 0.22 ) }
    dend_27 { pt3dadd( -16.205, -84.2272, -105.377, 1.11 ) }
    dend_27 { pt3dadd( -15.9404, -84.7821, -105.551, 1.47 ) }
    dend_27 { pt3dadd( -15.6451, -85.2922, -105.74, 1.47 ) }
    dend_27 { pt3dadd( -14.6306, -86.76, -106.346, 0.15 ) }
    dend_27 { pt3dadd( -14.5885, -86.8108, -106.37, 0.15 ) }
    dend_27 { pt3dadd( -13.6889, -87.5936, -106.818, 0.88 ) }
    dend_27 { pt3dadd( -13.6384, -87.6343, -106.846, 0.88 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 33/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -22.0831, -66.6284, -103.144, 1.69 ) }
    dend_26 { pt3dadd( -22.8457, -67.6593, -103.327, 1.69 ) }
    dend_26 { pt3dadd( -23.7216, -68.5181, -103.588, 0.22 ) }
    dend_26 { pt3dadd( -23.7664, -68.5565, -103.602, 0.22 ) }
    dend_26 { pt3dadd( -24.6222, -69.2527, -103.858, 0.22 ) }
    dend_26 { pt3dadd( -25.3342, -69.8136, -104.116, 0.88 ) }
    dend_26 { pt3dadd( -25.9849, -70.3165, -104.373, 1.11 ) }
    dend_26 { pt3dadd( -27.1194, -71.0339, -104.839, 0.22 ) }
    dend_26 { pt3dadd( -27.5874, -71.2864, -105.027, 0.52 ) }
    dend_26 { pt3dadd( -27.7436, -71.3558, -105.09, 0.52 ) }
    dend_26 { pt3dadd( -28.9137, -71.7055, -105.624, 0.37 ) }
    dend_26 { pt3dadd( -28.9663, -71.7196, -105.649, 0.29 ) }
    dend_26 { pt3dadd( -29.5026, -71.8723, -105.871, 0.22 ) }
    dend_26 { pt3dadd( -29.7789, -71.9613, -105.978, 0.37 ) }
    dend_26 { pt3dadd( -30.3748, -72.1607, -106.248, 0.37 ) }
    dend_26 { pt3dadd( -31.3192, -72.6052, -106.93, 0.29 ) }
    dend_26 { pt3dadd( -31.9841, -73.0392, -107.542, 0.29 ) }
    dend_26 { pt3dadd( -32.5007, -73.4556, -108.111, 0.22 ) }
    dend_26 { pt3dadd( -33.1482, -74.152, -109.0, 1.11 ) }
    dend_26 { pt3dadd( -33.5551, -74.6912, -109.658, 1.33 ) }
    dend_26 { pt3dadd( -34.6889, -76.3374, -111.662, 0.29 ) }
    dend_26 { pt3dadd( -34.9756, -76.821, -112.251, 0.59 ) }
    dend_26 { pt3dadd( -34.991, -76.8507, -112.29, 0.59 ) }
    dend_26 { pt3dadd( -35.3482, -77.6542, -113.391, 0.29 ) }
    dend_26 { pt3dadd( -35.361, -77.6903, -113.438, 0.29 ) }
    dend_26 { pt3dadd( -35.7565, -78.7582, -114.63, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 59/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -22.5499, 136.207, -60.0337, 0.22 ) }
    dend_18 { pt3dadd( -21.5292, 139.568, -63.4814, 0.22 ) }
    dend_18 { pt3dadd( -21.1631, 140.702, -64.588, 0.37 ) }
    dend_18 { pt3dadd( -20.9606, 141.329, -65.1438, 0.15 ) }
    dend_18 { pt3dadd( -20.7826, 141.802, -65.5691, 0.44 ) }
    dend_18 { pt3dadd( -20.3748, 142.877, -66.5444, 0.22 ) }
    dend_18 { pt3dadd( -19.8744, 144.274, -67.8413, 1.25 ) }
    dend_18 { pt3dadd( -19.3197, 146.032, -69.2804, 0.22 ) }
    dend_18 { pt3dadd( -19.0828, 146.848, -70.0102, 1.03 ) }
    dend_18 { pt3dadd( -18.548, 148.883, -71.9367, 0.22 ) }
    dend_18 { pt3dadd( -18.4567, 149.274, -72.3196, 0.22 ) }
    dend_18 { pt3dadd( -18.2531, 150.4, -73.4068, 1.11 ) }
    dend_18 { pt3dadd( -18.2142, 150.768, -73.7458, 1.4 ) }
    dend_18 { pt3dadd( -18.1801, 152.47, -75.161, 0.22 ) }
    dend_18 { pt3dadd( -18.1914, 152.859, -75.4587, 0.59 ) }
    dend_18 { pt3dadd( -18.3407, 154.719, -76.5832, 0.22 ) }
    dend_18 { pt3dadd( -18.3943, 155.401, -76.9357, 0.88 ) }
    dend_18 { pt3dadd( -18.4474, 155.953, -77.146, 1.03 ) }
    dend_18 { pt3dadd( -18.6344, 157.387, -77.5688, 0.22 ) }
    dend_18 { pt3dadd( -18.7505, 158.117, -77.7059, 0.59 ) }
    dend_18 { pt3dadd( -19.0072, 159.489, -77.8971, 0.22 ) }
    dend_18 { pt3dadd( -19.1829, 160.446, -77.9869, 0.22 ) }
    dend_18 { pt3dadd( -19.433, 162.098, -78.143, 1.47 ) }
    dend_18 { pt3dadd( -19.4908, 162.575, -78.1835, 1.47 ) }
    dend_18 { pt3dadd( -19.5747, 163.875, -78.3306, 0.22 ) }
    dend_18 { pt3dadd( -19.5815, 164.527, -78.4379, 0.52 ) }
    dend_18 { pt3dadd( -19.5407, 166.295, -78.7996, 0.22 ) }
    dend_18 { pt3dadd( -19.5156, 166.81, -78.9197, 1.03 ) }
    dend_18 { pt3dadd( -19.4929, 167.144, -79.0141, 1.03 ) }
    dend_18 { pt3dadd( -19.2375, 170.741, -80.158, 0.22 ) }
    dend_18 { pt3dadd( -19.1617, 171.837, -80.5216, 0.96 ) }
    dend_18 { pt3dadd( -19.1267, 172.403, -80.7179, 0.96 ) }
    dend_18 { pt3dadd( -19.1242, 172.479, -80.7453, 0.96 ) }
    dend_18 { pt3dadd( -19.0562, 174.406, -81.4951, 0.22 ) }
    dend_18 { pt3dadd( -19.012, 175.48, -81.9471, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -22.5499, 136.207, -60.0337, 0.22 ) }
    dend_17 { pt3dadd( -22.796, 136.392, -61.6982, 0.22 ) }
    dend_17 { pt3dadd( -23.1909, 136.58, -64.3884, 0.15 ) }
    dend_17 { pt3dadd( -23.4949, 136.674, -66.3586, 1.4 ) }
    dend_17 { pt3dadd( -23.7435, 136.751, -67.9705, 1.4 ) }
    dend_17 { pt3dadd( -24.0584, 136.849, -70.0119, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -24.1821, 136.887, -70.8137, 0.22 ) }
    dend_17 { pt3dadd( -24.2777, 136.894, -71.8346, 0.88 ) }
    dend_17 { pt3dadd( -24.318, 136.873, -72.1275, 0.88 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -45.8173, 137.114, -69.8511, 0.66 ) }
    dend_5 { pt3dadd( -46.8057, 137.079, -76.5777, 0.66 ) }
    dend_5 { pt3dadd( -46.975, 137.152, -77.4554, 0.29 ) }
    dend_5 { pt3dadd( -47.0902, 137.248, -77.9237, 0.22 ) }
    dend_5 { pt3dadd( -47.3045, 137.465, -78.6498, 0.22 ) }
    dend_5 { pt3dadd( -47.5086, 137.688, -79.265, 1.03 ) }
    dend_5 { pt3dadd( -47.7025, 137.895, -79.7709, 1.47 ) }
    dend_5 { pt3dadd( -48.3679, 138.706, -80.3395, 0.88 ) }
    dend_5 { pt3dadd( -48.9997, 139.426, -80.8926, 0.22 ) }
    dend_5 { pt3dadd( -49.1918, 139.596, -81.0766, 0.29 ) }
    dend_5 { pt3dadd( -49.2506, 139.629, -81.1296, 0.29 ) }
    dend_5 { pt3dadd( -49.7086, 139.793, -81.5246, 0.15 ) }
    dend_5 { pt3dadd( -50.241, 139.9, -81.9932, 0.96 ) }
    dend_5 { pt3dadd( -50.748, 139.949, -82.4156, 1.4 ) }
    dend_5 { pt3dadd( -51.7256, 140.017, -83.3892, 0.22 ) }
    dend_5 { pt3dadd( -52.377, 140.098, -84.1615, 0.22 ) }
    dend_5 { pt3dadd( -52.8658, 140.203, -84.9542, 0.74 ) }
    dend_5 { pt3dadd( -53.4811, 140.397, -86.1553, 0.22 ) }
    dend_5 { pt3dadd( -53.6835, 140.478, -86.6125, 0.96 ) }
    dend_5 { pt3dadd( -54.3322, 140.818, -88.341, 1.33 ) }
    dend_5 { pt3dadd( -54.6026, 141.009, -89.1196, 1.84 ) }
    dend_5 { pt3dadd( -55.5078, 141.766, -92.0174, 0.88 ) }
    dend_5 { pt3dadd( -55.6398, 141.875, -92.4393, 1.03 ) }
    dend_5 { pt3dadd( -55.6618, 141.892, -92.5021, 1.03 ) }
    dend_5 { pt3dadd( -56.4496, 142.413, -94.5623, 0.22 ) }
    dend_5 { pt3dadd( -56.9378, 142.678, -95.6106, 1.33 ) }
    dend_5 { pt3dadd( -58.2412, 143.246, -97.9533, 0.22 ) }
    dend_5 { pt3dadd( -58.8434, 143.458, -98.8148, 1.33 ) }
    dend_5 { pt3dadd( -59.5431, 143.642, -99.699, 0.22 ) }
    dend_5 { pt3dadd( -59.5778, 143.648, -99.7364, 0.22 ) }
    dend_5 { pt3dadd( -60.3312, 143.653, -100.35, 0.22 ) }
    dend_5 { pt3dadd( -61.0684, 143.551, -100.827, 1.4 ) }
    dend_5 { pt3dadd( -61.5431, 143.445, -101.011, 1.84 ) }
    dend_5 { pt3dadd( -62.1834, 143.233, -101.222, 1.33 ) }
    dend_5 { pt3dadd( -62.9759, 142.895, -101.484, 0.81 ) }
    dend_5 { pt3dadd( -63.6747, 142.548, -101.721, 0.22 ) }
    dend_5 { pt3dadd( -64.3132, 142.133, -101.951, 1.4 ) }
    dend_5 { pt3dadd( -64.6585, 141.875, -102.079, 1.69 ) }
    dend_5 { pt3dadd( -64.8707, 141.708, -102.154, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -45.8173, 137.114, -69.8511, 0.29 ) }
    dend_4 { pt3dadd( -47.4796, 139.169, -73.1495, 0.29 ) }
    dend_4 { pt3dadd( -47.9392, 139.786, -74.025, 0.22 ) }
    dend_4 { pt3dadd( -48.1589, 140.131, -74.4653, 0.96 ) }
    dend_4 { pt3dadd( -48.3037, 140.378, -74.7635, 1.18 ) }
    dend_4 { pt3dadd( -48.8455, 141.415, -75.9097, 0.22 ) }
    dend_4 { pt3dadd( -49.0169, 141.77, -76.2791, 0.52 ) }
    dend_4 { pt3dadd( -49.095, 142.0, -76.4227, 0.52 ) }
    dend_4 { pt3dadd( -49.6316, 143.596, -77.3076, 0.22 ) }
    dend_4 { pt3dadd( -49.6519, 143.656, -77.3352, 0.22 ) }
    dend_4 { pt3dadd( -49.9088, 144.425, -77.6181, 0.22 ) }
    dend_4 { pt3dadd( -49.9291, 144.488, -77.6327, 0.22 ) }
    dend_4 { pt3dadd( -50.4645, 145.981, -77.8462, 0.22 ) }
    dend_4 { pt3dadd( -50.4892, 146.044, -77.8494, 0.22 ) }
    dend_4 { pt3dadd( -51.0164, 147.362, -77.9053, 0.22 ) }
    dend_4 { pt3dadd( -51.0402, 147.425, -77.9113, 0.22 ) }
    dend_4 { pt3dadd( -51.2792, 148.103, -78.0036, 0.44 ) }
    dend_4 { pt3dadd( -51.7563, 149.616, -78.2517, 0.15 ) }
    dend_4 { pt3dadd( -52.3111, 151.697, -78.7182, 0.15 ) }
    dend_4 { pt3dadd( -52.7469, 153.555, -79.1989, 0.15 ) }
    dend_4 { pt3dadd( -53.0195, 154.945, -79.6101, 0.15 ) }
    dend_4 { pt3dadd( -53.1813, 155.903, -79.9398, 0.88 ) }
    dend_4 { pt3dadd( -53.2701, 156.575, -80.2037, 1.25 ) }
    dend_4 { pt3dadd( -53.4033, 158.325, -80.9876, 0.22 ) }
    dend_4 { pt3dadd( -53.4153, 158.772, -81.2046, 0.59 ) }
    dend_4 { pt3dadd( -53.4153, 159.254, -81.4265, 0.59 ) }
    dend_4 { pt3dadd( -53.4137, 160.85, -82.129, 0.22 ) }
    dend_4 { pt3dadd( -53.4114, 161.444, -82.3785, 0.22 ) }
    dend_4 { pt3dadd( -53.4133, 161.711, -82.4865, 0.66 ) }
    dend_4 { pt3dadd( -53.4152, 162.253, -82.6798, 0.74 ) }
    dend_4 { pt3dadd( -53.3742, 163.875, -83.1123, 0.15 ) }
    dend_4 { pt3dadd( -53.3301, 164.848, -83.273, 0.15 ) }
    dend_4 { pt3dadd( -53.326, 164.906, -83.2772, 0.15 ) }
    dend_4 { pt3dadd( -53.2666, 165.657, -83.3073, 0.52 ) }
    dend_4 { pt3dadd( -53.2049, 166.297, -83.2911, 0.52 ) }
    dend_4 { pt3dadd( -53.0151, 168.168, -83.1131, 0.22 ) }
    dend_4 { pt3dadd( -52.9135, 169.286, -82.9095, 1.03 ) }
    dend_4 { pt3dadd( -52.8774, 169.903, -82.7661, 1.03 ) }
    dend_4 { pt3dadd( -52.879, 169.979, -82.7458, 1.03 ) }
    dend_4 { pt3dadd( -53.0179, 171.082, -82.4006, 0.15 ) }
    dend_4 { pt3dadd( -53.1533, 171.545, -82.255, 0.52 ) }
    dend_4 { pt3dadd( -53.3529, 171.935, -82.148, 0.52 ) }
    dend_4 { pt3dadd( -53.782, 172.631, -81.9342, 0.22 ) }
    dend_4 { pt3dadd( -54.3677, 173.469, -81.6753, 0.22 ) }
    dend_4 { pt3dadd( -54.6735, 173.867, -81.5633, 0.22 ) }
    dend_4 { pt3dadd( -55.0723, 174.306, -81.4686, 0.59 ) }
    dend_4 { pt3dadd( -55.5424, 174.826, -81.3582, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 89/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.44899, -74.6507, -4.21508, 0.37 ) }
    dend_46 { pt3dadd( -4.38495, -76.7199, -3.14422, 0.37 ) }
    dend_46 { pt3dadd( -4.72333, -77.573, -2.56759, 0.74 ) }
    dend_46 { pt3dadd( -5.42827, -79.5574, -1.02572, 0.22 ) }
    dend_46 { pt3dadd( -5.76483, -80.5425, -0.208424, 0.81 ) }
    dend_46 { pt3dadd( -5.94741, -81.1126, 0.299509, 0.81 ) }
    dend_46 { pt3dadd( -6.56812, -83.1648, 2.23773, 1.47 ) }
    dend_46 { pt3dadd( -6.92045, -84.5752, 3.78978, 2.06 ) }
    dend_46 { pt3dadd( -7.18227, -86.2083, 5.75177, 0.22 ) }
    dend_46 { pt3dadd( -7.23407, -86.7633, 6.43686, 0.52 ) }
    dend_46 { pt3dadd( -7.31105, -87.7738, 7.71415, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_46 { pt3dadd( -7.38051, -88.7094, 8.89421, 1.77 ) }
    dend_46 { pt3dadd( -7.47798, -89.8503, 10.2955, 2.43 ) }
    dend_46 { pt3dadd( -7.8062, -93.0062, 14.0813, 0.22 ) }
    dend_46 { pt3dadd( -7.84295, -93.3941, 14.5462, 0.59 ) }
    dend_46 { pt3dadd( -7.90052, -93.9818, 15.2329, 0.22 ) }
    dend_46 { pt3dadd( -7.94251, -94.3235, 15.6136, 0.44 ) }
    dend_46 { pt3dadd( -8.11449, -95.4459, 16.8164, 0.15 ) }
    dend_46 { pt3dadd( -8.33465, -96.3233, 17.7086, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 8/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -3.44899, -74.6507, -4.21508, 0.29 ) }
    dend_41 { pt3dadd( -4.78044, -75.9677, -4.02096, 0.29 ) }
    dend_41 { pt3dadd( -5.43252, -76.6338, -3.93364, 0.29 ) }
    dend_41 { pt3dadd( -6.08885, -77.3149, -3.84536, 0.29 ) }
    dend_41 { pt3dadd( -6.84155, -78.1408, -3.66966, 0.29 ) }
    dend_41 { pt3dadd( -7.52405, -78.9105, -3.46183, 0.29 ) }
    dend_41 { pt3dadd( -8.03576, -79.4997, -3.29035, 1.77 ) }
    dend_41 { pt3dadd( -8.58369, -80.1621, -3.02333, 2.21 ) }
    dend_41 { pt3dadd( -8.76845, -80.3978, -2.92649, 2.36 ) }
    dend_41 { pt3dadd( -9.5988, -81.5509, -2.46052, 0.74 ) }
    dend_41 { pt3dadd( -10.038, -82.1334, -2.20021, 0.29 ) }
    dend_41 { pt3dadd( -10.5279, -82.7314, -1.92603, 0.29 ) }
    dend_41 { pt3dadd( -11.2172, -83.5194, -1.55857, 1.92 ) }
    dend_41 { pt3dadd( -11.6495, -83.9827, -1.3454, 2.28 ) }
    dend_41 { pt3dadd( -11.9932, -84.3249, -1.21146, 2.28 ) }
    dend_41 { pt3dadd( -13.0624, -85.3336, -0.911496, 0.29 ) }
    dend_41 { pt3dadd( -13.942, -86.1713, -0.695175, 0.22 ) }
    dend_41 { pt3dadd( -14.2453, -86.4616, -0.632861, 0.96 ) }
    dend_41 { pt3dadd( -14.4652, -86.6668, -0.637306, 1.18 ) }
    dend_41 { pt3dadd( -15.2269, -87.3808, -0.774724, 0.22 ) }
    dend_41 { pt3dadd( -15.4814, -87.5943, -0.904114, 0.22 ) }
    dend_41 { pt3dadd( -15.7815, -87.8273, -1.11635, 0.22 ) }
    dend_41 { pt3dadd( -16.2371, -88.1392, -1.44798, 0.66 ) }
    dend_41 { pt3dadd( -17.9002, -89.1089, -2.65508, 1.62 ) }
    dend_41 { pt3dadd( -18.1233, -89.2103, -2.81096, 2.14 ) }
    dend_41 { pt3dadd( -20.4871, -90.0201, -4.31889, 0.37 ) }
    dend_41 { pt3dadd( -21.2399, -90.2154, -4.74952, 0.37 ) }
    dend_41 { pt3dadd( -21.8925, -90.3251, -5.09284, 1.47 ) }
    dend_41 { pt3dadd( -22.8091, -90.3917, -5.54765, 1.47 ) }
    dend_41 { pt3dadd( -24.543, -90.3923, -6.30079, 0.22 ) }
    dend_41 { pt3dadd( -25.38, -90.3474, -6.63439, 1.25 ) }
    dend_41 { pt3dadd( -25.754, -90.3058, -6.75871, 1.84 ) }
    dend_41 { pt3dadd( -26.9978, -90.1565, -7.193, 1.84 ) }
    dend_41 { pt3dadd( -29.7792, -89.8916, -8.21224, 0.22 ) }
    dend_41 { pt3dadd( -30.263, -89.8555, -8.38203, 0.88 ) }
    dend_41 { pt3dadd( -30.9829, -89.8295, -8.65353, 0.88 ) }
    dend_41 { pt3dadd( -31.666, -89.8447, -8.92971, 0.22 ) }
    dend_41 { pt3dadd( -32.7814, -89.9336, -9.36894, 0.22 ) }
    dend_41 { pt3dadd( -33.5611, -90.0493, -9.67398, 1.03 ) }
    dend_41 { pt3dadd( -33.8215, -90.1034, -9.78141, 1.03 ) }
    dend_41 { pt3dadd( -35.3372, -90.4677, -10.6168, 0.22 ) }
    dend_41 { pt3dadd( -35.8071, -90.6051, -10.9134, 0.22 ) }
    dend_41 { pt3dadd( -36.7536, -90.9187, -11.562, 1.25 ) }
    dend_41 { pt3dadd( -37.6797, -91.2423, -12.188, 1.18 ) }
    dend_41 { pt3dadd( -37.7334, -91.2639, -12.2257, 1.18 ) }
    dend_41 { pt3dadd( -39.3868, -92.0461, -13.4726, 0.22 ) }
    dend_41 { pt3dadd( -39.7975, -92.2851, -13.8096, 1.18 ) }
    dend_41 { pt3dadd( -40.0971, -92.4906, -14.0844, 1.18 ) }
    dend_41 { pt3dadd( -40.9579, -93.285, -15.0866, 0.22 ) }
    dend_41 { pt3dadd( -41.1452, -93.4806, -15.3333, 0.22 ) }
    dend_41 { pt3dadd( -41.5804, -93.9197, -15.9383, 0.66 ) }
    dend_41 { pt3dadd( -41.7841, -94.1348, -16.2217, 0.81 ) }
    dend_41 { pt3dadd( -41.9594, -94.318, -16.4713, 0.81 ) }
    dend_41 { pt3dadd( -42.8173, -95.1723, -17.7673, 0.52 ) }
    dend_41 { pt3dadd( -43.7074, -96.1075, -19.1723, 0.22 ) }
    dend_41 { pt3dadd( -44.4669, -96.8956, -20.3302, 0.22 ) }
    dend_41 { pt3dadd( -44.9419, -97.3823, -21.0289, 2.21 ) }
    dend_41 { pt3dadd( -45.4184, -97.8591, -21.6788, 2.28 ) }
    dend_41 { pt3dadd( -47.4143, -99.8361, -24.1584, 0.22 ) }
    dend_41 { pt3dadd( -47.8669, -100.283, -24.6448, 0.22 ) }
    dend_41 { pt3dadd( -48.6993, -101.132, -25.4529, 0.22 ) }
    dend_41 { pt3dadd( -48.7362, -101.167, -25.4825, 0.22 ) }
    dend_41 { pt3dadd( -49.3998, -101.718, -25.8754, 0.37 ) }
    dend_41 { pt3dadd( -49.9165, -102.084, -26.0223, 0.88 ) }
    dend_41 { pt3dadd( -50.8976, -102.682, -26.0142, 1.69 ) }
    dend_41 { pt3dadd( -51.4783, -103.003, -25.9995, 2.21 ) }
    dend_41 { pt3dadd( -52.3823, -103.5, -25.9523, 2.21 ) }
    dend_41 { pt3dadd( -53.1627, -103.948, -25.9333, 1.11 ) }
    dend_41 { pt3dadd( -53.8397, -104.379, -25.9513, 0.37 ) }
    dend_41 { pt3dadd( -53.8864, -104.416, -25.9546, 0.37 ) }
    dend_41 { pt3dadd( -54.7087, -105.218, -26.0241, 0.37 ) }
    dend_41 { pt3dadd( -55.0226, -105.584, -26.0356, 0.74 ) }
    dend_41 { pt3dadd( -55.1101, -105.703, -26.0312, 0.74 ) }
    dend_41 { pt3dadd( -55.4821, -106.246, -25.9923, 0.66 ) }
    dend_41 { pt3dadd( -55.9916, -106.985, -25.9086, 0.66 ) }
    dend_41 { pt3dadd( -56.394, -107.537, -25.8352, 0.52 ) }
    dend_41 { pt3dadd( -57.2292, -108.624, -25.6533, 0.22 ) }
    dend_41 { pt3dadd( -57.8389, -109.41, -25.5251, 1.47 ) }
    dend_41 { pt3dadd( -58.2736, -109.983, -25.4792, 1.92 ) }
    dend_41 { pt3dadd( -58.6481, -110.471, -25.4689, 2.14 ) }
    dend_41 { pt3dadd( -59.2316, -111.239, -25.5155, 0.74 ) }
    dend_41 { pt3dadd( -59.641, -111.809, -25.5993, 0.29 ) }
    dend_41 { pt3dadd( -60.0954, -112.457, -25.7645, 0.29 ) }
    dend_41 { pt3dadd( -61.0078, -113.78, -26.1626, 0.29 ) }
    dend_41 { pt3dadd( -61.3326, -114.293, -26.3192, 1.33 ) }
    dend_41 { pt3dadd( -61.7282, -114.947, -26.5135, 1.33 ) }
    dend_41 { pt3dadd( -61.8751, -115.202, -26.5766, 1.33 ) }
    dend_41 { pt3dadd( -62.4956, -116.224, -26.8317, 0.29 ) }
    dend_41 { pt3dadd( -62.8403, -116.742, -26.9416, 0.29 ) }
    dend_41 { pt3dadd( -63.562, -117.741, -27.1086, 0.29 ) }
    dend_41 { pt3dadd( -63.6027, -117.796, -27.1192, 0.29 ) }
    dend_41 { pt3dadd( -64.1226, -118.491, -27.2522, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( -64.8473, -119.416, -27.4306, 1.18 ) }
    dend_41 { pt3dadd( -65.0526, -119.672, -27.4818, 1.33 ) }
    dend_41 { pt3dadd( -65.8726, -120.7, -27.7055, 0.22 ) }
    dend_41 { pt3dadd( -65.9148, -120.754, -27.7173, 0.22 ) }
    dend_41 { pt3dadd( -66.309, -121.331, -27.8359, 0.88 ) }
    dend_41 { pt3dadd( -66.513, -121.692, -27.9004, 0.88 ) }
    dend_41 { pt3dadd( -67.0196, -122.886, -28.0512, 0.22 ) }
    dend_41 { pt3dadd( -67.2771, -123.565, -28.1342, 1.33 ) }
    dend_41 { pt3dadd( -67.3967, -123.899, -28.1647, 1.77 ) }
    dend_41 { pt3dadd( -67.714, -124.749, -28.2314, 0.88 ) }
    dend_41 { pt3dadd( -68.0051, -125.492, -28.2782, 0.22 ) }
    dend_41 { pt3dadd( -68.34, -126.285, -28.2936, 0.59 ) }
    dend_41 { pt3dadd( -68.9055, -127.507, -28.2458, 0.22 ) }
    dend_41 { pt3dadd( -69.3359, -128.385, -28.1817, 0.22 ) }
    dend_41 { pt3dadd( -69.648, -128.991, -28.1153, 1.18 ) }
    dend_41 { pt3dadd( -69.8564, -129.366, -28.0573, 1.18 ) }
    dend_41 { pt3dadd( -70.4093, -130.272, -27.8846, 0.15 ) }
    dend_41 { pt3dadd( -70.7563, -130.801, -27.7778, 0.15 ) }
    dend_41 { pt3dadd( -71.2295, -131.531, -27.63, 0.88 ) }
    dend_41 { pt3dadd( -71.4231, -131.826, -27.5776, 1.11 ) }
    dend_41 { pt3dadd( -71.9877, -132.587, -27.5528, 0.37 ) }
    dend_41 { pt3dadd( -72.5649, -133.303, -27.6253, 0.22 ) }
    dend_41 { pt3dadd( -72.9857, -133.821, -27.7493, 1.18 ) }
    dend_41 { pt3dadd( -73.3062, -134.205, -27.8756, 1.18 ) }
    dend_41 { pt3dadd( -73.3509, -134.254, -27.8957, 1.18 ) }
    dend_41 { pt3dadd( -74.8333, -135.854, -28.6158, 0.22 ) }
    dend_41 { pt3dadd( -74.9063, -135.93, -28.6527, 0.37 ) }
    dend_41 { pt3dadd( -75.4809, -136.507, -28.9568, 0.15 ) }
    dend_41 { pt3dadd( -75.7359, -136.763, -29.0848, 0.59 ) }
    dend_41 { pt3dadd( -76.7344, -137.777, -29.5235, 0.22 ) }
    dend_41 { pt3dadd( -77.1928, -138.275, -29.6914, 1.03 ) }
    dend_41 { pt3dadd( -77.3543, -138.468, -29.7335, 1.03 ) }
    dend_41 { pt3dadd( -78.3696, -139.812, -29.9681, 0.22 ) }
    dend_41 { pt3dadd( -78.5878, -140.125, -30.0081, 0.52 ) }
    dend_41 { pt3dadd( -79.1343, -141.017, -30.0608, 0.22 ) }
    dend_41 { pt3dadd( -79.4158, -141.547, -30.0554, 1.03 ) }
    dend_41 { pt3dadd( -79.5871, -141.89, -30.0332, 1.03 ) }
    dend_41 { pt3dadd( -80.2379, -143.188, -29.9078, 0.15 ) }
    dend_41 { pt3dadd( -80.4735, -143.653, -29.8373, 0.44 ) }
    dend_41 { pt3dadd( -80.9154, -144.509, -29.7208, 0.15 ) }
    dend_41 { pt3dadd( -81.134, -144.932, -29.6712, 0.88 ) }
    dend_41 { pt3dadd( -81.4264, -145.499, -29.6547, 0.88 ) }
    dend_41 { pt3dadd( -81.9812, -146.625, -29.7153, 0.22 ) }
    dend_41 { pt3dadd( -82.5408, -147.621, -29.9875, 0.22 ) }
    dend_41 { pt3dadd( -82.7105, -147.872, -30.0992, 0.66 ) }
    dend_41 { pt3dadd( -82.8707, -148.102, -30.2053, 0.66 ) }
    dend_41 { pt3dadd( -83.9062, -149.444, -30.8554, 0.37 ) }
    dend_41 { pt3dadd( -84.3086, -149.941, -31.1037, 1.25 ) }
    dend_41 { pt3dadd( -86.1975, -152.321, -32.2859, 0.44 ) }
    dend_41 { pt3dadd( -88.3476, -155.069, -33.624, 0.15 ) }
    dend_41 { pt3dadd( -89.0974, -156.049, -34.0639, 0.96 ) }
    dend_41 { pt3dadd( -89.9738, -157.251, -34.5489, 0.29 ) }
    dend_41 { pt3dadd( -90.2188, -157.62, -34.673, 0.52 ) }
    dend_41 { pt3dadd( -91.2081, -159.324, -35.2113, 0.22 ) }
    dend_41 { pt3dadd( -91.3424, -159.651, -35.3051, 0.66 ) }
    dend_41 { pt3dadd( -91.5455, -160.242, -35.543, 0.66 ) }
    dend_41 { pt3dadd( -92.0596, -161.535, -36.1434, 0.15 ) }
    dend_41 { pt3dadd( -92.4325, -162.324, -36.5396, 0.15 ) }
    dend_41 { pt3dadd( -92.9602, -163.315, -37.0716, 1.03 ) }
    dend_41 { pt3dadd( -93.135, -163.596, -37.2381, 1.03 ) }
    dend_41 { pt3dadd( -94.5501, -165.681, -38.563, 0.22 ) }
    dend_41 { pt3dadd( -95.4189, -166.815, -39.3525, 0.22 ) }
    dend_41 { pt3dadd( -96.3088, -167.792, -40.0932, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -64.8707, 141.708, -102.154, 0.22 ) }
    dend_7 { pt3dadd( -65.8673, 140.989, -102.859, 0.22 ) }
    dend_7 { pt3dadd( -66.4057, 140.617, -103.236, 0.22 ) }
    dend_7 { pt3dadd( -67.4367, 139.902, -103.928, 0.59 ) }
    dend_7 { pt3dadd( -68.6433, 139.07, -104.697, 0.15 ) }
    dend_7 { pt3dadd( -68.9732, 138.841, -104.903, 0.81 ) }
    dend_7 { pt3dadd( -69.5564, 138.437, -105.266, 1.11 ) }
    dend_7 { pt3dadd( -70.4883, 137.814, -105.821, 0.22 ) }
    dend_7 { pt3dadd( -71.0549, 137.42, -106.165, 1.03 ) }
    dend_7 { pt3dadd( -71.4326, 137.14, -106.396, 1.33 ) }
    dend_7 { pt3dadd( -71.5166, 137.087, -106.431, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -64.8707, 141.708, -102.154, 0.22 ) }
    dend_6 { pt3dadd( -65.9653, 142.053, -101.892, 0.22 ) }
    dend_6 { pt3dadd( -67.0089, 142.368, -101.501, 0.22 ) }
    dend_6 { pt3dadd( -67.6312, 142.552, -101.252, 1.25 ) }
    dend_6 { pt3dadd( -67.681, 142.57, -101.227, 1.25 ) }
    dend_6 { pt3dadd( -69.0769, 143.122, -100.465, 0.15 ) }
    dend_6 { pt3dadd( -69.673, 143.392, -100.129, 0.15 ) }
    dend_6 { pt3dadd( -70.9034, 144.054, -99.2822, 0.96 ) }
    dend_6 { pt3dadd( -71.2627, 144.275, -99.0302, 1.18 ) }
    dend_6 { pt3dadd( -72.1746, 144.865, -98.3746, 0.15 ) }
    dend_6 { pt3dadd( -72.2164, 144.892, -98.3438, 0.15 ) }
    dend_6 { pt3dadd( -72.8565, 145.35, -97.8472, 0.15 ) }
    dend_6 { pt3dadd( -74.0164, 146.222, -96.9499, 0.15 ) }
    dend_6 { pt3dadd( -74.5466, 146.653, -96.6188, 0.66 ) }
    dend_6 { pt3dadd( -74.7656, 146.814, -96.4919, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 89/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -96.3088, -167.792, -40.0932, 0.22 ) }
    dend_45 { pt3dadd( -99.1295, -167.803, -40.9019, 0.22 ) }
    dend_45 { pt3dadd( -100.411, -167.803, -41.1963, 0.22 ) }
    dend_45 { pt3dadd( -101.026, -167.825, -41.395, 1.03 ) }
    dend_45 { pt3dadd( -101.314, -167.84, -41.488, 1.33 ) }
    dend_45 { pt3dadd( -104.07, -167.994, -42.3811, 0.22 ) }
    dend_45 { pt3dadd( -106.093, -168.077, -43.059, 0.22 ) }
    dend_45 { pt3dadd( -106.736, -168.088, -43.2759, 0.88 ) }
    dend_45 { pt3dadd( -109.529, -168.138, -44.3295, 0.22 ) }
    dend_45 { pt3dadd( -111.16, -168.166, -44.9033, 0.22 ) }
    dend_45 { pt3dadd( -111.224, -168.17, -44.9215, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_45 { pt3dadd( -113.202, -168.359, -45.3325, 0.22 ) }
    dend_45 { pt3dadd( -113.318, -168.375, -45.3536, 0.22 ) }
    dend_45 { pt3dadd( -115.056, -168.719, -45.5441, 0.22 ) }
    dend_45 { pt3dadd( -116.865, -169.256, -45.6049, 0.22 ) }
    dend_45 { pt3dadd( -118.877, -170.14, -45.6869, 0.22 ) }
    dend_45 { pt3dadd( -118.945, -170.178, -45.6884, 0.22 ) }
    dend_45 { pt3dadd( -119.711, -170.725, -45.6829, 0.74 ) }
    dend_45 { pt3dadd( -120.139, -171.1, -45.6952, 0.74 ) }
    dend_45 { pt3dadd( -121.631, -172.867, -45.9344, 0.22 ) }
    dend_45 { pt3dadd( -122.493, -174.076, -46.2119, 0.22 ) }
    dend_45 { pt3dadd( -122.801, -174.522, -46.3201, 0.29 ) }
    dend_45 { pt3dadd( -122.939, -174.732, -46.3574, 0.37 ) }
    dend_45 { pt3dadd( -123.856, -176.152, -46.6018, 0.15 ) }
    dend_45 { pt3dadd( -125.415, -178.623, -46.9648, 0.15 ) }
    dend_45 { pt3dadd( -125.456, -178.689, -46.972, 0.15 ) }
    dend_45 { pt3dadd( -126.748, -180.662, -47.1392, 0.15 ) }
    dend_45 { pt3dadd( -129.568, -184.726, -47.3298, 0.15 ) }
    dend_45 { pt3dadd( -130.569, -186.097, -47.3739, 0.44 ) }
    dend_45 { pt3dadd( -131.39, -187.186, -47.3804, 0.15 ) }
    dend_45 { pt3dadd( -133.465, -189.88, -47.3205, 0.15 ) }
    dend_45 { pt3dadd( -134.705, -191.472, -47.2898, 0.37 ) }
    dend_45 { pt3dadd( -135.945, -193.011, -47.2686, 0.15 ) }
    dend_45 { pt3dadd( -137.342, -194.533, -47.1701, 0.59 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -96.3088, -167.792, -40.0932, 0.22 ) }
    dend_42 { pt3dadd( -96.8292, -170.15, -40.1406, 0.22 ) }
    dend_42 { pt3dadd( -97.3382, -172.678, -40.2399, 0.22 ) }
    dend_42 { pt3dadd( -97.9147, -175.542, -40.3524, 0.22 ) }
    dend_42 { pt3dadd( -98.065, -176.288, -40.3817, 1.33 ) }
    dend_42 { pt3dadd( -98.2989, -177.449, -40.4273, 1.33 ) }
    dend_42 { pt3dadd( -98.6279, -179.084, -40.4915, 0.22 ) }
    dend_42 { pt3dadd( -98.706, -179.482, -40.5135, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -71.5166, 137.087, -106.431, 0.22 ) }
    dend_9 { pt3dadd( -72.8003, 136.444, -106.871, 0.22 ) }
    dend_9 { pt3dadd( -73.313, 136.187, -107.047, 0.59 ) }
    dend_9 { pt3dadd( -74.136, 135.775, -107.329, 0.22 ) }
    dend_9 { pt3dadd( -74.6114, 135.537, -107.492, 0.66 ) }
    dend_9 { pt3dadd( -74.6714, 135.507, -107.513, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -71.5166, 137.087, -106.431, 0.15 ) }
    dend_8 { pt3dadd( -70.8259, 135.013, -106.819, 0.15 ) }
    dend_8 { pt3dadd( -70.3468, 133.575, -107.088, 0.29 ) }
    dend_8 { pt3dadd( -70.1487, 132.981, -107.199, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 41/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -98.706, -179.482, -40.5135, 0.29 ) }
    dend_44 { pt3dadd( -98.2055, -180.354, -41.3587, 0.29 ) }
    dend_44 { pt3dadd( -97.8516, -180.971, -41.9565, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -98.706, -179.482, -40.5135, 0.22 ) }
    dend_43 { pt3dadd( -100.377, -181.051, -40.282, 0.22 ) }
    dend_43 { pt3dadd( -101.265, -181.922, -40.1705, 0.44 ) }
    dend_43 { pt3dadd( -102.405, -183.268, -40.0979, 0.15 ) }
    dend_43 { pt3dadd( -103.74, -184.921, -40.0372, 0.15 ) }
    dend_43 { pt3dadd( -104.114, -185.398, -40.0208, 0.81 ) }
    dend_43 { pt3dadd( -104.358, -185.72, -40.01, 0.81 ) }
    dend_43 { pt3dadd( -106.75, -189.001, -39.9168, 0.15 ) }
    dend_43 { pt3dadd( -109.656, -193.409, -39.8642, 0.15 ) }
    dend_43 { pt3dadd( -109.656, -193.409, -39.8642, 0.37 ) }
    dend_43 { pt3dadd( -110.23, -194.447, -39.9055, 0.15 ) }
    dend_43 { pt3dadd( -110.494, -194.959, -39.9265, 0.81 ) }
    dend_43 { pt3dadd( -110.776, -195.547, -39.9542, 0.81 ) }
    dend_43 { pt3dadd( -111.454, -197.263, -40.0527, 0.15 ) }
    dend_43 { pt3dadd( -111.673, -197.872, -40.0736, 0.44 ) }
    dend_43 { pt3dadd( -111.788, -198.17, -40.1082, 0.44 ) }
    dend_43 { pt3dadd( -112.16, -199.116, -40.2593, 0.15 ) }
    dend_43 { pt3dadd( -112.316, -199.498, -40.307, 0.66 ) }
    dend_43 { pt3dadd( -112.364, -199.613, -40.3178, 0.66 ) }
    dend_43 { pt3dadd( -112.604, -200.181, -40.3626, 0.66 ) }
    dend_43 { pt3dadd( -114.08, -203.694, -40.6555, 0.15 ) }
    dend_43 { pt3dadd( -114.398, -204.451, -40.7207, 0.44 ) }
    dend_43 { pt3dadd( -116.354, -209.157, -41.1398, 0.15 ) }
    dend_43 { pt3dadd( -118.183, -213.57, -41.5195, 0.15 ) }
    dend_43 { pt3dadd( -118.242, -213.713, -41.5306, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_14 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_37 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_34 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_25 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_19 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_39 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_13 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_46 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_26 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_7 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_6 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_43 OneSecGrp_SectionRef_52.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_14 nseg = 3
    dend_11 nseg = 3
    dend_29 nseg = 3
    dend_20 nseg = 3
    dend_12 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_48 nseg = 7
    dend_37 nseg = 3
    dend_34 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 5
    dend_28 nseg = 7
    dend_25 nseg = 5
    dend_21 nseg = 3
    dend_19 nseg = 3
    dend_16 nseg = 5
    dend_10 nseg = 7
    dend_3 nseg = 5
    dend_47 nseg = 5
    dend_18 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_41 nseg = 7
    dend_45 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_SBC_655c77b594_0_0


