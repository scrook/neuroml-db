// Cell: bAC217_L4_DBC_ba1da59a9a_0_0
/*
{
  "id" : "bAC217_L4_DBC_ba1da59a9a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.72142, 10.9655, 0.761584, 2.84462", "1.58182, 9.77504, 0.687603, 4.62864", "1.44222, 8.58452, 0.613623, 7.50202", "1.30262, 7.39401, 0.539642, 9.47415", "1.16302, 6.2035, 0.465661, 11.0555", "1.02343, 5.01299, 0.391681, 12.4342", "0.883829, 3.82247, 0.3177, 13.5523", "0.744231, 2.63196, 0.243719, 14.3411", "0.604633, 1.44145, 0.169739, 14.9091", "0.465035, 0.250937, 0.0957582, 15.2878", "0.325437, -0.939575, 0.0217776, 15.5461", "0.185839, -2.13009, -0.0522031, 15.5537", "0.0462405, -3.3206, -0.126184, 15.1598", "-0.0933575, -4.51111, -0.200164, 14.7587", "-0.232956, -5.70162, -0.274145, 14.0408", "-0.372554, -6.89214, -0.348126, 13.1988", "-0.512152, -8.08265, -0.422106, 12.1253", "-0.65175, -9.27316, -0.496087, 10.5491", "-0.791348, -10.4637, -0.570068, 8.74654", "-0.930946, -11.6542, -0.644048, 6.27284", "-1.07054, -12.8447, -0.718029, 3.68979" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.07622, -6.77913, -17.6726, 3.85", "3.94615, -6.18062, -16.8912, 3.85", "4.84971, -5.55897, -16.0797, 3.85" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.643782, -13.4151, -2.03262, 2.64", "-0.482193, -15.0908, -0.858869, 1.92", "-0.34721, -16.3501, -0.0824965, 1.8", "-0.216222, -17.3554, 0.426484, 1.92", "0.185703, -20.0359, 1.52715, 1.32", "0.402867, -21.2495, 1.93041, 1.56", "0.655814, -22.451, 2.24724, 1.8", "0.899104, -23.4179, 2.34584, 2.04", "1.33281, -24.9168, 2.31856, 2.16", "1.63354, -25.8875, 2.1773, 1.32", "1.96871, -26.9876, 1.94842, 1.44", "2.35016, -28.425, 1.71036, 1.44", "2.58576, -29.5532, 1.58201, 1.8", "2.6914, -30.34, 1.52355, 2.04", "2.72964, -31.4588, 1.48927, 1.68", "2.62976, -33.1333, 1.4613, 1.44", "2.49962, -33.9674, 1.45664, 1.8", "2.33746, -34.6519, 1.46401, 2.04", "2.07161, -35.5866, 1.49394, 1.92", "1.78571, -36.4485, 1.51856, 1.56", "1.40927, -37.504, 1.50002, 1.56", "1.15591, -38.2089, 1.39999, 0.72", "0.978182, -38.7378, 1.31285, 0.48", "0.842574, -39.1561, 1.25807, 0.48", "0.529551, -40.1469, 1.16772, 1.32", "0.270822, -40.9785, 1.09606, 1.68", "-0.208095, -42.5257, 0.91758, 1.56", "-0.477864, -43.3956, 0.818954, 1.92", "-0.868599, -44.6889, 0.680283, 2.64", "-1.13938, -45.6501, 0.606182, 2.76", "-1.34086, -46.5045, 0.579762, 2.76", "-1.55998, -47.7152, 0.614995, 1.68", "-1.6478, -48.4934, 0.667713, 0.96", "-1.69315, -49.5192, 0.727468, 0.96", "-1.66653, -50.8421, 0.793193, 1.32", "-1.552, -52.7448, 0.909579, 1.8", "-1.4852, -53.5751, 0.971354, 2.16", "-1.40165, -54.5283, 1.0358, 2.28", "-1.30036, -55.6976, 1.08849, 0.84", "-1.25319, -56.4641, 1.1017, 0.84", "-1.2257, -57.5983, 1.0756, 1.08", "-1.30066, -58.7871, 1.01259, 1.68", "-1.46403, -59.7101, 0.95678, 2.52", "-1.57404, -60.0887, 0.913541, 3.0", "-1.7298, -60.4974, 0.847553, 2.88", "-1.83107, -60.7222, 0.808936, 2.88", "-2.256, -61.5746, 0.65242, 2.16", "-2.95118, -62.8928, 0.523151, 0.96", "-3.48414, -63.8951, 0.452685, 0.48", "-3.67086, -64.2412, 0.429521, 0.48", "-4.32579, -65.4419, 0.357937, 1.92", "-4.96217, -66.5804, 0.306683, 3.12", "-5.67902, -67.8786, 0.297863, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.64622, 11.5329, 0.167383, 2.16", "3.15808, 13.6425, 0.894906, 1.44", "3.67896, 15.6663, 1.55697, 2.16", "4.26355, 17.8746, 2.23104, 3.25", "4.67494, 19.3689, 2.67041, 3.49", "5.15145, 21.0567, 3.24425, 3.25", "5.48576, 22.2409, 3.64685, 2.88", "5.74318, 23.1396, 3.99392, 2.88", "6.02128, 24.0659, 4.31722, 2.52", "6.54935, 25.7007, 4.91169, 2.16", "7.31149, 27.9225, 5.74237, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.07054, -12.8447, -0.718029, 0.781141", "-2.81746, -27.7426, -0.718029, 0.781141", "-4.56437, -42.6406, -0.718029, 0.781141" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.84971, -5.55897, -16.0797, 1.56", "3.72131, -2.64252, -17.1468, 1.56", "3.30309, -1.40282, -17.5993, 1.2", "3.05319, -0.51801, -17.9287, 0.96", "2.81146, 0.54457, -18.2819, 0.96", "2.46559, 2.43074, -18.8951, 1.32", "2.15523, 4.59731, -19.4654, 1.32", "2.007, 6.38251, -19.7536, 1.44", "1.97895, 7.92581, -19.9409, 1.44", "2.04839, 9.57936, -20.0616, 1.44", "2.14665, 10.8902, -20.0794, 1.68", "2.33367, 13.2832, -19.966, 2.88", "2.38947, 14.3038, -19.8554, 3.73", "2.38943, 15.9168, -19.6486, 3.73", "2.24319, 18.014, -19.385, 2.88", "1.9229, 20.3714, -19.15, 1.68", "1.70401, 21.4643, -19.0599, 1.2", "1.4592, 22.46, -19.0295, 0.96", "1.08576, 23.74, -18.9894, 1.68", "0.585778, 25.1505, -18.9459, 2.88", "0.30954, 25.7637, -18.9318, 3.49", "-0.0730332, 26.4539, -18.9382, 3.61" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.84971, -5.55897, -16.0797, 1.32", "6.81932, -6.46448, -16.018, 1.32", "7.61314, -6.81381, -16.1073, 0.84", "8.76733, -7.34987, -16.3392, 1.2", "10.0315, -8.02204, -16.7115, 1.44", "11.304, -8.89941, -17.2433, 1.32", "12.3157, -9.82411, -17.772, 1.56", "13.2898, -11.1871, -18.5959, 1.2", "13.5637, -11.6984, -18.9205, 1.2", "13.8609, -12.5941, -19.5007, 1.2", "14.0982, -14.1493, -20.4647, 2.64", "14.129, -15.4649, -21.1636, 4.45", "14.1093, -16.5089, -21.5392, 4.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-5.67902, -67.8786, 0.297863, 3.0", "-6.47958, -68.7167, 0.471154, 3.0", "-6.93454, -69.2674, 0.57688, 2.76", "-7.63855, -70.2444, 0.800748, 1.92", "-7.86341, -70.6191, 0.896953, 1.92", "-8.29381, -71.494, 1.12479, 0.6", "-8.53905, -72.1054, 1.2695, 0.48", "-8.58884, -72.347, 1.31621, 0.48", "-8.65127, -72.9811, 1.42132, 0.48", "-8.64968, -73.7518, 1.51809, 0.84", "-8.57031, -74.6264, 1.60872, 1.08", "-8.41922, -75.487, 1.71393, 1.32", "-8.20769, -76.3339, 1.80357, 0.96", "-8.01804, -76.9284, 1.86261, 0.72", "-7.78489, -77.5445, 1.91394, 0.6", "-7.3457, -78.5098, 2.02881, 0.48", "-6.86033, -79.4033, 2.11858, 0.48", "-6.33615, -80.2467, 2.19394, 1.44", "-5.75047, -81.1159, 2.2566, 1.92", "-5.30173, -81.7554, 2.31667, 2.04", "-4.71775, -82.6234, 2.40942, 1.44", "-4.02283, -83.7094, 2.50874, 0.84", "-3.83033, -84.0468, 2.56964, 0.12", "-3.60691, -84.5294, 2.71863, 0.12", "-3.3548, -85.3314, 3.10419, 1.32", "-3.18471, -86.1913, 3.61461, 1.68", "-3.13104, -86.5993, 3.87352, 1.8", "-2.92419, -88.2831, 4.98104, 1.2", "-2.85598, -89.0058, 5.43983, 1.68", "-2.7245, -90.1998, 6.19905, 1.2", "-2.65125, -90.9583, 6.69034, 0.24", "-2.61719, -91.4674, 7.03541, 0.24", "-2.58745, -92.3728, 7.62583, 1.92", "-2.61614, -92.9887, 7.97557, 1.8", "-2.98772, -94.8964, 9.04363, 0.72", "-3.31496, -95.8626, 9.56337, 0.72", "-3.63564, -96.5014, 9.90604, 0.48", "-3.93504, -96.9437, 10.161, 0.36", "-4.47608, -97.6095, 10.5311, 0.36", "-4.78828, -98.0277, 10.7195, 0.36", "-5.39892, -99.061, 11.2233, 0.6", "-5.53107, -99.4459, 11.4356, 0.6", "-5.66433, -99.9316, 11.7988, 0.36", "-5.76804, -100.292, 12.1185, 0.36", "-5.87731, -100.734, 12.535, 0.36", "-6.23163, -102.003, 13.7925, 0.36", "-6.33134, -102.25, 14.0464, 0.36", "-6.67589, -103.044, 14.9564, 1.44", "-6.81078, -103.349, 15.3383, 1.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.67902, -67.8786, 0.297863, 0.12", "-5.9682, -69.6303, 0.0598785, 0.12", "-6.10641, -70.2596, -0.105371, 0.12", "-6.2452, -70.8418, -0.287956, 0.96", "-6.38743, -71.513, -0.508972, 1.32", "-6.47794, -72.0267, -0.684875, 1.32", "-6.63132, -73.1482, -1.07376, 0.6", "-6.73877, -73.9865, -1.46579, 0.36", "-6.75184, -74.2064, -1.5823, 0.36", "-6.72434, -74.7446, -1.87731, 0.36", "-6.67886, -75.0887, -2.04006, 0.36", "-6.63369, -75.446, -2.17497, 0.36", "-6.59986, -76.1131, -2.35492, 0.36", "-6.62179, -76.559, -2.43474, 0.36", "-6.69204, -77.1978, -2.60991, 0.36", "-6.81377, -77.926, -2.81748, 1.08", "-7.01956, -78.9041, -3.09234, 1.68", "-7.19146, -79.6164, -3.2882, 1.8", "-7.43637, -80.5412, -3.51718, 1.56", "-7.7739, -81.9127, -3.90011, 1.2", "-7.90326, -82.5438, -4.08372, 0.36", "-7.95155, -82.8864, -4.16359, 0.36", "-7.98581, -83.2819, -4.19411, 0.36", "-8.02175, -84.2309, -4.17284, 1.56", "-8.02261, -84.9596, -4.11309, 1.92", "-8.00273, -85.8658, -3.97922, 1.92", "-7.93253, -87.1059, -3.8016, 1.08", "-7.83751, -88.1602, -3.6175, 0.36", "-7.74709, -89.0168, -3.44542, 0.36", "-7.6823, -89.6117, -3.25231, 0.36", "-7.66159, -89.8443, -3.16225, 0.36", "-7.61793, -90.427, -2.93286, 0.96", "-7.58012, -91.0493, -2.67115, 1.8", "-7.54759, -91.7539, -2.41191, 2.16", "-7.49783, -93.8011, -1.69821, 1.92", "-7.50179, -94.8048, -1.40299, 1.8", "-7.53018, -95.6664, -1.2321, 1.8", "-7.59921, -96.6965, -1.22827, 1.2", "-7.73369, -98.1776, -1.6289, 0.12", "-7.75534, -98.4036, -1.73278, 0.12", "-7.817, -99.0215, -2.09535, 0.12", "-7.88972, -99.7666, -2.53656, 0.84", "-7.99195, -101.004, -3.2895, 1.08", "-8.06448, -102.115, -3.94499, 1.92", "-8.10574, -102.999, -4.38311, 2.88", "-8.13247, -103.559, -4.63463, 2.88", "-8.1677, -104.276, -4.94232, 1.92", "-8.23427, -105.299, -5.341, 0.36", "-8.27817, -105.782, -5.4888, 0.36", "-8.34064, -106.392, -5.62426, 1.08", "-8.43217, -107.156, -5.78102, 1.2", "-8.57643, -108.3, -5.97413, 0.48", "-8.69797, -109.286, -6.11668, 0.48", "-8.81255, -110.149, -6.21618, 0.48", "-8.9981, -111.399, -6.3611, 1.92", "-9.1461, -112.252, -6.45499, 2.4", "-9.28474, -112.98, -6.5235, 2.64", "-9.48974, -113.972, -6.5899, 2.64", "-9.65396, -114.679, -6.65321, 2.04", "-9.90474, -115.596, -6.7557, 0.72", "-10.0418, -116.026, -6.79784, 0.72", "-10.2337, -116.636, -6.81753, 0.72", "-10.403, -117.229, -6.82741, 0.72", "-10.593, -118.006, -6.8208, 0.24", "-10.7309, -118.699, -6.73837, 0.12", "-10.7792, -119.084, -6.65391, 0.12", "-10.8145, -119.807, -6.44693, 0.12", "-10.7695, -120.528, -6.20789, 1.2", "-10.6751, -121.161, -5.99322, 2.28", "-10.2976, -122.985, -5.39501, 1.8", "-10.0579, -123.974, -5.10052, 0.36", "-9.93797, -124.482, -4.99619, 0.36", "-9.75396, -125.52, -4.88675, 0.36", "-9.65581, -126.512, -4.88322, 0.36", "-9.62766, -127.147, -4.97488, 0.36", "-9.66149, -128.128, -5.26601, 0.36", "-9.82898, -129.343, -5.67751, 1.56", "-10.0175, -130.272, -5.99989, 2.4", "-10.1447, -130.787, -6.17677, 2.4", "-10.3519, -131.673, -6.45894, 2.4", "-10.6067, -133.035, -6.82649, 0.48", "-10.6836, -133.58, -6.93861, 0.48", "-10.7406, -134.442, -7.04421, 0.6", "-10.7355, -135.184, -7.11003, 0.36", "-10.6939, -136.061, -7.17427, 0.36", "-10.6362, -136.903, -7.21594, 0.48", "-10.576, -137.517, -7.26316, 0.36", "-10.497, -138.262, -7.3588, 0.36", "-10.4403, -138.992, -7.49206, 0.36", "-10.4361, -139.46, -7.61544, 0.48", "-10.4801, -140.156, -7.86473, 0.48", "-10.5935, -140.995, -8.18286, 0.36", "-10.6928, -141.59, -8.40939, 0.84", "-10.8743, -142.553, -8.73387, 1.32", "-11.1319, -143.812, -9.10007, 2.16", "-11.3516, -144.769, -9.35168, 2.64", "-11.5955, -145.755, -9.5816, 2.28", "-11.888, -146.859, -9.76335, 1.8", "-12.1795, -147.998, -9.90487, 1.2", "-12.3298, -148.652, -9.89377, 0.48", "-12.5327, -149.739, -9.7601, 0.36", "-12.6481, -150.48, -9.61312, 0.36", "-12.7356, -151.236, -9.42426, 1.08", "-12.781, -151.995, -9.18426, 1.08", "-12.7601, -154.154, -8.45554, 1.44", "-12.681, -155.372, -8.04702, 1.44", "-12.5969, -156.216, -7.73321, 1.32", "-12.5126, -157.038, -7.45959, 0.48", "-12.4465, -157.718, -7.29104, 0.48", "-12.4186, -158.132, -7.20896, 1.08", "-12.386, -158.913, -7.11415, 1.68", "-12.3835, -160.19, -6.91619, 2.28", "-12.4306, -161.063, -6.80591, 2.4", "-12.5514, -162.184, -6.72721, 1.32", "-12.6803, -162.941, -6.70028, 0.6", "-12.7914, -163.435, -6.73988, 0.48", "-13.0288, -164.214, -6.94326, 0.48", "-13.275, -164.907, -7.22995, 0.48", "-13.5461, -165.677, -7.69632, 1.08", "-13.7407, -166.339, -8.14196, 1.92", "-14.0821, -167.75, -9.19228, 1.92", "-14.3089, -168.908, -10.0891, 2.28", "-14.4266, -169.674, -10.6862, 2.76", "-14.6573, -171.535, -12.0741, 2.76", "-14.8045, -172.972, -13.0428, 0.72", "-14.8899, -174.079, -13.6921, 0.72", "-14.9443, -174.94, -14.0886, 0.96", "-15.0007, -175.658, -14.3503, 1.56", "-15.1077, -176.521, -14.5927, 1.8", "-15.2286, -177.289, -14.7068, 1.44", "-15.3432, -178.182, -14.8105, 0.48", "-15.3573, -178.536, -14.8374, 0.6", "-15.3314, -179.484, -14.9015, 0.6", "-15.3035, -179.928, -14.9205, 0.48", "-15.2327, -180.952, -14.9468, 0.48", "-15.1935, -181.751, -14.9572, 0.48", "-15.1796, -182.738, -14.9292, 0.48", "-15.2056, -183.716, -14.9043, 0.84", "-15.3014, -184.984, -14.8716, 1.68", "-15.4702, -186.36, -14.8342, 2.4", "-15.6018, -187.256, -14.8071, 2.4", "-15.7804, -188.507, -14.7811, 0.6", "-15.8704, -189.374, -14.7663, 0.6", "-15.8968, -190.504, -14.7848, 0.6", "-15.8208, -191.506, -14.8241, 0.6", "-15.6768, -192.33, -14.8482, 1.08", "-15.4782, -193.139, -14.8596, 1.44", "-15.2694, -193.856, -14.8608, 0.84", "-15.0326, -194.653, -14.8269, 0.96", "-14.7926, -195.567, -14.7711, 0.96", "-14.6603, -196.246, -14.7252, 0.72", "-14.5979, -196.755, -14.6913, 0.48", "-14.5693, -197.213, -14.6594, 0.48", "-14.576, -197.847, -14.6048, 1.32", "-14.6603, -198.889, -14.4999, 1.8", "-14.758, -199.65, -14.4644, 2.04", "-14.9239, -200.674, -14.4698, 1.92", "-15.06, -201.437, -14.5012, 1.44", "-15.2364, -202.387, -14.5873, 0.48", "-15.3928, -203.195, -14.7176, 0.48", "-15.6369, -204.496, -15.0001, 1.44", "-15.8416, -205.628, -15.2676, 2.52", "-16.0057, -206.61, -15.5083, 3.25", "-16.2, -208.015, -15.8628, 2.28", "-16.2887, -208.992, -16.0979, 1.8", "-16.3256, -210.093, -16.333, 0.96", "-16.3161, -211.575, -16.5951, 0.96", "-16.2743, -212.686, -16.7879, 0.96", "-16.1977, -214.114, -17.0176, 2.52", "-16.1286, -215.17, -17.1377, 2.52", "-15.9984, -216.936, -17.2662, 1.44", "-15.9281, -217.806, -17.3088, 0.96", "-15.8389, -218.819, -17.357, 0.72", "-15.799, -219.337, -17.3766, 0.72", "-15.7522, -220.337, -17.4454, 0.72", "-15.7584, -221.087, -17.5365, 0.72", "-15.7865, -221.931, -17.7418, 1.08", "-15.7847, -222.759, -18.1128, 1.44", "-15.7691, -223.063, -18.29, 1.44", "-15.6753, -224.318, -19.1639, 0.36", "-15.5715, -225.382, -19.9874, 0.36", "-15.4186, -226.637, -20.9671, 1.32", "-15.2025, -228.08, -22.0465, 0.48", "-15.0999, -228.674, -22.4542, 0.48", "-14.8642, -229.906, -23.2244, 1.92", "-14.7895, -230.288, -23.4298, 2.76", "-14.632, -231.188, -23.8306, 2.4", "-14.54, -232.042, -24.0538, 1.32", "-14.5303, -232.535, -24.195, 0.12", "-14.5642, -233.013, -24.3855, 0.12", "-14.6088, -233.251, -24.5033, 0.12", "-14.7865, -233.977, -24.944, 1.08", "-14.9088, -234.472, -25.2949, 1.08", "-15.3428, -236.564, -27.0156, 0.24", "-15.3688, -236.86, -27.2688, 0.24", "-15.3378, -237.417, -27.7239, 0.24", "-15.173, -238.085, -28.1809, 0.24", "-14.8511, -238.812, -28.5674, 0.24", "-14.3556, -239.735, -29.0113, 1.08", "-13.8905, -240.543, -29.3093, 2.04", "-13.4875, -241.293, -29.5973, 2.04", "-13.0251, -242.224, -29.9615, 1.44", "-12.8477, -242.694, -30.127, 0.96", "-12.3845, -244.455, -30.6454, 0.72", "-12.2556, -245.18, -30.804, 0.36", "-12.1981, -246.041, -30.974, 0.36", "-12.2072, -246.426, -31.0224, 0.36", "-12.2919, -247.368, -31.0439, 1.32", "-12.3783, -248.158, -30.9907, 2.04", "-12.4205, -248.539, -30.935, 2.4", "-12.4886, -249.091, -30.8503, 2.4", "-12.6666, -250.538, -30.6279, 0.48", "-12.7571, -251.28, -30.5205, 0.36", "-12.9083, -252.626, -30.3691, 0.36", "-12.9883, -253.383, -30.292, 0.36", "-13.0756, -254.216, -30.2193, 1.68", "-13.1215, -254.836, -30.1768, 2.16", "-13.1331, -255.234, -30.1621, 2.16", "-13.1188, -256.28, -30.1184, 0.96", "-13.082, -256.903, -30.118, 0.36", "-13.0488, -257.277, -30.1571, 0.36", "-12.9446, -258.199, -30.3598, 0.36", "-12.8415, -259.102, -30.6231, 0.36", "-12.7687, -259.733, -30.8152, 0.36", "-12.6682, -260.733, -31.1172, 1.44", "-12.5844, -262.109, -31.5005, 2.4", "-12.5675, -262.826, -31.6673, 2.52", "-12.578, -263.169, -31.7297, 2.52", "-12.6722, -264.402, -31.875, 0.48", "-12.7396, -265.168, -31.9262, 0.36", "-12.879, -266.53, -31.8713, 0.36", "-12.9448, -267.143, -31.784, 1.32", "-13.0355, -267.91, -31.646, 1.92", "-13.1098, -268.564, -31.536, 1.92" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.31149, 27.9225, 5.74237, 1.92", "7.37445, 31.2833, 5.68177, 1.92", "7.3726, 32.9068, 5.67279, 2.28", "7.36052, 34.3971, 5.71599, 1.8", "7.35304, 36.1427, 5.79456, 1.8", "7.36177, 38.5153, 5.92052, 1.68", "7.39932, 41.2804, 6.07868, 2.4", "7.44165, 43.3874, 6.33617, 2.88", "7.47728, 44.502, 6.45599, 2.76", "7.53343, 45.5203, 6.58431, 2.76", "7.60449, 46.29, 6.72347, 2.76", "7.73328, 47.1626, 6.92157, 2.52", "8.12448, 49.0163, 7.39354, 1.68", "8.37909, 50.0945, 7.68181, 1.44", "8.67738, 51.3172, 7.99933, 1.68", "9.22662, 53.5434, 8.62308, 2.64", "9.56719, 54.8996, 9.02582, 2.88", "9.77113, 55.6678, 9.26444, 3.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.31149, 27.9225, 5.74237, 0.84", "6.69559, 27.714, 5.88983, 0.84", "5.71605, 27.5991, 6.11576, 0.84", "5.04453, 27.7027, 6.35601, 0.84", "4.84841, 27.7891, 6.46727, 0.84", "4.39348, 28.1706, 6.81526, 0.72", "4.07846, 28.6275, 7.29466, 0.72", "3.96269, 28.9442, 7.66939, 0.72", "3.9526, 29.5383, 8.38478, 0.96", "4.0811, 29.9838, 8.96614, 1.44", "4.3251, 30.4499, 9.58021, 1.56", "4.93134, 31.2505, 10.6937, 1.32", "5.39497, 31.7295, 11.4036, 0.48", "5.82135, 32.0929, 11.9367, 0.6", "6.70346, 32.6979, 12.8314, 0.6", "7.26235, 32.9988, 13.2575, 1.68", "8.2968, 33.3777, 13.7018, 1.92", "9.11169, 33.5602, 13.6178, 1.56", "11.5189, 33.609, 11.9004, 0.48", "11.9856, 33.5521, 11.3235, 0.48", "12.3481, 33.4866, 10.7921, 0.84", "12.5414, 33.4214, 10.41, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.56437, -42.6406, -0.718029, 0.461493", "-6.31129, -57.5385, -0.718029, 0.461493", "-8.0582, -72.4364, -0.718029, 0.461493" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-0.0730332, 26.4539, -18.9382, 0.96", "0.986722, 28.6373, -19.594, 0.96", "1.51494, 29.9135, -19.8858, 0.6", "1.94533, 31.1651, -20.1249, 0.6", "2.13703, 31.8518, -20.2401, 1.32", "2.26974, 32.4744, -20.312, 1.56", "2.44286, 33.689, -20.3974, 0.96", "2.45406, 35.183, -20.3197, 0.6", "2.39963, 35.8903, -20.2556, 0.48", "2.32567, 36.5061, -20.1969, 0.48", "2.17022, 37.7608, -20.0871, 0.72", "2.00325, 39.2704, -19.999, 1.8", "1.89835, 40.6493, -19.9621, 2.04", "1.87372, 41.7691, -19.9637, 2.64", "1.91449, 43.0218, -20.0378, 3.25", "1.99938, 44.1523, -20.1616, 3.25", "2.13042, 45.2929, -20.3442, 2.88", "2.35358, 46.8001, -20.6097, 0.84", "2.45156, 47.4138, -20.716, 0.6", "2.68251, 48.9868, -20.9691, 2.4", "2.8218, 50.0954, -21.1276, 3.25", "2.93463, 51.1481, -21.2469, 2.88", "3.1044, 52.8932, -21.3964, 0.96", "3.2856, 54.7485, -21.5631, 0.84", "3.39905, 55.8909, -21.6734, 0.48", "3.48047, 56.6696, -21.7449, 0.48", "3.635, 58.1742, -21.904, 0.48", "3.75243, 59.3536, -22.051, 1.92", "3.91373, 60.7589, -22.2697, 3.37", "4.05369, 61.6787, -22.4477, 3.49", "4.27863, 62.7758, -22.6928, 3.0" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-0.0730332, 26.4539, -18.9382, 0.84", "-1.90552, 27.4774, -19.2577, 0.84", "-2.34199, 27.8676, -19.4348, 0.72", "-2.62331, 28.2313, -19.6116, 0.72", "-2.86261, 28.7235, -19.8997, 0.72", "-3.20189, 29.6346, -20.6119, 0.84", "-3.59398, 30.7411, -21.5761, 0.72", "-3.76599, 31.5358, -22.3202, 0.48", "-3.90714, 32.2843, -23.0401, 0.48", "-4.15296, 33.5901, -24.309, 0.72", "-4.46549, 34.9455, -25.6377, 0.48", "-4.5765, 35.2802, -25.9995, 0.48", "-4.70867, 35.5637, -26.2991, 0.48", "-5.00503, 36.068, -26.8205, 1.32", "-5.34508, 36.5553, -27.3276, 2.04", "-5.85547, 37.2184, -27.9658, 1.56", "-6.92125, 38.671, -29.2792, 0.36", "-7.166, 39.0164, -29.6114, 0.36", "-8.08362, 40.3213, -30.9768, 2.4", "-8.46039, 40.8668, -31.6088, 3.25", "-8.69288, 41.2126, -32.0451, 3.73" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "14.1093, -16.5089, -21.5392, 0.24", "13.6139, -18.2842, -21.9243, 0.24", "13.4719, -18.914, -22.0851, 0.24", "13.2715, -20.1015, -22.3764, 1.92", "13.1062, -21.0449, -22.5886, 2.52", "12.9545, -21.8079, -22.7467, 2.4", "12.7845, -22.5935, -22.9009, 1.8", "12.5826, -23.6193, -23.0929, 0.24", "12.3204, -24.832, -23.2739, 0.24", "12.0392, -26.0412, -23.3992, 0.24", "11.8295, -26.8751, -23.4549, 0.24", "11.6196, -27.6423, -23.5131, 1.68", "11.258, -28.8577, -23.6023, 1.92", "10.8262, -30.2053, -23.7123, 2.28", "10.4666, -31.2541, -23.817, 3.12", "10.0831, -32.3255, -23.9359, 3.12", "9.35095, -34.2325, -24.1279, 0.24", "9.04151, -34.9611, -24.1883, 0.24", "8.96499, -35.1197, -24.199, 0.48", "8.62452, -35.7359, -24.2211, 0.48", "8.11698, -36.5551, -24.2058, 0.48", "7.77951, -37.1104, -24.1482, 0.48", "7.6307, -37.3974, -24.0784, 0.12", "7.41834, -38.0114, -23.9421, 0.12", "7.3343, -38.349, -23.8731, 0.12", "7.25581, -38.8434, -23.7867, 0.72", "7.15368, -39.8331, -23.6522, 0.96", "7.09727, -40.4584, -23.6063, 0.24", "6.98411, -41.6908, -23.5603, 0.24", "6.93567, -42.2272, -23.5276, 0.96", "6.87536, -42.8459, -23.4816, 1.44", "6.7846, -43.6038, -23.4216, 1.56", "6.62694, -44.6377, -23.3411, 0.48", "6.51287, -45.3101, -23.2933, 0.24", "6.29872, -46.5472, -23.1989, 1.68", "6.1725, -47.4178, -23.15, 2.88", "6.0232, -48.6795, -23.0635, 2.88", "5.88243, -50.3404, -22.9408, 0.24", "5.81751, -51.7234, -22.8253, 0.24", "5.81018, -52.2412, -22.7858, 0.24", "5.83588, -53.8418, -22.705, 0.24", "5.88541, -54.8584, -22.6545, 1.8", "5.98115, -55.972, -22.5905, 2.76", "6.1584, -57.4926, -22.4953, 0.48", "6.25627, -58.356, -22.4391, 0.48", "6.31, -59.0334, -22.3959, 0.6", "6.3394, -59.7891, -22.3282, 0.6", "6.33871, -60.3757, -22.289, 0.36", "6.31607, -61.0036, -22.2455, 0.36", "6.21071, -62.0265, -22.2396, 0.48", "6.01754, -63.3825, -22.2811, 0.48", "5.85525, -64.2948, -22.3326, 1.44", "5.63405, -65.4517, -22.4674, 2.76", "5.46567, -66.4183, -22.6306, 3.0", "5.1627, -68.4306, -23.1375, 0.12", "5.08246, -69.0227, -23.326, 0.12", "4.97207, -69.861, -23.6373, 0.12", "4.85573, -70.8225, -24.0232, 1.32", "4.75234, -71.7483, -24.3856, 2.4", "4.51919, -73.5875, -25.0519, 0.12", "4.39248, -74.4839, -25.3233, 0.12", "4.29258, -75.0166, -25.4669, 0.84", "4.15667, -75.6029, -25.6004, 0.96", "3.79926, -76.9794, -25.8235, 0.12", "3.5212, -78.0056, -25.9514, 0.12", "3.32008, -78.8121, -26.009, 1.32", "3.15074, -79.5768, -26.0598, 1.8", "2.94825, -80.6081, -26.1136, 0.12", "2.69286, -81.9622, -26.1596, 0.12", "2.56908, -82.6962, -26.1697, 1.56", "2.45969, -83.5692, -26.1757, 2.52", "2.38732, -84.3319, -26.1747, 2.64", "2.2745, -85.9657, -26.1574, 1.32", "2.22573, -86.7032, -26.141, 0.12", "2.21529, -86.8392, -26.1379, 0.24", "2.12999, -87.7946, -26.133, 0.24", "2.02651, -88.9127, -26.145, 0.24", "1.95364, -89.6619, -26.2096, 0.24", "1.90325, -90.18, -26.2876, 0.24", "1.85228, -90.6871, -26.3822, 1.56", "1.756, -91.4811, -26.5441, 2.28", "1.65298, -92.2105, -26.7178, 2.28", "1.42049, -93.8527, -27.1468, 0.48", "1.28053, -94.8033, -27.3986, 0.48", "1.26255, -94.9238, -27.4287, 0.72", "1.12259, -95.7677, -27.623, 0.96", "0.992292, -96.4762, -27.7545, 0.48", "0.907433, -96.8473, -27.8236, 0.48", "0.753934, -97.4518, -27.8942, 0.48", "0.542159, -98.2529, -27.9763, 0.6", "0.47334, -98.5242, -27.9992, 0.24", "0.280133, -99.3786, -28.0616, 0.24", "0.0510877, -100.625, -28.1272, 1.56", "-0.103732, -101.627, -28.1796, 2.4", "-0.220781, -102.525, -28.2242, 2.52", "-0.27778, -103.025, -28.2458, 2.52", "-0.452257, -104.653, -28.2766, 0.24", "-0.613115, -106.644, -28.2629, 0.24", "-0.640349, -107.168, -28.2482, 0.96", "-0.66153, -107.924, -28.2333, 1.44", "-0.658802, -108.433, -28.2174, 1.68", "-0.620223, -109.534, -28.1932, 0.24", "-0.470871, -111.434, -28.1616, 0.24", "-0.353958, -112.435, -28.1604, 1.56", "-0.269558, -113.06, -28.1726, 2.16", "-0.172139, -113.734, -28.2039, 1.8", "-0.0398079, -114.892, -28.2959, 0.12", "0.00244794, -115.554, -28.379, 0.12", "-0.00371066, -115.678, -28.3958, 0.6", "-0.0787242, -116.198, -28.4603, 0.12", "-0.163175, -116.584, -28.4998, 0.12", "-0.412169, -117.524, -28.5667, 0.12", "-0.527719, -117.961, -28.5766, 0.6", "-0.697401, -118.697, -28.5188, 0.6", "-0.791653, -119.19, -28.4419, 0.12", "-0.891467, -119.787, -28.3169, 0.12", "-0.979063, -120.283, -28.2019, 0.6", "-1.09071, -121.007, -28.024, 0.6", "-1.28332, -122.382, -27.6845, 0.12", "-1.39857, -123.296, -27.4659, 0.12", "-1.50333, -124.215, -27.2636, 1.44", "-1.60083, -125.167, -27.0828, 2.4", "-1.64105, -125.614, -27.0158, 2.52", "-1.69745, -126.334, -26.9491, 2.16", "-1.70285, -127.218, -26.9368, 0.12", "-1.65483, -127.97, -26.8893, 0.36", "-1.59985, -128.457, -26.8381, 0.12", "-1.54873, -128.827, -26.7854, 0.12", "-1.46813, -129.369, -26.7067, 0.12", "-1.31278, -130.328, -26.5655, 0.12", "-1.11408, -131.433, -26.4133, 0.12", "-1.07837, -131.681, -26.3875, 0.12", "-1.02035, -132.436, -26.3367, 0.12", "-1.00779, -133.316, -26.3406, 1.8", "-1.01651, -133.693, -26.3647, 2.28", "-1.06964, -134.447, -26.3905, 1.92", "-1.15766, -135.683, -26.374, 0.36", "-1.23239, -136.629, -26.3211, 0.36", "-1.29502, -137.5, -26.2426, 1.2", "-1.32666, -138.27, -26.0919, 0.72", "-1.29197, -139.841, -25.7976, 0.12", "-1.2152, -141.258, -25.5415, 0.12", "-1.14003, -142.186, -25.3824, 1.68", "-1.08424, -142.907, -25.2604, 1.8", "-0.960663, -144.823, -24.9147, 1.44", "-0.865802, -146.758, -24.6465, 0.24", "-0.759326, -148.616, -24.4197, 0.12", "-0.707976, -149.476, -24.2937, 0.12", "-0.640368, -150.954, -24.0335, 0.12", "-0.619403, -151.674, -23.9156, 1.2", "-0.587337, -152.662, -23.7823, 2.52", "-0.509219, -154.201, -23.4152, 0.48", "-0.472159, -154.554, -23.3265, 0.48", "-0.349382, -155.425, -23.1075, 0.48", "-0.182938, -156.372, -22.8917, 0.72", "0.0385509, -157.6, -22.6325, 0.24", "0.261308, -158.896, -22.2805, 0.12", "0.457221, -159.867, -22.024, 0.12", "0.593313, -160.396, -21.8987, 1.08", "0.773643, -160.977, -21.7453, 1.32", "0.943051, -161.45, -21.6283, 1.08", "1.4066, -162.68, -21.3569, 0.36", "2.12005, -164.525, -21.0684, 0.36", "2.60914, -165.765, -20.8669, 1.56", "3.03228, -166.848, -20.6983, 2.16", "3.40761, -167.711, -20.5807, 1.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "14.1093, -16.5089, -21.5392, 0.36", "15.7922, -17.7579, -21.9831, 0.36", "16.3366, -17.935, -22.2878, 0.36", "16.6263, -17.9464, -22.5176, 0.36", "16.8884, -17.9375, -22.7332, 0.36", "17.5242, -17.9181, -23.2413, 0.72", "18.5024, -17.9246, -24.0058, 0.96", "19.1146, -17.8617, -24.5436, 0.96", "19.978, -17.7964, -25.3048, 0.48", "20.7829, -17.8072, -25.9909, 0.36", "21.2017, -17.9097, -26.3195, 0.36", "21.554, -18.1934, -26.5149, 0.36", "21.6751, -18.397, -26.5397, 0.36", "22.003, -19.0973, -26.5508, 0.36", "22.3144, -19.7548, -26.5249, 1.56", "22.7365, -20.5451, -26.4825, 2.52", "23.1771, -21.2412, -26.4881, 2.4", "24.1359, -22.4591, -26.5713, 0.36", "24.4958, -22.8325, -26.6279, 0.36", "25.2446, -23.4931, -26.7788, 0.36", "25.9663, -24.0512, -26.957, 0.36", "26.9694, -24.758, -27.2183, 1.44", "28.0388, -25.4538, -27.5147, 3.25", "29.2363, -26.1798, -27.8697, 4.69", "29.4579, -26.3202, -27.9406, 4.93", "30.7665, -27.2531, -28.4019, 3.61" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-13.1098, -268.564, -31.536, 0.12", "-13.5667, -269.732, -32.593, 0.12", "-13.7499, -270.262, -33.0734, 0.12", "-13.8075, -270.414, -33.2559, 0.12", "-13.8949, -270.585, -33.4627, 0.36", "-14.4383, -271.523, -34.552, 0.12", "-14.6105, -271.799, -34.9152, 0.12", "-14.6105, -271.799, -34.9152, 0.36", "-15.2322, -272.799, -36.3112, 0.36", "-15.6065, -273.449, -37.1815, 2.52", "-15.7385, -273.707, -37.5017, 2.88", "-16.8717, -276.029, -40.1122, 0.24", "-17.0219, -276.357, -40.4521, 0.12", "-17.1425, -276.673, -40.7382, 0.12", "-17.2524, -277.094, -41.0326, 0.48", "-17.3247, -277.559, -41.3104, 0.48", "-17.3814, -278.039, -41.5408, 0.12", "-17.4365, -278.897, -41.7337, 0.12", "-17.4644, -279.403, -41.8957, 0.12", "-17.4934, -279.982, -42.1048, 0.84", "-17.5253, -280.356, -42.2292, 0.84", "-17.6403, -281.772, -42.6622, 0.12", "-17.6796, -282.39, -42.8265, 0.12", "-17.8273, -283.988, -43.2069, 2.64", "-17.9001, -284.49, -43.3113, 2.28", "-18.1826, -285.88, -43.4406, 0.12", "-18.3154, -286.369, -43.4156, 0.12", "-18.6632, -287.279, -43.2038, 0.12", "-19.0194, -287.902, -42.9723, 1.2", "-19.0876, -287.992, -42.9226, 1.44", "-20.1522, -289.169, -42.133, 0.12", "-20.5046, -289.477, -41.8537, 0.12", "-20.8449, -289.712, -41.5731, 0.12", "-21.313, -289.959, -41.1416, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.1098, -268.564, -31.536, 0.6", "-12.7422, -269.587, -32.9394, 0.6", "-12.7096, -269.714, -33.1323, 0.6", "-12.5885, -270.26, -33.955, 1.32", "-12.4711, -270.857, -34.8101, 2.28", "-12.339, -271.528, -35.7714, 2.04", "-11.9049, -273.735, -38.9315, 0.96", "-11.8231, -274.258, -39.7674, 0.48", "-11.7874, -274.529, -40.2272, 0.48", "-11.7677, -274.818, -40.7601, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "9.77113, 55.6678, 9.26444, 1.2", "9.91167, 57.2198, 8.9728, 1.2", "10.0257, 58.6778, 8.83484, 1.32", "10.0911, 59.5452, 8.78786, 1.44", "10.1814, 60.6585, 8.76699, 0.96", "10.3372, 62.1564, 8.76494, 1.08", "10.6055, 64.1689, 8.78313, 1.56", "10.9544, 65.9005, 8.88408, 0.96", "11.2155, 66.8632, 8.97492, 0.6", "11.5284, 67.7784, 9.08154, 1.2", "11.8769, 68.635, 9.19754, 2.04", "12.1798, 69.2997, 9.29355, 2.16", "12.8063, 70.64, 9.50478, 1.2", "13.2266, 71.6091, 9.6474, 0.84", "13.5949, 72.6381, 9.74199, 0.48", "13.7945, 73.3639, 9.77219, 0.48", "14.09, 75.0055, 9.75443, 0.48", "14.221, 76.2171, 9.68918, 0.84", "14.3016, 77.5865, 9.55966, 1.92", "14.39, 79.3058, 9.33577, 2.52", "14.447, 80.183, 9.19834, 2.28", "14.5885, 81.6262, 8.98595, 0.6", "14.6596, 82.121, 8.92803, 0.6", "14.7768, 82.8341, 8.87665, 0.48", "14.9837, 84.0461, 8.86146, 0.48", "15.1475, 84.962, 8.91545, 0.96", "15.3012, 85.7789, 8.98446, 1.8", "15.5338, 86.936, 9.12694, 2.04", "15.7635, 88.1575, 9.28294, 2.04", "16.0312, 89.9205, 9.51098, 2.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "9.77113, 55.6678, 9.26444, 1.32", "10.9576, 57.3499, 9.62662, 1.32", "11.4835, 58.0728, 9.68431, 0.96", "12.4216, 59.2458, 9.68031, 1.32", "13.0184, 59.8753, 9.61446, 1.68", "13.801, 60.5789, 9.49529, 1.2", "14.7688, 61.3569, 9.32495, 0.84", "15.8306, 62.0961, 9.05768, 0.72", "16.4402, 62.4898, 8.9141, 0.84", "17.5051, 63.0307, 8.64094, 0.6", "18.197, 63.3044, 8.46714, 0.6", "18.7697, 63.4565, 8.34101, 1.32", "20.2184, 63.7573, 8.25928, 1.8", "21.0821, 64.1021, 8.44485, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "4.27863, 62.7758, -22.6928, 0.48", "4.28081, 64.7295, -22.5361, 0.48", "4.23365, 65.8847, -22.4299, 0.48", "4.17797, 66.6643, -22.3446, 0.48", "4.06398, 68.0505, -22.2025, 0.72", "3.98865, 68.882, -22.1258, 0.48", "3.89149, 69.8785, -22.0432, 0.48", "3.66309, 71.3007, -21.9676, 0.48", "3.43845, 72.5779, -21.9042, 1.8", "3.3355, 73.2358, -21.8743, 2.64", "3.2443, 73.9899, -21.847, 2.88", "3.16016, 74.8664, -21.8023, 2.88", "3.07975, 75.8666, -21.7471, 2.04", "2.9975, 77.1364, -21.6814, 0.48", "2.9698, 77.6439, -21.6514, 0.36", "2.88184, 79.5217, -21.5388, 0.36", "2.83765, 80.7281, -21.472, 1.44", "2.84731, 81.8501, -21.4184, 2.52", "2.90742, 82.9604, -21.375, 2.64", "2.98155, 83.7531, -21.3534, 2.52", "3.19357, 85.5048, -21.3329, 0.48", "3.29487, 86.2427, -21.3393, 0.36", "3.48327, 87.6671, -21.3729, 0.36", "3.56464, 88.3402, -21.3813, 0.36", "3.68134, 89.4568, -21.4, 0.36", "3.78773, 90.7075, -21.4219, 1.44", "3.81922, 91.4626, -21.4395, 1.56", "3.80917, 92.4369, -21.4769, 0.24", "3.7227, 93.5621, -21.5361, 0.24", "3.62067, 94.532, -21.5777, 0.72", "3.56672, 95.022, -21.5919, 0.72", "3.50599, 95.5913, -21.5996, 0.48", "3.47632, 95.968, -21.5978, 0.36", "3.45188, 96.5859, -21.5638, 0.36", "3.45394, 97.3341, -21.4675, 0.84", "3.52231, 98.5593, -21.2599, 2.4", "3.56022, 99.0548, -21.181, 3.0", "3.6477, 100.036, -21.0315, 3.0", "3.75194, 101.265, -20.8688, 1.68", "3.8479, 102.493, -20.7296, 0.36", "3.91177, 103.497, -20.6449, 0.36", "3.94048, 104.788, -20.5748, 0.36", "3.91678, 105.797, -20.5586, 1.68", "3.87443, 106.47, -20.5752, 2.52", "3.82386, 106.992, -20.6105, 2.64", "3.74583, 107.658, -20.667, 2.28", "3.6244, 108.736, -20.7543, 0.48", "3.53512, 110.233, -20.8929, 0.48", "3.52001, 111.356, -21.0124, 0.48", "3.53713, 111.862, -21.0647, 0.96", "3.59249, 112.738, -21.1485, 1.56", "3.65264, 113.375, -21.1996, 1.56", "3.79934, 114.628, -21.2767, 0.48", "3.84863, 115.012, -21.3035, 0.12", "3.98346, 116.123, -21.3865, 0.12", "4.1184, 117.367, -21.48, 2.16", "4.1754, 117.995, -21.5247, 2.88", "4.20705, 118.497, -21.5516, 3.0" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "4.27863, 62.7758, -22.6928, 0.48", "3.98897, 65.4764, -24.7812, 0.48", "3.93178, 65.8675, -25.0785, 0.48", "3.79508, 66.7, -25.7633, 0.72", "3.71028, 67.2699, -26.273, 0.72", "3.57363, 68.3447, -27.2333, 0.24", "3.51741, 68.827, -27.6691, 0.12", "3.4407, 69.5108, -28.2576, 0.84", "3.3761, 70.4014, -29.084, 0.12", "3.34038, 71.3678, -29.9988, 0.12", "3.33521, 71.9238, -30.4867, 1.68", "3.33938, 72.6038, -30.9975, 2.4", "3.34805, 73.7864, -31.858, 1.8", "3.35538, 74.9214, -32.6694, 0.12", "3.33483, 75.4361, -33.0184, 0.12", "3.22907, 76.4507, -33.7152, 1.92", "3.13584, 77.1276, -34.2297, 2.4", "2.86968, 78.8929, -35.6659, 0.6", "2.72133, 79.7036, -36.3537, 0.48", "2.59262, 80.3543, -36.9082, 0.48", "2.41584, 81.305, -37.7308, 1.2", "2.23005, 82.3793, -38.718, 0.48", "2.17425, 82.789, -39.0807, 0.12", "2.10848, 83.6423, -39.6868, 0.12", "2.097, 84.1829, -40.0173, 0.72", "2.11882, 84.7266, -40.3875, 0.72", "2.14339, 86.0031, -41.2801, 0.12", "2.14127, 86.2914, -41.4971, 0.12", "2.14757, 87.1545, -42.1925, 2.28", "2.16706, 87.6107, -42.6229, 2.52", "2.29972, 89.6051, -44.705, 0.12", "2.39332, 90.4241, -45.5683, 0.12", "2.52355, 91.2626, -46.4417, 1.44", "2.60458, 91.731, -46.9375, 1.8", "2.79106, 92.7368, -48.0365, 1.32", "2.87489, 93.3185, -48.6559, 0.12", "2.98701, 94.2299, -49.5155, 0.12", "3.11692, 95.4896, -50.6534, 1.56", "3.13911, 95.91, -51.01, 1.92", "3.13201, 97.2748, -52.1315, 0.12", "3.10008, 98.1094, -52.7869, 0.12", "3.07167, 98.6226, -53.1943, 0.96", "3.05986, 98.8126, -53.3516, 0.96", "3.04022, 99.6221, -54.0885, 0.12", "3.03532, 100.25, -54.7083, 0.12", "3.014, 101.163, -55.6564, 1.32", "3.00125, 101.588, -56.1025, 1.8", "2.96928, 102.14, -56.6685, 1.32", "2.87095, 103.709, -58.1966, 0.12", "2.86137, 103.891, -58.4015, 0.12", "2.84255, 104.54, -59.1754, 0.36", "2.80252, 105.087, -59.8206, 0.36", "2.77356, 105.832, -60.7298, 1.92", "2.7896, 106.463, -61.4828, 2.76", "2.99479, 109.332, -64.6965, 0.36", "3.01848, 109.573, -64.9728, 0.36", "3.13078, 110.479, -66.0266, 0.36", "3.24812, 111.38, -67.0749, 0.36", "3.32602, 111.89, -67.6577, 0.36", "3.50009, 112.772, -68.6314, 0.72", "3.79747, 113.834, -69.7401, 0.12", "3.87541, 114.087, -70.0222, 0.12", "4.03482, 114.549, -70.574, 1.92", "4.26953, 115.473, -71.7011, 2.52", "4.53635, 116.446, -73.036, 1.44", "4.79638, 117.023, -73.961, 0.12" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-8.69288, 41.2126, -32.0451, 0.12", "-9.15419, 43.6491, -32.8531, 0.12", "-9.3656, 44.7084, -33.2274, 0.6", "-9.5088, 45.5206, -33.518, 0.12", "-9.56975, 45.891, -33.6439, 0.12", "-9.65151, 46.393, -33.7987, 0.12", "-9.74578, 46.9964, -33.9667, 0.24", "-9.82588, 47.5589, -34.1358, 0.12", "-9.88048, 48.0413, -34.3485, 0.12", "-9.95471, 48.8391, -34.753, 0.12", "-10.0108, 49.6212, -35.1872, 1.32", "-10.0188, 50.1539, -35.4883, 1.8", "-9.97298, 51.6658, -36.3207, 0.84", "-9.90001, 52.5921, -36.9618, 0.12", "-9.85413, 52.8841, -37.1857, 0.12", "-9.64874, 53.808, -37.8933, 1.8", "-9.50558, 54.3654, -38.2994, 2.16", "-9.35199, 54.8849, -38.67, 1.8", "-8.51041, 57.3031, -40.5376, 0.24", "-8.12902, 58.2775, -41.348, 0.24", "-7.7344, 59.2563, -42.1795, 0.24", "-7.55778, 59.6897, -42.5622, 0.24", "-6.99229, 61.1085, -43.8814, 2.28", "-6.21947, 63.0664, -45.7515, 0.24", "-6.09741, 63.382, -46.0378, 0.24", "-5.74408, 64.3156, -46.9406, 0.24", "-5.35014, 65.3196, -47.9288, 1.44", "-5.04316, 66.1553, -48.6924, 1.8", "-4.70941, 67.2359, -49.5014, 0.12", "-4.49007, 68.087, -50.0111, 0.12", "-4.37954, 68.5346, -50.2805, 0.96", "-4.28128, 68.9126, -50.4995, 1.2", "-4.04085, 69.8859, -50.9894, 0.12", "-3.84958, 70.6526, -51.3547, 0.12", "-3.7305, 71.1001, -51.5841, 0.36", "-3.48485, 72.0388, -52.1782, 0.12", "-3.38592, 72.4959, -52.476, 0.12", "-3.24136, 73.2905, -52.9984, 0.48", "-3.07279, 74.3344, -53.7145, 0.48", "-2.91989, 75.4308, -54.4698, 2.28", "-2.69788, 77.2322, -55.6646, 0.12", "-2.61118, 78.1639, -56.2459, 0.12", "-2.57732, 78.6781, -56.5733, 0.12", "-2.54848, 79.6502, -57.1756, 1.08", "-2.56475, 80.1617, -57.5081, 1.2", "-2.67352, 81.0155, -58.2409, 0.12", "-2.82077, 81.6516, -58.896, 0.12", "-3.06056, 82.6041, -59.9927, 1.44", "-3.14931, 82.9336, -60.3837, 2.04", "-3.3357, 83.5318, -61.0958, 1.68", "-3.96305, 85.3358, -63.313, 0.24", "-4.19276, 85.9219, -64.0579, 0.24", "-4.44638, 86.5417, -64.8556, 0.12", "-4.70458, 87.1323, -65.5603, 0.72", "-4.82188, 87.4202, -65.8737, 0.72", "-4.94039, 87.6898, -66.1285, 0.12", "-5.3614, 88.6016, -66.8452, 0.12", "-5.58837, 88.9935, -67.2141, 0.12", "-6.11288, 89.6785, -67.9275, 1.68", "-6.23034, 89.824, -68.0844, 1.68", "-7.15286, 91.1033, -69.4708, 0.12", "-7.45156, 91.5769, -69.9459, 0.12", "-7.67953, 92.0435, -70.3988, 0.24", "-7.88805, 92.5695, -70.8896, 0.24", "-8.17672, 93.4628, -71.6776, 0.24", "-8.44555, 94.4048, -72.3892, 1.56", "-8.57713, 95.0129, -72.7783, 2.04", "-8.90791, 96.7406, -73.7708, 0.36", "-8.98964, 97.2758, -74.0485, 0.48", "-9.09069, 98.0995, -74.4877, 0.48", "-9.22924, 98.9979, -74.9447, 0.48", "-9.3189, 99.4546, -75.1789, 0.24", "-9.43861, 99.9624, -75.4949, 0.24", "-9.63107, 100.674, -76.0023, 0.24", "-9.92663, 101.636, -76.8513, 1.08", "-10.0865, 102.042, -77.2883, 1.08", "-10.3909, 102.533, -78.0448, 0.36", "-10.8319, 103.012, -78.9708, 0.36", "-10.9961, 103.135, -79.269, 0.36", "-11.1934, 103.244, -79.5762, 0.36", "-11.4675, 103.373, -79.9692, 0.36", "-12.6647, 103.925, -81.6362, 1.68", "-12.8917, 104.027, -81.9246, 2.4", "-13.0583, 104.104, -82.1216, 2.64", "-14.8347, 104.933, -84.1264, 0.6", "-15.0614, 105.027, -84.3624, 0.12", "-15.3706, 105.144, -84.6354, 0.12", "-15.7566, 105.263, -84.9151, 0.6", "-16.1566, 105.376, -85.2032, 0.12", "-16.6077, 105.488, -85.4739, 0.12", "-17.3522, 105.601, -85.7605, 1.44", "-17.9706, 105.694, -85.9924, 1.08", "-19.5343, 105.989, -86.5353, 0.12", "-20.1811, 106.159, -86.7177, 0.12", "-20.9633, 106.417, -86.8764, 0.84", "-21.2749, 106.541, -86.9406, 0.84", "-21.4938, 106.636, -86.9799, 0.12", "-21.9944, 106.829, -87.0405, 0.12", "-22.7135, 107.082, -87.066, 1.44", "-22.9659, 107.161, -87.0844, 1.56", "-23.985, 107.486, -87.2062, 0.12", "-24.7561, 107.742, -87.2984, 0.12", "-25.2285, 107.894, -87.354, 1.08", "-25.7996, 108.059, -87.4505, 1.92", "-26.267, 108.183, -87.5616, 1.56", "-27.1367, 108.418, -87.8181, 0.12", "-27.4862, 108.51, -87.9366, 0.12", "-27.7016, 108.57, -88.026, 0.48", "-28.6111, 108.839, -88.4715, 0.48", "-29.0074, 108.967, -88.6754, 0.12", "-29.6184, 109.214, -88.8689, 0.12", "-29.88, 109.396, -89.0582, 0.84", "-30.1239, 109.585, -89.2866, 1.2", "-30.5313, 109.898, -89.5999, 0.12", "-31.1478, 110.243, -89.6818, 0.12", "-32.7405, 110.546, -88.6393, 2.88", "-35.9161, 110.563, -85.2281, 0.96", "-36.4489, 110.465, -84.411, 0.96", "-39.0591, 109.499, -79.2673, 0.12", "-39.3499, 109.345, -78.5854, 0.12", "-39.553, 109.196, -78.0258, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-8.69288, 41.2126, -32.0451, 0.48", "-10.4681, 41.3326, -32.8193, 0.48", "-11.2363, 41.4709, -33.4674, 0.48", "-12.1993, 41.8263, -34.7065, 0.48", "-12.6799, 42.0576, -35.3741, 2.16", "-12.9139, 42.1897, -35.7156, 2.52", "-13.2352, 42.3919, -36.1994, 2.52", "-14.4902, 43.3741, -38.5734, 1.44", "-15.2812, 43.9899, -40.1491, 0.36", "-15.573, 44.1906, -40.7275, 0.48", "-16.1268, 44.5077, -41.8104, 0.6", "-16.7061, 44.7457, -43.1442, 0.6", "-17.4148, 44.9694, -44.9837, 0.6", "-17.7215, 45.041, -45.7842, 1.92", "-17.9863, 45.0802, -46.4716, 2.64", "-18.2487, 45.1078, -47.1541, 2.64", "-20.6467, 45.2725, -53.2803, 1.68", "-21.7224, 45.3422, -55.9364, 0.72", "-21.9341, 45.3637, -56.4291, 1.56", "-22.3855, 45.4256, -57.4375, 1.92", "-22.5956, 45.4595, -57.8679, 2.28", "-22.7809, 45.4932, -58.1975, 2.28", "-24.8005, 45.8558, -60.4273, 0.24", "-25.1414, 45.9064, -60.7827, 0.12", "-25.3781, 45.9327, -61.0783, 0.12", "-25.7918, 45.9671, -61.646, 0.12", "-26.5447, 45.9989, -62.7075, 1.32", "-26.8954, 45.9955, -63.2169, 2.16", "-27.4633, 45.9517, -64.0284, 2.4", "-29.0888, 45.7255, -66.3624, 0.72", "-29.5383, 45.6335, -67.0064, 0.84", "-29.8183, 45.5533, -67.4131, 1.08", "-30.6739, 45.2466, -68.5877, 0.48", "-30.8886, 45.1617, -68.8651, 0.12", "-31.3153, 44.9745, -69.362, 0.48", "-31.4751, 44.8951, -69.5092, 0.48", "-32.1802, 44.5064, -70.1556, 0.12", "-32.44, 44.3508, -70.3892, 0.12", "-32.7752, 44.1338, -70.7118, 0.12", "-32.9715, 44.0119, -70.9904, 0.12", "-33.1802, 43.8911, -71.3515, 0.12", "-33.3776, 43.7831, -71.6706, 0.48", "-33.4649, 43.7294, -71.8069, 0.48", "-34.1114, 43.2393, -72.8213, 0.48", "-34.5004, 42.8769, -73.4149, 0.12", "-34.6445, 42.7514, -73.6072, 0.12", "-35.0069, 42.4152, -74.0358, 0.12", "-35.6358, 41.8038, -74.7862, 1.8", "-36.0728, 41.4131, -75.2382, 2.76", "-36.348, 41.1627, -75.4821, 2.76", "-36.8507, 40.6797, -75.9107, 1.92", "-37.3688, 40.1396, -76.3727, 1.92", "-38.5252, 38.78, -77.569, 0.12", "-38.9751, 38.1948, -78.0645, 0.12", "-39.1982, 37.8708, -78.365, 0.12", "-39.4141, 37.5287, -78.6684, 0.48", "-39.6046, 37.1947, -78.9572, 0.6", "-40.0081, 36.522, -79.5447, 0.12", "-40.1496, 36.2365, -79.7519, 0.12", "-40.7648, 34.8469, -80.8071, 2.4", "-41.1176, 34.1684, -81.3871, 3.25" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "3.40761, -167.711, -20.5807, 0.12", "3.23634, -168.876, -20.8159, 0.12", "3.1247, -169.252, -20.8538, 0.12", "2.95303, -169.675, -20.8365, 0.36", "2.65735, -170.329, -20.761, 0.48", "2.50917, -170.647, -20.7148, 0.12", "2.30213, -171.129, -20.6423, 0.12", "1.96657, -171.864, -20.4581, 0.36", "1.73332, -172.333, -20.2013, 0.12", "1.50627, -172.689, -19.9211, 0.12", "1.29798, -172.925, -19.6974, 0.12", "0.972369, -173.285, -19.3248, 0.12", "0.470242, -173.814, -18.7231, 0.36", "-0.33226, -174.581, -17.7717, 0.12", "-0.899781, -175.054, -17.1302, 0.12", "-1.79722, -175.635, -16.1359, 0.12" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.40761, -167.711, -20.5807, 0.12", "4.13132, -168.1, -21.0526, 0.12", "4.70345, -168.392, -21.4721, 0.12", "5.3285, -168.715, -21.9345, 0.48", "5.79865, -168.96, -22.2829, 0.12", "6.7236, -169.442, -22.9684, 0.12", "7.68652, -169.944, -23.6821, 0.12", "8.75696, -170.468, -24.5712, 2.52", "8.99773, -170.583, -24.784, 2.28", "9.0279, -170.598, -24.8101, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "30.7665, -27.2531, -28.4019, 0.48", "30.4829, -29.9947, -30.0878, 0.48", "30.4585, -30.4228, -30.308, 0.36", "30.4469, -30.8773, -30.5151, 0.36", "30.4432, -31.3913, -30.725, 0.84", "30.452, -32.2018, -31.03, 1.32", "30.5194, -33.2714, -31.3998, 0.48", "30.6755, -34.0964, -31.5518, 0.36", "30.7649, -34.4674, -31.6159, 0.36", "30.9035, -34.9404, -31.7065, 0.48", "31.0684, -35.4312, -31.8025, 0.36", "31.411, -36.359, -31.9971, 0.36", "31.6059, -36.8786, -32.1126, 0.36", "31.734, -37.3509, -32.2207, 0.48", "31.8587, -37.9408, -32.3595, 0.36", "31.9514, -38.5455, -32.4999, 0.36", "31.9774, -38.7895, -32.5543, 0.36", "32.1226, -40.9435, -33.0153, 3.49", "32.2273, -42.9958, -33.4129, 0.12", "32.2428, -43.3567, -33.4771, 0.12", "32.2638, -43.9128, -33.5613, 0.36", "32.2693, -44.1034, -33.5879, 0.12", "32.2733, -44.7718, -33.6612, 0.12", "32.2332, -45.4166, -33.6864, 0.6", "32.2058, -45.804, -33.6814, 0.6", "32.1308, -46.4416, -33.6746, 0.36", "32.0924, -46.6907, -33.6787, 0.24", "32.0138, -47.0871, -33.6928, 0.24", "31.9011, -47.5253, -33.7127, 1.08", "31.6378, -48.5146, -33.7675, 1.8", "31.4403, -49.2735, -33.7823, 1.56", "31.2817, -49.9543, -33.7499, 0.96", "31.1998, -50.4652, -33.7132, 0.24", "31.0884, -51.4616, -33.6328, 0.24", "31.0513, -51.9672, -33.5875, 0.24", "31.009, -52.9254, -33.4943, 0.24", "30.9651, -54.859, -33.2955, 3.25", "30.9706, -56.6462, -33.1162, 0.24", "30.9813, -57.0295, -33.0823, 0.24", "31.0453, -58.2826, -32.9978, 0.24", "31.0857, -58.9001, -32.9739, 0.48", "31.1094, -59.1508, -32.9774, 0.12", "31.3515, -60.8914, -33.0587, 0.12", "31.3804, -61.0668, -33.067, 0.84", "31.4947, -61.6912, -33.0989, 1.08", "31.6313, -62.4105, -33.1397, 0.12", "31.8674, -63.6694, -33.2105, 0.12", "32.1208, -65.0686, -33.2876, 2.4", "32.376, -66.5668, -33.3674, 0.24", "32.4677, -67.1773, -33.4079, 0.24", "32.5577, -67.9251, -33.4643, 0.36", "32.59, -68.3203, -33.5001, 0.24", "32.6022, -68.5704, -33.5265, 0.24", "32.6049, -68.9325, -33.5863, 0.24", "32.5902, -69.6311, -33.7477, 0.24", "32.5991, -70.0706, -33.8567, 0.84", "32.6289, -70.5005, -33.9644, 0.84", "32.6686, -70.8878, -34.0443, 0.84", "32.7441, -71.4502, -34.1262, 0.12", "32.7811, -71.7371, -34.1551, 0.12", "32.9027, -72.5648, -34.2054, 0.12", "32.9646, -72.9641, -34.2261, 1.32", "33.0829, -73.8358, -34.2971, 1.68", "33.2197, -74.9514, -34.4054, 1.2", "33.2945, -75.615, -34.5374, 0.12", "33.3165, -75.8669, -34.6049, 0.12", "33.3567, -76.5845, -34.8283, 0.12", "33.3882, -77.6225, -35.1748, 1.32", "33.3958, -78.3212, -35.4224, 2.04", "33.431, -80.2025, -36.085, 0.36", "33.4667, -81.2719, -36.4327, 0.36", "33.4889, -82.1118, -36.653, 0.36", "33.5061, -82.5562, -36.7411, 0.36", "33.5274, -83.0458, -36.7962, 0.36", "33.5746, -84.0628, -36.8408, 1.92", "33.6193, -84.8166, -36.8083, 2.52", "33.7298, -86.2144, -36.7426, 0.24", "33.7952, -86.8839, -36.6607, 0.24", "33.8657, -87.5427, -36.5515, 0.84", "33.9472, -88.2778, -36.4043, 1.08", "34.0302, -89.0297, -36.1991, 0.36", "34.1663, -89.9721, -35.8946, 0.36", "34.4641, -91.587, -35.318, 1.44", "34.6117, -92.294, -35.0476, 1.92", "34.7338, -92.8032, -34.8529, 1.56", "35.03, -93.9602, -34.3551, 0.12", "35.1765, -94.5153, -34.1121, 0.12", "35.3279, -95.0757, -33.8782, 0.12", "35.3711, -95.2372, -33.8211, 0.48", "35.6168, -96.1459, -33.4929, 0.84", "36.0645, -97.9091, -32.9032, 0.12", "36.2445, -98.6401, -32.6918, 0.12", "36.324, -98.981, -32.588, 0.24", "36.4376, -99.4622, -32.4403, 0.24", "36.5236, -99.8336, -32.3335, 0.24", "36.6259, -100.299, -32.214, 0.48", "36.6778, -100.572, -32.1697, 0.6", "36.7576, -101.028, -32.0899, 0.12", "36.823, -101.403, -32.0197, 0.12", "36.8838, -101.768, -31.947, 0.12", "37.0883, -103.052, -31.683, 2.4", "37.2019, -103.782, -31.533, 2.88", "37.3038, -104.516, -31.3935, 2.4" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "30.7665, -27.2531, -28.4019, 0.12", "31.6736, -27.7592, -26.9979, 0.12", "32.0527, -27.9061, -26.4525, 0.12", "32.6458, -28.0588, -25.6893, 0.72", "33.9163, -28.2474, -24.2213, 0.72", "34.4878, -28.2747, -23.6645, 0.12", "34.9531, -28.2755, -23.2858, 0.12", "35.7331, -28.1829, -22.691, 1.68", "36.2713, -28.0929, -22.3505, 2.28", "37.2194, -27.9125, -21.9019, 1.92", "38.3511, -27.754, -21.3633, 0.36", "39.3008, -27.7054, -20.8373, 0.36", "40.0287, -27.7841, -20.2736, 0.6", "40.3367, -27.875, -19.8962, 0.36", "40.6047, -27.9893, -19.4947, 0.36", "41.9528, -28.6845, -17.2488, 0.36", "42.1876, -28.822, -16.8334, 1.2", "42.943, -29.3042, -15.3861, 1.92", "44.0808, -30.0614, -13.1796, 0.24", "44.6597, -30.4397, -12.0471, 2.16", "44.8819, -30.5726, -11.6409, 3.0", "45.1994, -30.6949, -11.2127, 3.0" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-11.7677, -274.818, -40.7601, 0.12", "-10.7934, -274.741, -41.2937, 0.12", "-10.3451, -274.738, -41.5029, 0.12", "-10.0982, -274.751, -41.6073, 0.12", "-9.3153, -274.803, -41.9137, 0.6", "-8.97601, -274.825, -42.0464, 0.6", "-8.35712, -274.866, -42.2886, 0.12", "-7.40809, -274.978, -42.5829, 0.12", "-7.09541, -275.028, -42.6849, 0.84", "-6.84368, -275.078, -42.7648, 0.84" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-11.7677, -274.818, -40.7601, 1.56", "-11.6594, -275.443, -40.7438, 1.56", "-11.5092, -276.309, -40.7214, 2.28", "-11.4206, -276.82, -40.7081, 2.64" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.0312, 89.9205, 9.51098, 0.48", "16.779, 92.6026, 10.2276, 0.48", "17.0026, 93.5516, 10.4164, 0.36", "17.1888, 94.5271, 10.5626, 0.36", "17.329, 95.5384, 10.6762, 0.36", "17.4051, 96.4014, 10.7577, 0.36", "17.4251, 96.8969, 10.7953, 0.72", "17.3889, 97.4127, 10.7483, 0.72", "17.3212, 98.0384, 10.6955, 0.36", "17.2135, 98.8149, 10.6391, 0.36", "17.1306, 99.5049, 10.6015, 1.2", "17.0602, 100.291, 10.5749, 1.8", "16.9853, 101.383, 10.5769, 1.8", "16.9121, 102.894, 10.6278, 0.36", "16.901, 103.387, 10.6224, 0.36", "16.9091, 104.416, 10.6033, 0.72", "16.9288, 104.919, 10.5911, 0.84", "16.9873, 106.02, 10.5746, 0.36", "17.0347, 106.899, 10.5727, 1.08", "17.1254, 108.755, 10.5124, 2.64", "17.1814, 109.961, 10.4413, 3.61", "17.202, 110.52, 10.377, 3.61" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.0312, 89.9205, 9.51098, 0.6", "15.7867, 91.3566, 9.37306, 0.6", "15.7214, 92.3271, 9.22281, 0.6", "15.7164, 93.6659, 8.8993, 0.6", "15.7311, 94.2529, 8.66223, 0.6", "15.7374, 95.1043, 8.27928, 1.68", "15.7227, 95.9437, 7.88526, 2.04", "15.7431, 96.4792, 7.5698, 1.8", "15.723, 97.1304, 7.09248, 2.04", "15.4523, 98.2095, 6.15852, 0.48", "15.1917, 98.7124, 5.73629, 0.48", "15.0467, 98.8941, 5.60243, 0.72", "14.6788, 99.3022, 5.34451, 0.96", "14.1801, 99.8495, 5.02217, 0.72", "13.7747, 100.326, 4.78025, 1.32", "13.4374, 100.798, 4.57131, 1.8", "12.9972, 101.56, 4.2438, 1.8", "12.6879, 102.209, 3.99574, 0.96", "12.3951, 102.939, 3.71488, 0.72", "12.1933, 103.485, 3.49376, 0.84", "11.8171, 104.489, 3.01828, 1.56", "11.6178, 105.009, 2.73471, 2.52", "11.4397, 105.453, 2.47392, 2.52", "10.9095, 106.632, 1.75442, 2.4", "10.4338, 107.605, 1.13161, 1.56", "10.0628, 108.33, 0.631488, 0.84", "9.78535, 108.851, 0.257652, 0.48", "9.67837, 109.06, 0.101099, 0.24", "9.38481, 109.635, -0.318983, 0.24", "9.17236, 110.096, -0.762725, 0.48", "9.06602, 110.381, -1.10463, 0.12", "8.99173, 110.649, -1.44613, 0.12", "8.82061, 111.335, -2.34817, 1.2", "8.73236, 111.717, -2.84464, 1.56", "8.31671, 113.584, -5.22683, 0.36", "8.18479, 114.189, -5.9272, 0.12", "7.94266, 115.26, -6.98607, 2.64", "7.86598, 115.598, -7.25262, 3.0", "7.71004, 116.174, -7.47221, 2.76", "7.08074, 118.026, -7.5384, 0.48", "5.70818, 121.565, -6.92722, 0.48", "5.44349, 122.322, -6.89673, 0.48", "5.36126, 122.81, -7.09848, 0.48", "5.38563, 123.348, -7.53271, 0.36", "5.57469, 124.296, -8.54744, 0.36", "5.89496, 125.221, -9.68616, 0.36", "6.42191, 126.492, -11.222, 2.16", "6.66682, 126.96, -11.7849, 3.0", "6.79053, 127.17, -12.0202, 3.12", "7.40022, 128.085, -12.9732, 3.0", "8.35436, 129.453, -14.2667, 0.12", "8.79404, 130.103, -14.8159, 0.12", "8.91883, 130.3, -14.962, 0.12", "9.48419, 131.156, -15.6271, 2.52", "9.71669, 131.505, -15.883, 2.52" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "21.0821, 64.1021, 8.44485, 0.6", "20.0555, 64.6639, 9.60581, 0.6", "19.6566, 64.8822, 10.0569, 0.6", "19.0926, 65.1909, 10.6947, 0.24", "18.7076, 65.4015, 11.13, 0.24", "18.3013, 65.6239, 11.5896, 0.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "21.0821, 64.1021, 8.44485, 0.6", "21.5654, 64.9684, 8.82587, 0.6", "22.1169, 66.0428, 9.28968, 0.72", "22.487, 66.8205, 9.59475, 1.08", "22.6896, 67.2696, 9.73912, 1.44", "22.9285, 67.8186, 9.91808, 1.56", "23.3064, 68.6986, 10.1902, 1.44", "23.8056, 69.9387, 10.5475, 1.56", "24.1056, 70.7576, 10.7671, 1.68", "24.3439, 71.4687, 11.0, 1.68", "24.5802, 72.2146, 11.2794, 1.68", "24.9177, 73.3544, 11.7405, 0.6", "25.1506, 74.2235, 12.1039, 0.36", "25.342, 74.8991, 12.3351, 0.36", "25.61, 75.7931, 12.6038, 1.44", "25.7649, 76.2595, 12.7221, 1.56", "26.0295, 76.9998, 12.8339, 1.56", "26.1685, 77.3592, 12.8543, 1.44", "26.69, 78.6122, 12.89, 0.72", "26.9082, 79.0781, 12.9071, 0.6", "27.2923, 79.8262, 12.9485, 1.2", "27.4819, 80.169, 12.987, 1.32", "27.9467, 80.9304, 13.1065, 0.84", "28.7442, 82.1007, 13.4014, 1.08", "29.3032, 82.8439, 13.6559, 0.96", "29.7894, 83.4194, 13.8482, 0.48", "30.1918, 83.8693, 13.9875, 0.48", "30.6665, 84.367, 14.1268, 0.6", "31.399, 85.1014, 14.2942, 0.96", "31.642, 85.3479, 14.3387, 0.96", "32.5219, 86.3156, 14.5073, 1.68", "33.3434, 87.3007, 14.6582, 2.28", "34.018, 88.2028, 14.7862, 2.16", "34.4399, 88.8778, 14.8698, 1.92", "34.9236, 89.8493, 14.9345, 0.6", "35.3349, 90.9469, 14.962, 0.6", "35.5454, 91.638, 14.9735, 0.6", "35.7131, 92.3731, 14.9597, 0.48", "35.8839, 93.6334, 14.8969, 0.48", "35.9551, 94.835, 14.7781, 0.48", "35.9271, 95.9027, 14.5584, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "4.20705, 118.497, -21.5516, 0.48", "4.21732, 120.225, -21.2073, 0.48", "4.24769, 120.783, -21.0662, 0.12", "4.31864, 121.9, -20.7679, 0.36", "4.38077, 122.737, -20.545, 0.48", "4.44064, 123.344, -20.3882, 0.48", "4.52922, 124.101, -20.204, 0.48", "4.75556, 125.379, -19.9367, 1.68", "4.84141, 125.753, -19.8836, 2.16", "4.97512, 126.252, -19.8566, 2.4", "5.14901, 126.846, -19.8499, 2.4", "5.37067, 127.565, -19.8328, 1.92", "5.70964, 128.644, -19.8094, 0.12", "5.853, 129.07, -19.8064, 0.24", "5.98343, 129.455, -19.7894, 0.24", "6.25893, 130.287, -19.7217, 0.48", "6.60299, 131.337, -19.5948, 0.48", "6.71527, 131.68, -19.5403, 1.32", "6.91431, 132.264, -19.4339, 1.68", "7.11691, 132.841, -19.3632, 1.8", "7.30555, 133.367, -19.3323, 1.92", "7.42336, 133.693, -19.3409, 1.92", "7.70841, 134.517, -19.4215, 0.48", "8.04744, 135.528, -19.5783, 0.48", "8.32558, 136.417, -19.7343, 0.72", "8.61384, 137.387, -19.8913, 0.72", "8.87965, 138.327, -20.1524, 0.36", "9.05843, 139.012, -20.4058, 0.36", "9.25191, 139.884, -20.7822, 0.72", "9.41143, 140.756, -21.124, 1.08", "9.55142, 141.608, -21.4081, 1.32", "9.92399, 144.337, -22.1262, 0.48", "10.0053, 145.078, -22.2535, 0.36", "10.1287, 146.437, -22.373, 0.36", "10.2649, 148.288, -22.4643, 0.36", "10.3131, 148.917, -22.4915, 1.92", "10.4144, 149.802, -22.5016, 3.0", "10.5151, 150.411, -22.4721, 3.25", "10.727, 151.392, -22.492, 3.25", "11.2047, 153.28, -22.6632, 0.36", "11.388, 153.98, -22.7707, 0.48", "11.7634, 155.43, -22.9943, 0.48", "12.0406, 156.56, -23.1629, 0.48", "12.256, 157.627, -23.3105, 0.48", "12.328, 158.122, -23.3681, 0.96", "12.3795, 158.627, -23.4077, 1.2", "12.44, 159.54, -23.4692, 0.84", "12.4937, 160.669, -23.5326, 0.48", "12.5713, 161.816, -23.5785, 0.36", "12.6824, 162.69, -23.5982, 0.36", "12.9223, 163.842, -23.6259, 0.36", "13.1223, 164.551, -23.6559, 1.32", "13.4586, 165.564, -23.7109, 2.28", "13.6846, 166.188, -23.7505, 2.76", "13.9935, 167.036, -23.81, 2.4", "14.5436, 168.722, -23.9409, 1.08", "14.875, 169.934, -24.0368, 0.36", "15.0857, 170.903, -24.1075, 0.36", "15.2607, 171.914, -24.1962, 1.68", "15.346, 172.537, -24.2565, 2.28", "15.4472, 173.534, -24.3273, 2.4", "15.5576, 175.076, -24.396, 1.68", "15.6717, 176.941, -24.4257, 1.08", "15.7221, 177.848, -24.4345, 0.6", "15.7519, 178.603, -24.4404, 0.6", "15.8056, 179.863, -24.4493, 1.44", "15.8349, 180.482, -24.4594, 1.8", "15.8731, 181.237, -24.4848, 1.8", "15.9504, 182.262, -24.5297, 0.48", "16.0976, 183.757, -24.5942, 0.48", "16.2445, 185.086, -24.7231, 1.2", "16.4421, 186.604, -24.9355, 1.68", "16.6078, 187.65, -25.0922, 2.28", "16.859, 189.149, -25.3065, 2.52", "17.1851, 191.139, -25.5358, 1.2", "17.3783, 192.466, -25.618, 0.6", "17.4636, 193.297, -25.6185, 0.48", "17.522, 194.523, -25.5215, 0.48", "17.5209, 195.511, -25.341, 0.48", "17.484, 196.503, -25.0559, 0.48", "17.4309, 197.658, -24.6156, 0.48", "17.4145, 198.348, -24.3231, 0.48", "17.4293, 199.069, -24.1053, 0.48", "17.5221, 200.084, -23.9701, 1.08", "17.6927, 201.023, -24.0113, 1.68", "17.8653, 201.776, -24.1436, 2.04", "18.0496, 202.482, -24.3226, 2.04", "18.5875, 204.444, -24.8719, 0.96", "18.7828, 205.174, -25.0911, 0.48", "18.9625, 205.869, -25.3095, 0.48", "19.2211, 206.924, -25.6067, 1.56", "19.3058, 207.328, -25.6971, 2.16", "19.4689, 208.159, -25.9233, 2.64", "19.5767, 208.744, -26.0819, 2.64", "19.7215, 209.495, -26.3224, 3.12", "19.8645, 210.175, -26.5768, 3.12", "20.1591, 211.455, -27.0848, 0.6", "20.7144, 213.656, -27.939, 0.48", "20.9449, 214.482, -28.2402, 0.36", "21.0939, 214.987, -28.4003, 0.36", "21.3475, 215.877, -28.5877, 0.96", "21.6707, 217.006, -28.7051, 0.96", "21.9619, 218.086, -28.6971, 0.72", "22.1469, 218.969, -28.6216, 0.48", "22.3313, 220.102, -28.5655, 0.48", "22.5431, 221.834, -28.5322, 1.2", "22.6223, 222.711, -28.5411, 1.68", "22.6961, 223.831, -28.5818, 2.04", "22.7681, 225.05, -28.6546, 1.8", "22.8682, 226.573, -28.7806, 0.6", "22.9483, 227.579, -28.8891, 0.48", "23.0727, 228.826, -29.0597, 0.48", "23.2294, 230.058, -29.2249, 0.48", "23.3488, 230.768, -29.3072, 0.48", "23.4838, 231.393, -29.3533, 1.08", "23.6865, 232.247, -29.3707, 1.32", "23.8129, 232.733, -29.3787, 1.32", "24.066, 233.607, -29.3735, 0.72", "24.2348, 234.149, -29.3748, 0.48", "24.4717, 234.922, -29.3812, 0.72", "24.7331, 235.771, -29.4093, 1.08", "25.0085, 236.686, -29.4731, 1.32", "25.3239, 237.786, -29.5901, 0.48", "25.5765, 238.748, -29.7606, 0.48", "25.8232, 239.691, -29.9811, 0.48", "26.0972, 240.733, -30.2567, 1.44", "26.3352, 241.651, -30.5012, 2.28", "26.6174, 242.765, -30.787, 1.92", "27.0162, 244.355, -31.1667, 0.48", "27.3255, 245.577, -31.3995, 0.48", "27.544, 246.458, -31.5101, 0.72", "27.6902, 247.116, -31.5374, 0.48", "27.8042, 247.782, -31.5029, 0.36", "27.8954, 248.807, -31.4826, 0.36", "27.8956, 249.811, -31.5345, 0.36", "27.8138, 250.915, -31.7054, 1.8", "27.6833, 252.007, -31.9619, 3.0", "27.5138, 253.078, -32.2785, 3.25", "26.9767, 255.696, -33.2527, 1.8", "26.7195, 256.787, -33.7261, 0.48", "26.5632, 257.437, -34.0376, 0.48", "26.4678, 257.89, -34.2606, 0.72", "26.3754, 258.493, -34.5203, 0.48", "26.3173, 259.682, -34.8694, 0.36", "26.3853, 260.673, -34.9525, 0.36", "26.4763, 261.308, -34.9641, 0.72", "26.6844, 262.441, -34.929, 1.08", "26.871, 263.364, -34.8656, 1.2", "27.1734, 264.783, -34.692, 0.72", "27.4617, 266.122, -34.4668, 0.36", "27.6438, 267.004, -34.3093, 0.36", "27.8598, 268.187, -34.0728, 0.36", "28.0315, 269.277, -33.8407, 0.36", "28.1891, 270.518, -33.6174, 1.92", "28.2557, 271.271, -33.4994, 2.76", "28.2699, 271.51, -33.4691, 3.12", "28.3347, 272.704, -33.3482, 2.76", "28.3577, 273.101, -33.3244, 2.76", "28.4527, 274.591, -33.2662, 0.48", "28.5203, 275.712, -33.256, 0.48", "28.5522, 276.335, -33.2522, 0.96", "28.5789, 276.918, -33.2516, 0.6", "28.6074, 277.663, -33.2574, 0.48", "28.6319, 278.299, -33.2463, 0.36", "28.7117, 279.798, -33.1282, 0.36", "28.7553, 280.426, -33.0714, 0.48", "28.8121, 281.051, -33.0218, 0.36", "28.8991, 281.788, -32.9581, 0.36", "28.9703, 282.334, -32.9022, 0.36", "29.1082, 283.311, -32.8418, 1.2", "29.1862, 283.925, -32.8341, 2.04", "29.263, 284.647, -32.8193, 2.16", "29.3334, 285.554, -32.7995, 1.68", "29.3823, 286.558, -32.7807, 0.48", "29.4263, 287.712, -32.7667, 0.36", "29.4962, 289.961, -32.7378, 0.36", "29.5305, 290.986, -32.7126, 1.2", "29.5538, 291.505, -32.7035, 0.84", "29.5997, 292.249, -32.7039, 0.48", "29.7279, 293.589, -32.741, 0.36", "29.8, 294.161, -32.7975, 0.36", "29.9104, 294.812, -32.9455, 1.44", "30.0733, 295.74, -33.22, 1.92", "30.177, 296.32, -33.3993, 2.04", "30.3528, 297.295, -33.6989, 2.04", "30.5894, 298.714, -34.0526, 0.48", "30.8247, 300.302, -34.3431, 0.48", "30.9084, 300.912, -34.4102, 0.6", "30.9566, 301.315, -34.4262, 0.48", "31.0848, 302.493, -34.4236, 0.48", "31.227, 304.133, -34.3209, 2.64", "31.2954, 305.151, -34.1975, 3.49", "31.3161, 305.591, -34.1383, 3.49", "31.3424, 306.227, -34.0537, 3.49", "31.4054, 307.999, -33.8354, 0.48", "31.4441, 309.16, -33.6973, 0.72", "31.4823, 309.988, -33.6137, 0.48", "31.5276, 310.617, -33.5477, 0.48", "31.6017, 311.432, -33.4636, 1.32", "31.674, 311.933, -33.4148, 1.56", "31.833, 312.667, -33.346, 1.56", "32.036, 313.391, -33.3075, 0.48", "32.3036, 314.254, -33.2883, 0.48", "32.501, 314.889, -33.2695, 0.6", "32.7798, 315.852, -33.2331, 0.6", "32.9922, 316.647, -33.1983, 0.36", "33.1487, 317.295, -33.1783, 0.36", "33.3101, 318.159, -33.1646, 0.36", "33.3875, 318.85, -33.1785, 1.32", "33.4158, 319.482, -33.197, 1.56", "33.4023, 319.985, -33.2097, 1.32", "33.3656, 320.605, -33.223, 0.36", "33.3358, 321.512, -33.2326, 0.36", "33.3484, 322.241, -33.2391, 1.2", "33.4106, 323.009, -33.257, 1.2", "33.5206, 323.909, -33.2882, 0.36", "33.6566, 324.777, -33.3228, 0.36", "33.8256, 325.667, -33.357, 0.48", "33.9694, 326.331, -33.406, 0.48", "34.1736, 327.258, -33.5033, 0.48", "34.2275, 327.502, -33.5414, 0.48", "34.365, 328.108, -33.6463, 0.72", "34.5578, 328.963, -33.7863, 0.72", "34.655, 329.422, -33.844, 0.48", "34.8162, 330.167, -33.9052, 0.48", "35.0114, 331.05, -33.9401, 1.08", "35.1916, 331.814, -33.937, 1.68", "35.3654, 332.516, -33.9197, 1.68", "35.5513, 333.289, -33.901, 0.84", "35.6721, 333.782, -33.9048, 0.72", "35.908, 334.751, -34.0098, 0.72", "36.1627, 335.807, -34.2079, 1.32", "36.3092, 336.425, -34.3592, 2.4", "36.5158, 337.323, -34.6189, 2.76", "36.7101, 338.217, -34.8957, 2.04", "37.0298, 339.779, -35.3776, 0.48", "37.1731, 340.515, -35.6001, 0.48", "37.2832, 341.121, -35.7702, 0.6", "37.3475, 341.473, -35.8473, 0.48", "37.6157, 342.932, -36.0525, 0.48", "37.7225, 343.553, -36.0894, 0.72", "37.8452, 344.182, -36.0763, 1.08", "37.9515, 344.679, -36.0584, 0.72", "38.1055, 345.336, -36.0119, 0.48", "38.2492, 345.949, -35.978, 0.24", "38.4056, 346.597, -35.9514, 0.24", "38.7749, 348.22, -35.9374, 3.12", "38.8832, 348.701, -35.9445, 3.37", "39.0761, 349.572, -35.9733, 3.0", "39.3803, 351.206, -36.0515, 0.48", "39.5502, 352.375, -36.1234, 0.48", "39.6741, 353.445, -36.1844, 0.84", "39.7471, 354.174, -36.2198, 0.48", "39.8807, 355.307, -36.213, 0.48", "40.0664, 356.637, -36.1294, 0.48", "40.1544, 357.165, -36.0516, 0.48", "40.3246, 358.126, -35.8667, 0.48", "40.4444, 358.706, -35.7327, 0.96", "40.7066, 359.817, -35.5063, 1.56", "40.8332, 360.241, -35.4191, 1.56", "41.1156, 361.028, -35.332, 0.48", "41.1964, 361.265, -35.3373, 0.36", "41.3843, 362.02, -35.4351, 0.36", "41.6153, 363.164, -35.6368, 1.8", "41.753, 363.949, -35.7957, 2.64", "41.9954, 365.428, -36.0749, 1.56", "42.1695, 366.498, -36.2478, 0.36", "42.369, 367.7, -36.4219, 0.48", "42.6082, 369.185, -36.5575, 0.48", "42.6852, 369.686, -36.6004, 0.48", "42.8181, 370.437, -36.6602, 1.32", "42.9094, 370.834, -36.669, 1.68", "43.0655, 371.362, -36.6411, 1.92", "43.4881, 372.712, -36.5426, 0.84", "43.8394, 374.062, -36.4251, 0.48", "44.0777, 375.183, -36.2994, 0.48", "44.177, 375.792, -36.2233, 0.48", "44.3289, 377.13, -36.055, 0.48", "44.412, 378.432, -35.8454, 0.72", "44.4348, 379.297, -35.6865, 1.32", "44.433, 380.151, -35.503, 0.84", "44.4151, 380.765, -35.3622, 0.36", "44.4048, 381.501, -35.1968, 0.36", "44.4397, 382.457, -34.9904, 0.84", "44.5028, 382.966, -34.8627, 0.36", "44.6999, 384.034, -34.5606, 0.36", "44.9888, 385.265, -34.2078, 0.84", "45.1308, 385.783, -34.0524, 0.84", "45.3086, 386.373, -33.8956, 0.36", "45.7021, 387.614, -33.6315, 0.36", "45.9229, 388.36, -33.5043, 1.2", "46.1509, 389.229, -33.4062, 2.16", "46.2095, 389.504, -33.3968, 2.28", "46.4848, 390.938, -33.3912, 0.6", "46.6015, 391.588, -33.3933, 0.36", "46.7476, 392.36, -33.3938, 0.36", "46.8505, 392.802, -33.394, 0.36", "46.9787, 393.276, -33.3782, 0.36", "47.371, 394.563, -33.2963, 0.36", "47.6639, 395.454, -33.2214, 1.08", "47.9902, 396.407, -33.1454, 1.56", "48.3821, 397.51, -33.0723, 0.72", "48.51, 397.899, -33.056, 0.48", "48.7546, 398.769, -33.0399, 0.48", "48.9702, 399.765, -33.048, 1.68", "49.115, 400.515, -33.0903, 2.52", "49.2794, 401.399, -33.1932, 1.92", "49.519, 402.615, -33.3872, 0.72", "49.6834, 403.324, -33.5323, 0.6", "49.9667, 404.377, -33.802, 0.6", "50.3916, 405.736, -34.1871, 0.6", "50.8127, 407.006, -34.5627, 1.44", "51.0064, 407.567, -34.7295, 1.92", "51.3871, 408.66, -35.0268, 0.96", "51.6499, 409.45, -35.2085, 0.36", "51.9147, 410.366, -35.3397, 0.36", "52.0988, 411.129, -35.3719, 0.36", "52.2645, 411.864, -35.3401, 0.72", "52.4701, 412.77, -35.3594, 0.36", "52.6579, 413.54, -35.4123, 0.24", "53.0007, 414.777, -35.5639, 2.04", "53.074, 415.012, -35.6109, 2.04", "53.4173, 416.002, -35.8546, 1.92", "54.2056, 418.097, -36.4525, 0.48", "54.5381, 418.937, -36.7119, 0.48", "54.8729, 419.775, -36.9761, 0.72", "55.3325, 420.964, -37.3394, 0.84", "55.8365, 422.392, -37.7439, 0.36", "56.0124, 422.951, -37.879, 0.24", "56.2369, 423.815, -38.0169, 1.2", "56.2919, 424.087, -38.0603, 1.68", "56.4319, 425.061, -38.209, 1.56", "56.5241, 426.065, -38.3443, 0.36", "56.5547, 426.805, -38.4288, 0.36", "56.5809, 428.197, -38.5486, 0.36", "56.5869, 428.819, -38.5917, 1.32", "56.5924, 429.453, -38.6235, 1.8", "56.6011, 429.962, -38.638, 1.68", "56.6274, 431.085, -38.6394, 0.48", "56.6844, 432.59, -38.6423, 0.48", "56.7295, 433.46, -38.6444, 1.8", "56.7547, 434.205, -38.6466, 2.4", "56.7575, 434.725, -38.627, 1.92", "56.7306, 435.957, -38.5067, 0.6", "56.7165, 436.297, -38.4461, 0.6", "56.6479, 437.385, -38.188, 0.6", "56.5834, 438.408, -37.9066, 0.6", "56.4903, 439.812, -37.5256, 0.6", "56.391, 441.281, -37.1627, 0.6", "56.3172, 442.503, -36.9067, 1.56", "56.2813, 443.25, -36.8037, 2.04", "56.2537, 444.049, -36.7648, 1.68", "56.2351, 445.156, -36.8076, 0.84", "56.2163, 446.096, -36.937, 0.48", "56.1385, 447.567, -37.214, 0.48", "56.0377, 448.999, -37.5079, 0.6", "55.9454, 450.071, -37.7104, 1.32", "55.8582, 450.928, -37.8523, 1.44", "55.739, 451.98, -37.992, 0.48", "55.5221, 453.926, -38.2083, 0.48", "55.462, 454.552, -38.2664, 1.32", "55.3877, 455.552, -38.3292, 2.04", "55.3534, 456.306, -38.3726, 1.68", "55.3353, 457.358, -38.4402, 0.6", "55.3498, 458.421, -38.5195, 0.48", "55.4029, 459.566, -38.6272, 0.48", "55.4375, 460.306, -38.7034, 0.48", "55.492, 461.361, -38.8169, 0.72", "55.5308, 462.101, -38.8934, 0.72", "55.5705, 462.699, -38.9451, 0.36", "55.6173, 463.575, -39.0132, 0.36", "55.6822, 464.316, -39.0595, 1.8", "55.8005, 465.051, -39.0892, 2.4", "56.0045, 466.033, -39.1014, 2.4", "56.2743, 467.187, -39.1256, 0.48", "56.3399, 467.46, -39.1321, 0.48", "56.5813, 468.487, -39.2122, 0.48", "56.7988, 469.436, -39.3382, 0.48", "56.9858, 470.422, -39.5436, 0.48", "57.0535, 470.991, -39.699, 1.08", "57.0538, 471.526, -39.8651, 1.92", "56.9706, 472.443, -40.1398, 2.16", "56.8929, 472.942, -40.271, 2.16", "56.6997, 474.106, -40.5312, 0.72", "56.6328, 474.649, -40.6154, 0.48", "56.5439, 475.716, -40.7068, 0.48", "56.5053, 476.719, -40.7508, 0.48", "56.5086, 478.242, -40.7217, 0.48", "56.5435, 478.872, -40.6909, 0.48", "56.6379, 479.774, -40.6153, 1.32", "56.7605, 480.641, -40.534, 1.92", "56.9299, 481.667, -40.389, 1.56", "57.0707, 482.541, -40.2319, 0.36", "57.2456, 483.68, -39.9719, 0.36", "57.378, 484.547, -39.7523, 0.6", "57.5098, 485.37, -39.515, 0.6", "57.709, 486.513, -39.1546, 0.24", "57.8536, 487.215, -38.929, 0.24", "58.098, 488.225, -38.6404, 1.92", "58.2401, 488.745, -38.4904, 2.4", "58.5815, 489.878, -38.1952, 1.92", "58.9035, 490.957, -37.9601, 0.48", "59.1877, 491.974, -37.7891, 0.48", "59.4909, 493.215, -37.6038, 0.48", "59.7168, 494.343, -37.4677, 1.44", "59.9272, 495.58, -37.3376, 2.04", "60.1075, 496.813, -37.2348, 1.08", "60.2327, 497.687, -37.1656, 0.6", "60.3814, 498.672, -37.1022, 0.48", "60.5925, 499.773, -37.0556, 0.48", "60.7456, 500.422, -37.0488, 0.48", "60.9149, 501.067, -37.0424, 0.96", "61.1712, 502.013, -37.0345, 1.44", "61.4504, 503.092, -37.0313, 0.84", "61.6381, 503.872, -37.0313, 0.48", "61.9193, 505.222, -37.0313, 0.48", "62.075, 506.214, -37.0164, 0.6", "62.1904, 507.337, -36.9853, 0.72", "62.2188, 507.968, -36.9607, 0.12", "62.2182, 508.218, -36.9283, 0.12", "62.1901, 509.08, -36.7578, 1.56", "62.1519, 509.999, -36.5354, 2.28", "62.1195, 510.718, -36.3477, 2.52", "62.0874, 511.323, -36.1844, 2.52", "61.9526, 513.445, -35.6439, 0.72", "61.8374, 515.29, -35.2989, 0.72", "61.7838, 516.278, -35.1286, 0.96", "61.7578, 516.899, -35.0206, 0.6", "61.7382, 517.522, -34.9005, 0.48", "61.7009, 518.878, -34.6528, 0.48", "61.6829, 520.803, -34.3729, 0.48", "61.7139, 522.21, -34.1535, 0.48", "61.7856, 523.396, -33.9745, 1.92", "61.9345, 524.913, -33.7995, 0.96", "62.1141, 526.188, -33.6926, 0.48", "62.5324, 528.521, -33.5979, 0.48", "62.8568, 530.071, -33.5873, 0.48", "63.192, 531.53, -33.6781, 0.48", "63.5406, 532.882, -33.8228, 1.2", "63.7854, 533.723, -33.9342, 1.92", "64.191, 534.989, -34.1121, 1.44", "64.4458, 535.811, -34.2298, 1.08", "64.6077, 536.415, -34.3049, 0.48", "64.7998, 537.279, -34.3848, 0.96", "64.9678, 538.167, -34.4275, 0.96", "65.0776, 538.828, -34.4534, 0.48", "65.4119, 540.807, -34.4755, 0.48", "65.5415, 541.562, -34.4788, 0.6", "65.6278, 542.047, -34.4723, 0.48", "65.8275, 543.178, -34.4203, 0.48", "66.0879, 544.786, -34.2975, 0.48", "66.216, 545.726, -34.2088, 0.96", "66.299, 546.471, -34.1208, 1.2", "66.369, 547.341, -34.01, 0.6", "66.3925, 548.025, -33.9367, 0.36", "66.3524, 549.635, -33.8, 0.36", "66.2582, 550.683, -33.7479, 0.72", "66.1433, 551.496, -33.7513, 1.44", "65.9981, 552.373, -33.7708, 2.4", "65.7659, 553.749, -33.8226, 1.56", "65.6364, 554.533, -33.8525, 0.48", "65.3288, 556.537, -33.9061, 0.48", "65.2188, 557.517, -33.8788, 0.6", "65.1839, 558.06, -33.8279, 0.48", "65.1833, 559.182, -33.6135, 0.48", "65.2532, 559.877, -33.4199, 0.48", "65.4108, 560.653, -33.1401, 0.84", "65.8605, 562.185, -32.4757, 0.96", "66.2124, 563.184, -32.0198, 0.48", "66.5148, 563.956, -31.6573, 0.36", "67.0529, 565.238, -31.0587, 0.36", "67.5305, 566.361, -30.5805, 0.96", "67.627, 566.591, -30.48, 1.08", "67.9379, 567.363, -30.1461, 0.48", "68.3076, 568.344, -29.6477, 0.48", "68.628, 569.266, -29.1271, 0.48", "68.888, 570.076, -28.6378, 0.48", "69.2476, 571.257, -27.9862, 0.48", "69.6453, 572.637, -27.2923, 0.48", "70.075, 574.332, -26.5422, 1.68", "70.218, 574.938, -26.3131, 2.4", "70.3359, 575.459, -26.1445, 2.64", "70.6695, 577.086, -25.8117, 0.24", "70.8283, 578.323, -25.7634, 0.24", "70.8642, 579.47, -25.8482, 0.24", "70.8625, 579.595, -25.8659, 0.72", "70.826, 580.464, -25.9959, 0.84", "70.7425, 581.6, -26.1738, 0.24", "70.5336, 583.423, -26.4727, 0.24", "70.3416, 584.92, -26.753, 0.24", "70.2929, 585.286, -26.8262, 0.48" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 25
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.20705, 118.497, -21.5516, 0.12", "3.72501, 118.864, -22.8945, 0.12", "3.63388, 118.932, -23.1384, 0.12", "3.32758, 119.156, -23.8781, 1.2", "3.03409, 119.35, -24.5472, 1.44", "1.33743, 120.407, -28.1348, 0.36", "0.96187, 120.656, -28.8855, 0.36", "0.75779, 120.81, -29.3117, 1.8", "0.461509, 121.057, -29.9003, 2.16", "-0.736745, 122.182, -32.1284, 0.36", "-1.14254, 122.608, -32.8759, 0.36", "-1.59137, 123.128, -33.5922, 1.32", "-1.98808, 123.654, -34.3593, 0.24", "-2.20099, 123.987, -34.8375, 0.24", "-2.72686, 124.891, -36.0672, 0.6", "-3.3986, 126.129, -37.5481, 1.68", "-3.61034, 126.5, -37.9735, 2.04", "-4.60821, 128.081, -39.8027, 0.36", "-4.99585, 128.664, -40.4167, 0.36", "-5.46402, 129.361, -41.0438, 1.56", "-5.90707, 130.044, -41.5418, 0.36", "-6.41885, 130.832, -42.0024, 0.6", "-6.72841, 131.302, -42.2601, 0.12", "-7.21661, 132.041, -42.5791, 0.12", "-7.45291, 132.439, -42.7695, 0.48", "-8.06354, 133.72, -43.4774, 0.12", "-8.23817, 134.151, -43.7229, 0.12", "-8.37086, 134.527, -43.9272, 0.12", "-8.54859, 135.063, -44.1931, 1.68", "-8.74321, 135.739, -44.4841, 2.04", "-9.09161, 137.178, -44.9934, 0.24", "-9.22872, 137.807, -45.1633, 0.24", "-9.32676, 138.294, -45.305, 0.48", "-9.42804, 138.837, -45.4947, 0.12", "-9.7038, 140.325, -46.0435, 0.12", "-9.95242, 141.679, -46.5397, 0.12", "-10.1142, 142.557, -46.8428, 0.12", "-10.3483, 143.836, -47.2659, 1.68", "-10.6556, 145.391, -47.7425, 0.12", "-10.9132, 146.617, -48.0837, 0.12", "-11.0468, 147.223, -48.2367, 1.32", "-11.2012, 147.98, -48.3742, 1.68", "-11.3867, 149.025, -48.4885, 0.12", "-11.5309, 150.021, -48.5002, 0.12", "-11.5622, 150.397, -48.4837, 0.36", "-11.5795, 150.906, -48.4657, 0.12", "-11.5832, 152.161, -48.4331, 0.12", "-11.5641, 152.917, -48.4227, 1.56", "-11.5149, 154.046, -48.4227, 0.12", "-11.4005, 156.073, -48.4227, 0.12", "-11.3792, 156.471, -48.4236, 0.48", "-11.3619, 156.838, -48.4251, 0.12", "-11.2967, 158.211, -48.4447, 0.12", "-11.2534, 159.081, -48.4651, 1.2", "-11.2213, 159.71, -48.4876, 1.2", "-11.1889, 160.344, -48.516, 0.12", "-11.1062, 161.336, -48.5619, 0.12", "-11.0346, 162.001, -48.5933, 1.32", "-10.9515, 162.624, -48.6228, 1.68", "-10.7383, 164.12, -48.6888, 0.12", "-10.5748, 165.229, -48.7373, 0.12", "-10.4178, 166.334, -48.7805, 0.12", "-10.365, 166.728, -48.7943, 0.12", "-10.2795, 167.479, -48.8124, 0.12", "-10.2318, 167.996, -48.8233, 1.2", "-10.1664, 168.886, -48.8382, 0.12", "-10.0951, 170.006, -48.8678, 0.12", "-10.076, 170.394, -48.8805, 0.36", "-10.0514, 170.796, -48.8946, 0.12", "-9.95083, 172.047, -48.9391, 0.12", "-9.89187, 172.597, -48.9579, 0.96", "-9.81794, 173.156, -48.9725, 0.12", "-9.61823, 174.393, -48.9286, 0.12", "-9.5122, 175.014, -48.8955, 0.84", "-9.40232, 175.634, -48.8531, 0.36", "-9.3309, 176.024, -48.8197, 0.12", "-8.8529, 178.491, -48.61, 0.12", "-8.57153, 179.825, -48.4976, 0.24", "-8.44958, 180.368, -48.4588, 0.48", "-8.36277, 180.755, -48.4384, 0.12", "-8.12584, 181.914, -48.419, 0.12", "-8.00836, 182.683, -48.4423, 0.84", "-7.97276, 183.086, -48.4845, 0.12", "-7.87235, 184.325, -48.6689, 0.12", "-7.8642, 184.513, -48.693, 0.6", "-7.90365, 185.114, -48.8122, 0.12", "-8.04349, 185.872, -49.0066, 0.12", "-8.22275, 186.585, -49.207, 1.08", "-8.46115, 187.397, -49.4965, 1.32", "-8.70391, 188.059, -49.7753, 1.68", "-9.1858, 189.275, -50.2979, 0.12", "-9.5012, 189.998, -50.658, 0.12", "-9.6541, 190.295, -50.8205, 0.48", "-9.97668, 190.834, -51.1101, 0.12", "-10.4568, 191.577, -51.4779, 0.12", "-10.7451, 192.013, -51.6663, 0.48", "-11.2962, 192.772, -51.9433, 0.12", "-11.8914, 193.488, -52.1855, 0.12", "-12.4825, 194.18, -52.3742, 0.12", "-12.7669, 194.515, -52.4389, 0.84", "-13.1665, 194.982, -52.5164, 0.84", "-13.4181, 195.258, -52.548, 0.12", "-14.0865, 195.936, -52.5732, 0.12", "-14.5372, 196.354, -52.5951, 0.12", "-14.6307, 196.433, -52.5969, 0.48", "-15.0022, 196.728, -52.5925, 0.12", "-15.4424, 197.05, -52.5802, 0.12", "-16.0377, 197.421, -52.5231, 1.32", "-16.2804, 197.536, -52.4872, 1.56", "-17.1258, 197.859, -52.3344, 0.12", "-17.6987, 198.062, -52.2274, 0.12", "-18.0954, 198.187, -52.1018, 0.48", "-18.6426, 198.338, -51.8758, 0.12", "-18.9612, 198.436, -51.7364, 0.12", "-19.3376, 198.569, -51.5788, 0.12", "-19.7052, 198.723, -51.4016, 0.72", "-20.8436, 199.309, -50.8376, 0.12", "-21.3334, 199.607, -50.6059, 0.12", "-22.0892, 200.116, -50.2364, 1.8", "-22.5863, 200.473, -49.9691, 2.04", "-23.7498, 201.341, -49.3243, 0.24", "-24.1886, 201.683, -49.0829, 0.24", "-24.7483, 202.153, -48.8058, 0.24", "-25.5625, 202.888, -48.3971, 0.24", "-26.0726, 203.367, -48.1353, 0.96", "-26.368, 203.656, -47.9977, 1.32", "-26.8488, 204.145, -47.8095, 0.12", "-27.3755, 204.682, -47.6103, 0.12", "-28.1452, 205.477, -47.3685, 0.12", "-28.431, 205.806, -47.3102, 0.96", "-28.6635, 206.119, -47.2736, 0.96", "-28.9395, 206.536, -47.235, 0.24", "-29.2616, 207.07, -47.2112, 0.24", "-29.4598, 207.434, -47.209, 0.12", "-29.9644, 208.455, -47.2421, 0.12", "-30.3322, 209.245, -47.2938, 0.12", "-30.5471, 209.728, -47.3327, 0.96", "-30.7382, 210.141, -47.42, 0.12", "-31.0247, 210.708, -47.6002, 0.12", "-31.154, 210.936, -47.6898, 0.12", "-31.2795, 211.145, -47.7987, 1.2", "-31.4804, 211.49, -47.9957, 1.2", "-32.193, 212.826, -48.741, 0.12", "-32.4614, 213.357, -49.0922, 0.12", "-32.704, 213.908, -49.4714, 0.12", "-32.9232, 214.458, -49.8476, 0.12", "-33.0611, 214.851, -50.1242, 0.72", "-33.2105, 215.3, -50.4121, 0.84", "-33.6451, 216.717, -51.1924, 0.12", "-33.9197, 217.636, -51.7442, 0.12", "-33.9666, 217.774, -51.827, 0.24", "-34.1956, 218.347, -52.1695, 0.12", "-34.705, 219.537, -52.9291, 0.12", "-34.797, 219.731, -53.0526, 1.2", "-35.2696, 220.605, -53.61, 0.12", "-35.7341, 221.353, -54.1853, 0.12", "-36.0777, 221.903, -54.6354, 0.72", "-36.4366, 222.42, -55.1341, 0.12", "-36.697, 222.73, -55.5062, 0.12", "-37.1647, 223.187, -56.1141, 0.12", "-37.5367, 223.503, -56.5733, 1.08", "-37.8112, 223.708, -56.929, 1.08", "-38.5001, 224.171, -57.7693, 0.12", "-39.0295, 224.475, -58.3659, 0.12", "-39.1783, 224.551, -58.5398, 0.36" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "4.79638, 117.023, -73.961, 0.12", "5.31734, 118.175, -74.4165, 0.12", "5.89595, 119.499, -74.9571, 2.64", "6.11396, 120.035, -75.1843, 2.16", "6.52479, 121.2, -75.6768, 0.24", "6.86005, 122.239, -76.0897, 0.24", "7.09515, 123.025, -76.3845, 0.24", "7.40421, 124.226, -76.7565, 0.96", "7.58192, 125.048, -76.9873, 0.12", "7.77877, 126.072, -77.1924, 0.12", "7.92475, 126.88, -77.2764, 0.24", "8.00895, 127.365, -77.2888, 0.24", "8.19501, 128.377, -77.2393, 1.68", "8.33919, 129.147, -77.184, 2.52", "8.60449, 130.429, -77.136, 1.56", "8.71503, 130.97, -77.1419, 0.48", "9.01391, 132.699, -77.259, 0.48", "9.16188, 133.686, -77.368, 1.32", "9.30095, 134.821, -77.5751, 0.96", "9.39257, 135.685, -77.7842, 0.12", "9.47185, 136.547, -78.0443, 0.12", "9.56321, 137.607, -78.3852, 1.8", "9.62515, 138.332, -78.6248, 1.92", "9.71961, 139.432, -78.9424, 0.12", "9.80259, 140.318, -79.1078, 0.12", "9.82428, 140.581, -79.1396, 0.48", "9.87464, 141.164, -79.1882, 0.12", "9.92651, 141.791, -79.2092, 0.12", "9.97642, 142.787, -79.1775, 0.72", "9.99944, 143.624, -79.0932, 0.12", "9.99244, 144.529, -79.0022, 0.12", "9.98594, 144.906, -78.9672, 0.48", "9.97559, 145.268, -78.9412, 0.12", "9.94026, 146.177, -78.922, 0.12", "9.92181, 146.565, -78.9365, 1.2", "9.88992, 147.279, -78.9865, 1.32", "9.89281, 148.034, -79.0204, 0.84", "9.9046, 148.369, -79.0271, 0.12", "9.94893, 149.124, -79.0176, 0.12", "9.97637, 149.374, -79.006, 0.6", "10.0566, 149.898, -78.9742, 0.12", "10.2904, 151.057, -78.8855, 0.12", "10.4084, 151.55, -78.8496, 0.6", "10.5109, 151.944, -78.8829, 0.12", "10.6845, 152.537, -78.9976, 0.12", "10.9665, 153.537, -79.2562, 1.56", "11.0626, 153.904, -79.3693, 2.04", "11.248, 154.671, -79.6263, 1.68", "11.7896, 156.826, -80.4349, 0.12", "12.0455, 157.853, -80.8711, 0.12", "12.196, 158.512, -81.1897, 0.12", "12.3056, 159.054, -81.4759, 1.08", "12.3845, 159.476, -81.705, 1.56", "12.5651, 160.488, -82.3115, 0.12", "12.8158, 161.723, -83.0663, 0.12", "13.0094, 162.49, -83.6332, 0.48", "13.2348, 163.223, -84.2618, 0.48", "13.3694, 163.584, -84.6009, 0.48", "13.7569, 164.495, -85.5948, 1.44", "13.939, 164.881, -86.0332, 1.92", "14.2646, 165.448, -86.6946, 1.44", "14.7117, 166.125, -87.5458, 0.48", "15.2741, 166.913, -88.5683, 0.36", "16.0134, 167.89, -89.8386, 0.12", "16.449, 168.444, -90.5233, 1.56", "16.7932, 168.877, -91.0637, 1.2", "17.7183, 170.013, -92.3925, 0.12", "18.0221, 170.351, -92.7853, 0.12", "18.2235, 170.552, -93.0223, 0.6", "18.4856, 170.799, -93.2739, 0.6", "19.0093, 171.281, -93.7907, 0.36", "19.3803, 171.622, -94.1185, 0.36", "20.0356, 172.227, -94.5655, 0.12", "20.4426, 172.617, -94.8037, 0.12", "21.0893, 173.269, -95.1441, 0.12", "21.9111, 174.142, -95.5762, 1.56", "22.4372, 174.721, -95.8349, 2.16", "23.1953, 175.617, -96.2095, 0.24", "24.1907, 176.927, -96.7887, 0.24", "24.5821, 177.531, -97.071, 0.12", "25.2148, 178.638, -97.6069, 1.68", "25.389, 179.002, -97.7981, 2.28", "25.5502, 179.421, -98.0411, 2.28", "26.0115, 180.965, -99.071, 0.12", "26.2231, 181.965, -99.7947, 0.12", "26.2682, 182.268, -100.02, 0.6", "26.3522, 183.318, -100.858, 0.24", "26.359, 183.873, -101.348, 0.24", "26.3507, 184.572, -101.987, 0.24", "26.3216, 185.053, -102.429, 0.96", "26.2483, 185.697, -103.062, 1.44", "26.0683, 186.868, -104.199, 0.12", "25.8725, 187.977, -105.164, 0.12", "25.7866, 188.444, -105.544, 0.12", "25.756, 188.598, -105.651, 0.48", "25.6964, 188.928, -105.854, 0.48", "25.6708, 189.084, -105.933, 0.48", "25.5192, 190.03, -106.289, 0.48", "25.3572, 191.065, -106.629, 1.32", "25.2753, 191.598, -106.802, 1.8", "25.1906, 192.404, -107.045, 0.96", "25.1357, 193.144, -107.241, 0.12", "25.0788, 194.234, -107.523, 0.12", "25.0528, 194.847, -107.666, 1.2", "25.0596, 195.336, -107.783, 1.56", "25.11, 196.008, -108.005, 0.12", "25.2308, 197.072, -108.406, 0.12", "25.387, 198.036, -108.808, 0.12", "25.5951, 198.984, -109.355, 0.12", "25.9752, 200.525, -110.381, 0.12", "26.3165, 201.796, -111.366, 0.12", "26.4578, 202.288, -111.773, 0.84", "26.5588, 202.621, -112.058, 0.96", "27.0491, 204.302, -113.487, 0.12", "27.2322, 205.036, -114.104, 0.12", "27.315, 205.785, -114.632, 0.12", "27.3394, 206.572, -115.09, 0.12", "27.3194, 207.255, -115.481, 0.36", "27.3063, 207.368, -115.532, 0.12", "27.1539, 207.913, -115.54, 0.12", "26.8903, 208.476, -115.488, 0.48" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "4.79638, 117.023, -73.961, 0.12", "3.09114, 118.311, -78.0308, 0.12", "2.73245, 118.597, -78.7739, 0.12", "2.20168, 119.013, -79.6447, 0.12", "1.82941, 119.306, -80.1677, 0.84", "0.991004, 119.963, -81.2172, 1.8", "0.688287, 120.201, -81.558, 1.92", "-0.0640132, 120.83, -82.0743, 0.12", "-0.972313, 121.68, -82.6394, 0.12", "-1.57531, 122.282, -82.9452, 0.96", "-1.86568, 122.592, -83.0711, 1.2", "-2.54418, 123.364, -83.2953, 0.12", "-2.9818, 123.91, -83.4627, 0.12", "-3.78993, 125.108, -83.8085, 0.12", "-4.05903, 125.574, -83.9438, 1.2", "-4.2211, 125.876, -84.0247, 1.44", "-4.55806, 126.536, -84.2406, 0.6", "-4.97837, 127.358, -84.5469, 0.12", "-5.37815, 128.053, -84.8488, 0.12", "-5.69532, 128.51, -85.1135, 0.96", "-5.93179, 128.815, -85.3136, 1.32", "-6.62588, 129.587, -85.8563, 0.12", "-7.02037, 129.954, -86.1313, 0.12", "-7.51588, 130.337, -86.4641, 0.12", "-8.44092, 130.946, -87.0905, 0.12", "-9.00104, 131.295, -87.469, 1.08", "-9.41148, 131.534, -87.7285, 1.8", "-9.95625, 131.823, -88.0881, 1.2", "-10.8069, 132.263, -88.6923, 0.12", "-11.2098, 132.469, -88.9795, 0.12", "-11.5442, 132.631, -89.2064, 0.12", "-11.941, 132.813, -89.5235, 0.12", "-13.3847, 133.434, -90.7478, 0.12", "-13.7016, 133.564, -91.015, 1.44", "-14.0721, 133.709, -91.3781, 2.04", "-14.6584, 133.908, -91.9934, 1.32", "-15.9638, 134.28, -93.3191, 0.12", "-16.3964, 134.382, -93.7379, 0.12", "-16.8032, 134.449, -94.0821, 0.96", "-18.5986, 134.618, -95.513, 0.12", "-19.2916, 134.641, -96.0021, 0.12", "-20.0644, 134.628, -96.4898, 1.56", "-20.4033, 134.606, -96.6594, 1.8", "-21.3356, 134.539, -97.1228, 0.12", "-21.591, 134.522, -97.2365, 0.12", "-22.1577, 134.491, -97.4472, 0.48", "-23.3223, 134.447, -97.9709, 0.12", "-24.0889, 134.429, -98.3569, 0.12", "-24.7245, 134.419, -98.6543, 1.32", "-25.1827, 134.4, -98.8399, 1.56", "-26.1704, 134.284, -99.1305, 0.12", "-26.6462, 134.169, -99.21, 0.12", "-26.8741, 134.09, -99.2173, 0.48", "-27.5876, 133.779, -99.2138, 0.12", "-28.2848, 133.442, -99.1831, 0.12", "-29.1985, 132.969, -99.1026, 0.12", "-30.0264, 132.522, -98.9938, 0.12", "-30.3589, 132.342, -98.9537, 0.72", "-30.6588, 132.186, -98.8883, 0.12", "-31.442, 131.824, -98.6705, 0.12", "-31.9502, 131.63, -98.4982, 0.12", "-32.4907, 131.461, -98.2936, 1.44", "-33.073, 131.308, -98.0641, 1.8", "-34.8014, 130.892, -97.3865, 0.12", "-35.3463, 130.774, -97.1619, 0.12", "-36.7845, 130.506, -96.5639, 0.12", "-37.0998, 130.461, -96.4457, 0.24", "-37.3472, 130.439, -96.3441, 0.12", "-37.6955, 130.414, -96.1952, 0.12", "-38.6576, 130.396, -95.8214, 1.32", "-38.7666, 130.401, -95.7714, 1.56", "-39.5156, 130.483, -95.3805, 1.56", "-40.6051, 130.656, -94.8412, 0.24", "-40.8261, 130.705, -94.74, 0.12", "-41.526, 130.9, -94.4837, 0.12", "-42.1295, 131.09, -94.3403, 0.12", "-42.3772, 131.17, -94.2896, 0.48", "-42.7833, 131.316, -94.2349, 0.48", "-43.0084, 131.404, -94.2333, 0.12", "-43.9361, 131.765, -94.2333, 0.12", "-44.6346, 131.988, -94.2333, 0.72" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-41.1176, 34.1684, -81.3871, 0.12", "-41.8361, 32.618, -82.7637, 0.12", "-42.262, 31.7682, -83.6731, 0.12", "-42.8054, 30.7106, -84.8065, 0.12", "-42.9326, 30.4656, -85.064, 1.56", "-43.221, 29.9125, -85.6191, 1.56", "-43.5208, 29.3524, -86.1479, 0.96", "-44.1125, 28.3645, -87.0715, 0.12", "-44.4832, 27.7737, -87.6753, 0.12", "-44.6009, 27.5882, -87.8395, 0.12", "-44.8422, 27.1918, -88.1348, 0.12", "-45.1285, 26.6763, -88.4929, 0.6", "-45.3067, 26.3294, -88.7082, 0.72", "-46.0189, 24.8219, -89.492, 0.12", "-46.3111, 24.1417, -89.9833, 0.12", "-46.6922, 23.1421, -90.7484, 2.04", "-47.2801, 21.4173, -92.1689, 0.12", "-47.5274, 20.6443, -92.8239, 0.12", "-47.7981, 19.8129, -93.5816, 2.28", "-48.6936, 17.1362, -96.0336, 0.12", "-48.9928, 16.3089, -96.8682, 0.12", "-49.2439, 15.7364, -97.6529, 0.12", "-49.3609, 15.5134, -98.0112, 0.12", "-49.8349, 14.7545, -99.3369, 0.12", "-50.1754, 14.3174, -100.159, 1.92", "-50.4227, 14.0473, -100.642, 2.28", "-52.5747, 11.8385, -104.759, 0.12", "-52.8086, 11.6, -105.174, 0.12", "-53.3943, 10.9779, -106.191, 1.8", "-53.6397, 10.705, -106.591, 1.8", "-54.0221, 10.2557, -107.191, 1.2", "-54.7045, 9.28965, -108.135, 0.12", "-55.052, 8.70475, -108.362, 0.12", "-55.1658, 8.4935, -108.457, 0.6", "-55.4153, 7.91228, -108.719, 0.12", "-55.7329, 7.03114, -109.113, 0.12", "-55.806, 6.8219, -109.201, 0.36", "-55.9594, 6.34861, -109.449, 0.36", "-56.056, 6.02124, -109.658, 0.12", "-56.3526, 5.01524, -110.292, 0.12", "-56.5953, 4.1397, -111.023, 0.12", "-56.6791, 3.81425, -111.313, 0.96", "-57.0223, 2.34573, -112.613, 0.12", "-57.1426, 1.76624, -113.236, 0.12", "-57.3154, 0.851986, -114.293, 2.76", "-57.7026, -1.39911, -117.235, 0.12", "-57.8143, -2.12537, -118.205, 0.12", "-57.8474, -2.41781, -118.6, 0.96", "-57.949, -4.56503, -121.595, 0.12", "-57.9273, -5.02314, -122.316, 0.12", "-57.7724, -5.90547, -123.805, 0.12", "-57.6902, -6.15218, -124.205, 1.2", "-57.5122, -6.54738, -124.846, 2.28", "-56.968, -7.5397, -126.28, 1.68", "-56.3963, -8.36896, -127.165, 0.12", "-56.0591, -8.76683, -127.635, 0.12", "-55.8592, -8.98401, -127.882, 0.12", "-55.5935, -9.26568, -128.264, 0.12", "-55.3235, -9.57253, -128.656, 0.6", "-55.1342, -9.79931, -128.899, 0.6", "-54.5495, -10.6428, -129.995, 0.24", "-54.4508, -10.8327, -130.291, 0.24", "-54.1974, -11.4629, -131.361, 0.12", "-53.9758, -12.1959, -132.526, 2.4", "-53.9414, -12.3325, -132.724, 2.4", "-53.634, -14.1101, -135.438, 0.12", "-53.4845, -15.3575, -137.299, 0.12", "-53.4145, -16.1268, -138.446, 0.12", "-53.3741, -16.8582, -139.557, 3.12", "-53.3725, -17.1844, -140.061, 3.12", "-53.4622, -20.1245, -144.297, 0.12", "-53.4905, -20.5655, -144.881, 0.12", "-53.5111, -20.792, -145.169, 0.48", "-53.5622, -21.2994, -145.79, 0.12", "-53.6176, -21.7006, -146.302, 0.12", "-53.6928, -21.9829, -146.699, 0.48", "-53.8825, -22.4903, -147.381, 0.12", "-54.0627, -22.9209, -147.981, 0.12", "-54.5386, -24.1169, -149.545, 2.76", "-54.6277, -24.3572, -149.834, 2.76", "-55.581, -27.0712, -152.96, 0.12", "-55.7104, -27.4837, -153.394, 0.12", "-55.862, -28.0192, -153.922, 0.12", "-56.0714, -28.8194, -154.682, 0.12", "-56.2979, -29.7616, -155.526, 1.8", "-56.4133, -30.4123, -156.079, 2.16", "-56.5039, -31.0799, -156.564, 1.92", "-56.7855, -32.7312, -157.962, 0.12", "-56.8709, -33.0903, -158.295, 0.72", "-57.1213, -33.7479, -158.965, 0.72", "-57.2928, -34.1089, -159.307, 0.12", "-57.6589, -34.7821, -159.884, 0.12", "-58.0713, -35.478, -160.411, 0.12", "-58.4935, -36.1971, -160.834, 2.4", "-59.4577, -37.888, -161.707, 0.12", "-60.0457, -38.967, -162.202, 0.12", "-60.2705, -39.43, -162.385, 0.6", "-60.4164, -39.7687, -162.522, 0.12", "-60.691, -40.4495, -162.779, 0.12", "-60.7741, -40.6694, -162.861, 0.48", "-60.9906, -41.3169, -163.163, 0.12", "-61.4721, -42.8104, -164.018, 0.12", "-61.8323, -43.9478, -164.718, 1.68", "-61.9714, -44.3905, -165.003, 2.16", "-62.0777, -44.7571, -165.236, 2.16", "-62.6137, -46.8001, -166.527, 0.12", "-62.7701, -47.4263, -166.905, 0.12", "-62.8497, -47.742, -167.106, 0.48", "-62.8786, -47.8475, -167.164, 0.12", "-63.1733, -48.808, -167.65, 0.12", "-63.5097, -49.6939, -168.008, 0.12", "-63.7944, -50.2794, -168.251, 1.68", "-64.0177, -50.6685, -168.459, 1.92", "-64.5247, -51.437, -168.918, 0.12", "-64.8813, -51.906, -169.219, 0.12", "-65.355, -52.4319, -169.57, 1.32", "-66.6338, -53.7753, -170.505, 0.12", "-67.1079, -54.2642, -170.875, 0.12", "-67.4326, -54.5898, -171.169, 0.48", "-67.664, -54.8026, -171.391, 0.12", "-68.2249, -55.2749, -171.983, 0.12", "-68.9798, -55.8596, -172.76, 0.12", "-69.1633, -55.9784, -172.934, 0.96", "-70.079, -56.4626, -173.746, 0.12", "-70.445, -56.6339, -174.049, 0.12", "-71.2934, -56.9851, -174.691, 1.44", "-72.0243, -57.2582, -175.174, 1.8", "-73.1753, -57.6586, -175.773, 0.12", "-74.6225, -58.1491, -176.388, 0.12", "-74.9752, -58.2643, -176.5, 0.48", "-75.207, -58.3371, -176.563, 0.12", "-75.8435, -58.5452, -176.691, 0.12", "-76.3084, -58.7009, -176.773, 1.08", "-76.8823, -58.9074, -176.837, 1.68", "-77.9587, -59.2989, -176.916, 0.12", "-78.4246, -59.4714, -176.944, 0.12", "-78.739, -59.6048, -176.959, 0.48", "-78.9664, -59.7137, -176.967, 0.12", "-79.8631, -60.2181, -177.062, 0.12", "-80.8363, -60.8994, -177.227, 1.68", "-81.5083, -61.5117, -177.43, 0.12", "-82.1046, -62.1601, -177.716, 0.12", "-82.5023, -62.6624, -177.97, 0.6", "-83.2876, -63.8103, -178.595, 0.12", "-83.7517, -64.6276, -179.055, 0.12", "-84.3388, -65.7767, -179.773, 0.12", "-84.5417, -66.1853, -180.027, 0.12", "-84.7593, -66.6093, -180.288, 1.68", "-84.9796, -67.0264, -180.518, 2.28", "-85.4229, -67.7772, -180.85, 1.56", "-86.0853, -68.767, -181.237, 0.12", "-86.4326, -69.2666, -181.35, 0.12", "-86.7393, -69.7071, -181.442, 0.12", "-87.0875, -70.2085, -181.546, 1.32", "-87.3746, -70.6237, -181.623, 1.56", "-87.8093, -71.2492, -181.734, 0.12", "-88.9467, -72.9175, -181.971, 0.12", "-89.6365, -73.9365, -182.128, 1.8", "-89.869, -74.3043, -182.186, 2.52", "-90.0596, -74.6039, -182.235, 2.52", "-90.6692, -75.5679, -182.412, 0.12", "-91.4579, -76.8268, -182.661, 0.12", "-91.8342, -77.4349, -182.773, 1.56", "-92.2862, -78.1992, -182.884, 2.04", "-92.7753, -79.057, -183.007, 2.04", "-93.4446, -80.2785, -183.175, 0.12", "-93.8413, -81.0486, -183.265, 0.12", "-94.0672, -81.5462, -183.318, 0.72", "-94.1688, -81.8068, -183.33, 0.12", "-94.3848, -82.4357, -183.316, 0.12", "-94.4573, -82.7059, -183.292, 0.48", "-94.5459, -83.081, -183.27, 0.12", "-94.8192, -84.4389, -183.29, 0.12", "-94.9756, -85.3518, -183.351, 1.56", "-95.0418, -85.7951, -183.399, 1.8", "-95.1027, -86.3194, -183.478, 1.8", "-95.2714, -88.0055, -183.791, 0.12", "-95.3664, -89.1002, -184.043, 0.12", "-95.3664, -89.1002, -184.043, 0.48", "-95.3766, -89.3341, -184.131, 0.12", "-95.3695, -90.0193, -184.436, 0.12", "-95.3518, -90.2673, -184.562, 0.48", "-95.3326, -90.4986, -184.679, 0.12", "-95.2552, -91.5362, -185.362, 0.12", "-95.1778, -92.8598, -186.28, 0.48", "-95.1646, -93.2462, -186.523, 0.12", "-95.1408, -94.0858, -187.019, 1.56", "-95.1236, -94.8506, -187.435, 1.92", "-95.1029, -96.0129, -187.999, 1.56", "-95.0931, -96.5802, -188.274, 0.12", "-95.1161, -99.1723, -189.36, 0.12", "-95.122, -99.5302, -189.503, 0.84", "-95.1301, -99.9076, -189.65, 0.12", "-95.1351, -100.493, -189.878, 0.12", "-95.1275, -102.281, -190.509, 0.12", "-95.1043, -103.898, -191.206, 2.4" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-41.1176, 34.1684, -81.3871, 0.12", "-41.8455, 35.0313, -82.626, 0.12", "-42.3521, 35.6634, -83.5025, 0.12", "-43.1874, 36.7763, -84.8457, 2.4", "-44.5457, 38.6644, -87.0672, 0.24", "-44.8213, 39.0541, -87.5054, 0.24", "-45.1022, 39.4635, -87.9374, 1.44", "-45.6676, 40.3171, -88.7993, 0.12", "-46.2754, 41.3375, -89.7588, 0.12", "-46.7837, 42.2594, -90.4708, 0.12", "-47.2811, 43.16, -91.115, 2.28", "-47.8872, 44.2596, -91.9505, 0.12", "-48.3893, 45.142, -92.6234, 0.12", "-49.0609, 46.3088, -93.4862, 0.12", "-49.8134, 47.5914, -94.4245, 2.76", "-50.7404, 49.1435, -95.5519, 0.24", "-50.7404, 49.1435, -95.5519, 0.12", "-51.2723, 50.0503, -96.1819, 0.12", "-51.5244, 50.4821, -96.4818, 0.96", "-51.8494, 51.0329, -96.8116, 0.96", "-52.5514, 52.2604, -97.5014, 0.12", "-53.1697, 53.5033, -98.1821, 0.12", "-53.37, 53.9578, -98.4378, 0.72", "-53.6796, 54.7271, -98.9281, 0.12", "-53.9951, 55.5349, -99.4511, 0.12", "-54.336, 56.4161, -99.9771, 2.16", "-54.9673, 58.0447, -101.031, 0.12", "-55.153, 58.5209, -101.377, 0.12", "-55.565, 59.5728, -102.179, 0.12", "-55.8343, 60.2593, -102.692, 0.12", "-56.1614, 61.101, -103.395, 1.44", "-56.8938, 63.0899, -105.079, 0.12", "-57.1445, 63.7545, -105.611, 0.12", "-57.3263, 64.2631, -106.011, 1.56", "-57.5222, 64.8605, -106.457, 1.56", "-57.949, 66.1826, -107.458, 0.12", "-58.1295, 66.7673, -107.894, 0.12", "-58.2917, 67.2756, -108.194, 0.12", "-58.393, 67.5508, -108.384, 0.12", "-58.8311, 68.561, -109.108, 0.12", "-59.0367, 68.9638, -109.422, 0.12", "-59.4201, 69.5897, -109.909, 1.92", "-59.6964, 69.9974, -110.273, 2.16", "-60.6877, 71.312, -111.517, 0.12", "-61.0941, 71.7912, -111.973, 0.12", "-61.4337, 72.1567, -112.332, 1.08", "-61.8501, 72.5448, -112.755, 1.32", "-62.5981, 73.1346, -113.468, 0.12", "-63.1387, 73.4929, -113.957, 0.12", "-63.5593, 73.7176, -114.318, 0.48", "-63.9863, 73.9004, -114.693, 0.12", "-64.9526, 74.2871, -115.538, 0.12", "-65.5535, 74.5306, -116.071, 1.44", "-65.8933, 74.6849, -116.377, 1.68", "-66.9142, 75.2608, -117.355, 0.12", "-67.6562, 75.7476, -118.048, 0.12", "-68.2479, 76.2025, -118.57, 1.8", "-68.8063, 76.7168, -119.03, 2.16", "-69.6671, 77.5589, -119.669, 0.12", "-70.1964, 78.0797, -120.09, 0.12", "-70.6119, 78.4613, -120.393, 0.48", "-70.6876, 78.5247, -120.445, 0.12", "-71.1527, 78.8451, -120.774, 0.12", "-71.9122, 79.292, -121.365, 1.68", "-73.4773, 80.1101, -122.65, 0.12", "-74.102, 80.4211, -123.184, 0.12", "-74.4793, 80.6324, -123.521, 0.48", "-75.1545, 81.0564, -124.106, 0.12", "-75.5986, 81.3696, -124.496, 0.12", "-76.1105, 81.784, -124.951, 1.56", "-76.5366, 82.1457, -125.294, 2.28", "-77.5268, 83.0276, -126.034, 0.12", "-77.9902, 83.4258, -126.354, 0.12", "-78.317, 83.6857, -126.53, 0.48", "-78.8968, 84.1134, -126.794, 0.12", "-79.3194, 84.4017, -126.978, 0.12", "-80.3692, 85.031, -127.39, 2.16", "-81.8263, 85.7482, -127.838, 0.12", "-82.8514, 86.1857, -128.106, 0.12", "-83.4358, 86.4116, -128.264, 0.6", "-83.8247, 86.5466, -128.375, 0.12", "-84.6015, 86.7921, -128.593, 0.12", "-85.5326, 87.0656, -128.845, 2.4", "-85.9853, 87.2018, -128.938, 2.4", "-87.629, 87.7113, -129.251, 0.12", "-88.9824, 88.1506, -129.453, 0.12", "-89.8567, 88.4469, -129.548, 1.68", "-90.5208, 88.6726, -129.597, 2.16", "-91.883, 89.1254, -129.613, 0.12", "-92.7015, 89.3923, -129.565, 0.12", "-93.3543, 89.5939, -129.466, 0.6", "-93.5825, 89.6619, -129.429, 0.12", "-94.8503, 90.0338, -129.274, 0.12", "-95.3788, 90.1838, -129.174, 0.84", "-95.8814, 90.3261, -129.043, 1.08", "-96.1308, 90.4059, -128.98, 1.08", "-96.5036, 90.5438, -128.894, 0.12", "-97.1893, 90.8398, -128.732, 0.12", "-98.0163, 91.2368, -128.532, 1.44", "-98.6681, 91.5447, -128.393, 1.68", "-99.3746, 91.8761, -128.24, 0.12", "-100.407, 92.3582, -128.037, 0.12", "-100.659, 92.4717, -127.995, 1.32", "-101.238, 92.7152, -127.931, 0.12", "-101.686, 92.8923, -127.897, 0.12", "-101.941, 92.9764, -127.868, 0.36", "-102.362, 93.0672, -127.813, 0.12", "-102.952, 93.1505, -127.737, 0.12", "-103.426, 93.2031, -127.675, 0.48", "-104.135, 93.2648, -127.598, 0.12", "-105.089, 93.3277, -127.515, 0.12", "-105.817, 93.3617, -127.463, 1.8", "-106.326, 93.3755, -127.435, 2.64", "-106.686, 93.3807, -127.425, 2.64", "-107.906, 93.3736, -127.43, 0.12", "-108.985, 93.3436, -127.477, 0.12", "-109.464, 93.3332, -127.501, 0.12", "-109.849, 93.3283, -127.52, 0.48", "-110.089, 93.3248, -127.526, 0.12", "-110.584, 93.3308, -127.522, 0.12", "-111.062, 93.363, -127.493, 0.6", "-111.488, 93.4338, -127.458, 0.12", "-112.071, 93.573, -127.406, 0.12", "-112.557, 93.711, -127.328, 0.72", "-113.065, 93.8733, -127.227, 0.96", "-113.663, 94.1076, -127.125, 0.12", "-114.366, 94.4208, -127.035, 0.12", "-114.813, 94.631, -126.984, 1.2", "-115.632, 95.0546, -126.909, 1.56", "-116.198, 95.3807, -126.889, 1.68", "-117.208, 96.0541, -126.897, 0.12", "-118.089, 96.6969, -126.931, 0.12", "-118.534, 97.0472, -127.049, 1.56", "-119.046, 97.4703, -127.213, 1.56", "-119.643, 97.9889, -127.451, 0.12", "-121.539, 99.7015, -128.292, 0.12", "-121.777, 99.9236, -128.409, 0.48", "-123.883, 102.028, -129.773, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.79722, -175.635, -16.1359, 3.37", "-1.34276, -176.015, -14.825, 3.37", "0.0104588, -176.975, -11.1874, 0.12", "0.121817, -177.026, -10.9483, 0.12", "0.465615, -177.149, -10.3037, 0.12", "0.705019, -177.209, -9.91549, 0.72", "1.0145, -177.264, -9.48019, 0.72", "1.21367, -177.266, -9.30038, 0.12", "2.63276, -177.083, -8.56222, 0.12", "2.77884, -177.081, -8.45105, 0.96", "3.19273, -177.171, -7.96225, 0.96", "3.60289, -177.42, -7.06069, 0.12", "3.65314, -177.49, -6.83572, 0.12", "3.67461, -177.619, -6.42144, 0.84", "3.52991, -178.396, -4.11589, 0.24", "3.40213, -178.862, -2.84095, 1.92", "3.13676, -179.612, -0.991997, 0.24", "2.99631, -179.956, -0.23138, 1.68", "2.58593, -180.947, 1.74599, 1.68", "2.46117, -181.241, 2.25019, 0.12", "2.31123, -181.615, 2.70881, 0.12", "2.19885, -181.97, 3.01516, 0.6", "2.09129, -182.508, 3.30886, 1.08", "1.98678, -183.203, 3.5902, 1.08", "1.82631, -184.239, 3.8377, 0.12", "1.73343, -184.843, 3.97984, 0.12", "1.65474, -185.455, 4.10999, 0.12", "1.59699, -186.071, 4.22142, 0.12", "1.57478, -186.683, 4.30631, 0.12", "1.58057, -187.201, 4.34426, 0.96", "1.60624, -187.837, 4.36491, 0.12", "1.63053, -188.623, 4.39061, 0.12", "1.62726, -189.076, 4.42014, 1.32", "1.6072, -189.356, 4.4463, 1.32", "1.51602, -190.18, 4.54416, 0.12", "1.39714, -190.918, 4.64615, 0.12", "1.36682, -191.091, 4.67184, 0.48", "1.27211, -191.657, 4.76449, 0.12", "1.24662, -191.933, 4.81002, 0.12", "1.24318, -192.295, 4.86887, 0.12", "1.30013, -192.546, 4.97636, 0.48", "1.42781, -193.001, 5.26604, 0.36", "1.50406, -193.338, 5.43318, 0.36", "1.56817, -193.666, 5.55186, 1.2", "1.63248, -194.02, 5.65863, 1.2", "1.9435, -195.842, 6.30851, 0.12", "2.06841, -196.515, 6.55532, 0.12", "2.29906, -197.981, 7.09598, 0.12", "2.39522, -198.713, 7.35353, 0.12", "2.44365, -199.205, 7.50474, 0.12", "2.5242, -200.332, 7.74591, 1.32", "2.60064, -201.228, 7.73787, 1.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.79722, -175.635, -16.1359, 0.12", "-3.10278, -176.523, -16.2451, 0.12", "-3.96913, -177.112, -16.3175, 0.12", "-4.24327, -177.298, -16.3404, 0.96", "-4.56636, -177.518, -16.3674, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "9.0279, -170.598, -24.8101, 0.12", "9.51176, -171.434, -24.6456, 0.12", "9.85187, -172.139, -24.5167, 0.12", "10.1691, -172.802, -24.4016, 0.72", "10.5827, -173.659, -24.2736, 0.84", "10.8142, -174.127, -24.1884, 0.48", "10.976, -174.446, -24.1255, 0.12", "11.3305, -175.134, -23.9779, 0.12", "11.5574, -175.578, -23.8674, 0.12", "11.7791, -175.981, -23.7671, 0.84", "12.2054, -176.779, -23.6649, 0.36", "12.4091, -177.168, -23.6335, 0.12", "12.9003, -178.101, -23.5925, 0.12", "13.3269, -178.91, -23.5864, 1.8", "13.6619, -179.628, -23.6059, 1.56", "14.2045, -180.9, -23.6898, 0.12", "14.2937, -181.131, -23.7207, 0.12", "14.3358, -181.248, -23.7379, 0.36", "14.4701, -181.665, -23.8058, 0.12", "14.6535, -182.404, -23.9067, 0.12", "14.7034, -182.65, -23.9235, 0.12", "14.7824, -183.037, -23.9245, 0.72", "14.8975, -183.655, -23.9266, 0.96", "14.9812, -184.141, -23.9268, 0.12", "15.2162, -185.627, -23.9244, 0.12", "15.2869, -186.115, -23.9231, 0.84", "15.3525, -186.63, -23.93, 0.12", "15.4098, -187.246, -23.9426, 0.12", "15.4393, -187.65, -23.9527, 0.96", "15.4764, -188.158, -23.9691, 0.12", "15.534, -189.026, -24.0102, 0.12", "15.5831, -189.864, -24.0602, 1.68", "15.5961, -190.219, -24.0879, 1.68" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "9.0279, -170.598, -24.8101, 0.6", "9.53656, -169.797, -20.9359, 0.6", "9.72541, -170.151, -21.4652, 0.6", "10.3703, -171.156, -22.6741, 0.12", "10.6423, -171.559, -23.1038, 0.12", "10.9822, -172.062, -23.6409, 0.96", "11.3235, -172.567, -24.1801, 0.96", "12.0682, -173.754, -25.6317, 0.12", "12.3649, -174.266, -26.2596, 0.12", "12.526, -174.531, -26.56, 0.48" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "37.3038, -104.516, -31.3935, 0.12", "38.6393, -105.36, -29.1928, 0.12", "38.9439, -105.547, -28.7175, 0.12", "39.0878, -105.636, -28.5075, 0.6", "39.5006, -105.875, -27.9394, 0.12", "40.263, -106.289, -26.9533, 0.12", "40.4758, -106.4, -26.683, 0.12", "40.6404, -106.475, -26.5233, 0.12", "40.8715, -106.581, -26.307, 0.12", "41.4276, -106.844, -25.7893, 0.12", "41.6068, -106.935, -25.6377, 0.6", "41.9917, -107.175, -25.3766, 0.12", "42.3787, -107.427, -25.0928, 0.12", "42.8866, -107.737, -24.7213, 0.6" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "37.3038, -104.516, -31.3935, 0.24", "37.5046, -105.696, -31.734, 0.24", "37.6256, -106.767, -32.0588, 0.24", "37.6652, -107.265, -32.207, 0.96", "37.7187, -108.13, -32.4601, 1.8", "37.7856, -108.98, -32.7554, 0.84", "37.8277, -109.527, -32.9757, 0.12", "37.8911, -110.365, -33.3973, 0.12", "37.912, -110.802, -33.6357, 0.72", "37.915, -110.905, -33.6854, 0.72", "37.9754, -111.963, -34.1392, 0.24", "38.0286, -112.408, -34.2766, 0.24", "38.1544, -113.137, -34.4247, 0.24", "38.3039, -113.883, -34.4968, 0.24", "38.4286, -114.572, -34.5015, 0.24", "38.5441, -115.36, -34.4581, 0.24", "38.6314, -116.141, -34.3361, 1.44", "38.7167, -116.989, -34.165, 1.92", "38.7757, -117.825, -33.9757, 1.92", "38.8179, -118.673, -33.7867, 1.2", "38.8484, -119.548, -33.6129, 0.48", "38.8608, -120.406, -33.4561, 0.12", "38.8703, -121.022, -33.3303, 0.12", "38.8805, -121.402, -33.2557, 0.6", "38.9017, -121.88, -33.1795, 0.12", "38.975, -122.869, -33.0168, 0.12", "39.0329, -123.364, -32.9446, 0.12", "39.2867, -125.119, -32.8071, 2.4" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "45.1994, -30.6949, -11.2127, 0.96", "44.562, -27.9159, -4.01363, 0.96", "44.4726, -27.5535, -3.25454, 0.72", "44.4089, -27.3036, -2.84263, 0.24", "44.3432, -26.9925, -2.45181, 0.24", "44.2679, -26.4869, -1.98425, 0.24", "44.2028, -25.7996, -1.45939, 0.84", "44.1941, -24.8236, -1.22961, 1.2", "44.2257, -23.934, -0.976435, 0.48", "44.3065, -22.7924, -0.544428, 0.24", "44.4521, -21.6217, -0.0368723, 0.24", "44.7155, -20.158, 0.691167, 1.68", "44.8728, -19.4221, 1.07399, 2.28", "44.9989, -18.8842, 1.36424, 2.4", "45.4092, -17.1354, 2.32423, 0.36", "45.5564, -16.4499, 2.69879, 0.36", "45.7375, -15.5069, 3.18295, 0.84", "45.9593, -14.166, 3.81053, 0.84", "46.1473, -12.8066, 4.41944, 0.6", "46.3069, -11.5406, 4.9565, 0.6", "46.4021, -10.7351, 5.25869, 0.96", "46.4524, -10.1008, 5.49329, 0.96", "46.497, -8.91634, 5.90356, 0.12", "46.4887, -8.33161, 6.09827, 0.12", "46.4672, -7.83349, 6.23711, 0.12", "46.4353, -7.29129, 6.36217, 0.12", "46.4057, -6.74472, 6.48929, 0.6", "46.3928, -6.30705, 6.56797, 0.96", "46.3502, -5.5957, 6.56797, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "45.1994, -30.6949, -11.2127, 0.12", "46.742, -30.9627, -10.7363, 0.12", "47.1958, -31.0298, -10.5935, 0.12", "47.7634, -31.1024, -10.4117, 0.6", "48.4578, -31.1661, -10.195, 0.6", "49.4588, -31.2312, -9.903, 0.12", "50.3863, -31.2506, -9.65568, 0.12", "50.5028, -31.2404, -9.62865, 0.36", "50.8774, -31.1836, -9.55171, 0.12", "51.3889, -31.0747, -9.42661, 0.12", "51.8389, -30.9279, -9.3115, 0.48", "52.4936, -30.6912, -9.16235, 0.6", "52.9468, -30.5293, -9.04697, 0.48", "53.3524, -30.4095, -8.94877, 0.48", "54.314, -30.161, -8.5628, 0.12", "55.2917, -29.9862, -8.08227, 2.04", "55.8567, -29.934, -7.78013, 3.25", "56.3867, -29.9509, -7.49938, 3.37", "57.0637, -30.0459, -7.16126, 2.88", "59.2171, -30.5586, -6.15348, 0.24", "60.1343, -30.8648, -5.76716, 0.24", "60.7216, -31.1185, -5.52743, 0.72", "61.76, -31.5981, -5.15513, 0.96", "62.429, -31.9282, -4.96913, 0.24", "62.646, -32.0333, -4.94707, 0.24", "62.9596, -32.1628, -4.98725, 0.24", "63.6638, -32.3238, -5.10345, 0.24", "64.2614, -32.3525, -5.20068, 1.2", "64.7399, -32.3131, -5.20555, 1.92", "65.7182, -32.1652, -5.1129, 1.92", "66.701, -31.9792, -4.9513, 0.36", "67.315, -31.8451, -4.77326, 0.36", "68.5259, -31.5522, -4.32792, 0.36", "70.4297, -31.0877, -3.5346, 1.68", "71.0147, -30.9526, -3.29211, 2.52", "71.9161, -30.769, -2.91671, 2.64", "73.9071, -30.4484, -2.1989, 0.24", "74.7799, -30.3453, -1.94616, 0.24", "75.3778, -30.2893, -1.83773, 0.36", "76.4144, -30.2151, -1.81691, 1.08", "76.95, -30.1803, -1.80954, 1.08", "77.8988, -30.1046, -1.82807, 0.48", "78.3741, -30.0493, -1.86953, 0.24", "79.0339, -29.9176, -1.85315, 0.24", "79.6023, -29.74, -1.76183, 0.6", "80.719, -29.2962, -1.42939, 0.36", "81.2545, -29.1005, -1.25223, 0.36", "81.6968, -28.9863, -1.05908, 0.36", "82.0185, -28.9496, -0.901233, 0.48", "82.2622, -28.9533, -0.789062, 0.24", "82.7118, -28.9904, -0.585469, 0.24", "83.5262, -29.0835, -0.298101, 0.24", "84.6963, -29.2184, 0.0588446, 0.24", "85.1837, -29.2732, 0.187482, 1.2", "86.0224, -29.3302, 0.3698, 2.16", "87.2312, -29.3433, 0.632057, 1.8", "88.182, -29.2983, 0.822891, 0.36", "89.5553, -29.1225, 1.22248, 0.36", "90.1597, -29.012, 1.42566, 0.36", "91.1464, -28.7915, 1.81743, 0.36", "92.0912, -28.5488, 2.32632, 1.56", "92.8086, -28.3473, 2.7865, 2.04", "94.7802, -27.7773, 4.27206, 0.24", "95.3484, -27.6213, 4.7528, 0.24", "95.6335, -27.5545, 4.99496, 0.24", "96.9439, -27.3508, 6.08939, 1.68", "97.3387, -27.3141, 6.38554, 2.04", "97.6378, -27.2978, 6.61858, 2.04", "98.9522, -27.2211, 7.56215, 0.24", "99.5181, -27.1508, 8.0022, 0.24", "99.9823, -27.0479, 8.37932, 1.2", "100.347, -26.8981, 8.68234, 1.2", "101.68, -26.0539, 9.92783, 0.12", "102.151, -25.6027, 10.4043, 0.12", "102.405, -25.2421, 10.654, 0.24", "102.575, -24.9545, 10.8546, 0.24", "102.906, -24.4107, 11.2093, 0.24", "103.096, -24.1325, 11.3845, 0.24", "103.472, -23.7005, 11.6066, 0.24", "104.103, -23.1555, 11.9159, 0.24", "105.283, -22.2702, 12.49, 0.12", "106.088, -21.7463, 12.8735, 0.12", "106.315, -21.6201, 12.9794, 1.44", "107.181, -21.1723, 13.3722, 2.52", "108.125, -20.6798, 13.7786, 2.04" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-11.4206, -276.82, -40.7081, 0.12", "-10.7959, -278.243, -40.7235, 0.12", "-10.4742, -278.964, -40.7278, 0.12", "-10.3259, -279.297, -40.7308, 0.48", "-10.0685, -279.872, -40.7171, 0.48", "-9.79142, -280.474, -40.6914, 0.48", "-9.62859, -280.786, -40.7046, 0.48", "-9.46343, -281.044, -40.7417, 0.48", "-9.0665, -281.554, -40.868, 1.68", "-8.63633, -282.024, -41.0255, 2.28", "-8.21959, -282.431, -41.1884, 2.4", "-7.01151, -283.496, -41.6959, 0.48", "-6.17711, -284.194, -42.0748, 0.36", "-5.66482, -284.59, -42.3279, 0.12", "-5.38309, -284.783, -42.4792, 0.12", "-5.16846, -284.914, -42.6086, 0.12", "-4.83365, -285.093, -42.8118, 0.72" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-11.4206, -276.82, -40.7081, 0.12", "-11.5794, -278.35, -40.7215, 0.12", "-11.5999, -278.737, -40.7455, 0.12", "-11.5995, -279.133, -40.7804, 0.12", "-11.5898, -279.792, -40.8946, 0.12", "-11.591, -280.119, -40.9639, 0.48", "-11.6112, -280.721, -41.1019, 0.48", "-11.6171, -280.946, -41.1734, 0.12", "-11.7498, -281.622, -41.492, 0.12", "-11.9593, -282.263, -41.8521, 0.12", "-12.0986, -282.633, -42.0616, 1.68", "-12.2089, -282.914, -42.2386, 1.8", "-12.4028, -283.392, -42.5637, 1.8", "-12.9904, -284.879, -43.5435, 0.12", "-13.14, -285.278, -43.8049, 0.12", "-13.3882, -286.107, -44.2864, 0.12", "-13.5196, -286.74, -44.6576, 0.48", "-13.5473, -286.957, -44.778, 0.48", "-13.5621, -287.488, -45.016, 0.48", "-13.5619, -287.654, -45.079, 0.12", "-13.5884, -288.111, -45.2789, 0.12", "-13.6581, -288.758, -45.567, 0.12", "-13.7016, -289.075, -45.6983, 0.96", "-13.8183, -289.757, -45.987, 1.44", "-14.083, -291.023, -46.6082, 0.12", "-14.2657, -291.779, -46.978, 0.12", "-14.3491, -292.107, -47.1365, 0.12", "-14.414, -292.347, -47.2422, 0.6", "-14.5322, -292.733, -47.4361, 0.6", "-14.7763, -293.385, -47.8745, 0.12", "-15.0249, -293.964, -48.3171, 0.12", "-15.0637, -294.053, -48.3924, 0.48", "-15.1693, -294.327, -48.5944, 0.48", "-15.4173, -295.139, -49.0685, 0.48", "-15.6445, -296.048, -49.4854, 0.24", "-15.7023, -296.352, -49.6731, 0.12", "-15.8154, -297.276, -50.2528, 0.12", "-15.8761, -297.879, -50.6574, 1.44", "-15.9096, -298.384, -50.9975, 2.16", "-15.9349, -299.059, -51.4313, 2.28", "-16.0015, -301.544, -52.9746, 0.12", "-16.0116, -302.897, -53.8444, 0.12", "-16.0016, -303.643, -54.3408, 0.84", "-15.9873, -304.167, -54.6874, 1.44", "-15.97, -304.602, -54.9684, 0.96", "-15.9451, -305.062, -55.1878, 0.12", "-15.9305, -305.502, -55.2958, 0.12", "-15.9371, -305.981, -55.4073, 0.12", "-15.9507, -306.257, -55.4596, 0.36", "-16.0205, -306.967, -54.8139, 0.12", "-16.1575, -308.095, -53.4013, 0.12", "-16.1935, -308.355, -52.9699, 1.08", "-16.2364, -308.633, -52.3924, 1.8", "-16.2583, -308.774, -52.0381, 2.04", "-16.6052, -311.069, -45.2755, 0.12" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "17.202, 110.52, 10.377, 0.48", "17.7062, 112.571, 10.6923, 0.48", "17.9083, 113.457, 10.7979, 0.48", "18.0206, 113.95, 10.8462, 0.48", "18.1595, 114.568, 10.8783, 0.48", "18.438, 115.907, 10.8926, 0.48", "18.6807, 117.259, 10.8691, 0.48", "18.7202, 117.543, 10.8398, 0.72", "18.7912, 118.091, 10.8128, 0.96", "18.9106, 119.003, 10.8104, 0.96", "19.0231, 119.788, 10.9093, 0.36", "19.2327, 120.98, 11.183, 0.36", "19.3745, 121.728, 11.4032, 0.36", "19.6744, 123.324, 11.9212, 1.56", "19.8079, 124.052, 12.1732, 2.16", "20.1552, 125.972, 12.8811, 0.48", "20.4037, 127.413, 13.3353, 0.48", "20.533, 128.256, 13.5618, 0.48", "20.5849, 128.744, 13.6539, 0.48", "20.6064, 129.613, 13.7107, 1.68", "20.5827, 130.132, 13.7063, 1.92", "20.4684, 131.797, 13.5418, 1.08", "20.4143, 132.689, 13.4575, 0.48", "20.403, 133.328, 13.4031, 0.36", "20.4708, 134.503, 13.3265, 0.36", "20.5894, 135.284, 13.3291, 0.36", "20.9385, 136.693, 13.3791, 0.72", "21.1222, 137.227, 13.416, 0.36", "21.3586, 137.848, 13.4389, 0.36", "21.7406, 138.746, 13.4752, 0.36", "22.2563, 139.884, 13.5248, 0.84", "22.8024, 141.093, 13.7683, 1.92", "23.1258, 141.924, 13.836, 2.28", "23.327, 142.53, 13.818, 2.64", "23.4676, 143.023, 13.7506, 2.76", "23.6359, 143.725, 13.5806, 2.76", "24.3288, 146.576, 12.6157, 1.56", "25.3505, 150.339, 11.1241, 0.12", "25.4556, 150.689, 10.9775, 0.12", "25.55, 151.001, 10.8615, 0.12", "25.6825, 151.514, 10.683, 0.72", "25.8408, 152.256, 10.4511, 0.96", "25.9873, 153.143, 10.1685, 0.48", "26.1167, 153.908, 10.1343, 0.36", "26.3698, 155.634, 10.0624, 0.36", "26.4326, 156.193, 10.0835, 0.36", "26.4666, 156.628, 10.1167, 0.12", "26.5214, 157.753, 10.2791, 0.96", "26.554, 158.54, 10.4378, 1.32", "26.5965, 159.037, 10.5085, 1.2", "26.7726, 160.578, 10.9032, 0.48", "26.9244, 161.679, 11.2253, 0.24", "27.0518, 162.498, 11.4717, 1.2", "27.1761, 163.197, 11.6842, 1.68", "27.4629, 164.64, 12.1338, 1.68", "27.9818, 167.054, 12.8821, 1.8", "28.2033, 167.979, 13.1369, 0.96", "28.4569, 168.942, 13.4949, 1.08", "28.6726, 169.692, 13.7829, 0.36", "29.1484, 171.27, 14.3277, 0.36", "29.4242, 172.216, 14.598, 0.36", "29.6299, 172.879, 14.7009, 1.08", "30.1581, 174.622, 14.9465, 1.2", "30.5849, 176.075, 15.0979, 0.96", "31.0033, 177.578, 15.1719, 0.36", "31.3659, 178.902, 15.0765, 0.24", "31.5849, 179.741, 14.9468, 0.6", "31.7246, 180.297, 14.8519, 0.12", "31.8564, 180.773, 14.762, 0.24", "32.2836, 182.197, 14.5377, 0.24", "32.6482, 183.385, 14.3599, 0.24", "32.938, 184.337, 14.1318, 1.68", "33.3384, 185.749, 13.7534, 2.52", "33.6271, 186.943, 13.4343, 0.48", "33.8759, 188.098, 13.1285, 0.48", "34.0684, 189.225, 12.8536, 0.72", "34.2044, 190.474, 12.6044, 1.08", "34.2426, 191.322, 12.4597, 1.68", "34.2138, 192.435, 12.2801, 1.2", "34.1311, 193.375, 12.1911, 0.36", "33.9926, 194.607, 12.1389, 0.36", "33.8867, 195.444, 12.1676, 0.36", "33.7532, 196.396, 12.24, 0.36", "33.5926, 197.566, 12.3239, 2.04", "33.5311, 198.079, 12.3696, 2.4", "33.4439, 199.29, 12.4356, 2.4", "33.4632, 201.118, 12.4126, 0.36", "33.5733, 202.234, 12.3298, 0.36", "33.7324, 203.222, 12.2612, 1.44", "33.9082, 203.986, 12.2153, 2.16", "34.3611, 205.748, 12.1291, 0.48", "34.6324, 206.759, 12.0965, 0.12", "34.8274, 207.454, 12.0605, 0.6", "35.2595, 209.083, 12.0804, 0.36", "35.4368, 209.881, 12.1495, 0.24", "35.5769, 210.809, 12.3011, 0.24", "35.615, 211.329, 12.4022, 0.24", "35.6543, 212.288, 12.5296, 0.36", "35.7097, 213.354, 12.5768, 0.36", "35.8013, 214.133, 12.5729, 0.36", "35.9165, 214.754, 12.588, 0.36", "36.1984, 215.813, 12.6085, 1.68", "36.4415, 216.566, 12.559, 2.4", "36.6266, 217.084, 12.4812, 2.4", "37.1757, 218.471, 12.2809, 0.24", "37.4489, 219.132, 12.1963, 0.24", "37.6166, 219.548, 12.1521, 0.48", "38.1377, 220.988, 12.0659, 0.24", "38.3702, 221.861, 12.0257, 0.24", "38.5325, 222.799, 11.9575, 0.24", "38.5902, 223.562, 11.9259, 0.72", "38.619, 224.23, 11.9444, 0.84", "38.6344, 224.69, 11.9747, 0.36", "38.672, 225.572, 12.0201, 0.36", "38.7343, 226.516, 11.9673, 0.48", "38.8682, 227.885, 11.7431, 0.36", "38.9925, 228.638, 11.5661, 0.36", "39.1034, 229.154, 11.4529, 0.96", "39.4329, 230.359, 11.1306, 0.96", "39.6235, 230.914, 11.017, 0.36", "39.7888, 231.38, 10.9619, 0.36", "40.2218, 232.676, 10.8683, 2.4", "40.6388, 234.066, 10.8743, 3.25", "40.9681, 235.359, 10.9719, 2.16", "41.3628, 237.192, 11.1698, 0.24", "41.6171, 238.54, 11.304, 0.12", "41.8029, 239.671, 11.3874, 0.24", "41.8459, 240.057, 11.4017, 0.36", "41.9193, 241.057, 11.3465, 0.36", "41.9735, 242.314, 11.216, 1.32", "42.0081, 243.087, 11.0817, 0.48", "42.0525, 243.534, 11.0113, 0.12", "42.1714, 244.306, 10.898, 0.12", "42.3323, 245.193, 10.7937, 0.12", "42.4513, 245.741, 10.7488, 0.84", "42.7994, 247.267, 10.6896, 1.56", "42.9483, 247.879, 10.6768, 1.68", "43.2551, 248.988, 10.6787, 0.12", "43.5807, 249.934, 10.6842, 0.12", "43.7963, 250.395, 10.8253, 0.24", "43.9237, 250.573, 10.9529, 0.12", "44.2914, 250.866, 11.3917, 0.12", "44.5361, 251.009, 11.7216, 0.12", "45.3828, 251.348, 12.992, 3.25", "47.7699, 251.935, 16.8481, 0.12", "47.9846, 251.965, 17.2227, 0.12", "48.1643, 251.97, 17.5569, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "17.202, 110.52, 10.377, 0.12", "15.2024, 111.229, 10.349, 0.12", "14.7203, 111.401, 10.3579, 0.12", "14.3628, 111.532, 10.3333, 0.96", "13.4713, 111.84, 10.2269, 0.12", "12.8675, 112.037, 10.0938, 0.12", "12.5161, 112.154, 10.0038, 0.12", "12.0105, 112.329, 9.84793, 1.08", "10.9558, 112.669, 9.58253, 0.36", "9.93259, 112.987, 9.33423, 0.36", "8.6554, 113.415, 9.1656, 0.36", "8.07962, 113.595, 9.10321, 0.36", "7.00191, 113.883, 9.23964, 0.36", "6.40642, 113.997, 9.45517, 0.36", "5.76826, 114.06, 9.84354, 0.36", "4.39827, 114.136, 10.9122, 1.92", "3.65364, 114.135, 11.6215, 1.92", "1.41827, 113.965, 13.9736, 0.12", "0.928587, 113.89, 14.5491, 0.12", "0.654157, 113.827, 14.9207, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "9.71669, 131.505, -15.883, 0.12", "9.35178, 132.953, -17.3048, 0.12", "9.2996, 133.23, -17.5211, 0.12", "9.23358, 133.754, -17.8386, 0.24", "9.17444, 135.506, -18.843, 0.24", "9.19006, 136.159, -19.185, 0.24", "9.21612, 136.621, -19.4102, 0.24", "9.37078, 137.601, -19.7869, 1.68", "9.51487, 138.277, -20.0735, 1.68", "10.0586, 140.293, -20.9427, 0.12", "10.2995, 141.093, -21.2713, 0.12", "10.3896, 141.358, -21.4012, 0.6", "10.5812, 141.87, -21.6885, 0.48", "11.0891, 143.105, -22.4686, 0.12", "11.3738, 143.738, -22.903, 0.12", "11.4486, 143.897, -22.9947, 0.12", "11.614, 144.259, -23.1969, 0.96", "11.7836, 144.635, -23.3857, 0.96", "11.9667, 145.055, -23.5891, 0.48", "12.3912, 146.064, -23.9952, 0.12", "12.9694, 147.445, -24.5535, 0.12", "13.3303, 148.311, -24.9136, 1.8", "13.5176, 148.767, -25.1037, 2.16", "14.1014, 150.172, -25.6595, 0.12", "14.5393, 151.193, -26.0369, 0.12", "14.7094, 151.589, -26.1619, 0.96", "14.9773, 152.21, -26.352, 0.24", "15.2315, 152.8, -26.525, 0.24", "15.6321, 153.683, -26.7858, 1.68", "15.9558, 154.338, -26.9655, 0.12", "16.2517, 154.868, -27.11, 0.12", "16.6761, 155.526, -27.3831, 0.6", "17.0247, 156.011, -27.6221, 0.12", "17.7973, 157.02, -28.1959, 0.12", "17.9526, 157.213, -28.3158, 0.12", "18.58, 158.0, -28.8147, 1.92", "20.0834, 159.896, -29.9738, 0.12", "20.8186, 160.853, -30.5143, 0.12", "21.0319, 161.151, -30.6472, 0.84", "21.2558, 161.508, -30.7664, 0.12", "21.7648, 162.469, -30.987, 0.12", "22.0914, 163.235, -30.9991, 1.68", "22.2727, 163.74, -30.8776, 1.2", "22.5806, 164.618, -30.5929, 0.12", "22.8604, 165.387, -30.2699, 0.12", "23.0635, 165.912, -30.0024, 0.6", "23.6364, 167.263, -29.2047, 0.48", "23.923, 167.926, -28.8128, 0.48", "24.1461, 168.416, -28.5207, 0.48", "24.4042, 168.978, -28.2294, 0.12", "24.5794, 169.358, -28.0681, 0.12", "24.8924, 170.1, -27.8802, 1.44", "25.0547, 170.572, -27.8345, 1.68", "25.3326, 171.515, -27.7853, 0.12", "25.649, 172.746, -27.7656, 0.12", "25.904, 173.836, -27.787, 1.92", "26.1799, 175.112, -27.827, 0.12", "26.4627, 176.46, -27.8876, 0.12", "26.5689, 176.956, -27.9169, 0.6", "26.6199, 177.201, -27.936, 0.12", "26.8396, 178.326, -28.0228, 0.12", "26.9761, 179.09, -28.1371, 1.08", "27.0441, 179.474, -28.2137, 0.72", "27.0893, 179.738, -28.2873, 0.12", "27.2483, 180.674, -28.5978, 0.12", "27.3957, 181.554, -28.9214, 1.44", "27.6459, 183.094, -29.6467, 0.12", "27.7249, 183.53, -29.8635, 0.12", "27.7475, 183.639, -29.9178, 0.48", "27.8049, 183.888, -30.0313, 0.12", "28.0207, 184.676, -30.3352, 0.48", "28.3303, 185.646, -30.582, 0.12", "28.7658, 186.879, -30.8614, 0.12", "28.8493, 187.109, -30.9212, 0.72", "29.1348, 187.906, -31.1335, 1.44", "29.3541, 188.517, -31.2927, 1.8", "29.6429, 189.271, -31.4802, 1.68", "30.2416, 190.859, -31.8339, 0.12", "30.45, 191.435, -32.0065, 0.12", "30.6467, 191.997, -32.1993, 0.12", "30.851, 192.641, -32.4681, 1.32", "30.9873, 193.099, -32.6745, 1.32", "31.0739, 193.43, -32.8269, 1.32", "31.2759, 194.365, -33.2038, 0.12", "31.433, 195.188, -33.6276, 0.12", "31.5465, 196.008, -34.1623, 0.72" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "9.71669, 131.505, -15.883, 0.12", "11.7143, 131.81, -0.0647838, 0.12", "11.7954, 131.823, 0.54157, 0.12", "11.8487, 131.831, 0.917207, 0.12", "12.0394, 131.857, 2.18776, 0.84", "12.1034, 131.866, 2.61558, 0.84", "12.2158, 131.878, 3.59259, 0.36", "12.467, 131.942, 3.24571, 0.36", "12.6832, 132.022, 2.87862, 0.36", "12.921, 132.119, 2.43803, 0.36", "13.4655, 132.35, 1.41197, 0.36", "14.597, 132.867, -0.763887, 0.36", "15.2068, 133.161, -1.89735, 2.04", "16.1552, 133.622, -3.60224, 1.56", "16.5884, 133.834, -4.3136, 0.12", "16.8007, 133.937, -4.62066, 0.12", "17.4427, 134.201, -5.34054, 1.2", "17.9839, 134.36, -5.75727, 0.48", "18.2913, 134.429, -5.94275, 0.12", "19.1557, 134.615, -6.34432, 0.12", "20.0466, 134.813, -6.82425, 1.32", "20.45, 134.906, -7.06875, 1.68", "21.6397, 135.225, -7.89728, 0.12", "22.0003, 135.34, -8.2142, 0.12", "22.5309, 135.527, -8.78674, 0.6", "23.5106, 135.862, -9.98932, 0.12", "23.8434, 135.963, -10.411, 0.12", "24.7673, 136.217, -11.6279, 1.8", "25.7275, 136.457, -12.8784, 1.8", "26.7082, 136.642, -14.2257, 0.48", "27.0571, 136.682, -14.6888, 0.48", "27.4116, 136.697, -15.0974, 0.48", "28.1305, 136.698, -15.8785, 1.44", "28.5626, 136.684, -16.3115, 1.68", "30.1489, 136.679, -17.8148, 0.36", "30.8543, 136.75, -18.4881, 0.36", "31.4713, 136.901, -19.2192, 1.68", "32.0298, 137.107, -19.9671, 1.2", "32.7864, 137.484, -21.0989, 0.36", "33.282, 137.797, -21.9032, 0.36", "33.9149, 138.321, -23.0388, 1.68", "35.0224, 139.423, -25.2623, 0.24", "35.2592, 139.685, -25.7538, 0.24", "35.5469, 139.999, -26.3023, 0.84", "35.7806, 140.231, -26.6969, 0.96", "36.382, 140.69, -27.5426, 0.24", "36.7617, 140.887, -27.9592, 0.24", "37.5255, 141.125, -28.6264, 1.44", "37.8672, 141.173, -28.9812, 1.68", "38.4525, 141.155, -29.7919, 0.36", "38.7307, 141.103, -30.243, 0.36", "38.9319, 141.033, -30.614, 0.36", "39.7408, 140.679, -32.225, 0.96", "40.6416, 140.222, -34.0866, 1.68", "41.7137, 139.639, -36.3199, 0.6", "41.9188, 139.515, -36.7431, 0.48", "42.6825, 138.997, -38.2781, 2.04", "42.9472, 138.79, -38.779, 2.52", "43.7484, 138.09, -40.0807, 0.36", "43.9863, 137.884, -40.3843, 0.36", "44.3967, 137.578, -40.7744, 0.48", "45.2895, 136.943, -41.5395, 0.36", "45.6159, 136.7, -41.7857, 0.36", "45.8008, 136.554, -41.9215, 0.36", "46.7313, 135.812, -42.5043, 0.36", "47.5049, 135.205, -42.932, 1.08", "48.0397, 134.811, -43.1644, 1.8", "48.7333, 134.333, -43.3678, 1.2", "49.3303, 133.968, -43.5188, 0.36", "50.1554, 133.517, -43.6315, 0.36", "51.0004, 133.108, -43.661, 0.36", "51.6625, 132.84, -43.6383, 1.2", "52.4866, 132.579, -43.6052, 1.8", "53.5802, 132.313, -43.5762, 0.12", "55.1342, 132.011, -43.576, 0.12", "55.9875, 131.86, -43.6042, 1.44", "56.4749, 131.757, -43.6379, 2.16", "57.3419, 131.512, -43.7129, 2.4", "58.4678, 131.1, -43.8061, 0.24", "58.9134, 130.877, -43.8386, 0.24", "59.3279, 130.598, -43.8896, 0.24", "60.0428, 130.01, -43.9269, 0.48", "60.5064, 129.576, -43.9283, 0.12", "61.0521, 129.072, -43.881, 0.12", "61.4358, 128.756, -43.7999, 0.12", "61.8386, 128.489, -43.7067, 0.12", "62.3528, 128.229, -43.5223, 0.36", "62.6927, 128.102, -43.3796, 0.12", "63.7525, 127.757, -42.9176, 0.12", "64.6759, 127.485, -42.4964, 1.44", "64.9129, 127.42, -42.3869, 1.56", "66.2745, 127.037, -41.7346, 0.36", "66.7058, 126.888, -41.4484, 0.36", "66.9582, 126.777, -41.2324, 0.36", "67.2517, 126.583, -40.9124, 0.36", "67.4705, 126.404, -40.6991, 0.36", "67.6249, 126.258, -40.5296, 0.36", "68.6607, 125.156, -39.3989, 0.12", "68.8615, 124.943, -39.1799, 0.12", "69.0877, 124.711, -38.9215, 0.12", "69.8617, 123.972, -38.0678, 2.4", "71.2027, 122.792, -36.7425, 0.12", "71.5863, 122.469, -36.4129, 0.12", "72.0756, 122.072, -36.0158, 0.36", "72.5495, 121.689, -35.5972, 0.12", "72.9398, 121.374, -35.2339, 0.12", "73.3081, 121.065, -34.8718, 1.08", "73.6243, 120.8, -34.5634, 1.08", "74.6944, 119.848, -33.4159, 0.36", "74.9704, 119.568, -33.1185, 0.36", "75.1917, 119.331, -32.915, 0.12", "75.3234, 119.183, -32.7716, 0.12", "76.0491, 118.368, -31.9369, 0.12", "76.3808, 118.015, -31.5804, 1.32", "76.8914, 117.504, -31.079, 2.04", "77.491, 116.962, -30.4984, 1.32", "78.8431, 115.857, -29.1941, 0.12", "79.0276, 115.728, -29.0272, 0.12", "79.3429, 115.569, -28.6706, 0.24", "79.8134, 115.373, -28.0868, 0.24", "80.1715, 115.264, -27.595, 0.24", "80.6608, 115.166, -26.8543, 0.24", "80.911, 115.141, -26.497, 0.84", "82.6588, 115.058, -23.6788, 0.6" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "35.9271, 95.9027, 14.5584, 0.72", "35.5854, 95.3922, 13.5568, 0.72", "35.0398, 94.7902, 12.2474, 0.6", "34.685, 94.3987, 11.3956, 0.36", "34.553, 94.2532, 11.079, 0.48", "34.2236, 93.8898, 10.2885, 0.36", "33.8214, 93.4461, 9.32304, 0.12", "33.6607, 93.3273, 8.99442, 0.12" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "35.9271, 95.9027, 14.5584, 0.48", "35.9406, 96.8108, 14.5329, 0.48", "35.9323, 97.5974, 14.552, 0.48", "35.8711, 98.4353, 14.573, 0.6", "35.7875, 99.1116, 14.5997, 0.48", "35.6475, 100.129, 14.6456, 0.48", "35.4893, 101.278, 14.7002, 2.04", "35.3909, 102.224, 14.7556, 1.92", "35.2937, 103.319, 14.7691, 1.44", "35.2242, 104.182, 14.7434, 1.08", "35.1825, 104.946, 14.7029, 0.96", "35.1875, 105.332, 14.6563, 0.72", "35.2836, 106.221, 14.4634, 1.08", "35.5623, 107.674, 14.1349, 0.48", "35.7159, 108.282, 14.0087, 0.48", "35.9947, 109.288, 13.824, 1.32", "36.2325, 110.178, 13.6597, 1.92", "36.5226, 111.365, 13.5071, 1.08", "36.7212, 112.204, 13.4618, 0.72", "36.8236, 112.651, 13.4891, 0.24", "37.115, 113.669, 13.5749, 0.24", "37.3228, 114.422, 13.6401, 0.72", "37.5172, 115.301, 13.7546, 0.12", "37.7007, 116.066, 13.8746, 0.12", "37.9625, 117.14, 14.0218, 1.8", "38.2778, 118.504, 14.2102, 2.76", "38.466, 119.39, 14.3539, 2.64", "38.769, 120.87, 14.6138, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "39.2867, -125.119, -32.8071, 0.12", "40.0952, -125.682, -32.8177, 0.12", "40.7661, -126.149, -32.8266, 0.12", "41.4445, -126.621, -32.8355, 0.6", "41.8006, -126.868, -32.8402, 0.12", "42.6542, -127.463, -32.8514, 0.12", "43.1015, -127.774, -32.8573, 0.72" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "39.2867, -125.119, -32.8071, 0.12", "39.3517, -126.475, -32.5984, 0.12", "39.3845, -127.303, -32.3415, 0.12", "39.4312, -127.904, -32.117, 0.96", "39.4925, -128.492, -31.8951, 1.56", "39.6141, -129.417, -31.5595, 0.12", "39.6936, -129.899, -31.3934, 0.12", "40.0287, -131.375, -30.7884, 1.08", "40.2, -132.005, -30.5209, 0.72", "40.3496, -132.496, -30.3236, 0.12", "40.5318, -133.075, -30.041, 0.12", "40.6883, -133.601, -29.7663, 0.12", "40.9123, -134.439, -29.359, 1.44", "41.0234, -134.892, -29.1675, 1.68", "41.0933, -135.248, -29.012, 1.68", "41.3455, -136.754, -28.3862, 0.12", "41.4248, -137.449, -28.1147, 0.12", "41.4661, -138.199, -27.8634, 0.12", "41.4692, -138.462, -27.7956, 0.96", "41.4571, -139.076, -27.6614, 0.96", "41.4438, -139.642, -27.5667, 0.12", "41.3795, -141.175, -27.4368, 0.12", "41.3356, -141.957, -27.3725, 0.96", "41.2847, -142.671, -27.3295, 1.68", "41.2522, -143.173, -27.3069, 1.92", "41.2214, -143.699, -27.3057, 1.92", "41.1515, -145.003, -27.3577, 0.12", "41.1171, -145.502, -27.4155, 0.12", "41.0114, -146.617, -27.5856, 0.12", "40.9427, -147.12, -27.7118, 0.6", "40.8102, -147.789, -27.9237, 0.12", "40.6337, -148.475, -28.1713, 0.12", "40.4337, -149.186, -28.4531, 1.2", "40.1337, -150.177, -28.8575, 1.68", "39.6697, -151.606, -29.4222, 0.12", "39.4499, -152.321, -29.7015, 0.12", "39.3237, -152.826, -29.878, 0.12", "39.2199, -153.419, -30.0905, 0.12", "39.1874, -153.77, -30.2104, 1.2", "39.1701, -154.529, -30.4518, 1.56", "39.2209, -155.859, -30.8353, 0.24", "39.2971, -156.835, -31.136, 0.24", "39.3724, -157.812, -31.4517, 0.72", "39.3994, -158.293, -31.6074, 0.84", "39.422, -158.808, -31.7671, 0.12", "39.4287, -159.168, -31.8781, 0.12", "39.4069, -159.765, -32.073, 0.12", "39.3808, -160.196, -32.2293, 0.12", "39.3642, -160.712, -32.2159, 0.12", "39.3621, -160.958, -32.1627, 0.12", "39.3516, -161.824, -31.8657, 1.32", "39.3089, -162.769, -31.4723, 0.12", "39.2991, -163.599, -31.0324, 0.12", "39.3867, -167.183, -28.6521, 0.6", "39.4423, -168.484, -27.5174, 1.32", "39.4604, -168.823, -27.1244, 2.04", "39.4853, -169.163, -26.5698, 2.4" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "108.125, -20.6798, 13.7786, 0.24", "109.146, -20.5755, 14.2355, 0.24", "109.595, -20.5208, 14.4359, 0.24", "111.233, -20.3151, 15.1555, 0.24", "111.715, -20.2459, 15.35, 0.96", "112.621, -20.1037, 15.6459, 1.56", "113.415, -19.9679, 15.9152, 0.36", "114.948, -19.6806, 16.4068, 0.12", "115.294, -19.6088, 16.5122, 1.2", "116.374, -19.3546, 16.7797, 2.16", "117.711, -18.9663, 17.1346, 0.12", "119.084, -18.4741, 17.4981, 0.12", "119.323, -18.3636, 17.558, 0.84", "119.783, -18.0899, 17.6526, 0.96", "120.392, -17.6742, 17.7892, 0.12", "120.942, -17.1928, 17.9414, 0.12", "121.115, -16.9726, 17.9968, 0.6", "121.496, -16.3441, 17.9936, 0.12", "121.739, -15.8361, 18.0008, 0.12" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "108.125, -20.6798, 13.7786, 0.6", "107.937, -19.4161, 13.9399, 0.6", "107.892, -19.066, 13.9851, 0.6", "107.835, -18.316, 14.0566, 0.84", "107.826, -17.2901, 14.1293, 0.12", "107.814, -16.1221, 14.1949, 0.12", "107.813, -15.7241, 14.2126, 0.96", "107.855, -14.8544, 14.2451, 1.2", "107.943, -13.8644, 14.2583, 0.12", "108.085, -12.7569, 14.2455, 0.12", "108.227, -11.8878, 14.1915, 0.12", "108.434, -10.9121, 14.0881, 0.12", "108.542, -10.4751, 14.0392, 0.12", "108.822, -9.49226, 13.9265, 1.68", "108.938, -9.17337, 13.8289, 1.92", "109.446, -8.07138, 13.2894, 0.12", "109.924, -7.19275, 12.7019, 0.12", "110.129, -6.80328, 12.3874, 1.32", "110.287, -6.4532, 12.0365, 1.68", "111.178, -4.35249, 9.35955, 0.36", "111.288, -4.11871, 9.00526, 0.36", "111.438, -3.81525, 8.46586, 0.12", "111.654, -3.37378, 7.57187, 0.12", "112.047, -2.49681, 5.69486, 0.48", "112.254, -1.92592, 4.47008, 1.44", "112.36, -1.38282, 3.49525, 2.16" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.83365, -285.093, -42.8118, 0.24", "-4.58442, -284.728, -43.0211, 0.24", "-4.26815, -284.265, -43.2868, 0.24", "-3.88563, -283.706, -43.608, 0.6", "-3.49915, -283.14, -43.9327, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.83365, -285.093, -42.8118, 0.12", "-4.30214, -285.53, -42.2883, 0.12", "-3.95745, -285.77, -41.9462, 0.12", "-3.64806, -285.933, -41.6963, 0.12", "-3.23566, -286.093, -41.4391, 0.12", "-3.00406, -286.159, -41.3191, 0.12", "-1.10034, -286.56, -40.4813, 0.12", "-0.274835, -286.615, -40.2087, 2.04", "0.611423, -286.601, -39.9369, 1.56", "1.55266, -286.526, -39.6829, 0.36", "2.06219, -286.453, -39.5292, 0.36", "2.64112, -286.348, -39.3583, 0.36", "3.80782, -286.104, -39.0711, 0.36", "4.26866, -286.001, -38.8906, 0.6", "4.58106, -285.933, -38.724, 0.6", "5.92725, -285.613, -37.8808, 0.36", "6.22429, -285.543, -37.6886, 0.6", "6.6475, -285.451, -37.4477, 0.6", "7.42655, -285.307, -37.0967, 0.12", "7.75486, -285.275, -37.0162, 0.12", "8.3618, -285.271, -36.98, 0.12", "8.94583, -285.338, -37.1019, 1.08", "10.0554, -285.602, -37.4526, 0.12", "10.2898, -285.697, -37.5468, 0.12", "10.9213, -286.029, -37.8295, 0.12", "11.3156, -286.279, -38.0101, 0.48", "11.9455, -286.74, -38.3052, 0.12", "12.3154, -287.038, -38.4719, 0.12", "12.9487, -287.57, -38.6947, 0.12", "13.3979, -287.948, -38.8642, 0.12", "13.7759, -288.256, -39.0172, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "39.4853, -169.163, -26.5698, 0.48", "39.4959, -171.132, -29.9405, 0.48", "39.4877, -171.453, -30.4635, 0.48", "39.4653, -172.202, -31.5594, 0.12", "39.4632, -172.571, -32.0606, 0.12", "39.4601, -173.082, -32.7551, 1.2", "39.4563, -173.725, -33.6297, 0.12", "39.4465, -173.891, -33.7959, 0.12", "39.4156, -174.413, -34.33, 0.72", "39.3879, -174.719, -34.571, 0.72" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "39.4853, -169.163, -26.5698, 0.12", "38.4495, -171.142, -27.9851, 0.12", "38.0696, -171.988, -28.3365, 0.12", "37.9616, -172.232, -28.4159, 0.6", "37.6509, -172.91, -28.5962, 0.24", "37.5331, -173.162, -28.6239, 0.24", "37.2125, -173.814, -28.6389, 0.24", "36.9666, -174.287, -28.5137, 0.6", "36.5628, -174.905, -28.3252, 0.12", "36.1977, -175.371, -28.1839, 0.12", "35.3968, -176.206, -27.944, 0.84", "35.2023, -176.389, -27.8811, 0.84", "34.8288, -176.696, -27.7396, 0.12", "34.6199, -176.844, -27.648, 0.12", "34.0707, -177.176, -27.3629, 0.84", "33.8412, -177.287, -27.2725, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L4_DBC_ba1da59a9a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_26
create dend_48
public dend_48
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_15
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_27
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.499998982464247)
    connect dend_15(0), soma_0(0.499998982464247)
    connect dend_0(0), soma_0(0.499998982464247)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.72142, 10.9655, 0.761584, 2.84462 ) }
    soma_0 { pt3dadd( 1.58182, 9.77504, 0.687603, 4.62864 ) }
    soma_0 { pt3dadd( 1.44222, 8.58452, 0.613623, 7.50202 ) }
    soma_0 { pt3dadd( 1.30262, 7.39401, 0.539642, 9.47415 ) }
    soma_0 { pt3dadd( 1.16302, 6.2035, 0.465661, 11.0555 ) }
    soma_0 { pt3dadd( 1.02343, 5.01299, 0.391681, 12.4342 ) }
    soma_0 { pt3dadd( 0.883829, 3.82247, 0.3177, 13.5523 ) }
    soma_0 { pt3dadd( 0.744231, 2.63196, 0.243719, 14.3411 ) }
    soma_0 { pt3dadd( 0.604633, 1.44145, 0.169739, 14.9091 ) }
    soma_0 { pt3dadd( 0.465035, 0.250937, 0.0957582, 15.2878 ) }
    soma_0 { pt3dadd( 0.325437, -0.939575, 0.0217776, 15.5461 ) }
    soma_0 { pt3dadd( 0.185839, -2.13009, -0.0522031, 15.5537 ) }
    soma_0 { pt3dadd( 0.0462405, -3.3206, -0.126184, 15.1598 ) }
    soma_0 { pt3dadd( -0.0933575, -4.51111, -0.200164, 14.7587 ) }
    soma_0 { pt3dadd( -0.232956, -5.70162, -0.274145, 14.0408 ) }
    soma_0 { pt3dadd( -0.372554, -6.89214, -0.348126, 13.1988 ) }
    soma_0 { pt3dadd( -0.512152, -8.08265, -0.422106, 12.1253 ) }
    soma_0 { pt3dadd( -0.65175, -9.27316, -0.496087, 10.5491 ) }
    soma_0 { pt3dadd( -0.791348, -10.4637, -0.570068, 8.74654 ) }
    soma_0 { pt3dadd( -0.930946, -11.6542, -0.644048, 6.27284 ) }
    soma_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 3.68979 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.07622, -6.77913, -17.6726, 3.85 ) }
    dend_26 { pt3dadd( 3.94615, -6.18062, -16.8912, 3.85 ) }
    dend_26 { pt3dadd( 4.84971, -5.55897, -16.0797, 3.85 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 24/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.643782, -13.4151, -2.03262, 2.64 ) }
    dend_15 { pt3dadd( -0.482193, -15.0908, -0.858869, 1.92 ) }
    dend_15 { pt3dadd( -0.34721, -16.3501, -0.0824965, 1.8 ) }
    dend_15 { pt3dadd( -0.216222, -17.3554, 0.426484, 1.92 ) }
    dend_15 { pt3dadd( 0.185703, -20.0359, 1.52715, 1.32 ) }
    dend_15 { pt3dadd( 0.402867, -21.2495, 1.93041, 1.56 ) }
    dend_15 { pt3dadd( 0.655814, -22.451, 2.24724, 1.8 ) }
    dend_15 { pt3dadd( 0.899104, -23.4179, 2.34584, 2.04 ) }
    dend_15 { pt3dadd( 1.33281, -24.9168, 2.31856, 2.16 ) }
    dend_15 { pt3dadd( 1.63354, -25.8875, 2.1773, 1.32 ) }
    dend_15 { pt3dadd( 1.96871, -26.9876, 1.94842, 1.44 ) }
    dend_15 { pt3dadd( 2.35016, -28.425, 1.71036, 1.44 ) }
    dend_15 { pt3dadd( 2.58576, -29.5532, 1.58201, 1.8 ) }
    dend_15 { pt3dadd( 2.6914, -30.34, 1.52355, 2.04 ) }
    dend_15 { pt3dadd( 2.72964, -31.4588, 1.48927, 1.68 ) }
    dend_15 { pt3dadd( 2.62976, -33.1333, 1.4613, 1.44 ) }
    dend_15 { pt3dadd( 2.49962, -33.9674, 1.45664, 1.8 ) }
    dend_15 { pt3dadd( 2.33746, -34.6519, 1.46401, 2.04 ) }
    dend_15 { pt3dadd( 2.07161, -35.5866, 1.49394, 1.92 ) }
    dend_15 { pt3dadd( 1.78571, -36.4485, 1.51856, 1.56 ) }
    dend_15 { pt3dadd( 1.40927, -37.504, 1.50002, 1.56 ) }
    dend_15 { pt3dadd( 1.15591, -38.2089, 1.39999, 0.72 ) }
    dend_15 { pt3dadd( 0.978182, -38.7378, 1.31285, 0.48 ) }
    dend_15 { pt3dadd( 0.842574, -39.1561, 1.25807, 0.48 ) }
    dend_15 { pt3dadd( 0.529551, -40.1469, 1.16772, 1.32 ) }
    dend_15 { pt3dadd( 0.270822, -40.9785, 1.09606, 1.68 ) }
    dend_15 { pt3dadd( -0.208095, -42.5257, 0.91758, 1.56 ) }
    dend_15 { pt3dadd( -0.477864, -43.3956, 0.818954, 1.92 ) }
    dend_15 { pt3dadd( -0.868599, -44.6889, 0.680283, 2.64 ) }
    dend_15 { pt3dadd( -1.13938, -45.6501, 0.606182, 2.76 ) }
    dend_15 { pt3dadd( -1.34086, -46.5045, 0.579762, 2.76 ) }
    dend_15 { pt3dadd( -1.55998, -47.7152, 0.614995, 1.68 ) }
    dend_15 { pt3dadd( -1.6478, -48.4934, 0.667713, 0.96 ) }
    dend_15 { pt3dadd( -1.69315, -49.5192, 0.727468, 0.96 ) }
    dend_15 { pt3dadd( -1.66653, -50.8421, 0.793193, 1.32 ) }
    dend_15 { pt3dadd( -1.552, -52.7448, 0.909579, 1.8 ) }
    dend_15 { pt3dadd( -1.4852, -53.5751, 0.971354, 2.16 ) }
    dend_15 { pt3dadd( -1.40165, -54.5283, 1.0358, 2.28 ) }
    dend_15 { pt3dadd( -1.30036, -55.6976, 1.08849, 0.84 ) }
    dend_15 { pt3dadd( -1.25319, -56.4641, 1.1017, 0.84 ) }
    dend_15 { pt3dadd( -1.2257, -57.5983, 1.0756, 1.08 ) }
    dend_15 { pt3dadd( -1.30066, -58.7871, 1.01259, 1.68 ) }
    dend_15 { pt3dadd( -1.46403, -59.7101, 0.95678, 2.52 ) }
    dend_15 { pt3dadd( -1.57404, -60.0887, 0.913541, 3.0 ) }
    dend_15 { pt3dadd( -1.7298, -60.4974, 0.847553, 2.88 ) }
    dend_15 { pt3dadd( -1.83107, -60.7222, 0.808936, 2.88 ) }
    dend_15 { pt3dadd( -2.256, -61.5746, 0.65242, 2.16 ) }
    dend_15 { pt3dadd( -2.95118, -62.8928, 0.523151, 0.96 ) }
    dend_15 { pt3dadd( -3.48414, -63.8951, 0.452685, 0.48 ) }
    dend_15 { pt3dadd( -3.67086, -64.2412, 0.429521, 0.48 ) }
    dend_15 { pt3dadd( -4.32579, -65.4419, 0.357937, 1.92 ) }
    dend_15 { pt3dadd( -4.96217, -66.5804, 0.306683, 3.12 ) }
    dend_15 { pt3dadd( -5.67902, -67.8786, 0.297863, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.64622, 11.5329, 0.167383, 2.16 ) }
    dend_0 { pt3dadd( 3.15808, 13.6425, 0.894906, 1.44 ) }
    dend_0 { pt3dadd( 3.67896, 15.6663, 1.55697, 2.16 ) }
    dend_0 { pt3dadd( 4.26355, 17.8746, 2.23104, 3.25 ) }
    dend_0 { pt3dadd( 4.67494, 19.3689, 2.67041, 3.49 ) }
    dend_0 { pt3dadd( 5.15145, 21.0567, 3.24425, 3.25 ) }
    dend_0 { pt3dadd( 5.48576, 22.2409, 3.64685, 2.88 ) }
    dend_0 { pt3dadd( 5.74318, 23.1396, 3.99392, 2.88 ) }
    dend_0 { pt3dadd( 6.02128, 24.0659, 4.31722, 2.52 ) }
    dend_0 { pt3dadd( 6.54935, 25.7007, 4.91169, 2.16 ) }
    dend_0 { pt3dadd( 7.31149, 27.9225, 5.74237, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 0.781141 ) }
    axon_0 { pt3dadd( -2.81746, -27.7426, -0.718029, 0.781141 ) }
    axon_0 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.781141 ) }
    // Section: dend_48, id: dend_48, parent: dend_26 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.84971, -5.55897, -16.0797, 1.56 ) }
    dend_48 { pt3dadd( 3.72131, -2.64252, -17.1468, 1.56 ) }
    dend_48 { pt3dadd( 3.30309, -1.40282, -17.5993, 1.2 ) }
    dend_48 { pt3dadd( 3.05319, -0.51801, -17.9287, 0.96 ) }
    dend_48 { pt3dadd( 2.81146, 0.54457, -18.2819, 0.96 ) }
    dend_48 { pt3dadd( 2.46559, 2.43074, -18.8951, 1.32 ) }
    dend_48 { pt3dadd( 2.15523, 4.59731, -19.4654, 1.32 ) }
    dend_48 { pt3dadd( 2.007, 6.38251, -19.7536, 1.44 ) }
    dend_48 { pt3dadd( 1.97895, 7.92581, -19.9409, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 2.04839, 9.57936, -20.0616, 1.44 ) }
    dend_48 { pt3dadd( 2.14665, 10.8902, -20.0794, 1.68 ) }
    dend_48 { pt3dadd( 2.33367, 13.2832, -19.966, 2.88 ) }
    dend_48 { pt3dadd( 2.38947, 14.3038, -19.8554, 3.73 ) }
    dend_48 { pt3dadd( 2.38943, 15.9168, -19.6486, 3.73 ) }
    dend_48 { pt3dadd( 2.24319, 18.014, -19.385, 2.88 ) }
    dend_48 { pt3dadd( 1.9229, 20.3714, -19.15, 1.68 ) }
    dend_48 { pt3dadd( 1.70401, 21.4643, -19.0599, 1.2 ) }
    dend_48 { pt3dadd( 1.4592, 22.46, -19.0295, 0.96 ) }
    dend_48 { pt3dadd( 1.08576, 23.74, -18.9894, 1.68 ) }
    dend_48 { pt3dadd( 0.585778, 25.1505, -18.9459, 2.88 ) }
    dend_48 { pt3dadd( 0.30954, 25.7637, -18.9318, 3.49 ) }
    dend_48 { pt3dadd( -0.0730332, 26.4539, -18.9382, 3.61 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.84971, -5.55897, -16.0797, 1.32 ) }
    dend_27 { pt3dadd( 6.81932, -6.46448, -16.018, 1.32 ) }
    dend_27 { pt3dadd( 7.61314, -6.81381, -16.1073, 0.84 ) }
    dend_27 { pt3dadd( 8.76733, -7.34987, -16.3392, 1.2 ) }
    dend_27 { pt3dadd( 10.0315, -8.02204, -16.7115, 1.44 ) }
    dend_27 { pt3dadd( 11.304, -8.89941, -17.2433, 1.32 ) }
    dend_27 { pt3dadd( 12.3157, -9.82411, -17.772, 1.56 ) }
    dend_27 { pt3dadd( 13.2898, -11.1871, -18.5959, 1.2 ) }
    dend_27 { pt3dadd( 13.5637, -11.6984, -18.9205, 1.2 ) }
    dend_27 { pt3dadd( 13.8609, -12.5941, -19.5007, 1.2 ) }
    dend_27 { pt3dadd( 14.0982, -14.1493, -20.4647, 2.64 ) }
    dend_27 { pt3dadd( 14.129, -15.4649, -21.1636, 4.45 ) }
    dend_27 { pt3dadd( 14.1093, -16.5089, -21.5392, 4.33 ) }
    // Section: dend_25, id: dend_25, parent: dend_15 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -5.67902, -67.8786, 0.297863, 3.0 ) }
    dend_25 { pt3dadd( -6.47958, -68.7167, 0.471154, 3.0 ) }
    dend_25 { pt3dadd( -6.93454, -69.2674, 0.57688, 2.76 ) }
    dend_25 { pt3dadd( -7.63855, -70.2444, 0.800748, 1.92 ) }
    dend_25 { pt3dadd( -7.86341, -70.6191, 0.896953, 1.92 ) }
    dend_25 { pt3dadd( -8.29381, -71.494, 1.12479, 0.6 ) }
    dend_25 { pt3dadd( -8.53905, -72.1054, 1.2695, 0.48 ) }
    dend_25 { pt3dadd( -8.58884, -72.347, 1.31621, 0.48 ) }
    dend_25 { pt3dadd( -8.65127, -72.9811, 1.42132, 0.48 ) }
    dend_25 { pt3dadd( -8.64968, -73.7518, 1.51809, 0.84 ) }
    dend_25 { pt3dadd( -8.57031, -74.6264, 1.60872, 1.08 ) }
    dend_25 { pt3dadd( -8.41922, -75.487, 1.71393, 1.32 ) }
    dend_25 { pt3dadd( -8.20769, -76.3339, 1.80357, 0.96 ) }
    dend_25 { pt3dadd( -8.01804, -76.9284, 1.86261, 0.72 ) }
    dend_25 { pt3dadd( -7.78489, -77.5445, 1.91394, 0.6 ) }
    dend_25 { pt3dadd( -7.3457, -78.5098, 2.02881, 0.48 ) }
    dend_25 { pt3dadd( -6.86033, -79.4033, 2.11858, 0.48 ) }
    dend_25 { pt3dadd( -6.33615, -80.2467, 2.19394, 1.44 ) }
    dend_25 { pt3dadd( -5.75047, -81.1159, 2.2566, 1.92 ) }
    dend_25 { pt3dadd( -5.30173, -81.7554, 2.31667, 2.04 ) }
    dend_25 { pt3dadd( -4.71775, -82.6234, 2.40942, 1.44 ) }
    dend_25 { pt3dadd( -4.02283, -83.7094, 2.50874, 0.84 ) }
    dend_25 { pt3dadd( -3.83033, -84.0468, 2.56964, 0.12 ) }
    dend_25 { pt3dadd( -3.60691, -84.5294, 2.71863, 0.12 ) }
    dend_25 { pt3dadd( -3.3548, -85.3314, 3.10419, 1.32 ) }
    dend_25 { pt3dadd( -3.18471, -86.1913, 3.61461, 1.68 ) }
    dend_25 { pt3dadd( -3.13104, -86.5993, 3.87352, 1.8 ) }
    dend_25 { pt3dadd( -2.92419, -88.2831, 4.98104, 1.2 ) }
    dend_25 { pt3dadd( -2.85598, -89.0058, 5.43983, 1.68 ) }
    dend_25 { pt3dadd( -2.7245, -90.1998, 6.19905, 1.2 ) }
    dend_25 { pt3dadd( -2.65125, -90.9583, 6.69034, 0.24 ) }
    dend_25 { pt3dadd( -2.61719, -91.4674, 7.03541, 0.24 ) }
    dend_25 { pt3dadd( -2.58745, -92.3728, 7.62583, 1.92 ) }
    dend_25 { pt3dadd( -2.61614, -92.9887, 7.97557, 1.8 ) }
    dend_25 { pt3dadd( -2.98772, -94.8964, 9.04363, 0.72 ) }
    dend_25 { pt3dadd( -3.31496, -95.8626, 9.56337, 0.72 ) }
    dend_25 { pt3dadd( -3.63564, -96.5014, 9.90604, 0.48 ) }
    dend_25 { pt3dadd( -3.93504, -96.9437, 10.161, 0.36 ) }
    dend_25 { pt3dadd( -4.47608, -97.6095, 10.5311, 0.36 ) }
    dend_25 { pt3dadd( -4.78828, -98.0277, 10.7195, 0.36 ) }
    dend_25 { pt3dadd( -5.39892, -99.061, 11.2233, 0.6 ) }
    dend_25 { pt3dadd( -5.53107, -99.4459, 11.4356, 0.6 ) }
    dend_25 { pt3dadd( -5.66433, -99.9316, 11.7988, 0.36 ) }
    dend_25 { pt3dadd( -5.76804, -100.292, 12.1185, 0.36 ) }
    dend_25 { pt3dadd( -5.87731, -100.734, 12.535, 0.36 ) }
    dend_25 { pt3dadd( -6.23163, -102.003, 13.7925, 0.36 ) }
    dend_25 { pt3dadd( -6.33134, -102.25, 14.0464, 0.36 ) }
    dend_25 { pt3dadd( -6.67589, -103.044, 14.9564, 1.44 ) }
    dend_25 { pt3dadd( -6.81078, -103.349, 15.3383, 1.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 75/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.67902, -67.8786, 0.297863, 0.12 ) }
    dend_16 { pt3dadd( -5.9682, -69.6303, 0.0598785, 0.12 ) }
    dend_16 { pt3dadd( -6.10641, -70.2596, -0.105371, 0.12 ) }
    dend_16 { pt3dadd( -6.2452, -70.8418, -0.287956, 0.96 ) }
    dend_16 { pt3dadd( -6.38743, -71.513, -0.508972, 1.32 ) }
    dend_16 { pt3dadd( -6.47794, -72.0267, -0.684875, 1.32 ) }
    dend_16 { pt3dadd( -6.63132, -73.1482, -1.07376, 0.6 ) }
    dend_16 { pt3dadd( -6.73877, -73.9865, -1.46579, 0.36 ) }
    dend_16 { pt3dadd( -6.75184, -74.2064, -1.5823, 0.36 ) }
    dend_16 { pt3dadd( -6.72434, -74.7446, -1.87731, 0.36 ) }
    dend_16 { pt3dadd( -6.67886, -75.0887, -2.04006, 0.36 ) }
    dend_16 { pt3dadd( -6.63369, -75.446, -2.17497, 0.36 ) }
    dend_16 { pt3dadd( -6.59986, -76.1131, -2.35492, 0.36 ) }
    dend_16 { pt3dadd( -6.62179, -76.559, -2.43474, 0.36 ) }
    dend_16 { pt3dadd( -6.69204, -77.1978, -2.60991, 0.36 ) }
    dend_16 { pt3dadd( -6.81377, -77.926, -2.81748, 1.08 ) }
    dend_16 { pt3dadd( -7.01956, -78.9041, -3.09234, 1.68 ) }
    dend_16 { pt3dadd( -7.19146, -79.6164, -3.2882, 1.8 ) }
    dend_16 { pt3dadd( -7.43637, -80.5412, -3.51718, 1.56 ) }
    dend_16 { pt3dadd( -7.7739, -81.9127, -3.90011, 1.2 ) }
    dend_16 { pt3dadd( -7.90326, -82.5438, -4.08372, 0.36 ) }
    dend_16 { pt3dadd( -7.95155, -82.8864, -4.16359, 0.36 ) }
    dend_16 { pt3dadd( -7.98581, -83.2819, -4.19411, 0.36 ) }
    dend_16 { pt3dadd( -8.02175, -84.2309, -4.17284, 1.56 ) }
    dend_16 { pt3dadd( -8.02261, -84.9596, -4.11309, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( -8.00273, -85.8658, -3.97922, 1.92 ) }
    dend_16 { pt3dadd( -7.93253, -87.1059, -3.8016, 1.08 ) }
    dend_16 { pt3dadd( -7.83751, -88.1602, -3.6175, 0.36 ) }
    dend_16 { pt3dadd( -7.74709, -89.0168, -3.44542, 0.36 ) }
    dend_16 { pt3dadd( -7.6823, -89.6117, -3.25231, 0.36 ) }
    dend_16 { pt3dadd( -7.66159, -89.8443, -3.16225, 0.36 ) }
    dend_16 { pt3dadd( -7.61793, -90.427, -2.93286, 0.96 ) }
    dend_16 { pt3dadd( -7.58012, -91.0493, -2.67115, 1.8 ) }
    dend_16 { pt3dadd( -7.54759, -91.7539, -2.41191, 2.16 ) }
    dend_16 { pt3dadd( -7.49783, -93.8011, -1.69821, 1.92 ) }
    dend_16 { pt3dadd( -7.50179, -94.8048, -1.40299, 1.8 ) }
    dend_16 { pt3dadd( -7.53018, -95.6664, -1.2321, 1.8 ) }
    dend_16 { pt3dadd( -7.59921, -96.6965, -1.22827, 1.2 ) }
    dend_16 { pt3dadd( -7.73369, -98.1776, -1.6289, 0.12 ) }
    dend_16 { pt3dadd( -7.75534, -98.4036, -1.73278, 0.12 ) }
    dend_16 { pt3dadd( -7.817, -99.0215, -2.09535, 0.12 ) }
    dend_16 { pt3dadd( -7.88972, -99.7666, -2.53656, 0.84 ) }
    dend_16 { pt3dadd( -7.99195, -101.004, -3.2895, 1.08 ) }
    dend_16 { pt3dadd( -8.06448, -102.115, -3.94499, 1.92 ) }
    dend_16 { pt3dadd( -8.10574, -102.999, -4.38311, 2.88 ) }
    dend_16 { pt3dadd( -8.13247, -103.559, -4.63463, 2.88 ) }
    dend_16 { pt3dadd( -8.1677, -104.276, -4.94232, 1.92 ) }
    dend_16 { pt3dadd( -8.23427, -105.299, -5.341, 0.36 ) }
    dend_16 { pt3dadd( -8.27817, -105.782, -5.4888, 0.36 ) }
    dend_16 { pt3dadd( -8.34064, -106.392, -5.62426, 1.08 ) }
    dend_16 { pt3dadd( -8.43217, -107.156, -5.78102, 1.2 ) }
    dend_16 { pt3dadd( -8.57643, -108.3, -5.97413, 0.48 ) }
    dend_16 { pt3dadd( -8.69797, -109.286, -6.11668, 0.48 ) }
    dend_16 { pt3dadd( -8.81255, -110.149, -6.21618, 0.48 ) }
    dend_16 { pt3dadd( -8.9981, -111.399, -6.3611, 1.92 ) }
    dend_16 { pt3dadd( -9.1461, -112.252, -6.45499, 2.4 ) }
    dend_16 { pt3dadd( -9.28474, -112.98, -6.5235, 2.64 ) }
    dend_16 { pt3dadd( -9.48974, -113.972, -6.5899, 2.64 ) }
    dend_16 { pt3dadd( -9.65396, -114.679, -6.65321, 2.04 ) }
    dend_16 { pt3dadd( -9.90474, -115.596, -6.7557, 0.72 ) }
    dend_16 { pt3dadd( -10.0418, -116.026, -6.79784, 0.72 ) }
    dend_16 { pt3dadd( -10.2337, -116.636, -6.81753, 0.72 ) }
    dend_16 { pt3dadd( -10.403, -117.229, -6.82741, 0.72 ) }
    dend_16 { pt3dadd( -10.593, -118.006, -6.8208, 0.24 ) }
    dend_16 { pt3dadd( -10.7309, -118.699, -6.73837, 0.12 ) }
    dend_16 { pt3dadd( -10.7792, -119.084, -6.65391, 0.12 ) }
    dend_16 { pt3dadd( -10.8145, -119.807, -6.44693, 0.12 ) }
    dend_16 { pt3dadd( -10.7695, -120.528, -6.20789, 1.2 ) }
    dend_16 { pt3dadd( -10.6751, -121.161, -5.99322, 2.28 ) }
    dend_16 { pt3dadd( -10.2976, -122.985, -5.39501, 1.8 ) }
    dend_16 { pt3dadd( -10.0579, -123.974, -5.10052, 0.36 ) }
    dend_16 { pt3dadd( -9.93797, -124.482, -4.99619, 0.36 ) }
    dend_16 { pt3dadd( -9.75396, -125.52, -4.88675, 0.36 ) }
    dend_16 { pt3dadd( -9.65581, -126.512, -4.88322, 0.36 ) }
    dend_16 { pt3dadd( -9.62766, -127.147, -4.97488, 0.36 ) }
    dend_16 { pt3dadd( -9.66149, -128.128, -5.26601, 0.36 ) }
    dend_16 { pt3dadd( -9.82898, -129.343, -5.67751, 1.56 ) }
    dend_16 { pt3dadd( -10.0175, -130.272, -5.99989, 2.4 ) }
    dend_16 { pt3dadd( -10.1447, -130.787, -6.17677, 2.4 ) }
    dend_16 { pt3dadd( -10.3519, -131.673, -6.45894, 2.4 ) }
    dend_16 { pt3dadd( -10.6067, -133.035, -6.82649, 0.48 ) }
    dend_16 { pt3dadd( -10.6836, -133.58, -6.93861, 0.48 ) }
    dend_16 { pt3dadd( -10.7406, -134.442, -7.04421, 0.6 ) }
    dend_16 { pt3dadd( -10.7355, -135.184, -7.11003, 0.36 ) }
    dend_16 { pt3dadd( -10.6939, -136.061, -7.17427, 0.36 ) }
    dend_16 { pt3dadd( -10.6362, -136.903, -7.21594, 0.48 ) }
    dend_16 { pt3dadd( -10.576, -137.517, -7.26316, 0.36 ) }
    dend_16 { pt3dadd( -10.497, -138.262, -7.3588, 0.36 ) }
    dend_16 { pt3dadd( -10.4403, -138.992, -7.49206, 0.36 ) }
    dend_16 { pt3dadd( -10.4361, -139.46, -7.61544, 0.48 ) }
    dend_16 { pt3dadd( -10.4801, -140.156, -7.86473, 0.48 ) }
    dend_16 { pt3dadd( -10.5935, -140.995, -8.18286, 0.36 ) }
    dend_16 { pt3dadd( -10.6928, -141.59, -8.40939, 0.84 ) }
    dend_16 { pt3dadd( -10.8743, -142.553, -8.73387, 1.32 ) }
    dend_16 { pt3dadd( -11.1319, -143.812, -9.10007, 2.16 ) }
    dend_16 { pt3dadd( -11.3516, -144.769, -9.35168, 2.64 ) }
    dend_16 { pt3dadd( -11.5955, -145.755, -9.5816, 2.28 ) }
    dend_16 { pt3dadd( -11.888, -146.859, -9.76335, 1.8 ) }
    dend_16 { pt3dadd( -12.1795, -147.998, -9.90487, 1.2 ) }
    dend_16 { pt3dadd( -12.3298, -148.652, -9.89377, 0.48 ) }
    dend_16 { pt3dadd( -12.5327, -149.739, -9.7601, 0.36 ) }
    dend_16 { pt3dadd( -12.6481, -150.48, -9.61312, 0.36 ) }
    dend_16 { pt3dadd( -12.7356, -151.236, -9.42426, 1.08 ) }
    dend_16 { pt3dadd( -12.781, -151.995, -9.18426, 1.08 ) }
    dend_16 { pt3dadd( -12.7601, -154.154, -8.45554, 1.44 ) }
    dend_16 { pt3dadd( -12.681, -155.372, -8.04702, 1.44 ) }
    dend_16 { pt3dadd( -12.5969, -156.216, -7.73321, 1.32 ) }
    dend_16 { pt3dadd( -12.5126, -157.038, -7.45959, 0.48 ) }
    dend_16 { pt3dadd( -12.4465, -157.718, -7.29104, 0.48 ) }
    dend_16 { pt3dadd( -12.4186, -158.132, -7.20896, 1.08 ) }
    dend_16 { pt3dadd( -12.386, -158.913, -7.11415, 1.68 ) }
    dend_16 { pt3dadd( -12.3835, -160.19, -6.91619, 2.28 ) }
    dend_16 { pt3dadd( -12.4306, -161.063, -6.80591, 2.4 ) }
    dend_16 { pt3dadd( -12.5514, -162.184, -6.72721, 1.32 ) }
    dend_16 { pt3dadd( -12.6803, -162.941, -6.70028, 0.6 ) }
    dend_16 { pt3dadd( -12.7914, -163.435, -6.73988, 0.48 ) }
    dend_16 { pt3dadd( -13.0288, -164.214, -6.94326, 0.48 ) }
    dend_16 { pt3dadd( -13.275, -164.907, -7.22995, 0.48 ) }
    dend_16 { pt3dadd( -13.5461, -165.677, -7.69632, 1.08 ) }
    dend_16 { pt3dadd( -13.7407, -166.339, -8.14196, 1.92 ) }
    dend_16 { pt3dadd( -14.0821, -167.75, -9.19228, 1.92 ) }
    dend_16 { pt3dadd( -14.3089, -168.908, -10.0891, 2.28 ) }
    dend_16 { pt3dadd( -14.4266, -169.674, -10.6862, 2.76 ) }
    dend_16 { pt3dadd( -14.6573, -171.535, -12.0741, 2.76 ) }
    dend_16 { pt3dadd( -14.8045, -172.972, -13.0428, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -14.8899, -174.079, -13.6921, 0.72 ) }
    dend_16 { pt3dadd( -14.9443, -174.94, -14.0886, 0.96 ) }
    dend_16 { pt3dadd( -15.0007, -175.658, -14.3503, 1.56 ) }
    dend_16 { pt3dadd( -15.1077, -176.521, -14.5927, 1.8 ) }
    dend_16 { pt3dadd( -15.2286, -177.289, -14.7068, 1.44 ) }
    dend_16 { pt3dadd( -15.3432, -178.182, -14.8105, 0.48 ) }
    dend_16 { pt3dadd( -15.3573, -178.536, -14.8374, 0.6 ) }
    dend_16 { pt3dadd( -15.3314, -179.484, -14.9015, 0.6 ) }
    dend_16 { pt3dadd( -15.3035, -179.928, -14.9205, 0.48 ) }
    dend_16 { pt3dadd( -15.2327, -180.952, -14.9468, 0.48 ) }
    dend_16 { pt3dadd( -15.1935, -181.751, -14.9572, 0.48 ) }
    dend_16 { pt3dadd( -15.1796, -182.738, -14.9292, 0.48 ) }
    dend_16 { pt3dadd( -15.2056, -183.716, -14.9043, 0.84 ) }
    dend_16 { pt3dadd( -15.3014, -184.984, -14.8716, 1.68 ) }
    dend_16 { pt3dadd( -15.4702, -186.36, -14.8342, 2.4 ) }
    dend_16 { pt3dadd( -15.6018, -187.256, -14.8071, 2.4 ) }
    dend_16 { pt3dadd( -15.7804, -188.507, -14.7811, 0.6 ) }
    dend_16 { pt3dadd( -15.8704, -189.374, -14.7663, 0.6 ) }
    dend_16 { pt3dadd( -15.8968, -190.504, -14.7848, 0.6 ) }
    dend_16 { pt3dadd( -15.8208, -191.506, -14.8241, 0.6 ) }
    dend_16 { pt3dadd( -15.6768, -192.33, -14.8482, 1.08 ) }
    dend_16 { pt3dadd( -15.4782, -193.139, -14.8596, 1.44 ) }
    dend_16 { pt3dadd( -15.2694, -193.856, -14.8608, 0.84 ) }
    dend_16 { pt3dadd( -15.0326, -194.653, -14.8269, 0.96 ) }
    dend_16 { pt3dadd( -14.7926, -195.567, -14.7711, 0.96 ) }
    dend_16 { pt3dadd( -14.6603, -196.246, -14.7252, 0.72 ) }
    dend_16 { pt3dadd( -14.5979, -196.755, -14.6913, 0.48 ) }
    dend_16 { pt3dadd( -14.5693, -197.213, -14.6594, 0.48 ) }
    dend_16 { pt3dadd( -14.576, -197.847, -14.6048, 1.32 ) }
    dend_16 { pt3dadd( -14.6603, -198.889, -14.4999, 1.8 ) }
    dend_16 { pt3dadd( -14.758, -199.65, -14.4644, 2.04 ) }
    dend_16 { pt3dadd( -14.9239, -200.674, -14.4698, 1.92 ) }
    dend_16 { pt3dadd( -15.06, -201.437, -14.5012, 1.44 ) }
    dend_16 { pt3dadd( -15.2364, -202.387, -14.5873, 0.48 ) }
    dend_16 { pt3dadd( -15.3928, -203.195, -14.7176, 0.48 ) }
    dend_16 { pt3dadd( -15.6369, -204.496, -15.0001, 1.44 ) }
    dend_16 { pt3dadd( -15.8416, -205.628, -15.2676, 2.52 ) }
    dend_16 { pt3dadd( -16.0057, -206.61, -15.5083, 3.25 ) }
    dend_16 { pt3dadd( -16.2, -208.015, -15.8628, 2.28 ) }
    dend_16 { pt3dadd( -16.2887, -208.992, -16.0979, 1.8 ) }
    dend_16 { pt3dadd( -16.3256, -210.093, -16.333, 0.96 ) }
    dend_16 { pt3dadd( -16.3161, -211.575, -16.5951, 0.96 ) }
    dend_16 { pt3dadd( -16.2743, -212.686, -16.7879, 0.96 ) }
    dend_16 { pt3dadd( -16.1977, -214.114, -17.0176, 2.52 ) }
    dend_16 { pt3dadd( -16.1286, -215.17, -17.1377, 2.52 ) }
    dend_16 { pt3dadd( -15.9984, -216.936, -17.2662, 1.44 ) }
    dend_16 { pt3dadd( -15.9281, -217.806, -17.3088, 0.96 ) }
    dend_16 { pt3dadd( -15.8389, -218.819, -17.357, 0.72 ) }
    dend_16 { pt3dadd( -15.799, -219.337, -17.3766, 0.72 ) }
    dend_16 { pt3dadd( -15.7522, -220.337, -17.4454, 0.72 ) }
    dend_16 { pt3dadd( -15.7584, -221.087, -17.5365, 0.72 ) }
    dend_16 { pt3dadd( -15.7865, -221.931, -17.7418, 1.08 ) }
    dend_16 { pt3dadd( -15.7847, -222.759, -18.1128, 1.44 ) }
    dend_16 { pt3dadd( -15.7691, -223.063, -18.29, 1.44 ) }
    dend_16 { pt3dadd( -15.6753, -224.318, -19.1639, 0.36 ) }
    dend_16 { pt3dadd( -15.5715, -225.382, -19.9874, 0.36 ) }
    dend_16 { pt3dadd( -15.4186, -226.637, -20.9671, 1.32 ) }
    dend_16 { pt3dadd( -15.2025, -228.08, -22.0465, 0.48 ) }
    dend_16 { pt3dadd( -15.0999, -228.674, -22.4542, 0.48 ) }
    dend_16 { pt3dadd( -14.8642, -229.906, -23.2244, 1.92 ) }
    dend_16 { pt3dadd( -14.7895, -230.288, -23.4298, 2.76 ) }
    dend_16 { pt3dadd( -14.632, -231.188, -23.8306, 2.4 ) }
    dend_16 { pt3dadd( -14.54, -232.042, -24.0538, 1.32 ) }
    dend_16 { pt3dadd( -14.5303, -232.535, -24.195, 0.12 ) }
    dend_16 { pt3dadd( -14.5642, -233.013, -24.3855, 0.12 ) }
    dend_16 { pt3dadd( -14.6088, -233.251, -24.5033, 0.12 ) }
    dend_16 { pt3dadd( -14.7865, -233.977, -24.944, 1.08 ) }
    dend_16 { pt3dadd( -14.9088, -234.472, -25.2949, 1.08 ) }
    dend_16 { pt3dadd( -15.3428, -236.564, -27.0156, 0.24 ) }
    dend_16 { pt3dadd( -15.3688, -236.86, -27.2688, 0.24 ) }
    dend_16 { pt3dadd( -15.3378, -237.417, -27.7239, 0.24 ) }
    dend_16 { pt3dadd( -15.173, -238.085, -28.1809, 0.24 ) }
    dend_16 { pt3dadd( -14.8511, -238.812, -28.5674, 0.24 ) }
    dend_16 { pt3dadd( -14.3556, -239.735, -29.0113, 1.08 ) }
    dend_16 { pt3dadd( -13.8905, -240.543, -29.3093, 2.04 ) }
    dend_16 { pt3dadd( -13.4875, -241.293, -29.5973, 2.04 ) }
    dend_16 { pt3dadd( -13.0251, -242.224, -29.9615, 1.44 ) }
    dend_16 { pt3dadd( -12.8477, -242.694, -30.127, 0.96 ) }
    dend_16 { pt3dadd( -12.3845, -244.455, -30.6454, 0.72 ) }
    dend_16 { pt3dadd( -12.2556, -245.18, -30.804, 0.36 ) }
    dend_16 { pt3dadd( -12.1981, -246.041, -30.974, 0.36 ) }
    dend_16 { pt3dadd( -12.2072, -246.426, -31.0224, 0.36 ) }
    dend_16 { pt3dadd( -12.2919, -247.368, -31.0439, 1.32 ) }
    dend_16 { pt3dadd( -12.3783, -248.158, -30.9907, 2.04 ) }
    dend_16 { pt3dadd( -12.4205, -248.539, -30.935, 2.4 ) }
    dend_16 { pt3dadd( -12.4886, -249.091, -30.8503, 2.4 ) }
    dend_16 { pt3dadd( -12.6666, -250.538, -30.6279, 0.48 ) }
    dend_16 { pt3dadd( -12.7571, -251.28, -30.5205, 0.36 ) }
    dend_16 { pt3dadd( -12.9083, -252.626, -30.3691, 0.36 ) }
    dend_16 { pt3dadd( -12.9883, -253.383, -30.292, 0.36 ) }
    dend_16 { pt3dadd( -13.0756, -254.216, -30.2193, 1.68 ) }
    dend_16 { pt3dadd( -13.1215, -254.836, -30.1768, 2.16 ) }
    dend_16 { pt3dadd( -13.1331, -255.234, -30.1621, 2.16 ) }
    dend_16 { pt3dadd( -13.1188, -256.28, -30.1184, 0.96 ) }
    dend_16 { pt3dadd( -13.082, -256.903, -30.118, 0.36 ) }
    dend_16 { pt3dadd( -13.0488, -257.277, -30.1571, 0.36 ) }
    dend_16 { pt3dadd( -12.9446, -258.199, -30.3598, 0.36 ) }
    dend_16 { pt3dadd( -12.8415, -259.102, -30.6231, 0.36 ) }
    dend_16 { pt3dadd( -12.7687, -259.733, -30.8152, 0.36 ) }
    dend_16 { pt3dadd( -12.6682, -260.733, -31.1172, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( -12.5844, -262.109, -31.5005, 2.4 ) }
    dend_16 { pt3dadd( -12.5675, -262.826, -31.6673, 2.52 ) }
    dend_16 { pt3dadd( -12.578, -263.169, -31.7297, 2.52 ) }
    dend_16 { pt3dadd( -12.6722, -264.402, -31.875, 0.48 ) }
    dend_16 { pt3dadd( -12.7396, -265.168, -31.9262, 0.36 ) }
    dend_16 { pt3dadd( -12.879, -266.53, -31.8713, 0.36 ) }
    dend_16 { pt3dadd( -12.9448, -267.143, -31.784, 1.32 ) }
    dend_16 { pt3dadd( -13.0355, -267.91, -31.646, 1.92 ) }
    dend_16 { pt3dadd( -13.1098, -268.564, -31.536, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.31149, 27.9225, 5.74237, 1.92 ) }
    dend_2 { pt3dadd( 7.37445, 31.2833, 5.68177, 1.92 ) }
    dend_2 { pt3dadd( 7.3726, 32.9068, 5.67279, 2.28 ) }
    dend_2 { pt3dadd( 7.36052, 34.3971, 5.71599, 1.8 ) }
    dend_2 { pt3dadd( 7.35304, 36.1427, 5.79456, 1.8 ) }
    dend_2 { pt3dadd( 7.36177, 38.5153, 5.92052, 1.68 ) }
    dend_2 { pt3dadd( 7.39932, 41.2804, 6.07868, 2.4 ) }
    dend_2 { pt3dadd( 7.44165, 43.3874, 6.33617, 2.88 ) }
    dend_2 { pt3dadd( 7.47728, 44.502, 6.45599, 2.76 ) }
    dend_2 { pt3dadd( 7.53343, 45.5203, 6.58431, 2.76 ) }
    dend_2 { pt3dadd( 7.60449, 46.29, 6.72347, 2.76 ) }
    dend_2 { pt3dadd( 7.73328, 47.1626, 6.92157, 2.52 ) }
    dend_2 { pt3dadd( 8.12448, 49.0163, 7.39354, 1.68 ) }
    dend_2 { pt3dadd( 8.37909, 50.0945, 7.68181, 1.44 ) }
    dend_2 { pt3dadd( 8.67738, 51.3172, 7.99933, 1.68 ) }
    dend_2 { pt3dadd( 9.22662, 53.5434, 8.62308, 2.64 ) }
    dend_2 { pt3dadd( 9.56719, 54.8996, 9.02582, 2.88 ) }
    dend_2 { pt3dadd( 9.77113, 55.6678, 9.26444, 3.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 27/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.31149, 27.9225, 5.74237, 0.84 ) }
    dend_1 { pt3dadd( 6.69559, 27.714, 5.88983, 0.84 ) }
    dend_1 { pt3dadd( 5.71605, 27.5991, 6.11576, 0.84 ) }
    dend_1 { pt3dadd( 5.04453, 27.7027, 6.35601, 0.84 ) }
    dend_1 { pt3dadd( 4.84841, 27.7891, 6.46727, 0.84 ) }
    dend_1 { pt3dadd( 4.39348, 28.1706, 6.81526, 0.72 ) }
    dend_1 { pt3dadd( 4.07846, 28.6275, 7.29466, 0.72 ) }
    dend_1 { pt3dadd( 3.96269, 28.9442, 7.66939, 0.72 ) }
    dend_1 { pt3dadd( 3.9526, 29.5383, 8.38478, 0.96 ) }
    dend_1 { pt3dadd( 4.0811, 29.9838, 8.96614, 1.44 ) }
    dend_1 { pt3dadd( 4.3251, 30.4499, 9.58021, 1.56 ) }
    dend_1 { pt3dadd( 4.93134, 31.2505, 10.6937, 1.32 ) }
    dend_1 { pt3dadd( 5.39497, 31.7295, 11.4036, 0.48 ) }
    dend_1 { pt3dadd( 5.82135, 32.0929, 11.9367, 0.6 ) }
    dend_1 { pt3dadd( 6.70346, 32.6979, 12.8314, 0.6 ) }
    dend_1 { pt3dadd( 7.26235, 32.9988, 13.2575, 1.68 ) }
    dend_1 { pt3dadd( 8.2968, 33.3777, 13.7018, 1.92 ) }
    dend_1 { pt3dadd( 9.11169, 33.5602, 13.6178, 1.56 ) }
    dend_1 { pt3dadd( 11.5189, 33.609, 11.9004, 0.48 ) }
    dend_1 { pt3dadd( 11.9856, 33.5521, 11.3235, 0.48 ) }
    dend_1 { pt3dadd( 12.3481, 33.4866, 10.7921, 0.84 ) }
    dend_1 { pt3dadd( 12.5414, 33.4214, 10.41, 0.72 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.461493 ) }
    axon_1 { pt3dadd( -6.31129, -57.5385, -0.718029, 0.461493 ) }
    axon_1 { pt3dadd( -8.0582, -72.4364, -0.718029, 0.461493 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -0.0730332, 26.4539, -18.9382, 0.96 ) }
    dend_54 { pt3dadd( 0.986722, 28.6373, -19.594, 0.96 ) }
    dend_54 { pt3dadd( 1.51494, 29.9135, -19.8858, 0.6 ) }
    dend_54 { pt3dadd( 1.94533, 31.1651, -20.1249, 0.6 ) }
    dend_54 { pt3dadd( 2.13703, 31.8518, -20.2401, 1.32 ) }
    dend_54 { pt3dadd( 2.26974, 32.4744, -20.312, 1.56 ) }
    dend_54 { pt3dadd( 2.44286, 33.689, -20.3974, 0.96 ) }
    dend_54 { pt3dadd( 2.45406, 35.183, -20.3197, 0.6 ) }
    dend_54 { pt3dadd( 2.39963, 35.8903, -20.2556, 0.48 ) }
    dend_54 { pt3dadd( 2.32567, 36.5061, -20.1969, 0.48 ) }
    dend_54 { pt3dadd( 2.17022, 37.7608, -20.0871, 0.72 ) }
    dend_54 { pt3dadd( 2.00325, 39.2704, -19.999, 1.8 ) }
    dend_54 { pt3dadd( 1.89835, 40.6493, -19.9621, 2.04 ) }
    dend_54 { pt3dadd( 1.87372, 41.7691, -19.9637, 2.64 ) }
    dend_54 { pt3dadd( 1.91449, 43.0218, -20.0378, 3.25 ) }
    dend_54 { pt3dadd( 1.99938, 44.1523, -20.1616, 3.25 ) }
    dend_54 { pt3dadd( 2.13042, 45.2929, -20.3442, 2.88 ) }
    dend_54 { pt3dadd( 2.35358, 46.8001, -20.6097, 0.84 ) }
    dend_54 { pt3dadd( 2.45156, 47.4138, -20.716, 0.6 ) }
    dend_54 { pt3dadd( 2.68251, 48.9868, -20.9691, 2.4 ) }
    dend_54 { pt3dadd( 2.8218, 50.0954, -21.1276, 3.25 ) }
    dend_54 { pt3dadd( 2.93463, 51.1481, -21.2469, 2.88 ) }
    dend_54 { pt3dadd( 3.1044, 52.8932, -21.3964, 0.96 ) }
    dend_54 { pt3dadd( 3.2856, 54.7485, -21.5631, 0.84 ) }
    dend_54 { pt3dadd( 3.39905, 55.8909, -21.6734, 0.48 ) }
    dend_54 { pt3dadd( 3.48047, 56.6696, -21.7449, 0.48 ) }
    dend_54 { pt3dadd( 3.635, 58.1742, -21.904, 0.48 ) }
    dend_54 { pt3dadd( 3.75243, 59.3536, -22.051, 1.92 ) }
    dend_54 { pt3dadd( 3.91373, 60.7589, -22.2697, 3.37 ) }
    dend_54 { pt3dadd( 4.05369, 61.6787, -22.4477, 3.49 ) }
    dend_54 { pt3dadd( 4.27863, 62.7758, -22.6928, 3.0 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 83/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -0.0730332, 26.4539, -18.9382, 0.84 ) }
    dend_49 { pt3dadd( -1.90552, 27.4774, -19.2577, 0.84 ) }
    dend_49 { pt3dadd( -2.34199, 27.8676, -19.4348, 0.72 ) }
    dend_49 { pt3dadd( -2.62331, 28.2313, -19.6116, 0.72 ) }
    dend_49 { pt3dadd( -2.86261, 28.7235, -19.8997, 0.72 ) }
    dend_49 { pt3dadd( -3.20189, 29.6346, -20.6119, 0.84 ) }
    dend_49 { pt3dadd( -3.59398, 30.7411, -21.5761, 0.72 ) }
    dend_49 { pt3dadd( -3.76599, 31.5358, -22.3202, 0.48 ) }
    dend_49 { pt3dadd( -3.90714, 32.2843, -23.0401, 0.48 ) }
    dend_49 { pt3dadd( -4.15296, 33.5901, -24.309, 0.72 ) }
    dend_49 { pt3dadd( -4.46549, 34.9455, -25.6377, 0.48 ) }
    dend_49 { pt3dadd( -4.5765, 35.2802, -25.9995, 0.48 ) }
    dend_49 { pt3dadd( -4.70867, 35.5637, -26.2991, 0.48 ) }
    dend_49 { pt3dadd( -5.00503, 36.068, -26.8205, 1.32 ) }
    dend_49 { pt3dadd( -5.34508, 36.5553, -27.3276, 2.04 ) }
    dend_49 { pt3dadd( -5.85547, 37.2184, -27.9658, 1.56 ) }
    dend_49 { pt3dadd( -6.92125, 38.671, -29.2792, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -7.166, 39.0164, -29.6114, 0.36 ) }
    dend_49 { pt3dadd( -8.08362, 40.3213, -30.9768, 2.4 ) }
    dend_49 { pt3dadd( -8.46039, 40.8668, -31.6088, 3.25 ) }
    dend_49 { pt3dadd( -8.69288, 41.2126, -32.0451, 3.73 ) }
    // Section: dend_41, id: dend_41, parent: dend_27 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 14.1093, -16.5089, -21.5392, 0.24 ) }
    dend_41 { pt3dadd( 13.6139, -18.2842, -21.9243, 0.24 ) }
    dend_41 { pt3dadd( 13.4719, -18.914, -22.0851, 0.24 ) }
    dend_41 { pt3dadd( 13.2715, -20.1015, -22.3764, 1.92 ) }
    dend_41 { pt3dadd( 13.1062, -21.0449, -22.5886, 2.52 ) }
    dend_41 { pt3dadd( 12.9545, -21.8079, -22.7467, 2.4 ) }
    dend_41 { pt3dadd( 12.7845, -22.5935, -22.9009, 1.8 ) }
    dend_41 { pt3dadd( 12.5826, -23.6193, -23.0929, 0.24 ) }
    dend_41 { pt3dadd( 12.3204, -24.832, -23.2739, 0.24 ) }
    dend_41 { pt3dadd( 12.0392, -26.0412, -23.3992, 0.24 ) }
    dend_41 { pt3dadd( 11.8295, -26.8751, -23.4549, 0.24 ) }
    dend_41 { pt3dadd( 11.6196, -27.6423, -23.5131, 1.68 ) }
    dend_41 { pt3dadd( 11.258, -28.8577, -23.6023, 1.92 ) }
    dend_41 { pt3dadd( 10.8262, -30.2053, -23.7123, 2.28 ) }
    dend_41 { pt3dadd( 10.4666, -31.2541, -23.817, 3.12 ) }
    dend_41 { pt3dadd( 10.0831, -32.3255, -23.9359, 3.12 ) }
    dend_41 { pt3dadd( 9.35095, -34.2325, -24.1279, 0.24 ) }
    dend_41 { pt3dadd( 9.04151, -34.9611, -24.1883, 0.24 ) }
    dend_41 { pt3dadd( 8.96499, -35.1197, -24.199, 0.48 ) }
    dend_41 { pt3dadd( 8.62452, -35.7359, -24.2211, 0.48 ) }
    dend_41 { pt3dadd( 8.11698, -36.5551, -24.2058, 0.48 ) }
    dend_41 { pt3dadd( 7.77951, -37.1104, -24.1482, 0.48 ) }
    dend_41 { pt3dadd( 7.6307, -37.3974, -24.0784, 0.12 ) }
    dend_41 { pt3dadd( 7.41834, -38.0114, -23.9421, 0.12 ) }
    dend_41 { pt3dadd( 7.3343, -38.349, -23.8731, 0.12 ) }
    dend_41 { pt3dadd( 7.25581, -38.8434, -23.7867, 0.72 ) }
    dend_41 { pt3dadd( 7.15368, -39.8331, -23.6522, 0.96 ) }
    dend_41 { pt3dadd( 7.09727, -40.4584, -23.6063, 0.24 ) }
    dend_41 { pt3dadd( 6.98411, -41.6908, -23.5603, 0.24 ) }
    dend_41 { pt3dadd( 6.93567, -42.2272, -23.5276, 0.96 ) }
    dend_41 { pt3dadd( 6.87536, -42.8459, -23.4816, 1.44 ) }
    dend_41 { pt3dadd( 6.7846, -43.6038, -23.4216, 1.56 ) }
    dend_41 { pt3dadd( 6.62694, -44.6377, -23.3411, 0.48 ) }
    dend_41 { pt3dadd( 6.51287, -45.3101, -23.2933, 0.24 ) }
    dend_41 { pt3dadd( 6.29872, -46.5472, -23.1989, 1.68 ) }
    dend_41 { pt3dadd( 6.1725, -47.4178, -23.15, 2.88 ) }
    dend_41 { pt3dadd( 6.0232, -48.6795, -23.0635, 2.88 ) }
    dend_41 { pt3dadd( 5.88243, -50.3404, -22.9408, 0.24 ) }
    dend_41 { pt3dadd( 5.81751, -51.7234, -22.8253, 0.24 ) }
    dend_41 { pt3dadd( 5.81018, -52.2412, -22.7858, 0.24 ) }
    dend_41 { pt3dadd( 5.83588, -53.8418, -22.705, 0.24 ) }
    dend_41 { pt3dadd( 5.88541, -54.8584, -22.6545, 1.8 ) }
    dend_41 { pt3dadd( 5.98115, -55.972, -22.5905, 2.76 ) }
    dend_41 { pt3dadd( 6.1584, -57.4926, -22.4953, 0.48 ) }
    dend_41 { pt3dadd( 6.25627, -58.356, -22.4391, 0.48 ) }
    dend_41 { pt3dadd( 6.31, -59.0334, -22.3959, 0.6 ) }
    dend_41 { pt3dadd( 6.3394, -59.7891, -22.3282, 0.6 ) }
    dend_41 { pt3dadd( 6.33871, -60.3757, -22.289, 0.36 ) }
    dend_41 { pt3dadd( 6.31607, -61.0036, -22.2455, 0.36 ) }
    dend_41 { pt3dadd( 6.21071, -62.0265, -22.2396, 0.48 ) }
    dend_41 { pt3dadd( 6.01754, -63.3825, -22.2811, 0.48 ) }
    dend_41 { pt3dadd( 5.85525, -64.2948, -22.3326, 1.44 ) }
    dend_41 { pt3dadd( 5.63405, -65.4517, -22.4674, 2.76 ) }
    dend_41 { pt3dadd( 5.46567, -66.4183, -22.6306, 3.0 ) }
    dend_41 { pt3dadd( 5.1627, -68.4306, -23.1375, 0.12 ) }
    dend_41 { pt3dadd( 5.08246, -69.0227, -23.326, 0.12 ) }
    dend_41 { pt3dadd( 4.97207, -69.861, -23.6373, 0.12 ) }
    dend_41 { pt3dadd( 4.85573, -70.8225, -24.0232, 1.32 ) }
    dend_41 { pt3dadd( 4.75234, -71.7483, -24.3856, 2.4 ) }
    dend_41 { pt3dadd( 4.51919, -73.5875, -25.0519, 0.12 ) }
    dend_41 { pt3dadd( 4.39248, -74.4839, -25.3233, 0.12 ) }
    dend_41 { pt3dadd( 4.29258, -75.0166, -25.4669, 0.84 ) }
    dend_41 { pt3dadd( 4.15667, -75.6029, -25.6004, 0.96 ) }
    dend_41 { pt3dadd( 3.79926, -76.9794, -25.8235, 0.12 ) }
    dend_41 { pt3dadd( 3.5212, -78.0056, -25.9514, 0.12 ) }
    dend_41 { pt3dadd( 3.32008, -78.8121, -26.009, 1.32 ) }
    dend_41 { pt3dadd( 3.15074, -79.5768, -26.0598, 1.8 ) }
    dend_41 { pt3dadd( 2.94825, -80.6081, -26.1136, 0.12 ) }
    dend_41 { pt3dadd( 2.69286, -81.9622, -26.1596, 0.12 ) }
    dend_41 { pt3dadd( 2.56908, -82.6962, -26.1697, 1.56 ) }
    dend_41 { pt3dadd( 2.45969, -83.5692, -26.1757, 2.52 ) }
    dend_41 { pt3dadd( 2.38732, -84.3319, -26.1747, 2.64 ) }
    dend_41 { pt3dadd( 2.2745, -85.9657, -26.1574, 1.32 ) }
    dend_41 { pt3dadd( 2.22573, -86.7032, -26.141, 0.12 ) }
    dend_41 { pt3dadd( 2.21529, -86.8392, -26.1379, 0.24 ) }
    dend_41 { pt3dadd( 2.12999, -87.7946, -26.133, 0.24 ) }
    dend_41 { pt3dadd( 2.02651, -88.9127, -26.145, 0.24 ) }
    dend_41 { pt3dadd( 1.95364, -89.6619, -26.2096, 0.24 ) }
    dend_41 { pt3dadd( 1.90325, -90.18, -26.2876, 0.24 ) }
    dend_41 { pt3dadd( 1.85228, -90.6871, -26.3822, 1.56 ) }
    dend_41 { pt3dadd( 1.756, -91.4811, -26.5441, 2.28 ) }
    dend_41 { pt3dadd( 1.65298, -92.2105, -26.7178, 2.28 ) }
    dend_41 { pt3dadd( 1.42049, -93.8527, -27.1468, 0.48 ) }
    dend_41 { pt3dadd( 1.28053, -94.8033, -27.3986, 0.48 ) }
    dend_41 { pt3dadd( 1.26255, -94.9238, -27.4287, 0.72 ) }
    dend_41 { pt3dadd( 1.12259, -95.7677, -27.623, 0.96 ) }
    dend_41 { pt3dadd( 0.992292, -96.4762, -27.7545, 0.48 ) }
    dend_41 { pt3dadd( 0.907433, -96.8473, -27.8236, 0.48 ) }
    dend_41 { pt3dadd( 0.753934, -97.4518, -27.8942, 0.48 ) }
    dend_41 { pt3dadd( 0.542159, -98.2529, -27.9763, 0.6 ) }
    dend_41 { pt3dadd( 0.47334, -98.5242, -27.9992, 0.24 ) }
    dend_41 { pt3dadd( 0.280133, -99.3786, -28.0616, 0.24 ) }
    dend_41 { pt3dadd( 0.0510877, -100.625, -28.1272, 1.56 ) }
    dend_41 { pt3dadd( -0.103732, -101.627, -28.1796, 2.4 ) }
    dend_41 { pt3dadd( -0.220781, -102.525, -28.2242, 2.52 ) }
    dend_41 { pt3dadd( -0.27778, -103.025, -28.2458, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( -0.452257, -104.653, -28.2766, 0.24 ) }
    dend_41 { pt3dadd( -0.613115, -106.644, -28.2629, 0.24 ) }
    dend_41 { pt3dadd( -0.640349, -107.168, -28.2482, 0.96 ) }
    dend_41 { pt3dadd( -0.66153, -107.924, -28.2333, 1.44 ) }
    dend_41 { pt3dadd( -0.658802, -108.433, -28.2174, 1.68 ) }
    dend_41 { pt3dadd( -0.620223, -109.534, -28.1932, 0.24 ) }
    dend_41 { pt3dadd( -0.470871, -111.434, -28.1616, 0.24 ) }
    dend_41 { pt3dadd( -0.353958, -112.435, -28.1604, 1.56 ) }
    dend_41 { pt3dadd( -0.269558, -113.06, -28.1726, 2.16 ) }
    dend_41 { pt3dadd( -0.172139, -113.734, -28.2039, 1.8 ) }
    dend_41 { pt3dadd( -0.0398079, -114.892, -28.2959, 0.12 ) }
    dend_41 { pt3dadd( 0.00244794, -115.554, -28.379, 0.12 ) }
    dend_41 { pt3dadd( -0.00371066, -115.678, -28.3958, 0.6 ) }
    dend_41 { pt3dadd( -0.0787242, -116.198, -28.4603, 0.12 ) }
    dend_41 { pt3dadd( -0.163175, -116.584, -28.4998, 0.12 ) }
    dend_41 { pt3dadd( -0.412169, -117.524, -28.5667, 0.12 ) }
    dend_41 { pt3dadd( -0.527719, -117.961, -28.5766, 0.6 ) }
    dend_41 { pt3dadd( -0.697401, -118.697, -28.5188, 0.6 ) }
    dend_41 { pt3dadd( -0.791653, -119.19, -28.4419, 0.12 ) }
    dend_41 { pt3dadd( -0.891467, -119.787, -28.3169, 0.12 ) }
    dend_41 { pt3dadd( -0.979063, -120.283, -28.2019, 0.6 ) }
    dend_41 { pt3dadd( -1.09071, -121.007, -28.024, 0.6 ) }
    dend_41 { pt3dadd( -1.28332, -122.382, -27.6845, 0.12 ) }
    dend_41 { pt3dadd( -1.39857, -123.296, -27.4659, 0.12 ) }
    dend_41 { pt3dadd( -1.50333, -124.215, -27.2636, 1.44 ) }
    dend_41 { pt3dadd( -1.60083, -125.167, -27.0828, 2.4 ) }
    dend_41 { pt3dadd( -1.64105, -125.614, -27.0158, 2.52 ) }
    dend_41 { pt3dadd( -1.69745, -126.334, -26.9491, 2.16 ) }
    dend_41 { pt3dadd( -1.70285, -127.218, -26.9368, 0.12 ) }
    dend_41 { pt3dadd( -1.65483, -127.97, -26.8893, 0.36 ) }
    dend_41 { pt3dadd( -1.59985, -128.457, -26.8381, 0.12 ) }
    dend_41 { pt3dadd( -1.54873, -128.827, -26.7854, 0.12 ) }
    dend_41 { pt3dadd( -1.46813, -129.369, -26.7067, 0.12 ) }
    dend_41 { pt3dadd( -1.31278, -130.328, -26.5655, 0.12 ) }
    dend_41 { pt3dadd( -1.11408, -131.433, -26.4133, 0.12 ) }
    dend_41 { pt3dadd( -1.07837, -131.681, -26.3875, 0.12 ) }
    dend_41 { pt3dadd( -1.02035, -132.436, -26.3367, 0.12 ) }
    dend_41 { pt3dadd( -1.00779, -133.316, -26.3406, 1.8 ) }
    dend_41 { pt3dadd( -1.01651, -133.693, -26.3647, 2.28 ) }
    dend_41 { pt3dadd( -1.06964, -134.447, -26.3905, 1.92 ) }
    dend_41 { pt3dadd( -1.15766, -135.683, -26.374, 0.36 ) }
    dend_41 { pt3dadd( -1.23239, -136.629, -26.3211, 0.36 ) }
    dend_41 { pt3dadd( -1.29502, -137.5, -26.2426, 1.2 ) }
    dend_41 { pt3dadd( -1.32666, -138.27, -26.0919, 0.72 ) }
    dend_41 { pt3dadd( -1.29197, -139.841, -25.7976, 0.12 ) }
    dend_41 { pt3dadd( -1.2152, -141.258, -25.5415, 0.12 ) }
    dend_41 { pt3dadd( -1.14003, -142.186, -25.3824, 1.68 ) }
    dend_41 { pt3dadd( -1.08424, -142.907, -25.2604, 1.8 ) }
    dend_41 { pt3dadd( -0.960663, -144.823, -24.9147, 1.44 ) }
    dend_41 { pt3dadd( -0.865802, -146.758, -24.6465, 0.24 ) }
    dend_41 { pt3dadd( -0.759326, -148.616, -24.4197, 0.12 ) }
    dend_41 { pt3dadd( -0.707976, -149.476, -24.2937, 0.12 ) }
    dend_41 { pt3dadd( -0.640368, -150.954, -24.0335, 0.12 ) }
    dend_41 { pt3dadd( -0.619403, -151.674, -23.9156, 1.2 ) }
    dend_41 { pt3dadd( -0.587337, -152.662, -23.7823, 2.52 ) }
    dend_41 { pt3dadd( -0.509219, -154.201, -23.4152, 0.48 ) }
    dend_41 { pt3dadd( -0.472159, -154.554, -23.3265, 0.48 ) }
    dend_41 { pt3dadd( -0.349382, -155.425, -23.1075, 0.48 ) }
    dend_41 { pt3dadd( -0.182938, -156.372, -22.8917, 0.72 ) }
    dend_41 { pt3dadd( 0.0385509, -157.6, -22.6325, 0.24 ) }
    dend_41 { pt3dadd( 0.261308, -158.896, -22.2805, 0.12 ) }
    dend_41 { pt3dadd( 0.457221, -159.867, -22.024, 0.12 ) }
    dend_41 { pt3dadd( 0.593313, -160.396, -21.8987, 1.08 ) }
    dend_41 { pt3dadd( 0.773643, -160.977, -21.7453, 1.32 ) }
    dend_41 { pt3dadd( 0.943051, -161.45, -21.6283, 1.08 ) }
    dend_41 { pt3dadd( 1.4066, -162.68, -21.3569, 0.36 ) }
    dend_41 { pt3dadd( 2.12005, -164.525, -21.0684, 0.36 ) }
    dend_41 { pt3dadd( 2.60914, -165.765, -20.8669, 1.56 ) }
    dend_41 { pt3dadd( 3.03228, -166.848, -20.6983, 2.16 ) }
    dend_41 { pt3dadd( 3.40761, -167.711, -20.5807, 1.68 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 14.1093, -16.5089, -21.5392, 0.36 ) }
    dend_28 { pt3dadd( 15.7922, -17.7579, -21.9831, 0.36 ) }
    dend_28 { pt3dadd( 16.3366, -17.935, -22.2878, 0.36 ) }
    dend_28 { pt3dadd( 16.6263, -17.9464, -22.5176, 0.36 ) }
    dend_28 { pt3dadd( 16.8884, -17.9375, -22.7332, 0.36 ) }
    dend_28 { pt3dadd( 17.5242, -17.9181, -23.2413, 0.72 ) }
    dend_28 { pt3dadd( 18.5024, -17.9246, -24.0058, 0.96 ) }
    dend_28 { pt3dadd( 19.1146, -17.8617, -24.5436, 0.96 ) }
    dend_28 { pt3dadd( 19.978, -17.7964, -25.3048, 0.48 ) }
    dend_28 { pt3dadd( 20.7829, -17.8072, -25.9909, 0.36 ) }
    dend_28 { pt3dadd( 21.2017, -17.9097, -26.3195, 0.36 ) }
    dend_28 { pt3dadd( 21.554, -18.1934, -26.5149, 0.36 ) }
    dend_28 { pt3dadd( 21.6751, -18.397, -26.5397, 0.36 ) }
    dend_28 { pt3dadd( 22.003, -19.0973, -26.5508, 0.36 ) }
    dend_28 { pt3dadd( 22.3144, -19.7548, -26.5249, 1.56 ) }
    dend_28 { pt3dadd( 22.7365, -20.5451, -26.4825, 2.52 ) }
    dend_28 { pt3dadd( 23.1771, -21.2412, -26.4881, 2.4 ) }
    dend_28 { pt3dadd( 24.1359, -22.4591, -26.5713, 0.36 ) }
    dend_28 { pt3dadd( 24.4958, -22.8325, -26.6279, 0.36 ) }
    dend_28 { pt3dadd( 25.2446, -23.4931, -26.7788, 0.36 ) }
    dend_28 { pt3dadd( 25.9663, -24.0512, -26.957, 0.36 ) }
    dend_28 { pt3dadd( 26.9694, -24.758, -27.2183, 1.44 ) }
    dend_28 { pt3dadd( 28.0388, -25.4538, -27.5147, 3.25 ) }
    dend_28 { pt3dadd( 29.2363, -26.1798, -27.8697, 4.69 ) }
    dend_28 { pt3dadd( 29.4579, -26.3202, -27.9406, 4.93 ) }
    dend_28 { pt3dadd( 30.7665, -27.2531, -28.4019, 3.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 96/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -13.1098, -268.564, -31.536, 0.12 ) }
    dend_24 { pt3dadd( -13.5667, -269.732, -32.593, 0.12 ) }
    dend_24 { pt3dadd( -13.7499, -270.262, -33.0734, 0.12 ) }
    dend_24 { pt3dadd( -13.8075, -270.414, -33.2559, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -13.8949, -270.585, -33.4627, 0.36 ) }
    dend_24 { pt3dadd( -14.4383, -271.523, -34.552, 0.12 ) }
    dend_24 { pt3dadd( -14.6105, -271.799, -34.9152, 0.12 ) }
    dend_24 { pt3dadd( -14.6105, -271.799, -34.9152, 0.36 ) }
    dend_24 { pt3dadd( -15.2322, -272.799, -36.3112, 0.36 ) }
    dend_24 { pt3dadd( -15.6065, -273.449, -37.1815, 2.52 ) }
    dend_24 { pt3dadd( -15.7385, -273.707, -37.5017, 2.88 ) }
    dend_24 { pt3dadd( -16.8717, -276.029, -40.1122, 0.24 ) }
    dend_24 { pt3dadd( -17.0219, -276.357, -40.4521, 0.12 ) }
    dend_24 { pt3dadd( -17.1425, -276.673, -40.7382, 0.12 ) }
    dend_24 { pt3dadd( -17.2524, -277.094, -41.0326, 0.48 ) }
    dend_24 { pt3dadd( -17.3247, -277.559, -41.3104, 0.48 ) }
    dend_24 { pt3dadd( -17.3814, -278.039, -41.5408, 0.12 ) }
    dend_24 { pt3dadd( -17.4365, -278.897, -41.7337, 0.12 ) }
    dend_24 { pt3dadd( -17.4644, -279.403, -41.8957, 0.12 ) }
    dend_24 { pt3dadd( -17.4934, -279.982, -42.1048, 0.84 ) }
    dend_24 { pt3dadd( -17.5253, -280.356, -42.2292, 0.84 ) }
    dend_24 { pt3dadd( -17.6403, -281.772, -42.6622, 0.12 ) }
    dend_24 { pt3dadd( -17.6796, -282.39, -42.8265, 0.12 ) }
    dend_24 { pt3dadd( -17.8273, -283.988, -43.2069, 2.64 ) }
    dend_24 { pt3dadd( -17.9001, -284.49, -43.3113, 2.28 ) }
    dend_24 { pt3dadd( -18.1826, -285.88, -43.4406, 0.12 ) }
    dend_24 { pt3dadd( -18.3154, -286.369, -43.4156, 0.12 ) }
    dend_24 { pt3dadd( -18.6632, -287.279, -43.2038, 0.12 ) }
    dend_24 { pt3dadd( -19.0194, -287.902, -42.9723, 1.2 ) }
    dend_24 { pt3dadd( -19.0876, -287.992, -42.9226, 1.44 ) }
    dend_24 { pt3dadd( -20.1522, -289.169, -42.133, 0.12 ) }
    dend_24 { pt3dadd( -20.5046, -289.477, -41.8537, 0.12 ) }
    dend_24 { pt3dadd( -20.8449, -289.712, -41.5731, 0.12 ) }
    dend_24 { pt3dadd( -21.313, -289.959, -41.1416, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.1098, -268.564, -31.536, 0.6 ) }
    dend_17 { pt3dadd( -12.7422, -269.587, -32.9394, 0.6 ) }
    dend_17 { pt3dadd( -12.7096, -269.714, -33.1323, 0.6 ) }
    dend_17 { pt3dadd( -12.5885, -270.26, -33.955, 1.32 ) }
    dend_17 { pt3dadd( -12.4711, -270.857, -34.8101, 2.28 ) }
    dend_17 { pt3dadd( -12.339, -271.528, -35.7714, 2.04 ) }
    dend_17 { pt3dadd( -11.9049, -273.735, -38.9315, 0.96 ) }
    dend_17 { pt3dadd( -11.8231, -274.258, -39.7674, 0.48 ) }
    dend_17 { pt3dadd( -11.7874, -274.529, -40.2272, 0.48 ) }
    dend_17 { pt3dadd( -11.7677, -274.818, -40.7601, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 9.77113, 55.6678, 9.26444, 1.2 ) }
    dend_8 { pt3dadd( 9.91167, 57.2198, 8.9728, 1.2 ) }
    dend_8 { pt3dadd( 10.0257, 58.6778, 8.83484, 1.32 ) }
    dend_8 { pt3dadd( 10.0911, 59.5452, 8.78786, 1.44 ) }
    dend_8 { pt3dadd( 10.1814, 60.6585, 8.76699, 0.96 ) }
    dend_8 { pt3dadd( 10.3372, 62.1564, 8.76494, 1.08 ) }
    dend_8 { pt3dadd( 10.6055, 64.1689, 8.78313, 1.56 ) }
    dend_8 { pt3dadd( 10.9544, 65.9005, 8.88408, 0.96 ) }
    dend_8 { pt3dadd( 11.2155, 66.8632, 8.97492, 0.6 ) }
    dend_8 { pt3dadd( 11.5284, 67.7784, 9.08154, 1.2 ) }
    dend_8 { pt3dadd( 11.8769, 68.635, 9.19754, 2.04 ) }
    dend_8 { pt3dadd( 12.1798, 69.2997, 9.29355, 2.16 ) }
    dend_8 { pt3dadd( 12.8063, 70.64, 9.50478, 1.2 ) }
    dend_8 { pt3dadd( 13.2266, 71.6091, 9.6474, 0.84 ) }
    dend_8 { pt3dadd( 13.5949, 72.6381, 9.74199, 0.48 ) }
    dend_8 { pt3dadd( 13.7945, 73.3639, 9.77219, 0.48 ) }
    dend_8 { pt3dadd( 14.09, 75.0055, 9.75443, 0.48 ) }
    dend_8 { pt3dadd( 14.221, 76.2171, 9.68918, 0.84 ) }
    dend_8 { pt3dadd( 14.3016, 77.5865, 9.55966, 1.92 ) }
    dend_8 { pt3dadd( 14.39, 79.3058, 9.33577, 2.52 ) }
    dend_8 { pt3dadd( 14.447, 80.183, 9.19834, 2.28 ) }
    dend_8 { pt3dadd( 14.5885, 81.6262, 8.98595, 0.6 ) }
    dend_8 { pt3dadd( 14.6596, 82.121, 8.92803, 0.6 ) }
    dend_8 { pt3dadd( 14.7768, 82.8341, 8.87665, 0.48 ) }
    dend_8 { pt3dadd( 14.9837, 84.0461, 8.86146, 0.48 ) }
    dend_8 { pt3dadd( 15.1475, 84.962, 8.91545, 0.96 ) }
    dend_8 { pt3dadd( 15.3012, 85.7789, 8.98446, 1.8 ) }
    dend_8 { pt3dadd( 15.5338, 86.936, 9.12694, 2.04 ) }
    dend_8 { pt3dadd( 15.7635, 88.1575, 9.28294, 2.04 ) }
    dend_8 { pt3dadd( 16.0312, 89.9205, 9.51098, 2.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 9.77113, 55.6678, 9.26444, 1.32 ) }
    dend_3 { pt3dadd( 10.9576, 57.3499, 9.62662, 1.32 ) }
    dend_3 { pt3dadd( 11.4835, 58.0728, 9.68431, 0.96 ) }
    dend_3 { pt3dadd( 12.4216, 59.2458, 9.68031, 1.32 ) }
    dend_3 { pt3dadd( 13.0184, 59.8753, 9.61446, 1.68 ) }
    dend_3 { pt3dadd( 13.801, 60.5789, 9.49529, 1.2 ) }
    dend_3 { pt3dadd( 14.7688, 61.3569, 9.32495, 0.84 ) }
    dend_3 { pt3dadd( 15.8306, 62.0961, 9.05768, 0.72 ) }
    dend_3 { pt3dadd( 16.4402, 62.4898, 8.9141, 0.84 ) }
    dend_3 { pt3dadd( 17.5051, 63.0307, 8.64094, 0.6 ) }
    dend_3 { pt3dadd( 18.197, 63.3044, 8.46714, 0.6 ) }
    dend_3 { pt3dadd( 18.7697, 63.4565, 8.34101, 1.32 ) }
    dend_3 { pt3dadd( 20.2184, 63.7573, 8.25928, 1.8 ) }
    dend_3 { pt3dadd( 21.0821, 64.1021, 8.44485, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 84/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 4.27863, 62.7758, -22.6928, 0.48 ) }
    dend_58 { pt3dadd( 4.28081, 64.7295, -22.5361, 0.48 ) }
    dend_58 { pt3dadd( 4.23365, 65.8847, -22.4299, 0.48 ) }
    dend_58 { pt3dadd( 4.17797, 66.6643, -22.3446, 0.48 ) }
    dend_58 { pt3dadd( 4.06398, 68.0505, -22.2025, 0.72 ) }
    dend_58 { pt3dadd( 3.98865, 68.882, -22.1258, 0.48 ) }
    dend_58 { pt3dadd( 3.89149, 69.8785, -22.0432, 0.48 ) }
    dend_58 { pt3dadd( 3.66309, 71.3007, -21.9676, 0.48 ) }
    dend_58 { pt3dadd( 3.43845, 72.5779, -21.9042, 1.8 ) }
    dend_58 { pt3dadd( 3.3355, 73.2358, -21.8743, 2.64 ) }
    dend_58 { pt3dadd( 3.2443, 73.9899, -21.847, 2.88 ) }
    dend_58 { pt3dadd( 3.16016, 74.8664, -21.8023, 2.88 ) }
    dend_58 { pt3dadd( 3.07975, 75.8666, -21.7471, 2.04 ) }
    dend_58 { pt3dadd( 2.9975, 77.1364, -21.6814, 0.48 ) }
    dend_58 { pt3dadd( 2.9698, 77.6439, -21.6514, 0.36 ) }
    dend_58 { pt3dadd( 2.88184, 79.5217, -21.5388, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_58 { pt3dadd( 2.83765, 80.7281, -21.472, 1.44 ) }
    dend_58 { pt3dadd( 2.84731, 81.8501, -21.4184, 2.52 ) }
    dend_58 { pt3dadd( 2.90742, 82.9604, -21.375, 2.64 ) }
    dend_58 { pt3dadd( 2.98155, 83.7531, -21.3534, 2.52 ) }
    dend_58 { pt3dadd( 3.19357, 85.5048, -21.3329, 0.48 ) }
    dend_58 { pt3dadd( 3.29487, 86.2427, -21.3393, 0.36 ) }
    dend_58 { pt3dadd( 3.48327, 87.6671, -21.3729, 0.36 ) }
    dend_58 { pt3dadd( 3.56464, 88.3402, -21.3813, 0.36 ) }
    dend_58 { pt3dadd( 3.68134, 89.4568, -21.4, 0.36 ) }
    dend_58 { pt3dadd( 3.78773, 90.7075, -21.4219, 1.44 ) }
    dend_58 { pt3dadd( 3.81922, 91.4626, -21.4395, 1.56 ) }
    dend_58 { pt3dadd( 3.80917, 92.4369, -21.4769, 0.24 ) }
    dend_58 { pt3dadd( 3.7227, 93.5621, -21.5361, 0.24 ) }
    dend_58 { pt3dadd( 3.62067, 94.532, -21.5777, 0.72 ) }
    dend_58 { pt3dadd( 3.56672, 95.022, -21.5919, 0.72 ) }
    dend_58 { pt3dadd( 3.50599, 95.5913, -21.5996, 0.48 ) }
    dend_58 { pt3dadd( 3.47632, 95.968, -21.5978, 0.36 ) }
    dend_58 { pt3dadd( 3.45188, 96.5859, -21.5638, 0.36 ) }
    dend_58 { pt3dadd( 3.45394, 97.3341, -21.4675, 0.84 ) }
    dend_58 { pt3dadd( 3.52231, 98.5593, -21.2599, 2.4 ) }
    dend_58 { pt3dadd( 3.56022, 99.0548, -21.181, 3.0 ) }
    dend_58 { pt3dadd( 3.6477, 100.036, -21.0315, 3.0 ) }
    dend_58 { pt3dadd( 3.75194, 101.265, -20.8688, 1.68 ) }
    dend_58 { pt3dadd( 3.8479, 102.493, -20.7296, 0.36 ) }
    dend_58 { pt3dadd( 3.91177, 103.497, -20.6449, 0.36 ) }
    dend_58 { pt3dadd( 3.94048, 104.788, -20.5748, 0.36 ) }
    dend_58 { pt3dadd( 3.91678, 105.797, -20.5586, 1.68 ) }
    dend_58 { pt3dadd( 3.87443, 106.47, -20.5752, 2.52 ) }
    dend_58 { pt3dadd( 3.82386, 106.992, -20.6105, 2.64 ) }
    dend_58 { pt3dadd( 3.74583, 107.658, -20.667, 2.28 ) }
    dend_58 { pt3dadd( 3.6244, 108.736, -20.7543, 0.48 ) }
    dend_58 { pt3dadd( 3.53512, 110.233, -20.8929, 0.48 ) }
    dend_58 { pt3dadd( 3.52001, 111.356, -21.0124, 0.48 ) }
    dend_58 { pt3dadd( 3.53713, 111.862, -21.0647, 0.96 ) }
    dend_58 { pt3dadd( 3.59249, 112.738, -21.1485, 1.56 ) }
    dend_58 { pt3dadd( 3.65264, 113.375, -21.1996, 1.56 ) }
    dend_58 { pt3dadd( 3.79934, 114.628, -21.2767, 0.48 ) }
    dend_58 { pt3dadd( 3.84863, 115.012, -21.3035, 0.12 ) }
    dend_58 { pt3dadd( 3.98346, 116.123, -21.3865, 0.12 ) }
    dend_58 { pt3dadd( 4.1184, 117.367, -21.48, 2.16 ) }
    dend_58 { pt3dadd( 4.1754, 117.995, -21.5247, 2.88 ) }
    dend_58 { pt3dadd( 4.20705, 118.497, -21.5516, 3.0 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 42/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 4.27863, 62.7758, -22.6928, 0.48 ) }
    dend_55 { pt3dadd( 3.98897, 65.4764, -24.7812, 0.48 ) }
    dend_55 { pt3dadd( 3.93178, 65.8675, -25.0785, 0.48 ) }
    dend_55 { pt3dadd( 3.79508, 66.7, -25.7633, 0.72 ) }
    dend_55 { pt3dadd( 3.71028, 67.2699, -26.273, 0.72 ) }
    dend_55 { pt3dadd( 3.57363, 68.3447, -27.2333, 0.24 ) }
    dend_55 { pt3dadd( 3.51741, 68.827, -27.6691, 0.12 ) }
    dend_55 { pt3dadd( 3.4407, 69.5108, -28.2576, 0.84 ) }
    dend_55 { pt3dadd( 3.3761, 70.4014, -29.084, 0.12 ) }
    dend_55 { pt3dadd( 3.34038, 71.3678, -29.9988, 0.12 ) }
    dend_55 { pt3dadd( 3.33521, 71.9238, -30.4867, 1.68 ) }
    dend_55 { pt3dadd( 3.33938, 72.6038, -30.9975, 2.4 ) }
    dend_55 { pt3dadd( 3.34805, 73.7864, -31.858, 1.8 ) }
    dend_55 { pt3dadd( 3.35538, 74.9214, -32.6694, 0.12 ) }
    dend_55 { pt3dadd( 3.33483, 75.4361, -33.0184, 0.12 ) }
    dend_55 { pt3dadd( 3.22907, 76.4507, -33.7152, 1.92 ) }
    dend_55 { pt3dadd( 3.13584, 77.1276, -34.2297, 2.4 ) }
    dend_55 { pt3dadd( 2.86968, 78.8929, -35.6659, 0.6 ) }
    dend_55 { pt3dadd( 2.72133, 79.7036, -36.3537, 0.48 ) }
    dend_55 { pt3dadd( 2.59262, 80.3543, -36.9082, 0.48 ) }
    dend_55 { pt3dadd( 2.41584, 81.305, -37.7308, 1.2 ) }
    dend_55 { pt3dadd( 2.23005, 82.3793, -38.718, 0.48 ) }
    dend_55 { pt3dadd( 2.17425, 82.789, -39.0807, 0.12 ) }
    dend_55 { pt3dadd( 2.10848, 83.6423, -39.6868, 0.12 ) }
    dend_55 { pt3dadd( 2.097, 84.1829, -40.0173, 0.72 ) }
    dend_55 { pt3dadd( 2.11882, 84.7266, -40.3875, 0.72 ) }
    dend_55 { pt3dadd( 2.14339, 86.0031, -41.2801, 0.12 ) }
    dend_55 { pt3dadd( 2.14127, 86.2914, -41.4971, 0.12 ) }
    dend_55 { pt3dadd( 2.14757, 87.1545, -42.1925, 2.28 ) }
    dend_55 { pt3dadd( 2.16706, 87.6107, -42.6229, 2.52 ) }
    dend_55 { pt3dadd( 2.29972, 89.6051, -44.705, 0.12 ) }
    dend_55 { pt3dadd( 2.39332, 90.4241, -45.5683, 0.12 ) }
    dend_55 { pt3dadd( 2.52355, 91.2626, -46.4417, 1.44 ) }
    dend_55 { pt3dadd( 2.60458, 91.731, -46.9375, 1.8 ) }
    dend_55 { pt3dadd( 2.79106, 92.7368, -48.0365, 1.32 ) }
    dend_55 { pt3dadd( 2.87489, 93.3185, -48.6559, 0.12 ) }
    dend_55 { pt3dadd( 2.98701, 94.2299, -49.5155, 0.12 ) }
    dend_55 { pt3dadd( 3.11692, 95.4896, -50.6534, 1.56 ) }
    dend_55 { pt3dadd( 3.13911, 95.91, -51.01, 1.92 ) }
    dend_55 { pt3dadd( 3.13201, 97.2748, -52.1315, 0.12 ) }
    dend_55 { pt3dadd( 3.10008, 98.1094, -52.7869, 0.12 ) }
    dend_55 { pt3dadd( 3.07167, 98.6226, -53.1943, 0.96 ) }
    dend_55 { pt3dadd( 3.05986, 98.8126, -53.3516, 0.96 ) }
    dend_55 { pt3dadd( 3.04022, 99.6221, -54.0885, 0.12 ) }
    dend_55 { pt3dadd( 3.03532, 100.25, -54.7083, 0.12 ) }
    dend_55 { pt3dadd( 3.014, 101.163, -55.6564, 1.32 ) }
    dend_55 { pt3dadd( 3.00125, 101.588, -56.1025, 1.8 ) }
    dend_55 { pt3dadd( 2.96928, 102.14, -56.6685, 1.32 ) }
    dend_55 { pt3dadd( 2.87095, 103.709, -58.1966, 0.12 ) }
    dend_55 { pt3dadd( 2.86137, 103.891, -58.4015, 0.12 ) }
    dend_55 { pt3dadd( 2.84255, 104.54, -59.1754, 0.36 ) }
    dend_55 { pt3dadd( 2.80252, 105.087, -59.8206, 0.36 ) }
    dend_55 { pt3dadd( 2.77356, 105.832, -60.7298, 1.92 ) }
    dend_55 { pt3dadd( 2.7896, 106.463, -61.4828, 2.76 ) }
    dend_55 { pt3dadd( 2.99479, 109.332, -64.6965, 0.36 ) }
    dend_55 { pt3dadd( 3.01848, 109.573, -64.9728, 0.36 ) }
    dend_55 { pt3dadd( 3.13078, 110.479, -66.0266, 0.36 ) }
    dend_55 { pt3dadd( 3.24812, 111.38, -67.0749, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 3.32602, 111.89, -67.6577, 0.36 ) }
    dend_55 { pt3dadd( 3.50009, 112.772, -68.6314, 0.72 ) }
    dend_55 { pt3dadd( 3.79747, 113.834, -69.7401, 0.12 ) }
    dend_55 { pt3dadd( 3.87541, 114.087, -70.0222, 0.12 ) }
    dend_55 { pt3dadd( 4.03482, 114.549, -70.574, 1.92 ) }
    dend_55 { pt3dadd( 4.26953, 115.473, -71.7011, 2.52 ) }
    dend_55 { pt3dadd( 4.53635, 116.446, -73.036, 1.44 ) }
    dend_55 { pt3dadd( 4.79638, 117.023, -73.961, 0.12 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 8/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -8.69288, 41.2126, -32.0451, 0.12 ) }
    dend_53 { pt3dadd( -9.15419, 43.6491, -32.8531, 0.12 ) }
    dend_53 { pt3dadd( -9.3656, 44.7084, -33.2274, 0.6 ) }
    dend_53 { pt3dadd( -9.5088, 45.5206, -33.518, 0.12 ) }
    dend_53 { pt3dadd( -9.56975, 45.891, -33.6439, 0.12 ) }
    dend_53 { pt3dadd( -9.65151, 46.393, -33.7987, 0.12 ) }
    dend_53 { pt3dadd( -9.74578, 46.9964, -33.9667, 0.24 ) }
    dend_53 { pt3dadd( -9.82588, 47.5589, -34.1358, 0.12 ) }
    dend_53 { pt3dadd( -9.88048, 48.0413, -34.3485, 0.12 ) }
    dend_53 { pt3dadd( -9.95471, 48.8391, -34.753, 0.12 ) }
    dend_53 { pt3dadd( -10.0108, 49.6212, -35.1872, 1.32 ) }
    dend_53 { pt3dadd( -10.0188, 50.1539, -35.4883, 1.8 ) }
    dend_53 { pt3dadd( -9.97298, 51.6658, -36.3207, 0.84 ) }
    dend_53 { pt3dadd( -9.90001, 52.5921, -36.9618, 0.12 ) }
    dend_53 { pt3dadd( -9.85413, 52.8841, -37.1857, 0.12 ) }
    dend_53 { pt3dadd( -9.64874, 53.808, -37.8933, 1.8 ) }
    dend_53 { pt3dadd( -9.50558, 54.3654, -38.2994, 2.16 ) }
    dend_53 { pt3dadd( -9.35199, 54.8849, -38.67, 1.8 ) }
    dend_53 { pt3dadd( -8.51041, 57.3031, -40.5376, 0.24 ) }
    dend_53 { pt3dadd( -8.12902, 58.2775, -41.348, 0.24 ) }
    dend_53 { pt3dadd( -7.7344, 59.2563, -42.1795, 0.24 ) }
    dend_53 { pt3dadd( -7.55778, 59.6897, -42.5622, 0.24 ) }
    dend_53 { pt3dadd( -6.99229, 61.1085, -43.8814, 2.28 ) }
    dend_53 { pt3dadd( -6.21947, 63.0664, -45.7515, 0.24 ) }
    dend_53 { pt3dadd( -6.09741, 63.382, -46.0378, 0.24 ) }
    dend_53 { pt3dadd( -5.74408, 64.3156, -46.9406, 0.24 ) }
    dend_53 { pt3dadd( -5.35014, 65.3196, -47.9288, 1.44 ) }
    dend_53 { pt3dadd( -5.04316, 66.1553, -48.6924, 1.8 ) }
    dend_53 { pt3dadd( -4.70941, 67.2359, -49.5014, 0.12 ) }
    dend_53 { pt3dadd( -4.49007, 68.087, -50.0111, 0.12 ) }
    dend_53 { pt3dadd( -4.37954, 68.5346, -50.2805, 0.96 ) }
    dend_53 { pt3dadd( -4.28128, 68.9126, -50.4995, 1.2 ) }
    dend_53 { pt3dadd( -4.04085, 69.8859, -50.9894, 0.12 ) }
    dend_53 { pt3dadd( -3.84958, 70.6526, -51.3547, 0.12 ) }
    dend_53 { pt3dadd( -3.7305, 71.1001, -51.5841, 0.36 ) }
    dend_53 { pt3dadd( -3.48485, 72.0388, -52.1782, 0.12 ) }
    dend_53 { pt3dadd( -3.38592, 72.4959, -52.476, 0.12 ) }
    dend_53 { pt3dadd( -3.24136, 73.2905, -52.9984, 0.48 ) }
    dend_53 { pt3dadd( -3.07279, 74.3344, -53.7145, 0.48 ) }
    dend_53 { pt3dadd( -2.91989, 75.4308, -54.4698, 2.28 ) }
    dend_53 { pt3dadd( -2.69788, 77.2322, -55.6646, 0.12 ) }
    dend_53 { pt3dadd( -2.61118, 78.1639, -56.2459, 0.12 ) }
    dend_53 { pt3dadd( -2.57732, 78.6781, -56.5733, 0.12 ) }
    dend_53 { pt3dadd( -2.54848, 79.6502, -57.1756, 1.08 ) }
    dend_53 { pt3dadd( -2.56475, 80.1617, -57.5081, 1.2 ) }
    dend_53 { pt3dadd( -2.67352, 81.0155, -58.2409, 0.12 ) }
    dend_53 { pt3dadd( -2.82077, 81.6516, -58.896, 0.12 ) }
    dend_53 { pt3dadd( -3.06056, 82.6041, -59.9927, 1.44 ) }
    dend_53 { pt3dadd( -3.14931, 82.9336, -60.3837, 2.04 ) }
    dend_53 { pt3dadd( -3.3357, 83.5318, -61.0958, 1.68 ) }
    dend_53 { pt3dadd( -3.96305, 85.3358, -63.313, 0.24 ) }
    dend_53 { pt3dadd( -4.19276, 85.9219, -64.0579, 0.24 ) }
    dend_53 { pt3dadd( -4.44638, 86.5417, -64.8556, 0.12 ) }
    dend_53 { pt3dadd( -4.70458, 87.1323, -65.5603, 0.72 ) }
    dend_53 { pt3dadd( -4.82188, 87.4202, -65.8737, 0.72 ) }
    dend_53 { pt3dadd( -4.94039, 87.6898, -66.1285, 0.12 ) }
    dend_53 { pt3dadd( -5.3614, 88.6016, -66.8452, 0.12 ) }
    dend_53 { pt3dadd( -5.58837, 88.9935, -67.2141, 0.12 ) }
    dend_53 { pt3dadd( -6.11288, 89.6785, -67.9275, 1.68 ) }
    dend_53 { pt3dadd( -6.23034, 89.824, -68.0844, 1.68 ) }
    dend_53 { pt3dadd( -7.15286, 91.1033, -69.4708, 0.12 ) }
    dend_53 { pt3dadd( -7.45156, 91.5769, -69.9459, 0.12 ) }
    dend_53 { pt3dadd( -7.67953, 92.0435, -70.3988, 0.24 ) }
    dend_53 { pt3dadd( -7.88805, 92.5695, -70.8896, 0.24 ) }
    dend_53 { pt3dadd( -8.17672, 93.4628, -71.6776, 0.24 ) }
    dend_53 { pt3dadd( -8.44555, 94.4048, -72.3892, 1.56 ) }
    dend_53 { pt3dadd( -8.57713, 95.0129, -72.7783, 2.04 ) }
    dend_53 { pt3dadd( -8.90791, 96.7406, -73.7708, 0.36 ) }
    dend_53 { pt3dadd( -8.98964, 97.2758, -74.0485, 0.48 ) }
    dend_53 { pt3dadd( -9.09069, 98.0995, -74.4877, 0.48 ) }
    dend_53 { pt3dadd( -9.22924, 98.9979, -74.9447, 0.48 ) }
    dend_53 { pt3dadd( -9.3189, 99.4546, -75.1789, 0.24 ) }
    dend_53 { pt3dadd( -9.43861, 99.9624, -75.4949, 0.24 ) }
    dend_53 { pt3dadd( -9.63107, 100.674, -76.0023, 0.24 ) }
    dend_53 { pt3dadd( -9.92663, 101.636, -76.8513, 1.08 ) }
    dend_53 { pt3dadd( -10.0865, 102.042, -77.2883, 1.08 ) }
    dend_53 { pt3dadd( -10.3909, 102.533, -78.0448, 0.36 ) }
    dend_53 { pt3dadd( -10.8319, 103.012, -78.9708, 0.36 ) }
    dend_53 { pt3dadd( -10.9961, 103.135, -79.269, 0.36 ) }
    dend_53 { pt3dadd( -11.1934, 103.244, -79.5762, 0.36 ) }
    dend_53 { pt3dadd( -11.4675, 103.373, -79.9692, 0.36 ) }
    dend_53 { pt3dadd( -12.6647, 103.925, -81.6362, 1.68 ) }
    dend_53 { pt3dadd( -12.8917, 104.027, -81.9246, 2.4 ) }
    dend_53 { pt3dadd( -13.0583, 104.104, -82.1216, 2.64 ) }
    dend_53 { pt3dadd( -14.8347, 104.933, -84.1264, 0.6 ) }
    dend_53 { pt3dadd( -15.0614, 105.027, -84.3624, 0.12 ) }
    dend_53 { pt3dadd( -15.3706, 105.144, -84.6354, 0.12 ) }
    dend_53 { pt3dadd( -15.7566, 105.263, -84.9151, 0.6 ) }
    dend_53 { pt3dadd( -16.1566, 105.376, -85.2032, 0.12 ) }
    dend_53 { pt3dadd( -16.6077, 105.488, -85.4739, 0.12 ) }
    dend_53 { pt3dadd( -17.3522, 105.601, -85.7605, 1.44 ) }
    dend_53 { pt3dadd( -17.9706, 105.694, -85.9924, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( -19.5343, 105.989, -86.5353, 0.12 ) }
    dend_53 { pt3dadd( -20.1811, 106.159, -86.7177, 0.12 ) }
    dend_53 { pt3dadd( -20.9633, 106.417, -86.8764, 0.84 ) }
    dend_53 { pt3dadd( -21.2749, 106.541, -86.9406, 0.84 ) }
    dend_53 { pt3dadd( -21.4938, 106.636, -86.9799, 0.12 ) }
    dend_53 { pt3dadd( -21.9944, 106.829, -87.0405, 0.12 ) }
    dend_53 { pt3dadd( -22.7135, 107.082, -87.066, 1.44 ) }
    dend_53 { pt3dadd( -22.9659, 107.161, -87.0844, 1.56 ) }
    dend_53 { pt3dadd( -23.985, 107.486, -87.2062, 0.12 ) }
    dend_53 { pt3dadd( -24.7561, 107.742, -87.2984, 0.12 ) }
    dend_53 { pt3dadd( -25.2285, 107.894, -87.354, 1.08 ) }
    dend_53 { pt3dadd( -25.7996, 108.059, -87.4505, 1.92 ) }
    dend_53 { pt3dadd( -26.267, 108.183, -87.5616, 1.56 ) }
    dend_53 { pt3dadd( -27.1367, 108.418, -87.8181, 0.12 ) }
    dend_53 { pt3dadd( -27.4862, 108.51, -87.9366, 0.12 ) }
    dend_53 { pt3dadd( -27.7016, 108.57, -88.026, 0.48 ) }
    dend_53 { pt3dadd( -28.6111, 108.839, -88.4715, 0.48 ) }
    dend_53 { pt3dadd( -29.0074, 108.967, -88.6754, 0.12 ) }
    dend_53 { pt3dadd( -29.6184, 109.214, -88.8689, 0.12 ) }
    dend_53 { pt3dadd( -29.88, 109.396, -89.0582, 0.84 ) }
    dend_53 { pt3dadd( -30.1239, 109.585, -89.2866, 1.2 ) }
    dend_53 { pt3dadd( -30.5313, 109.898, -89.5999, 0.12 ) }
    dend_53 { pt3dadd( -31.1478, 110.243, -89.6818, 0.12 ) }
    dend_53 { pt3dadd( -32.7405, 110.546, -88.6393, 2.88 ) }
    dend_53 { pt3dadd( -35.9161, 110.563, -85.2281, 0.96 ) }
    dend_53 { pt3dadd( -36.4489, 110.465, -84.411, 0.96 ) }
    dend_53 { pt3dadd( -39.0591, 109.499, -79.2673, 0.12 ) }
    dend_53 { pt3dadd( -39.3499, 109.345, -78.5854, 0.12 ) }
    dend_53 { pt3dadd( -39.553, 109.196, -78.0258, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 29/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -8.69288, 41.2126, -32.0451, 0.48 ) }
    dend_50 { pt3dadd( -10.4681, 41.3326, -32.8193, 0.48 ) }
    dend_50 { pt3dadd( -11.2363, 41.4709, -33.4674, 0.48 ) }
    dend_50 { pt3dadd( -12.1993, 41.8263, -34.7065, 0.48 ) }
    dend_50 { pt3dadd( -12.6799, 42.0576, -35.3741, 2.16 ) }
    dend_50 { pt3dadd( -12.9139, 42.1897, -35.7156, 2.52 ) }
    dend_50 { pt3dadd( -13.2352, 42.3919, -36.1994, 2.52 ) }
    dend_50 { pt3dadd( -14.4902, 43.3741, -38.5734, 1.44 ) }
    dend_50 { pt3dadd( -15.2812, 43.9899, -40.1491, 0.36 ) }
    dend_50 { pt3dadd( -15.573, 44.1906, -40.7275, 0.48 ) }
    dend_50 { pt3dadd( -16.1268, 44.5077, -41.8104, 0.6 ) }
    dend_50 { pt3dadd( -16.7061, 44.7457, -43.1442, 0.6 ) }
    dend_50 { pt3dadd( -17.4148, 44.9694, -44.9837, 0.6 ) }
    dend_50 { pt3dadd( -17.7215, 45.041, -45.7842, 1.92 ) }
    dend_50 { pt3dadd( -17.9863, 45.0802, -46.4716, 2.64 ) }
    dend_50 { pt3dadd( -18.2487, 45.1078, -47.1541, 2.64 ) }
    dend_50 { pt3dadd( -20.6467, 45.2725, -53.2803, 1.68 ) }
    dend_50 { pt3dadd( -21.7224, 45.3422, -55.9364, 0.72 ) }
    dend_50 { pt3dadd( -21.9341, 45.3637, -56.4291, 1.56 ) }
    dend_50 { pt3dadd( -22.3855, 45.4256, -57.4375, 1.92 ) }
    dend_50 { pt3dadd( -22.5956, 45.4595, -57.8679, 2.28 ) }
    dend_50 { pt3dadd( -22.7809, 45.4932, -58.1975, 2.28 ) }
    dend_50 { pt3dadd( -24.8005, 45.8558, -60.4273, 0.24 ) }
    dend_50 { pt3dadd( -25.1414, 45.9064, -60.7827, 0.12 ) }
    dend_50 { pt3dadd( -25.3781, 45.9327, -61.0783, 0.12 ) }
    dend_50 { pt3dadd( -25.7918, 45.9671, -61.646, 0.12 ) }
    dend_50 { pt3dadd( -26.5447, 45.9989, -62.7075, 1.32 ) }
    dend_50 { pt3dadd( -26.8954, 45.9955, -63.2169, 2.16 ) }
    dend_50 { pt3dadd( -27.4633, 45.9517, -64.0284, 2.4 ) }
    dend_50 { pt3dadd( -29.0888, 45.7255, -66.3624, 0.72 ) }
    dend_50 { pt3dadd( -29.5383, 45.6335, -67.0064, 0.84 ) }
    dend_50 { pt3dadd( -29.8183, 45.5533, -67.4131, 1.08 ) }
    dend_50 { pt3dadd( -30.6739, 45.2466, -68.5877, 0.48 ) }
    dend_50 { pt3dadd( -30.8886, 45.1617, -68.8651, 0.12 ) }
    dend_50 { pt3dadd( -31.3153, 44.9745, -69.362, 0.48 ) }
    dend_50 { pt3dadd( -31.4751, 44.8951, -69.5092, 0.48 ) }
    dend_50 { pt3dadd( -32.1802, 44.5064, -70.1556, 0.12 ) }
    dend_50 { pt3dadd( -32.44, 44.3508, -70.3892, 0.12 ) }
    dend_50 { pt3dadd( -32.7752, 44.1338, -70.7118, 0.12 ) }
    dend_50 { pt3dadd( -32.9715, 44.0119, -70.9904, 0.12 ) }
    dend_50 { pt3dadd( -33.1802, 43.8911, -71.3515, 0.12 ) }
    dend_50 { pt3dadd( -33.3776, 43.7831, -71.6706, 0.48 ) }
    dend_50 { pt3dadd( -33.4649, 43.7294, -71.8069, 0.48 ) }
    dend_50 { pt3dadd( -34.1114, 43.2393, -72.8213, 0.48 ) }
    dend_50 { pt3dadd( -34.5004, 42.8769, -73.4149, 0.12 ) }
    dend_50 { pt3dadd( -34.6445, 42.7514, -73.6072, 0.12 ) }
    dend_50 { pt3dadd( -35.0069, 42.4152, -74.0358, 0.12 ) }
    dend_50 { pt3dadd( -35.6358, 41.8038, -74.7862, 1.8 ) }
    dend_50 { pt3dadd( -36.0728, 41.4131, -75.2382, 2.76 ) }
    dend_50 { pt3dadd( -36.348, 41.1627, -75.4821, 2.76 ) }
    dend_50 { pt3dadd( -36.8507, 40.6797, -75.9107, 1.92 ) }
    dend_50 { pt3dadd( -37.3688, 40.1396, -76.3727, 1.92 ) }
    dend_50 { pt3dadd( -38.5252, 38.78, -77.569, 0.12 ) }
    dend_50 { pt3dadd( -38.9751, 38.1948, -78.0645, 0.12 ) }
    dend_50 { pt3dadd( -39.1982, 37.8708, -78.365, 0.12 ) }
    dend_50 { pt3dadd( -39.4141, 37.5287, -78.6684, 0.48 ) }
    dend_50 { pt3dadd( -39.6046, 37.1947, -78.9572, 0.6 ) }
    dend_50 { pt3dadd( -40.0081, 36.522, -79.5447, 0.12 ) }
    dend_50 { pt3dadd( -40.1496, 36.2365, -79.7519, 0.12 ) }
    dend_50 { pt3dadd( -40.7648, 34.8469, -80.8071, 2.4 ) }
    dend_50 { pt3dadd( -41.1176, 34.1684, -81.3871, 3.25 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 3.40761, -167.711, -20.5807, 0.12 ) }
    dend_45 { pt3dadd( 3.23634, -168.876, -20.8159, 0.12 ) }
    dend_45 { pt3dadd( 3.1247, -169.252, -20.8538, 0.12 ) }
    dend_45 { pt3dadd( 2.95303, -169.675, -20.8365, 0.36 ) }
    dend_45 { pt3dadd( 2.65735, -170.329, -20.761, 0.48 ) }
    dend_45 { pt3dadd( 2.50917, -170.647, -20.7148, 0.12 ) }
    dend_45 { pt3dadd( 2.30213, -171.129, -20.6423, 0.12 ) }
    dend_45 { pt3dadd( 1.96657, -171.864, -20.4581, 0.36 ) }
    dend_45 { pt3dadd( 1.73332, -172.333, -20.2013, 0.12 ) }
    dend_45 { pt3dadd( 1.50627, -172.689, -19.9211, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 1.29798, -172.925, -19.6974, 0.12 ) }
    dend_45 { pt3dadd( 0.972369, -173.285, -19.3248, 0.12 ) }
    dend_45 { pt3dadd( 0.470242, -173.814, -18.7231, 0.36 ) }
    dend_45 { pt3dadd( -0.33226, -174.581, -17.7717, 0.12 ) }
    dend_45 { pt3dadd( -0.899781, -175.054, -17.1302, 0.12 ) }
    dend_45 { pt3dadd( -1.79722, -175.635, -16.1359, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 6/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.40761, -167.711, -20.5807, 0.12 ) }
    dend_42 { pt3dadd( 4.13132, -168.1, -21.0526, 0.12 ) }
    dend_42 { pt3dadd( 4.70345, -168.392, -21.4721, 0.12 ) }
    dend_42 { pt3dadd( 5.3285, -168.715, -21.9345, 0.48 ) }
    dend_42 { pt3dadd( 5.79865, -168.96, -22.2829, 0.12 ) }
    dend_42 { pt3dadd( 6.7236, -169.442, -22.9684, 0.12 ) }
    dend_42 { pt3dadd( 7.68652, -169.944, -23.6821, 0.12 ) }
    dend_42 { pt3dadd( 8.75696, -170.468, -24.5712, 2.52 ) }
    dend_42 { pt3dadd( 8.99773, -170.583, -24.784, 2.28 ) }
    dend_42 { pt3dadd( 9.0279, -170.598, -24.8101, 2.28 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 30.7665, -27.2531, -28.4019, 0.48 ) }
    dend_34 { pt3dadd( 30.4829, -29.9947, -30.0878, 0.48 ) }
    dend_34 { pt3dadd( 30.4585, -30.4228, -30.308, 0.36 ) }
    dend_34 { pt3dadd( 30.4469, -30.8773, -30.5151, 0.36 ) }
    dend_34 { pt3dadd( 30.4432, -31.3913, -30.725, 0.84 ) }
    dend_34 { pt3dadd( 30.452, -32.2018, -31.03, 1.32 ) }
    dend_34 { pt3dadd( 30.5194, -33.2714, -31.3998, 0.48 ) }
    dend_34 { pt3dadd( 30.6755, -34.0964, -31.5518, 0.36 ) }
    dend_34 { pt3dadd( 30.7649, -34.4674, -31.6159, 0.36 ) }
    dend_34 { pt3dadd( 30.9035, -34.9404, -31.7065, 0.48 ) }
    dend_34 { pt3dadd( 31.0684, -35.4312, -31.8025, 0.36 ) }
    dend_34 { pt3dadd( 31.411, -36.359, -31.9971, 0.36 ) }
    dend_34 { pt3dadd( 31.6059, -36.8786, -32.1126, 0.36 ) }
    dend_34 { pt3dadd( 31.734, -37.3509, -32.2207, 0.48 ) }
    dend_34 { pt3dadd( 31.8587, -37.9408, -32.3595, 0.36 ) }
    dend_34 { pt3dadd( 31.9514, -38.5455, -32.4999, 0.36 ) }
    dend_34 { pt3dadd( 31.9774, -38.7895, -32.5543, 0.36 ) }
    dend_34 { pt3dadd( 32.1226, -40.9435, -33.0153, 3.49 ) }
    dend_34 { pt3dadd( 32.2273, -42.9958, -33.4129, 0.12 ) }
    dend_34 { pt3dadd( 32.2428, -43.3567, -33.4771, 0.12 ) }
    dend_34 { pt3dadd( 32.2638, -43.9128, -33.5613, 0.36 ) }
    dend_34 { pt3dadd( 32.2693, -44.1034, -33.5879, 0.12 ) }
    dend_34 { pt3dadd( 32.2733, -44.7718, -33.6612, 0.12 ) }
    dend_34 { pt3dadd( 32.2332, -45.4166, -33.6864, 0.6 ) }
    dend_34 { pt3dadd( 32.2058, -45.804, -33.6814, 0.6 ) }
    dend_34 { pt3dadd( 32.1308, -46.4416, -33.6746, 0.36 ) }
    dend_34 { pt3dadd( 32.0924, -46.6907, -33.6787, 0.24 ) }
    dend_34 { pt3dadd( 32.0138, -47.0871, -33.6928, 0.24 ) }
    dend_34 { pt3dadd( 31.9011, -47.5253, -33.7127, 1.08 ) }
    dend_34 { pt3dadd( 31.6378, -48.5146, -33.7675, 1.8 ) }
    dend_34 { pt3dadd( 31.4403, -49.2735, -33.7823, 1.56 ) }
    dend_34 { pt3dadd( 31.2817, -49.9543, -33.7499, 0.96 ) }
    dend_34 { pt3dadd( 31.1998, -50.4652, -33.7132, 0.24 ) }
    dend_34 { pt3dadd( 31.0884, -51.4616, -33.6328, 0.24 ) }
    dend_34 { pt3dadd( 31.0513, -51.9672, -33.5875, 0.24 ) }
    dend_34 { pt3dadd( 31.009, -52.9254, -33.4943, 0.24 ) }
    dend_34 { pt3dadd( 30.9651, -54.859, -33.2955, 3.25 ) }
    dend_34 { pt3dadd( 30.9706, -56.6462, -33.1162, 0.24 ) }
    dend_34 { pt3dadd( 30.9813, -57.0295, -33.0823, 0.24 ) }
    dend_34 { pt3dadd( 31.0453, -58.2826, -32.9978, 0.24 ) }
    dend_34 { pt3dadd( 31.0857, -58.9001, -32.9739, 0.48 ) }
    dend_34 { pt3dadd( 31.1094, -59.1508, -32.9774, 0.12 ) }
    dend_34 { pt3dadd( 31.3515, -60.8914, -33.0587, 0.12 ) }
    dend_34 { pt3dadd( 31.3804, -61.0668, -33.067, 0.84 ) }
    dend_34 { pt3dadd( 31.4947, -61.6912, -33.0989, 1.08 ) }
    dend_34 { pt3dadd( 31.6313, -62.4105, -33.1397, 0.12 ) }
    dend_34 { pt3dadd( 31.8674, -63.6694, -33.2105, 0.12 ) }
    dend_34 { pt3dadd( 32.1208, -65.0686, -33.2876, 2.4 ) }
    dend_34 { pt3dadd( 32.376, -66.5668, -33.3674, 0.24 ) }
    dend_34 { pt3dadd( 32.4677, -67.1773, -33.4079, 0.24 ) }
    dend_34 { pt3dadd( 32.5577, -67.9251, -33.4643, 0.36 ) }
    dend_34 { pt3dadd( 32.59, -68.3203, -33.5001, 0.24 ) }
    dend_34 { pt3dadd( 32.6022, -68.5704, -33.5265, 0.24 ) }
    dend_34 { pt3dadd( 32.6049, -68.9325, -33.5863, 0.24 ) }
    dend_34 { pt3dadd( 32.5902, -69.6311, -33.7477, 0.24 ) }
    dend_34 { pt3dadd( 32.5991, -70.0706, -33.8567, 0.84 ) }
    dend_34 { pt3dadd( 32.6289, -70.5005, -33.9644, 0.84 ) }
    dend_34 { pt3dadd( 32.6686, -70.8878, -34.0443, 0.84 ) }
    dend_34 { pt3dadd( 32.7441, -71.4502, -34.1262, 0.12 ) }
    dend_34 { pt3dadd( 32.7811, -71.7371, -34.1551, 0.12 ) }
    dend_34 { pt3dadd( 32.9027, -72.5648, -34.2054, 0.12 ) }
    dend_34 { pt3dadd( 32.9646, -72.9641, -34.2261, 1.32 ) }
    dend_34 { pt3dadd( 33.0829, -73.8358, -34.2971, 1.68 ) }
    dend_34 { pt3dadd( 33.2197, -74.9514, -34.4054, 1.2 ) }
    dend_34 { pt3dadd( 33.2945, -75.615, -34.5374, 0.12 ) }
    dend_34 { pt3dadd( 33.3165, -75.8669, -34.6049, 0.12 ) }
    dend_34 { pt3dadd( 33.3567, -76.5845, -34.8283, 0.12 ) }
    dend_34 { pt3dadd( 33.3882, -77.6225, -35.1748, 1.32 ) }
    dend_34 { pt3dadd( 33.3958, -78.3212, -35.4224, 2.04 ) }
    dend_34 { pt3dadd( 33.431, -80.2025, -36.085, 0.36 ) }
    dend_34 { pt3dadd( 33.4667, -81.2719, -36.4327, 0.36 ) }
    dend_34 { pt3dadd( 33.4889, -82.1118, -36.653, 0.36 ) }
    dend_34 { pt3dadd( 33.5061, -82.5562, -36.7411, 0.36 ) }
    dend_34 { pt3dadd( 33.5274, -83.0458, -36.7962, 0.36 ) }
    dend_34 { pt3dadd( 33.5746, -84.0628, -36.8408, 1.92 ) }
    dend_34 { pt3dadd( 33.6193, -84.8166, -36.8083, 2.52 ) }
    dend_34 { pt3dadd( 33.7298, -86.2144, -36.7426, 0.24 ) }
    dend_34 { pt3dadd( 33.7952, -86.8839, -36.6607, 0.24 ) }
    dend_34 { pt3dadd( 33.8657, -87.5427, -36.5515, 0.84 ) }
    dend_34 { pt3dadd( 33.9472, -88.2778, -36.4043, 1.08 ) }
    dend_34 { pt3dadd( 34.0302, -89.0297, -36.1991, 0.36 ) }
    dend_34 { pt3dadd( 34.1663, -89.9721, -35.8946, 0.36 ) }
    dend_34 { pt3dadd( 34.4641, -91.587, -35.318, 1.44 ) }
    dend_34 { pt3dadd( 34.6117, -92.294, -35.0476, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 34.7338, -92.8032, -34.8529, 1.56 ) }
    dend_34 { pt3dadd( 35.03, -93.9602, -34.3551, 0.12 ) }
    dend_34 { pt3dadd( 35.1765, -94.5153, -34.1121, 0.12 ) }
    dend_34 { pt3dadd( 35.3279, -95.0757, -33.8782, 0.12 ) }
    dend_34 { pt3dadd( 35.3711, -95.2372, -33.8211, 0.48 ) }
    dend_34 { pt3dadd( 35.6168, -96.1459, -33.4929, 0.84 ) }
    dend_34 { pt3dadd( 36.0645, -97.9091, -32.9032, 0.12 ) }
    dend_34 { pt3dadd( 36.2445, -98.6401, -32.6918, 0.12 ) }
    dend_34 { pt3dadd( 36.324, -98.981, -32.588, 0.24 ) }
    dend_34 { pt3dadd( 36.4376, -99.4622, -32.4403, 0.24 ) }
    dend_34 { pt3dadd( 36.5236, -99.8336, -32.3335, 0.24 ) }
    dend_34 { pt3dadd( 36.6259, -100.299, -32.214, 0.48 ) }
    dend_34 { pt3dadd( 36.6778, -100.572, -32.1697, 0.6 ) }
    dend_34 { pt3dadd( 36.7576, -101.028, -32.0899, 0.12 ) }
    dend_34 { pt3dadd( 36.823, -101.403, -32.0197, 0.12 ) }
    dend_34 { pt3dadd( 36.8838, -101.768, -31.947, 0.12 ) }
    dend_34 { pt3dadd( 37.0883, -103.052, -31.683, 2.4 ) }
    dend_34 { pt3dadd( 37.2019, -103.782, -31.533, 2.88 ) }
    dend_34 { pt3dadd( 37.3038, -104.516, -31.3935, 2.4 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 19/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 30.7665, -27.2531, -28.4019, 0.12 ) }
    dend_29 { pt3dadd( 31.6736, -27.7592, -26.9979, 0.12 ) }
    dend_29 { pt3dadd( 32.0527, -27.9061, -26.4525, 0.12 ) }
    dend_29 { pt3dadd( 32.6458, -28.0588, -25.6893, 0.72 ) }
    dend_29 { pt3dadd( 33.9163, -28.2474, -24.2213, 0.72 ) }
    dend_29 { pt3dadd( 34.4878, -28.2747, -23.6645, 0.12 ) }
    dend_29 { pt3dadd( 34.9531, -28.2755, -23.2858, 0.12 ) }
    dend_29 { pt3dadd( 35.7331, -28.1829, -22.691, 1.68 ) }
    dend_29 { pt3dadd( 36.2713, -28.0929, -22.3505, 2.28 ) }
    dend_29 { pt3dadd( 37.2194, -27.9125, -21.9019, 1.92 ) }
    dend_29 { pt3dadd( 38.3511, -27.754, -21.3633, 0.36 ) }
    dend_29 { pt3dadd( 39.3008, -27.7054, -20.8373, 0.36 ) }
    dend_29 { pt3dadd( 40.0287, -27.7841, -20.2736, 0.6 ) }
    dend_29 { pt3dadd( 40.3367, -27.875, -19.8962, 0.36 ) }
    dend_29 { pt3dadd( 40.6047, -27.9893, -19.4947, 0.36 ) }
    dend_29 { pt3dadd( 41.9528, -28.6845, -17.2488, 0.36 ) }
    dend_29 { pt3dadd( 42.1876, -28.822, -16.8334, 1.2 ) }
    dend_29 { pt3dadd( 42.943, -29.3042, -15.3861, 1.92 ) }
    dend_29 { pt3dadd( 44.0808, -30.0614, -13.1796, 0.24 ) }
    dend_29 { pt3dadd( 44.6597, -30.4397, -12.0471, 2.16 ) }
    dend_29 { pt3dadd( 44.8819, -30.5726, -11.6409, 3.0 ) }
    dend_29 { pt3dadd( 45.1994, -30.6949, -11.2127, 3.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -11.7677, -274.818, -40.7601, 0.12 ) }
    dend_23 { pt3dadd( -10.7934, -274.741, -41.2937, 0.12 ) }
    dend_23 { pt3dadd( -10.3451, -274.738, -41.5029, 0.12 ) }
    dend_23 { pt3dadd( -10.0982, -274.751, -41.6073, 0.12 ) }
    dend_23 { pt3dadd( -9.3153, -274.803, -41.9137, 0.6 ) }
    dend_23 { pt3dadd( -8.97601, -274.825, -42.0464, 0.6 ) }
    dend_23 { pt3dadd( -8.35712, -274.866, -42.2886, 0.12 ) }
    dend_23 { pt3dadd( -7.40809, -274.978, -42.5829, 0.12 ) }
    dend_23 { pt3dadd( -7.09541, -275.028, -42.6849, 0.84 ) }
    dend_23 { pt3dadd( -6.84368, -275.078, -42.7648, 0.84 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -11.7677, -274.818, -40.7601, 1.56 ) }
    dend_18 { pt3dadd( -11.6594, -275.443, -40.7438, 1.56 ) }
    dend_18 { pt3dadd( -11.5092, -276.309, -40.7214, 2.28 ) }
    dend_18 { pt3dadd( -11.4206, -276.82, -40.7081, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.0312, 89.9205, 9.51098, 0.48 ) }
    dend_12 { pt3dadd( 16.779, 92.6026, 10.2276, 0.48 ) }
    dend_12 { pt3dadd( 17.0026, 93.5516, 10.4164, 0.36 ) }
    dend_12 { pt3dadd( 17.1888, 94.5271, 10.5626, 0.36 ) }
    dend_12 { pt3dadd( 17.329, 95.5384, 10.6762, 0.36 ) }
    dend_12 { pt3dadd( 17.4051, 96.4014, 10.7577, 0.36 ) }
    dend_12 { pt3dadd( 17.4251, 96.8969, 10.7953, 0.72 ) }
    dend_12 { pt3dadd( 17.3889, 97.4127, 10.7483, 0.72 ) }
    dend_12 { pt3dadd( 17.3212, 98.0384, 10.6955, 0.36 ) }
    dend_12 { pt3dadd( 17.2135, 98.8149, 10.6391, 0.36 ) }
    dend_12 { pt3dadd( 17.1306, 99.5049, 10.6015, 1.2 ) }
    dend_12 { pt3dadd( 17.0602, 100.291, 10.5749, 1.8 ) }
    dend_12 { pt3dadd( 16.9853, 101.383, 10.5769, 1.8 ) }
    dend_12 { pt3dadd( 16.9121, 102.894, 10.6278, 0.36 ) }
    dend_12 { pt3dadd( 16.901, 103.387, 10.6224, 0.36 ) }
    dend_12 { pt3dadd( 16.9091, 104.416, 10.6033, 0.72 ) }
    dend_12 { pt3dadd( 16.9288, 104.919, 10.5911, 0.84 ) }
    dend_12 { pt3dadd( 16.9873, 106.02, 10.5746, 0.36 ) }
    dend_12 { pt3dadd( 17.0347, 106.899, 10.5727, 1.08 ) }
    dend_12 { pt3dadd( 17.1254, 108.755, 10.5124, 2.64 ) }
    dend_12 { pt3dadd( 17.1814, 109.961, 10.4413, 3.61 ) }
    dend_12 { pt3dadd( 17.202, 110.52, 10.377, 3.61 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 77/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.0312, 89.9205, 9.51098, 0.6 ) }
    dend_9 { pt3dadd( 15.7867, 91.3566, 9.37306, 0.6 ) }
    dend_9 { pt3dadd( 15.7214, 92.3271, 9.22281, 0.6 ) }
    dend_9 { pt3dadd( 15.7164, 93.6659, 8.8993, 0.6 ) }
    dend_9 { pt3dadd( 15.7311, 94.2529, 8.66223, 0.6 ) }
    dend_9 { pt3dadd( 15.7374, 95.1043, 8.27928, 1.68 ) }
    dend_9 { pt3dadd( 15.7227, 95.9437, 7.88526, 2.04 ) }
    dend_9 { pt3dadd( 15.7431, 96.4792, 7.5698, 1.8 ) }
    dend_9 { pt3dadd( 15.723, 97.1304, 7.09248, 2.04 ) }
    dend_9 { pt3dadd( 15.4523, 98.2095, 6.15852, 0.48 ) }
    dend_9 { pt3dadd( 15.1917, 98.7124, 5.73629, 0.48 ) }
    dend_9 { pt3dadd( 15.0467, 98.8941, 5.60243, 0.72 ) }
    dend_9 { pt3dadd( 14.6788, 99.3022, 5.34451, 0.96 ) }
    dend_9 { pt3dadd( 14.1801, 99.8495, 5.02217, 0.72 ) }
    dend_9 { pt3dadd( 13.7747, 100.326, 4.78025, 1.32 ) }
    dend_9 { pt3dadd( 13.4374, 100.798, 4.57131, 1.8 ) }
    dend_9 { pt3dadd( 12.9972, 101.56, 4.2438, 1.8 ) }
    dend_9 { pt3dadd( 12.6879, 102.209, 3.99574, 0.96 ) }
    dend_9 { pt3dadd( 12.3951, 102.939, 3.71488, 0.72 ) }
    dend_9 { pt3dadd( 12.1933, 103.485, 3.49376, 0.84 ) }
    dend_9 { pt3dadd( 11.8171, 104.489, 3.01828, 1.56 ) }
    dend_9 { pt3dadd( 11.6178, 105.009, 2.73471, 2.52 ) }
    dend_9 { pt3dadd( 11.4397, 105.453, 2.47392, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( 10.9095, 106.632, 1.75442, 2.4 ) }
    dend_9 { pt3dadd( 10.4338, 107.605, 1.13161, 1.56 ) }
    dend_9 { pt3dadd( 10.0628, 108.33, 0.631488, 0.84 ) }
    dend_9 { pt3dadd( 9.78535, 108.851, 0.257652, 0.48 ) }
    dend_9 { pt3dadd( 9.67837, 109.06, 0.101099, 0.24 ) }
    dend_9 { pt3dadd( 9.38481, 109.635, -0.318983, 0.24 ) }
    dend_9 { pt3dadd( 9.17236, 110.096, -0.762725, 0.48 ) }
    dend_9 { pt3dadd( 9.06602, 110.381, -1.10463, 0.12 ) }
    dend_9 { pt3dadd( 8.99173, 110.649, -1.44613, 0.12 ) }
    dend_9 { pt3dadd( 8.82061, 111.335, -2.34817, 1.2 ) }
    dend_9 { pt3dadd( 8.73236, 111.717, -2.84464, 1.56 ) }
    dend_9 { pt3dadd( 8.31671, 113.584, -5.22683, 0.36 ) }
    dend_9 { pt3dadd( 8.18479, 114.189, -5.9272, 0.12 ) }
    dend_9 { pt3dadd( 7.94266, 115.26, -6.98607, 2.64 ) }
    dend_9 { pt3dadd( 7.86598, 115.598, -7.25262, 3.0 ) }
    dend_9 { pt3dadd( 7.71004, 116.174, -7.47221, 2.76 ) }
    dend_9 { pt3dadd( 7.08074, 118.026, -7.5384, 0.48 ) }
    dend_9 { pt3dadd( 5.70818, 121.565, -6.92722, 0.48 ) }
    dend_9 { pt3dadd( 5.44349, 122.322, -6.89673, 0.48 ) }
    dend_9 { pt3dadd( 5.36126, 122.81, -7.09848, 0.48 ) }
    dend_9 { pt3dadd( 5.38563, 123.348, -7.53271, 0.36 ) }
    dend_9 { pt3dadd( 5.57469, 124.296, -8.54744, 0.36 ) }
    dend_9 { pt3dadd( 5.89496, 125.221, -9.68616, 0.36 ) }
    dend_9 { pt3dadd( 6.42191, 126.492, -11.222, 2.16 ) }
    dend_9 { pt3dadd( 6.66682, 126.96, -11.7849, 3.0 ) }
    dend_9 { pt3dadd( 6.79053, 127.17, -12.0202, 3.12 ) }
    dend_9 { pt3dadd( 7.40022, 128.085, -12.9732, 3.0 ) }
    dend_9 { pt3dadd( 8.35436, 129.453, -14.2667, 0.12 ) }
    dend_9 { pt3dadd( 8.79404, 130.103, -14.8159, 0.12 ) }
    dend_9 { pt3dadd( 8.91883, 130.3, -14.962, 0.12 ) }
    dend_9 { pt3dadd( 9.48419, 131.156, -15.6271, 2.52 ) }
    dend_9 { pt3dadd( 9.71669, 131.505, -15.883, 2.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 32/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 21.0821, 64.1021, 8.44485, 0.6 ) }
    dend_7 { pt3dadd( 20.0555, 64.6639, 9.60581, 0.6 ) }
    dend_7 { pt3dadd( 19.6566, 64.8822, 10.0569, 0.6 ) }
    dend_7 { pt3dadd( 19.0926, 65.1909, 10.6947, 0.24 ) }
    dend_7 { pt3dadd( 18.7076, 65.4015, 11.13, 0.24 ) }
    dend_7 { pt3dadd( 18.3013, 65.6239, 11.5896, 0.36 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 21.0821, 64.1021, 8.44485, 0.6 ) }
    dend_4 { pt3dadd( 21.5654, 64.9684, 8.82587, 0.6 ) }
    dend_4 { pt3dadd( 22.1169, 66.0428, 9.28968, 0.72 ) }
    dend_4 { pt3dadd( 22.487, 66.8205, 9.59475, 1.08 ) }
    dend_4 { pt3dadd( 22.6896, 67.2696, 9.73912, 1.44 ) }
    dend_4 { pt3dadd( 22.9285, 67.8186, 9.91808, 1.56 ) }
    dend_4 { pt3dadd( 23.3064, 68.6986, 10.1902, 1.44 ) }
    dend_4 { pt3dadd( 23.8056, 69.9387, 10.5475, 1.56 ) }
    dend_4 { pt3dadd( 24.1056, 70.7576, 10.7671, 1.68 ) }
    dend_4 { pt3dadd( 24.3439, 71.4687, 11.0, 1.68 ) }
    dend_4 { pt3dadd( 24.5802, 72.2146, 11.2794, 1.68 ) }
    dend_4 { pt3dadd( 24.9177, 73.3544, 11.7405, 0.6 ) }
    dend_4 { pt3dadd( 25.1506, 74.2235, 12.1039, 0.36 ) }
    dend_4 { pt3dadd( 25.342, 74.8991, 12.3351, 0.36 ) }
    dend_4 { pt3dadd( 25.61, 75.7931, 12.6038, 1.44 ) }
    dend_4 { pt3dadd( 25.7649, 76.2595, 12.7221, 1.56 ) }
    dend_4 { pt3dadd( 26.0295, 76.9998, 12.8339, 1.56 ) }
    dend_4 { pt3dadd( 26.1685, 77.3592, 12.8543, 1.44 ) }
    dend_4 { pt3dadd( 26.69, 78.6122, 12.89, 0.72 ) }
    dend_4 { pt3dadd( 26.9082, 79.0781, 12.9071, 0.6 ) }
    dend_4 { pt3dadd( 27.2923, 79.8262, 12.9485, 1.2 ) }
    dend_4 { pt3dadd( 27.4819, 80.169, 12.987, 1.32 ) }
    dend_4 { pt3dadd( 27.9467, 80.9304, 13.1065, 0.84 ) }
    dend_4 { pt3dadd( 28.7442, 82.1007, 13.4014, 1.08 ) }
    dend_4 { pt3dadd( 29.3032, 82.8439, 13.6559, 0.96 ) }
    dend_4 { pt3dadd( 29.7894, 83.4194, 13.8482, 0.48 ) }
    dend_4 { pt3dadd( 30.1918, 83.8693, 13.9875, 0.48 ) }
    dend_4 { pt3dadd( 30.6665, 84.367, 14.1268, 0.6 ) }
    dend_4 { pt3dadd( 31.399, 85.1014, 14.2942, 0.96 ) }
    dend_4 { pt3dadd( 31.642, 85.3479, 14.3387, 0.96 ) }
    dend_4 { pt3dadd( 32.5219, 86.3156, 14.5073, 1.68 ) }
    dend_4 { pt3dadd( 33.3434, 87.3007, 14.6582, 2.28 ) }
    dend_4 { pt3dadd( 34.018, 88.2028, 14.7862, 2.16 ) }
    dend_4 { pt3dadd( 34.4399, 88.8778, 14.8698, 1.92 ) }
    dend_4 { pt3dadd( 34.9236, 89.8493, 14.9345, 0.6 ) }
    dend_4 { pt3dadd( 35.3349, 90.9469, 14.962, 0.6 ) }
    dend_4 { pt3dadd( 35.5454, 91.638, 14.9735, 0.6 ) }
    dend_4 { pt3dadd( 35.7131, 92.3731, 14.9597, 0.48 ) }
    dend_4 { pt3dadd( 35.8839, 93.6334, 14.8969, 0.48 ) }
    dend_4 { pt3dadd( 35.9551, 94.835, 14.7781, 0.48 ) }
    dend_4 { pt3dadd( 35.9271, 95.9027, 14.5584, 1.2 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 79/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 4.20705, 118.497, -21.5516, 0.48 ) }
    dend_60 { pt3dadd( 4.21732, 120.225, -21.2073, 0.48 ) }
    dend_60 { pt3dadd( 4.24769, 120.783, -21.0662, 0.12 ) }
    dend_60 { pt3dadd( 4.31864, 121.9, -20.7679, 0.36 ) }
    dend_60 { pt3dadd( 4.38077, 122.737, -20.545, 0.48 ) }
    dend_60 { pt3dadd( 4.44064, 123.344, -20.3882, 0.48 ) }
    dend_60 { pt3dadd( 4.52922, 124.101, -20.204, 0.48 ) }
    dend_60 { pt3dadd( 4.75556, 125.379, -19.9367, 1.68 ) }
    dend_60 { pt3dadd( 4.84141, 125.753, -19.8836, 2.16 ) }
    dend_60 { pt3dadd( 4.97512, 126.252, -19.8566, 2.4 ) }
    dend_60 { pt3dadd( 5.14901, 126.846, -19.8499, 2.4 ) }
    dend_60 { pt3dadd( 5.37067, 127.565, -19.8328, 1.92 ) }
    dend_60 { pt3dadd( 5.70964, 128.644, -19.8094, 0.12 ) }
    dend_60 { pt3dadd( 5.853, 129.07, -19.8064, 0.24 ) }
    dend_60 { pt3dadd( 5.98343, 129.455, -19.7894, 0.24 ) }
    dend_60 { pt3dadd( 6.25893, 130.287, -19.7217, 0.48 ) }
    dend_60 { pt3dadd( 6.60299, 131.337, -19.5948, 0.48 ) }
    dend_60 { pt3dadd( 6.71527, 131.68, -19.5403, 1.32 ) }
    dend_60 { pt3dadd( 6.91431, 132.264, -19.4339, 1.68 ) }
    dend_60 { pt3dadd( 7.11691, 132.841, -19.3632, 1.8 ) }
    dend_60 { pt3dadd( 7.30555, 133.367, -19.3323, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_60 { pt3dadd( 7.42336, 133.693, -19.3409, 1.92 ) }
    dend_60 { pt3dadd( 7.70841, 134.517, -19.4215, 0.48 ) }
    dend_60 { pt3dadd( 8.04744, 135.528, -19.5783, 0.48 ) }
    dend_60 { pt3dadd( 8.32558, 136.417, -19.7343, 0.72 ) }
    dend_60 { pt3dadd( 8.61384, 137.387, -19.8913, 0.72 ) }
    dend_60 { pt3dadd( 8.87965, 138.327, -20.1524, 0.36 ) }
    dend_60 { pt3dadd( 9.05843, 139.012, -20.4058, 0.36 ) }
    dend_60 { pt3dadd( 9.25191, 139.884, -20.7822, 0.72 ) }
    dend_60 { pt3dadd( 9.41143, 140.756, -21.124, 1.08 ) }
    dend_60 { pt3dadd( 9.55142, 141.608, -21.4081, 1.32 ) }
    dend_60 { pt3dadd( 9.92399, 144.337, -22.1262, 0.48 ) }
    dend_60 { pt3dadd( 10.0053, 145.078, -22.2535, 0.36 ) }
    dend_60 { pt3dadd( 10.1287, 146.437, -22.373, 0.36 ) }
    dend_60 { pt3dadd( 10.2649, 148.288, -22.4643, 0.36 ) }
    dend_60 { pt3dadd( 10.3131, 148.917, -22.4915, 1.92 ) }
    dend_60 { pt3dadd( 10.4144, 149.802, -22.5016, 3.0 ) }
    dend_60 { pt3dadd( 10.5151, 150.411, -22.4721, 3.25 ) }
    dend_60 { pt3dadd( 10.727, 151.392, -22.492, 3.25 ) }
    dend_60 { pt3dadd( 11.2047, 153.28, -22.6632, 0.36 ) }
    dend_60 { pt3dadd( 11.388, 153.98, -22.7707, 0.48 ) }
    dend_60 { pt3dadd( 11.7634, 155.43, -22.9943, 0.48 ) }
    dend_60 { pt3dadd( 12.0406, 156.56, -23.1629, 0.48 ) }
    dend_60 { pt3dadd( 12.256, 157.627, -23.3105, 0.48 ) }
    dend_60 { pt3dadd( 12.328, 158.122, -23.3681, 0.96 ) }
    dend_60 { pt3dadd( 12.3795, 158.627, -23.4077, 1.2 ) }
    dend_60 { pt3dadd( 12.44, 159.54, -23.4692, 0.84 ) }
    dend_60 { pt3dadd( 12.4937, 160.669, -23.5326, 0.48 ) }
    dend_60 { pt3dadd( 12.5713, 161.816, -23.5785, 0.36 ) }
    dend_60 { pt3dadd( 12.6824, 162.69, -23.5982, 0.36 ) }
    dend_60 { pt3dadd( 12.9223, 163.842, -23.6259, 0.36 ) }
    dend_60 { pt3dadd( 13.1223, 164.551, -23.6559, 1.32 ) }
    dend_60 { pt3dadd( 13.4586, 165.564, -23.7109, 2.28 ) }
    dend_60 { pt3dadd( 13.6846, 166.188, -23.7505, 2.76 ) }
    dend_60 { pt3dadd( 13.9935, 167.036, -23.81, 2.4 ) }
    dend_60 { pt3dadd( 14.5436, 168.722, -23.9409, 1.08 ) }
    dend_60 { pt3dadd( 14.875, 169.934, -24.0368, 0.36 ) }
    dend_60 { pt3dadd( 15.0857, 170.903, -24.1075, 0.36 ) }
    dend_60 { pt3dadd( 15.2607, 171.914, -24.1962, 1.68 ) }
    dend_60 { pt3dadd( 15.346, 172.537, -24.2565, 2.28 ) }
    dend_60 { pt3dadd( 15.4472, 173.534, -24.3273, 2.4 ) }
    dend_60 { pt3dadd( 15.5576, 175.076, -24.396, 1.68 ) }
    dend_60 { pt3dadd( 15.6717, 176.941, -24.4257, 1.08 ) }
    dend_60 { pt3dadd( 15.7221, 177.848, -24.4345, 0.6 ) }
    dend_60 { pt3dadd( 15.7519, 178.603, -24.4404, 0.6 ) }
    dend_60 { pt3dadd( 15.8056, 179.863, -24.4493, 1.44 ) }
    dend_60 { pt3dadd( 15.8349, 180.482, -24.4594, 1.8 ) }
    dend_60 { pt3dadd( 15.8731, 181.237, -24.4848, 1.8 ) }
    dend_60 { pt3dadd( 15.9504, 182.262, -24.5297, 0.48 ) }
    dend_60 { pt3dadd( 16.0976, 183.757, -24.5942, 0.48 ) }
    dend_60 { pt3dadd( 16.2445, 185.086, -24.7231, 1.2 ) }
    dend_60 { pt3dadd( 16.4421, 186.604, -24.9355, 1.68 ) }
    dend_60 { pt3dadd( 16.6078, 187.65, -25.0922, 2.28 ) }
    dend_60 { pt3dadd( 16.859, 189.149, -25.3065, 2.52 ) }
    dend_60 { pt3dadd( 17.1851, 191.139, -25.5358, 1.2 ) }
    dend_60 { pt3dadd( 17.3783, 192.466, -25.618, 0.6 ) }
    dend_60 { pt3dadd( 17.4636, 193.297, -25.6185, 0.48 ) }
    dend_60 { pt3dadd( 17.522, 194.523, -25.5215, 0.48 ) }
    dend_60 { pt3dadd( 17.5209, 195.511, -25.341, 0.48 ) }
    dend_60 { pt3dadd( 17.484, 196.503, -25.0559, 0.48 ) }
    dend_60 { pt3dadd( 17.4309, 197.658, -24.6156, 0.48 ) }
    dend_60 { pt3dadd( 17.4145, 198.348, -24.3231, 0.48 ) }
    dend_60 { pt3dadd( 17.4293, 199.069, -24.1053, 0.48 ) }
    dend_60 { pt3dadd( 17.5221, 200.084, -23.9701, 1.08 ) }
    dend_60 { pt3dadd( 17.6927, 201.023, -24.0113, 1.68 ) }
    dend_60 { pt3dadd( 17.8653, 201.776, -24.1436, 2.04 ) }
    dend_60 { pt3dadd( 18.0496, 202.482, -24.3226, 2.04 ) }
    dend_60 { pt3dadd( 18.5875, 204.444, -24.8719, 0.96 ) }
    dend_60 { pt3dadd( 18.7828, 205.174, -25.0911, 0.48 ) }
    dend_60 { pt3dadd( 18.9625, 205.869, -25.3095, 0.48 ) }
    dend_60 { pt3dadd( 19.2211, 206.924, -25.6067, 1.56 ) }
    dend_60 { pt3dadd( 19.3058, 207.328, -25.6971, 2.16 ) }
    dend_60 { pt3dadd( 19.4689, 208.159, -25.9233, 2.64 ) }
    dend_60 { pt3dadd( 19.5767, 208.744, -26.0819, 2.64 ) }
    dend_60 { pt3dadd( 19.7215, 209.495, -26.3224, 3.12 ) }
    dend_60 { pt3dadd( 19.8645, 210.175, -26.5768, 3.12 ) }
    dend_60 { pt3dadd( 20.1591, 211.455, -27.0848, 0.6 ) }
    dend_60 { pt3dadd( 20.7144, 213.656, -27.939, 0.48 ) }
    dend_60 { pt3dadd( 20.9449, 214.482, -28.2402, 0.36 ) }
    dend_60 { pt3dadd( 21.0939, 214.987, -28.4003, 0.36 ) }
    dend_60 { pt3dadd( 21.3475, 215.877, -28.5877, 0.96 ) }
    dend_60 { pt3dadd( 21.6707, 217.006, -28.7051, 0.96 ) }
    dend_60 { pt3dadd( 21.9619, 218.086, -28.6971, 0.72 ) }
    dend_60 { pt3dadd( 22.1469, 218.969, -28.6216, 0.48 ) }
    dend_60 { pt3dadd( 22.3313, 220.102, -28.5655, 0.48 ) }
    dend_60 { pt3dadd( 22.5431, 221.834, -28.5322, 1.2 ) }
    dend_60 { pt3dadd( 22.6223, 222.711, -28.5411, 1.68 ) }
    dend_60 { pt3dadd( 22.6961, 223.831, -28.5818, 2.04 ) }
    dend_60 { pt3dadd( 22.7681, 225.05, -28.6546, 1.8 ) }
    dend_60 { pt3dadd( 22.8682, 226.573, -28.7806, 0.6 ) }
    dend_60 { pt3dadd( 22.9483, 227.579, -28.8891, 0.48 ) }
    dend_60 { pt3dadd( 23.0727, 228.826, -29.0597, 0.48 ) }
    dend_60 { pt3dadd( 23.2294, 230.058, -29.2249, 0.48 ) }
    dend_60 { pt3dadd( 23.3488, 230.768, -29.3072, 0.48 ) }
    dend_60 { pt3dadd( 23.4838, 231.393, -29.3533, 1.08 ) }
    dend_60 { pt3dadd( 23.6865, 232.247, -29.3707, 1.32 ) }
    dend_60 { pt3dadd( 23.8129, 232.733, -29.3787, 1.32 ) }
    dend_60 { pt3dadd( 24.066, 233.607, -29.3735, 0.72 ) }
    dend_60 { pt3dadd( 24.2348, 234.149, -29.3748, 0.48 ) }
    dend_60 { pt3dadd( 24.4717, 234.922, -29.3812, 0.72 ) }
    dend_60 { pt3dadd( 24.7331, 235.771, -29.4093, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_60 { pt3dadd( 25.0085, 236.686, -29.4731, 1.32 ) }
    dend_60 { pt3dadd( 25.3239, 237.786, -29.5901, 0.48 ) }
    dend_60 { pt3dadd( 25.5765, 238.748, -29.7606, 0.48 ) }
    dend_60 { pt3dadd( 25.8232, 239.691, -29.9811, 0.48 ) }
    dend_60 { pt3dadd( 26.0972, 240.733, -30.2567, 1.44 ) }
    dend_60 { pt3dadd( 26.3352, 241.651, -30.5012, 2.28 ) }
    dend_60 { pt3dadd( 26.6174, 242.765, -30.787, 1.92 ) }
    dend_60 { pt3dadd( 27.0162, 244.355, -31.1667, 0.48 ) }
    dend_60 { pt3dadd( 27.3255, 245.577, -31.3995, 0.48 ) }
    dend_60 { pt3dadd( 27.544, 246.458, -31.5101, 0.72 ) }
    dend_60 { pt3dadd( 27.6902, 247.116, -31.5374, 0.48 ) }
    dend_60 { pt3dadd( 27.8042, 247.782, -31.5029, 0.36 ) }
    dend_60 { pt3dadd( 27.8954, 248.807, -31.4826, 0.36 ) }
    dend_60 { pt3dadd( 27.8956, 249.811, -31.5345, 0.36 ) }
    dend_60 { pt3dadd( 27.8138, 250.915, -31.7054, 1.8 ) }
    dend_60 { pt3dadd( 27.6833, 252.007, -31.9619, 3.0 ) }
    dend_60 { pt3dadd( 27.5138, 253.078, -32.2785, 3.25 ) }
    dend_60 { pt3dadd( 26.9767, 255.696, -33.2527, 1.8 ) }
    dend_60 { pt3dadd( 26.7195, 256.787, -33.7261, 0.48 ) }
    dend_60 { pt3dadd( 26.5632, 257.437, -34.0376, 0.48 ) }
    dend_60 { pt3dadd( 26.4678, 257.89, -34.2606, 0.72 ) }
    dend_60 { pt3dadd( 26.3754, 258.493, -34.5203, 0.48 ) }
    dend_60 { pt3dadd( 26.3173, 259.682, -34.8694, 0.36 ) }
    dend_60 { pt3dadd( 26.3853, 260.673, -34.9525, 0.36 ) }
    dend_60 { pt3dadd( 26.4763, 261.308, -34.9641, 0.72 ) }
    dend_60 { pt3dadd( 26.6844, 262.441, -34.929, 1.08 ) }
    dend_60 { pt3dadd( 26.871, 263.364, -34.8656, 1.2 ) }
    dend_60 { pt3dadd( 27.1734, 264.783, -34.692, 0.72 ) }
    dend_60 { pt3dadd( 27.4617, 266.122, -34.4668, 0.36 ) }
    dend_60 { pt3dadd( 27.6438, 267.004, -34.3093, 0.36 ) }
    dend_60 { pt3dadd( 27.8598, 268.187, -34.0728, 0.36 ) }
    dend_60 { pt3dadd( 28.0315, 269.277, -33.8407, 0.36 ) }
    dend_60 { pt3dadd( 28.1891, 270.518, -33.6174, 1.92 ) }
    dend_60 { pt3dadd( 28.2557, 271.271, -33.4994, 2.76 ) }
    dend_60 { pt3dadd( 28.2699, 271.51, -33.4691, 3.12 ) }
    dend_60 { pt3dadd( 28.3347, 272.704, -33.3482, 2.76 ) }
    dend_60 { pt3dadd( 28.3577, 273.101, -33.3244, 2.76 ) }
    dend_60 { pt3dadd( 28.4527, 274.591, -33.2662, 0.48 ) }
    dend_60 { pt3dadd( 28.5203, 275.712, -33.256, 0.48 ) }
    dend_60 { pt3dadd( 28.5522, 276.335, -33.2522, 0.96 ) }
    dend_60 { pt3dadd( 28.5789, 276.918, -33.2516, 0.6 ) }
    dend_60 { pt3dadd( 28.6074, 277.663, -33.2574, 0.48 ) }
    dend_60 { pt3dadd( 28.6319, 278.299, -33.2463, 0.36 ) }
    dend_60 { pt3dadd( 28.7117, 279.798, -33.1282, 0.36 ) }
    dend_60 { pt3dadd( 28.7553, 280.426, -33.0714, 0.48 ) }
    dend_60 { pt3dadd( 28.8121, 281.051, -33.0218, 0.36 ) }
    dend_60 { pt3dadd( 28.8991, 281.788, -32.9581, 0.36 ) }
    dend_60 { pt3dadd( 28.9703, 282.334, -32.9022, 0.36 ) }
    dend_60 { pt3dadd( 29.1082, 283.311, -32.8418, 1.2 ) }
    dend_60 { pt3dadd( 29.1862, 283.925, -32.8341, 2.04 ) }
    dend_60 { pt3dadd( 29.263, 284.647, -32.8193, 2.16 ) }
    dend_60 { pt3dadd( 29.3334, 285.554, -32.7995, 1.68 ) }
    dend_60 { pt3dadd( 29.3823, 286.558, -32.7807, 0.48 ) }
    dend_60 { pt3dadd( 29.4263, 287.712, -32.7667, 0.36 ) }
    dend_60 { pt3dadd( 29.4962, 289.961, -32.7378, 0.36 ) }
    dend_60 { pt3dadd( 29.5305, 290.986, -32.7126, 1.2 ) }
    dend_60 { pt3dadd( 29.5538, 291.505, -32.7035, 0.84 ) }
    dend_60 { pt3dadd( 29.5997, 292.249, -32.7039, 0.48 ) }
    dend_60 { pt3dadd( 29.7279, 293.589, -32.741, 0.36 ) }
    dend_60 { pt3dadd( 29.8, 294.161, -32.7975, 0.36 ) }
    dend_60 { pt3dadd( 29.9104, 294.812, -32.9455, 1.44 ) }
    dend_60 { pt3dadd( 30.0733, 295.74, -33.22, 1.92 ) }
    dend_60 { pt3dadd( 30.177, 296.32, -33.3993, 2.04 ) }
    dend_60 { pt3dadd( 30.3528, 297.295, -33.6989, 2.04 ) }
    dend_60 { pt3dadd( 30.5894, 298.714, -34.0526, 0.48 ) }
    dend_60 { pt3dadd( 30.8247, 300.302, -34.3431, 0.48 ) }
    dend_60 { pt3dadd( 30.9084, 300.912, -34.4102, 0.6 ) }
    dend_60 { pt3dadd( 30.9566, 301.315, -34.4262, 0.48 ) }
    dend_60 { pt3dadd( 31.0848, 302.493, -34.4236, 0.48 ) }
    dend_60 { pt3dadd( 31.227, 304.133, -34.3209, 2.64 ) }
    dend_60 { pt3dadd( 31.2954, 305.151, -34.1975, 3.49 ) }
    dend_60 { pt3dadd( 31.3161, 305.591, -34.1383, 3.49 ) }
    dend_60 { pt3dadd( 31.3424, 306.227, -34.0537, 3.49 ) }
    dend_60 { pt3dadd( 31.4054, 307.999, -33.8354, 0.48 ) }
    dend_60 { pt3dadd( 31.4441, 309.16, -33.6973, 0.72 ) }
    dend_60 { pt3dadd( 31.4823, 309.988, -33.6137, 0.48 ) }
    dend_60 { pt3dadd( 31.5276, 310.617, -33.5477, 0.48 ) }
    dend_60 { pt3dadd( 31.6017, 311.432, -33.4636, 1.32 ) }
    dend_60 { pt3dadd( 31.674, 311.933, -33.4148, 1.56 ) }
    dend_60 { pt3dadd( 31.833, 312.667, -33.346, 1.56 ) }
    dend_60 { pt3dadd( 32.036, 313.391, -33.3075, 0.48 ) }
    dend_60 { pt3dadd( 32.3036, 314.254, -33.2883, 0.48 ) }
    dend_60 { pt3dadd( 32.501, 314.889, -33.2695, 0.6 ) }
    dend_60 { pt3dadd( 32.7798, 315.852, -33.2331, 0.6 ) }
    dend_60 { pt3dadd( 32.9922, 316.647, -33.1983, 0.36 ) }
    dend_60 { pt3dadd( 33.1487, 317.295, -33.1783, 0.36 ) }
    dend_60 { pt3dadd( 33.3101, 318.159, -33.1646, 0.36 ) }
    dend_60 { pt3dadd( 33.3875, 318.85, -33.1785, 1.32 ) }
    dend_60 { pt3dadd( 33.4158, 319.482, -33.197, 1.56 ) }
    dend_60 { pt3dadd( 33.4023, 319.985, -33.2097, 1.32 ) }
    dend_60 { pt3dadd( 33.3656, 320.605, -33.223, 0.36 ) }
    dend_60 { pt3dadd( 33.3358, 321.512, -33.2326, 0.36 ) }
    dend_60 { pt3dadd( 33.3484, 322.241, -33.2391, 1.2 ) }
    dend_60 { pt3dadd( 33.4106, 323.009, -33.257, 1.2 ) }
    dend_60 { pt3dadd( 33.5206, 323.909, -33.2882, 0.36 ) }
    dend_60 { pt3dadd( 33.6566, 324.777, -33.3228, 0.36 ) }
    dend_60 { pt3dadd( 33.8256, 325.667, -33.357, 0.48 ) }
    dend_60 { pt3dadd( 33.9694, 326.331, -33.406, 0.48 ) }
    dend_60 { pt3dadd( 34.1736, 327.258, -33.5033, 0.48 ) }
    dend_60 { pt3dadd( 34.2275, 327.502, -33.5414, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( 34.365, 328.108, -33.6463, 0.72 ) }
    dend_60 { pt3dadd( 34.5578, 328.963, -33.7863, 0.72 ) }
    dend_60 { pt3dadd( 34.655, 329.422, -33.844, 0.48 ) }
    dend_60 { pt3dadd( 34.8162, 330.167, -33.9052, 0.48 ) }
    dend_60 { pt3dadd( 35.0114, 331.05, -33.9401, 1.08 ) }
    dend_60 { pt3dadd( 35.1916, 331.814, -33.937, 1.68 ) }
    dend_60 { pt3dadd( 35.3654, 332.516, -33.9197, 1.68 ) }
    dend_60 { pt3dadd( 35.5513, 333.289, -33.901, 0.84 ) }
    dend_60 { pt3dadd( 35.6721, 333.782, -33.9048, 0.72 ) }
    dend_60 { pt3dadd( 35.908, 334.751, -34.0098, 0.72 ) }
    dend_60 { pt3dadd( 36.1627, 335.807, -34.2079, 1.32 ) }
    dend_60 { pt3dadd( 36.3092, 336.425, -34.3592, 2.4 ) }
    dend_60 { pt3dadd( 36.5158, 337.323, -34.6189, 2.76 ) }
    dend_60 { pt3dadd( 36.7101, 338.217, -34.8957, 2.04 ) }
    dend_60 { pt3dadd( 37.0298, 339.779, -35.3776, 0.48 ) }
    dend_60 { pt3dadd( 37.1731, 340.515, -35.6001, 0.48 ) }
    dend_60 { pt3dadd( 37.2832, 341.121, -35.7702, 0.6 ) }
    dend_60 { pt3dadd( 37.3475, 341.473, -35.8473, 0.48 ) }
    dend_60 { pt3dadd( 37.6157, 342.932, -36.0525, 0.48 ) }
    dend_60 { pt3dadd( 37.7225, 343.553, -36.0894, 0.72 ) }
    dend_60 { pt3dadd( 37.8452, 344.182, -36.0763, 1.08 ) }
    dend_60 { pt3dadd( 37.9515, 344.679, -36.0584, 0.72 ) }
    dend_60 { pt3dadd( 38.1055, 345.336, -36.0119, 0.48 ) }
    dend_60 { pt3dadd( 38.2492, 345.949, -35.978, 0.24 ) }
    dend_60 { pt3dadd( 38.4056, 346.597, -35.9514, 0.24 ) }
    dend_60 { pt3dadd( 38.7749, 348.22, -35.9374, 3.12 ) }
    dend_60 { pt3dadd( 38.8832, 348.701, -35.9445, 3.37 ) }
    dend_60 { pt3dadd( 39.0761, 349.572, -35.9733, 3.0 ) }
    dend_60 { pt3dadd( 39.3803, 351.206, -36.0515, 0.48 ) }
    dend_60 { pt3dadd( 39.5502, 352.375, -36.1234, 0.48 ) }
    dend_60 { pt3dadd( 39.6741, 353.445, -36.1844, 0.84 ) }
    dend_60 { pt3dadd( 39.7471, 354.174, -36.2198, 0.48 ) }
    dend_60 { pt3dadd( 39.8807, 355.307, -36.213, 0.48 ) }
    dend_60 { pt3dadd( 40.0664, 356.637, -36.1294, 0.48 ) }
    dend_60 { pt3dadd( 40.1544, 357.165, -36.0516, 0.48 ) }
    dend_60 { pt3dadd( 40.3246, 358.126, -35.8667, 0.48 ) }
    dend_60 { pt3dadd( 40.4444, 358.706, -35.7327, 0.96 ) }
    dend_60 { pt3dadd( 40.7066, 359.817, -35.5063, 1.56 ) }
    dend_60 { pt3dadd( 40.8332, 360.241, -35.4191, 1.56 ) }
    dend_60 { pt3dadd( 41.1156, 361.028, -35.332, 0.48 ) }
    dend_60 { pt3dadd( 41.1964, 361.265, -35.3373, 0.36 ) }
    dend_60 { pt3dadd( 41.3843, 362.02, -35.4351, 0.36 ) }
    dend_60 { pt3dadd( 41.6153, 363.164, -35.6368, 1.8 ) }
    dend_60 { pt3dadd( 41.753, 363.949, -35.7957, 2.64 ) }
    dend_60 { pt3dadd( 41.9954, 365.428, -36.0749, 1.56 ) }
    dend_60 { pt3dadd( 42.1695, 366.498, -36.2478, 0.36 ) }
    dend_60 { pt3dadd( 42.369, 367.7, -36.4219, 0.48 ) }
    dend_60 { pt3dadd( 42.6082, 369.185, -36.5575, 0.48 ) }
    dend_60 { pt3dadd( 42.6852, 369.686, -36.6004, 0.48 ) }
    dend_60 { pt3dadd( 42.8181, 370.437, -36.6602, 1.32 ) }
    dend_60 { pt3dadd( 42.9094, 370.834, -36.669, 1.68 ) }
    dend_60 { pt3dadd( 43.0655, 371.362, -36.6411, 1.92 ) }
    dend_60 { pt3dadd( 43.4881, 372.712, -36.5426, 0.84 ) }
    dend_60 { pt3dadd( 43.8394, 374.062, -36.4251, 0.48 ) }
    dend_60 { pt3dadd( 44.0777, 375.183, -36.2994, 0.48 ) }
    dend_60 { pt3dadd( 44.177, 375.792, -36.2233, 0.48 ) }
    dend_60 { pt3dadd( 44.3289, 377.13, -36.055, 0.48 ) }
    dend_60 { pt3dadd( 44.412, 378.432, -35.8454, 0.72 ) }
    dend_60 { pt3dadd( 44.4348, 379.297, -35.6865, 1.32 ) }
    dend_60 { pt3dadd( 44.433, 380.151, -35.503, 0.84 ) }
    dend_60 { pt3dadd( 44.4151, 380.765, -35.3622, 0.36 ) }
    dend_60 { pt3dadd( 44.4048, 381.501, -35.1968, 0.36 ) }
    dend_60 { pt3dadd( 44.4397, 382.457, -34.9904, 0.84 ) }
    dend_60 { pt3dadd( 44.5028, 382.966, -34.8627, 0.36 ) }
    dend_60 { pt3dadd( 44.6999, 384.034, -34.5606, 0.36 ) }
    dend_60 { pt3dadd( 44.9888, 385.265, -34.2078, 0.84 ) }
    dend_60 { pt3dadd( 45.1308, 385.783, -34.0524, 0.84 ) }
    dend_60 { pt3dadd( 45.3086, 386.373, -33.8956, 0.36 ) }
    dend_60 { pt3dadd( 45.7021, 387.614, -33.6315, 0.36 ) }
    dend_60 { pt3dadd( 45.9229, 388.36, -33.5043, 1.2 ) }
    dend_60 { pt3dadd( 46.1509, 389.229, -33.4062, 2.16 ) }
    dend_60 { pt3dadd( 46.2095, 389.504, -33.3968, 2.28 ) }
    dend_60 { pt3dadd( 46.4848, 390.938, -33.3912, 0.6 ) }
    dend_60 { pt3dadd( 46.6015, 391.588, -33.3933, 0.36 ) }
    dend_60 { pt3dadd( 46.7476, 392.36, -33.3938, 0.36 ) }
    dend_60 { pt3dadd( 46.8505, 392.802, -33.394, 0.36 ) }
    dend_60 { pt3dadd( 46.9787, 393.276, -33.3782, 0.36 ) }
    dend_60 { pt3dadd( 47.371, 394.563, -33.2963, 0.36 ) }
    dend_60 { pt3dadd( 47.6639, 395.454, -33.2214, 1.08 ) }
    dend_60 { pt3dadd( 47.9902, 396.407, -33.1454, 1.56 ) }
    dend_60 { pt3dadd( 48.3821, 397.51, -33.0723, 0.72 ) }
    dend_60 { pt3dadd( 48.51, 397.899, -33.056, 0.48 ) }
    dend_60 { pt3dadd( 48.7546, 398.769, -33.0399, 0.48 ) }
    dend_60 { pt3dadd( 48.9702, 399.765, -33.048, 1.68 ) }
    dend_60 { pt3dadd( 49.115, 400.515, -33.0903, 2.52 ) }
    dend_60 { pt3dadd( 49.2794, 401.399, -33.1932, 1.92 ) }
    dend_60 { pt3dadd( 49.519, 402.615, -33.3872, 0.72 ) }
    dend_60 { pt3dadd( 49.6834, 403.324, -33.5323, 0.6 ) }
    dend_60 { pt3dadd( 49.9667, 404.377, -33.802, 0.6 ) }
    dend_60 { pt3dadd( 50.3916, 405.736, -34.1871, 0.6 ) }
    dend_60 { pt3dadd( 50.8127, 407.006, -34.5627, 1.44 ) }
    dend_60 { pt3dadd( 51.0064, 407.567, -34.7295, 1.92 ) }
    dend_60 { pt3dadd( 51.3871, 408.66, -35.0268, 0.96 ) }
    dend_60 { pt3dadd( 51.6499, 409.45, -35.2085, 0.36 ) }
    dend_60 { pt3dadd( 51.9147, 410.366, -35.3397, 0.36 ) }
    dend_60 { pt3dadd( 52.0988, 411.129, -35.3719, 0.36 ) }
    dend_60 { pt3dadd( 52.2645, 411.864, -35.3401, 0.72 ) }
    dend_60 { pt3dadd( 52.4701, 412.77, -35.3594, 0.36 ) }
    dend_60 { pt3dadd( 52.6579, 413.54, -35.4123, 0.24 ) }
    dend_60 { pt3dadd( 53.0007, 414.777, -35.5639, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_60 { pt3dadd( 53.074, 415.012, -35.6109, 2.04 ) }
    dend_60 { pt3dadd( 53.4173, 416.002, -35.8546, 1.92 ) }
    dend_60 { pt3dadd( 54.2056, 418.097, -36.4525, 0.48 ) }
    dend_60 { pt3dadd( 54.5381, 418.937, -36.7119, 0.48 ) }
    dend_60 { pt3dadd( 54.8729, 419.775, -36.9761, 0.72 ) }
    dend_60 { pt3dadd( 55.3325, 420.964, -37.3394, 0.84 ) }
    dend_60 { pt3dadd( 55.8365, 422.392, -37.7439, 0.36 ) }
    dend_60 { pt3dadd( 56.0124, 422.951, -37.879, 0.24 ) }
    dend_60 { pt3dadd( 56.2369, 423.815, -38.0169, 1.2 ) }
    dend_60 { pt3dadd( 56.2919, 424.087, -38.0603, 1.68 ) }
    dend_60 { pt3dadd( 56.4319, 425.061, -38.209, 1.56 ) }
    dend_60 { pt3dadd( 56.5241, 426.065, -38.3443, 0.36 ) }
    dend_60 { pt3dadd( 56.5547, 426.805, -38.4288, 0.36 ) }
    dend_60 { pt3dadd( 56.5809, 428.197, -38.5486, 0.36 ) }
    dend_60 { pt3dadd( 56.5869, 428.819, -38.5917, 1.32 ) }
    dend_60 { pt3dadd( 56.5924, 429.453, -38.6235, 1.8 ) }
    dend_60 { pt3dadd( 56.6011, 429.962, -38.638, 1.68 ) }
    dend_60 { pt3dadd( 56.6274, 431.085, -38.6394, 0.48 ) }
    dend_60 { pt3dadd( 56.6844, 432.59, -38.6423, 0.48 ) }
    dend_60 { pt3dadd( 56.7295, 433.46, -38.6444, 1.8 ) }
    dend_60 { pt3dadd( 56.7547, 434.205, -38.6466, 2.4 ) }
    dend_60 { pt3dadd( 56.7575, 434.725, -38.627, 1.92 ) }
    dend_60 { pt3dadd( 56.7306, 435.957, -38.5067, 0.6 ) }
    dend_60 { pt3dadd( 56.7165, 436.297, -38.4461, 0.6 ) }
    dend_60 { pt3dadd( 56.6479, 437.385, -38.188, 0.6 ) }
    dend_60 { pt3dadd( 56.5834, 438.408, -37.9066, 0.6 ) }
    dend_60 { pt3dadd( 56.4903, 439.812, -37.5256, 0.6 ) }
    dend_60 { pt3dadd( 56.391, 441.281, -37.1627, 0.6 ) }
    dend_60 { pt3dadd( 56.3172, 442.503, -36.9067, 1.56 ) }
    dend_60 { pt3dadd( 56.2813, 443.25, -36.8037, 2.04 ) }
    dend_60 { pt3dadd( 56.2537, 444.049, -36.7648, 1.68 ) }
    dend_60 { pt3dadd( 56.2351, 445.156, -36.8076, 0.84 ) }
    dend_60 { pt3dadd( 56.2163, 446.096, -36.937, 0.48 ) }
    dend_60 { pt3dadd( 56.1385, 447.567, -37.214, 0.48 ) }
    dend_60 { pt3dadd( 56.0377, 448.999, -37.5079, 0.6 ) }
    dend_60 { pt3dadd( 55.9454, 450.071, -37.7104, 1.32 ) }
    dend_60 { pt3dadd( 55.8582, 450.928, -37.8523, 1.44 ) }
    dend_60 { pt3dadd( 55.739, 451.98, -37.992, 0.48 ) }
    dend_60 { pt3dadd( 55.5221, 453.926, -38.2083, 0.48 ) }
    dend_60 { pt3dadd( 55.462, 454.552, -38.2664, 1.32 ) }
    dend_60 { pt3dadd( 55.3877, 455.552, -38.3292, 2.04 ) }
    dend_60 { pt3dadd( 55.3534, 456.306, -38.3726, 1.68 ) }
    dend_60 { pt3dadd( 55.3353, 457.358, -38.4402, 0.6 ) }
    dend_60 { pt3dadd( 55.3498, 458.421, -38.5195, 0.48 ) }
    dend_60 { pt3dadd( 55.4029, 459.566, -38.6272, 0.48 ) }
    dend_60 { pt3dadd( 55.4375, 460.306, -38.7034, 0.48 ) }
    dend_60 { pt3dadd( 55.492, 461.361, -38.8169, 0.72 ) }
    dend_60 { pt3dadd( 55.5308, 462.101, -38.8934, 0.72 ) }
    dend_60 { pt3dadd( 55.5705, 462.699, -38.9451, 0.36 ) }
    dend_60 { pt3dadd( 55.6173, 463.575, -39.0132, 0.36 ) }
    dend_60 { pt3dadd( 55.6822, 464.316, -39.0595, 1.8 ) }
    dend_60 { pt3dadd( 55.8005, 465.051, -39.0892, 2.4 ) }
    dend_60 { pt3dadd( 56.0045, 466.033, -39.1014, 2.4 ) }
    dend_60 { pt3dadd( 56.2743, 467.187, -39.1256, 0.48 ) }
    dend_60 { pt3dadd( 56.3399, 467.46, -39.1321, 0.48 ) }
    dend_60 { pt3dadd( 56.5813, 468.487, -39.2122, 0.48 ) }
    dend_60 { pt3dadd( 56.7988, 469.436, -39.3382, 0.48 ) }
    dend_60 { pt3dadd( 56.9858, 470.422, -39.5436, 0.48 ) }
    dend_60 { pt3dadd( 57.0535, 470.991, -39.699, 1.08 ) }
    dend_60 { pt3dadd( 57.0538, 471.526, -39.8651, 1.92 ) }
    dend_60 { pt3dadd( 56.9706, 472.443, -40.1398, 2.16 ) }
    dend_60 { pt3dadd( 56.8929, 472.942, -40.271, 2.16 ) }
    dend_60 { pt3dadd( 56.6997, 474.106, -40.5312, 0.72 ) }
    dend_60 { pt3dadd( 56.6328, 474.649, -40.6154, 0.48 ) }
    dend_60 { pt3dadd( 56.5439, 475.716, -40.7068, 0.48 ) }
    dend_60 { pt3dadd( 56.5053, 476.719, -40.7508, 0.48 ) }
    dend_60 { pt3dadd( 56.5086, 478.242, -40.7217, 0.48 ) }
    dend_60 { pt3dadd( 56.5435, 478.872, -40.6909, 0.48 ) }
    dend_60 { pt3dadd( 56.6379, 479.774, -40.6153, 1.32 ) }
    dend_60 { pt3dadd( 56.7605, 480.641, -40.534, 1.92 ) }
    dend_60 { pt3dadd( 56.9299, 481.667, -40.389, 1.56 ) }
    dend_60 { pt3dadd( 57.0707, 482.541, -40.2319, 0.36 ) }
    dend_60 { pt3dadd( 57.2456, 483.68, -39.9719, 0.36 ) }
    dend_60 { pt3dadd( 57.378, 484.547, -39.7523, 0.6 ) }
    dend_60 { pt3dadd( 57.5098, 485.37, -39.515, 0.6 ) }
    dend_60 { pt3dadd( 57.709, 486.513, -39.1546, 0.24 ) }
    dend_60 { pt3dadd( 57.8536, 487.215, -38.929, 0.24 ) }
    dend_60 { pt3dadd( 58.098, 488.225, -38.6404, 1.92 ) }
    dend_60 { pt3dadd( 58.2401, 488.745, -38.4904, 2.4 ) }
    dend_60 { pt3dadd( 58.5815, 489.878, -38.1952, 1.92 ) }
    dend_60 { pt3dadd( 58.9035, 490.957, -37.9601, 0.48 ) }
    dend_60 { pt3dadd( 59.1877, 491.974, -37.7891, 0.48 ) }
    dend_60 { pt3dadd( 59.4909, 493.215, -37.6038, 0.48 ) }
    dend_60 { pt3dadd( 59.7168, 494.343, -37.4677, 1.44 ) }
    dend_60 { pt3dadd( 59.9272, 495.58, -37.3376, 2.04 ) }
    dend_60 { pt3dadd( 60.1075, 496.813, -37.2348, 1.08 ) }
    dend_60 { pt3dadd( 60.2327, 497.687, -37.1656, 0.6 ) }
    dend_60 { pt3dadd( 60.3814, 498.672, -37.1022, 0.48 ) }
    dend_60 { pt3dadd( 60.5925, 499.773, -37.0556, 0.48 ) }
    dend_60 { pt3dadd( 60.7456, 500.422, -37.0488, 0.48 ) }
    dend_60 { pt3dadd( 60.9149, 501.067, -37.0424, 0.96 ) }
    dend_60 { pt3dadd( 61.1712, 502.013, -37.0345, 1.44 ) }
    dend_60 { pt3dadd( 61.4504, 503.092, -37.0313, 0.84 ) }
    dend_60 { pt3dadd( 61.6381, 503.872, -37.0313, 0.48 ) }
    dend_60 { pt3dadd( 61.9193, 505.222, -37.0313, 0.48 ) }
    dend_60 { pt3dadd( 62.075, 506.214, -37.0164, 0.6 ) }
    dend_60 { pt3dadd( 62.1904, 507.337, -36.9853, 0.72 ) }
    dend_60 { pt3dadd( 62.2188, 507.968, -36.9607, 0.12 ) }
    dend_60 { pt3dadd( 62.2182, 508.218, -36.9283, 0.12 ) }
    dend_60 { pt3dadd( 62.1901, 509.08, -36.7578, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_60 { pt3dadd( 62.1519, 509.999, -36.5354, 2.28 ) }
    dend_60 { pt3dadd( 62.1195, 510.718, -36.3477, 2.52 ) }
    dend_60 { pt3dadd( 62.0874, 511.323, -36.1844, 2.52 ) }
    dend_60 { pt3dadd( 61.9526, 513.445, -35.6439, 0.72 ) }
    dend_60 { pt3dadd( 61.8374, 515.29, -35.2989, 0.72 ) }
    dend_60 { pt3dadd( 61.7838, 516.278, -35.1286, 0.96 ) }
    dend_60 { pt3dadd( 61.7578, 516.899, -35.0206, 0.6 ) }
    dend_60 { pt3dadd( 61.7382, 517.522, -34.9005, 0.48 ) }
    dend_60 { pt3dadd( 61.7009, 518.878, -34.6528, 0.48 ) }
    dend_60 { pt3dadd( 61.6829, 520.803, -34.3729, 0.48 ) }
    dend_60 { pt3dadd( 61.7139, 522.21, -34.1535, 0.48 ) }
    dend_60 { pt3dadd( 61.7856, 523.396, -33.9745, 1.92 ) }
    dend_60 { pt3dadd( 61.9345, 524.913, -33.7995, 0.96 ) }
    dend_60 { pt3dadd( 62.1141, 526.188, -33.6926, 0.48 ) }
    dend_60 { pt3dadd( 62.5324, 528.521, -33.5979, 0.48 ) }
    dend_60 { pt3dadd( 62.8568, 530.071, -33.5873, 0.48 ) }
    dend_60 { pt3dadd( 63.192, 531.53, -33.6781, 0.48 ) }
    dend_60 { pt3dadd( 63.5406, 532.882, -33.8228, 1.2 ) }
    dend_60 { pt3dadd( 63.7854, 533.723, -33.9342, 1.92 ) }
    dend_60 { pt3dadd( 64.191, 534.989, -34.1121, 1.44 ) }
    dend_60 { pt3dadd( 64.4458, 535.811, -34.2298, 1.08 ) }
    dend_60 { pt3dadd( 64.6077, 536.415, -34.3049, 0.48 ) }
    dend_60 { pt3dadd( 64.7998, 537.279, -34.3848, 0.96 ) }
    dend_60 { pt3dadd( 64.9678, 538.167, -34.4275, 0.96 ) }
    dend_60 { pt3dadd( 65.0776, 538.828, -34.4534, 0.48 ) }
    dend_60 { pt3dadd( 65.4119, 540.807, -34.4755, 0.48 ) }
    dend_60 { pt3dadd( 65.5415, 541.562, -34.4788, 0.6 ) }
    dend_60 { pt3dadd( 65.6278, 542.047, -34.4723, 0.48 ) }
    dend_60 { pt3dadd( 65.8275, 543.178, -34.4203, 0.48 ) }
    dend_60 { pt3dadd( 66.0879, 544.786, -34.2975, 0.48 ) }
    dend_60 { pt3dadd( 66.216, 545.726, -34.2088, 0.96 ) }
    dend_60 { pt3dadd( 66.299, 546.471, -34.1208, 1.2 ) }
    dend_60 { pt3dadd( 66.369, 547.341, -34.01, 0.6 ) }
    dend_60 { pt3dadd( 66.3925, 548.025, -33.9367, 0.36 ) }
    dend_60 { pt3dadd( 66.3524, 549.635, -33.8, 0.36 ) }
    dend_60 { pt3dadd( 66.2582, 550.683, -33.7479, 0.72 ) }
    dend_60 { pt3dadd( 66.1433, 551.496, -33.7513, 1.44 ) }
    dend_60 { pt3dadd( 65.9981, 552.373, -33.7708, 2.4 ) }
    dend_60 { pt3dadd( 65.7659, 553.749, -33.8226, 1.56 ) }
    dend_60 { pt3dadd( 65.6364, 554.533, -33.8525, 0.48 ) }
    dend_60 { pt3dadd( 65.3288, 556.537, -33.9061, 0.48 ) }
    dend_60 { pt3dadd( 65.2188, 557.517, -33.8788, 0.6 ) }
    dend_60 { pt3dadd( 65.1839, 558.06, -33.8279, 0.48 ) }
    dend_60 { pt3dadd( 65.1833, 559.182, -33.6135, 0.48 ) }
    dend_60 { pt3dadd( 65.2532, 559.877, -33.4199, 0.48 ) }
    dend_60 { pt3dadd( 65.4108, 560.653, -33.1401, 0.84 ) }
    dend_60 { pt3dadd( 65.8605, 562.185, -32.4757, 0.96 ) }
    dend_60 { pt3dadd( 66.2124, 563.184, -32.0198, 0.48 ) }
    dend_60 { pt3dadd( 66.5148, 563.956, -31.6573, 0.36 ) }
    dend_60 { pt3dadd( 67.0529, 565.238, -31.0587, 0.36 ) }
    dend_60 { pt3dadd( 67.5305, 566.361, -30.5805, 0.96 ) }
    dend_60 { pt3dadd( 67.627, 566.591, -30.48, 1.08 ) }
    dend_60 { pt3dadd( 67.9379, 567.363, -30.1461, 0.48 ) }
    dend_60 { pt3dadd( 68.3076, 568.344, -29.6477, 0.48 ) }
    dend_60 { pt3dadd( 68.628, 569.266, -29.1271, 0.48 ) }
    dend_60 { pt3dadd( 68.888, 570.076, -28.6378, 0.48 ) }
    dend_60 { pt3dadd( 69.2476, 571.257, -27.9862, 0.48 ) }
    dend_60 { pt3dadd( 69.6453, 572.637, -27.2923, 0.48 ) }
    dend_60 { pt3dadd( 70.075, 574.332, -26.5422, 1.68 ) }
    dend_60 { pt3dadd( 70.218, 574.938, -26.3131, 2.4 ) }
    dend_60 { pt3dadd( 70.3359, 575.459, -26.1445, 2.64 ) }
    dend_60 { pt3dadd( 70.6695, 577.086, -25.8117, 0.24 ) }
    dend_60 { pt3dadd( 70.8283, 578.323, -25.7634, 0.24 ) }
    dend_60 { pt3dadd( 70.8642, 579.47, -25.8482, 0.24 ) }
    dend_60 { pt3dadd( 70.8625, 579.595, -25.8659, 0.72 ) }
    dend_60 { pt3dadd( 70.826, 580.464, -25.9959, 0.84 ) }
    dend_60 { pt3dadd( 70.7425, 581.6, -26.1738, 0.24 ) }
    dend_60 { pt3dadd( 70.5336, 583.423, -26.4727, 0.24 ) }
    dend_60 { pt3dadd( 70.3416, 584.92, -26.753, 0.24 ) }
    dend_60 { pt3dadd( 70.2929, 585.286, -26.8262, 0.48 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 70/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.20705, 118.497, -21.5516, 0.12 ) }
    dend_59 { pt3dadd( 3.72501, 118.864, -22.8945, 0.12 ) }
    dend_59 { pt3dadd( 3.63388, 118.932, -23.1384, 0.12 ) }
    dend_59 { pt3dadd( 3.32758, 119.156, -23.8781, 1.2 ) }
    dend_59 { pt3dadd( 3.03409, 119.35, -24.5472, 1.44 ) }
    dend_59 { pt3dadd( 1.33743, 120.407, -28.1348, 0.36 ) }
    dend_59 { pt3dadd( 0.96187, 120.656, -28.8855, 0.36 ) }
    dend_59 { pt3dadd( 0.75779, 120.81, -29.3117, 1.8 ) }
    dend_59 { pt3dadd( 0.461509, 121.057, -29.9003, 2.16 ) }
    dend_59 { pt3dadd( -0.736745, 122.182, -32.1284, 0.36 ) }
    dend_59 { pt3dadd( -1.14254, 122.608, -32.8759, 0.36 ) }
    dend_59 { pt3dadd( -1.59137, 123.128, -33.5922, 1.32 ) }
    dend_59 { pt3dadd( -1.98808, 123.654, -34.3593, 0.24 ) }
    dend_59 { pt3dadd( -2.20099, 123.987, -34.8375, 0.24 ) }
    dend_59 { pt3dadd( -2.72686, 124.891, -36.0672, 0.6 ) }
    dend_59 { pt3dadd( -3.3986, 126.129, -37.5481, 1.68 ) }
    dend_59 { pt3dadd( -3.61034, 126.5, -37.9735, 2.04 ) }
    dend_59 { pt3dadd( -4.60821, 128.081, -39.8027, 0.36 ) }
    dend_59 { pt3dadd( -4.99585, 128.664, -40.4167, 0.36 ) }
    dend_59 { pt3dadd( -5.46402, 129.361, -41.0438, 1.56 ) }
    dend_59 { pt3dadd( -5.90707, 130.044, -41.5418, 0.36 ) }
    dend_59 { pt3dadd( -6.41885, 130.832, -42.0024, 0.6 ) }
    dend_59 { pt3dadd( -6.72841, 131.302, -42.2601, 0.12 ) }
    dend_59 { pt3dadd( -7.21661, 132.041, -42.5791, 0.12 ) }
    dend_59 { pt3dadd( -7.45291, 132.439, -42.7695, 0.48 ) }
    dend_59 { pt3dadd( -8.06354, 133.72, -43.4774, 0.12 ) }
    dend_59 { pt3dadd( -8.23817, 134.151, -43.7229, 0.12 ) }
    dend_59 { pt3dadd( -8.37086, 134.527, -43.9272, 0.12 ) }
    dend_59 { pt3dadd( -8.54859, 135.063, -44.1931, 1.68 ) }
    dend_59 { pt3dadd( -8.74321, 135.739, -44.4841, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_59 { pt3dadd( -9.09161, 137.178, -44.9934, 0.24 ) }
    dend_59 { pt3dadd( -9.22872, 137.807, -45.1633, 0.24 ) }
    dend_59 { pt3dadd( -9.32676, 138.294, -45.305, 0.48 ) }
    dend_59 { pt3dadd( -9.42804, 138.837, -45.4947, 0.12 ) }
    dend_59 { pt3dadd( -9.7038, 140.325, -46.0435, 0.12 ) }
    dend_59 { pt3dadd( -9.95242, 141.679, -46.5397, 0.12 ) }
    dend_59 { pt3dadd( -10.1142, 142.557, -46.8428, 0.12 ) }
    dend_59 { pt3dadd( -10.3483, 143.836, -47.2659, 1.68 ) }
    dend_59 { pt3dadd( -10.6556, 145.391, -47.7425, 0.12 ) }
    dend_59 { pt3dadd( -10.9132, 146.617, -48.0837, 0.12 ) }
    dend_59 { pt3dadd( -11.0468, 147.223, -48.2367, 1.32 ) }
    dend_59 { pt3dadd( -11.2012, 147.98, -48.3742, 1.68 ) }
    dend_59 { pt3dadd( -11.3867, 149.025, -48.4885, 0.12 ) }
    dend_59 { pt3dadd( -11.5309, 150.021, -48.5002, 0.12 ) }
    dend_59 { pt3dadd( -11.5622, 150.397, -48.4837, 0.36 ) }
    dend_59 { pt3dadd( -11.5795, 150.906, -48.4657, 0.12 ) }
    dend_59 { pt3dadd( -11.5832, 152.161, -48.4331, 0.12 ) }
    dend_59 { pt3dadd( -11.5641, 152.917, -48.4227, 1.56 ) }
    dend_59 { pt3dadd( -11.5149, 154.046, -48.4227, 0.12 ) }
    dend_59 { pt3dadd( -11.4005, 156.073, -48.4227, 0.12 ) }
    dend_59 { pt3dadd( -11.3792, 156.471, -48.4236, 0.48 ) }
    dend_59 { pt3dadd( -11.3619, 156.838, -48.4251, 0.12 ) }
    dend_59 { pt3dadd( -11.2967, 158.211, -48.4447, 0.12 ) }
    dend_59 { pt3dadd( -11.2534, 159.081, -48.4651, 1.2 ) }
    dend_59 { pt3dadd( -11.2213, 159.71, -48.4876, 1.2 ) }
    dend_59 { pt3dadd( -11.1889, 160.344, -48.516, 0.12 ) }
    dend_59 { pt3dadd( -11.1062, 161.336, -48.5619, 0.12 ) }
    dend_59 { pt3dadd( -11.0346, 162.001, -48.5933, 1.32 ) }
    dend_59 { pt3dadd( -10.9515, 162.624, -48.6228, 1.68 ) }
    dend_59 { pt3dadd( -10.7383, 164.12, -48.6888, 0.12 ) }
    dend_59 { pt3dadd( -10.5748, 165.229, -48.7373, 0.12 ) }
    dend_59 { pt3dadd( -10.4178, 166.334, -48.7805, 0.12 ) }
    dend_59 { pt3dadd( -10.365, 166.728, -48.7943, 0.12 ) }
    dend_59 { pt3dadd( -10.2795, 167.479, -48.8124, 0.12 ) }
    dend_59 { pt3dadd( -10.2318, 167.996, -48.8233, 1.2 ) }
    dend_59 { pt3dadd( -10.1664, 168.886, -48.8382, 0.12 ) }
    dend_59 { pt3dadd( -10.0951, 170.006, -48.8678, 0.12 ) }
    dend_59 { pt3dadd( -10.076, 170.394, -48.8805, 0.36 ) }
    dend_59 { pt3dadd( -10.0514, 170.796, -48.8946, 0.12 ) }
    dend_59 { pt3dadd( -9.95083, 172.047, -48.9391, 0.12 ) }
    dend_59 { pt3dadd( -9.89187, 172.597, -48.9579, 0.96 ) }
    dend_59 { pt3dadd( -9.81794, 173.156, -48.9725, 0.12 ) }
    dend_59 { pt3dadd( -9.61823, 174.393, -48.9286, 0.12 ) }
    dend_59 { pt3dadd( -9.5122, 175.014, -48.8955, 0.84 ) }
    dend_59 { pt3dadd( -9.40232, 175.634, -48.8531, 0.36 ) }
    dend_59 { pt3dadd( -9.3309, 176.024, -48.8197, 0.12 ) }
    dend_59 { pt3dadd( -8.8529, 178.491, -48.61, 0.12 ) }
    dend_59 { pt3dadd( -8.57153, 179.825, -48.4976, 0.24 ) }
    dend_59 { pt3dadd( -8.44958, 180.368, -48.4588, 0.48 ) }
    dend_59 { pt3dadd( -8.36277, 180.755, -48.4384, 0.12 ) }
    dend_59 { pt3dadd( -8.12584, 181.914, -48.419, 0.12 ) }
    dend_59 { pt3dadd( -8.00836, 182.683, -48.4423, 0.84 ) }
    dend_59 { pt3dadd( -7.97276, 183.086, -48.4845, 0.12 ) }
    dend_59 { pt3dadd( -7.87235, 184.325, -48.6689, 0.12 ) }
    dend_59 { pt3dadd( -7.8642, 184.513, -48.693, 0.6 ) }
    dend_59 { pt3dadd( -7.90365, 185.114, -48.8122, 0.12 ) }
    dend_59 { pt3dadd( -8.04349, 185.872, -49.0066, 0.12 ) }
    dend_59 { pt3dadd( -8.22275, 186.585, -49.207, 1.08 ) }
    dend_59 { pt3dadd( -8.46115, 187.397, -49.4965, 1.32 ) }
    dend_59 { pt3dadd( -8.70391, 188.059, -49.7753, 1.68 ) }
    dend_59 { pt3dadd( -9.1858, 189.275, -50.2979, 0.12 ) }
    dend_59 { pt3dadd( -9.5012, 189.998, -50.658, 0.12 ) }
    dend_59 { pt3dadd( -9.6541, 190.295, -50.8205, 0.48 ) }
    dend_59 { pt3dadd( -9.97668, 190.834, -51.1101, 0.12 ) }
    dend_59 { pt3dadd( -10.4568, 191.577, -51.4779, 0.12 ) }
    dend_59 { pt3dadd( -10.7451, 192.013, -51.6663, 0.48 ) }
    dend_59 { pt3dadd( -11.2962, 192.772, -51.9433, 0.12 ) }
    dend_59 { pt3dadd( -11.8914, 193.488, -52.1855, 0.12 ) }
    dend_59 { pt3dadd( -12.4825, 194.18, -52.3742, 0.12 ) }
    dend_59 { pt3dadd( -12.7669, 194.515, -52.4389, 0.84 ) }
    dend_59 { pt3dadd( -13.1665, 194.982, -52.5164, 0.84 ) }
    dend_59 { pt3dadd( -13.4181, 195.258, -52.548, 0.12 ) }
    dend_59 { pt3dadd( -14.0865, 195.936, -52.5732, 0.12 ) }
    dend_59 { pt3dadd( -14.5372, 196.354, -52.5951, 0.12 ) }
    dend_59 { pt3dadd( -14.6307, 196.433, -52.5969, 0.48 ) }
    dend_59 { pt3dadd( -15.0022, 196.728, -52.5925, 0.12 ) }
    dend_59 { pt3dadd( -15.4424, 197.05, -52.5802, 0.12 ) }
    dend_59 { pt3dadd( -16.0377, 197.421, -52.5231, 1.32 ) }
    dend_59 { pt3dadd( -16.2804, 197.536, -52.4872, 1.56 ) }
    dend_59 { pt3dadd( -17.1258, 197.859, -52.3344, 0.12 ) }
    dend_59 { pt3dadd( -17.6987, 198.062, -52.2274, 0.12 ) }
    dend_59 { pt3dadd( -18.0954, 198.187, -52.1018, 0.48 ) }
    dend_59 { pt3dadd( -18.6426, 198.338, -51.8758, 0.12 ) }
    dend_59 { pt3dadd( -18.9612, 198.436, -51.7364, 0.12 ) }
    dend_59 { pt3dadd( -19.3376, 198.569, -51.5788, 0.12 ) }
    dend_59 { pt3dadd( -19.7052, 198.723, -51.4016, 0.72 ) }
    dend_59 { pt3dadd( -20.8436, 199.309, -50.8376, 0.12 ) }
    dend_59 { pt3dadd( -21.3334, 199.607, -50.6059, 0.12 ) }
    dend_59 { pt3dadd( -22.0892, 200.116, -50.2364, 1.8 ) }
    dend_59 { pt3dadd( -22.5863, 200.473, -49.9691, 2.04 ) }
    dend_59 { pt3dadd( -23.7498, 201.341, -49.3243, 0.24 ) }
    dend_59 { pt3dadd( -24.1886, 201.683, -49.0829, 0.24 ) }
    dend_59 { pt3dadd( -24.7483, 202.153, -48.8058, 0.24 ) }
    dend_59 { pt3dadd( -25.5625, 202.888, -48.3971, 0.24 ) }
    dend_59 { pt3dadd( -26.0726, 203.367, -48.1353, 0.96 ) }
    dend_59 { pt3dadd( -26.368, 203.656, -47.9977, 1.32 ) }
    dend_59 { pt3dadd( -26.8488, 204.145, -47.8095, 0.12 ) }
    dend_59 { pt3dadd( -27.3755, 204.682, -47.6103, 0.12 ) }
    dend_59 { pt3dadd( -28.1452, 205.477, -47.3685, 0.12 ) }
    dend_59 { pt3dadd( -28.431, 205.806, -47.3102, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_59 { pt3dadd( -28.6635, 206.119, -47.2736, 0.96 ) }
    dend_59 { pt3dadd( -28.9395, 206.536, -47.235, 0.24 ) }
    dend_59 { pt3dadd( -29.2616, 207.07, -47.2112, 0.24 ) }
    dend_59 { pt3dadd( -29.4598, 207.434, -47.209, 0.12 ) }
    dend_59 { pt3dadd( -29.9644, 208.455, -47.2421, 0.12 ) }
    dend_59 { pt3dadd( -30.3322, 209.245, -47.2938, 0.12 ) }
    dend_59 { pt3dadd( -30.5471, 209.728, -47.3327, 0.96 ) }
    dend_59 { pt3dadd( -30.7382, 210.141, -47.42, 0.12 ) }
    dend_59 { pt3dadd( -31.0247, 210.708, -47.6002, 0.12 ) }
    dend_59 { pt3dadd( -31.154, 210.936, -47.6898, 0.12 ) }
    dend_59 { pt3dadd( -31.2795, 211.145, -47.7987, 1.2 ) }
    dend_59 { pt3dadd( -31.4804, 211.49, -47.9957, 1.2 ) }
    dend_59 { pt3dadd( -32.193, 212.826, -48.741, 0.12 ) }
    dend_59 { pt3dadd( -32.4614, 213.357, -49.0922, 0.12 ) }
    dend_59 { pt3dadd( -32.704, 213.908, -49.4714, 0.12 ) }
    dend_59 { pt3dadd( -32.9232, 214.458, -49.8476, 0.12 ) }
    dend_59 { pt3dadd( -33.0611, 214.851, -50.1242, 0.72 ) }
    dend_59 { pt3dadd( -33.2105, 215.3, -50.4121, 0.84 ) }
    dend_59 { pt3dadd( -33.6451, 216.717, -51.1924, 0.12 ) }
    dend_59 { pt3dadd( -33.9197, 217.636, -51.7442, 0.12 ) }
    dend_59 { pt3dadd( -33.9666, 217.774, -51.827, 0.24 ) }
    dend_59 { pt3dadd( -34.1956, 218.347, -52.1695, 0.12 ) }
    dend_59 { pt3dadd( -34.705, 219.537, -52.9291, 0.12 ) }
    dend_59 { pt3dadd( -34.797, 219.731, -53.0526, 1.2 ) }
    dend_59 { pt3dadd( -35.2696, 220.605, -53.61, 0.12 ) }
    dend_59 { pt3dadd( -35.7341, 221.353, -54.1853, 0.12 ) }
    dend_59 { pt3dadd( -36.0777, 221.903, -54.6354, 0.72 ) }
    dend_59 { pt3dadd( -36.4366, 222.42, -55.1341, 0.12 ) }
    dend_59 { pt3dadd( -36.697, 222.73, -55.5062, 0.12 ) }
    dend_59 { pt3dadd( -37.1647, 223.187, -56.1141, 0.12 ) }
    dend_59 { pt3dadd( -37.5367, 223.503, -56.5733, 1.08 ) }
    dend_59 { pt3dadd( -37.8112, 223.708, -56.929, 1.08 ) }
    dend_59 { pt3dadd( -38.5001, 224.171, -57.7693, 0.12 ) }
    dend_59 { pt3dadd( -39.0295, 224.475, -58.3659, 0.12 ) }
    dend_59 { pt3dadd( -39.1783, 224.551, -58.5398, 0.36 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 4.79638, 117.023, -73.961, 0.12 ) }
    dend_57 { pt3dadd( 5.31734, 118.175, -74.4165, 0.12 ) }
    dend_57 { pt3dadd( 5.89595, 119.499, -74.9571, 2.64 ) }
    dend_57 { pt3dadd( 6.11396, 120.035, -75.1843, 2.16 ) }
    dend_57 { pt3dadd( 6.52479, 121.2, -75.6768, 0.24 ) }
    dend_57 { pt3dadd( 6.86005, 122.239, -76.0897, 0.24 ) }
    dend_57 { pt3dadd( 7.09515, 123.025, -76.3845, 0.24 ) }
    dend_57 { pt3dadd( 7.40421, 124.226, -76.7565, 0.96 ) }
    dend_57 { pt3dadd( 7.58192, 125.048, -76.9873, 0.12 ) }
    dend_57 { pt3dadd( 7.77877, 126.072, -77.1924, 0.12 ) }
    dend_57 { pt3dadd( 7.92475, 126.88, -77.2764, 0.24 ) }
    dend_57 { pt3dadd( 8.00895, 127.365, -77.2888, 0.24 ) }
    dend_57 { pt3dadd( 8.19501, 128.377, -77.2393, 1.68 ) }
    dend_57 { pt3dadd( 8.33919, 129.147, -77.184, 2.52 ) }
    dend_57 { pt3dadd( 8.60449, 130.429, -77.136, 1.56 ) }
    dend_57 { pt3dadd( 8.71503, 130.97, -77.1419, 0.48 ) }
    dend_57 { pt3dadd( 9.01391, 132.699, -77.259, 0.48 ) }
    dend_57 { pt3dadd( 9.16188, 133.686, -77.368, 1.32 ) }
    dend_57 { pt3dadd( 9.30095, 134.821, -77.5751, 0.96 ) }
    dend_57 { pt3dadd( 9.39257, 135.685, -77.7842, 0.12 ) }
    dend_57 { pt3dadd( 9.47185, 136.547, -78.0443, 0.12 ) }
    dend_57 { pt3dadd( 9.56321, 137.607, -78.3852, 1.8 ) }
    dend_57 { pt3dadd( 9.62515, 138.332, -78.6248, 1.92 ) }
    dend_57 { pt3dadd( 9.71961, 139.432, -78.9424, 0.12 ) }
    dend_57 { pt3dadd( 9.80259, 140.318, -79.1078, 0.12 ) }
    dend_57 { pt3dadd( 9.82428, 140.581, -79.1396, 0.48 ) }
    dend_57 { pt3dadd( 9.87464, 141.164, -79.1882, 0.12 ) }
    dend_57 { pt3dadd( 9.92651, 141.791, -79.2092, 0.12 ) }
    dend_57 { pt3dadd( 9.97642, 142.787, -79.1775, 0.72 ) }
    dend_57 { pt3dadd( 9.99944, 143.624, -79.0932, 0.12 ) }
    dend_57 { pt3dadd( 9.99244, 144.529, -79.0022, 0.12 ) }
    dend_57 { pt3dadd( 9.98594, 144.906, -78.9672, 0.48 ) }
    dend_57 { pt3dadd( 9.97559, 145.268, -78.9412, 0.12 ) }
    dend_57 { pt3dadd( 9.94026, 146.177, -78.922, 0.12 ) }
    dend_57 { pt3dadd( 9.92181, 146.565, -78.9365, 1.2 ) }
    dend_57 { pt3dadd( 9.88992, 147.279, -78.9865, 1.32 ) }
    dend_57 { pt3dadd( 9.89281, 148.034, -79.0204, 0.84 ) }
    dend_57 { pt3dadd( 9.9046, 148.369, -79.0271, 0.12 ) }
    dend_57 { pt3dadd( 9.94893, 149.124, -79.0176, 0.12 ) }
    dend_57 { pt3dadd( 9.97637, 149.374, -79.006, 0.6 ) }
    dend_57 { pt3dadd( 10.0566, 149.898, -78.9742, 0.12 ) }
    dend_57 { pt3dadd( 10.2904, 151.057, -78.8855, 0.12 ) }
    dend_57 { pt3dadd( 10.4084, 151.55, -78.8496, 0.6 ) }
    dend_57 { pt3dadd( 10.5109, 151.944, -78.8829, 0.12 ) }
    dend_57 { pt3dadd( 10.6845, 152.537, -78.9976, 0.12 ) }
    dend_57 { pt3dadd( 10.9665, 153.537, -79.2562, 1.56 ) }
    dend_57 { pt3dadd( 11.0626, 153.904, -79.3693, 2.04 ) }
    dend_57 { pt3dadd( 11.248, 154.671, -79.6263, 1.68 ) }
    dend_57 { pt3dadd( 11.7896, 156.826, -80.4349, 0.12 ) }
    dend_57 { pt3dadd( 12.0455, 157.853, -80.8711, 0.12 ) }
    dend_57 { pt3dadd( 12.196, 158.512, -81.1897, 0.12 ) }
    dend_57 { pt3dadd( 12.3056, 159.054, -81.4759, 1.08 ) }
    dend_57 { pt3dadd( 12.3845, 159.476, -81.705, 1.56 ) }
    dend_57 { pt3dadd( 12.5651, 160.488, -82.3115, 0.12 ) }
    dend_57 { pt3dadd( 12.8158, 161.723, -83.0663, 0.12 ) }
    dend_57 { pt3dadd( 13.0094, 162.49, -83.6332, 0.48 ) }
    dend_57 { pt3dadd( 13.2348, 163.223, -84.2618, 0.48 ) }
    dend_57 { pt3dadd( 13.3694, 163.584, -84.6009, 0.48 ) }
    dend_57 { pt3dadd( 13.7569, 164.495, -85.5948, 1.44 ) }
    dend_57 { pt3dadd( 13.939, 164.881, -86.0332, 1.92 ) }
    dend_57 { pt3dadd( 14.2646, 165.448, -86.6946, 1.44 ) }
    dend_57 { pt3dadd( 14.7117, 166.125, -87.5458, 0.48 ) }
    dend_57 { pt3dadd( 15.2741, 166.913, -88.5683, 0.36 ) }
    dend_57 { pt3dadd( 16.0134, 167.89, -89.8386, 0.12 ) }
    dend_57 { pt3dadd( 16.449, 168.444, -90.5233, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_57 { pt3dadd( 16.7932, 168.877, -91.0637, 1.2 ) }
    dend_57 { pt3dadd( 17.7183, 170.013, -92.3925, 0.12 ) }
    dend_57 { pt3dadd( 18.0221, 170.351, -92.7853, 0.12 ) }
    dend_57 { pt3dadd( 18.2235, 170.552, -93.0223, 0.6 ) }
    dend_57 { pt3dadd( 18.4856, 170.799, -93.2739, 0.6 ) }
    dend_57 { pt3dadd( 19.0093, 171.281, -93.7907, 0.36 ) }
    dend_57 { pt3dadd( 19.3803, 171.622, -94.1185, 0.36 ) }
    dend_57 { pt3dadd( 20.0356, 172.227, -94.5655, 0.12 ) }
    dend_57 { pt3dadd( 20.4426, 172.617, -94.8037, 0.12 ) }
    dend_57 { pt3dadd( 21.0893, 173.269, -95.1441, 0.12 ) }
    dend_57 { pt3dadd( 21.9111, 174.142, -95.5762, 1.56 ) }
    dend_57 { pt3dadd( 22.4372, 174.721, -95.8349, 2.16 ) }
    dend_57 { pt3dadd( 23.1953, 175.617, -96.2095, 0.24 ) }
    dend_57 { pt3dadd( 24.1907, 176.927, -96.7887, 0.24 ) }
    dend_57 { pt3dadd( 24.5821, 177.531, -97.071, 0.12 ) }
    dend_57 { pt3dadd( 25.2148, 178.638, -97.6069, 1.68 ) }
    dend_57 { pt3dadd( 25.389, 179.002, -97.7981, 2.28 ) }
    dend_57 { pt3dadd( 25.5502, 179.421, -98.0411, 2.28 ) }
    dend_57 { pt3dadd( 26.0115, 180.965, -99.071, 0.12 ) }
    dend_57 { pt3dadd( 26.2231, 181.965, -99.7947, 0.12 ) }
    dend_57 { pt3dadd( 26.2682, 182.268, -100.02, 0.6 ) }
    dend_57 { pt3dadd( 26.3522, 183.318, -100.858, 0.24 ) }
    dend_57 { pt3dadd( 26.359, 183.873, -101.348, 0.24 ) }
    dend_57 { pt3dadd( 26.3507, 184.572, -101.987, 0.24 ) }
    dend_57 { pt3dadd( 26.3216, 185.053, -102.429, 0.96 ) }
    dend_57 { pt3dadd( 26.2483, 185.697, -103.062, 1.44 ) }
    dend_57 { pt3dadd( 26.0683, 186.868, -104.199, 0.12 ) }
    dend_57 { pt3dadd( 25.8725, 187.977, -105.164, 0.12 ) }
    dend_57 { pt3dadd( 25.7866, 188.444, -105.544, 0.12 ) }
    dend_57 { pt3dadd( 25.756, 188.598, -105.651, 0.48 ) }
    dend_57 { pt3dadd( 25.6964, 188.928, -105.854, 0.48 ) }
    dend_57 { pt3dadd( 25.6708, 189.084, -105.933, 0.48 ) }
    dend_57 { pt3dadd( 25.5192, 190.03, -106.289, 0.48 ) }
    dend_57 { pt3dadd( 25.3572, 191.065, -106.629, 1.32 ) }
    dend_57 { pt3dadd( 25.2753, 191.598, -106.802, 1.8 ) }
    dend_57 { pt3dadd( 25.1906, 192.404, -107.045, 0.96 ) }
    dend_57 { pt3dadd( 25.1357, 193.144, -107.241, 0.12 ) }
    dend_57 { pt3dadd( 25.0788, 194.234, -107.523, 0.12 ) }
    dend_57 { pt3dadd( 25.0528, 194.847, -107.666, 1.2 ) }
    dend_57 { pt3dadd( 25.0596, 195.336, -107.783, 1.56 ) }
    dend_57 { pt3dadd( 25.11, 196.008, -108.005, 0.12 ) }
    dend_57 { pt3dadd( 25.2308, 197.072, -108.406, 0.12 ) }
    dend_57 { pt3dadd( 25.387, 198.036, -108.808, 0.12 ) }
    dend_57 { pt3dadd( 25.5951, 198.984, -109.355, 0.12 ) }
    dend_57 { pt3dadd( 25.9752, 200.525, -110.381, 0.12 ) }
    dend_57 { pt3dadd( 26.3165, 201.796, -111.366, 0.12 ) }
    dend_57 { pt3dadd( 26.4578, 202.288, -111.773, 0.84 ) }
    dend_57 { pt3dadd( 26.5588, 202.621, -112.058, 0.96 ) }
    dend_57 { pt3dadd( 27.0491, 204.302, -113.487, 0.12 ) }
    dend_57 { pt3dadd( 27.2322, 205.036, -114.104, 0.12 ) }
    dend_57 { pt3dadd( 27.315, 205.785, -114.632, 0.12 ) }
    dend_57 { pt3dadd( 27.3394, 206.572, -115.09, 0.12 ) }
    dend_57 { pt3dadd( 27.3194, 207.255, -115.481, 0.36 ) }
    dend_57 { pt3dadd( 27.3063, 207.368, -115.532, 0.12 ) }
    dend_57 { pt3dadd( 27.1539, 207.913, -115.54, 0.12 ) }
    dend_57 { pt3dadd( 26.8903, 208.476, -115.488, 0.48 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 56/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 4.79638, 117.023, -73.961, 0.12 ) }
    dend_56 { pt3dadd( 3.09114, 118.311, -78.0308, 0.12 ) }
    dend_56 { pt3dadd( 2.73245, 118.597, -78.7739, 0.12 ) }
    dend_56 { pt3dadd( 2.20168, 119.013, -79.6447, 0.12 ) }
    dend_56 { pt3dadd( 1.82941, 119.306, -80.1677, 0.84 ) }
    dend_56 { pt3dadd( 0.991004, 119.963, -81.2172, 1.8 ) }
    dend_56 { pt3dadd( 0.688287, 120.201, -81.558, 1.92 ) }
    dend_56 { pt3dadd( -0.0640132, 120.83, -82.0743, 0.12 ) }
    dend_56 { pt3dadd( -0.972313, 121.68, -82.6394, 0.12 ) }
    dend_56 { pt3dadd( -1.57531, 122.282, -82.9452, 0.96 ) }
    dend_56 { pt3dadd( -1.86568, 122.592, -83.0711, 1.2 ) }
    dend_56 { pt3dadd( -2.54418, 123.364, -83.2953, 0.12 ) }
    dend_56 { pt3dadd( -2.9818, 123.91, -83.4627, 0.12 ) }
    dend_56 { pt3dadd( -3.78993, 125.108, -83.8085, 0.12 ) }
    dend_56 { pt3dadd( -4.05903, 125.574, -83.9438, 1.2 ) }
    dend_56 { pt3dadd( -4.2211, 125.876, -84.0247, 1.44 ) }
    dend_56 { pt3dadd( -4.55806, 126.536, -84.2406, 0.6 ) }
    dend_56 { pt3dadd( -4.97837, 127.358, -84.5469, 0.12 ) }
    dend_56 { pt3dadd( -5.37815, 128.053, -84.8488, 0.12 ) }
    dend_56 { pt3dadd( -5.69532, 128.51, -85.1135, 0.96 ) }
    dend_56 { pt3dadd( -5.93179, 128.815, -85.3136, 1.32 ) }
    dend_56 { pt3dadd( -6.62588, 129.587, -85.8563, 0.12 ) }
    dend_56 { pt3dadd( -7.02037, 129.954, -86.1313, 0.12 ) }
    dend_56 { pt3dadd( -7.51588, 130.337, -86.4641, 0.12 ) }
    dend_56 { pt3dadd( -8.44092, 130.946, -87.0905, 0.12 ) }
    dend_56 { pt3dadd( -9.00104, 131.295, -87.469, 1.08 ) }
    dend_56 { pt3dadd( -9.41148, 131.534, -87.7285, 1.8 ) }
    dend_56 { pt3dadd( -9.95625, 131.823, -88.0881, 1.2 ) }
    dend_56 { pt3dadd( -10.8069, 132.263, -88.6923, 0.12 ) }
    dend_56 { pt3dadd( -11.2098, 132.469, -88.9795, 0.12 ) }
    dend_56 { pt3dadd( -11.5442, 132.631, -89.2064, 0.12 ) }
    dend_56 { pt3dadd( -11.941, 132.813, -89.5235, 0.12 ) }
    dend_56 { pt3dadd( -13.3847, 133.434, -90.7478, 0.12 ) }
    dend_56 { pt3dadd( -13.7016, 133.564, -91.015, 1.44 ) }
    dend_56 { pt3dadd( -14.0721, 133.709, -91.3781, 2.04 ) }
    dend_56 { pt3dadd( -14.6584, 133.908, -91.9934, 1.32 ) }
    dend_56 { pt3dadd( -15.9638, 134.28, -93.3191, 0.12 ) }
    dend_56 { pt3dadd( -16.3964, 134.382, -93.7379, 0.12 ) }
    dend_56 { pt3dadd( -16.8032, 134.449, -94.0821, 0.96 ) }
    dend_56 { pt3dadd( -18.5986, 134.618, -95.513, 0.12 ) }
    dend_56 { pt3dadd( -19.2916, 134.641, -96.0021, 0.12 ) }
    dend_56 { pt3dadd( -20.0644, 134.628, -96.4898, 1.56 ) }
    dend_56 { pt3dadd( -20.4033, 134.606, -96.6594, 1.8 ) }
    dend_56 { pt3dadd( -21.3356, 134.539, -97.1228, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_56 { pt3dadd( -21.591, 134.522, -97.2365, 0.12 ) }
    dend_56 { pt3dadd( -22.1577, 134.491, -97.4472, 0.48 ) }
    dend_56 { pt3dadd( -23.3223, 134.447, -97.9709, 0.12 ) }
    dend_56 { pt3dadd( -24.0889, 134.429, -98.3569, 0.12 ) }
    dend_56 { pt3dadd( -24.7245, 134.419, -98.6543, 1.32 ) }
    dend_56 { pt3dadd( -25.1827, 134.4, -98.8399, 1.56 ) }
    dend_56 { pt3dadd( -26.1704, 134.284, -99.1305, 0.12 ) }
    dend_56 { pt3dadd( -26.6462, 134.169, -99.21, 0.12 ) }
    dend_56 { pt3dadd( -26.8741, 134.09, -99.2173, 0.48 ) }
    dend_56 { pt3dadd( -27.5876, 133.779, -99.2138, 0.12 ) }
    dend_56 { pt3dadd( -28.2848, 133.442, -99.1831, 0.12 ) }
    dend_56 { pt3dadd( -29.1985, 132.969, -99.1026, 0.12 ) }
    dend_56 { pt3dadd( -30.0264, 132.522, -98.9938, 0.12 ) }
    dend_56 { pt3dadd( -30.3589, 132.342, -98.9537, 0.72 ) }
    dend_56 { pt3dadd( -30.6588, 132.186, -98.8883, 0.12 ) }
    dend_56 { pt3dadd( -31.442, 131.824, -98.6705, 0.12 ) }
    dend_56 { pt3dadd( -31.9502, 131.63, -98.4982, 0.12 ) }
    dend_56 { pt3dadd( -32.4907, 131.461, -98.2936, 1.44 ) }
    dend_56 { pt3dadd( -33.073, 131.308, -98.0641, 1.8 ) }
    dend_56 { pt3dadd( -34.8014, 130.892, -97.3865, 0.12 ) }
    dend_56 { pt3dadd( -35.3463, 130.774, -97.1619, 0.12 ) }
    dend_56 { pt3dadd( -36.7845, 130.506, -96.5639, 0.12 ) }
    dend_56 { pt3dadd( -37.0998, 130.461, -96.4457, 0.24 ) }
    dend_56 { pt3dadd( -37.3472, 130.439, -96.3441, 0.12 ) }
    dend_56 { pt3dadd( -37.6955, 130.414, -96.1952, 0.12 ) }
    dend_56 { pt3dadd( -38.6576, 130.396, -95.8214, 1.32 ) }
    dend_56 { pt3dadd( -38.7666, 130.401, -95.7714, 1.56 ) }
    dend_56 { pt3dadd( -39.5156, 130.483, -95.3805, 1.56 ) }
    dend_56 { pt3dadd( -40.6051, 130.656, -94.8412, 0.24 ) }
    dend_56 { pt3dadd( -40.8261, 130.705, -94.74, 0.12 ) }
    dend_56 { pt3dadd( -41.526, 130.9, -94.4837, 0.12 ) }
    dend_56 { pt3dadd( -42.1295, 131.09, -94.3403, 0.12 ) }
    dend_56 { pt3dadd( -42.3772, 131.17, -94.2896, 0.48 ) }
    dend_56 { pt3dadd( -42.7833, 131.316, -94.2349, 0.48 ) }
    dend_56 { pt3dadd( -43.0084, 131.404, -94.2333, 0.12 ) }
    dend_56 { pt3dadd( -43.9361, 131.765, -94.2333, 0.12 ) }
    dend_56 { pt3dadd( -44.6346, 131.988, -94.2333, 0.72 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 37/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -41.1176, 34.1684, -81.3871, 0.12 ) }
    dend_52 { pt3dadd( -41.8361, 32.618, -82.7637, 0.12 ) }
    dend_52 { pt3dadd( -42.262, 31.7682, -83.6731, 0.12 ) }
    dend_52 { pt3dadd( -42.8054, 30.7106, -84.8065, 0.12 ) }
    dend_52 { pt3dadd( -42.9326, 30.4656, -85.064, 1.56 ) }
    dend_52 { pt3dadd( -43.221, 29.9125, -85.6191, 1.56 ) }
    dend_52 { pt3dadd( -43.5208, 29.3524, -86.1479, 0.96 ) }
    dend_52 { pt3dadd( -44.1125, 28.3645, -87.0715, 0.12 ) }
    dend_52 { pt3dadd( -44.4832, 27.7737, -87.6753, 0.12 ) }
    dend_52 { pt3dadd( -44.6009, 27.5882, -87.8395, 0.12 ) }
    dend_52 { pt3dadd( -44.8422, 27.1918, -88.1348, 0.12 ) }
    dend_52 { pt3dadd( -45.1285, 26.6763, -88.4929, 0.6 ) }
    dend_52 { pt3dadd( -45.3067, 26.3294, -88.7082, 0.72 ) }
    dend_52 { pt3dadd( -46.0189, 24.8219, -89.492, 0.12 ) }
    dend_52 { pt3dadd( -46.3111, 24.1417, -89.9833, 0.12 ) }
    dend_52 { pt3dadd( -46.6922, 23.1421, -90.7484, 2.04 ) }
    dend_52 { pt3dadd( -47.2801, 21.4173, -92.1689, 0.12 ) }
    dend_52 { pt3dadd( -47.5274, 20.6443, -92.8239, 0.12 ) }
    dend_52 { pt3dadd( -47.7981, 19.8129, -93.5816, 2.28 ) }
    dend_52 { pt3dadd( -48.6936, 17.1362, -96.0336, 0.12 ) }
    dend_52 { pt3dadd( -48.9928, 16.3089, -96.8682, 0.12 ) }
    dend_52 { pt3dadd( -49.2439, 15.7364, -97.6529, 0.12 ) }
    dend_52 { pt3dadd( -49.3609, 15.5134, -98.0112, 0.12 ) }
    dend_52 { pt3dadd( -49.8349, 14.7545, -99.3369, 0.12 ) }
    dend_52 { pt3dadd( -50.1754, 14.3174, -100.159, 1.92 ) }
    dend_52 { pt3dadd( -50.4227, 14.0473, -100.642, 2.28 ) }
    dend_52 { pt3dadd( -52.5747, 11.8385, -104.759, 0.12 ) }
    dend_52 { pt3dadd( -52.8086, 11.6, -105.174, 0.12 ) }
    dend_52 { pt3dadd( -53.3943, 10.9779, -106.191, 1.8 ) }
    dend_52 { pt3dadd( -53.6397, 10.705, -106.591, 1.8 ) }
    dend_52 { pt3dadd( -54.0221, 10.2557, -107.191, 1.2 ) }
    dend_52 { pt3dadd( -54.7045, 9.28965, -108.135, 0.12 ) }
    dend_52 { pt3dadd( -55.052, 8.70475, -108.362, 0.12 ) }
    dend_52 { pt3dadd( -55.1658, 8.4935, -108.457, 0.6 ) }
    dend_52 { pt3dadd( -55.4153, 7.91228, -108.719, 0.12 ) }
    dend_52 { pt3dadd( -55.7329, 7.03114, -109.113, 0.12 ) }
    dend_52 { pt3dadd( -55.806, 6.8219, -109.201, 0.36 ) }
    dend_52 { pt3dadd( -55.9594, 6.34861, -109.449, 0.36 ) }
    dend_52 { pt3dadd( -56.056, 6.02124, -109.658, 0.12 ) }
    dend_52 { pt3dadd( -56.3526, 5.01524, -110.292, 0.12 ) }
    dend_52 { pt3dadd( -56.5953, 4.1397, -111.023, 0.12 ) }
    dend_52 { pt3dadd( -56.6791, 3.81425, -111.313, 0.96 ) }
    dend_52 { pt3dadd( -57.0223, 2.34573, -112.613, 0.12 ) }
    dend_52 { pt3dadd( -57.1426, 1.76624, -113.236, 0.12 ) }
    dend_52 { pt3dadd( -57.3154, 0.851986, -114.293, 2.76 ) }
    dend_52 { pt3dadd( -57.7026, -1.39911, -117.235, 0.12 ) }
    dend_52 { pt3dadd( -57.8143, -2.12537, -118.205, 0.12 ) }
    dend_52 { pt3dadd( -57.8474, -2.41781, -118.6, 0.96 ) }
    dend_52 { pt3dadd( -57.949, -4.56503, -121.595, 0.12 ) }
    dend_52 { pt3dadd( -57.9273, -5.02314, -122.316, 0.12 ) }
    dend_52 { pt3dadd( -57.7724, -5.90547, -123.805, 0.12 ) }
    dend_52 { pt3dadd( -57.6902, -6.15218, -124.205, 1.2 ) }
    dend_52 { pt3dadd( -57.5122, -6.54738, -124.846, 2.28 ) }
    dend_52 { pt3dadd( -56.968, -7.5397, -126.28, 1.68 ) }
    dend_52 { pt3dadd( -56.3963, -8.36896, -127.165, 0.12 ) }
    dend_52 { pt3dadd( -56.0591, -8.76683, -127.635, 0.12 ) }
    dend_52 { pt3dadd( -55.8592, -8.98401, -127.882, 0.12 ) }
    dend_52 { pt3dadd( -55.5935, -9.26568, -128.264, 0.12 ) }
    dend_52 { pt3dadd( -55.3235, -9.57253, -128.656, 0.6 ) }
    dend_52 { pt3dadd( -55.1342, -9.79931, -128.899, 0.6 ) }
    dend_52 { pt3dadd( -54.5495, -10.6428, -129.995, 0.24 ) }
    dend_52 { pt3dadd( -54.4508, -10.8327, -130.291, 0.24 ) }
    dend_52 { pt3dadd( -54.1974, -11.4629, -131.361, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_52 { pt3dadd( -53.9758, -12.1959, -132.526, 2.4 ) }
    dend_52 { pt3dadd( -53.9414, -12.3325, -132.724, 2.4 ) }
    dend_52 { pt3dadd( -53.634, -14.1101, -135.438, 0.12 ) }
    dend_52 { pt3dadd( -53.4845, -15.3575, -137.299, 0.12 ) }
    dend_52 { pt3dadd( -53.4145, -16.1268, -138.446, 0.12 ) }
    dend_52 { pt3dadd( -53.3741, -16.8582, -139.557, 3.12 ) }
    dend_52 { pt3dadd( -53.3725, -17.1844, -140.061, 3.12 ) }
    dend_52 { pt3dadd( -53.4622, -20.1245, -144.297, 0.12 ) }
    dend_52 { pt3dadd( -53.4905, -20.5655, -144.881, 0.12 ) }
    dend_52 { pt3dadd( -53.5111, -20.792, -145.169, 0.48 ) }
    dend_52 { pt3dadd( -53.5622, -21.2994, -145.79, 0.12 ) }
    dend_52 { pt3dadd( -53.6176, -21.7006, -146.302, 0.12 ) }
    dend_52 { pt3dadd( -53.6928, -21.9829, -146.699, 0.48 ) }
    dend_52 { pt3dadd( -53.8825, -22.4903, -147.381, 0.12 ) }
    dend_52 { pt3dadd( -54.0627, -22.9209, -147.981, 0.12 ) }
    dend_52 { pt3dadd( -54.5386, -24.1169, -149.545, 2.76 ) }
    dend_52 { pt3dadd( -54.6277, -24.3572, -149.834, 2.76 ) }
    dend_52 { pt3dadd( -55.581, -27.0712, -152.96, 0.12 ) }
    dend_52 { pt3dadd( -55.7104, -27.4837, -153.394, 0.12 ) }
    dend_52 { pt3dadd( -55.862, -28.0192, -153.922, 0.12 ) }
    dend_52 { pt3dadd( -56.0714, -28.8194, -154.682, 0.12 ) }
    dend_52 { pt3dadd( -56.2979, -29.7616, -155.526, 1.8 ) }
    dend_52 { pt3dadd( -56.4133, -30.4123, -156.079, 2.16 ) }
    dend_52 { pt3dadd( -56.5039, -31.0799, -156.564, 1.92 ) }
    dend_52 { pt3dadd( -56.7855, -32.7312, -157.962, 0.12 ) }
    dend_52 { pt3dadd( -56.8709, -33.0903, -158.295, 0.72 ) }
    dend_52 { pt3dadd( -57.1213, -33.7479, -158.965, 0.72 ) }
    dend_52 { pt3dadd( -57.2928, -34.1089, -159.307, 0.12 ) }
    dend_52 { pt3dadd( -57.6589, -34.7821, -159.884, 0.12 ) }
    dend_52 { pt3dadd( -58.0713, -35.478, -160.411, 0.12 ) }
    dend_52 { pt3dadd( -58.4935, -36.1971, -160.834, 2.4 ) }
    dend_52 { pt3dadd( -59.4577, -37.888, -161.707, 0.12 ) }
    dend_52 { pt3dadd( -60.0457, -38.967, -162.202, 0.12 ) }
    dend_52 { pt3dadd( -60.2705, -39.43, -162.385, 0.6 ) }
    dend_52 { pt3dadd( -60.4164, -39.7687, -162.522, 0.12 ) }
    dend_52 { pt3dadd( -60.691, -40.4495, -162.779, 0.12 ) }
    dend_52 { pt3dadd( -60.7741, -40.6694, -162.861, 0.48 ) }
    dend_52 { pt3dadd( -60.9906, -41.3169, -163.163, 0.12 ) }
    dend_52 { pt3dadd( -61.4721, -42.8104, -164.018, 0.12 ) }
    dend_52 { pt3dadd( -61.8323, -43.9478, -164.718, 1.68 ) }
    dend_52 { pt3dadd( -61.9714, -44.3905, -165.003, 2.16 ) }
    dend_52 { pt3dadd( -62.0777, -44.7571, -165.236, 2.16 ) }
    dend_52 { pt3dadd( -62.6137, -46.8001, -166.527, 0.12 ) }
    dend_52 { pt3dadd( -62.7701, -47.4263, -166.905, 0.12 ) }
    dend_52 { pt3dadd( -62.8497, -47.742, -167.106, 0.48 ) }
    dend_52 { pt3dadd( -62.8786, -47.8475, -167.164, 0.12 ) }
    dend_52 { pt3dadd( -63.1733, -48.808, -167.65, 0.12 ) }
    dend_52 { pt3dadd( -63.5097, -49.6939, -168.008, 0.12 ) }
    dend_52 { pt3dadd( -63.7944, -50.2794, -168.251, 1.68 ) }
    dend_52 { pt3dadd( -64.0177, -50.6685, -168.459, 1.92 ) }
    dend_52 { pt3dadd( -64.5247, -51.437, -168.918, 0.12 ) }
    dend_52 { pt3dadd( -64.8813, -51.906, -169.219, 0.12 ) }
    dend_52 { pt3dadd( -65.355, -52.4319, -169.57, 1.32 ) }
    dend_52 { pt3dadd( -66.6338, -53.7753, -170.505, 0.12 ) }
    dend_52 { pt3dadd( -67.1079, -54.2642, -170.875, 0.12 ) }
    dend_52 { pt3dadd( -67.4326, -54.5898, -171.169, 0.48 ) }
    dend_52 { pt3dadd( -67.664, -54.8026, -171.391, 0.12 ) }
    dend_52 { pt3dadd( -68.2249, -55.2749, -171.983, 0.12 ) }
    dend_52 { pt3dadd( -68.9798, -55.8596, -172.76, 0.12 ) }
    dend_52 { pt3dadd( -69.1633, -55.9784, -172.934, 0.96 ) }
    dend_52 { pt3dadd( -70.079, -56.4626, -173.746, 0.12 ) }
    dend_52 { pt3dadd( -70.445, -56.6339, -174.049, 0.12 ) }
    dend_52 { pt3dadd( -71.2934, -56.9851, -174.691, 1.44 ) }
    dend_52 { pt3dadd( -72.0243, -57.2582, -175.174, 1.8 ) }
    dend_52 { pt3dadd( -73.1753, -57.6586, -175.773, 0.12 ) }
    dend_52 { pt3dadd( -74.6225, -58.1491, -176.388, 0.12 ) }
    dend_52 { pt3dadd( -74.9752, -58.2643, -176.5, 0.48 ) }
    dend_52 { pt3dadd( -75.207, -58.3371, -176.563, 0.12 ) }
    dend_52 { pt3dadd( -75.8435, -58.5452, -176.691, 0.12 ) }
    dend_52 { pt3dadd( -76.3084, -58.7009, -176.773, 1.08 ) }
    dend_52 { pt3dadd( -76.8823, -58.9074, -176.837, 1.68 ) }
    dend_52 { pt3dadd( -77.9587, -59.2989, -176.916, 0.12 ) }
    dend_52 { pt3dadd( -78.4246, -59.4714, -176.944, 0.12 ) }
    dend_52 { pt3dadd( -78.739, -59.6048, -176.959, 0.48 ) }
    dend_52 { pt3dadd( -78.9664, -59.7137, -176.967, 0.12 ) }
    dend_52 { pt3dadd( -79.8631, -60.2181, -177.062, 0.12 ) }
    dend_52 { pt3dadd( -80.8363, -60.8994, -177.227, 1.68 ) }
    dend_52 { pt3dadd( -81.5083, -61.5117, -177.43, 0.12 ) }
    dend_52 { pt3dadd( -82.1046, -62.1601, -177.716, 0.12 ) }
    dend_52 { pt3dadd( -82.5023, -62.6624, -177.97, 0.6 ) }
    dend_52 { pt3dadd( -83.2876, -63.8103, -178.595, 0.12 ) }
    dend_52 { pt3dadd( -83.7517, -64.6276, -179.055, 0.12 ) }
    dend_52 { pt3dadd( -84.3388, -65.7767, -179.773, 0.12 ) }
    dend_52 { pt3dadd( -84.5417, -66.1853, -180.027, 0.12 ) }
    dend_52 { pt3dadd( -84.7593, -66.6093, -180.288, 1.68 ) }
    dend_52 { pt3dadd( -84.9796, -67.0264, -180.518, 2.28 ) }
    dend_52 { pt3dadd( -85.4229, -67.7772, -180.85, 1.56 ) }
    dend_52 { pt3dadd( -86.0853, -68.767, -181.237, 0.12 ) }
    dend_52 { pt3dadd( -86.4326, -69.2666, -181.35, 0.12 ) }
    dend_52 { pt3dadd( -86.7393, -69.7071, -181.442, 0.12 ) }
    dend_52 { pt3dadd( -87.0875, -70.2085, -181.546, 1.32 ) }
    dend_52 { pt3dadd( -87.3746, -70.6237, -181.623, 1.56 ) }
    dend_52 { pt3dadd( -87.8093, -71.2492, -181.734, 0.12 ) }
    dend_52 { pt3dadd( -88.9467, -72.9175, -181.971, 0.12 ) }
    dend_52 { pt3dadd( -89.6365, -73.9365, -182.128, 1.8 ) }
    dend_52 { pt3dadd( -89.869, -74.3043, -182.186, 2.52 ) }
    dend_52 { pt3dadd( -90.0596, -74.6039, -182.235, 2.52 ) }
    dend_52 { pt3dadd( -90.6692, -75.5679, -182.412, 0.12 ) }
    dend_52 { pt3dadd( -91.4579, -76.8268, -182.661, 0.12 ) }
    dend_52 { pt3dadd( -91.8342, -77.4349, -182.773, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_52 { pt3dadd( -92.2862, -78.1992, -182.884, 2.04 ) }
    dend_52 { pt3dadd( -92.7753, -79.057, -183.007, 2.04 ) }
    dend_52 { pt3dadd( -93.4446, -80.2785, -183.175, 0.12 ) }
    dend_52 { pt3dadd( -93.8413, -81.0486, -183.265, 0.12 ) }
    dend_52 { pt3dadd( -94.0672, -81.5462, -183.318, 0.72 ) }
    dend_52 { pt3dadd( -94.1688, -81.8068, -183.33, 0.12 ) }
    dend_52 { pt3dadd( -94.3848, -82.4357, -183.316, 0.12 ) }
    dend_52 { pt3dadd( -94.4573, -82.7059, -183.292, 0.48 ) }
    dend_52 { pt3dadd( -94.5459, -83.081, -183.27, 0.12 ) }
    dend_52 { pt3dadd( -94.8192, -84.4389, -183.29, 0.12 ) }
    dend_52 { pt3dadd( -94.9756, -85.3518, -183.351, 1.56 ) }
    dend_52 { pt3dadd( -95.0418, -85.7951, -183.399, 1.8 ) }
    dend_52 { pt3dadd( -95.1027, -86.3194, -183.478, 1.8 ) }
    dend_52 { pt3dadd( -95.2714, -88.0055, -183.791, 0.12 ) }
    dend_52 { pt3dadd( -95.3664, -89.1002, -184.043, 0.12 ) }
    dend_52 { pt3dadd( -95.3664, -89.1002, -184.043, 0.48 ) }
    dend_52 { pt3dadd( -95.3766, -89.3341, -184.131, 0.12 ) }
    dend_52 { pt3dadd( -95.3695, -90.0193, -184.436, 0.12 ) }
    dend_52 { pt3dadd( -95.3518, -90.2673, -184.562, 0.48 ) }
    dend_52 { pt3dadd( -95.3326, -90.4986, -184.679, 0.12 ) }
    dend_52 { pt3dadd( -95.2552, -91.5362, -185.362, 0.12 ) }
    dend_52 { pt3dadd( -95.1778, -92.8598, -186.28, 0.48 ) }
    dend_52 { pt3dadd( -95.1646, -93.2462, -186.523, 0.12 ) }
    dend_52 { pt3dadd( -95.1408, -94.0858, -187.019, 1.56 ) }
    dend_52 { pt3dadd( -95.1236, -94.8506, -187.435, 1.92 ) }
    dend_52 { pt3dadd( -95.1029, -96.0129, -187.999, 1.56 ) }
    dend_52 { pt3dadd( -95.0931, -96.5802, -188.274, 0.12 ) }
    dend_52 { pt3dadd( -95.1161, -99.1723, -189.36, 0.12 ) }
    dend_52 { pt3dadd( -95.122, -99.5302, -189.503, 0.84 ) }
    dend_52 { pt3dadd( -95.1301, -99.9076, -189.65, 0.12 ) }
    dend_52 { pt3dadd( -95.1351, -100.493, -189.878, 0.12 ) }
    dend_52 { pt3dadd( -95.1275, -102.281, -190.509, 0.12 ) }
    dend_52 { pt3dadd( -95.1043, -103.898, -191.206, 2.4 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 33/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -41.1176, 34.1684, -81.3871, 0.12 ) }
    dend_51 { pt3dadd( -41.8455, 35.0313, -82.626, 0.12 ) }
    dend_51 { pt3dadd( -42.3521, 35.6634, -83.5025, 0.12 ) }
    dend_51 { pt3dadd( -43.1874, 36.7763, -84.8457, 2.4 ) }
    dend_51 { pt3dadd( -44.5457, 38.6644, -87.0672, 0.24 ) }
    dend_51 { pt3dadd( -44.8213, 39.0541, -87.5054, 0.24 ) }
    dend_51 { pt3dadd( -45.1022, 39.4635, -87.9374, 1.44 ) }
    dend_51 { pt3dadd( -45.6676, 40.3171, -88.7993, 0.12 ) }
    dend_51 { pt3dadd( -46.2754, 41.3375, -89.7588, 0.12 ) }
    dend_51 { pt3dadd( -46.7837, 42.2594, -90.4708, 0.12 ) }
    dend_51 { pt3dadd( -47.2811, 43.16, -91.115, 2.28 ) }
    dend_51 { pt3dadd( -47.8872, 44.2596, -91.9505, 0.12 ) }
    dend_51 { pt3dadd( -48.3893, 45.142, -92.6234, 0.12 ) }
    dend_51 { pt3dadd( -49.0609, 46.3088, -93.4862, 0.12 ) }
    dend_51 { pt3dadd( -49.8134, 47.5914, -94.4245, 2.76 ) }
    dend_51 { pt3dadd( -50.7404, 49.1435, -95.5519, 0.24 ) }
    dend_51 { pt3dadd( -50.7404, 49.1435, -95.5519, 0.12 ) }
    dend_51 { pt3dadd( -51.2723, 50.0503, -96.1819, 0.12 ) }
    dend_51 { pt3dadd( -51.5244, 50.4821, -96.4818, 0.96 ) }
    dend_51 { pt3dadd( -51.8494, 51.0329, -96.8116, 0.96 ) }
    dend_51 { pt3dadd( -52.5514, 52.2604, -97.5014, 0.12 ) }
    dend_51 { pt3dadd( -53.1697, 53.5033, -98.1821, 0.12 ) }
    dend_51 { pt3dadd( -53.37, 53.9578, -98.4378, 0.72 ) }
    dend_51 { pt3dadd( -53.6796, 54.7271, -98.9281, 0.12 ) }
    dend_51 { pt3dadd( -53.9951, 55.5349, -99.4511, 0.12 ) }
    dend_51 { pt3dadd( -54.336, 56.4161, -99.9771, 2.16 ) }
    dend_51 { pt3dadd( -54.9673, 58.0447, -101.031, 0.12 ) }
    dend_51 { pt3dadd( -55.153, 58.5209, -101.377, 0.12 ) }
    dend_51 { pt3dadd( -55.565, 59.5728, -102.179, 0.12 ) }
    dend_51 { pt3dadd( -55.8343, 60.2593, -102.692, 0.12 ) }
    dend_51 { pt3dadd( -56.1614, 61.101, -103.395, 1.44 ) }
    dend_51 { pt3dadd( -56.8938, 63.0899, -105.079, 0.12 ) }
    dend_51 { pt3dadd( -57.1445, 63.7545, -105.611, 0.12 ) }
    dend_51 { pt3dadd( -57.3263, 64.2631, -106.011, 1.56 ) }
    dend_51 { pt3dadd( -57.5222, 64.8605, -106.457, 1.56 ) }
    dend_51 { pt3dadd( -57.949, 66.1826, -107.458, 0.12 ) }
    dend_51 { pt3dadd( -58.1295, 66.7673, -107.894, 0.12 ) }
    dend_51 { pt3dadd( -58.2917, 67.2756, -108.194, 0.12 ) }
    dend_51 { pt3dadd( -58.393, 67.5508, -108.384, 0.12 ) }
    dend_51 { pt3dadd( -58.8311, 68.561, -109.108, 0.12 ) }
    dend_51 { pt3dadd( -59.0367, 68.9638, -109.422, 0.12 ) }
    dend_51 { pt3dadd( -59.4201, 69.5897, -109.909, 1.92 ) }
    dend_51 { pt3dadd( -59.6964, 69.9974, -110.273, 2.16 ) }
    dend_51 { pt3dadd( -60.6877, 71.312, -111.517, 0.12 ) }
    dend_51 { pt3dadd( -61.0941, 71.7912, -111.973, 0.12 ) }
    dend_51 { pt3dadd( -61.4337, 72.1567, -112.332, 1.08 ) }
    dend_51 { pt3dadd( -61.8501, 72.5448, -112.755, 1.32 ) }
    dend_51 { pt3dadd( -62.5981, 73.1346, -113.468, 0.12 ) }
    dend_51 { pt3dadd( -63.1387, 73.4929, -113.957, 0.12 ) }
    dend_51 { pt3dadd( -63.5593, 73.7176, -114.318, 0.48 ) }
    dend_51 { pt3dadd( -63.9863, 73.9004, -114.693, 0.12 ) }
    dend_51 { pt3dadd( -64.9526, 74.2871, -115.538, 0.12 ) }
    dend_51 { pt3dadd( -65.5535, 74.5306, -116.071, 1.44 ) }
    dend_51 { pt3dadd( -65.8933, 74.6849, -116.377, 1.68 ) }
    dend_51 { pt3dadd( -66.9142, 75.2608, -117.355, 0.12 ) }
    dend_51 { pt3dadd( -67.6562, 75.7476, -118.048, 0.12 ) }
    dend_51 { pt3dadd( -68.2479, 76.2025, -118.57, 1.8 ) }
    dend_51 { pt3dadd( -68.8063, 76.7168, -119.03, 2.16 ) }
    dend_51 { pt3dadd( -69.6671, 77.5589, -119.669, 0.12 ) }
    dend_51 { pt3dadd( -70.1964, 78.0797, -120.09, 0.12 ) }
    dend_51 { pt3dadd( -70.6119, 78.4613, -120.393, 0.48 ) }
    dend_51 { pt3dadd( -70.6876, 78.5247, -120.445, 0.12 ) }
    dend_51 { pt3dadd( -71.1527, 78.8451, -120.774, 0.12 ) }
    dend_51 { pt3dadd( -71.9122, 79.292, -121.365, 1.68 ) }
    dend_51 { pt3dadd( -73.4773, 80.1101, -122.65, 0.12 ) }
    dend_51 { pt3dadd( -74.102, 80.4211, -123.184, 0.12 ) }
    dend_51 { pt3dadd( -74.4793, 80.6324, -123.521, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_51 { pt3dadd( -75.1545, 81.0564, -124.106, 0.12 ) }
    dend_51 { pt3dadd( -75.5986, 81.3696, -124.496, 0.12 ) }
    dend_51 { pt3dadd( -76.1105, 81.784, -124.951, 1.56 ) }
    dend_51 { pt3dadd( -76.5366, 82.1457, -125.294, 2.28 ) }
    dend_51 { pt3dadd( -77.5268, 83.0276, -126.034, 0.12 ) }
    dend_51 { pt3dadd( -77.9902, 83.4258, -126.354, 0.12 ) }
    dend_51 { pt3dadd( -78.317, 83.6857, -126.53, 0.48 ) }
    dend_51 { pt3dadd( -78.8968, 84.1134, -126.794, 0.12 ) }
    dend_51 { pt3dadd( -79.3194, 84.4017, -126.978, 0.12 ) }
    dend_51 { pt3dadd( -80.3692, 85.031, -127.39, 2.16 ) }
    dend_51 { pt3dadd( -81.8263, 85.7482, -127.838, 0.12 ) }
    dend_51 { pt3dadd( -82.8514, 86.1857, -128.106, 0.12 ) }
    dend_51 { pt3dadd( -83.4358, 86.4116, -128.264, 0.6 ) }
    dend_51 { pt3dadd( -83.8247, 86.5466, -128.375, 0.12 ) }
    dend_51 { pt3dadd( -84.6015, 86.7921, -128.593, 0.12 ) }
    dend_51 { pt3dadd( -85.5326, 87.0656, -128.845, 2.4 ) }
    dend_51 { pt3dadd( -85.9853, 87.2018, -128.938, 2.4 ) }
    dend_51 { pt3dadd( -87.629, 87.7113, -129.251, 0.12 ) }
    dend_51 { pt3dadd( -88.9824, 88.1506, -129.453, 0.12 ) }
    dend_51 { pt3dadd( -89.8567, 88.4469, -129.548, 1.68 ) }
    dend_51 { pt3dadd( -90.5208, 88.6726, -129.597, 2.16 ) }
    dend_51 { pt3dadd( -91.883, 89.1254, -129.613, 0.12 ) }
    dend_51 { pt3dadd( -92.7015, 89.3923, -129.565, 0.12 ) }
    dend_51 { pt3dadd( -93.3543, 89.5939, -129.466, 0.6 ) }
    dend_51 { pt3dadd( -93.5825, 89.6619, -129.429, 0.12 ) }
    dend_51 { pt3dadd( -94.8503, 90.0338, -129.274, 0.12 ) }
    dend_51 { pt3dadd( -95.3788, 90.1838, -129.174, 0.84 ) }
    dend_51 { pt3dadd( -95.8814, 90.3261, -129.043, 1.08 ) }
    dend_51 { pt3dadd( -96.1308, 90.4059, -128.98, 1.08 ) }
    dend_51 { pt3dadd( -96.5036, 90.5438, -128.894, 0.12 ) }
    dend_51 { pt3dadd( -97.1893, 90.8398, -128.732, 0.12 ) }
    dend_51 { pt3dadd( -98.0163, 91.2368, -128.532, 1.44 ) }
    dend_51 { pt3dadd( -98.6681, 91.5447, -128.393, 1.68 ) }
    dend_51 { pt3dadd( -99.3746, 91.8761, -128.24, 0.12 ) }
    dend_51 { pt3dadd( -100.407, 92.3582, -128.037, 0.12 ) }
    dend_51 { pt3dadd( -100.659, 92.4717, -127.995, 1.32 ) }
    dend_51 { pt3dadd( -101.238, 92.7152, -127.931, 0.12 ) }
    dend_51 { pt3dadd( -101.686, 92.8923, -127.897, 0.12 ) }
    dend_51 { pt3dadd( -101.941, 92.9764, -127.868, 0.36 ) }
    dend_51 { pt3dadd( -102.362, 93.0672, -127.813, 0.12 ) }
    dend_51 { pt3dadd( -102.952, 93.1505, -127.737, 0.12 ) }
    dend_51 { pt3dadd( -103.426, 93.2031, -127.675, 0.48 ) }
    dend_51 { pt3dadd( -104.135, 93.2648, -127.598, 0.12 ) }
    dend_51 { pt3dadd( -105.089, 93.3277, -127.515, 0.12 ) }
    dend_51 { pt3dadd( -105.817, 93.3617, -127.463, 1.8 ) }
    dend_51 { pt3dadd( -106.326, 93.3755, -127.435, 2.64 ) }
    dend_51 { pt3dadd( -106.686, 93.3807, -127.425, 2.64 ) }
    dend_51 { pt3dadd( -107.906, 93.3736, -127.43, 0.12 ) }
    dend_51 { pt3dadd( -108.985, 93.3436, -127.477, 0.12 ) }
    dend_51 { pt3dadd( -109.464, 93.3332, -127.501, 0.12 ) }
    dend_51 { pt3dadd( -109.849, 93.3283, -127.52, 0.48 ) }
    dend_51 { pt3dadd( -110.089, 93.3248, -127.526, 0.12 ) }
    dend_51 { pt3dadd( -110.584, 93.3308, -127.522, 0.12 ) }
    dend_51 { pt3dadd( -111.062, 93.363, -127.493, 0.6 ) }
    dend_51 { pt3dadd( -111.488, 93.4338, -127.458, 0.12 ) }
    dend_51 { pt3dadd( -112.071, 93.573, -127.406, 0.12 ) }
    dend_51 { pt3dadd( -112.557, 93.711, -127.328, 0.72 ) }
    dend_51 { pt3dadd( -113.065, 93.8733, -127.227, 0.96 ) }
    dend_51 { pt3dadd( -113.663, 94.1076, -127.125, 0.12 ) }
    dend_51 { pt3dadd( -114.366, 94.4208, -127.035, 0.12 ) }
    dend_51 { pt3dadd( -114.813, 94.631, -126.984, 1.2 ) }
    dend_51 { pt3dadd( -115.632, 95.0546, -126.909, 1.56 ) }
    dend_51 { pt3dadd( -116.198, 95.3807, -126.889, 1.68 ) }
    dend_51 { pt3dadd( -117.208, 96.0541, -126.897, 0.12 ) }
    dend_51 { pt3dadd( -118.089, 96.6969, -126.931, 0.12 ) }
    dend_51 { pt3dadd( -118.534, 97.0472, -127.049, 1.56 ) }
    dend_51 { pt3dadd( -119.046, 97.4703, -127.213, 1.56 ) }
    dend_51 { pt3dadd( -119.643, 97.9889, -127.451, 0.12 ) }
    dend_51 { pt3dadd( -121.539, 99.7015, -128.292, 0.12 ) }
    dend_51 { pt3dadd( -121.777, 99.9236, -128.409, 0.48 ) }
    dend_51 { pt3dadd( -123.883, 102.028, -129.773, 0.12 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 71/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.79722, -175.635, -16.1359, 3.37 ) }
    dend_47 { pt3dadd( -1.34276, -176.015, -14.825, 3.37 ) }
    dend_47 { pt3dadd( 0.0104588, -176.975, -11.1874, 0.12 ) }
    dend_47 { pt3dadd( 0.121817, -177.026, -10.9483, 0.12 ) }
    dend_47 { pt3dadd( 0.465615, -177.149, -10.3037, 0.12 ) }
    dend_47 { pt3dadd( 0.705019, -177.209, -9.91549, 0.72 ) }
    dend_47 { pt3dadd( 1.0145, -177.264, -9.48019, 0.72 ) }
    dend_47 { pt3dadd( 1.21367, -177.266, -9.30038, 0.12 ) }
    dend_47 { pt3dadd( 2.63276, -177.083, -8.56222, 0.12 ) }
    dend_47 { pt3dadd( 2.77884, -177.081, -8.45105, 0.96 ) }
    dend_47 { pt3dadd( 3.19273, -177.171, -7.96225, 0.96 ) }
    dend_47 { pt3dadd( 3.60289, -177.42, -7.06069, 0.12 ) }
    dend_47 { pt3dadd( 3.65314, -177.49, -6.83572, 0.12 ) }
    dend_47 { pt3dadd( 3.67461, -177.619, -6.42144, 0.84 ) }
    dend_47 { pt3dadd( 3.52991, -178.396, -4.11589, 0.24 ) }
    dend_47 { pt3dadd( 3.40213, -178.862, -2.84095, 1.92 ) }
    dend_47 { pt3dadd( 3.13676, -179.612, -0.991997, 0.24 ) }
    dend_47 { pt3dadd( 2.99631, -179.956, -0.23138, 1.68 ) }
    dend_47 { pt3dadd( 2.58593, -180.947, 1.74599, 1.68 ) }
    dend_47 { pt3dadd( 2.46117, -181.241, 2.25019, 0.12 ) }
    dend_47 { pt3dadd( 2.31123, -181.615, 2.70881, 0.12 ) }
    dend_47 { pt3dadd( 2.19885, -181.97, 3.01516, 0.6 ) }
    dend_47 { pt3dadd( 2.09129, -182.508, 3.30886, 1.08 ) }
    dend_47 { pt3dadd( 1.98678, -183.203, 3.5902, 1.08 ) }
    dend_47 { pt3dadd( 1.82631, -184.239, 3.8377, 0.12 ) }
    dend_47 { pt3dadd( 1.73343, -184.843, 3.97984, 0.12 ) }
    dend_47 { pt3dadd( 1.65474, -185.455, 4.10999, 0.12 ) }
    dend_47 { pt3dadd( 1.59699, -186.071, 4.22142, 0.12 ) }
    dend_47 { pt3dadd( 1.57478, -186.683, 4.30631, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_47 { pt3dadd( 1.58057, -187.201, 4.34426, 0.96 ) }
    dend_47 { pt3dadd( 1.60624, -187.837, 4.36491, 0.12 ) }
    dend_47 { pt3dadd( 1.63053, -188.623, 4.39061, 0.12 ) }
    dend_47 { pt3dadd( 1.62726, -189.076, 4.42014, 1.32 ) }
    dend_47 { pt3dadd( 1.6072, -189.356, 4.4463, 1.32 ) }
    dend_47 { pt3dadd( 1.51602, -190.18, 4.54416, 0.12 ) }
    dend_47 { pt3dadd( 1.39714, -190.918, 4.64615, 0.12 ) }
    dend_47 { pt3dadd( 1.36682, -191.091, 4.67184, 0.48 ) }
    dend_47 { pt3dadd( 1.27211, -191.657, 4.76449, 0.12 ) }
    dend_47 { pt3dadd( 1.24662, -191.933, 4.81002, 0.12 ) }
    dend_47 { pt3dadd( 1.24318, -192.295, 4.86887, 0.12 ) }
    dend_47 { pt3dadd( 1.30013, -192.546, 4.97636, 0.48 ) }
    dend_47 { pt3dadd( 1.42781, -193.001, 5.26604, 0.36 ) }
    dend_47 { pt3dadd( 1.50406, -193.338, 5.43318, 0.36 ) }
    dend_47 { pt3dadd( 1.56817, -193.666, 5.55186, 1.2 ) }
    dend_47 { pt3dadd( 1.63248, -194.02, 5.65863, 1.2 ) }
    dend_47 { pt3dadd( 1.9435, -195.842, 6.30851, 0.12 ) }
    dend_47 { pt3dadd( 2.06841, -196.515, 6.55532, 0.12 ) }
    dend_47 { pt3dadd( 2.29906, -197.981, 7.09598, 0.12 ) }
    dend_47 { pt3dadd( 2.39522, -198.713, 7.35353, 0.12 ) }
    dend_47 { pt3dadd( 2.44365, -199.205, 7.50474, 0.12 ) }
    dend_47 { pt3dadd( 2.5242, -200.332, 7.74591, 1.32 ) }
    dend_47 { pt3dadd( 2.60064, -201.228, 7.73787, 1.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 23/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.79722, -175.635, -16.1359, 0.12 ) }
    dend_46 { pt3dadd( -3.10278, -176.523, -16.2451, 0.12 ) }
    dend_46 { pt3dadd( -3.96913, -177.112, -16.3175, 0.12 ) }
    dend_46 { pt3dadd( -4.24327, -177.298, -16.3404, 0.96 ) }
    dend_46 { pt3dadd( -4.56636, -177.518, -16.3674, 1.08 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 28/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 9.0279, -170.598, -24.8101, 0.12 ) }
    dend_44 { pt3dadd( 9.51176, -171.434, -24.6456, 0.12 ) }
    dend_44 { pt3dadd( 9.85187, -172.139, -24.5167, 0.12 ) }
    dend_44 { pt3dadd( 10.1691, -172.802, -24.4016, 0.72 ) }
    dend_44 { pt3dadd( 10.5827, -173.659, -24.2736, 0.84 ) }
    dend_44 { pt3dadd( 10.8142, -174.127, -24.1884, 0.48 ) }
    dend_44 { pt3dadd( 10.976, -174.446, -24.1255, 0.12 ) }
    dend_44 { pt3dadd( 11.3305, -175.134, -23.9779, 0.12 ) }
    dend_44 { pt3dadd( 11.5574, -175.578, -23.8674, 0.12 ) }
    dend_44 { pt3dadd( 11.7791, -175.981, -23.7671, 0.84 ) }
    dend_44 { pt3dadd( 12.2054, -176.779, -23.6649, 0.36 ) }
    dend_44 { pt3dadd( 12.4091, -177.168, -23.6335, 0.12 ) }
    dend_44 { pt3dadd( 12.9003, -178.101, -23.5925, 0.12 ) }
    dend_44 { pt3dadd( 13.3269, -178.91, -23.5864, 1.8 ) }
    dend_44 { pt3dadd( 13.6619, -179.628, -23.6059, 1.56 ) }
    dend_44 { pt3dadd( 14.2045, -180.9, -23.6898, 0.12 ) }
    dend_44 { pt3dadd( 14.2937, -181.131, -23.7207, 0.12 ) }
    dend_44 { pt3dadd( 14.3358, -181.248, -23.7379, 0.36 ) }
    dend_44 { pt3dadd( 14.4701, -181.665, -23.8058, 0.12 ) }
    dend_44 { pt3dadd( 14.6535, -182.404, -23.9067, 0.12 ) }
    dend_44 { pt3dadd( 14.7034, -182.65, -23.9235, 0.12 ) }
    dend_44 { pt3dadd( 14.7824, -183.037, -23.9245, 0.72 ) }
    dend_44 { pt3dadd( 14.8975, -183.655, -23.9266, 0.96 ) }
    dend_44 { pt3dadd( 14.9812, -184.141, -23.9268, 0.12 ) }
    dend_44 { pt3dadd( 15.2162, -185.627, -23.9244, 0.12 ) }
    dend_44 { pt3dadd( 15.2869, -186.115, -23.9231, 0.84 ) }
    dend_44 { pt3dadd( 15.3525, -186.63, -23.93, 0.12 ) }
    dend_44 { pt3dadd( 15.4098, -187.246, -23.9426, 0.12 ) }
    dend_44 { pt3dadd( 15.4393, -187.65, -23.9527, 0.96 ) }
    dend_44 { pt3dadd( 15.4764, -188.158, -23.9691, 0.12 ) }
    dend_44 { pt3dadd( 15.534, -189.026, -24.0102, 0.12 ) }
    dend_44 { pt3dadd( 15.5831, -189.864, -24.0602, 1.68 ) }
    dend_44 { pt3dadd( 15.5961, -190.219, -24.0879, 1.68 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 9.0279, -170.598, -24.8101, 0.6 ) }
    dend_43 { pt3dadd( 9.53656, -169.797, -20.9359, 0.6 ) }
    dend_43 { pt3dadd( 9.72541, -170.151, -21.4652, 0.6 ) }
    dend_43 { pt3dadd( 10.3703, -171.156, -22.6741, 0.12 ) }
    dend_43 { pt3dadd( 10.6423, -171.559, -23.1038, 0.12 ) }
    dend_43 { pt3dadd( 10.9822, -172.062, -23.6409, 0.96 ) }
    dend_43 { pt3dadd( 11.3235, -172.567, -24.1801, 0.96 ) }
    dend_43 { pt3dadd( 12.0682, -173.754, -25.6317, 0.12 ) }
    dend_43 { pt3dadd( 12.3649, -174.266, -26.2596, 0.12 ) }
    dend_43 { pt3dadd( 12.526, -174.531, -26.56, 0.48 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 37.3038, -104.516, -31.3935, 0.12 ) }
    dend_40 { pt3dadd( 38.6393, -105.36, -29.1928, 0.12 ) }
    dend_40 { pt3dadd( 38.9439, -105.547, -28.7175, 0.12 ) }
    dend_40 { pt3dadd( 39.0878, -105.636, -28.5075, 0.6 ) }
    dend_40 { pt3dadd( 39.5006, -105.875, -27.9394, 0.12 ) }
    dend_40 { pt3dadd( 40.263, -106.289, -26.9533, 0.12 ) }
    dend_40 { pt3dadd( 40.4758, -106.4, -26.683, 0.12 ) }
    dend_40 { pt3dadd( 40.6404, -106.475, -26.5233, 0.12 ) }
    dend_40 { pt3dadd( 40.8715, -106.581, -26.307, 0.12 ) }
    dend_40 { pt3dadd( 41.4276, -106.844, -25.7893, 0.12 ) }
    dend_40 { pt3dadd( 41.6068, -106.935, -25.6377, 0.6 ) }
    dend_40 { pt3dadd( 41.9917, -107.175, -25.3766, 0.12 ) }
    dend_40 { pt3dadd( 42.3787, -107.427, -25.0928, 0.12 ) }
    dend_40 { pt3dadd( 42.8866, -107.737, -24.7213, 0.6 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 37.3038, -104.516, -31.3935, 0.24 ) }
    dend_35 { pt3dadd( 37.5046, -105.696, -31.734, 0.24 ) }
    dend_35 { pt3dadd( 37.6256, -106.767, -32.0588, 0.24 ) }
    dend_35 { pt3dadd( 37.6652, -107.265, -32.207, 0.96 ) }
    dend_35 { pt3dadd( 37.7187, -108.13, -32.4601, 1.8 ) }
    dend_35 { pt3dadd( 37.7856, -108.98, -32.7554, 0.84 ) }
    dend_35 { pt3dadd( 37.8277, -109.527, -32.9757, 0.12 ) }
    dend_35 { pt3dadd( 37.8911, -110.365, -33.3973, 0.12 ) }
    dend_35 { pt3dadd( 37.912, -110.802, -33.6357, 0.72 ) }
    dend_35 { pt3dadd( 37.915, -110.905, -33.6854, 0.72 ) }
    dend_35 { pt3dadd( 37.9754, -111.963, -34.1392, 0.24 ) }
    dend_35 { pt3dadd( 38.0286, -112.408, -34.2766, 0.24 ) }
    dend_35 { pt3dadd( 38.1544, -113.137, -34.4247, 0.24 ) }
    dend_35 { pt3dadd( 38.3039, -113.883, -34.4968, 0.24 ) }
    dend_35 { pt3dadd( 38.4286, -114.572, -34.5015, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_35 { pt3dadd( 38.5441, -115.36, -34.4581, 0.24 ) }
    dend_35 { pt3dadd( 38.6314, -116.141, -34.3361, 1.44 ) }
    dend_35 { pt3dadd( 38.7167, -116.989, -34.165, 1.92 ) }
    dend_35 { pt3dadd( 38.7757, -117.825, -33.9757, 1.92 ) }
    dend_35 { pt3dadd( 38.8179, -118.673, -33.7867, 1.2 ) }
    dend_35 { pt3dadd( 38.8484, -119.548, -33.6129, 0.48 ) }
    dend_35 { pt3dadd( 38.8608, -120.406, -33.4561, 0.12 ) }
    dend_35 { pt3dadd( 38.8703, -121.022, -33.3303, 0.12 ) }
    dend_35 { pt3dadd( 38.8805, -121.402, -33.2557, 0.6 ) }
    dend_35 { pt3dadd( 38.9017, -121.88, -33.1795, 0.12 ) }
    dend_35 { pt3dadd( 38.975, -122.869, -33.0168, 0.12 ) }
    dend_35 { pt3dadd( 39.0329, -123.364, -32.9446, 0.12 ) }
    dend_35 { pt3dadd( 39.2867, -125.119, -32.8071, 2.4 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 45.1994, -30.6949, -11.2127, 0.96 ) }
    dend_33 { pt3dadd( 44.562, -27.9159, -4.01363, 0.96 ) }
    dend_33 { pt3dadd( 44.4726, -27.5535, -3.25454, 0.72 ) }
    dend_33 { pt3dadd( 44.4089, -27.3036, -2.84263, 0.24 ) }
    dend_33 { pt3dadd( 44.3432, -26.9925, -2.45181, 0.24 ) }
    dend_33 { pt3dadd( 44.2679, -26.4869, -1.98425, 0.24 ) }
    dend_33 { pt3dadd( 44.2028, -25.7996, -1.45939, 0.84 ) }
    dend_33 { pt3dadd( 44.1941, -24.8236, -1.22961, 1.2 ) }
    dend_33 { pt3dadd( 44.2257, -23.934, -0.976435, 0.48 ) }
    dend_33 { pt3dadd( 44.3065, -22.7924, -0.544428, 0.24 ) }
    dend_33 { pt3dadd( 44.4521, -21.6217, -0.0368723, 0.24 ) }
    dend_33 { pt3dadd( 44.7155, -20.158, 0.691167, 1.68 ) }
    dend_33 { pt3dadd( 44.8728, -19.4221, 1.07399, 2.28 ) }
    dend_33 { pt3dadd( 44.9989, -18.8842, 1.36424, 2.4 ) }
    dend_33 { pt3dadd( 45.4092, -17.1354, 2.32423, 0.36 ) }
    dend_33 { pt3dadd( 45.5564, -16.4499, 2.69879, 0.36 ) }
    dend_33 { pt3dadd( 45.7375, -15.5069, 3.18295, 0.84 ) }
    dend_33 { pt3dadd( 45.9593, -14.166, 3.81053, 0.84 ) }
    dend_33 { pt3dadd( 46.1473, -12.8066, 4.41944, 0.6 ) }
    dend_33 { pt3dadd( 46.3069, -11.5406, 4.9565, 0.6 ) }
    dend_33 { pt3dadd( 46.4021, -10.7351, 5.25869, 0.96 ) }
    dend_33 { pt3dadd( 46.4524, -10.1008, 5.49329, 0.96 ) }
    dend_33 { pt3dadd( 46.497, -8.91634, 5.90356, 0.12 ) }
    dend_33 { pt3dadd( 46.4887, -8.33161, 6.09827, 0.12 ) }
    dend_33 { pt3dadd( 46.4672, -7.83349, 6.23711, 0.12 ) }
    dend_33 { pt3dadd( 46.4353, -7.29129, 6.36217, 0.12 ) }
    dend_33 { pt3dadd( 46.4057, -6.74472, 6.48929, 0.6 ) }
    dend_33 { pt3dadd( 46.3928, -6.30705, 6.56797, 0.96 ) }
    dend_33 { pt3dadd( 46.3502, -5.5957, 6.56797, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 45.1994, -30.6949, -11.2127, 0.12 ) }
    dend_30 { pt3dadd( 46.742, -30.9627, -10.7363, 0.12 ) }
    dend_30 { pt3dadd( 47.1958, -31.0298, -10.5935, 0.12 ) }
    dend_30 { pt3dadd( 47.7634, -31.1024, -10.4117, 0.6 ) }
    dend_30 { pt3dadd( 48.4578, -31.1661, -10.195, 0.6 ) }
    dend_30 { pt3dadd( 49.4588, -31.2312, -9.903, 0.12 ) }
    dend_30 { pt3dadd( 50.3863, -31.2506, -9.65568, 0.12 ) }
    dend_30 { pt3dadd( 50.5028, -31.2404, -9.62865, 0.36 ) }
    dend_30 { pt3dadd( 50.8774, -31.1836, -9.55171, 0.12 ) }
    dend_30 { pt3dadd( 51.3889, -31.0747, -9.42661, 0.12 ) }
    dend_30 { pt3dadd( 51.8389, -30.9279, -9.3115, 0.48 ) }
    dend_30 { pt3dadd( 52.4936, -30.6912, -9.16235, 0.6 ) }
    dend_30 { pt3dadd( 52.9468, -30.5293, -9.04697, 0.48 ) }
    dend_30 { pt3dadd( 53.3524, -30.4095, -8.94877, 0.48 ) }
    dend_30 { pt3dadd( 54.314, -30.161, -8.5628, 0.12 ) }
    dend_30 { pt3dadd( 55.2917, -29.9862, -8.08227, 2.04 ) }
    dend_30 { pt3dadd( 55.8567, -29.934, -7.78013, 3.25 ) }
    dend_30 { pt3dadd( 56.3867, -29.9509, -7.49938, 3.37 ) }
    dend_30 { pt3dadd( 57.0637, -30.0459, -7.16126, 2.88 ) }
    dend_30 { pt3dadd( 59.2171, -30.5586, -6.15348, 0.24 ) }
    dend_30 { pt3dadd( 60.1343, -30.8648, -5.76716, 0.24 ) }
    dend_30 { pt3dadd( 60.7216, -31.1185, -5.52743, 0.72 ) }
    dend_30 { pt3dadd( 61.76, -31.5981, -5.15513, 0.96 ) }
    dend_30 { pt3dadd( 62.429, -31.9282, -4.96913, 0.24 ) }
    dend_30 { pt3dadd( 62.646, -32.0333, -4.94707, 0.24 ) }
    dend_30 { pt3dadd( 62.9596, -32.1628, -4.98725, 0.24 ) }
    dend_30 { pt3dadd( 63.6638, -32.3238, -5.10345, 0.24 ) }
    dend_30 { pt3dadd( 64.2614, -32.3525, -5.20068, 1.2 ) }
    dend_30 { pt3dadd( 64.7399, -32.3131, -5.20555, 1.92 ) }
    dend_30 { pt3dadd( 65.7182, -32.1652, -5.1129, 1.92 ) }
    dend_30 { pt3dadd( 66.701, -31.9792, -4.9513, 0.36 ) }
    dend_30 { pt3dadd( 67.315, -31.8451, -4.77326, 0.36 ) }
    dend_30 { pt3dadd( 68.5259, -31.5522, -4.32792, 0.36 ) }
    dend_30 { pt3dadd( 70.4297, -31.0877, -3.5346, 1.68 ) }
    dend_30 { pt3dadd( 71.0147, -30.9526, -3.29211, 2.52 ) }
    dend_30 { pt3dadd( 71.9161, -30.769, -2.91671, 2.64 ) }
    dend_30 { pt3dadd( 73.9071, -30.4484, -2.1989, 0.24 ) }
    dend_30 { pt3dadd( 74.7799, -30.3453, -1.94616, 0.24 ) }
    dend_30 { pt3dadd( 75.3778, -30.2893, -1.83773, 0.36 ) }
    dend_30 { pt3dadd( 76.4144, -30.2151, -1.81691, 1.08 ) }
    dend_30 { pt3dadd( 76.95, -30.1803, -1.80954, 1.08 ) }
    dend_30 { pt3dadd( 77.8988, -30.1046, -1.82807, 0.48 ) }
    dend_30 { pt3dadd( 78.3741, -30.0493, -1.86953, 0.24 ) }
    dend_30 { pt3dadd( 79.0339, -29.9176, -1.85315, 0.24 ) }
    dend_30 { pt3dadd( 79.6023, -29.74, -1.76183, 0.6 ) }
    dend_30 { pt3dadd( 80.719, -29.2962, -1.42939, 0.36 ) }
    dend_30 { pt3dadd( 81.2545, -29.1005, -1.25223, 0.36 ) }
    dend_30 { pt3dadd( 81.6968, -28.9863, -1.05908, 0.36 ) }
    dend_30 { pt3dadd( 82.0185, -28.9496, -0.901233, 0.48 ) }
    dend_30 { pt3dadd( 82.2622, -28.9533, -0.789062, 0.24 ) }
    dend_30 { pt3dadd( 82.7118, -28.9904, -0.585469, 0.24 ) }
    dend_30 { pt3dadd( 83.5262, -29.0835, -0.298101, 0.24 ) }
    dend_30 { pt3dadd( 84.6963, -29.2184, 0.0588446, 0.24 ) }
    dend_30 { pt3dadd( 85.1837, -29.2732, 0.187482, 1.2 ) }
    dend_30 { pt3dadd( 86.0224, -29.3302, 0.3698, 2.16 ) }
    dend_30 { pt3dadd( 87.2312, -29.3433, 0.632057, 1.8 ) }
    dend_30 { pt3dadd( 88.182, -29.2983, 0.822891, 0.36 ) }
    dend_30 { pt3dadd( 89.5553, -29.1225, 1.22248, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_30 { pt3dadd( 90.1597, -29.012, 1.42566, 0.36 ) }
    dend_30 { pt3dadd( 91.1464, -28.7915, 1.81743, 0.36 ) }
    dend_30 { pt3dadd( 92.0912, -28.5488, 2.32632, 1.56 ) }
    dend_30 { pt3dadd( 92.8086, -28.3473, 2.7865, 2.04 ) }
    dend_30 { pt3dadd( 94.7802, -27.7773, 4.27206, 0.24 ) }
    dend_30 { pt3dadd( 95.3484, -27.6213, 4.7528, 0.24 ) }
    dend_30 { pt3dadd( 95.6335, -27.5545, 4.99496, 0.24 ) }
    dend_30 { pt3dadd( 96.9439, -27.3508, 6.08939, 1.68 ) }
    dend_30 { pt3dadd( 97.3387, -27.3141, 6.38554, 2.04 ) }
    dend_30 { pt3dadd( 97.6378, -27.2978, 6.61858, 2.04 ) }
    dend_30 { pt3dadd( 98.9522, -27.2211, 7.56215, 0.24 ) }
    dend_30 { pt3dadd( 99.5181, -27.1508, 8.0022, 0.24 ) }
    dend_30 { pt3dadd( 99.9823, -27.0479, 8.37932, 1.2 ) }
    dend_30 { pt3dadd( 100.347, -26.8981, 8.68234, 1.2 ) }
    dend_30 { pt3dadd( 101.68, -26.0539, 9.92783, 0.12 ) }
    dend_30 { pt3dadd( 102.151, -25.6027, 10.4043, 0.12 ) }
    dend_30 { pt3dadd( 102.405, -25.2421, 10.654, 0.24 ) }
    dend_30 { pt3dadd( 102.575, -24.9545, 10.8546, 0.24 ) }
    dend_30 { pt3dadd( 102.906, -24.4107, 11.2093, 0.24 ) }
    dend_30 { pt3dadd( 103.096, -24.1325, 11.3845, 0.24 ) }
    dend_30 { pt3dadd( 103.472, -23.7005, 11.6066, 0.24 ) }
    dend_30 { pt3dadd( 104.103, -23.1555, 11.9159, 0.24 ) }
    dend_30 { pt3dadd( 105.283, -22.2702, 12.49, 0.12 ) }
    dend_30 { pt3dadd( 106.088, -21.7463, 12.8735, 0.12 ) }
    dend_30 { pt3dadd( 106.315, -21.6201, 12.9794, 1.44 ) }
    dend_30 { pt3dadd( 107.181, -21.1723, 13.3722, 2.52 ) }
    dend_30 { pt3dadd( 108.125, -20.6798, 13.7786, 2.04 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -11.4206, -276.82, -40.7081, 0.12 ) }
    dend_20 { pt3dadd( -10.7959, -278.243, -40.7235, 0.12 ) }
    dend_20 { pt3dadd( -10.4742, -278.964, -40.7278, 0.12 ) }
    dend_20 { pt3dadd( -10.3259, -279.297, -40.7308, 0.48 ) }
    dend_20 { pt3dadd( -10.0685, -279.872, -40.7171, 0.48 ) }
    dend_20 { pt3dadd( -9.79142, -280.474, -40.6914, 0.48 ) }
    dend_20 { pt3dadd( -9.62859, -280.786, -40.7046, 0.48 ) }
    dend_20 { pt3dadd( -9.46343, -281.044, -40.7417, 0.48 ) }
    dend_20 { pt3dadd( -9.0665, -281.554, -40.868, 1.68 ) }
    dend_20 { pt3dadd( -8.63633, -282.024, -41.0255, 2.28 ) }
    dend_20 { pt3dadd( -8.21959, -282.431, -41.1884, 2.4 ) }
    dend_20 { pt3dadd( -7.01151, -283.496, -41.6959, 0.48 ) }
    dend_20 { pt3dadd( -6.17711, -284.194, -42.0748, 0.36 ) }
    dend_20 { pt3dadd( -5.66482, -284.59, -42.3279, 0.12 ) }
    dend_20 { pt3dadd( -5.38309, -284.783, -42.4792, 0.12 ) }
    dend_20 { pt3dadd( -5.16846, -284.914, -42.6086, 0.12 ) }
    dend_20 { pt3dadd( -4.83365, -285.093, -42.8118, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 44/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -11.4206, -276.82, -40.7081, 0.12 ) }
    dend_19 { pt3dadd( -11.5794, -278.35, -40.7215, 0.12 ) }
    dend_19 { pt3dadd( -11.5999, -278.737, -40.7455, 0.12 ) }
    dend_19 { pt3dadd( -11.5995, -279.133, -40.7804, 0.12 ) }
    dend_19 { pt3dadd( -11.5898, -279.792, -40.8946, 0.12 ) }
    dend_19 { pt3dadd( -11.591, -280.119, -40.9639, 0.48 ) }
    dend_19 { pt3dadd( -11.6112, -280.721, -41.1019, 0.48 ) }
    dend_19 { pt3dadd( -11.6171, -280.946, -41.1734, 0.12 ) }
    dend_19 { pt3dadd( -11.7498, -281.622, -41.492, 0.12 ) }
    dend_19 { pt3dadd( -11.9593, -282.263, -41.8521, 0.12 ) }
    dend_19 { pt3dadd( -12.0986, -282.633, -42.0616, 1.68 ) }
    dend_19 { pt3dadd( -12.2089, -282.914, -42.2386, 1.8 ) }
    dend_19 { pt3dadd( -12.4028, -283.392, -42.5637, 1.8 ) }
    dend_19 { pt3dadd( -12.9904, -284.879, -43.5435, 0.12 ) }
    dend_19 { pt3dadd( -13.14, -285.278, -43.8049, 0.12 ) }
    dend_19 { pt3dadd( -13.3882, -286.107, -44.2864, 0.12 ) }
    dend_19 { pt3dadd( -13.5196, -286.74, -44.6576, 0.48 ) }
    dend_19 { pt3dadd( -13.5473, -286.957, -44.778, 0.48 ) }
    dend_19 { pt3dadd( -13.5621, -287.488, -45.016, 0.48 ) }
    dend_19 { pt3dadd( -13.5619, -287.654, -45.079, 0.12 ) }
    dend_19 { pt3dadd( -13.5884, -288.111, -45.2789, 0.12 ) }
    dend_19 { pt3dadd( -13.6581, -288.758, -45.567, 0.12 ) }
    dend_19 { pt3dadd( -13.7016, -289.075, -45.6983, 0.96 ) }
    dend_19 { pt3dadd( -13.8183, -289.757, -45.987, 1.44 ) }
    dend_19 { pt3dadd( -14.083, -291.023, -46.6082, 0.12 ) }
    dend_19 { pt3dadd( -14.2657, -291.779, -46.978, 0.12 ) }
    dend_19 { pt3dadd( -14.3491, -292.107, -47.1365, 0.12 ) }
    dend_19 { pt3dadd( -14.414, -292.347, -47.2422, 0.6 ) }
    dend_19 { pt3dadd( -14.5322, -292.733, -47.4361, 0.6 ) }
    dend_19 { pt3dadd( -14.7763, -293.385, -47.8745, 0.12 ) }
    dend_19 { pt3dadd( -15.0249, -293.964, -48.3171, 0.12 ) }
    dend_19 { pt3dadd( -15.0637, -294.053, -48.3924, 0.48 ) }
    dend_19 { pt3dadd( -15.1693, -294.327, -48.5944, 0.48 ) }
    dend_19 { pt3dadd( -15.4173, -295.139, -49.0685, 0.48 ) }
    dend_19 { pt3dadd( -15.6445, -296.048, -49.4854, 0.24 ) }
    dend_19 { pt3dadd( -15.7023, -296.352, -49.6731, 0.12 ) }
    dend_19 { pt3dadd( -15.8154, -297.276, -50.2528, 0.12 ) }
    dend_19 { pt3dadd( -15.8761, -297.879, -50.6574, 1.44 ) }
    dend_19 { pt3dadd( -15.9096, -298.384, -50.9975, 2.16 ) }
    dend_19 { pt3dadd( -15.9349, -299.059, -51.4313, 2.28 ) }
    dend_19 { pt3dadd( -16.0015, -301.544, -52.9746, 0.12 ) }
    dend_19 { pt3dadd( -16.0116, -302.897, -53.8444, 0.12 ) }
    dend_19 { pt3dadd( -16.0016, -303.643, -54.3408, 0.84 ) }
    dend_19 { pt3dadd( -15.9873, -304.167, -54.6874, 1.44 ) }
    dend_19 { pt3dadd( -15.97, -304.602, -54.9684, 0.96 ) }
    dend_19 { pt3dadd( -15.9451, -305.062, -55.1878, 0.12 ) }
    dend_19 { pt3dadd( -15.9305, -305.502, -55.2958, 0.12 ) }
    dend_19 { pt3dadd( -15.9371, -305.981, -55.4073, 0.12 ) }
    dend_19 { pt3dadd( -15.9507, -306.257, -55.4596, 0.36 ) }
    dend_19 { pt3dadd( -16.0205, -306.967, -54.8139, 0.12 ) }
    dend_19 { pt3dadd( -16.1575, -308.095, -53.4013, 0.12 ) }
    dend_19 { pt3dadd( -16.1935, -308.355, -52.9699, 1.08 ) }
    dend_19 { pt3dadd( -16.2364, -308.633, -52.3924, 1.8 ) }
    dend_19 { pt3dadd( -16.2583, -308.774, -52.0381, 2.04 ) }
    dend_19 { pt3dadd( -16.6052, -311.069, -45.2755, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 17.202, 110.52, 10.377, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_14 { pt3dadd( 17.7062, 112.571, 10.6923, 0.48 ) }
    dend_14 { pt3dadd( 17.9083, 113.457, 10.7979, 0.48 ) }
    dend_14 { pt3dadd( 18.0206, 113.95, 10.8462, 0.48 ) }
    dend_14 { pt3dadd( 18.1595, 114.568, 10.8783, 0.48 ) }
    dend_14 { pt3dadd( 18.438, 115.907, 10.8926, 0.48 ) }
    dend_14 { pt3dadd( 18.6807, 117.259, 10.8691, 0.48 ) }
    dend_14 { pt3dadd( 18.7202, 117.543, 10.8398, 0.72 ) }
    dend_14 { pt3dadd( 18.7912, 118.091, 10.8128, 0.96 ) }
    dend_14 { pt3dadd( 18.9106, 119.003, 10.8104, 0.96 ) }
    dend_14 { pt3dadd( 19.0231, 119.788, 10.9093, 0.36 ) }
    dend_14 { pt3dadd( 19.2327, 120.98, 11.183, 0.36 ) }
    dend_14 { pt3dadd( 19.3745, 121.728, 11.4032, 0.36 ) }
    dend_14 { pt3dadd( 19.6744, 123.324, 11.9212, 1.56 ) }
    dend_14 { pt3dadd( 19.8079, 124.052, 12.1732, 2.16 ) }
    dend_14 { pt3dadd( 20.1552, 125.972, 12.8811, 0.48 ) }
    dend_14 { pt3dadd( 20.4037, 127.413, 13.3353, 0.48 ) }
    dend_14 { pt3dadd( 20.533, 128.256, 13.5618, 0.48 ) }
    dend_14 { pt3dadd( 20.5849, 128.744, 13.6539, 0.48 ) }
    dend_14 { pt3dadd( 20.6064, 129.613, 13.7107, 1.68 ) }
    dend_14 { pt3dadd( 20.5827, 130.132, 13.7063, 1.92 ) }
    dend_14 { pt3dadd( 20.4684, 131.797, 13.5418, 1.08 ) }
    dend_14 { pt3dadd( 20.4143, 132.689, 13.4575, 0.48 ) }
    dend_14 { pt3dadd( 20.403, 133.328, 13.4031, 0.36 ) }
    dend_14 { pt3dadd( 20.4708, 134.503, 13.3265, 0.36 ) }
    dend_14 { pt3dadd( 20.5894, 135.284, 13.3291, 0.36 ) }
    dend_14 { pt3dadd( 20.9385, 136.693, 13.3791, 0.72 ) }
    dend_14 { pt3dadd( 21.1222, 137.227, 13.416, 0.36 ) }
    dend_14 { pt3dadd( 21.3586, 137.848, 13.4389, 0.36 ) }
    dend_14 { pt3dadd( 21.7406, 138.746, 13.4752, 0.36 ) }
    dend_14 { pt3dadd( 22.2563, 139.884, 13.5248, 0.84 ) }
    dend_14 { pt3dadd( 22.8024, 141.093, 13.7683, 1.92 ) }
    dend_14 { pt3dadd( 23.1258, 141.924, 13.836, 2.28 ) }
    dend_14 { pt3dadd( 23.327, 142.53, 13.818, 2.64 ) }
    dend_14 { pt3dadd( 23.4676, 143.023, 13.7506, 2.76 ) }
    dend_14 { pt3dadd( 23.6359, 143.725, 13.5806, 2.76 ) }
    dend_14 { pt3dadd( 24.3288, 146.576, 12.6157, 1.56 ) }
    dend_14 { pt3dadd( 25.3505, 150.339, 11.1241, 0.12 ) }
    dend_14 { pt3dadd( 25.4556, 150.689, 10.9775, 0.12 ) }
    dend_14 { pt3dadd( 25.55, 151.001, 10.8615, 0.12 ) }
    dend_14 { pt3dadd( 25.6825, 151.514, 10.683, 0.72 ) }
    dend_14 { pt3dadd( 25.8408, 152.256, 10.4511, 0.96 ) }
    dend_14 { pt3dadd( 25.9873, 153.143, 10.1685, 0.48 ) }
    dend_14 { pt3dadd( 26.1167, 153.908, 10.1343, 0.36 ) }
    dend_14 { pt3dadd( 26.3698, 155.634, 10.0624, 0.36 ) }
    dend_14 { pt3dadd( 26.4326, 156.193, 10.0835, 0.36 ) }
    dend_14 { pt3dadd( 26.4666, 156.628, 10.1167, 0.12 ) }
    dend_14 { pt3dadd( 26.5214, 157.753, 10.2791, 0.96 ) }
    dend_14 { pt3dadd( 26.554, 158.54, 10.4378, 1.32 ) }
    dend_14 { pt3dadd( 26.5965, 159.037, 10.5085, 1.2 ) }
    dend_14 { pt3dadd( 26.7726, 160.578, 10.9032, 0.48 ) }
    dend_14 { pt3dadd( 26.9244, 161.679, 11.2253, 0.24 ) }
    dend_14 { pt3dadd( 27.0518, 162.498, 11.4717, 1.2 ) }
    dend_14 { pt3dadd( 27.1761, 163.197, 11.6842, 1.68 ) }
    dend_14 { pt3dadd( 27.4629, 164.64, 12.1338, 1.68 ) }
    dend_14 { pt3dadd( 27.9818, 167.054, 12.8821, 1.8 ) }
    dend_14 { pt3dadd( 28.2033, 167.979, 13.1369, 0.96 ) }
    dend_14 { pt3dadd( 28.4569, 168.942, 13.4949, 1.08 ) }
    dend_14 { pt3dadd( 28.6726, 169.692, 13.7829, 0.36 ) }
    dend_14 { pt3dadd( 29.1484, 171.27, 14.3277, 0.36 ) }
    dend_14 { pt3dadd( 29.4242, 172.216, 14.598, 0.36 ) }
    dend_14 { pt3dadd( 29.6299, 172.879, 14.7009, 1.08 ) }
    dend_14 { pt3dadd( 30.1581, 174.622, 14.9465, 1.2 ) }
    dend_14 { pt3dadd( 30.5849, 176.075, 15.0979, 0.96 ) }
    dend_14 { pt3dadd( 31.0033, 177.578, 15.1719, 0.36 ) }
    dend_14 { pt3dadd( 31.3659, 178.902, 15.0765, 0.24 ) }
    dend_14 { pt3dadd( 31.5849, 179.741, 14.9468, 0.6 ) }
    dend_14 { pt3dadd( 31.7246, 180.297, 14.8519, 0.12 ) }
    dend_14 { pt3dadd( 31.8564, 180.773, 14.762, 0.24 ) }
    dend_14 { pt3dadd( 32.2836, 182.197, 14.5377, 0.24 ) }
    dend_14 { pt3dadd( 32.6482, 183.385, 14.3599, 0.24 ) }
    dend_14 { pt3dadd( 32.938, 184.337, 14.1318, 1.68 ) }
    dend_14 { pt3dadd( 33.3384, 185.749, 13.7534, 2.52 ) }
    dend_14 { pt3dadd( 33.6271, 186.943, 13.4343, 0.48 ) }
    dend_14 { pt3dadd( 33.8759, 188.098, 13.1285, 0.48 ) }
    dend_14 { pt3dadd( 34.0684, 189.225, 12.8536, 0.72 ) }
    dend_14 { pt3dadd( 34.2044, 190.474, 12.6044, 1.08 ) }
    dend_14 { pt3dadd( 34.2426, 191.322, 12.4597, 1.68 ) }
    dend_14 { pt3dadd( 34.2138, 192.435, 12.2801, 1.2 ) }
    dend_14 { pt3dadd( 34.1311, 193.375, 12.1911, 0.36 ) }
    dend_14 { pt3dadd( 33.9926, 194.607, 12.1389, 0.36 ) }
    dend_14 { pt3dadd( 33.8867, 195.444, 12.1676, 0.36 ) }
    dend_14 { pt3dadd( 33.7532, 196.396, 12.24, 0.36 ) }
    dend_14 { pt3dadd( 33.5926, 197.566, 12.3239, 2.04 ) }
    dend_14 { pt3dadd( 33.5311, 198.079, 12.3696, 2.4 ) }
    dend_14 { pt3dadd( 33.4439, 199.29, 12.4356, 2.4 ) }
    dend_14 { pt3dadd( 33.4632, 201.118, 12.4126, 0.36 ) }
    dend_14 { pt3dadd( 33.5733, 202.234, 12.3298, 0.36 ) }
    dend_14 { pt3dadd( 33.7324, 203.222, 12.2612, 1.44 ) }
    dend_14 { pt3dadd( 33.9082, 203.986, 12.2153, 2.16 ) }
    dend_14 { pt3dadd( 34.3611, 205.748, 12.1291, 0.48 ) }
    dend_14 { pt3dadd( 34.6324, 206.759, 12.0965, 0.12 ) }
    dend_14 { pt3dadd( 34.8274, 207.454, 12.0605, 0.6 ) }
    dend_14 { pt3dadd( 35.2595, 209.083, 12.0804, 0.36 ) }
    dend_14 { pt3dadd( 35.4368, 209.881, 12.1495, 0.24 ) }
    dend_14 { pt3dadd( 35.5769, 210.809, 12.3011, 0.24 ) }
    dend_14 { pt3dadd( 35.615, 211.329, 12.4022, 0.24 ) }
    dend_14 { pt3dadd( 35.6543, 212.288, 12.5296, 0.36 ) }
    dend_14 { pt3dadd( 35.7097, 213.354, 12.5768, 0.36 ) }
    dend_14 { pt3dadd( 35.8013, 214.133, 12.5729, 0.36 ) }
    dend_14 { pt3dadd( 35.9165, 214.754, 12.588, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( 36.1984, 215.813, 12.6085, 1.68 ) }
    dend_14 { pt3dadd( 36.4415, 216.566, 12.559, 2.4 ) }
    dend_14 { pt3dadd( 36.6266, 217.084, 12.4812, 2.4 ) }
    dend_14 { pt3dadd( 37.1757, 218.471, 12.2809, 0.24 ) }
    dend_14 { pt3dadd( 37.4489, 219.132, 12.1963, 0.24 ) }
    dend_14 { pt3dadd( 37.6166, 219.548, 12.1521, 0.48 ) }
    dend_14 { pt3dadd( 38.1377, 220.988, 12.0659, 0.24 ) }
    dend_14 { pt3dadd( 38.3702, 221.861, 12.0257, 0.24 ) }
    dend_14 { pt3dadd( 38.5325, 222.799, 11.9575, 0.24 ) }
    dend_14 { pt3dadd( 38.5902, 223.562, 11.9259, 0.72 ) }
    dend_14 { pt3dadd( 38.619, 224.23, 11.9444, 0.84 ) }
    dend_14 { pt3dadd( 38.6344, 224.69, 11.9747, 0.36 ) }
    dend_14 { pt3dadd( 38.672, 225.572, 12.0201, 0.36 ) }
    dend_14 { pt3dadd( 38.7343, 226.516, 11.9673, 0.48 ) }
    dend_14 { pt3dadd( 38.8682, 227.885, 11.7431, 0.36 ) }
    dend_14 { pt3dadd( 38.9925, 228.638, 11.5661, 0.36 ) }
    dend_14 { pt3dadd( 39.1034, 229.154, 11.4529, 0.96 ) }
    dend_14 { pt3dadd( 39.4329, 230.359, 11.1306, 0.96 ) }
    dend_14 { pt3dadd( 39.6235, 230.914, 11.017, 0.36 ) }
    dend_14 { pt3dadd( 39.7888, 231.38, 10.9619, 0.36 ) }
    dend_14 { pt3dadd( 40.2218, 232.676, 10.8683, 2.4 ) }
    dend_14 { pt3dadd( 40.6388, 234.066, 10.8743, 3.25 ) }
    dend_14 { pt3dadd( 40.9681, 235.359, 10.9719, 2.16 ) }
    dend_14 { pt3dadd( 41.3628, 237.192, 11.1698, 0.24 ) }
    dend_14 { pt3dadd( 41.6171, 238.54, 11.304, 0.12 ) }
    dend_14 { pt3dadd( 41.8029, 239.671, 11.3874, 0.24 ) }
    dend_14 { pt3dadd( 41.8459, 240.057, 11.4017, 0.36 ) }
    dend_14 { pt3dadd( 41.9193, 241.057, 11.3465, 0.36 ) }
    dend_14 { pt3dadd( 41.9735, 242.314, 11.216, 1.32 ) }
    dend_14 { pt3dadd( 42.0081, 243.087, 11.0817, 0.48 ) }
    dend_14 { pt3dadd( 42.0525, 243.534, 11.0113, 0.12 ) }
    dend_14 { pt3dadd( 42.1714, 244.306, 10.898, 0.12 ) }
    dend_14 { pt3dadd( 42.3323, 245.193, 10.7937, 0.12 ) }
    dend_14 { pt3dadd( 42.4513, 245.741, 10.7488, 0.84 ) }
    dend_14 { pt3dadd( 42.7994, 247.267, 10.6896, 1.56 ) }
    dend_14 { pt3dadd( 42.9483, 247.879, 10.6768, 1.68 ) }
    dend_14 { pt3dadd( 43.2551, 248.988, 10.6787, 0.12 ) }
    dend_14 { pt3dadd( 43.5807, 249.934, 10.6842, 0.12 ) }
    dend_14 { pt3dadd( 43.7963, 250.395, 10.8253, 0.24 ) }
    dend_14 { pt3dadd( 43.9237, 250.573, 10.9529, 0.12 ) }
    dend_14 { pt3dadd( 44.2914, 250.866, 11.3917, 0.12 ) }
    dend_14 { pt3dadd( 44.5361, 251.009, 11.7216, 0.12 ) }
    dend_14 { pt3dadd( 45.3828, 251.348, 12.992, 3.25 ) }
    dend_14 { pt3dadd( 47.7699, 251.935, 16.8481, 0.12 ) }
    dend_14 { pt3dadd( 47.9846, 251.965, 17.2227, 0.12 ) }
    dend_14 { pt3dadd( 48.1643, 251.97, 17.5569, 0.72 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 17.202, 110.52, 10.377, 0.12 ) }
    dend_13 { pt3dadd( 15.2024, 111.229, 10.349, 0.12 ) }
    dend_13 { pt3dadd( 14.7203, 111.401, 10.3579, 0.12 ) }
    dend_13 { pt3dadd( 14.3628, 111.532, 10.3333, 0.96 ) }
    dend_13 { pt3dadd( 13.4713, 111.84, 10.2269, 0.12 ) }
    dend_13 { pt3dadd( 12.8675, 112.037, 10.0938, 0.12 ) }
    dend_13 { pt3dadd( 12.5161, 112.154, 10.0038, 0.12 ) }
    dend_13 { pt3dadd( 12.0105, 112.329, 9.84793, 1.08 ) }
    dend_13 { pt3dadd( 10.9558, 112.669, 9.58253, 0.36 ) }
    dend_13 { pt3dadd( 9.93259, 112.987, 9.33423, 0.36 ) }
    dend_13 { pt3dadd( 8.6554, 113.415, 9.1656, 0.36 ) }
    dend_13 { pt3dadd( 8.07962, 113.595, 9.10321, 0.36 ) }
    dend_13 { pt3dadd( 7.00191, 113.883, 9.23964, 0.36 ) }
    dend_13 { pt3dadd( 6.40642, 113.997, 9.45517, 0.36 ) }
    dend_13 { pt3dadd( 5.76826, 114.06, 9.84354, 0.36 ) }
    dend_13 { pt3dadd( 4.39827, 114.136, 10.9122, 1.92 ) }
    dend_13 { pt3dadd( 3.65364, 114.135, 11.6215, 1.92 ) }
    dend_13 { pt3dadd( 1.41827, 113.965, 13.9736, 0.12 ) }
    dend_13 { pt3dadd( 0.928587, 113.89, 14.5491, 0.12 ) }
    dend_13 { pt3dadd( 0.654157, 113.827, 14.9207, 0.72 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 9.71669, 131.505, -15.883, 0.12 ) }
    dend_11 { pt3dadd( 9.35178, 132.953, -17.3048, 0.12 ) }
    dend_11 { pt3dadd( 9.2996, 133.23, -17.5211, 0.12 ) }
    dend_11 { pt3dadd( 9.23358, 133.754, -17.8386, 0.24 ) }
    dend_11 { pt3dadd( 9.17444, 135.506, -18.843, 0.24 ) }
    dend_11 { pt3dadd( 9.19006, 136.159, -19.185, 0.24 ) }
    dend_11 { pt3dadd( 9.21612, 136.621, -19.4102, 0.24 ) }
    dend_11 { pt3dadd( 9.37078, 137.601, -19.7869, 1.68 ) }
    dend_11 { pt3dadd( 9.51487, 138.277, -20.0735, 1.68 ) }
    dend_11 { pt3dadd( 10.0586, 140.293, -20.9427, 0.12 ) }
    dend_11 { pt3dadd( 10.2995, 141.093, -21.2713, 0.12 ) }
    dend_11 { pt3dadd( 10.3896, 141.358, -21.4012, 0.6 ) }
    dend_11 { pt3dadd( 10.5812, 141.87, -21.6885, 0.48 ) }
    dend_11 { pt3dadd( 11.0891, 143.105, -22.4686, 0.12 ) }
    dend_11 { pt3dadd( 11.3738, 143.738, -22.903, 0.12 ) }
    dend_11 { pt3dadd( 11.4486, 143.897, -22.9947, 0.12 ) }
    dend_11 { pt3dadd( 11.614, 144.259, -23.1969, 0.96 ) }
    dend_11 { pt3dadd( 11.7836, 144.635, -23.3857, 0.96 ) }
    dend_11 { pt3dadd( 11.9667, 145.055, -23.5891, 0.48 ) }
    dend_11 { pt3dadd( 12.3912, 146.064, -23.9952, 0.12 ) }
    dend_11 { pt3dadd( 12.9694, 147.445, -24.5535, 0.12 ) }
    dend_11 { pt3dadd( 13.3303, 148.311, -24.9136, 1.8 ) }
    dend_11 { pt3dadd( 13.5176, 148.767, -25.1037, 2.16 ) }
    dend_11 { pt3dadd( 14.1014, 150.172, -25.6595, 0.12 ) }
    dend_11 { pt3dadd( 14.5393, 151.193, -26.0369, 0.12 ) }
    dend_11 { pt3dadd( 14.7094, 151.589, -26.1619, 0.96 ) }
    dend_11 { pt3dadd( 14.9773, 152.21, -26.352, 0.24 ) }
    dend_11 { pt3dadd( 15.2315, 152.8, -26.525, 0.24 ) }
    dend_11 { pt3dadd( 15.6321, 153.683, -26.7858, 1.68 ) }
    dend_11 { pt3dadd( 15.9558, 154.338, -26.9655, 0.12 ) }
    dend_11 { pt3dadd( 16.2517, 154.868, -27.11, 0.12 ) }
    dend_11 { pt3dadd( 16.6761, 155.526, -27.3831, 0.6 ) }
    dend_11 { pt3dadd( 17.0247, 156.011, -27.6221, 0.12 ) }
    dend_11 { pt3dadd( 17.7973, 157.02, -28.1959, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_11 { pt3dadd( 17.9526, 157.213, -28.3158, 0.12 ) }
    dend_11 { pt3dadd( 18.58, 158.0, -28.8147, 1.92 ) }
    dend_11 { pt3dadd( 20.0834, 159.896, -29.9738, 0.12 ) }
    dend_11 { pt3dadd( 20.8186, 160.853, -30.5143, 0.12 ) }
    dend_11 { pt3dadd( 21.0319, 161.151, -30.6472, 0.84 ) }
    dend_11 { pt3dadd( 21.2558, 161.508, -30.7664, 0.12 ) }
    dend_11 { pt3dadd( 21.7648, 162.469, -30.987, 0.12 ) }
    dend_11 { pt3dadd( 22.0914, 163.235, -30.9991, 1.68 ) }
    dend_11 { pt3dadd( 22.2727, 163.74, -30.8776, 1.2 ) }
    dend_11 { pt3dadd( 22.5806, 164.618, -30.5929, 0.12 ) }
    dend_11 { pt3dadd( 22.8604, 165.387, -30.2699, 0.12 ) }
    dend_11 { pt3dadd( 23.0635, 165.912, -30.0024, 0.6 ) }
    dend_11 { pt3dadd( 23.6364, 167.263, -29.2047, 0.48 ) }
    dend_11 { pt3dadd( 23.923, 167.926, -28.8128, 0.48 ) }
    dend_11 { pt3dadd( 24.1461, 168.416, -28.5207, 0.48 ) }
    dend_11 { pt3dadd( 24.4042, 168.978, -28.2294, 0.12 ) }
    dend_11 { pt3dadd( 24.5794, 169.358, -28.0681, 0.12 ) }
    dend_11 { pt3dadd( 24.8924, 170.1, -27.8802, 1.44 ) }
    dend_11 { pt3dadd( 25.0547, 170.572, -27.8345, 1.68 ) }
    dend_11 { pt3dadd( 25.3326, 171.515, -27.7853, 0.12 ) }
    dend_11 { pt3dadd( 25.649, 172.746, -27.7656, 0.12 ) }
    dend_11 { pt3dadd( 25.904, 173.836, -27.787, 1.92 ) }
    dend_11 { pt3dadd( 26.1799, 175.112, -27.827, 0.12 ) }
    dend_11 { pt3dadd( 26.4627, 176.46, -27.8876, 0.12 ) }
    dend_11 { pt3dadd( 26.5689, 176.956, -27.9169, 0.6 ) }
    dend_11 { pt3dadd( 26.6199, 177.201, -27.936, 0.12 ) }
    dend_11 { pt3dadd( 26.8396, 178.326, -28.0228, 0.12 ) }
    dend_11 { pt3dadd( 26.9761, 179.09, -28.1371, 1.08 ) }
    dend_11 { pt3dadd( 27.0441, 179.474, -28.2137, 0.72 ) }
    dend_11 { pt3dadd( 27.0893, 179.738, -28.2873, 0.12 ) }
    dend_11 { pt3dadd( 27.2483, 180.674, -28.5978, 0.12 ) }
    dend_11 { pt3dadd( 27.3957, 181.554, -28.9214, 1.44 ) }
    dend_11 { pt3dadd( 27.6459, 183.094, -29.6467, 0.12 ) }
    dend_11 { pt3dadd( 27.7249, 183.53, -29.8635, 0.12 ) }
    dend_11 { pt3dadd( 27.7475, 183.639, -29.9178, 0.48 ) }
    dend_11 { pt3dadd( 27.8049, 183.888, -30.0313, 0.12 ) }
    dend_11 { pt3dadd( 28.0207, 184.676, -30.3352, 0.48 ) }
    dend_11 { pt3dadd( 28.3303, 185.646, -30.582, 0.12 ) }
    dend_11 { pt3dadd( 28.7658, 186.879, -30.8614, 0.12 ) }
    dend_11 { pt3dadd( 28.8493, 187.109, -30.9212, 0.72 ) }
    dend_11 { pt3dadd( 29.1348, 187.906, -31.1335, 1.44 ) }
    dend_11 { pt3dadd( 29.3541, 188.517, -31.2927, 1.8 ) }
    dend_11 { pt3dadd( 29.6429, 189.271, -31.4802, 1.68 ) }
    dend_11 { pt3dadd( 30.2416, 190.859, -31.8339, 0.12 ) }
    dend_11 { pt3dadd( 30.45, 191.435, -32.0065, 0.12 ) }
    dend_11 { pt3dadd( 30.6467, 191.997, -32.1993, 0.12 ) }
    dend_11 { pt3dadd( 30.851, 192.641, -32.4681, 1.32 ) }
    dend_11 { pt3dadd( 30.9873, 193.099, -32.6745, 1.32 ) }
    dend_11 { pt3dadd( 31.0739, 193.43, -32.8269, 1.32 ) }
    dend_11 { pt3dadd( 31.2759, 194.365, -33.2038, 0.12 ) }
    dend_11 { pt3dadd( 31.433, 195.188, -33.6276, 0.12 ) }
    dend_11 { pt3dadd( 31.5465, 196.008, -34.1623, 0.72 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 9.71669, 131.505, -15.883, 0.12 ) }
    dend_10 { pt3dadd( 11.7143, 131.81, -0.0647838, 0.12 ) }
    dend_10 { pt3dadd( 11.7954, 131.823, 0.54157, 0.12 ) }
    dend_10 { pt3dadd( 11.8487, 131.831, 0.917207, 0.12 ) }
    dend_10 { pt3dadd( 12.0394, 131.857, 2.18776, 0.84 ) }
    dend_10 { pt3dadd( 12.1034, 131.866, 2.61558, 0.84 ) }
    dend_10 { pt3dadd( 12.2158, 131.878, 3.59259, 0.36 ) }
    dend_10 { pt3dadd( 12.467, 131.942, 3.24571, 0.36 ) }
    dend_10 { pt3dadd( 12.6832, 132.022, 2.87862, 0.36 ) }
    dend_10 { pt3dadd( 12.921, 132.119, 2.43803, 0.36 ) }
    dend_10 { pt3dadd( 13.4655, 132.35, 1.41197, 0.36 ) }
    dend_10 { pt3dadd( 14.597, 132.867, -0.763887, 0.36 ) }
    dend_10 { pt3dadd( 15.2068, 133.161, -1.89735, 2.04 ) }
    dend_10 { pt3dadd( 16.1552, 133.622, -3.60224, 1.56 ) }
    dend_10 { pt3dadd( 16.5884, 133.834, -4.3136, 0.12 ) }
    dend_10 { pt3dadd( 16.8007, 133.937, -4.62066, 0.12 ) }
    dend_10 { pt3dadd( 17.4427, 134.201, -5.34054, 1.2 ) }
    dend_10 { pt3dadd( 17.9839, 134.36, -5.75727, 0.48 ) }
    dend_10 { pt3dadd( 18.2913, 134.429, -5.94275, 0.12 ) }
    dend_10 { pt3dadd( 19.1557, 134.615, -6.34432, 0.12 ) }
    dend_10 { pt3dadd( 20.0466, 134.813, -6.82425, 1.32 ) }
    dend_10 { pt3dadd( 20.45, 134.906, -7.06875, 1.68 ) }
    dend_10 { pt3dadd( 21.6397, 135.225, -7.89728, 0.12 ) }
    dend_10 { pt3dadd( 22.0003, 135.34, -8.2142, 0.12 ) }
    dend_10 { pt3dadd( 22.5309, 135.527, -8.78674, 0.6 ) }
    dend_10 { pt3dadd( 23.5106, 135.862, -9.98932, 0.12 ) }
    dend_10 { pt3dadd( 23.8434, 135.963, -10.411, 0.12 ) }
    dend_10 { pt3dadd( 24.7673, 136.217, -11.6279, 1.8 ) }
    dend_10 { pt3dadd( 25.7275, 136.457, -12.8784, 1.8 ) }
    dend_10 { pt3dadd( 26.7082, 136.642, -14.2257, 0.48 ) }
    dend_10 { pt3dadd( 27.0571, 136.682, -14.6888, 0.48 ) }
    dend_10 { pt3dadd( 27.4116, 136.697, -15.0974, 0.48 ) }
    dend_10 { pt3dadd( 28.1305, 136.698, -15.8785, 1.44 ) }
    dend_10 { pt3dadd( 28.5626, 136.684, -16.3115, 1.68 ) }
    dend_10 { pt3dadd( 30.1489, 136.679, -17.8148, 0.36 ) }
    dend_10 { pt3dadd( 30.8543, 136.75, -18.4881, 0.36 ) }
    dend_10 { pt3dadd( 31.4713, 136.901, -19.2192, 1.68 ) }
    dend_10 { pt3dadd( 32.0298, 137.107, -19.9671, 1.2 ) }
    dend_10 { pt3dadd( 32.7864, 137.484, -21.0989, 0.36 ) }
    dend_10 { pt3dadd( 33.282, 137.797, -21.9032, 0.36 ) }
    dend_10 { pt3dadd( 33.9149, 138.321, -23.0388, 1.68 ) }
    dend_10 { pt3dadd( 35.0224, 139.423, -25.2623, 0.24 ) }
    dend_10 { pt3dadd( 35.2592, 139.685, -25.7538, 0.24 ) }
    dend_10 { pt3dadd( 35.5469, 139.999, -26.3023, 0.84 ) }
    dend_10 { pt3dadd( 35.7806, 140.231, -26.6969, 0.96 ) }
    dend_10 { pt3dadd( 36.382, 140.69, -27.5426, 0.24 ) }
    dend_10 { pt3dadd( 36.7617, 140.887, -27.9592, 0.24 ) }
    dend_10 { pt3dadd( 37.5255, 141.125, -28.6264, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 37.8672, 141.173, -28.9812, 1.68 ) }
    dend_10 { pt3dadd( 38.4525, 141.155, -29.7919, 0.36 ) }
    dend_10 { pt3dadd( 38.7307, 141.103, -30.243, 0.36 ) }
    dend_10 { pt3dadd( 38.9319, 141.033, -30.614, 0.36 ) }
    dend_10 { pt3dadd( 39.7408, 140.679, -32.225, 0.96 ) }
    dend_10 { pt3dadd( 40.6416, 140.222, -34.0866, 1.68 ) }
    dend_10 { pt3dadd( 41.7137, 139.639, -36.3199, 0.6 ) }
    dend_10 { pt3dadd( 41.9188, 139.515, -36.7431, 0.48 ) }
    dend_10 { pt3dadd( 42.6825, 138.997, -38.2781, 2.04 ) }
    dend_10 { pt3dadd( 42.9472, 138.79, -38.779, 2.52 ) }
    dend_10 { pt3dadd( 43.7484, 138.09, -40.0807, 0.36 ) }
    dend_10 { pt3dadd( 43.9863, 137.884, -40.3843, 0.36 ) }
    dend_10 { pt3dadd( 44.3967, 137.578, -40.7744, 0.48 ) }
    dend_10 { pt3dadd( 45.2895, 136.943, -41.5395, 0.36 ) }
    dend_10 { pt3dadd( 45.6159, 136.7, -41.7857, 0.36 ) }
    dend_10 { pt3dadd( 45.8008, 136.554, -41.9215, 0.36 ) }
    dend_10 { pt3dadd( 46.7313, 135.812, -42.5043, 0.36 ) }
    dend_10 { pt3dadd( 47.5049, 135.205, -42.932, 1.08 ) }
    dend_10 { pt3dadd( 48.0397, 134.811, -43.1644, 1.8 ) }
    dend_10 { pt3dadd( 48.7333, 134.333, -43.3678, 1.2 ) }
    dend_10 { pt3dadd( 49.3303, 133.968, -43.5188, 0.36 ) }
    dend_10 { pt3dadd( 50.1554, 133.517, -43.6315, 0.36 ) }
    dend_10 { pt3dadd( 51.0004, 133.108, -43.661, 0.36 ) }
    dend_10 { pt3dadd( 51.6625, 132.84, -43.6383, 1.2 ) }
    dend_10 { pt3dadd( 52.4866, 132.579, -43.6052, 1.8 ) }
    dend_10 { pt3dadd( 53.5802, 132.313, -43.5762, 0.12 ) }
    dend_10 { pt3dadd( 55.1342, 132.011, -43.576, 0.12 ) }
    dend_10 { pt3dadd( 55.9875, 131.86, -43.6042, 1.44 ) }
    dend_10 { pt3dadd( 56.4749, 131.757, -43.6379, 2.16 ) }
    dend_10 { pt3dadd( 57.3419, 131.512, -43.7129, 2.4 ) }
    dend_10 { pt3dadd( 58.4678, 131.1, -43.8061, 0.24 ) }
    dend_10 { pt3dadd( 58.9134, 130.877, -43.8386, 0.24 ) }
    dend_10 { pt3dadd( 59.3279, 130.598, -43.8896, 0.24 ) }
    dend_10 { pt3dadd( 60.0428, 130.01, -43.9269, 0.48 ) }
    dend_10 { pt3dadd( 60.5064, 129.576, -43.9283, 0.12 ) }
    dend_10 { pt3dadd( 61.0521, 129.072, -43.881, 0.12 ) }
    dend_10 { pt3dadd( 61.4358, 128.756, -43.7999, 0.12 ) }
    dend_10 { pt3dadd( 61.8386, 128.489, -43.7067, 0.12 ) }
    dend_10 { pt3dadd( 62.3528, 128.229, -43.5223, 0.36 ) }
    dend_10 { pt3dadd( 62.6927, 128.102, -43.3796, 0.12 ) }
    dend_10 { pt3dadd( 63.7525, 127.757, -42.9176, 0.12 ) }
    dend_10 { pt3dadd( 64.6759, 127.485, -42.4964, 1.44 ) }
    dend_10 { pt3dadd( 64.9129, 127.42, -42.3869, 1.56 ) }
    dend_10 { pt3dadd( 66.2745, 127.037, -41.7346, 0.36 ) }
    dend_10 { pt3dadd( 66.7058, 126.888, -41.4484, 0.36 ) }
    dend_10 { pt3dadd( 66.9582, 126.777, -41.2324, 0.36 ) }
    dend_10 { pt3dadd( 67.2517, 126.583, -40.9124, 0.36 ) }
    dend_10 { pt3dadd( 67.4705, 126.404, -40.6991, 0.36 ) }
    dend_10 { pt3dadd( 67.6249, 126.258, -40.5296, 0.36 ) }
    dend_10 { pt3dadd( 68.6607, 125.156, -39.3989, 0.12 ) }
    dend_10 { pt3dadd( 68.8615, 124.943, -39.1799, 0.12 ) }
    dend_10 { pt3dadd( 69.0877, 124.711, -38.9215, 0.12 ) }
    dend_10 { pt3dadd( 69.8617, 123.972, -38.0678, 2.4 ) }
    dend_10 { pt3dadd( 71.2027, 122.792, -36.7425, 0.12 ) }
    dend_10 { pt3dadd( 71.5863, 122.469, -36.4129, 0.12 ) }
    dend_10 { pt3dadd( 72.0756, 122.072, -36.0158, 0.36 ) }
    dend_10 { pt3dadd( 72.5495, 121.689, -35.5972, 0.12 ) }
    dend_10 { pt3dadd( 72.9398, 121.374, -35.2339, 0.12 ) }
    dend_10 { pt3dadd( 73.3081, 121.065, -34.8718, 1.08 ) }
    dend_10 { pt3dadd( 73.6243, 120.8, -34.5634, 1.08 ) }
    dend_10 { pt3dadd( 74.6944, 119.848, -33.4159, 0.36 ) }
    dend_10 { pt3dadd( 74.9704, 119.568, -33.1185, 0.36 ) }
    dend_10 { pt3dadd( 75.1917, 119.331, -32.915, 0.12 ) }
    dend_10 { pt3dadd( 75.3234, 119.183, -32.7716, 0.12 ) }
    dend_10 { pt3dadd( 76.0491, 118.368, -31.9369, 0.12 ) }
    dend_10 { pt3dadd( 76.3808, 118.015, -31.5804, 1.32 ) }
    dend_10 { pt3dadd( 76.8914, 117.504, -31.079, 2.04 ) }
    dend_10 { pt3dadd( 77.491, 116.962, -30.4984, 1.32 ) }
    dend_10 { pt3dadd( 78.8431, 115.857, -29.1941, 0.12 ) }
    dend_10 { pt3dadd( 79.0276, 115.728, -29.0272, 0.12 ) }
    dend_10 { pt3dadd( 79.3429, 115.569, -28.6706, 0.24 ) }
    dend_10 { pt3dadd( 79.8134, 115.373, -28.0868, 0.24 ) }
    dend_10 { pt3dadd( 80.1715, 115.264, -27.595, 0.24 ) }
    dend_10 { pt3dadd( 80.6608, 115.166, -26.8543, 0.24 ) }
    dend_10 { pt3dadd( 80.911, 115.141, -26.497, 0.84 ) }
    dend_10 { pt3dadd( 82.6588, 115.058, -23.6788, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 35.9271, 95.9027, 14.5584, 0.72 ) }
    dend_6 { pt3dadd( 35.5854, 95.3922, 13.5568, 0.72 ) }
    dend_6 { pt3dadd( 35.0398, 94.7902, 12.2474, 0.6 ) }
    dend_6 { pt3dadd( 34.685, 94.3987, 11.3956, 0.36 ) }
    dend_6 { pt3dadd( 34.553, 94.2532, 11.079, 0.48 ) }
    dend_6 { pt3dadd( 34.2236, 93.8898, 10.2885, 0.36 ) }
    dend_6 { pt3dadd( 33.8214, 93.4461, 9.32304, 0.12 ) }
    dend_6 { pt3dadd( 33.6607, 93.3273, 8.99442, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 35.9271, 95.9027, 14.5584, 0.48 ) }
    dend_5 { pt3dadd( 35.9406, 96.8108, 14.5329, 0.48 ) }
    dend_5 { pt3dadd( 35.9323, 97.5974, 14.552, 0.48 ) }
    dend_5 { pt3dadd( 35.8711, 98.4353, 14.573, 0.6 ) }
    dend_5 { pt3dadd( 35.7875, 99.1116, 14.5997, 0.48 ) }
    dend_5 { pt3dadd( 35.6475, 100.129, 14.6456, 0.48 ) }
    dend_5 { pt3dadd( 35.4893, 101.278, 14.7002, 2.04 ) }
    dend_5 { pt3dadd( 35.3909, 102.224, 14.7556, 1.92 ) }
    dend_5 { pt3dadd( 35.2937, 103.319, 14.7691, 1.44 ) }
    dend_5 { pt3dadd( 35.2242, 104.182, 14.7434, 1.08 ) }
    dend_5 { pt3dadd( 35.1825, 104.946, 14.7029, 0.96 ) }
    dend_5 { pt3dadd( 35.1875, 105.332, 14.6563, 0.72 ) }
    dend_5 { pt3dadd( 35.2836, 106.221, 14.4634, 1.08 ) }
    dend_5 { pt3dadd( 35.5623, 107.674, 14.1349, 0.48 ) }
    dend_5 { pt3dadd( 35.7159, 108.282, 14.0087, 0.48 ) }
    dend_5 { pt3dadd( 35.9947, 109.288, 13.824, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 36.2325, 110.178, 13.6597, 1.92 ) }
    dend_5 { pt3dadd( 36.5226, 111.365, 13.5071, 1.08 ) }
    dend_5 { pt3dadd( 36.7212, 112.204, 13.4618, 0.72 ) }
    dend_5 { pt3dadd( 36.8236, 112.651, 13.4891, 0.24 ) }
    dend_5 { pt3dadd( 37.115, 113.669, 13.5749, 0.24 ) }
    dend_5 { pt3dadd( 37.3228, 114.422, 13.6401, 0.72 ) }
    dend_5 { pt3dadd( 37.5172, 115.301, 13.7546, 0.12 ) }
    dend_5 { pt3dadd( 37.7007, 116.066, 13.8746, 0.12 ) }
    dend_5 { pt3dadd( 37.9625, 117.14, 14.0218, 1.8 ) }
    dend_5 { pt3dadd( 38.2778, 118.504, 14.2102, 2.76 ) }
    dend_5 { pt3dadd( 38.466, 119.39, 14.3539, 2.64 ) }
    dend_5 { pt3dadd( 38.769, 120.87, 14.6138, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 39.2867, -125.119, -32.8071, 0.12 ) }
    dend_39 { pt3dadd( 40.0952, -125.682, -32.8177, 0.12 ) }
    dend_39 { pt3dadd( 40.7661, -126.149, -32.8266, 0.12 ) }
    dend_39 { pt3dadd( 41.4445, -126.621, -32.8355, 0.6 ) }
    dend_39 { pt3dadd( 41.8006, -126.868, -32.8402, 0.12 ) }
    dend_39 { pt3dadd( 42.6542, -127.463, -32.8514, 0.12 ) }
    dend_39 { pt3dadd( 43.1015, -127.774, -32.8573, 0.72 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 39.2867, -125.119, -32.8071, 0.12 ) }
    dend_36 { pt3dadd( 39.3517, -126.475, -32.5984, 0.12 ) }
    dend_36 { pt3dadd( 39.3845, -127.303, -32.3415, 0.12 ) }
    dend_36 { pt3dadd( 39.4312, -127.904, -32.117, 0.96 ) }
    dend_36 { pt3dadd( 39.4925, -128.492, -31.8951, 1.56 ) }
    dend_36 { pt3dadd( 39.6141, -129.417, -31.5595, 0.12 ) }
    dend_36 { pt3dadd( 39.6936, -129.899, -31.3934, 0.12 ) }
    dend_36 { pt3dadd( 40.0287, -131.375, -30.7884, 1.08 ) }
    dend_36 { pt3dadd( 40.2, -132.005, -30.5209, 0.72 ) }
    dend_36 { pt3dadd( 40.3496, -132.496, -30.3236, 0.12 ) }
    dend_36 { pt3dadd( 40.5318, -133.075, -30.041, 0.12 ) }
    dend_36 { pt3dadd( 40.6883, -133.601, -29.7663, 0.12 ) }
    dend_36 { pt3dadd( 40.9123, -134.439, -29.359, 1.44 ) }
    dend_36 { pt3dadd( 41.0234, -134.892, -29.1675, 1.68 ) }
    dend_36 { pt3dadd( 41.0933, -135.248, -29.012, 1.68 ) }
    dend_36 { pt3dadd( 41.3455, -136.754, -28.3862, 0.12 ) }
    dend_36 { pt3dadd( 41.4248, -137.449, -28.1147, 0.12 ) }
    dend_36 { pt3dadd( 41.4661, -138.199, -27.8634, 0.12 ) }
    dend_36 { pt3dadd( 41.4692, -138.462, -27.7956, 0.96 ) }
    dend_36 { pt3dadd( 41.4571, -139.076, -27.6614, 0.96 ) }
    dend_36 { pt3dadd( 41.4438, -139.642, -27.5667, 0.12 ) }
    dend_36 { pt3dadd( 41.3795, -141.175, -27.4368, 0.12 ) }
    dend_36 { pt3dadd( 41.3356, -141.957, -27.3725, 0.96 ) }
    dend_36 { pt3dadd( 41.2847, -142.671, -27.3295, 1.68 ) }
    dend_36 { pt3dadd( 41.2522, -143.173, -27.3069, 1.92 ) }
    dend_36 { pt3dadd( 41.2214, -143.699, -27.3057, 1.92 ) }
    dend_36 { pt3dadd( 41.1515, -145.003, -27.3577, 0.12 ) }
    dend_36 { pt3dadd( 41.1171, -145.502, -27.4155, 0.12 ) }
    dend_36 { pt3dadd( 41.0114, -146.617, -27.5856, 0.12 ) }
    dend_36 { pt3dadd( 40.9427, -147.12, -27.7118, 0.6 ) }
    dend_36 { pt3dadd( 40.8102, -147.789, -27.9237, 0.12 ) }
    dend_36 { pt3dadd( 40.6337, -148.475, -28.1713, 0.12 ) }
    dend_36 { pt3dadd( 40.4337, -149.186, -28.4531, 1.2 ) }
    dend_36 { pt3dadd( 40.1337, -150.177, -28.8575, 1.68 ) }
    dend_36 { pt3dadd( 39.6697, -151.606, -29.4222, 0.12 ) }
    dend_36 { pt3dadd( 39.4499, -152.321, -29.7015, 0.12 ) }
    dend_36 { pt3dadd( 39.3237, -152.826, -29.878, 0.12 ) }
    dend_36 { pt3dadd( 39.2199, -153.419, -30.0905, 0.12 ) }
    dend_36 { pt3dadd( 39.1874, -153.77, -30.2104, 1.2 ) }
    dend_36 { pt3dadd( 39.1701, -154.529, -30.4518, 1.56 ) }
    dend_36 { pt3dadd( 39.2209, -155.859, -30.8353, 0.24 ) }
    dend_36 { pt3dadd( 39.2971, -156.835, -31.136, 0.24 ) }
    dend_36 { pt3dadd( 39.3724, -157.812, -31.4517, 0.72 ) }
    dend_36 { pt3dadd( 39.3994, -158.293, -31.6074, 0.84 ) }
    dend_36 { pt3dadd( 39.422, -158.808, -31.7671, 0.12 ) }
    dend_36 { pt3dadd( 39.4287, -159.168, -31.8781, 0.12 ) }
    dend_36 { pt3dadd( 39.4069, -159.765, -32.073, 0.12 ) }
    dend_36 { pt3dadd( 39.3808, -160.196, -32.2293, 0.12 ) }
    dend_36 { pt3dadd( 39.3642, -160.712, -32.2159, 0.12 ) }
    dend_36 { pt3dadd( 39.3621, -160.958, -32.1627, 0.12 ) }
    dend_36 { pt3dadd( 39.3516, -161.824, -31.8657, 1.32 ) }
    dend_36 { pt3dadd( 39.3089, -162.769, -31.4723, 0.12 ) }
    dend_36 { pt3dadd( 39.2991, -163.599, -31.0324, 0.12 ) }
    dend_36 { pt3dadd( 39.3867, -167.183, -28.6521, 0.6 ) }
    dend_36 { pt3dadd( 39.4423, -168.484, -27.5174, 1.32 ) }
    dend_36 { pt3dadd( 39.4604, -168.823, -27.1244, 2.04 ) }
    dend_36 { pt3dadd( 39.4853, -169.163, -26.5698, 2.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 108.125, -20.6798, 13.7786, 0.24 ) }
    dend_32 { pt3dadd( 109.146, -20.5755, 14.2355, 0.24 ) }
    dend_32 { pt3dadd( 109.595, -20.5208, 14.4359, 0.24 ) }
    dend_32 { pt3dadd( 111.233, -20.3151, 15.1555, 0.24 ) }
    dend_32 { pt3dadd( 111.715, -20.2459, 15.35, 0.96 ) }
    dend_32 { pt3dadd( 112.621, -20.1037, 15.6459, 1.56 ) }
    dend_32 { pt3dadd( 113.415, -19.9679, 15.9152, 0.36 ) }
    dend_32 { pt3dadd( 114.948, -19.6806, 16.4068, 0.12 ) }
    dend_32 { pt3dadd( 115.294, -19.6088, 16.5122, 1.2 ) }
    dend_32 { pt3dadd( 116.374, -19.3546, 16.7797, 2.16 ) }
    dend_32 { pt3dadd( 117.711, -18.9663, 17.1346, 0.12 ) }
    dend_32 { pt3dadd( 119.084, -18.4741, 17.4981, 0.12 ) }
    dend_32 { pt3dadd( 119.323, -18.3636, 17.558, 0.84 ) }
    dend_32 { pt3dadd( 119.783, -18.0899, 17.6526, 0.96 ) }
    dend_32 { pt3dadd( 120.392, -17.6742, 17.7892, 0.12 ) }
    dend_32 { pt3dadd( 120.942, -17.1928, 17.9414, 0.12 ) }
    dend_32 { pt3dadd( 121.115, -16.9726, 17.9968, 0.6 ) }
    dend_32 { pt3dadd( 121.496, -16.3441, 17.9936, 0.12 ) }
    dend_32 { pt3dadd( 121.739, -15.8361, 18.0008, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 95/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 108.125, -20.6798, 13.7786, 0.6 ) }
    dend_31 { pt3dadd( 107.937, -19.4161, 13.9399, 0.6 ) }
    dend_31 { pt3dadd( 107.892, -19.066, 13.9851, 0.6 ) }
    dend_31 { pt3dadd( 107.835, -18.316, 14.0566, 0.84 ) }
    dend_31 { pt3dadd( 107.826, -17.2901, 14.1293, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_31 { pt3dadd( 107.814, -16.1221, 14.1949, 0.12 ) }
    dend_31 { pt3dadd( 107.813, -15.7241, 14.2126, 0.96 ) }
    dend_31 { pt3dadd( 107.855, -14.8544, 14.2451, 1.2 ) }
    dend_31 { pt3dadd( 107.943, -13.8644, 14.2583, 0.12 ) }
    dend_31 { pt3dadd( 108.085, -12.7569, 14.2455, 0.12 ) }
    dend_31 { pt3dadd( 108.227, -11.8878, 14.1915, 0.12 ) }
    dend_31 { pt3dadd( 108.434, -10.9121, 14.0881, 0.12 ) }
    dend_31 { pt3dadd( 108.542, -10.4751, 14.0392, 0.12 ) }
    dend_31 { pt3dadd( 108.822, -9.49226, 13.9265, 1.68 ) }
    dend_31 { pt3dadd( 108.938, -9.17337, 13.8289, 1.92 ) }
    dend_31 { pt3dadd( 109.446, -8.07138, 13.2894, 0.12 ) }
    dend_31 { pt3dadd( 109.924, -7.19275, 12.7019, 0.12 ) }
    dend_31 { pt3dadd( 110.129, -6.80328, 12.3874, 1.32 ) }
    dend_31 { pt3dadd( 110.287, -6.4532, 12.0365, 1.68 ) }
    dend_31 { pt3dadd( 111.178, -4.35249, 9.35955, 0.36 ) }
    dend_31 { pt3dadd( 111.288, -4.11871, 9.00526, 0.36 ) }
    dend_31 { pt3dadd( 111.438, -3.81525, 8.46586, 0.12 ) }
    dend_31 { pt3dadd( 111.654, -3.37378, 7.57187, 0.12 ) }
    dend_31 { pt3dadd( 112.047, -2.49681, 5.69486, 0.48 ) }
    dend_31 { pt3dadd( 112.254, -1.92592, 4.47008, 1.44 ) }
    dend_31 { pt3dadd( 112.36, -1.38282, 3.49525, 2.16 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.83365, -285.093, -42.8118, 0.24 ) }
    dend_22 { pt3dadd( -4.58442, -284.728, -43.0211, 0.24 ) }
    dend_22 { pt3dadd( -4.26815, -284.265, -43.2868, 0.24 ) }
    dend_22 { pt3dadd( -3.88563, -283.706, -43.608, 0.6 ) }
    dend_22 { pt3dadd( -3.49915, -283.14, -43.9327, 1.08 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 26/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.83365, -285.093, -42.8118, 0.12 ) }
    dend_21 { pt3dadd( -4.30214, -285.53, -42.2883, 0.12 ) }
    dend_21 { pt3dadd( -3.95745, -285.77, -41.9462, 0.12 ) }
    dend_21 { pt3dadd( -3.64806, -285.933, -41.6963, 0.12 ) }
    dend_21 { pt3dadd( -3.23566, -286.093, -41.4391, 0.12 ) }
    dend_21 { pt3dadd( -3.00406, -286.159, -41.3191, 0.12 ) }
    dend_21 { pt3dadd( -1.10034, -286.56, -40.4813, 0.12 ) }
    dend_21 { pt3dadd( -0.274835, -286.615, -40.2087, 2.04 ) }
    dend_21 { pt3dadd( 0.611423, -286.601, -39.9369, 1.56 ) }
    dend_21 { pt3dadd( 1.55266, -286.526, -39.6829, 0.36 ) }
    dend_21 { pt3dadd( 2.06219, -286.453, -39.5292, 0.36 ) }
    dend_21 { pt3dadd( 2.64112, -286.348, -39.3583, 0.36 ) }
    dend_21 { pt3dadd( 3.80782, -286.104, -39.0711, 0.36 ) }
    dend_21 { pt3dadd( 4.26866, -286.001, -38.8906, 0.6 ) }
    dend_21 { pt3dadd( 4.58106, -285.933, -38.724, 0.6 ) }
    dend_21 { pt3dadd( 5.92725, -285.613, -37.8808, 0.36 ) }
    dend_21 { pt3dadd( 6.22429, -285.543, -37.6886, 0.6 ) }
    dend_21 { pt3dadd( 6.6475, -285.451, -37.4477, 0.6 ) }
    dend_21 { pt3dadd( 7.42655, -285.307, -37.0967, 0.12 ) }
    dend_21 { pt3dadd( 7.75486, -285.275, -37.0162, 0.12 ) }
    dend_21 { pt3dadd( 8.3618, -285.271, -36.98, 0.12 ) }
    dend_21 { pt3dadd( 8.94583, -285.338, -37.1019, 1.08 ) }
    dend_21 { pt3dadd( 10.0554, -285.602, -37.4526, 0.12 ) }
    dend_21 { pt3dadd( 10.2898, -285.697, -37.5468, 0.12 ) }
    dend_21 { pt3dadd( 10.9213, -286.029, -37.8295, 0.12 ) }
    dend_21 { pt3dadd( 11.3156, -286.279, -38.0101, 0.48 ) }
    dend_21 { pt3dadd( 11.9455, -286.74, -38.3052, 0.12 ) }
    dend_21 { pt3dadd( 12.3154, -287.038, -38.4719, 0.12 ) }
    dend_21 { pt3dadd( 12.9487, -287.57, -38.6947, 0.12 ) }
    dend_21 { pt3dadd( 13.3979, -287.948, -38.8642, 0.12 ) }
    dend_21 { pt3dadd( 13.7759, -288.256, -39.0172, 1.08 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 39.4853, -169.163, -26.5698, 0.48 ) }
    dend_38 { pt3dadd( 39.4959, -171.132, -29.9405, 0.48 ) }
    dend_38 { pt3dadd( 39.4877, -171.453, -30.4635, 0.48 ) }
    dend_38 { pt3dadd( 39.4653, -172.202, -31.5594, 0.12 ) }
    dend_38 { pt3dadd( 39.4632, -172.571, -32.0606, 0.12 ) }
    dend_38 { pt3dadd( 39.4601, -173.082, -32.7551, 1.2 ) }
    dend_38 { pt3dadd( 39.4563, -173.725, -33.6297, 0.12 ) }
    dend_38 { pt3dadd( 39.4465, -173.891, -33.7959, 0.12 ) }
    dend_38 { pt3dadd( 39.4156, -174.413, -34.33, 0.72 ) }
    dend_38 { pt3dadd( 39.3879, -174.719, -34.571, 0.72 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 39.4853, -169.163, -26.5698, 0.12 ) }
    dend_37 { pt3dadd( 38.4495, -171.142, -27.9851, 0.12 ) }
    dend_37 { pt3dadd( 38.0696, -171.988, -28.3365, 0.12 ) }
    dend_37 { pt3dadd( 37.9616, -172.232, -28.4159, 0.6 ) }
    dend_37 { pt3dadd( 37.6509, -172.91, -28.5962, 0.24 ) }
    dend_37 { pt3dadd( 37.5331, -173.162, -28.6239, 0.24 ) }
    dend_37 { pt3dadd( 37.2125, -173.814, -28.6389, 0.24 ) }
    dend_37 { pt3dadd( 36.9666, -174.287, -28.5137, 0.6 ) }
    dend_37 { pt3dadd( 36.5628, -174.905, -28.3252, 0.12 ) }
    dend_37 { pt3dadd( 36.1977, -175.371, -28.1839, 0.12 ) }
    dend_37 { pt3dadd( 35.3968, -176.206, -27.944, 0.84 ) }
    dend_37 { pt3dadd( 35.2023, -176.389, -27.8811, 0.84 ) }
    dend_37 { pt3dadd( 34.8288, -176.696, -27.7396, 0.12 ) }
    dend_37 { pt3dadd( 34.6199, -176.844, -27.648, 0.12 ) }
    dend_37 { pt3dadd( 34.0707, -177.176, -27.3629, 0.84 ) }
    dend_37 { pt3dadd( 33.8412, -177.287, -27.2725, 0.96 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_15 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_25 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_16 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_53 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_50 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_9 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_60 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_59 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_57 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_51 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_11 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_10 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_36 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_54 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_12 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_39 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_32 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_42 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_45 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_38 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_37 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_22 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_21 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_15 nseg = 3
    dend_25 nseg = 3
    dend_16 nseg = 11
    dend_41 nseg = 7
    dend_58 nseg = 3
    dend_55 nseg = 3
    dend_53 nseg = 7
    dend_50 nseg = 3
    dend_34 nseg = 5
    dend_9 nseg = 3
    dend_60 nseg = 25
    dend_59 nseg = 7
    dend_57 nseg = 5
    dend_56 nseg = 3
    dend_52 nseg = 11
    dend_51 nseg = 7
    dend_47 nseg = 3
    dend_30 nseg = 3
    dend_19 nseg = 3
    dend_14 nseg = 7
    dend_11 nseg = 3
    dend_10 nseg = 7
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L4_DBC_ba1da59a9a_0_0


