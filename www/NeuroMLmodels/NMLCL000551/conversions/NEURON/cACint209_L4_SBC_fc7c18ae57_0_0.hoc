// Cell: cACint209_L4_SBC_fc7c18ae57_0_0
/*
{
  "id" : "cACint209_L4_SBC_fc7c18ae57_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.259893, -9.42971, -0.848319, 2.94679", "0.274509, -8.53076, -0.774952, 4.96732", "0.289126, -7.63181, -0.701585, 7.50293", "0.303742, -6.73286, -0.628218, 9.88075", "0.318358, -5.8339, -0.554851, 11.1234", "0.332975, -4.93495, -0.481484, 12.1727", "0.347591, -4.036, -0.408118, 12.6064", "0.362208, -3.13705, -0.334751, 12.7", "0.376824, -2.2381, -0.261384, 12.7598", "0.39144, -1.33915, -0.188017, 12.6811", "0.406057, -0.4402, -0.11465, 12.486", "0.420673, 0.458751, -0.0412834, 12.2118", "0.43529, 1.3577, 0.0320835, 11.8745", "0.449906, 2.25665, 0.10545, 11.5372", "0.464522, 3.1556, 0.178817, 10.2739", "0.479139, 4.05455, 0.252184, 8.61928", "0.493755, 4.95351, 0.325551, 7.19059", "0.508371, 5.85246, 0.398918, 6.26009", "0.522988, 6.75141, 0.472285, 5.10411", "0.537604, 7.65036, 0.545651, 3.84179", "0.552221, 8.54931, 0.619018, 2.38567" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.400844, 9.3298, 0.523351, 4.42", "0.400844, 9.3298, 0.523351, 4.42", "0.344888, 10.9994, 0.528405, 4.42", "0.336518, 13.5038, 0.539248, 4.42", "0.364024, 15.2683, 0.547796, 4.49", "0.385549, 16.6491, 0.554485, 4.49", "0.419124, 18.803, 0.56492, 4.72", "0.444521, 19.9953, 0.571309, 4.72", "0.497699, 21.5134, 0.58132, 4.72", "0.60212, 22.7673, 0.592125, 4.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000005627683015
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.552221, 8.54931, 0.619018, 1.43872", "0.79608, 23.5473, 0.619018, 1.43872", "1.03994, 38.5453, 0.619018, 1.43872" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.60212, 22.7673, 0.592125, 3.09", "1.37433, 24.458, 0.674906, 3.09", "1.94129, 25.7528, 0.737543, 2.73", "2.61945, 27.3399, 0.81271, 2.73", "3.28142, 28.8839, 0.884782, 2.73", "3.71169, 29.8861, 0.931179, 2.8", "4.41143, 31.4976, 1.00525, 2.8", "4.46278, 31.621, 1.01027, 2.8", "4.97007, 32.8107, 1.05891, 2.8", "5.62174, 34.281, 1.11815, 2.8", "5.64462, 34.3312, 1.11998, 2.8", "6.30397, 35.6379, 1.16818, 2.95", "6.84976, 36.6329, 1.20044, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.60212, 22.7673, 0.592125, 1.33", "-0.181107, 25.459, 1.47318, 1.33", "-0.203019, 25.5449, 1.49562, 1.33", "-0.443736, 26.6134, 1.72653, 1.33", "-0.458055, 26.6889, 1.74066, 1.33", "-0.675131, 27.9615, 1.96426, 1.18", "-0.684971, 28.0242, 1.97531, 1.18", "-0.780099, 29.1337, 2.08014, 1.4", "-0.846084, 29.8735, 2.16771, 1.55", "-0.944227, 30.7552, 2.28753, 1.55", "-0.957632, 30.8535, 2.29757, 1.55", "-1.05895, 31.5008, 2.34471, 1.55", "-1.06928, 31.5644, 2.3475, 1.55", "-1.2168, 32.5968, 2.30971, 1.55", "-1.36824, 33.9891, 2.15641, 1.4", "-1.41967, 34.8615, 2.0146, 1.4", "-1.41816, 35.4309, 1.9013, 1.92", "-1.41481, 35.4944, 1.88656, 1.92", "-1.29205, 36.706, 1.58877, 1.92", "-1.16028, 37.5298, 1.37657, 1.92", "-0.960106, 38.5067, 1.18791, 1.69", "-0.725672, 39.6072, 1.015, 1.69", "-0.709259, 39.6829, 1.00419, 1.69", "-0.445447, 40.9433, 0.867474, 1.69", "-0.41947, 41.0806, 0.864997, 1.69", "-0.208193, 42.2729, 0.868413, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.03994, 38.5453, 0.619018, 0.15", "1.2838, 53.5434, 0.619018, 0.15", "1.52766, 68.5414, 0.619018, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "6.84976, 36.6329, 1.20044, 1.99", "8.64528, 37.2148, 1.4055, 1.99", "9.76107, 37.6003, 1.53272, 1.92", "10.8277, 38.0058, 1.65402, 1.92", "12.0664, 38.4903, 1.75235, 1.77", "13.2061, 38.939, 1.82515, 1.77", "13.2503, 38.9558, 1.82691, 1.77", "14.2441, 39.3406, 1.82074, 2.28", "15.4053, 39.7889, 1.79396, 2.28", "17.1721, 40.4556, 1.72023, 1.99", "18.5293, 40.9568, 1.63559, 1.99", "20.0538, 41.4877, 1.5149, 1.99", "21.3821, 41.9321, 1.39554, 2.43" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.84976, 36.6329, 1.20044, 2.06", "7.15308, 39.5116, 1.23217, 2.06", "7.31856, 41.606, 1.2533, 1.62", "7.32393, 41.6969, 1.25441, 1.62", "7.45982, 44.1826, 1.28788, 1.33", "7.60304, 46.6513, 1.41591, 1.33", "7.61537, 46.8493, 1.43299, 1.33", "7.75165, 49.2825, 1.76605, 1.33", "7.84999, 51.033, 2.09185, 2.06", "7.93638, 51.9427, 2.30507, 2.21", "8.19787, 53.7139, 2.82027, 2.43", "8.35977, 54.5402, 3.07534, 2.95", "8.53639, 55.4895, 3.33836, 2.95", "8.57075, 55.7144, 3.3911, 2.95", "8.82682, 58.0577, 3.80579, 1.33", "8.93772, 59.5685, 3.99743, 1.33", "9.00714, 61.5768, 4.13543, 1.33", "8.98978, 63.8377, 4.23031, 1.47", "8.85574, 66.0028, 4.21087, 1.47", "8.69633, 67.3982, 4.14374, 1.69", "8.68286, 67.4792, 4.14108, 1.69", "8.37077, 69.3007, 4.12813, 1.92", "8.16063, 70.8536, 4.16083, 1.92", "7.98735, 73.1331, 4.33015, 0.66", "8.00749, 74.7432, 4.54918, 0.66", "8.25494, 77.2085, 5.0108, 0.66", "8.39935, 78.2406, 5.23733, 1.25", "8.73377, 79.7326, 5.66506, 1.99", "9.12617, 80.9144, 6.10447, 2.5", "9.70863, 82.1996, 6.72748, 3.24", "10.3294, 83.2946, 7.25244, 3.39" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.208193, 42.2729, 0.868413, 1.03", "-1.39317, 43.2136, 2.23346, 1.03", "-1.78057, 43.5111, 2.67404, 0.88", "-2.85041, 44.2788, 3.9011, 1.03", "-3.45431, 44.6987, 4.59916, 1.33", "-3.4983, 44.7281, 4.64754, 1.33", "-4.46502, 45.3726, 5.59539, 1.33", "-4.50931, 45.4004, 5.62792, 1.33", "-5.9187, 46.2836, 6.40397, 1.33", "-5.96805, 46.3155, 6.42299, 1.33", "-6.66102, 46.7912, 6.62214, 1.47", "-7.77011, 47.6545, 6.82379, 1.33", "-8.91284, 48.6725, 6.90417, 1.33", "-9.78962, 49.5753, 6.86773, 1.47", "-9.86427, 49.667, 6.85302, 1.47", "-10.5529, 50.6263, 6.6633, 1.47", "-11.3717, 52.031, 6.32499, 1.33", "-11.7773, 52.9116, 6.07742, 1.33", "-12.2512, 54.2613, 5.63522, 1.33", "-12.526, 55.1998, 5.29832, 1.33", "-12.5419, 55.2575, 5.27717, 1.33", "-12.7527, 56.045, 4.97964, 1.33", "-12.7761, 56.111, 4.95619, 1.33", "-13.1376, 56.9023, 4.73947, 1.4", "-13.6054, 57.7759, 4.58212, 1.47", "-14.1493, 58.7154, 4.50443, 1.62", "-14.5322, 59.3759, 4.48965, 1.62", "-15.3189, 60.7372, 4.51873, 1.33", "-15.9507, 61.8723, 4.57139, 1.4", "-16.4556, 62.7863, 4.67613, 1.4", "-17.3696, 64.3852, 4.94061, 0.96", "-18.0353, 65.5249, 5.1804, 0.96", "-18.4447, 66.1863, 5.34619, 1.18", "-18.9918, 66.9622, 5.58728, 1.47", "-20.0813, 68.207, 6.03662, 1.47", "-21.0448, 68.9869, 6.35749, 1.33", "-21.0985, 69.0126, 6.37313, 1.33", "-22.4291, 69.3612, 6.73769, 1.55", "-23.6087, 69.493, 7.0342, 2.06", "-24.5911, 69.4766, 7.2995, 1.69", "-26.1927, 69.3236, 7.71488, 0.96", "-27.9525, 69.0704, 8.21301, 1.55", "-28.6689, 68.9578, 8.4409, 1.77", "-29.3045, 68.8556, 8.70097, 1.47", "-31.0624, 68.5605, 9.48657, 1.11", "-31.9885, 68.4328, 9.96118, 0.96", "-32.041, 68.4295, 9.99208, 0.96", "-33.2709, 68.4602, 10.7346, 1.18", "-34.7859, 68.5925, 11.7657, 1.47" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.208193, 42.2729, 0.868413, 0.96", "-0.229373, 43.4374, 0.381708, 0.96", "-0.232508, 43.4892, 0.361655, 0.96", "-0.325433, 44.7109, -0.0272785, 0.96", "-0.396875, 45.5968, -0.28187, 0.96", "-0.40237, 45.6622, -0.298841, 0.96", "-0.471076, 46.7434, -0.572625, 0.96", "-0.476954, 46.8123, -0.588524, 0.96", "-0.537102, 48.0481, -0.832433, 0.96", "-0.538055, 48.1152, -0.843117, 0.96", "-0.465283, 49.4576, -1.03657, 1.25", "-0.359941, 50.4199, -1.15899, 1.25", "-0.350917, 50.4748, -1.1651, 1.25", "-0.162014, 51.5422, -1.26229, 0.74", "-0.139286, 51.6719, -1.27106, 0.74", "0.0353987, 52.7599, -1.33557, 0.52", "0.187897, 53.8433, -1.3806, 1.25", "0.240323, 54.318, -1.39575, 1.62", "0.311765, 55.0817, -1.42256, 1.25", "0.373237, 55.9957, -1.4837, 0.59", "0.419657, 56.9642, -1.56807, 0.59", "0.441737, 57.964, -1.59788, 1.11", "0.443686, 58.0294, -1.59629, 1.11", "0.489832, 58.7103, -1.54687, 1.11", "0.599857, 59.957, -1.34378, 0.59", "0.697355, 60.7689, -1.15781, 0.59", "0.871442, 62.5332, -0.615431, 1.25", "0.942445, 63.4453, -0.346382, 1.47", "0.981402, 64.3653, -0.108301, 1.47", "0.986366, 65.9926, 0.168456, 1.69", "0.949503, 67.1616, 0.262994, 1.18", "0.87387, 68.6329, 0.0826829, 0.66", "0.821012, 70.0619, -0.408977, 0.96", "0.819611, 70.8744, -0.821004, 1.33", "0.881545, 72.5298, -1.85081, 1.33", "0.910929, 72.8061, -2.04752, 1.84", "1.15467, 74.1079, -2.9923, 1.4", "1.46557, 75.1965, -3.70251, 1.11", "1.80849, 76.1801, -4.17362, 1.11", "2.15324, 77.0551, -4.48333, 1.84", "2.38071, 77.619, -4.61165, 2.06", "2.78359, 78.7177, -4.79217, 2.06", "3.25014, 80.142, -4.92247, 0.96", "3.59708, 81.2749, -4.9894, 0.66", "3.77796, 81.8811, -4.99689, 0.59", "4.06947, 82.8638, -4.98732, 0.59", "4.31932, 83.8435, -4.9341, 0.59", "4.33331, 83.9095, -4.92649, 0.59", "4.45966, 84.6427, -4.83881, 0.59", "4.46951, 84.717, -4.8323, 0.59", "4.56812, 85.5307, -4.82197, 0.59", "4.69865, 86.4571, -4.99939, 1.11", "4.70919, 86.5197, -5.02251, 1.11", "4.82998, 87.3182, -5.41282, 1.62", "4.89315, 87.7748, -5.68731, 1.62", "5.00613, 88.5538, -6.19899, 1.92", "5.18916, 89.8502, -7.10935, 1.92", "5.20197, 89.9476, -7.17731, 1.92", "5.31016, 91.0427, -7.86706, 0.66", "5.31773, 91.1477, -7.92464, 0.66", "5.36871, 92.0875, -8.36051, 0.88", "5.40439, 92.579, -8.52967, 1.11", "5.47545, 93.1621, -8.65819, 1.25", "5.55156, 93.6191, -8.74986, 0.96", "5.74164, 94.5104, -8.92163, 0.59", "5.7643, 94.6103, -8.93984, 0.59", "5.98806, 95.6304, -9.11044, 0.59", "6.17593, 96.5902, -9.26338, 0.44", "6.18624, 96.654, -9.27254, 0.44", "6.26841, 97.4195, -9.36436, 0.44", "6.2884, 98.0543, -9.42253, 0.44", "6.24662, 99.0304, -9.50161, 1.47", "6.12616, 99.8435, -9.55984, 1.99", "6.02519, 100.29, -9.58679, 2.28", "5.85815, 100.94, -9.63223, 2.43", "5.69746, 101.532, -9.67549, 2.43", "5.51597, 102.201, -9.73256, 2.28", "5.15178, 103.623, -9.86459, 0.44", "5.01228, 104.253, -9.93253, 0.37", "4.86798, 105.105, -10.0284, 0.37", "4.79821, 105.781, -10.1028, 0.37", "4.76775, 106.423, -10.1645, 1.11", "4.76155, 107.042, -10.2124, 1.62", "4.79206, 107.98, -10.2625, 1.92", "4.8326, 108.809, -10.2717, 2.36", "4.87823, 109.694, -10.2491, 2.36", "4.91041, 110.613, -10.1473, 1.92", "4.92331, 111.578, -9.9569, 1.25", "4.91948, 112.372, -9.74879, 1.25", "4.89731, 113.478, -9.39369, 1.47", "4.85138, 114.505, -9.03422, 1.4", "4.6993, 116.401, -8.37171, 0.44", "4.6069, 117.346, -8.06544, 0.74", "4.56819, 117.802, -7.92966, 0.74", "4.56285, 117.868, -7.91515, 0.74", "4.49053, 118.936, -7.8113, 0.44", "4.40152, 120.513, -7.83615, 0.44", "4.38338, 121.396, -7.96374, 0.37", "4.38853, 122.341, -8.16461, 0.37", "4.37571, 123.702, -8.50507, 0.81", "4.36127, 124.67, -8.80263, 1.62", "4.36112, 125.505, -9.08557, 2.5", "4.36426, 126.699, -9.53239, 2.58", "4.33194, 127.747, -9.94878, 1.77", "4.18637, 129.391, -10.6513, 0.52", "4.07823, 130.364, -11.0913, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "21.3821, 41.9321, 1.39554, 0.96", "21.9902, 43.4664, 3.0025, 0.96", "22.429, 44.4704, 4.14642, 0.96", "22.9584, 45.4894, 5.40112, 1.18", "23.9946, 47.1771, 7.84952, 2.8", "25.2835, 49.006, 10.7133, 1.62", "25.6623, 49.4898, 11.4798, 1.33", "25.6887, 49.5173, 11.5319, 1.33", "26.1843, 49.9414, 12.4315, 0.96", "27.9059, 51.1148, 14.9385, 0.96", "28.5247, 51.4862, 15.6275, 1.33", "29.4602, 52.0963, 16.4617, 1.55", "30.0795, 52.5254, 17.0162, 1.77", "30.165, 52.5869, 17.0902, 1.77", "31.1234, 53.3235, 17.8554, 2.06", "32.6988, 54.4666, 18.7721, 1.03", "33.8886, 55.3223, 19.5557, 1.92" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "21.3821, 41.9321, 1.39554, 1.69", "22.9907, 42.0553, 0.176407, 1.69", "23.4581, 42.0419, -0.119622, 1.69", "23.5073, 42.0385, -0.149337, 1.69", "24.0507, 41.9897, -0.457954, 1.69", "24.0878, 41.986, -0.478393, 1.69", "25.0365, 41.9035, -0.970078, 1.4", "25.6738, 41.8554, -1.23596, 1.4", "26.7595, 41.842, -1.69156, 1.4", "27.1451, 41.877, -1.83419, 1.69", "27.1831, 41.8834, -1.84728, 1.69", "27.6986, 42.0069, -2.02892, 1.69", "28.7104, 42.2966, -2.36007, 1.4", "29.2973, 42.4824, -2.55104, 1.18", "30.563, 42.8663, -2.92339, 1.18", "30.6622, 42.8932, -2.95121, 1.18", "31.8022, 43.1631, -3.25614, 1.11", "32.7861, 43.3552, -3.52403, 1.4", "32.825, 43.3615, -3.53395, 1.4", "33.6894, 43.4989, -3.74786, 1.69", "34.3909, 43.6377, -3.90257, 1.84", "34.435, 43.6491, -3.91021, 1.84", "35.2434, 43.9378, -3.99519, 1.99", "35.7916, 44.2068, -4.04778, 1.47", "36.5519, 44.6465, -4.1012, 1.47", "37.1593, 45.0445, -4.12796, 1.62", "37.2067, 45.0756, -4.12873, 1.62", "37.8775, 45.5039, -4.11958, 1.47", "38.5435, 45.902, -4.11137, 1.69", "39.1033, 46.1891, -4.17088, 1.99", "39.6323, 46.393, -4.28201, 1.99", "40.2633, 46.5431, -4.45811, 1.92", "40.312, 46.5495, -4.47347, 1.92", "41.2299, 46.5789, -4.80645, 1.92", "42.3013, 46.5521, -5.25463, 2.06", "42.8824, 46.538, -5.51704, 1.47", "43.5902, 46.5435, -5.83942, 0.96", "44.1916, 46.5858, -6.12368, 0.88", "44.2525, 46.5909, -6.15112, 0.88", "45.1357, 46.6904, -6.49836, 1.25", "45.5783, 46.7779, -6.64602, 1.84", "45.965, 46.9135, -6.8036, 2.06", "46.5946, 47.2518, -7.12292, 1.69" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "10.3294, 83.2946, 7.25244, 0.88", "9.80489, 87.429, 6.22654, 0.88", "9.60721, 89.1802, 5.848, 0.88", "9.53423, 90.2608, 5.66111, 1.4", "9.47985, 91.4559, 5.48258, 1.62", "9.45305, 92.1635, 5.39939, 1.99", "9.40255, 93.6259, 5.25765, 1.69", "9.40118, 93.851, 5.25952, 1.69", "9.41412, 95.9984, 5.27685, 1.92", "9.41405, 96.079, 5.27733, 1.92", "9.30537, 98.6326, 5.28016, 0.66", "9.26148, 99.5604, 5.28137, 1.11", "9.2247, 100.487, 5.23447, 1.33", "9.22158, 100.584, 5.22555, 1.33", "9.22295, 101.283, 5.13483, 1.33", "9.29732, 102.781, 4.90092, 1.18", "9.48305, 104.756, 4.55457, 0.66", "9.66217, 106.648, 4.24016, 0.66", "9.66802, 106.728, 4.22843, 0.66", "9.71126, 108.773, 3.96727, 0.66", "9.70737, 108.867, 3.95748, 0.66", "9.54188, 110.479, 3.82955, 0.66", "9.25303, 111.945, 3.76166, 1.77", "8.8863, 113.473, 3.8157, 1.99", "8.54887, 114.927, 3.91863, 2.14", "8.19637, 116.576, 4.08044, 2.14", "8.18016, 116.671, 4.09174, 2.14", "8.03676, 118.07, 4.2905, 2.14", "8.00888, 119.918, 4.58776, 1.25", "8.20779, 121.838, 4.90022, 0.88", "8.46473, 123.088, 5.08942, 0.88", "8.51306, 123.288, 5.11855, 0.88", "8.72417, 124.188, 5.23904, 1.18", "8.99613, 125.42, 5.37898, 1.18", "9.37248, 127.559, 5.54221, 0.66", "9.49708, 128.928, 5.65064, 0.59", "9.45954, 130.002, 5.7315, 0.59", "9.24829, 131.172, 5.80852, 0.59", "8.99088, 131.965, 5.8524, 1.4", "8.6478, 132.734, 5.88548, 1.62", "8.09523, 133.725, 5.91226, 1.77", "7.24399, 135.172, 5.92285, 0.88", "6.57486, 136.404, 5.90043, 0.44", "6.21955, 137.107, 5.88011, 0.44", "5.88579, 137.92, 5.86151, 1.03", "5.8066, 138.198, 5.85737, 1.03", "5.79248, 138.7, 5.85809, 1.03", "5.94818, 139.459, 5.82032, 1.03", "5.97193, 139.553, 5.81292, 1.03", "6.08265, 140.135, 5.75984, 0.96", "6.1139, 140.406, 5.73703, 0.96", "6.2199, 141.923, 5.62381, 0.88", "6.27919, 143.962, 5.4858, 0.81", "6.24341, 145.692, 5.37917, 0.81", "6.12937, 147.278, 5.29448, 0.66", "5.95838, 148.902, 5.22831, 1.03", "5.8768, 149.628, 5.20927, 1.69", "5.77605, 150.402, 5.20175, 1.99", "5.63969, 151.443, 5.21682, 1.99", "5.4842, 152.98, 5.23611, 1.99", "5.37056, 155.452, 5.26151, 0.59", "5.38546, 156.845, 5.27037, 0.29", "5.39228, 156.943, 5.27111, 0.29", "5.57694, 158.267, 5.28712, 0.29", "5.78345, 159.221, 5.30613, 0.59", "6.0519, 160.21, 5.33185, 1.03", "6.28874, 161.067, 5.35613, 1.55", "6.57716, 162.177, 5.38736, 1.84", "6.82562, 163.127, 5.41425, 2.14", "7.39302, 165.217, 5.47379, 0.37", "7.70837, 166.44, 5.55518, 1.18", "7.97271, 167.534, 5.65366, 1.18", "8.18183, 168.418, 5.71453, 1.03", "8.54509, 170.055, 5.80003, 0.44", "9.03636, 172.353, 5.88504, 0.44", "9.48406, 174.649, 5.81647, 1.03", "9.71256, 175.991, 5.70995, 1.84", "10.0648, 178.278, 5.43998, 1.84", "10.2154, 179.404, 5.26716, 1.62", "10.4512, 181.207, 4.85654, 1.03", "10.8439, 184.089, 3.98841, 0.59", "11.0914, 185.639, 3.4361, 0.44", "11.122, 185.82, 3.38204, 0.44", "11.2893, 186.87, 3.18628, 0.44", "11.6494, 189.101, 3.00829, 1.03", "11.7859, 190.068, 3.07527, 1.25", "11.9622, 191.498, 3.40246, 0.44", "12.1831, 193.865, 4.05468, 0.66", "12.2597, 195.342, 4.59382, 0.37", "12.2924, 196.42, 5.05432, 0.37", "12.315, 197.713, 5.65307, 1.33", "12.3278, 198.417, 5.96154, 2.36", "12.3606, 199.439, 6.36665, 2.36", "12.5207, 202.112, 7.19639, 0.59", "12.6004, 203.323, 7.5981, 0.59", "12.6398, 204.339, 7.9831, 0.59", "12.6442, 205.03, 8.25301, 0.44", "12.6424, 205.119, 8.28512, 0.44", "12.6231, 205.793, 8.47916, 0.44", "12.585, 207.433, 8.78442, 0.74", "12.5634, 208.585, 8.97682, 0.74", "12.5797, 210.14, 9.12266, 1.25", "12.6231, 211.22, 9.15702, 1.25", "12.7235, 213.216, 9.11651, 0.66", "12.8339, 214.876, 8.93498, 1.33", "12.8784, 215.682, 8.78039, 1.69", "12.9522, 217.633, 8.32318, 0.74", "12.9987, 218.896, 7.98492, 0.37", "13.0382, 219.706, 7.75989, 0.88", "13.1894, 221.433, 7.29744, 0.66", "13.3667, 222.718, 7.02371, 0.52", "13.4111, 222.999, 6.97215, 0.52", "13.6585, 224.347, 6.80842, 0.74", "14.0634, 226.186, 6.64107, 1.03", "14.4918, 227.818, 6.56953, 1.25", "15.0697, 229.674, 6.63696, 1.4" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "10.3294, 83.2946, 7.25244, 2.06", "12.0516, 86.5169, 6.68773, 2.06", "12.5162, 87.5034, 6.72205, 0.96", "13.1391, 88.8981, 6.88865, 0.88", "13.1665, 88.9558, 6.89873, 0.88", "13.6666, 89.9293, 7.10426, 0.88", "14.5565, 91.6179, 7.47612, 1.11", "14.7946, 92.1157, 7.67013, 1.33", "14.8248, 92.18, 7.69169, 1.33", "15.2985, 93.1509, 7.98493, 1.33", "15.7537, 94.2009, 8.30151, 0.88", "16.1387, 95.2176, 8.5818, 0.88", "16.1637, 95.2944, 8.59946, 0.88", "16.6319, 96.9876, 8.98761, 1.33", "16.7462, 97.4907, 9.09893, 1.69", "17.1297, 99.6943, 9.55838, 0.88", "17.2666, 100.661, 9.7411, 0.74", "17.2971, 100.887, 9.80459, 0.74", "17.4472, 101.872, 10.1584, 0.74", "17.6678, 103.028, 10.658, 1.62", "17.8735, 103.948, 11.0938, 0.88", "18.2097, 105.145, 11.6883, 0.52", "19.0718, 107.596, 13.0086, 1.25", "19.3912, 108.301, 13.4427, 1.25", "19.7588, 108.97, 13.9142, 1.11", "19.7846, 109.011, 13.95, 1.11", "20.241, 109.713, 14.6051, 1.11", "20.6982, 110.42, 15.2488, 0.96", "21.5777, 112.193, 16.539, 0.96", "21.5931, 112.242, 16.571, 0.96", "21.9169, 114.11, 17.6337, 1.4", "21.9709, 114.951, 18.0352, 1.4", "21.9378, 115.591, 18.2722, 1.33", "21.767, 117.226, 18.8859, 0.74", "21.6262, 118.559, 19.3161, 0.74", "21.6045, 119.44, 19.5797, 1.03", "21.6619, 120.411, 19.8362, 1.18", "21.8886, 121.857, 20.2455, 0.52", "22.7439, 125.096, 21.3073, 1.77", "23.1429, 126.085, 21.6822, 2.65", "23.9905, 127.718, 22.3665, 0.74", "24.5291, 128.596, 22.7585, 0.96", "25.1066, 129.39, 23.1224, 1.25", "25.9499, 130.413, 23.5625, 1.62", "26.5917, 131.185, 23.7924, 1.18", "27.1247, 131.931, 24.02, 1.18", "27.1551, 131.982, 24.0342, 1.18", "27.4228, 132.489, 24.1451, 1.4", "27.8452, 133.316, 24.1965, 1.4", "28.546, 134.631, 24.0735, 0.52", "29.2156, 135.776, 23.8641, 0.52", "29.2687, 135.855, 23.8494, 0.52", "29.939, 136.691, 23.7015, 0.88", "31.2392, 138.065, 23.4649, 1.33", "31.6523, 138.424, 23.4099, 1.62", "32.3104, 138.924, 23.3476, 1.92", "34.0198, 140.139, 23.247, 0.44", "34.8738, 140.731, 23.2344, 0.88", "35.2538, 140.961, 23.2285, 0.88", "36.5807, 141.625, 23.2321, 1.69", "37.0441, 141.803, 23.2095, 2.28", "37.1015, 141.82, 23.2038, 2.28", "38.1454, 142.025, 23.0496, 2.06", "40.2459, 142.462, 22.6645, 0.37", "41.2343, 142.704, 22.4697, 0.29", "41.9397, 142.904, 22.3289, 0.88", "42.7603, 143.164, 22.1757, 1.55", "43.4883, 143.436, 22.051, 1.55", "45.2767, 144.269, 21.8002, 0.66", "46.278, 144.826, 21.7089, 0.66", "47.222, 145.395, 21.6339, 1.62", "47.9086, 145.817, 21.5879, 1.99", "48.3492, 146.105, 21.5669, 1.99", "49.795, 147.121, 21.5429, 0.59", "50.4677, 147.649, 21.5661, 0.29", "51.312, 148.442, 21.5963, 0.29", "51.4146, 148.555, 21.6023, 0.29", "52.1197, 149.402, 21.6565, 1.18", "52.6611, 150.022, 21.6752, 1.69", "53.153, 150.574, 21.6761, 1.99", "54.1949, 151.659, 21.6498, 0.52", "55.3056, 152.699, 21.7076, 1.4", "55.915, 153.223, 21.7691, 1.77", "57.1994, 154.223, 21.9407, 0.88", "57.662, 154.555, 22.0122, 1.69", "58.8093, 155.321, 22.2044, 0.88", "60.7135, 156.51, 22.5651, 0.37", "61.5082, 157.019, 22.7425, 1.47", "62.2481, 157.532, 22.9593, 2.06", "63.2711, 158.317, 23.3852, 2.73" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-34.7859, 68.5925, 11.7657, 1.03", "-35.8517, 69.4069, 11.7737, 1.03", "-36.7567, 70.0758, 11.8147, 0.74", "-37.3598, 70.521, 11.8369, 1.11", "-37.7968, 70.871, 11.8324, 1.25", "-38.4331, 71.4281, 11.811, 1.25", "-39.7445, 72.6782, 11.7503, 0.37", "-40.6057, 73.6073, 11.7125, 0.29", "-41.2623, 74.4801, 11.6547, 0.29", "-41.863, 75.5207, 11.5647, 0.81", "-42.1061, 76.2027, 11.4894, 1.4", "-42.1865, 76.8059, 11.4151, 1.62", "-42.1702, 77.3833, 11.3321, 1.77", "-42.066, 78.6314, 11.1831, 1.77", "-41.9793, 79.5438, 11.0936, 1.55", "-41.9157, 80.6358, 11.0046, 1.11", "-41.93, 81.8398, 10.9477, 0.74", "-42.0847, 83.2914, 10.9281, 0.66", "-42.3126, 84.3518, 10.9492, 1.18", "-42.4893, 84.8519, 10.9783, 1.18", "-42.8578, 85.6144, 11.0198, 1.18", "-43.5972, 86.8262, 11.0792, 0.88", "-44.2503, 87.6601, 11.222, 0.88", "-44.6224, 88.0654, 11.3335, 1.4", "-45.2395, 88.7288, 11.5507, 1.33", "-45.8059, 89.3613, 11.7688, 0.81", "-46.3879, 90.0578, 12.012, 0.66", "-48.0029, 92.2028, 12.7099, 0.66", "-48.6879, 93.3886, 13.0341, 0.66", "-48.984, 94.1633, 13.1958, 1.03", "-49.1419, 94.8746, 13.2758, 1.33", "-49.1955, 95.3936, 13.288, 1.55", "-49.1954, 96.1372, 13.2393, 1.33", "-48.9987, 98.5534, 12.8658, 0.37", "-48.8446, 99.881, 12.6487, 1.33", "-48.7474, 100.968, 12.4739, 1.99", "-48.7308, 101.72, 12.3639, 1.99", "-48.7956, 102.483, 12.2636, 1.69", "-49.1699, 103.958, 12.1105, 0.44", "-49.2424, 104.087, 12.1032, 0.44", "-49.894, 104.931, 12.0584, 0.44", "-50.8342, 105.984, 12.0253, 0.88", "-51.5331, 106.682, 11.985, 1.18", "-52.1175, 107.245, 11.9441, 1.62", "-52.8071, 107.903, 11.8912, 1.62", "-53.4366, 108.589, 11.8272, 1.62", "-54.0721, 109.456, 11.7027, 1.77", "-54.4937, 110.226, 11.5495, 1.47", "-54.842, 111.039, 11.3652, 1.69", "-54.9202, 111.256, 11.3117, 1.69", "-55.1748, 112.093, 11.0833, 1.69", "-55.513, 113.315, 10.7139, 1.69", "-55.8037, 114.533, 10.2693, 0.81", "-56.0289, 115.387, 9.91493, 0.81", "-56.3069, 116.33, 9.50575, 1.55", "-56.6809, 117.56, 8.99115, 1.77", "-56.6992, 117.622, 8.96755, 1.77", "-57.0726, 118.926, 8.54561, 1.62", "-57.4738, 120.632, 8.08953, 0.74", "-57.6319, 121.595, 7.83217, 0.74", "-57.7305, 122.419, 7.62941, 0.74", "-57.8273, 123.389, 7.41206, 0.88", "-57.8448, 123.563, 7.37647, 0.88", "-57.9439, 124.553, 7.1954, 1.11", "-58.0372, 125.743, 6.90261, 1.11", "-58.1763, 126.684, 6.53076, 0.52", "-58.376, 127.386, 6.12711, 0.52", "-58.6946, 128.157, 5.58286, 1.33", "-58.961, 128.673, 5.18076, 1.92", "-59.3205, 129.239, 4.6726, 2.21", "-59.9267, 130.098, 3.85876, 1.92", "-60.5976, 131.034, 2.95031, 0.66", "-60.8672, 131.402, 2.59444, 0.88", "-61.1359, 131.753, 2.28923, 1.11", "-61.9244, 132.788, 1.5927, 0.59", "-62.2453, 133.215, 1.39776, 0.44", "-62.8128, 134.019, 1.18283, 0.44", "-62.851, 134.074, 1.17381, 0.44", "-63.6213, 135.185, 0.919627, 0.29", "-64.0944, 135.912, 0.722026, 0.88", "-64.3886, 136.437, 0.548879, 1.55", "-64.544, 136.805, 0.391935, 1.92", "-64.6569, 137.156, 0.222578, 2.21", "-65.2118, 139.062, -0.785168, 0.52", "-65.4101, 139.768, -1.21566, 1.18", "-65.7184, 140.831, -1.9123, 1.18", "-66.0593, 141.957, -2.73944, 0.52", "-66.2394, 142.466, -3.14037, 0.37", "-66.4779, 143.005, -3.60353, 0.37", "-66.8408, 143.604, -4.13933, 0.37", "-66.9047, 143.688, -4.22307, 0.37", "-67.6202, 144.489, -5.06282, 0.74", "-68.0694, 145.012, -5.54368, 0.74", "-68.5942, 145.668, -6.05239, 1.11", "-68.9701, 146.178, -6.39165, 1.77", "-69.5292, 146.943, -6.82765, 1.99", "-69.8217, 147.332, -7.02291, 2.43", "-71.1324, 149.125, -7.73435, 0.29", "-71.8034, 150.102, -8.0638, 0.29", "-71.8464, 150.167, -8.08249, 0.29", "-72.3926, 150.952, -8.2669, 0.29", "-72.4476, 151.025, -8.27939, 0.29", "-73.1049, 151.796, -8.38774, 0.29", "-73.7888, 152.535, -8.47451, 0.29", "-74.6283, 153.404, -8.60108, 1.33", "-75.4544, 154.21, -8.72071, 1.77", "-75.8798, 154.585, -8.78314, 1.77", "-76.7269, 155.231, -8.92471, 1.47", "-77.548, 155.776, -9.08208, 0.74", "-78.2931, 156.248, -9.20179, 0.29", "-79.0175, 156.734, -9.27655, 0.96", "-79.6687, 157.209, -9.33169, 1.25", "-80.8083, 158.048, -9.37369, 0.29", "-81.2468, 158.379, -9.3701, 0.29", "-82.2092, 159.053, -9.30327, 0.29", "-83.2735, 159.729, -9.2244, 0.29", "-84.2431, 160.303, -9.15378, 1.4", "-84.8113, 160.639, -9.10488, 1.99", "-85.4126, 160.996, -9.04711, 2.14", "-87.0103, 161.977, -8.93699, 0.22", "-88.1941, 162.702, -8.93635, 0.22", "-88.2631, 162.745, -8.93877, 0.22", "-88.8412, 163.13, -8.93985, 0.59", "-89.1093, 163.326, -8.93541, 0.59", "-90.1047, 164.141, -8.91722, 0.29", "-90.7706, 164.781, -8.91283, 0.81", "-91.2974, 165.308, -8.90816, 0.81", "-92.5301, 166.514, -8.92291, 1.33", "-93.0879, 167.03, -8.94344, 1.69", "-93.7896, 167.665, -8.98128, 1.47", "-94.5066, 168.319, -9.03112, 0.66", "-95.6036, 169.325, -9.0253, 0.22", "-96.5515, 170.177, -8.97775, 0.22", "-97.3847, 170.885, -8.91623, 1.4", "-97.5686, 171.024, -8.89604, 1.99", "-98.1849, 171.452, -8.80708, 1.99", "-100.478, 172.964, -8.40632, 0.22", "-100.534, 173.0, -8.39559, 0.22", "-101.563, 173.649, -8.19938, 0.22", "-102.228, 174.075, -8.09684, 1.03", "-102.757, 174.414, -8.04508, 1.47", "-103.313, 174.759, -7.99239, 1.77", "-104.234, 175.306, -7.90661, 0.44", "-105.56, 176.081, -7.70435, 0.29", "-106.611, 176.685, -7.49778, 0.37", "-107.113, 176.921, -7.39416, 0.96", "-108.467, 177.451, -7.12398, 1.18", "-109.798, 177.905, -6.87605, 0.37", "-111.101, 178.31, -6.61356, 2.21", "-111.951, 178.578, -6.44496, 2.87", "-114.183, 179.318, -6.01186, 0.37", "-114.736, 179.529, -5.9021, 0.66", "-115.478, 179.869, -5.76878, 0.81", "-116.455, 180.455, -5.50584, 0.37", "-117.102, 180.983, -5.21863, 0.74", "-117.367, 181.328, -5.02013, 0.96", "-117.87, 182.37, -4.42017, 0.29", "-118.038, 182.797, -4.15681, 0.29", "-118.344, 183.877, -3.45986, 1.03", "-118.429, 184.372, -3.15071, 1.33", "-118.45, 184.704, -2.91405, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-34.7859, 68.5925, 11.7657, 0.52", "-35.4097, 68.1766, 12.8905, 0.52", "-35.9198, 67.8734, 13.8232, 0.88", "-37.082, 67.2804, 16.0572, 0.88", "-37.11, 67.2666, 16.1087, 0.88", "-37.6895, 66.9358, 17.1444, 1.33", "-38.2108, 66.5609, 18.1438, 0.96", "-38.9195, 65.9887, 19.6462, 1.18", "-39.5025, 65.4839, 20.9042, 0.74", "-39.9226, 65.1327, 21.7289, 0.52", "-40.4277, 64.7212, 22.7198, 0.74", "-41.3973, 63.8826, 24.7009, 0.88", "-41.424, 63.8629, 24.7514, 0.88", "-42.1538, 63.4703, 25.9308, 0.22", "-42.6963, 63.3267, 26.6871, 0.22", "-43.1129, 63.4582, 27.1369, 0.22", "-43.163, 63.497, 27.1686, 0.22", "-43.6912, 64.0245, 27.3449, 0.81", "-44.0602, 64.4242, 27.45, 1.4", "-44.2345, 64.6169, 27.4913, 1.69", "-44.7141, 65.0262, 27.6531, 1.92", "-44.9645, 65.1541, 27.7596, 1.62", "-45.7347, 65.3563, 28.1301, 0.88", "-45.7965, 65.3515, 28.1625, 0.88", "-46.84, 64.7932, 28.6937, 0.52", "-47.5352, 64.1186, 29.0252, 0.44", "-48.2129, 63.1308, 29.2683, 0.37", "-48.4667, 62.6476, 29.3244, 0.81", "-48.9523, 61.5244, 29.5743, 0.37", "-49.4037, 60.2964, 29.945, 1.03", "-49.4207, 60.2409, 29.968, 1.03", "-49.6734, 59.4766, 30.4072, 0.96", "-50.1238, 58.4925, 31.2362, 0.44", "-51.3318, 56.7771, 33.3631, 0.74", "-51.3869, 56.7294, 33.4598, 0.74", "-51.9132, 56.4296, 34.36, 0.74", "-52.2436, 56.2931, 34.8936, 1.18", "-52.6157, 56.211, 35.3993, 1.55", "-52.9554, 56.1881, 35.7397, 1.55", "-54.4794, 56.1249, 36.7868, 0.29", "-54.8586, 56.0919, 37.0396, 0.81", "-55.1665, 56.0457, 37.2406, 1.03", "-56.2067, 55.7831, 37.9559, 0.29", "-57.1297, 55.4109, 38.6048, 0.29", "-57.211, 55.3579, 38.6772, 0.29", "-57.6466, 54.8575, 39.2131, 0.29", "-57.8534, 54.4751, 39.5743, 0.66", "-57.94, 54.2371, 39.7815, 0.88", "-58.1112, 53.478, 40.3991, 0.37", "-58.4012, 51.8972, 41.5299, 0.22", "-58.5314, 51.2857, 41.9851, 0.22", "-58.6418, 50.8485, 42.3152, 0.81", "-58.7526, 50.4716, 42.5905, 0.81", "-58.7972, 50.3402, 42.6878, 0.81", "-59.0437, 49.7336, 43.1311, 0.81", "-59.7891, 48.1779, 44.1168, 0.29", "-60.0944, 47.5272, 44.5536, 0.52", "-60.3694, 46.9056, 45.0123, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.07823, 130.364, -11.0913, 0.29", "4.58335, 130.936, -11.0331, 0.29", "4.69791, 131.071, -11.0709, 0.29", "4.76983, 131.162, -11.1027, 0.29", "5.47118, 132.063, -11.4403, 0.22", "5.54153, 132.154, -11.476, 0.22", "6.40124, 133.304, -11.9171, 0.37", "7.58589, 134.971, -12.6004, 1.03", "7.90672, 135.425, -12.7982, 1.03", "7.9578, 135.499, -12.833, 1.03", "8.51802, 136.343, -13.2922, 0.22", "8.86171, 136.861, -13.5895, 0.44", "17.6009, 144.417, -14.7228, 0.44", "27.523, 149.327, -17.7385, 0.44", "37.6041, 152.529, -22.0349, 0.44", "47.3685, 157.808, -25.0011, 0.44", "57.023, 163.26, -28.0426, 0.44", "66.1405, 169.855, -30.6584, 0.44", "75.8965, 175.992, -30.9734, 0.44", "85.5479, 181.884, -33.1604, 0.44", "94.836, 188.784, -33.1353, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.07823, 130.364, -11.0913, 1.33", "3.93961, 131.389, -10.6995, 1.33", "3.88833, 131.846, -10.5796, 1.77", "3.8161, 132.559, -10.4323, 1.77", "3.80647, 132.691, -10.4099, 1.77", "3.79168, 133.208, -10.3443, 1.62", "3.79674, 134.281, -10.2581, 0.88", "3.84439, 135.348, -10.267, 0.74", "3.88393, 135.918, -10.3068, 0.81", "3.95269, 136.642, -10.3933, 0.81", "4.04656, 137.459, -10.5133, 0.37", "4.1479, 138.221, -10.6595, 0.37", "4.2594, 139.02, -10.8653, 1.33", "4.34603, 139.821, -11.1103, 1.92", "4.34769, 139.875, -11.1301, 1.92", "4.28607, 140.53, -11.3998, 2.28", "4.21173, 140.875, -11.5409, 2.58", "4.10169, 141.232, -11.692, 2.5", "3.86826, 141.863, -11.9662, 1.99", "3.51547, 142.712, -12.3307, 1.33", "3.15792, 143.511, -12.657, 0.81", "2.85598, 144.133, -12.8843, 0.81", "2.59614, 144.737, -13.0767, 0.88", "2.57061, 144.808, -13.0968, 0.88", "2.47809, 145.127, -13.1815, 0.88", "2.37043, 145.932, -13.3552, 0.74", "2.38207, 146.734, -13.5114, 0.44", "2.57827, 148.102, -13.7779, 0.81", "2.68821, 148.633, -13.8731, 1.18", "2.72039, 148.761, -13.8959, 1.18", "3.14426, 150.207, -14.1436, 0.44", "3.31136, 150.712, -14.2361, 0.44", "3.6336, 151.715, -14.4189, 1.33", "3.77221, 152.243, -14.5044, 1.47", "3.85768, 152.647, -14.5675, 1.47", "3.94991, 153.176, -14.6437, 1.03", "4.02221, 153.712, -14.6963, 0.96", "4.16471, 154.674, -14.712, 0.37", "4.3648, 155.867, -14.6528, 1.25", "4.43388, 156.226, -14.6232, 1.99", "4.57945, 156.937, -14.5401, 2.21", "4.98991, 158.694, -14.2203, 0.29", "5.2164, 159.621, -13.9984, 1.18", "5.33124, 160.084, -13.8679, 1.69", "5.40291, 160.423, -13.7613, 1.69", "5.41631, 160.516, -13.7314, 1.69", "5.49139, 161.912, -13.2929, 0.44", "5.47062, 162.668, -13.0383, 0.37", "5.46581, 162.728, -13.0195, 0.37", "5.38337, 163.43, -12.7893, 0.37", "5.29403, 164.075, -12.5792, 0.37", "5.2119, 164.647, -12.4108, 0.29", "5.03559, 165.662, -12.1351, 0.52", "4.99528, 166.026, -12.0323, 0.81", "4.976, 166.434, -11.9247, 0.96", "4.98123, 166.608, -11.882, 0.96", "5.02355, 167.319, -11.7296, 0.44", "5.02548, 167.368, -11.7209, 0.44", "5.01955, 168.342, -11.5853, 0.81", "5.00849, 168.795, -11.5071, 1.18", "4.98363, 169.227, -11.4202, 1.4", "4.9526, 169.594, -11.341, 1.4", "4.947, 169.642, -11.3304, 1.4", "4.87485, 170.2, -11.2065, 1.4", "4.86799, 170.248, -11.1961, 1.4", "4.78758, 170.783, -11.0808, 1.11", "4.71717, 171.228, -10.9945, 0.66", "4.63383, 171.755, -10.9029, 0.37", "4.51073, 172.634, -10.7749, 0.88", "4.44867, 173.089, -10.7371, 1.18", "4.43739, 173.166, -10.7338, 1.18", "4.35549, 173.71, -10.7293, 1.03", "4.34736, 173.773, -10.7322, 1.03", "4.29503, 174.243, -10.7841, 1.03", "4.24686, 175.029, -10.9469, 0.22", "4.24149, 175.494, -11.0551, 0.22", "4.24372, 175.563, -11.0714, 0.22", "4.28896, 176.125, -11.207, 0.22", "4.29399, 176.172, -11.2199, 0.22", "4.41694, 177.089, -11.4915, 1.18", "4.5033, 177.55, -11.6271, 1.4", "4.5713, 177.878, -11.7264, 1.62", "4.61814, 178.12, -11.7997, 1.62", "4.71215, 178.688, -11.9677, 1.62", "4.79839, 179.227, -12.1294, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "33.8886, 55.3223, 19.5557, 0.52", "35.2854, 57.14, 20.5573, 0.52", "35.9253, 57.9951, 20.9763, 0.74", "36.433, 58.6905, 21.2651, 1.77", "37.1947, 59.8812, 21.7658, 0.81", "37.6009, 60.6621, 22.1213, 0.81", "37.9493, 61.405, 22.4668, 0.74", "37.9708, 61.4665, 22.494, 0.74", "38.2833, 62.6184, 23.046, 1.03", "38.6117, 64.0019, 23.7442, 1.03", "38.9869, 65.6752, 24.6018, 1.84", "39.1379, 66.3832, 24.9845, 1.55", "39.515, 68.1275, 25.9742, 0.59", "39.7667, 69.268, 26.6252, 0.81", "40.0576, 70.528, 27.3475, 1.4", "40.3033, 71.2916, 27.7379, 1.62" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "33.8886, 55.3223, 19.5557, 0.59", "33.4976, 54.4912, 21.4472, 0.59", "32.93, 53.5057, 23.591, 1.11", "31.7472, 51.521, 27.3792, 0.74", "31.3461, 50.8518, 28.5797, 0.74", "30.863, 49.9695, 30.1304, 0.74", "30.8479, 49.9383, 30.1853, 0.74", "30.6398, 49.6023, 30.8013, 0.59", "29.5639, 48.1269, 33.2167, 1.03", "29.5158, 48.0283, 33.336, 1.4", "29.3991, 47.2521, 34.2509, 0.96", "29.5026, 46.623, 34.9742, 1.18", "29.7161, 45.8973, 35.8502, 1.03" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "46.5946, 47.2518, -7.12292, 0.74", "48.0341, 47.8082, -8.28949, 0.74", "49.2909, 48.2196, -8.98475, 0.52", "50.1458, 48.4533, -9.28157, 0.96", "53.8741, 49.3077, -10.1044, 0.66", "55.4255, 49.6389, -10.3353, 0.59", "55.636, 49.6838, -10.3579, 0.59", "58.5107, 50.2123, -10.406, 1.11", "59.8248, 50.5059, -10.3363, 1.69", "61.1851, 50.8461, -10.2361, 1.47", "62.4702, 51.1563, -10.1025, 0.66", "63.6738, 51.4882, -10.0884, 1.25", "64.6178, 51.7641, -10.1619, 1.18", "65.9799, 52.2139, -10.4628, 1.03", "67.6344, 52.7578, -10.9023, 0.44", "68.5673, 53.0675, -11.1888, 0.37", "68.7275, 53.1182, -11.2446, 0.37", "69.6483, 53.4227, -11.7745, 0.37", "70.8457, 53.7448, -12.4556, 1.4", "71.6603, 53.9141, -12.8525, 1.69", "72.88, 54.1529, -13.3357, 1.69", "73.0157, 54.1821, -13.3871, 1.69", "76.645, 54.9396, -14.6473, 1.4", "79.9077, 55.6701, -15.6686, 0.52", "82.0587, 56.203, -16.2484, 2.14", "82.8124, 56.3943, -16.4349, 2.87", "85.22, 56.9804, -16.935, 0.74", "86.5948, 57.324, -17.1453, 0.66", "87.4585, 57.5527, -17.1844, 0.37", "88.3169, 57.8943, -17.4118, 0.37", "98.9285, 59.4105, -21.2131, 0.37", "108.855, 59.3771, -26.7557, 0.37", "119.167, 60.5424, -31.4018, 0.37", "129.322, 62.3065, -36.2093, 0.37", "139.183, 63.4829, -41.744, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "46.5946, 47.2518, -7.12292, 0.74", "49.6497, 45.8855, -8.87103, 0.74", "49.7071, 45.8573, -8.91808, 0.74", "50.8275, 45.2478, -9.91006, 0.66", "52.8389, 44.138, -11.6904, 0.66", "54.1747, 43.3967, -12.8698, 0.66", "55.7578, 42.5434, -14.2054, 0.66", "59.7607, 40.5346, -17.0914, 0.66", "60.8711, 39.9697, -17.9175, 2.36", "61.5519, 39.6131, -18.4646, 2.65", "61.6169, 39.5773, -18.5218, 2.65", "62.7547, 38.9861, -19.7385, 1.92", "63.5134, 38.6519, -20.6325, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "15.0697, 229.674, 6.63696, 0.52", "14.0468, 231.169, 5.09935, 0.52", "13.4645, 232.02, 4.22404, 0.37", "12.2665, 233.77, 2.42315, 0.37", "12.2293, 233.824, 2.36725, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "15.0697, 229.674, 6.63696, 0.37", "15.4553, 231.455, 6.80255, 0.37", "15.7276, 232.714, 6.91955, 1.69", "15.9369, 233.68, 7.00943, 1.99", "16.2076, 234.931, 7.12568, 1.77", "16.6529, 236.988, 7.31695, 2.58" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "63.2711, 158.317, 23.3852, 0.37", "63.9218, 160.114, 24.1906, 0.37", "64.1324, 160.696, 24.4512, 0.37", "64.355, 161.311, 24.7267, 0.59", "64.5143, 161.752, 24.924, 0.88", "65.3367, 164.024, 25.9418, 1.77" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "63.2711, 158.317, 23.3852, 0.81", "64.9383, 158.092, 21.6036, 0.81", "65.4618, 158.006, 21.0705, 0.66", "65.5288, 157.993, 21.0087, 0.66", "66.1653, 157.844, 20.4474, 0.96", "66.962, 157.639, 19.7584, 1.55", "69.3499, 156.951, 17.9981, 0.37", "70.2326, 156.644, 17.5129, 0.37", "70.9792, 156.319, 17.1978, 1.03", "71.5035, 156.061, 17.0553, 1.03", "71.5504, 156.034, 17.0515, 1.03", "73.6547, 154.761, 17.3858, 0.37", "74.304, 154.359, 17.6252, 1.25", "74.5811, 154.187, 17.7187, 1.77", "74.9728, 153.958, 17.824, 1.62", "76.1189, 153.343, 18.0299, 0.29", "76.6714, 153.069, 18.0991, 0.66", "77.1591, 152.871, 18.1212, 0.22", "77.9315, 152.628, 18.1958, 1.33", "78.5019, 152.499, 18.274, 1.55", "79.0177, 152.422, 18.3643, 1.55", "80.6979, 152.354, 18.719, 0.44", "81.9021, 152.431, 19.0362, 0.44", "82.5443, 152.526, 19.2245, 0.96", "83.0555, 152.636, 19.376, 0.66", "83.1164, 152.652, 19.3931, 0.66", "83.8185, 152.855, 19.5716, 0.96", "85.4544, 153.356, 19.8926, 0.29", "86.0709, 153.528, 19.9871, 0.44", "87.044, 153.755, 20.0908, 0.22", "87.5011, 153.855, 20.1186, 0.52", "87.5564, 153.866, 20.1191, 0.52", "88.2216, 153.998, 20.0707, 0.52", "88.9683, 154.172, 19.9371, 0.96", "89.2192, 154.267, 19.8675, 1.25", "89.5557, 154.456, 19.7546, 0.96", "89.9085, 154.697, 19.6299, 0.66", "90.6952, 155.247, 19.2779, 0.29", "91.3678, 155.723, 18.9435, 0.37", "92.5354, 156.509, 18.3509, 0.29", "93.3515, 157.059, 17.9428, 1.62", "93.677, 157.276, 17.779, 1.77", "95.1878, 158.286, 17.0296, 0.29", "95.5862, 158.542, 16.8366, 0.81", "96.0295, 158.802, 16.6412, 1.03", "96.8436, 159.205, 16.3594, 0.52", "96.9036, 159.232, 16.3399, 0.52", "97.4977, 159.458, 16.1979, 0.52", "97.6129, 159.495, 16.1845, 0.52", "98.5043, 159.687, 16.065, 1.03", "98.5686, 159.697, 16.062, 1.03", "99.0977, 159.734, 16.0674, 1.25", "100.504, 159.819, 16.0547, 0.29", "101.181, 159.876, 16.0443, 0.96", "101.827, 159.962, 16.0356, 1.33", "103.263, 160.208, 16.0337, 0.52", "103.903, 160.354, 16.0619, 0.29", "105.135, 160.71, 16.1672, 0.29", "105.96, 161.005, 16.2807, 0.88", "106.31, 161.139, 16.3467, 1.4", "106.376, 161.165, 16.3623, 1.4", "108.103, 161.809, 16.8309, 0.29", "108.152, 161.826, 16.8479, 0.29", "108.801, 161.997, 17.1067, 0.88", "109.585, 162.111, 17.3581, 1.03", "109.799, 162.125, 17.4215, 1.03", "110.747, 162.139, 17.6793, 1.25", "111.419, 162.117, 17.8367, 1.69", "112.243, 162.068, 18.0253, 1.33", "113.659, 161.966, 18.333, 0.44", "114.876, 161.933, 18.8162, 0.44", "114.931, 161.935, 18.8457, 0.44", "115.538, 161.983, 19.2521, 1.47", "115.792, 162.02, 19.4472, 2.14", "116.169, 162.1, 19.8125, 2.14", "118.479, 162.636, 22.3261, 0.29", "118.964, 162.75, 22.8502, 1.25", "119.315, 162.837, 23.2187, 1.69", "119.63, 162.928, 23.5585, 1.99", "121.928, 163.71, 25.9658, 0.66", "123.062, 164.136, 27.076, 0.66", "123.473, 164.315, 27.4247, 0.96", "124.133, 164.664, 27.9861, 0.96", "125.386, 165.412, 29.0625, 0.29", "126.053, 165.883, 29.5989, 0.29", "126.423, 166.29, 29.7635, 0.59", "126.693, 166.696, 29.8521, 0.81", "126.898, 167.044, 29.9209, 0.81" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-118.45, 184.704, -2.91405, 0.22", "-119.451, 185.217, -2.36084, 0.22", "-120.199, 185.58, -2.0125, 0.29", "-120.828, 185.861, -1.79489, 0.29", "-120.886, 185.884, -1.77972, 0.29", "-121.077, 185.954, -1.73897, 0.59", "-121.452, 186.091, -1.65905, 0.59", "-121.705, 186.16, -1.65601, 0.88", "-122.332, 186.306, -1.72408, 0.15", "-122.714, 186.389, -1.76591, 0.96", "-122.823, 186.413, -1.77855, 1.18" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-118.45, 184.704, -2.91405, 0.29", "-118.41, 186.84, -3.24945, 0.29", "-118.409, 188.123, -3.43669, 0.52", "-118.408, 189.037, -3.55792, 1.03", "-118.397, 189.865, -3.71375, 1.11", "-118.37, 191.622, -4.09187, 0.22", "-118.366, 192.419, -4.27234, 0.81", "-118.391, 193.166, -4.44941, 1.11", "-118.438, 193.739, -4.60045, 1.11", "-118.871, 196.596, -5.39457, 0.29", "-119.126, 197.667, -5.7085, 1.55", "-119.343, 198.266, -5.89576, 1.92", "-119.689, 198.984, -6.15742, 1.77", "-120.336, 200.01, -6.57958, 0.66", "-121.091, 200.898, -6.98221, 0.22", "-121.454, 201.187, -7.12197, 0.44", "-122.012, 201.594, -7.33419, 0.44", "-122.788, 202.168, -7.5754, 0.29", "-122.851, 202.218, -7.59057, 0.29", "-123.058, 202.391, -7.62085, 0.59", "-123.564, 202.841, -7.64464, 0.59", "-124.679, 203.758, -7.63976, 0.22", "-125.716, 204.432, -7.61684, 0.66", "-126.102, 204.672, -7.59314, 0.96", "-126.688, 205.016, -7.56034, 0.81", "-127.288, 205.331, -7.53387, 0.29", "-128.603, 205.867, -7.51748, 0.29", "-130.008, 206.195, -7.61142, 1.84" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "94.836, 188.784, -33.1353, 0.29", "101.907, 193.348, -34.3531, 0.29", "109.955, 195.807, -34.0575, 0.29", "117.781, 198.454, -32.4067, 0.29", "125.3, 201.582, -30.1905, 0.29", "132.715, 204.123, -27.1135, 0.29", "140.265, 207.472, -25.3408, 0.29", "148.02, 210.628, -24.2611, 0.29", "155.488, 214.477, -23.2065, 0.29", "162.753, 218.208, -20.9946, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "94.836, 188.784, -33.1353, 1.33", "101.91, 193.278, -34.7227, 0.29", "109.156, 197.638, -35.7799, 0.29", "116.048, 202.257, -37.7908, 0.29", "122.298, 207.238, -40.8559, 0.29", "129.009, 211.321, -44.141, 0.29", "134.633, 215.853, -48.6966, 0.29", "139.599, 221.103, -53.3207, 0.29", "145.525, 225.078, -57.9625, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "4.79839, 179.227, -12.1294, 0.37", "4.06786, 180.686, -12.5693, 0.37", "3.83773, 181.176, -12.6938, 0.52", "3.81359, 181.244, -12.7066, 0.52", "3.68055, 181.709, -12.7722, 0.52", "3.57659, 182.182, -12.8376, 0.52", "3.49227, 182.878, -12.9544, 0.37", "3.49424, 183.037, -12.9751, 0.37", "3.56995, 184.014, -13.1204, 0.37", "3.64255, 184.676, -13.2236, 0.88", "3.7339, 185.358, -13.334, 1.11", "3.97043, 186.979, -13.5982, 0.37", "4.15502, 188.401, -13.8211, 0.37", "4.25418, 189.258, -13.9692, 1.33", "4.29365, 189.709, -14.0513, 1.62", "4.3304, 190.281, -14.1617, 1.92", "4.35362, 190.976, -14.2952, 1.55", "4.37711, 192.174, -14.5545, 0.81", "4.4205, 193.521, -14.8848, 0.22", "4.45498, 194.197, -15.0547, 0.22", "4.55566, 195.276, -15.3657, 0.81", "4.59322, 195.561, -15.4576, 0.81", "4.80182, 196.864, -15.8607, 0.22", "4.95832, 197.663, -16.0825, 0.74", "5.03334, 198.021, -16.1648, 0.74", "5.43361, 199.719, -16.5066, 0.22", "5.46251, 199.839, -16.5249, 0.22", "5.72927, 201.064, -16.6584, 0.88", "5.86234, 201.823, -16.7214, 1.55", "5.8715, 201.886, -16.7272, 1.55", "5.89579, 202.252, -16.7695, 1.55", "5.89048, 202.866, -16.8495, 1.25", "5.86145, 203.63, -17.0128, 0.88", "5.81756, 204.524, -17.2932, 0.22", "5.8163, 204.584, -17.3107, 0.22", "5.81161, 205.688, -17.5919, 0.22", "5.82464, 206.443, -17.7591, 0.22", "5.83364, 206.614, -17.7863, 0.22", "5.91561, 207.447, -17.8661, 0.22", "6.07337, 208.814, -17.8812, 0.96", "6.16046, 209.504, -17.8605, 1.33", "6.23232, 210.023, -17.8249, 0.74", "6.38313, 211.379, -17.7101, 0.22", "6.46049, 212.297, -17.6248, 0.88", "6.52737, 213.655, -17.496, 0.22", "6.52772, 213.717, -17.4902, 0.22", "6.50956, 214.725, -17.4056, 1.11", "6.48051, 215.277, -17.3701, 1.25", "6.43302, 215.956, -17.3412, 1.03", "6.37516, 216.708, -17.3242, 0.66", "6.32592, 217.571, -17.3297, 0.37", "6.30231, 218.198, -17.3683, 0.37", "6.28262, 219.227, -17.484, 0.81", "6.26421, 219.771, -17.5763, 0.81", "6.25899, 219.831, -17.5922, 0.81", "6.17028, 220.396, -17.807, 0.81", "5.92212, 221.51, -18.3679, 0.29", "5.90854, 221.562, -18.3982, 0.29", "5.71875, 222.242, -18.8524, 0.29", "5.52203, 222.964, -19.3422, 0.29", "5.36545, 223.576, -19.7545, 0.66", "5.25672, 224.035, -20.0481, 0.74", "5.11064, 224.863, -20.5246, 0.74", "5.0286, 225.579, -20.9042, 0.96", "5.01249, 225.927, -21.0746, 1.25", "5.01087, 225.985, -21.1, 1.25", "4.98491, 226.441, -21.2757, 1.25", "4.85306, 228.072, -21.8898, 0.22", "4.79567, 228.661, -22.1109, 0.22", "4.71514, 229.396, -22.379, 1.03", "4.65768, 229.862, -22.5518, 1.11", "4.51013, 231.011, -22.9726, 0.22", "4.34496, 232.348, -23.5172, 0.22", "4.33959, 232.415, -23.5448, 0.22", "4.31048, 233.011, -23.8073, 0.22", "4.32854, 234.063, -24.2776, 1.03", "4.35547, 234.409, -24.4379, 1.18", "4.59571, 235.918, -25.1814, 0.15", "4.7818, 236.762, -25.5746, 0.29", "4.79902, 236.829, -25.6051, 0.29", "5.12895, 237.891, -26.092, 0.22", "5.14608, 237.945, -26.1153, 0.22", "5.44721, 239.024, -26.5173, 0.88", "5.54983, 239.442, -26.637, 1.11", "5.6384, 239.886, -26.7582, 0.74", "5.79947, 240.676, -26.944, 0.22", "5.99113, 241.642, -27.1262, 0.22", "6.09395, 242.152, -27.1976, 0.66", "6.19975, 242.694, -27.2544, 0.66", "6.21581, 242.778, -27.2637, 0.66", "6.35903, 243.591, -27.3503, 0.29", "6.37706, 243.729, -27.3648, 0.29", "6.54086, 245.289, -27.5349, 0.22", "6.61382, 246.343, -27.645, 1.18", "6.63281, 246.892, -27.7074, 1.69", "6.63247, 247.69, -27.8011, 1.84", "6.59484, 249.272, -28.0016, 0.22", "6.5628, 250.183, -28.1211, 0.22", "6.49338, 251.277, -28.2652, 0.22", "6.44018, 251.81, -28.3338, 0.66", "6.39154, 252.26, -28.3952, 1.11", "6.20504, 253.811, -28.6203, 0.22", "6.12034, 254.417, -28.7114, 0.22", "5.96696, 255.305, -28.8564, 1.33", "5.81776, 256.1, -28.9846, 1.92" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "4.79839, 179.227, -12.1294, 0.22", "5.74223, 180.801, -12.7481, 0.22", "6.56659, 182.142, -13.2857, 0.44", "6.60876, 182.211, -13.3163, 0.44", "7.50397, 183.684, -13.991, 0.22", "7.53972, 183.741, -14.0191, 0.22", "8.61159, 185.451, -14.9587, 0.22", "8.64567, 185.507, -14.9923, 0.22", "9.29145, 186.526, -15.6735, 0.22", "9.33205, 186.588, -15.7156, 0.22", "10.3638, 188.031, -16.7477, 0.66", "10.9637, 188.889, -17.3888, 0.81", "16.5438, 199.402, -20.5081, 0.81", "23.9174, 208.856, -22.9055, 0.81", "31.4726, 218.467, -23.4995, 0.81", "37.9369, 228.887, -24.462, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "40.3033, 71.2916, 27.7379, 0.52", "36.3745, 72.0776, 27.1946, 0.52", "34.681, 72.3396, 27.0405, 0.52", "33.5635, 72.4208, 26.9666, 0.59", "32.7832, 72.4113, 26.9302, 0.59", "31.6828, 72.2883, 26.9099, 0.44", "31.4646, 72.2417, 26.915, 0.44", "29.6237, 71.1541, 27.0393, 0.44", "28.742, 70.5218, 27.2171, 0.44", "28.0773, 69.9884, 27.4201, 0.74", "27.1996, 69.2044, 27.7616, 0.88", "26.5406, 68.4911, 28.0819, 1.62", "26.1382, 67.9321, 28.2968, 1.84" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "40.3033, 71.2916, 27.7379, 0.81", "40.8775, 72.1013, 28.2322, 0.81", "41.3341, 73.076, 28.7801, 1.11", "41.5052, 73.7712, 29.1618, 1.33", "41.5716, 74.5166, 29.5301, 1.55", "41.5678, 74.5654, 29.5557, 1.55", "41.2532, 76.5033, 30.6054, 0.96", "40.872, 77.6341, 31.1935, 1.84", "40.3212, 78.73, 31.7631, 0.96", "39.9171, 79.3828, 32.1108, 0.52", "39.0535, 80.5705, 32.7374, 0.52", "39.027, 80.6028, 32.7542, 0.52", "38.6815, 80.9615, 32.9776, 0.74", "38.2165, 81.434, 33.3337, 0.74", "38.1672, 81.493, 33.3798, 0.74", "37.7009, 82.1031, 33.8733, 0.88", "37.083, 82.9907, 34.5732, 0.74", "36.22, 84.3003, 35.6595, 0.44", "35.9231, 84.8469, 36.1805, 0.44", "35.8424, 85.0839, 36.431, 0.29", "35.8372, 85.1421, 36.498, 0.29", "35.9089, 85.3388, 36.7443, 0.29", "35.9405, 85.3783, 36.7929, 0.29", "36.8597, 86.2116, 37.8026, 1.03", "37.3773, 86.6378, 38.378, 0.52", "37.7725, 86.9623, 38.8217, 1.25", "38.2695, 87.3796, 39.3731, 0.44", "38.581, 87.6526, 39.7116, 1.11", "38.8377, 87.8716, 39.9653, 1.11" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "29.7161, 45.8973, 35.8502, 0.59", "30.0199, 45.0953, 37.3764, 0.59", "30.1024, 44.6673, 38.2893, 0.59", "30.1408, 44.3449, 39.0055, 0.66", "30.1909, 43.5081, 40.9883, 1.84", "30.1938, 43.3888, 41.2806, 2.73", "30.295, 40.6817, 47.5995, 0.96", "30.3004, 40.299, 48.5098, 0.96", "30.3008, 40.2787, 48.559, 0.96", "30.3562, 39.422, 50.518, 1.18", "30.3586, 39.389, 50.5832, 1.18", "30.5297, 38.7078, 51.6825, 0.88", "31.3199, 37.3261, 52.847, 0.81", "31.3538, 37.2738, 52.8847, 0.81", "31.9347, 36.4629, 53.4477, 0.66", "31.9649, 36.4244, 53.4711, 0.66", "32.669, 35.5449, 54.0415, 1.4", "32.9649, 35.1882, 54.3047, 1.62", "33.5246, 34.5242, 54.7863, 1.62", "34.7767, 33.0532, 55.8664, 0.81", "35.1809, 32.5968, 56.2098, 0.81" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "29.7161, 45.8973, 35.8502, 0.44", "31.2631, 45.743, 36.2751, 0.44", "31.4366, 45.7257, 36.3227, 0.44", "32.2293, 45.6467, 36.5405, 0.44", "32.3255, 45.6371, 36.5669, 0.44", "34.2568, 45.4445, 37.0973, 0.81" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "139.183, 63.4829, -41.744, 0.29", "146.985, 65.0464, -45.1362, 0.29", "155.213, 65.4478, -47.75, 0.29", "163.161, 67.2788, -50.6458, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "139.183, 63.4829, -41.744, 1.33", "149.229, 64.9104, -44.0123, 0.29", "159.285, 66.8383, -45.8515, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "63.5134, 38.6519, -20.6325, 0.52", "64.1763, 37.4955, -19.9994, 0.52", "64.4732, 36.9775, -19.7158, 0.66", "64.7915, 36.4221, -19.4118, 0.52", "64.8194, 36.3734, -19.3852, 0.52", "65.474, 35.2315, -18.7601, 0.74", "69.5581, 28.3167, -15.8406, 0.74", "74.8118, 22.0466, -13.5627, 0.74", "79.5639, 15.7041, -10.4722, 0.74", "82.7612, 9.22364, -5.93819, 0.74", "86.2606, 2.64224, -1.78105, 0.74" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "63.5134, 38.6519, -20.6325, 0.52", "64.9108, 40.5695, -21.3709, 0.52", "66.0416, 42.1787, -21.9729, 1.62", "66.678, 43.1218, -22.3075, 1.92", "67.1819, 43.9045, -22.5592, 1.77", "68.8274, 46.5126, -23.354, 0.66", "69.2289, 47.151, -23.6277, 0.66", "69.649, 47.9046, -23.9959, 1.18", "69.8974, 48.3674, -24.2833, 1.55", "70.3843, 49.2939, -24.8966, 1.55", "70.4147, 49.357, -24.9423, 1.55", "71.6646, 52.53, -27.0764, 0.37", "71.9033, 53.2551, -27.5513, 1.25", "72.0901, 53.9571, -27.986, 1.92", "72.2266, 54.5899, -28.3508, 1.99", "72.5298, 56.3949, -29.6875, 0.66", "72.7021, 57.6561, -30.7094, 0.44", "72.7828, 58.1835, -31.1323, 0.96", "72.8992, 58.6341, -31.5602, 1.11", "72.9159, 58.6721, -31.604, 1.11", "74.7643, 61.5507, -35.3066, 0.52", "74.8315, 61.6254, -35.4216, 0.52", "75.6059, 62.3693, -36.7055, 1.77", "75.934, 62.6551, -37.2245, 2.06", "77.0837, 63.6016, -39.3105, 0.29", "77.6299, 63.9796, -40.4672, 0.52", "78.7642, 64.5564, -43.0146, 0.59", "78.7864, 64.5658, -43.0689, 0.59", "79.0635, 64.6728, -43.8091, 0.59", "81.1035, 65.401, -49.6414, 1.25", "82.9311, 65.9156, -55.2477, 0.96", "83.4006, 66.0136, -56.7694, 0.96", "83.4176, 66.0164, -56.8261, 0.96", "88.4645, 71.5877, -63.449, 0.96", "92.8156, 77.9693, -69.8978, 0.96", "96.5221, 85.3183, -75.7896, 0.96" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "16.6529, 236.988, 7.31695, 0.74", "15.9284, 238.538, 7.81386, 0.74", "15.6989, 239.098, 7.97989, 1.03", "15.3952, 239.84, 8.10629, 0.74", "14.6951, 241.519, 8.26187, 0.44", "14.3894, 242.251, 8.30239, 1.11", "14.1837, 242.775, 8.31726, 1.77", "13.9434, 243.475, 8.30468, 2.06", "13.4225, 245.148, 8.04168, 0.52", "13.1538, 246.106, 7.82834, 0.52", "13.139, 246.169, 7.81035, 0.52", "12.9231, 247.171, 7.55269, 1.03", "12.8229, 247.686, 7.44388, 1.33", "12.4611, 249.78, 7.12654, 0.96", "12.3134, 250.975, 7.03373, 0.74", "12.2131, 251.877, 7.0086, 0.37", "12.1269, 252.708, 7.02063, 0.37", "11.9985, 253.715, 7.07983, 1.03", "11.876, 254.516, 7.21303, 1.4", "11.7669, 255.173, 7.38664, 1.69", "11.5147, 256.528, 7.74597, 0.37", "11.3287, 257.435, 8.04346, 0.37", "11.1659, 258.114, 8.30883, 0.37", "10.7229, 259.696, 9.08926, 0.66", "10.6614, 259.879, 9.19195, 1.62", "10.4276, 260.438, 9.52545, 1.84", "10.1951, 260.907, 9.81058, 1.55", "10.1636, 260.962, 9.84039, 1.55", "9.34039, 262.209, 10.4283, 0.81", "8.83723, 262.853, 10.6668, 1.55", "8.34574, 263.375, 10.9106, 2.21", "8.0868, 263.601, 11.0261, 1.92", "6.89856, 264.435, 11.4774, 0.37", "6.19531, 264.791, 11.6997, 0.29", "6.14187, 264.806, 11.7176, 0.29", "4.43425, 265.07, 12.411, 0.81", "3.82009, 265.102, 12.688, 1.18", "3.23434, 265.085, 12.9663, 0.81", "2.36683, 264.978, 13.5093, 0.44", "1.03914, 264.803, 14.4179, 1.69", "0.989791, 264.798, 14.448, 1.69", "0.599451, 264.752, 14.6596, 1.99", "0.266914, 264.732, 14.8436, 1.84", "-1.51507, 264.835, 15.8573, 1.11", "-2.35988, 265.019, 16.2545, 0.29", "-3.61839, 265.552, 16.6079, 0.52", "-3.67549, 265.589, 16.6186, 0.52", "-4.08927, 266.027, 16.5285, 0.74", "-4.80422, 266.922, 16.2438, 0.96", "-5.3756, 267.778, 15.8658, 0.59", "-5.79047, 268.549, 15.5278, 0.81", "-6.1008, 269.221, 15.2373, 0.81", "-7.18617, 271.612, 14.0485, 0.29" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "16.6529, 236.988, 7.31695, 1.18", "17.28, 238.778, 7.028, 1.18", "17.5548, 239.567, 6.94465, 0.52", "17.8523, 240.413, 6.87436, 1.11", "18.1382, 241.272, 6.83381, 0.59", "18.3762, 242.018, 6.81648, 1.92", "18.5879, 242.653, 6.75799, 1.55", "18.9359, 243.739, 6.68595, 0.59", "18.9533, 243.791, 6.67764, 0.59", "19.174, 244.375, 6.39663, 0.37", "19.2036, 244.456, 6.33468, 0.37", "19.6938, 245.754, 4.92491, 0.37", "19.7782, 245.989, 4.62387, 0.96", "19.8788, 246.328, 4.10747, 0.96", "20.1948, 247.544, 2.13403, 0.52", "20.2545, 247.842, 1.64321, 0.52", "20.3467, 248.548, 0.520862, 1.25", "20.3486, 248.748, 0.225798, 1.47", "20.3155, 249.761, -1.18292, 0.88", "20.312, 249.803, -1.23491, 0.88", "20.2255, 250.396, -1.77019, 0.74", "20.2174, 250.458, -1.81648, 0.74", "20.0575, 251.873, -2.58981, 0.22", "20.0156, 252.549, -2.88189, 1.25", "20.0129, 253.005, -3.01464, 1.47", "20.0704, 253.997, -3.30508, 0.44", "20.1366, 254.587, -3.47193, 0.44", "20.2272, 255.203, -3.63011, 0.88", "20.2849, 255.529, -3.69607, 1.18", "20.4031, 256.128, -3.83311, 0.88", "20.7158, 257.406, -4.12678, 0.44", "20.8074, 257.731, -4.19999, 0.59", "20.8239, 257.79, -4.21246, 0.59", "21.0069, 258.374, -4.40343, 0.37", "21.0415, 258.473, -4.43991, 0.37", "21.3061, 259.178, -4.68546, 0.88", "21.4394, 259.535, -4.79616, 1.18", "21.6119, 260.053, -4.95398, 1.33", "22.0743, 261.532, -5.39652, 1.11", "22.3586, 262.466, -5.6704, 0.37", "22.6279, 263.395, -5.92567, 0.29", "22.727, 263.783, -6.01892, 0.29", "22.9094, 264.542, -6.16004, 1.4", "22.9545, 264.73, -6.19119, 1.62", "23.1984, 265.741, -6.31402, 0.29", "23.3605, 266.318, -6.44233, 0.96", "23.6866, 267.361, -6.7321, 0.22", "23.9106, 268.023, -6.93267, 0.22", "24.3415, 269.267, -7.39571, 1.55", "24.4557, 269.616, -7.5387, 1.69", "24.9673, 271.314, -8.27317, 0.22", "25.1586, 271.961, -8.56333, 0.88", "25.2698, 272.305, -8.71517, 0.88", "25.6676, 273.413, -9.21209, 0.37", "25.9783, 274.181, -9.52915, 0.15", "26.3089, 274.919, -9.80252, 1.55", "26.4897, 275.288, -9.90964, 1.55", "26.8974, 276.079, -10.1186, 0.29", "27.3772, 276.971, -10.3181, 1.03", "27.6058, 277.379, -10.3788, 1.18", "28.1142, 278.364, -10.527, 0.15", "28.2412, 278.668, -10.5797, 0.59", "28.388, 279.224, -10.6234, 0.29", "28.3947, 279.27, -10.6227, 0.29", "28.4138, 279.555, -10.592, 0.52", "28.4055, 280.423, -10.4441, 0.22", "28.3562, 281.226, -10.2733, 0.22", "28.2725, 282.556, -9.97535, 0.88", "28.2488, 282.884, -9.89547, 1.11", "28.2245, 283.227, -9.81056, 1.33", "28.1453, 284.403, -9.46104, 0.22", "28.1095, 285.312, -9.15694, 0.22", "28.1011, 286.004, -8.91884, 0.22", "28.1087, 286.407, -8.79897, 0.74", "28.1219, 286.893, -8.66138, 0.88", "28.1786, 288.168, -8.32716, 0.22", "28.2283, 288.889, -8.15811, 0.22", "28.2634, 289.394, -8.04298, 0.81", "28.2728, 289.775, -7.95513, 1.11", "28.2695, 290.833, -7.7355, 0.22", "28.2487, 291.456, -7.61948, 0.66", "28.2465, 291.501, -7.61296, 0.66", "28.2334, 291.786, -7.5695, 0.88", "28.1837, 293.354, -7.31568, 0.22", "28.1931, 294.113, -7.18679, 1.25", "28.2191, 294.495, -7.11964, 1.25", "28.3655, 295.486, -6.94954, 0.15", "28.4701, 295.936, -6.8776, 0.74", "28.4872, 295.986, -6.87054, 0.74", "28.8922, 296.755, -6.78803, 0.15", "29.0754, 297.033, -6.75117, 0.37", "29.6105, 297.714, -6.68159, 0.15", "29.9353, 298.099, -6.62708, 0.59", "30.0034, 298.182, -6.61398, 0.59", "30.5574, 298.899, -6.49517, 0.15", "31.0677, 299.57, -6.37812, 1.4", "31.6851, 300.404, -6.22477, 0.22", "32.2848, 301.288, -5.9813, 0.22", "32.63, 301.825, -5.79191, 0.37", "33.1205, 302.655, -5.45422, 1.03", "33.3276, 303.054, -5.26707, 1.4", "33.3444, 303.092, -5.24791, 1.4", "33.8562, 304.439, -4.57052, 0.29", "33.9369, 304.714, -4.40023, 0.59", "34.0804, 305.462, -3.81124, 0.22", "34.1009, 305.851, -3.45194, 0.96", "34.0905, 306.159, -3.14656, 1.11", "33.9803, 306.872, -2.39495, 0.22", "33.5364, 308.421, -0.596367, 1.25", "33.3225, 309.01, 0.147602, 1.55", "33.0413, 309.719, 1.06241, 0.96", "33.0102, 309.8, 1.16522, 0.96", "32.6591, 310.768, 2.42042, 0.22", "32.3622, 311.731, 3.61288, 0.96", "32.322, 311.963, 3.84872, 1.55", "32.2879, 312.741, 4.55463, 0.74", "32.3309, 313.059, 4.82805, 0.96", "32.6617, 314.264, 5.79797, 0.59", "32.8927, 314.76, 6.15937, 0.29", "33.0659, 315.074, 6.36218, 0.96", "33.3574, 315.574, 6.6787, 1.11", "34.1133, 316.815, 7.42042, 0.29", "34.4327, 317.328, 7.6867, 0.29", "34.8757, 318.03, 7.96187, 0.29", "35.2082, 318.576, 8.15934, 0.81", "35.2617, 318.668, 8.1794, 0.81", "35.4698, 319.064, 8.2032, 0.81", "35.4936, 319.114, 8.19882, 0.81", "35.7729, 319.714, 8.09, 1.03", "36.0313, 320.255, 7.96257, 1.69", "36.7078, 321.602, 7.60434, 0.52", "36.9802, 322.129, 7.45767, 0.37", "37.3872, 322.902, 7.27324, 0.52", "37.9129, 323.874, 7.09142, 0.29", "38.1123, 324.217, 7.0616, 0.29", "38.324, 324.541, 7.07786, 0.29", "38.3803, 324.617, 7.10524, 0.29", "39.0508, 325.38, 7.51347, 1.11", "39.4028, 325.757, 7.75019, 1.4", "40.1492, 326.547, 8.28569, 0.29", "40.5688, 326.989, 8.57292, 0.29", "41.579, 328.052, 9.27433, 0.88", "42.3804, 328.901, 9.81612, 0.22", "42.8429, 329.38, 10.1086, 0.66", "42.9896, 329.533, 10.2018, 0.66", "43.3318, 329.886, 10.4102, 0.29", "44.0055, 330.6, 10.8499, 0.96", "44.2778, 330.901, 11.033, 0.96", "44.6979, 331.408, 11.3682, 0.22", "44.9851, 331.766, 11.601, 0.81", "45.3317, 332.201, 11.8731, 0.44", "45.908, 332.985, 12.3767, 0.96", "46.4125, 333.729, 12.8236, 0.22", "46.7118, 334.226, 13.1198, 0.22", "47.0825, 334.94, 13.53, 0.96", "47.2154, 335.223, 13.6874, 1.18", "47.6564, 336.328, 14.2797, 0.52", "47.9354, 337.096, 14.6633, 0.29", "48.0562, 337.467, 14.8425, 0.29", "48.2322, 338.072, 15.1761, 0.29", "48.2502, 338.154, 15.2277, 0.29", "48.349, 338.75, 15.6325, 0.29", "48.3424, 338.73, 15.5933, 0.29", "47.9621, 338.62, 12.9469, 1.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "65.3367, 164.024, 25.9418, 0.52", "64.2236, 164.96, 26.501, 0.52", "63.9178, 165.193, 26.6288, 1.18", "63.2727, 165.644, 26.8447, 1.18", "60.8418, 167.3, 27.5607, 0.22", "60.5871, 167.47, 27.6265, 0.59", "59.732, 168.044, 27.8083, 0.29", "58.9656, 168.546, 27.9222, 0.29", "58.1195, 169.093, 28.0769, 0.22", "57.8411, 169.268, 28.1253, 0.66", "57.358, 169.567, 28.1813, 0.66", "56.2772, 170.267, 28.3953, 0.22", "55.5721, 170.75, 28.5952, 0.66", "53.4587, 172.29, 29.4605, 0.52", "52.7704, 172.82, 29.8452, 0.81", "52.0647, 173.401, 30.3078, 0.29", "51.5109, 173.898, 30.7306, 0.52", "51.4563, 173.948, 30.7789, 0.52", "50.7374, 174.658, 31.4779, 0.66", "50.1627, 175.363, 32.0085, 0.29", "49.7959, 175.916, 32.4826, 0.96", "49.6556, 176.184, 32.7274, 1.03" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "65.3367, 164.024, 25.9418, 0.59", "66.31, 164.353, 26.2807, 0.59", "66.5965, 164.462, 26.3686, 1.11", "67.0764, 164.665, 26.555, 0.81", "67.1353, 164.697, 26.5797, 0.81", "67.7123, 165.067, 26.8295, 0.59", "67.8523, 165.176, 26.8917, 1.55", "68.0679, 165.41, 27.0226, 1.55", "68.4621, 165.925, 27.3367, 0.96", "68.821, 166.481, 27.6735, 0.37", "68.9357, 166.676, 27.7929, 0.59", "69.1468, 167.094, 28.0531, 0.37", "69.6624, 168.155, 28.729, 0.88", "69.8364, 168.527, 28.971, 1.55", "69.9945, 168.872, 29.187, 1.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-130.008, 206.195, -7.61142, 0.22", "-130.244, 207.701, -8.39104, 0.22", "-130.324, 208.225, -8.70021, 0.22", "-130.419, 208.7, -9.02384, 0.81", "-130.485, 208.965, -9.23093, 0.81", "-131.0, 210.747, -11.0849, 0.66", "-131.01, 210.78, -11.1185, 0.66", "-131.053, 210.995, -11.4818, 1.03", "-131.101, 211.287, -12.1517, 0.15", "-131.129, 211.466, -12.7557, 0.15", "-131.227, 211.562, -13.9809, 1.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-130.008, 206.195, -7.61142, 0.22", "-130.114, 204.891, -7.89191, 0.22", "-130.15, 204.468, -7.94857, 0.74", "-130.254, 203.45, -8.05566, 0.29", "-130.27, 203.308, -8.06986, 0.29", "-130.368, 202.474, -8.1588, 0.29", "-130.377, 202.397, -8.16745, 0.29", "-130.464, 201.272, -8.28837, 0.29", "-130.505, 200.847, -8.30027, 0.66", "-130.53, 200.511, -8.24581, 0.66", "-130.571, 199.765, -8.02664, 0.29", "-130.574, 199.643, -7.97851, 0.29", "-130.559, 199.105, -7.73677, 0.52", "-130.461, 197.434, -6.89916, 0.29", "-130.328, 195.693, -5.9295, 0.29", "-130.277, 195.121, -5.57482, 1.18", "-130.249, 194.844, -5.3814, 1.03", "-130.182, 194.254, -4.93767, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "162.753, 218.208, -20.9946, 0.29", "172.789, 221.951, -21.1249, 0.29", "182.693, 225.908, -22.1832, 0.29", "192.873, 229.03, -23.1592, 0.29", "203.108, 231.438, -24.997, 0.29", "212.876, 235.653, -26.3683, 0.29", "222.355, 240.592, -27.5586, 0.29" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "162.753, 218.208, -20.9946, 0.29", "171.131, 222.391, -18.3366, 0.29", "179.51, 225.77, -14.7913, 0.29", "187.499, 229.993, -11.1753, 0.29", "195.865, 234.517, -9.03782, 0.29" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "145.525, 225.078, -57.9625, 0.29", "151.283, 225.99, -62.9784, 0.29", "157.061, 227.234, -67.9048, 0.29", "162.397, 229.001, -73.1747, 0.29", "166.973, 231.326, -78.9388, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "145.525, 225.078, -57.9625, 0.29", "148.722, 235.991, -56.0541, 0.29", "153.898, 246.24, -55.8932, 0.29", "159.057, 256.458, -56.8743, 0.29", "164.349, 266.48, -58.681, 0.29", "168.621, 276.369, -62.6496, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "5.81776, 256.1, -28.9846, 0.22", "5.9001, 257.627, -29.3127, 0.22", "5.93873, 258.177, -29.4178, 0.52", "5.98155, 258.688, -29.5067, 0.52", "6.10003, 260.263, -29.8202, 0.22", "6.18972, 261.636, -30.1032, 0.22", "6.23667, 262.428, -30.2678, 0.81", "6.2627, 262.925, -30.369, 1.11", "6.28787, 263.361, -30.4639, 1.33", "6.38342, 264.886, -30.76, 0.22", "6.43267, 265.507, -30.8538, 0.81", "6.45348, 265.807, -30.8934, 1.03", "6.55218, 267.272, -31.0479, 0.22", "6.60439, 268.413, -31.2344, 0.88", "6.62826, 269.182, -31.3892, 1.11", "6.64792, 269.854, -31.5387, 1.33", "6.65309, 270.211, -31.6404, 1.33", "6.65352, 270.268, -31.6596, 1.33", "6.66687, 272.48, -32.5092, 0.22", "6.66114, 272.972, -32.7095, 0.52", "6.65762, 273.051, -32.7432, 0.52", "6.63198, 273.319, -32.8484, 0.52", "6.55701, 274.139, -33.1604, 0.22", "6.50158, 274.901, -33.416, 0.22", "6.45931, 275.716, -33.6546, 0.22", "6.4209, 276.691, -33.9541, 0.88", "6.40694, 277.358, -34.1764, 0.88", "6.39955, 278.955, -34.736, 0.15", "6.39712, 279.578, -34.9689, 0.52", "6.41337, 280.505, -35.3312, 0.74", "6.5089, 281.888, -35.8767, 0.22", "6.63529, 283.044, -36.307, 1.03", "6.69541, 283.461, -36.4571, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "5.81776, 256.1, -28.9846, 0.22", "6.30417, 257.271, -30.8023, 0.22", "6.56144, 257.587, -31.6381, 0.22", "6.59332, 257.632, -31.7513, 0.22", "7.14042, 258.504, -33.8629, 0.37", "7.28342, 258.749, -34.4405, 0.29", "7.70302, 259.553, -36.2652, 0.88", "8.81243, 261.43, -40.6875, 0.22", "8.99456, 261.759, -41.4725, 0.22", "9.07858, 261.952, -41.911, 0.52", "9.08437, 261.979, -41.9675, 0.52", "9.08417, 262.226, -42.4193, 0.66", "8.84726, 263.202, -43.4938, 0.29", "8.81286, 263.297, -43.5464, 0.29", "8.61976, 263.913, -43.8729, 0.29", "8.3546, 264.851, -44.3259, 0.66", "8.29421, 265.072, -44.4268, 0.66", "7.88992, 266.653, -45.055, 0.22", "7.85794, 266.774, -45.0903, 0.22", "7.66108, 267.603, -45.3235, 0.52", "7.58483, 268.011, -45.4285, 0.52", "6.0402, 274.04, -53.9753, 0.52", "5.87329, 279.631, -62.9207, 0.52", "6.66475, 285.694, -71.5482, 0.52", "4.98631, 292.206, -79.7415, 0.52", "3.83959, 298.728, -88.0182, 0.52", "3.01187, 305.299, -96.2975, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "37.9369, 228.887, -24.462, 0.29", "43.5998, 237.707, -23.2714, 0.29", "48.2835, 247.2, -23.9964, 0.29", "51.9043, 256.826, -26.6815, 0.29", "54.1174, 266.25, -31.0486, 0.29", "57.0476, 275.987, -34.1852, 0.29", "60.4611, 285.162, -38.243, 0.29", "64.6515, 292.904, -43.9541, 0.29", "68.3051, 301.37, -49.07, 0.29", "70.0968, 310.519, -54.1132, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "37.9369, 228.887, -24.462, 1.33", "45.3008, 239.928, -29.4153, 0.29", "50.64, 252.967, -31.9706, 0.29", "57.2985, 265.34, -34.4319, 0.29", "62.4669, 278.226, -37.8891, 0.29", "66.7338, 290.812, -43.1292, 0.29", "71.0899, 303.852, -47.1377, 0.29", "73.3896, 317.732, -50.1698, 0.29", "77.6367, 331.073, -53.2966, 0.29", "81.532, 343.981, -58.094, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "159.285, 66.8383, -45.8515, 0.29", "169.751, 68.5478, -48.1635, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "159.285, 66.8383, -45.8515, 0.29", "167.683, 68.2867, -47.3532, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-7.18617, 271.612, 14.0485, 0.29", "-8.13418, 273.654, 14.325, 0.29", "-8.73145, 274.94, 14.4992, 0.81", "-8.93904, 275.387, 14.5597, 1.11", "-9.01815, 275.558, 14.5828, 1.11", "-9.38996, 276.358, 14.6912, 1.11" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-7.18617, 271.612, 14.0485, 0.29", "-10.5226, 272.931, 17.9678, 0.29", "-10.9811, 273.143, 18.4914, 1.92", "-11.2887, 273.312, 18.83, 2.28", "-13.0937, 274.408, 20.7585, 0.37", "-13.5727, 274.725, 21.2458, 0.88", "-14.1062, 275.117, 21.7388, 0.37", "-14.1584, 275.173, 21.7601, 0.37", "-14.649, 275.748, 21.9072, 0.37", "-14.6954, 275.811, 21.9234, 0.37", "-15.0131, 276.292, 21.9876, 0.37", "-15.7028, 277.245, 22.145, 1.03", "-16.1011, 277.737, 22.2398, 0.96", "-16.8077, 278.589, 22.4302, 0.74", "-18.3802, 280.421, 22.9484, 2.21" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "69.9945, 168.872, 29.187, 0.81", "70.8988, 169.536, 31.5278, 0.81", "71.4737, 169.999, 33.0564, 0.29", "71.6207, 170.123, 33.4543, 1.03", "72.2417, 170.646, 35.1353, 0.37", "72.3651, 170.75, 35.4695, 0.88", "72.3856, 170.767, 35.525, 0.88", "72.888, 171.263, 36.9286, 0.74", "72.903, 171.285, 36.981, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "69.9945, 168.872, 29.187, 0.59", "69.035, 171.324, 30.3216, 0.59", "68.862, 171.809, 30.5217, 0.59", "68.5425, 172.959, 30.9571, 0.37", "68.4239, 173.693, 31.2071, 0.88", "68.3853, 174.243, 31.3736, 1.47", "68.3397, 176.378, 31.9746, 0.22", "68.3949, 177.254, 32.1287, 0.22", "68.5328, 178.229, 32.3021, 0.88", "68.8646, 179.629, 32.6567, 0.22", "69.1298, 180.593, 32.9515, 0.81", "69.1523, 180.666, 32.9751, 0.81", "69.3484, 181.301, 33.2458, 0.22", "69.4357, 181.714, 33.4801, 0.66", "69.5818, 183.326, 34.5483, 0.29", "69.5695, 183.919, 34.978, 0.96", "69.5154, 184.555, 35.4401, 0.66", "69.3063, 186.161, 36.5277, 0.37", "69.243, 186.569, 36.7696, 0.37", "69.1536, 187.101, 37.0277, 0.66", "69.0648, 187.636, 37.1897, 0.88", "68.8707, 188.852, 37.5175, 0.29", "68.6966, 189.893, 37.745, 0.37", "68.5465, 190.934, 37.8875, 0.37", "68.4944, 191.363, 37.9811, 0.88", "68.3971, 192.453, 38.2467, 0.88", "68.3443, 193.718, 38.5674, 0.66", "68.3432, 193.793, 38.5869, 0.66", "68.3483, 194.417, 38.7857, 0.66", "68.3523, 195.689, 39.3428, 0.74", "68.3691, 196.759, 39.9027, 0.37", "68.3818, 197.3, 40.2365, 0.59" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "195.865, 234.517, -9.03782, 0.29", "204.649, 238.551, -6.08808, 0.29", "213.239, 243.226, -3.43869, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "195.865, 234.517, -9.03782, 0.29", "205.265, 238.181, -7.55899, 0.29", "214.474, 241.152, -4.40188, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "166.973, 231.326, -78.9388, 0.29", "170.185, 233.353, -84.4205, 0.29", "173.767, 235.613, -89.5823, 0.29", "176.671, 238.575, -94.8368, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "166.973, 231.326, -78.9388, 0.29", "171.681, 233.2, -85.0892, 0.29", "175.794, 233.895, -91.8685, 0.29", "179.915, 235.175, -98.5583, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.69541, 283.461, -36.4571, 0.22", "9.10938, 283.611, -37.0771, 0.22", "9.9655, 283.664, -37.2971, 0.37", "10.5415, 283.7, -37.445, 0.66", "11.258, 283.744, -37.629, 0.88", "23.6027, 282.745, -41.2435, 0.88", "35.8338, 281.979, -45.2734, 0.88", "48.0829, 280.502, -49.0574, 0.88", "60.6922, 281.453, -51.6376, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.69541, 283.461, -36.4571, 0.22", "6.5382, 284.702, -36.5131, 0.22", "6.45868, 285.804, -36.5468, 0.37", "6.43546, 286.513, -36.5655, 0.22", "6.43464, 287.172, -36.5824, 0.66", "6.44187, 287.511, -36.5911, 0.88", "6.50885, 288.912, -36.6396, 0.22", "6.62955, 290.001, -36.667, 0.29", "6.7132, 290.641, -36.6891, 0.59", "6.80338, 291.219, -36.7147, 1.03", "6.87214, 291.602, -36.737, 1.25", "7.15536, 293.005, -36.7665, 0.15", "7.36309, 293.953, -36.7539, 0.15", "7.49602, 294.612, -36.7209, 0.88", "7.56974, 294.992, -36.6807, 1.18", "7.6412, 295.372, -36.6176, 1.18", "7.94261, 296.99, -36.2544, 0.15", "8.04393, 297.547, -36.0878, 0.44", "8.10405, 297.887, -35.9715, 0.44", "8.24386, 298.683, -35.6761, 0.22", "8.31763, 299.241, -35.484, 0.74", "8.32305, 299.302, -35.4649, 0.74", "8.33272, 299.641, -35.3872, 0.74", "8.33414, 299.707, -35.3748, 0.74", "8.33982, 300.002, -35.3332, 0.74", "8.33436, 301.593, -35.2008, 0.22", "8.3342, 301.655, -35.1973, 0.22", "8.33972, 302.48, -35.1609, 0.81", "8.34537, 302.861, -35.1474, 1.03", "8.34639, 302.929, -35.1454, 1.03", "8.35849, 303.481, -35.1414, 1.03", "8.41537, 304.754, -35.153, 0.22", "8.47384, 305.547, -35.1861, 0.22", "8.47995, 305.609, -35.1903, 0.22", "8.57757, 306.45, -35.2585, 0.22", "8.68314, 307.236, -35.3331, 0.88", "8.76219, 307.739, -35.3893, 1.03", "8.95964, 309.045, -35.5548, 0.22", "9.01892, 309.495, -35.6112, 0.22", "9.08685, 310.068, -35.6785, 0.66", "9.09503, 310.138, -35.6861, 0.66", "9.1207, 310.401, -35.7118, 0.66", "9.19566, 311.476, -35.8027, 0.22", "9.22698, 312.156, -35.8472, 0.22", "9.24952, 312.737, -35.8854, 0.29", "9.28602, 313.638, -35.9443, 0.22", "9.33076, 314.454, -36.0098, 0.74", "9.36639, 314.884, -36.0485, 1.18", "9.42822, 315.384, -36.0963, 1.18", "9.46408, 315.658, -36.123, 1.33", "9.52508, 316.104, -36.1657, 1.33", "9.75347, 317.688, -36.322, 0.15", "9.93689, 318.826, -36.4531, 0.15", "10.1317, 319.905, -36.5987, 0.88", "10.2084, 320.301, -36.6565, 1.11", "10.2575, 320.554, -36.6941, 1.11", "10.2774, 320.666, -36.7127, 1.11", "10.4416, 321.617, -36.8783, 0.15", "10.5772, 322.432, -37.0244, 0.15", "10.7141, 323.322, -37.1766, 0.74", "10.7788, 323.747, -37.244, 0.88", "10.9575, 324.95, -37.4177, 0.15", "11.1723, 326.336, -37.594, 0.15", "11.3022, 327.157, -37.6871, 0.96", "11.3891, 327.675, -37.7449, 1.25", "11.4569, 328.047, -37.7846, 1.25", "11.8001, 329.776, -37.9555, 0.22", "12.0264, 330.839, -38.0406, 0.22", "12.0398, 330.902, -38.0458, 0.22", "12.2623, 331.904, -38.1313, 0.52", "12.3351, 332.23, -38.1567, 0.96", "12.3463, 332.284, -38.1598, 0.96", "12.4245, 332.732, -38.1735, 0.96", "12.4421, 332.857, -38.176, 0.96", "12.4545, 332.947, -38.1779, 1.11", "12.5906, 334.535, -38.1876, 0.22", "12.6276, 335.126, -38.1897, 0.22", "12.6503, 335.595, -38.1936, 0.81", "12.6695, 335.923, -38.1847, 1.03", "12.7483, 336.892, -38.1334, 0.22", "12.8666, 338.069, -38.0463, 0.22", "13.0023, 339.181, -37.938, 0.22", "13.0198, 339.294, -37.926, 0.22", "13.2007, 340.365, -37.8046, 0.22", "13.4021, 341.437, -37.6829, 0.81", "13.4172, 341.502, -37.6742, 0.81", "13.5312, 341.934, -37.6115, 0.81", "13.7637, 342.86, -37.4693, 0.22", "13.8651, 343.345, -37.3986, 0.22", "13.9898, 344.114, -37.3027, 0.88", "14.2293, 345.677, -37.0505, 0.22", "14.3256, 346.337, -36.9343, 0.22", "14.3356, 346.408, -36.9209, 0.22", "14.4318, 347.176, -36.7702, 0.22", "14.444, 347.269, -36.7531, 0.22", "14.6007, 348.415, -36.5838, 0.22", "14.7532, 349.327, -36.4986, 1.03", "14.8358, 349.699, -36.4765, 1.33", "14.9372, 350.157, -36.4585, 1.33", "15.0805, 350.785, -36.4437, 0.74", "15.3931, 352.238, -36.41, 0.22", "15.4859, 352.704, -36.4039, 0.22", "15.6449, 353.464, -36.3869, 0.81", "15.8891, 354.615, -36.3538, 0.22", "15.9009, 354.667, -36.3524, 0.22", "16.028, 355.223, -36.334, 0.66", "16.1256, 355.662, -36.3159, 0.66", "16.4664, 357.168, -36.2528, 0.22", "16.4826, 357.241, -36.2514, 0.22", "16.7442, 358.374, -36.2584, 0.22", "16.7573, 358.434, -36.2603, 0.22", "16.979, 359.532, -36.3186, 1.03", "17.0834, 360.098, -36.3514, 1.47", "17.3036, 361.421, -36.4373, 0.22", "17.3535, 361.738, -36.4592, 0.22", "17.4493, 362.381, -36.5073, 0.44", "17.4881, 362.642, -36.5283, 0.66", "17.4975, 362.706, -36.5338, 0.66", "17.5423, 363.03, -36.557, 0.66", "17.6577, 364.142, -36.5882, 0.15", "17.6971, 364.787, -36.5933, 0.74", "17.7054, 365.019, -36.5915, 0.96", "17.7087, 365.081, -36.5924, 0.96", "17.7273, 365.363, -36.5992, 0.96", "17.8049, 366.4, -36.6339, 0.22", "17.8867, 367.18, -36.6701, 0.52", "17.9316, 367.487, -36.6901, 0.52", "18.1795, 368.836, -36.7972, 0.22", "18.3098, 369.406, -36.8508, 0.52", "18.3425, 369.52, -36.8653, 0.52", "18.646, 370.433, -37.0065, 0.22", "18.8878, 371.234, -37.1715, 1.11", "18.9493, 371.472, -37.2338, 1.33", "19.0596, 371.963, -37.3778, 1.03", "19.2328, 372.81, -37.6393, 0.22", "19.316, 373.249, -37.7763, 0.59", "19.4826, 374.297, -38.0956, 0.15", "19.6645, 375.703, -38.4827, 0.22", "19.77, 376.688, -38.7192, 0.96", "19.7891, 376.947, -38.7752, 1.25", "19.815, 377.397, -38.8596, 1.25", "19.9001, 378.781, -39.0851, 0.22", "19.9574, 379.598, -39.1829, 0.22", "19.9905, 380.408, -39.2669, 0.74", "20.0017, 380.911, -39.3173, 0.96", "20.012, 381.229, -39.3462, 0.96", "20.0326, 381.547, -39.3709, 0.81", "20.0402, 381.618, -39.375, 0.81", "20.0854, 382.007, -39.3915, 0.66", "20.1749, 382.793, -39.4077, 0.22", "20.2584, 383.632, -39.4067, 0.22", "20.3243, 384.535, -39.4008, 1.03", "20.3444, 384.909, -39.397, 1.03", "20.3667, 385.417, -39.3913, 0.81", "20.4049, 386.274, -39.384, 0.22", "20.484, 387.29, -39.3881, 0.22", "20.5594, 387.915, -39.3954, 0.81", "20.5682, 387.968, -39.3962, 0.81", "20.6622, 388.405, -39.4123, 0.81", "20.925, 389.404, -39.4693, 0.22", "21.145, 390.183, -39.5241, 0.22", "21.315, 390.805, -39.6006, 0.22", "21.3344, 390.908, -39.6159, 0.22", "21.4043, 391.491, -39.7197, 0.66", "21.4345, 391.933, -39.8176, 1.03", "21.4406, 392.389, -39.9352, 1.18", "21.4215, 393.108, -40.1329, 1.03", "21.3727, 394.165, -40.4572, 0.22", "21.3435, 394.889, -40.6887, 0.22", "21.3419, 395.445, -40.8783, 0.22", "21.3436, 395.495, -40.8955, 0.22", "21.3931, 396.146, -41.1173, 0.96", "21.438, 396.688, -41.2785, 0.96", "21.4722, 397.065, -41.3944, 0.96", "21.5562, 398.202, -41.7064, 0.22", "21.5894, 398.963, -41.9019, 0.22", "21.5977, 399.076, -41.9293, 0.22", "21.6668, 399.747, -42.0833, 0.22", "21.7414, 400.307, -42.2004, 0.88", "21.8234, 400.872, -42.3149, 0.88", "22.0195, 402.091, -42.5532, 0.22", "22.2213, 403.187, -42.7682, 0.22", "22.2515, 403.326, -42.7963, 0.22", "22.3743, 403.819, -42.8981, 0.88", "22.4996, 404.315, -42.9916, 0.88", "22.7344, 405.199, -43.1486, 0.22", "22.9385, 405.942, -43.2701, 0.81", "23.1014, 406.735, -43.389, 0.15", "23.1121, 406.797, -43.3977, 0.15", "23.2163, 407.562, -43.5115, 0.81", "23.2702, 408.006, -43.5781, 0.81", "23.3922, 408.991, -43.7301, 0.22", "23.4896, 409.761, -43.8562, 0.22", "23.4971, 409.824, -43.8686, 0.22", "23.6501, 410.964, -44.1266, 0.22", "23.7707, 411.82, -44.3747, 1.18", "23.8432, 412.288, -44.528, 1.33", "23.8852, 412.529, -44.6132, 1.33", "24.1543, 414.081, -45.1857, 0.22", "24.2463, 414.677, -45.4053, 0.52", "24.4102, 415.901, -45.8477, 0.22", "24.4608, 416.327, -45.998, 0.59", "24.4951, 416.633, -46.0991, 0.59", "24.6792, 418.218, -46.5689, 0.22", "24.6872, 418.28, -46.5837, 0.22", "24.75, 418.846, -46.7036, 0.22", "24.8113, 419.48, -46.8028, 0.81", "24.8385, 419.806, -46.8503, 1.03", "24.8592, 420.058, -46.892, 1.03", "24.8893, 420.502, -46.9912, 0.44", "24.9444, 421.644, -47.3034, 0.22", "24.9583, 422.341, -47.5253, 0.22", "24.9528, 423.031, -47.7675, 0.74", "24.9346, 423.566, -47.9623, 0.74", "24.8734, 424.788, -48.428, 0.22", "24.8696, 424.844, -48.4515, 0.22", "24.8422, 425.227, -48.6185, 0.22", "24.7976, 425.819, -48.8878, 0.88", "24.7751, 426.166, -49.0297, 1.18", "24.7514, 426.773, -49.2296, 1.18", "24.7569, 428.239, -49.6251, 0.22", "24.7594, 428.312, -49.6432, 0.22", "24.7921, 428.862, -49.7591, 0.22", "24.813, 429.438, -49.8487, 0.74", "24.8091, 429.821, -49.8858, 0.96", "24.7586, 430.22, -49.8982, 0.96", "24.73, 430.352, -49.8974, 0.96", "24.4781, 431.367, -49.9167, 0.22", "24.2654, 432.168, -49.9473, 0.59", "24.1529, 432.571, -49.9974, 0.59", "23.8297, 433.77, -50.1926, 0.22", "23.6749, 434.432, -50.3293, 0.22", "23.5511, 435.058, -50.4824, 1.25", "23.4666, 435.627, -50.648, 1.33", "23.3325, 437.244, -51.1768, 0.22", "23.3101, 437.677, -51.3261, 0.66", "23.3002, 438.43, -51.5911, 0.22", "23.2997, 438.488, -51.6115, 0.22", "23.2912, 439.099, -51.8244, 0.74", "23.2901, 439.527, -51.9665, 0.74", "23.3102, 440.588, -52.2612, 0.15", "23.3113, 441.152, -52.4056, 0.52", "23.3059, 441.338, -52.46, 0.52", "23.262, 442.274, -52.7535, 0.22", "23.2418, 442.646, -52.8774, 0.37", "23.2159, 443.141, -53.058, 0.15", "23.2053, 443.573, -53.231, 0.44", "23.1944, 444.932, -53.827, 0.22", "23.1979, 445.386, -54.0313, 0.74", "23.2035, 445.727, -54.1962, 0.96", "23.2187, 446.733, -54.7185, 0.22", "23.2268, 447.385, -55.0751, 0.22", "23.2454, 448.295, -55.5756, 0.81", "23.25, 448.55, -55.7118, 0.81", "23.2369, 449.554, -56.2388, 0.22", "23.2342, 449.611, -56.2675, 0.22", "23.1726, 450.393, -56.6404, 0.74", "23.1423, 450.689, -56.7733, 0.96", "22.9339, 452.386, -57.5112, 0.22", "22.8671, 453.152, -57.8429, 0.52", "22.8649, 453.221, -57.8708, 0.52", "22.8758, 453.558, -57.9991, 0.74", "22.8828, 453.616, -58.0204, 0.74", "22.9983, 454.2, -58.2334, 0.74", "23.2722, 455.176, -58.5714, 0.22", "23.5399, 455.992, -58.8484, 0.22", "23.7997, 456.754, -59.0709, 0.74", "24.1813, 457.871, -59.3442, 0.22", "24.3555, 458.406, -59.4394, 0.59", "24.3739, 458.465, -59.445, 0.59", "24.6295, 459.427, -59.4557, 0.22", "24.7713, 460.032, -59.4176, 0.66", "24.8318, 460.38, -59.375, 0.66", "24.9499, 461.296, -59.2242, 0.22", "25.0019, 461.694, -59.1348, 0.44", "25.0538, 462.085, -59.0378, 0.44", "25.212, 463.329, -58.7043, 0.22", "25.3258, 463.983, -58.5094, 1.11", "25.4554, 464.579, -58.3109, 1.11", "25.9246, 466.413, -57.6236, 0.22", "26.0735, 466.94, -57.4098, 0.52", "26.0933, 467.004, -57.382, 0.52", "26.4991, 468.141, -56.8431, 0.22", "26.5354, 468.23, -56.8008, 0.22", "26.731, 468.66, -56.5976, 0.22", "26.9525, 469.103, -56.4287, 0.52", "27.227, 469.637, -56.2395, 0.15", "27.3995, 469.976, -56.1503, 0.29", "27.4376, 470.056, -56.1334, 0.29", "27.8533, 470.853, -55.9712, 0.15", "28.1013, 471.298, -55.8896, 0.44", "28.1646, 471.397, -55.8728, 0.44", "28.725, 472.206, -55.7444, 0.22", "29.2416, 472.923, -55.6488, 1.03", "29.5484, 473.324, -55.6153, 1.03", "30.002, 473.858, -55.6188, 0.37", "30.5203, 474.431, -55.6488, 0.29", "30.5631, 474.477, -55.6535, 0.29", "30.7502, 474.659, -55.6857, 0.81", "31.2037, 475.085, -55.7882, 0.81", "32.0122, 475.856, -55.9707, 0.22", "32.5641, 476.374, -56.0964, 0.22", "33.0031, 476.811, -56.198, 0.74", "33.4642, 477.267, -56.3046, 0.74", "36.0501, 485.694, -56.6018, 0.74" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-18.3802, 280.421, 22.9484, 3.17", "-19.174, 280.899, 23.735, 3.17", "-21.415, 282.65, 26.3052, 0.44", "-21.8556, 283.103, 26.8806, 0.74", "-21.8946, 283.151, 26.9443, 0.74", "-22.275, 283.636, 27.5843, 0.74", "-22.3166, 283.689, 27.6488, 0.74", "-23.0911, 284.903, 28.9563, 0.66", "-23.3358, 285.592, 29.5877, 0.59", "-23.8995, 287.281, 31.1918, 0.29", "-24.0891, 287.819, 31.7746, 0.29", "-24.5109, 288.682, 32.8659, 0.29", "-24.7598, 289.071, 33.4195, 0.29", "-25.94, 290.527, 35.7611, 1.55", "-26.3947, 291.039, 36.6051, 1.92", "-27.556, 292.416, 38.6259, 1.4", "-28.2932, 293.309, 39.7968, 0.66", "-28.877, 293.976, 40.6163, 0.66", "-28.9116, 294.005, 40.6735, 0.66", "-29.4821, 294.412, 41.6539, 0.59", "-29.9307, 294.829, 42.7313, 0.59", "-30.2953, 295.374, 44.146, 0.96", "-30.3065, 295.404, 44.2119, 0.96", "-31.1075, 298.17, 50.4439, 0.74", "-31.2148, 298.537, 51.2784, 1.03", "-31.3441, 298.984, 52.3734, 1.18", "-31.5868, 299.699, 54.3395, 0.81", "-31.8075, 300.047, 55.5681, 0.81", "-31.8348, 300.068, 55.6492, 0.81", "-32.5418, 300.186, 56.4419, 0.81", "-32.6079, 300.181, 56.4995, 0.81", "-33.8051, 300.006, 57.3929, 0.66", "-36.5254, 299.482, 59.1757, 0.59", "-37.3519, 299.327, 59.7241, 0.59", "-37.422, 299.324, 59.777, 0.59", "-38.1266, 299.493, 60.3539, 0.59", "-38.6284, 299.782, 60.7761, 0.88", "-38.6805, 299.838, 60.8183, 0.88", "-39.3005, 300.696, 61.2397, 0.88", "-40.5437, 302.231, 62.0265, 0.88", "-41.5917, 303.133, 62.7654, 0.88", "-41.6797, 303.187, 62.8312, 0.88", "-42.5682, 303.551, 63.4769, 0.88", "-42.7679, 303.613, 63.613, 0.88", "-44.0483, 303.891, 64.4064, 0.88", "-46.6362, 304.502, 65.771, 0.59", "-46.7214, 304.531, 65.8141, 0.59", "-47.375, 304.823, 66.1994, 0.88", "-48.435, 305.344, 66.8687, 0.88", "-49.1489, 305.742, 67.3306, 0.66", "-50.4191, 306.505, 68.1331, 0.66", "-51.4808, 307.088, 68.839, 1.03", "-53.6841, 308.108, 70.4931, 1.03", "-54.6084, 308.494, 71.2578, 0.96", "-54.6788, 308.524, 71.3186, 0.96", "-55.5254, 308.943, 72.0773, 0.74", "-57.3355, 309.937, 73.7231, 0.52", "-58.0656, 310.521, 74.364, 0.52", "-58.7294, 311.436, 74.8591, 0.52", "-59.5391, 313.246, 75.517, 0.74", "-59.7965, 314.318, 75.7601, 0.52", "-59.805, 314.498, 75.7796, 0.52", "-59.662, 315.597, 75.7684, 0.66", "-59.6368, 315.683, 75.7657, 0.66", "-59.2534, 316.638, 75.7225, 0.66", "-58.6051, 317.9, 75.6506, 0.59", "-58.2171, 318.626, 75.6077, 0.59", "-57.4874, 319.946, 75.5271, 0.44", "-56.8726, 321.003, 75.4595, 0.66" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-18.3802, 280.421, 22.9484, 0.52", "-16.3168, 280.534, 24.511, 0.52", "-16.2758, 280.53, 24.5474, 0.52", "-15.339, 280.297, 25.5945, 0.74", "-15.2296, 280.262, 25.7291, 0.74", "-14.4645, 280.035, 26.6708, 0.74", "-14.32, 279.997, 26.8445, 0.74", "-13.3861, 279.692, 28.0683, 0.66", "-12.3306, 279.391, 29.4663, 0.59", "-12.2979, 279.383, 29.5097, 0.59", "-11.649, 279.273, 30.317, 0.59", "-11.3661, 279.251, 30.6613, 0.44", "-10.7947, 279.261, 31.2758, 0.44", "-10.7457, 279.273, 31.3155, 0.44", "-10.088, 279.51, 31.6899, 0.66", "-9.97873, 279.545, 31.7544, 0.66" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "60.6922, 281.453, -51.6376, 0.29", "68.6776, 281.102, -54.9124, 0.29", "77.0401, 281.873, -56.9577, 0.29", "85.0623, 284.39, -59.1087, 0.29", "93.0052, 287.834, -60.0723, 0.29", "100.971, 290.006, -62.7141, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "60.6922, 281.453, -51.6376, 1.33", "71.7576, 281.268, -52.55, 0.29", "82.7124, 279.382, -52.3173, 0.29", "93.4361, 276.811, -53.8272, 0.29", "104.049, 276.121, -57.0274, 0.29", "114.775, 277.035, -59.7668, 0.29", "125.539, 278.013, -62.3356, 0.29", "136.614, 277.881, -63.1399, 0.29", "147.6, 278.988, -64.3663, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_32", "dend_1", "dend_50", "dend_33", "dend_25", "dend_2", "dend_60", "dend_51", "dend_41", "dend_34", "dend_27", "dend_26", "dend_14", "dend_3", "dend_64", "dend_61", "dend_55", "dend_52", "dend_49", "dend_42", "dend_36", "dend_35", "dend_31", "dend_28", "dend_20", "dend_15", "dend_7", "dend_4", "dend_66", "dend_65", "dend_63", "dend_62", "dend_59", "dend_56", "dend_54", "dend_53", "dend_44", "dend_43", "dend_40", "dend_37", "dend_30", "dend_29", "dend_24", "dend_21", "dend_17", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_58", "dend_57", "dend_48", "dend_45", "dend_39", "dend_38", "dend_23", "dend_22", "dend_19", "dend_18", "dend_11", "dend_10", "dend_47", "dend_46", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_32", "dend_1", "dend_50", "dend_33", "dend_25", "dend_2", "dend_60", "dend_51", "dend_41", "dend_34", "dend_27", "dend_26", "dend_14", "dend_3", "dend_64", "dend_61", "dend_55", "dend_52", "dend_49", "dend_42", "dend_36", "dend_35", "dend_31", "dend_28", "dend_20", "dend_15", "dend_7", "dend_4", "dend_66", "dend_65", "dend_63", "dend_62", "dend_59", "dend_56", "dend_54", "dend_53", "dend_44", "dend_43", "dend_40", "dend_37", "dend_30", "dend_29", "dend_24", "dend_21", "dend_17", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_58", "dend_57", "dend_48", "dend_45", "dend_39", "dend_38", "dend_23", "dend_22", "dend_19", "dend_18", "dend_11", "dend_10", "dend_47", "dend_46", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_0", "axon_0", "dend_32", "dend_1", "axon_1", "dend_50", "dend_33", "dend_25", "dend_2", "dend_60", "dend_51", "dend_41", "dend_34", "dend_27", "dend_26", "dend_14", "dend_3", "dend_64", "dend_61", "dend_55", "dend_52", "dend_49", "dend_42", "dend_36", "dend_35", "dend_31", "dend_28", "dend_20", "dend_15", "dend_7", "dend_4", "dend_66", "dend_65", "dend_63", "dend_62", "dend_59", "dend_56", "dend_54", "dend_53", "dend_44", "dend_43", "dend_40", "dend_37", "dend_30", "dend_29", "dend_24", "dend_21", "dend_17", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_58", "dend_57", "dend_48", "dend_45", "dend_39", "dend_38", "dend_23", "dend_22", "dend_19", "dend_18", "dend_11", "dend_10", "dend_47", "dend_46", "dend_13", "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_58", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_23", "dend_23", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_SBC_fc7c18ae57_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_0
create dend_32
public dend_32
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_32
create dend_50
public dend_50
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_1
create dend_25
public dend_25
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_50
create dend_60
public dend_60
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_2
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_64, id: dend_64, parent: dend_60
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_41
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_32, dend_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_32, dend_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_0, axon_0, dend_32, dend_1, axon_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_58, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_23, dend_23, dend_22, dend_22, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.45000005627683015)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_64(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_49(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.259893, -9.42971, -0.848319, 2.94679 ) }
    soma_0 { pt3dadd( 0.274509, -8.53076, -0.774952, 4.96732 ) }
    soma_0 { pt3dadd( 0.289126, -7.63181, -0.701585, 7.50293 ) }
    soma_0 { pt3dadd( 0.303742, -6.73286, -0.628218, 9.88075 ) }
    soma_0 { pt3dadd( 0.318358, -5.8339, -0.554851, 11.1234 ) }
    soma_0 { pt3dadd( 0.332975, -4.93495, -0.481484, 12.1727 ) }
    soma_0 { pt3dadd( 0.347591, -4.036, -0.408118, 12.6064 ) }
    soma_0 { pt3dadd( 0.362208, -3.13705, -0.334751, 12.7 ) }
    soma_0 { pt3dadd( 0.376824, -2.2381, -0.261384, 12.7598 ) }
    soma_0 { pt3dadd( 0.39144, -1.33915, -0.188017, 12.6811 ) }
    soma_0 { pt3dadd( 0.406057, -0.4402, -0.11465, 12.486 ) }
    soma_0 { pt3dadd( 0.420673, 0.458751, -0.0412834, 12.2118 ) }
    soma_0 { pt3dadd( 0.43529, 1.3577, 0.0320835, 11.8745 ) }
    soma_0 { pt3dadd( 0.449906, 2.25665, 0.10545, 11.5372 ) }
    soma_0 { pt3dadd( 0.464522, 3.1556, 0.178817, 10.2739 ) }
    soma_0 { pt3dadd( 0.479139, 4.05455, 0.252184, 8.61928 ) }
    soma_0 { pt3dadd( 0.493755, 4.95351, 0.325551, 7.19059 ) }
    soma_0 { pt3dadd( 0.508371, 5.85246, 0.398918, 6.26009 ) }
    soma_0 { pt3dadd( 0.522988, 6.75141, 0.472285, 5.10411 ) }
    soma_0 { pt3dadd( 0.537604, 7.65036, 0.545651, 3.84179 ) }
    soma_0 { pt3dadd( 0.552221, 8.54931, 0.619018, 2.38567 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.400844, 9.3298, 0.523351, 4.42 ) }
    dend_0 { pt3dadd( 0.400844, 9.3298, 0.523351, 4.42 ) }
    dend_0 { pt3dadd( 0.344888, 10.9994, 0.528405, 4.42 ) }
    dend_0 { pt3dadd( 0.336518, 13.5038, 0.539248, 4.42 ) }
    dend_0 { pt3dadd( 0.364024, 15.2683, 0.547796, 4.49 ) }
    dend_0 { pt3dadd( 0.385549, 16.6491, 0.554485, 4.49 ) }
    dend_0 { pt3dadd( 0.419124, 18.803, 0.56492, 4.72 ) }
    dend_0 { pt3dadd( 0.444521, 19.9953, 0.571309, 4.72 ) }
    dend_0 { pt3dadd( 0.497699, 21.5134, 0.58132, 4.72 ) }
    dend_0 { pt3dadd( 0.60212, 22.7673, 0.592125, 4.2 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.552221, 8.54931, 0.619018, 1.43872 ) }
    axon_0 { pt3dadd( 0.79608, 23.5473, 0.619018, 1.43872 ) }
    axon_0 { pt3dadd( 1.03994, 38.5453, 0.619018, 1.43872 ) }
    // Section: dend_32, id: dend_32, parent: dend_0 (entry count 34/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.60212, 22.7673, 0.592125, 3.09 ) }
    dend_32 { pt3dadd( 1.37433, 24.458, 0.674906, 3.09 ) }
    dend_32 { pt3dadd( 1.94129, 25.7528, 0.737543, 2.73 ) }
    dend_32 { pt3dadd( 2.61945, 27.3399, 0.81271, 2.73 ) }
    dend_32 { pt3dadd( 3.28142, 28.8839, 0.884782, 2.73 ) }
    dend_32 { pt3dadd( 3.71169, 29.8861, 0.931179, 2.8 ) }
    dend_32 { pt3dadd( 4.41143, 31.4976, 1.00525, 2.8 ) }
    dend_32 { pt3dadd( 4.46278, 31.621, 1.01027, 2.8 ) }
    dend_32 { pt3dadd( 4.97007, 32.8107, 1.05891, 2.8 ) }
    dend_32 { pt3dadd( 5.62174, 34.281, 1.11815, 2.8 ) }
    dend_32 { pt3dadd( 5.64462, 34.3312, 1.11998, 2.8 ) }
    dend_32 { pt3dadd( 6.30397, 35.6379, 1.16818, 2.95 ) }
    dend_32 { pt3dadd( 6.84976, 36.6329, 1.20044, 3.02 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 47/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.60212, 22.7673, 0.592125, 1.33 ) }
    dend_1 { pt3dadd( -0.181107, 25.459, 1.47318, 1.33 ) }
    dend_1 { pt3dadd( -0.203019, 25.5449, 1.49562, 1.33 ) }
    dend_1 { pt3dadd( -0.443736, 26.6134, 1.72653, 1.33 ) }
    dend_1 { pt3dadd( -0.458055, 26.6889, 1.74066, 1.33 ) }
    dend_1 { pt3dadd( -0.675131, 27.9615, 1.96426, 1.18 ) }
    dend_1 { pt3dadd( -0.684971, 28.0242, 1.97531, 1.18 ) }
    dend_1 { pt3dadd( -0.780099, 29.1337, 2.08014, 1.4 ) }
    dend_1 { pt3dadd( -0.846084, 29.8735, 2.16771, 1.55 ) }
    dend_1 { pt3dadd( -0.944227, 30.7552, 2.28753, 1.55 ) }
    dend_1 { pt3dadd( -0.957632, 30.8535, 2.29757, 1.55 ) }
    dend_1 { pt3dadd( -1.05895, 31.5008, 2.34471, 1.55 ) }
    dend_1 { pt3dadd( -1.06928, 31.5644, 2.3475, 1.55 ) }
    dend_1 { pt3dadd( -1.2168, 32.5968, 2.30971, 1.55 ) }
    dend_1 { pt3dadd( -1.36824, 33.9891, 2.15641, 1.4 ) }
    dend_1 { pt3dadd( -1.41967, 34.8615, 2.0146, 1.4 ) }
    dend_1 { pt3dadd( -1.41816, 35.4309, 1.9013, 1.92 ) }
    dend_1 { pt3dadd( -1.41481, 35.4944, 1.88656, 1.92 ) }
    dend_1 { pt3dadd( -1.29205, 36.706, 1.58877, 1.92 ) }
    dend_1 { pt3dadd( -1.16028, 37.5298, 1.37657, 1.92 ) }
    dend_1 { pt3dadd( -0.960106, 38.5067, 1.18791, 1.69 ) }
    dend_1 { pt3dadd( -0.725672, 39.6072, 1.015, 1.69 ) }
    dend_1 { pt3dadd( -0.709259, 39.6829, 1.00419, 1.69 ) }
    dend_1 { pt3dadd( -0.445447, 40.9433, 0.867474, 1.69 ) }
    dend_1 { pt3dadd( -0.41947, 41.0806, 0.864997, 1.69 ) }
    dend_1 { pt3dadd( -0.208193, 42.2729, 0.868413, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.03994, 38.5453, 0.619018, 0.15 ) }
    axon_1 { pt3dadd( 1.2838, 53.5434, 0.619018, 0.15 ) }
    axon_1 { pt3dadd( 1.52766, 68.5414, 0.619018, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_32 (entry count 76/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 6.84976, 36.6329, 1.20044, 1.99 ) }
    dend_50 { pt3dadd( 8.64528, 37.2148, 1.4055, 1.99 ) }
    dend_50 { pt3dadd( 9.76107, 37.6003, 1.53272, 1.92 ) }
    dend_50 { pt3dadd( 10.8277, 38.0058, 1.65402, 1.92 ) }
    dend_50 { pt3dadd( 12.0664, 38.4903, 1.75235, 1.77 ) }
    dend_50 { pt3dadd( 13.2061, 38.939, 1.82515, 1.77 ) }
    dend_50 { pt3dadd( 13.2503, 38.9558, 1.82691, 1.77 ) }
    dend_50 { pt3dadd( 14.2441, 39.3406, 1.82074, 2.28 ) }
    dend_50 { pt3dadd( 15.4053, 39.7889, 1.79396, 2.28 ) }
    dend_50 { pt3dadd( 17.1721, 40.4556, 1.72023, 1.99 ) }
    dend_50 { pt3dadd( 18.5293, 40.9568, 1.63559, 1.99 ) }
    dend_50 { pt3dadd( 20.0538, 41.4877, 1.5149, 1.99 ) }
    dend_50 { pt3dadd( 21.3821, 41.9321, 1.39554, 2.43 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 89/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.84976, 36.6329, 1.20044, 2.06 ) }
    dend_33 { pt3dadd( 7.15308, 39.5116, 1.23217, 2.06 ) }
    dend_33 { pt3dadd( 7.31856, 41.606, 1.2533, 1.62 ) }
    dend_33 { pt3dadd( 7.32393, 41.6969, 1.25441, 1.62 ) }
    dend_33 { pt3dadd( 7.45982, 44.1826, 1.28788, 1.33 ) }
    dend_33 { pt3dadd( 7.60304, 46.6513, 1.41591, 1.33 ) }
    dend_33 { pt3dadd( 7.61537, 46.8493, 1.43299, 1.33 ) }
    dend_33 { pt3dadd( 7.75165, 49.2825, 1.76605, 1.33 ) }
    dend_33 { pt3dadd( 7.84999, 51.033, 2.09185, 2.06 ) }
    dend_33 { pt3dadd( 7.93638, 51.9427, 2.30507, 2.21 ) }
    dend_33 { pt3dadd( 8.19787, 53.7139, 2.82027, 2.43 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_33 { pt3dadd( 8.35977, 54.5402, 3.07534, 2.95 ) }
    dend_33 { pt3dadd( 8.53639, 55.4895, 3.33836, 2.95 ) }
    dend_33 { pt3dadd( 8.57075, 55.7144, 3.3911, 2.95 ) }
    dend_33 { pt3dadd( 8.82682, 58.0577, 3.80579, 1.33 ) }
    dend_33 { pt3dadd( 8.93772, 59.5685, 3.99743, 1.33 ) }
    dend_33 { pt3dadd( 9.00714, 61.5768, 4.13543, 1.33 ) }
    dend_33 { pt3dadd( 8.98978, 63.8377, 4.23031, 1.47 ) }
    dend_33 { pt3dadd( 8.85574, 66.0028, 4.21087, 1.47 ) }
    dend_33 { pt3dadd( 8.69633, 67.3982, 4.14374, 1.69 ) }
    dend_33 { pt3dadd( 8.68286, 67.4792, 4.14108, 1.69 ) }
    dend_33 { pt3dadd( 8.37077, 69.3007, 4.12813, 1.92 ) }
    dend_33 { pt3dadd( 8.16063, 70.8536, 4.16083, 1.92 ) }
    dend_33 { pt3dadd( 7.98735, 73.1331, 4.33015, 0.66 ) }
    dend_33 { pt3dadd( 8.00749, 74.7432, 4.54918, 0.66 ) }
    dend_33 { pt3dadd( 8.25494, 77.2085, 5.0108, 0.66 ) }
    dend_33 { pt3dadd( 8.39935, 78.2406, 5.23733, 1.25 ) }
    dend_33 { pt3dadd( 8.73377, 79.7326, 5.66506, 1.99 ) }
    dend_33 { pt3dadd( 9.12617, 80.9144, 6.10447, 2.5 ) }
    dend_33 { pt3dadd( 9.70863, 82.1996, 6.72748, 3.24 ) }
    dend_33 { pt3dadd( 10.3294, 83.2946, 7.25244, 3.39 ) }
    // Section: dend_25, id: dend_25, parent: dend_1 (entry count 20/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.208193, 42.2729, 0.868413, 1.03 ) }
    dend_25 { pt3dadd( -1.39317, 43.2136, 2.23346, 1.03 ) }
    dend_25 { pt3dadd( -1.78057, 43.5111, 2.67404, 0.88 ) }
    dend_25 { pt3dadd( -2.85041, 44.2788, 3.9011, 1.03 ) }
    dend_25 { pt3dadd( -3.45431, 44.6987, 4.59916, 1.33 ) }
    dend_25 { pt3dadd( -3.4983, 44.7281, 4.64754, 1.33 ) }
    dend_25 { pt3dadd( -4.46502, 45.3726, 5.59539, 1.33 ) }
    dend_25 { pt3dadd( -4.50931, 45.4004, 5.62792, 1.33 ) }
    dend_25 { pt3dadd( -5.9187, 46.2836, 6.40397, 1.33 ) }
    dend_25 { pt3dadd( -5.96805, 46.3155, 6.42299, 1.33 ) }
    dend_25 { pt3dadd( -6.66102, 46.7912, 6.62214, 1.47 ) }
    dend_25 { pt3dadd( -7.77011, 47.6545, 6.82379, 1.33 ) }
    dend_25 { pt3dadd( -8.91284, 48.6725, 6.90417, 1.33 ) }
    dend_25 { pt3dadd( -9.78962, 49.5753, 6.86773, 1.47 ) }
    dend_25 { pt3dadd( -9.86427, 49.667, 6.85302, 1.47 ) }
    dend_25 { pt3dadd( -10.5529, 50.6263, 6.6633, 1.47 ) }
    dend_25 { pt3dadd( -11.3717, 52.031, 6.32499, 1.33 ) }
    dend_25 { pt3dadd( -11.7773, 52.9116, 6.07742, 1.33 ) }
    dend_25 { pt3dadd( -12.2512, 54.2613, 5.63522, 1.33 ) }
    dend_25 { pt3dadd( -12.526, 55.1998, 5.29832, 1.33 ) }
    dend_25 { pt3dadd( -12.5419, 55.2575, 5.27717, 1.33 ) }
    dend_25 { pt3dadd( -12.7527, 56.045, 4.97964, 1.33 ) }
    dend_25 { pt3dadd( -12.7761, 56.111, 4.95619, 1.33 ) }
    dend_25 { pt3dadd( -13.1376, 56.9023, 4.73947, 1.4 ) }
    dend_25 { pt3dadd( -13.6054, 57.7759, 4.58212, 1.47 ) }
    dend_25 { pt3dadd( -14.1493, 58.7154, 4.50443, 1.62 ) }
    dend_25 { pt3dadd( -14.5322, 59.3759, 4.48965, 1.62 ) }
    dend_25 { pt3dadd( -15.3189, 60.7372, 4.51873, 1.33 ) }
    dend_25 { pt3dadd( -15.9507, 61.8723, 4.57139, 1.4 ) }
    dend_25 { pt3dadd( -16.4556, 62.7863, 4.67613, 1.4 ) }
    dend_25 { pt3dadd( -17.3696, 64.3852, 4.94061, 0.96 ) }
    dend_25 { pt3dadd( -18.0353, 65.5249, 5.1804, 0.96 ) }
    dend_25 { pt3dadd( -18.4447, 66.1863, 5.34619, 1.18 ) }
    dend_25 { pt3dadd( -18.9918, 66.9622, 5.58728, 1.47 ) }
    dend_25 { pt3dadd( -20.0813, 68.207, 6.03662, 1.47 ) }
    dend_25 { pt3dadd( -21.0448, 68.9869, 6.35749, 1.33 ) }
    dend_25 { pt3dadd( -21.0985, 69.0126, 6.37313, 1.33 ) }
    dend_25 { pt3dadd( -22.4291, 69.3612, 6.73769, 1.55 ) }
    dend_25 { pt3dadd( -23.6087, 69.493, 7.0342, 2.06 ) }
    dend_25 { pt3dadd( -24.5911, 69.4766, 7.2995, 1.69 ) }
    dend_25 { pt3dadd( -26.1927, 69.3236, 7.71488, 0.96 ) }
    dend_25 { pt3dadd( -27.9525, 69.0704, 8.21301, 1.55 ) }
    dend_25 { pt3dadd( -28.6689, 68.9578, 8.4409, 1.77 ) }
    dend_25 { pt3dadd( -29.3045, 68.8556, 8.70097, 1.47 ) }
    dend_25 { pt3dadd( -31.0624, 68.5605, 9.48657, 1.11 ) }
    dend_25 { pt3dadd( -31.9885, 68.4328, 9.96118, 0.96 ) }
    dend_25 { pt3dadd( -32.041, 68.4295, 9.99208, 0.96 ) }
    dend_25 { pt3dadd( -33.2709, 68.4602, 10.7346, 1.18 ) }
    dend_25 { pt3dadd( -34.7859, 68.5925, 11.7657, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.208193, 42.2729, 0.868413, 0.96 ) }
    dend_2 { pt3dadd( -0.229373, 43.4374, 0.381708, 0.96 ) }
    dend_2 { pt3dadd( -0.232508, 43.4892, 0.361655, 0.96 ) }
    dend_2 { pt3dadd( -0.325433, 44.7109, -0.0272785, 0.96 ) }
    dend_2 { pt3dadd( -0.396875, 45.5968, -0.28187, 0.96 ) }
    dend_2 { pt3dadd( -0.40237, 45.6622, -0.298841, 0.96 ) }
    dend_2 { pt3dadd( -0.471076, 46.7434, -0.572625, 0.96 ) }
    dend_2 { pt3dadd( -0.476954, 46.8123, -0.588524, 0.96 ) }
    dend_2 { pt3dadd( -0.537102, 48.0481, -0.832433, 0.96 ) }
    dend_2 { pt3dadd( -0.538055, 48.1152, -0.843117, 0.96 ) }
    dend_2 { pt3dadd( -0.465283, 49.4576, -1.03657, 1.25 ) }
    dend_2 { pt3dadd( -0.359941, 50.4199, -1.15899, 1.25 ) }
    dend_2 { pt3dadd( -0.350917, 50.4748, -1.1651, 1.25 ) }
    dend_2 { pt3dadd( -0.162014, 51.5422, -1.26229, 0.74 ) }
    dend_2 { pt3dadd( -0.139286, 51.6719, -1.27106, 0.74 ) }
    dend_2 { pt3dadd( 0.0353987, 52.7599, -1.33557, 0.52 ) }
    dend_2 { pt3dadd( 0.187897, 53.8433, -1.3806, 1.25 ) }
    dend_2 { pt3dadd( 0.240323, 54.318, -1.39575, 1.62 ) }
    dend_2 { pt3dadd( 0.311765, 55.0817, -1.42256, 1.25 ) }
    dend_2 { pt3dadd( 0.373237, 55.9957, -1.4837, 0.59 ) }
    dend_2 { pt3dadd( 0.419657, 56.9642, -1.56807, 0.59 ) }
    dend_2 { pt3dadd( 0.441737, 57.964, -1.59788, 1.11 ) }
    dend_2 { pt3dadd( 0.443686, 58.0294, -1.59629, 1.11 ) }
    dend_2 { pt3dadd( 0.489832, 58.7103, -1.54687, 1.11 ) }
    dend_2 { pt3dadd( 0.599857, 59.957, -1.34378, 0.59 ) }
    dend_2 { pt3dadd( 0.697355, 60.7689, -1.15781, 0.59 ) }
    dend_2 { pt3dadd( 0.871442, 62.5332, -0.615431, 1.25 ) }
    dend_2 { pt3dadd( 0.942445, 63.4453, -0.346382, 1.47 ) }
    dend_2 { pt3dadd( 0.981402, 64.3653, -0.108301, 1.47 ) }
    dend_2 { pt3dadd( 0.986366, 65.9926, 0.168456, 1.69 ) }
    dend_2 { pt3dadd( 0.949503, 67.1616, 0.262994, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 0.87387, 68.6329, 0.0826829, 0.66 ) }
    dend_2 { pt3dadd( 0.821012, 70.0619, -0.408977, 0.96 ) }
    dend_2 { pt3dadd( 0.819611, 70.8744, -0.821004, 1.33 ) }
    dend_2 { pt3dadd( 0.881545, 72.5298, -1.85081, 1.33 ) }
    dend_2 { pt3dadd( 0.910929, 72.8061, -2.04752, 1.84 ) }
    dend_2 { pt3dadd( 1.15467, 74.1079, -2.9923, 1.4 ) }
    dend_2 { pt3dadd( 1.46557, 75.1965, -3.70251, 1.11 ) }
    dend_2 { pt3dadd( 1.80849, 76.1801, -4.17362, 1.11 ) }
    dend_2 { pt3dadd( 2.15324, 77.0551, -4.48333, 1.84 ) }
    dend_2 { pt3dadd( 2.38071, 77.619, -4.61165, 2.06 ) }
    dend_2 { pt3dadd( 2.78359, 78.7177, -4.79217, 2.06 ) }
    dend_2 { pt3dadd( 3.25014, 80.142, -4.92247, 0.96 ) }
    dend_2 { pt3dadd( 3.59708, 81.2749, -4.9894, 0.66 ) }
    dend_2 { pt3dadd( 3.77796, 81.8811, -4.99689, 0.59 ) }
    dend_2 { pt3dadd( 4.06947, 82.8638, -4.98732, 0.59 ) }
    dend_2 { pt3dadd( 4.31932, 83.8435, -4.9341, 0.59 ) }
    dend_2 { pt3dadd( 4.33331, 83.9095, -4.92649, 0.59 ) }
    dend_2 { pt3dadd( 4.45966, 84.6427, -4.83881, 0.59 ) }
    dend_2 { pt3dadd( 4.46951, 84.717, -4.8323, 0.59 ) }
    dend_2 { pt3dadd( 4.56812, 85.5307, -4.82197, 0.59 ) }
    dend_2 { pt3dadd( 4.69865, 86.4571, -4.99939, 1.11 ) }
    dend_2 { pt3dadd( 4.70919, 86.5197, -5.02251, 1.11 ) }
    dend_2 { pt3dadd( 4.82998, 87.3182, -5.41282, 1.62 ) }
    dend_2 { pt3dadd( 4.89315, 87.7748, -5.68731, 1.62 ) }
    dend_2 { pt3dadd( 5.00613, 88.5538, -6.19899, 1.92 ) }
    dend_2 { pt3dadd( 5.18916, 89.8502, -7.10935, 1.92 ) }
    dend_2 { pt3dadd( 5.20197, 89.9476, -7.17731, 1.92 ) }
    dend_2 { pt3dadd( 5.31016, 91.0427, -7.86706, 0.66 ) }
    dend_2 { pt3dadd( 5.31773, 91.1477, -7.92464, 0.66 ) }
    dend_2 { pt3dadd( 5.36871, 92.0875, -8.36051, 0.88 ) }
    dend_2 { pt3dadd( 5.40439, 92.579, -8.52967, 1.11 ) }
    dend_2 { pt3dadd( 5.47545, 93.1621, -8.65819, 1.25 ) }
    dend_2 { pt3dadd( 5.55156, 93.6191, -8.74986, 0.96 ) }
    dend_2 { pt3dadd( 5.74164, 94.5104, -8.92163, 0.59 ) }
    dend_2 { pt3dadd( 5.7643, 94.6103, -8.93984, 0.59 ) }
    dend_2 { pt3dadd( 5.98806, 95.6304, -9.11044, 0.59 ) }
    dend_2 { pt3dadd( 6.17593, 96.5902, -9.26338, 0.44 ) }
    dend_2 { pt3dadd( 6.18624, 96.654, -9.27254, 0.44 ) }
    dend_2 { pt3dadd( 6.26841, 97.4195, -9.36436, 0.44 ) }
    dend_2 { pt3dadd( 6.2884, 98.0543, -9.42253, 0.44 ) }
    dend_2 { pt3dadd( 6.24662, 99.0304, -9.50161, 1.47 ) }
    dend_2 { pt3dadd( 6.12616, 99.8435, -9.55984, 1.99 ) }
    dend_2 { pt3dadd( 6.02519, 100.29, -9.58679, 2.28 ) }
    dend_2 { pt3dadd( 5.85815, 100.94, -9.63223, 2.43 ) }
    dend_2 { pt3dadd( 5.69746, 101.532, -9.67549, 2.43 ) }
    dend_2 { pt3dadd( 5.51597, 102.201, -9.73256, 2.28 ) }
    dend_2 { pt3dadd( 5.15178, 103.623, -9.86459, 0.44 ) }
    dend_2 { pt3dadd( 5.01228, 104.253, -9.93253, 0.37 ) }
    dend_2 { pt3dadd( 4.86798, 105.105, -10.0284, 0.37 ) }
    dend_2 { pt3dadd( 4.79821, 105.781, -10.1028, 0.37 ) }
    dend_2 { pt3dadd( 4.76775, 106.423, -10.1645, 1.11 ) }
    dend_2 { pt3dadd( 4.76155, 107.042, -10.2124, 1.62 ) }
    dend_2 { pt3dadd( 4.79206, 107.98, -10.2625, 1.92 ) }
    dend_2 { pt3dadd( 4.8326, 108.809, -10.2717, 2.36 ) }
    dend_2 { pt3dadd( 4.87823, 109.694, -10.2491, 2.36 ) }
    dend_2 { pt3dadd( 4.91041, 110.613, -10.1473, 1.92 ) }
    dend_2 { pt3dadd( 4.92331, 111.578, -9.9569, 1.25 ) }
    dend_2 { pt3dadd( 4.91948, 112.372, -9.74879, 1.25 ) }
    dend_2 { pt3dadd( 4.89731, 113.478, -9.39369, 1.47 ) }
    dend_2 { pt3dadd( 4.85138, 114.505, -9.03422, 1.4 ) }
    dend_2 { pt3dadd( 4.6993, 116.401, -8.37171, 0.44 ) }
    dend_2 { pt3dadd( 4.6069, 117.346, -8.06544, 0.74 ) }
    dend_2 { pt3dadd( 4.56819, 117.802, -7.92966, 0.74 ) }
    dend_2 { pt3dadd( 4.56285, 117.868, -7.91515, 0.74 ) }
    dend_2 { pt3dadd( 4.49053, 118.936, -7.8113, 0.44 ) }
    dend_2 { pt3dadd( 4.40152, 120.513, -7.83615, 0.44 ) }
    dend_2 { pt3dadd( 4.38338, 121.396, -7.96374, 0.37 ) }
    dend_2 { pt3dadd( 4.38853, 122.341, -8.16461, 0.37 ) }
    dend_2 { pt3dadd( 4.37571, 123.702, -8.50507, 0.81 ) }
    dend_2 { pt3dadd( 4.36127, 124.67, -8.80263, 1.62 ) }
    dend_2 { pt3dadd( 4.36112, 125.505, -9.08557, 2.5 ) }
    dend_2 { pt3dadd( 4.36426, 126.699, -9.53239, 2.58 ) }
    dend_2 { pt3dadd( 4.33194, 127.747, -9.94878, 1.77 ) }
    dend_2 { pt3dadd( 4.18637, 129.391, -10.6513, 0.52 ) }
    dend_2 { pt3dadd( 4.07823, 130.364, -11.0913, 0.52 ) }
    // Section: dend_60, id: dend_60, parent: dend_50 (entry count 75/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 21.3821, 41.9321, 1.39554, 0.96 ) }
    dend_60 { pt3dadd( 21.9902, 43.4664, 3.0025, 0.96 ) }
    dend_60 { pt3dadd( 22.429, 44.4704, 4.14642, 0.96 ) }
    dend_60 { pt3dadd( 22.9584, 45.4894, 5.40112, 1.18 ) }
    dend_60 { pt3dadd( 23.9946, 47.1771, 7.84952, 2.8 ) }
    dend_60 { pt3dadd( 25.2835, 49.006, 10.7133, 1.62 ) }
    dend_60 { pt3dadd( 25.6623, 49.4898, 11.4798, 1.33 ) }
    dend_60 { pt3dadd( 25.6887, 49.5173, 11.5319, 1.33 ) }
    dend_60 { pt3dadd( 26.1843, 49.9414, 12.4315, 0.96 ) }
    dend_60 { pt3dadd( 27.9059, 51.1148, 14.9385, 0.96 ) }
    dend_60 { pt3dadd( 28.5247, 51.4862, 15.6275, 1.33 ) }
    dend_60 { pt3dadd( 29.4602, 52.0963, 16.4617, 1.55 ) }
    dend_60 { pt3dadd( 30.0795, 52.5254, 17.0162, 1.77 ) }
    dend_60 { pt3dadd( 30.165, 52.5869, 17.0902, 1.77 ) }
    dend_60 { pt3dadd( 31.1234, 53.3235, 17.8554, 2.06 ) }
    dend_60 { pt3dadd( 32.6988, 54.4666, 18.7721, 1.03 ) }
    dend_60 { pt3dadd( 33.8886, 55.3223, 19.5557, 1.92 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 92/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 21.3821, 41.9321, 1.39554, 1.69 ) }
    dend_51 { pt3dadd( 22.9907, 42.0553, 0.176407, 1.69 ) }
    dend_51 { pt3dadd( 23.4581, 42.0419, -0.119622, 1.69 ) }
    dend_51 { pt3dadd( 23.5073, 42.0385, -0.149337, 1.69 ) }
    dend_51 { pt3dadd( 24.0507, 41.9897, -0.457954, 1.69 ) }
    dend_51 { pt3dadd( 24.0878, 41.986, -0.478393, 1.69 ) }
    dend_51 { pt3dadd( 25.0365, 41.9035, -0.970078, 1.4 ) }
    dend_51 { pt3dadd( 25.6738, 41.8554, -1.23596, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( 26.7595, 41.842, -1.69156, 1.4 ) }
    dend_51 { pt3dadd( 27.1451, 41.877, -1.83419, 1.69 ) }
    dend_51 { pt3dadd( 27.1831, 41.8834, -1.84728, 1.69 ) }
    dend_51 { pt3dadd( 27.6986, 42.0069, -2.02892, 1.69 ) }
    dend_51 { pt3dadd( 28.7104, 42.2966, -2.36007, 1.4 ) }
    dend_51 { pt3dadd( 29.2973, 42.4824, -2.55104, 1.18 ) }
    dend_51 { pt3dadd( 30.563, 42.8663, -2.92339, 1.18 ) }
    dend_51 { pt3dadd( 30.6622, 42.8932, -2.95121, 1.18 ) }
    dend_51 { pt3dadd( 31.8022, 43.1631, -3.25614, 1.11 ) }
    dend_51 { pt3dadd( 32.7861, 43.3552, -3.52403, 1.4 ) }
    dend_51 { pt3dadd( 32.825, 43.3615, -3.53395, 1.4 ) }
    dend_51 { pt3dadd( 33.6894, 43.4989, -3.74786, 1.69 ) }
    dend_51 { pt3dadd( 34.3909, 43.6377, -3.90257, 1.84 ) }
    dend_51 { pt3dadd( 34.435, 43.6491, -3.91021, 1.84 ) }
    dend_51 { pt3dadd( 35.2434, 43.9378, -3.99519, 1.99 ) }
    dend_51 { pt3dadd( 35.7916, 44.2068, -4.04778, 1.47 ) }
    dend_51 { pt3dadd( 36.5519, 44.6465, -4.1012, 1.47 ) }
    dend_51 { pt3dadd( 37.1593, 45.0445, -4.12796, 1.62 ) }
    dend_51 { pt3dadd( 37.2067, 45.0756, -4.12873, 1.62 ) }
    dend_51 { pt3dadd( 37.8775, 45.5039, -4.11958, 1.47 ) }
    dend_51 { pt3dadd( 38.5435, 45.902, -4.11137, 1.69 ) }
    dend_51 { pt3dadd( 39.1033, 46.1891, -4.17088, 1.99 ) }
    dend_51 { pt3dadd( 39.6323, 46.393, -4.28201, 1.99 ) }
    dend_51 { pt3dadd( 40.2633, 46.5431, -4.45811, 1.92 ) }
    dend_51 { pt3dadd( 40.312, 46.5495, -4.47347, 1.92 ) }
    dend_51 { pt3dadd( 41.2299, 46.5789, -4.80645, 1.92 ) }
    dend_51 { pt3dadd( 42.3013, 46.5521, -5.25463, 2.06 ) }
    dend_51 { pt3dadd( 42.8824, 46.538, -5.51704, 1.47 ) }
    dend_51 { pt3dadd( 43.5902, 46.5435, -5.83942, 0.96 ) }
    dend_51 { pt3dadd( 44.1916, 46.5858, -6.12368, 0.88 ) }
    dend_51 { pt3dadd( 44.2525, 46.5909, -6.15112, 0.88 ) }
    dend_51 { pt3dadd( 45.1357, 46.6904, -6.49836, 1.25 ) }
    dend_51 { pt3dadd( 45.5783, 46.7779, -6.64602, 1.84 ) }
    dend_51 { pt3dadd( 45.965, 46.9135, -6.8036, 2.06 ) }
    dend_51 { pt3dadd( 46.5946, 47.2518, -7.12292, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 35/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 10.3294, 83.2946, 7.25244, 0.88 ) }
    dend_41 { pt3dadd( 9.80489, 87.429, 6.22654, 0.88 ) }
    dend_41 { pt3dadd( 9.60721, 89.1802, 5.848, 0.88 ) }
    dend_41 { pt3dadd( 9.53423, 90.2608, 5.66111, 1.4 ) }
    dend_41 { pt3dadd( 9.47985, 91.4559, 5.48258, 1.62 ) }
    dend_41 { pt3dadd( 9.45305, 92.1635, 5.39939, 1.99 ) }
    dend_41 { pt3dadd( 9.40255, 93.6259, 5.25765, 1.69 ) }
    dend_41 { pt3dadd( 9.40118, 93.851, 5.25952, 1.69 ) }
    dend_41 { pt3dadd( 9.41412, 95.9984, 5.27685, 1.92 ) }
    dend_41 { pt3dadd( 9.41405, 96.079, 5.27733, 1.92 ) }
    dend_41 { pt3dadd( 9.30537, 98.6326, 5.28016, 0.66 ) }
    dend_41 { pt3dadd( 9.26148, 99.5604, 5.28137, 1.11 ) }
    dend_41 { pt3dadd( 9.2247, 100.487, 5.23447, 1.33 ) }
    dend_41 { pt3dadd( 9.22158, 100.584, 5.22555, 1.33 ) }
    dend_41 { pt3dadd( 9.22295, 101.283, 5.13483, 1.33 ) }
    dend_41 { pt3dadd( 9.29732, 102.781, 4.90092, 1.18 ) }
    dend_41 { pt3dadd( 9.48305, 104.756, 4.55457, 0.66 ) }
    dend_41 { pt3dadd( 9.66217, 106.648, 4.24016, 0.66 ) }
    dend_41 { pt3dadd( 9.66802, 106.728, 4.22843, 0.66 ) }
    dend_41 { pt3dadd( 9.71126, 108.773, 3.96727, 0.66 ) }
    dend_41 { pt3dadd( 9.70737, 108.867, 3.95748, 0.66 ) }
    dend_41 { pt3dadd( 9.54188, 110.479, 3.82955, 0.66 ) }
    dend_41 { pt3dadd( 9.25303, 111.945, 3.76166, 1.77 ) }
    dend_41 { pt3dadd( 8.8863, 113.473, 3.8157, 1.99 ) }
    dend_41 { pt3dadd( 8.54887, 114.927, 3.91863, 2.14 ) }
    dend_41 { pt3dadd( 8.19637, 116.576, 4.08044, 2.14 ) }
    dend_41 { pt3dadd( 8.18016, 116.671, 4.09174, 2.14 ) }
    dend_41 { pt3dadd( 8.03676, 118.07, 4.2905, 2.14 ) }
    dend_41 { pt3dadd( 8.00888, 119.918, 4.58776, 1.25 ) }
    dend_41 { pt3dadd( 8.20779, 121.838, 4.90022, 0.88 ) }
    dend_41 { pt3dadd( 8.46473, 123.088, 5.08942, 0.88 ) }
    dend_41 { pt3dadd( 8.51306, 123.288, 5.11855, 0.88 ) }
    dend_41 { pt3dadd( 8.72417, 124.188, 5.23904, 1.18 ) }
    dend_41 { pt3dadd( 8.99613, 125.42, 5.37898, 1.18 ) }
    dend_41 { pt3dadd( 9.37248, 127.559, 5.54221, 0.66 ) }
    dend_41 { pt3dadd( 9.49708, 128.928, 5.65064, 0.59 ) }
    dend_41 { pt3dadd( 9.45954, 130.002, 5.7315, 0.59 ) }
    dend_41 { pt3dadd( 9.24829, 131.172, 5.80852, 0.59 ) }
    dend_41 { pt3dadd( 8.99088, 131.965, 5.8524, 1.4 ) }
    dend_41 { pt3dadd( 8.6478, 132.734, 5.88548, 1.62 ) }
    dend_41 { pt3dadd( 8.09523, 133.725, 5.91226, 1.77 ) }
    dend_41 { pt3dadd( 7.24399, 135.172, 5.92285, 0.88 ) }
    dend_41 { pt3dadd( 6.57486, 136.404, 5.90043, 0.44 ) }
    dend_41 { pt3dadd( 6.21955, 137.107, 5.88011, 0.44 ) }
    dend_41 { pt3dadd( 5.88579, 137.92, 5.86151, 1.03 ) }
    dend_41 { pt3dadd( 5.8066, 138.198, 5.85737, 1.03 ) }
    dend_41 { pt3dadd( 5.79248, 138.7, 5.85809, 1.03 ) }
    dend_41 { pt3dadd( 5.94818, 139.459, 5.82032, 1.03 ) }
    dend_41 { pt3dadd( 5.97193, 139.553, 5.81292, 1.03 ) }
    dend_41 { pt3dadd( 6.08265, 140.135, 5.75984, 0.96 ) }
    dend_41 { pt3dadd( 6.1139, 140.406, 5.73703, 0.96 ) }
    dend_41 { pt3dadd( 6.2199, 141.923, 5.62381, 0.88 ) }
    dend_41 { pt3dadd( 6.27919, 143.962, 5.4858, 0.81 ) }
    dend_41 { pt3dadd( 6.24341, 145.692, 5.37917, 0.81 ) }
    dend_41 { pt3dadd( 6.12937, 147.278, 5.29448, 0.66 ) }
    dend_41 { pt3dadd( 5.95838, 148.902, 5.22831, 1.03 ) }
    dend_41 { pt3dadd( 5.8768, 149.628, 5.20927, 1.69 ) }
    dend_41 { pt3dadd( 5.77605, 150.402, 5.20175, 1.99 ) }
    dend_41 { pt3dadd( 5.63969, 151.443, 5.21682, 1.99 ) }
    dend_41 { pt3dadd( 5.4842, 152.98, 5.23611, 1.99 ) }
    dend_41 { pt3dadd( 5.37056, 155.452, 5.26151, 0.59 ) }
    dend_41 { pt3dadd( 5.38546, 156.845, 5.27037, 0.29 ) }
    dend_41 { pt3dadd( 5.39228, 156.943, 5.27111, 0.29 ) }
    dend_41 { pt3dadd( 5.57694, 158.267, 5.28712, 0.29 ) }
    dend_41 { pt3dadd( 5.78345, 159.221, 5.30613, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_41 { pt3dadd( 6.0519, 160.21, 5.33185, 1.03 ) }
    dend_41 { pt3dadd( 6.28874, 161.067, 5.35613, 1.55 ) }
    dend_41 { pt3dadd( 6.57716, 162.177, 5.38736, 1.84 ) }
    dend_41 { pt3dadd( 6.82562, 163.127, 5.41425, 2.14 ) }
    dend_41 { pt3dadd( 7.39302, 165.217, 5.47379, 0.37 ) }
    dend_41 { pt3dadd( 7.70837, 166.44, 5.55518, 1.18 ) }
    dend_41 { pt3dadd( 7.97271, 167.534, 5.65366, 1.18 ) }
    dend_41 { pt3dadd( 8.18183, 168.418, 5.71453, 1.03 ) }
    dend_41 { pt3dadd( 8.54509, 170.055, 5.80003, 0.44 ) }
    dend_41 { pt3dadd( 9.03636, 172.353, 5.88504, 0.44 ) }
    dend_41 { pt3dadd( 9.48406, 174.649, 5.81647, 1.03 ) }
    dend_41 { pt3dadd( 9.71256, 175.991, 5.70995, 1.84 ) }
    dend_41 { pt3dadd( 10.0648, 178.278, 5.43998, 1.84 ) }
    dend_41 { pt3dadd( 10.2154, 179.404, 5.26716, 1.62 ) }
    dend_41 { pt3dadd( 10.4512, 181.207, 4.85654, 1.03 ) }
    dend_41 { pt3dadd( 10.8439, 184.089, 3.98841, 0.59 ) }
    dend_41 { pt3dadd( 11.0914, 185.639, 3.4361, 0.44 ) }
    dend_41 { pt3dadd( 11.122, 185.82, 3.38204, 0.44 ) }
    dend_41 { pt3dadd( 11.2893, 186.87, 3.18628, 0.44 ) }
    dend_41 { pt3dadd( 11.6494, 189.101, 3.00829, 1.03 ) }
    dend_41 { pt3dadd( 11.7859, 190.068, 3.07527, 1.25 ) }
    dend_41 { pt3dadd( 11.9622, 191.498, 3.40246, 0.44 ) }
    dend_41 { pt3dadd( 12.1831, 193.865, 4.05468, 0.66 ) }
    dend_41 { pt3dadd( 12.2597, 195.342, 4.59382, 0.37 ) }
    dend_41 { pt3dadd( 12.2924, 196.42, 5.05432, 0.37 ) }
    dend_41 { pt3dadd( 12.315, 197.713, 5.65307, 1.33 ) }
    dend_41 { pt3dadd( 12.3278, 198.417, 5.96154, 2.36 ) }
    dend_41 { pt3dadd( 12.3606, 199.439, 6.36665, 2.36 ) }
    dend_41 { pt3dadd( 12.5207, 202.112, 7.19639, 0.59 ) }
    dend_41 { pt3dadd( 12.6004, 203.323, 7.5981, 0.59 ) }
    dend_41 { pt3dadd( 12.6398, 204.339, 7.9831, 0.59 ) }
    dend_41 { pt3dadd( 12.6442, 205.03, 8.25301, 0.44 ) }
    dend_41 { pt3dadd( 12.6424, 205.119, 8.28512, 0.44 ) }
    dend_41 { pt3dadd( 12.6231, 205.793, 8.47916, 0.44 ) }
    dend_41 { pt3dadd( 12.585, 207.433, 8.78442, 0.74 ) }
    dend_41 { pt3dadd( 12.5634, 208.585, 8.97682, 0.74 ) }
    dend_41 { pt3dadd( 12.5797, 210.14, 9.12266, 1.25 ) }
    dend_41 { pt3dadd( 12.6231, 211.22, 9.15702, 1.25 ) }
    dend_41 { pt3dadd( 12.7235, 213.216, 9.11651, 0.66 ) }
    dend_41 { pt3dadd( 12.8339, 214.876, 8.93498, 1.33 ) }
    dend_41 { pt3dadd( 12.8784, 215.682, 8.78039, 1.69 ) }
    dend_41 { pt3dadd( 12.9522, 217.633, 8.32318, 0.74 ) }
    dend_41 { pt3dadd( 12.9987, 218.896, 7.98492, 0.37 ) }
    dend_41 { pt3dadd( 13.0382, 219.706, 7.75989, 0.88 ) }
    dend_41 { pt3dadd( 13.1894, 221.433, 7.29744, 0.66 ) }
    dend_41 { pt3dadd( 13.3667, 222.718, 7.02371, 0.52 ) }
    dend_41 { pt3dadd( 13.4111, 222.999, 6.97215, 0.52 ) }
    dend_41 { pt3dadd( 13.6585, 224.347, 6.80842, 0.74 ) }
    dend_41 { pt3dadd( 14.0634, 226.186, 6.64107, 1.03 ) }
    dend_41 { pt3dadd( 14.4918, 227.818, 6.56953, 1.25 ) }
    dend_41 { pt3dadd( 15.0697, 229.674, 6.63696, 1.4 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 51/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 10.3294, 83.2946, 7.25244, 2.06 ) }
    dend_34 { pt3dadd( 12.0516, 86.5169, 6.68773, 2.06 ) }
    dend_34 { pt3dadd( 12.5162, 87.5034, 6.72205, 0.96 ) }
    dend_34 { pt3dadd( 13.1391, 88.8981, 6.88865, 0.88 ) }
    dend_34 { pt3dadd( 13.1665, 88.9558, 6.89873, 0.88 ) }
    dend_34 { pt3dadd( 13.6666, 89.9293, 7.10426, 0.88 ) }
    dend_34 { pt3dadd( 14.5565, 91.6179, 7.47612, 1.11 ) }
    dend_34 { pt3dadd( 14.7946, 92.1157, 7.67013, 1.33 ) }
    dend_34 { pt3dadd( 14.8248, 92.18, 7.69169, 1.33 ) }
    dend_34 { pt3dadd( 15.2985, 93.1509, 7.98493, 1.33 ) }
    dend_34 { pt3dadd( 15.7537, 94.2009, 8.30151, 0.88 ) }
    dend_34 { pt3dadd( 16.1387, 95.2176, 8.5818, 0.88 ) }
    dend_34 { pt3dadd( 16.1637, 95.2944, 8.59946, 0.88 ) }
    dend_34 { pt3dadd( 16.6319, 96.9876, 8.98761, 1.33 ) }
    dend_34 { pt3dadd( 16.7462, 97.4907, 9.09893, 1.69 ) }
    dend_34 { pt3dadd( 17.1297, 99.6943, 9.55838, 0.88 ) }
    dend_34 { pt3dadd( 17.2666, 100.661, 9.7411, 0.74 ) }
    dend_34 { pt3dadd( 17.2971, 100.887, 9.80459, 0.74 ) }
    dend_34 { pt3dadd( 17.4472, 101.872, 10.1584, 0.74 ) }
    dend_34 { pt3dadd( 17.6678, 103.028, 10.658, 1.62 ) }
    dend_34 { pt3dadd( 17.8735, 103.948, 11.0938, 0.88 ) }
    dend_34 { pt3dadd( 18.2097, 105.145, 11.6883, 0.52 ) }
    dend_34 { pt3dadd( 19.0718, 107.596, 13.0086, 1.25 ) }
    dend_34 { pt3dadd( 19.3912, 108.301, 13.4427, 1.25 ) }
    dend_34 { pt3dadd( 19.7588, 108.97, 13.9142, 1.11 ) }
    dend_34 { pt3dadd( 19.7846, 109.011, 13.95, 1.11 ) }
    dend_34 { pt3dadd( 20.241, 109.713, 14.6051, 1.11 ) }
    dend_34 { pt3dadd( 20.6982, 110.42, 15.2488, 0.96 ) }
    dend_34 { pt3dadd( 21.5777, 112.193, 16.539, 0.96 ) }
    dend_34 { pt3dadd( 21.5931, 112.242, 16.571, 0.96 ) }
    dend_34 { pt3dadd( 21.9169, 114.11, 17.6337, 1.4 ) }
    dend_34 { pt3dadd( 21.9709, 114.951, 18.0352, 1.4 ) }
    dend_34 { pt3dadd( 21.9378, 115.591, 18.2722, 1.33 ) }
    dend_34 { pt3dadd( 21.767, 117.226, 18.8859, 0.74 ) }
    dend_34 { pt3dadd( 21.6262, 118.559, 19.3161, 0.74 ) }
    dend_34 { pt3dadd( 21.6045, 119.44, 19.5797, 1.03 ) }
    dend_34 { pt3dadd( 21.6619, 120.411, 19.8362, 1.18 ) }
    dend_34 { pt3dadd( 21.8886, 121.857, 20.2455, 0.52 ) }
    dend_34 { pt3dadd( 22.7439, 125.096, 21.3073, 1.77 ) }
    dend_34 { pt3dadd( 23.1429, 126.085, 21.6822, 2.65 ) }
    dend_34 { pt3dadd( 23.9905, 127.718, 22.3665, 0.74 ) }
    dend_34 { pt3dadd( 24.5291, 128.596, 22.7585, 0.96 ) }
    dend_34 { pt3dadd( 25.1066, 129.39, 23.1224, 1.25 ) }
    dend_34 { pt3dadd( 25.9499, 130.413, 23.5625, 1.62 ) }
    dend_34 { pt3dadd( 26.5917, 131.185, 23.7924, 1.18 ) }
    dend_34 { pt3dadd( 27.1247, 131.931, 24.02, 1.18 ) }
    dend_34 { pt3dadd( 27.1551, 131.982, 24.0342, 1.18 ) }
    dend_34 { pt3dadd( 27.4228, 132.489, 24.1451, 1.4 ) }
    dend_34 { pt3dadd( 27.8452, 133.316, 24.1965, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_34 { pt3dadd( 28.546, 134.631, 24.0735, 0.52 ) }
    dend_34 { pt3dadd( 29.2156, 135.776, 23.8641, 0.52 ) }
    dend_34 { pt3dadd( 29.2687, 135.855, 23.8494, 0.52 ) }
    dend_34 { pt3dadd( 29.939, 136.691, 23.7015, 0.88 ) }
    dend_34 { pt3dadd( 31.2392, 138.065, 23.4649, 1.33 ) }
    dend_34 { pt3dadd( 31.6523, 138.424, 23.4099, 1.62 ) }
    dend_34 { pt3dadd( 32.3104, 138.924, 23.3476, 1.92 ) }
    dend_34 { pt3dadd( 34.0198, 140.139, 23.247, 0.44 ) }
    dend_34 { pt3dadd( 34.8738, 140.731, 23.2344, 0.88 ) }
    dend_34 { pt3dadd( 35.2538, 140.961, 23.2285, 0.88 ) }
    dend_34 { pt3dadd( 36.5807, 141.625, 23.2321, 1.69 ) }
    dend_34 { pt3dadd( 37.0441, 141.803, 23.2095, 2.28 ) }
    dend_34 { pt3dadd( 37.1015, 141.82, 23.2038, 2.28 ) }
    dend_34 { pt3dadd( 38.1454, 142.025, 23.0496, 2.06 ) }
    dend_34 { pt3dadd( 40.2459, 142.462, 22.6645, 0.37 ) }
    dend_34 { pt3dadd( 41.2343, 142.704, 22.4697, 0.29 ) }
    dend_34 { pt3dadd( 41.9397, 142.904, 22.3289, 0.88 ) }
    dend_34 { pt3dadd( 42.7603, 143.164, 22.1757, 1.55 ) }
    dend_34 { pt3dadd( 43.4883, 143.436, 22.051, 1.55 ) }
    dend_34 { pt3dadd( 45.2767, 144.269, 21.8002, 0.66 ) }
    dend_34 { pt3dadd( 46.278, 144.826, 21.7089, 0.66 ) }
    dend_34 { pt3dadd( 47.222, 145.395, 21.6339, 1.62 ) }
    dend_34 { pt3dadd( 47.9086, 145.817, 21.5879, 1.99 ) }
    dend_34 { pt3dadd( 48.3492, 146.105, 21.5669, 1.99 ) }
    dend_34 { pt3dadd( 49.795, 147.121, 21.5429, 0.59 ) }
    dend_34 { pt3dadd( 50.4677, 147.649, 21.5661, 0.29 ) }
    dend_34 { pt3dadd( 51.312, 148.442, 21.5963, 0.29 ) }
    dend_34 { pt3dadd( 51.4146, 148.555, 21.6023, 0.29 ) }
    dend_34 { pt3dadd( 52.1197, 149.402, 21.6565, 1.18 ) }
    dend_34 { pt3dadd( 52.6611, 150.022, 21.6752, 1.69 ) }
    dend_34 { pt3dadd( 53.153, 150.574, 21.6761, 1.99 ) }
    dend_34 { pt3dadd( 54.1949, 151.659, 21.6498, 0.52 ) }
    dend_34 { pt3dadd( 55.3056, 152.699, 21.7076, 1.4 ) }
    dend_34 { pt3dadd( 55.915, 153.223, 21.7691, 1.77 ) }
    dend_34 { pt3dadd( 57.1994, 154.223, 21.9407, 0.88 ) }
    dend_34 { pt3dadd( 57.662, 154.555, 22.0122, 1.69 ) }
    dend_34 { pt3dadd( 58.8093, 155.321, 22.2044, 0.88 ) }
    dend_34 { pt3dadd( 60.7135, 156.51, 22.5651, 0.37 ) }
    dend_34 { pt3dadd( 61.5082, 157.019, 22.7425, 1.47 ) }
    dend_34 { pt3dadd( 62.2481, 157.532, 22.9593, 2.06 ) }
    dend_34 { pt3dadd( 63.2711, 158.317, 23.3852, 2.73 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 41/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -34.7859, 68.5925, 11.7657, 1.03 ) }
    dend_27 { pt3dadd( -35.8517, 69.4069, 11.7737, 1.03 ) }
    dend_27 { pt3dadd( -36.7567, 70.0758, 11.8147, 0.74 ) }
    dend_27 { pt3dadd( -37.3598, 70.521, 11.8369, 1.11 ) }
    dend_27 { pt3dadd( -37.7968, 70.871, 11.8324, 1.25 ) }
    dend_27 { pt3dadd( -38.4331, 71.4281, 11.811, 1.25 ) }
    dend_27 { pt3dadd( -39.7445, 72.6782, 11.7503, 0.37 ) }
    dend_27 { pt3dadd( -40.6057, 73.6073, 11.7125, 0.29 ) }
    dend_27 { pt3dadd( -41.2623, 74.4801, 11.6547, 0.29 ) }
    dend_27 { pt3dadd( -41.863, 75.5207, 11.5647, 0.81 ) }
    dend_27 { pt3dadd( -42.1061, 76.2027, 11.4894, 1.4 ) }
    dend_27 { pt3dadd( -42.1865, 76.8059, 11.4151, 1.62 ) }
    dend_27 { pt3dadd( -42.1702, 77.3833, 11.3321, 1.77 ) }
    dend_27 { pt3dadd( -42.066, 78.6314, 11.1831, 1.77 ) }
    dend_27 { pt3dadd( -41.9793, 79.5438, 11.0936, 1.55 ) }
    dend_27 { pt3dadd( -41.9157, 80.6358, 11.0046, 1.11 ) }
    dend_27 { pt3dadd( -41.93, 81.8398, 10.9477, 0.74 ) }
    dend_27 { pt3dadd( -42.0847, 83.2914, 10.9281, 0.66 ) }
    dend_27 { pt3dadd( -42.3126, 84.3518, 10.9492, 1.18 ) }
    dend_27 { pt3dadd( -42.4893, 84.8519, 10.9783, 1.18 ) }
    dend_27 { pt3dadd( -42.8578, 85.6144, 11.0198, 1.18 ) }
    dend_27 { pt3dadd( -43.5972, 86.8262, 11.0792, 0.88 ) }
    dend_27 { pt3dadd( -44.2503, 87.6601, 11.222, 0.88 ) }
    dend_27 { pt3dadd( -44.6224, 88.0654, 11.3335, 1.4 ) }
    dend_27 { pt3dadd( -45.2395, 88.7288, 11.5507, 1.33 ) }
    dend_27 { pt3dadd( -45.8059, 89.3613, 11.7688, 0.81 ) }
    dend_27 { pt3dadd( -46.3879, 90.0578, 12.012, 0.66 ) }
    dend_27 { pt3dadd( -48.0029, 92.2028, 12.7099, 0.66 ) }
    dend_27 { pt3dadd( -48.6879, 93.3886, 13.0341, 0.66 ) }
    dend_27 { pt3dadd( -48.984, 94.1633, 13.1958, 1.03 ) }
    dend_27 { pt3dadd( -49.1419, 94.8746, 13.2758, 1.33 ) }
    dend_27 { pt3dadd( -49.1955, 95.3936, 13.288, 1.55 ) }
    dend_27 { pt3dadd( -49.1954, 96.1372, 13.2393, 1.33 ) }
    dend_27 { pt3dadd( -48.9987, 98.5534, 12.8658, 0.37 ) }
    dend_27 { pt3dadd( -48.8446, 99.881, 12.6487, 1.33 ) }
    dend_27 { pt3dadd( -48.7474, 100.968, 12.4739, 1.99 ) }
    dend_27 { pt3dadd( -48.7308, 101.72, 12.3639, 1.99 ) }
    dend_27 { pt3dadd( -48.7956, 102.483, 12.2636, 1.69 ) }
    dend_27 { pt3dadd( -49.1699, 103.958, 12.1105, 0.44 ) }
    dend_27 { pt3dadd( -49.2424, 104.087, 12.1032, 0.44 ) }
    dend_27 { pt3dadd( -49.894, 104.931, 12.0584, 0.44 ) }
    dend_27 { pt3dadd( -50.8342, 105.984, 12.0253, 0.88 ) }
    dend_27 { pt3dadd( -51.5331, 106.682, 11.985, 1.18 ) }
    dend_27 { pt3dadd( -52.1175, 107.245, 11.9441, 1.62 ) }
    dend_27 { pt3dadd( -52.8071, 107.903, 11.8912, 1.62 ) }
    dend_27 { pt3dadd( -53.4366, 108.589, 11.8272, 1.62 ) }
    dend_27 { pt3dadd( -54.0721, 109.456, 11.7027, 1.77 ) }
    dend_27 { pt3dadd( -54.4937, 110.226, 11.5495, 1.47 ) }
    dend_27 { pt3dadd( -54.842, 111.039, 11.3652, 1.69 ) }
    dend_27 { pt3dadd( -54.9202, 111.256, 11.3117, 1.69 ) }
    dend_27 { pt3dadd( -55.1748, 112.093, 11.0833, 1.69 ) }
    dend_27 { pt3dadd( -55.513, 113.315, 10.7139, 1.69 ) }
    dend_27 { pt3dadd( -55.8037, 114.533, 10.2693, 0.81 ) }
    dend_27 { pt3dadd( -56.0289, 115.387, 9.91493, 0.81 ) }
    dend_27 { pt3dadd( -56.3069, 116.33, 9.50575, 1.55 ) }
    dend_27 { pt3dadd( -56.6809, 117.56, 8.99115, 1.77 ) }
    dend_27 { pt3dadd( -56.6992, 117.622, 8.96755, 1.77 ) }
    dend_27 { pt3dadd( -57.0726, 118.926, 8.54561, 1.62 ) }
    dend_27 { pt3dadd( -57.4738, 120.632, 8.08953, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_27 { pt3dadd( -57.6319, 121.595, 7.83217, 0.74 ) }
    dend_27 { pt3dadd( -57.7305, 122.419, 7.62941, 0.74 ) }
    dend_27 { pt3dadd( -57.8273, 123.389, 7.41206, 0.88 ) }
    dend_27 { pt3dadd( -57.8448, 123.563, 7.37647, 0.88 ) }
    dend_27 { pt3dadd( -57.9439, 124.553, 7.1954, 1.11 ) }
    dend_27 { pt3dadd( -58.0372, 125.743, 6.90261, 1.11 ) }
    dend_27 { pt3dadd( -58.1763, 126.684, 6.53076, 0.52 ) }
    dend_27 { pt3dadd( -58.376, 127.386, 6.12711, 0.52 ) }
    dend_27 { pt3dadd( -58.6946, 128.157, 5.58286, 1.33 ) }
    dend_27 { pt3dadd( -58.961, 128.673, 5.18076, 1.92 ) }
    dend_27 { pt3dadd( -59.3205, 129.239, 4.6726, 2.21 ) }
    dend_27 { pt3dadd( -59.9267, 130.098, 3.85876, 1.92 ) }
    dend_27 { pt3dadd( -60.5976, 131.034, 2.95031, 0.66 ) }
    dend_27 { pt3dadd( -60.8672, 131.402, 2.59444, 0.88 ) }
    dend_27 { pt3dadd( -61.1359, 131.753, 2.28923, 1.11 ) }
    dend_27 { pt3dadd( -61.9244, 132.788, 1.5927, 0.59 ) }
    dend_27 { pt3dadd( -62.2453, 133.215, 1.39776, 0.44 ) }
    dend_27 { pt3dadd( -62.8128, 134.019, 1.18283, 0.44 ) }
    dend_27 { pt3dadd( -62.851, 134.074, 1.17381, 0.44 ) }
    dend_27 { pt3dadd( -63.6213, 135.185, 0.919627, 0.29 ) }
    dend_27 { pt3dadd( -64.0944, 135.912, 0.722026, 0.88 ) }
    dend_27 { pt3dadd( -64.3886, 136.437, 0.548879, 1.55 ) }
    dend_27 { pt3dadd( -64.544, 136.805, 0.391935, 1.92 ) }
    dend_27 { pt3dadd( -64.6569, 137.156, 0.222578, 2.21 ) }
    dend_27 { pt3dadd( -65.2118, 139.062, -0.785168, 0.52 ) }
    dend_27 { pt3dadd( -65.4101, 139.768, -1.21566, 1.18 ) }
    dend_27 { pt3dadd( -65.7184, 140.831, -1.9123, 1.18 ) }
    dend_27 { pt3dadd( -66.0593, 141.957, -2.73944, 0.52 ) }
    dend_27 { pt3dadd( -66.2394, 142.466, -3.14037, 0.37 ) }
    dend_27 { pt3dadd( -66.4779, 143.005, -3.60353, 0.37 ) }
    dend_27 { pt3dadd( -66.8408, 143.604, -4.13933, 0.37 ) }
    dend_27 { pt3dadd( -66.9047, 143.688, -4.22307, 0.37 ) }
    dend_27 { pt3dadd( -67.6202, 144.489, -5.06282, 0.74 ) }
    dend_27 { pt3dadd( -68.0694, 145.012, -5.54368, 0.74 ) }
    dend_27 { pt3dadd( -68.5942, 145.668, -6.05239, 1.11 ) }
    dend_27 { pt3dadd( -68.9701, 146.178, -6.39165, 1.77 ) }
    dend_27 { pt3dadd( -69.5292, 146.943, -6.82765, 1.99 ) }
    dend_27 { pt3dadd( -69.8217, 147.332, -7.02291, 2.43 ) }
    dend_27 { pt3dadd( -71.1324, 149.125, -7.73435, 0.29 ) }
    dend_27 { pt3dadd( -71.8034, 150.102, -8.0638, 0.29 ) }
    dend_27 { pt3dadd( -71.8464, 150.167, -8.08249, 0.29 ) }
    dend_27 { pt3dadd( -72.3926, 150.952, -8.2669, 0.29 ) }
    dend_27 { pt3dadd( -72.4476, 151.025, -8.27939, 0.29 ) }
    dend_27 { pt3dadd( -73.1049, 151.796, -8.38774, 0.29 ) }
    dend_27 { pt3dadd( -73.7888, 152.535, -8.47451, 0.29 ) }
    dend_27 { pt3dadd( -74.6283, 153.404, -8.60108, 1.33 ) }
    dend_27 { pt3dadd( -75.4544, 154.21, -8.72071, 1.77 ) }
    dend_27 { pt3dadd( -75.8798, 154.585, -8.78314, 1.77 ) }
    dend_27 { pt3dadd( -76.7269, 155.231, -8.92471, 1.47 ) }
    dend_27 { pt3dadd( -77.548, 155.776, -9.08208, 0.74 ) }
    dend_27 { pt3dadd( -78.2931, 156.248, -9.20179, 0.29 ) }
    dend_27 { pt3dadd( -79.0175, 156.734, -9.27655, 0.96 ) }
    dend_27 { pt3dadd( -79.6687, 157.209, -9.33169, 1.25 ) }
    dend_27 { pt3dadd( -80.8083, 158.048, -9.37369, 0.29 ) }
    dend_27 { pt3dadd( -81.2468, 158.379, -9.3701, 0.29 ) }
    dend_27 { pt3dadd( -82.2092, 159.053, -9.30327, 0.29 ) }
    dend_27 { pt3dadd( -83.2735, 159.729, -9.2244, 0.29 ) }
    dend_27 { pt3dadd( -84.2431, 160.303, -9.15378, 1.4 ) }
    dend_27 { pt3dadd( -84.8113, 160.639, -9.10488, 1.99 ) }
    dend_27 { pt3dadd( -85.4126, 160.996, -9.04711, 2.14 ) }
    dend_27 { pt3dadd( -87.0103, 161.977, -8.93699, 0.22 ) }
    dend_27 { pt3dadd( -88.1941, 162.702, -8.93635, 0.22 ) }
    dend_27 { pt3dadd( -88.2631, 162.745, -8.93877, 0.22 ) }
    dend_27 { pt3dadd( -88.8412, 163.13, -8.93985, 0.59 ) }
    dend_27 { pt3dadd( -89.1093, 163.326, -8.93541, 0.59 ) }
    dend_27 { pt3dadd( -90.1047, 164.141, -8.91722, 0.29 ) }
    dend_27 { pt3dadd( -90.7706, 164.781, -8.91283, 0.81 ) }
    dend_27 { pt3dadd( -91.2974, 165.308, -8.90816, 0.81 ) }
    dend_27 { pt3dadd( -92.5301, 166.514, -8.92291, 1.33 ) }
    dend_27 { pt3dadd( -93.0879, 167.03, -8.94344, 1.69 ) }
    dend_27 { pt3dadd( -93.7896, 167.665, -8.98128, 1.47 ) }
    dend_27 { pt3dadd( -94.5066, 168.319, -9.03112, 0.66 ) }
    dend_27 { pt3dadd( -95.6036, 169.325, -9.0253, 0.22 ) }
    dend_27 { pt3dadd( -96.5515, 170.177, -8.97775, 0.22 ) }
    dend_27 { pt3dadd( -97.3847, 170.885, -8.91623, 1.4 ) }
    dend_27 { pt3dadd( -97.5686, 171.024, -8.89604, 1.99 ) }
    dend_27 { pt3dadd( -98.1849, 171.452, -8.80708, 1.99 ) }
    dend_27 { pt3dadd( -100.478, 172.964, -8.40632, 0.22 ) }
    dend_27 { pt3dadd( -100.534, 173.0, -8.39559, 0.22 ) }
    dend_27 { pt3dadd( -101.563, 173.649, -8.19938, 0.22 ) }
    dend_27 { pt3dadd( -102.228, 174.075, -8.09684, 1.03 ) }
    dend_27 { pt3dadd( -102.757, 174.414, -8.04508, 1.47 ) }
    dend_27 { pt3dadd( -103.313, 174.759, -7.99239, 1.77 ) }
    dend_27 { pt3dadd( -104.234, 175.306, -7.90661, 0.44 ) }
    dend_27 { pt3dadd( -105.56, 176.081, -7.70435, 0.29 ) }
    dend_27 { pt3dadd( -106.611, 176.685, -7.49778, 0.37 ) }
    dend_27 { pt3dadd( -107.113, 176.921, -7.39416, 0.96 ) }
    dend_27 { pt3dadd( -108.467, 177.451, -7.12398, 1.18 ) }
    dend_27 { pt3dadd( -109.798, 177.905, -6.87605, 0.37 ) }
    dend_27 { pt3dadd( -111.101, 178.31, -6.61356, 2.21 ) }
    dend_27 { pt3dadd( -111.951, 178.578, -6.44496, 2.87 ) }
    dend_27 { pt3dadd( -114.183, 179.318, -6.01186, 0.37 ) }
    dend_27 { pt3dadd( -114.736, 179.529, -5.9021, 0.66 ) }
    dend_27 { pt3dadd( -115.478, 179.869, -5.76878, 0.81 ) }
    dend_27 { pt3dadd( -116.455, 180.455, -5.50584, 0.37 ) }
    dend_27 { pt3dadd( -117.102, 180.983, -5.21863, 0.74 ) }
    dend_27 { pt3dadd( -117.367, 181.328, -5.02013, 0.96 ) }
    dend_27 { pt3dadd( -117.87, 182.37, -4.42017, 0.29 ) }
    dend_27 { pt3dadd( -118.038, 182.797, -4.15681, 0.29 ) }
    dend_27 { pt3dadd( -118.344, 183.877, -3.45986, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_27 { pt3dadd( -118.429, 184.372, -3.15071, 1.33 ) }
    dend_27 { pt3dadd( -118.45, 184.704, -2.91405, 1.33 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 2/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -34.7859, 68.5925, 11.7657, 0.52 ) }
    dend_26 { pt3dadd( -35.4097, 68.1766, 12.8905, 0.52 ) }
    dend_26 { pt3dadd( -35.9198, 67.8734, 13.8232, 0.88 ) }
    dend_26 { pt3dadd( -37.082, 67.2804, 16.0572, 0.88 ) }
    dend_26 { pt3dadd( -37.11, 67.2666, 16.1087, 0.88 ) }
    dend_26 { pt3dadd( -37.6895, 66.9358, 17.1444, 1.33 ) }
    dend_26 { pt3dadd( -38.2108, 66.5609, 18.1438, 0.96 ) }
    dend_26 { pt3dadd( -38.9195, 65.9887, 19.6462, 1.18 ) }
    dend_26 { pt3dadd( -39.5025, 65.4839, 20.9042, 0.74 ) }
    dend_26 { pt3dadd( -39.9226, 65.1327, 21.7289, 0.52 ) }
    dend_26 { pt3dadd( -40.4277, 64.7212, 22.7198, 0.74 ) }
    dend_26 { pt3dadd( -41.3973, 63.8826, 24.7009, 0.88 ) }
    dend_26 { pt3dadd( -41.424, 63.8629, 24.7514, 0.88 ) }
    dend_26 { pt3dadd( -42.1538, 63.4703, 25.9308, 0.22 ) }
    dend_26 { pt3dadd( -42.6963, 63.3267, 26.6871, 0.22 ) }
    dend_26 { pt3dadd( -43.1129, 63.4582, 27.1369, 0.22 ) }
    dend_26 { pt3dadd( -43.163, 63.497, 27.1686, 0.22 ) }
    dend_26 { pt3dadd( -43.6912, 64.0245, 27.3449, 0.81 ) }
    dend_26 { pt3dadd( -44.0602, 64.4242, 27.45, 1.4 ) }
    dend_26 { pt3dadd( -44.2345, 64.6169, 27.4913, 1.69 ) }
    dend_26 { pt3dadd( -44.7141, 65.0262, 27.6531, 1.92 ) }
    dend_26 { pt3dadd( -44.9645, 65.1541, 27.7596, 1.62 ) }
    dend_26 { pt3dadd( -45.7347, 65.3563, 28.1301, 0.88 ) }
    dend_26 { pt3dadd( -45.7965, 65.3515, 28.1625, 0.88 ) }
    dend_26 { pt3dadd( -46.84, 64.7932, 28.6937, 0.52 ) }
    dend_26 { pt3dadd( -47.5352, 64.1186, 29.0252, 0.44 ) }
    dend_26 { pt3dadd( -48.2129, 63.1308, 29.2683, 0.37 ) }
    dend_26 { pt3dadd( -48.4667, 62.6476, 29.3244, 0.81 ) }
    dend_26 { pt3dadd( -48.9523, 61.5244, 29.5743, 0.37 ) }
    dend_26 { pt3dadd( -49.4037, 60.2964, 29.945, 1.03 ) }
    dend_26 { pt3dadd( -49.4207, 60.2409, 29.968, 1.03 ) }
    dend_26 { pt3dadd( -49.6734, 59.4766, 30.4072, 0.96 ) }
    dend_26 { pt3dadd( -50.1238, 58.4925, 31.2362, 0.44 ) }
    dend_26 { pt3dadd( -51.3318, 56.7771, 33.3631, 0.74 ) }
    dend_26 { pt3dadd( -51.3869, 56.7294, 33.4598, 0.74 ) }
    dend_26 { pt3dadd( -51.9132, 56.4296, 34.36, 0.74 ) }
    dend_26 { pt3dadd( -52.2436, 56.2931, 34.8936, 1.18 ) }
    dend_26 { pt3dadd( -52.6157, 56.211, 35.3993, 1.55 ) }
    dend_26 { pt3dadd( -52.9554, 56.1881, 35.7397, 1.55 ) }
    dend_26 { pt3dadd( -54.4794, 56.1249, 36.7868, 0.29 ) }
    dend_26 { pt3dadd( -54.8586, 56.0919, 37.0396, 0.81 ) }
    dend_26 { pt3dadd( -55.1665, 56.0457, 37.2406, 1.03 ) }
    dend_26 { pt3dadd( -56.2067, 55.7831, 37.9559, 0.29 ) }
    dend_26 { pt3dadd( -57.1297, 55.4109, 38.6048, 0.29 ) }
    dend_26 { pt3dadd( -57.211, 55.3579, 38.6772, 0.29 ) }
    dend_26 { pt3dadd( -57.6466, 54.8575, 39.2131, 0.29 ) }
    dend_26 { pt3dadd( -57.8534, 54.4751, 39.5743, 0.66 ) }
    dend_26 { pt3dadd( -57.94, 54.2371, 39.7815, 0.88 ) }
    dend_26 { pt3dadd( -58.1112, 53.478, 40.3991, 0.37 ) }
    dend_26 { pt3dadd( -58.4012, 51.8972, 41.5299, 0.22 ) }
    dend_26 { pt3dadd( -58.5314, 51.2857, 41.9851, 0.22 ) }
    dend_26 { pt3dadd( -58.6418, 50.8485, 42.3152, 0.81 ) }
    dend_26 { pt3dadd( -58.7526, 50.4716, 42.5905, 0.81 ) }
    dend_26 { pt3dadd( -58.7972, 50.3402, 42.6878, 0.81 ) }
    dend_26 { pt3dadd( -59.0437, 49.7336, 43.1311, 0.81 ) }
    dend_26 { pt3dadd( -59.7891, 48.1779, 44.1168, 0.29 ) }
    dend_26 { pt3dadd( -60.0944, 47.5272, 44.5536, 0.52 ) }
    dend_26 { pt3dadd( -60.3694, 46.9056, 45.0123, 0.44 ) }
    // Section: dend_14, id: dend_14, parent: dend_2 (entry count 60/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.07823, 130.364, -11.0913, 0.29 ) }
    dend_14 { pt3dadd( 4.58335, 130.936, -11.0331, 0.29 ) }
    dend_14 { pt3dadd( 4.69791, 131.071, -11.0709, 0.29 ) }
    dend_14 { pt3dadd( 4.76983, 131.162, -11.1027, 0.29 ) }
    dend_14 { pt3dadd( 5.47118, 132.063, -11.4403, 0.22 ) }
    dend_14 { pt3dadd( 5.54153, 132.154, -11.476, 0.22 ) }
    dend_14 { pt3dadd( 6.40124, 133.304, -11.9171, 0.37 ) }
    dend_14 { pt3dadd( 7.58589, 134.971, -12.6004, 1.03 ) }
    dend_14 { pt3dadd( 7.90672, 135.425, -12.7982, 1.03 ) }
    dend_14 { pt3dadd( 7.9578, 135.499, -12.833, 1.03 ) }
    dend_14 { pt3dadd( 8.51802, 136.343, -13.2922, 0.22 ) }
    dend_14 { pt3dadd( 8.86171, 136.861, -13.5895, 0.44 ) }
    dend_14 { pt3dadd( 17.6009, 144.417, -14.7228, 0.44 ) }
    dend_14 { pt3dadd( 27.523, 149.327, -17.7385, 0.44 ) }
    dend_14 { pt3dadd( 37.6041, 152.529, -22.0349, 0.44 ) }
    dend_14 { pt3dadd( 47.3685, 157.808, -25.0011, 0.44 ) }
    dend_14 { pt3dadd( 57.023, 163.26, -28.0426, 0.44 ) }
    dend_14 { pt3dadd( 66.1405, 169.855, -30.6584, 0.44 ) }
    dend_14 { pt3dadd( 75.8965, 175.992, -30.9734, 0.44 ) }
    dend_14 { pt3dadd( 85.5479, 181.884, -33.1604, 0.44 ) }
    dend_14 { pt3dadd( 94.836, 188.784, -33.1353, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.07823, 130.364, -11.0913, 1.33 ) }
    dend_3 { pt3dadd( 3.93961, 131.389, -10.6995, 1.33 ) }
    dend_3 { pt3dadd( 3.88833, 131.846, -10.5796, 1.77 ) }
    dend_3 { pt3dadd( 3.8161, 132.559, -10.4323, 1.77 ) }
    dend_3 { pt3dadd( 3.80647, 132.691, -10.4099, 1.77 ) }
    dend_3 { pt3dadd( 3.79168, 133.208, -10.3443, 1.62 ) }
    dend_3 { pt3dadd( 3.79674, 134.281, -10.2581, 0.88 ) }
    dend_3 { pt3dadd( 3.84439, 135.348, -10.267, 0.74 ) }
    dend_3 { pt3dadd( 3.88393, 135.918, -10.3068, 0.81 ) }
    dend_3 { pt3dadd( 3.95269, 136.642, -10.3933, 0.81 ) }
    dend_3 { pt3dadd( 4.04656, 137.459, -10.5133, 0.37 ) }
    dend_3 { pt3dadd( 4.1479, 138.221, -10.6595, 0.37 ) }
    dend_3 { pt3dadd( 4.2594, 139.02, -10.8653, 1.33 ) }
    dend_3 { pt3dadd( 4.34603, 139.821, -11.1103, 1.92 ) }
    dend_3 { pt3dadd( 4.34769, 139.875, -11.1301, 1.92 ) }
    dend_3 { pt3dadd( 4.28607, 140.53, -11.3998, 2.28 ) }
    dend_3 { pt3dadd( 4.21173, 140.875, -11.5409, 2.58 ) }
    dend_3 { pt3dadd( 4.10169, 141.232, -11.692, 2.5 ) }
    dend_3 { pt3dadd( 3.86826, 141.863, -11.9662, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( 3.51547, 142.712, -12.3307, 1.33 ) }
    dend_3 { pt3dadd( 3.15792, 143.511, -12.657, 0.81 ) }
    dend_3 { pt3dadd( 2.85598, 144.133, -12.8843, 0.81 ) }
    dend_3 { pt3dadd( 2.59614, 144.737, -13.0767, 0.88 ) }
    dend_3 { pt3dadd( 2.57061, 144.808, -13.0968, 0.88 ) }
    dend_3 { pt3dadd( 2.47809, 145.127, -13.1815, 0.88 ) }
    dend_3 { pt3dadd( 2.37043, 145.932, -13.3552, 0.74 ) }
    dend_3 { pt3dadd( 2.38207, 146.734, -13.5114, 0.44 ) }
    dend_3 { pt3dadd( 2.57827, 148.102, -13.7779, 0.81 ) }
    dend_3 { pt3dadd( 2.68821, 148.633, -13.8731, 1.18 ) }
    dend_3 { pt3dadd( 2.72039, 148.761, -13.8959, 1.18 ) }
    dend_3 { pt3dadd( 3.14426, 150.207, -14.1436, 0.44 ) }
    dend_3 { pt3dadd( 3.31136, 150.712, -14.2361, 0.44 ) }
    dend_3 { pt3dadd( 3.6336, 151.715, -14.4189, 1.33 ) }
    dend_3 { pt3dadd( 3.77221, 152.243, -14.5044, 1.47 ) }
    dend_3 { pt3dadd( 3.85768, 152.647, -14.5675, 1.47 ) }
    dend_3 { pt3dadd( 3.94991, 153.176, -14.6437, 1.03 ) }
    dend_3 { pt3dadd( 4.02221, 153.712, -14.6963, 0.96 ) }
    dend_3 { pt3dadd( 4.16471, 154.674, -14.712, 0.37 ) }
    dend_3 { pt3dadd( 4.3648, 155.867, -14.6528, 1.25 ) }
    dend_3 { pt3dadd( 4.43388, 156.226, -14.6232, 1.99 ) }
    dend_3 { pt3dadd( 4.57945, 156.937, -14.5401, 2.21 ) }
    dend_3 { pt3dadd( 4.98991, 158.694, -14.2203, 0.29 ) }
    dend_3 { pt3dadd( 5.2164, 159.621, -13.9984, 1.18 ) }
    dend_3 { pt3dadd( 5.33124, 160.084, -13.8679, 1.69 ) }
    dend_3 { pt3dadd( 5.40291, 160.423, -13.7613, 1.69 ) }
    dend_3 { pt3dadd( 5.41631, 160.516, -13.7314, 1.69 ) }
    dend_3 { pt3dadd( 5.49139, 161.912, -13.2929, 0.44 ) }
    dend_3 { pt3dadd( 5.47062, 162.668, -13.0383, 0.37 ) }
    dend_3 { pt3dadd( 5.46581, 162.728, -13.0195, 0.37 ) }
    dend_3 { pt3dadd( 5.38337, 163.43, -12.7893, 0.37 ) }
    dend_3 { pt3dadd( 5.29403, 164.075, -12.5792, 0.37 ) }
    dend_3 { pt3dadd( 5.2119, 164.647, -12.4108, 0.29 ) }
    dend_3 { pt3dadd( 5.03559, 165.662, -12.1351, 0.52 ) }
    dend_3 { pt3dadd( 4.99528, 166.026, -12.0323, 0.81 ) }
    dend_3 { pt3dadd( 4.976, 166.434, -11.9247, 0.96 ) }
    dend_3 { pt3dadd( 4.98123, 166.608, -11.882, 0.96 ) }
    dend_3 { pt3dadd( 5.02355, 167.319, -11.7296, 0.44 ) }
    dend_3 { pt3dadd( 5.02548, 167.368, -11.7209, 0.44 ) }
    dend_3 { pt3dadd( 5.01955, 168.342, -11.5853, 0.81 ) }
    dend_3 { pt3dadd( 5.00849, 168.795, -11.5071, 1.18 ) }
    dend_3 { pt3dadd( 4.98363, 169.227, -11.4202, 1.4 ) }
    dend_3 { pt3dadd( 4.9526, 169.594, -11.341, 1.4 ) }
    dend_3 { pt3dadd( 4.947, 169.642, -11.3304, 1.4 ) }
    dend_3 { pt3dadd( 4.87485, 170.2, -11.2065, 1.4 ) }
    dend_3 { pt3dadd( 4.86799, 170.248, -11.1961, 1.4 ) }
    dend_3 { pt3dadd( 4.78758, 170.783, -11.0808, 1.11 ) }
    dend_3 { pt3dadd( 4.71717, 171.228, -10.9945, 0.66 ) }
    dend_3 { pt3dadd( 4.63383, 171.755, -10.9029, 0.37 ) }
    dend_3 { pt3dadd( 4.51073, 172.634, -10.7749, 0.88 ) }
    dend_3 { pt3dadd( 4.44867, 173.089, -10.7371, 1.18 ) }
    dend_3 { pt3dadd( 4.43739, 173.166, -10.7338, 1.18 ) }
    dend_3 { pt3dadd( 4.35549, 173.71, -10.7293, 1.03 ) }
    dend_3 { pt3dadd( 4.34736, 173.773, -10.7322, 1.03 ) }
    dend_3 { pt3dadd( 4.29503, 174.243, -10.7841, 1.03 ) }
    dend_3 { pt3dadd( 4.24686, 175.029, -10.9469, 0.22 ) }
    dend_3 { pt3dadd( 4.24149, 175.494, -11.0551, 0.22 ) }
    dend_3 { pt3dadd( 4.24372, 175.563, -11.0714, 0.22 ) }
    dend_3 { pt3dadd( 4.28896, 176.125, -11.207, 0.22 ) }
    dend_3 { pt3dadd( 4.29399, 176.172, -11.2199, 0.22 ) }
    dend_3 { pt3dadd( 4.41694, 177.089, -11.4915, 1.18 ) }
    dend_3 { pt3dadd( 4.5033, 177.55, -11.6271, 1.4 ) }
    dend_3 { pt3dadd( 4.5713, 177.878, -11.7264, 1.62 ) }
    dend_3 { pt3dadd( 4.61814, 178.12, -11.7997, 1.62 ) }
    dend_3 { pt3dadd( 4.71215, 178.688, -11.9677, 1.62 ) }
    dend_3 { pt3dadd( 4.79839, 179.227, -12.1294, 1.77 ) }
    // Section: dend_64, id: dend_64, parent: dend_60 (entry count 66/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 33.8886, 55.3223, 19.5557, 0.52 ) }
    dend_64 { pt3dadd( 35.2854, 57.14, 20.5573, 0.52 ) }
    dend_64 { pt3dadd( 35.9253, 57.9951, 20.9763, 0.74 ) }
    dend_64 { pt3dadd( 36.433, 58.6905, 21.2651, 1.77 ) }
    dend_64 { pt3dadd( 37.1947, 59.8812, 21.7658, 0.81 ) }
    dend_64 { pt3dadd( 37.6009, 60.6621, 22.1213, 0.81 ) }
    dend_64 { pt3dadd( 37.9493, 61.405, 22.4668, 0.74 ) }
    dend_64 { pt3dadd( 37.9708, 61.4665, 22.494, 0.74 ) }
    dend_64 { pt3dadd( 38.2833, 62.6184, 23.046, 1.03 ) }
    dend_64 { pt3dadd( 38.6117, 64.0019, 23.7442, 1.03 ) }
    dend_64 { pt3dadd( 38.9869, 65.6752, 24.6018, 1.84 ) }
    dend_64 { pt3dadd( 39.1379, 66.3832, 24.9845, 1.55 ) }
    dend_64 { pt3dadd( 39.515, 68.1275, 25.9742, 0.59 ) }
    dend_64 { pt3dadd( 39.7667, 69.268, 26.6252, 0.81 ) }
    dend_64 { pt3dadd( 40.0576, 70.528, 27.3475, 1.4 ) }
    dend_64 { pt3dadd( 40.3033, 71.2916, 27.7379, 1.62 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 82/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 33.8886, 55.3223, 19.5557, 0.59 ) }
    dend_61 { pt3dadd( 33.4976, 54.4912, 21.4472, 0.59 ) }
    dend_61 { pt3dadd( 32.93, 53.5057, 23.591, 1.11 ) }
    dend_61 { pt3dadd( 31.7472, 51.521, 27.3792, 0.74 ) }
    dend_61 { pt3dadd( 31.3461, 50.8518, 28.5797, 0.74 ) }
    dend_61 { pt3dadd( 30.863, 49.9695, 30.1304, 0.74 ) }
    dend_61 { pt3dadd( 30.8479, 49.9383, 30.1853, 0.74 ) }
    dend_61 { pt3dadd( 30.6398, 49.6023, 30.8013, 0.59 ) }
    dend_61 { pt3dadd( 29.5639, 48.1269, 33.2167, 1.03 ) }
    dend_61 { pt3dadd( 29.5158, 48.0283, 33.336, 1.4 ) }
    dend_61 { pt3dadd( 29.3991, 47.2521, 34.2509, 0.96 ) }
    dend_61 { pt3dadd( 29.5026, 46.623, 34.9742, 1.18 ) }
    dend_61 { pt3dadd( 29.7161, 45.8973, 35.8502, 1.03 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 95/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 46.5946, 47.2518, -7.12292, 0.74 ) }
    dend_55 { pt3dadd( 48.0341, 47.8082, -8.28949, 0.74 ) }
    dend_55 { pt3dadd( 49.2909, 48.2196, -8.98475, 0.52 ) }
    dend_55 { pt3dadd( 50.1458, 48.4533, -9.28157, 0.96 ) }
    dend_55 { pt3dadd( 53.8741, 49.3077, -10.1044, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 55.4255, 49.6389, -10.3353, 0.59 ) }
    dend_55 { pt3dadd( 55.636, 49.6838, -10.3579, 0.59 ) }
    dend_55 { pt3dadd( 58.5107, 50.2123, -10.406, 1.11 ) }
    dend_55 { pt3dadd( 59.8248, 50.5059, -10.3363, 1.69 ) }
    dend_55 { pt3dadd( 61.1851, 50.8461, -10.2361, 1.47 ) }
    dend_55 { pt3dadd( 62.4702, 51.1563, -10.1025, 0.66 ) }
    dend_55 { pt3dadd( 63.6738, 51.4882, -10.0884, 1.25 ) }
    dend_55 { pt3dadd( 64.6178, 51.7641, -10.1619, 1.18 ) }
    dend_55 { pt3dadd( 65.9799, 52.2139, -10.4628, 1.03 ) }
    dend_55 { pt3dadd( 67.6344, 52.7578, -10.9023, 0.44 ) }
    dend_55 { pt3dadd( 68.5673, 53.0675, -11.1888, 0.37 ) }
    dend_55 { pt3dadd( 68.7275, 53.1182, -11.2446, 0.37 ) }
    dend_55 { pt3dadd( 69.6483, 53.4227, -11.7745, 0.37 ) }
    dend_55 { pt3dadd( 70.8457, 53.7448, -12.4556, 1.4 ) }
    dend_55 { pt3dadd( 71.6603, 53.9141, -12.8525, 1.69 ) }
    dend_55 { pt3dadd( 72.88, 54.1529, -13.3357, 1.69 ) }
    dend_55 { pt3dadd( 73.0157, 54.1821, -13.3871, 1.69 ) }
    dend_55 { pt3dadd( 76.645, 54.9396, -14.6473, 1.4 ) }
    dend_55 { pt3dadd( 79.9077, 55.6701, -15.6686, 0.52 ) }
    dend_55 { pt3dadd( 82.0587, 56.203, -16.2484, 2.14 ) }
    dend_55 { pt3dadd( 82.8124, 56.3943, -16.4349, 2.87 ) }
    dend_55 { pt3dadd( 85.22, 56.9804, -16.935, 0.74 ) }
    dend_55 { pt3dadd( 86.5948, 57.324, -17.1453, 0.66 ) }
    dend_55 { pt3dadd( 87.4585, 57.5527, -17.1844, 0.37 ) }
    dend_55 { pt3dadd( 88.3169, 57.8943, -17.4118, 0.37 ) }
    dend_55 { pt3dadd( 98.9285, 59.4105, -21.2131, 0.37 ) }
    dend_55 { pt3dadd( 108.855, 59.3771, -26.7557, 0.37 ) }
    dend_55 { pt3dadd( 119.167, 60.5424, -31.4018, 0.37 ) }
    dend_55 { pt3dadd( 129.322, 62.3065, -36.2093, 0.37 ) }
    dend_55 { pt3dadd( 139.183, 63.4829, -41.744, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 30/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 46.5946, 47.2518, -7.12292, 0.74 ) }
    dend_52 { pt3dadd( 49.6497, 45.8855, -8.87103, 0.74 ) }
    dend_52 { pt3dadd( 49.7071, 45.8573, -8.91808, 0.74 ) }
    dend_52 { pt3dadd( 50.8275, 45.2478, -9.91006, 0.66 ) }
    dend_52 { pt3dadd( 52.8389, 44.138, -11.6904, 0.66 ) }
    dend_52 { pt3dadd( 54.1747, 43.3967, -12.8698, 0.66 ) }
    dend_52 { pt3dadd( 55.7578, 42.5434, -14.2054, 0.66 ) }
    dend_52 { pt3dadd( 59.7607, 40.5346, -17.0914, 0.66 ) }
    dend_52 { pt3dadd( 60.8711, 39.9697, -17.9175, 2.36 ) }
    dend_52 { pt3dadd( 61.5519, 39.6131, -18.4646, 2.65 ) }
    dend_52 { pt3dadd( 61.6169, 39.5773, -18.5218, 2.65 ) }
    dend_52 { pt3dadd( 62.7547, 38.9861, -19.7385, 1.92 ) }
    dend_52 { pt3dadd( 63.5134, 38.6519, -20.6325, 1.03 ) }
    // Section: dend_49, id: dend_49, parent: dend_41 (entry count 43/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 15.0697, 229.674, 6.63696, 0.52 ) }
    dend_49 { pt3dadd( 14.0468, 231.169, 5.09935, 0.52 ) }
    dend_49 { pt3dadd( 13.4645, 232.02, 4.22404, 0.37 ) }
    dend_49 { pt3dadd( 12.2665, 233.77, 2.42315, 0.37 ) }
    dend_49 { pt3dadd( 12.2293, 233.824, 2.36725, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 48/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 15.0697, 229.674, 6.63696, 0.37 ) }
    dend_42 { pt3dadd( 15.4553, 231.455, 6.80255, 0.37 ) }
    dend_42 { pt3dadd( 15.7276, 232.714, 6.91955, 1.69 ) }
    dend_42 { pt3dadd( 15.9369, 233.68, 7.00943, 1.99 ) }
    dend_42 { pt3dadd( 16.2076, 234.931, 7.12568, 1.77 ) }
    dend_42 { pt3dadd( 16.6529, 236.988, 7.31695, 2.58 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 63.2711, 158.317, 23.3852, 0.37 ) }
    dend_36 { pt3dadd( 63.9218, 160.114, 24.1906, 0.37 ) }
    dend_36 { pt3dadd( 64.1324, 160.696, 24.4512, 0.37 ) }
    dend_36 { pt3dadd( 64.355, 161.311, 24.7267, 0.59 ) }
    dend_36 { pt3dadd( 64.5143, 161.752, 24.924, 0.88 ) }
    dend_36 { pt3dadd( 65.3367, 164.024, 25.9418, 1.77 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 60/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 63.2711, 158.317, 23.3852, 0.81 ) }
    dend_35 { pt3dadd( 64.9383, 158.092, 21.6036, 0.81 ) }
    dend_35 { pt3dadd( 65.4618, 158.006, 21.0705, 0.66 ) }
    dend_35 { pt3dadd( 65.5288, 157.993, 21.0087, 0.66 ) }
    dend_35 { pt3dadd( 66.1653, 157.844, 20.4474, 0.96 ) }
    dend_35 { pt3dadd( 66.962, 157.639, 19.7584, 1.55 ) }
    dend_35 { pt3dadd( 69.3499, 156.951, 17.9981, 0.37 ) }
    dend_35 { pt3dadd( 70.2326, 156.644, 17.5129, 0.37 ) }
    dend_35 { pt3dadd( 70.9792, 156.319, 17.1978, 1.03 ) }
    dend_35 { pt3dadd( 71.5035, 156.061, 17.0553, 1.03 ) }
    dend_35 { pt3dadd( 71.5504, 156.034, 17.0515, 1.03 ) }
    dend_35 { pt3dadd( 73.6547, 154.761, 17.3858, 0.37 ) }
    dend_35 { pt3dadd( 74.304, 154.359, 17.6252, 1.25 ) }
    dend_35 { pt3dadd( 74.5811, 154.187, 17.7187, 1.77 ) }
    dend_35 { pt3dadd( 74.9728, 153.958, 17.824, 1.62 ) }
    dend_35 { pt3dadd( 76.1189, 153.343, 18.0299, 0.29 ) }
    dend_35 { pt3dadd( 76.6714, 153.069, 18.0991, 0.66 ) }
    dend_35 { pt3dadd( 77.1591, 152.871, 18.1212, 0.22 ) }
    dend_35 { pt3dadd( 77.9315, 152.628, 18.1958, 1.33 ) }
    dend_35 { pt3dadd( 78.5019, 152.499, 18.274, 1.55 ) }
    dend_35 { pt3dadd( 79.0177, 152.422, 18.3643, 1.55 ) }
    dend_35 { pt3dadd( 80.6979, 152.354, 18.719, 0.44 ) }
    dend_35 { pt3dadd( 81.9021, 152.431, 19.0362, 0.44 ) }
    dend_35 { pt3dadd( 82.5443, 152.526, 19.2245, 0.96 ) }
    dend_35 { pt3dadd( 83.0555, 152.636, 19.376, 0.66 ) }
    dend_35 { pt3dadd( 83.1164, 152.652, 19.3931, 0.66 ) }
    dend_35 { pt3dadd( 83.8185, 152.855, 19.5716, 0.96 ) }
    dend_35 { pt3dadd( 85.4544, 153.356, 19.8926, 0.29 ) }
    dend_35 { pt3dadd( 86.0709, 153.528, 19.9871, 0.44 ) }
    dend_35 { pt3dadd( 87.044, 153.755, 20.0908, 0.22 ) }
    dend_35 { pt3dadd( 87.5011, 153.855, 20.1186, 0.52 ) }
    dend_35 { pt3dadd( 87.5564, 153.866, 20.1191, 0.52 ) }
    dend_35 { pt3dadd( 88.2216, 153.998, 20.0707, 0.52 ) }
    dend_35 { pt3dadd( 88.9683, 154.172, 19.9371, 0.96 ) }
    dend_35 { pt3dadd( 89.2192, 154.267, 19.8675, 1.25 ) }
    dend_35 { pt3dadd( 89.5557, 154.456, 19.7546, 0.96 ) }
    dend_35 { pt3dadd( 89.9085, 154.697, 19.6299, 0.66 ) }
    dend_35 { pt3dadd( 90.6952, 155.247, 19.2779, 0.29 ) }
    dend_35 { pt3dadd( 91.3678, 155.723, 18.9435, 0.37 ) }
    dend_35 { pt3dadd( 92.5354, 156.509, 18.3509, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 93.3515, 157.059, 17.9428, 1.62 ) }
    dend_35 { pt3dadd( 93.677, 157.276, 17.779, 1.77 ) }
    dend_35 { pt3dadd( 95.1878, 158.286, 17.0296, 0.29 ) }
    dend_35 { pt3dadd( 95.5862, 158.542, 16.8366, 0.81 ) }
    dend_35 { pt3dadd( 96.0295, 158.802, 16.6412, 1.03 ) }
    dend_35 { pt3dadd( 96.8436, 159.205, 16.3594, 0.52 ) }
    dend_35 { pt3dadd( 96.9036, 159.232, 16.3399, 0.52 ) }
    dend_35 { pt3dadd( 97.4977, 159.458, 16.1979, 0.52 ) }
    dend_35 { pt3dadd( 97.6129, 159.495, 16.1845, 0.52 ) }
    dend_35 { pt3dadd( 98.5043, 159.687, 16.065, 1.03 ) }
    dend_35 { pt3dadd( 98.5686, 159.697, 16.062, 1.03 ) }
    dend_35 { pt3dadd( 99.0977, 159.734, 16.0674, 1.25 ) }
    dend_35 { pt3dadd( 100.504, 159.819, 16.0547, 0.29 ) }
    dend_35 { pt3dadd( 101.181, 159.876, 16.0443, 0.96 ) }
    dend_35 { pt3dadd( 101.827, 159.962, 16.0356, 1.33 ) }
    dend_35 { pt3dadd( 103.263, 160.208, 16.0337, 0.52 ) }
    dend_35 { pt3dadd( 103.903, 160.354, 16.0619, 0.29 ) }
    dend_35 { pt3dadd( 105.135, 160.71, 16.1672, 0.29 ) }
    dend_35 { pt3dadd( 105.96, 161.005, 16.2807, 0.88 ) }
    dend_35 { pt3dadd( 106.31, 161.139, 16.3467, 1.4 ) }
    dend_35 { pt3dadd( 106.376, 161.165, 16.3623, 1.4 ) }
    dend_35 { pt3dadd( 108.103, 161.809, 16.8309, 0.29 ) }
    dend_35 { pt3dadd( 108.152, 161.826, 16.8479, 0.29 ) }
    dend_35 { pt3dadd( 108.801, 161.997, 17.1067, 0.88 ) }
    dend_35 { pt3dadd( 109.585, 162.111, 17.3581, 1.03 ) }
    dend_35 { pt3dadd( 109.799, 162.125, 17.4215, 1.03 ) }
    dend_35 { pt3dadd( 110.747, 162.139, 17.6793, 1.25 ) }
    dend_35 { pt3dadd( 111.419, 162.117, 17.8367, 1.69 ) }
    dend_35 { pt3dadd( 112.243, 162.068, 18.0253, 1.33 ) }
    dend_35 { pt3dadd( 113.659, 161.966, 18.333, 0.44 ) }
    dend_35 { pt3dadd( 114.876, 161.933, 18.8162, 0.44 ) }
    dend_35 { pt3dadd( 114.931, 161.935, 18.8457, 0.44 ) }
    dend_35 { pt3dadd( 115.538, 161.983, 19.2521, 1.47 ) }
    dend_35 { pt3dadd( 115.792, 162.02, 19.4472, 2.14 ) }
    dend_35 { pt3dadd( 116.169, 162.1, 19.8125, 2.14 ) }
    dend_35 { pt3dadd( 118.479, 162.636, 22.3261, 0.29 ) }
    dend_35 { pt3dadd( 118.964, 162.75, 22.8502, 1.25 ) }
    dend_35 { pt3dadd( 119.315, 162.837, 23.2187, 1.69 ) }
    dend_35 { pt3dadd( 119.63, 162.928, 23.5585, 1.99 ) }
    dend_35 { pt3dadd( 121.928, 163.71, 25.9658, 0.66 ) }
    dend_35 { pt3dadd( 123.062, 164.136, 27.076, 0.66 ) }
    dend_35 { pt3dadd( 123.473, 164.315, 27.4247, 0.96 ) }
    dend_35 { pt3dadd( 124.133, 164.664, 27.9861, 0.96 ) }
    dend_35 { pt3dadd( 125.386, 165.412, 29.0625, 0.29 ) }
    dend_35 { pt3dadd( 126.053, 165.883, 29.5989, 0.29 ) }
    dend_35 { pt3dadd( 126.423, 166.29, 29.7635, 0.59 ) }
    dend_35 { pt3dadd( 126.693, 166.696, 29.8521, 0.81 ) }
    dend_35 { pt3dadd( 126.898, 167.044, 29.9209, 0.81 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 48/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -118.45, 184.704, -2.91405, 0.22 ) }
    dend_31 { pt3dadd( -119.451, 185.217, -2.36084, 0.22 ) }
    dend_31 { pt3dadd( -120.199, 185.58, -2.0125, 0.29 ) }
    dend_31 { pt3dadd( -120.828, 185.861, -1.79489, 0.29 ) }
    dend_31 { pt3dadd( -120.886, 185.884, -1.77972, 0.29 ) }
    dend_31 { pt3dadd( -121.077, 185.954, -1.73897, 0.59 ) }
    dend_31 { pt3dadd( -121.452, 186.091, -1.65905, 0.59 ) }
    dend_31 { pt3dadd( -121.705, 186.16, -1.65601, 0.88 ) }
    dend_31 { pt3dadd( -122.332, 186.306, -1.72408, 0.15 ) }
    dend_31 { pt3dadd( -122.714, 186.389, -1.76591, 0.96 ) }
    dend_31 { pt3dadd( -122.823, 186.413, -1.77855, 1.18 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 59/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -118.45, 184.704, -2.91405, 0.29 ) }
    dend_28 { pt3dadd( -118.41, 186.84, -3.24945, 0.29 ) }
    dend_28 { pt3dadd( -118.409, 188.123, -3.43669, 0.52 ) }
    dend_28 { pt3dadd( -118.408, 189.037, -3.55792, 1.03 ) }
    dend_28 { pt3dadd( -118.397, 189.865, -3.71375, 1.11 ) }
    dend_28 { pt3dadd( -118.37, 191.622, -4.09187, 0.22 ) }
    dend_28 { pt3dadd( -118.366, 192.419, -4.27234, 0.81 ) }
    dend_28 { pt3dadd( -118.391, 193.166, -4.44941, 1.11 ) }
    dend_28 { pt3dadd( -118.438, 193.739, -4.60045, 1.11 ) }
    dend_28 { pt3dadd( -118.871, 196.596, -5.39457, 0.29 ) }
    dend_28 { pt3dadd( -119.126, 197.667, -5.7085, 1.55 ) }
    dend_28 { pt3dadd( -119.343, 198.266, -5.89576, 1.92 ) }
    dend_28 { pt3dadd( -119.689, 198.984, -6.15742, 1.77 ) }
    dend_28 { pt3dadd( -120.336, 200.01, -6.57958, 0.66 ) }
    dend_28 { pt3dadd( -121.091, 200.898, -6.98221, 0.22 ) }
    dend_28 { pt3dadd( -121.454, 201.187, -7.12197, 0.44 ) }
    dend_28 { pt3dadd( -122.012, 201.594, -7.33419, 0.44 ) }
    dend_28 { pt3dadd( -122.788, 202.168, -7.5754, 0.29 ) }
    dend_28 { pt3dadd( -122.851, 202.218, -7.59057, 0.29 ) }
    dend_28 { pt3dadd( -123.058, 202.391, -7.62085, 0.59 ) }
    dend_28 { pt3dadd( -123.564, 202.841, -7.64464, 0.59 ) }
    dend_28 { pt3dadd( -124.679, 203.758, -7.63976, 0.22 ) }
    dend_28 { pt3dadd( -125.716, 204.432, -7.61684, 0.66 ) }
    dend_28 { pt3dadd( -126.102, 204.672, -7.59314, 0.96 ) }
    dend_28 { pt3dadd( -126.688, 205.016, -7.56034, 0.81 ) }
    dend_28 { pt3dadd( -127.288, 205.331, -7.53387, 0.29 ) }
    dend_28 { pt3dadd( -128.603, 205.867, -7.51748, 0.29 ) }
    dend_28 { pt3dadd( -130.008, 206.195, -7.61142, 1.84 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 87/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 94.836, 188.784, -33.1353, 0.29 ) }
    dend_20 { pt3dadd( 101.907, 193.348, -34.3531, 0.29 ) }
    dend_20 { pt3dadd( 109.955, 195.807, -34.0575, 0.29 ) }
    dend_20 { pt3dadd( 117.781, 198.454, -32.4067, 0.29 ) }
    dend_20 { pt3dadd( 125.3, 201.582, -30.1905, 0.29 ) }
    dend_20 { pt3dadd( 132.715, 204.123, -27.1135, 0.29 ) }
    dend_20 { pt3dadd( 140.265, 207.472, -25.3408, 0.29 ) }
    dend_20 { pt3dadd( 148.02, 210.628, -24.2611, 0.29 ) }
    dend_20 { pt3dadd( 155.488, 214.477, -23.2065, 0.29 ) }
    dend_20 { pt3dadd( 162.753, 218.208, -20.9946, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 97/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 94.836, 188.784, -33.1353, 1.33 ) }
    dend_15 { pt3dadd( 101.91, 193.278, -34.7227, 0.29 ) }
    dend_15 { pt3dadd( 109.156, 197.638, -35.7799, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_15 { pt3dadd( 116.048, 202.257, -37.7908, 0.29 ) }
    dend_15 { pt3dadd( 122.298, 207.238, -40.8559, 0.29 ) }
    dend_15 { pt3dadd( 129.009, 211.321, -44.141, 0.29 ) }
    dend_15 { pt3dadd( 134.633, 215.853, -48.6966, 0.29 ) }
    dend_15 { pt3dadd( 139.599, 221.103, -53.3207, 0.29 ) }
    dend_15 { pt3dadd( 145.525, 225.078, -57.9625, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 6/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 4.79839, 179.227, -12.1294, 0.37 ) }
    dend_7 { pt3dadd( 4.06786, 180.686, -12.5693, 0.37 ) }
    dend_7 { pt3dadd( 3.83773, 181.176, -12.6938, 0.52 ) }
    dend_7 { pt3dadd( 3.81359, 181.244, -12.7066, 0.52 ) }
    dend_7 { pt3dadd( 3.68055, 181.709, -12.7722, 0.52 ) }
    dend_7 { pt3dadd( 3.57659, 182.182, -12.8376, 0.52 ) }
    dend_7 { pt3dadd( 3.49227, 182.878, -12.9544, 0.37 ) }
    dend_7 { pt3dadd( 3.49424, 183.037, -12.9751, 0.37 ) }
    dend_7 { pt3dadd( 3.56995, 184.014, -13.1204, 0.37 ) }
    dend_7 { pt3dadd( 3.64255, 184.676, -13.2236, 0.88 ) }
    dend_7 { pt3dadd( 3.7339, 185.358, -13.334, 1.11 ) }
    dend_7 { pt3dadd( 3.97043, 186.979, -13.5982, 0.37 ) }
    dend_7 { pt3dadd( 4.15502, 188.401, -13.8211, 0.37 ) }
    dend_7 { pt3dadd( 4.25418, 189.258, -13.9692, 1.33 ) }
    dend_7 { pt3dadd( 4.29365, 189.709, -14.0513, 1.62 ) }
    dend_7 { pt3dadd( 4.3304, 190.281, -14.1617, 1.92 ) }
    dend_7 { pt3dadd( 4.35362, 190.976, -14.2952, 1.55 ) }
    dend_7 { pt3dadd( 4.37711, 192.174, -14.5545, 0.81 ) }
    dend_7 { pt3dadd( 4.4205, 193.521, -14.8848, 0.22 ) }
    dend_7 { pt3dadd( 4.45498, 194.197, -15.0547, 0.22 ) }
    dend_7 { pt3dadd( 4.55566, 195.276, -15.3657, 0.81 ) }
    dend_7 { pt3dadd( 4.59322, 195.561, -15.4576, 0.81 ) }
    dend_7 { pt3dadd( 4.80182, 196.864, -15.8607, 0.22 ) }
    dend_7 { pt3dadd( 4.95832, 197.663, -16.0825, 0.74 ) }
    dend_7 { pt3dadd( 5.03334, 198.021, -16.1648, 0.74 ) }
    dend_7 { pt3dadd( 5.43361, 199.719, -16.5066, 0.22 ) }
    dend_7 { pt3dadd( 5.46251, 199.839, -16.5249, 0.22 ) }
    dend_7 { pt3dadd( 5.72927, 201.064, -16.6584, 0.88 ) }
    dend_7 { pt3dadd( 5.86234, 201.823, -16.7214, 1.55 ) }
    dend_7 { pt3dadd( 5.8715, 201.886, -16.7272, 1.55 ) }
    dend_7 { pt3dadd( 5.89579, 202.252, -16.7695, 1.55 ) }
    dend_7 { pt3dadd( 5.89048, 202.866, -16.8495, 1.25 ) }
    dend_7 { pt3dadd( 5.86145, 203.63, -17.0128, 0.88 ) }
    dend_7 { pt3dadd( 5.81756, 204.524, -17.2932, 0.22 ) }
    dend_7 { pt3dadd( 5.8163, 204.584, -17.3107, 0.22 ) }
    dend_7 { pt3dadd( 5.81161, 205.688, -17.5919, 0.22 ) }
    dend_7 { pt3dadd( 5.82464, 206.443, -17.7591, 0.22 ) }
    dend_7 { pt3dadd( 5.83364, 206.614, -17.7863, 0.22 ) }
    dend_7 { pt3dadd( 5.91561, 207.447, -17.8661, 0.22 ) }
    dend_7 { pt3dadd( 6.07337, 208.814, -17.8812, 0.96 ) }
    dend_7 { pt3dadd( 6.16046, 209.504, -17.8605, 1.33 ) }
    dend_7 { pt3dadd( 6.23232, 210.023, -17.8249, 0.74 ) }
    dend_7 { pt3dadd( 6.38313, 211.379, -17.7101, 0.22 ) }
    dend_7 { pt3dadd( 6.46049, 212.297, -17.6248, 0.88 ) }
    dend_7 { pt3dadd( 6.52737, 213.655, -17.496, 0.22 ) }
    dend_7 { pt3dadd( 6.52772, 213.717, -17.4902, 0.22 ) }
    dend_7 { pt3dadd( 6.50956, 214.725, -17.4056, 1.11 ) }
    dend_7 { pt3dadd( 6.48051, 215.277, -17.3701, 1.25 ) }
    dend_7 { pt3dadd( 6.43302, 215.956, -17.3412, 1.03 ) }
    dend_7 { pt3dadd( 6.37516, 216.708, -17.3242, 0.66 ) }
    dend_7 { pt3dadd( 6.32592, 217.571, -17.3297, 0.37 ) }
    dend_7 { pt3dadd( 6.30231, 218.198, -17.3683, 0.37 ) }
    dend_7 { pt3dadd( 6.28262, 219.227, -17.484, 0.81 ) }
    dend_7 { pt3dadd( 6.26421, 219.771, -17.5763, 0.81 ) }
    dend_7 { pt3dadd( 6.25899, 219.831, -17.5922, 0.81 ) }
    dend_7 { pt3dadd( 6.17028, 220.396, -17.807, 0.81 ) }
    dend_7 { pt3dadd( 5.92212, 221.51, -18.3679, 0.29 ) }
    dend_7 { pt3dadd( 5.90854, 221.562, -18.3982, 0.29 ) }
    dend_7 { pt3dadd( 5.71875, 222.242, -18.8524, 0.29 ) }
    dend_7 { pt3dadd( 5.52203, 222.964, -19.3422, 0.29 ) }
    dend_7 { pt3dadd( 5.36545, 223.576, -19.7545, 0.66 ) }
    dend_7 { pt3dadd( 5.25672, 224.035, -20.0481, 0.74 ) }
    dend_7 { pt3dadd( 5.11064, 224.863, -20.5246, 0.74 ) }
    dend_7 { pt3dadd( 5.0286, 225.579, -20.9042, 0.96 ) }
    dend_7 { pt3dadd( 5.01249, 225.927, -21.0746, 1.25 ) }
    dend_7 { pt3dadd( 5.01087, 225.985, -21.1, 1.25 ) }
    dend_7 { pt3dadd( 4.98491, 226.441, -21.2757, 1.25 ) }
    dend_7 { pt3dadd( 4.85306, 228.072, -21.8898, 0.22 ) }
    dend_7 { pt3dadd( 4.79567, 228.661, -22.1109, 0.22 ) }
    dend_7 { pt3dadd( 4.71514, 229.396, -22.379, 1.03 ) }
    dend_7 { pt3dadd( 4.65768, 229.862, -22.5518, 1.11 ) }
    dend_7 { pt3dadd( 4.51013, 231.011, -22.9726, 0.22 ) }
    dend_7 { pt3dadd( 4.34496, 232.348, -23.5172, 0.22 ) }
    dend_7 { pt3dadd( 4.33959, 232.415, -23.5448, 0.22 ) }
    dend_7 { pt3dadd( 4.31048, 233.011, -23.8073, 0.22 ) }
    dend_7 { pt3dadd( 4.32854, 234.063, -24.2776, 1.03 ) }
    dend_7 { pt3dadd( 4.35547, 234.409, -24.4379, 1.18 ) }
    dend_7 { pt3dadd( 4.59571, 235.918, -25.1814, 0.15 ) }
    dend_7 { pt3dadd( 4.7818, 236.762, -25.5746, 0.29 ) }
    dend_7 { pt3dadd( 4.79902, 236.829, -25.6051, 0.29 ) }
    dend_7 { pt3dadd( 5.12895, 237.891, -26.092, 0.22 ) }
    dend_7 { pt3dadd( 5.14608, 237.945, -26.1153, 0.22 ) }
    dend_7 { pt3dadd( 5.44721, 239.024, -26.5173, 0.88 ) }
    dend_7 { pt3dadd( 5.54983, 239.442, -26.637, 1.11 ) }
    dend_7 { pt3dadd( 5.6384, 239.886, -26.7582, 0.74 ) }
    dend_7 { pt3dadd( 5.79947, 240.676, -26.944, 0.22 ) }
    dend_7 { pt3dadd( 5.99113, 241.642, -27.1262, 0.22 ) }
    dend_7 { pt3dadd( 6.09395, 242.152, -27.1976, 0.66 ) }
    dend_7 { pt3dadd( 6.19975, 242.694, -27.2544, 0.66 ) }
    dend_7 { pt3dadd( 6.21581, 242.778, -27.2637, 0.66 ) }
    dend_7 { pt3dadd( 6.35903, 243.591, -27.3503, 0.29 ) }
    dend_7 { pt3dadd( 6.37706, 243.729, -27.3648, 0.29 ) }
    dend_7 { pt3dadd( 6.54086, 245.289, -27.5349, 0.22 ) }
    dend_7 { pt3dadd( 6.61382, 246.343, -27.645, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_7 { pt3dadd( 6.63281, 246.892, -27.7074, 1.69 ) }
    dend_7 { pt3dadd( 6.63247, 247.69, -27.8011, 1.84 ) }
    dend_7 { pt3dadd( 6.59484, 249.272, -28.0016, 0.22 ) }
    dend_7 { pt3dadd( 6.5628, 250.183, -28.1211, 0.22 ) }
    dend_7 { pt3dadd( 6.49338, 251.277, -28.2652, 0.22 ) }
    dend_7 { pt3dadd( 6.44018, 251.81, -28.3338, 0.66 ) }
    dend_7 { pt3dadd( 6.39154, 252.26, -28.3952, 1.11 ) }
    dend_7 { pt3dadd( 6.20504, 253.811, -28.6203, 0.22 ) }
    dend_7 { pt3dadd( 6.12034, 254.417, -28.7114, 0.22 ) }
    dend_7 { pt3dadd( 5.96696, 255.305, -28.8564, 1.33 ) }
    dend_7 { pt3dadd( 5.81776, 256.1, -28.9846, 1.92 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 4.79839, 179.227, -12.1294, 0.22 ) }
    dend_4 { pt3dadd( 5.74223, 180.801, -12.7481, 0.22 ) }
    dend_4 { pt3dadd( 6.56659, 182.142, -13.2857, 0.44 ) }
    dend_4 { pt3dadd( 6.60876, 182.211, -13.3163, 0.44 ) }
    dend_4 { pt3dadd( 7.50397, 183.684, -13.991, 0.22 ) }
    dend_4 { pt3dadd( 7.53972, 183.741, -14.0191, 0.22 ) }
    dend_4 { pt3dadd( 8.61159, 185.451, -14.9587, 0.22 ) }
    dend_4 { pt3dadd( 8.64567, 185.507, -14.9923, 0.22 ) }
    dend_4 { pt3dadd( 9.29145, 186.526, -15.6735, 0.22 ) }
    dend_4 { pt3dadd( 9.33205, 186.588, -15.7156, 0.22 ) }
    dend_4 { pt3dadd( 10.3638, 188.031, -16.7477, 0.66 ) }
    dend_4 { pt3dadd( 10.9637, 188.889, -17.3888, 0.81 ) }
    dend_4 { pt3dadd( 16.5438, 199.402, -20.5081, 0.81 ) }
    dend_4 { pt3dadd( 23.9174, 208.856, -22.9055, 0.81 ) }
    dend_4 { pt3dadd( 31.4726, 218.467, -23.4995, 0.81 ) }
    dend_4 { pt3dadd( 37.9369, 228.887, -24.462, 0.81 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 40.3033, 71.2916, 27.7379, 0.52 ) }
    dend_66 { pt3dadd( 36.3745, 72.0776, 27.1946, 0.52 ) }
    dend_66 { pt3dadd( 34.681, 72.3396, 27.0405, 0.52 ) }
    dend_66 { pt3dadd( 33.5635, 72.4208, 26.9666, 0.59 ) }
    dend_66 { pt3dadd( 32.7832, 72.4113, 26.9302, 0.59 ) }
    dend_66 { pt3dadd( 31.6828, 72.2883, 26.9099, 0.44 ) }
    dend_66 { pt3dadd( 31.4646, 72.2417, 26.915, 0.44 ) }
    dend_66 { pt3dadd( 29.6237, 71.1541, 27.0393, 0.44 ) }
    dend_66 { pt3dadd( 28.742, 70.5218, 27.2171, 0.44 ) }
    dend_66 { pt3dadd( 28.0773, 69.9884, 27.4201, 0.74 ) }
    dend_66 { pt3dadd( 27.1996, 69.2044, 27.7616, 0.88 ) }
    dend_66 { pt3dadd( 26.5406, 68.4911, 28.0819, 1.62 ) }
    dend_66 { pt3dadd( 26.1382, 67.9321, 28.2968, 1.84 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 40/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 40.3033, 71.2916, 27.7379, 0.81 ) }
    dend_65 { pt3dadd( 40.8775, 72.1013, 28.2322, 0.81 ) }
    dend_65 { pt3dadd( 41.3341, 73.076, 28.7801, 1.11 ) }
    dend_65 { pt3dadd( 41.5052, 73.7712, 29.1618, 1.33 ) }
    dend_65 { pt3dadd( 41.5716, 74.5166, 29.5301, 1.55 ) }
    dend_65 { pt3dadd( 41.5678, 74.5654, 29.5557, 1.55 ) }
    dend_65 { pt3dadd( 41.2532, 76.5033, 30.6054, 0.96 ) }
    dend_65 { pt3dadd( 40.872, 77.6341, 31.1935, 1.84 ) }
    dend_65 { pt3dadd( 40.3212, 78.73, 31.7631, 0.96 ) }
    dend_65 { pt3dadd( 39.9171, 79.3828, 32.1108, 0.52 ) }
    dend_65 { pt3dadd( 39.0535, 80.5705, 32.7374, 0.52 ) }
    dend_65 { pt3dadd( 39.027, 80.6028, 32.7542, 0.52 ) }
    dend_65 { pt3dadd( 38.6815, 80.9615, 32.9776, 0.74 ) }
    dend_65 { pt3dadd( 38.2165, 81.434, 33.3337, 0.74 ) }
    dend_65 { pt3dadd( 38.1672, 81.493, 33.3798, 0.74 ) }
    dend_65 { pt3dadd( 37.7009, 82.1031, 33.8733, 0.88 ) }
    dend_65 { pt3dadd( 37.083, 82.9907, 34.5732, 0.74 ) }
    dend_65 { pt3dadd( 36.22, 84.3003, 35.6595, 0.44 ) }
    dend_65 { pt3dadd( 35.9231, 84.8469, 36.1805, 0.44 ) }
    dend_65 { pt3dadd( 35.8424, 85.0839, 36.431, 0.29 ) }
    dend_65 { pt3dadd( 35.8372, 85.1421, 36.498, 0.29 ) }
    dend_65 { pt3dadd( 35.9089, 85.3388, 36.7443, 0.29 ) }
    dend_65 { pt3dadd( 35.9405, 85.3783, 36.7929, 0.29 ) }
    dend_65 { pt3dadd( 36.8597, 86.2116, 37.8026, 1.03 ) }
    dend_65 { pt3dadd( 37.3773, 86.6378, 38.378, 0.52 ) }
    dend_65 { pt3dadd( 37.7725, 86.9623, 38.8217, 1.25 ) }
    dend_65 { pt3dadd( 38.2695, 87.3796, 39.3731, 0.44 ) }
    dend_65 { pt3dadd( 38.581, 87.6526, 39.7116, 1.11 ) }
    dend_65 { pt3dadd( 38.8377, 87.8716, 39.9653, 1.11 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 69/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 29.7161, 45.8973, 35.8502, 0.59 ) }
    dend_63 { pt3dadd( 30.0199, 45.0953, 37.3764, 0.59 ) }
    dend_63 { pt3dadd( 30.1024, 44.6673, 38.2893, 0.59 ) }
    dend_63 { pt3dadd( 30.1408, 44.3449, 39.0055, 0.66 ) }
    dend_63 { pt3dadd( 30.1909, 43.5081, 40.9883, 1.84 ) }
    dend_63 { pt3dadd( 30.1938, 43.3888, 41.2806, 2.73 ) }
    dend_63 { pt3dadd( 30.295, 40.6817, 47.5995, 0.96 ) }
    dend_63 { pt3dadd( 30.3004, 40.299, 48.5098, 0.96 ) }
    dend_63 { pt3dadd( 30.3008, 40.2787, 48.559, 0.96 ) }
    dend_63 { pt3dadd( 30.3562, 39.422, 50.518, 1.18 ) }
    dend_63 { pt3dadd( 30.3586, 39.389, 50.5832, 1.18 ) }
    dend_63 { pt3dadd( 30.5297, 38.7078, 51.6825, 0.88 ) }
    dend_63 { pt3dadd( 31.3199, 37.3261, 52.847, 0.81 ) }
    dend_63 { pt3dadd( 31.3538, 37.2738, 52.8847, 0.81 ) }
    dend_63 { pt3dadd( 31.9347, 36.4629, 53.4477, 0.66 ) }
    dend_63 { pt3dadd( 31.9649, 36.4244, 53.4711, 0.66 ) }
    dend_63 { pt3dadd( 32.669, 35.5449, 54.0415, 1.4 ) }
    dend_63 { pt3dadd( 32.9649, 35.1882, 54.3047, 1.62 ) }
    dend_63 { pt3dadd( 33.5246, 34.5242, 54.7863, 1.62 ) }
    dend_63 { pt3dadd( 34.7767, 33.0532, 55.8664, 0.81 ) }
    dend_63 { pt3dadd( 35.1809, 32.5968, 56.2098, 0.81 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 90/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 29.7161, 45.8973, 35.8502, 0.44 ) }
    dend_62 { pt3dadd( 31.2631, 45.743, 36.2751, 0.44 ) }
    dend_62 { pt3dadd( 31.4366, 45.7257, 36.3227, 0.44 ) }
    dend_62 { pt3dadd( 32.2293, 45.6467, 36.5405, 0.44 ) }
    dend_62 { pt3dadd( 32.3255, 45.6371, 36.5669, 0.44 ) }
    dend_62 { pt3dadd( 34.2568, 45.4445, 37.0973, 0.81 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 96/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 139.183, 63.4829, -41.744, 0.29 ) }
    dend_59 { pt3dadd( 146.985, 65.0464, -45.1362, 0.29 ) }
    dend_59 { pt3dadd( 155.213, 65.4478, -47.75, 0.29 ) }
    dend_59 { pt3dadd( 163.161, 67.2788, -50.6458, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 139.183, 63.4829, -41.744, 1.33 ) }
    dend_56 { pt3dadd( 149.229, 64.9104, -44.0123, 0.29 ) }
    dend_56 { pt3dadd( 159.285, 66.8383, -45.8515, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 3/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 63.5134, 38.6519, -20.6325, 0.52 ) }
    dend_54 { pt3dadd( 64.1763, 37.4955, -19.9994, 0.52 ) }
    dend_54 { pt3dadd( 64.4732, 36.9775, -19.7158, 0.66 ) }
    dend_54 { pt3dadd( 64.7915, 36.4221, -19.4118, 0.52 ) }
    dend_54 { pt3dadd( 64.8194, 36.3734, -19.3852, 0.52 ) }
    dend_54 { pt3dadd( 65.474, 35.2315, -18.7601, 0.74 ) }
    dend_54 { pt3dadd( 69.5581, 28.3167, -15.8406, 0.74 ) }
    dend_54 { pt3dadd( 74.8118, 22.0466, -13.5627, 0.74 ) }
    dend_54 { pt3dadd( 79.5639, 15.7041, -10.4722, 0.74 ) }
    dend_54 { pt3dadd( 82.7612, 9.22364, -5.93819, 0.74 ) }
    dend_54 { pt3dadd( 86.2606, 2.64224, -1.78105, 0.74 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 14/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 63.5134, 38.6519, -20.6325, 0.52 ) }
    dend_53 { pt3dadd( 64.9108, 40.5695, -21.3709, 0.52 ) }
    dend_53 { pt3dadd( 66.0416, 42.1787, -21.9729, 1.62 ) }
    dend_53 { pt3dadd( 66.678, 43.1218, -22.3075, 1.92 ) }
    dend_53 { pt3dadd( 67.1819, 43.9045, -22.5592, 1.77 ) }
    dend_53 { pt3dadd( 68.8274, 46.5126, -23.354, 0.66 ) }
    dend_53 { pt3dadd( 69.2289, 47.151, -23.6277, 0.66 ) }
    dend_53 { pt3dadd( 69.649, 47.9046, -23.9959, 1.18 ) }
    dend_53 { pt3dadd( 69.8974, 48.3674, -24.2833, 1.55 ) }
    dend_53 { pt3dadd( 70.3843, 49.2939, -24.8966, 1.55 ) }
    dend_53 { pt3dadd( 70.4147, 49.357, -24.9423, 1.55 ) }
    dend_53 { pt3dadd( 71.6646, 52.53, -27.0764, 0.37 ) }
    dend_53 { pt3dadd( 71.9033, 53.2551, -27.5513, 1.25 ) }
    dend_53 { pt3dadd( 72.0901, 53.9571, -27.986, 1.92 ) }
    dend_53 { pt3dadd( 72.2266, 54.5899, -28.3508, 1.99 ) }
    dend_53 { pt3dadd( 72.5298, 56.3949, -29.6875, 0.66 ) }
    dend_53 { pt3dadd( 72.7021, 57.6561, -30.7094, 0.44 ) }
    dend_53 { pt3dadd( 72.7828, 58.1835, -31.1323, 0.96 ) }
    dend_53 { pt3dadd( 72.8992, 58.6341, -31.5602, 1.11 ) }
    dend_53 { pt3dadd( 72.9159, 58.6721, -31.604, 1.11 ) }
    dend_53 { pt3dadd( 74.7643, 61.5507, -35.3066, 0.52 ) }
    dend_53 { pt3dadd( 74.8315, 61.6254, -35.4216, 0.52 ) }
    dend_53 { pt3dadd( 75.6059, 62.3693, -36.7055, 1.77 ) }
    dend_53 { pt3dadd( 75.934, 62.6551, -37.2245, 2.06 ) }
    dend_53 { pt3dadd( 77.0837, 63.6016, -39.3105, 0.29 ) }
    dend_53 { pt3dadd( 77.6299, 63.9796, -40.4672, 0.52 ) }
    dend_53 { pt3dadd( 78.7642, 64.5564, -43.0146, 0.59 ) }
    dend_53 { pt3dadd( 78.7864, 64.5658, -43.0689, 0.59 ) }
    dend_53 { pt3dadd( 79.0635, 64.6728, -43.8091, 0.59 ) }
    dend_53 { pt3dadd( 81.1035, 65.401, -49.6414, 1.25 ) }
    dend_53 { pt3dadd( 82.9311, 65.9156, -55.2477, 0.96 ) }
    dend_53 { pt3dadd( 83.4006, 66.0136, -56.7694, 0.96 ) }
    dend_53 { pt3dadd( 83.4176, 66.0164, -56.8261, 0.96 ) }
    dend_53 { pt3dadd( 88.4645, 71.5877, -63.449, 0.96 ) }
    dend_53 { pt3dadd( 92.8156, 77.9693, -69.8978, 0.96 ) }
    dend_53 { pt3dadd( 96.5221, 85.3183, -75.7896, 0.96 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 50/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 16.6529, 236.988, 7.31695, 0.74 ) }
    dend_44 { pt3dadd( 15.9284, 238.538, 7.81386, 0.74 ) }
    dend_44 { pt3dadd( 15.6989, 239.098, 7.97989, 1.03 ) }
    dend_44 { pt3dadd( 15.3952, 239.84, 8.10629, 0.74 ) }
    dend_44 { pt3dadd( 14.6951, 241.519, 8.26187, 0.44 ) }
    dend_44 { pt3dadd( 14.3894, 242.251, 8.30239, 1.11 ) }
    dend_44 { pt3dadd( 14.1837, 242.775, 8.31726, 1.77 ) }
    dend_44 { pt3dadd( 13.9434, 243.475, 8.30468, 2.06 ) }
    dend_44 { pt3dadd( 13.4225, 245.148, 8.04168, 0.52 ) }
    dend_44 { pt3dadd( 13.1538, 246.106, 7.82834, 0.52 ) }
    dend_44 { pt3dadd( 13.139, 246.169, 7.81035, 0.52 ) }
    dend_44 { pt3dadd( 12.9231, 247.171, 7.55269, 1.03 ) }
    dend_44 { pt3dadd( 12.8229, 247.686, 7.44388, 1.33 ) }
    dend_44 { pt3dadd( 12.4611, 249.78, 7.12654, 0.96 ) }
    dend_44 { pt3dadd( 12.3134, 250.975, 7.03373, 0.74 ) }
    dend_44 { pt3dadd( 12.2131, 251.877, 7.0086, 0.37 ) }
    dend_44 { pt3dadd( 12.1269, 252.708, 7.02063, 0.37 ) }
    dend_44 { pt3dadd( 11.9985, 253.715, 7.07983, 1.03 ) }
    dend_44 { pt3dadd( 11.876, 254.516, 7.21303, 1.4 ) }
    dend_44 { pt3dadd( 11.7669, 255.173, 7.38664, 1.69 ) }
    dend_44 { pt3dadd( 11.5147, 256.528, 7.74597, 0.37 ) }
    dend_44 { pt3dadd( 11.3287, 257.435, 8.04346, 0.37 ) }
    dend_44 { pt3dadd( 11.1659, 258.114, 8.30883, 0.37 ) }
    dend_44 { pt3dadd( 10.7229, 259.696, 9.08926, 0.66 ) }
    dend_44 { pt3dadd( 10.6614, 259.879, 9.19195, 1.62 ) }
    dend_44 { pt3dadd( 10.4276, 260.438, 9.52545, 1.84 ) }
    dend_44 { pt3dadd( 10.1951, 260.907, 9.81058, 1.55 ) }
    dend_44 { pt3dadd( 10.1636, 260.962, 9.84039, 1.55 ) }
    dend_44 { pt3dadd( 9.34039, 262.209, 10.4283, 0.81 ) }
    dend_44 { pt3dadd( 8.83723, 262.853, 10.6668, 1.55 ) }
    dend_44 { pt3dadd( 8.34574, 263.375, 10.9106, 2.21 ) }
    dend_44 { pt3dadd( 8.0868, 263.601, 11.0261, 1.92 ) }
    dend_44 { pt3dadd( 6.89856, 264.435, 11.4774, 0.37 ) }
    dend_44 { pt3dadd( 6.19531, 264.791, 11.6997, 0.29 ) }
    dend_44 { pt3dadd( 6.14187, 264.806, 11.7176, 0.29 ) }
    dend_44 { pt3dadd( 4.43425, 265.07, 12.411, 0.81 ) }
    dend_44 { pt3dadd( 3.82009, 265.102, 12.688, 1.18 ) }
    dend_44 { pt3dadd( 3.23434, 265.085, 12.9663, 0.81 ) }
    dend_44 { pt3dadd( 2.36683, 264.978, 13.5093, 0.44 ) }
    dend_44 { pt3dadd( 1.03914, 264.803, 14.4179, 1.69 ) }
    dend_44 { pt3dadd( 0.989791, 264.798, 14.448, 1.69 ) }
    dend_44 { pt3dadd( 0.599451, 264.752, 14.6596, 1.99 ) }
    dend_44 { pt3dadd( 0.266914, 264.732, 14.8436, 1.84 ) }
    dend_44 { pt3dadd( -1.51507, 264.835, 15.8573, 1.11 ) }
    dend_44 { pt3dadd( -2.35988, 265.019, 16.2545, 0.29 ) }
    dend_44 { pt3dadd( -3.61839, 265.552, 16.6079, 0.52 ) }
    dend_44 { pt3dadd( -3.67549, 265.589, 16.6186, 0.52 ) }
    dend_44 { pt3dadd( -4.08927, 266.027, 16.5285, 0.74 ) }
    dend_44 { pt3dadd( -4.80422, 266.922, 16.2438, 0.96 ) }
    dend_44 { pt3dadd( -5.3756, 267.778, 15.8658, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_44 { pt3dadd( -5.79047, 268.549, 15.5278, 0.81 ) }
    dend_44 { pt3dadd( -6.1008, 269.221, 15.2373, 0.81 ) }
    dend_44 { pt3dadd( -7.18617, 271.612, 14.0485, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 3/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 16.6529, 236.988, 7.31695, 1.18 ) }
    dend_43 { pt3dadd( 17.28, 238.778, 7.028, 1.18 ) }
    dend_43 { pt3dadd( 17.5548, 239.567, 6.94465, 0.52 ) }
    dend_43 { pt3dadd( 17.8523, 240.413, 6.87436, 1.11 ) }
    dend_43 { pt3dadd( 18.1382, 241.272, 6.83381, 0.59 ) }
    dend_43 { pt3dadd( 18.3762, 242.018, 6.81648, 1.92 ) }
    dend_43 { pt3dadd( 18.5879, 242.653, 6.75799, 1.55 ) }
    dend_43 { pt3dadd( 18.9359, 243.739, 6.68595, 0.59 ) }
    dend_43 { pt3dadd( 18.9533, 243.791, 6.67764, 0.59 ) }
    dend_43 { pt3dadd( 19.174, 244.375, 6.39663, 0.37 ) }
    dend_43 { pt3dadd( 19.2036, 244.456, 6.33468, 0.37 ) }
    dend_43 { pt3dadd( 19.6938, 245.754, 4.92491, 0.37 ) }
    dend_43 { pt3dadd( 19.7782, 245.989, 4.62387, 0.96 ) }
    dend_43 { pt3dadd( 19.8788, 246.328, 4.10747, 0.96 ) }
    dend_43 { pt3dadd( 20.1948, 247.544, 2.13403, 0.52 ) }
    dend_43 { pt3dadd( 20.2545, 247.842, 1.64321, 0.52 ) }
    dend_43 { pt3dadd( 20.3467, 248.548, 0.520862, 1.25 ) }
    dend_43 { pt3dadd( 20.3486, 248.748, 0.225798, 1.47 ) }
    dend_43 { pt3dadd( 20.3155, 249.761, -1.18292, 0.88 ) }
    dend_43 { pt3dadd( 20.312, 249.803, -1.23491, 0.88 ) }
    dend_43 { pt3dadd( 20.2255, 250.396, -1.77019, 0.74 ) }
    dend_43 { pt3dadd( 20.2174, 250.458, -1.81648, 0.74 ) }
    dend_43 { pt3dadd( 20.0575, 251.873, -2.58981, 0.22 ) }
    dend_43 { pt3dadd( 20.0156, 252.549, -2.88189, 1.25 ) }
    dend_43 { pt3dadd( 20.0129, 253.005, -3.01464, 1.47 ) }
    dend_43 { pt3dadd( 20.0704, 253.997, -3.30508, 0.44 ) }
    dend_43 { pt3dadd( 20.1366, 254.587, -3.47193, 0.44 ) }
    dend_43 { pt3dadd( 20.2272, 255.203, -3.63011, 0.88 ) }
    dend_43 { pt3dadd( 20.2849, 255.529, -3.69607, 1.18 ) }
    dend_43 { pt3dadd( 20.4031, 256.128, -3.83311, 0.88 ) }
    dend_43 { pt3dadd( 20.7158, 257.406, -4.12678, 0.44 ) }
    dend_43 { pt3dadd( 20.8074, 257.731, -4.19999, 0.59 ) }
    dend_43 { pt3dadd( 20.8239, 257.79, -4.21246, 0.59 ) }
    dend_43 { pt3dadd( 21.0069, 258.374, -4.40343, 0.37 ) }
    dend_43 { pt3dadd( 21.0415, 258.473, -4.43991, 0.37 ) }
    dend_43 { pt3dadd( 21.3061, 259.178, -4.68546, 0.88 ) }
    dend_43 { pt3dadd( 21.4394, 259.535, -4.79616, 1.18 ) }
    dend_43 { pt3dadd( 21.6119, 260.053, -4.95398, 1.33 ) }
    dend_43 { pt3dadd( 22.0743, 261.532, -5.39652, 1.11 ) }
    dend_43 { pt3dadd( 22.3586, 262.466, -5.6704, 0.37 ) }
    dend_43 { pt3dadd( 22.6279, 263.395, -5.92567, 0.29 ) }
    dend_43 { pt3dadd( 22.727, 263.783, -6.01892, 0.29 ) }
    dend_43 { pt3dadd( 22.9094, 264.542, -6.16004, 1.4 ) }
    dend_43 { pt3dadd( 22.9545, 264.73, -6.19119, 1.62 ) }
    dend_43 { pt3dadd( 23.1984, 265.741, -6.31402, 0.29 ) }
    dend_43 { pt3dadd( 23.3605, 266.318, -6.44233, 0.96 ) }
    dend_43 { pt3dadd( 23.6866, 267.361, -6.7321, 0.22 ) }
    dend_43 { pt3dadd( 23.9106, 268.023, -6.93267, 0.22 ) }
    dend_43 { pt3dadd( 24.3415, 269.267, -7.39571, 1.55 ) }
    dend_43 { pt3dadd( 24.4557, 269.616, -7.5387, 1.69 ) }
    dend_43 { pt3dadd( 24.9673, 271.314, -8.27317, 0.22 ) }
    dend_43 { pt3dadd( 25.1586, 271.961, -8.56333, 0.88 ) }
    dend_43 { pt3dadd( 25.2698, 272.305, -8.71517, 0.88 ) }
    dend_43 { pt3dadd( 25.6676, 273.413, -9.21209, 0.37 ) }
    dend_43 { pt3dadd( 25.9783, 274.181, -9.52915, 0.15 ) }
    dend_43 { pt3dadd( 26.3089, 274.919, -9.80252, 1.55 ) }
    dend_43 { pt3dadd( 26.4897, 275.288, -9.90964, 1.55 ) }
    dend_43 { pt3dadd( 26.8974, 276.079, -10.1186, 0.29 ) }
    dend_43 { pt3dadd( 27.3772, 276.971, -10.3181, 1.03 ) }
    dend_43 { pt3dadd( 27.6058, 277.379, -10.3788, 1.18 ) }
    dend_43 { pt3dadd( 28.1142, 278.364, -10.527, 0.15 ) }
    dend_43 { pt3dadd( 28.2412, 278.668, -10.5797, 0.59 ) }
    dend_43 { pt3dadd( 28.388, 279.224, -10.6234, 0.29 ) }
    dend_43 { pt3dadd( 28.3947, 279.27, -10.6227, 0.29 ) }
    dend_43 { pt3dadd( 28.4138, 279.555, -10.592, 0.52 ) }
    dend_43 { pt3dadd( 28.4055, 280.423, -10.4441, 0.22 ) }
    dend_43 { pt3dadd( 28.3562, 281.226, -10.2733, 0.22 ) }
    dend_43 { pt3dadd( 28.2725, 282.556, -9.97535, 0.88 ) }
    dend_43 { pt3dadd( 28.2488, 282.884, -9.89547, 1.11 ) }
    dend_43 { pt3dadd( 28.2245, 283.227, -9.81056, 1.33 ) }
    dend_43 { pt3dadd( 28.1453, 284.403, -9.46104, 0.22 ) }
    dend_43 { pt3dadd( 28.1095, 285.312, -9.15694, 0.22 ) }
    dend_43 { pt3dadd( 28.1011, 286.004, -8.91884, 0.22 ) }
    dend_43 { pt3dadd( 28.1087, 286.407, -8.79897, 0.74 ) }
    dend_43 { pt3dadd( 28.1219, 286.893, -8.66138, 0.88 ) }
    dend_43 { pt3dadd( 28.1786, 288.168, -8.32716, 0.22 ) }
    dend_43 { pt3dadd( 28.2283, 288.889, -8.15811, 0.22 ) }
    dend_43 { pt3dadd( 28.2634, 289.394, -8.04298, 0.81 ) }
    dend_43 { pt3dadd( 28.2728, 289.775, -7.95513, 1.11 ) }
    dend_43 { pt3dadd( 28.2695, 290.833, -7.7355, 0.22 ) }
    dend_43 { pt3dadd( 28.2487, 291.456, -7.61948, 0.66 ) }
    dend_43 { pt3dadd( 28.2465, 291.501, -7.61296, 0.66 ) }
    dend_43 { pt3dadd( 28.2334, 291.786, -7.5695, 0.88 ) }
    dend_43 { pt3dadd( 28.1837, 293.354, -7.31568, 0.22 ) }
    dend_43 { pt3dadd( 28.1931, 294.113, -7.18679, 1.25 ) }
    dend_43 { pt3dadd( 28.2191, 294.495, -7.11964, 1.25 ) }
    dend_43 { pt3dadd( 28.3655, 295.486, -6.94954, 0.15 ) }
    dend_43 { pt3dadd( 28.4701, 295.936, -6.8776, 0.74 ) }
    dend_43 { pt3dadd( 28.4872, 295.986, -6.87054, 0.74 ) }
    dend_43 { pt3dadd( 28.8922, 296.755, -6.78803, 0.15 ) }
    dend_43 { pt3dadd( 29.0754, 297.033, -6.75117, 0.37 ) }
    dend_43 { pt3dadd( 29.6105, 297.714, -6.68159, 0.15 ) }
    dend_43 { pt3dadd( 29.9353, 298.099, -6.62708, 0.59 ) }
    dend_43 { pt3dadd( 30.0034, 298.182, -6.61398, 0.59 ) }
    dend_43 { pt3dadd( 30.5574, 298.899, -6.49517, 0.15 ) }
    dend_43 { pt3dadd( 31.0677, 299.57, -6.37812, 1.4 ) }
    dend_43 { pt3dadd( 31.6851, 300.404, -6.22477, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_43 { pt3dadd( 32.2848, 301.288, -5.9813, 0.22 ) }
    dend_43 { pt3dadd( 32.63, 301.825, -5.79191, 0.37 ) }
    dend_43 { pt3dadd( 33.1205, 302.655, -5.45422, 1.03 ) }
    dend_43 { pt3dadd( 33.3276, 303.054, -5.26707, 1.4 ) }
    dend_43 { pt3dadd( 33.3444, 303.092, -5.24791, 1.4 ) }
    dend_43 { pt3dadd( 33.8562, 304.439, -4.57052, 0.29 ) }
    dend_43 { pt3dadd( 33.9369, 304.714, -4.40023, 0.59 ) }
    dend_43 { pt3dadd( 34.0804, 305.462, -3.81124, 0.22 ) }
    dend_43 { pt3dadd( 34.1009, 305.851, -3.45194, 0.96 ) }
    dend_43 { pt3dadd( 34.0905, 306.159, -3.14656, 1.11 ) }
    dend_43 { pt3dadd( 33.9803, 306.872, -2.39495, 0.22 ) }
    dend_43 { pt3dadd( 33.5364, 308.421, -0.596367, 1.25 ) }
    dend_43 { pt3dadd( 33.3225, 309.01, 0.147602, 1.55 ) }
    dend_43 { pt3dadd( 33.0413, 309.719, 1.06241, 0.96 ) }
    dend_43 { pt3dadd( 33.0102, 309.8, 1.16522, 0.96 ) }
    dend_43 { pt3dadd( 32.6591, 310.768, 2.42042, 0.22 ) }
    dend_43 { pt3dadd( 32.3622, 311.731, 3.61288, 0.96 ) }
    dend_43 { pt3dadd( 32.322, 311.963, 3.84872, 1.55 ) }
    dend_43 { pt3dadd( 32.2879, 312.741, 4.55463, 0.74 ) }
    dend_43 { pt3dadd( 32.3309, 313.059, 4.82805, 0.96 ) }
    dend_43 { pt3dadd( 32.6617, 314.264, 5.79797, 0.59 ) }
    dend_43 { pt3dadd( 32.8927, 314.76, 6.15937, 0.29 ) }
    dend_43 { pt3dadd( 33.0659, 315.074, 6.36218, 0.96 ) }
    dend_43 { pt3dadd( 33.3574, 315.574, 6.6787, 1.11 ) }
    dend_43 { pt3dadd( 34.1133, 316.815, 7.42042, 0.29 ) }
    dend_43 { pt3dadd( 34.4327, 317.328, 7.6867, 0.29 ) }
    dend_43 { pt3dadd( 34.8757, 318.03, 7.96187, 0.29 ) }
    dend_43 { pt3dadd( 35.2082, 318.576, 8.15934, 0.81 ) }
    dend_43 { pt3dadd( 35.2617, 318.668, 8.1794, 0.81 ) }
    dend_43 { pt3dadd( 35.4698, 319.064, 8.2032, 0.81 ) }
    dend_43 { pt3dadd( 35.4936, 319.114, 8.19882, 0.81 ) }
    dend_43 { pt3dadd( 35.7729, 319.714, 8.09, 1.03 ) }
    dend_43 { pt3dadd( 36.0313, 320.255, 7.96257, 1.69 ) }
    dend_43 { pt3dadd( 36.7078, 321.602, 7.60434, 0.52 ) }
    dend_43 { pt3dadd( 36.9802, 322.129, 7.45767, 0.37 ) }
    dend_43 { pt3dadd( 37.3872, 322.902, 7.27324, 0.52 ) }
    dend_43 { pt3dadd( 37.9129, 323.874, 7.09142, 0.29 ) }
    dend_43 { pt3dadd( 38.1123, 324.217, 7.0616, 0.29 ) }
    dend_43 { pt3dadd( 38.324, 324.541, 7.07786, 0.29 ) }
    dend_43 { pt3dadd( 38.3803, 324.617, 7.10524, 0.29 ) }
    dend_43 { pt3dadd( 39.0508, 325.38, 7.51347, 1.11 ) }
    dend_43 { pt3dadd( 39.4028, 325.757, 7.75019, 1.4 ) }
    dend_43 { pt3dadd( 40.1492, 326.547, 8.28569, 0.29 ) }
    dend_43 { pt3dadd( 40.5688, 326.989, 8.57292, 0.29 ) }
    dend_43 { pt3dadd( 41.579, 328.052, 9.27433, 0.88 ) }
    dend_43 { pt3dadd( 42.3804, 328.901, 9.81612, 0.22 ) }
    dend_43 { pt3dadd( 42.8429, 329.38, 10.1086, 0.66 ) }
    dend_43 { pt3dadd( 42.9896, 329.533, 10.2018, 0.66 ) }
    dend_43 { pt3dadd( 43.3318, 329.886, 10.4102, 0.29 ) }
    dend_43 { pt3dadd( 44.0055, 330.6, 10.8499, 0.96 ) }
    dend_43 { pt3dadd( 44.2778, 330.901, 11.033, 0.96 ) }
    dend_43 { pt3dadd( 44.6979, 331.408, 11.3682, 0.22 ) }
    dend_43 { pt3dadd( 44.9851, 331.766, 11.601, 0.81 ) }
    dend_43 { pt3dadd( 45.3317, 332.201, 11.8731, 0.44 ) }
    dend_43 { pt3dadd( 45.908, 332.985, 12.3767, 0.96 ) }
    dend_43 { pt3dadd( 46.4125, 333.729, 12.8236, 0.22 ) }
    dend_43 { pt3dadd( 46.7118, 334.226, 13.1198, 0.22 ) }
    dend_43 { pt3dadd( 47.0825, 334.94, 13.53, 0.96 ) }
    dend_43 { pt3dadd( 47.2154, 335.223, 13.6874, 1.18 ) }
    dend_43 { pt3dadd( 47.6564, 336.328, 14.2797, 0.52 ) }
    dend_43 { pt3dadd( 47.9354, 337.096, 14.6633, 0.29 ) }
    dend_43 { pt3dadd( 48.0562, 337.467, 14.8425, 0.29 ) }
    dend_43 { pt3dadd( 48.2322, 338.072, 15.1761, 0.29 ) }
    dend_43 { pt3dadd( 48.2502, 338.154, 15.2277, 0.29 ) }
    dend_43 { pt3dadd( 48.349, 338.75, 15.6325, 0.29 ) }
    dend_43 { pt3dadd( 48.3424, 338.73, 15.5933, 0.29 ) }
    dend_43 { pt3dadd( 47.9621, 338.62, 12.9469, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 67/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 65.3367, 164.024, 25.9418, 0.52 ) }
    dend_40 { pt3dadd( 64.2236, 164.96, 26.501, 0.52 ) }
    dend_40 { pt3dadd( 63.9178, 165.193, 26.6288, 1.18 ) }
    dend_40 { pt3dadd( 63.2727, 165.644, 26.8447, 1.18 ) }
    dend_40 { pt3dadd( 60.8418, 167.3, 27.5607, 0.22 ) }
    dend_40 { pt3dadd( 60.5871, 167.47, 27.6265, 0.59 ) }
    dend_40 { pt3dadd( 59.732, 168.044, 27.8083, 0.29 ) }
    dend_40 { pt3dadd( 58.9656, 168.546, 27.9222, 0.29 ) }
    dend_40 { pt3dadd( 58.1195, 169.093, 28.0769, 0.22 ) }
    dend_40 { pt3dadd( 57.8411, 169.268, 28.1253, 0.66 ) }
    dend_40 { pt3dadd( 57.358, 169.567, 28.1813, 0.66 ) }
    dend_40 { pt3dadd( 56.2772, 170.267, 28.3953, 0.22 ) }
    dend_40 { pt3dadd( 55.5721, 170.75, 28.5952, 0.66 ) }
    dend_40 { pt3dadd( 53.4587, 172.29, 29.4605, 0.52 ) }
    dend_40 { pt3dadd( 52.7704, 172.82, 29.8452, 0.81 ) }
    dend_40 { pt3dadd( 52.0647, 173.401, 30.3078, 0.29 ) }
    dend_40 { pt3dadd( 51.5109, 173.898, 30.7306, 0.52 ) }
    dend_40 { pt3dadd( 51.4563, 173.948, 30.7789, 0.52 ) }
    dend_40 { pt3dadd( 50.7374, 174.658, 31.4779, 0.66 ) }
    dend_40 { pt3dadd( 50.1627, 175.363, 32.0085, 0.29 ) }
    dend_40 { pt3dadd( 49.7959, 175.916, 32.4826, 0.96 ) }
    dend_40 { pt3dadd( 49.6556, 176.184, 32.7274, 1.03 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 89/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 65.3367, 164.024, 25.9418, 0.59 ) }
    dend_37 { pt3dadd( 66.31, 164.353, 26.2807, 0.59 ) }
    dend_37 { pt3dadd( 66.5965, 164.462, 26.3686, 1.11 ) }
    dend_37 { pt3dadd( 67.0764, 164.665, 26.555, 0.81 ) }
    dend_37 { pt3dadd( 67.1353, 164.697, 26.5797, 0.81 ) }
    dend_37 { pt3dadd( 67.7123, 165.067, 26.8295, 0.59 ) }
    dend_37 { pt3dadd( 67.8523, 165.176, 26.8917, 1.55 ) }
    dend_37 { pt3dadd( 68.0679, 165.41, 27.0226, 1.55 ) }
    dend_37 { pt3dadd( 68.4621, 165.925, 27.3367, 0.96 ) }
    dend_37 { pt3dadd( 68.821, 166.481, 27.6735, 0.37 ) }
    dend_37 { pt3dadd( 68.9357, 166.676, 27.7929, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_37 { pt3dadd( 69.1468, 167.094, 28.0531, 0.37 ) }
    dend_37 { pt3dadd( 69.6624, 168.155, 28.729, 0.88 ) }
    dend_37 { pt3dadd( 69.8364, 168.527, 28.971, 1.55 ) }
    dend_37 { pt3dadd( 69.9945, 168.872, 29.187, 1.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 4/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -130.008, 206.195, -7.61142, 0.22 ) }
    dend_30 { pt3dadd( -130.244, 207.701, -8.39104, 0.22 ) }
    dend_30 { pt3dadd( -130.324, 208.225, -8.70021, 0.22 ) }
    dend_30 { pt3dadd( -130.419, 208.7, -9.02384, 0.81 ) }
    dend_30 { pt3dadd( -130.485, 208.965, -9.23093, 0.81 ) }
    dend_30 { pt3dadd( -131.0, 210.747, -11.0849, 0.66 ) }
    dend_30 { pt3dadd( -131.01, 210.78, -11.1185, 0.66 ) }
    dend_30 { pt3dadd( -131.053, 210.995, -11.4818, 1.03 ) }
    dend_30 { pt3dadd( -131.101, 211.287, -12.1517, 0.15 ) }
    dend_30 { pt3dadd( -131.129, 211.466, -12.7557, 0.15 ) }
    dend_30 { pt3dadd( -131.227, 211.562, -13.9809, 1.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -130.008, 206.195, -7.61142, 0.22 ) }
    dend_29 { pt3dadd( -130.114, 204.891, -7.89191, 0.22 ) }
    dend_29 { pt3dadd( -130.15, 204.468, -7.94857, 0.74 ) }
    dend_29 { pt3dadd( -130.254, 203.45, -8.05566, 0.29 ) }
    dend_29 { pt3dadd( -130.27, 203.308, -8.06986, 0.29 ) }
    dend_29 { pt3dadd( -130.368, 202.474, -8.1588, 0.29 ) }
    dend_29 { pt3dadd( -130.377, 202.397, -8.16745, 0.29 ) }
    dend_29 { pt3dadd( -130.464, 201.272, -8.28837, 0.29 ) }
    dend_29 { pt3dadd( -130.505, 200.847, -8.30027, 0.66 ) }
    dend_29 { pt3dadd( -130.53, 200.511, -8.24581, 0.66 ) }
    dend_29 { pt3dadd( -130.571, 199.765, -8.02664, 0.29 ) }
    dend_29 { pt3dadd( -130.574, 199.643, -7.97851, 0.29 ) }
    dend_29 { pt3dadd( -130.559, 199.105, -7.73677, 0.52 ) }
    dend_29 { pt3dadd( -130.461, 197.434, -6.89916, 0.29 ) }
    dend_29 { pt3dadd( -130.328, 195.693, -5.9295, 0.29 ) }
    dend_29 { pt3dadd( -130.277, 195.121, -5.57482, 1.18 ) }
    dend_29 { pt3dadd( -130.249, 194.844, -5.3814, 1.03 ) }
    dend_29 { pt3dadd( -130.182, 194.254, -4.93767, 0.52 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 162.753, 218.208, -20.9946, 0.29 ) }
    dend_24 { pt3dadd( 172.789, 221.951, -21.1249, 0.29 ) }
    dend_24 { pt3dadd( 182.693, 225.908, -22.1832, 0.29 ) }
    dend_24 { pt3dadd( 192.873, 229.03, -23.1592, 0.29 ) }
    dend_24 { pt3dadd( 203.108, 231.438, -24.997, 0.29 ) }
    dend_24 { pt3dadd( 212.876, 235.653, -26.3683, 0.29 ) }
    dend_24 { pt3dadd( 222.355, 240.592, -27.5586, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 40/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 162.753, 218.208, -20.9946, 0.29 ) }
    dend_21 { pt3dadd( 171.131, 222.391, -18.3366, 0.29 ) }
    dend_21 { pt3dadd( 179.51, 225.77, -14.7913, 0.29 ) }
    dend_21 { pt3dadd( 187.499, 229.993, -11.1753, 0.29 ) }
    dend_21 { pt3dadd( 195.865, 234.517, -9.03782, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 45/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 145.525, 225.078, -57.9625, 0.29 ) }
    dend_17 { pt3dadd( 151.283, 225.99, -62.9784, 0.29 ) }
    dend_17 { pt3dadd( 157.061, 227.234, -67.9048, 0.29 ) }
    dend_17 { pt3dadd( 162.397, 229.001, -73.1747, 0.29 ) }
    dend_17 { pt3dadd( 166.973, 231.326, -78.9388, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 50/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 145.525, 225.078, -57.9625, 0.29 ) }
    dend_16 { pt3dadd( 148.722, 235.991, -56.0541, 0.29 ) }
    dend_16 { pt3dadd( 153.898, 246.24, -55.8932, 0.29 ) }
    dend_16 { pt3dadd( 159.057, 256.458, -56.8743, 0.29 ) }
    dend_16 { pt3dadd( 164.349, 266.48, -58.681, 0.29 ) }
    dend_16 { pt3dadd( 168.621, 276.369, -62.6496, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 56/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 5.81776, 256.1, -28.9846, 0.22 ) }
    dend_9 { pt3dadd( 5.9001, 257.627, -29.3127, 0.22 ) }
    dend_9 { pt3dadd( 5.93873, 258.177, -29.4178, 0.52 ) }
    dend_9 { pt3dadd( 5.98155, 258.688, -29.5067, 0.52 ) }
    dend_9 { pt3dadd( 6.10003, 260.263, -29.8202, 0.22 ) }
    dend_9 { pt3dadd( 6.18972, 261.636, -30.1032, 0.22 ) }
    dend_9 { pt3dadd( 6.23667, 262.428, -30.2678, 0.81 ) }
    dend_9 { pt3dadd( 6.2627, 262.925, -30.369, 1.11 ) }
    dend_9 { pt3dadd( 6.28787, 263.361, -30.4639, 1.33 ) }
    dend_9 { pt3dadd( 6.38342, 264.886, -30.76, 0.22 ) }
    dend_9 { pt3dadd( 6.43267, 265.507, -30.8538, 0.81 ) }
    dend_9 { pt3dadd( 6.45348, 265.807, -30.8934, 1.03 ) }
    dend_9 { pt3dadd( 6.55218, 267.272, -31.0479, 0.22 ) }
    dend_9 { pt3dadd( 6.60439, 268.413, -31.2344, 0.88 ) }
    dend_9 { pt3dadd( 6.62826, 269.182, -31.3892, 1.11 ) }
    dend_9 { pt3dadd( 6.64792, 269.854, -31.5387, 1.33 ) }
    dend_9 { pt3dadd( 6.65309, 270.211, -31.6404, 1.33 ) }
    dend_9 { pt3dadd( 6.65352, 270.268, -31.6596, 1.33 ) }
    dend_9 { pt3dadd( 6.66687, 272.48, -32.5092, 0.22 ) }
    dend_9 { pt3dadd( 6.66114, 272.972, -32.7095, 0.52 ) }
    dend_9 { pt3dadd( 6.65762, 273.051, -32.7432, 0.52 ) }
    dend_9 { pt3dadd( 6.63198, 273.319, -32.8484, 0.52 ) }
    dend_9 { pt3dadd( 6.55701, 274.139, -33.1604, 0.22 ) }
    dend_9 { pt3dadd( 6.50158, 274.901, -33.416, 0.22 ) }
    dend_9 { pt3dadd( 6.45931, 275.716, -33.6546, 0.22 ) }
    dend_9 { pt3dadd( 6.4209, 276.691, -33.9541, 0.88 ) }
    dend_9 { pt3dadd( 6.40694, 277.358, -34.1764, 0.88 ) }
    dend_9 { pt3dadd( 6.39955, 278.955, -34.736, 0.15 ) }
    dend_9 { pt3dadd( 6.39712, 279.578, -34.9689, 0.52 ) }
    dend_9 { pt3dadd( 6.41337, 280.505, -35.3312, 0.74 ) }
    dend_9 { pt3dadd( 6.5089, 281.888, -35.8767, 0.22 ) }
    dend_9 { pt3dadd( 6.63529, 283.044, -36.307, 1.03 ) }
    dend_9 { pt3dadd( 6.69541, 283.461, -36.4571, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 89/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 5.81776, 256.1, -28.9846, 0.22 ) }
    dend_8 { pt3dadd( 6.30417, 257.271, -30.8023, 0.22 ) }
    dend_8 { pt3dadd( 6.56144, 257.587, -31.6381, 0.22 ) }
    dend_8 { pt3dadd( 6.59332, 257.632, -31.7513, 0.22 ) }
    dend_8 { pt3dadd( 7.14042, 258.504, -33.8629, 0.37 ) }
    dend_8 { pt3dadd( 7.28342, 258.749, -34.4405, 0.29 ) }
    dend_8 { pt3dadd( 7.70302, 259.553, -36.2652, 0.88 ) }
    dend_8 { pt3dadd( 8.81243, 261.43, -40.6875, 0.22 ) }
    dend_8 { pt3dadd( 8.99456, 261.759, -41.4725, 0.22 ) }
    dend_8 { pt3dadd( 9.07858, 261.952, -41.911, 0.52 ) }
    dend_8 { pt3dadd( 9.08437, 261.979, -41.9675, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_8 { pt3dadd( 9.08417, 262.226, -42.4193, 0.66 ) }
    dend_8 { pt3dadd( 8.84726, 263.202, -43.4938, 0.29 ) }
    dend_8 { pt3dadd( 8.81286, 263.297, -43.5464, 0.29 ) }
    dend_8 { pt3dadd( 8.61976, 263.913, -43.8729, 0.29 ) }
    dend_8 { pt3dadd( 8.3546, 264.851, -44.3259, 0.66 ) }
    dend_8 { pt3dadd( 8.29421, 265.072, -44.4268, 0.66 ) }
    dend_8 { pt3dadd( 7.88992, 266.653, -45.055, 0.22 ) }
    dend_8 { pt3dadd( 7.85794, 266.774, -45.0903, 0.22 ) }
    dend_8 { pt3dadd( 7.66108, 267.603, -45.3235, 0.52 ) }
    dend_8 { pt3dadd( 7.58483, 268.011, -45.4285, 0.52 ) }
    dend_8 { pt3dadd( 6.0402, 274.04, -53.9753, 0.52 ) }
    dend_8 { pt3dadd( 5.87329, 279.631, -62.9207, 0.52 ) }
    dend_8 { pt3dadd( 6.66475, 285.694, -71.5482, 0.52 ) }
    dend_8 { pt3dadd( 4.98631, 292.206, -79.7415, 0.52 ) }
    dend_8 { pt3dadd( 3.83959, 298.728, -88.0182, 0.52 ) }
    dend_8 { pt3dadd( 3.01187, 305.299, -96.2975, 0.52 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 37.9369, 228.887, -24.462, 0.29 ) }
    dend_6 { pt3dadd( 43.5998, 237.707, -23.2714, 0.29 ) }
    dend_6 { pt3dadd( 48.2835, 247.2, -23.9964, 0.29 ) }
    dend_6 { pt3dadd( 51.9043, 256.826, -26.6815, 0.29 ) }
    dend_6 { pt3dadd( 54.1174, 266.25, -31.0486, 0.29 ) }
    dend_6 { pt3dadd( 57.0476, 275.987, -34.1852, 0.29 ) }
    dend_6 { pt3dadd( 60.4611, 285.162, -38.243, 0.29 ) }
    dend_6 { pt3dadd( 64.6515, 292.904, -43.9541, 0.29 ) }
    dend_6 { pt3dadd( 68.3051, 301.37, -49.07, 0.29 ) }
    dend_6 { pt3dadd( 70.0968, 310.519, -54.1132, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 26/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 37.9369, 228.887, -24.462, 1.33 ) }
    dend_5 { pt3dadd( 45.3008, 239.928, -29.4153, 0.29 ) }
    dend_5 { pt3dadd( 50.64, 252.967, -31.9706, 0.29 ) }
    dend_5 { pt3dadd( 57.2985, 265.34, -34.4319, 0.29 ) }
    dend_5 { pt3dadd( 62.4669, 278.226, -37.8891, 0.29 ) }
    dend_5 { pt3dadd( 66.7338, 290.812, -43.1292, 0.29 ) }
    dend_5 { pt3dadd( 71.0899, 303.852, -47.1377, 0.29 ) }
    dend_5 { pt3dadd( 73.3896, 317.732, -50.1698, 0.29 ) }
    dend_5 { pt3dadd( 77.6367, 331.073, -53.2966, 0.29 ) }
    dend_5 { pt3dadd( 81.532, 343.981, -58.094, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 36/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 159.285, 66.8383, -45.8515, 0.29 ) }
    dend_58 { pt3dadd( 169.751, 68.5478, -48.1635, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 38/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 159.285, 66.8383, -45.8515, 0.29 ) }
    dend_57 { pt3dadd( 167.683, 68.2867, -47.3532, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -7.18617, 271.612, 14.0485, 0.29 ) }
    dend_48 { pt3dadd( -8.13418, 273.654, 14.325, 0.29 ) }
    dend_48 { pt3dadd( -8.73145, 274.94, 14.4992, 0.81 ) }
    dend_48 { pt3dadd( -8.93904, 275.387, 14.5597, 1.11 ) }
    dend_48 { pt3dadd( -9.01815, 275.558, 14.5828, 1.11 ) }
    dend_48 { pt3dadd( -9.38996, 276.358, 14.6912, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 46/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -7.18617, 271.612, 14.0485, 0.29 ) }
    dend_45 { pt3dadd( -10.5226, 272.931, 17.9678, 0.29 ) }
    dend_45 { pt3dadd( -10.9811, 273.143, 18.4914, 1.92 ) }
    dend_45 { pt3dadd( -11.2887, 273.312, 18.83, 2.28 ) }
    dend_45 { pt3dadd( -13.0937, 274.408, 20.7585, 0.37 ) }
    dend_45 { pt3dadd( -13.5727, 274.725, 21.2458, 0.88 ) }
    dend_45 { pt3dadd( -14.1062, 275.117, 21.7388, 0.37 ) }
    dend_45 { pt3dadd( -14.1584, 275.173, 21.7601, 0.37 ) }
    dend_45 { pt3dadd( -14.649, 275.748, 21.9072, 0.37 ) }
    dend_45 { pt3dadd( -14.6954, 275.811, 21.9234, 0.37 ) }
    dend_45 { pt3dadd( -15.0131, 276.292, 21.9876, 0.37 ) }
    dend_45 { pt3dadd( -15.7028, 277.245, 22.145, 1.03 ) }
    dend_45 { pt3dadd( -16.1011, 277.737, 22.2398, 0.96 ) }
    dend_45 { pt3dadd( -16.8077, 278.589, 22.4302, 0.74 ) }
    dend_45 { pt3dadd( -18.3802, 280.421, 22.9484, 2.21 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 61/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 69.9945, 168.872, 29.187, 0.81 ) }
    dend_39 { pt3dadd( 70.8988, 169.536, 31.5278, 0.81 ) }
    dend_39 { pt3dadd( 71.4737, 169.999, 33.0564, 0.29 ) }
    dend_39 { pt3dadd( 71.6207, 170.123, 33.4543, 1.03 ) }
    dend_39 { pt3dadd( 72.2417, 170.646, 35.1353, 0.37 ) }
    dend_39 { pt3dadd( 72.3651, 170.75, 35.4695, 0.88 ) }
    dend_39 { pt3dadd( 72.3856, 170.767, 35.525, 0.88 ) }
    dend_39 { pt3dadd( 72.888, 171.263, 36.9286, 0.74 ) }
    dend_39 { pt3dadd( 72.903, 171.285, 36.981, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 70/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 69.9945, 168.872, 29.187, 0.59 ) }
    dend_38 { pt3dadd( 69.035, 171.324, 30.3216, 0.59 ) }
    dend_38 { pt3dadd( 68.862, 171.809, 30.5217, 0.59 ) }
    dend_38 { pt3dadd( 68.5425, 172.959, 30.9571, 0.37 ) }
    dend_38 { pt3dadd( 68.4239, 173.693, 31.2071, 0.88 ) }
    dend_38 { pt3dadd( 68.3853, 174.243, 31.3736, 1.47 ) }
    dend_38 { pt3dadd( 68.3397, 176.378, 31.9746, 0.22 ) }
    dend_38 { pt3dadd( 68.3949, 177.254, 32.1287, 0.22 ) }
    dend_38 { pt3dadd( 68.5328, 178.229, 32.3021, 0.88 ) }
    dend_38 { pt3dadd( 68.8646, 179.629, 32.6567, 0.22 ) }
    dend_38 { pt3dadd( 69.1298, 180.593, 32.9515, 0.81 ) }
    dend_38 { pt3dadd( 69.1523, 180.666, 32.9751, 0.81 ) }
    dend_38 { pt3dadd( 69.3484, 181.301, 33.2458, 0.22 ) }
    dend_38 { pt3dadd( 69.4357, 181.714, 33.4801, 0.66 ) }
    dend_38 { pt3dadd( 69.5818, 183.326, 34.5483, 0.29 ) }
    dend_38 { pt3dadd( 69.5695, 183.919, 34.978, 0.96 ) }
    dend_38 { pt3dadd( 69.5154, 184.555, 35.4401, 0.66 ) }
    dend_38 { pt3dadd( 69.3063, 186.161, 36.5277, 0.37 ) }
    dend_38 { pt3dadd( 69.243, 186.569, 36.7696, 0.37 ) }
    dend_38 { pt3dadd( 69.1536, 187.101, 37.0277, 0.66 ) }
    dend_38 { pt3dadd( 69.0648, 187.636, 37.1897, 0.88 ) }
    dend_38 { pt3dadd( 68.8707, 188.852, 37.5175, 0.29 ) }
    dend_38 { pt3dadd( 68.6966, 189.893, 37.745, 0.37 ) }
    dend_38 { pt3dadd( 68.5465, 190.934, 37.8875, 0.37 ) }
    dend_38 { pt3dadd( 68.4944, 191.363, 37.9811, 0.88 ) }
    dend_38 { pt3dadd( 68.3971, 192.453, 38.2467, 0.88 ) }
    dend_38 { pt3dadd( 68.3443, 193.718, 38.5674, 0.66 ) }
    dend_38 { pt3dadd( 68.3432, 193.793, 38.5869, 0.66 ) }
    dend_38 { pt3dadd( 68.3483, 194.417, 38.7857, 0.66 ) }
    dend_38 { pt3dadd( 68.3523, 195.689, 39.3428, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_38 { pt3dadd( 68.3691, 196.759, 39.9027, 0.37 ) }
    dend_38 { pt3dadd( 68.3818, 197.3, 40.2365, 0.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 195.865, 234.517, -9.03782, 0.29 ) }
    dend_23 { pt3dadd( 204.649, 238.551, -6.08808, 0.29 ) }
    dend_23 { pt3dadd( 213.239, 243.226, -3.43869, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 5/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 195.865, 234.517, -9.03782, 0.29 ) }
    dend_22 { pt3dadd( 205.265, 238.181, -7.55899, 0.29 ) }
    dend_22 { pt3dadd( 214.474, 241.152, -4.40188, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 8/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 166.973, 231.326, -78.9388, 0.29 ) }
    dend_19 { pt3dadd( 170.185, 233.353, -84.4205, 0.29 ) }
    dend_19 { pt3dadd( 173.767, 235.613, -89.5823, 0.29 ) }
    dend_19 { pt3dadd( 176.671, 238.575, -94.8368, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 166.973, 231.326, -78.9388, 0.29 ) }
    dend_18 { pt3dadd( 171.681, 233.2, -85.0892, 0.29 ) }
    dend_18 { pt3dadd( 175.794, 233.895, -91.8685, 0.29 ) }
    dend_18 { pt3dadd( 179.915, 235.175, -98.5583, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.69541, 283.461, -36.4571, 0.22 ) }
    dend_11 { pt3dadd( 9.10938, 283.611, -37.0771, 0.22 ) }
    dend_11 { pt3dadd( 9.9655, 283.664, -37.2971, 0.37 ) }
    dend_11 { pt3dadd( 10.5415, 283.7, -37.445, 0.66 ) }
    dend_11 { pt3dadd( 11.258, 283.744, -37.629, 0.88 ) }
    dend_11 { pt3dadd( 23.6027, 282.745, -41.2435, 0.88 ) }
    dend_11 { pt3dadd( 35.8338, 281.979, -45.2734, 0.88 ) }
    dend_11 { pt3dadd( 48.0829, 280.502, -49.0574, 0.88 ) }
    dend_11 { pt3dadd( 60.6922, 281.453, -51.6376, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 25/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.69541, 283.461, -36.4571, 0.22 ) }
    dend_10 { pt3dadd( 6.5382, 284.702, -36.5131, 0.22 ) }
    dend_10 { pt3dadd( 6.45868, 285.804, -36.5468, 0.37 ) }
    dend_10 { pt3dadd( 6.43546, 286.513, -36.5655, 0.22 ) }
    dend_10 { pt3dadd( 6.43464, 287.172, -36.5824, 0.66 ) }
    dend_10 { pt3dadd( 6.44187, 287.511, -36.5911, 0.88 ) }
    dend_10 { pt3dadd( 6.50885, 288.912, -36.6396, 0.22 ) }
    dend_10 { pt3dadd( 6.62955, 290.001, -36.667, 0.29 ) }
    dend_10 { pt3dadd( 6.7132, 290.641, -36.6891, 0.59 ) }
    dend_10 { pt3dadd( 6.80338, 291.219, -36.7147, 1.03 ) }
    dend_10 { pt3dadd( 6.87214, 291.602, -36.737, 1.25 ) }
    dend_10 { pt3dadd( 7.15536, 293.005, -36.7665, 0.15 ) }
    dend_10 { pt3dadd( 7.36309, 293.953, -36.7539, 0.15 ) }
    dend_10 { pt3dadd( 7.49602, 294.612, -36.7209, 0.88 ) }
    dend_10 { pt3dadd( 7.56974, 294.992, -36.6807, 1.18 ) }
    dend_10 { pt3dadd( 7.6412, 295.372, -36.6176, 1.18 ) }
    dend_10 { pt3dadd( 7.94261, 296.99, -36.2544, 0.15 ) }
    dend_10 { pt3dadd( 8.04393, 297.547, -36.0878, 0.44 ) }
    dend_10 { pt3dadd( 8.10405, 297.887, -35.9715, 0.44 ) }
    dend_10 { pt3dadd( 8.24386, 298.683, -35.6761, 0.22 ) }
    dend_10 { pt3dadd( 8.31763, 299.241, -35.484, 0.74 ) }
    dend_10 { pt3dadd( 8.32305, 299.302, -35.4649, 0.74 ) }
    dend_10 { pt3dadd( 8.33272, 299.641, -35.3872, 0.74 ) }
    dend_10 { pt3dadd( 8.33414, 299.707, -35.3748, 0.74 ) }
    dend_10 { pt3dadd( 8.33982, 300.002, -35.3332, 0.74 ) }
    dend_10 { pt3dadd( 8.33436, 301.593, -35.2008, 0.22 ) }
    dend_10 { pt3dadd( 8.3342, 301.655, -35.1973, 0.22 ) }
    dend_10 { pt3dadd( 8.33972, 302.48, -35.1609, 0.81 ) }
    dend_10 { pt3dadd( 8.34537, 302.861, -35.1474, 1.03 ) }
    dend_10 { pt3dadd( 8.34639, 302.929, -35.1454, 1.03 ) }
    dend_10 { pt3dadd( 8.35849, 303.481, -35.1414, 1.03 ) }
    dend_10 { pt3dadd( 8.41537, 304.754, -35.153, 0.22 ) }
    dend_10 { pt3dadd( 8.47384, 305.547, -35.1861, 0.22 ) }
    dend_10 { pt3dadd( 8.47995, 305.609, -35.1903, 0.22 ) }
    dend_10 { pt3dadd( 8.57757, 306.45, -35.2585, 0.22 ) }
    dend_10 { pt3dadd( 8.68314, 307.236, -35.3331, 0.88 ) }
    dend_10 { pt3dadd( 8.76219, 307.739, -35.3893, 1.03 ) }
    dend_10 { pt3dadd( 8.95964, 309.045, -35.5548, 0.22 ) }
    dend_10 { pt3dadd( 9.01892, 309.495, -35.6112, 0.22 ) }
    dend_10 { pt3dadd( 9.08685, 310.068, -35.6785, 0.66 ) }
    dend_10 { pt3dadd( 9.09503, 310.138, -35.6861, 0.66 ) }
    dend_10 { pt3dadd( 9.1207, 310.401, -35.7118, 0.66 ) }
    dend_10 { pt3dadd( 9.19566, 311.476, -35.8027, 0.22 ) }
    dend_10 { pt3dadd( 9.22698, 312.156, -35.8472, 0.22 ) }
    dend_10 { pt3dadd( 9.24952, 312.737, -35.8854, 0.29 ) }
    dend_10 { pt3dadd( 9.28602, 313.638, -35.9443, 0.22 ) }
    dend_10 { pt3dadd( 9.33076, 314.454, -36.0098, 0.74 ) }
    dend_10 { pt3dadd( 9.36639, 314.884, -36.0485, 1.18 ) }
    dend_10 { pt3dadd( 9.42822, 315.384, -36.0963, 1.18 ) }
    dend_10 { pt3dadd( 9.46408, 315.658, -36.123, 1.33 ) }
    dend_10 { pt3dadd( 9.52508, 316.104, -36.1657, 1.33 ) }
    dend_10 { pt3dadd( 9.75347, 317.688, -36.322, 0.15 ) }
    dend_10 { pt3dadd( 9.93689, 318.826, -36.4531, 0.15 ) }
    dend_10 { pt3dadd( 10.1317, 319.905, -36.5987, 0.88 ) }
    dend_10 { pt3dadd( 10.2084, 320.301, -36.6565, 1.11 ) }
    dend_10 { pt3dadd( 10.2575, 320.554, -36.6941, 1.11 ) }
    dend_10 { pt3dadd( 10.2774, 320.666, -36.7127, 1.11 ) }
    dend_10 { pt3dadd( 10.4416, 321.617, -36.8783, 0.15 ) }
    dend_10 { pt3dadd( 10.5772, 322.432, -37.0244, 0.15 ) }
    dend_10 { pt3dadd( 10.7141, 323.322, -37.1766, 0.74 ) }
    dend_10 { pt3dadd( 10.7788, 323.747, -37.244, 0.88 ) }
    dend_10 { pt3dadd( 10.9575, 324.95, -37.4177, 0.15 ) }
    dend_10 { pt3dadd( 11.1723, 326.336, -37.594, 0.15 ) }
    dend_10 { pt3dadd( 11.3022, 327.157, -37.6871, 0.96 ) }
    dend_10 { pt3dadd( 11.3891, 327.675, -37.7449, 1.25 ) }
    dend_10 { pt3dadd( 11.4569, 328.047, -37.7846, 1.25 ) }
    dend_10 { pt3dadd( 11.8001, 329.776, -37.9555, 0.22 ) }
    dend_10 { pt3dadd( 12.0264, 330.839, -38.0406, 0.22 ) }
    dend_10 { pt3dadd( 12.0398, 330.902, -38.0458, 0.22 ) }
    dend_10 { pt3dadd( 12.2623, 331.904, -38.1313, 0.52 ) }
    dend_10 { pt3dadd( 12.3351, 332.23, -38.1567, 0.96 ) }
    dend_10 { pt3dadd( 12.3463, 332.284, -38.1598, 0.96 ) }
    dend_10 { pt3dadd( 12.4245, 332.732, -38.1735, 0.96 ) }
    dend_10 { pt3dadd( 12.4421, 332.857, -38.176, 0.96 ) }
    dend_10 { pt3dadd( 12.4545, 332.947, -38.1779, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_10 { pt3dadd( 12.5906, 334.535, -38.1876, 0.22 ) }
    dend_10 { pt3dadd( 12.6276, 335.126, -38.1897, 0.22 ) }
    dend_10 { pt3dadd( 12.6503, 335.595, -38.1936, 0.81 ) }
    dend_10 { pt3dadd( 12.6695, 335.923, -38.1847, 1.03 ) }
    dend_10 { pt3dadd( 12.7483, 336.892, -38.1334, 0.22 ) }
    dend_10 { pt3dadd( 12.8666, 338.069, -38.0463, 0.22 ) }
    dend_10 { pt3dadd( 13.0023, 339.181, -37.938, 0.22 ) }
    dend_10 { pt3dadd( 13.0198, 339.294, -37.926, 0.22 ) }
    dend_10 { pt3dadd( 13.2007, 340.365, -37.8046, 0.22 ) }
    dend_10 { pt3dadd( 13.4021, 341.437, -37.6829, 0.81 ) }
    dend_10 { pt3dadd( 13.4172, 341.502, -37.6742, 0.81 ) }
    dend_10 { pt3dadd( 13.5312, 341.934, -37.6115, 0.81 ) }
    dend_10 { pt3dadd( 13.7637, 342.86, -37.4693, 0.22 ) }
    dend_10 { pt3dadd( 13.8651, 343.345, -37.3986, 0.22 ) }
    dend_10 { pt3dadd( 13.9898, 344.114, -37.3027, 0.88 ) }
    dend_10 { pt3dadd( 14.2293, 345.677, -37.0505, 0.22 ) }
    dend_10 { pt3dadd( 14.3256, 346.337, -36.9343, 0.22 ) }
    dend_10 { pt3dadd( 14.3356, 346.408, -36.9209, 0.22 ) }
    dend_10 { pt3dadd( 14.4318, 347.176, -36.7702, 0.22 ) }
    dend_10 { pt3dadd( 14.444, 347.269, -36.7531, 0.22 ) }
    dend_10 { pt3dadd( 14.6007, 348.415, -36.5838, 0.22 ) }
    dend_10 { pt3dadd( 14.7532, 349.327, -36.4986, 1.03 ) }
    dend_10 { pt3dadd( 14.8358, 349.699, -36.4765, 1.33 ) }
    dend_10 { pt3dadd( 14.9372, 350.157, -36.4585, 1.33 ) }
    dend_10 { pt3dadd( 15.0805, 350.785, -36.4437, 0.74 ) }
    dend_10 { pt3dadd( 15.3931, 352.238, -36.41, 0.22 ) }
    dend_10 { pt3dadd( 15.4859, 352.704, -36.4039, 0.22 ) }
    dend_10 { pt3dadd( 15.6449, 353.464, -36.3869, 0.81 ) }
    dend_10 { pt3dadd( 15.8891, 354.615, -36.3538, 0.22 ) }
    dend_10 { pt3dadd( 15.9009, 354.667, -36.3524, 0.22 ) }
    dend_10 { pt3dadd( 16.028, 355.223, -36.334, 0.66 ) }
    dend_10 { pt3dadd( 16.1256, 355.662, -36.3159, 0.66 ) }
    dend_10 { pt3dadd( 16.4664, 357.168, -36.2528, 0.22 ) }
    dend_10 { pt3dadd( 16.4826, 357.241, -36.2514, 0.22 ) }
    dend_10 { pt3dadd( 16.7442, 358.374, -36.2584, 0.22 ) }
    dend_10 { pt3dadd( 16.7573, 358.434, -36.2603, 0.22 ) }
    dend_10 { pt3dadd( 16.979, 359.532, -36.3186, 1.03 ) }
    dend_10 { pt3dadd( 17.0834, 360.098, -36.3514, 1.47 ) }
    dend_10 { pt3dadd( 17.3036, 361.421, -36.4373, 0.22 ) }
    dend_10 { pt3dadd( 17.3535, 361.738, -36.4592, 0.22 ) }
    dend_10 { pt3dadd( 17.4493, 362.381, -36.5073, 0.44 ) }
    dend_10 { pt3dadd( 17.4881, 362.642, -36.5283, 0.66 ) }
    dend_10 { pt3dadd( 17.4975, 362.706, -36.5338, 0.66 ) }
    dend_10 { pt3dadd( 17.5423, 363.03, -36.557, 0.66 ) }
    dend_10 { pt3dadd( 17.6577, 364.142, -36.5882, 0.15 ) }
    dend_10 { pt3dadd( 17.6971, 364.787, -36.5933, 0.74 ) }
    dend_10 { pt3dadd( 17.7054, 365.019, -36.5915, 0.96 ) }
    dend_10 { pt3dadd( 17.7087, 365.081, -36.5924, 0.96 ) }
    dend_10 { pt3dadd( 17.7273, 365.363, -36.5992, 0.96 ) }
    dend_10 { pt3dadd( 17.8049, 366.4, -36.6339, 0.22 ) }
    dend_10 { pt3dadd( 17.8867, 367.18, -36.6701, 0.52 ) }
    dend_10 { pt3dadd( 17.9316, 367.487, -36.6901, 0.52 ) }
    dend_10 { pt3dadd( 18.1795, 368.836, -36.7972, 0.22 ) }
    dend_10 { pt3dadd( 18.3098, 369.406, -36.8508, 0.52 ) }
    dend_10 { pt3dadd( 18.3425, 369.52, -36.8653, 0.52 ) }
    dend_10 { pt3dadd( 18.646, 370.433, -37.0065, 0.22 ) }
    dend_10 { pt3dadd( 18.8878, 371.234, -37.1715, 1.11 ) }
    dend_10 { pt3dadd( 18.9493, 371.472, -37.2338, 1.33 ) }
    dend_10 { pt3dadd( 19.0596, 371.963, -37.3778, 1.03 ) }
    dend_10 { pt3dadd( 19.2328, 372.81, -37.6393, 0.22 ) }
    dend_10 { pt3dadd( 19.316, 373.249, -37.7763, 0.59 ) }
    dend_10 { pt3dadd( 19.4826, 374.297, -38.0956, 0.15 ) }
    dend_10 { pt3dadd( 19.6645, 375.703, -38.4827, 0.22 ) }
    dend_10 { pt3dadd( 19.77, 376.688, -38.7192, 0.96 ) }
    dend_10 { pt3dadd( 19.7891, 376.947, -38.7752, 1.25 ) }
    dend_10 { pt3dadd( 19.815, 377.397, -38.8596, 1.25 ) }
    dend_10 { pt3dadd( 19.9001, 378.781, -39.0851, 0.22 ) }
    dend_10 { pt3dadd( 19.9574, 379.598, -39.1829, 0.22 ) }
    dend_10 { pt3dadd( 19.9905, 380.408, -39.2669, 0.74 ) }
    dend_10 { pt3dadd( 20.0017, 380.911, -39.3173, 0.96 ) }
    dend_10 { pt3dadd( 20.012, 381.229, -39.3462, 0.96 ) }
    dend_10 { pt3dadd( 20.0326, 381.547, -39.3709, 0.81 ) }
    dend_10 { pt3dadd( 20.0402, 381.618, -39.375, 0.81 ) }
    dend_10 { pt3dadd( 20.0854, 382.007, -39.3915, 0.66 ) }
    dend_10 { pt3dadd( 20.1749, 382.793, -39.4077, 0.22 ) }
    dend_10 { pt3dadd( 20.2584, 383.632, -39.4067, 0.22 ) }
    dend_10 { pt3dadd( 20.3243, 384.535, -39.4008, 1.03 ) }
    dend_10 { pt3dadd( 20.3444, 384.909, -39.397, 1.03 ) }
    dend_10 { pt3dadd( 20.3667, 385.417, -39.3913, 0.81 ) }
    dend_10 { pt3dadd( 20.4049, 386.274, -39.384, 0.22 ) }
    dend_10 { pt3dadd( 20.484, 387.29, -39.3881, 0.22 ) }
    dend_10 { pt3dadd( 20.5594, 387.915, -39.3954, 0.81 ) }
    dend_10 { pt3dadd( 20.5682, 387.968, -39.3962, 0.81 ) }
    dend_10 { pt3dadd( 20.6622, 388.405, -39.4123, 0.81 ) }
    dend_10 { pt3dadd( 20.925, 389.404, -39.4693, 0.22 ) }
    dend_10 { pt3dadd( 21.145, 390.183, -39.5241, 0.22 ) }
    dend_10 { pt3dadd( 21.315, 390.805, -39.6006, 0.22 ) }
    dend_10 { pt3dadd( 21.3344, 390.908, -39.6159, 0.22 ) }
    dend_10 { pt3dadd( 21.4043, 391.491, -39.7197, 0.66 ) }
    dend_10 { pt3dadd( 21.4345, 391.933, -39.8176, 1.03 ) }
    dend_10 { pt3dadd( 21.4406, 392.389, -39.9352, 1.18 ) }
    dend_10 { pt3dadd( 21.4215, 393.108, -40.1329, 1.03 ) }
    dend_10 { pt3dadd( 21.3727, 394.165, -40.4572, 0.22 ) }
    dend_10 { pt3dadd( 21.3435, 394.889, -40.6887, 0.22 ) }
    dend_10 { pt3dadd( 21.3419, 395.445, -40.8783, 0.22 ) }
    dend_10 { pt3dadd( 21.3436, 395.495, -40.8955, 0.22 ) }
    dend_10 { pt3dadd( 21.3931, 396.146, -41.1173, 0.96 ) }
    dend_10 { pt3dadd( 21.438, 396.688, -41.2785, 0.96 ) }
    dend_10 { pt3dadd( 21.4722, 397.065, -41.3944, 0.96 ) }
    dend_10 { pt3dadd( 21.5562, 398.202, -41.7064, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_10 { pt3dadd( 21.5894, 398.963, -41.9019, 0.22 ) }
    dend_10 { pt3dadd( 21.5977, 399.076, -41.9293, 0.22 ) }
    dend_10 { pt3dadd( 21.6668, 399.747, -42.0833, 0.22 ) }
    dend_10 { pt3dadd( 21.7414, 400.307, -42.2004, 0.88 ) }
    dend_10 { pt3dadd( 21.8234, 400.872, -42.3149, 0.88 ) }
    dend_10 { pt3dadd( 22.0195, 402.091, -42.5532, 0.22 ) }
    dend_10 { pt3dadd( 22.2213, 403.187, -42.7682, 0.22 ) }
    dend_10 { pt3dadd( 22.2515, 403.326, -42.7963, 0.22 ) }
    dend_10 { pt3dadd( 22.3743, 403.819, -42.8981, 0.88 ) }
    dend_10 { pt3dadd( 22.4996, 404.315, -42.9916, 0.88 ) }
    dend_10 { pt3dadd( 22.7344, 405.199, -43.1486, 0.22 ) }
    dend_10 { pt3dadd( 22.9385, 405.942, -43.2701, 0.81 ) }
    dend_10 { pt3dadd( 23.1014, 406.735, -43.389, 0.15 ) }
    dend_10 { pt3dadd( 23.1121, 406.797, -43.3977, 0.15 ) }
    dend_10 { pt3dadd( 23.2163, 407.562, -43.5115, 0.81 ) }
    dend_10 { pt3dadd( 23.2702, 408.006, -43.5781, 0.81 ) }
    dend_10 { pt3dadd( 23.3922, 408.991, -43.7301, 0.22 ) }
    dend_10 { pt3dadd( 23.4896, 409.761, -43.8562, 0.22 ) }
    dend_10 { pt3dadd( 23.4971, 409.824, -43.8686, 0.22 ) }
    dend_10 { pt3dadd( 23.6501, 410.964, -44.1266, 0.22 ) }
    dend_10 { pt3dadd( 23.7707, 411.82, -44.3747, 1.18 ) }
    dend_10 { pt3dadd( 23.8432, 412.288, -44.528, 1.33 ) }
    dend_10 { pt3dadd( 23.8852, 412.529, -44.6132, 1.33 ) }
    dend_10 { pt3dadd( 24.1543, 414.081, -45.1857, 0.22 ) }
    dend_10 { pt3dadd( 24.2463, 414.677, -45.4053, 0.52 ) }
    dend_10 { pt3dadd( 24.4102, 415.901, -45.8477, 0.22 ) }
    dend_10 { pt3dadd( 24.4608, 416.327, -45.998, 0.59 ) }
    dend_10 { pt3dadd( 24.4951, 416.633, -46.0991, 0.59 ) }
    dend_10 { pt3dadd( 24.6792, 418.218, -46.5689, 0.22 ) }
    dend_10 { pt3dadd( 24.6872, 418.28, -46.5837, 0.22 ) }
    dend_10 { pt3dadd( 24.75, 418.846, -46.7036, 0.22 ) }
    dend_10 { pt3dadd( 24.8113, 419.48, -46.8028, 0.81 ) }
    dend_10 { pt3dadd( 24.8385, 419.806, -46.8503, 1.03 ) }
    dend_10 { pt3dadd( 24.8592, 420.058, -46.892, 1.03 ) }
    dend_10 { pt3dadd( 24.8893, 420.502, -46.9912, 0.44 ) }
    dend_10 { pt3dadd( 24.9444, 421.644, -47.3034, 0.22 ) }
    dend_10 { pt3dadd( 24.9583, 422.341, -47.5253, 0.22 ) }
    dend_10 { pt3dadd( 24.9528, 423.031, -47.7675, 0.74 ) }
    dend_10 { pt3dadd( 24.9346, 423.566, -47.9623, 0.74 ) }
    dend_10 { pt3dadd( 24.8734, 424.788, -48.428, 0.22 ) }
    dend_10 { pt3dadd( 24.8696, 424.844, -48.4515, 0.22 ) }
    dend_10 { pt3dadd( 24.8422, 425.227, -48.6185, 0.22 ) }
    dend_10 { pt3dadd( 24.7976, 425.819, -48.8878, 0.88 ) }
    dend_10 { pt3dadd( 24.7751, 426.166, -49.0297, 1.18 ) }
    dend_10 { pt3dadd( 24.7514, 426.773, -49.2296, 1.18 ) }
    dend_10 { pt3dadd( 24.7569, 428.239, -49.6251, 0.22 ) }
    dend_10 { pt3dadd( 24.7594, 428.312, -49.6432, 0.22 ) }
    dend_10 { pt3dadd( 24.7921, 428.862, -49.7591, 0.22 ) }
    dend_10 { pt3dadd( 24.813, 429.438, -49.8487, 0.74 ) }
    dend_10 { pt3dadd( 24.8091, 429.821, -49.8858, 0.96 ) }
    dend_10 { pt3dadd( 24.7586, 430.22, -49.8982, 0.96 ) }
    dend_10 { pt3dadd( 24.73, 430.352, -49.8974, 0.96 ) }
    dend_10 { pt3dadd( 24.4781, 431.367, -49.9167, 0.22 ) }
    dend_10 { pt3dadd( 24.2654, 432.168, -49.9473, 0.59 ) }
    dend_10 { pt3dadd( 24.1529, 432.571, -49.9974, 0.59 ) }
    dend_10 { pt3dadd( 23.8297, 433.77, -50.1926, 0.22 ) }
    dend_10 { pt3dadd( 23.6749, 434.432, -50.3293, 0.22 ) }
    dend_10 { pt3dadd( 23.5511, 435.058, -50.4824, 1.25 ) }
    dend_10 { pt3dadd( 23.4666, 435.627, -50.648, 1.33 ) }
    dend_10 { pt3dadd( 23.3325, 437.244, -51.1768, 0.22 ) }
    dend_10 { pt3dadd( 23.3101, 437.677, -51.3261, 0.66 ) }
    dend_10 { pt3dadd( 23.3002, 438.43, -51.5911, 0.22 ) }
    dend_10 { pt3dadd( 23.2997, 438.488, -51.6115, 0.22 ) }
    dend_10 { pt3dadd( 23.2912, 439.099, -51.8244, 0.74 ) }
    dend_10 { pt3dadd( 23.2901, 439.527, -51.9665, 0.74 ) }
    dend_10 { pt3dadd( 23.3102, 440.588, -52.2612, 0.15 ) }
    dend_10 { pt3dadd( 23.3113, 441.152, -52.4056, 0.52 ) }
    dend_10 { pt3dadd( 23.3059, 441.338, -52.46, 0.52 ) }
    dend_10 { pt3dadd( 23.262, 442.274, -52.7535, 0.22 ) }
    dend_10 { pt3dadd( 23.2418, 442.646, -52.8774, 0.37 ) }
    dend_10 { pt3dadd( 23.2159, 443.141, -53.058, 0.15 ) }
    dend_10 { pt3dadd( 23.2053, 443.573, -53.231, 0.44 ) }
    dend_10 { pt3dadd( 23.1944, 444.932, -53.827, 0.22 ) }
    dend_10 { pt3dadd( 23.1979, 445.386, -54.0313, 0.74 ) }
    dend_10 { pt3dadd( 23.2035, 445.727, -54.1962, 0.96 ) }
    dend_10 { pt3dadd( 23.2187, 446.733, -54.7185, 0.22 ) }
    dend_10 { pt3dadd( 23.2268, 447.385, -55.0751, 0.22 ) }
    dend_10 { pt3dadd( 23.2454, 448.295, -55.5756, 0.81 ) }
    dend_10 { pt3dadd( 23.25, 448.55, -55.7118, 0.81 ) }
    dend_10 { pt3dadd( 23.2369, 449.554, -56.2388, 0.22 ) }
    dend_10 { pt3dadd( 23.2342, 449.611, -56.2675, 0.22 ) }
    dend_10 { pt3dadd( 23.1726, 450.393, -56.6404, 0.74 ) }
    dend_10 { pt3dadd( 23.1423, 450.689, -56.7733, 0.96 ) }
    dend_10 { pt3dadd( 22.9339, 452.386, -57.5112, 0.22 ) }
    dend_10 { pt3dadd( 22.8671, 453.152, -57.8429, 0.52 ) }
    dend_10 { pt3dadd( 22.8649, 453.221, -57.8708, 0.52 ) }
    dend_10 { pt3dadd( 22.8758, 453.558, -57.9991, 0.74 ) }
    dend_10 { pt3dadd( 22.8828, 453.616, -58.0204, 0.74 ) }
    dend_10 { pt3dadd( 22.9983, 454.2, -58.2334, 0.74 ) }
    dend_10 { pt3dadd( 23.2722, 455.176, -58.5714, 0.22 ) }
    dend_10 { pt3dadd( 23.5399, 455.992, -58.8484, 0.22 ) }
    dend_10 { pt3dadd( 23.7997, 456.754, -59.0709, 0.74 ) }
    dend_10 { pt3dadd( 24.1813, 457.871, -59.3442, 0.22 ) }
    dend_10 { pt3dadd( 24.3555, 458.406, -59.4394, 0.59 ) }
    dend_10 { pt3dadd( 24.3739, 458.465, -59.445, 0.59 ) }
    dend_10 { pt3dadd( 24.6295, 459.427, -59.4557, 0.22 ) }
    dend_10 { pt3dadd( 24.7713, 460.032, -59.4176, 0.66 ) }
    dend_10 { pt3dadd( 24.8318, 460.38, -59.375, 0.66 ) }
    dend_10 { pt3dadd( 24.9499, 461.296, -59.2242, 0.22 ) }
    dend_10 { pt3dadd( 25.0019, 461.694, -59.1348, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_10 { pt3dadd( 25.0538, 462.085, -59.0378, 0.44 ) }
    dend_10 { pt3dadd( 25.212, 463.329, -58.7043, 0.22 ) }
    dend_10 { pt3dadd( 25.3258, 463.983, -58.5094, 1.11 ) }
    dend_10 { pt3dadd( 25.4554, 464.579, -58.3109, 1.11 ) }
    dend_10 { pt3dadd( 25.9246, 466.413, -57.6236, 0.22 ) }
    dend_10 { pt3dadd( 26.0735, 466.94, -57.4098, 0.52 ) }
    dend_10 { pt3dadd( 26.0933, 467.004, -57.382, 0.52 ) }
    dend_10 { pt3dadd( 26.4991, 468.141, -56.8431, 0.22 ) }
    dend_10 { pt3dadd( 26.5354, 468.23, -56.8008, 0.22 ) }
    dend_10 { pt3dadd( 26.731, 468.66, -56.5976, 0.22 ) }
    dend_10 { pt3dadd( 26.9525, 469.103, -56.4287, 0.52 ) }
    dend_10 { pt3dadd( 27.227, 469.637, -56.2395, 0.15 ) }
    dend_10 { pt3dadd( 27.3995, 469.976, -56.1503, 0.29 ) }
    dend_10 { pt3dadd( 27.4376, 470.056, -56.1334, 0.29 ) }
    dend_10 { pt3dadd( 27.8533, 470.853, -55.9712, 0.15 ) }
    dend_10 { pt3dadd( 28.1013, 471.298, -55.8896, 0.44 ) }
    dend_10 { pt3dadd( 28.1646, 471.397, -55.8728, 0.44 ) }
    dend_10 { pt3dadd( 28.725, 472.206, -55.7444, 0.22 ) }
    dend_10 { pt3dadd( 29.2416, 472.923, -55.6488, 1.03 ) }
    dend_10 { pt3dadd( 29.5484, 473.324, -55.6153, 1.03 ) }
    dend_10 { pt3dadd( 30.002, 473.858, -55.6188, 0.37 ) }
    dend_10 { pt3dadd( 30.5203, 474.431, -55.6488, 0.29 ) }
    dend_10 { pt3dadd( 30.5631, 474.477, -55.6535, 0.29 ) }
    dend_10 { pt3dadd( 30.7502, 474.659, -55.6857, 0.81 ) }
    dend_10 { pt3dadd( 31.2037, 475.085, -55.7882, 0.81 ) }
    dend_10 { pt3dadd( 32.0122, 475.856, -55.9707, 0.22 ) }
    dend_10 { pt3dadd( 32.5641, 476.374, -56.0964, 0.22 ) }
    dend_10 { pt3dadd( 33.0031, 476.811, -56.198, 0.74 ) }
    dend_10 { pt3dadd( 33.4642, 477.267, -56.3046, 0.74 ) }
    dend_10 { pt3dadd( 36.0501, 485.694, -56.6018, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 30/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -18.3802, 280.421, 22.9484, 3.17 ) }
    dend_47 { pt3dadd( -19.174, 280.899, 23.735, 3.17 ) }
    dend_47 { pt3dadd( -21.415, 282.65, 26.3052, 0.44 ) }
    dend_47 { pt3dadd( -21.8556, 283.103, 26.8806, 0.74 ) }
    dend_47 { pt3dadd( -21.8946, 283.151, 26.9443, 0.74 ) }
    dend_47 { pt3dadd( -22.275, 283.636, 27.5843, 0.74 ) }
    dend_47 { pt3dadd( -22.3166, 283.689, 27.6488, 0.74 ) }
    dend_47 { pt3dadd( -23.0911, 284.903, 28.9563, 0.66 ) }
    dend_47 { pt3dadd( -23.3358, 285.592, 29.5877, 0.59 ) }
    dend_47 { pt3dadd( -23.8995, 287.281, 31.1918, 0.29 ) }
    dend_47 { pt3dadd( -24.0891, 287.819, 31.7746, 0.29 ) }
    dend_47 { pt3dadd( -24.5109, 288.682, 32.8659, 0.29 ) }
    dend_47 { pt3dadd( -24.7598, 289.071, 33.4195, 0.29 ) }
    dend_47 { pt3dadd( -25.94, 290.527, 35.7611, 1.55 ) }
    dend_47 { pt3dadd( -26.3947, 291.039, 36.6051, 1.92 ) }
    dend_47 { pt3dadd( -27.556, 292.416, 38.6259, 1.4 ) }
    dend_47 { pt3dadd( -28.2932, 293.309, 39.7968, 0.66 ) }
    dend_47 { pt3dadd( -28.877, 293.976, 40.6163, 0.66 ) }
    dend_47 { pt3dadd( -28.9116, 294.005, 40.6735, 0.66 ) }
    dend_47 { pt3dadd( -29.4821, 294.412, 41.6539, 0.59 ) }
    dend_47 { pt3dadd( -29.9307, 294.829, 42.7313, 0.59 ) }
    dend_47 { pt3dadd( -30.2953, 295.374, 44.146, 0.96 ) }
    dend_47 { pt3dadd( -30.3065, 295.404, 44.2119, 0.96 ) }
    dend_47 { pt3dadd( -31.1075, 298.17, 50.4439, 0.74 ) }
    dend_47 { pt3dadd( -31.2148, 298.537, 51.2784, 1.03 ) }
    dend_47 { pt3dadd( -31.3441, 298.984, 52.3734, 1.18 ) }
    dend_47 { pt3dadd( -31.5868, 299.699, 54.3395, 0.81 ) }
    dend_47 { pt3dadd( -31.8075, 300.047, 55.5681, 0.81 ) }
    dend_47 { pt3dadd( -31.8348, 300.068, 55.6492, 0.81 ) }
    dend_47 { pt3dadd( -32.5418, 300.186, 56.4419, 0.81 ) }
    dend_47 { pt3dadd( -32.6079, 300.181, 56.4995, 0.81 ) }
    dend_47 { pt3dadd( -33.8051, 300.006, 57.3929, 0.66 ) }
    dend_47 { pt3dadd( -36.5254, 299.482, 59.1757, 0.59 ) }
    dend_47 { pt3dadd( -37.3519, 299.327, 59.7241, 0.59 ) }
    dend_47 { pt3dadd( -37.422, 299.324, 59.777, 0.59 ) }
    dend_47 { pt3dadd( -38.1266, 299.493, 60.3539, 0.59 ) }
    dend_47 { pt3dadd( -38.6284, 299.782, 60.7761, 0.88 ) }
    dend_47 { pt3dadd( -38.6805, 299.838, 60.8183, 0.88 ) }
    dend_47 { pt3dadd( -39.3005, 300.696, 61.2397, 0.88 ) }
    dend_47 { pt3dadd( -40.5437, 302.231, 62.0265, 0.88 ) }
    dend_47 { pt3dadd( -41.5917, 303.133, 62.7654, 0.88 ) }
    dend_47 { pt3dadd( -41.6797, 303.187, 62.8312, 0.88 ) }
    dend_47 { pt3dadd( -42.5682, 303.551, 63.4769, 0.88 ) }
    dend_47 { pt3dadd( -42.7679, 303.613, 63.613, 0.88 ) }
    dend_47 { pt3dadd( -44.0483, 303.891, 64.4064, 0.88 ) }
    dend_47 { pt3dadd( -46.6362, 304.502, 65.771, 0.59 ) }
    dend_47 { pt3dadd( -46.7214, 304.531, 65.8141, 0.59 ) }
    dend_47 { pt3dadd( -47.375, 304.823, 66.1994, 0.88 ) }
    dend_47 { pt3dadd( -48.435, 305.344, 66.8687, 0.88 ) }
    dend_47 { pt3dadd( -49.1489, 305.742, 67.3306, 0.66 ) }
    dend_47 { pt3dadd( -50.4191, 306.505, 68.1331, 0.66 ) }
    dend_47 { pt3dadd( -51.4808, 307.088, 68.839, 1.03 ) }
    dend_47 { pt3dadd( -53.6841, 308.108, 70.4931, 1.03 ) }
    dend_47 { pt3dadd( -54.6084, 308.494, 71.2578, 0.96 ) }
    dend_47 { pt3dadd( -54.6788, 308.524, 71.3186, 0.96 ) }
    dend_47 { pt3dadd( -55.5254, 308.943, 72.0773, 0.74 ) }
    dend_47 { pt3dadd( -57.3355, 309.937, 73.7231, 0.52 ) }
    dend_47 { pt3dadd( -58.0656, 310.521, 74.364, 0.52 ) }
    dend_47 { pt3dadd( -58.7294, 311.436, 74.8591, 0.52 ) }
    dend_47 { pt3dadd( -59.5391, 313.246, 75.517, 0.74 ) }
    dend_47 { pt3dadd( -59.7965, 314.318, 75.7601, 0.52 ) }
    dend_47 { pt3dadd( -59.805, 314.498, 75.7796, 0.52 ) }
    dend_47 { pt3dadd( -59.662, 315.597, 75.7684, 0.66 ) }
    dend_47 { pt3dadd( -59.6368, 315.683, 75.7657, 0.66 ) }
    dend_47 { pt3dadd( -59.2534, 316.638, 75.7225, 0.66 ) }
    dend_47 { pt3dadd( -58.6051, 317.9, 75.6506, 0.59 ) }
    dend_47 { pt3dadd( -58.2171, 318.626, 75.6077, 0.59 ) }
    dend_47 { pt3dadd( -57.4874, 319.946, 75.5271, 0.44 ) }
    dend_47 { pt3dadd( -56.8726, 321.003, 75.4595, 0.66 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 99/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -18.3802, 280.421, 22.9484, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_46 { pt3dadd( -16.3168, 280.534, 24.511, 0.52 ) }
    dend_46 { pt3dadd( -16.2758, 280.53, 24.5474, 0.52 ) }
    dend_46 { pt3dadd( -15.339, 280.297, 25.5945, 0.74 ) }
    dend_46 { pt3dadd( -15.2296, 280.262, 25.7291, 0.74 ) }
    dend_46 { pt3dadd( -14.4645, 280.035, 26.6708, 0.74 ) }
    dend_46 { pt3dadd( -14.32, 279.997, 26.8445, 0.74 ) }
    dend_46 { pt3dadd( -13.3861, 279.692, 28.0683, 0.66 ) }
    dend_46 { pt3dadd( -12.3306, 279.391, 29.4663, 0.59 ) }
    dend_46 { pt3dadd( -12.2979, 279.383, 29.5097, 0.59 ) }
    dend_46 { pt3dadd( -11.649, 279.273, 30.317, 0.59 ) }
    dend_46 { pt3dadd( -11.3661, 279.251, 30.6613, 0.44 ) }
    dend_46 { pt3dadd( -10.7947, 279.261, 31.2758, 0.44 ) }
    dend_46 { pt3dadd( -10.7457, 279.273, 31.3155, 0.44 ) }
    dend_46 { pt3dadd( -10.088, 279.51, 31.6899, 0.66 ) }
    dend_46 { pt3dadd( -9.97873, 279.545, 31.7544, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 15/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 60.6922, 281.453, -51.6376, 0.29 ) }
    dend_13 { pt3dadd( 68.6776, 281.102, -54.9124, 0.29 ) }
    dend_13 { pt3dadd( 77.0401, 281.873, -56.9577, 0.29 ) }
    dend_13 { pt3dadd( 85.0623, 284.39, -59.1087, 0.29 ) }
    dend_13 { pt3dadd( 93.0052, 287.834, -60.0723, 0.29 ) }
    dend_13 { pt3dadd( 100.971, 290.006, -62.7141, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 60.6922, 281.453, -51.6376, 1.33 ) }
    dend_12 { pt3dadd( 71.7576, 281.268, -52.55, 0.29 ) }
    dend_12 { pt3dadd( 82.7124, 279.382, -52.3173, 0.29 ) }
    dend_12 { pt3dadd( 93.4361, 276.811, -53.8272, 0.29 ) }
    dend_12 { pt3dadd( 104.049, 276.121, -57.0274, 0.29 ) }
    dend_12 { pt3dadd( 114.775, 277.035, -59.7668, 0.29 ) }
    dend_12 { pt3dadd( 125.539, 278.013, -62.3356, 0.29 ) }
    dend_12 { pt3dadd( 136.614, 277.881, -63.1399, 0.29 ) }
    dend_12 { pt3dadd( 147.6, 278.988, -64.3663, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_32, dend_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_32, dend_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_0, axon_0, dend_32, dend_1, axon_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
    ModelViewParmSubset_5 = new SectionList()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_33 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_41 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_3 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_55 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_35 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_20 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_54 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_53 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_44 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_43 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_24 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_8 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_11 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_10 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_47 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_13 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_50 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_60 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_51 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_64 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_61 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_62 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_52 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_66 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_65 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_63 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_36 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_37 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_59 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_57 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_58 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_40 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_38 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_42 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_31 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_28 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_30 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_29 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_9 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_48 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_45 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_46 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_21 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_19 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_18 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_22 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_58, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_23, dend_23, dend_22, dend_22, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 3
    dend_25 nseg = 3
    dend_2 nseg = 5
    dend_41 nseg = 7
    dend_34 nseg = 5
    dend_27 nseg = 7
    dend_26 nseg = 3
    dend_14 nseg = 5
    dend_3 nseg = 3
    dend_55 nseg = 5
    dend_35 nseg = 3
    dend_20 nseg = 3
    dend_15 nseg = 3
    dend_7 nseg = 5
    dend_4 nseg = 3
    dend_54 nseg = 3
    dend_53 nseg = 5
    dend_44 nseg = 3
    dend_43 nseg = 7
    dend_24 nseg = 3
    dend_16 nseg = 3
    dend_8 nseg = 5
    dend_6 nseg = 5
    dend_5 nseg = 7
    dend_11 nseg = 3
    dend_10 nseg = 11
    dend_47 nseg = 5
    dend_13 nseg = 3
    dend_12 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_SBC_fc7c18ae57_0_0


