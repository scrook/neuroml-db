// Cell: cSTUT189_L23_LBC_222e20da8f_0_0
/*
{
  "id" : "cSTUT189_L23_LBC_222e20da8f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.09406, -10.5757, -0.444037, 2.91935", "-1.88817, -9.52414, -0.41304, 5.10932", "-1.68229, -8.4726, -0.382043, 5.77485", "-1.47641, -7.42107, -0.351047, 6.01078", "-1.27053, -6.36953, -0.32005, 6.04996", "-1.06465, -5.318, -0.289053, 5.93407", "-0.858767, -4.26646, -0.258056, 6.24426", "-0.652886, -3.21492, -0.22706, 7.35421", "-0.447004, -2.16339, -0.196063, 8.45604", "-0.241123, -1.11185, -0.165066, 9.12005", "-0.0352414, -0.0603167, -0.134069, 9.36575", "0.17064, 0.991219, -0.103072, 9.61145", "0.376522, 2.04276, -0.0720756, 10.2138", "0.582403, 3.09429, -0.0410789, 11.1588", "0.788285, 4.14583, -0.0100821, 11.7442", "0.994166, 5.19736, 0.0209147, 11.9266", "1.20005, 6.2489, 0.0519115, 11.3882", "1.40593, 7.30044, 0.0829083, 10.504", "1.61181, 8.35197, 0.113905, 8.36092", "1.81769, 9.40351, 0.144902, 5.9148", "2.02357, 10.455, 0.175899, 4.32325" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.84106, -10.1145, -0.116561, 1.66", "-11.4399, -12.6567, -0.116561, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.25894, 8.34581, 7.64344, 1.94", "10.4293, 9.94612, 7.64344, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.69106, 7.61807, -8.61656, 2.77", "-5.1529, 8.20738, -8.61656, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.56106, -10.75, -0.116561, 3.32", "-0.457757, -14.7569, -0.116561, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.02357, 10.455, 0.175899, 0.621629", "4.90572, 25.1755, 0.175899, 0.621629", "7.78786, 39.896, 0.175899, 0.621629" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-11.4399, -12.6567, -0.116561, 0.83", "-12.1833, -15.5564, 1.41884, 0.83", "-12.978, -18.6557, 3.05991, 0.83", "-13.9177, -22.3207, 5.00054, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.4399, -12.6567, -0.116561, 1.66", "-17.3239, -14.462, 4.91807, 1.66", "-22.4073, -16.0217, 9.26761, 1.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "10.4293, 9.94612, 7.64344, 1.38", "11.0841, 13.3622, 14.3057, 1.38", "11.3798, 14.9045, 17.3135, 1.38", "11.6578, 16.3548, 20.1419, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "10.4293, 9.94612, 7.64344, 1.11", "12.6597, 10.3909, 11.01, 1.11", "13.825, 10.6233, 12.769, 1.11", "15.8167, 11.0205, 15.7752, 1.38", "19.2457, 11.7044, 20.951, 1.38" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-5.1529, 8.20738, -8.61656, 0.83", "-6.17368, 7.06258, -13.2608, 0.83", "-6.83469, 6.41988, -15.9303, 0.83", "-7.25446, 5.94085, -17.4701, 1.11", "-8.41673, 4.68378, -21.2636, 0.83", "-9.40816, 3.61152, -24.4995, 0.83", "-12.4093, 0.365553, -34.295, 0.83", "-13.4074, -0.859639, -37.7183, 0.83", "-14.9579, -2.87121, -43.4858, 0.55", "-15.4607, -3.47594, -45.2486, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.1529, 8.20738, -8.61656, 1.38", "-6.52341, 10.7317, -9.21277, 1.38", "-8.31592, 14.0332, -9.99256, 1.38", "-10.7277, 18.4755, -11.0418, 1.38" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.457757, -14.7569, -0.116561, 0.83", "0.741434, -15.4543, -0.875216, 0.83", "1.64114, -15.9776, -1.4444, 0.83", "3.84361, -17.2585, -2.83777, 0.83", "5.03486, -17.9513, -3.5914, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.457757, -14.7569, -0.116561, 1.94", "-1.76038, -18.9301, -7.24226, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "7.78786, 39.896, 0.175899, 0.28", "10.67, 54.6165, 0.175899, 0.28", "13.5522, 69.337, 0.175899, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-13.9177, -22.3207, 5.00054, 0.55", "-15.2681, -22.3414, 5.87679, 0.55", "-15.9171, -22.4082, 6.40828, 0.55", "-16.2405, -22.434, 6.71172, 0.83", "-17.543, -22.5297, 7.92611, 0.55", "-20.5564, -22.5942, 11.0615, 0.55", "-23.5189, -22.6302, 14.2867, 0.55", "-25.8439, -22.6051, 16.968, 0.83", "-28.5907, -22.5768, 20.3234, 0.28", "-29.3427, -22.5741, 21.2913, 0.83", "-33.6002, -22.5746, 27.08, 0.55", "-34.5106, -22.5542, 28.3744, 0.28", "-35.2856, -22.5108, 29.4781, 0.55", "-36.8844, -22.3366, 31.7743, 0.28", "-37.6384, -22.2954, 32.9176, 0.55", "-42.7223, -21.512, 37.9598, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-13.9177, -22.3207, 5.00054, 0.55", "-14.0858, -28.5233, 9.25696, 0.55", "-13.9361, -34.5935, 13.097, 0.55", "-13.6659, -38.9059, 15.6286, 0.28", "-13.3714, -42.1021, 17.4777, 0.83", "-13.153, -44.4993, 18.9041, 0.55", "-13.0235, -45.7937, 19.7088, 0.55", "-12.7146, -48.3991, 21.2201, 0.55", "-12.2714, -50.722, 22.548, 0.55", "-11.8208, -53.2422, 23.9832, 0.28", "-11.4233, -56.7994, 26.0301, 0.83", "-11.3127, -59.0347, 27.2635, 0.28", "-11.2844, -61.3214, 28.4174, 0.83", "-11.3253, -63.9401, 29.5764, 0.28", "-11.3796, -65.7342, 30.2409, 0.83", "-11.4963, -68.7825, 31.1312, 0.28", "-11.5519, -71.2822, 31.7655, 0.83", "-11.5941, -73.6809, 32.3618, 0.28", "-11.5344, -75.9706, 33.1747, 0.83", "-11.2464, -78.82, 34.6453, 0.28", "-11.0115, -79.9597, 35.4671, 0.55", "-10.0929, -82.8397, 38.2027, 0.28", "-9.56594, -84.1439, 39.836, 0.55", "-8.06469, -87.2383, 44.4106, 0.28", "-7.17636, -88.6806, 47.0177, 0.83", "-6.25691, -89.7598, 49.5005, 0.28", "-5.92083, -90.0643, 50.3991, 0.55", "-4.63354, -90.786, 53.9233, 0.28", "-2.46808, -98.9657, 59.7285, 0.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-22.4073, -16.0217, 9.26761, 0.55", "-24.8517, -24.6469, 10.155, 0.55", "-26.5361, -30.5907, 10.7665, 0.55", "-28.7174, -38.2875, 11.5583, 0.55", "-29.5718, -41.3023, 11.8684, 0.55", "-30.7362, -45.4109, 12.2911, 0.55", "-33.3518, -54.6403, 13.2406, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.4073, -16.0217, 9.26761, 1.38", "-27.5041, -15.8638, 14.6366, 1.38", "-30.0656, -15.7844, 17.3348, 1.38" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "11.6578, 16.3548, 20.1419, 0.83", "9.15176, 19.8082, 13.3463, 0.83", "4.63174, 27.7617, 4.62804, 0.83", "-0.781048, 36.454, -2.82496, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "11.6578, 16.3548, 20.1419, 0.83", "12.1616, 19.4494, 21.3819, 0.83", "12.495, 22.5836, 22.6538, 0.83", "12.6816, 25.8628, 23.9994, 0.83", "12.9317, 29.0363, 25.4531, 0.83", "13.3356, 33.3272, 27.3857, 0.83", "13.5632, 36.6927, 28.9021, 0.83", "13.6996, 39.4545, 30.22, 0.83", "13.7881, 43.1255, 31.9425, 0.83", "13.7457, 47.2541, 33.6166, 0.83", "13.6267, 49.5435, 34.4381, 0.83", "13.3182, 54.4194, 35.9565, 0.83", "13.046, 58.3199, 36.7379, 0.55", "12.7632, 61.6987, 37.0755, 0.55", "12.3482, 65.7065, 37.129, 0.55", "11.9771, 68.1162, 37.0278, 0.55", "11.4339, 71.2408, 36.9255, 0.55", "10.6265, 75.6653, 36.7302, 0.55", "10.3648, 76.8393, 36.7558, 0.55", "10.0717, 78.1765, 36.9549, 0.55", "9.6321, 80.017, 37.4914, 0.55", "8.85211, 83.1573, 38.6576, 0.28", "8.09347, 85.9636, 39.976, 0.55", "7.38728, 88.7668, 41.5411, 0.28", "7.0773, 90.104, 42.2898, 0.55", "6.60403, 92.495, 43.5958, 0.28", "6.35411, 94.2903, 44.5717, 0.55", "6.23996, 95.2174, 45.1244, 0.83", "6.04028, 96.7129, 46.0243, 0.28", "5.87852, 97.7092, 46.6852, 0.55", "5.64582, 99.1519, 47.5554, 0.28", "5.26945, 101.387, 48.782, 0.55", "4.76706, 104.283, 50.136, 0.28", "4.47667, 105.964, 50.8181, 0.55", "3.70572, 110.279, 52.346, 0.28", "3.19519, 113.358, 53.2468, 0.28", "2.65269, 116.9, 54.1261, 0.28", "1.23033, 126.496, 56.0781, 0.28", "-0.0102685, 135.01, 57.4576, 0.28", "-0.302807, 137.021, 57.6956, 0.55", "-1.22882, 143.695, 58.1507, 0.28", "-1.67281, 146.838, 58.1641, 0.28", "-2.17835, 150.33, 57.7469, 0.28", "-2.45897, 152.15, 57.1846, 0.55", "-2.9163, 155.193, 55.7891, 0.28", "-3.02303, 156.282, 55.2736, 0.55", "-3.28758, 161.69, 52.4649, 0.28", "-3.19277, 163.155, 52.088, 0.55", "-3.01074, 164.519, 51.9752, 0.28", "-2.84669, 165.552, 51.9697, 0.55", "-1.69297, 171.799, 52.4642, 0.28", "-1.40797, 173.185, 52.6668, 0.55", "1.4521, 184.708, 55.4726, 0.28", "1.70599, 185.698, 55.7396, 0.55", "0.922565, 197.469, 58.4279, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "19.2457, 11.7044, 20.951, 0.83", "20.2274, 12.2275, 22.2347, 0.83", "21.2238, 12.7899, 23.5179, 0.83", "22.8439, 13.7595, 25.8307, 0.83", "24.2822, 14.6702, 27.9211, 0.83", "25.7606, 15.7561, 30.1667, 0.83", "27.5813, 17.3606, 33.1364, 0.83", "28.3083, 18.1224, 34.4248, 1.11", "29.7215, 19.8787, 37.1733, 0.83", "30.7021, 21.327, 39.3556, 1.11", "31.7734, 23.0608, 42.1356, 0.83", "32.8561, 24.868, 45.1908, 0.55", "33.2619, 25.5714, 46.3554, 0.83", "34.6236, 28.0631, 50.4941, 0.55", "35.6227, 29.9179, 53.5807, 0.55", "36.029, 30.6593, 54.9485, 0.28", "36.6893, 31.5985, 57.0455, 0.55", "38.2404, 34.8936, 65.5555, 0.55", "39.8801, 39.2039, 73.5953, 0.55", "41.9821, 43.4347, 81.5701, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "19.2457, 11.7044, 20.951, 0.83", "20.5802, 9.76268, 22.2885, 0.83", "21.7312, 8.16656, 23.3828, 0.83", "24.0534, 5.05627, 25.4629, 0.83", "26.1618, 2.15918, 27.2597, 0.83", "27.4254, 0.273462, 28.3653, 0.55", "28.1417, -0.893589, 29.0422, 0.55", "28.5366, -1.53508, 29.5131, 0.55", "29.2349, -2.76212, 30.639, 0.55", "30.2518, -4.72563, 33.0679, 0.55", "30.9291, -6.03414, 35.3597, 0.55", "31.8149, -7.78229, 39.065, 0.55", "33.1786, -10.3784, 45.8792, 0.55", "33.6624, -11.2377, 48.6439, 0.55", "34.6516, -12.7783, 54.5337, 0.55", "35.5798, -14.018, 60.3785, 0.55", "36.0278, -14.5056, 63.2299, 0.55", "36.7561, -15.1765, 68.1829, 0.28", "37.1312, -15.5312, 70.6985, 0.55", "37.4579, -15.7607, 72.6766, 0.28", "40.2319, -18.1216, 82.068, 0.28", "42.5475, -20.8871, 91.4812, 0.28", "44.1385, -23.0261, 101.194, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.7277, 18.4755, -11.0418, 0.55", "-8.74127, 19.5155, -10.5794, 0.55", "-6.85121, 20.505, -10.1394, 0.55", "-5.40756, 21.2608, -9.80338, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.7277, 18.4755, -11.0418, 0.83", "-11.6211, 20.4356, -16.1942, 0.83", "-12.0571, 21.3923, -18.7092, 0.83", "-12.7349, 22.8796, -22.6185, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.03486, -17.9513, -3.5914, 0.55", "7.41095, -19.4068, -4.12176, 0.55", "10.7028, -21.3793, -4.87354, 0.55", "12.2466, -22.4219, -5.43082, 0.55", "16.7957, -25.4941, -7.07286, 0.55", "20.2711, -27.8412, -8.32735, 0.55", "22.6545, -29.4509, -9.18768, 0.55", "24.8991, -30.7651, -10.0913, 0.55", "29.6194, -33.2128, -12.2645, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.03486, -17.9513, -3.5914, 0.83", "7.14811, -18.4929, -4.0273, 0.83", "9.35106, -19.0576, -4.48169, 0.83", "12.1392, -19.7722, -5.0568, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-1.76038, -18.9301, -7.24226, 0.55", "-1.87678, -21.7235, -11.1812, 0.55", "-1.81353, -23.0933, -13.0884, 0.55", "-1.39433, -26.7575, -18.1431, 0.55", "-1.1485, -27.9812, -19.8221, 0.55", "-0.51186, -30.3834, -23.1077, 0.55", "-0.299627, -31.1919, -24.187, 0.55", "-0.00205507, -32.158, -25.3419, 0.55", "0.656708, -34.3624, -27.8974, 0.55", "1.34653, -36.4784, -30.1907, 0.55", "1.98282, -38.3237, -32.2637, 0.55", "2.6395, -40.505, -34.534, 0.55", "2.90945, -41.7289, -35.7671, 0.28", "2.99278, -42.3643, -36.3831, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-1.76038, -18.9301, -7.24226, 1.38", "-3.04319, -21.35, -7.74021, 1.38", "-4.10614, -23.3551, -8.15281, 1.38", "-4.9816, -25.0066, -8.49264, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-42.7223, -21.512, 37.9598, 0.28", "-48.3608, -21.2864, 44.7782, 0.28", "-55.2861, -22.6533, 50.1565, 0.28", "-62.1722, -24.0939, 55.5675, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-42.7223, -21.512, 37.9598, 0.55", "-48.697, -22.5233, 48.6004, 0.28", "-53.4872, -21.8855, 59.8346, 0.28", "-58.6618, -23.6697, 70.7981, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-33.3518, -54.6403, 13.2406, 0.28", "-35.9894, -57.9003, 13.9116, 0.28", "-39.0407, -61.4216, 14.6327, 0.28", "-40.1652, -62.6636, 14.9457, 0.55", "-43.8522, -66.8798, 16.7614, 0.28", "-45.1228, -68.368, 17.5446, 0.55", "-46.5879, -70.1068, 18.5312, 0.83", "-48.0441, -71.8158, 19.6355, 0.28", "-49.2721, -73.2625, 20.7735, 0.83", "-53.165, -77.8953, 25.0723, 0.28", "-53.7657, -78.6281, 25.9537, 0.83", "-54.3348, -79.3874, 26.9686, 0.55", "-55.1886, -80.7401, 28.9194, 0.83", "-60.1132, -89.5018, 32.203, 0.83" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-33.3518, -54.6403, 13.2406, 0.55", "-33.4023, -55.1855, 13.3475, 0.55", "-33.8264, -59.0316, 13.9479, 0.28", "-34.2003, -61.3741, 13.9176, 0.28", "-34.9409, -65.2406, 13.5163, 1.38", "-35.6557, -68.5397, 13.2711, 0.28", "-36.0825, -70.4465, 13.1506, 0.55", "-36.6382, -72.725, 12.9574, 0.83", "-38.1082, -78.539, 12.2067, 0.28", "-38.5405, -80.1678, 11.9624, 0.83", "-40.3982, -87.4399, 10.6988, 0.28", "-41.0816, -90.3472, 10.2207, 1.11", "-41.5727, -92.609, 9.84553, 0.28", "-42.3395, -95.8301, 9.22606, 0.83", "-43.222, -99.392, 8.51294, 0.28", "-43.9025, -101.94, 8.02645, 0.83", "-46.0821, -109.597, 6.50524, 0.28", "-46.7265, -111.834, 6.16789, 1.38", "-48.9765, -119.399, 5.3967, 0.28", "-49.5455, -121.367, 5.32131, 1.11", "-51.3731, -128.146, 5.40321, 0.28", "-51.6031, -129.13, 5.4652, 0.83", "-52.3497, -133.198, 5.99872, 0.28", "-52.6033, -135.824, 6.53248, 1.11", "-52.7592, -140.402, 7.68625, 0.28", "-52.808, -141.736, 8.03264, 0.55", "-52.935, -144.68, 8.80111, 0.28", "-52.9816, -145.315, 9.00283, 1.11", "-53.928, -154.636, 12.3475, 0.28", "-54.102, -156.184, 12.9415, 1.11", "-54.9218, -161.467, 15.1142, 0.28", "-55.2412, -163.347, 15.9478, 0.55", "-55.8675, -166.663, 17.5546, 0.28", "-56.1846, -168.11, 18.3024, 0.55", "-56.6992, -180.143, 19.689, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-30.0656, -15.7844, 17.3348, 0.55", "-31.7105, -16.6886, 17.9777, 0.55", "-33.8491, -17.7517, 19.0098, 0.55", "-35.1896, -18.3902, 19.6793, 0.83", "-36.5649, -19.0338, 20.377, 0.55", "-38.612, -20.0577, 21.4781, 0.55", "-40.7964, -21.2474, 22.6753, 0.83", "-42.6697, -22.3968, 23.7993, 0.55", "-43.6371, -23.1067, 24.4173, 0.55", "-44.6109, -23.9339, 25.0798, 0.83", "-45.8677, -25.1098, 25.9507, 0.28", "-46.842, -26.066, 26.5755, 1.11", "-48.4668, -27.7761, 27.6387, 0.28", "-49.2392, -28.5667, 28.1174, 1.11", "-51.1566, -30.3291, 29.254, 0.28", "-51.8629, -30.8874, 29.6316, 0.55", "-52.7066, -31.4325, 30.0092, 0.28", "-53.4612, -31.8447, 30.3051, 0.83", "-54.9067, -32.5181, 30.7601, 0.28", "-56.9729, -33.5432, 31.3167, 0.28", "-57.5683, -33.8669, 31.4302, 1.11", "-58.4228, -34.3455, 31.6356, 0.28", "-59.3089, -34.8555, 31.9302, 0.55", "-60.2446, -35.3768, 32.251, 0.28", "-61.3041, -35.9702, 32.6103, 0.83", "-62.1759, -36.4537, 33.0049, 0.28", "-63.8938, -37.4187, 33.8719, 0.28", "-65.4843, -38.3, 34.7999, 1.38", "-69.716, -40.6404, 37.4551, 0.28", "-70.5773, -41.1378, 38.09, 1.11", "-73.5656, -42.9459, 40.474, 0.28", "-74.0507, -43.2594, 40.8813, 0.83", "-76.5498, -44.9713, 43.1331, 0.28", "-76.7938, -45.1462, 43.3695, 1.11", "-81.385, -48.6943, 48.5857, 0.28", "-81.8819, -49.0817, 49.1579, 1.11", "-82.7336, -49.7676, 50.1084, 0.28", "-83.8958, -50.731, 51.439, 0.55", "-88.1654, -53.6428, 54.5322, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-30.0656, -15.7844, 17.3348, 0.83", "-32.7947, -14.9027, 15.9739, 0.83", "-37.4511, -13.5774, 13.5855, 0.83", "-41.6963, -12.3407, 11.3596, 0.83", "-47.322, -10.7547, 8.13001, 0.83", "-51.0212, -9.88, 5.85211, 0.83", "-54.9875, -9.02586, 3.40987, 0.83", "-57.6312, -8.46019, 1.62166, 0.55", "-58.8728, -8.15053, 0.709876, 0.55", "-62.2167, -7.42372, -1.82097, 0.55", "-66.3292, -6.73914, -5.23892, 0.55", "-67.9412, -6.45768, -6.72631, 0.55", "-71.8082, -5.7063, -10.8214, 0.55", "-73.9775, -5.31741, -13.414, 0.55", "-76.9629, -4.89983, -17.3633, 0.55", "-78.3591, -4.73015, -19.3987, 0.55", "-80.2676, -4.51754, -22.5154, 1.11", "-82.244, -4.55154, -26.6925, 0.55", "-83.8956, -4.92947, -31.5143, 0.55", "-84.6758, -5.3491, -35.4259, 0.55", "-84.7988, -5.44699, -36.2645, 0.55", "-84.9911, -5.6598, -38.0185, 0.55", "-85.4564, -6.92967, -47.531, 0.55", "-85.3999, -7.28532, -50.1214, 0.55", "-84.4948, -8.708, -60.7429, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.781048, 36.454, -2.82496, 0.55", "-3.16219, 41.7968, -9.28086, 0.55", "-4.94003, 47.8924, -15.277, 0.55", "-7.11858, 54.7305, -20.304, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.781048, 36.454, -2.82496, 0.55", "-4.15121, 41.6512, -8.82932, 0.55", "-6.19002, 47.5153, -14.8415, 0.55", "-6.83263, 53.4815, -21.0598, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.40756, 21.2608, -9.80338, 0.55", "-5.20841, 19.7401, -9.33971, 0.55", "-4.8479, 16.9873, -8.50037, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.40756, 21.2608, -9.80338, 0.55", "-4.61581, 24.7218, -10.674, 0.55", "-4.09784, 29.6495, -11.6274, 0.55", "-3.8424, 34.8023, -12.3091, 0.55", "-3.86122, 38.6285, -12.7017, 0.55", "-3.86684, 42.6699, -12.956, 0.55", "-3.98838, 47.5045, -13.1093, 0.55", "-4.56488, 54.4987, -13.0487, 0.55", "-5.38307, 60.6512, -12.6361, 0.55", "-5.97899, 64.002, -12.2928, 0.55", "-7.33699, 71.3924, -11.3461, 0.55", "-8.5405, 78.3268, -10.2507, 0.55", "-9.535, 83.6211, -9.37801, 0.55", "-10.2863, 88.1475, -8.57642, 0.55", "-10.8172, 91.9971, -7.98076, 0.55", "-11.0691, 95.9143, -7.6207, 0.55", "-11.3737, 101.07, -7.26939, 0.55", "-11.3134, 105.567, -7.09279, 0.55", "-10.975, 109.704, -7.10558, 0.55", "-10.1894, 114.927, -7.43263, 0.55", "-8.44335, 123.573, -8.40466, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-12.7349, 22.8796, -22.6185, 0.55", "-14.1704, 24.5306, -28.1943, 0.55", "-15.1295, 25.6336, -31.9195, 0.55", "-15.9245, 26.548, -35.0075, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-12.7349, 22.8796, -22.6185, 0.83", "-14.9049, 30.0794, -22.544, 0.83", "-16.0553, 33.8962, -22.3834, 0.55", "-17.3812, 37.6491, -22.2835, 0.55", "-18.3778, 40.4699, -22.2085, 0.55", "-19.7427, 44.3333, -22.1057, 0.55", "-21.1272, 48.252, -22.0014, 0.55", "-22.3591, 51.4598, -21.5745, 0.83", "-23.8983, 56.1836, -21.1082, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "29.6194, -33.2128, -12.2645, 0.28", "30.5143, -40.4465, -15.8667, 0.28", "30.7889, -42.6662, -16.972, 0.28", "31.052, -44.7926, -18.0309, 0.55", "31.5515, -48.8303, -20.0416, 0.28", "31.8493, -51.2373, -21.2401, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "29.6194, -33.2128, -12.2645, 0.55", "32.5898, -38.1286, -20.0824, 0.55", "33.1361, -39.0325, -21.52, 0.55", "34.441, -41.1921, -24.9545, 0.55", "35.5026, -42.9489, -27.7484, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "12.1392, -19.7722, -5.0568, 0.55", "14.3923, -19.3881, -7.22563, 0.55", "15.6925, -19.2839, -8.49926, 0.55", "17.2342, -19.1603, -10.0095, 0.55", "18.9942, -19.0192, -11.7337, 0.55", "21.7179, -18.8009, -14.4018, 0.28", "22.511, -18.7373, -15.1788, 0.83", "24.5843, -18.7167, -17.2342, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "12.1392, -19.7722, -5.0568, 0.55", "13.8313, -20.5983, -4.67365, 0.55", "15.4611, -21.2125, -4.33285, 0.55", "17.629, -21.8881, -3.88537, 0.55", "18.9284, -22.2849, -3.67989, 0.55", "20.8218, -22.9297, -3.28704, 0.55", "22.3276, -23.4649, -2.95108, 0.55", "25.0805, -24.3553, -2.29467, 0.55", "25.9909, -24.5729, -2.13285, 0.55", "28.7518, -24.9974, -1.76241, 0.55", "32.5674, -25.3626, -1.37527, 0.55", "34.5537, -25.4836, -1.15705, 0.55", "36.0622, -25.5092, -1.07907, 0.55", "40.6755, -25.4469, -0.915205, 0.28", "41.7404, -25.4504, -0.915847, 0.55", "43.0926, -25.4805, -0.938324, 0.55", "45.3117, -25.6519, -1.10933, 0.28", "49.0659, -26.2829, -1.16144, 0.55", "51.5652, -26.9405, -1.05071, 0.28", "54.7557, -28.1056, -0.6733, 0.28", "57.3669, -29.1197, -0.337704, 0.55", "58.9218, -29.7605, -0.146156, 0.28", "61.1077, -30.694, 0.121477, 0.28", "62.5064, -31.3148, 0.445448, 0.83", "64.3167, -32.1314, 0.820297, 0.55", "65.6702, -32.6173, 1.257, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.9816, -25.0066, -8.49264, 0.55", "-6.29971, -28.5203, -6.54004, 0.55", "-8.83963, -35.3087, -2.55367, 0.55", "-10.8923, -40.8665, 0.71903, 0.55", "-12.2057, -44.4224, 2.81292, 0.55", "-14.937, -51.8176, 7.16757, 0.55", "-16.7867, -56.8258, 10.1167, 0.55", "-17.6516, -59.3, 11.7273, 0.28", "-18.1197, -60.6243, 12.6398, 0.55", "-21.9804, -69.9096, 19.4446, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.9816, -25.0066, -8.49264, 0.83", "-5.64888, -26.2971, -12.3848, 0.83", "-6.51039, -27.6579, -16.2839, 0.83", "-7.54145, -29.0648, -19.9687, 0.83", "-8.79985, -30.619, -23.9436, 0.83", "-14.1475, -37.0719, -39.6927, 0.55", "-15.8283, -39.1002, -44.643, 0.55", "-16.9692, -40.5385, -47.935, 0.55", "-18.6562, -42.6124, -52.4481, 0.55", "-19.8825, -44.0071, -55.456, 0.55", "-20.6133, -44.753, -56.9467, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-23.8983, 56.1836, -21.1082, 0.55", "-26.2188, 57.3874, -18.3439, 0.55", "-28.5331, 58.7939, -15.4512, 0.55", "-29.6658, 59.5491, -13.8166, 0.55", "-31.2089, 60.5835, -11.548, 0.55", "-32.1006, 61.2513, -10.2646, 0.55", "-33.5669, 62.3493, -8.15434, 0.55", "-34.434, 63.1243, -6.77524, 0.55", "-37.3051, 65.9563, -2.07657, 0.28", "-37.6836, 66.3404, -1.40951, 0.28", "-39.078, 67.7132, 0.950036, 0.28" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-23.8983, 56.1836, -21.1082, 0.55", "-25.0971, 58.2017, -21.2431, 0.55", "-26.2413, 60.074, -21.2916, 0.55", "-28.1199, 63.3433, -21.2772, 0.55", "-29.2416, 65.5839, -21.2061, 0.55", "-30.5302, 68.398, -21.0778, 0.55", "-32.1537, 71.7566, -20.8715, 0.55", "-33.0736, 73.6191, -20.6863, 0.55", "-34.25, 75.818, -20.4429, 0.55", "-35.7515, 78.6706, -20.0426, 0.55", "-37.8595, 82.6321, -19.4761, 0.55", "-39.4504, 85.504, -19.114, 0.55", "-41.1088, 88.1129, -18.7854, 0.55", "-42.3658, 89.8872, -18.5744, 0.55", "-45.1505, 93.2971, -18.275, 0.55", "-46.1734, 94.483, -18.2525, 0.55", "-47.7126, 96.4318, -18.3683, 0.55", "-49.4322, 98.7173, -18.5804, 0.55", "-51.1833, 101.019, -18.8733, 0.55", "-53.2657, 103.932, -19.3248, 0.55", "-55.5923, 107.145, -20.0693, 0.55", "-57.3202, 109.756, -20.7677, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_24", "dend_13", "dend_0", "dend_41", "dend_34", "dend_28", "dend_25", "dend_23", "dend_14", "dend_6", "dend_1", "dend_43", "dend_42", "dend_38", "dend_35", "dend_30", "dend_29", "dend_27", "dend_26", "dend_20", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_45", "dend_44", "dend_40", "dend_39", "dend_37", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_24", "dend_13", "dend_0", "dend_41", "dend_34", "dend_28", "dend_25", "dend_23", "dend_14", "dend_6", "dend_1", "dend_43", "dend_42", "dend_38", "dend_35", "dend_30", "dend_29", "dend_27", "dend_26", "dend_20", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_45", "dend_44", "dend_40", "dend_39", "dend_37", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_24", "dend_13", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L23_LBC_222e20da8f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_31
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_24, dend_13, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_34, dend_34, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.45000163253668773)
    connect dend_24(0), soma_0(0.45000163253668773)
    connect dend_13(0), soma_0(0.45000163253668773)
    connect dend_0(0), soma_0(0.45000163253668773)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.09406, -10.5757, -0.444037, 2.91935 ) }
    soma_0 { pt3dadd( -1.88817, -9.52414, -0.41304, 5.10932 ) }
    soma_0 { pt3dadd( -1.68229, -8.4726, -0.382043, 5.77485 ) }
    soma_0 { pt3dadd( -1.47641, -7.42107, -0.351047, 6.01078 ) }
    soma_0 { pt3dadd( -1.27053, -6.36953, -0.32005, 6.04996 ) }
    soma_0 { pt3dadd( -1.06465, -5.318, -0.289053, 5.93407 ) }
    soma_0 { pt3dadd( -0.858767, -4.26646, -0.258056, 6.24426 ) }
    soma_0 { pt3dadd( -0.652886, -3.21492, -0.22706, 7.35421 ) }
    soma_0 { pt3dadd( -0.447004, -2.16339, -0.196063, 8.45604 ) }
    soma_0 { pt3dadd( -0.241123, -1.11185, -0.165066, 9.12005 ) }
    soma_0 { pt3dadd( -0.0352414, -0.0603167, -0.134069, 9.36575 ) }
    soma_0 { pt3dadd( 0.17064, 0.991219, -0.103072, 9.61145 ) }
    soma_0 { pt3dadd( 0.376522, 2.04276, -0.0720756, 10.2138 ) }
    soma_0 { pt3dadd( 0.582403, 3.09429, -0.0410789, 11.1588 ) }
    soma_0 { pt3dadd( 0.788285, 4.14583, -0.0100821, 11.7442 ) }
    soma_0 { pt3dadd( 0.994166, 5.19736, 0.0209147, 11.9266 ) }
    soma_0 { pt3dadd( 1.20005, 6.2489, 0.0519115, 11.3882 ) }
    soma_0 { pt3dadd( 1.40593, 7.30044, 0.0829083, 10.504 ) }
    soma_0 { pt3dadd( 1.61181, 8.35197, 0.113905, 8.36092 ) }
    soma_0 { pt3dadd( 1.81769, 9.40351, 0.144902, 5.9148 ) }
    soma_0 { pt3dadd( 2.02357, 10.455, 0.175899, 4.32325 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.84106, -10.1145, -0.116561, 1.66 ) }
    dend_33 { pt3dadd( -11.4399, -12.6567, -0.116561, 1.66 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.25894, 8.34581, 7.64344, 1.94 ) }
    dend_24 { pt3dadd( 10.4293, 9.94612, 7.64344, 1.94 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 25/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.69106, 7.61807, -8.61656, 2.77 ) }
    dend_13 { pt3dadd( -5.1529, 8.20738, -8.61656, 2.77 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.56106, -10.75, -0.116561, 3.32 ) }
    dend_0 { pt3dadd( -0.457757, -14.7569, -0.116561, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 29/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.02357, 10.455, 0.175899, 0.621629 ) }
    axon_0 { pt3dadd( 4.90572, 25.1755, 0.175899, 0.621629 ) }
    axon_0 { pt3dadd( 7.78786, 39.896, 0.175899, 0.621629 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -11.4399, -12.6567, -0.116561, 0.83 ) }
    dend_41 { pt3dadd( -12.1833, -15.5564, 1.41884, 0.83 ) }
    dend_41 { pt3dadd( -12.978, -18.6557, 3.05991, 0.83 ) }
    dend_41 { pt3dadd( -13.9177, -22.3207, 5.00054, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.4399, -12.6567, -0.116561, 1.66 ) }
    dend_34 { pt3dadd( -17.3239, -14.462, 4.91807, 1.66 ) }
    dend_34 { pt3dadd( -22.4073, -16.0217, 9.26761, 1.66 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 39/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 10.4293, 9.94612, 7.64344, 1.38 ) }
    dend_28 { pt3dadd( 11.0841, 13.3622, 14.3057, 1.38 ) }
    dend_28 { pt3dadd( 11.3798, 14.9045, 17.3135, 1.38 ) }
    dend_28 { pt3dadd( 11.6578, 16.3548, 20.1419, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 43/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 10.4293, 9.94612, 7.64344, 1.11 ) }
    dend_25 { pt3dadd( 12.6597, 10.3909, 11.01, 1.11 ) }
    dend_25 { pt3dadd( 13.825, 10.6233, 12.769, 1.11 ) }
    dend_25 { pt3dadd( 15.8167, 11.0205, 15.7752, 1.38 ) }
    dend_25 { pt3dadd( 19.2457, 11.7044, 20.951, 1.38 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -5.1529, 8.20738, -8.61656, 0.83 ) }
    dend_23 { pt3dadd( -6.17368, 7.06258, -13.2608, 0.83 ) }
    dend_23 { pt3dadd( -6.83469, 6.41988, -15.9303, 0.83 ) }
    dend_23 { pt3dadd( -7.25446, 5.94085, -17.4701, 1.11 ) }
    dend_23 { pt3dadd( -8.41673, 4.68378, -21.2636, 0.83 ) }
    dend_23 { pt3dadd( -9.40816, 3.61152, -24.4995, 0.83 ) }
    dend_23 { pt3dadd( -12.4093, 0.365553, -34.295, 0.83 ) }
    dend_23 { pt3dadd( -13.4074, -0.859639, -37.7183, 0.83 ) }
    dend_23 { pt3dadd( -14.9579, -2.87121, -43.4858, 0.55 ) }
    dend_23 { pt3dadd( -15.4607, -3.47594, -45.2486, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.1529, 8.20738, -8.61656, 1.38 ) }
    dend_14 { pt3dadd( -6.52341, 10.7317, -9.21277, 1.38 ) }
    dend_14 { pt3dadd( -8.31592, 14.0332, -9.99256, 1.38 ) }
    dend_14 { pt3dadd( -10.7277, 18.4755, -11.0418, 1.38 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.457757, -14.7569, -0.116561, 0.83 ) }
    dend_6 { pt3dadd( 0.741434, -15.4543, -0.875216, 0.83 ) }
    dend_6 { pt3dadd( 1.64114, -15.9776, -1.4444, 0.83 ) }
    dend_6 { pt3dadd( 3.84361, -17.2585, -2.83777, 0.83 ) }
    dend_6 { pt3dadd( 5.03486, -17.9513, -3.5914, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.457757, -14.7569, -0.116561, 1.94 ) }
    dend_1 { pt3dadd( -1.76038, -18.9301, -7.24226, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 7.78786, 39.896, 0.175899, 0.28 ) }
    axon_1 { pt3dadd( 10.67, 54.6165, 0.175899, 0.28 ) }
    axon_1 { pt3dadd( 13.5522, 69.337, 0.175899, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 72/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -13.9177, -22.3207, 5.00054, 0.55 ) }
    dend_43 { pt3dadd( -15.2681, -22.3414, 5.87679, 0.55 ) }
    dend_43 { pt3dadd( -15.9171, -22.4082, 6.40828, 0.55 ) }
    dend_43 { pt3dadd( -16.2405, -22.434, 6.71172, 0.83 ) }
    dend_43 { pt3dadd( -17.543, -22.5297, 7.92611, 0.55 ) }
    dend_43 { pt3dadd( -20.5564, -22.5942, 11.0615, 0.55 ) }
    dend_43 { pt3dadd( -23.5189, -22.6302, 14.2867, 0.55 ) }
    dend_43 { pt3dadd( -25.8439, -22.6051, 16.968, 0.83 ) }
    dend_43 { pt3dadd( -28.5907, -22.5768, 20.3234, 0.28 ) }
    dend_43 { pt3dadd( -29.3427, -22.5741, 21.2913, 0.83 ) }
    dend_43 { pt3dadd( -33.6002, -22.5746, 27.08, 0.55 ) }
    dend_43 { pt3dadd( -34.5106, -22.5542, 28.3744, 0.28 ) }
    dend_43 { pt3dadd( -35.2856, -22.5108, 29.4781, 0.55 ) }
    dend_43 { pt3dadd( -36.8844, -22.3366, 31.7743, 0.28 ) }
    dend_43 { pt3dadd( -37.6384, -22.2954, 32.9176, 0.55 ) }
    dend_43 { pt3dadd( -42.7223, -21.512, 37.9598, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 88/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -13.9177, -22.3207, 5.00054, 0.55 ) }
    dend_42 { pt3dadd( -14.0858, -28.5233, 9.25696, 0.55 ) }
    dend_42 { pt3dadd( -13.9361, -34.5935, 13.097, 0.55 ) }
    dend_42 { pt3dadd( -13.6659, -38.9059, 15.6286, 0.28 ) }
    dend_42 { pt3dadd( -13.3714, -42.1021, 17.4777, 0.83 ) }
    dend_42 { pt3dadd( -13.153, -44.4993, 18.9041, 0.55 ) }
    dend_42 { pt3dadd( -13.0235, -45.7937, 19.7088, 0.55 ) }
    dend_42 { pt3dadd( -12.7146, -48.3991, 21.2201, 0.55 ) }
    dend_42 { pt3dadd( -12.2714, -50.722, 22.548, 0.55 ) }
    dend_42 { pt3dadd( -11.8208, -53.2422, 23.9832, 0.28 ) }
    dend_42 { pt3dadd( -11.4233, -56.7994, 26.0301, 0.83 ) }
    dend_42 { pt3dadd( -11.3127, -59.0347, 27.2635, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -11.2844, -61.3214, 28.4174, 0.83 ) }
    dend_42 { pt3dadd( -11.3253, -63.9401, 29.5764, 0.28 ) }
    dend_42 { pt3dadd( -11.3796, -65.7342, 30.2409, 0.83 ) }
    dend_42 { pt3dadd( -11.4963, -68.7825, 31.1312, 0.28 ) }
    dend_42 { pt3dadd( -11.5519, -71.2822, 31.7655, 0.83 ) }
    dend_42 { pt3dadd( -11.5941, -73.6809, 32.3618, 0.28 ) }
    dend_42 { pt3dadd( -11.5344, -75.9706, 33.1747, 0.83 ) }
    dend_42 { pt3dadd( -11.2464, -78.82, 34.6453, 0.28 ) }
    dend_42 { pt3dadd( -11.0115, -79.9597, 35.4671, 0.55 ) }
    dend_42 { pt3dadd( -10.0929, -82.8397, 38.2027, 0.28 ) }
    dend_42 { pt3dadd( -9.56594, -84.1439, 39.836, 0.55 ) }
    dend_42 { pt3dadd( -8.06469, -87.2383, 44.4106, 0.28 ) }
    dend_42 { pt3dadd( -7.17636, -88.6806, 47.0177, 0.83 ) }
    dend_42 { pt3dadd( -6.25691, -89.7598, 49.5005, 0.28 ) }
    dend_42 { pt3dadd( -5.92083, -90.0643, 50.3991, 0.55 ) }
    dend_42 { pt3dadd( -4.63354, -90.786, 53.9233, 0.28 ) }
    dend_42 { pt3dadd( -2.46808, -98.9657, 59.7285, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 17/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -22.4073, -16.0217, 9.26761, 0.55 ) }
    dend_38 { pt3dadd( -24.8517, -24.6469, 10.155, 0.55 ) }
    dend_38 { pt3dadd( -26.5361, -30.5907, 10.7665, 0.55 ) }
    dend_38 { pt3dadd( -28.7174, -38.2875, 11.5583, 0.55 ) }
    dend_38 { pt3dadd( -29.5718, -41.3023, 11.8684, 0.55 ) }
    dend_38 { pt3dadd( -30.7362, -45.4109, 12.2911, 0.55 ) }
    dend_38 { pt3dadd( -33.3518, -54.6403, 13.2406, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.4073, -16.0217, 9.26761, 1.38 ) }
    dend_35 { pt3dadd( -27.5041, -15.8638, 14.6366, 1.38 ) }
    dend_35 { pt3dadd( -30.0656, -15.7844, 17.3348, 1.38 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 11.6578, 16.3548, 20.1419, 0.83 ) }
    dend_30 { pt3dadd( 9.15176, 19.8082, 13.3463, 0.83 ) }
    dend_30 { pt3dadd( 4.63174, 27.7617, 4.62804, 0.83 ) }
    dend_30 { pt3dadd( -0.781048, 36.454, -2.82496, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 11.6578, 16.3548, 20.1419, 0.83 ) }
    dend_29 { pt3dadd( 12.1616, 19.4494, 21.3819, 0.83 ) }
    dend_29 { pt3dadd( 12.495, 22.5836, 22.6538, 0.83 ) }
    dend_29 { pt3dadd( 12.6816, 25.8628, 23.9994, 0.83 ) }
    dend_29 { pt3dadd( 12.9317, 29.0363, 25.4531, 0.83 ) }
    dend_29 { pt3dadd( 13.3356, 33.3272, 27.3857, 0.83 ) }
    dend_29 { pt3dadd( 13.5632, 36.6927, 28.9021, 0.83 ) }
    dend_29 { pt3dadd( 13.6996, 39.4545, 30.22, 0.83 ) }
    dend_29 { pt3dadd( 13.7881, 43.1255, 31.9425, 0.83 ) }
    dend_29 { pt3dadd( 13.7457, 47.2541, 33.6166, 0.83 ) }
    dend_29 { pt3dadd( 13.6267, 49.5435, 34.4381, 0.83 ) }
    dend_29 { pt3dadd( 13.3182, 54.4194, 35.9565, 0.83 ) }
    dend_29 { pt3dadd( 13.046, 58.3199, 36.7379, 0.55 ) }
    dend_29 { pt3dadd( 12.7632, 61.6987, 37.0755, 0.55 ) }
    dend_29 { pt3dadd( 12.3482, 65.7065, 37.129, 0.55 ) }
    dend_29 { pt3dadd( 11.9771, 68.1162, 37.0278, 0.55 ) }
    dend_29 { pt3dadd( 11.4339, 71.2408, 36.9255, 0.55 ) }
    dend_29 { pt3dadd( 10.6265, 75.6653, 36.7302, 0.55 ) }
    dend_29 { pt3dadd( 10.3648, 76.8393, 36.7558, 0.55 ) }
    dend_29 { pt3dadd( 10.0717, 78.1765, 36.9549, 0.55 ) }
    dend_29 { pt3dadd( 9.6321, 80.017, 37.4914, 0.55 ) }
    dend_29 { pt3dadd( 8.85211, 83.1573, 38.6576, 0.28 ) }
    dend_29 { pt3dadd( 8.09347, 85.9636, 39.976, 0.55 ) }
    dend_29 { pt3dadd( 7.38728, 88.7668, 41.5411, 0.28 ) }
    dend_29 { pt3dadd( 7.0773, 90.104, 42.2898, 0.55 ) }
    dend_29 { pt3dadd( 6.60403, 92.495, 43.5958, 0.28 ) }
    dend_29 { pt3dadd( 6.35411, 94.2903, 44.5717, 0.55 ) }
    dend_29 { pt3dadd( 6.23996, 95.2174, 45.1244, 0.83 ) }
    dend_29 { pt3dadd( 6.04028, 96.7129, 46.0243, 0.28 ) }
    dend_29 { pt3dadd( 5.87852, 97.7092, 46.6852, 0.55 ) }
    dend_29 { pt3dadd( 5.64582, 99.1519, 47.5554, 0.28 ) }
    dend_29 { pt3dadd( 5.26945, 101.387, 48.782, 0.55 ) }
    dend_29 { pt3dadd( 4.76706, 104.283, 50.136, 0.28 ) }
    dend_29 { pt3dadd( 4.47667, 105.964, 50.8181, 0.55 ) }
    dend_29 { pt3dadd( 3.70572, 110.279, 52.346, 0.28 ) }
    dend_29 { pt3dadd( 3.19519, 113.358, 53.2468, 0.28 ) }
    dend_29 { pt3dadd( 2.65269, 116.9, 54.1261, 0.28 ) }
    dend_29 { pt3dadd( 1.23033, 126.496, 56.0781, 0.28 ) }
    dend_29 { pt3dadd( -0.0102685, 135.01, 57.4576, 0.28 ) }
    dend_29 { pt3dadd( -0.302807, 137.021, 57.6956, 0.55 ) }
    dend_29 { pt3dadd( -1.22882, 143.695, 58.1507, 0.28 ) }
    dend_29 { pt3dadd( -1.67281, 146.838, 58.1641, 0.28 ) }
    dend_29 { pt3dadd( -2.17835, 150.33, 57.7469, 0.28 ) }
    dend_29 { pt3dadd( -2.45897, 152.15, 57.1846, 0.55 ) }
    dend_29 { pt3dadd( -2.9163, 155.193, 55.7891, 0.28 ) }
    dend_29 { pt3dadd( -3.02303, 156.282, 55.2736, 0.55 ) }
    dend_29 { pt3dadd( -3.28758, 161.69, 52.4649, 0.28 ) }
    dend_29 { pt3dadd( -3.19277, 163.155, 52.088, 0.55 ) }
    dend_29 { pt3dadd( -3.01074, 164.519, 51.9752, 0.28 ) }
    dend_29 { pt3dadd( -2.84669, 165.552, 51.9697, 0.55 ) }
    dend_29 { pt3dadd( -1.69297, 171.799, 52.4642, 0.28 ) }
    dend_29 { pt3dadd( -1.40797, 173.185, 52.6668, 0.55 ) }
    dend_29 { pt3dadd( 1.4521, 184.708, 55.4726, 0.28 ) }
    dend_29 { pt3dadd( 1.70599, 185.698, 55.7396, 0.55 ) }
    dend_29 { pt3dadd( 0.922565, 197.469, 58.4279, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 86/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 19.2457, 11.7044, 20.951, 0.83 ) }
    dend_27 { pt3dadd( 20.2274, 12.2275, 22.2347, 0.83 ) }
    dend_27 { pt3dadd( 21.2238, 12.7899, 23.5179, 0.83 ) }
    dend_27 { pt3dadd( 22.8439, 13.7595, 25.8307, 0.83 ) }
    dend_27 { pt3dadd( 24.2822, 14.6702, 27.9211, 0.83 ) }
    dend_27 { pt3dadd( 25.7606, 15.7561, 30.1667, 0.83 ) }
    dend_27 { pt3dadd( 27.5813, 17.3606, 33.1364, 0.83 ) }
    dend_27 { pt3dadd( 28.3083, 18.1224, 34.4248, 1.11 ) }
    dend_27 { pt3dadd( 29.7215, 19.8787, 37.1733, 0.83 ) }
    dend_27 { pt3dadd( 30.7021, 21.327, 39.3556, 1.11 ) }
    dend_27 { pt3dadd( 31.7734, 23.0608, 42.1356, 0.83 ) }
    dend_27 { pt3dadd( 32.8561, 24.868, 45.1908, 0.55 ) }
    dend_27 { pt3dadd( 33.2619, 25.5714, 46.3554, 0.83 ) }
    dend_27 { pt3dadd( 34.6236, 28.0631, 50.4941, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( 35.6227, 29.9179, 53.5807, 0.55 ) }
    dend_27 { pt3dadd( 36.029, 30.6593, 54.9485, 0.28 ) }
    dend_27 { pt3dadd( 36.6893, 31.5985, 57.0455, 0.55 ) }
    dend_27 { pt3dadd( 38.2404, 34.8936, 65.5555, 0.55 ) }
    dend_27 { pt3dadd( 39.8801, 39.2039, 73.5953, 0.55 ) }
    dend_27 { pt3dadd( 41.9821, 43.4347, 81.5701, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 19.2457, 11.7044, 20.951, 0.83 ) }
    dend_26 { pt3dadd( 20.5802, 9.76268, 22.2885, 0.83 ) }
    dend_26 { pt3dadd( 21.7312, 8.16656, 23.3828, 0.83 ) }
    dend_26 { pt3dadd( 24.0534, 5.05627, 25.4629, 0.83 ) }
    dend_26 { pt3dadd( 26.1618, 2.15918, 27.2597, 0.83 ) }
    dend_26 { pt3dadd( 27.4254, 0.273462, 28.3653, 0.55 ) }
    dend_26 { pt3dadd( 28.1417, -0.893589, 29.0422, 0.55 ) }
    dend_26 { pt3dadd( 28.5366, -1.53508, 29.5131, 0.55 ) }
    dend_26 { pt3dadd( 29.2349, -2.76212, 30.639, 0.55 ) }
    dend_26 { pt3dadd( 30.2518, -4.72563, 33.0679, 0.55 ) }
    dend_26 { pt3dadd( 30.9291, -6.03414, 35.3597, 0.55 ) }
    dend_26 { pt3dadd( 31.8149, -7.78229, 39.065, 0.55 ) }
    dend_26 { pt3dadd( 33.1786, -10.3784, 45.8792, 0.55 ) }
    dend_26 { pt3dadd( 33.6624, -11.2377, 48.6439, 0.55 ) }
    dend_26 { pt3dadd( 34.6516, -12.7783, 54.5337, 0.55 ) }
    dend_26 { pt3dadd( 35.5798, -14.018, 60.3785, 0.55 ) }
    dend_26 { pt3dadd( 36.0278, -14.5056, 63.2299, 0.55 ) }
    dend_26 { pt3dadd( 36.7561, -15.1765, 68.1829, 0.28 ) }
    dend_26 { pt3dadd( 37.1312, -15.5312, 70.6985, 0.55 ) }
    dend_26 { pt3dadd( 37.4579, -15.7607, 72.6766, 0.28 ) }
    dend_26 { pt3dadd( 40.2319, -18.1216, 82.068, 0.28 ) }
    dend_26 { pt3dadd( 42.5475, -20.8871, 91.4812, 0.28 ) }
    dend_26 { pt3dadd( 44.1385, -23.0261, 101.194, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 29/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.7277, 18.4755, -11.0418, 0.55 ) }
    dend_20 { pt3dadd( -8.74127, 19.5155, -10.5794, 0.55 ) }
    dend_20 { pt3dadd( -6.85121, 20.505, -10.1394, 0.55 ) }
    dend_20 { pt3dadd( -5.40756, 21.2608, -9.80338, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.7277, 18.4755, -11.0418, 0.83 ) }
    dend_15 { pt3dadd( -11.6211, 20.4356, -16.1942, 0.83 ) }
    dend_15 { pt3dadd( -12.0571, 21.3923, -18.7092, 0.83 ) }
    dend_15 { pt3dadd( -12.7349, 22.8796, -22.6185, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 37/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.03486, -17.9513, -3.5914, 0.55 ) }
    dend_10 { pt3dadd( 7.41095, -19.4068, -4.12176, 0.55 ) }
    dend_10 { pt3dadd( 10.7028, -21.3793, -4.87354, 0.55 ) }
    dend_10 { pt3dadd( 12.2466, -22.4219, -5.43082, 0.55 ) }
    dend_10 { pt3dadd( 16.7957, -25.4941, -7.07286, 0.55 ) }
    dend_10 { pt3dadd( 20.2711, -27.8412, -8.32735, 0.55 ) }
    dend_10 { pt3dadd( 22.6545, -29.4509, -9.18768, 0.55 ) }
    dend_10 { pt3dadd( 24.8991, -30.7651, -10.0913, 0.55 ) }
    dend_10 { pt3dadd( 29.6194, -33.2128, -12.2645, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 46/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.03486, -17.9513, -3.5914, 0.83 ) }
    dend_7 { pt3dadd( 7.14811, -18.4929, -4.0273, 0.83 ) }
    dend_7 { pt3dadd( 9.35106, -19.0576, -4.48169, 0.83 ) }
    dend_7 { pt3dadd( 12.1392, -19.7722, -5.0568, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -1.76038, -18.9301, -7.24226, 0.55 ) }
    dend_5 { pt3dadd( -1.87678, -21.7235, -11.1812, 0.55 ) }
    dend_5 { pt3dadd( -1.81353, -23.0933, -13.0884, 0.55 ) }
    dend_5 { pt3dadd( -1.39433, -26.7575, -18.1431, 0.55 ) }
    dend_5 { pt3dadd( -1.1485, -27.9812, -19.8221, 0.55 ) }
    dend_5 { pt3dadd( -0.51186, -30.3834, -23.1077, 0.55 ) }
    dend_5 { pt3dadd( -0.299627, -31.1919, -24.187, 0.55 ) }
    dend_5 { pt3dadd( -0.00205507, -32.158, -25.3419, 0.55 ) }
    dend_5 { pt3dadd( 0.656708, -34.3624, -27.8974, 0.55 ) }
    dend_5 { pt3dadd( 1.34653, -36.4784, -30.1907, 0.55 ) }
    dend_5 { pt3dadd( 1.98282, -38.3237, -32.2637, 0.55 ) }
    dend_5 { pt3dadd( 2.6395, -40.505, -34.534, 0.55 ) }
    dend_5 { pt3dadd( 2.90945, -41.7289, -35.7671, 0.28 ) }
    dend_5 { pt3dadd( 2.99278, -42.3643, -36.3831, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 64/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -1.76038, -18.9301, -7.24226, 1.38 ) }
    dend_2 { pt3dadd( -3.04319, -21.35, -7.74021, 1.38 ) }
    dend_2 { pt3dadd( -4.10614, -23.3551, -8.15281, 1.38 ) }
    dend_2 { pt3dadd( -4.9816, -25.0066, -8.49264, 1.38 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 68/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -42.7223, -21.512, 37.9598, 0.28 ) }
    dend_45 { pt3dadd( -48.3608, -21.2864, 44.7782, 0.28 ) }
    dend_45 { pt3dadd( -55.2861, -22.6533, 50.1565, 0.28 ) }
    dend_45 { pt3dadd( -62.1722, -24.0939, 55.5675, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 72/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -42.7223, -21.512, 37.9598, 0.55 ) }
    dend_44 { pt3dadd( -48.697, -22.5233, 48.6004, 0.28 ) }
    dend_44 { pt3dadd( -53.4872, -21.8855, 59.8346, 0.28 ) }
    dend_44 { pt3dadd( -58.6618, -23.6697, 70.7981, 0.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 76/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -33.3518, -54.6403, 13.2406, 0.28 ) }
    dend_40 { pt3dadd( -35.9894, -57.9003, 13.9116, 0.28 ) }
    dend_40 { pt3dadd( -39.0407, -61.4216, 14.6327, 0.28 ) }
    dend_40 { pt3dadd( -40.1652, -62.6636, 14.9457, 0.55 ) }
    dend_40 { pt3dadd( -43.8522, -66.8798, 16.7614, 0.28 ) }
    dend_40 { pt3dadd( -45.1228, -68.368, 17.5446, 0.55 ) }
    dend_40 { pt3dadd( -46.5879, -70.1068, 18.5312, 0.83 ) }
    dend_40 { pt3dadd( -48.0441, -71.8158, 19.6355, 0.28 ) }
    dend_40 { pt3dadd( -49.2721, -73.2625, 20.7735, 0.83 ) }
    dend_40 { pt3dadd( -53.165, -77.8953, 25.0723, 0.28 ) }
    dend_40 { pt3dadd( -53.7657, -78.6281, 25.9537, 0.83 ) }
    dend_40 { pt3dadd( -54.3348, -79.3874, 26.9686, 0.55 ) }
    dend_40 { pt3dadd( -55.1886, -80.7401, 28.9194, 0.83 ) }
    dend_40 { pt3dadd( -60.1132, -89.5018, 32.203, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -33.3518, -54.6403, 13.2406, 0.55 ) }
    dend_39 { pt3dadd( -33.4023, -55.1855, 13.3475, 0.55 ) }
    dend_39 { pt3dadd( -33.8264, -59.0316, 13.9479, 0.28 ) }
    dend_39 { pt3dadd( -34.2003, -61.3741, 13.9176, 0.28 ) }
    dend_39 { pt3dadd( -34.9409, -65.2406, 13.5163, 1.38 ) }
    dend_39 { pt3dadd( -35.6557, -68.5397, 13.2711, 0.28 ) }
    dend_39 { pt3dadd( -36.0825, -70.4465, 13.1506, 0.55 ) }
    dend_39 { pt3dadd( -36.6382, -72.725, 12.9574, 0.83 ) }
    dend_39 { pt3dadd( -38.1082, -78.539, 12.2067, 0.28 ) }
    dend_39 { pt3dadd( -38.5405, -80.1678, 11.9624, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_39 { pt3dadd( -40.3982, -87.4399, 10.6988, 0.28 ) }
    dend_39 { pt3dadd( -41.0816, -90.3472, 10.2207, 1.11 ) }
    dend_39 { pt3dadd( -41.5727, -92.609, 9.84553, 0.28 ) }
    dend_39 { pt3dadd( -42.3395, -95.8301, 9.22606, 0.83 ) }
    dend_39 { pt3dadd( -43.222, -99.392, 8.51294, 0.28 ) }
    dend_39 { pt3dadd( -43.9025, -101.94, 8.02645, 0.83 ) }
    dend_39 { pt3dadd( -46.0821, -109.597, 6.50524, 0.28 ) }
    dend_39 { pt3dadd( -46.7265, -111.834, 6.16789, 1.38 ) }
    dend_39 { pt3dadd( -48.9765, -119.399, 5.3967, 0.28 ) }
    dend_39 { pt3dadd( -49.5455, -121.367, 5.32131, 1.11 ) }
    dend_39 { pt3dadd( -51.3731, -128.146, 5.40321, 0.28 ) }
    dend_39 { pt3dadd( -51.6031, -129.13, 5.4652, 0.83 ) }
    dend_39 { pt3dadd( -52.3497, -133.198, 5.99872, 0.28 ) }
    dend_39 { pt3dadd( -52.6033, -135.824, 6.53248, 1.11 ) }
    dend_39 { pt3dadd( -52.7592, -140.402, 7.68625, 0.28 ) }
    dend_39 { pt3dadd( -52.808, -141.736, 8.03264, 0.55 ) }
    dend_39 { pt3dadd( -52.935, -144.68, 8.80111, 0.28 ) }
    dend_39 { pt3dadd( -52.9816, -145.315, 9.00283, 1.11 ) }
    dend_39 { pt3dadd( -53.928, -154.636, 12.3475, 0.28 ) }
    dend_39 { pt3dadd( -54.102, -156.184, 12.9415, 1.11 ) }
    dend_39 { pt3dadd( -54.9218, -161.467, 15.1142, 0.28 ) }
    dend_39 { pt3dadd( -55.2412, -163.347, 15.9478, 0.55 ) }
    dend_39 { pt3dadd( -55.8675, -166.663, 17.5546, 0.28 ) }
    dend_39 { pt3dadd( -56.1846, -168.11, 18.3024, 0.55 ) }
    dend_39 { pt3dadd( -56.6992, -180.143, 19.689, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 25/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -30.0656, -15.7844, 17.3348, 0.55 ) }
    dend_37 { pt3dadd( -31.7105, -16.6886, 17.9777, 0.55 ) }
    dend_37 { pt3dadd( -33.8491, -17.7517, 19.0098, 0.55 ) }
    dend_37 { pt3dadd( -35.1896, -18.3902, 19.6793, 0.83 ) }
    dend_37 { pt3dadd( -36.5649, -19.0338, 20.377, 0.55 ) }
    dend_37 { pt3dadd( -38.612, -20.0577, 21.4781, 0.55 ) }
    dend_37 { pt3dadd( -40.7964, -21.2474, 22.6753, 0.83 ) }
    dend_37 { pt3dadd( -42.6697, -22.3968, 23.7993, 0.55 ) }
    dend_37 { pt3dadd( -43.6371, -23.1067, 24.4173, 0.55 ) }
    dend_37 { pt3dadd( -44.6109, -23.9339, 25.0798, 0.83 ) }
    dend_37 { pt3dadd( -45.8677, -25.1098, 25.9507, 0.28 ) }
    dend_37 { pt3dadd( -46.842, -26.066, 26.5755, 1.11 ) }
    dend_37 { pt3dadd( -48.4668, -27.7761, 27.6387, 0.28 ) }
    dend_37 { pt3dadd( -49.2392, -28.5667, 28.1174, 1.11 ) }
    dend_37 { pt3dadd( -51.1566, -30.3291, 29.254, 0.28 ) }
    dend_37 { pt3dadd( -51.8629, -30.8874, 29.6316, 0.55 ) }
    dend_37 { pt3dadd( -52.7066, -31.4325, 30.0092, 0.28 ) }
    dend_37 { pt3dadd( -53.4612, -31.8447, 30.3051, 0.83 ) }
    dend_37 { pt3dadd( -54.9067, -32.5181, 30.7601, 0.28 ) }
    dend_37 { pt3dadd( -56.9729, -33.5432, 31.3167, 0.28 ) }
    dend_37 { pt3dadd( -57.5683, -33.8669, 31.4302, 1.11 ) }
    dend_37 { pt3dadd( -58.4228, -34.3455, 31.6356, 0.28 ) }
    dend_37 { pt3dadd( -59.3089, -34.8555, 31.9302, 0.55 ) }
    dend_37 { pt3dadd( -60.2446, -35.3768, 32.251, 0.28 ) }
    dend_37 { pt3dadd( -61.3041, -35.9702, 32.6103, 0.83 ) }
    dend_37 { pt3dadd( -62.1759, -36.4537, 33.0049, 0.28 ) }
    dend_37 { pt3dadd( -63.8938, -37.4187, 33.8719, 0.28 ) }
    dend_37 { pt3dadd( -65.4843, -38.3, 34.7999, 1.38 ) }
    dend_37 { pt3dadd( -69.716, -40.6404, 37.4551, 0.28 ) }
    dend_37 { pt3dadd( -70.5773, -41.1378, 38.09, 1.11 ) }
    dend_37 { pt3dadd( -73.5656, -42.9459, 40.474, 0.28 ) }
    dend_37 { pt3dadd( -74.0507, -43.2594, 40.8813, 0.83 ) }
    dend_37 { pt3dadd( -76.5498, -44.9713, 43.1331, 0.28 ) }
    dend_37 { pt3dadd( -76.7938, -45.1462, 43.3695, 1.11 ) }
    dend_37 { pt3dadd( -81.385, -48.6943, 48.5857, 0.28 ) }
    dend_37 { pt3dadd( -81.8819, -49.0817, 49.1579, 1.11 ) }
    dend_37 { pt3dadd( -82.7336, -49.7676, 50.1084, 0.28 ) }
    dend_37 { pt3dadd( -83.8958, -50.731, 51.439, 0.55 ) }
    dend_37 { pt3dadd( -88.1654, -53.6428, 54.5322, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 64/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -30.0656, -15.7844, 17.3348, 0.83 ) }
    dend_36 { pt3dadd( -32.7947, -14.9027, 15.9739, 0.83 ) }
    dend_36 { pt3dadd( -37.4511, -13.5774, 13.5855, 0.83 ) }
    dend_36 { pt3dadd( -41.6963, -12.3407, 11.3596, 0.83 ) }
    dend_36 { pt3dadd( -47.322, -10.7547, 8.13001, 0.83 ) }
    dend_36 { pt3dadd( -51.0212, -9.88, 5.85211, 0.83 ) }
    dend_36 { pt3dadd( -54.9875, -9.02586, 3.40987, 0.83 ) }
    dend_36 { pt3dadd( -57.6312, -8.46019, 1.62166, 0.55 ) }
    dend_36 { pt3dadd( -58.8728, -8.15053, 0.709876, 0.55 ) }
    dend_36 { pt3dadd( -62.2167, -7.42372, -1.82097, 0.55 ) }
    dend_36 { pt3dadd( -66.3292, -6.73914, -5.23892, 0.55 ) }
    dend_36 { pt3dadd( -67.9412, -6.45768, -6.72631, 0.55 ) }
    dend_36 { pt3dadd( -71.8082, -5.7063, -10.8214, 0.55 ) }
    dend_36 { pt3dadd( -73.9775, -5.31741, -13.414, 0.55 ) }
    dend_36 { pt3dadd( -76.9629, -4.89983, -17.3633, 0.55 ) }
    dend_36 { pt3dadd( -78.3591, -4.73015, -19.3987, 0.55 ) }
    dend_36 { pt3dadd( -80.2676, -4.51754, -22.5154, 1.11 ) }
    dend_36 { pt3dadd( -82.244, -4.55154, -26.6925, 0.55 ) }
    dend_36 { pt3dadd( -83.8956, -4.92947, -31.5143, 0.55 ) }
    dend_36 { pt3dadd( -84.6758, -5.3491, -35.4259, 0.55 ) }
    dend_36 { pt3dadd( -84.7988, -5.44699, -36.2645, 0.55 ) }
    dend_36 { pt3dadd( -84.9911, -5.6598, -38.0185, 0.55 ) }
    dend_36 { pt3dadd( -85.4564, -6.92967, -47.531, 0.55 ) }
    dend_36 { pt3dadd( -85.3999, -7.28532, -50.1214, 0.55 ) }
    dend_36 { pt3dadd( -84.4948, -8.708, -60.7429, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 89/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.781048, 36.454, -2.82496, 0.55 ) }
    dend_32 { pt3dadd( -3.16219, 41.7968, -9.28086, 0.55 ) }
    dend_32 { pt3dadd( -4.94003, 47.8924, -15.277, 0.55 ) }
    dend_32 { pt3dadd( -7.11858, 54.7305, -20.304, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 93/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.781048, 36.454, -2.82496, 0.55 ) }
    dend_31 { pt3dadd( -4.15121, 41.6512, -8.82932, 0.55 ) }
    dend_31 { pt3dadd( -6.19002, 47.5153, -14.8415, 0.55 ) }
    dend_31 { pt3dadd( -6.83263, 53.4815, -21.0598, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.40756, 21.2608, -9.80338, 0.55 ) }
    dend_22 { pt3dadd( -5.20841, 19.7401, -9.33971, 0.55 ) }
    dend_22 { pt3dadd( -4.8479, 16.9873, -8.50037, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 0/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.40756, 21.2608, -9.80338, 0.55 ) }
    dend_21 { pt3dadd( -4.61581, 24.7218, -10.674, 0.55 ) }
    dend_21 { pt3dadd( -4.09784, 29.6495, -11.6274, 0.55 ) }
    dend_21 { pt3dadd( -3.8424, 34.8023, -12.3091, 0.55 ) }
    dend_21 { pt3dadd( -3.86122, 38.6285, -12.7017, 0.55 ) }
    dend_21 { pt3dadd( -3.86684, 42.6699, -12.956, 0.55 ) }
    dend_21 { pt3dadd( -3.98838, 47.5045, -13.1093, 0.55 ) }
    dend_21 { pt3dadd( -4.56488, 54.4987, -13.0487, 0.55 ) }
    dend_21 { pt3dadd( -5.38307, 60.6512, -12.6361, 0.55 ) }
    dend_21 { pt3dadd( -5.97899, 64.002, -12.2928, 0.55 ) }
    dend_21 { pt3dadd( -7.33699, 71.3924, -11.3461, 0.55 ) }
    dend_21 { pt3dadd( -8.5405, 78.3268, -10.2507, 0.55 ) }
    dend_21 { pt3dadd( -9.535, 83.6211, -9.37801, 0.55 ) }
    dend_21 { pt3dadd( -10.2863, 88.1475, -8.57642, 0.55 ) }
    dend_21 { pt3dadd( -10.8172, 91.9971, -7.98076, 0.55 ) }
    dend_21 { pt3dadd( -11.0691, 95.9143, -7.6207, 0.55 ) }
    dend_21 { pt3dadd( -11.3737, 101.07, -7.26939, 0.55 ) }
    dend_21 { pt3dadd( -11.3134, 105.567, -7.09279, 0.55 ) }
    dend_21 { pt3dadd( -10.975, 109.704, -7.10558, 0.55 ) }
    dend_21 { pt3dadd( -10.1894, 114.927, -7.43263, 0.55 ) }
    dend_21 { pt3dadd( -8.44335, 123.573, -8.40466, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 21/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -12.7349, 22.8796, -22.6185, 0.55 ) }
    dend_19 { pt3dadd( -14.1704, 24.5306, -28.1943, 0.55 ) }
    dend_19 { pt3dadd( -15.1295, 25.6336, -31.9195, 0.55 ) }
    dend_19 { pt3dadd( -15.9245, 26.548, -35.0075, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -12.7349, 22.8796, -22.6185, 0.83 ) }
    dend_16 { pt3dadd( -14.9049, 30.0794, -22.544, 0.83 ) }
    dend_16 { pt3dadd( -16.0553, 33.8962, -22.3834, 0.55 ) }
    dend_16 { pt3dadd( -17.3812, 37.6491, -22.2835, 0.55 ) }
    dend_16 { pt3dadd( -18.3778, 40.4699, -22.2085, 0.55 ) }
    dend_16 { pt3dadd( -19.7427, 44.3333, -22.1057, 0.55 ) }
    dend_16 { pt3dadd( -21.1272, 48.252, -22.0014, 0.55 ) }
    dend_16 { pt3dadd( -22.3591, 51.4598, -21.5745, 0.83 ) }
    dend_16 { pt3dadd( -23.8983, 56.1836, -21.1082, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 29.6194, -33.2128, -12.2645, 0.28 ) }
    dend_12 { pt3dadd( 30.5143, -40.4465, -15.8667, 0.28 ) }
    dend_12 { pt3dadd( 30.7889, -42.6662, -16.972, 0.28 ) }
    dend_12 { pt3dadd( 31.052, -44.7926, -18.0309, 0.55 ) }
    dend_12 { pt3dadd( 31.5515, -48.8303, -20.0416, 0.28 ) }
    dend_12 { pt3dadd( 31.8493, -51.2373, -21.2401, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 29.6194, -33.2128, -12.2645, 0.55 ) }
    dend_11 { pt3dadd( 32.5898, -38.1286, -20.0824, 0.55 ) }
    dend_11 { pt3dadd( 33.1361, -39.0325, -21.52, 0.55 ) }
    dend_11 { pt3dadd( 34.441, -41.1921, -24.9545, 0.55 ) }
    dend_11 { pt3dadd( 35.5026, -42.9489, -27.7484, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 45/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 12.1392, -19.7722, -5.0568, 0.55 ) }
    dend_9 { pt3dadd( 14.3923, -19.3881, -7.22563, 0.55 ) }
    dend_9 { pt3dadd( 15.6925, -19.2839, -8.49926, 0.55 ) }
    dend_9 { pt3dadd( 17.2342, -19.1603, -10.0095, 0.55 ) }
    dend_9 { pt3dadd( 18.9942, -19.0192, -11.7337, 0.55 ) }
    dend_9 { pt3dadd( 21.7179, -18.8009, -14.4018, 0.28 ) }
    dend_9 { pt3dadd( 22.511, -18.7373, -15.1788, 0.83 ) }
    dend_9 { pt3dadd( 24.5843, -18.7167, -17.2342, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 12.1392, -19.7722, -5.0568, 0.55 ) }
    dend_8 { pt3dadd( 13.8313, -20.5983, -4.67365, 0.55 ) }
    dend_8 { pt3dadd( 15.4611, -21.2125, -4.33285, 0.55 ) }
    dend_8 { pt3dadd( 17.629, -21.8881, -3.88537, 0.55 ) }
    dend_8 { pt3dadd( 18.9284, -22.2849, -3.67989, 0.55 ) }
    dend_8 { pt3dadd( 20.8218, -22.9297, -3.28704, 0.55 ) }
    dend_8 { pt3dadd( 22.3276, -23.4649, -2.95108, 0.55 ) }
    dend_8 { pt3dadd( 25.0805, -24.3553, -2.29467, 0.55 ) }
    dend_8 { pt3dadd( 25.9909, -24.5729, -2.13285, 0.55 ) }
    dend_8 { pt3dadd( 28.7518, -24.9974, -1.76241, 0.55 ) }
    dend_8 { pt3dadd( 32.5674, -25.3626, -1.37527, 0.55 ) }
    dend_8 { pt3dadd( 34.5537, -25.4836, -1.15705, 0.55 ) }
    dend_8 { pt3dadd( 36.0622, -25.5092, -1.07907, 0.55 ) }
    dend_8 { pt3dadd( 40.6755, -25.4469, -0.915205, 0.28 ) }
    dend_8 { pt3dadd( 41.7404, -25.4504, -0.915847, 0.55 ) }
    dend_8 { pt3dadd( 43.0926, -25.4805, -0.938324, 0.55 ) }
    dend_8 { pt3dadd( 45.3117, -25.6519, -1.10933, 0.28 ) }
    dend_8 { pt3dadd( 49.0659, -26.2829, -1.16144, 0.55 ) }
    dend_8 { pt3dadd( 51.5652, -26.9405, -1.05071, 0.28 ) }
    dend_8 { pt3dadd( 54.7557, -28.1056, -0.6733, 0.28 ) }
    dend_8 { pt3dadd( 57.3669, -29.1197, -0.337704, 0.55 ) }
    dend_8 { pt3dadd( 58.9218, -29.7605, -0.146156, 0.28 ) }
    dend_8 { pt3dadd( 61.1077, -30.694, 0.121477, 0.28 ) }
    dend_8 { pt3dadd( 62.5064, -31.3148, 0.445448, 0.83 ) }
    dend_8 { pt3dadd( 64.3167, -32.1314, 0.820297, 0.55 ) }
    dend_8 { pt3dadd( 65.6702, -32.6173, 1.257, 0.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.9816, -25.0066, -8.49264, 0.55 ) }
    dend_4 { pt3dadd( -6.29971, -28.5203, -6.54004, 0.55 ) }
    dend_4 { pt3dadd( -8.83963, -35.3087, -2.55367, 0.55 ) }
    dend_4 { pt3dadd( -10.8923, -40.8665, 0.71903, 0.55 ) }
    dend_4 { pt3dadd( -12.2057, -44.4224, 2.81292, 0.55 ) }
    dend_4 { pt3dadd( -14.937, -51.8176, 7.16757, 0.55 ) }
    dend_4 { pt3dadd( -16.7867, -56.8258, 10.1167, 0.55 ) }
    dend_4 { pt3dadd( -17.6516, -59.3, 11.7273, 0.28 ) }
    dend_4 { pt3dadd( -18.1197, -60.6243, 12.6398, 0.55 ) }
    dend_4 { pt3dadd( -21.9804, -69.9096, 19.4446, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.9816, -25.0066, -8.49264, 0.83 ) }
    dend_3 { pt3dadd( -5.64888, -26.2971, -12.3848, 0.83 ) }
    dend_3 { pt3dadd( -6.51039, -27.6579, -16.2839, 0.83 ) }
    dend_3 { pt3dadd( -7.54145, -29.0648, -19.9687, 0.83 ) }
    dend_3 { pt3dadd( -8.79985, -30.619, -23.9436, 0.83 ) }
    dend_3 { pt3dadd( -14.1475, -37.0719, -39.6927, 0.55 ) }
    dend_3 { pt3dadd( -15.8283, -39.1002, -44.643, 0.55 ) }
    dend_3 { pt3dadd( -16.9692, -40.5385, -47.935, 0.55 ) }
    dend_3 { pt3dadd( -18.6562, -42.6124, -52.4481, 0.55 ) }
    dend_3 { pt3dadd( -19.8825, -44.0071, -55.456, 0.55 ) }
    dend_3 { pt3dadd( -20.6133, -44.753, -56.9467, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 0/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -23.8983, 56.1836, -21.1082, 0.55 ) }
    dend_18 { pt3dadd( -26.2188, 57.3874, -18.3439, 0.55 ) }
    dend_18 { pt3dadd( -28.5331, 58.7939, -15.4512, 0.55 ) }
    dend_18 { pt3dadd( -29.6658, 59.5491, -13.8166, 0.55 ) }
    dend_18 { pt3dadd( -31.2089, 60.5835, -11.548, 0.55 ) }
    dend_18 { pt3dadd( -32.1006, 61.2513, -10.2646, 0.55 ) }
    dend_18 { pt3dadd( -33.5669, 62.3493, -8.15434, 0.55 ) }
    dend_18 { pt3dadd( -34.434, 63.1243, -6.77524, 0.55 ) }
    dend_18 { pt3dadd( -37.3051, 65.9563, -2.07657, 0.28 ) }
    dend_18 { pt3dadd( -37.6836, 66.3404, -1.40951, 0.28 ) }
    dend_18 { pt3dadd( -39.078, 67.7132, 0.950036, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -23.8983, 56.1836, -21.1082, 0.55 ) }
    dend_17 { pt3dadd( -25.0971, 58.2017, -21.2431, 0.55 ) }
    dend_17 { pt3dadd( -26.2413, 60.074, -21.2916, 0.55 ) }
    dend_17 { pt3dadd( -28.1199, 63.3433, -21.2772, 0.55 ) }
    dend_17 { pt3dadd( -29.2416, 65.5839, -21.2061, 0.55 ) }
    dend_17 { pt3dadd( -30.5302, 68.398, -21.0778, 0.55 ) }
    dend_17 { pt3dadd( -32.1537, 71.7566, -20.8715, 0.55 ) }
    dend_17 { pt3dadd( -33.0736, 73.6191, -20.6863, 0.55 ) }
    dend_17 { pt3dadd( -34.25, 75.818, -20.4429, 0.55 ) }
    dend_17 { pt3dadd( -35.7515, 78.6706, -20.0426, 0.55 ) }
    dend_17 { pt3dadd( -37.8595, 82.6321, -19.4761, 0.55 ) }
    dend_17 { pt3dadd( -39.4504, 85.504, -19.114, 0.55 ) }
    dend_17 { pt3dadd( -41.1088, 88.1129, -18.7854, 0.55 ) }
    dend_17 { pt3dadd( -42.3658, 89.8872, -18.5744, 0.55 ) }
    dend_17 { pt3dadd( -45.1505, 93.2971, -18.275, 0.55 ) }
    dend_17 { pt3dadd( -46.1734, 94.483, -18.2525, 0.55 ) }
    dend_17 { pt3dadd( -47.7126, 96.4318, -18.3683, 0.55 ) }
    dend_17 { pt3dadd( -49.4322, 98.7173, -18.5804, 0.55 ) }
    dend_17 { pt3dadd( -51.1833, 101.019, -18.8733, 0.55 ) }
    dend_17 { pt3dadd( -53.2657, 103.932, -19.3248, 0.55 ) }
    dend_17 { pt3dadd( -55.5923, 107.145, -20.0693, 0.55 ) }
    dend_17 { pt3dadd( -57.3202, 109.756, -20.7677, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_43 OneSecGrp_SectionRef_16.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_42 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_29 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_27 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_26 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_39 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_21 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_8 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_3 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_13 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_25 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_34 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_22 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_9 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_30 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_31 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_32 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_45 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_18 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_44 OneSecGrp_SectionRef_31.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_24, dend_13, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_34, dend_34, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_42 nseg = 5
    dend_38 nseg = 3
    dend_29 nseg = 9
    dend_27 nseg = 3
    dend_26 nseg = 5
    dend_40 nseg = 3
    dend_39 nseg = 7
    dend_37 nseg = 3
    dend_36 nseg = 5
    dend_21 nseg = 5
    dend_8 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_17 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L23_LBC_222e20da8f_0_0


