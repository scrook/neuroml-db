// Cell: bIR215_L5_BP_03b3d4a19f_0_0
/*
{
  "id" : "bIR215_L5_BP_03b3d4a19f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.72562, 8.93319, 2.97855, 0.83", "-7.46618, 11.8324, 3.54267, 1.11", "-9.67163, 13.5407, 3.83612, 0.83", "-11.8144, 15.186, 4.09905, 0.83", "-13.083, 16.1241, 4.24313, 1.11", "-17.0557, 19.0557, 4.70489, 1.11", "-24.1614, 24.0747, 5.52116, 0.83", "-26.7213, 25.814, 5.79071, 0.83", "-28.7486, 27.1504, 5.95814, 0.83", "-30.7254, 28.4748, 6.10307, 0.83", "-32.3345, 29.5663, 6.18126, 0.55", "-33.5441, 30.3055, 6.26062, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.93621, 6.38444, -6.32256, 0.55", "8.09235, 7.06718, -7.02739, 0.55", "9.92375, 7.23953, -7.96002, 0.83", "12.8222, 7.42294, -9.69245, 0.55", "14.2214, 7.51148, -10.5287, 1.38", "17.6617, 7.72917, -12.5849, 0.55", "19.1269, 7.65546, -13.566, 0.83", "26.7064, 6.30353, -19.0785, 0.55", "27.4396, 6.12173, -19.6849, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.677435, -9.89702, 3.02099, 1.11", "-0.713057, -13.04, 4.14776, 1.11", "-0.727565, -14.3201, 4.60665, 0.83", "-0.746839, -16.0207, 5.21631, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.768409, 9.76907, -1.36295, 1.11", "0.730704, 11.6793, -1.3571, 1.11", "0.630238, 14.7953, -1.24036, 1.38", "0.626679, 14.969, -1.23005, 1.38", "0.700898, 17.1262, -1.04634, 0.83", "0.834716, 19.4125, -0.710322, 0.83", "1.11148, 22.0066, 0.0269606, 0.83", "1.29938, 22.9976, 0.454452, 0.83", "1.50684, 23.7207, 0.858023, 1.11", "2.16538, 25.4923, 1.93398, 0.55", "2.93654, 27.3486, 3.21513, 0.83", "4.02579, 29.2779, 4.72852, 0.55", "4.6098, 30.0881, 5.43932, 0.83", "5.40513, 31.1873, 6.51671, 0.55", "6.36274, 32.5832, 7.9431, 0.55", "7.65224, 34.6751, 10.0753, 0.55", "9.06742, 37.0614, 12.4272, 0.55", "9.89837, 38.6077, 14.123, 0.55", "10.8425, 40.5595, 16.4552, 0.55", "11.0293, 40.9516, 16.9769, 0.83", "11.5005, 41.9877, 18.4336, 0.55", "11.9202, 42.7987, 19.5907, 0.83", "12.8483, 44.9953, 22.3161, 0.55", "13.2533, 45.7989, 23.1486, 0.83", "13.6897, 46.399, 23.7571, 0.55", "14.1557, 46.9204, 24.2595, 0.83", "15.2387, 47.903, 25.2346, 0.83", "16.7124, 49.2378, 26.3664, 0.83", "17.6454, 50.1151, 26.9427, 0.55", "18.3506, 50.8676, 27.3855, 0.55", "20.2096, 52.8138, 28.514, 0.83", "21.4264, 54.0625, 29.1866, 0.55", "23.3008, 55.8963, 30.1225, 0.55", "25.0475, 57.4437, 30.9045, 0.55", "26.6265, 58.7602, 31.5583, 0.55", "28.6557, 60.3123, 32.2867, 0.55", "29.9179, 61.0888, 32.6912, 0.55", "30.8136, 61.5352, 32.8595, 0.55", "32.0443, 61.901, 32.9849, 0.55", "33.9387, 62.1455, 33.0295, 0.55", "35.1403, 62.1515, 33.0164, 0.55", "36.8681, 62.1144, 33.1126, 0.55", "40.0783, 62.1459, 33.5725, 0.55", "42.5435, 62.2872, 34.1055, 0.55", "45.1072, 62.564, 34.823, 0.55", "46.7122, 62.8001, 35.4132, 0.55", "50.7818, 63.8165, 37.2242, 0.55", "53.1258, 64.6207, 38.4849, 0.55", "54.8274, 65.3532, 39.6075, 0.55", "55.8373, 65.9977, 40.3318, 0.55", "56.9983, 66.9329, 41.1619, 0.55", "59.0042, 68.7536, 42.3593, 0.55", "59.4826, 69.1905, 42.5611, 0.55", "60.8867, 70.3649, 43.042, 0.55", "62.1688, 71.6023, 43.4763, 0.83", "62.8711, 72.2879, 43.7012, 0.55", "63.9264, 73.4546, 43.991, 0.83", "69.0571, 79.6797, 47.0837, 0.83", "73.5312, 86.7182, 49.3385, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-33.5441, 30.3055, 6.26062, 0.55", "-35.288, 31.2286, 5.36411, 0.55", "-37.1844, 32.2323, 4.38925, 0.55", "-39.473, 33.4437, 3.2128, 0.55", "-41.3627, 34.4439, 2.24138, 0.83", "-42.9462, 35.2821, 1.42733, 0.55", "-45.8856, 36.8379, -0.0836721, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-33.5441, 30.3055, 6.26062, 0.55", "-35.4722, 30.5645, 6.36287, 0.55", "-37.4803, 30.8191, 6.67789, 0.55", "-39.746, 31.1154, 7.08969, 0.55", "-42.965, 31.5714, 7.98671, 0.55", "-45.6146, 31.914, 8.94362, 0.55", "-48.366, 32.2545, 10.0762, 0.55", "-50.9535, 32.4581, 11.5018, 0.55", "-53.1195, 32.449, 13.0026, 0.55", "-55.7407, 32.2956, 15.2279, 0.55", "-56.8379, 32.1714, 16.392, 0.55", "-58.0099, 32.0349, 17.7118, 0.55", "-60.0879, 31.5838, 19.9671, 0.55", "-61.2359, 31.3047, 20.9631, 0.55", "-62.4373, 30.9686, 22.0069, 0.55", "-63.9008, 30.5551, 23.081, 0.55", "-65.5035, 30.1326, 24.193, 0.55", "-67.8016, 29.5119, 25.7269, 0.55", "-70.947, 28.8462, 27.4314, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "27.4396, 6.12173, -19.6849, 0.55", "31.619, 7.01411, -20.5683, 0.55", "34.0118, 7.42767, -21.4279, 0.55", "36.3656, 7.73459, -22.3225, 0.55", "37.9693, 7.88033, -22.9406, 0.55", "40.3099, 8.03699, -23.8323, 0.55", "45.156, 8.28567, -25.8447, 0.55", "50.6441, 8.57535, -28.4994, 0.55", "53.2903, 8.5704, -29.9914, 0.55", "54.7032, 8.54339, -30.8885, 0.55", "56.2518, 8.52875, -31.9352, 0.55", "59.01, 8.42319, -33.801, 0.55", "60.0069, 8.32903, -34.5194, 0.55", "64.2282, 8.07641, -37.8815, 0.55", "67.2152, 7.97252, -40.4818, 0.55", "68.9363, 7.95243, -42.0233, 0.55", "70.6518, 7.91679, -43.5612, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "27.4396, 6.12173, -19.6849, 0.83", "28.7393, 7.45873, -19.9984, 0.83", "29.4878, 8.20853, -20.217, 0.55", "30.5968, 9.30199, -20.6579, 0.83", "31.3402, 10.0495, -20.9885, 0.55", "32.3544, 11.1169, -21.4387, 0.83", "33.5594, 12.4456, -21.9376, 0.55", "34.1758, 13.0732, -22.1393, 0.55", "35.6388, 14.3412, -22.4045, 0.83", "36.9887, 15.3854, -22.3837, 0.55", "37.7346, 15.9884, -22.2885, 0.83", "38.8283, 16.9653, -22.0234, 0.55", "40.3588, 18.4794, -21.423, 0.55", "42.5011, 20.5016, -20.4126, 0.55", "44.5441, 22.4041, -19.2516, 0.55", "46.1634, 23.9036, -18.2903, 0.55", "48.8269, 26.3954, -16.6944, 0.55", "50.7508, 28.2991, -15.5006, 0.55", "51.8742, 29.5776, -14.7715, 0.55", "53.8691, 32.1915, -13.5011, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.746839, -16.0207, 5.21631, 0.83", "-0.738079, -17.6264, 5.15076, 0.83", "-0.729545, -19.1908, 5.08689, 0.83", "-0.720016, -20.9375, 5.01558, 0.83", "-0.715041, -21.8496, 4.97835, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.746839, -16.0207, 5.21631, 0.55", "-0.0666638, -17.807, 6.4078, 0.55", "0.554509, -19.9913, 7.9739, 0.55", "0.939698, -22.8474, 10.1653, 0.55", "1.01345, -23.9564, 11.0516, 0.83", "0.960567, -26.7835, 13.6518, 0.55", "0.814927, -28.2416, 15.0294, 0.55", "0.478398, -31.0766, 17.8326, 0.83", "0.114319, -33.1802, 20.0554, 0.55", "-0.342521, -34.9128, 21.871, 0.55", "-1.28552, -38.1929, 25.254, 0.55", "-2.03621, -40.8072, 27.9193, 0.55", "-2.5935, -42.9038, 30.0831, 0.55", "-3.06581, -45.1316, 32.3026, 0.28", "-3.18617, -46.0607, 33.1866, 0.55", "-3.36929, -47.7772, 34.7192, 0.28", "-3.31319, -50.4614, 36.6727, 0.55", "-5.25293, -59.3584, 43.7806, 0.55", "-7.37153, -67.5764, 51.6176, 0.55", "-8.86701, -74.3403, 60.8617, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-45.8856, 36.8379, -0.0836721, 0.55", "-49.1147, 37.0038, 1.56864, 0.55", "-50.4731, 36.9924, 2.42712, 0.83", "-52.0619, 36.8902, 3.63795, 0.55", "-53.2787, 36.8061, 4.67448, 0.83", "-56.4696, 36.6999, 7.36786, 0.55", "-57.6783, 36.6792, 8.39812, 0.28", "-59.6957, 36.6586, 10.2867, 0.55", "-62.4028, 36.6474, 12.8088, 0.55", "-64.4576, 36.6441, 14.6298, 0.55", "-67.2018, 36.6433, 16.9749, 0.28", "-67.9143, 36.6526, 17.4986, 0.55", "-69.389, 36.6919, 18.5278, 0.28", "-70.3902, 36.749, 19.1341, 0.55", "-72.4325, 36.86, 20.1939, 0.28", "-73.6295, 36.8624, 20.7506, 0.55", "-75.7381, 36.7119, 21.743, 0.28", "-77.1538, 36.604, 22.3592, 0.55", "-85.7924, 35.0725, 29.9269, 0.55", "-93.6716, 32.4395, 38.0033, 0.55", "-101.222, 28.7317, 45.9709, 0.55", "-108.688, 23.7363, 53.2878, 0.55", "-114.917, 19.1647, 61.9219, 0.55", "-121.996, 15.0211, 70.1043, 0.55", "-129.261, 12.7202, 78.8318, 0.55", "-136.466, 9.52086, 87.3228, 0.55", "-143.481, 7.06884, 96.2118, 0.55", "-149.97, 4.44073, 105.443, 0.55", "-155.312, 0.518633, 114.947, 0.55", "-160.787, -2.35566, 124.745, 0.55", "-166.378, -6.35197, 134.073, 0.55", "-170.634, -10.8369, 143.872, 0.55", "-173.01, -14.5589, 154.584, 0.55", "-175.251, -20.3306, 164.377, 0.55", "-175.841, -26.293, 174.294, 0.55", "-177.059, -31.8007, 184.414, 0.55", "-179.529, -36.5126, 194.707, 0.55", "-184.413, -39.4573, 204.792, 0.55", "-188.279, -43.6617, 214.873, 0.55", "-190.059, -45.9867, 226.083, 0.55", "-193.686, -47.4743, 236.986, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-45.8856, 36.8379, -0.0836721, 0.55", "-47.4733, 37.5929, -2.08189, 0.55", "-48.6732, 38.4345, -4.28923, 0.55", "-49.7868, 39.474, -6.61726, 0.55", "-50.4842, 40.1249, -8.07505, 0.55", "-51.7562, 41.3123, -10.7342, 0.83", "-52.6869, 42.181, -12.6797, 0.55", "-53.731, 43.3729, -15.5289, 0.83", "-54.0971, 44.1795, -17.1196, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-70.947, 28.8462, 27.4314, 0.28", "-71.7633, 26.6954, 28.3222, 0.28", "-72.1876, 25.7319, 28.656, 0.28", "-72.7391, 24.3519, 29.0685, 0.55", "-73.1836, 23.1457, 29.4278, 0.28", "-73.8276, 21.32, 29.9851, 0.55", "-75.5668, 16.0007, 31.653, 0.28", "-76.1552, 14.0743, 32.0985, 0.55", "-77.0656, 11.0664, 32.6994, 0.28", "-77.6014, 9.23533, 32.9871, 0.55", "-77.9786, 7.96093, 33.1624, 0.28", "-78.4052, 6.50336, 33.3716, 0.55", "-79.6356, 1.69878, 34.1086, 0.28", "-80.0387, 0.222975, 34.298, 0.55", "-80.818, -2.13578, 34.4451, 0.28", "-81.506, -3.70811, 34.4934, 0.28", "-82.1401, -4.78422, 34.5491, 0.55", "-84.3441, -7.80345, 34.8962, 0.28", "-85.3673, -9.02551, 35.0955, 0.55", "-87.9108, -11.8841, 35.4844, 0.28", "-90.4723, -14.4565, 35.8769, 0.28", "-93.2857, -16.9787, 36.2716, 0.28", "-94.576, -17.9479, 36.4828, 0.55", "-100.233, -27.1141, 38.3567, 0.55", "-106.059, -35.5243, 42.2112, 0.55", "-112.227, -44.2626, 44.4765, 0.55", "-118.923, -52.8127, 45.739, 0.55", "-126.082, -61.0742, 45.9265, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-70.947, 28.8462, 27.4314, 0.55", "-71.9097, 28.77, 27.8596, 0.55", "-74.5384, 28.6985, 29.4114, 0.55", "-75.509, 28.6668, 30.0578, 0.55", "-77.7717, 28.5337, 31.641, 0.55", "-81.3013, 28.2958, 33.8868, 0.55", "-83.1525, 28.2181, 34.9984, 0.28", "-86.0384, 28.0084, 36.6953, 0.55", "-88.1946, 27.7749, 37.8943, 0.55", "-89.1037, 27.6708, 38.4049, 0.28", "-94.5585, 27.0407, 41.4617, 0.55", "-97.1301, 26.56, 42.7783, 0.28", "-100.648, 25.8154, 44.356, 0.28", "-103.731, 25.1473, 45.5241, 0.55", "-115.378, 25.3318, 51.9652, 0.55", "-126.238, 25.7323, 59.6504, 0.55", "-135.929, 25.3791, 68.7676, 0.55", "-145.355, 27.483, 77.9268, 0.55", "-152.617, 30.0532, 88.7813, 0.55", "-157.732, 34.0113, 100.414, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "70.6518, 7.91679, -43.5612, 0.55", "75.0027, 9.30571, -47.1252, 0.55", "76.3709, 9.69261, -48.3446, 0.55", "78.0798, 10.1177, -49.8557, 0.55", "81.1729, 10.8797, -52.7852, 0.55", "84.389, 11.5473, -55.937, 0.55", "85.9531, 11.7406, -57.4499, 0.83", "87.2308, 11.818, -58.8042, 0.55", "88.1774, 11.8033, -59.9253, 0.83", "90.4287, 11.4479, -62.8258, 0.55", "92.2685, 10.9712, -65.2458, 0.55", "94.3869, 10.3964, -67.9184, 0.55", "96.7492, 9.83448, -70.9387, 0.55", "98.3294, 9.42137, -73.0107, 0.55", "100.11, 8.95537, -75.41, 0.55", "101.65, 8.623, -77.5936, 0.55", "102.621, 8.52344, -79.0969, 0.55", "103.813, 8.43516, -82.0899, 0.55", "104.45, 8.33099, -83.9633, 0.55", "104.955, 8.11188, -86.45, 0.55", "105.605, 7.63244, -90.6574, 0.55", "105.731, 7.49091, -91.6086, 0.28", "107.385, 5.63502, -103.189, 0.28", "107.97, 5.1057, -106.59, 0.83", "110.325, 2.99778, -118.679, 0.83", "111.548, 1.79046, -124.318, 0.83", "112.151, 1.2033, -126.613, 0.55", "112.865, 0.611853, -128.856, 0.55", "114.944, -0.636687, -133.044, 0.55", "117.213, -1.80407, -136.741, 0.28", "117.937, -2.08679, -136.991, 0.55", "119.557, -2.64915, -136.94, 0.28", "120.57, -2.93834, -136.754, 0.55", "121.626, -3.26266, -136.469, 0.28", "122.901, -3.59346, -136.064, 0.55", "124.812, -3.96764, -135.652, 0.28", "126.34, -4.3106, -135.375, 0.55", "128.036, -4.5642, -135.195, 0.28", "130.337, -4.88171, -135.155, 0.55", "132.918, -5.16287, -135.26, 0.55", "135.185, -5.36867, -135.502, 0.28", "138.319, -5.60804, -136.008, 0.55", "143.734, -5.81593, -137.45, 0.55", "146.127, -5.7551, -138.368, 0.55", "147.155, -5.67525, -138.87, 0.83", "149.111, -5.49188, -140.005, 0.55", "150.47, -5.30077, -140.875, 0.83", "154.132, -4.68524, -143.246, 0.55", "156.355, -4.45945, -144.767, 0.28", "157.289, -4.43364, -145.307, 0.55", "159.839, -4.63116, -146.516, 0.28", "160.727, -4.78982, -146.888, 0.55", "162.557, -5.26172, -147.374, 0.28", "164.415, -5.95853, -147.556, 0.55", "168.172, -7.63669, -147.264, 0.28", "169.903, -8.50663, -146.947, 0.55", "172.471, -9.96532, -146.349, 0.28", "175.719, -11.8064, -145.472, 0.55", "178.071, -13.1084, -144.796, 0.55", "182.159, -15.239, -143.544, 0.28", "183.838, -16.0208, -143.165, 0.55", "186.737, -17.1691, -142.821, 0.28", "189.637, -18.0684, -142.663, 0.55", "191.236, -18.3575, -142.785, 0.28", "192.692, -18.4115, -142.993, 0.55", "196.809, -18.2813, -143.945, 0.28", "199.765, -17.9801, -144.655, 0.28", "202.347, -17.5278, -145.292, 0.55", "205.2, -16.936, -146.133, 0.28", "205.922, -16.7444, -146.316, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "70.6518, 7.91679, -43.5612, 0.55", "70.9684, 5.8934, -45.7702, 0.55", "71.0552, 4.15966, -47.4896, 0.28", "71.1353, 2.52801, -48.9081, 0.55", "71.5098, -0.94052, -51.9622, 0.28", "71.5259, -1.14854, -52.1886, 0.55", "71.645, -2.21252, -53.4818, 0.28", "71.6407, -3.03591, -54.7146, 0.55", "71.5693, -3.85376, -56.1247, 0.28", "71.4251, -4.94526, -58.1158, 0.55", "71.0617, -7.70584, -63.0436, 0.55", "70.6886, -10.2007, -67.5945, 0.55", "70.3621, -12.191, -71.2343, 0.55", "69.9907, -14.1558, -74.7609, 0.55", "69.8929, -14.6715, -75.642, 0.28", "69.8114, -15.2421, -76.5217, 0.55", "69.8, -16.0694, -77.6491, 0.28", "69.9767, -17.6194, -79.5097, 0.55", "70.6363, -20.7764, -82.5257, 0.55", "71.011, -22.5234, -83.9771, 0.28", "71.2751, -24.2641, -85.5313, 0.55", "71.4391, -26.6526, -87.7996, 0.28", "71.4267, -28.5514, -89.674, 0.55", "71.2647, -31.374, -92.4753, 0.28", "71.124, -34.3262, -95.2702, 0.55", "70.8522, -38.5937, -99.368, 0.28", "70.6484, -40.8602, -101.558, 0.55", "70.3943, -43.1563, -103.859, 0.28", "70.1426, -45.135, -106.031, 0.28", "69.9275, -47.5509, -109.007, 0.55", "69.9236, -49.8294, -111.708, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "53.8691, 32.1915, -13.5011, 0.55", "56.5495, 33.0638, -12.5067, 0.55", "58.5671, 33.5379, -11.914, 0.55", "63.0508, 34.4187, -10.7982, 0.55", "65.1186, 34.6923, -10.4346, 0.55", "67.3912, 34.9781, -10.1619, 0.55", "70.4802, 35.3066, -10.0094, 0.55", "73.8263, 35.4392, -10.0687, 0.55", "75.6309, 35.4005, -10.2552, 0.55", "79.4044, 35.1028, -11.0384, 0.55", "81.1508, 34.9533, -11.4492, 0.55", "85.2798, 34.4982, -12.4588, 0.55", "88.0933, 34.1139, -13.0733, 0.55", "90.1474, 33.8605, -13.4467, 0.83", "93.4454, 33.3778, -13.9584, 0.55", "96.6803, 32.8374, -14.2902, 0.83", "99.4295, 32.3238, -14.4382, 0.55", "101.844, 31.9474, -14.4868, 0.55", "103.19, 31.8118, -14.4826, 0.83", "106.297, 31.5747, -14.3446, 0.28", "107.808, 31.5506, -14.2267, 0.28", "109.305, 31.4178, -14.1304, 0.28", "110.917, 31.3056, -14.0525, 0.28", "113.498, 31.1414, -13.9945, 0.28", "114.527, 31.0991, -13.9521, 0.55", "116.933, 31.1248, -13.6654, 0.55", "121.225, 31.2351, -12.9459, 0.55", "122.408, 31.2634, -12.6872, 0.55", "123.462, 31.2806, -12.4004, 0.83", "125.696, 31.462, -11.6553, 0.55", "127.63, 31.6376, -10.9825, 0.55", "129.454, 31.8143, -10.3432, 0.55", "130.881, 31.9108, -9.87059, 0.55", "133.201, 31.8768, -9.13749, 0.55", "136.018, 31.5659, -8.283, 0.55", "140.558, 30.5452, -6.97218, 0.55", "143.152, 29.6281, -6.20913, 0.55", "145.494, 28.4954, -5.46359, 0.28", "146.226, 28.0297, -5.20566, 0.55", "147.942, 26.6274, -4.49543, 0.28", "149.532, 24.9704, -3.68886, 0.55", "151.141, 22.8955, -2.5286, 0.55", "152.198, 21.5763, -1.69322, 0.28", "152.573, 21.127, -1.37155, 0.55", "153.529, 20.0296, -0.552127, 0.28", "154.803, 18.6378, 0.558637, 0.55", "158.022, 15.3962, 3.35194, 0.55", "159.672, 13.799, 4.80647, 0.55", "161.195, 12.3493, 6.15771, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "53.8691, 32.1915, -13.5011, 0.55", "56.1241, 34.4811, -11.393, 0.55", "56.8606, 35.1902, -10.7627, 0.55", "59.6876, 37.6185, -8.47417, 0.55", "62.8086, 40.4226, -5.90211, 0.55", "66.7798, 44.0634, -2.4777, 0.55", "67.8785, 45.0665, -1.54109, 0.55", "69.882, 46.771, 0.161573, 0.55", "72.0857, 48.6514, 1.90385, 0.55", "74.6575, 50.8556, 3.75691, 0.55", "77.0667, 52.9748, 5.49317, 0.55", "78.3859, 54.1712, 6.34088, 0.55", "79.9201, 55.6238, 7.30717, 0.55", "81.8091, 57.4635, 8.43098, 0.83", "85.0028, 60.296, 9.90069, 0.55", "87.1754, 62.0285, 10.8074, 0.83", "90.2668, 64.2358, 12.0298, 0.55", "91.2366, 64.8536, 12.4186, 0.55", "94.3092, 66.5902, 13.6383, 0.55", "99.9676, 69.2664, 15.7681, 0.55", "104.205, 70.962, 17.3492, 0.55", "107.584, 72.1937, 18.754, 0.55", "111.053, 73.3332, 20.3883, 0.55", "111.788, 73.5565, 20.7451, 0.28", "113.295, 73.9528, 21.4941, 0.83", "119.501, 75.5136, 24.6462, 0.55", "123.862, 76.5737, 26.7697, 0.55", "127.394, 77.5643, 28.5541, 0.55", "129.5, 78.1592, 29.6425, 0.83", "131.152, 78.651, 30.4907, 0.28", "132.652, 79.093, 31.2454, 0.55", "143.116, 85.8968, 37.3656, 0.55", "155.379, 90.1544, 42.3398, 0.55", "166.996, 96.0936, 47.1348, 0.55", "177.158, 101.065, 55.2135, 0.55", "186.898, 104.408, 64.5519, 0.55", "198.969, 104.833, 71.433, 0.55", "211.688, 103.154, 76.7861, 0.55", "225.091, 103.622, 80.4445, 0.55", "238.209, 104.235, 85.0026, 0.55", "251.635, 105.952, 88.1713, 0.55", "264.462, 108.891, 92.6528, 0.55", "276.934, 109.834, 98.7183, 0.55", "288.795, 113.519, 104.961, 0.55", "299.179, 119.543, 111.97, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.715041, -21.8496, 4.97835, 1.38", "2.86826, -24.8411, 5.56435, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.715041, -21.8496, 4.97835, 0.55", "-1.77125, -23.4261, 4.67335, 0.55", "-2.91855, -25.4307, 4.34269, 0.55", "-3.83297, -26.7699, 4.09181, 0.55", "-4.56145, -27.8896, 3.74445, 0.55", "-6.10365, -30.2159, 2.8049, 0.55", "-7.17945, -31.7744, 2.10746, 0.55", "-8.12102, -33.1708, 1.44287, 0.55", "-10.5551, -36.5819, -0.265595, 0.55", "-13.5, -40.5416, -2.2925, 0.55", "-15.7703, -43.5454, -3.91256, 0.55", "-17.2069, -45.5138, -4.97149, 0.55", "-18.8494, -47.8683, -6.1781, 0.55", "-20.915, -51.2189, -7.66645, 0.55", "-22.1024, -53.5712, -8.49634, 0.55", "-23.583, -56.9313, -9.34424, 0.55", "-24.7468, -60.0599, -9.95106, 0.55", "-25.8749, -63.9369, -10.523, 0.55", "-26.8894, -68.4622, -10.9822, 0.55", "-27.3744, -71.8965, -11.1552, 0.55", "-27.5402, -73.5972, -11.1017, 0.55", "-27.7697, -77.5756, -10.6985, 0.55", "-27.9511, -81.2933, -10.2089, 0.55", "-28.0351, -85.0242, -9.39471, 0.55", "-28.1398, -87.1665, -8.82312, 0.55", "-28.4988, -93.7871, -6.81205, 0.55", "-28.5309, -94.2748, -6.65681, 0.55", "-28.6962, -97.2577, -5.61941, 0.55", "-29.2659, -102.61, -3.72023, 0.55", "-29.4343, -104.401, -3.18926, 0.55", "-29.6185, -107.205, -2.83553, 0.55", "-29.5898, -108.245, -2.92185, 0.55", "-29.1466, -111.751, -3.79431, 0.55", "-28.5944, -114.013, -4.77722, 0.55", "-27.3989, -117.608, -7.01325, 0.55", "-25.6624, -121.992, -10.0207, 0.28", "-25.1721, -123.074, -10.8999, 0.55", "-24.3795, -124.714, -12.3706, 0.28", "-24.2582, -124.962, -12.6055, 0.55", "-23.6377, -126.317, -13.783, 0.28", "-23.4897, -126.78, -14.0905, 0.55", "-22.9129, -129.19, -15.2602, 0.28", "-22.75, -130.012, -15.658, 0.55", "-22.3482, -132.392, -16.6883, 0.28", "-22.2193, -133.142, -17.009, 0.55", "-21.8076, -135.728, -18.082, 0.28", "-21.6104, -136.918, -18.5795, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.86701, -74.3403, 60.8617, 0.55", "-11.7635, -80.326, 65.8239, 0.55", "-15.6069, -85.7485, 70.7904, 0.55", "-19.0638, -91.6662, 75.4671, 0.55", "-22.6255, -97.6396, 79.9919, 0.55", "-25.0748, -104.372, 84.1765, 0.55", "-27.5765, -110.825, 88.7533, 0.55", "-28.6209, -118.388, 92.0006, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.86701, -74.3403, 60.8617, 0.55", "-7.94777, -81.682, 68.0155, 0.55", "-6.58857, -90.15, 73.7047, 0.55", "-6.88126, -98.738, 79.3686, 0.55", "-7.75546, -107.839, 84.093, 0.55", "-8.2157, -116.89, 88.9718, 0.55", "-8.60503, -125.568, 94.4903, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-54.0971, 44.1795, -17.1196, 0.83", "-53.948, 45.2742, -18.855, 0.83", "-53.6445, 47.9677, -22.7735, 0.55", "-53.4976, 49.1517, -24.3445, 0.83", "-53.3224, 50.4378, -25.921, 0.55", "-53.1162, 51.8027, -27.3189, 0.55", "-52.9943, 52.5072, -27.92, 0.28", "-52.931, 52.9995, -28.1823, 0.55", "-52.6215, 54.7111, -28.6921, 0.28", "-52.4658, 55.4497, -28.875, 0.55", "-51.9437, 58.0379, -29.4015, 0.28", "-51.575, 60.103, -29.7423, 0.55", "-51.1414, 63.3497, -30.1552, 0.28", "-50.853, 66.2157, -30.4511, 0.28", "-50.7797, 67.8274, -30.5741, 0.55", "-50.8083, 69.7406, -30.7038, 0.28", "-50.8794, 70.6569, -30.7455, 0.55", "-51.174, 72.7965, -30.9228, 0.28", "-51.4731, 74.2107, -31.1015, 0.28", "-51.8015, 75.5923, -31.3149, 0.28", "-51.9476, 76.3214, -31.4342, 0.55", "-52.3893, 79.2573, -32.0062, 0.28", "-52.8047, 82.7223, -32.7627, 0.55", "-52.9311, 83.9181, -33.031, 0.55", "-53.0739, 85.1217, -33.2716, 0.55", "-53.5182, 87.6721, -33.8063, 0.55", "-53.9227, 89.3403, -34.1792, 0.28", "-54.1507, 89.9704, -34.319, 0.55", "-54.8849, 91.6833, -34.6455, 0.28", "-55.7506, 93.4937, -35.0553, 0.55", "-57.254, 96.0778, -35.7142, 0.28", "-58.0055, 97.1497, -36.0088, 0.28", "-59.2667, 98.6121, -36.5451, 0.55", "-60.6978, 100.12, -37.1735, 0.28", "-60.9617, 100.354, -37.2796, 0.55", "-61.92, 101.095, -37.6357, 0.28", "-65.2315, 103.463, -38.7646, 0.55", "-69.8889, 106.324, -40.4253, 0.28", "-70.76, 106.791, -40.7714, 0.55", "-73.1634, 107.974, -41.743, 0.28", "-74.1772, 108.453, -42.1744, 0.28", "-75.0655, 108.841, -42.585, 0.55", "-77.7125, 109.645, -43.9173, 0.28", "-79.5843, 110.049, -44.7549, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-54.0971, 44.1795, -17.1196, 0.55", "-54.4317, 45.996, -17.2363, 0.55", "-54.6631, 47.0591, -17.2072, 0.28", "-54.9933, 47.7957, -17.0101, 0.55", "-55.7516, 49.4874, -16.5575, 0.28", "-56.2841, 50.6757, -16.2396, 0.55", "-57.266, 52.8662, -15.6535, 0.28", "-57.9294, 54.0165, -15.1358, 0.55", "-60.4422, 56.6215, -12.9334, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-126.082, -61.0742, 45.9265, 0.55", "-131.155, -70.33, 49.5027, 0.55", "-134.463, -80.5191, 52.5729, 0.55", "-137.348, -91.2629, 53.2375, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-126.082, -61.0742, 45.9265, 0.55", "-130.597, -68.0641, 46.9035, 0.55", "-134.471, -75.4929, 46.9219, 0.55", "-138.03, -83.0761, 46.7705, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-157.732, 34.0113, 100.414, 0.55", "-164.314, 35.507, 107.554, 0.55", "-171.691, 37.8767, 113.594, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-157.732, 34.0113, 100.414, 0.55", "-165.07, 33.7524, 105.958, 0.55", "-172.695, 34.8949, 110.98, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "69.9236, -49.8294, -111.708, 0.28", "75.9937, -52.1661, -123.746, 0.28", "76.5829, -52.4768, -124.838, 0.55", "77.5775, -53.0013, -126.681, 0.28", "78.415, -53.4429, -128.233, 0.28", "79.5236, -54.0275, -130.288, 0.55", "80.9852, -54.7982, -132.997, 0.55", "82.8183, -56.6753, -134.691, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "69.9236, -49.8294, -111.708, 0.55", "70.3536, -50.6475, -113.093, 0.55", "70.4559, -50.9991, -113.708, 0.28", "70.5871, -51.5884, -114.78, 0.55", "70.8761, -52.8865, -117.14, 0.28", "71.0763, -53.7861, -118.776, 0.55", "71.4156, -55.3103, -121.547, 0.28", "71.7604, -57.0965, -125.138, 0.28", "71.8668, -57.9008, -126.813, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "161.195, 12.3493, 6.15771, 0.28", "163.353, 11.2214, 8.38944, 0.28", "166.016, 9.84553, 11.5701, 0.28", "167.681, 8.98746, 13.7074, 0.55", "168.658, 8.57569, 14.9491, 0.28", "169.176, 8.35522, 15.6224, 0.28", "171.758, 7.24246, 18.9039, 0.55", "172.323, 7.0547, 19.7182, 0.28", "173.629, 6.57575, 21.9585, 0.55", "174.764, 6.11291, 23.8437, 0.28", "175.76, 5.74689, 25.3618, 0.55", "176.958, 5.24398, 27.0871, 0.55", "178.96, 4.26614, 29.5478, 0.55", "179.45, 4.01047, 30.1309, 0.55", "181.223, 3.01595, 32.2772, 0.28", "181.921, 2.58279, 33.1281, 0.55", "182.886, 2.05424, 34.22, 0.28", "184.272, 1.25673, 35.7005, 0.55", "186.669, -0.186066, 37.7016, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "161.195, 12.3493, 6.15771, 0.55", "158.9, 11.6473, 5.73144, 0.55", "157.037, 11.0773, 5.38527, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.86826, -24.8411, 5.56435, 0.83", "3.00654, -25.0615, 5.60985, 0.83", "4.44742, -26.9712, 6.27192, 0.83", "5.76643, -28.6421, 6.74188, 0.55", "6.81871, -29.9751, 7.11681, 0.55", "9.05538, -32.8084, 7.91374, 0.83", "11.7683, -36.2451, 8.88037, 0.55", "13.2167, -38.0373, 9.44565, 0.83", "15.6634, -40.8588, 10.5784, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.86826, -24.8411, 5.56435, 0.55", "3.2999, -26.1414, 2.08585, 0.55", "3.76322, -27.537, -1.64789, 0.55", "4.31017, -29.1846, -6.0556, 0.55", "4.97435, -31.1853, -11.408, 0.55", "5.35125, -32.3206, -14.4453, 0.55", "5.42696, -32.5487, -15.0554, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.60503, -125.568, 94.4903, 0.55", "-8.10933, -135.228, 101.712, 0.55", "-5.76763, -145.299, 107.941, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.60503, -125.568, 94.4903, 0.55", "-9.31029, -133.604, 99.1627, 0.55", "-10.2654, -141.374, 104.224, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-60.4422, 56.6215, -12.9334, 0.28", "-62.7017, 58.216, -10.7889, 0.28", "-63.5675, 58.8019, -9.87587, 0.55", "-66.0555, 60.4922, -7.17401, 0.28", "-67.2755, 61.3531, -5.96281, 0.55", "-70.5887, 63.7033, -2.80756, 0.28", "-73.9561, 66.0919, 0.399317, 0.55", "-79.5128, 69.7499, 5.70873, 0.28", "-80.6967, 70.538, 6.84208, 0.55", "-83.301, 72.4452, 9.27001, 0.28", "-84.3215, 73.2506, 10.234, 0.55", "-95.181, 77.9441, 17.8001, 0.55", "-106.673, 84.5965, 22.3678, 0.55", "-117.022, 91.4101, 28.9765, 0.55", "-125.673, 100.077, 35.8508, 0.55", "-135.577, 108.267, 41.5101, 0.55", "-146.628, 114.044, 47.97, 0.55", "-156.973, 118.493, 56.3597, 0.55", "-166.19, 121.343, 66.5638, 0.55", "-175.439, 125.05, 76.4587, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-60.4422, 56.6215, -12.9334, 0.55", "-63.1425, 55.4359, -12.1571, 0.55", "-64.5421, 54.7731, -11.7607, 0.28", "-65.5836, 54.2798, -11.4657, 0.55", "-66.4517, 53.8687, -11.2198, 0.28", "-67.0597, 53.5808, -11.0475, 0.55", "-68.7363, 52.7867, -10.5726, 0.28", "-69.8326, 52.1769, -10.4074, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-137.348, -91.2629, 53.2375, 0.55", "-140.564, -103.158, 58.8902, 0.55", "-143.119, -114.524, 65.8263, 0.55", "-145.27, -127.072, 70.4861, 0.55", "-148.336, -138.601, 76.9283, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-137.348, -91.2629, 53.2375, 0.55", "-144.234, -101.055, 49.6106, 0.55", "-151.231, -109.858, 44.1325, 0.55", "-158.534, -119.41, 40.6832, 0.55", "-168.212, -126.915, 38.1397, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-138.03, -83.0761, 46.7705, 0.55", "-143.607, -91.1293, 43.606, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-138.03, -83.0761, 46.7705, 0.55", "-140.173, -91.5647, 52.0988, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "82.8183, -56.6753, -134.691, 0.28", "85.9572, -58.5142, -137.054, 0.28", "87.4153, -59.3684, -138.152, 0.55", "90.1958, -60.9972, -140.246, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "82.8183, -56.6753, -134.691, 0.55", "82.1364, -57.9843, -136.479, 0.55", "80.7726, -60.6025, -140.056, 0.28", "80.3284, -61.4554, -141.221, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "71.8668, -57.9008, -126.813, 0.28", "72.3247, -59.7447, -131.235, 0.28", "72.5514, -60.6578, -133.425, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "71.8668, -57.9008, -126.813, 0.55", "69.5454, -58.6269, -126.002, 0.55", "63.072, -60.6516, -123.742, 0.28", "61.5342, -61.1326, -123.205, 0.55", "57.3275, -62.4483, -121.736, 0.28", "54.6159, -63.2965, -120.789, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.6634, -40.8588, 10.5784, 0.83", "15.7588, -41.1286, 10.578, 0.83", "16.9818, -44.6597, 10.6871, 0.83", "17.6053, -47.3572, 10.7476, 0.83", "17.8896, -50.0142, 10.8948, 0.83", "18.0013, -53.5929, 11.2135, 0.83", "17.9478, -57.7462, 11.6225, 0.83", "17.7483, -62.4022, 12.2748, 0.83", "17.4233, -66.9429, 13.0656, 0.83", "16.8395, -72.5584, 13.709, 0.83", "16.5598, -75.1458, 13.8063, 0.83", "16.4207, -77.0822, 13.7838, 0.83", "16.1457, -80.8016, 13.6322, 0.83", "16.0719, -84.106, 13.4091, 0.83", "16.6942, -91.0297, 12.588, 0.83", "17.3858, -94.7663, 11.7908, 0.83", "18.1855, -98.1871, 10.8602, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.6634, -40.8588, 10.5784, 0.55", "14.7432, -43.6886, 10.539, 0.55", "13.9967, -45.7373, 10.6396, 0.55", "13.5062, -47.0355, 10.8344, 0.55", "12.7587, -49.0441, 11.3516, 0.55", "11.2851, -52.9932, 12.6466, 0.55", "10.0324, -55.9657, 13.924, 0.55", "8.94157, -58.3327, 15.1865, 0.55", "7.72558, -60.7203, 16.6011, 0.55", "6.66511, -62.6962, 17.8661, 0.28", "5.69332, -64.2989, 19.115, 0.55", "3.71527, -67.1985, 21.7545, 0.55", "2.34115, -68.9761, 23.5226, 0.55", "1.56437, -69.9739, 24.4997, 0.55", "0.613427, -71.1621, 25.5723, 0.83", "-2.15265, -74.7044, 28.518, 0.28", "-3.05569, -75.8785, 29.463, 0.55", "-4.59938, -77.9944, 31.1265, 0.28", "-5.09149, -78.6436, 31.6844, 0.55", "-6.15571, -80.1594, 32.9956, 0.28", "-6.73271, -81.0247, 33.6825, 0.55", "-8.5068, -83.9099, 35.1342, 0.55", "-12.5346, -91.2627, 42.5376, 0.55", "-16.2594, -98.1657, 50.5107, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.42696, -32.5487, -15.0554, 0.55", "4.09118, -34.077, -18.4804, 0.55", "3.66825, -34.467, -19.457, 0.55", "2.58033, -35.4524, -21.838, 0.55", "0.104706, -37.4941, -26.8789, 0.28", "-0.281099, -37.7862, -27.5913, 0.55", "-1.90684, -39.0852, -30.4623, 0.55", "-4.24863, -40.8907, -34.0609, 0.55", "-5.16654, -41.5415, -35.407, 0.28", "-6.01384, -42.0363, -36.5228, 0.28", "-7.55928, -42.8605, -38.1666, 0.55", "-9.44539, -43.7463, -40.2636, 0.28", "-11.2217, -44.3705, -42.2551, 0.55", "-12.6428, -44.7129, -43.766, 0.55", "-13.6356, -44.8471, -44.846, 0.55", "-16.5606, -45.0773, -48.1264, 0.55", "-19.7269, -45.0753, -51.5176, 0.55", "-21.0689, -44.9935, -52.8837, 0.28", "-22.3297, -44.9369, -54.2073, 0.55", "-24.8489, -45.013, -56.8585, 0.28", "-25.6925, -45.0676, -57.7402, 0.83", "-27.3139, -45.1566, -59.2646, 0.28", "-28.511, -45.3318, -60.1907, 0.55", "-30.2442, -45.6562, -61.4956, 0.28", "-30.9449, -45.7772, -61.9907, 0.55", "-32.2601, -46.0332, -62.8324, 0.55", "-34.327, -46.2112, -64.0283, 0.55", "-35.7228, -46.2461, -64.7337, 0.28", "-36.9098, -46.1406, -65.2167, 0.55", "-38.3482, -45.8534, -65.7958, 0.28", "-38.5872, -45.7884, -65.899, 0.55", "-40.7069, -45.1227, -67.1998, 0.28", "-42.209, -44.6012, -68.2999, 0.55", "-44.1475, -43.7702, -70.0197, 0.83", "-45.7026, -43.0387, -71.6153, 0.28", "-46.0918, -42.8503, -72.0679, 0.55", "-49.0147, -41.4406, -75.7139, 0.28", "-49.508, -41.1997, -76.4062, 0.55", "-50.9607, -40.3716, -78.5541, 0.28", "-51.3345, -40.1587, -79.1117, 0.55", "-52.319, -39.6063, -80.4684, 0.28", "-53.0334, -39.2092, -81.3811, 0.55", "-54.7075, -38.3394, -83.1601, 0.28", "-55.6963, -37.8988, -84.1756, 0.55", "-57.8092, -37.1049, -86.2231, 0.28", "-58.4332, -36.9054, -86.822, 0.55", "-59.4043, -36.6751, -87.722, 0.28", "-60.2389, -36.4851, -88.4419, 0.55", "-61.9988, -36.1222, -89.8281, 0.28", "-62.5313, -36.0264, -90.2274, 0.55", "-66.5608, -35.2468, -93.0072, 0.28", "-68.033, -34.8795, -93.8594, 0.55", "-70.733, -34.1109, -95.2183, 0.28", "-71.9702, -33.7208, -95.7961, 0.55", "-74.8424, -32.854, -96.9687, 0.28", "-75.8976, -32.5813, -97.3559, 0.55", "-79.6893, -31.9211, -98.5601, 0.28", "-81.2308, -31.8309, -99.0448, 0.55", "-83.3566, -32.0482, -99.7051, 0.55", "-84.6526, -32.2655, -100.079, 0.55", "-87.3258, -32.7865, -100.633, 0.28", "-89.9853, -33.3323, -101.012, 0.28", "-92.2159, -33.7817, -101.263, 0.55", "-95.0522, -34.1115, -101.279, 0.28", "-96.524, -34.1156, -101.108, 0.55", "-100.188, -33.626, -100.389, 0.28", "-102.192, -33.0588, -99.6241, 0.55", "-103.544, -32.528, -98.8933, 0.28", "-105.076, -31.9268, -97.7702, 0.55", "-107.012, -31.1178, -96.1738, 0.28", "-107.74, -30.8449, -95.5757, 0.55", "-111.458, -29.7416, -92.8543, 0.28", "-112.704, -29.4132, -91.9478, 0.55", "-115.647, -28.7313, -89.7248, 0.28", "-117.243, -28.378, -88.5176, 0.55", "-118.555, -28.09, -87.5278, 0.55", "-120.123, -27.7576, -86.3821, 0.28", "-120.943, -27.5966, -85.9078, 0.55", "-123.718, -26.9814, -84.4709, 0.28", "-125.199, -26.5114, -83.6935, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.42696, -32.5487, -15.0554, 0.55", "6.03424, -32.5494, -15.6155, 0.55", "6.6451, -32.4583, -16.1641, 0.55", "7.4265, -32.2682, -16.8099, 0.55", "8.07209, -32.0444, -17.3092, 0.55", "12.4138, -29.9894, -20.2585, 0.55", "13.3662, -29.3997, -20.9391, 0.55", "14.7403, -28.4118, -21.9784, 0.55", "15.7034, -27.6739, -22.7215, 0.55", "16.6362, -26.8858, -23.4223, 0.28", "18.0775, -25.5659, -24.4196, 0.55", "20.2475, -23.5076, -25.7659, 0.28", "20.4332, -23.3779, -25.9379, 0.55", "21.4608, -22.917, -27.4039, 0.28", "22.009, -22.7205, -28.5136, 0.55", "22.5142, -22.6264, -29.7719, 0.55", "23.4169, -22.5845, -32.0429, 0.55", "25.2072, -22.5323, -36.4935, 0.55", "26.4678, -22.5175, -39.4595, 0.55", "26.9314, -22.5157, -40.4711, 0.55", "30.1181, -22.4104, -47.0481, 0.55", "31.0476, -22.3361, -48.793, 0.55", "31.6406, -22.2767, -49.7325, 0.55", "33.2218, -22.1526, -51.7996, 0.55", "37.3643, -22.0827, -56.527, 0.55", "38.5476, -22.1147, -57.7507, 0.28", "39.2818, -22.159, -58.396, 0.55", "40.4, -22.2743, -59.3303, 0.28", "40.8997, -22.3687, -59.6786, 0.55", "42.657, -22.8242, -60.326, 0.28", "44.0469, -23.568, -60.0696, 0.55", "44.8893, -24.1247, -59.861, 0.28", "45.6636, -24.7659, -59.5781, 0.55", "46.3579, -25.4929, -59.2672, 0.28", "46.6739, -25.8771, -59.1386, 0.55", "47.4157, -26.8993, -58.7817, 0.28", "47.6295, -27.2087, -58.7366, 0.55", "48.8808, -28.9821, -58.5898, 0.28", "49.5201, -29.7945, -58.6302, 0.55", "51.0204, -31.5098, -58.9121, 0.28", "51.6262, -32.1333, -59.0862, 0.55", "53.7492, -34.1566, -59.7732, 0.28", "54.2764, -34.6471, -59.9635, 0.55", "55.9164, -36.2105, -60.6461, 0.28", "56.2667, -36.5831, -60.781, 0.55", "57.1533, -37.5762, -61.1384, 0.28", "57.6926, -38.1498, -61.4069, 0.55", "58.2591, -38.7069, -61.7148, 0.55", "59.3873, -39.8185, -62.3192, 0.28", "60.1846, -40.4877, -62.7629, 0.55", "62.6908, -42.0614, -64.2083, 0.28", "63.6627, -42.5428, -64.8059, 0.55", "64.3338, -42.8374, -65.2068, 0.28", "65.0141, -43.0927, -65.6029, 0.55", "67.1147, -43.768, -66.7862, 0.28", "68.7101, -44.2966, -67.6435, 0.55", "71.454, -45.3503, -68.9197, 0.28", "72.3178, -45.6761, -69.3177, 0.55", "73.9684, -46.2575, -69.9583, 0.28", "74.5163, -46.4454, -70.1335, 0.55", "75.3951, -46.74, -70.2805, 0.28", "76.1621, -46.9808, -70.3528, 0.55", "78.2049, -47.5407, -70.3637, 0.28", "80.5325, -48.0994, -70.3436, 0.28", "81.6928, -48.3352, -70.2601, 0.28", "82.8688, -48.5403, -70.2405, 0.55", "84.5787, -48.7696, -70.2197, 0.28", "85.3356, -48.8612, -70.196, 0.83", "87.258, -49.1177, -70.0677, 0.28", "88.1014, -49.2461, -70.0542, 0.55", "91.8506, -49.9367, -70.1477, 0.28", "93.748, -50.3024, -70.3288, 0.28", "95.1385, -50.5689, -70.5404, 0.55", "95.9603, -50.7399, -70.7439, 0.55", "98.1599, -51.2216, -71.4331, 0.28", "100.233, -51.7526, -72.1481, 0.55", "102.127, -52.286, -72.7984, 0.28", "103.849, -52.791, -73.4636, 0.55", "105.271, -53.1938, -74.0066, 0.28", "106.421, -53.4517, -74.3988, 0.55", "109.173, -53.9372, -75.2369, 0.28", "110.564, -54.1803, -75.6115, 0.55", "112.648, -54.549, -76.1064, 0.28", "114.346, -54.8072, -76.4776, 0.55", "118.301, -55.259, -77.3548, 0.28", "119.909, -55.3647, -77.8098, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-5.76763, -145.299, 107.941, 0.55", "-4.82828, -153.309, 112.136, 0.55", "-2.48186, -161.752, 114.555, 0.55", "-0.97238, -170.01, 118.045, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-5.76763, -145.299, 107.941, 0.55", "-4.82324, -151.373, 113.161, 0.55", "-5.47484, -156.883, 119.015, 0.55", "-6.79863, -161.138, 125.737, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.2654, -141.374, 104.224, 0.55", "-10.2612, -144.733, 106.012, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-10.2654, -141.374, 104.224, 0.55", "-11.7494, -149.513, 109.613, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "18.1855, -98.1871, 10.8602, 0.83", "19.244, -102.734, 12.2699, 0.83", "20.0364, -106.571, 13.7865, 0.83", "20.8241, -110.385, 15.294, 0.83", "21.5722, -114.007, 16.7257, 0.83", "22.725, -119.589, 18.932, 0.83", "23.8695, -125.131, 21.1224, 0.83", "24.461, -128.808, 23.121, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "18.1855, -98.1871, 10.8602, 0.55", "19.4751, -99.9652, 12.0261, 0.55", "20.6736, -101.325, 12.7432, 0.55", "21.6114, -102.325, 13.1574, 0.55", "22.7061, -103.508, 13.3733, 0.83", "24.0245, -104.847, 13.4166, 0.55", "25.3139, -106.155, 13.459, 0.83", "26.7665, -107.571, 13.3339, 0.55", "27.6745, -108.383, 13.201, 0.83", "30.7092, -111.0, 12.5131, 0.55", "33.0761, -113.067, 11.7208, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-16.2594, -98.1657, 50.5107, 0.55", "-20.4279, -105.561, 55.4785, 0.55", "-25.9578, -112.054, 60.3775, 0.55", "-32.2311, -117.636, 65.4998, 0.55", "-39.3712, -122.103, 70.5805, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-16.2594, -98.1657, 50.5107, 0.55", "-20.6402, -105.943, 56.4689, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "24.461, -128.808, 23.121, 0.55", "24.6092, -131.127, 23.8301, 0.55", "24.8322, -134.077, 24.8412, 0.55", "25.0512, -136.861, 25.7826, 0.55", "25.2018, -138.844, 26.4137, 0.55", "25.4632, -142.385, 27.4717, 0.55", "26.4566, -152.313, 30.2955, 0.55", "26.9376, -155.668, 31.1654, 0.55", "27.3442, -158.03, 31.6769, 0.55", "27.9361, -160.718, 32.0785, 0.55", "28.455, -162.797, 32.2057, 0.55", "29.8963, -167.628, 32.3942, 0.55", "30.8783, -171.316, 32.4691, 0.55", "31.5456, -173.729, 32.6149, 0.55", "33.0957, -179.998, 33.2716, 0.55", "34.0208, -184.222, 33.8685, 0.55", "35.0845, -189.672, 34.9269, 0.55", "36.1268, -195.857, 36.5963, 0.55", "36.8618, -199.964, 38.0325, 0.55", "37.3164, -202.383, 38.9691, 0.55", "37.7015, -204.621, 39.8061, 0.55", "38.2986, -207.442, 40.7688, 0.55", "39.8954, -214.246, 42.6297, 0.55", "40.6422, -216.862, 43.3049, 0.55", "41.4208, -219.786, 44.004, 0.55", "42.5687, -224.182, 45.0151, 0.55", "43.2932, -227.587, 45.744, 0.55", "43.8346, -230.849, 46.3066, 0.55", "44.2275, -233.981, 46.7761, 0.55", "44.5431, -237.046, 47.2485, 0.55", "44.7901, -239.226, 47.5718, 0.55", "45.2739, -242.784, 48.0017, 0.55", "45.9622, -247.057, 48.1985, 0.55", "46.421, -249.12, 48.1807, 0.55", "46.9098, -250.925, 48.0514, 0.55", "48.0724, -254.3, 47.7014, 0.55", "48.8199, -256.442, 47.4145, 0.55", "49.7177, -259.079, 47.1665, 0.55", "50.2289, -260.948, 47.06, 0.55", "51.3844, -265.823, 46.912, 0.55", "52.0389, -269.495, 46.9927, 0.55", "52.7369, -275.207, 47.4883, 0.55", "53.0855, -278.89, 48.1563, 0.55", "53.3632, -282.765, 48.9551, 0.28", "53.4091, -284.33, 49.3144, 0.28", "53.3355, -288.141, 50.4827, 0.28", "53.1018, -291.674, 51.7924, 0.28", "52.9307, -296.292, 54.1542, 0.28", "55.0496, -306.401, 57.7718, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "24.461, -128.808, 23.121, 0.55", "24.754, -129.099, 24.2242, 0.55", "25.244, -129.904, 26.5582, 0.55", "25.6144, -130.722, 28.6066, 0.28", "25.9666, -131.668, 30.8288, 0.55", "26.0341, -132.297, 32.2315, 0.28", "25.9778, -133.46, 34.7358, 0.55", "25.7412, -134.115, 35.8741, 0.28", "25.5997, -134.361, 36.3055, 0.28", "25.3365, -134.716, 37.0518, 0.55", "24.4531, -135.872, 39.9075, 0.28", "24.1099, -136.319, 41.1121, 0.55", "23.4034, -137.567, 44.6658, 0.28", "23.1253, -138.165, 46.5642, 0.28", "22.9004, -138.915, 48.8994, 0.55", "22.8313, -140.042, 52.3041, 0.28", "22.8639, -140.185, 52.7523, 0.55", "23.1529, -140.86, 54.9173, 0.28", "23.1984, -140.92, 55.1075, 0.55", "23.5893, -141.674, 56.8086, 0.28", "23.7412, -142.099, 57.6353, 0.55", "24.8733, -145.216, 64.4415, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-39.3712, -122.103, 70.5805, 0.55", "-44.4746, -125.869, 77.8832, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-39.3712, -122.103, 70.5805, 0.55", "-45.4278, -129.583, 73.9917, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_BP_03b3d4a19f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.72562, 8.93319, 2.97855, 0.83 ) }
    dend_43 { pt3dadd( -7.46618, 11.8324, 3.54267, 1.11 ) }
    dend_43 { pt3dadd( -9.67163, 13.5407, 3.83612, 0.83 ) }
    dend_43 { pt3dadd( -11.8144, 15.186, 4.09905, 0.83 ) }
    dend_43 { pt3dadd( -13.083, 16.1241, 4.24313, 1.11 ) }
    dend_43 { pt3dadd( -17.0557, 19.0557, 4.70489, 1.11 ) }
    dend_43 { pt3dadd( -24.1614, 24.0747, 5.52116, 0.83 ) }
    dend_43 { pt3dadd( -26.7213, 25.814, 5.79071, 0.83 ) }
    dend_43 { pt3dadd( -28.7486, 27.1504, 5.95814, 0.83 ) }
    dend_43 { pt3dadd( -30.7254, 28.4748, 6.10307, 0.83 ) }
    dend_43 { pt3dadd( -32.3345, 29.5663, 6.18126, 0.55 ) }
    dend_43 { pt3dadd( -33.5441, 30.3055, 6.26062, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.93621, 6.38444, -6.32256, 0.55 ) }
    dend_28 { pt3dadd( 8.09235, 7.06718, -7.02739, 0.55 ) }
    dend_28 { pt3dadd( 9.92375, 7.23953, -7.96002, 0.83 ) }
    dend_28 { pt3dadd( 12.8222, 7.42294, -9.69245, 0.55 ) }
    dend_28 { pt3dadd( 14.2214, 7.51148, -10.5287, 1.38 ) }
    dend_28 { pt3dadd( 17.6617, 7.72917, -12.5849, 0.55 ) }
    dend_28 { pt3dadd( 19.1269, 7.65546, -13.566, 0.83 ) }
    dend_28 { pt3dadd( 26.7064, 6.30353, -19.0785, 0.55 ) }
    dend_28 { pt3dadd( 27.4396, 6.12173, -19.6849, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.677435, -9.89702, 3.02099, 1.11 ) }
    dend_1 { pt3dadd( -0.713057, -13.04, 4.14776, 1.11 ) }
    dend_1 { pt3dadd( -0.727565, -14.3201, 4.60665, 0.83 ) }
    dend_1 { pt3dadd( -0.746839, -16.0207, 5.21631, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.768409, 9.76907, -1.36295, 1.11 ) }
    dend_0 { pt3dadd( 0.730704, 11.6793, -1.3571, 1.11 ) }
    dend_0 { pt3dadd( 0.630238, 14.7953, -1.24036, 1.38 ) }
    dend_0 { pt3dadd( 0.626679, 14.969, -1.23005, 1.38 ) }
    dend_0 { pt3dadd( 0.700898, 17.1262, -1.04634, 0.83 ) }
    dend_0 { pt3dadd( 0.834716, 19.4125, -0.710322, 0.83 ) }
    dend_0 { pt3dadd( 1.11148, 22.0066, 0.0269606, 0.83 ) }
    dend_0 { pt3dadd( 1.29938, 22.9976, 0.454452, 0.83 ) }
    dend_0 { pt3dadd( 1.50684, 23.7207, 0.858023, 1.11 ) }
    dend_0 { pt3dadd( 2.16538, 25.4923, 1.93398, 0.55 ) }
    dend_0 { pt3dadd( 2.93654, 27.3486, 3.21513, 0.83 ) }
    dend_0 { pt3dadd( 4.02579, 29.2779, 4.72852, 0.55 ) }
    dend_0 { pt3dadd( 4.6098, 30.0881, 5.43932, 0.83 ) }
    dend_0 { pt3dadd( 5.40513, 31.1873, 6.51671, 0.55 ) }
    dend_0 { pt3dadd( 6.36274, 32.5832, 7.9431, 0.55 ) }
    dend_0 { pt3dadd( 7.65224, 34.6751, 10.0753, 0.55 ) }
    dend_0 { pt3dadd( 9.06742, 37.0614, 12.4272, 0.55 ) }
    dend_0 { pt3dadd( 9.89837, 38.6077, 14.123, 0.55 ) }
    dend_0 { pt3dadd( 10.8425, 40.5595, 16.4552, 0.55 ) }
    dend_0 { pt3dadd( 11.0293, 40.9516, 16.9769, 0.83 ) }
    dend_0 { pt3dadd( 11.5005, 41.9877, 18.4336, 0.55 ) }
    dend_0 { pt3dadd( 11.9202, 42.7987, 19.5907, 0.83 ) }
    dend_0 { pt3dadd( 12.8483, 44.9953, 22.3161, 0.55 ) }
    dend_0 { pt3dadd( 13.2533, 45.7989, 23.1486, 0.83 ) }
    dend_0 { pt3dadd( 13.6897, 46.399, 23.7571, 0.55 ) }
    dend_0 { pt3dadd( 14.1557, 46.9204, 24.2595, 0.83 ) }
    dend_0 { pt3dadd( 15.2387, 47.903, 25.2346, 0.83 ) }
    dend_0 { pt3dadd( 16.7124, 49.2378, 26.3664, 0.83 ) }
    dend_0 { pt3dadd( 17.6454, 50.1151, 26.9427, 0.55 ) }
    dend_0 { pt3dadd( 18.3506, 50.8676, 27.3855, 0.55 ) }
    dend_0 { pt3dadd( 20.2096, 52.8138, 28.514, 0.83 ) }
    dend_0 { pt3dadd( 21.4264, 54.0625, 29.1866, 0.55 ) }
    dend_0 { pt3dadd( 23.3008, 55.8963, 30.1225, 0.55 ) }
    dend_0 { pt3dadd( 25.0475, 57.4437, 30.9045, 0.55 ) }
    dend_0 { pt3dadd( 26.6265, 58.7602, 31.5583, 0.55 ) }
    dend_0 { pt3dadd( 28.6557, 60.3123, 32.2867, 0.55 ) }
    dend_0 { pt3dadd( 29.9179, 61.0888, 32.6912, 0.55 ) }
    dend_0 { pt3dadd( 30.8136, 61.5352, 32.8595, 0.55 ) }
    dend_0 { pt3dadd( 32.0443, 61.901, 32.9849, 0.55 ) }
    dend_0 { pt3dadd( 33.9387, 62.1455, 33.0295, 0.55 ) }
    dend_0 { pt3dadd( 35.1403, 62.1515, 33.0164, 0.55 ) }
    dend_0 { pt3dadd( 36.8681, 62.1144, 33.1126, 0.55 ) }
    dend_0 { pt3dadd( 40.0783, 62.1459, 33.5725, 0.55 ) }
    dend_0 { pt3dadd( 42.5435, 62.2872, 34.1055, 0.55 ) }
    dend_0 { pt3dadd( 45.1072, 62.564, 34.823, 0.55 ) }
    dend_0 { pt3dadd( 46.7122, 62.8001, 35.4132, 0.55 ) }
    dend_0 { pt3dadd( 50.7818, 63.8165, 37.2242, 0.55 ) }
    dend_0 { pt3dadd( 53.1258, 64.6207, 38.4849, 0.55 ) }
    dend_0 { pt3dadd( 54.8274, 65.3532, 39.6075, 0.55 ) }
    dend_0 { pt3dadd( 55.8373, 65.9977, 40.3318, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 56.9983, 66.9329, 41.1619, 0.55 ) }
    dend_0 { pt3dadd( 59.0042, 68.7536, 42.3593, 0.55 ) }
    dend_0 { pt3dadd( 59.4826, 69.1905, 42.5611, 0.55 ) }
    dend_0 { pt3dadd( 60.8867, 70.3649, 43.042, 0.55 ) }
    dend_0 { pt3dadd( 62.1688, 71.6023, 43.4763, 0.83 ) }
    dend_0 { pt3dadd( 62.8711, 72.2879, 43.7012, 0.55 ) }
    dend_0 { pt3dadd( 63.9264, 73.4546, 43.991, 0.83 ) }
    dend_0 { pt3dadd( 69.0571, 79.6797, 47.0837, 0.83 ) }
    dend_0 { pt3dadd( 73.5312, 86.7182, 49.3385, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -33.5441, 30.3055, 6.26062, 0.55 ) }
    dend_55 { pt3dadd( -35.288, 31.2286, 5.36411, 0.55 ) }
    dend_55 { pt3dadd( -37.1844, 32.2323, 4.38925, 0.55 ) }
    dend_55 { pt3dadd( -39.473, 33.4437, 3.2128, 0.55 ) }
    dend_55 { pt3dadd( -41.3627, 34.4439, 2.24138, 0.83 ) }
    dend_55 { pt3dadd( -42.9462, 35.2821, 1.42733, 0.55 ) }
    dend_55 { pt3dadd( -45.8856, 36.8379, -0.0836721, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -33.5441, 30.3055, 6.26062, 0.55 ) }
    dend_44 { pt3dadd( -35.4722, 30.5645, 6.36287, 0.55 ) }
    dend_44 { pt3dadd( -37.4803, 30.8191, 6.67789, 0.55 ) }
    dend_44 { pt3dadd( -39.746, 31.1154, 7.08969, 0.55 ) }
    dend_44 { pt3dadd( -42.965, 31.5714, 7.98671, 0.55 ) }
    dend_44 { pt3dadd( -45.6146, 31.914, 8.94362, 0.55 ) }
    dend_44 { pt3dadd( -48.366, 32.2545, 10.0762, 0.55 ) }
    dend_44 { pt3dadd( -50.9535, 32.4581, 11.5018, 0.55 ) }
    dend_44 { pt3dadd( -53.1195, 32.449, 13.0026, 0.55 ) }
    dend_44 { pt3dadd( -55.7407, 32.2956, 15.2279, 0.55 ) }
    dend_44 { pt3dadd( -56.8379, 32.1714, 16.392, 0.55 ) }
    dend_44 { pt3dadd( -58.0099, 32.0349, 17.7118, 0.55 ) }
    dend_44 { pt3dadd( -60.0879, 31.5838, 19.9671, 0.55 ) }
    dend_44 { pt3dadd( -61.2359, 31.3047, 20.9631, 0.55 ) }
    dend_44 { pt3dadd( -62.4373, 30.9686, 22.0069, 0.55 ) }
    dend_44 { pt3dadd( -63.9008, 30.5551, 23.081, 0.55 ) }
    dend_44 { pt3dadd( -65.5035, 30.1326, 24.193, 0.55 ) }
    dend_44 { pt3dadd( -67.8016, 29.5119, 25.7269, 0.55 ) }
    dend_44 { pt3dadd( -70.947, 28.8462, 27.4314, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 27.4396, 6.12173, -19.6849, 0.55 ) }
    dend_34 { pt3dadd( 31.619, 7.01411, -20.5683, 0.55 ) }
    dend_34 { pt3dadd( 34.0118, 7.42767, -21.4279, 0.55 ) }
    dend_34 { pt3dadd( 36.3656, 7.73459, -22.3225, 0.55 ) }
    dend_34 { pt3dadd( 37.9693, 7.88033, -22.9406, 0.55 ) }
    dend_34 { pt3dadd( 40.3099, 8.03699, -23.8323, 0.55 ) }
    dend_34 { pt3dadd( 45.156, 8.28567, -25.8447, 0.55 ) }
    dend_34 { pt3dadd( 50.6441, 8.57535, -28.4994, 0.55 ) }
    dend_34 { pt3dadd( 53.2903, 8.5704, -29.9914, 0.55 ) }
    dend_34 { pt3dadd( 54.7032, 8.54339, -30.8885, 0.55 ) }
    dend_34 { pt3dadd( 56.2518, 8.52875, -31.9352, 0.55 ) }
    dend_34 { pt3dadd( 59.01, 8.42319, -33.801, 0.55 ) }
    dend_34 { pt3dadd( 60.0069, 8.32903, -34.5194, 0.55 ) }
    dend_34 { pt3dadd( 64.2282, 8.07641, -37.8815, 0.55 ) }
    dend_34 { pt3dadd( 67.2152, 7.97252, -40.4818, 0.55 ) }
    dend_34 { pt3dadd( 68.9363, 7.95243, -42.0233, 0.55 ) }
    dend_34 { pt3dadd( 70.6518, 7.91679, -43.5612, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 27.4396, 6.12173, -19.6849, 0.83 ) }
    dend_29 { pt3dadd( 28.7393, 7.45873, -19.9984, 0.83 ) }
    dend_29 { pt3dadd( 29.4878, 8.20853, -20.217, 0.55 ) }
    dend_29 { pt3dadd( 30.5968, 9.30199, -20.6579, 0.83 ) }
    dend_29 { pt3dadd( 31.3402, 10.0495, -20.9885, 0.55 ) }
    dend_29 { pt3dadd( 32.3544, 11.1169, -21.4387, 0.83 ) }
    dend_29 { pt3dadd( 33.5594, 12.4456, -21.9376, 0.55 ) }
    dend_29 { pt3dadd( 34.1758, 13.0732, -22.1393, 0.55 ) }
    dend_29 { pt3dadd( 35.6388, 14.3412, -22.4045, 0.83 ) }
    dend_29 { pt3dadd( 36.9887, 15.3854, -22.3837, 0.55 ) }
    dend_29 { pt3dadd( 37.7346, 15.9884, -22.2885, 0.83 ) }
    dend_29 { pt3dadd( 38.8283, 16.9653, -22.0234, 0.55 ) }
    dend_29 { pt3dadd( 40.3588, 18.4794, -21.423, 0.55 ) }
    dend_29 { pt3dadd( 42.5011, 20.5016, -20.4126, 0.55 ) }
    dend_29 { pt3dadd( 44.5441, 22.4041, -19.2516, 0.55 ) }
    dend_29 { pt3dadd( 46.1634, 23.9036, -18.2903, 0.55 ) }
    dend_29 { pt3dadd( 48.8269, 26.3954, -16.6944, 0.55 ) }
    dend_29 { pt3dadd( 50.7508, 28.2991, -15.5006, 0.55 ) }
    dend_29 { pt3dadd( 51.8742, 29.5776, -14.7715, 0.55 ) }
    dend_29 { pt3dadd( 53.8691, 32.1915, -13.5011, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.746839, -16.0207, 5.21631, 0.83 ) }
    dend_11 { pt3dadd( -0.738079, -17.6264, 5.15076, 0.83 ) }
    dend_11 { pt3dadd( -0.729545, -19.1908, 5.08689, 0.83 ) }
    dend_11 { pt3dadd( -0.720016, -20.9375, 5.01558, 0.83 ) }
    dend_11 { pt3dadd( -0.715041, -21.8496, 4.97835, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.746839, -16.0207, 5.21631, 0.55 ) }
    dend_2 { pt3dadd( -0.0666638, -17.807, 6.4078, 0.55 ) }
    dend_2 { pt3dadd( 0.554509, -19.9913, 7.9739, 0.55 ) }
    dend_2 { pt3dadd( 0.939698, -22.8474, 10.1653, 0.55 ) }
    dend_2 { pt3dadd( 1.01345, -23.9564, 11.0516, 0.83 ) }
    dend_2 { pt3dadd( 0.960567, -26.7835, 13.6518, 0.55 ) }
    dend_2 { pt3dadd( 0.814927, -28.2416, 15.0294, 0.55 ) }
    dend_2 { pt3dadd( 0.478398, -31.0766, 17.8326, 0.83 ) }
    dend_2 { pt3dadd( 0.114319, -33.1802, 20.0554, 0.55 ) }
    dend_2 { pt3dadd( -0.342521, -34.9128, 21.871, 0.55 ) }
    dend_2 { pt3dadd( -1.28552, -38.1929, 25.254, 0.55 ) }
    dend_2 { pt3dadd( -2.03621, -40.8072, 27.9193, 0.55 ) }
    dend_2 { pt3dadd( -2.5935, -42.9038, 30.0831, 0.55 ) }
    dend_2 { pt3dadd( -3.06581, -45.1316, 32.3026, 0.28 ) }
    dend_2 { pt3dadd( -3.18617, -46.0607, 33.1866, 0.55 ) }
    dend_2 { pt3dadd( -3.36929, -47.7772, 34.7192, 0.28 ) }
    dend_2 { pt3dadd( -3.31319, -50.4614, 36.6727, 0.55 ) }
    dend_2 { pt3dadd( -5.25293, -59.3584, 43.7806, 0.55 ) }
    dend_2 { pt3dadd( -7.37153, -67.5764, 51.6176, 0.55 ) }
    dend_2 { pt3dadd( -8.86701, -74.3403, 60.8617, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -45.8856, 36.8379, -0.0836721, 0.55 ) }
    dend_61 { pt3dadd( -49.1147, 37.0038, 1.56864, 0.55 ) }
    dend_61 { pt3dadd( -50.4731, 36.9924, 2.42712, 0.83 ) }
    dend_61 { pt3dadd( -52.0619, 36.8902, 3.63795, 0.55 ) }
    dend_61 { pt3dadd( -53.2787, 36.8061, 4.67448, 0.83 ) }
    dend_61 { pt3dadd( -56.4696, 36.6999, 7.36786, 0.55 ) }
    dend_61 { pt3dadd( -57.6783, 36.6792, 8.39812, 0.28 ) }
    dend_61 { pt3dadd( -59.6957, 36.6586, 10.2867, 0.55 ) }
    dend_61 { pt3dadd( -62.4028, 36.6474, 12.8088, 0.55 ) }
    dend_61 { pt3dadd( -64.4576, 36.6441, 14.6298, 0.55 ) }
    dend_61 { pt3dadd( -67.2018, 36.6433, 16.9749, 0.28 ) }
    dend_61 { pt3dadd( -67.9143, 36.6526, 17.4986, 0.55 ) }
    dend_61 { pt3dadd( -69.389, 36.6919, 18.5278, 0.28 ) }
    dend_61 { pt3dadd( -70.3902, 36.749, 19.1341, 0.55 ) }
    dend_61 { pt3dadd( -72.4325, 36.86, 20.1939, 0.28 ) }
    dend_61 { pt3dadd( -73.6295, 36.8624, 20.7506, 0.55 ) }
    dend_61 { pt3dadd( -75.7381, 36.7119, 21.743, 0.28 ) }
    dend_61 { pt3dadd( -77.1538, 36.604, 22.3592, 0.55 ) }
    dend_61 { pt3dadd( -85.7924, 35.0725, 29.9269, 0.55 ) }
    dend_61 { pt3dadd( -93.6716, 32.4395, 38.0033, 0.55 ) }
    dend_61 { pt3dadd( -101.222, 28.7317, 45.9709, 0.55 ) }
    dend_61 { pt3dadd( -108.688, 23.7363, 53.2878, 0.55 ) }
    dend_61 { pt3dadd( -114.917, 19.1647, 61.9219, 0.55 ) }
    dend_61 { pt3dadd( -121.996, 15.0211, 70.1043, 0.55 ) }
    dend_61 { pt3dadd( -129.261, 12.7202, 78.8318, 0.55 ) }
    dend_61 { pt3dadd( -136.466, 9.52086, 87.3228, 0.55 ) }
    dend_61 { pt3dadd( -143.481, 7.06884, 96.2118, 0.55 ) }
    dend_61 { pt3dadd( -149.97, 4.44073, 105.443, 0.55 ) }
    dend_61 { pt3dadd( -155.312, 0.518633, 114.947, 0.55 ) }
    dend_61 { pt3dadd( -160.787, -2.35566, 124.745, 0.55 ) }
    dend_61 { pt3dadd( -166.378, -6.35197, 134.073, 0.55 ) }
    dend_61 { pt3dadd( -170.634, -10.8369, 143.872, 0.55 ) }
    dend_61 { pt3dadd( -173.01, -14.5589, 154.584, 0.55 ) }
    dend_61 { pt3dadd( -175.251, -20.3306, 164.377, 0.55 ) }
    dend_61 { pt3dadd( -175.841, -26.293, 174.294, 0.55 ) }
    dend_61 { pt3dadd( -177.059, -31.8007, 184.414, 0.55 ) }
    dend_61 { pt3dadd( -179.529, -36.5126, 194.707, 0.55 ) }
    dend_61 { pt3dadd( -184.413, -39.4573, 204.792, 0.55 ) }
    dend_61 { pt3dadd( -188.279, -43.6617, 214.873, 0.55 ) }
    dend_61 { pt3dadd( -190.059, -45.9867, 226.083, 0.55 ) }
    dend_61 { pt3dadd( -193.686, -47.4743, 236.986, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -45.8856, 36.8379, -0.0836721, 0.55 ) }
    dend_56 { pt3dadd( -47.4733, 37.5929, -2.08189, 0.55 ) }
    dend_56 { pt3dadd( -48.6732, 38.4345, -4.28923, 0.55 ) }
    dend_56 { pt3dadd( -49.7868, 39.474, -6.61726, 0.55 ) }
    dend_56 { pt3dadd( -50.4842, 40.1249, -8.07505, 0.55 ) }
    dend_56 { pt3dadd( -51.7562, 41.3123, -10.7342, 0.83 ) }
    dend_56 { pt3dadd( -52.6869, 42.181, -12.6797, 0.55 ) }
    dend_56 { pt3dadd( -53.731, 43.3729, -15.5289, 0.83 ) }
    dend_56 { pt3dadd( -54.0971, 44.1795, -17.1196, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -70.947, 28.8462, 27.4314, 0.28 ) }
    dend_48 { pt3dadd( -71.7633, 26.6954, 28.3222, 0.28 ) }
    dend_48 { pt3dadd( -72.1876, 25.7319, 28.656, 0.28 ) }
    dend_48 { pt3dadd( -72.7391, 24.3519, 29.0685, 0.55 ) }
    dend_48 { pt3dadd( -73.1836, 23.1457, 29.4278, 0.28 ) }
    dend_48 { pt3dadd( -73.8276, 21.32, 29.9851, 0.55 ) }
    dend_48 { pt3dadd( -75.5668, 16.0007, 31.653, 0.28 ) }
    dend_48 { pt3dadd( -76.1552, 14.0743, 32.0985, 0.55 ) }
    dend_48 { pt3dadd( -77.0656, 11.0664, 32.6994, 0.28 ) }
    dend_48 { pt3dadd( -77.6014, 9.23533, 32.9871, 0.55 ) }
    dend_48 { pt3dadd( -77.9786, 7.96093, 33.1624, 0.28 ) }
    dend_48 { pt3dadd( -78.4052, 6.50336, 33.3716, 0.55 ) }
    dend_48 { pt3dadd( -79.6356, 1.69878, 34.1086, 0.28 ) }
    dend_48 { pt3dadd( -80.0387, 0.222975, 34.298, 0.55 ) }
    dend_48 { pt3dadd( -80.818, -2.13578, 34.4451, 0.28 ) }
    dend_48 { pt3dadd( -81.506, -3.70811, 34.4934, 0.28 ) }
    dend_48 { pt3dadd( -82.1401, -4.78422, 34.5491, 0.55 ) }
    dend_48 { pt3dadd( -84.3441, -7.80345, 34.8962, 0.28 ) }
    dend_48 { pt3dadd( -85.3673, -9.02551, 35.0955, 0.55 ) }
    dend_48 { pt3dadd( -87.9108, -11.8841, 35.4844, 0.28 ) }
    dend_48 { pt3dadd( -90.4723, -14.4565, 35.8769, 0.28 ) }
    dend_48 { pt3dadd( -93.2857, -16.9787, 36.2716, 0.28 ) }
    dend_48 { pt3dadd( -94.576, -17.9479, 36.4828, 0.55 ) }
    dend_48 { pt3dadd( -100.233, -27.1141, 38.3567, 0.55 ) }
    dend_48 { pt3dadd( -106.059, -35.5243, 42.2112, 0.55 ) }
    dend_48 { pt3dadd( -112.227, -44.2626, 44.4765, 0.55 ) }
    dend_48 { pt3dadd( -118.923, -52.8127, 45.739, 0.55 ) }
    dend_48 { pt3dadd( -126.082, -61.0742, 45.9265, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -70.947, 28.8462, 27.4314, 0.55 ) }
    dend_45 { pt3dadd( -71.9097, 28.77, 27.8596, 0.55 ) }
    dend_45 { pt3dadd( -74.5384, 28.6985, 29.4114, 0.55 ) }
    dend_45 { pt3dadd( -75.509, 28.6668, 30.0578, 0.55 ) }
    dend_45 { pt3dadd( -77.7717, 28.5337, 31.641, 0.55 ) }
    dend_45 { pt3dadd( -81.3013, 28.2958, 33.8868, 0.55 ) }
    dend_45 { pt3dadd( -83.1525, 28.2181, 34.9984, 0.28 ) }
    dend_45 { pt3dadd( -86.0384, 28.0084, 36.6953, 0.55 ) }
    dend_45 { pt3dadd( -88.1946, 27.7749, 37.8943, 0.55 ) }
    dend_45 { pt3dadd( -89.1037, 27.6708, 38.4049, 0.28 ) }
    dend_45 { pt3dadd( -94.5585, 27.0407, 41.4617, 0.55 ) }
    dend_45 { pt3dadd( -97.1301, 26.56, 42.7783, 0.28 ) }
    dend_45 { pt3dadd( -100.648, 25.8154, 44.356, 0.28 ) }
    dend_45 { pt3dadd( -103.731, 25.1473, 45.5241, 0.55 ) }
    dend_45 { pt3dadd( -115.378, 25.3318, 51.9652, 0.55 ) }
    dend_45 { pt3dadd( -126.238, 25.7323, 59.6504, 0.55 ) }
    dend_45 { pt3dadd( -135.929, 25.3791, 68.7676, 0.55 ) }
    dend_45 { pt3dadd( -145.355, 27.483, 77.9268, 0.55 ) }
    dend_45 { pt3dadd( -152.617, 30.0532, 88.7813, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -157.732, 34.0113, 100.414, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 70.6518, 7.91679, -43.5612, 0.55 ) }
    dend_42 { pt3dadd( 75.0027, 9.30571, -47.1252, 0.55 ) }
    dend_42 { pt3dadd( 76.3709, 9.69261, -48.3446, 0.55 ) }
    dend_42 { pt3dadd( 78.0798, 10.1177, -49.8557, 0.55 ) }
    dend_42 { pt3dadd( 81.1729, 10.8797, -52.7852, 0.55 ) }
    dend_42 { pt3dadd( 84.389, 11.5473, -55.937, 0.55 ) }
    dend_42 { pt3dadd( 85.9531, 11.7406, -57.4499, 0.83 ) }
    dend_42 { pt3dadd( 87.2308, 11.818, -58.8042, 0.55 ) }
    dend_42 { pt3dadd( 88.1774, 11.8033, -59.9253, 0.83 ) }
    dend_42 { pt3dadd( 90.4287, 11.4479, -62.8258, 0.55 ) }
    dend_42 { pt3dadd( 92.2685, 10.9712, -65.2458, 0.55 ) }
    dend_42 { pt3dadd( 94.3869, 10.3964, -67.9184, 0.55 ) }
    dend_42 { pt3dadd( 96.7492, 9.83448, -70.9387, 0.55 ) }
    dend_42 { pt3dadd( 98.3294, 9.42137, -73.0107, 0.55 ) }
    dend_42 { pt3dadd( 100.11, 8.95537, -75.41, 0.55 ) }
    dend_42 { pt3dadd( 101.65, 8.623, -77.5936, 0.55 ) }
    dend_42 { pt3dadd( 102.621, 8.52344, -79.0969, 0.55 ) }
    dend_42 { pt3dadd( 103.813, 8.43516, -82.0899, 0.55 ) }
    dend_42 { pt3dadd( 104.45, 8.33099, -83.9633, 0.55 ) }
    dend_42 { pt3dadd( 104.955, 8.11188, -86.45, 0.55 ) }
    dend_42 { pt3dadd( 105.605, 7.63244, -90.6574, 0.55 ) }
    dend_42 { pt3dadd( 105.731, 7.49091, -91.6086, 0.28 ) }
    dend_42 { pt3dadd( 107.385, 5.63502, -103.189, 0.28 ) }
    dend_42 { pt3dadd( 107.97, 5.1057, -106.59, 0.83 ) }
    dend_42 { pt3dadd( 110.325, 2.99778, -118.679, 0.83 ) }
    dend_42 { pt3dadd( 111.548, 1.79046, -124.318, 0.83 ) }
    dend_42 { pt3dadd( 112.151, 1.2033, -126.613, 0.55 ) }
    dend_42 { pt3dadd( 112.865, 0.611853, -128.856, 0.55 ) }
    dend_42 { pt3dadd( 114.944, -0.636687, -133.044, 0.55 ) }
    dend_42 { pt3dadd( 117.213, -1.80407, -136.741, 0.28 ) }
    dend_42 { pt3dadd( 117.937, -2.08679, -136.991, 0.55 ) }
    dend_42 { pt3dadd( 119.557, -2.64915, -136.94, 0.28 ) }
    dend_42 { pt3dadd( 120.57, -2.93834, -136.754, 0.55 ) }
    dend_42 { pt3dadd( 121.626, -3.26266, -136.469, 0.28 ) }
    dend_42 { pt3dadd( 122.901, -3.59346, -136.064, 0.55 ) }
    dend_42 { pt3dadd( 124.812, -3.96764, -135.652, 0.28 ) }
    dend_42 { pt3dadd( 126.34, -4.3106, -135.375, 0.55 ) }
    dend_42 { pt3dadd( 128.036, -4.5642, -135.195, 0.28 ) }
    dend_42 { pt3dadd( 130.337, -4.88171, -135.155, 0.55 ) }
    dend_42 { pt3dadd( 132.918, -5.16287, -135.26, 0.55 ) }
    dend_42 { pt3dadd( 135.185, -5.36867, -135.502, 0.28 ) }
    dend_42 { pt3dadd( 138.319, -5.60804, -136.008, 0.55 ) }
    dend_42 { pt3dadd( 143.734, -5.81593, -137.45, 0.55 ) }
    dend_42 { pt3dadd( 146.127, -5.7551, -138.368, 0.55 ) }
    dend_42 { pt3dadd( 147.155, -5.67525, -138.87, 0.83 ) }
    dend_42 { pt3dadd( 149.111, -5.49188, -140.005, 0.55 ) }
    dend_42 { pt3dadd( 150.47, -5.30077, -140.875, 0.83 ) }
    dend_42 { pt3dadd( 154.132, -4.68524, -143.246, 0.55 ) }
    dend_42 { pt3dadd( 156.355, -4.45945, -144.767, 0.28 ) }
    dend_42 { pt3dadd( 157.289, -4.43364, -145.307, 0.55 ) }
    dend_42 { pt3dadd( 159.839, -4.63116, -146.516, 0.28 ) }
    dend_42 { pt3dadd( 160.727, -4.78982, -146.888, 0.55 ) }
    dend_42 { pt3dadd( 162.557, -5.26172, -147.374, 0.28 ) }
    dend_42 { pt3dadd( 164.415, -5.95853, -147.556, 0.55 ) }
    dend_42 { pt3dadd( 168.172, -7.63669, -147.264, 0.28 ) }
    dend_42 { pt3dadd( 169.903, -8.50663, -146.947, 0.55 ) }
    dend_42 { pt3dadd( 172.471, -9.96532, -146.349, 0.28 ) }
    dend_42 { pt3dadd( 175.719, -11.8064, -145.472, 0.55 ) }
    dend_42 { pt3dadd( 178.071, -13.1084, -144.796, 0.55 ) }
    dend_42 { pt3dadd( 182.159, -15.239, -143.544, 0.28 ) }
    dend_42 { pt3dadd( 183.838, -16.0208, -143.165, 0.55 ) }
    dend_42 { pt3dadd( 186.737, -17.1691, -142.821, 0.28 ) }
    dend_42 { pt3dadd( 189.637, -18.0684, -142.663, 0.55 ) }
    dend_42 { pt3dadd( 191.236, -18.3575, -142.785, 0.28 ) }
    dend_42 { pt3dadd( 192.692, -18.4115, -142.993, 0.55 ) }
    dend_42 { pt3dadd( 196.809, -18.2813, -143.945, 0.28 ) }
    dend_42 { pt3dadd( 199.765, -17.9801, -144.655, 0.28 ) }
    dend_42 { pt3dadd( 202.347, -17.5278, -145.292, 0.55 ) }
    dend_42 { pt3dadd( 205.2, -16.936, -146.133, 0.28 ) }
    dend_42 { pt3dadd( 205.922, -16.7444, -146.316, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 70.6518, 7.91679, -43.5612, 0.55 ) }
    dend_35 { pt3dadd( 70.9684, 5.8934, -45.7702, 0.55 ) }
    dend_35 { pt3dadd( 71.0552, 4.15966, -47.4896, 0.28 ) }
    dend_35 { pt3dadd( 71.1353, 2.52801, -48.9081, 0.55 ) }
    dend_35 { pt3dadd( 71.5098, -0.94052, -51.9622, 0.28 ) }
    dend_35 { pt3dadd( 71.5259, -1.14854, -52.1886, 0.55 ) }
    dend_35 { pt3dadd( 71.645, -2.21252, -53.4818, 0.28 ) }
    dend_35 { pt3dadd( 71.6407, -3.03591, -54.7146, 0.55 ) }
    dend_35 { pt3dadd( 71.5693, -3.85376, -56.1247, 0.28 ) }
    dend_35 { pt3dadd( 71.4251, -4.94526, -58.1158, 0.55 ) }
    dend_35 { pt3dadd( 71.0617, -7.70584, -63.0436, 0.55 ) }
    dend_35 { pt3dadd( 70.6886, -10.2007, -67.5945, 0.55 ) }
    dend_35 { pt3dadd( 70.3621, -12.191, -71.2343, 0.55 ) }
    dend_35 { pt3dadd( 69.9907, -14.1558, -74.7609, 0.55 ) }
    dend_35 { pt3dadd( 69.8929, -14.6715, -75.642, 0.28 ) }
    dend_35 { pt3dadd( 69.8114, -15.2421, -76.5217, 0.55 ) }
    dend_35 { pt3dadd( 69.8, -16.0694, -77.6491, 0.28 ) }
    dend_35 { pt3dadd( 69.9767, -17.6194, -79.5097, 0.55 ) }
    dend_35 { pt3dadd( 70.6363, -20.7764, -82.5257, 0.55 ) }
    dend_35 { pt3dadd( 71.011, -22.5234, -83.9771, 0.28 ) }
    dend_35 { pt3dadd( 71.2751, -24.2641, -85.5313, 0.55 ) }
    dend_35 { pt3dadd( 71.4391, -26.6526, -87.7996, 0.28 ) }
    dend_35 { pt3dadd( 71.4267, -28.5514, -89.674, 0.55 ) }
    dend_35 { pt3dadd( 71.2647, -31.374, -92.4753, 0.28 ) }
    dend_35 { pt3dadd( 71.124, -34.3262, -95.2702, 0.55 ) }
    dend_35 { pt3dadd( 70.8522, -38.5937, -99.368, 0.28 ) }
    dend_35 { pt3dadd( 70.6484, -40.8602, -101.558, 0.55 ) }
    dend_35 { pt3dadd( 70.3943, -43.1563, -103.859, 0.28 ) }
    dend_35 { pt3dadd( 70.1426, -45.135, -106.031, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 69.9275, -47.5509, -109.007, 0.55 ) }
    dend_35 { pt3dadd( 69.9236, -49.8294, -111.708, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 53.8691, 32.1915, -13.5011, 0.55 ) }
    dend_31 { pt3dadd( 56.5495, 33.0638, -12.5067, 0.55 ) }
    dend_31 { pt3dadd( 58.5671, 33.5379, -11.914, 0.55 ) }
    dend_31 { pt3dadd( 63.0508, 34.4187, -10.7982, 0.55 ) }
    dend_31 { pt3dadd( 65.1186, 34.6923, -10.4346, 0.55 ) }
    dend_31 { pt3dadd( 67.3912, 34.9781, -10.1619, 0.55 ) }
    dend_31 { pt3dadd( 70.4802, 35.3066, -10.0094, 0.55 ) }
    dend_31 { pt3dadd( 73.8263, 35.4392, -10.0687, 0.55 ) }
    dend_31 { pt3dadd( 75.6309, 35.4005, -10.2552, 0.55 ) }
    dend_31 { pt3dadd( 79.4044, 35.1028, -11.0384, 0.55 ) }
    dend_31 { pt3dadd( 81.1508, 34.9533, -11.4492, 0.55 ) }
    dend_31 { pt3dadd( 85.2798, 34.4982, -12.4588, 0.55 ) }
    dend_31 { pt3dadd( 88.0933, 34.1139, -13.0733, 0.55 ) }
    dend_31 { pt3dadd( 90.1474, 33.8605, -13.4467, 0.83 ) }
    dend_31 { pt3dadd( 93.4454, 33.3778, -13.9584, 0.55 ) }
    dend_31 { pt3dadd( 96.6803, 32.8374, -14.2902, 0.83 ) }
    dend_31 { pt3dadd( 99.4295, 32.3238, -14.4382, 0.55 ) }
    dend_31 { pt3dadd( 101.844, 31.9474, -14.4868, 0.55 ) }
    dend_31 { pt3dadd( 103.19, 31.8118, -14.4826, 0.83 ) }
    dend_31 { pt3dadd( 106.297, 31.5747, -14.3446, 0.28 ) }
    dend_31 { pt3dadd( 107.808, 31.5506, -14.2267, 0.28 ) }
    dend_31 { pt3dadd( 109.305, 31.4178, -14.1304, 0.28 ) }
    dend_31 { pt3dadd( 110.917, 31.3056, -14.0525, 0.28 ) }
    dend_31 { pt3dadd( 113.498, 31.1414, -13.9945, 0.28 ) }
    dend_31 { pt3dadd( 114.527, 31.0991, -13.9521, 0.55 ) }
    dend_31 { pt3dadd( 116.933, 31.1248, -13.6654, 0.55 ) }
    dend_31 { pt3dadd( 121.225, 31.2351, -12.9459, 0.55 ) }
    dend_31 { pt3dadd( 122.408, 31.2634, -12.6872, 0.55 ) }
    dend_31 { pt3dadd( 123.462, 31.2806, -12.4004, 0.83 ) }
    dend_31 { pt3dadd( 125.696, 31.462, -11.6553, 0.55 ) }
    dend_31 { pt3dadd( 127.63, 31.6376, -10.9825, 0.55 ) }
    dend_31 { pt3dadd( 129.454, 31.8143, -10.3432, 0.55 ) }
    dend_31 { pt3dadd( 130.881, 31.9108, -9.87059, 0.55 ) }
    dend_31 { pt3dadd( 133.201, 31.8768, -9.13749, 0.55 ) }
    dend_31 { pt3dadd( 136.018, 31.5659, -8.283, 0.55 ) }
    dend_31 { pt3dadd( 140.558, 30.5452, -6.97218, 0.55 ) }
    dend_31 { pt3dadd( 143.152, 29.6281, -6.20913, 0.55 ) }
    dend_31 { pt3dadd( 145.494, 28.4954, -5.46359, 0.28 ) }
    dend_31 { pt3dadd( 146.226, 28.0297, -5.20566, 0.55 ) }
    dend_31 { pt3dadd( 147.942, 26.6274, -4.49543, 0.28 ) }
    dend_31 { pt3dadd( 149.532, 24.9704, -3.68886, 0.55 ) }
    dend_31 { pt3dadd( 151.141, 22.8955, -2.5286, 0.55 ) }
    dend_31 { pt3dadd( 152.198, 21.5763, -1.69322, 0.28 ) }
    dend_31 { pt3dadd( 152.573, 21.127, -1.37155, 0.55 ) }
    dend_31 { pt3dadd( 153.529, 20.0296, -0.552127, 0.28 ) }
    dend_31 { pt3dadd( 154.803, 18.6378, 0.558637, 0.55 ) }
    dend_31 { pt3dadd( 158.022, 15.3962, 3.35194, 0.55 ) }
    dend_31 { pt3dadd( 159.672, 13.799, 4.80647, 0.55 ) }
    dend_31 { pt3dadd( 161.195, 12.3493, 6.15771, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 53.8691, 32.1915, -13.5011, 0.55 ) }
    dend_30 { pt3dadd( 56.1241, 34.4811, -11.393, 0.55 ) }
    dend_30 { pt3dadd( 56.8606, 35.1902, -10.7627, 0.55 ) }
    dend_30 { pt3dadd( 59.6876, 37.6185, -8.47417, 0.55 ) }
    dend_30 { pt3dadd( 62.8086, 40.4226, -5.90211, 0.55 ) }
    dend_30 { pt3dadd( 66.7798, 44.0634, -2.4777, 0.55 ) }
    dend_30 { pt3dadd( 67.8785, 45.0665, -1.54109, 0.55 ) }
    dend_30 { pt3dadd( 69.882, 46.771, 0.161573, 0.55 ) }
    dend_30 { pt3dadd( 72.0857, 48.6514, 1.90385, 0.55 ) }
    dend_30 { pt3dadd( 74.6575, 50.8556, 3.75691, 0.55 ) }
    dend_30 { pt3dadd( 77.0667, 52.9748, 5.49317, 0.55 ) }
    dend_30 { pt3dadd( 78.3859, 54.1712, 6.34088, 0.55 ) }
    dend_30 { pt3dadd( 79.9201, 55.6238, 7.30717, 0.55 ) }
    dend_30 { pt3dadd( 81.8091, 57.4635, 8.43098, 0.83 ) }
    dend_30 { pt3dadd( 85.0028, 60.296, 9.90069, 0.55 ) }
    dend_30 { pt3dadd( 87.1754, 62.0285, 10.8074, 0.83 ) }
    dend_30 { pt3dadd( 90.2668, 64.2358, 12.0298, 0.55 ) }
    dend_30 { pt3dadd( 91.2366, 64.8536, 12.4186, 0.55 ) }
    dend_30 { pt3dadd( 94.3092, 66.5902, 13.6383, 0.55 ) }
    dend_30 { pt3dadd( 99.9676, 69.2664, 15.7681, 0.55 ) }
    dend_30 { pt3dadd( 104.205, 70.962, 17.3492, 0.55 ) }
    dend_30 { pt3dadd( 107.584, 72.1937, 18.754, 0.55 ) }
    dend_30 { pt3dadd( 111.053, 73.3332, 20.3883, 0.55 ) }
    dend_30 { pt3dadd( 111.788, 73.5565, 20.7451, 0.28 ) }
    dend_30 { pt3dadd( 113.295, 73.9528, 21.4941, 0.83 ) }
    dend_30 { pt3dadd( 119.501, 75.5136, 24.6462, 0.55 ) }
    dend_30 { pt3dadd( 123.862, 76.5737, 26.7697, 0.55 ) }
    dend_30 { pt3dadd( 127.394, 77.5643, 28.5541, 0.55 ) }
    dend_30 { pt3dadd( 129.5, 78.1592, 29.6425, 0.83 ) }
    dend_30 { pt3dadd( 131.152, 78.651, 30.4907, 0.28 ) }
    dend_30 { pt3dadd( 132.652, 79.093, 31.2454, 0.55 ) }
    dend_30 { pt3dadd( 143.116, 85.8968, 37.3656, 0.55 ) }
    dend_30 { pt3dadd( 155.379, 90.1544, 42.3398, 0.55 ) }
    dend_30 { pt3dadd( 166.996, 96.0936, 47.1348, 0.55 ) }
    dend_30 { pt3dadd( 177.158, 101.065, 55.2135, 0.55 ) }
    dend_30 { pt3dadd( 186.898, 104.408, 64.5519, 0.55 ) }
    dend_30 { pt3dadd( 198.969, 104.833, 71.433, 0.55 ) }
    dend_30 { pt3dadd( 211.688, 103.154, 76.7861, 0.55 ) }
    dend_30 { pt3dadd( 225.091, 103.622, 80.4445, 0.55 ) }
    dend_30 { pt3dadd( 238.209, 104.235, 85.0026, 0.55 ) }
    dend_30 { pt3dadd( 251.635, 105.952, 88.1713, 0.55 ) }
    dend_30 { pt3dadd( 264.462, 108.891, 92.6528, 0.55 ) }
    dend_30 { pt3dadd( 276.934, 109.834, 98.7183, 0.55 ) }
    dend_30 { pt3dadd( 288.795, 113.519, 104.961, 0.55 ) }
    dend_30 { pt3dadd( 299.179, 119.543, 111.97, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.715041, -21.8496, 4.97835, 1.38 ) }
    dend_13 { pt3dadd( 2.86826, -24.8411, 5.56435, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.715041, -21.8496, 4.97835, 0.55 ) }
    dend_12 { pt3dadd( -1.77125, -23.4261, 4.67335, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -2.91855, -25.4307, 4.34269, 0.55 ) }
    dend_12 { pt3dadd( -3.83297, -26.7699, 4.09181, 0.55 ) }
    dend_12 { pt3dadd( -4.56145, -27.8896, 3.74445, 0.55 ) }
    dend_12 { pt3dadd( -6.10365, -30.2159, 2.8049, 0.55 ) }
    dend_12 { pt3dadd( -7.17945, -31.7744, 2.10746, 0.55 ) }
    dend_12 { pt3dadd( -8.12102, -33.1708, 1.44287, 0.55 ) }
    dend_12 { pt3dadd( -10.5551, -36.5819, -0.265595, 0.55 ) }
    dend_12 { pt3dadd( -13.5, -40.5416, -2.2925, 0.55 ) }
    dend_12 { pt3dadd( -15.7703, -43.5454, -3.91256, 0.55 ) }
    dend_12 { pt3dadd( -17.2069, -45.5138, -4.97149, 0.55 ) }
    dend_12 { pt3dadd( -18.8494, -47.8683, -6.1781, 0.55 ) }
    dend_12 { pt3dadd( -20.915, -51.2189, -7.66645, 0.55 ) }
    dend_12 { pt3dadd( -22.1024, -53.5712, -8.49634, 0.55 ) }
    dend_12 { pt3dadd( -23.583, -56.9313, -9.34424, 0.55 ) }
    dend_12 { pt3dadd( -24.7468, -60.0599, -9.95106, 0.55 ) }
    dend_12 { pt3dadd( -25.8749, -63.9369, -10.523, 0.55 ) }
    dend_12 { pt3dadd( -26.8894, -68.4622, -10.9822, 0.55 ) }
    dend_12 { pt3dadd( -27.3744, -71.8965, -11.1552, 0.55 ) }
    dend_12 { pt3dadd( -27.5402, -73.5972, -11.1017, 0.55 ) }
    dend_12 { pt3dadd( -27.7697, -77.5756, -10.6985, 0.55 ) }
    dend_12 { pt3dadd( -27.9511, -81.2933, -10.2089, 0.55 ) }
    dend_12 { pt3dadd( -28.0351, -85.0242, -9.39471, 0.55 ) }
    dend_12 { pt3dadd( -28.1398, -87.1665, -8.82312, 0.55 ) }
    dend_12 { pt3dadd( -28.4988, -93.7871, -6.81205, 0.55 ) }
    dend_12 { pt3dadd( -28.5309, -94.2748, -6.65681, 0.55 ) }
    dend_12 { pt3dadd( -28.6962, -97.2577, -5.61941, 0.55 ) }
    dend_12 { pt3dadd( -29.2659, -102.61, -3.72023, 0.55 ) }
    dend_12 { pt3dadd( -29.4343, -104.401, -3.18926, 0.55 ) }
    dend_12 { pt3dadd( -29.6185, -107.205, -2.83553, 0.55 ) }
    dend_12 { pt3dadd( -29.5898, -108.245, -2.92185, 0.55 ) }
    dend_12 { pt3dadd( -29.1466, -111.751, -3.79431, 0.55 ) }
    dend_12 { pt3dadd( -28.5944, -114.013, -4.77722, 0.55 ) }
    dend_12 { pt3dadd( -27.3989, -117.608, -7.01325, 0.55 ) }
    dend_12 { pt3dadd( -25.6624, -121.992, -10.0207, 0.28 ) }
    dend_12 { pt3dadd( -25.1721, -123.074, -10.8999, 0.55 ) }
    dend_12 { pt3dadd( -24.3795, -124.714, -12.3706, 0.28 ) }
    dend_12 { pt3dadd( -24.2582, -124.962, -12.6055, 0.55 ) }
    dend_12 { pt3dadd( -23.6377, -126.317, -13.783, 0.28 ) }
    dend_12 { pt3dadd( -23.4897, -126.78, -14.0905, 0.55 ) }
    dend_12 { pt3dadd( -22.9129, -129.19, -15.2602, 0.28 ) }
    dend_12 { pt3dadd( -22.75, -130.012, -15.658, 0.55 ) }
    dend_12 { pt3dadd( -22.3482, -132.392, -16.6883, 0.28 ) }
    dend_12 { pt3dadd( -22.2193, -133.142, -17.009, 0.55 ) }
    dend_12 { pt3dadd( -21.8076, -135.728, -18.082, 0.28 ) }
    dend_12 { pt3dadd( -21.6104, -136.918, -18.5795, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.86701, -74.3403, 60.8617, 0.55 ) }
    dend_10 { pt3dadd( -11.7635, -80.326, 65.8239, 0.55 ) }
    dend_10 { pt3dadd( -15.6069, -85.7485, 70.7904, 0.55 ) }
    dend_10 { pt3dadd( -19.0638, -91.6662, 75.4671, 0.55 ) }
    dend_10 { pt3dadd( -22.6255, -97.6396, 79.9919, 0.55 ) }
    dend_10 { pt3dadd( -25.0748, -104.372, 84.1765, 0.55 ) }
    dend_10 { pt3dadd( -27.5765, -110.825, 88.7533, 0.55 ) }
    dend_10 { pt3dadd( -28.6209, -118.388, 92.0006, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.86701, -74.3403, 60.8617, 0.55 ) }
    dend_3 { pt3dadd( -7.94777, -81.682, 68.0155, 0.55 ) }
    dend_3 { pt3dadd( -6.58857, -90.15, 73.7047, 0.55 ) }
    dend_3 { pt3dadd( -6.88126, -98.738, 79.3686, 0.55 ) }
    dend_3 { pt3dadd( -7.75546, -107.839, 84.093, 0.55 ) }
    dend_3 { pt3dadd( -8.2157, -116.89, 88.9718, 0.55 ) }
    dend_3 { pt3dadd( -8.60503, -125.568, 94.4903, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -54.0971, 44.1795, -17.1196, 0.83 ) }
    dend_60 { pt3dadd( -53.948, 45.2742, -18.855, 0.83 ) }
    dend_60 { pt3dadd( -53.6445, 47.9677, -22.7735, 0.55 ) }
    dend_60 { pt3dadd( -53.4976, 49.1517, -24.3445, 0.83 ) }
    dend_60 { pt3dadd( -53.3224, 50.4378, -25.921, 0.55 ) }
    dend_60 { pt3dadd( -53.1162, 51.8027, -27.3189, 0.55 ) }
    dend_60 { pt3dadd( -52.9943, 52.5072, -27.92, 0.28 ) }
    dend_60 { pt3dadd( -52.931, 52.9995, -28.1823, 0.55 ) }
    dend_60 { pt3dadd( -52.6215, 54.7111, -28.6921, 0.28 ) }
    dend_60 { pt3dadd( -52.4658, 55.4497, -28.875, 0.55 ) }
    dend_60 { pt3dadd( -51.9437, 58.0379, -29.4015, 0.28 ) }
    dend_60 { pt3dadd( -51.575, 60.103, -29.7423, 0.55 ) }
    dend_60 { pt3dadd( -51.1414, 63.3497, -30.1552, 0.28 ) }
    dend_60 { pt3dadd( -50.853, 66.2157, -30.4511, 0.28 ) }
    dend_60 { pt3dadd( -50.7797, 67.8274, -30.5741, 0.55 ) }
    dend_60 { pt3dadd( -50.8083, 69.7406, -30.7038, 0.28 ) }
    dend_60 { pt3dadd( -50.8794, 70.6569, -30.7455, 0.55 ) }
    dend_60 { pt3dadd( -51.174, 72.7965, -30.9228, 0.28 ) }
    dend_60 { pt3dadd( -51.4731, 74.2107, -31.1015, 0.28 ) }
    dend_60 { pt3dadd( -51.8015, 75.5923, -31.3149, 0.28 ) }
    dend_60 { pt3dadd( -51.9476, 76.3214, -31.4342, 0.55 ) }
    dend_60 { pt3dadd( -52.3893, 79.2573, -32.0062, 0.28 ) }
    dend_60 { pt3dadd( -52.8047, 82.7223, -32.7627, 0.55 ) }
    dend_60 { pt3dadd( -52.9311, 83.9181, -33.031, 0.55 ) }
    dend_60 { pt3dadd( -53.0739, 85.1217, -33.2716, 0.55 ) }
    dend_60 { pt3dadd( -53.5182, 87.6721, -33.8063, 0.55 ) }
    dend_60 { pt3dadd( -53.9227, 89.3403, -34.1792, 0.28 ) }
    dend_60 { pt3dadd( -54.1507, 89.9704, -34.319, 0.55 ) }
    dend_60 { pt3dadd( -54.8849, 91.6833, -34.6455, 0.28 ) }
    dend_60 { pt3dadd( -55.7506, 93.4937, -35.0553, 0.55 ) }
    dend_60 { pt3dadd( -57.254, 96.0778, -35.7142, 0.28 ) }
    dend_60 { pt3dadd( -58.0055, 97.1497, -36.0088, 0.28 ) }
    dend_60 { pt3dadd( -59.2667, 98.6121, -36.5451, 0.55 ) }
    dend_60 { pt3dadd( -60.6978, 100.12, -37.1735, 0.28 ) }
    dend_60 { pt3dadd( -60.9617, 100.354, -37.2796, 0.55 ) }
    dend_60 { pt3dadd( -61.92, 101.095, -37.6357, 0.28 ) }
    dend_60 { pt3dadd( -65.2315, 103.463, -38.7646, 0.55 ) }
    dend_60 { pt3dadd( -69.8889, 106.324, -40.4253, 0.28 ) }
    dend_60 { pt3dadd( -70.76, 106.791, -40.7714, 0.55 ) }
    dend_60 { pt3dadd( -73.1634, 107.974, -41.743, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -74.1772, 108.453, -42.1744, 0.28 ) }
    dend_60 { pt3dadd( -75.0655, 108.841, -42.585, 0.55 ) }
    dend_60 { pt3dadd( -77.7125, 109.645, -43.9173, 0.28 ) }
    dend_60 { pt3dadd( -79.5843, 110.049, -44.7549, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -54.0971, 44.1795, -17.1196, 0.55 ) }
    dend_57 { pt3dadd( -54.4317, 45.996, -17.2363, 0.55 ) }
    dend_57 { pt3dadd( -54.6631, 47.0591, -17.2072, 0.28 ) }
    dend_57 { pt3dadd( -54.9933, 47.7957, -17.0101, 0.55 ) }
    dend_57 { pt3dadd( -55.7516, 49.4874, -16.5575, 0.28 ) }
    dend_57 { pt3dadd( -56.2841, 50.6757, -16.2396, 0.55 ) }
    dend_57 { pt3dadd( -57.266, 52.8662, -15.6535, 0.28 ) }
    dend_57 { pt3dadd( -57.9294, 54.0165, -15.1358, 0.55 ) }
    dend_57 { pt3dadd( -60.4422, 56.6215, -12.9334, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -126.082, -61.0742, 45.9265, 0.55 ) }
    dend_52 { pt3dadd( -131.155, -70.33, 49.5027, 0.55 ) }
    dend_52 { pt3dadd( -134.463, -80.5191, 52.5729, 0.55 ) }
    dend_52 { pt3dadd( -137.348, -91.2629, 53.2375, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -126.082, -61.0742, 45.9265, 0.55 ) }
    dend_49 { pt3dadd( -130.597, -68.0641, 46.9035, 0.55 ) }
    dend_49 { pt3dadd( -134.471, -75.4929, 46.9219, 0.55 ) }
    dend_49 { pt3dadd( -138.03, -83.0761, 46.7705, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -157.732, 34.0113, 100.414, 0.55 ) }
    dend_47 { pt3dadd( -164.314, 35.507, 107.554, 0.55 ) }
    dend_47 { pt3dadd( -171.691, 37.8767, 113.594, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -157.732, 34.0113, 100.414, 0.55 ) }
    dend_46 { pt3dadd( -165.07, 33.7524, 105.958, 0.55 ) }
    dend_46 { pt3dadd( -172.695, 34.8949, 110.98, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 69.9236, -49.8294, -111.708, 0.28 ) }
    dend_39 { pt3dadd( 75.9937, -52.1661, -123.746, 0.28 ) }
    dend_39 { pt3dadd( 76.5829, -52.4768, -124.838, 0.55 ) }
    dend_39 { pt3dadd( 77.5775, -53.0013, -126.681, 0.28 ) }
    dend_39 { pt3dadd( 78.415, -53.4429, -128.233, 0.28 ) }
    dend_39 { pt3dadd( 79.5236, -54.0275, -130.288, 0.55 ) }
    dend_39 { pt3dadd( 80.9852, -54.7982, -132.997, 0.55 ) }
    dend_39 { pt3dadd( 82.8183, -56.6753, -134.691, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 69.9236, -49.8294, -111.708, 0.55 ) }
    dend_36 { pt3dadd( 70.3536, -50.6475, -113.093, 0.55 ) }
    dend_36 { pt3dadd( 70.4559, -50.9991, -113.708, 0.28 ) }
    dend_36 { pt3dadd( 70.5871, -51.5884, -114.78, 0.55 ) }
    dend_36 { pt3dadd( 70.8761, -52.8865, -117.14, 0.28 ) }
    dend_36 { pt3dadd( 71.0763, -53.7861, -118.776, 0.55 ) }
    dend_36 { pt3dadd( 71.4156, -55.3103, -121.547, 0.28 ) }
    dend_36 { pt3dadd( 71.7604, -57.0965, -125.138, 0.28 ) }
    dend_36 { pt3dadd( 71.8668, -57.9008, -126.813, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 161.195, 12.3493, 6.15771, 0.28 ) }
    dend_33 { pt3dadd( 163.353, 11.2214, 8.38944, 0.28 ) }
    dend_33 { pt3dadd( 166.016, 9.84553, 11.5701, 0.28 ) }
    dend_33 { pt3dadd( 167.681, 8.98746, 13.7074, 0.55 ) }
    dend_33 { pt3dadd( 168.658, 8.57569, 14.9491, 0.28 ) }
    dend_33 { pt3dadd( 169.176, 8.35522, 15.6224, 0.28 ) }
    dend_33 { pt3dadd( 171.758, 7.24246, 18.9039, 0.55 ) }
    dend_33 { pt3dadd( 172.323, 7.0547, 19.7182, 0.28 ) }
    dend_33 { pt3dadd( 173.629, 6.57575, 21.9585, 0.55 ) }
    dend_33 { pt3dadd( 174.764, 6.11291, 23.8437, 0.28 ) }
    dend_33 { pt3dadd( 175.76, 5.74689, 25.3618, 0.55 ) }
    dend_33 { pt3dadd( 176.958, 5.24398, 27.0871, 0.55 ) }
    dend_33 { pt3dadd( 178.96, 4.26614, 29.5478, 0.55 ) }
    dend_33 { pt3dadd( 179.45, 4.01047, 30.1309, 0.55 ) }
    dend_33 { pt3dadd( 181.223, 3.01595, 32.2772, 0.28 ) }
    dend_33 { pt3dadd( 181.921, 2.58279, 33.1281, 0.55 ) }
    dend_33 { pt3dadd( 182.886, 2.05424, 34.22, 0.28 ) }
    dend_33 { pt3dadd( 184.272, 1.25673, 35.7005, 0.55 ) }
    dend_33 { pt3dadd( 186.669, -0.186066, 37.7016, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 161.195, 12.3493, 6.15771, 0.55 ) }
    dend_32 { pt3dadd( 158.9, 11.6473, 5.73144, 0.55 ) }
    dend_32 { pt3dadd( 157.037, 11.0773, 5.38527, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.86826, -24.8411, 5.56435, 0.83 ) }
    dend_17 { pt3dadd( 3.00654, -25.0615, 5.60985, 0.83 ) }
    dend_17 { pt3dadd( 4.44742, -26.9712, 6.27192, 0.83 ) }
    dend_17 { pt3dadd( 5.76643, -28.6421, 6.74188, 0.55 ) }
    dend_17 { pt3dadd( 6.81871, -29.9751, 7.11681, 0.55 ) }
    dend_17 { pt3dadd( 9.05538, -32.8084, 7.91374, 0.83 ) }
    dend_17 { pt3dadd( 11.7683, -36.2451, 8.88037, 0.55 ) }
    dend_17 { pt3dadd( 13.2167, -38.0373, 9.44565, 0.83 ) }
    dend_17 { pt3dadd( 15.6634, -40.8588, 10.5784, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.86826, -24.8411, 5.56435, 0.55 ) }
    dend_14 { pt3dadd( 3.2999, -26.1414, 2.08585, 0.55 ) }
    dend_14 { pt3dadd( 3.76322, -27.537, -1.64789, 0.55 ) }
    dend_14 { pt3dadd( 4.31017, -29.1846, -6.0556, 0.55 ) }
    dend_14 { pt3dadd( 4.97435, -31.1853, -11.408, 0.55 ) }
    dend_14 { pt3dadd( 5.35125, -32.3206, -14.4453, 0.55 ) }
    dend_14 { pt3dadd( 5.42696, -32.5487, -15.0554, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.60503, -125.568, 94.4903, 0.55 ) }
    dend_7 { pt3dadd( -8.10933, -135.228, 101.712, 0.55 ) }
    dend_7 { pt3dadd( -5.76763, -145.299, 107.941, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.60503, -125.568, 94.4903, 0.55 ) }
    dend_4 { pt3dadd( -9.31029, -133.604, 99.1627, 0.55 ) }
    dend_4 { pt3dadd( -10.2654, -141.374, 104.224, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -60.4422, 56.6215, -12.9334, 0.28 ) }
    dend_59 { pt3dadd( -62.7017, 58.216, -10.7889, 0.28 ) }
    dend_59 { pt3dadd( -63.5675, 58.8019, -9.87587, 0.55 ) }
    dend_59 { pt3dadd( -66.0555, 60.4922, -7.17401, 0.28 ) }
    dend_59 { pt3dadd( -67.2755, 61.3531, -5.96281, 0.55 ) }
    dend_59 { pt3dadd( -70.5887, 63.7033, -2.80756, 0.28 ) }
    dend_59 { pt3dadd( -73.9561, 66.0919, 0.399317, 0.55 ) }
    dend_59 { pt3dadd( -79.5128, 69.7499, 5.70873, 0.28 ) }
    dend_59 { pt3dadd( -80.6967, 70.538, 6.84208, 0.55 ) }
    dend_59 { pt3dadd( -83.301, 72.4452, 9.27001, 0.28 ) }
    dend_59 { pt3dadd( -84.3215, 73.2506, 10.234, 0.55 ) }
    dend_59 { pt3dadd( -95.181, 77.9441, 17.8001, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -106.673, 84.5965, 22.3678, 0.55 ) }
    dend_59 { pt3dadd( -117.022, 91.4101, 28.9765, 0.55 ) }
    dend_59 { pt3dadd( -125.673, 100.077, 35.8508, 0.55 ) }
    dend_59 { pt3dadd( -135.577, 108.267, 41.5101, 0.55 ) }
    dend_59 { pt3dadd( -146.628, 114.044, 47.97, 0.55 ) }
    dend_59 { pt3dadd( -156.973, 118.493, 56.3597, 0.55 ) }
    dend_59 { pt3dadd( -166.19, 121.343, 66.5638, 0.55 ) }
    dend_59 { pt3dadd( -175.439, 125.05, 76.4587, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -60.4422, 56.6215, -12.9334, 0.55 ) }
    dend_58 { pt3dadd( -63.1425, 55.4359, -12.1571, 0.55 ) }
    dend_58 { pt3dadd( -64.5421, 54.7731, -11.7607, 0.28 ) }
    dend_58 { pt3dadd( -65.5836, 54.2798, -11.4657, 0.55 ) }
    dend_58 { pt3dadd( -66.4517, 53.8687, -11.2198, 0.28 ) }
    dend_58 { pt3dadd( -67.0597, 53.5808, -11.0475, 0.55 ) }
    dend_58 { pt3dadd( -68.7363, 52.7867, -10.5726, 0.28 ) }
    dend_58 { pt3dadd( -69.8326, 52.1769, -10.4074, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -137.348, -91.2629, 53.2375, 0.55 ) }
    dend_54 { pt3dadd( -140.564, -103.158, 58.8902, 0.55 ) }
    dend_54 { pt3dadd( -143.119, -114.524, 65.8263, 0.55 ) }
    dend_54 { pt3dadd( -145.27, -127.072, 70.4861, 0.55 ) }
    dend_54 { pt3dadd( -148.336, -138.601, 76.9283, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -137.348, -91.2629, 53.2375, 0.55 ) }
    dend_53 { pt3dadd( -144.234, -101.055, 49.6106, 0.55 ) }
    dend_53 { pt3dadd( -151.231, -109.858, 44.1325, 0.55 ) }
    dend_53 { pt3dadd( -158.534, -119.41, 40.6832, 0.55 ) }
    dend_53 { pt3dadd( -168.212, -126.915, 38.1397, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -138.03, -83.0761, 46.7705, 0.55 ) }
    dend_51 { pt3dadd( -143.607, -91.1293, 43.606, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -138.03, -83.0761, 46.7705, 0.55 ) }
    dend_50 { pt3dadd( -140.173, -91.5647, 52.0988, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 82.8183, -56.6753, -134.691, 0.28 ) }
    dend_41 { pt3dadd( 85.9572, -58.5142, -137.054, 0.28 ) }
    dend_41 { pt3dadd( 87.4153, -59.3684, -138.152, 0.55 ) }
    dend_41 { pt3dadd( 90.1958, -60.9972, -140.246, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 82.8183, -56.6753, -134.691, 0.55 ) }
    dend_40 { pt3dadd( 82.1364, -57.9843, -136.479, 0.55 ) }
    dend_40 { pt3dadd( 80.7726, -60.6025, -140.056, 0.28 ) }
    dend_40 { pt3dadd( 80.3284, -61.4554, -141.221, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 71.8668, -57.9008, -126.813, 0.28 ) }
    dend_38 { pt3dadd( 72.3247, -59.7447, -131.235, 0.28 ) }
    dend_38 { pt3dadd( 72.5514, -60.6578, -133.425, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 71.8668, -57.9008, -126.813, 0.55 ) }
    dend_37 { pt3dadd( 69.5454, -58.6269, -126.002, 0.55 ) }
    dend_37 { pt3dadd( 63.072, -60.6516, -123.742, 0.28 ) }
    dend_37 { pt3dadd( 61.5342, -61.1326, -123.205, 0.55 ) }
    dend_37 { pt3dadd( 57.3275, -62.4483, -121.736, 0.28 ) }
    dend_37 { pt3dadd( 54.6159, -63.2965, -120.789, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.6634, -40.8588, 10.5784, 0.83 ) }
    dend_23 { pt3dadd( 15.7588, -41.1286, 10.578, 0.83 ) }
    dend_23 { pt3dadd( 16.9818, -44.6597, 10.6871, 0.83 ) }
    dend_23 { pt3dadd( 17.6053, -47.3572, 10.7476, 0.83 ) }
    dend_23 { pt3dadd( 17.8896, -50.0142, 10.8948, 0.83 ) }
    dend_23 { pt3dadd( 18.0013, -53.5929, 11.2135, 0.83 ) }
    dend_23 { pt3dadd( 17.9478, -57.7462, 11.6225, 0.83 ) }
    dend_23 { pt3dadd( 17.7483, -62.4022, 12.2748, 0.83 ) }
    dend_23 { pt3dadd( 17.4233, -66.9429, 13.0656, 0.83 ) }
    dend_23 { pt3dadd( 16.8395, -72.5584, 13.709, 0.83 ) }
    dend_23 { pt3dadd( 16.5598, -75.1458, 13.8063, 0.83 ) }
    dend_23 { pt3dadd( 16.4207, -77.0822, 13.7838, 0.83 ) }
    dend_23 { pt3dadd( 16.1457, -80.8016, 13.6322, 0.83 ) }
    dend_23 { pt3dadd( 16.0719, -84.106, 13.4091, 0.83 ) }
    dend_23 { pt3dadd( 16.6942, -91.0297, 12.588, 0.83 ) }
    dend_23 { pt3dadd( 17.3858, -94.7663, 11.7908, 0.83 ) }
    dend_23 { pt3dadd( 18.1855, -98.1871, 10.8602, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.6634, -40.8588, 10.5784, 0.55 ) }
    dend_18 { pt3dadd( 14.7432, -43.6886, 10.539, 0.55 ) }
    dend_18 { pt3dadd( 13.9967, -45.7373, 10.6396, 0.55 ) }
    dend_18 { pt3dadd( 13.5062, -47.0355, 10.8344, 0.55 ) }
    dend_18 { pt3dadd( 12.7587, -49.0441, 11.3516, 0.55 ) }
    dend_18 { pt3dadd( 11.2851, -52.9932, 12.6466, 0.55 ) }
    dend_18 { pt3dadd( 10.0324, -55.9657, 13.924, 0.55 ) }
    dend_18 { pt3dadd( 8.94157, -58.3327, 15.1865, 0.55 ) }
    dend_18 { pt3dadd( 7.72558, -60.7203, 16.6011, 0.55 ) }
    dend_18 { pt3dadd( 6.66511, -62.6962, 17.8661, 0.28 ) }
    dend_18 { pt3dadd( 5.69332, -64.2989, 19.115, 0.55 ) }
    dend_18 { pt3dadd( 3.71527, -67.1985, 21.7545, 0.55 ) }
    dend_18 { pt3dadd( 2.34115, -68.9761, 23.5226, 0.55 ) }
    dend_18 { pt3dadd( 1.56437, -69.9739, 24.4997, 0.55 ) }
    dend_18 { pt3dadd( 0.613427, -71.1621, 25.5723, 0.83 ) }
    dend_18 { pt3dadd( -2.15265, -74.7044, 28.518, 0.28 ) }
    dend_18 { pt3dadd( -3.05569, -75.8785, 29.463, 0.55 ) }
    dend_18 { pt3dadd( -4.59938, -77.9944, 31.1265, 0.28 ) }
    dend_18 { pt3dadd( -5.09149, -78.6436, 31.6844, 0.55 ) }
    dend_18 { pt3dadd( -6.15571, -80.1594, 32.9956, 0.28 ) }
    dend_18 { pt3dadd( -6.73271, -81.0247, 33.6825, 0.55 ) }
    dend_18 { pt3dadd( -8.5068, -83.9099, 35.1342, 0.55 ) }
    dend_18 { pt3dadd( -12.5346, -91.2627, 42.5376, 0.55 ) }
    dend_18 { pt3dadd( -16.2594, -98.1657, 50.5107, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.42696, -32.5487, -15.0554, 0.55 ) }
    dend_16 { pt3dadd( 4.09118, -34.077, -18.4804, 0.55 ) }
    dend_16 { pt3dadd( 3.66825, -34.467, -19.457, 0.55 ) }
    dend_16 { pt3dadd( 2.58033, -35.4524, -21.838, 0.55 ) }
    dend_16 { pt3dadd( 0.104706, -37.4941, -26.8789, 0.28 ) }
    dend_16 { pt3dadd( -0.281099, -37.7862, -27.5913, 0.55 ) }
    dend_16 { pt3dadd( -1.90684, -39.0852, -30.4623, 0.55 ) }
    dend_16 { pt3dadd( -4.24863, -40.8907, -34.0609, 0.55 ) }
    dend_16 { pt3dadd( -5.16654, -41.5415, -35.407, 0.28 ) }
    dend_16 { pt3dadd( -6.01384, -42.0363, -36.5228, 0.28 ) }
    dend_16 { pt3dadd( -7.55928, -42.8605, -38.1666, 0.55 ) }
    dend_16 { pt3dadd( -9.44539, -43.7463, -40.2636, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -11.2217, -44.3705, -42.2551, 0.55 ) }
    dend_16 { pt3dadd( -12.6428, -44.7129, -43.766, 0.55 ) }
    dend_16 { pt3dadd( -13.6356, -44.8471, -44.846, 0.55 ) }
    dend_16 { pt3dadd( -16.5606, -45.0773, -48.1264, 0.55 ) }
    dend_16 { pt3dadd( -19.7269, -45.0753, -51.5176, 0.55 ) }
    dend_16 { pt3dadd( -21.0689, -44.9935, -52.8837, 0.28 ) }
    dend_16 { pt3dadd( -22.3297, -44.9369, -54.2073, 0.55 ) }
    dend_16 { pt3dadd( -24.8489, -45.013, -56.8585, 0.28 ) }
    dend_16 { pt3dadd( -25.6925, -45.0676, -57.7402, 0.83 ) }
    dend_16 { pt3dadd( -27.3139, -45.1566, -59.2646, 0.28 ) }
    dend_16 { pt3dadd( -28.511, -45.3318, -60.1907, 0.55 ) }
    dend_16 { pt3dadd( -30.2442, -45.6562, -61.4956, 0.28 ) }
    dend_16 { pt3dadd( -30.9449, -45.7772, -61.9907, 0.55 ) }
    dend_16 { pt3dadd( -32.2601, -46.0332, -62.8324, 0.55 ) }
    dend_16 { pt3dadd( -34.327, -46.2112, -64.0283, 0.55 ) }
    dend_16 { pt3dadd( -35.7228, -46.2461, -64.7337, 0.28 ) }
    dend_16 { pt3dadd( -36.9098, -46.1406, -65.2167, 0.55 ) }
    dend_16 { pt3dadd( -38.3482, -45.8534, -65.7958, 0.28 ) }
    dend_16 { pt3dadd( -38.5872, -45.7884, -65.899, 0.55 ) }
    dend_16 { pt3dadd( -40.7069, -45.1227, -67.1998, 0.28 ) }
    dend_16 { pt3dadd( -42.209, -44.6012, -68.2999, 0.55 ) }
    dend_16 { pt3dadd( -44.1475, -43.7702, -70.0197, 0.83 ) }
    dend_16 { pt3dadd( -45.7026, -43.0387, -71.6153, 0.28 ) }
    dend_16 { pt3dadd( -46.0918, -42.8503, -72.0679, 0.55 ) }
    dend_16 { pt3dadd( -49.0147, -41.4406, -75.7139, 0.28 ) }
    dend_16 { pt3dadd( -49.508, -41.1997, -76.4062, 0.55 ) }
    dend_16 { pt3dadd( -50.9607, -40.3716, -78.5541, 0.28 ) }
    dend_16 { pt3dadd( -51.3345, -40.1587, -79.1117, 0.55 ) }
    dend_16 { pt3dadd( -52.319, -39.6063, -80.4684, 0.28 ) }
    dend_16 { pt3dadd( -53.0334, -39.2092, -81.3811, 0.55 ) }
    dend_16 { pt3dadd( -54.7075, -38.3394, -83.1601, 0.28 ) }
    dend_16 { pt3dadd( -55.6963, -37.8988, -84.1756, 0.55 ) }
    dend_16 { pt3dadd( -57.8092, -37.1049, -86.2231, 0.28 ) }
    dend_16 { pt3dadd( -58.4332, -36.9054, -86.822, 0.55 ) }
    dend_16 { pt3dadd( -59.4043, -36.6751, -87.722, 0.28 ) }
    dend_16 { pt3dadd( -60.2389, -36.4851, -88.4419, 0.55 ) }
    dend_16 { pt3dadd( -61.9988, -36.1222, -89.8281, 0.28 ) }
    dend_16 { pt3dadd( -62.5313, -36.0264, -90.2274, 0.55 ) }
    dend_16 { pt3dadd( -66.5608, -35.2468, -93.0072, 0.28 ) }
    dend_16 { pt3dadd( -68.033, -34.8795, -93.8594, 0.55 ) }
    dend_16 { pt3dadd( -70.733, -34.1109, -95.2183, 0.28 ) }
    dend_16 { pt3dadd( -71.9702, -33.7208, -95.7961, 0.55 ) }
    dend_16 { pt3dadd( -74.8424, -32.854, -96.9687, 0.28 ) }
    dend_16 { pt3dadd( -75.8976, -32.5813, -97.3559, 0.55 ) }
    dend_16 { pt3dadd( -79.6893, -31.9211, -98.5601, 0.28 ) }
    dend_16 { pt3dadd( -81.2308, -31.8309, -99.0448, 0.55 ) }
    dend_16 { pt3dadd( -83.3566, -32.0482, -99.7051, 0.55 ) }
    dend_16 { pt3dadd( -84.6526, -32.2655, -100.079, 0.55 ) }
    dend_16 { pt3dadd( -87.3258, -32.7865, -100.633, 0.28 ) }
    dend_16 { pt3dadd( -89.9853, -33.3323, -101.012, 0.28 ) }
    dend_16 { pt3dadd( -92.2159, -33.7817, -101.263, 0.55 ) }
    dend_16 { pt3dadd( -95.0522, -34.1115, -101.279, 0.28 ) }
    dend_16 { pt3dadd( -96.524, -34.1156, -101.108, 0.55 ) }
    dend_16 { pt3dadd( -100.188, -33.626, -100.389, 0.28 ) }
    dend_16 { pt3dadd( -102.192, -33.0588, -99.6241, 0.55 ) }
    dend_16 { pt3dadd( -103.544, -32.528, -98.8933, 0.28 ) }
    dend_16 { pt3dadd( -105.076, -31.9268, -97.7702, 0.55 ) }
    dend_16 { pt3dadd( -107.012, -31.1178, -96.1738, 0.28 ) }
    dend_16 { pt3dadd( -107.74, -30.8449, -95.5757, 0.55 ) }
    dend_16 { pt3dadd( -111.458, -29.7416, -92.8543, 0.28 ) }
    dend_16 { pt3dadd( -112.704, -29.4132, -91.9478, 0.55 ) }
    dend_16 { pt3dadd( -115.647, -28.7313, -89.7248, 0.28 ) }
    dend_16 { pt3dadd( -117.243, -28.378, -88.5176, 0.55 ) }
    dend_16 { pt3dadd( -118.555, -28.09, -87.5278, 0.55 ) }
    dend_16 { pt3dadd( -120.123, -27.7576, -86.3821, 0.28 ) }
    dend_16 { pt3dadd( -120.943, -27.5966, -85.9078, 0.55 ) }
    dend_16 { pt3dadd( -123.718, -26.9814, -84.4709, 0.28 ) }
    dend_16 { pt3dadd( -125.199, -26.5114, -83.6935, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.42696, -32.5487, -15.0554, 0.55 ) }
    dend_15 { pt3dadd( 6.03424, -32.5494, -15.6155, 0.55 ) }
    dend_15 { pt3dadd( 6.6451, -32.4583, -16.1641, 0.55 ) }
    dend_15 { pt3dadd( 7.4265, -32.2682, -16.8099, 0.55 ) }
    dend_15 { pt3dadd( 8.07209, -32.0444, -17.3092, 0.55 ) }
    dend_15 { pt3dadd( 12.4138, -29.9894, -20.2585, 0.55 ) }
    dend_15 { pt3dadd( 13.3662, -29.3997, -20.9391, 0.55 ) }
    dend_15 { pt3dadd( 14.7403, -28.4118, -21.9784, 0.55 ) }
    dend_15 { pt3dadd( 15.7034, -27.6739, -22.7215, 0.55 ) }
    dend_15 { pt3dadd( 16.6362, -26.8858, -23.4223, 0.28 ) }
    dend_15 { pt3dadd( 18.0775, -25.5659, -24.4196, 0.55 ) }
    dend_15 { pt3dadd( 20.2475, -23.5076, -25.7659, 0.28 ) }
    dend_15 { pt3dadd( 20.4332, -23.3779, -25.9379, 0.55 ) }
    dend_15 { pt3dadd( 21.4608, -22.917, -27.4039, 0.28 ) }
    dend_15 { pt3dadd( 22.009, -22.7205, -28.5136, 0.55 ) }
    dend_15 { pt3dadd( 22.5142, -22.6264, -29.7719, 0.55 ) }
    dend_15 { pt3dadd( 23.4169, -22.5845, -32.0429, 0.55 ) }
    dend_15 { pt3dadd( 25.2072, -22.5323, -36.4935, 0.55 ) }
    dend_15 { pt3dadd( 26.4678, -22.5175, -39.4595, 0.55 ) }
    dend_15 { pt3dadd( 26.9314, -22.5157, -40.4711, 0.55 ) }
    dend_15 { pt3dadd( 30.1181, -22.4104, -47.0481, 0.55 ) }
    dend_15 { pt3dadd( 31.0476, -22.3361, -48.793, 0.55 ) }
    dend_15 { pt3dadd( 31.6406, -22.2767, -49.7325, 0.55 ) }
    dend_15 { pt3dadd( 33.2218, -22.1526, -51.7996, 0.55 ) }
    dend_15 { pt3dadd( 37.3643, -22.0827, -56.527, 0.55 ) }
    dend_15 { pt3dadd( 38.5476, -22.1147, -57.7507, 0.28 ) }
    dend_15 { pt3dadd( 39.2818, -22.159, -58.396, 0.55 ) }
    dend_15 { pt3dadd( 40.4, -22.2743, -59.3303, 0.28 ) }
    dend_15 { pt3dadd( 40.8997, -22.3687, -59.6786, 0.55 ) }
    dend_15 { pt3dadd( 42.657, -22.8242, -60.326, 0.28 ) }
    dend_15 { pt3dadd( 44.0469, -23.568, -60.0696, 0.55 ) }
    dend_15 { pt3dadd( 44.8893, -24.1247, -59.861, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 45.6636, -24.7659, -59.5781, 0.55 ) }
    dend_15 { pt3dadd( 46.3579, -25.4929, -59.2672, 0.28 ) }
    dend_15 { pt3dadd( 46.6739, -25.8771, -59.1386, 0.55 ) }
    dend_15 { pt3dadd( 47.4157, -26.8993, -58.7817, 0.28 ) }
    dend_15 { pt3dadd( 47.6295, -27.2087, -58.7366, 0.55 ) }
    dend_15 { pt3dadd( 48.8808, -28.9821, -58.5898, 0.28 ) }
    dend_15 { pt3dadd( 49.5201, -29.7945, -58.6302, 0.55 ) }
    dend_15 { pt3dadd( 51.0204, -31.5098, -58.9121, 0.28 ) }
    dend_15 { pt3dadd( 51.6262, -32.1333, -59.0862, 0.55 ) }
    dend_15 { pt3dadd( 53.7492, -34.1566, -59.7732, 0.28 ) }
    dend_15 { pt3dadd( 54.2764, -34.6471, -59.9635, 0.55 ) }
    dend_15 { pt3dadd( 55.9164, -36.2105, -60.6461, 0.28 ) }
    dend_15 { pt3dadd( 56.2667, -36.5831, -60.781, 0.55 ) }
    dend_15 { pt3dadd( 57.1533, -37.5762, -61.1384, 0.28 ) }
    dend_15 { pt3dadd( 57.6926, -38.1498, -61.4069, 0.55 ) }
    dend_15 { pt3dadd( 58.2591, -38.7069, -61.7148, 0.55 ) }
    dend_15 { pt3dadd( 59.3873, -39.8185, -62.3192, 0.28 ) }
    dend_15 { pt3dadd( 60.1846, -40.4877, -62.7629, 0.55 ) }
    dend_15 { pt3dadd( 62.6908, -42.0614, -64.2083, 0.28 ) }
    dend_15 { pt3dadd( 63.6627, -42.5428, -64.8059, 0.55 ) }
    dend_15 { pt3dadd( 64.3338, -42.8374, -65.2068, 0.28 ) }
    dend_15 { pt3dadd( 65.0141, -43.0927, -65.6029, 0.55 ) }
    dend_15 { pt3dadd( 67.1147, -43.768, -66.7862, 0.28 ) }
    dend_15 { pt3dadd( 68.7101, -44.2966, -67.6435, 0.55 ) }
    dend_15 { pt3dadd( 71.454, -45.3503, -68.9197, 0.28 ) }
    dend_15 { pt3dadd( 72.3178, -45.6761, -69.3177, 0.55 ) }
    dend_15 { pt3dadd( 73.9684, -46.2575, -69.9583, 0.28 ) }
    dend_15 { pt3dadd( 74.5163, -46.4454, -70.1335, 0.55 ) }
    dend_15 { pt3dadd( 75.3951, -46.74, -70.2805, 0.28 ) }
    dend_15 { pt3dadd( 76.1621, -46.9808, -70.3528, 0.55 ) }
    dend_15 { pt3dadd( 78.2049, -47.5407, -70.3637, 0.28 ) }
    dend_15 { pt3dadd( 80.5325, -48.0994, -70.3436, 0.28 ) }
    dend_15 { pt3dadd( 81.6928, -48.3352, -70.2601, 0.28 ) }
    dend_15 { pt3dadd( 82.8688, -48.5403, -70.2405, 0.55 ) }
    dend_15 { pt3dadd( 84.5787, -48.7696, -70.2197, 0.28 ) }
    dend_15 { pt3dadd( 85.3356, -48.8612, -70.196, 0.83 ) }
    dend_15 { pt3dadd( 87.258, -49.1177, -70.0677, 0.28 ) }
    dend_15 { pt3dadd( 88.1014, -49.2461, -70.0542, 0.55 ) }
    dend_15 { pt3dadd( 91.8506, -49.9367, -70.1477, 0.28 ) }
    dend_15 { pt3dadd( 93.748, -50.3024, -70.3288, 0.28 ) }
    dend_15 { pt3dadd( 95.1385, -50.5689, -70.5404, 0.55 ) }
    dend_15 { pt3dadd( 95.9603, -50.7399, -70.7439, 0.55 ) }
    dend_15 { pt3dadd( 98.1599, -51.2216, -71.4331, 0.28 ) }
    dend_15 { pt3dadd( 100.233, -51.7526, -72.1481, 0.55 ) }
    dend_15 { pt3dadd( 102.127, -52.286, -72.7984, 0.28 ) }
    dend_15 { pt3dadd( 103.849, -52.791, -73.4636, 0.55 ) }
    dend_15 { pt3dadd( 105.271, -53.1938, -74.0066, 0.28 ) }
    dend_15 { pt3dadd( 106.421, -53.4517, -74.3988, 0.55 ) }
    dend_15 { pt3dadd( 109.173, -53.9372, -75.2369, 0.28 ) }
    dend_15 { pt3dadd( 110.564, -54.1803, -75.6115, 0.55 ) }
    dend_15 { pt3dadd( 112.648, -54.549, -76.1064, 0.28 ) }
    dend_15 { pt3dadd( 114.346, -54.8072, -76.4776, 0.55 ) }
    dend_15 { pt3dadd( 118.301, -55.259, -77.3548, 0.28 ) }
    dend_15 { pt3dadd( 119.909, -55.3647, -77.8098, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -5.76763, -145.299, 107.941, 0.55 ) }
    dend_9 { pt3dadd( -4.82828, -153.309, 112.136, 0.55 ) }
    dend_9 { pt3dadd( -2.48186, -161.752, 114.555, 0.55 ) }
    dend_9 { pt3dadd( -0.97238, -170.01, 118.045, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -5.76763, -145.299, 107.941, 0.55 ) }
    dend_8 { pt3dadd( -4.82324, -151.373, 113.161, 0.55 ) }
    dend_8 { pt3dadd( -5.47484, -156.883, 119.015, 0.55 ) }
    dend_8 { pt3dadd( -6.79863, -161.138, 125.737, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.2654, -141.374, 104.224, 0.55 ) }
    dend_6 { pt3dadd( -10.2612, -144.733, 106.012, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -10.2654, -141.374, 104.224, 0.55 ) }
    dend_5 { pt3dadd( -11.7494, -149.513, 109.613, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 18.1855, -98.1871, 10.8602, 0.83 ) }
    dend_25 { pt3dadd( 19.244, -102.734, 12.2699, 0.83 ) }
    dend_25 { pt3dadd( 20.0364, -106.571, 13.7865, 0.83 ) }
    dend_25 { pt3dadd( 20.8241, -110.385, 15.294, 0.83 ) }
    dend_25 { pt3dadd( 21.5722, -114.007, 16.7257, 0.83 ) }
    dend_25 { pt3dadd( 22.725, -119.589, 18.932, 0.83 ) }
    dend_25 { pt3dadd( 23.8695, -125.131, 21.1224, 0.83 ) }
    dend_25 { pt3dadd( 24.461, -128.808, 23.121, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 18.1855, -98.1871, 10.8602, 0.55 ) }
    dend_24 { pt3dadd( 19.4751, -99.9652, 12.0261, 0.55 ) }
    dend_24 { pt3dadd( 20.6736, -101.325, 12.7432, 0.55 ) }
    dend_24 { pt3dadd( 21.6114, -102.325, 13.1574, 0.55 ) }
    dend_24 { pt3dadd( 22.7061, -103.508, 13.3733, 0.83 ) }
    dend_24 { pt3dadd( 24.0245, -104.847, 13.4166, 0.55 ) }
    dend_24 { pt3dadd( 25.3139, -106.155, 13.459, 0.83 ) }
    dend_24 { pt3dadd( 26.7665, -107.571, 13.3339, 0.55 ) }
    dend_24 { pt3dadd( 27.6745, -108.383, 13.201, 0.83 ) }
    dend_24 { pt3dadd( 30.7092, -111.0, 12.5131, 0.55 ) }
    dend_24 { pt3dadd( 33.0761, -113.067, 11.7208, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -16.2594, -98.1657, 50.5107, 0.55 ) }
    dend_20 { pt3dadd( -20.4279, -105.561, 55.4785, 0.55 ) }
    dend_20 { pt3dadd( -25.9578, -112.054, 60.3775, 0.55 ) }
    dend_20 { pt3dadd( -32.2311, -117.636, 65.4998, 0.55 ) }
    dend_20 { pt3dadd( -39.3712, -122.103, 70.5805, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -16.2594, -98.1657, 50.5107, 0.55 ) }
    dend_19 { pt3dadd( -20.6402, -105.943, 56.4689, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 24.461, -128.808, 23.121, 0.55 ) }
    dend_27 { pt3dadd( 24.6092, -131.127, 23.8301, 0.55 ) }
    dend_27 { pt3dadd( 24.8322, -134.077, 24.8412, 0.55 ) }
    dend_27 { pt3dadd( 25.0512, -136.861, 25.7826, 0.55 ) }
    dend_27 { pt3dadd( 25.2018, -138.844, 26.4137, 0.55 ) }
    dend_27 { pt3dadd( 25.4632, -142.385, 27.4717, 0.55 ) }
    dend_27 { pt3dadd( 26.4566, -152.313, 30.2955, 0.55 ) }
    dend_27 { pt3dadd( 26.9376, -155.668, 31.1654, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 27.3442, -158.03, 31.6769, 0.55 ) }
    dend_27 { pt3dadd( 27.9361, -160.718, 32.0785, 0.55 ) }
    dend_27 { pt3dadd( 28.455, -162.797, 32.2057, 0.55 ) }
    dend_27 { pt3dadd( 29.8963, -167.628, 32.3942, 0.55 ) }
    dend_27 { pt3dadd( 30.8783, -171.316, 32.4691, 0.55 ) }
    dend_27 { pt3dadd( 31.5456, -173.729, 32.6149, 0.55 ) }
    dend_27 { pt3dadd( 33.0957, -179.998, 33.2716, 0.55 ) }
    dend_27 { pt3dadd( 34.0208, -184.222, 33.8685, 0.55 ) }
    dend_27 { pt3dadd( 35.0845, -189.672, 34.9269, 0.55 ) }
    dend_27 { pt3dadd( 36.1268, -195.857, 36.5963, 0.55 ) }
    dend_27 { pt3dadd( 36.8618, -199.964, 38.0325, 0.55 ) }
    dend_27 { pt3dadd( 37.3164, -202.383, 38.9691, 0.55 ) }
    dend_27 { pt3dadd( 37.7015, -204.621, 39.8061, 0.55 ) }
    dend_27 { pt3dadd( 38.2986, -207.442, 40.7688, 0.55 ) }
    dend_27 { pt3dadd( 39.8954, -214.246, 42.6297, 0.55 ) }
    dend_27 { pt3dadd( 40.6422, -216.862, 43.3049, 0.55 ) }
    dend_27 { pt3dadd( 41.4208, -219.786, 44.004, 0.55 ) }
    dend_27 { pt3dadd( 42.5687, -224.182, 45.0151, 0.55 ) }
    dend_27 { pt3dadd( 43.2932, -227.587, 45.744, 0.55 ) }
    dend_27 { pt3dadd( 43.8346, -230.849, 46.3066, 0.55 ) }
    dend_27 { pt3dadd( 44.2275, -233.981, 46.7761, 0.55 ) }
    dend_27 { pt3dadd( 44.5431, -237.046, 47.2485, 0.55 ) }
    dend_27 { pt3dadd( 44.7901, -239.226, 47.5718, 0.55 ) }
    dend_27 { pt3dadd( 45.2739, -242.784, 48.0017, 0.55 ) }
    dend_27 { pt3dadd( 45.9622, -247.057, 48.1985, 0.55 ) }
    dend_27 { pt3dadd( 46.421, -249.12, 48.1807, 0.55 ) }
    dend_27 { pt3dadd( 46.9098, -250.925, 48.0514, 0.55 ) }
    dend_27 { pt3dadd( 48.0724, -254.3, 47.7014, 0.55 ) }
    dend_27 { pt3dadd( 48.8199, -256.442, 47.4145, 0.55 ) }
    dend_27 { pt3dadd( 49.7177, -259.079, 47.1665, 0.55 ) }
    dend_27 { pt3dadd( 50.2289, -260.948, 47.06, 0.55 ) }
    dend_27 { pt3dadd( 51.3844, -265.823, 46.912, 0.55 ) }
    dend_27 { pt3dadd( 52.0389, -269.495, 46.9927, 0.55 ) }
    dend_27 { pt3dadd( 52.7369, -275.207, 47.4883, 0.55 ) }
    dend_27 { pt3dadd( 53.0855, -278.89, 48.1563, 0.55 ) }
    dend_27 { pt3dadd( 53.3632, -282.765, 48.9551, 0.28 ) }
    dend_27 { pt3dadd( 53.4091, -284.33, 49.3144, 0.28 ) }
    dend_27 { pt3dadd( 53.3355, -288.141, 50.4827, 0.28 ) }
    dend_27 { pt3dadd( 53.1018, -291.674, 51.7924, 0.28 ) }
    dend_27 { pt3dadd( 52.9307, -296.292, 54.1542, 0.28 ) }
    dend_27 { pt3dadd( 55.0496, -306.401, 57.7718, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 24.461, -128.808, 23.121, 0.55 ) }
    dend_26 { pt3dadd( 24.754, -129.099, 24.2242, 0.55 ) }
    dend_26 { pt3dadd( 25.244, -129.904, 26.5582, 0.55 ) }
    dend_26 { pt3dadd( 25.6144, -130.722, 28.6066, 0.28 ) }
    dend_26 { pt3dadd( 25.9666, -131.668, 30.8288, 0.55 ) }
    dend_26 { pt3dadd( 26.0341, -132.297, 32.2315, 0.28 ) }
    dend_26 { pt3dadd( 25.9778, -133.46, 34.7358, 0.55 ) }
    dend_26 { pt3dadd( 25.7412, -134.115, 35.8741, 0.28 ) }
    dend_26 { pt3dadd( 25.5997, -134.361, 36.3055, 0.28 ) }
    dend_26 { pt3dadd( 25.3365, -134.716, 37.0518, 0.55 ) }
    dend_26 { pt3dadd( 24.4531, -135.872, 39.9075, 0.28 ) }
    dend_26 { pt3dadd( 24.1099, -136.319, 41.1121, 0.55 ) }
    dend_26 { pt3dadd( 23.4034, -137.567, 44.6658, 0.28 ) }
    dend_26 { pt3dadd( 23.1253, -138.165, 46.5642, 0.28 ) }
    dend_26 { pt3dadd( 22.9004, -138.915, 48.8994, 0.55 ) }
    dend_26 { pt3dadd( 22.8313, -140.042, 52.3041, 0.28 ) }
    dend_26 { pt3dadd( 22.8639, -140.185, 52.7523, 0.55 ) }
    dend_26 { pt3dadd( 23.1529, -140.86, 54.9173, 0.28 ) }
    dend_26 { pt3dadd( 23.1984, -140.92, 55.1075, 0.55 ) }
    dend_26 { pt3dadd( 23.5893, -141.674, 56.8086, 0.28 ) }
    dend_26 { pt3dadd( 23.7412, -142.099, 57.6353, 0.55 ) }
    dend_26 { pt3dadd( 24.8733, -145.216, 64.4415, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -39.3712, -122.103, 70.5805, 0.55 ) }
    dend_22 { pt3dadd( -44.4746, -125.869, 77.8832, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -39.3712, -122.103, 70.5805, 0.55 ) }
    dend_21 { pt3dadd( -45.4278, -129.583, 73.9917, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 15
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 9
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 7
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_BP_03b3d4a19f_0_0


