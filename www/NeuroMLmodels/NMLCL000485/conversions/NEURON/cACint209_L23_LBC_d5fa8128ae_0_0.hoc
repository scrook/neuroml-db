// Cell: cACint209_L23_LBC_d5fa8128ae_0_0
/*
{
  "id" : "cACint209_L23_LBC_d5fa8128ae_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.56398, 12.1856, -3.45915, 3.25378", "-2.26706, 10.9606, -3.11058, 4.92468", "-1.97014, 9.73565, -2.76202, 6.49677", "-1.67322, 8.51066, -2.41345, 7.93038", "-1.3763, 7.28567, -2.06488, 8.78195", "-1.07938, 6.06068, -1.71632, 9.51699", "-0.782463, 4.83569, -1.36775, 10.3263", "-0.485543, 3.6107, -1.01918, 11.1493", "-0.188623, 2.38571, -0.670618, 11.9011", "0.108296, 1.16072, -0.322051, 12.0825", "0.405216, -0.0642733, 0.026515, 12.1848", "0.702136, -1.28926, 0.375081, 12.2225", "0.999056, -2.51425, 0.723648, 11.698", "1.29598, -3.73924, 1.07221, 11.5084", "1.5929, -4.96423, 1.42078, 11.8466", "1.88982, -6.18922, 1.76935, 11.6542", "2.18674, -7.41421, 2.11791, 11.2017", "2.48366, -8.6392, 2.46648, 10.0847", "2.78057, -9.86419, 2.81505, 8.25314", "3.07749, -11.0892, 3.16361, 6.3237", "3.37441, -12.3142, 3.51218, 3.70524" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "2.77471, -10.5365, 13.4707, 3.61", "2.60142, -12.1509, 13.2782, 3.61", "2.10008, -16.8219, 12.721, 3.06", "1.68537, -20.6856, 12.2601, 3.06", "1.27387, -24.5195, 11.8028, 2.78", "0.89232, -28.0743, 11.3788, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-4.14529, 11.3325, -7.22925, 2.5", "-4.92242, 12.3053, -6.42804, 2.5", "-8.81594, 16.2678, -3.16175, 1.39", "-10.1, 17.5746, -2.08456, 1.11", "-11.7173, 19.2205, -0.727854, 0.83", "-12.352, 19.8666, -0.195327, 0.83", "-13.6099, 21.1467, 0.859876, 1.39", "-14.7572, 22.1143, 1.61526, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.59471, -1.67298, -11.6093, 3.33", "6.8211, -1.71439, -11.5743, 3.33", "8.24855, -1.9755, -11.3541, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.40529, -1.40698, -18.0493, 1.11", "-3.18045, -2.56412, -17.5515, 1.11", "-5.6985, -4.04838, -17.2782, 1.11", "-7.14717, -4.97587, -17.1438, 1.11", "-9.2263, -6.59766, -16.8932, 0.83", "-11.0961, -8.16284, -16.9841, 0.83", "-13.457, -10.205, -17.3667, 1.11", "-15.6289, -12.2097, -18.1585, 0.83", "-17.6239, -14.0296, -19.1562, 0.83", "-20.6742, -16.4775, -20.8063, 0.83", "-25.3286, -19.7977, -23.4018, 1.11", "-26.7058, -20.7256, -24.2108, 0.56", "-28.4994, -21.8685, -25.2335, 1.11", "-30.5512, -23.0108, -26.3294, 0.56", "-33.0164, -23.99, -27.5694, 0.56", "-34.27, -24.3109, -28.0616, 0.56", "-36.5536, -24.7525, -28.4692, 1.11", "-38.4006, -24.9686, -28.7807, 0.28", "-39.3294, -25.0394, -28.9251, 0.28", "-41.5474, -25.1571, -29.426, 1.11", "-43.1479, -25.2486, -29.9021, 0.28", "-44.805, -25.3235, -30.4371, 0.83", "-47.8023, -25.371, -31.5131, 0.56", "-49.9427, -25.3863, -32.3742, 0.56", "-52.3643, -25.4483, -33.4735, 0.83", "-53.9454, -25.5189, -34.3221, 0.28", "-55.7053, -25.5858, -35.4004, 0.56", "-57.0608, -25.6292, -36.4772, 0.28", "-58.03, -25.656, -37.3694, 1.39", "-58.376, -25.6515, -37.744, 1.39", "-59.5653, -25.6083, -39.1239, 0.28", "-60.4148, -25.6056, -40.1614, 1.39", "-63.333, -25.8114, -43.953, 0.28", "-63.9267, -25.9301, -44.6694, 0.28", "-65.1502, -26.3027, -46.0338, 0.28", "-65.3147, -26.3641, -46.1875, 0.56", "-67.275, -27.208, -47.6343, 0.28", "-68.4865, -27.8189, -48.3523, 1.67", "-70.3974, -28.8815, -49.2122, 0.28", "-71.409, -29.4635, -49.6369, 0.56", "-74.0534, -31.0523, -50.6757, 0.28", "-75.1767, -31.7384, -51.1585, 0.83", "-77.6365, -33.2762, -52.2453, 0.28", "-78.3618, -33.7647, -52.6097, 0.83", "-79.4511, -34.5394, -53.2959, 0.28", "-80.1867, -35.0413, -53.8196, 0.56", "-82.5301, -36.6077, -55.6054, 0.28", "-83.1468, -36.952, -56.0372, 1.67", "-85.9313, -38.28, -57.7664, 0.28", "-87.9911, -39.1653, -58.8859, 0.83", "-91.1952, -40.3967, -60.3891, 0.28", "-92.018, -40.6632, -60.7164, 0.83", "-95.3842, -41.5889, -61.7559, 0.28", "-96.7044, -41.9013, -62.1229, 0.83", "-98.4144, -42.2113, -62.4783, 0.28", "-98.7378, -42.2677, -62.5165, 0.56", "-102.047, -42.8825, -62.7035, 0.28", "-103.413, -43.1503, -62.796, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.73529, -9.68148, 1.49075, 3.06", "-2.53102, -10.5825, 1.62058, 2.78", "-4.50212, -12.8144, 1.94219, 2.78", "-6.26782, -14.8137, 2.23029, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.37441, -12.3142, 3.51218, 0.83", "6.90787, -26.8921, 3.51218, 0.83", "10.4413, -41.47, 3.51218, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "0.89232, -28.0743, 11.3788, 0.83", "-1.46201, -32.3412, 4.92978, 0.83", "-2.36857, -33.9842, 2.44652, 1.11", "-3.6042, -36.2236, -0.938149, 1.39" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "0.89232, -28.0743, 11.3788, 1.67", "0.814962, -30.6854, 14.1463, 1.67", "0.744471, -33.0647, 16.6681, 1.67", "0.677936, -35.3105, 19.0484, 1.39", "0.617238, -37.3592, 21.22, 1.39", "0.588206, -38.3392, 22.2586, 1.67" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-14.7572, 22.1143, 1.61526, 0.56", "-18.6598, 20.0311, 4.02815, 0.56", "-21.2564, 18.9439, 5.82629, 0.56", "-23.9732, 18.1466, 7.7891, 0.56", "-27.1589, 17.4629, 10.0992, 0.56", "-29.0999, 17.0476, 11.5134, 0.56", "-33.5737, 15.932, 14.4996, 0.56", "-36.731, 15.4421, 16.5774, 0.83", "-39.7443, 15.1598, 18.6551, 0.83", "-41.671, 15.0255, 19.9228, 0.83", "-45.4887, 14.5657, 22.3953, 0.83", "-49.6503, 13.9108, 25.0478, 0.83", "-56.0411, 12.4499, 29.063, 0.83", "-60.7483, 11.0909, 32.0243, 0.83", "-64.3978, 9.89071, 34.3487, 0.56", "-69.5693, 7.9685, 37.4932, 0.56", "-71.2528, 7.31465, 38.5329, 0.56", "-73.9535, 6.22664, 40.3294, 0.56", "-75.2245, 5.62923, 41.1963, 0.56", "-77.511, 4.51813, 42.7869, 0.83", "-81.7973, 2.64585, 45.8942, 0.56", "-84.4882, 1.66547, 47.777, 0.56", "-88.8458, -0.0172295, 51.0626, 0.56", "-93.1438, -1.53256, 54.4934, 0.56" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-14.7572, 22.1143, 1.61526, 0.56", "-17.6788, 21.5176, 2.34952, 0.56", "-19.4128, 21.4249, 2.64629, 0.56", "-24.1349, 21.1725, 3.45448, 0.83", "-27.7082, 20.9815, 4.06606, 0.83", "-30.1362, 20.8517, 4.4816, 0.83", "-32.4726, 20.7268, 4.88147, 0.83", "-36.3997, 20.9544, 5.40036, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.24855, -1.9755, -11.3541, 0.83", "11.5483, -1.83203, -13.5264, 0.83", "15.0718, -1.13563, -15.765, 0.83", "18.3095, 0.021314, -17.7026, 0.83", "21.3274, 1.45627, -19.3735, 0.83", "24.7797, 3.34058, -21.1403, 0.83", "30.2593, 6.43253, -23.7261, 0.56", "33.824, 8.84693, -25.2412, 0.83", "37.0269, 11.5659, -26.543, 0.83", "38.3223, 12.8883, -26.9425, 0.56", "39.2985, 14.0277, -27.0895, 0.56", "40.3053, 15.6773, -27.0544, 0.56", "41.1591, 18.3451, -26.1839, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.24855, -1.9755, -11.3541, 1.94", "11.0587, -3.83902, -13.1971, 1.94", "15.352, -6.68595, -16.0126, 1.94", "17.7913, -8.30351, -17.6124, 1.94", "20.5592, -10.139, -19.4276, 1.94" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.26782, -14.8137, 2.23029, 1.11", "-4.94207, -16.9417, 5.35977, 1.11", "-3.936, -18.1204, 7.30902, 1.11", "-0.860588, -20.8922, 12.5473, 1.11", "0.48802, -22.0015, 14.7737, 1.11", "1.85193, -23.1235, 17.0254, 0.83", "3.16788, -24.2059, 19.1979, 0.83", "5.59346, -25.7895, 22.752, 0.83", "7.90444, -27.0986, 25.8607, 0.83", "9.90784, -27.9679, 28.2281, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.26782, -14.8137, 2.23029, 1.39", "-9.73444, -14.4105, 4.1259, 1.39", "-11.6279, -14.1903, 5.16127, 1.39", "-12.5526, -14.0828, 5.6669, 1.39", "-14.5295, -13.8528, 6.74791, 1.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4413, -41.47, 3.51218, 0.56", "13.9748, -56.0478, 3.51218, 0.56", "17.5083, -70.6257, 3.51218, 0.56" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-3.6042, -36.2236, -0.938149, 0.83", "-1.56184, -37.8725, -2.01804, 0.83", "0.462277, -39.8286, -3.27528, 0.83", "1.88102, -41.5236, -4.3701, 0.83", "5.01134, -45.6034, -7.05943, 0.83", "9.97114, -52.5133, -11.3624, 0.56", "11.1283, -54.3881, -12.4251, 0.56", "12.2641, -56.6697, -13.7606, 1.11", "13.5662, -59.3877, -15.3004, 0.56", "14.8542, -61.6076, -16.5508, 0.56", "16.299, -63.7219, -17.5656, 0.56", "18.5086, -66.7324, -18.6311, 0.83", "21.2079, -69.5541, -19.6158, 0.56", "24.4478, -72.4039, -20.6219, 0.56", "28.5729, -75.8089, -21.8255, 1.11", "30.3969, -77.3204, -22.5009, 0.56", "32.7076, -79.1824, -23.6879, 0.56", "34.8543, -80.9702, -25.0826, 0.56", "36.3211, -82.5154, -26.3399, 0.28", "37.3423, -83.9157, -27.6106, 0.83", "39.2539, -87.2095, -30.6436, 0.28", "40.6349, -90.0668, -33.044, 1.39", "42.1358, -93.9002, -35.9868, 0.28", "42.8527, -95.77, -37.3421, 0.56", "44.0881, -98.9665, -39.2966, 0.28", "44.8287, -100.754, -40.1749, 2.22", "46.8676, -105.757, -41.7431, 0.28", "47.8339, -107.928, -42.1622, 0.56", "49.2243, -110.516, -42.4624, 0.56", "50.5167, -112.541, -42.5885, 0.28", "51.6517, -114.113, -42.6508, 0.83", "53.6072, -116.677, -42.8514, 0.28", "55.0611, -118.578, -43.0559, 0.83", "57.3775, -121.968, -43.3097, 0.28", "58.2026, -123.385, -43.4282, 1.39", "60.3651, -127.126, -43.4206, 0.28", "61.5352, -129.223, -43.2644, 0.28", "62.5568, -130.908, -43.0845, 1.94", "64.6226, -134.114, -42.5929, 0.28", "65.4048, -135.207, -42.4216, 1.11", "70.5384, -141.541, -41.738, 0.28", "71.3226, -142.463, -41.6632, 0.83", "74.9117, -146.553, -41.5416, 0.28", "75.3915, -147.124, -41.5678, 0.83", "79.2018, -151.838, -42.1024, 0.28", "81.053, -154.37, -42.5233, 0.56", "83.3142, -158.041, -43.3404, 0.28", "84.0807, -159.535, -43.6408, 1.39", "86.3069, -164.515, -44.5248, 0.28", "86.7608, -165.604, -44.7009, 0.83", "89.1381, -170.784, -45.9264, 0.28", "90.0594, -172.587, -46.4542, 1.11", "92.3772, -176.361, -47.9788, 0.28", "93.8181, -178.472, -48.9713, 0.28", "94.6926, -179.659, -49.5907, 1.11", "100.334, -186.988, -53.8807, 0.28", "100.896, -187.701, -54.3374, 1.94", "104.583, -192.432, -57.0813, 0.28", "104.774, -192.683, -57.2072, 0.56", "106.842, -195.72, -58.5533, 0.28", "108.14, -197.84, -59.3819, 1.11", "110.127, -202.166, -60.6244, 0.28", "112.622, -208.499, -62.389, 0.28", "113.334, -210.83, -63.0038, 1.39", "114.289, -214.827, -64.0259, 0.28", "114.545, -216.408, -64.4523, 0.83", "114.811, -221.437, -65.611, 0.28", "114.747, -222.147, -65.8067, 0.56", "114.21, -224.365, -66.5988, 0.28", "113.827, -225.628, -67.0669, 0.83", "112.881, -228.482, -68.042, 0.28", "111.63, -232.417, -69.4618, 1.11", "110.359, -236.713, -71.101, 0.28", "110.194, -237.383, -71.3841, 0.56", "109.9, -238.734, -71.9332, 0.28", "109.824, -239.319, -72.2648, 0.56", "109.697, -240.694, -73.212, 0.28", "109.66, -241.27, -73.6934, 0.56", "109.456, -243.782, -75.7102, 0.28", "109.506, -245.967, -77.5894, 1.11", "110.032, -250.914, -82.1822, 0.28", "110.17, -251.687, -82.9087, 0.56", "111.134, -255.751, -86.7149, 0.28", "111.62, -257.466, -88.2912, 1.39", "113.021, -261.96, -92.0972, 0.28", "113.984, -264.347, -94.049, 1.39", "114.89, -266.337, -95.414, 0.28", "115.153, -266.832, -95.7522, 0.83", "116.617, -269.029, -97.245, 0.28", "118.123, -271.278, -98.7296, 0.83", "119.448, -273.943, -99.7101, 0.28", "119.955, -275.007, -99.9302, 0.56" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-3.6042, -36.2236, -0.938149, 0.56", "-3.54754, -37.9749, -2.97996, 0.56", "-3.54578, -38.5051, -3.59636, 0.28", "-3.58781, -39.5319, -4.79733, 0.83", "-3.8077, -41.1934, -6.6308, 0.56", "-4.21144, -43.0059, -8.61814, 1.11", "-5.71601, -49.1408, -15.3379, 0.83", "-6.43619, -51.7339, -18.318, 0.28", "-6.60068, -52.2822, -19.0442, 0.28", "-7.08947, -53.9255, -21.5241, 0.83", "-7.35077, -55.0819, -23.6634, 0.56", "-7.53327, -55.9497, -25.3924, 0.56", "-7.69192, -56.7324, -26.9836, 1.39", "-8.40945, -60.0244, -34.0459, 0.28", "-8.61883, -60.9488, -35.9918, 1.39", "-9.21156, -63.3135, -40.8862, 0.56", "-9.60872, -64.5808, -43.3877, 0.56", "-10.307, -66.2985, -46.612, 1.39", "-11.2941, -68.377, -50.2197, 0.28", "-11.5874, -68.9019, -50.9137, 0.83", "-12.7236, -70.9855, -53.1582, 0.28", "-12.864, -71.276, -53.3904, 0.56", "-13.8859, -73.8471, -55.0864, 0.28", "-14.2204, -74.9201, -55.6985, 1.39", "-15.448, -79.7378, -58.0262, 0.28", "-15.6215, -80.7873, -58.5969, 1.39", "-15.8594, -83.464, -60.128, 0.28", "-15.8982, -84.4464, -60.785, 0.83", "-15.8918, -87.3312, -62.9005, 0.28", "-15.7853, -89.4196, -64.6024, 1.11", "-15.3201, -94.5512, -69.2345, 0.28", "-15.292, -94.851, -69.4927, 0.56", "-14.8299, -100.431, -74.0458, 0.28", "-14.8103, -100.943, -74.4006, 0.28", "-14.8372, -103.778, -75.9943, 0.28", "-14.9083, -105.257, -76.704, 0.56", "-15.2084, -108.036, -77.5691, 0.28", "-15.3471, -109.235, -77.9207, 1.39", "-15.7397, -112.681, -78.7331, 0.28", "-15.8252, -113.441, -78.9709, 0.83", "-16.2018, -116.064, -80.1616, 0.28", "-16.2602, -116.531, -80.4803, 0.83", "-16.4928, -118.799, -82.465, 0.28", "-16.5238, -119.204, -82.8689, 0.56", "-16.6868, -121.284, -85.0033, 0.28", "-16.8719, -123.529, -87.162, 0.56", "-17.2429, -126.946, -90.2168, 0.28", "-17.3324, -127.758, -90.848, 0.56", "-17.5514, -130.083, -92.3062, 0.28", "-17.5519, -132.92, -93.9329, 1.11", "-17.3491, -134.633, -94.7024, 0.28", "-17.1022, -135.347, -94.9467, 0.56", "-16.4466, -136.557, -95.3093, 0.28", "-16.0565, -137.234, -95.4683, 0.56", "-13.7457, -141.21, -96.2677, 0.28", "-13.3756, -141.901, -96.4479, 0.56", "-11.4169, -145.903, -97.4411, 0.28", "-11.0296, -146.815, -97.6281, 0.56", "-9.22748, -152.108, -98.3526, 0.28", "-8.97312, -153.233, -98.5044, 1.11", "-8.60344, -156.421, -98.7128, 0.28", "-8.5281, -157.578, -98.8104, 0.83", "-8.50086, -160.607, -99.1689, 0.28", "-8.52895, -162.608, -99.4128, 1.11", "-8.72381, -168.016, -100.112, 0.28", "-8.84754, -171.126, -100.407, 1.11", "-8.98405, -173.784, -100.568, 0.28", "-9.05783, -174.842, -100.623, 0.56", "-9.37595, -179.118, -100.839, 0.28", "-9.50088, -180.54, -100.849, 1.11", "-9.8805, -183.637, -100.628, 0.28", "-10.069, -184.635, -100.53, 0.56", "-11.1776, -189.105, -99.8077, 0.28", "-11.4786, -190.217, -99.5928, 0.56", "-12.2006, -192.485, -99.0904, 0.28", "-12.5124, -193.429, -98.8493, 0.56", "-13.6244, -196.457, -97.9793, 0.28", "-13.8997, -197.127, -97.755, 1.11" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "0.588206, -38.3392, 22.2586, 1.11", "-4.41409, -40.4565, 22.9951, 1.11", "-7.90973, -42.8621, 24.2716, 1.11", "-11.1335, -46.2628, 26.1141, 1.11", "-12.8803, -48.9921, 27.504, 1.11", "-13.9875, -51.2236, 28.4951, 1.11", "-15.8606, -55.7715, 29.9859, 1.11", "-17.1588, -61.223, 30.9886, 1.11", "-17.4117, -63.6314, 31.3133, 0.83", "-17.4663, -65.9203, 31.6993, 1.11", "-17.4856, -67.8011, 32.0259, 1.11", "-17.7054, -71.3912, 32.6463, 0.83", "-18.0807, -73.556, 32.9893, 0.83", "-18.6835, -75.519, 33.0682, 1.11", "-19.4499, -77.5764, 33.1892, 0.83", "-19.852, -78.6737, 33.2387, 1.11", "-21.233, -82.2246, 33.4453, 1.11", "-22.0457, -83.7554, 33.6666, 1.11", "-24.5319, -87.2847, 34.1692, 0.83", "-25.9043, -88.8879, 34.4274, 0.83", "-27.423, -90.5211, 34.6411, 0.83", "-29.4894, -92.5421, 34.8592, 0.83", "-33.7455, -96.1603, 35.2524, 0.83", "-36.7362, -98.4673, 35.6068, 0.83", "-39.3256, -100.368, 36.054, 0.56", "-41.6719, -102.145, 36.4447, 0.83", "-43.8032, -103.854, 36.7578, 0.56", "-45.823, -105.667, 36.9382, 0.83", "-47.3022, -107.143, 36.9462, 0.56", "-48.3618, -108.136, 36.9631, 0.83", "-50.2098, -109.631, 37.073, 0.83", "-52.3863, -111.241, 37.2891, 0.56", "-52.817, -111.625, 37.3817, 0.56", "-54.1769, -113.211, 37.8989, 0.83", "-54.6506, -113.892, 38.1762, 0.83", "-55.6579, -115.835, 38.7509, 0.56", "-56.1381, -117.165, 39.026, 0.83", "-56.9224, -120.075, 39.4581, 0.83", "-57.6046, -122.357, 39.9252, 0.83", "-58.1752, -124.034, 40.3449, 0.83", "-59.8343, -128.339, 41.5506, 0.83", "-60.2595, -129.378, 41.8541, 0.56", "-60.973, -130.924, 42.2998, 0.56", "-63.2721, -135.216, 43.305, 0.83", "-64.4212, -137.126, 43.6516, 0.56", "-65.1068, -138.102, 43.7869, 0.83", "-66.5995, -140.049, 44.192, 0.56", "-68.8022, -143.208, 44.7003, 0.83", "-70.093, -145.376, 44.9008, 0.83", "-71.1006, -147.335, 45.0104, 0.56", "-72.2303, -149.873, 45.1989, 1.11", "-73.8242, -153.104, 45.1374, 0.56", "-74.6729, -154.709, 45.0932, 0.56", "-76.1065, -157.487, 45.0007, 0.83", "-77.0166, -159.314, 44.9825, 0.56", "-78.7199, -162.926, 44.9453, 0.83", "-81.6103, -168.856, 44.8991, 0.56", "-83.0745, -171.316, 44.8458, 0.56", "-83.8177, -172.389, 44.8885, 0.56", "-85.7422, -175.075, 45.1324, 0.28", "-87.2578, -177.205, 45.4515, 0.56", "-88.3452, -178.841, 45.9921, 0.56", "-89.4871, -181.104, 46.7107, 0.83", "-89.9467, -182.174, 46.8617, 0.28", "-90.7087, -184.359, 46.9668, 0.28", "-91.2398, -186.021, 46.9299, 0.56", "-92.3426, -189.23, 46.7204, 1.67", "-93.8309, -193.434, 46.2933, 0.83", "-94.4634, -195.038, 46.1171, 0.83", "-95.6632, -197.36, 45.9036, 0.56", "-96.7147, -198.794, 45.9117, 0.56", "-97.54, -199.659, 46.0181, 0.28", "-98.4896, -200.527, 46.2405, 0.28", "-100.145, -202.064, 47.1902, 0.83", "-101.289, -203.269, 48.08, 0.56", "-103.529, -205.829, 50.0707, 0.56", "-104.269, -206.839, 50.8296, 0.56", "-105.216, -208.433, 51.8219, 0.28", "-107.101, -212.257, 53.9614, 2.22", "-108.519, -215.429, 55.5551, 0.56", "-109.753, -218.502, 56.8273, 0.56", "-110.318, -219.95, 57.2856, 0.56", "-112.145, -223.83, 58.3623, 0.56", "-113.78, -226.75, 59.1048, 0.56", "-114.846, -228.616, 59.4279, 0.56", "-115.557, -229.899, 59.6579, 0.28", "-117.024, -232.542, 60.244, 0.56", "-118.56, -235.12, 60.9335, 0.56", "-120.044, -237.647, 61.7057, 2.5", "-121.448, -240.453, 62.4097, 0.56", "-122.351, -242.696, 62.9833, 0.56", "-123.118, -244.779, 63.5401, 0.28", "-123.731, -246.568, 63.9808, 0.56", "-124.288, -248.323, 64.2924, 0.28", "-124.891, -250.163, 64.4987, 0.56", "-125.482, -252.088, 64.7805, 0.28", "-125.895, -253.489, 65.0052, 0.28", "-126.694, -255.856, 65.4664, 0.56", "-127.777, -258.282, 66.0749, 0.28", "-128.604, -259.732, 66.5164, 0.83", "-130.122, -262.006, 67.2423, 0.56", "-131.723, -264.294, 67.9471, 0.56", "-132.912, -266.027, 68.5091, 1.11", "-134.104, -267.885, 69.1537, 0.28", "-134.555, -268.598, 69.3724, 0.28", "-135.072, -269.529, 69.5608, 0.83", "-135.865, -271.281, 69.8169, 0.83", "-136.255, -272.384, 70.0573, 0.28", "-137.027, -274.626, 70.6503, 0.56", "-137.758, -277.275, 71.5607, 0.83", "-138.502, -280.322, 72.5503, 0.56", "-138.875, -282.025, 73.171, 0.28", "-139.499, -284.597, 74.2092, 1.11", "-140.102, -286.694, 75.1287, 0.56", "-141.055, -289.477, 76.5032, 0.56", "-142.365, -293.262, 78.4633, 0.83", "-143.038, -295.421, 79.5262, 0.56", "-143.422, -296.801, 80.1215, 0.56", "-143.594, -297.566, 80.388, 0.56", "-143.967, -299.453, 81.126, 1.11" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "0.588206, -38.3392, 22.2586, 1.11", "4.86504, -40.2133, 27.0181, 1.11", "6.75112, -41.2634, 29.5075, 1.11", "8.07951, -42.2376, 31.5649, 0.83", "9.86949, -43.5504, 34.3372, 0.83", "11.424, -44.6905, 36.7447, 0.83", "13.6374, -46.3139, 40.1729, 1.11", "14.6648, -47.8031, 42.8171, 0.83", "15.1698, -48.8135, 44.6335, 0.83" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-36.3997, 20.9544, 5.40036, 0.56", "-40.4259, 24.1913, 11.1992, 0.56", "-43.8413, 26.5228, 14.7359, 0.56", "-46.2108, 27.8882, 16.7695, 0.56", "-48.3283, 28.9273, 18.3782, 0.83", "-50.428, 29.7714, 20.0042, 0.83", "-53.1459, 30.6377, 22.2569, 0.83", "-56.4606, 30.9247, 24.6424, 0.56", "-58.4639, 30.747, 26.1958, 0.56", "-59.7335, 30.5467, 27.3012, 0.56", "-62.716, 29.9599, 30.1677, 0.56", "-65.3812, 29.3425, 32.9393, 0.56", "-66.867, 29.0236, 34.5302, 0.56", "-69.6512, 28.4704, 37.3011, 0.56", "-72.388, 28.1513, 39.6964, 0.56", "-74.4864, 28.021, 41.1867, 0.56", "-75.0754, 28.0297, 41.4758, 0.83", "-77.6862, 28.2099, 42.3315, 0.28", "-78.303, 28.3101, 42.5177, 0.56", "-80.4578, 28.8671, 43.1974, 0.56", "-82.5433, 29.6053, 43.976, 0.83", "-85.0346, 30.9069, 45.1584, 0.56", "-86.9238, 32.2533, 46.3771, 1.67", "-89.3666, 34.89, 48.5907, 0.28", "-90.0128, 35.7602, 49.2529, 0.28", "-90.4949, 36.6432, 49.8489, 0.56", "-91.2697, 38.9369, 51.4019, 0.28", "-91.452, 40.8483, 52.8108, 0.56", "-91.3194, 41.9195, 53.7217, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-36.3997, 20.9544, 5.40036, 0.56", "-36.4535, 20.7069, 3.29374, 0.56", "-35.9167, 20.1915, -2.74956, 0.56", "-35.6305, 19.9743, -5.11484, 1.39", "-35.4631, 19.8632, -6.27223, 0.28", "-35.2652, 19.6713, -8.09336, 0.28", "-35.2186, 19.623, -8.58479, 1.11", "-34.7923, 19.397, -11.8293, 1.11", "-34.048, 19.2766, -16.9114, 0.56", "-33.774, 19.3197, -19.0611, 0.83", "-32.8022, 19.7414, -28.4809, 0.28", "-32.7403, 19.7793, -29.2329, 1.11", "-32.3649, 20.1019, -35.3395, 0.28", "-32.337, 20.1591, -36.2864, 0.56", "-32.2061, 20.5198, -39.4479, 0.28", "-32.2139, 20.6145, -42.2313, 0.56" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "41.1591, 18.3451, -26.1839, 0.56", "42.8557, 19.4182, -26.756, 0.56", "46.8959, 22.1419, -28.6231, 0.56", "49.2721, 23.7092, -29.6251, 0.56", "50.6564, 24.5972, -30.2596, 0.56", "52.8881, 26.0115, -31.2899, 0.28", "54.5665, 27.0513, -32.0518, 0.83", "56.5097, 28.2604, -33.0693, 0.28", "59.3876, 30.1012, -34.6065, 0.83", "61.6991, 31.7202, -35.7503, 0.28", "63.6227, 33.0872, -36.5876, 0.83", "64.6433, 33.8188, -36.9325, 0.56", "66.2268, 34.9819, -37.4237, 0.56", "68.1331, 36.3526, -37.8906, 0.28", "70.0337, 37.7137, -38.3711, 0.28", "72.3498, 39.2647, -39.1813, 1.11", "73.7228, 40.1932, -39.9279, 0.28", "74.8395, 40.9642, -40.6628, 0.56", "77.3414, 42.7534, -42.5214, 0.56", "79.1683, 44.15, -44.0727, 1.67", "83.4307, 47.7362, -48.0818, 0.56", "86.3331, 50.4014, -50.8093, 0.28", "87.2883, 51.3197, -51.7703, 0.56", "88.7436, 52.8129, -53.306, 0.28", "89.2645, 53.4325, -53.9451, 0.56", "90.6438, 55.3383, -55.5276, 0.28", "92.2366, 57.8024, -56.3797, 1.11" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "41.1591, 18.3451, -26.1839, 0.56", "44.423, 18.8109, -23.785, 0.56", "48.2981, 19.3742, -21.1135, 0.56", "51.8334, 19.8774, -18.7914, 0.56", "55.1807, 20.329, -16.7869, 0.83", "57.9861, 20.6569, -15.1904, 0.56", "61.9411, 20.9683, -13.037, 0.56", "63.6073, 21.0618, -12.1829, 0.56", "66.2452, 21.0634, -10.9212, 0.83", "68.8002, 21.0499, -9.85227, 0.56", "71.5913, 20.9874, -8.88713, 0.28", "73.9058, 20.8367, -8.11538, 0.28", "76.713, 20.6358, -7.31915, 0.83", "79.7578, 20.3883, -6.52853, 0.28", "80.7605, 20.2995, -6.30463, 0.56", "83.5092, 20.1404, -5.75225, 0.28", "84.28, 20.1264, -5.64585, 0.56", "86.8137, 20.1749, -5.51079, 0.28", "87.5804, 20.1838, -5.56073, 0.83", "89.9229, 20.2364, -5.85106, 0.28", "91.3747, 20.2897, -6.04971, 0.28", "92.4331, 20.362, -6.22947, 0.28", "95.5422, 20.6119, -6.82308, 0.83", "99.2181, 20.9514, -7.61063, 0.28", "100.914, 21.1161, -8.00459, 0.56", "104.247, 21.4609, -8.81763, 0.56", "107.456, 21.7325, -9.59088, 0.56", "110.226, 21.9866, -10.2169, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "20.5592, -10.139, -19.4276, 0.83", "23.8711, -10.3723, -21.5497, 0.83", "28.5753, -10.4787, -24.4528, 0.56", "29.989, -10.3839, -25.2586, 0.56", "33.1409, -10.1181, -26.9978, 0.56", "36.007, -9.90328, -28.5213, 0.83", "38.1612, -9.72148, -29.6353, 0.56", "41.483, -9.44821, -31.0739, 0.83", "44.3198, -8.93401, -32.1731, 0.56", "46.2814, -8.06052, -33.0852, 0.56", "47.6067, -7.09548, -33.7568, 0.28", "48.1813, -6.64394, -34.0925, 0.28", "50.1049, -5.3402, -34.9541, 0.83", "52.6406, -4.20361, -35.7091, 0.56", "54.2076, -3.6866, -36.199, 0.56", "57.3264, -2.96898, -37.1147, 1.39", "61.0989, -2.3839, -38.1623, 0.56", "65.7353, -2.05336, -39.4003, 0.28", "67.8137, -2.03195, -39.896, 0.28", "73.2172, -2.2099, -41.1942, 1.94", "76.1139, -2.28614, -42.0125, 0.28", "77.5734, -2.26632, -42.5078, 0.56", "79.7454, -2.06007, -43.3826, 0.28", "81.4642, -1.76712, -44.2867, 0.56", "83.8211, -1.25168, -45.6483, 0.28", "85.2409, -0.966658, -46.4717, 0.83", "87.2674, -0.567299, -47.8849, 0.28", "87.8246, -0.46892, -48.3008, 0.56", "90.2136, -0.0789405, -50.2072, 0.28", "91.2807, 0.0250485, -51.256, 0.56", "92.3608, 0.0936285, -52.3229, 0.28", "93.0028, 0.126112, -52.9302, 0.83", "94.1825, 0.23426, -53.9274, 0.28", "94.8958, 0.348709, -54.492, 0.56", "99.4712, 1.35659, -57.8938, 0.28", "100.832, 1.70002, -58.8975, 0.28", "102.631, 2.22266, -60.3541, 0.83", "106.354, 3.41601, -63.5553, 0.28", "107.742, 3.89191, -64.7751, 1.39", "110.125, 4.75854, -66.8262, 0.28", "111.055, 5.10631, -67.5936, 1.11", "114.913, 6.53866, -70.9756, 0.28", "116.619, 7.17048, -72.5336, 0.28", "117.769, 7.59936, -73.6471, 0.83", "119.598, 8.23922, -75.4743, 0.28", "119.981, 8.41065, -75.8306, 0.56", "121.965, 9.52164, -77.348, 0.28", "122.652, 9.98388, -77.7827, 1.11", "124.867, 11.5982, -79.0633, 0.28", "126.189, 12.622, -79.8583, 0.83", "130.341, 15.9477, -82.5229, 0.28", "132.758, 17.9456, -84.0514, 1.11", "134.98, 19.844, -85.3892, 0.28", "135.536, 20.3246, -85.7134, 0.83", "138.601, 23.0798, -87.4316, 0.28", "140.465, 24.6446, -88.5445, 1.39" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "20.5592, -10.139, -19.4276, 1.11", "18.739, -12.2951, -20.8974, 1.11", "17.722, -14.3055, -21.5666, 0.83", "17.6216, -15.7722, -21.6215, 0.83", "17.8471, -17.757, -21.5042, 0.83", "18.0751, -19.1288, -21.3746, 0.83", "18.4796, -21.0249, -21.1748, 0.83", "19.6618, -25.0593, -20.732, 0.83", "21.4505, -29.8572, -20.3452, 0.83", "23.222, -33.9771, -20.2433, 0.83", "24.1479, -35.6994, -20.2609, 0.56", "25.3863, -37.7425, -20.3764, 0.83", "27.1821, -40.6894, -20.7596, 0.56", "28.9782, -43.5347, -21.3775, 1.11", "30.564, -45.8879, -22.0888, 0.56", "33.1568, -49.4376, -23.3138, 0.56", "33.9552, -50.547, -23.694, 0.56", "36.3824, -54.0512, -24.9922, 0.56", "38.3987, -57.0573, -26.0875, 0.56", "39.8925, -59.4493, -27.0613, 0.56", "40.3281, -60.1379, -27.3514, 0.56", "41.9433, -62.8349, -28.605, 0.83", "43.753, -65.677, -30.0768, 0.28", "44.2532, -66.4349, -30.5121, 0.83", "44.7242, -67.348, -31.0571, 0.28", "45.827, -69.669, -32.3334, 0.28", "46.1947, -70.3693, -32.7166, 0.28", "47.4162, -73.0548, -34.127, 1.11", "47.7743, -74.0359, -34.5311, 0.28", "48.0131, -74.723, -34.8406, 0.28", "48.7101, -76.711, -35.731, 1.11", "49.2891, -78.491, -36.5072, 0.28", "49.9502, -80.4787, -37.3219, 0.28", "50.5913, -82.5039, -38.0673, 0.28", "51.2224, -84.3477, -38.7019, 1.11", "51.966, -86.7428, -39.4665, 0.28", "52.154, -87.5252, -39.68, 0.28", "52.6181, -89.3777, -40.1397, 0.56", "53.0009, -90.7138, -40.4012, 0.28", "54.1885, -94.8002, -41.3528, 0.28", "54.5333, -95.9651, -41.6426, 0.28", "55.4011, -98.8124, -42.4394, 0.83", "56.3032, -101.692, -43.4115, 0.28", "57.0666, -103.922, -44.2699, 1.67", "58.3248, -107.324, -45.7184, 0.28", "58.8689, -108.807, -46.475, 0.56", "59.1889, -109.533, -46.8873, 0.56", "60.0725, -111.322, -47.9809, 0.28", "60.8374, -112.69, -48.8796, 0.28", "62.0897, -114.422, -50.8626, 0.83", "63.3665, -116.06, -52.8021, 0.56", "64.196, -117.017, -54.0817, 0.83", "65.0601, -117.921, -55.4201, 0.28", "66.3079, -119.104, -57.445, 0.28", "70.4495, -122.68, -66.2062, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "9.90784, -27.9679, 28.2281, 0.28", "9.08808, -28.587, 29.2012, 0.28", "7.39595, -29.8649, 31.2099, 0.28", "6.92844, -30.218, 31.7648, 0.56", "6.12458, -30.825, 32.7191, 0.56", "4.99818, -31.6757, 34.0562, 0.56", "4.3286, -32.1814, 34.8511, 0.56" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.90784, -27.9679, 28.2281, 0.56", "13.0681, -27.0954, 29.5659, 0.56" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-14.5295, -13.8528, 6.74791, 0.83", "-14.2295, -7.24282, 19.2059, 0.83", "-14.5902, -5.86265, 20.3342, 0.83", "-15.1739, -4.07549, 21.3689, 0.83", "-16.3063, -1.25282, 22.7207, 0.83", "-18.3127, 3.65163, 24.9949, 0.56", "-19.5928, 6.95319, 26.4407, 0.56", "-21.887, 12.4565, 27.7153, 0.56", "-22.4577, 13.7446, 28.0319, 0.83", "-24.309, 17.5258, 29.0726, 0.56", "-25.3722, 19.5419, 29.7691, 0.56", "-26.8711, 22.5321, 31.1576, 0.83", "-27.8128, 24.6243, 32.1912, 0.56", "-29.059, 27.4231, 33.6548, 0.56", "-30.7676, 30.719, 35.3498, 0.28", "-32.2721, 33.4516, 36.5865, 0.28", "-33.4971, 35.4119, 37.3373, 0.28", "-34.7232, 37.3974, 37.9862, 0.28", "-35.861, 39.3991, 38.5447, 0.56", "-38.1345, 43.5768, 39.462, 0.28", "-39.7861, 46.6437, 40.0034, 0.28", "-41.8694, 50.5098, 40.4792, 0.83", "-45.8251, 57.6722, 41.2858, 0.28", "-47.04, 59.9106, 41.4643, 0.83", "-48.2425, 62.172, 41.5961, 0.28", "-49.597, 64.8124, 41.5922, 0.83", "-51.6281, 68.5606, 41.4985, 0.28", "-52.1792, 69.5453, 41.3916, 0.56", "-54.0539, 72.3698, 40.6114, 0.28", "-54.466, 72.9475, 40.4027, 0.56", "-56.6324, 75.9438, 39.0516, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-14.5295, -13.8528, 6.74791, 1.11", "-17.4513, -15.88, 3.24053, 1.11", "-18.3914, -16.5322, 2.112, 1.11", "-21.4649, -18.6646, -1.57747, 1.11", "-23.8221, -20.3, -4.4071, 1.11", "-26.8578, -22.4063, -8.05134, 1.11", "-28.7877, -23.7452, -10.368, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-143.967, -299.453, 81.126, 0.56", "-145.657, -300.775, 83.9717, 0.56", "-147.263, -302.032, 86.6756, 0.28", "-147.928, -302.552, 87.7953, 0.56" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-143.967, -299.453, 81.126, 0.56", "-144.296, -300.682, 82.4124, 0.56", "-144.73, -302.389, 84.0994, 0.56", "-144.924, -302.997, 84.687, 0.83", "-145.538, -304.296, 85.9321, 0.56", "-145.956, -304.991, 86.5609, 0.56", "-146.971, -306.678, 88.0867, 0.56", "-147.349, -307.152, 88.5201, 0.56", "-147.995, -307.846, 89.0736, 0.56", "-149.167, -309.15, 90.0832, 0.28", "-149.838, -309.937, 90.6254, 0.83" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "15.1698, -48.8135, 44.6335, 0.56", "15.006, -50.3107, 46.2558, 0.56", "14.8541, -51.7769, 47.9316, 0.56", "14.5582, -54.6344, 51.1974, 0.56", "14.4541, -55.6386, 52.3453, 0.56", "14.3409, -56.7318, 53.5947, 0.56", "14.0918, -59.1371, 56.3437, 0.56", "14.0466, -60.2815, 57.7816, 0.56" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "15.1698, -48.8135, 44.6335, 0.83", "19.0675, -54.1295, 40.5116, 0.83", "20.0924, -56.1737, 39.3428, 0.83", "22.3703, -61.6349, 36.7789, 0.56", "22.811, -62.7159, 36.3378, 0.56", "24.1009, -65.6612, 35.2489, 0.56", "25.3514, -68.1264, 34.3617, 0.56", "27.9473, -72.9767, 33.2259, 0.56", "29.6301, -75.894, 32.3566, 0.56", "30.8325, -77.7952, 31.7383, 0.56", "32.166, -79.5534, 31.1199, 0.56", "34.4663, -82.0624, 30.1878, 0.56", "35.2164, -82.7394, 29.9004, 0.56", "40.6262, -87.0535, 27.9294, 0.83", "42.1993, -88.4917, 27.3282, 0.28", "44.7633, -91.4813, 25.9989, 0.83", "45.8427, -93.0932, 25.3241, 0.56", "46.9689, -95.2295, 24.5373, 0.56", "47.7067, -96.7925, 24.0286, 0.28", "49.1068, -99.951, 23.157, 0.56", "50.8866, -103.948, 21.8534, 0.56", "52.0421, -106.335, 21.0763, 0.56", "53.1839, -108.54, 20.489, 0.28", "53.9384, -109.803, 20.2366, 0.83", "55.8995, -112.424, 20.0254, 0.28", "56.9364, -113.58, 20.0853, 1.11", "59.4408, -116.163, 20.6093, 0.56", "62.2529, -118.961, 21.3367, 0.56", "63.9263, -120.562, 21.6829, 0.83", "65.6648, -122.337, 22.092, 0.28", "66.1204, -122.867, 22.2175, 0.56", "67.1164, -124.143, 22.3755, 0.28", "68.5864, -126.089, 22.399, 0.56", "71.2845, -129.45, 22.1825, 1.11", "73.6809, -132.691, 21.7466, 0.28", "74.7278, -134.167, 21.373, 0.56", "76.3984, -136.614, 20.651, 0.28", "77.2437, -137.957, 20.3169, 0.56", "77.777, -138.948, 20.138, 0.56", "78.8956, -140.929, 19.9339, 0.83", "80.0673, -142.864, 19.6713, 0.28", "80.4119, -143.504, 19.6133, 0.56", "82.003, -146.852, 19.439, 0.28", "82.8183, -148.597, 19.4031, 1.39", "86.225, -155.208, 19.5371, 0.28", "87.0184, -156.606, 19.6328, 0.83", "88.5415, -158.987, 19.8582, 0.28", "88.9453, -159.596, 19.9072, 0.56", "90.7237, -162.198, 20.0664, 0.28", "93.2066, -165.606, 20.353, 0.28", "94.1875, -166.97, 20.5022, 1.11", "96.3612, -169.906, 20.7562, 0.28", "97.7812, -171.728, 20.8785, 0.28", "98.0014, -172.022, 20.8918, 0.56", "99.7739, -174.598, 20.9255, 0.28", "100.573, -175.85, 20.9504, 1.39", "102.413, -178.771, 21.0625, 0.28", "103.484, -180.379, 21.0862, 1.39", "104.945, -182.332, 21.0535, 0.28", "105.83, -183.486, 20.9988, 0.28", "108.021, -186.136, 20.7936, 0.28", "109.113, -187.343, 20.6761, 0.83", "111.822, -190.14, 20.3432, 0.28", "112.185, -190.5, 20.2972, 0.56", "113.24, -191.494, 20.1783, 0.56", "114.983, -193.02, 20.0444, 0.28", "115.841, -193.73, 20.0382, 0.28", "117.025, -194.833, 20.1166, 1.39", "118.948, -196.843, 20.4089, 0.28", "120.088, -198.237, 20.6176, 0.28", "120.828, -199.308, 20.7777, 0.83", "122.078, -201.804, 21.2367, 0.28", "123.389, -204.768, 21.9312, 0.28", "123.511, -205.1, 22.0226, 0.56", "124.194, -207.354, 22.7864, 0.28", "124.388, -208.086, 23.0584, 0.83", "125.112, -210.617, 23.9094, 0.28", "125.747, -212.718, 24.5227, 0.28", "126.243, -214.075, 24.878, 1.39", "127.006, -216.415, 25.3155, 0.28", "127.215, -217.096, 25.4, 0.83", "128.479, -221.341, 25.6422, 0.28", "129.017, -223.562, 25.6117, 0.28", "129.206, -224.609, 25.569, 0.83", "129.818, -228.429, 25.3063, 0.28", "129.985, -229.489, 25.2084, 1.67", "130.567, -232.775, 24.9146, 0.28", "131.315, -236.624, 24.7521, 0.28", "131.692, -238.013, 24.6947, 0.56", "132.363, -240.113, 24.6908, 0.28", "132.735, -241.36, 24.7533, 0.56", "133.135, -242.913, 24.8595, 0.28", "133.741, -245.428, 25.0752, 0.56", "134.757, -249.491, 25.4634, 0.28", "135.286, -251.769, 25.6859, 1.11", "137.921, -264.473, 26.9413, 0.28", "138.18, -265.93, 27.0671, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "92.2366, 57.8024, -56.3797, 0.28", "93.5276, 61.0912, -60.5545, 0.28", "93.771, 61.7203, -61.3383, 0.83", "95.3762, 66.1606, -66.2414, 0.28", "95.5877, 66.7693, -66.8584, 0.56", "97.119, 71.0359, -71.4477, 0.28", "97.9574, 72.9781, -73.5593, 0.28", "98.1838, 73.4211, -74.078, 0.83", "99.1776, 75.0185, -76.0797, 0.28", "99.4666, 75.433, -76.6076, 0.83", "102.203, 78.9628, -81.2981, 0.56", "104.418, 81.5181, -84.7745, 0.28", "105.333, 82.4803, -86.1272, 0.83", "109.04, 86.3061, -91.5894, 0.56", "111.389, 88.5791, -94.91, 0.28", "112.423, 89.5525, -96.2593, 0.28", "112.836, 89.9144, -96.7461, 0.56", "116.042, 92.5348, -100.683, 0.28", "117.256, 93.4532, -102.093, 0.28", "118.469, 94.3356, -103.335, 0.83", "119.602, 95.1057, -104.456, 0.83", "123.058, 97.4616, -108.045, 0.28", "125.154, 98.8448, -110.256, 1.11", "126.644, 99.753, -111.822, 0.28", "127.96, 100.52, -113.275, 0.28", "128.552, 100.906, -114.01, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "92.2366, 57.8024, -56.3797, 0.56", "94.5448, 56.3363, -56.1721, 0.56", "96.2754, 54.895, -55.9755, 0.28", "97.6167, 53.4279, -55.8462, 1.11", "100.149, 50.1417, -55.3843, 0.28", "101.34, 48.3022, -55.2129, 1.11", "103.303, 45.0371, -55.0054, 0.28", "105.148, 41.5144, -54.8512, 0.28", "106.856, 38.008, -54.7437, 0.28", "108.325, 35.1694, -54.7426, 1.39", "110.876, 30.7043, -54.9392, 0.28", "111.793, 29.3519, -55.0289, 1.11", "114.588, 25.8594, -55.4088, 0.28", "115.081, 25.3334, -55.4579, 0.83", "119.535, 21.2947, -55.8387, 0.28", "120.447, 20.5463, -55.9076, 0.83", "123.175, 18.4536, -55.9011, 0.28", "123.549, 18.161, -55.8901, 0.56", "125.555, 16.5455, -56.0481, 0.28", "126.107, 16.0706, -56.1635, 0.56", "127.648, 14.7063, -56.8609, 0.28", "128.817, 13.7322, -57.5504, 0.56", "129.257, 13.3662, -57.8786, 0.56", "133.31, 10.1484, -61.2913, 0.28", "133.332, 10.132, -61.3138, 0.56", "135.238, 8.93091, -63.301, 0.28", "135.864, 8.60082, -64.0319, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "140.465, 24.6446, -88.5445, 0.28", "144.834, 26.1482, -90.6297, 0.28", "145.57, 26.4116, -90.9603, 1.11", "149.295, 27.8318, -92.516, 0.28", "149.707, 28.0032, -92.6617, 0.83", "153.25, 29.5331, -93.7658, 0.28", "153.516, 29.6505, -93.84, 0.56", "154.502, 30.1558, -94.0177, 0.28", "155.222, 30.5667, -94.1246, 1.67", "158.663, 32.6576, -94.427, 0.28", "159.168, 32.9574, -94.4675, 0.56", "160.868, 33.9417, -94.5377, 0.28", "161.442, 34.2771, -94.5709, 1.11", "163.455, 35.5254, -94.7405, 0.28", "163.955, 35.8334, -94.801, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "140.465, 24.6446, -88.5445, 0.28", "141.973, 24.9886, -87.8838, 0.28", "142.622, 25.0011, -87.4301, 0.83", "144.149, 24.7011, -86.2401, 0.28", "144.744, 24.4973, -85.7645, 0.56", "146.745, 23.7717, -84.5744, 0.28", "147.094, 23.6336, -84.4158, 0.56", "150.431, 21.6874, -83.5621, 0.56", "151.758, 20.7187, -83.3578, 0.28", "152.25, 20.3162, -83.3368, 1.11", "154.947, 17.9122, -83.4277, 0.28", "155.404, 17.4791, -83.5044, 0.56", "157.674, 15.6547, -84.1953, 0.28", "159.127, 14.7723, -84.9489, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "70.4495, -122.68, -66.2062, 0.83", "75.603, -132.733, -70.1805, 0.83", "77.3929, -135.948, -71.3714, 0.28", "78.5602, -137.958, -72.1165, 1.39", "80.9963, -141.837, -73.5384, 0.28", "82.0445, -143.427, -74.086, 0.28", "83.4847, -145.502, -74.8185, 0.28", "84.1522, -146.372, -75.2617, 0.28", "84.6114, -146.997, -75.4732, 0.56", "86.5318, -149.765, -76.1367, 0.28", "87.5389, -151.296, -76.4055, 1.39", "89.955, -155.474, -77.2945, 0.28", "90.6537, -157.014, -77.671, 0.83", "91.3592, -158.863, -78.2437, 0.28", "92.1707, -161.362, -79.1177, 0.28", "92.4842, -162.595, -79.6456, 0.83", "93.2485, -166.026, -81.3299, 0.28", "93.6313, -167.686, -82.2526, 1.11", "94.7281, -171.688, -84.6782, 0.28", "95.205, -173.217, -85.6654, 1.39", "96.0561, -175.569, -87.2224, 0.28", "96.4057, -176.286, -87.6731, 0.56", "98.6676, -179.5, -89.4444, 0.28", "99.3995, -180.342, -89.8702, 0.83", "102.141, -182.674, -90.8012, 0.28", "103.281, -183.43, -91.0387, 1.39", "107.042, -185.312, -91.417, 0.28", "110.547, -186.658, -91.5364, 0.28", "110.874, -186.75, -91.5189, 0.56", "115.478, -187.82, -91.0705, 0.28", "116.83, -188.098, -90.8858, 0.56", "119.887, -188.779, -90.4737, 0.28", "121.575, -189.262, -90.2314, 1.11", "124.019, -190.122, -89.8773, 0.28", "125.109, -190.613, -89.7297, 0.56", "129.914, -193.273, -89.1205, 0.28", "131.561, -194.307, -88.9276, 1.39", "134.911, -196.708, -88.5848, 0.28", "136.22, -197.731, -88.5139, 0.56", "138.889, -200.052, -88.4282, 0.28", "139.63, -200.781, -88.4013, 0.56", "141.062, -202.356, -88.3409, 0.28", "142.423, -203.97, -88.2978, 0.83", "144.226, -206.229, -88.2736, 0.28", "145.555, -208.008, -88.2579, 1.39", "147.306, -210.52, -88.2338, 0.28", "148.545, -212.487, -88.2691, 0.28", "149.536, -214.204, -88.2493, 0.28", "150.228, -215.488, -88.1621, 0.83", "150.788, -216.525, -88.0416, 0.28", "151.396, -217.54, -87.93, 0.83", "152.281, -219.066, -87.5353, 0.28", "153.532, -221.273, -86.8786, 0.83", "155.023, -223.705, -86.0153, 0.28", "155.863, -225.06, -85.4763, 0.28", "158.052, -228.376, -83.9868, 0.28", "160.311, -231.501, -82.4322, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "70.4495, -122.68, -66.2062, 0.56", "71.708, -130.456, -56.3788, 0.56", "71.8526, -131.938, -54.805, 0.28", "71.9235, -133.02, -53.7768, 0.28", "71.9691, -133.769, -53.1318, 0.56", "72.1557, -137.165, -50.4122, 0.28", "72.2422, -138.256, -49.6426, 1.11", "72.4425, -142.11, -48.1145, 0.28", "72.4778, -142.765, -47.8583, 0.56", "72.6287, -144.507, -47.2568, 0.28", "72.7034, -145.254, -47.0316, 0.83", "73.0703, -148.329, -46.3647, 0.28", "73.5303, -151.345, -45.7702, 0.28", "73.6947, -152.419, -45.6454, 0.83", "73.9948, -154.696, -45.4481, 0.28", "74.0298, -155.145, -45.4181, 0.56", "74.1362, -157.342, -45.2796, 0.28", "74.1419, -157.574, -45.2412, 0.56", "74.2151, -159.141, -44.9757, 0.28", "74.2542, -159.456, -44.9113, 0.56", "74.7258, -162.054, -44.0334, 0.28", "74.8776, -162.615, -43.808, 1.11", "76.0674, -166.639, -42.0345, 0.28", "76.2037, -167.051, -41.834, 0.56", "77.0666, -169.473, -40.5759, 0.28", "77.8243, -171.453, -39.5472, 0.56", "79.8471, -176.133, -37.0727, 0.28", "80.2055, -176.934, -36.6501, 0.56", "80.8079, -178.165, -36.0217, 0.56" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-28.7877, -23.7452, -10.368, 0.56", "-32.4008, -26.3041, -10.6878, 0.56", "-33.3874, -27.1406, -10.8787, 0.56", "-35.2955, -28.7436, -11.246, 0.56", "-37.5753, -30.484, -11.6153, 0.83", "-40.5527, -32.555, -11.9921, 0.83", "-43.5517, -34.68, -12.4318, 0.83", "-45.637, -36.377, -13.0242, 0.56", "-46.4903, -37.1691, -13.2947, 0.56", "-47.8474, -38.4997, -13.7524, 0.83", "-49.0806, -39.7165, -14.0353, 0.56", "-51.1276, -41.7754, -14.2088, 0.56", "-53.0268, -43.9774, -14.2361, 0.56", "-54.0415, -45.2503, -14.1836, 0.56", "-54.7048, -46.242, -14.2003, 0.56", "-55.6633, -47.9062, -14.3761, 0.56", "-56.8278, -50.2368, -14.7714, 1.39", "-58.0004, -52.7392, -15.3831, 0.56", "-59.3352, -55.5867, -16.3033, 0.56", "-60.8413, -59.0523, -17.8608, 0.83", "-61.6867, -61.2988, -19.0731, 0.56", "-62.3161, -63.1712, -20.3022, 1.11", "-63.15, -65.3656, -22.0273, 0.56", "-63.9061, -67.1095, -23.4898, 0.83", "-65.2072, -69.6539, -25.7242, 0.28", "-66.1166, -71.1166, -26.934, 0.28", "-67.3708, -72.9702, -28.4116, 0.83", "-69.3079, -75.7054, -30.6099, 0.28", "-70.3971, -77.2769, -31.8184, 1.11", "-71.576, -79.0248, -33.045, 0.28", "-71.8738, -79.4355, -33.2953, 0.83", "-73.4613, -81.449, -34.5612, 0.28", "-74.1322, -82.2929, -35.0647, 0.83", "-76.0316, -84.7356, -36.5183, 0.28", "-77.3123, -86.3602, -37.4711, 0.83", "-78.7197, -88.1587, -38.4551, 0.28", "-80.7114, -90.7498, -39.7953, 0.56", "-81.6455, -91.9597, -40.3751, 1.67", "-83.4052, -94.3547, -41.4743, 0.28", "-84.436, -95.9245, -42.1646, 0.28", "-84.843, -96.6275, -42.486, 0.56", "-85.9111, -98.8533, -43.4685, 0.28", "-86.2179, -99.638, -43.8085, 0.56", "-86.6836, -100.897, -44.4028, 0.28", "-87.3889, -103.029, -45.4346, 1.39", "-88.1682, -105.612, -46.7757, 0.28", "-88.405, -106.382, -47.1966, 0.56", "-88.7642, -107.563, -47.876, 0.28", "-89.1783, -108.848, -48.624, 0.28", "-89.7418, -110.377, -49.2668, 0.28", "-90.1243, -111.317, -49.3778, 1.11", "-90.9993, -113.151, -49.1828, 0.28", "-90.9993, -113.151, -49.1828, 0.56", "-92.1754, -115.185, -48.523, 0.28", "-94.0527, -118.336, -47.2865, 0.83", "-95.5987, -120.706, -46.3594, 0.28", "-96.2128, -121.619, -46.0114, 0.56", "-98.2458, -124.703, -44.8931, 0.28", "-99.1532, -126.066, -44.4958, 1.11", "-100.817, -128.552, -44.0609, 0.28", "-102.145, -130.543, -44.0333, 1.11", "-103.725, -133.057, -44.1372, 0.28", "-104.526, -134.377, -44.2166, 0.28", "-105.44, -135.845, -44.3618, 0.56", "-106.802, -138.018, -44.4982, 0.28", "-107.746, -139.485, -44.6098, 0.83", "-109.57, -142.162, -44.651, 0.28", "-110.099, -142.85, -44.6478, 0.56", "-111.742, -144.853, -44.6884, 0.28", "-113.022, -146.3, -44.719, 1.11", "-115.113, -148.367, -45.0014, 0.28", "-116.02, -149.123, -45.31, 0.28", "-117.322, -150.092, -45.8698, 0.56", "-119.703, -151.895, -47.0933, 0.28", "-121.408, -153.194, -48.0673, 0.56", "-123.355, -154.791, -49.2918, 1.39", "-126.812, -157.914, -51.4823, 0.28", "-127.785, -158.927, -52.1926, 0.56", "-129.114, -160.467, -53.2499, 0.28", "-129.661, -161.228, -53.7293, 0.56", "-130.635, -163.013, -54.755, 0.28", "-131.046, -163.972, -55.2431, 0.83", "-131.901, -166.443, -56.3915, 0.28", "-132.151, -167.129, -56.7511, 0.83", "-133.251, -169.71, -58.276, 0.28", "-134.157, -171.628, -59.5609, 0.56", "-135.302, -173.826, -61.1404, 0.28", "-135.673, -174.498, -61.6407, 0.83", "-138.227, -178.957, -64.945, 0.28", "-139.282, -180.78, -66.3198, 1.94", "-141.005, -183.604, -68.4846, 0.28", "-141.288, -184.061, -68.8462, 0.56", "-142.349, -185.813, -70.022, 0.28", "-142.657, -186.338, -70.2247, 0.56", "-143.287, -187.494, -70.189, 0.28", "-143.664, -188.252, -70.018, 0.56", "-144.56, -190.099, -69.4174, 0.28", "-146.669, -194.284, -68.0104, 1.39", "-148.963, -198.663, -66.6032, 0.28", "-150.222, -200.999, -65.9926, 0.83", "-151.379, -203.052, -65.5303, 0.28", "-152.103, -204.286, -65.3599, 0.83", "-154.309, -207.973, -65.1902, 0.28", "-155.241, -209.494, -65.3581, 1.11", "-157.301, -212.842, -66.16, 0.28", "-157.761, -213.598, -66.3741, 0.56", "-159.779, -216.728, -67.5408, 0.28", "-160.865, -218.333, -68.2262, 0.28", "-161.469, -219.016, -68.6507, 1.11", "-164.121, -221.568, -70.4452, 0.28", "-165.848, -222.927, -71.7002, 0.56", "-168.35, -224.665, -73.4788, 0.28", "-169.442, -225.307, -74.2107, 1.11", "-177.081, -229.276, -79.1854, 0.28", "-177.74, -229.584, -79.5886, 0.83", "-181.411, -231.157, -81.8645, 0.28", "-183.313, -231.936, -83.1083, 0.56", "-184.064, -232.241, -83.5821, 0.56", "-186.252, -233.066, -84.968, 0.56", "-188.301, -233.695, -85.9953, 0.56" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-28.7877, -23.7452, -10.368, 0.83", "-28.87, -26.1399, -9.02447, 0.83", "-28.7492, -28.8471, -7.96775, 0.83", "-28.803, -30.8751, -7.28284, 0.56", "-29.1124, -34.2603, -6.24459, 0.83", "-29.425, -36.1703, -5.69446, 0.56", "-29.8615, -38.2715, -5.11156, 0.56", "-31.444, -44.134, -3.60548, 0.83", "-32.0576, -46.3777, -3.02592, 1.11", "-32.4553, -48.2836, -2.54349, 0.83", "-32.7006, -50.2048, -2.03226, 0.83", "-32.8283, -51.3104, -1.72853, 0.83", "-33.2229, -54.5521, -0.915367, 0.83", "-33.6685, -57.5353, -0.124966, 0.83", "-33.9064, -59.0865, 0.282702, 0.56", "-34.3719, -61.1044, 0.76914, 0.56", "-34.7693, -62.3995, 1.07586, 0.56", "-35.6102, -64.586, 1.54528, 0.83", "-36.6706, -66.8944, 1.96577, 0.56", "-37.7463, -69.1803, 2.61678, 0.83", "-38.6997, -71.4651, 3.51735, 0.56", "-39.2504, -73.031, 4.1941, 0.56", "-39.8783, -75.2688, 5.15537, 0.28", "-40.1607, -76.5211, 5.71419, 0.83", "-40.8128, -80.6461, 7.47384, 0.28", "-40.9899, -82.0578, 8.02989, 0.56", "-41.2143, -84.3486, 8.94603, 0.28", "-41.6515, -88.0256, 10.3497, 0.83", "-42.0431, -90.3542, 11.2094, 0.56", "-42.5005, -93.0722, 12.1258, 1.11", "-42.7192, -94.9524, 12.6489, 0.56", "-42.8951, -97.8181, 13.4428, 0.56", "-42.8994, -98.6686, 13.7076, 0.56", "-42.8739, -101.099, 14.5298, 0.83", "-42.8928, -103.026, 15.2457, 0.28", "-42.9434, -105.02, 16.1232, 0.83", "-43.1033, -106.524, 16.8521, 0.28", "-43.2938, -107.438, 17.2384, 0.56", "-43.9681, -110.53, 18.3841, 0.83", "-44.5468, -112.983, 19.0981, 0.28", "-44.9555, -114.313, 19.3995, 0.56", "-45.953, -117.304, 19.9067, 0.83", "-46.9266, -120.451, 20.2262, 0.28", "-47.72, -123.803, 20.1291, 0.83", "-48.0844, -125.826, 19.7666, 0.28", "-48.2079, -126.926, 19.4671, 0.28", "-48.2373, -128.07, 19.1462, 0.28", "-48.1968, -129.186, 18.887, 1.11", "-48.0579, -132.517, 18.5184, 0.28", "-48.0535, -133.148, 18.4909, 0.56", "-48.1649, -135.0, 18.4735, 0.56", "-48.3503, -137.904, 18.4545, 0.28", "-48.5445, -140.758, 18.4641, 0.56", "-48.7374, -142.997, 18.5946, 1.67", "-48.9707, -144.91, 18.8296, 0.56", "-49.4277, -148.305, 19.2937, 0.28", "-49.6923, -150.207, 19.576, 1.11", "-49.8271, -151.786, 19.9155, 0.83", "-49.8422, -154.22, 20.6572, 0.28", "-49.823, -155.028, 21.0106, 0.56", "-49.8044, -156.239, 21.7801, 0.28", "-49.8475, -157.627, 22.9243, 0.28", "-50.0175, -160.157, 25.1373, 0.28", "-50.0813, -160.922, 25.8141, 0.83", "-50.0993, -162.25, 26.9675, 0.28", "-50.0459, -164.186, 28.6538, 0.83", "-50.0178, -165.787, 30.0149, 0.28", "-50.0321, -167.197, 31.1111, 0.28", "-49.9689, -169.218, 32.5057, 1.39", "-49.7543, -171.95, 34.0568, 0.28", "-49.6935, -172.868, 34.4495, 0.28", "-49.635, -174.561, 34.9864, 0.56", "-49.6612, -176.45, 35.4533, 0.83", "-49.9539, -179.217, 36.1202, 0.28", "-50.2583, -181.189, 36.5512, 0.56", "-50.7831, -183.474, 36.9996, 0.56", "-51.291, -185.242, 37.3663, 0.28", "-51.8223, -186.853, 37.6247, 1.39", "-52.6523, -189.028, 37.8755, 0.28", "-52.9712, -189.791, 37.8975, 0.56", "-53.6891, -191.636, 37.9029, 0.28", "-54.0611, -192.969, 37.8881, 0.56", "-54.6422, -195.527, 37.8575, 0.28", "-54.7514, -196.08, 37.8538, 0.83", "-54.9888, -197.862, 37.9408, 0.28", "-55.178, -199.787, 38.1909, 0.83", "-55.3111, -202.766, 38.8186, 0.56", "-55.3224, -204.926, 39.4082, 0.28", "-55.3242, -206.023, 39.7694, 1.11", "-55.5803, -208.998, 40.8305, 0.28", "-55.7413, -210.032, 41.2282, 0.83", "-56.1327, -212.157, 42.0233, 0.28", "-56.7155, -214.744, 42.8925, 0.28", "-56.9309, -215.664, 43.2047, 0.56", "-58.1566, -219.767, 44.5392, 0.28", "-58.3163, -220.121, 44.6369, 0.56" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-149.838, -309.937, 90.6254, 0.28", "-147.146, -312.632, 90.4141, 0.28", "-146.7, -313.078, 90.3792, 0.56", "-145.368, -314.412, 90.2746, 0.28", "-145.052, -314.728, 90.2499, 0.56" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-149.838, -309.937, 90.6254, 0.56", "-151.714, -312.289, 91.2128, 0.56", "-152.495, -313.211, 91.4605, 0.56", "-153.363, -314.172, 91.7399, 0.56", "-154.547, -315.443, 91.983, 0.56", "-155.826, -316.84, 92.1637, 0.28", "-157.546, -318.727, 92.3234, 0.56", "-158.502, -319.758, 92.3004, 0.28", "-159.169, -320.529, 92.2243, 0.83", "-160.849, -322.777, 91.9375, 0.56", "-162.066, -324.624, 91.5717, 0.56", "-162.457, -325.462, 91.3527, 0.28", "-163.067, -327.248, 90.7155, 0.28", "-163.431, -328.56, 90.1857, 0.56", "-163.762, -330.354, 89.4194, 1.39", "-163.921, -332.362, 88.4725, 0.56", "-164.058, -334.657, 87.2837, 0.56", "-164.103, -336.524, 86.3048, 0.28", "-164.105, -337.361, 85.8684, 0.28", "-164.037, -338.109, 85.5126, 0.83", "-163.771, -339.802, 84.8253, 0.28", "-163.338, -341.967, 84.2377, 0.28", "-163.0, -343.55, 83.9446, 0.28", "-162.706, -344.734, 83.8066, 1.11", "-162.12, -347.302, 83.5742, 0.28", "-161.926, -348.504, 83.4956, 0.83", "-161.815, -349.491, 83.4613, 0.28", "-161.619, -351.117, 83.3805, 0.28", "-161.556, -352.473, 83.3159, 0.28", "-161.569, -353.416, 83.242, 2.22", "-161.853, -355.991, 82.8402, 0.28", "-161.938, -356.487, 82.7734, 0.56" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-161.938, -356.487, 82.7734, 0.28", "-162.282, -359.465, 81.7988, 0.28", "-162.392, -360.415, 81.4881, 0.56", "-162.693, -363.025, 80.6338, 0.28", "-162.736, -363.393, 80.5133, 0.56", "-163.09, -366.459, 79.5099, 0.28", "-163.158, -367.053, 79.3155, 0.56" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-161.938, -356.487, 82.7734, 0.28", "-163.619, -357.987, 83.3947, 0.28", "-164.319, -358.565, 83.5906, 0.56", "-166.129, -359.958, 84.209, 0.28", "-167.128, -360.736, 84.5711, 0.56", "-168.63, -361.907, 85.0351, 0.28", "-170.284, -363.595, 85.5303, 0.28", "-171.589, -365.239, 85.9316, 1.11", "-173.43, -368.158, 86.36, 0.28", "-173.82, -368.928, 86.4186, 0.28", "-174.597, -370.689, 86.4937, 0.83", "-176.424, -376.011, 86.4742, 0.28", "-176.563, -376.634, 86.4287, 0.56", "-177.064, -380.459, 86.0723, 0.28", "-177.145, -381.467, 85.9246, 0.56", "-177.252, -382.921, 85.7279, 0.56", "-177.385, -385.148, 85.4879, 0.28", "-177.719, -387.95, 84.9337, 0.28", "-177.73, -388.518, 84.8073, 0.83" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_23", "dend_10", "dend_9", "dend_0", "apic_12", "apic_1", "dend_27", "dend_24", "dend_18", "dend_11", "dend_6", "dend_1", "apic_14", "apic_13", "apic_5", "apic_2", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "apic_11", "apic_6", "apic_4", "apic_3", "dend_22", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_4", "dend_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_23", "dend_10", "dend_9", "dend_0", "apic_12", "apic_1", "dend_27", "dend_24", "dend_18", "dend_11", "dend_6", "dend_1", "apic_14", "apic_13", "apic_5", "apic_2", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "apic_11", "apic_6", "apic_4", "apic_3", "dend_22", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_4", "dend_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_23", "dend_10", "dend_9", "dend_0", "axon_0", "apic_12", "apic_1", "dend_27", "dend_24", "dend_18", "dend_11", "dend_6", "dend_1", "axon_1", "apic_14", "apic_13", "apic_5", "apic_2", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "apic_11", "apic_6", "apic_4", "apic_3", "dend_22", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_4", "dend_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_12", "apic_12", "apic_12", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_11", "apic_11", "apic_11", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_10", "apic_10", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_LBC_d5fa8128ae_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_12, id: apic_12, parent: apic_0
create apic_12
public apic_12
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_11, id: apic_11, parent: apic_5
create apic_11
public apic_11
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, axon_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, axon_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_12, apic_12, apic_12, apic_1, apic_1, apic_1, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999990524732351)
    connect dend_23(0), soma_0(0.4999990524732351)
    connect dend_10(0), soma_0(0.4999990524732351)
    connect dend_9(0), soma_0(0.4999990524732351)
    connect dend_0(0), soma_0(0.4999990524732351)
    connect axon_0(0), soma_0(1.0)
    connect apic_12(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_11(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.56398, 12.1856, -3.45915, 3.25378 ) }
    soma_0 { pt3dadd( -2.26706, 10.9606, -3.11058, 4.92468 ) }
    soma_0 { pt3dadd( -1.97014, 9.73565, -2.76202, 6.49677 ) }
    soma_0 { pt3dadd( -1.67322, 8.51066, -2.41345, 7.93038 ) }
    soma_0 { pt3dadd( -1.3763, 7.28567, -2.06488, 8.78195 ) }
    soma_0 { pt3dadd( -1.07938, 6.06068, -1.71632, 9.51699 ) }
    soma_0 { pt3dadd( -0.782463, 4.83569, -1.36775, 10.3263 ) }
    soma_0 { pt3dadd( -0.485543, 3.6107, -1.01918, 11.1493 ) }
    soma_0 { pt3dadd( -0.188623, 2.38571, -0.670618, 11.9011 ) }
    soma_0 { pt3dadd( 0.108296, 1.16072, -0.322051, 12.0825 ) }
    soma_0 { pt3dadd( 0.405216, -0.0642733, 0.026515, 12.1848 ) }
    soma_0 { pt3dadd( 0.702136, -1.28926, 0.375081, 12.2225 ) }
    soma_0 { pt3dadd( 0.999056, -2.51425, 0.723648, 11.698 ) }
    soma_0 { pt3dadd( 1.29598, -3.73924, 1.07221, 11.5084 ) }
    soma_0 { pt3dadd( 1.5929, -4.96423, 1.42078, 11.8466 ) }
    soma_0 { pt3dadd( 1.88982, -6.18922, 1.76935, 11.6542 ) }
    soma_0 { pt3dadd( 2.18674, -7.41421, 2.11791, 11.2017 ) }
    soma_0 { pt3dadd( 2.48366, -8.6392, 2.46648, 10.0847 ) }
    soma_0 { pt3dadd( 2.78057, -9.86419, 2.81505, 8.25314 ) }
    soma_0 { pt3dadd( 3.07749, -11.0892, 3.16361, 6.3237 ) }
    soma_0 { pt3dadd( 3.37441, -12.3142, 3.51218, 3.70524 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 2.77471, -10.5365, 13.4707, 3.61 ) }
    apic_0 { pt3dadd( 2.60142, -12.1509, 13.2782, 3.61 ) }
    apic_0 { pt3dadd( 2.10008, -16.8219, 12.721, 3.06 ) }
    apic_0 { pt3dadd( 1.68537, -20.6856, 12.2601, 3.06 ) }
    apic_0 { pt3dadd( 1.27387, -24.5195, 11.8028, 2.78 ) }
    apic_0 { pt3dadd( 0.89232, -28.0743, 11.3788, 2.78 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -4.14529, 11.3325, -7.22925, 2.5 ) }
    dend_23 { pt3dadd( -4.92242, 12.3053, -6.42804, 2.5 ) }
    dend_23 { pt3dadd( -8.81594, 16.2678, -3.16175, 1.39 ) }
    dend_23 { pt3dadd( -10.1, 17.5746, -2.08456, 1.11 ) }
    dend_23 { pt3dadd( -11.7173, 19.2205, -0.727854, 0.83 ) }
    dend_23 { pt3dadd( -12.352, 19.8666, -0.195327, 0.83 ) }
    dend_23 { pt3dadd( -13.6099, 21.1467, 0.859876, 1.39 ) }
    dend_23 { pt3dadd( -14.7572, 22.1143, 1.61526, 1.39 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 35/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.59471, -1.67298, -11.6093, 3.33 ) }
    dend_10 { pt3dadd( 6.8211, -1.71439, -11.5743, 3.33 ) }
    dend_10 { pt3dadd( 8.24855, -1.9755, -11.3541, 2.5 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.40529, -1.40698, -18.0493, 1.11 ) }
    dend_9 { pt3dadd( -3.18045, -2.56412, -17.5515, 1.11 ) }
    dend_9 { pt3dadd( -5.6985, -4.04838, -17.2782, 1.11 ) }
    dend_9 { pt3dadd( -7.14717, -4.97587, -17.1438, 1.11 ) }
    dend_9 { pt3dadd( -9.2263, -6.59766, -16.8932, 0.83 ) }
    dend_9 { pt3dadd( -11.0961, -8.16284, -16.9841, 0.83 ) }
    dend_9 { pt3dadd( -13.457, -10.205, -17.3667, 1.11 ) }
    dend_9 { pt3dadd( -15.6289, -12.2097, -18.1585, 0.83 ) }
    dend_9 { pt3dadd( -17.6239, -14.0296, -19.1562, 0.83 ) }
    dend_9 { pt3dadd( -20.6742, -16.4775, -20.8063, 0.83 ) }
    dend_9 { pt3dadd( -25.3286, -19.7977, -23.4018, 1.11 ) }
    dend_9 { pt3dadd( -26.7058, -20.7256, -24.2108, 0.56 ) }
    dend_9 { pt3dadd( -28.4994, -21.8685, -25.2335, 1.11 ) }
    dend_9 { pt3dadd( -30.5512, -23.0108, -26.3294, 0.56 ) }
    dend_9 { pt3dadd( -33.0164, -23.99, -27.5694, 0.56 ) }
    dend_9 { pt3dadd( -34.27, -24.3109, -28.0616, 0.56 ) }
    dend_9 { pt3dadd( -36.5536, -24.7525, -28.4692, 1.11 ) }
    dend_9 { pt3dadd( -38.4006, -24.9686, -28.7807, 0.28 ) }
    dend_9 { pt3dadd( -39.3294, -25.0394, -28.9251, 0.28 ) }
    dend_9 { pt3dadd( -41.5474, -25.1571, -29.426, 1.11 ) }
    dend_9 { pt3dadd( -43.1479, -25.2486, -29.9021, 0.28 ) }
    dend_9 { pt3dadd( -44.805, -25.3235, -30.4371, 0.83 ) }
    dend_9 { pt3dadd( -47.8023, -25.371, -31.5131, 0.56 ) }
    dend_9 { pt3dadd( -49.9427, -25.3863, -32.3742, 0.56 ) }
    dend_9 { pt3dadd( -52.3643, -25.4483, -33.4735, 0.83 ) }
    dend_9 { pt3dadd( -53.9454, -25.5189, -34.3221, 0.28 ) }
    dend_9 { pt3dadd( -55.7053, -25.5858, -35.4004, 0.56 ) }
    dend_9 { pt3dadd( -57.0608, -25.6292, -36.4772, 0.28 ) }
    dend_9 { pt3dadd( -58.03, -25.656, -37.3694, 1.39 ) }
    dend_9 { pt3dadd( -58.376, -25.6515, -37.744, 1.39 ) }
    dend_9 { pt3dadd( -59.5653, -25.6083, -39.1239, 0.28 ) }
    dend_9 { pt3dadd( -60.4148, -25.6056, -40.1614, 1.39 ) }
    dend_9 { pt3dadd( -63.333, -25.8114, -43.953, 0.28 ) }
    dend_9 { pt3dadd( -63.9267, -25.9301, -44.6694, 0.28 ) }
    dend_9 { pt3dadd( -65.1502, -26.3027, -46.0338, 0.28 ) }
    dend_9 { pt3dadd( -65.3147, -26.3641, -46.1875, 0.56 ) }
    dend_9 { pt3dadd( -67.275, -27.208, -47.6343, 0.28 ) }
    dend_9 { pt3dadd( -68.4865, -27.8189, -48.3523, 1.67 ) }
    dend_9 { pt3dadd( -70.3974, -28.8815, -49.2122, 0.28 ) }
    dend_9 { pt3dadd( -71.409, -29.4635, -49.6369, 0.56 ) }
    dend_9 { pt3dadd( -74.0534, -31.0523, -50.6757, 0.28 ) }
    dend_9 { pt3dadd( -75.1767, -31.7384, -51.1585, 0.83 ) }
    dend_9 { pt3dadd( -77.6365, -33.2762, -52.2453, 0.28 ) }
    dend_9 { pt3dadd( -78.3618, -33.7647, -52.6097, 0.83 ) }
    dend_9 { pt3dadd( -79.4511, -34.5394, -53.2959, 0.28 ) }
    dend_9 { pt3dadd( -80.1867, -35.0413, -53.8196, 0.56 ) }
    dend_9 { pt3dadd( -82.5301, -36.6077, -55.6054, 0.28 ) }
    dend_9 { pt3dadd( -83.1468, -36.952, -56.0372, 1.67 ) }
    dend_9 { pt3dadd( -85.9313, -38.28, -57.7664, 0.28 ) }
    dend_9 { pt3dadd( -87.9911, -39.1653, -58.8859, 0.83 ) }
    dend_9 { pt3dadd( -91.1952, -40.3967, -60.3891, 0.28 ) }
    dend_9 { pt3dadd( -92.018, -40.6632, -60.7164, 0.83 ) }
    dend_9 { pt3dadd( -95.3842, -41.5889, -61.7559, 0.28 ) }
    dend_9 { pt3dadd( -96.7044, -41.9013, -62.1229, 0.83 ) }
    dend_9 { pt3dadd( -98.4144, -42.2113, -62.4783, 0.28 ) }
    dend_9 { pt3dadd( -98.7378, -42.2677, -62.5165, 0.56 ) }
    dend_9 { pt3dadd( -102.047, -42.8825, -62.7035, 0.28 ) }
    dend_9 { pt3dadd( -103.413, -43.1503, -62.796, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 96/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.73529, -9.68148, 1.49075, 3.06 ) }
    dend_0 { pt3dadd( -2.53102, -10.5825, 1.62058, 2.78 ) }
    dend_0 { pt3dadd( -4.50212, -12.8144, 1.94219, 2.78 ) }
    dend_0 { pt3dadd( -6.26782, -14.8137, 2.23029, 2.78 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 0/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.37441, -12.3142, 3.51218, 0.83 ) }
    axon_0 { pt3dadd( 6.90787, -26.8921, 3.51218, 0.83 ) }
    axon_0 { pt3dadd( 10.4413, -41.47, 3.51218, 0.83 ) }
    // Section: apic_12, id: apic_12, parent: apic_0 (entry count 3/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 0.89232, -28.0743, 11.3788, 0.83 ) }
    apic_12 { pt3dadd( -1.46201, -32.3412, 4.92978, 0.83 ) }
    apic_12 { pt3dadd( -2.36857, -33.9842, 2.44652, 1.11 ) }
    apic_12 { pt3dadd( -3.6042, -36.2236, -0.938149, 1.39 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 7/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 0.89232, -28.0743, 11.3788, 1.67 ) }
    apic_1 { pt3dadd( 0.814962, -30.6854, 14.1463, 1.67 ) }
    apic_1 { pt3dadd( 0.744471, -33.0647, 16.6681, 1.67 ) }
    apic_1 { pt3dadd( 0.677936, -35.3105, 19.0484, 1.39 ) }
    apic_1 { pt3dadd( 0.617238, -37.3592, 21.22, 1.39 ) }
    apic_1 { pt3dadd( 0.588206, -38.3392, 22.2586, 1.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -14.7572, 22.1143, 1.61526, 0.56 ) }
    dend_27 { pt3dadd( -18.6598, 20.0311, 4.02815, 0.56 ) }
    dend_27 { pt3dadd( -21.2564, 18.9439, 5.82629, 0.56 ) }
    dend_27 { pt3dadd( -23.9732, 18.1466, 7.7891, 0.56 ) }
    dend_27 { pt3dadd( -27.1589, 17.4629, 10.0992, 0.56 ) }
    dend_27 { pt3dadd( -29.0999, 17.0476, 11.5134, 0.56 ) }
    dend_27 { pt3dadd( -33.5737, 15.932, 14.4996, 0.56 ) }
    dend_27 { pt3dadd( -36.731, 15.4421, 16.5774, 0.83 ) }
    dend_27 { pt3dadd( -39.7443, 15.1598, 18.6551, 0.83 ) }
    dend_27 { pt3dadd( -41.671, 15.0255, 19.9228, 0.83 ) }
    dend_27 { pt3dadd( -45.4887, 14.5657, 22.3953, 0.83 ) }
    dend_27 { pt3dadd( -49.6503, 13.9108, 25.0478, 0.83 ) }
    dend_27 { pt3dadd( -56.0411, 12.4499, 29.063, 0.83 ) }
    dend_27 { pt3dadd( -60.7483, 11.0909, 32.0243, 0.83 ) }
    dend_27 { pt3dadd( -64.3978, 9.89071, 34.3487, 0.56 ) }
    dend_27 { pt3dadd( -69.5693, 7.9685, 37.4932, 0.56 ) }
    dend_27 { pt3dadd( -71.2528, 7.31465, 38.5329, 0.56 ) }
    dend_27 { pt3dadd( -73.9535, 6.22664, 40.3294, 0.56 ) }
    dend_27 { pt3dadd( -75.2245, 5.62923, 41.1963, 0.56 ) }
    dend_27 { pt3dadd( -77.511, 4.51813, 42.7869, 0.83 ) }
    dend_27 { pt3dadd( -81.7973, 2.64585, 45.8942, 0.56 ) }
    dend_27 { pt3dadd( -84.4882, 1.66547, 47.777, 0.56 ) }
    dend_27 { pt3dadd( -88.8458, -0.0172295, 51.0626, 0.56 ) }
    dend_27 { pt3dadd( -93.1438, -1.53256, 54.4934, 0.56 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 37/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -14.7572, 22.1143, 1.61526, 0.56 ) }
    dend_24 { pt3dadd( -17.6788, 21.5176, 2.34952, 0.56 ) }
    dend_24 { pt3dadd( -19.4128, 21.4249, 2.64629, 0.56 ) }
    dend_24 { pt3dadd( -24.1349, 21.1725, 3.45448, 0.83 ) }
    dend_24 { pt3dadd( -27.7082, 20.9815, 4.06606, 0.83 ) }
    dend_24 { pt3dadd( -30.1362, 20.8517, 4.4816, 0.83 ) }
    dend_24 { pt3dadd( -32.4726, 20.7268, 4.88147, 0.83 ) }
    dend_24 { pt3dadd( -36.3997, 20.9544, 5.40036, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.24855, -1.9755, -11.3541, 0.83 ) }
    dend_18 { pt3dadd( 11.5483, -1.83203, -13.5264, 0.83 ) }
    dend_18 { pt3dadd( 15.0718, -1.13563, -15.765, 0.83 ) }
    dend_18 { pt3dadd( 18.3095, 0.021314, -17.7026, 0.83 ) }
    dend_18 { pt3dadd( 21.3274, 1.45627, -19.3735, 0.83 ) }
    dend_18 { pt3dadd( 24.7797, 3.34058, -21.1403, 0.83 ) }
    dend_18 { pt3dadd( 30.2593, 6.43253, -23.7261, 0.56 ) }
    dend_18 { pt3dadd( 33.824, 8.84693, -25.2412, 0.83 ) }
    dend_18 { pt3dadd( 37.0269, 11.5659, -26.543, 0.83 ) }
    dend_18 { pt3dadd( 38.3223, 12.8883, -26.9425, 0.56 ) }
    dend_18 { pt3dadd( 39.2985, 14.0277, -27.0895, 0.56 ) }
    dend_18 { pt3dadd( 40.3053, 15.6773, -27.0544, 0.56 ) }
    dend_18 { pt3dadd( 41.1591, 18.3451, -26.1839, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.24855, -1.9755, -11.3541, 1.94 ) }
    dend_11 { pt3dadd( 11.0587, -3.83902, -13.1971, 1.94 ) }
    dend_11 { pt3dadd( 15.352, -6.68595, -16.0126, 1.94 ) }
    dend_11 { pt3dadd( 17.7913, -8.30351, -17.6124, 1.94 ) }
    dend_11 { pt3dadd( 20.5592, -10.139, -19.4276, 1.94 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 63/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.26782, -14.8137, 2.23029, 1.11 ) }
    dend_6 { pt3dadd( -4.94207, -16.9417, 5.35977, 1.11 ) }
    dend_6 { pt3dadd( -3.936, -18.1204, 7.30902, 1.11 ) }
    dend_6 { pt3dadd( -0.860588, -20.8922, 12.5473, 1.11 ) }
    dend_6 { pt3dadd( 0.48802, -22.0015, 14.7737, 1.11 ) }
    dend_6 { pt3dadd( 1.85193, -23.1235, 17.0254, 0.83 ) }
    dend_6 { pt3dadd( 3.16788, -24.2059, 19.1979, 0.83 ) }
    dend_6 { pt3dadd( 5.59346, -25.7895, 22.752, 0.83 ) }
    dend_6 { pt3dadd( 7.90444, -27.0986, 25.8607, 0.83 ) }
    dend_6 { pt3dadd( 9.90784, -27.9679, 28.2281, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.26782, -14.8137, 2.23029, 1.39 ) }
    dend_1 { pt3dadd( -9.73444, -14.4105, 4.1259, 1.39 ) }
    dend_1 { pt3dadd( -11.6279, -14.1903, 5.16127, 1.39 ) }
    dend_1 { pt3dadd( -12.5526, -14.0828, 5.6669, 1.39 ) }
    dend_1 { pt3dadd( -14.5295, -13.8528, 6.74791, 1.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 78/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4413, -41.47, 3.51218, 0.56 ) }
    axon_1 { pt3dadd( 13.9748, -56.0478, 3.51218, 0.56 ) }
    axon_1 { pt3dadd( 17.5083, -70.6257, 3.51218, 0.56 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 81/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -3.6042, -36.2236, -0.938149, 0.83 ) }
    apic_14 { pt3dadd( -1.56184, -37.8725, -2.01804, 0.83 ) }
    apic_14 { pt3dadd( 0.462277, -39.8286, -3.27528, 0.83 ) }
    apic_14 { pt3dadd( 1.88102, -41.5236, -4.3701, 0.83 ) }
    apic_14 { pt3dadd( 5.01134, -45.6034, -7.05943, 0.83 ) }
    apic_14 { pt3dadd( 9.97114, -52.5133, -11.3624, 0.56 ) }
    apic_14 { pt3dadd( 11.1283, -54.3881, -12.4251, 0.56 ) }
    apic_14 { pt3dadd( 12.2641, -56.6697, -13.7606, 1.11 ) }
    apic_14 { pt3dadd( 13.5662, -59.3877, -15.3004, 0.56 ) }
    apic_14 { pt3dadd( 14.8542, -61.6076, -16.5508, 0.56 ) }
    apic_14 { pt3dadd( 16.299, -63.7219, -17.5656, 0.56 ) }
    apic_14 { pt3dadd( 18.5086, -66.7324, -18.6311, 0.83 ) }
    apic_14 { pt3dadd( 21.2079, -69.5541, -19.6158, 0.56 ) }
    apic_14 { pt3dadd( 24.4478, -72.4039, -20.6219, 0.56 ) }
    apic_14 { pt3dadd( 28.5729, -75.8089, -21.8255, 1.11 ) }
    apic_14 { pt3dadd( 30.3969, -77.3204, -22.5009, 0.56 ) }
    apic_14 { pt3dadd( 32.7076, -79.1824, -23.6879, 0.56 ) }
    apic_14 { pt3dadd( 34.8543, -80.9702, -25.0826, 0.56 ) }
    apic_14 { pt3dadd( 36.3211, -82.5154, -26.3399, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_14 { pt3dadd( 37.3423, -83.9157, -27.6106, 0.83 ) }
    apic_14 { pt3dadd( 39.2539, -87.2095, -30.6436, 0.28 ) }
    apic_14 { pt3dadd( 40.6349, -90.0668, -33.044, 1.39 ) }
    apic_14 { pt3dadd( 42.1358, -93.9002, -35.9868, 0.28 ) }
    apic_14 { pt3dadd( 42.8527, -95.77, -37.3421, 0.56 ) }
    apic_14 { pt3dadd( 44.0881, -98.9665, -39.2966, 0.28 ) }
    apic_14 { pt3dadd( 44.8287, -100.754, -40.1749, 2.22 ) }
    apic_14 { pt3dadd( 46.8676, -105.757, -41.7431, 0.28 ) }
    apic_14 { pt3dadd( 47.8339, -107.928, -42.1622, 0.56 ) }
    apic_14 { pt3dadd( 49.2243, -110.516, -42.4624, 0.56 ) }
    apic_14 { pt3dadd( 50.5167, -112.541, -42.5885, 0.28 ) }
    apic_14 { pt3dadd( 51.6517, -114.113, -42.6508, 0.83 ) }
    apic_14 { pt3dadd( 53.6072, -116.677, -42.8514, 0.28 ) }
    apic_14 { pt3dadd( 55.0611, -118.578, -43.0559, 0.83 ) }
    apic_14 { pt3dadd( 57.3775, -121.968, -43.3097, 0.28 ) }
    apic_14 { pt3dadd( 58.2026, -123.385, -43.4282, 1.39 ) }
    apic_14 { pt3dadd( 60.3651, -127.126, -43.4206, 0.28 ) }
    apic_14 { pt3dadd( 61.5352, -129.223, -43.2644, 0.28 ) }
    apic_14 { pt3dadd( 62.5568, -130.908, -43.0845, 1.94 ) }
    apic_14 { pt3dadd( 64.6226, -134.114, -42.5929, 0.28 ) }
    apic_14 { pt3dadd( 65.4048, -135.207, -42.4216, 1.11 ) }
    apic_14 { pt3dadd( 70.5384, -141.541, -41.738, 0.28 ) }
    apic_14 { pt3dadd( 71.3226, -142.463, -41.6632, 0.83 ) }
    apic_14 { pt3dadd( 74.9117, -146.553, -41.5416, 0.28 ) }
    apic_14 { pt3dadd( 75.3915, -147.124, -41.5678, 0.83 ) }
    apic_14 { pt3dadd( 79.2018, -151.838, -42.1024, 0.28 ) }
    apic_14 { pt3dadd( 81.053, -154.37, -42.5233, 0.56 ) }
    apic_14 { pt3dadd( 83.3142, -158.041, -43.3404, 0.28 ) }
    apic_14 { pt3dadd( 84.0807, -159.535, -43.6408, 1.39 ) }
    apic_14 { pt3dadd( 86.3069, -164.515, -44.5248, 0.28 ) }
    apic_14 { pt3dadd( 86.7608, -165.604, -44.7009, 0.83 ) }
    apic_14 { pt3dadd( 89.1381, -170.784, -45.9264, 0.28 ) }
    apic_14 { pt3dadd( 90.0594, -172.587, -46.4542, 1.11 ) }
    apic_14 { pt3dadd( 92.3772, -176.361, -47.9788, 0.28 ) }
    apic_14 { pt3dadd( 93.8181, -178.472, -48.9713, 0.28 ) }
    apic_14 { pt3dadd( 94.6926, -179.659, -49.5907, 1.11 ) }
    apic_14 { pt3dadd( 100.334, -186.988, -53.8807, 0.28 ) }
    apic_14 { pt3dadd( 100.896, -187.701, -54.3374, 1.94 ) }
    apic_14 { pt3dadd( 104.583, -192.432, -57.0813, 0.28 ) }
    apic_14 { pt3dadd( 104.774, -192.683, -57.2072, 0.56 ) }
    apic_14 { pt3dadd( 106.842, -195.72, -58.5533, 0.28 ) }
    apic_14 { pt3dadd( 108.14, -197.84, -59.3819, 1.11 ) }
    apic_14 { pt3dadd( 110.127, -202.166, -60.6244, 0.28 ) }
    apic_14 { pt3dadd( 112.622, -208.499, -62.389, 0.28 ) }
    apic_14 { pt3dadd( 113.334, -210.83, -63.0038, 1.39 ) }
    apic_14 { pt3dadd( 114.289, -214.827, -64.0259, 0.28 ) }
    apic_14 { pt3dadd( 114.545, -216.408, -64.4523, 0.83 ) }
    apic_14 { pt3dadd( 114.811, -221.437, -65.611, 0.28 ) }
    apic_14 { pt3dadd( 114.747, -222.147, -65.8067, 0.56 ) }
    apic_14 { pt3dadd( 114.21, -224.365, -66.5988, 0.28 ) }
    apic_14 { pt3dadd( 113.827, -225.628, -67.0669, 0.83 ) }
    apic_14 { pt3dadd( 112.881, -228.482, -68.042, 0.28 ) }
    apic_14 { pt3dadd( 111.63, -232.417, -69.4618, 1.11 ) }
    apic_14 { pt3dadd( 110.359, -236.713, -71.101, 0.28 ) }
    apic_14 { pt3dadd( 110.194, -237.383, -71.3841, 0.56 ) }
    apic_14 { pt3dadd( 109.9, -238.734, -71.9332, 0.28 ) }
    apic_14 { pt3dadd( 109.824, -239.319, -72.2648, 0.56 ) }
    apic_14 { pt3dadd( 109.697, -240.694, -73.212, 0.28 ) }
    apic_14 { pt3dadd( 109.66, -241.27, -73.6934, 0.56 ) }
    apic_14 { pt3dadd( 109.456, -243.782, -75.7102, 0.28 ) }
    apic_14 { pt3dadd( 109.506, -245.967, -77.5894, 1.11 ) }
    apic_14 { pt3dadd( 110.032, -250.914, -82.1822, 0.28 ) }
    apic_14 { pt3dadd( 110.17, -251.687, -82.9087, 0.56 ) }
    apic_14 { pt3dadd( 111.134, -255.751, -86.7149, 0.28 ) }
    apic_14 { pt3dadd( 111.62, -257.466, -88.2912, 1.39 ) }
    apic_14 { pt3dadd( 113.021, -261.96, -92.0972, 0.28 ) }
    apic_14 { pt3dadd( 113.984, -264.347, -94.049, 1.39 ) }
    apic_14 { pt3dadd( 114.89, -266.337, -95.414, 0.28 ) }
    apic_14 { pt3dadd( 115.153, -266.832, -95.7522, 0.83 ) }
    apic_14 { pt3dadd( 116.617, -269.029, -97.245, 0.28 ) }
    apic_14 { pt3dadd( 118.123, -271.278, -98.7296, 0.83 ) }
    apic_14 { pt3dadd( 119.448, -273.943, -99.7101, 0.28 ) }
    apic_14 { pt3dadd( 119.955, -275.007, -99.9302, 0.56 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 73/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -3.6042, -36.2236, -0.938149, 0.56 ) }
    apic_13 { pt3dadd( -3.54754, -37.9749, -2.97996, 0.56 ) }
    apic_13 { pt3dadd( -3.54578, -38.5051, -3.59636, 0.28 ) }
    apic_13 { pt3dadd( -3.58781, -39.5319, -4.79733, 0.83 ) }
    apic_13 { pt3dadd( -3.8077, -41.1934, -6.6308, 0.56 ) }
    apic_13 { pt3dadd( -4.21144, -43.0059, -8.61814, 1.11 ) }
    apic_13 { pt3dadd( -5.71601, -49.1408, -15.3379, 0.83 ) }
    apic_13 { pt3dadd( -6.43619, -51.7339, -18.318, 0.28 ) }
    apic_13 { pt3dadd( -6.60068, -52.2822, -19.0442, 0.28 ) }
    apic_13 { pt3dadd( -7.08947, -53.9255, -21.5241, 0.83 ) }
    apic_13 { pt3dadd( -7.35077, -55.0819, -23.6634, 0.56 ) }
    apic_13 { pt3dadd( -7.53327, -55.9497, -25.3924, 0.56 ) }
    apic_13 { pt3dadd( -7.69192, -56.7324, -26.9836, 1.39 ) }
    apic_13 { pt3dadd( -8.40945, -60.0244, -34.0459, 0.28 ) }
    apic_13 { pt3dadd( -8.61883, -60.9488, -35.9918, 1.39 ) }
    apic_13 { pt3dadd( -9.21156, -63.3135, -40.8862, 0.56 ) }
    apic_13 { pt3dadd( -9.60872, -64.5808, -43.3877, 0.56 ) }
    apic_13 { pt3dadd( -10.307, -66.2985, -46.612, 1.39 ) }
    apic_13 { pt3dadd( -11.2941, -68.377, -50.2197, 0.28 ) }
    apic_13 { pt3dadd( -11.5874, -68.9019, -50.9137, 0.83 ) }
    apic_13 { pt3dadd( -12.7236, -70.9855, -53.1582, 0.28 ) }
    apic_13 { pt3dadd( -12.864, -71.276, -53.3904, 0.56 ) }
    apic_13 { pt3dadd( -13.8859, -73.8471, -55.0864, 0.28 ) }
    apic_13 { pt3dadd( -14.2204, -74.9201, -55.6985, 1.39 ) }
    apic_13 { pt3dadd( -15.448, -79.7378, -58.0262, 0.28 ) }
    apic_13 { pt3dadd( -15.6215, -80.7873, -58.5969, 1.39 ) }
    apic_13 { pt3dadd( -15.8594, -83.464, -60.128, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_13 { pt3dadd( -15.8982, -84.4464, -60.785, 0.83 ) }
    apic_13 { pt3dadd( -15.8918, -87.3312, -62.9005, 0.28 ) }
    apic_13 { pt3dadd( -15.7853, -89.4196, -64.6024, 1.11 ) }
    apic_13 { pt3dadd( -15.3201, -94.5512, -69.2345, 0.28 ) }
    apic_13 { pt3dadd( -15.292, -94.851, -69.4927, 0.56 ) }
    apic_13 { pt3dadd( -14.8299, -100.431, -74.0458, 0.28 ) }
    apic_13 { pt3dadd( -14.8103, -100.943, -74.4006, 0.28 ) }
    apic_13 { pt3dadd( -14.8372, -103.778, -75.9943, 0.28 ) }
    apic_13 { pt3dadd( -14.9083, -105.257, -76.704, 0.56 ) }
    apic_13 { pt3dadd( -15.2084, -108.036, -77.5691, 0.28 ) }
    apic_13 { pt3dadd( -15.3471, -109.235, -77.9207, 1.39 ) }
    apic_13 { pt3dadd( -15.7397, -112.681, -78.7331, 0.28 ) }
    apic_13 { pt3dadd( -15.8252, -113.441, -78.9709, 0.83 ) }
    apic_13 { pt3dadd( -16.2018, -116.064, -80.1616, 0.28 ) }
    apic_13 { pt3dadd( -16.2602, -116.531, -80.4803, 0.83 ) }
    apic_13 { pt3dadd( -16.4928, -118.799, -82.465, 0.28 ) }
    apic_13 { pt3dadd( -16.5238, -119.204, -82.8689, 0.56 ) }
    apic_13 { pt3dadd( -16.6868, -121.284, -85.0033, 0.28 ) }
    apic_13 { pt3dadd( -16.8719, -123.529, -87.162, 0.56 ) }
    apic_13 { pt3dadd( -17.2429, -126.946, -90.2168, 0.28 ) }
    apic_13 { pt3dadd( -17.3324, -127.758, -90.848, 0.56 ) }
    apic_13 { pt3dadd( -17.5514, -130.083, -92.3062, 0.28 ) }
    apic_13 { pt3dadd( -17.5519, -132.92, -93.9329, 1.11 ) }
    apic_13 { pt3dadd( -17.3491, -134.633, -94.7024, 0.28 ) }
    apic_13 { pt3dadd( -17.1022, -135.347, -94.9467, 0.56 ) }
    apic_13 { pt3dadd( -16.4466, -136.557, -95.3093, 0.28 ) }
    apic_13 { pt3dadd( -16.0565, -137.234, -95.4683, 0.56 ) }
    apic_13 { pt3dadd( -13.7457, -141.21, -96.2677, 0.28 ) }
    apic_13 { pt3dadd( -13.3756, -141.901, -96.4479, 0.56 ) }
    apic_13 { pt3dadd( -11.4169, -145.903, -97.4411, 0.28 ) }
    apic_13 { pt3dadd( -11.0296, -146.815, -97.6281, 0.56 ) }
    apic_13 { pt3dadd( -9.22748, -152.108, -98.3526, 0.28 ) }
    apic_13 { pt3dadd( -8.97312, -153.233, -98.5044, 1.11 ) }
    apic_13 { pt3dadd( -8.60344, -156.421, -98.7128, 0.28 ) }
    apic_13 { pt3dadd( -8.5281, -157.578, -98.8104, 0.83 ) }
    apic_13 { pt3dadd( -8.50086, -160.607, -99.1689, 0.28 ) }
    apic_13 { pt3dadd( -8.52895, -162.608, -99.4128, 1.11 ) }
    apic_13 { pt3dadd( -8.72381, -168.016, -100.112, 0.28 ) }
    apic_13 { pt3dadd( -8.84754, -171.126, -100.407, 1.11 ) }
    apic_13 { pt3dadd( -8.98405, -173.784, -100.568, 0.28 ) }
    apic_13 { pt3dadd( -9.05783, -174.842, -100.623, 0.56 ) }
    apic_13 { pt3dadd( -9.37595, -179.118, -100.839, 0.28 ) }
    apic_13 { pt3dadd( -9.50088, -180.54, -100.849, 1.11 ) }
    apic_13 { pt3dadd( -9.8805, -183.637, -100.628, 0.28 ) }
    apic_13 { pt3dadd( -10.069, -184.635, -100.53, 0.56 ) }
    apic_13 { pt3dadd( -11.1776, -189.105, -99.8077, 0.28 ) }
    apic_13 { pt3dadd( -11.4786, -190.217, -99.5928, 0.56 ) }
    apic_13 { pt3dadd( -12.2006, -192.485, -99.0904, 0.28 ) }
    apic_13 { pt3dadd( -12.5124, -193.429, -98.8493, 0.56 ) }
    apic_13 { pt3dadd( -13.6244, -196.457, -97.9793, 0.28 ) }
    apic_13 { pt3dadd( -13.8997, -197.127, -97.755, 1.11 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 51/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 0.588206, -38.3392, 22.2586, 1.11 ) }
    apic_5 { pt3dadd( -4.41409, -40.4565, 22.9951, 1.11 ) }
    apic_5 { pt3dadd( -7.90973, -42.8621, 24.2716, 1.11 ) }
    apic_5 { pt3dadd( -11.1335, -46.2628, 26.1141, 1.11 ) }
    apic_5 { pt3dadd( -12.8803, -48.9921, 27.504, 1.11 ) }
    apic_5 { pt3dadd( -13.9875, -51.2236, 28.4951, 1.11 ) }
    apic_5 { pt3dadd( -15.8606, -55.7715, 29.9859, 1.11 ) }
    apic_5 { pt3dadd( -17.1588, -61.223, 30.9886, 1.11 ) }
    apic_5 { pt3dadd( -17.4117, -63.6314, 31.3133, 0.83 ) }
    apic_5 { pt3dadd( -17.4663, -65.9203, 31.6993, 1.11 ) }
    apic_5 { pt3dadd( -17.4856, -67.8011, 32.0259, 1.11 ) }
    apic_5 { pt3dadd( -17.7054, -71.3912, 32.6463, 0.83 ) }
    apic_5 { pt3dadd( -18.0807, -73.556, 32.9893, 0.83 ) }
    apic_5 { pt3dadd( -18.6835, -75.519, 33.0682, 1.11 ) }
    apic_5 { pt3dadd( -19.4499, -77.5764, 33.1892, 0.83 ) }
    apic_5 { pt3dadd( -19.852, -78.6737, 33.2387, 1.11 ) }
    apic_5 { pt3dadd( -21.233, -82.2246, 33.4453, 1.11 ) }
    apic_5 { pt3dadd( -22.0457, -83.7554, 33.6666, 1.11 ) }
    apic_5 { pt3dadd( -24.5319, -87.2847, 34.1692, 0.83 ) }
    apic_5 { pt3dadd( -25.9043, -88.8879, 34.4274, 0.83 ) }
    apic_5 { pt3dadd( -27.423, -90.5211, 34.6411, 0.83 ) }
    apic_5 { pt3dadd( -29.4894, -92.5421, 34.8592, 0.83 ) }
    apic_5 { pt3dadd( -33.7455, -96.1603, 35.2524, 0.83 ) }
    apic_5 { pt3dadd( -36.7362, -98.4673, 35.6068, 0.83 ) }
    apic_5 { pt3dadd( -39.3256, -100.368, 36.054, 0.56 ) }
    apic_5 { pt3dadd( -41.6719, -102.145, 36.4447, 0.83 ) }
    apic_5 { pt3dadd( -43.8032, -103.854, 36.7578, 0.56 ) }
    apic_5 { pt3dadd( -45.823, -105.667, 36.9382, 0.83 ) }
    apic_5 { pt3dadd( -47.3022, -107.143, 36.9462, 0.56 ) }
    apic_5 { pt3dadd( -48.3618, -108.136, 36.9631, 0.83 ) }
    apic_5 { pt3dadd( -50.2098, -109.631, 37.073, 0.83 ) }
    apic_5 { pt3dadd( -52.3863, -111.241, 37.2891, 0.56 ) }
    apic_5 { pt3dadd( -52.817, -111.625, 37.3817, 0.56 ) }
    apic_5 { pt3dadd( -54.1769, -113.211, 37.8989, 0.83 ) }
    apic_5 { pt3dadd( -54.6506, -113.892, 38.1762, 0.83 ) }
    apic_5 { pt3dadd( -55.6579, -115.835, 38.7509, 0.56 ) }
    apic_5 { pt3dadd( -56.1381, -117.165, 39.026, 0.83 ) }
    apic_5 { pt3dadd( -56.9224, -120.075, 39.4581, 0.83 ) }
    apic_5 { pt3dadd( -57.6046, -122.357, 39.9252, 0.83 ) }
    apic_5 { pt3dadd( -58.1752, -124.034, 40.3449, 0.83 ) }
    apic_5 { pt3dadd( -59.8343, -128.339, 41.5506, 0.83 ) }
    apic_5 { pt3dadd( -60.2595, -129.378, 41.8541, 0.56 ) }
    apic_5 { pt3dadd( -60.973, -130.924, 42.2998, 0.56 ) }
    apic_5 { pt3dadd( -63.2721, -135.216, 43.305, 0.83 ) }
    apic_5 { pt3dadd( -64.4212, -137.126, 43.6516, 0.56 ) }
    apic_5 { pt3dadd( -65.1068, -138.102, 43.7869, 0.83 ) }
    apic_5 { pt3dadd( -66.5995, -140.049, 44.192, 0.56 ) }
    apic_5 { pt3dadd( -68.8022, -143.208, 44.7003, 0.83 ) }
    apic_5 { pt3dadd( -70.093, -145.376, 44.9008, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_5 { pt3dadd( -71.1006, -147.335, 45.0104, 0.56 ) }
    apic_5 { pt3dadd( -72.2303, -149.873, 45.1989, 1.11 ) }
    apic_5 { pt3dadd( -73.8242, -153.104, 45.1374, 0.56 ) }
    apic_5 { pt3dadd( -74.6729, -154.709, 45.0932, 0.56 ) }
    apic_5 { pt3dadd( -76.1065, -157.487, 45.0007, 0.83 ) }
    apic_5 { pt3dadd( -77.0166, -159.314, 44.9825, 0.56 ) }
    apic_5 { pt3dadd( -78.7199, -162.926, 44.9453, 0.83 ) }
    apic_5 { pt3dadd( -81.6103, -168.856, 44.8991, 0.56 ) }
    apic_5 { pt3dadd( -83.0745, -171.316, 44.8458, 0.56 ) }
    apic_5 { pt3dadd( -83.8177, -172.389, 44.8885, 0.56 ) }
    apic_5 { pt3dadd( -85.7422, -175.075, 45.1324, 0.28 ) }
    apic_5 { pt3dadd( -87.2578, -177.205, 45.4515, 0.56 ) }
    apic_5 { pt3dadd( -88.3452, -178.841, 45.9921, 0.56 ) }
    apic_5 { pt3dadd( -89.4871, -181.104, 46.7107, 0.83 ) }
    apic_5 { pt3dadd( -89.9467, -182.174, 46.8617, 0.28 ) }
    apic_5 { pt3dadd( -90.7087, -184.359, 46.9668, 0.28 ) }
    apic_5 { pt3dadd( -91.2398, -186.021, 46.9299, 0.56 ) }
    apic_5 { pt3dadd( -92.3426, -189.23, 46.7204, 1.67 ) }
    apic_5 { pt3dadd( -93.8309, -193.434, 46.2933, 0.83 ) }
    apic_5 { pt3dadd( -94.4634, -195.038, 46.1171, 0.83 ) }
    apic_5 { pt3dadd( -95.6632, -197.36, 45.9036, 0.56 ) }
    apic_5 { pt3dadd( -96.7147, -198.794, 45.9117, 0.56 ) }
    apic_5 { pt3dadd( -97.54, -199.659, 46.0181, 0.28 ) }
    apic_5 { pt3dadd( -98.4896, -200.527, 46.2405, 0.28 ) }
    apic_5 { pt3dadd( -100.145, -202.064, 47.1902, 0.83 ) }
    apic_5 { pt3dadd( -101.289, -203.269, 48.08, 0.56 ) }
    apic_5 { pt3dadd( -103.529, -205.829, 50.0707, 0.56 ) }
    apic_5 { pt3dadd( -104.269, -206.839, 50.8296, 0.56 ) }
    apic_5 { pt3dadd( -105.216, -208.433, 51.8219, 0.28 ) }
    apic_5 { pt3dadd( -107.101, -212.257, 53.9614, 2.22 ) }
    apic_5 { pt3dadd( -108.519, -215.429, 55.5551, 0.56 ) }
    apic_5 { pt3dadd( -109.753, -218.502, 56.8273, 0.56 ) }
    apic_5 { pt3dadd( -110.318, -219.95, 57.2856, 0.56 ) }
    apic_5 { pt3dadd( -112.145, -223.83, 58.3623, 0.56 ) }
    apic_5 { pt3dadd( -113.78, -226.75, 59.1048, 0.56 ) }
    apic_5 { pt3dadd( -114.846, -228.616, 59.4279, 0.56 ) }
    apic_5 { pt3dadd( -115.557, -229.899, 59.6579, 0.28 ) }
    apic_5 { pt3dadd( -117.024, -232.542, 60.244, 0.56 ) }
    apic_5 { pt3dadd( -118.56, -235.12, 60.9335, 0.56 ) }
    apic_5 { pt3dadd( -120.044, -237.647, 61.7057, 2.5 ) }
    apic_5 { pt3dadd( -121.448, -240.453, 62.4097, 0.56 ) }
    apic_5 { pt3dadd( -122.351, -242.696, 62.9833, 0.56 ) }
    apic_5 { pt3dadd( -123.118, -244.779, 63.5401, 0.28 ) }
    apic_5 { pt3dadd( -123.731, -246.568, 63.9808, 0.56 ) }
    apic_5 { pt3dadd( -124.288, -248.323, 64.2924, 0.28 ) }
    apic_5 { pt3dadd( -124.891, -250.163, 64.4987, 0.56 ) }
    apic_5 { pt3dadd( -125.482, -252.088, 64.7805, 0.28 ) }
    apic_5 { pt3dadd( -125.895, -253.489, 65.0052, 0.28 ) }
    apic_5 { pt3dadd( -126.694, -255.856, 65.4664, 0.56 ) }
    apic_5 { pt3dadd( -127.777, -258.282, 66.0749, 0.28 ) }
    apic_5 { pt3dadd( -128.604, -259.732, 66.5164, 0.83 ) }
    apic_5 { pt3dadd( -130.122, -262.006, 67.2423, 0.56 ) }
    apic_5 { pt3dadd( -131.723, -264.294, 67.9471, 0.56 ) }
    apic_5 { pt3dadd( -132.912, -266.027, 68.5091, 1.11 ) }
    apic_5 { pt3dadd( -134.104, -267.885, 69.1537, 0.28 ) }
    apic_5 { pt3dadd( -134.555, -268.598, 69.3724, 0.28 ) }
    apic_5 { pt3dadd( -135.072, -269.529, 69.5608, 0.83 ) }
    apic_5 { pt3dadd( -135.865, -271.281, 69.8169, 0.83 ) }
    apic_5 { pt3dadd( -136.255, -272.384, 70.0573, 0.28 ) }
    apic_5 { pt3dadd( -137.027, -274.626, 70.6503, 0.56 ) }
    apic_5 { pt3dadd( -137.758, -277.275, 71.5607, 0.83 ) }
    apic_5 { pt3dadd( -138.502, -280.322, 72.5503, 0.56 ) }
    apic_5 { pt3dadd( -138.875, -282.025, 73.171, 0.28 ) }
    apic_5 { pt3dadd( -139.499, -284.597, 74.2092, 1.11 ) }
    apic_5 { pt3dadd( -140.102, -286.694, 75.1287, 0.56 ) }
    apic_5 { pt3dadd( -141.055, -289.477, 76.5032, 0.56 ) }
    apic_5 { pt3dadd( -142.365, -293.262, 78.4633, 0.83 ) }
    apic_5 { pt3dadd( -143.038, -295.421, 79.5262, 0.56 ) }
    apic_5 { pt3dadd( -143.422, -296.801, 80.1215, 0.56 ) }
    apic_5 { pt3dadd( -143.594, -297.566, 80.388, 0.56 ) }
    apic_5 { pt3dadd( -143.967, -299.453, 81.126, 1.11 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 71/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 0.588206, -38.3392, 22.2586, 1.11 ) }
    apic_2 { pt3dadd( 4.86504, -40.2133, 27.0181, 1.11 ) }
    apic_2 { pt3dadd( 6.75112, -41.2634, 29.5075, 1.11 ) }
    apic_2 { pt3dadd( 8.07951, -42.2376, 31.5649, 0.83 ) }
    apic_2 { pt3dadd( 9.86949, -43.5504, 34.3372, 0.83 ) }
    apic_2 { pt3dadd( 11.424, -44.6905, 36.7447, 0.83 ) }
    apic_2 { pt3dadd( 13.6374, -46.3139, 40.1729, 1.11 ) }
    apic_2 { pt3dadd( 14.6648, -47.8031, 42.8171, 0.83 ) }
    apic_2 { pt3dadd( 15.1698, -48.8135, 44.6335, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 80/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -36.3997, 20.9544, 5.40036, 0.56 ) }
    dend_26 { pt3dadd( -40.4259, 24.1913, 11.1992, 0.56 ) }
    dend_26 { pt3dadd( -43.8413, 26.5228, 14.7359, 0.56 ) }
    dend_26 { pt3dadd( -46.2108, 27.8882, 16.7695, 0.56 ) }
    dend_26 { pt3dadd( -48.3283, 28.9273, 18.3782, 0.83 ) }
    dend_26 { pt3dadd( -50.428, 29.7714, 20.0042, 0.83 ) }
    dend_26 { pt3dadd( -53.1459, 30.6377, 22.2569, 0.83 ) }
    dend_26 { pt3dadd( -56.4606, 30.9247, 24.6424, 0.56 ) }
    dend_26 { pt3dadd( -58.4639, 30.747, 26.1958, 0.56 ) }
    dend_26 { pt3dadd( -59.7335, 30.5467, 27.3012, 0.56 ) }
    dend_26 { pt3dadd( -62.716, 29.9599, 30.1677, 0.56 ) }
    dend_26 { pt3dadd( -65.3812, 29.3425, 32.9393, 0.56 ) }
    dend_26 { pt3dadd( -66.867, 29.0236, 34.5302, 0.56 ) }
    dend_26 { pt3dadd( -69.6512, 28.4704, 37.3011, 0.56 ) }
    dend_26 { pt3dadd( -72.388, 28.1513, 39.6964, 0.56 ) }
    dend_26 { pt3dadd( -74.4864, 28.021, 41.1867, 0.56 ) }
    dend_26 { pt3dadd( -75.0754, 28.0297, 41.4758, 0.83 ) }
    dend_26 { pt3dadd( -77.6862, 28.2099, 42.3315, 0.28 ) }
    dend_26 { pt3dadd( -78.303, 28.3101, 42.5177, 0.56 ) }
    dend_26 { pt3dadd( -80.4578, 28.8671, 43.1974, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -82.5433, 29.6053, 43.976, 0.83 ) }
    dend_26 { pt3dadd( -85.0346, 30.9069, 45.1584, 0.56 ) }
    dend_26 { pt3dadd( -86.9238, 32.2533, 46.3771, 1.67 ) }
    dend_26 { pt3dadd( -89.3666, 34.89, 48.5907, 0.28 ) }
    dend_26 { pt3dadd( -90.0128, 35.7602, 49.2529, 0.28 ) }
    dend_26 { pt3dadd( -90.4949, 36.6432, 49.8489, 0.56 ) }
    dend_26 { pt3dadd( -91.2697, 38.9369, 51.4019, 0.28 ) }
    dend_26 { pt3dadd( -91.452, 40.8483, 52.8108, 0.56 ) }
    dend_26 { pt3dadd( -91.3194, 41.9195, 53.7217, 0.28 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 9/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -36.3997, 20.9544, 5.40036, 0.56 ) }
    dend_25 { pt3dadd( -36.4535, 20.7069, 3.29374, 0.56 ) }
    dend_25 { pt3dadd( -35.9167, 20.1915, -2.74956, 0.56 ) }
    dend_25 { pt3dadd( -35.6305, 19.9743, -5.11484, 1.39 ) }
    dend_25 { pt3dadd( -35.4631, 19.8632, -6.27223, 0.28 ) }
    dend_25 { pt3dadd( -35.2652, 19.6713, -8.09336, 0.28 ) }
    dend_25 { pt3dadd( -35.2186, 19.623, -8.58479, 1.11 ) }
    dend_25 { pt3dadd( -34.7923, 19.397, -11.8293, 1.11 ) }
    dend_25 { pt3dadd( -34.048, 19.2766, -16.9114, 0.56 ) }
    dend_25 { pt3dadd( -33.774, 19.3197, -19.0611, 0.83 ) }
    dend_25 { pt3dadd( -32.8022, 19.7414, -28.4809, 0.28 ) }
    dend_25 { pt3dadd( -32.7403, 19.7793, -29.2329, 1.11 ) }
    dend_25 { pt3dadd( -32.3649, 20.1019, -35.3395, 0.28 ) }
    dend_25 { pt3dadd( -32.337, 20.1591, -36.2864, 0.56 ) }
    dend_25 { pt3dadd( -32.2061, 20.5198, -39.4479, 0.28 ) }
    dend_25 { pt3dadd( -32.2139, 20.6145, -42.2313, 0.56 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 25/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 41.1591, 18.3451, -26.1839, 0.56 ) }
    dend_20 { pt3dadd( 42.8557, 19.4182, -26.756, 0.56 ) }
    dend_20 { pt3dadd( 46.8959, 22.1419, -28.6231, 0.56 ) }
    dend_20 { pt3dadd( 49.2721, 23.7092, -29.6251, 0.56 ) }
    dend_20 { pt3dadd( 50.6564, 24.5972, -30.2596, 0.56 ) }
    dend_20 { pt3dadd( 52.8881, 26.0115, -31.2899, 0.28 ) }
    dend_20 { pt3dadd( 54.5665, 27.0513, -32.0518, 0.83 ) }
    dend_20 { pt3dadd( 56.5097, 28.2604, -33.0693, 0.28 ) }
    dend_20 { pt3dadd( 59.3876, 30.1012, -34.6065, 0.83 ) }
    dend_20 { pt3dadd( 61.6991, 31.7202, -35.7503, 0.28 ) }
    dend_20 { pt3dadd( 63.6227, 33.0872, -36.5876, 0.83 ) }
    dend_20 { pt3dadd( 64.6433, 33.8188, -36.9325, 0.56 ) }
    dend_20 { pt3dadd( 66.2268, 34.9819, -37.4237, 0.56 ) }
    dend_20 { pt3dadd( 68.1331, 36.3526, -37.8906, 0.28 ) }
    dend_20 { pt3dadd( 70.0337, 37.7137, -38.3711, 0.28 ) }
    dend_20 { pt3dadd( 72.3498, 39.2647, -39.1813, 1.11 ) }
    dend_20 { pt3dadd( 73.7228, 40.1932, -39.9279, 0.28 ) }
    dend_20 { pt3dadd( 74.8395, 40.9642, -40.6628, 0.56 ) }
    dend_20 { pt3dadd( 77.3414, 42.7534, -42.5214, 0.56 ) }
    dend_20 { pt3dadd( 79.1683, 44.15, -44.0727, 1.67 ) }
    dend_20 { pt3dadd( 83.4307, 47.7362, -48.0818, 0.56 ) }
    dend_20 { pt3dadd( 86.3331, 50.4014, -50.8093, 0.28 ) }
    dend_20 { pt3dadd( 87.2883, 51.3197, -51.7703, 0.56 ) }
    dend_20 { pt3dadd( 88.7436, 52.8129, -53.306, 0.28 ) }
    dend_20 { pt3dadd( 89.2645, 53.4325, -53.9451, 0.56 ) }
    dend_20 { pt3dadd( 90.6438, 55.3383, -55.5276, 0.28 ) }
    dend_20 { pt3dadd( 92.2366, 57.8024, -56.3797, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 52/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 41.1591, 18.3451, -26.1839, 0.56 ) }
    dend_19 { pt3dadd( 44.423, 18.8109, -23.785, 0.56 ) }
    dend_19 { pt3dadd( 48.2981, 19.3742, -21.1135, 0.56 ) }
    dend_19 { pt3dadd( 51.8334, 19.8774, -18.7914, 0.56 ) }
    dend_19 { pt3dadd( 55.1807, 20.329, -16.7869, 0.83 ) }
    dend_19 { pt3dadd( 57.9861, 20.6569, -15.1904, 0.56 ) }
    dend_19 { pt3dadd( 61.9411, 20.9683, -13.037, 0.56 ) }
    dend_19 { pt3dadd( 63.6073, 21.0618, -12.1829, 0.56 ) }
    dend_19 { pt3dadd( 66.2452, 21.0634, -10.9212, 0.83 ) }
    dend_19 { pt3dadd( 68.8002, 21.0499, -9.85227, 0.56 ) }
    dend_19 { pt3dadd( 71.5913, 20.9874, -8.88713, 0.28 ) }
    dend_19 { pt3dadd( 73.9058, 20.8367, -8.11538, 0.28 ) }
    dend_19 { pt3dadd( 76.713, 20.6358, -7.31915, 0.83 ) }
    dend_19 { pt3dadd( 79.7578, 20.3883, -6.52853, 0.28 ) }
    dend_19 { pt3dadd( 80.7605, 20.2995, -6.30463, 0.56 ) }
    dend_19 { pt3dadd( 83.5092, 20.1404, -5.75225, 0.28 ) }
    dend_19 { pt3dadd( 84.28, 20.1264, -5.64585, 0.56 ) }
    dend_19 { pt3dadd( 86.8137, 20.1749, -5.51079, 0.28 ) }
    dend_19 { pt3dadd( 87.5804, 20.1838, -5.56073, 0.83 ) }
    dend_19 { pt3dadd( 89.9229, 20.2364, -5.85106, 0.28 ) }
    dend_19 { pt3dadd( 91.3747, 20.2897, -6.04971, 0.28 ) }
    dend_19 { pt3dadd( 92.4331, 20.362, -6.22947, 0.28 ) }
    dend_19 { pt3dadd( 95.5422, 20.6119, -6.82308, 0.83 ) }
    dend_19 { pt3dadd( 99.2181, 20.9514, -7.61063, 0.28 ) }
    dend_19 { pt3dadd( 100.914, 21.1161, -8.00459, 0.56 ) }
    dend_19 { pt3dadd( 104.247, 21.4609, -8.81763, 0.56 ) }
    dend_19 { pt3dadd( 107.456, 21.7325, -9.59088, 0.56 ) }
    dend_19 { pt3dadd( 110.226, 21.9866, -10.2169, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 80/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 20.5592, -10.139, -19.4276, 0.83 ) }
    dend_15 { pt3dadd( 23.8711, -10.3723, -21.5497, 0.83 ) }
    dend_15 { pt3dadd( 28.5753, -10.4787, -24.4528, 0.56 ) }
    dend_15 { pt3dadd( 29.989, -10.3839, -25.2586, 0.56 ) }
    dend_15 { pt3dadd( 33.1409, -10.1181, -26.9978, 0.56 ) }
    dend_15 { pt3dadd( 36.007, -9.90328, -28.5213, 0.83 ) }
    dend_15 { pt3dadd( 38.1612, -9.72148, -29.6353, 0.56 ) }
    dend_15 { pt3dadd( 41.483, -9.44821, -31.0739, 0.83 ) }
    dend_15 { pt3dadd( 44.3198, -8.93401, -32.1731, 0.56 ) }
    dend_15 { pt3dadd( 46.2814, -8.06052, -33.0852, 0.56 ) }
    dend_15 { pt3dadd( 47.6067, -7.09548, -33.7568, 0.28 ) }
    dend_15 { pt3dadd( 48.1813, -6.64394, -34.0925, 0.28 ) }
    dend_15 { pt3dadd( 50.1049, -5.3402, -34.9541, 0.83 ) }
    dend_15 { pt3dadd( 52.6406, -4.20361, -35.7091, 0.56 ) }
    dend_15 { pt3dadd( 54.2076, -3.6866, -36.199, 0.56 ) }
    dend_15 { pt3dadd( 57.3264, -2.96898, -37.1147, 1.39 ) }
    dend_15 { pt3dadd( 61.0989, -2.3839, -38.1623, 0.56 ) }
    dend_15 { pt3dadd( 65.7353, -2.05336, -39.4003, 0.28 ) }
    dend_15 { pt3dadd( 67.8137, -2.03195, -39.896, 0.28 ) }
    dend_15 { pt3dadd( 73.2172, -2.2099, -41.1942, 1.94 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 76.1139, -2.28614, -42.0125, 0.28 ) }
    dend_15 { pt3dadd( 77.5734, -2.26632, -42.5078, 0.56 ) }
    dend_15 { pt3dadd( 79.7454, -2.06007, -43.3826, 0.28 ) }
    dend_15 { pt3dadd( 81.4642, -1.76712, -44.2867, 0.56 ) }
    dend_15 { pt3dadd( 83.8211, -1.25168, -45.6483, 0.28 ) }
    dend_15 { pt3dadd( 85.2409, -0.966658, -46.4717, 0.83 ) }
    dend_15 { pt3dadd( 87.2674, -0.567299, -47.8849, 0.28 ) }
    dend_15 { pt3dadd( 87.8246, -0.46892, -48.3008, 0.56 ) }
    dend_15 { pt3dadd( 90.2136, -0.0789405, -50.2072, 0.28 ) }
    dend_15 { pt3dadd( 91.2807, 0.0250485, -51.256, 0.56 ) }
    dend_15 { pt3dadd( 92.3608, 0.0936285, -52.3229, 0.28 ) }
    dend_15 { pt3dadd( 93.0028, 0.126112, -52.9302, 0.83 ) }
    dend_15 { pt3dadd( 94.1825, 0.23426, -53.9274, 0.28 ) }
    dend_15 { pt3dadd( 94.8958, 0.348709, -54.492, 0.56 ) }
    dend_15 { pt3dadd( 99.4712, 1.35659, -57.8938, 0.28 ) }
    dend_15 { pt3dadd( 100.832, 1.70002, -58.8975, 0.28 ) }
    dend_15 { pt3dadd( 102.631, 2.22266, -60.3541, 0.83 ) }
    dend_15 { pt3dadd( 106.354, 3.41601, -63.5553, 0.28 ) }
    dend_15 { pt3dadd( 107.742, 3.89191, -64.7751, 1.39 ) }
    dend_15 { pt3dadd( 110.125, 4.75854, -66.8262, 0.28 ) }
    dend_15 { pt3dadd( 111.055, 5.10631, -67.5936, 1.11 ) }
    dend_15 { pt3dadd( 114.913, 6.53866, -70.9756, 0.28 ) }
    dend_15 { pt3dadd( 116.619, 7.17048, -72.5336, 0.28 ) }
    dend_15 { pt3dadd( 117.769, 7.59936, -73.6471, 0.83 ) }
    dend_15 { pt3dadd( 119.598, 8.23922, -75.4743, 0.28 ) }
    dend_15 { pt3dadd( 119.981, 8.41065, -75.8306, 0.56 ) }
    dend_15 { pt3dadd( 121.965, 9.52164, -77.348, 0.28 ) }
    dend_15 { pt3dadd( 122.652, 9.98388, -77.7827, 1.11 ) }
    dend_15 { pt3dadd( 124.867, 11.5982, -79.0633, 0.28 ) }
    dend_15 { pt3dadd( 126.189, 12.622, -79.8583, 0.83 ) }
    dend_15 { pt3dadd( 130.341, 15.9477, -82.5229, 0.28 ) }
    dend_15 { pt3dadd( 132.758, 17.9456, -84.0514, 1.11 ) }
    dend_15 { pt3dadd( 134.98, 19.844, -85.3892, 0.28 ) }
    dend_15 { pt3dadd( 135.536, 20.3246, -85.7134, 0.83 ) }
    dend_15 { pt3dadd( 138.601, 23.0798, -87.4316, 0.28 ) }
    dend_15 { pt3dadd( 140.465, 24.6446, -88.5445, 1.39 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 20.5592, -10.139, -19.4276, 1.11 ) }
    dend_12 { pt3dadd( 18.739, -12.2951, -20.8974, 1.11 ) }
    dend_12 { pt3dadd( 17.722, -14.3055, -21.5666, 0.83 ) }
    dend_12 { pt3dadd( 17.6216, -15.7722, -21.6215, 0.83 ) }
    dend_12 { pt3dadd( 17.8471, -17.757, -21.5042, 0.83 ) }
    dend_12 { pt3dadd( 18.0751, -19.1288, -21.3746, 0.83 ) }
    dend_12 { pt3dadd( 18.4796, -21.0249, -21.1748, 0.83 ) }
    dend_12 { pt3dadd( 19.6618, -25.0593, -20.732, 0.83 ) }
    dend_12 { pt3dadd( 21.4505, -29.8572, -20.3452, 0.83 ) }
    dend_12 { pt3dadd( 23.222, -33.9771, -20.2433, 0.83 ) }
    dend_12 { pt3dadd( 24.1479, -35.6994, -20.2609, 0.56 ) }
    dend_12 { pt3dadd( 25.3863, -37.7425, -20.3764, 0.83 ) }
    dend_12 { pt3dadd( 27.1821, -40.6894, -20.7596, 0.56 ) }
    dend_12 { pt3dadd( 28.9782, -43.5347, -21.3775, 1.11 ) }
    dend_12 { pt3dadd( 30.564, -45.8879, -22.0888, 0.56 ) }
    dend_12 { pt3dadd( 33.1568, -49.4376, -23.3138, 0.56 ) }
    dend_12 { pt3dadd( 33.9552, -50.547, -23.694, 0.56 ) }
    dend_12 { pt3dadd( 36.3824, -54.0512, -24.9922, 0.56 ) }
    dend_12 { pt3dadd( 38.3987, -57.0573, -26.0875, 0.56 ) }
    dend_12 { pt3dadd( 39.8925, -59.4493, -27.0613, 0.56 ) }
    dend_12 { pt3dadd( 40.3281, -60.1379, -27.3514, 0.56 ) }
    dend_12 { pt3dadd( 41.9433, -62.8349, -28.605, 0.83 ) }
    dend_12 { pt3dadd( 43.753, -65.677, -30.0768, 0.28 ) }
    dend_12 { pt3dadd( 44.2532, -66.4349, -30.5121, 0.83 ) }
    dend_12 { pt3dadd( 44.7242, -67.348, -31.0571, 0.28 ) }
    dend_12 { pt3dadd( 45.827, -69.669, -32.3334, 0.28 ) }
    dend_12 { pt3dadd( 46.1947, -70.3693, -32.7166, 0.28 ) }
    dend_12 { pt3dadd( 47.4162, -73.0548, -34.127, 1.11 ) }
    dend_12 { pt3dadd( 47.7743, -74.0359, -34.5311, 0.28 ) }
    dend_12 { pt3dadd( 48.0131, -74.723, -34.8406, 0.28 ) }
    dend_12 { pt3dadd( 48.7101, -76.711, -35.731, 1.11 ) }
    dend_12 { pt3dadd( 49.2891, -78.491, -36.5072, 0.28 ) }
    dend_12 { pt3dadd( 49.9502, -80.4787, -37.3219, 0.28 ) }
    dend_12 { pt3dadd( 50.5913, -82.5039, -38.0673, 0.28 ) }
    dend_12 { pt3dadd( 51.2224, -84.3477, -38.7019, 1.11 ) }
    dend_12 { pt3dadd( 51.966, -86.7428, -39.4665, 0.28 ) }
    dend_12 { pt3dadd( 52.154, -87.5252, -39.68, 0.28 ) }
    dend_12 { pt3dadd( 52.6181, -89.3777, -40.1397, 0.56 ) }
    dend_12 { pt3dadd( 53.0009, -90.7138, -40.4012, 0.28 ) }
    dend_12 { pt3dadd( 54.1885, -94.8002, -41.3528, 0.28 ) }
    dend_12 { pt3dadd( 54.5333, -95.9651, -41.6426, 0.28 ) }
    dend_12 { pt3dadd( 55.4011, -98.8124, -42.4394, 0.83 ) }
    dend_12 { pt3dadd( 56.3032, -101.692, -43.4115, 0.28 ) }
    dend_12 { pt3dadd( 57.0666, -103.922, -44.2699, 1.67 ) }
    dend_12 { pt3dadd( 58.3248, -107.324, -45.7184, 0.28 ) }
    dend_12 { pt3dadd( 58.8689, -108.807, -46.475, 0.56 ) }
    dend_12 { pt3dadd( 59.1889, -109.533, -46.8873, 0.56 ) }
    dend_12 { pt3dadd( 60.0725, -111.322, -47.9809, 0.28 ) }
    dend_12 { pt3dadd( 60.8374, -112.69, -48.8796, 0.28 ) }
    dend_12 { pt3dadd( 62.0897, -114.422, -50.8626, 0.83 ) }
    dend_12 { pt3dadd( 63.3665, -116.06, -52.8021, 0.56 ) }
    dend_12 { pt3dadd( 64.196, -117.017, -54.0817, 0.83 ) }
    dend_12 { pt3dadd( 65.0601, -117.921, -55.4201, 0.28 ) }
    dend_12 { pt3dadd( 66.3079, -119.104, -57.445, 0.28 ) }
    dend_12 { pt3dadd( 70.4495, -122.68, -66.2062, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 91/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 9.90784, -27.9679, 28.2281, 0.28 ) }
    dend_8 { pt3dadd( 9.08808, -28.587, 29.2012, 0.28 ) }
    dend_8 { pt3dadd( 7.39595, -29.8649, 31.2099, 0.28 ) }
    dend_8 { pt3dadd( 6.92844, -30.218, 31.7648, 0.56 ) }
    dend_8 { pt3dadd( 6.12458, -30.825, 32.7191, 0.56 ) }
    dend_8 { pt3dadd( 4.99818, -31.6757, 34.0562, 0.56 ) }
    dend_8 { pt3dadd( 4.3286, -32.1814, 34.8511, 0.56 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 98/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.90784, -27.9679, 28.2281, 0.56 ) }
    dend_7 { pt3dadd( 13.0681, -27.0954, 29.5659, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 0/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -14.5295, -13.8528, 6.74791, 0.83 ) }
    dend_5 { pt3dadd( -14.2295, -7.24282, 19.2059, 0.83 ) }
    dend_5 { pt3dadd( -14.5902, -5.86265, 20.3342, 0.83 ) }
    dend_5 { pt3dadd( -15.1739, -4.07549, 21.3689, 0.83 ) }
    dend_5 { pt3dadd( -16.3063, -1.25282, 22.7207, 0.83 ) }
    dend_5 { pt3dadd( -18.3127, 3.65163, 24.9949, 0.56 ) }
    dend_5 { pt3dadd( -19.5928, 6.95319, 26.4407, 0.56 ) }
    dend_5 { pt3dadd( -21.887, 12.4565, 27.7153, 0.56 ) }
    dend_5 { pt3dadd( -22.4577, 13.7446, 28.0319, 0.83 ) }
    dend_5 { pt3dadd( -24.309, 17.5258, 29.0726, 0.56 ) }
    dend_5 { pt3dadd( -25.3722, 19.5419, 29.7691, 0.56 ) }
    dend_5 { pt3dadd( -26.8711, 22.5321, 31.1576, 0.83 ) }
    dend_5 { pt3dadd( -27.8128, 24.6243, 32.1912, 0.56 ) }
    dend_5 { pt3dadd( -29.059, 27.4231, 33.6548, 0.56 ) }
    dend_5 { pt3dadd( -30.7676, 30.719, 35.3498, 0.28 ) }
    dend_5 { pt3dadd( -32.2721, 33.4516, 36.5865, 0.28 ) }
    dend_5 { pt3dadd( -33.4971, 35.4119, 37.3373, 0.28 ) }
    dend_5 { pt3dadd( -34.7232, 37.3974, 37.9862, 0.28 ) }
    dend_5 { pt3dadd( -35.861, 39.3991, 38.5447, 0.56 ) }
    dend_5 { pt3dadd( -38.1345, 43.5768, 39.462, 0.28 ) }
    dend_5 { pt3dadd( -39.7861, 46.6437, 40.0034, 0.28 ) }
    dend_5 { pt3dadd( -41.8694, 50.5098, 40.4792, 0.83 ) }
    dend_5 { pt3dadd( -45.8251, 57.6722, 41.2858, 0.28 ) }
    dend_5 { pt3dadd( -47.04, 59.9106, 41.4643, 0.83 ) }
    dend_5 { pt3dadd( -48.2425, 62.172, 41.5961, 0.28 ) }
    dend_5 { pt3dadd( -49.597, 64.8124, 41.5922, 0.83 ) }
    dend_5 { pt3dadd( -51.6281, 68.5606, 41.4985, 0.28 ) }
    dend_5 { pt3dadd( -52.1792, 69.5453, 41.3916, 0.56 ) }
    dend_5 { pt3dadd( -54.0539, 72.3698, 40.6114, 0.28 ) }
    dend_5 { pt3dadd( -54.466, 72.9475, 40.4027, 0.56 ) }
    dend_5 { pt3dadd( -56.6324, 75.9438, 39.0516, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 31/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -14.5295, -13.8528, 6.74791, 1.11 ) }
    dend_2 { pt3dadd( -17.4513, -15.88, 3.24053, 1.11 ) }
    dend_2 { pt3dadd( -18.3914, -16.5322, 2.112, 1.11 ) }
    dend_2 { pt3dadd( -21.4649, -18.6646, -1.57747, 1.11 ) }
    dend_2 { pt3dadd( -23.8221, -20.3, -4.4071, 1.11 ) }
    dend_2 { pt3dadd( -26.8578, -22.4063, -8.05134, 1.11 ) }
    dend_2 { pt3dadd( -28.7877, -23.7452, -10.368, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_5 (entry count 38/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -143.967, -299.453, 81.126, 0.56 ) }
    apic_11 { pt3dadd( -145.657, -300.775, 83.9717, 0.56 ) }
    apic_11 { pt3dadd( -147.263, -302.032, 86.6756, 0.28 ) }
    apic_11 { pt3dadd( -147.928, -302.552, 87.7953, 0.56 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 42/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -143.967, -299.453, 81.126, 0.56 ) }
    apic_6 { pt3dadd( -144.296, -300.682, 82.4124, 0.56 ) }
    apic_6 { pt3dadd( -144.73, -302.389, 84.0994, 0.56 ) }
    apic_6 { pt3dadd( -144.924, -302.997, 84.687, 0.83 ) }
    apic_6 { pt3dadd( -145.538, -304.296, 85.9321, 0.56 ) }
    apic_6 { pt3dadd( -145.956, -304.991, 86.5609, 0.56 ) }
    apic_6 { pt3dadd( -146.971, -306.678, 88.0867, 0.56 ) }
    apic_6 { pt3dadd( -147.349, -307.152, 88.5201, 0.56 ) }
    apic_6 { pt3dadd( -147.995, -307.846, 89.0736, 0.56 ) }
    apic_6 { pt3dadd( -149.167, -309.15, 90.0832, 0.28 ) }
    apic_6 { pt3dadd( -149.838, -309.937, 90.6254, 0.83 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 53/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 15.1698, -48.8135, 44.6335, 0.56 ) }
    apic_4 { pt3dadd( 15.006, -50.3107, 46.2558, 0.56 ) }
    apic_4 { pt3dadd( 14.8541, -51.7769, 47.9316, 0.56 ) }
    apic_4 { pt3dadd( 14.5582, -54.6344, 51.1974, 0.56 ) }
    apic_4 { pt3dadd( 14.4541, -55.6386, 52.3453, 0.56 ) }
    apic_4 { pt3dadd( 14.3409, -56.7318, 53.5947, 0.56 ) }
    apic_4 { pt3dadd( 14.0918, -59.1371, 56.3437, 0.56 ) }
    apic_4 { pt3dadd( 14.0466, -60.2815, 57.7816, 0.56 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 61/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 15.1698, -48.8135, 44.6335, 0.83 ) }
    apic_3 { pt3dadd( 19.0675, -54.1295, 40.5116, 0.83 ) }
    apic_3 { pt3dadd( 20.0924, -56.1737, 39.3428, 0.83 ) }
    apic_3 { pt3dadd( 22.3703, -61.6349, 36.7789, 0.56 ) }
    apic_3 { pt3dadd( 22.811, -62.7159, 36.3378, 0.56 ) }
    apic_3 { pt3dadd( 24.1009, -65.6612, 35.2489, 0.56 ) }
    apic_3 { pt3dadd( 25.3514, -68.1264, 34.3617, 0.56 ) }
    apic_3 { pt3dadd( 27.9473, -72.9767, 33.2259, 0.56 ) }
    apic_3 { pt3dadd( 29.6301, -75.894, 32.3566, 0.56 ) }
    apic_3 { pt3dadd( 30.8325, -77.7952, 31.7383, 0.56 ) }
    apic_3 { pt3dadd( 32.166, -79.5534, 31.1199, 0.56 ) }
    apic_3 { pt3dadd( 34.4663, -82.0624, 30.1878, 0.56 ) }
    apic_3 { pt3dadd( 35.2164, -82.7394, 29.9004, 0.56 ) }
    apic_3 { pt3dadd( 40.6262, -87.0535, 27.9294, 0.83 ) }
    apic_3 { pt3dadd( 42.1993, -88.4917, 27.3282, 0.28 ) }
    apic_3 { pt3dadd( 44.7633, -91.4813, 25.9989, 0.83 ) }
    apic_3 { pt3dadd( 45.8427, -93.0932, 25.3241, 0.56 ) }
    apic_3 { pt3dadd( 46.9689, -95.2295, 24.5373, 0.56 ) }
    apic_3 { pt3dadd( 47.7067, -96.7925, 24.0286, 0.28 ) }
    apic_3 { pt3dadd( 49.1068, -99.951, 23.157, 0.56 ) }
    apic_3 { pt3dadd( 50.8866, -103.948, 21.8534, 0.56 ) }
    apic_3 { pt3dadd( 52.0421, -106.335, 21.0763, 0.56 ) }
    apic_3 { pt3dadd( 53.1839, -108.54, 20.489, 0.28 ) }
    apic_3 { pt3dadd( 53.9384, -109.803, 20.2366, 0.83 ) }
    apic_3 { pt3dadd( 55.8995, -112.424, 20.0254, 0.28 ) }
    apic_3 { pt3dadd( 56.9364, -113.58, 20.0853, 1.11 ) }
    apic_3 { pt3dadd( 59.4408, -116.163, 20.6093, 0.56 ) }
    apic_3 { pt3dadd( 62.2529, -118.961, 21.3367, 0.56 ) }
    apic_3 { pt3dadd( 63.9263, -120.562, 21.6829, 0.83 ) }
    apic_3 { pt3dadd( 65.6648, -122.337, 22.092, 0.28 ) }
    apic_3 { pt3dadd( 66.1204, -122.867, 22.2175, 0.56 ) }
    apic_3 { pt3dadd( 67.1164, -124.143, 22.3755, 0.28 ) }
    apic_3 { pt3dadd( 68.5864, -126.089, 22.399, 0.56 ) }
    apic_3 { pt3dadd( 71.2845, -129.45, 22.1825, 1.11 ) }
    apic_3 { pt3dadd( 73.6809, -132.691, 21.7466, 0.28 ) }
    apic_3 { pt3dadd( 74.7278, -134.167, 21.373, 0.56 ) }
    apic_3 { pt3dadd( 76.3984, -136.614, 20.651, 0.28 ) }
    apic_3 { pt3dadd( 77.2437, -137.957, 20.3169, 0.56 ) }
    apic_3 { pt3dadd( 77.777, -138.948, 20.138, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_3 { pt3dadd( 78.8956, -140.929, 19.9339, 0.83 ) }
    apic_3 { pt3dadd( 80.0673, -142.864, 19.6713, 0.28 ) }
    apic_3 { pt3dadd( 80.4119, -143.504, 19.6133, 0.56 ) }
    apic_3 { pt3dadd( 82.003, -146.852, 19.439, 0.28 ) }
    apic_3 { pt3dadd( 82.8183, -148.597, 19.4031, 1.39 ) }
    apic_3 { pt3dadd( 86.225, -155.208, 19.5371, 0.28 ) }
    apic_3 { pt3dadd( 87.0184, -156.606, 19.6328, 0.83 ) }
    apic_3 { pt3dadd( 88.5415, -158.987, 19.8582, 0.28 ) }
    apic_3 { pt3dadd( 88.9453, -159.596, 19.9072, 0.56 ) }
    apic_3 { pt3dadd( 90.7237, -162.198, 20.0664, 0.28 ) }
    apic_3 { pt3dadd( 93.2066, -165.606, 20.353, 0.28 ) }
    apic_3 { pt3dadd( 94.1875, -166.97, 20.5022, 1.11 ) }
    apic_3 { pt3dadd( 96.3612, -169.906, 20.7562, 0.28 ) }
    apic_3 { pt3dadd( 97.7812, -171.728, 20.8785, 0.28 ) }
    apic_3 { pt3dadd( 98.0014, -172.022, 20.8918, 0.56 ) }
    apic_3 { pt3dadd( 99.7739, -174.598, 20.9255, 0.28 ) }
    apic_3 { pt3dadd( 100.573, -175.85, 20.9504, 1.39 ) }
    apic_3 { pt3dadd( 102.413, -178.771, 21.0625, 0.28 ) }
    apic_3 { pt3dadd( 103.484, -180.379, 21.0862, 1.39 ) }
    apic_3 { pt3dadd( 104.945, -182.332, 21.0535, 0.28 ) }
    apic_3 { pt3dadd( 105.83, -183.486, 20.9988, 0.28 ) }
    apic_3 { pt3dadd( 108.021, -186.136, 20.7936, 0.28 ) }
    apic_3 { pt3dadd( 109.113, -187.343, 20.6761, 0.83 ) }
    apic_3 { pt3dadd( 111.822, -190.14, 20.3432, 0.28 ) }
    apic_3 { pt3dadd( 112.185, -190.5, 20.2972, 0.56 ) }
    apic_3 { pt3dadd( 113.24, -191.494, 20.1783, 0.56 ) }
    apic_3 { pt3dadd( 114.983, -193.02, 20.0444, 0.28 ) }
    apic_3 { pt3dadd( 115.841, -193.73, 20.0382, 0.28 ) }
    apic_3 { pt3dadd( 117.025, -194.833, 20.1166, 1.39 ) }
    apic_3 { pt3dadd( 118.948, -196.843, 20.4089, 0.28 ) }
    apic_3 { pt3dadd( 120.088, -198.237, 20.6176, 0.28 ) }
    apic_3 { pt3dadd( 120.828, -199.308, 20.7777, 0.83 ) }
    apic_3 { pt3dadd( 122.078, -201.804, 21.2367, 0.28 ) }
    apic_3 { pt3dadd( 123.389, -204.768, 21.9312, 0.28 ) }
    apic_3 { pt3dadd( 123.511, -205.1, 22.0226, 0.56 ) }
    apic_3 { pt3dadd( 124.194, -207.354, 22.7864, 0.28 ) }
    apic_3 { pt3dadd( 124.388, -208.086, 23.0584, 0.83 ) }
    apic_3 { pt3dadd( 125.112, -210.617, 23.9094, 0.28 ) }
    apic_3 { pt3dadd( 125.747, -212.718, 24.5227, 0.28 ) }
    apic_3 { pt3dadd( 126.243, -214.075, 24.878, 1.39 ) }
    apic_3 { pt3dadd( 127.006, -216.415, 25.3155, 0.28 ) }
    apic_3 { pt3dadd( 127.215, -217.096, 25.4, 0.83 ) }
    apic_3 { pt3dadd( 128.479, -221.341, 25.6422, 0.28 ) }
    apic_3 { pt3dadd( 129.017, -223.562, 25.6117, 0.28 ) }
    apic_3 { pt3dadd( 129.206, -224.609, 25.569, 0.83 ) }
    apic_3 { pt3dadd( 129.818, -228.429, 25.3063, 0.28 ) }
    apic_3 { pt3dadd( 129.985, -229.489, 25.2084, 1.67 ) }
    apic_3 { pt3dadd( 130.567, -232.775, 24.9146, 0.28 ) }
    apic_3 { pt3dadd( 131.315, -236.624, 24.7521, 0.28 ) }
    apic_3 { pt3dadd( 131.692, -238.013, 24.6947, 0.56 ) }
    apic_3 { pt3dadd( 132.363, -240.113, 24.6908, 0.28 ) }
    apic_3 { pt3dadd( 132.735, -241.36, 24.7533, 0.56 ) }
    apic_3 { pt3dadd( 133.135, -242.913, 24.8595, 0.28 ) }
    apic_3 { pt3dadd( 133.741, -245.428, 25.0752, 0.56 ) }
    apic_3 { pt3dadd( 134.757, -249.491, 25.4634, 0.28 ) }
    apic_3 { pt3dadd( 135.286, -251.769, 25.6859, 1.11 ) }
    apic_3 { pt3dadd( 137.921, -264.473, 26.9413, 0.28 ) }
    apic_3 { pt3dadd( 138.18, -265.93, 27.0671, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 58/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 92.2366, 57.8024, -56.3797, 0.28 ) }
    dend_22 { pt3dadd( 93.5276, 61.0912, -60.5545, 0.28 ) }
    dend_22 { pt3dadd( 93.771, 61.7203, -61.3383, 0.83 ) }
    dend_22 { pt3dadd( 95.3762, 66.1606, -66.2414, 0.28 ) }
    dend_22 { pt3dadd( 95.5877, 66.7693, -66.8584, 0.56 ) }
    dend_22 { pt3dadd( 97.119, 71.0359, -71.4477, 0.28 ) }
    dend_22 { pt3dadd( 97.9574, 72.9781, -73.5593, 0.28 ) }
    dend_22 { pt3dadd( 98.1838, 73.4211, -74.078, 0.83 ) }
    dend_22 { pt3dadd( 99.1776, 75.0185, -76.0797, 0.28 ) }
    dend_22 { pt3dadd( 99.4666, 75.433, -76.6076, 0.83 ) }
    dend_22 { pt3dadd( 102.203, 78.9628, -81.2981, 0.56 ) }
    dend_22 { pt3dadd( 104.418, 81.5181, -84.7745, 0.28 ) }
    dend_22 { pt3dadd( 105.333, 82.4803, -86.1272, 0.83 ) }
    dend_22 { pt3dadd( 109.04, 86.3061, -91.5894, 0.56 ) }
    dend_22 { pt3dadd( 111.389, 88.5791, -94.91, 0.28 ) }
    dend_22 { pt3dadd( 112.423, 89.5525, -96.2593, 0.28 ) }
    dend_22 { pt3dadd( 112.836, 89.9144, -96.7461, 0.56 ) }
    dend_22 { pt3dadd( 116.042, 92.5348, -100.683, 0.28 ) }
    dend_22 { pt3dadd( 117.256, 93.4532, -102.093, 0.28 ) }
    dend_22 { pt3dadd( 118.469, 94.3356, -103.335, 0.83 ) }
    dend_22 { pt3dadd( 119.602, 95.1057, -104.456, 0.83 ) }
    dend_22 { pt3dadd( 123.058, 97.4616, -108.045, 0.28 ) }
    dend_22 { pt3dadd( 125.154, 98.8448, -110.256, 1.11 ) }
    dend_22 { pt3dadd( 126.644, 99.753, -111.822, 0.28 ) }
    dend_22 { pt3dadd( 127.96, 100.52, -113.275, 0.28 ) }
    dend_22 { pt3dadd( 128.552, 100.906, -114.01, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 84/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 92.2366, 57.8024, -56.3797, 0.56 ) }
    dend_21 { pt3dadd( 94.5448, 56.3363, -56.1721, 0.56 ) }
    dend_21 { pt3dadd( 96.2754, 54.895, -55.9755, 0.28 ) }
    dend_21 { pt3dadd( 97.6167, 53.4279, -55.8462, 1.11 ) }
    dend_21 { pt3dadd( 100.149, 50.1417, -55.3843, 0.28 ) }
    dend_21 { pt3dadd( 101.34, 48.3022, -55.2129, 1.11 ) }
    dend_21 { pt3dadd( 103.303, 45.0371, -55.0054, 0.28 ) }
    dend_21 { pt3dadd( 105.148, 41.5144, -54.8512, 0.28 ) }
    dend_21 { pt3dadd( 106.856, 38.008, -54.7437, 0.28 ) }
    dend_21 { pt3dadd( 108.325, 35.1694, -54.7426, 1.39 ) }
    dend_21 { pt3dadd( 110.876, 30.7043, -54.9392, 0.28 ) }
    dend_21 { pt3dadd( 111.793, 29.3519, -55.0289, 1.11 ) }
    dend_21 { pt3dadd( 114.588, 25.8594, -55.4088, 0.28 ) }
    dend_21 { pt3dadd( 115.081, 25.3334, -55.4579, 0.83 ) }
    dend_21 { pt3dadd( 119.535, 21.2947, -55.8387, 0.28 ) }
    dend_21 { pt3dadd( 120.447, 20.5463, -55.9076, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 123.175, 18.4536, -55.9011, 0.28 ) }
    dend_21 { pt3dadd( 123.549, 18.161, -55.8901, 0.56 ) }
    dend_21 { pt3dadd( 125.555, 16.5455, -56.0481, 0.28 ) }
    dend_21 { pt3dadd( 126.107, 16.0706, -56.1635, 0.56 ) }
    dend_21 { pt3dadd( 127.648, 14.7063, -56.8609, 0.28 ) }
    dend_21 { pt3dadd( 128.817, 13.7322, -57.5504, 0.56 ) }
    dend_21 { pt3dadd( 129.257, 13.3662, -57.8786, 0.56 ) }
    dend_21 { pt3dadd( 133.31, 10.1484, -61.2913, 0.28 ) }
    dend_21 { pt3dadd( 133.332, 10.132, -61.3138, 0.56 ) }
    dend_21 { pt3dadd( 135.238, 8.93091, -63.301, 0.28 ) }
    dend_21 { pt3dadd( 135.864, 8.60082, -64.0319, 0.56 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 140.465, 24.6446, -88.5445, 0.28 ) }
    dend_17 { pt3dadd( 144.834, 26.1482, -90.6297, 0.28 ) }
    dend_17 { pt3dadd( 145.57, 26.4116, -90.9603, 1.11 ) }
    dend_17 { pt3dadd( 149.295, 27.8318, -92.516, 0.28 ) }
    dend_17 { pt3dadd( 149.707, 28.0032, -92.6617, 0.83 ) }
    dend_17 { pt3dadd( 153.25, 29.5331, -93.7658, 0.28 ) }
    dend_17 { pt3dadd( 153.516, 29.6505, -93.84, 0.56 ) }
    dend_17 { pt3dadd( 154.502, 30.1558, -94.0177, 0.28 ) }
    dend_17 { pt3dadd( 155.222, 30.5667, -94.1246, 1.67 ) }
    dend_17 { pt3dadd( 158.663, 32.6576, -94.427, 0.28 ) }
    dend_17 { pt3dadd( 159.168, 32.9574, -94.4675, 0.56 ) }
    dend_17 { pt3dadd( 160.868, 33.9417, -94.5377, 0.28 ) }
    dend_17 { pt3dadd( 161.442, 34.2771, -94.5709, 1.11 ) }
    dend_17 { pt3dadd( 163.455, 35.5254, -94.7405, 0.28 ) }
    dend_17 { pt3dadd( 163.955, 35.8334, -94.801, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 26/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 140.465, 24.6446, -88.5445, 0.28 ) }
    dend_16 { pt3dadd( 141.973, 24.9886, -87.8838, 0.28 ) }
    dend_16 { pt3dadd( 142.622, 25.0011, -87.4301, 0.83 ) }
    dend_16 { pt3dadd( 144.149, 24.7011, -86.2401, 0.28 ) }
    dend_16 { pt3dadd( 144.744, 24.4973, -85.7645, 0.56 ) }
    dend_16 { pt3dadd( 146.745, 23.7717, -84.5744, 0.28 ) }
    dend_16 { pt3dadd( 147.094, 23.6336, -84.4158, 0.56 ) }
    dend_16 { pt3dadd( 150.431, 21.6874, -83.5621, 0.56 ) }
    dend_16 { pt3dadd( 151.758, 20.7187, -83.3578, 0.28 ) }
    dend_16 { pt3dadd( 152.25, 20.3162, -83.3368, 1.11 ) }
    dend_16 { pt3dadd( 154.947, 17.9122, -83.4277, 0.28 ) }
    dend_16 { pt3dadd( 155.404, 17.4791, -83.5044, 0.56 ) }
    dend_16 { pt3dadd( 157.674, 15.6547, -84.1953, 0.28 ) }
    dend_16 { pt3dadd( 159.127, 14.7723, -84.9489, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 70.4495, -122.68, -66.2062, 0.83 ) }
    dend_14 { pt3dadd( 75.603, -132.733, -70.1805, 0.83 ) }
    dend_14 { pt3dadd( 77.3929, -135.948, -71.3714, 0.28 ) }
    dend_14 { pt3dadd( 78.5602, -137.958, -72.1165, 1.39 ) }
    dend_14 { pt3dadd( 80.9963, -141.837, -73.5384, 0.28 ) }
    dend_14 { pt3dadd( 82.0445, -143.427, -74.086, 0.28 ) }
    dend_14 { pt3dadd( 83.4847, -145.502, -74.8185, 0.28 ) }
    dend_14 { pt3dadd( 84.1522, -146.372, -75.2617, 0.28 ) }
    dend_14 { pt3dadd( 84.6114, -146.997, -75.4732, 0.56 ) }
    dend_14 { pt3dadd( 86.5318, -149.765, -76.1367, 0.28 ) }
    dend_14 { pt3dadd( 87.5389, -151.296, -76.4055, 1.39 ) }
    dend_14 { pt3dadd( 89.955, -155.474, -77.2945, 0.28 ) }
    dend_14 { pt3dadd( 90.6537, -157.014, -77.671, 0.83 ) }
    dend_14 { pt3dadd( 91.3592, -158.863, -78.2437, 0.28 ) }
    dend_14 { pt3dadd( 92.1707, -161.362, -79.1177, 0.28 ) }
    dend_14 { pt3dadd( 92.4842, -162.595, -79.6456, 0.83 ) }
    dend_14 { pt3dadd( 93.2485, -166.026, -81.3299, 0.28 ) }
    dend_14 { pt3dadd( 93.6313, -167.686, -82.2526, 1.11 ) }
    dend_14 { pt3dadd( 94.7281, -171.688, -84.6782, 0.28 ) }
    dend_14 { pt3dadd( 95.205, -173.217, -85.6654, 1.39 ) }
    dend_14 { pt3dadd( 96.0561, -175.569, -87.2224, 0.28 ) }
    dend_14 { pt3dadd( 96.4057, -176.286, -87.6731, 0.56 ) }
    dend_14 { pt3dadd( 98.6676, -179.5, -89.4444, 0.28 ) }
    dend_14 { pt3dadd( 99.3995, -180.342, -89.8702, 0.83 ) }
    dend_14 { pt3dadd( 102.141, -182.674, -90.8012, 0.28 ) }
    dend_14 { pt3dadd( 103.281, -183.43, -91.0387, 1.39 ) }
    dend_14 { pt3dadd( 107.042, -185.312, -91.417, 0.28 ) }
    dend_14 { pt3dadd( 110.547, -186.658, -91.5364, 0.28 ) }
    dend_14 { pt3dadd( 110.874, -186.75, -91.5189, 0.56 ) }
    dend_14 { pt3dadd( 115.478, -187.82, -91.0705, 0.28 ) }
    dend_14 { pt3dadd( 116.83, -188.098, -90.8858, 0.56 ) }
    dend_14 { pt3dadd( 119.887, -188.779, -90.4737, 0.28 ) }
    dend_14 { pt3dadd( 121.575, -189.262, -90.2314, 1.11 ) }
    dend_14 { pt3dadd( 124.019, -190.122, -89.8773, 0.28 ) }
    dend_14 { pt3dadd( 125.109, -190.613, -89.7297, 0.56 ) }
    dend_14 { pt3dadd( 129.914, -193.273, -89.1205, 0.28 ) }
    dend_14 { pt3dadd( 131.561, -194.307, -88.9276, 1.39 ) }
    dend_14 { pt3dadd( 134.911, -196.708, -88.5848, 0.28 ) }
    dend_14 { pt3dadd( 136.22, -197.731, -88.5139, 0.56 ) }
    dend_14 { pt3dadd( 138.889, -200.052, -88.4282, 0.28 ) }
    dend_14 { pt3dadd( 139.63, -200.781, -88.4013, 0.56 ) }
    dend_14 { pt3dadd( 141.062, -202.356, -88.3409, 0.28 ) }
    dend_14 { pt3dadd( 142.423, -203.97, -88.2978, 0.83 ) }
    dend_14 { pt3dadd( 144.226, -206.229, -88.2736, 0.28 ) }
    dend_14 { pt3dadd( 145.555, -208.008, -88.2579, 1.39 ) }
    dend_14 { pt3dadd( 147.306, -210.52, -88.2338, 0.28 ) }
    dend_14 { pt3dadd( 148.545, -212.487, -88.2691, 0.28 ) }
    dend_14 { pt3dadd( 149.536, -214.204, -88.2493, 0.28 ) }
    dend_14 { pt3dadd( 150.228, -215.488, -88.1621, 0.83 ) }
    dend_14 { pt3dadd( 150.788, -216.525, -88.0416, 0.28 ) }
    dend_14 { pt3dadd( 151.396, -217.54, -87.93, 0.83 ) }
    dend_14 { pt3dadd( 152.281, -219.066, -87.5353, 0.28 ) }
    dend_14 { pt3dadd( 153.532, -221.273, -86.8786, 0.83 ) }
    dend_14 { pt3dadd( 155.023, -223.705, -86.0153, 0.28 ) }
    dend_14 { pt3dadd( 155.863, -225.06, -85.4763, 0.28 ) }
    dend_14 { pt3dadd( 158.052, -228.376, -83.9868, 0.28 ) }
    dend_14 { pt3dadd( 160.311, -231.501, -82.4322, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 97/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 70.4495, -122.68, -66.2062, 0.56 ) }
    dend_13 { pt3dadd( 71.708, -130.456, -56.3788, 0.56 ) }
    dend_13 { pt3dadd( 71.8526, -131.938, -54.805, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 71.9235, -133.02, -53.7768, 0.28 ) }
    dend_13 { pt3dadd( 71.9691, -133.769, -53.1318, 0.56 ) }
    dend_13 { pt3dadd( 72.1557, -137.165, -50.4122, 0.28 ) }
    dend_13 { pt3dadd( 72.2422, -138.256, -49.6426, 1.11 ) }
    dend_13 { pt3dadd( 72.4425, -142.11, -48.1145, 0.28 ) }
    dend_13 { pt3dadd( 72.4778, -142.765, -47.8583, 0.56 ) }
    dend_13 { pt3dadd( 72.6287, -144.507, -47.2568, 0.28 ) }
    dend_13 { pt3dadd( 72.7034, -145.254, -47.0316, 0.83 ) }
    dend_13 { pt3dadd( 73.0703, -148.329, -46.3647, 0.28 ) }
    dend_13 { pt3dadd( 73.5303, -151.345, -45.7702, 0.28 ) }
    dend_13 { pt3dadd( 73.6947, -152.419, -45.6454, 0.83 ) }
    dend_13 { pt3dadd( 73.9948, -154.696, -45.4481, 0.28 ) }
    dend_13 { pt3dadd( 74.0298, -155.145, -45.4181, 0.56 ) }
    dend_13 { pt3dadd( 74.1362, -157.342, -45.2796, 0.28 ) }
    dend_13 { pt3dadd( 74.1419, -157.574, -45.2412, 0.56 ) }
    dend_13 { pt3dadd( 74.2151, -159.141, -44.9757, 0.28 ) }
    dend_13 { pt3dadd( 74.2542, -159.456, -44.9113, 0.56 ) }
    dend_13 { pt3dadd( 74.7258, -162.054, -44.0334, 0.28 ) }
    dend_13 { pt3dadd( 74.8776, -162.615, -43.808, 1.11 ) }
    dend_13 { pt3dadd( 76.0674, -166.639, -42.0345, 0.28 ) }
    dend_13 { pt3dadd( 76.2037, -167.051, -41.834, 0.56 ) }
    dend_13 { pt3dadd( 77.0666, -169.473, -40.5759, 0.28 ) }
    dend_13 { pt3dadd( 77.8243, -171.453, -39.5472, 0.56 ) }
    dend_13 { pt3dadd( 79.8471, -176.133, -37.0727, 0.28 ) }
    dend_13 { pt3dadd( 80.2055, -176.934, -36.6501, 0.56 ) }
    dend_13 { pt3dadd( 80.8079, -178.165, -36.0217, 0.56 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 26/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -28.7877, -23.7452, -10.368, 0.56 ) }
    dend_4 { pt3dadd( -32.4008, -26.3041, -10.6878, 0.56 ) }
    dend_4 { pt3dadd( -33.3874, -27.1406, -10.8787, 0.56 ) }
    dend_4 { pt3dadd( -35.2955, -28.7436, -11.246, 0.56 ) }
    dend_4 { pt3dadd( -37.5753, -30.484, -11.6153, 0.83 ) }
    dend_4 { pt3dadd( -40.5527, -32.555, -11.9921, 0.83 ) }
    dend_4 { pt3dadd( -43.5517, -34.68, -12.4318, 0.83 ) }
    dend_4 { pt3dadd( -45.637, -36.377, -13.0242, 0.56 ) }
    dend_4 { pt3dadd( -46.4903, -37.1691, -13.2947, 0.56 ) }
    dend_4 { pt3dadd( -47.8474, -38.4997, -13.7524, 0.83 ) }
    dend_4 { pt3dadd( -49.0806, -39.7165, -14.0353, 0.56 ) }
    dend_4 { pt3dadd( -51.1276, -41.7754, -14.2088, 0.56 ) }
    dend_4 { pt3dadd( -53.0268, -43.9774, -14.2361, 0.56 ) }
    dend_4 { pt3dadd( -54.0415, -45.2503, -14.1836, 0.56 ) }
    dend_4 { pt3dadd( -54.7048, -46.242, -14.2003, 0.56 ) }
    dend_4 { pt3dadd( -55.6633, -47.9062, -14.3761, 0.56 ) }
    dend_4 { pt3dadd( -56.8278, -50.2368, -14.7714, 1.39 ) }
    dend_4 { pt3dadd( -58.0004, -52.7392, -15.3831, 0.56 ) }
    dend_4 { pt3dadd( -59.3352, -55.5867, -16.3033, 0.56 ) }
    dend_4 { pt3dadd( -60.8413, -59.0523, -17.8608, 0.83 ) }
    dend_4 { pt3dadd( -61.6867, -61.2988, -19.0731, 0.56 ) }
    dend_4 { pt3dadd( -62.3161, -63.1712, -20.3022, 1.11 ) }
    dend_4 { pt3dadd( -63.15, -65.3656, -22.0273, 0.56 ) }
    dend_4 { pt3dadd( -63.9061, -67.1095, -23.4898, 0.83 ) }
    dend_4 { pt3dadd( -65.2072, -69.6539, -25.7242, 0.28 ) }
    dend_4 { pt3dadd( -66.1166, -71.1166, -26.934, 0.28 ) }
    dend_4 { pt3dadd( -67.3708, -72.9702, -28.4116, 0.83 ) }
    dend_4 { pt3dadd( -69.3079, -75.7054, -30.6099, 0.28 ) }
    dend_4 { pt3dadd( -70.3971, -77.2769, -31.8184, 1.11 ) }
    dend_4 { pt3dadd( -71.576, -79.0248, -33.045, 0.28 ) }
    dend_4 { pt3dadd( -71.8738, -79.4355, -33.2953, 0.83 ) }
    dend_4 { pt3dadd( -73.4613, -81.449, -34.5612, 0.28 ) }
    dend_4 { pt3dadd( -74.1322, -82.2929, -35.0647, 0.83 ) }
    dend_4 { pt3dadd( -76.0316, -84.7356, -36.5183, 0.28 ) }
    dend_4 { pt3dadd( -77.3123, -86.3602, -37.4711, 0.83 ) }
    dend_4 { pt3dadd( -78.7197, -88.1587, -38.4551, 0.28 ) }
    dend_4 { pt3dadd( -80.7114, -90.7498, -39.7953, 0.56 ) }
    dend_4 { pt3dadd( -81.6455, -91.9597, -40.3751, 1.67 ) }
    dend_4 { pt3dadd( -83.4052, -94.3547, -41.4743, 0.28 ) }
    dend_4 { pt3dadd( -84.436, -95.9245, -42.1646, 0.28 ) }
    dend_4 { pt3dadd( -84.843, -96.6275, -42.486, 0.56 ) }
    dend_4 { pt3dadd( -85.9111, -98.8533, -43.4685, 0.28 ) }
    dend_4 { pt3dadd( -86.2179, -99.638, -43.8085, 0.56 ) }
    dend_4 { pt3dadd( -86.6836, -100.897, -44.4028, 0.28 ) }
    dend_4 { pt3dadd( -87.3889, -103.029, -45.4346, 1.39 ) }
    dend_4 { pt3dadd( -88.1682, -105.612, -46.7757, 0.28 ) }
    dend_4 { pt3dadd( -88.405, -106.382, -47.1966, 0.56 ) }
    dend_4 { pt3dadd( -88.7642, -107.563, -47.876, 0.28 ) }
    dend_4 { pt3dadd( -89.1783, -108.848, -48.624, 0.28 ) }
    dend_4 { pt3dadd( -89.7418, -110.377, -49.2668, 0.28 ) }
    dend_4 { pt3dadd( -90.1243, -111.317, -49.3778, 1.11 ) }
    dend_4 { pt3dadd( -90.9993, -113.151, -49.1828, 0.28 ) }
    dend_4 { pt3dadd( -90.9993, -113.151, -49.1828, 0.56 ) }
    dend_4 { pt3dadd( -92.1754, -115.185, -48.523, 0.28 ) }
    dend_4 { pt3dadd( -94.0527, -118.336, -47.2865, 0.83 ) }
    dend_4 { pt3dadd( -95.5987, -120.706, -46.3594, 0.28 ) }
    dend_4 { pt3dadd( -96.2128, -121.619, -46.0114, 0.56 ) }
    dend_4 { pt3dadd( -98.2458, -124.703, -44.8931, 0.28 ) }
    dend_4 { pt3dadd( -99.1532, -126.066, -44.4958, 1.11 ) }
    dend_4 { pt3dadd( -100.817, -128.552, -44.0609, 0.28 ) }
    dend_4 { pt3dadd( -102.145, -130.543, -44.0333, 1.11 ) }
    dend_4 { pt3dadd( -103.725, -133.057, -44.1372, 0.28 ) }
    dend_4 { pt3dadd( -104.526, -134.377, -44.2166, 0.28 ) }
    dend_4 { pt3dadd( -105.44, -135.845, -44.3618, 0.56 ) }
    dend_4 { pt3dadd( -106.802, -138.018, -44.4982, 0.28 ) }
    dend_4 { pt3dadd( -107.746, -139.485, -44.6098, 0.83 ) }
    dend_4 { pt3dadd( -109.57, -142.162, -44.651, 0.28 ) }
    dend_4 { pt3dadd( -110.099, -142.85, -44.6478, 0.56 ) }
    dend_4 { pt3dadd( -111.742, -144.853, -44.6884, 0.28 ) }
    dend_4 { pt3dadd( -113.022, -146.3, -44.719, 1.11 ) }
    dend_4 { pt3dadd( -115.113, -148.367, -45.0014, 0.28 ) }
    dend_4 { pt3dadd( -116.02, -149.123, -45.31, 0.28 ) }
    dend_4 { pt3dadd( -117.322, -150.092, -45.8698, 0.56 ) }
    dend_4 { pt3dadd( -119.703, -151.895, -47.0933, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_4 { pt3dadd( -121.408, -153.194, -48.0673, 0.56 ) }
    dend_4 { pt3dadd( -123.355, -154.791, -49.2918, 1.39 ) }
    dend_4 { pt3dadd( -126.812, -157.914, -51.4823, 0.28 ) }
    dend_4 { pt3dadd( -127.785, -158.927, -52.1926, 0.56 ) }
    dend_4 { pt3dadd( -129.114, -160.467, -53.2499, 0.28 ) }
    dend_4 { pt3dadd( -129.661, -161.228, -53.7293, 0.56 ) }
    dend_4 { pt3dadd( -130.635, -163.013, -54.755, 0.28 ) }
    dend_4 { pt3dadd( -131.046, -163.972, -55.2431, 0.83 ) }
    dend_4 { pt3dadd( -131.901, -166.443, -56.3915, 0.28 ) }
    dend_4 { pt3dadd( -132.151, -167.129, -56.7511, 0.83 ) }
    dend_4 { pt3dadd( -133.251, -169.71, -58.276, 0.28 ) }
    dend_4 { pt3dadd( -134.157, -171.628, -59.5609, 0.56 ) }
    dend_4 { pt3dadd( -135.302, -173.826, -61.1404, 0.28 ) }
    dend_4 { pt3dadd( -135.673, -174.498, -61.6407, 0.83 ) }
    dend_4 { pt3dadd( -138.227, -178.957, -64.945, 0.28 ) }
    dend_4 { pt3dadd( -139.282, -180.78, -66.3198, 1.94 ) }
    dend_4 { pt3dadd( -141.005, -183.604, -68.4846, 0.28 ) }
    dend_4 { pt3dadd( -141.288, -184.061, -68.8462, 0.56 ) }
    dend_4 { pt3dadd( -142.349, -185.813, -70.022, 0.28 ) }
    dend_4 { pt3dadd( -142.657, -186.338, -70.2247, 0.56 ) }
    dend_4 { pt3dadd( -143.287, -187.494, -70.189, 0.28 ) }
    dend_4 { pt3dadd( -143.664, -188.252, -70.018, 0.56 ) }
    dend_4 { pt3dadd( -144.56, -190.099, -69.4174, 0.28 ) }
    dend_4 { pt3dadd( -146.669, -194.284, -68.0104, 1.39 ) }
    dend_4 { pt3dadd( -148.963, -198.663, -66.6032, 0.28 ) }
    dend_4 { pt3dadd( -150.222, -200.999, -65.9926, 0.83 ) }
    dend_4 { pt3dadd( -151.379, -203.052, -65.5303, 0.28 ) }
    dend_4 { pt3dadd( -152.103, -204.286, -65.3599, 0.83 ) }
    dend_4 { pt3dadd( -154.309, -207.973, -65.1902, 0.28 ) }
    dend_4 { pt3dadd( -155.241, -209.494, -65.3581, 1.11 ) }
    dend_4 { pt3dadd( -157.301, -212.842, -66.16, 0.28 ) }
    dend_4 { pt3dadd( -157.761, -213.598, -66.3741, 0.56 ) }
    dend_4 { pt3dadd( -159.779, -216.728, -67.5408, 0.28 ) }
    dend_4 { pt3dadd( -160.865, -218.333, -68.2262, 0.28 ) }
    dend_4 { pt3dadd( -161.469, -219.016, -68.6507, 1.11 ) }
    dend_4 { pt3dadd( -164.121, -221.568, -70.4452, 0.28 ) }
    dend_4 { pt3dadd( -165.848, -222.927, -71.7002, 0.56 ) }
    dend_4 { pt3dadd( -168.35, -224.665, -73.4788, 0.28 ) }
    dend_4 { pt3dadd( -169.442, -225.307, -74.2107, 1.11 ) }
    dend_4 { pt3dadd( -177.081, -229.276, -79.1854, 0.28 ) }
    dend_4 { pt3dadd( -177.74, -229.584, -79.5886, 0.83 ) }
    dend_4 { pt3dadd( -181.411, -231.157, -81.8645, 0.28 ) }
    dend_4 { pt3dadd( -183.313, -231.936, -83.1083, 0.56 ) }
    dend_4 { pt3dadd( -184.064, -232.241, -83.5821, 0.56 ) }
    dend_4 { pt3dadd( -186.252, -233.066, -84.968, 0.56 ) }
    dend_4 { pt3dadd( -188.301, -233.695, -85.9953, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 46/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -28.7877, -23.7452, -10.368, 0.83 ) }
    dend_3 { pt3dadd( -28.87, -26.1399, -9.02447, 0.83 ) }
    dend_3 { pt3dadd( -28.7492, -28.8471, -7.96775, 0.83 ) }
    dend_3 { pt3dadd( -28.803, -30.8751, -7.28284, 0.56 ) }
    dend_3 { pt3dadd( -29.1124, -34.2603, -6.24459, 0.83 ) }
    dend_3 { pt3dadd( -29.425, -36.1703, -5.69446, 0.56 ) }
    dend_3 { pt3dadd( -29.8615, -38.2715, -5.11156, 0.56 ) }
    dend_3 { pt3dadd( -31.444, -44.134, -3.60548, 0.83 ) }
    dend_3 { pt3dadd( -32.0576, -46.3777, -3.02592, 1.11 ) }
    dend_3 { pt3dadd( -32.4553, -48.2836, -2.54349, 0.83 ) }
    dend_3 { pt3dadd( -32.7006, -50.2048, -2.03226, 0.83 ) }
    dend_3 { pt3dadd( -32.8283, -51.3104, -1.72853, 0.83 ) }
    dend_3 { pt3dadd( -33.2229, -54.5521, -0.915367, 0.83 ) }
    dend_3 { pt3dadd( -33.6685, -57.5353, -0.124966, 0.83 ) }
    dend_3 { pt3dadd( -33.9064, -59.0865, 0.282702, 0.56 ) }
    dend_3 { pt3dadd( -34.3719, -61.1044, 0.76914, 0.56 ) }
    dend_3 { pt3dadd( -34.7693, -62.3995, 1.07586, 0.56 ) }
    dend_3 { pt3dadd( -35.6102, -64.586, 1.54528, 0.83 ) }
    dend_3 { pt3dadd( -36.6706, -66.8944, 1.96577, 0.56 ) }
    dend_3 { pt3dadd( -37.7463, -69.1803, 2.61678, 0.83 ) }
    dend_3 { pt3dadd( -38.6997, -71.4651, 3.51735, 0.56 ) }
    dend_3 { pt3dadd( -39.2504, -73.031, 4.1941, 0.56 ) }
    dend_3 { pt3dadd( -39.8783, -75.2688, 5.15537, 0.28 ) }
    dend_3 { pt3dadd( -40.1607, -76.5211, 5.71419, 0.83 ) }
    dend_3 { pt3dadd( -40.8128, -80.6461, 7.47384, 0.28 ) }
    dend_3 { pt3dadd( -40.9899, -82.0578, 8.02989, 0.56 ) }
    dend_3 { pt3dadd( -41.2143, -84.3486, 8.94603, 0.28 ) }
    dend_3 { pt3dadd( -41.6515, -88.0256, 10.3497, 0.83 ) }
    dend_3 { pt3dadd( -42.0431, -90.3542, 11.2094, 0.56 ) }
    dend_3 { pt3dadd( -42.5005, -93.0722, 12.1258, 1.11 ) }
    dend_3 { pt3dadd( -42.7192, -94.9524, 12.6489, 0.56 ) }
    dend_3 { pt3dadd( -42.8951, -97.8181, 13.4428, 0.56 ) }
    dend_3 { pt3dadd( -42.8994, -98.6686, 13.7076, 0.56 ) }
    dend_3 { pt3dadd( -42.8739, -101.099, 14.5298, 0.83 ) }
    dend_3 { pt3dadd( -42.8928, -103.026, 15.2457, 0.28 ) }
    dend_3 { pt3dadd( -42.9434, -105.02, 16.1232, 0.83 ) }
    dend_3 { pt3dadd( -43.1033, -106.524, 16.8521, 0.28 ) }
    dend_3 { pt3dadd( -43.2938, -107.438, 17.2384, 0.56 ) }
    dend_3 { pt3dadd( -43.9681, -110.53, 18.3841, 0.83 ) }
    dend_3 { pt3dadd( -44.5468, -112.983, 19.0981, 0.28 ) }
    dend_3 { pt3dadd( -44.9555, -114.313, 19.3995, 0.56 ) }
    dend_3 { pt3dadd( -45.953, -117.304, 19.9067, 0.83 ) }
    dend_3 { pt3dadd( -46.9266, -120.451, 20.2262, 0.28 ) }
    dend_3 { pt3dadd( -47.72, -123.803, 20.1291, 0.83 ) }
    dend_3 { pt3dadd( -48.0844, -125.826, 19.7666, 0.28 ) }
    dend_3 { pt3dadd( -48.2079, -126.926, 19.4671, 0.28 ) }
    dend_3 { pt3dadd( -48.2373, -128.07, 19.1462, 0.28 ) }
    dend_3 { pt3dadd( -48.1968, -129.186, 18.887, 1.11 ) }
    dend_3 { pt3dadd( -48.0579, -132.517, 18.5184, 0.28 ) }
    dend_3 { pt3dadd( -48.0535, -133.148, 18.4909, 0.56 ) }
    dend_3 { pt3dadd( -48.1649, -135.0, 18.4735, 0.56 ) }
    dend_3 { pt3dadd( -48.3503, -137.904, 18.4545, 0.28 ) }
    dend_3 { pt3dadd( -48.5445, -140.758, 18.4641, 0.56 ) }
    dend_3 { pt3dadd( -48.7374, -142.997, 18.5946, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( -48.9707, -144.91, 18.8296, 0.56 ) }
    dend_3 { pt3dadd( -49.4277, -148.305, 19.2937, 0.28 ) }
    dend_3 { pt3dadd( -49.6923, -150.207, 19.576, 1.11 ) }
    dend_3 { pt3dadd( -49.8271, -151.786, 19.9155, 0.83 ) }
    dend_3 { pt3dadd( -49.8422, -154.22, 20.6572, 0.28 ) }
    dend_3 { pt3dadd( -49.823, -155.028, 21.0106, 0.56 ) }
    dend_3 { pt3dadd( -49.8044, -156.239, 21.7801, 0.28 ) }
    dend_3 { pt3dadd( -49.8475, -157.627, 22.9243, 0.28 ) }
    dend_3 { pt3dadd( -50.0175, -160.157, 25.1373, 0.28 ) }
    dend_3 { pt3dadd( -50.0813, -160.922, 25.8141, 0.83 ) }
    dend_3 { pt3dadd( -50.0993, -162.25, 26.9675, 0.28 ) }
    dend_3 { pt3dadd( -50.0459, -164.186, 28.6538, 0.83 ) }
    dend_3 { pt3dadd( -50.0178, -165.787, 30.0149, 0.28 ) }
    dend_3 { pt3dadd( -50.0321, -167.197, 31.1111, 0.28 ) }
    dend_3 { pt3dadd( -49.9689, -169.218, 32.5057, 1.39 ) }
    dend_3 { pt3dadd( -49.7543, -171.95, 34.0568, 0.28 ) }
    dend_3 { pt3dadd( -49.6935, -172.868, 34.4495, 0.28 ) }
    dend_3 { pt3dadd( -49.635, -174.561, 34.9864, 0.56 ) }
    dend_3 { pt3dadd( -49.6612, -176.45, 35.4533, 0.83 ) }
    dend_3 { pt3dadd( -49.9539, -179.217, 36.1202, 0.28 ) }
    dend_3 { pt3dadd( -50.2583, -181.189, 36.5512, 0.56 ) }
    dend_3 { pt3dadd( -50.7831, -183.474, 36.9996, 0.56 ) }
    dend_3 { pt3dadd( -51.291, -185.242, 37.3663, 0.28 ) }
    dend_3 { pt3dadd( -51.8223, -186.853, 37.6247, 1.39 ) }
    dend_3 { pt3dadd( -52.6523, -189.028, 37.8755, 0.28 ) }
    dend_3 { pt3dadd( -52.9712, -189.791, 37.8975, 0.56 ) }
    dend_3 { pt3dadd( -53.6891, -191.636, 37.9029, 0.28 ) }
    dend_3 { pt3dadd( -54.0611, -192.969, 37.8881, 0.56 ) }
    dend_3 { pt3dadd( -54.6422, -195.527, 37.8575, 0.28 ) }
    dend_3 { pt3dadd( -54.7514, -196.08, 37.8538, 0.83 ) }
    dend_3 { pt3dadd( -54.9888, -197.862, 37.9408, 0.28 ) }
    dend_3 { pt3dadd( -55.178, -199.787, 38.1909, 0.83 ) }
    dend_3 { pt3dadd( -55.3111, -202.766, 38.8186, 0.56 ) }
    dend_3 { pt3dadd( -55.3224, -204.926, 39.4082, 0.28 ) }
    dend_3 { pt3dadd( -55.3242, -206.023, 39.7694, 1.11 ) }
    dend_3 { pt3dadd( -55.5803, -208.998, 40.8305, 0.28 ) }
    dend_3 { pt3dadd( -55.7413, -210.032, 41.2282, 0.83 ) }
    dend_3 { pt3dadd( -56.1327, -212.157, 42.0233, 0.28 ) }
    dend_3 { pt3dadd( -56.7155, -214.744, 42.8925, 0.28 ) }
    dend_3 { pt3dadd( -56.9309, -215.664, 43.2047, 0.56 ) }
    dend_3 { pt3dadd( -58.1566, -219.767, 44.5392, 0.28 ) }
    dend_3 { pt3dadd( -58.3163, -220.121, 44.6369, 0.56 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 42/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -149.838, -309.937, 90.6254, 0.28 ) }
    apic_10 { pt3dadd( -147.146, -312.632, 90.4141, 0.28 ) }
    apic_10 { pt3dadd( -146.7, -313.078, 90.3792, 0.56 ) }
    apic_10 { pt3dadd( -145.368, -314.412, 90.2746, 0.28 ) }
    apic_10 { pt3dadd( -145.052, -314.728, 90.2499, 0.56 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 47/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -149.838, -309.937, 90.6254, 0.56 ) }
    apic_7 { pt3dadd( -151.714, -312.289, 91.2128, 0.56 ) }
    apic_7 { pt3dadd( -152.495, -313.211, 91.4605, 0.56 ) }
    apic_7 { pt3dadd( -153.363, -314.172, 91.7399, 0.56 ) }
    apic_7 { pt3dadd( -154.547, -315.443, 91.983, 0.56 ) }
    apic_7 { pt3dadd( -155.826, -316.84, 92.1637, 0.28 ) }
    apic_7 { pt3dadd( -157.546, -318.727, 92.3234, 0.56 ) }
    apic_7 { pt3dadd( -158.502, -319.758, 92.3004, 0.28 ) }
    apic_7 { pt3dadd( -159.169, -320.529, 92.2243, 0.83 ) }
    apic_7 { pt3dadd( -160.849, -322.777, 91.9375, 0.56 ) }
    apic_7 { pt3dadd( -162.066, -324.624, 91.5717, 0.56 ) }
    apic_7 { pt3dadd( -162.457, -325.462, 91.3527, 0.28 ) }
    apic_7 { pt3dadd( -163.067, -327.248, 90.7155, 0.28 ) }
    apic_7 { pt3dadd( -163.431, -328.56, 90.1857, 0.56 ) }
    apic_7 { pt3dadd( -163.762, -330.354, 89.4194, 1.39 ) }
    apic_7 { pt3dadd( -163.921, -332.362, 88.4725, 0.56 ) }
    apic_7 { pt3dadd( -164.058, -334.657, 87.2837, 0.56 ) }
    apic_7 { pt3dadd( -164.103, -336.524, 86.3048, 0.28 ) }
    apic_7 { pt3dadd( -164.105, -337.361, 85.8684, 0.28 ) }
    apic_7 { pt3dadd( -164.037, -338.109, 85.5126, 0.83 ) }
    apic_7 { pt3dadd( -163.771, -339.802, 84.8253, 0.28 ) }
    apic_7 { pt3dadd( -163.338, -341.967, 84.2377, 0.28 ) }
    apic_7 { pt3dadd( -163.0, -343.55, 83.9446, 0.28 ) }
    apic_7 { pt3dadd( -162.706, -344.734, 83.8066, 1.11 ) }
    apic_7 { pt3dadd( -162.12, -347.302, 83.5742, 0.28 ) }
    apic_7 { pt3dadd( -161.926, -348.504, 83.4956, 0.83 ) }
    apic_7 { pt3dadd( -161.815, -349.491, 83.4613, 0.28 ) }
    apic_7 { pt3dadd( -161.619, -351.117, 83.3805, 0.28 ) }
    apic_7 { pt3dadd( -161.556, -352.473, 83.3159, 0.28 ) }
    apic_7 { pt3dadd( -161.569, -353.416, 83.242, 2.22 ) }
    apic_7 { pt3dadd( -161.853, -355.991, 82.8402, 0.28 ) }
    apic_7 { pt3dadd( -161.938, -356.487, 82.7734, 0.56 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 79/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -161.938, -356.487, 82.7734, 0.28 ) }
    apic_9 { pt3dadd( -162.282, -359.465, 81.7988, 0.28 ) }
    apic_9 { pt3dadd( -162.392, -360.415, 81.4881, 0.56 ) }
    apic_9 { pt3dadd( -162.693, -363.025, 80.6338, 0.28 ) }
    apic_9 { pt3dadd( -162.736, -363.393, 80.5133, 0.56 ) }
    apic_9 { pt3dadd( -163.09, -366.459, 79.5099, 0.28 ) }
    apic_9 { pt3dadd( -163.158, -367.053, 79.3155, 0.56 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 86/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -161.938, -356.487, 82.7734, 0.28 ) }
    apic_8 { pt3dadd( -163.619, -357.987, 83.3947, 0.28 ) }
    apic_8 { pt3dadd( -164.319, -358.565, 83.5906, 0.56 ) }
    apic_8 { pt3dadd( -166.129, -359.958, 84.209, 0.28 ) }
    apic_8 { pt3dadd( -167.128, -360.736, 84.5711, 0.56 ) }
    apic_8 { pt3dadd( -168.63, -361.907, 85.0351, 0.28 ) }
    apic_8 { pt3dadd( -170.284, -363.595, 85.5303, 0.28 ) }
    apic_8 { pt3dadd( -171.589, -365.239, 85.9316, 1.11 ) }
    apic_8 { pt3dadd( -173.43, -368.158, 86.36, 0.28 ) }
    apic_8 { pt3dadd( -173.82, -368.928, 86.4186, 0.28 ) }
    apic_8 { pt3dadd( -174.597, -370.689, 86.4937, 0.83 ) }
    apic_8 { pt3dadd( -176.424, -376.011, 86.4742, 0.28 ) }
    apic_8 { pt3dadd( -176.563, -376.634, 86.4287, 0.56 ) }
    apic_8 { pt3dadd( -177.064, -380.459, 86.0723, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_8 { pt3dadd( -177.145, -381.467, 85.9246, 0.56 ) }
    apic_8 { pt3dadd( -177.252, -382.921, 85.7279, 0.56 ) }
    apic_8 { pt3dadd( -177.385, -385.148, 85.4879, 0.28 ) }
    apic_8 { pt3dadd( -177.719, -387.95, 84.9337, 0.28 ) }
    apic_8 { pt3dadd( -177.73, -388.518, 84.8073, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, axon_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, axon_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_5 = new SectionList()
    apic_0 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    apic_12 ModelViewParmSubset_5.append()
    apic_1 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    apic_14 ModelViewParmSubset_5.append()
    apic_13 ModelViewParmSubset_5.append()
    apic_5 ModelViewParmSubset_5.append()
    apic_2 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    apic_11 ModelViewParmSubset_5.append()
    apic_6 ModelViewParmSubset_5.append()
    apic_4 ModelViewParmSubset_5.append()
    apic_3 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    apic_10 ModelViewParmSubset_5.append()
    apic_7 ModelViewParmSubset_5.append()
    apic_9 ModelViewParmSubset_5.append()
    apic_8 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_18 = new SectionList()
    apic_13 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_5 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_26 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_25 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_19 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_12 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_8 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_4 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_17 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_10 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_12, apic_12, apic_12, apic_1, apic_1, apic_1, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_9 nseg = 7
    dend_27 nseg = 5
    dend_18 nseg = 3
    apic_14 nseg = 15
    apic_13 nseg = 11
    apic_5 nseg = 15
    dend_26 nseg = 5
    dend_25 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_15 nseg = 7
    dend_12 nseg = 7
    dend_5 nseg = 5
    apic_3 nseg = 13
    dend_22 nseg = 5
    dend_21 nseg = 3
    dend_14 nseg = 7
    dend_13 nseg = 3
    dend_4 nseg = 15
    dend_3 nseg = 11
    apic_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_LBC_d5fa8128ae_0_0


